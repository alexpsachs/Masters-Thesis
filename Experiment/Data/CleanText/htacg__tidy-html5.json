{
    "sideshowbarker": "Fixed now.\nSee also https://github.com/w3c/tidy-html5/commit/33ba8038fdf53dbb8fbf9cc57164ed92ef45ece7\n. Whatever problem you were seeing, it should be fixed now. And there's a new \"--doctype html5\" option that will force Tidy to always output <!doctype html> regardless of what the input is.\n. What DOM said. :) Please make a pull request if you have a makefile to contribute.\nAnd yeah, I don't get automated notifications of new issues for this account and I can't figure out how to tell github to send them to me (no config option that I can find). So I guess I'll need to check here periodically.\n. Closing this out as there's not be any new comment for 2 months now. If you do put together a makefile please do make a pull request.\n. I'm sure it would be possible, and I will check into it when I can. In the mean time, a patch would of course be welcome.\n. This is expected behavior because  is an empty element. It's not allowed to have an end tag.\nAlso you example is invalid because you can't have both the src attribute on video and also a source child. Need to be one or other but not both.\n. I'm not keen on changing this. This has always been the tidy behavior and it is not something new that got introduced in this  fork. I think it's intended behavior with some rationale behind it, though I don't know what. Somebody should research it. \n. Not finding any stated reasoning for it doesn't mean there is none. If it were a clear and simple thing to make a change for I expect it would've been changed long ago. Anyway, it's up to you if you want to put time into writing a patch. If you do it will need to be tested to make sure it doesn't regress anything, introduce new bugs.\n. Closing this out as there's not be an action on it. I don't plan on making any change for this myself. If somebody else does, feel free to re-open this and/or make a pull request.\n. If you serve your example as text/html, you should use the -ashtml option to have it output as real HTML instead of XHTML.\nAs far as I understand what you reported is expected behavior because you have an XHTML doctype, so tidy thinks you actually want it handled as XHTML, not HTML. So tidy outputs the right thing for XHTML, which is to wrap the script contents in CDATA to allow for if the JS contains and < and & characters and you serve the document as application/xhtml+xml so that when browsers use their XML parsers to parse it they don't choke on the < and & characters.\nI think changing the current behavior for XHTML output to having those CDATA delimiters not output (or commented out) is not what most users would want.\nMaybe we can add a -aspolyglot option for the case where you want to author your content as XHTML but serve it as text/html. For that case, the current XHTML output codepath would be followed but parts of it like the CDATA thing would need to have an additional condition to check for the polyglot option.\n. OK I created a gh-pages branch. I just used the default automatic-creator thing, so feel free to just clobber that default index file with whatever you want to have show up there instead. \n. http://w3c.github.com/tidy-html5/ is live now. Thanks\nThere's a link to the quickref already but if you want to link to it somewhere else on the page that'd be fine too.\nAdding links to the tarball and zip would be good.\nI have updated the readme.\n. The tar and zip download icons are really just too big and ugly. I'm not sure how useful they really are to people anyway, but I'll try to think of some way to add them that's less obtrusive.\nI'm also not sure we really need the \"fork me on github\" band here. Given the fact the first sentence of the page is a link to github, the banner's just sort of window dressing.\n. Closing this out. For any further changes needed to the Web page, please just open new issues.\n. Yeah I guess I will try to add this.\n. This actually isn't caused by the empty-element-dropping part of the code. It's caused by another part of the code that merges nested markup. So if you do this:\n<b class=\"rtop-2\">foo<b class=\"r2-2\">bar</b>baz<b class=\"r3-2\">foo</b>bar<b class=\"r4-2\">baz</b>foo</b>\nYou get this:\n<b class=\"rtop-2\">foobarbazfoobarbazfoo</b>\nThere is no option for preventing tidy from doing that, but I'll see if I can add one.\n. https://github.com/w3c/tidy-html5/commit/1052c2b\nAdded two new options, \"merge-emphasis\" and \"coerce-endtags\":\nhttp://w3c.github.com/tidy-html5/quickref.html#merge-emphasis\nhttp://w3c.github.com/tidy-html5/quickref.html#coerce-endtags\nBoth are set to \"yes\" by default, to preserve the existing behavior.\nTo prevent Tidy from messing with most nested markup altogether, set both to \"no\".\n. I cherry-picked the change and pushed it to the w3c/tidy-html5.\nI would like to add testcases too but this whole thing's experimental at this point. It somebody feels really strongly that we shouldn't be making code changes without adding test cases, there's nothing stopping anybody from volunteering to go through the changelog and write up tests.\n. See https://github.com/w3c/tidy-html5/commit/a3d49a71434d84ed882b164c178fe2878f246fd8#commitcomment-1143626\nI need to back out the change.\nThe markup fix for this is to put the  element inside something other than   or  or whatever.\n. Note that you will see this same behavior with <ins> and <del> also, if you do <body><ins>one</ins> two</body>.\nIt's a consequence of the fact that in HTML5, the <a> element, like the <ins> and <del> can contain block content, but it can also still be used inline. But that doesn't fit well with the model that Tidy uses for whitespace handling.\nWe'll have to figure out a better fix for this later, but for the time being, the workaround is to not have the <a> element as a child of the <body> element.\n. The root cause of this is in the part of the parser code that parses the contents of the body element:\nhttps://github.com/w3c/tidy-html5/blob/master/src/parser.c#L3291\n. So the specific cause for this is at line 3528 of parser.c:\nhttps://github.com/w3c/tidy-html5/blob/master/src/parser.c#L3528\nif ( TY_(nodeHasCM)(node, CM_INLINE) && !TY_(nodeHasCM)(node, CM_MIXED) )\nRemoving the && !TY_(nodeHasCM)(node, CM_MIXED) from that statement will cause the whitespace for this case to be preserved.\nI don't really understand why that condition is there, but it seems it might relate to the comment just after it:\n/* HTML4 strict doesn't allow inline content here */\n/* but HTML2 does allow img elements as children of body */\n...which is true: in HTML4 strict, <body><a> is invalid. But I don't see what that has to do with how the whitespace is handled.\nI could try removing the && !TY_(nodeHasCM)(node, CM_MIXED) but I took a look at the code and I notice it's always been that way,  since r1.1 of the original Tidy sources in CVS. So I'm a bit reluctant to change it for fear of introducing regressions.\nWill need to think more about what to do for this. I guess introducing a new option might be one choice.\n. Tried a few more cases and I still really can't see what was the original intent of having the code ignore whitespace after these CM_MIXED elements. So I'm going ahead to check in this change. If this breaks anything, it will be restricted to the ins, del, a, script, and noscript elements.\n. This is expected behavior and can't be changed for backward-compatibility reasons.\nThe gist of it is, when you feed Tidy a non-well-formed XHTML document, Tidy attempts to correct it so that it is well-formed. And a lot of that correction it does silently. For example, if you omit quotes around your attribute values, tidy will silently add the quotes for you, and not emit any error or warning.\nTo get closer to what you want, specify the -xml or \"--input-xml yes\" option any time you run Tidy on a file. That will cause Tidy to be a little more strict and will at least catch things like missing end tags, and report errors for them, though it still won't catch missing quotes.\nAnyway, the bottom line is, Tidy's not really a validator or even a complete XML well-formedness checker. It's more a correcter, with the error-reporting being secondary to that.\n. Try \"tidy --hide-endtags yes\". Despite the name, I think it causes all optional tags to be omitted, including start tags.\n. Added http://w3c.github.com/tidy-html5/quickref.html#omit-optional-tags and rewrote http://w3c.github.com/tidy-html5/quickref.html#hide-endtags to read, \"This option is an alias for omit-optional-tags.\"\n. Yeah, I see what you mean. I've never looked at the indenting code myself. Maybe somebody else will take an interest in it later. It seems to have a lot of quirks like the one you noticed.\n. As far as I understand it, no, it's not possible with the current code:\nhttp://w3c.github.com/tidy-html5/#preserve-indenting\n\"Tidy starts by building a clean parse tree from the input, and that parse tree doesn\u2019t contain any information about the original indenting. Tidy then pretty-prints the parse tree using the current config settings. Trying to preserve the original indenting from the input would interact badly with the repair operations needed to build a clean parse tree, and would considerably complicate the code.\"\n. The thing of ",
    "claviska": "Hmm, this might be a settings issue on my part. I'll take another look and report back if this is still an issue.\n. Thanks for the quick reply. Given that info, it makes more sense. However, it's not evident from the docs that drop-font-tags would trigger this behavior.\nFrom a user's perspective, I was trying to identify what was causing these conversions to happen and narrowed it down to drop-font-tags. Given its description in the docs, I assumed it was likely a bug. (I scoured the rest of the options to verify I wasn't missing anything.)\nPerhaps a more intuitive name would help, or a bit more detail in the docs as to what drop-font-tags actually does.\nI'll leave this open for consideration and additional thoughts\u2014but if you think it's a non-issue you're more than welcome to simply close it :)\n. The proposed changes make the behavior much more clear, and perhaps deprecating drop-font-tags is the right move since its far more destructive than I realized.\nDidn't mean to open up a can of worms here, but glad it helped to make these options more clear for users :)\n. ",
    "pierrejoye": "Anyone actually reading the issues?\n. ",
    "dontcallmedom": "Hi Pierre, not sure if Mike is getting notifications for the issue \u2014 I sure hadn't (thanks for the Twitter ping).\nI see no reason why we wouldn't accept a Makefile for Visual C++, so a pull request would be very welcome :)\n. From what I can see, it only makes tidy leaves HTML5 documents alone (incl not removing html5 elements), it doesn't add any new config option.\n. I'll close the issue, but feel free to open a new issue on HTML5 validation. To be honest, I'm not sure we have resources to bring that to tidy, but documenting the idea sounds like a good first step :)\n. I think that because  is a \u201ctransparent\u201d element (i.e. can be used as a phrase/inline element), it would not follow the logic of tidy to insert line returns for its content. \n. ",
    "NoodlesNZ": "Yea, that's what I thought. I would be great to see it convert things like border=\"0\" to style=\"border:0\" etc to ensure html validation with HTML5.\n. ",
    "stevenle": "Thank you!!!\n. I was thinking that even though the markup isn't valid, tidy would automatically try to fix it for the user. The warning messages (\"Warning: replacing unexpected source by </source>\" and \"line 10 column 44 - Warning: discarding unexpected </source>\"), seems to indicate it's trying but failing.\nEven when I use the example from w3schools but insert invalid closing  tags, this behavior appears:\nhtml\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Video</title>\n  </head>\n  <body>\n  <video width=\"320\" height=\"240\" controls=\"controls\">\n  <source src=\"movie.mp4\" type=\"video/mp4\"></source>\n  <source src=\"movie.ogg\" type=\"video/ogg\"></source>\n  Your browser does not support the video tag.\n</video>\n  </body>\n</html>\nGets tided to:\nhtml\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 (experimental) for Linux https://github.com/w3c/tidy-html5/tree/f2825b9\">\n<meta charset=\"utf-8\">\n<title>Video</title>\n</head>\n<body>\n<video width=\"320\" height=\"240\" controls=\"controls\"><source src=\n\"movie.mp4\" type=\"video/mp4\"></video> <source src=\"movie.ogg\" type=\n\"video/ogg\"> Your browser does not support the video tag.\n</body>\n</html>\n. Sorry, this commit looks bigger than it is because I have a vim macro that removes any trailing whitespace in my code. The main change is that I removed this line:\nTY_(WbrToSpace)(doc, &doc->root);\n. Sorry I had an auto script that I forgot to turn off. Do you want me to resubmit this pull request with the whitespaces left in?\n. Whitespace issues aside, are there any issues with the attr I'm adding?\n. @craigbarnes Any idea what needs to change to get it to work for elements other than <div>? I think I had copied the settings from a different boolean attribute but I can't remember which one.\n. ",
    "user-none": "diff -aur w3c-tidy-html5-f6a3bbe_orig/src/localize.c w3c-tidy-html5-f6a3bbe/src/localize.c\n--- w3c-tidy-html5-f6a3bbe_orig/src/localize.c  2012-02-24 04:31:22.000000000 -0500\n+++ w3c-tidy-html5-f6a3bbe/src/localize.c   2012-02-26 11:42:34.000000000 -0500\n@@ -1373,14 +1373,14 @@\n {\n     ctmbstr fmt = GetFormatFromCode(code);\n     doc->badAccess |= BA_WAI;\n-    messageNode( doc, TidyAccess, node, fmt );\n-    messageNode( doc, TidyAccess, node, \"%s\", fmt );\n  }\nvoid TY_(ReportAccessError)( TidyDocImpl* doc, Node* node, uint code )\n  {\n     ctmbstr fmt = GetFormatFromCode(code);\n     doc->badAccess |= BA_WAI;\n-    messageNode( doc, TidyAccess, node, fmt );\n-    messageNode( doc, TidyAccess, node, \"%s\", fmt );\n  }\n#endif /* SUPPORT_ACCESSIBILITY_CHECKS */\n  @@ -1399,7 +1399,7 @@\n   switch (code)\n   {\n   case NESTED_QUOTATION:\n-        messageNode(doc, TidyWarning, rpt, fmt);\n- messageNode(doc, TidyWarning, rpt, \"%s\", fmt);\n   break;\ncase OBSOLETE_ELEMENT:\n  @@ -1480,7 +1480,7 @@\n   case INCONSISTENT_NAMESPACE:\n   case DOCTYPE_AFTER_TAGS:\n   case DTYPE_NOT_UPPER_CASE:\n-        messageNode(doc, TidyWarning, rpt, fmt);\n- messageNode(doc, TidyWarning, rpt, \"%s\", fmt);\n   break;\ncase COERCE_TO_ENDTAG:\n  @@ -1499,7 +1499,7 @@\n   case ENCODING_IO_CONFLICT:\n   case MISSING_DOCTYPE:\n   case SPACE_PRECEDING_XMLDECL:\n-        messageNode(doc, TidyWarning, node, fmt);\n- messageNode(doc, TidyWarning, node, \"%s\", fmt);\n   break;\ncase TRIM_EMPTY_ELEMENT:\n  @@ -1548,7 +1548,7 @@\n   {\n   case SUSPECTED_MISSING_QUOTE:\n   case DUPLICATE_FRAMESET:\n-        messageNode(doc, TidyError, rpt, fmt);\n- messageNode(doc, TidyError, rpt, \"%s\", fmt);\n   break;\ncase UNKNOWN_ELEMENT:\n. ",
    "daaain": "I'd rather prefer it to not wrap at all in case there's no content in the node (or rather if there is a src attribute?), makes the head contents twice as long and ugly. Will attempt a fix and send a pull request later.\n. Well it seems that it's recognised as a bug, but treated as so low priority that no one touched it since October 2008...\nOriginal email thread on the mailing list: http://lists.w3.org/Archives/Public/html-tidy/2008OctDec/0005.html\nBug in tracker: http://sourceforge.net/tracker/?func=detail&atid=390963&aid=2207646&group_id=27659\nI couldn't find any reasoning why would this be a desired effect, so maybe something which could be a nice fix (albeit admittedly cosmetic) both for this project and upstream?\n. Added pull request.\n. I have no experience in C (so please be gentle), but the changes in the pull request seem to have fixed the issue for me!\nI tried to put || !AttrHasValue(type) into the first if as that seemed like a cleaner solution, but for some reason that threw an error.\n. Can't find -ashtml option, but I presume you meant --output-html as this seems to work like that, omitting the CDATA wrapper entirely \u2013 not sure how I missed it!\nThis solves my problem so I'm closing the pull request which is the wrong solution to the wrong problem :)\n. Moving further ideas here for discussion:\n1. I'm considering linking the Quick Reference in index.html as a next step, maybe even creating some sort of navigation on the top with all the essential links \u2013 first few paragraphs of the documentation are links anyway.\n2. Maybe adding zip- / tar-ball download links and \"Fork me on Github\" banner as it was on the auto-generated page could be useful too?\n3. Oh and of course we should link to this URL in the master readme once it's up!\n. Finally got around to put these links in (sorry for the delay) and just submitted a pull request, take a look!\n. I think it's nice to have download links, sometimes people will just want to get Tidy quickly without having to clone the repo. That being said, it would make much more sense having links to compiled binaries for each platform or even an online tool (after all the compilation is a much bigger hurdle than figuring Git out), but these would be a bit more effort to set up :) Hopefully Travis or some similar platform will do C at some point, but I'm not holding my breath.\nI've added the banner as a standard thing which most Github Pages have, but you're completely right about it just repeating info in the first sentence so it should be either / or.\n. Wait a second, Travis does actually do C apparently: http://groups.google.com/group/travis-ci/browse_thread/thread/cfd24d0c68cacfef\nIt's only going to be useful for Linux builds (VMs are 32-bit Ubuntu Linux 11.04 (server edition)), but might still be useful to have a CI server with tests running. This sounds like something which should be discussed as a separate issue though...\n. Actually just realised there's a user option, but there's no indication how to use it, maybe that can do what I'm looking for?\nWould it be --doctype user \"<!DOCTYPE html>\" then?\nOr is user the use case where you can pass in a custom FPI string?\n. Hmm, an option to ignore stripping certain tags would be very welcome, I just ran into some hack today where <b> tags are used to create rounded corners with some custom CSS on a <div>, which apparently works even in older browsers. As things are, I'll have to hack these back with some custom scripting which is not ideal.\nSomething along the lines of a suppress-stripping-tags parameter could be great where you can enumerate any tags from the current set of tags which get stripped without any control if no content is present. What are these by the way? <b>, <i> and <p> for sure, but how about the rest?\n. Hey Michael,\nfirst of all thanks a lot for this fix!\nI'm testing it right now, and seems that only the first level of empty elements are preserved when they are nested (I know...).\nSo this:\n<div class=\"nifty-2\"><b class=\"rtop-2\"><b class=\"r2-2\"></b><b class=\"r3-2\"></b><b class=\"r4-2\"></b></b> \n&nbsp;<img src=\"img/icon/listicondark-back.gif\" alt=\"Back\" /> \n<span><a href=\"http://www.example.com\" class=\"mobLink\">Back</a></span>\n<b class=\"rbottom-2\"><b class=\"r4-2\"></b><b class=\"r3-2\"></b><b class=\"r2-2\"></b><b class=\"r1-2\"></b></b>\n</div>\nBecomes this (indentation edited for comparability):\n<div class=\"nifty-2\"><b class=\"rtop-2\"></b>\n&nbsp;<img src=\"img/icon/listicondark-back.gif\" alt=\"Back\">\n<span><a href=\"http://www.example.com\" class=\"mobLink\">Back</a></span>\n<b class=\"rbottom-2\"></b>\n</div>\nEdit: adding &nbsp;s doesn't seem to help either :( Am I right guessing that the parser just doesn't expect insanity like this and silently ignores these nested elements?\n<div class=\"nifty-2\"><b class=\"rtop-2\"><b class=\"r2-2\">&nbsp;</b><b class=\"r3-2\">&nbsp;</b><b class=\"r4-2\">&nbsp;</b></b> \n&nbsp;<img src=\"img/icon/listicondark-back.gif\" alt=\"Back\" /> \n<span><a href=\"http://www.example.com\" class=\"mobLink\">Back</a></span>\n<b class=\"rbottom-2\"><b class=\"r4-2\">&nbsp;</b><b class=\"r3-2\">&nbsp;</b><b class=\"r2-2\">&nbsp;</b><b class=\"r1-2\">&nbsp;</b></b>\n</div>\n<div class=\"nifty-2\">\n<b class=\"rtop-2\">&nbsp;&nbsp;&nbsp;</b>\n&nbsp;<img src=\"img/icon/listicondark-back.gif\" alt=\"Back\">\n<span><a href=\"http://www.example.com\" class=\"mobLink\">Back</a></span>\n<b class=\"rbottom-2\">&nbsp;&nbsp;&nbsp;&nbsp;</b>\n</div>\nEdit2: just found out that this is actually an old method called \"Nifty corners\" for image-less rounded corners in older browsers: http://www.html.it/articoli/nifty/index.html\n. ",
    "thieso2": "This patch fixes it:\nhttps://github.com/thieso2/tidy-html5/commit/0ef710fe90119e204f01adc6a9fc3635b5ab15cb\nIt doesn't seem to break \nhttps://github.com/w3c/tidy-html5/commit/b0997b2c48712d2548579190685b6962362189d0\nwhich introduces the regression. \nIf only I knew how to add testcases to this project I'd write a test and send a pull-request!\n. ",
    "ralfjunker": "Patch working fine.Thanks!\n. Thanks!\n. You example works fine, but the problem arises if the p element contains just a single font element without text. Then Tidy applies the font color to the paragraph. As a result, not just the text is colored but the entire paragraph.\nI have uploaded two renderings which show the difference:\nOriginal: http://www.tiikoni.com/tis/view/?id=d94aec8\nTidied: http://www.tiikoni.com/tis/view/?id=64b2827\nNote: Both images will be deleted automatically around Aug 1st 2012.\n. Thanks for looking into it!\nI believe you are right in saying the Tidy has always behaved this way. But I also believe that this behavior is an undetected corner case bug that should simply be fixed instead of adding yet another option.\nSince development of the old Tidy is stalled, why not at last fix it in HTML5 Tidy? The original Tidy bug tracker lists over 100 open bugs (http://sourceforge.net/tracker/?limit=25&func=&group_id=27659&atid=390963&status=1). IMO, we well get nowhere if we acknowledge all of them as \"features\" which should not be changed.\n. I suggest we change CanApplyBlockStyle() in clean.c like this:\nC\nstatic Bool CanApplyBlockStyle( Node *node )\n{\n    if (TY_(nodeHasCM)(node,CM_BLOCK | CM_LIST | CM_DEFLIST | CM_TABLE)\n        /* Added */ && !nodeIsDIV(node) /* Added */\n        /* Added */ && !nodeIsP(node)   /* Added */\n        && !nodeIsTABLE(node) && !nodeIsTR(node) && !nodeIsLI(node) )\n    {\n        return yes;\n    }\n    return no;\n}\n. I confirm that 606ffebd478843ee7bba73b3ea809dd60bbd4f8c fixes test 5-2-1-2 for me.\nRegarding tests 5-5-1-3 and 5-6-1-3:\nFollowing your rationale, I suggest to change the tests' results instead of removing them. Even though the results have changed over time, they still serve a (albeit different) purpose now: Test that spaces are indeed cleaned away. Ideally add a comment explaining this and a bit of history as you have above.\nIMHO, there can hardly be enough tests ...\n. Here is a minimal HTML document example:\n``` html\n Silence warnings. Doctype and title do not matter to the problem.  \n<!DOCTYPE html>\nWord 2000 Problem\n<![endif] EXTRA >\n\nContent\n```\nI run Tidy 5.2.0 on Windows without options, but GIT trunk behaves the same:\nbatch\ntidy.exe file.htm\nThis is the output I receive:\n```\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\n Silence warnings. Doctype and title do not matter to the problem.  \nhtml\n\n\n\nWord 2000 Problem\n\n\n\n\n```\n\nNotice that the <p>Content</p> block is completely removed in spite of explicitly reporting no warnings nor errors. Size or state of the content block do not matter, Tidy removes it regardless.\nThe actual problem is in lexer.c here:\nhttps://github.com/htacg/tidy-html5/blob/fd0ccb2bbf3f907e5425d5849409fbf1558197bc/src/lexer.c#L3196-L3236\nI was able to work eliminate the problem by introducing the previously mentioned new TidyParseWord2000 option. If disabled, it causes the lexer to interpret Word 2000 sequences as processing instructions instead. Note that the TidyXmlPIs option still differentiates between ?> and > as terminator. Here are my changes to lexer.c:\n``` diff\n@@ -3195,6 +3195,11 @@\n                     }\n                 }\n\nif (!cfgBool(doc, TidyParseWord2000)) {\nlexer->lexsize--;\nTY_(AddCharToLexer)(lexer, '<');\nTY_(AddCharToLexer)(lexer, '!');\nTY_(AddCharToLexer)(lexer, '[');\nTY_(AddCharToLexer)(lexer, c);\nlexer->state = LEX_CONTENT;\ncontinue;\n}\n+\n                 if (c != ']')\n                     continue;\n```\n\nChanges to include/tidyenum.h and src/config.c are obvious so excluded here for brevity.\nPS: The problem was presented to me by a customer as part of a larger document. I have no idea how it was generated. However, the document origin should not matter as such documents do (or will, eventually) exist in the wild so we should be prepared to handle them well.\n. Interesting findings. However, ParseConfigValue should return success / failure. How about the following fix:\n```c\nBool TY_(ParseConfigValue)( TidyDocImpl doc, TidyOptionId optId, ctmbstr optval )\n{\n    const TidyOptionImpl option;\n    Bool status = (\n      optId < N_TIDY_OPTIONS &&\n      (option = option_defs + optId)->parser &&\n      optval != NULL );\nif ( !status )\n    TY_(ReportBadArgument)( doc, option->name );\nelse\n{\n    TidyBuffer inbuf;            /* Set up input source */\n\n```\nNote that the TidyUnknownOption (\"unknown!') also triggers the problem - and the above fixes also solve it.. #509 works fine, but buffer declaration seems more complex than needed and unlike other tmbsnprintf() buffer uses in this library. I propose this simplification to config.c:\n```patch\n Bool TY_(ParseConfigValue)( TidyDocImpl doc, TidyOptionId optId, ctmbstr optval )\n {\n     const TidyOptionImpl option = NULL;\n-    enum { sizeBuf = 11 };\n-    char buffer[sizeBuf];\n     / #472: fail status if there is a NULL parser. @ralfjunker /\n     Bool status = ( optId < N_TIDY_OPTIONS\n                    && (option = option_defs + optId)->parser\n                    && optval != NULL );\n if ( !status )\n     if ( option )\n         TY_(ReportBadArgument)(doc, option->name);\n     else\n     {\n         /* If optId < N_TIDY_OPTIONS then option remains unassigned,\n            and we have to fall back to an ugly error message. */\n\n\nTY_(tmbsnprintf(buffer, sizeBuf, \"%u\", optId));\nTY_(ReportUnknownOption(doc, buffer));\nchar buf[11];\nTY_(tmbsnprintf(buf, sizeof(buf), \"%u\", optId));\nTY_(ReportUnknownOption(doc, buf));\n         }\n```. I can confirm that [55d287bc9d566dd0cf0cfe9633af88bca7c20d5c] fixes the leak. Many thanks!\n\nIs there a test for this fix already? I could not find any.. ",
    "towolf": "Confirming that\u2019s the case.\nWould you document this and/or change the name so this is obvious?\n. Thank you.\nOne problem with this, in combination with -i, is that the indents are odd:\n``` .html\ntowolf@ovo:~$ tidy -i -w 80 firstblush.html  | head -n 22\nline 9 column 1 - Warning: inserting implicit \n<!DOCTYPE html>\n\n\nfirstblush\n\n\n\n\n\n\n\nfirstblush\n<h2 class=\"author\">towolf</h2>\n\n<h3 class=\"date\">01. M\u00e4rz 2012</h3>\n\n\nFacilities to capture, process, analyse, modify, register, mix &\ntowolf@ovo:~$ tidy -i -omit -w 80 firstblush.html  | head -n 22\nline 9 column 1 - Warning: inserting implicit \n<!DOCTYPE html>\nfirstblush\n\n\n\n\n\nfirstblush\ntowolf\n01. M\u00e4rz 2012\n\nFacilities to capture, process, analyse, modify, register, mix &\n```\n. ",
    "bradgreens": "I follow how this works, a clean pretty-print is exactly - and only - what\nI'm hoping for.\nI want the original indenting to be reverted, and when the pretty-printing\noccurs that no config operations are performed on the code at all.\nBased on the current configuration options, it appears there is no way for\nme to prevent Tidy from pulling ",
    "skynet": "Thank you! Forgot to check back two years ago. PHP is still not using this repo. Easier to just compile as extension though. \nAre there any updates planned for this repo version. I see quite a few forks that didn't get merged back. \nThanks again.\n. Hello Geoff \u2013\nJust came across your tidy-fork repo and saw that yours is more frequently updated than w3c/tidy-html5.\nCan you please tell us what\u2019s new in your version and if you plan to document your changes. Is it possible to merge these changes back here?\nThank you.\nIR\n. Geoff\nThanks so much for the quick response and the insights. \nWhile there are other libraries and tools for checking and cleaning up HTML, tidy-html5 is definitely the most reputable and it should be maintained, one way or another, but preferably under W3C. As of today (Sept 4, 2014) there are 59 open tickets, 12 pull requests and ... zero commits since Aug 21, 2012. \nAt this point there are two options: re-engage developers with commit access, or fork the repo and continue development. What do you, or others, think? \nThanks.\nIonel\nIonel\n. The only problem with a fork is that it will lose the reputation that the W3C organization provides to such an important project. Prior to forking and moving development elsewhere due diligence should take place here, in order to get W3C to acknowledge the situation.\n. A better documentation Website could also help with making the project self-sustainable, increase traffic and adoption. http://w3c.github.io/tidy-html5/ is not enough for that purpose.\n. Geoff -\nWe shall continue the due diligence for contacting and getting W3C to acknowledge the situation but instead of waiting I would just fork and move on - I am sure there are a lot of developers waiting to contribute and help with testing. Thanks for yours and other's interest in reviving this project.\nIonel\n. Glad to hear about your progress!\nJust because they are named W3Schools does not mean they are associated in any way with W3C. Moreover their site is far from being a trustworthy reference source. It is a site built for SEO.\nAngularJS is a Google project. My first guess is that, instead of micro-managing third-party attributes, you should make it possible for anyone to add custom attributes to the list of valid items.\nCheers!\n. Any news about this?\n. Sounds good, thanks!\n. :+1: \n. Whoever was maintaining this repository should simply announce their inability to continue supporting the project and leave room for others to take over. It is common courtesy in the Open Source world.\n. Not anymore. Thanks @sideshowbarker for getting back to us and helping unlock the project! Now that this problem is out of the way, we got full steam ahead to get the project back on track.\n. Good luck! How do we join this group at W3C? Thanks.\n. Voted. \"Once 5 or more people support the group it will be created.\"\nThanks for your efforts, Jim. Hope you also gain access to this actual w3c/tidy-html5 repo.\n. @balthisar, I would make all possible attempts to wake up W3C. There are way too many support tickets opened here. This project needs to be brought back to life.\n. Or, even better: https://github.com/htacg/tidy-html\n@balthisar - Feel free to take over either of these.\n. @sideshowbarker - removed forked repo. https://github.com/htacg\n. Good job, now let's start to address those 64 pending issues and 14 pull requests. Good luck, everyone!\n. You are already on it - check url above.\n. There are only 141 such items on SF. We can try to close some of them in place, and manually transfer those that need further investigation and testing. More important is to actually address those tickets.\n. Actually, there's more to it ( on http://sourceforge.net/p/tidy/ )\n- [ ] 222 feature requests\n- [ ] 141 bugs\n- [ ] 33 patches\n- [ ] 22 user contributions\n- [ ] 12 support requests\n. And we also need to address this pretty quick  - we just killed the documentation page: http://w3c.github.io/tidy-html5/\n. At least the repo links get \"301 Moved Permanently\" redirected from https://github.com/w3c/tidy-html5 to https://github.com/htacg/tidy-html5. Does anyone know how to redirect http://w3c.github.io/tidy-html5/ to htacg.github.io/tidy-html5/ ?\n. I just did (send a support request). Thank you.\n. I would probably build a new website + documentation.\n. Here's the answer from Github:\n\nGitHub Pages doesn't currently offer redirection from one subdomain to another. If you'd like to redirect from https://w3c.github.io/tidy-html5/ to your new site, the only way of doing this would be to add a tidy-html5 directory inside the current w3c.github.io repo, containing an index.html file that does a redirect with either a meta tag or using JavaScript.\n. You got it, sorry for that! Permissions are not carried over from one organization to another when moving a repo.\n. Thanks, @sideshowbarker \n\n@petdance - please check your keys. what are you trying to push.\n. How does your suggestion aligns with existing coding style?\n. Ok, will close. Thank you.\n. @geoffmcl - can you create a PR that will include only the small fix for this particular issue? Thanks.\n. HTML Tidy Advocacy Community Group mailing list:\n- public mailing list\n- public mailing list for contributions\n- internal mailing list\nAnd: irc://irc.w3.org:6667/#htacg\nFor this particular project I would definitely discuss everything right here though.\n. Works for me. Cool about you updating your repo but my goal is to update this one. Have no idea what's the delta between https://github.com/htacg/tidy-html5 and your https://github.com/geoffmcl/tidy-fork .\n. Thanks, Geoff. can you commit into a dev branch?\n. Maybe we can setup some coding style to be applied to all commits, prior to PRs, especially in regard to white space. We shouldn't have such problems, but it's normal, considering that everyone is using an editor of choice.\n. IMHO we can't commit large changes to master and then consider this ready to be used in production. Let's just just setup a dev branch and advise people to deploy only for development or testing.\n. What are some use-cases for tidy-html5? When you develop a product you need to have in mind a real specific need for your product, right?\nFor me, that need was always to prettify HTML, make it readable, and remove some junk that didn't need when assembling HTML. For example, having users push content from Word and having it cleaned-up and made compatible with HTML5. In the past I was using Tidy for making HTML compatible with XHTML (Strict or Transitional document type) which is not the case anymore, since HTML5 is so forgiving.\nVarious support ticket issues will definitely enlighten us.\n. Sounds like a plan, thank you!\n. Can we still make it easy and ubiquitous to install tidy-html5 with php? I can also see some old PECL package: https://pecl.php.net/package/tidy. How about a new https://pecl.php.net/package/tidy-html5\n. @geoffmcl \nChanged the name in line 5 of CMakeLists.txt to set(LIB_NAME tidy) Recompiled, installed. When compiling php still getting an error:\n/usr/bin/ld: /usr/local/lib/libtidy.a(alloc.c.o): relocation R_X86_64_32 against `.rodata' can not be used when making a shared object; recompile with -fPIC\n/usr/local/lib/libtidy.a: could not read symbols: Bad value\ncollect2: error: ld returned 1 exit status\nmake: *** [libphp5.la] Error 1\n. I ended up configuring PHP without tidy-html5. I also wonder if anyone can actually compile php with it. We should make this possible again.\n. PHP version is 5.6.9 (http://php.net/downloads.php)\nPer your instructions I recompiled tidy-html5 and now I have both libtidy.a and libtidy5.a. There's no libtidy.so in /usr/local/lib\n. 5.6.9 :-)\n. Can we just make it standard and easy:\ncd tidy-html5\n./configure\nmake\nmake install\nAnd then compiling php*:\n./configure --with-tidy=/usr/local\nmake\nmake install\n*other php config options left out intentionally.\n. I don't have a problem with that, as long as it works. In order not to break all applications I had to go back to the old \ngit clone https://github.com/ermshiperete/tidy-html5.git\ncd tidy-html5\nsh build/gnuauto/setup.sh\n./configure\nmake\nmake install\n@ermshiperete was able to get it right :-)\n. @geoffmcl Going to test right now.\nSo far, here I am:\ncmake ../.. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIB:BOOL=ON\n............\nmake && make install\n...........\nInstall the project...\n-- Install configuration: \"Release\"\n-- Installing: /usr/lib/libtidy5.so.4.9.26\n-- Installing: /usr/lib/libtidy5.so.4\n-- Installing: /usr/lib/libtidy5.so\n-- Installing: /usr/include/platform.h\n-- Installing: /usr/include/tidy.h\n-- Installing: /usr/include/tidyenum.h\n-- Installing: /usr/include/buffio.h\n-- Installing: /usr/bin/tidy5\n-- Removed runtime path from \"/usr/bin/tidy5\"\n-- Installing: /usr/share/man/man1/tidy5.1\nGoing to try to compile PHP now ...\n. And here it is, new error:\n./configure --with-tidy=/usr\n......\nchecking for TIDY support... yes\nchecking for tidyOptGetDoc in -ltidy... yes\n......\nmake\n......\nGenerating phar.php\n/usr/local/src/php-5.6.9/sapi/cli/php: error while loading shared libraries: libtidy5.so.4: cannot open shared object file: No such file or directory\nmake: *** [ext/phar/phar.php] Error 127\n. Thanks, @geoffmcl! Unfortunately I do not have enough time to test all possible options and therefore I am counting on your help. Here's the list of tidy libraries installed:\n```\n\ncd /usr/lib\nls -l | grep tidy\nlrwxrwxrwx 1 root root     13 May 18 12:47 libtidy5.so -> libtidy5.so.4\nlrwxrwxrwx 1 root root     18 May 18 12:47 libtidy5.so.4 -> libtidy5.so.4.9.26\n-rwxr-xr-x 1 root root 658922 May 18 12:46 libtidy5.so.4.9.26\nlrwxrwxrwx 1 root root     13 May 18 12:51 libtidy.so -> libtidy5.so.4\nlrwxrwxrwx 1 root root     18 May 18 12:52 libtidy.so.4 -> libtidy5.so.4.9.26\ncd /usr/local/lib\nls -l | grep tidy\nlrwxrwxrwx  1 root root     21 May 17 15:05 libtidy-0.99.so.0 -> libtidy-0.99.so.0.0.0\n-rwxr-xr-x  1 root root 502851 May 17 15:05 libtidy-0.99.so.0.0.0\n-rw-r--r--  1 root root 613178 May 17 15:05 libtidy.a\n-rwxr-xr-x  1 root root    932 May 17 15:05 libtidy.la\nlrwxrwxrwx  1 root root     21 May 17 15:05 libtidy.so -> libtidy-0.99.so.0.0.0\n. @geoffmcl thank you! will test.\n. @geoffmcl this is great news - going to try it. Thank you! Can we pack 4.9.30 and release it? I just did a pre-release.\n.\nls -l /usr/lib | grep tidy\n-rw-r--r-- 1 root root 844010 May 24 19:20 libtidy5s.a\nlrwxrwxrwx 1 root root     13 May 24 19:20 libtidy5.so -> libtidy5.so.4\nlrwxrwxrwx 1 root root     18 May 24 19:20 libtidy5.so.4 -> libtidy5.so.4.9.30\n-rwxr-xr-x 1 root root 659174 May 24 19:20 libtidy5.so.4.9.30\n```\n\nCompiling PHP now...\nconfigure: error: Cannot find libtidy\n. I'd so much like to know what is PHP looking for here:\nchecking for TIDY support... yes\nconfigure: error: Cannot find libtidy\n. @denji - thanks\nls -l /usr/local/include /usr/include | grep tidy\n-rw-r--r--  1 root root  29100 May 24 13:23 tidyenum.h\n-rw-r--r--  1 root root  43011 May 24 13:23 tidy.h\n. ls -l /usr/lib | grep tidy\n-rw-r--r-- 1 root root 844010 May 24 19:20 libtidy5s.a\nlrwxrwxrwx 1 root root     13 May 24 19:20 libtidy5.so -> libtidy5.so.4\nlrwxrwxrwx 1 root root     18 May 24 19:20 libtidy5.so.4 -> libtidy5.so.4.9.30\n-rwxr-xr-x 1 root root 659174 May 24 19:20 libtidy5.so.4.9.30\nlrwxrwxrwx 1 root root     18 May 24 19:31 libtidy.so -> libtidy5.so.4.9.30\nHow did we end up with libtidy5s.a ? Used to be libtidy5.a\n. If this is not enough for php config to finding tidy I have no idea what would:\n```\nls -l /usr/lib | grep tidy\n-rw-r--r-- 1 root root 844010 May 24 19:20 libtidy5s.a\nlrwxrwxrwx 1 root root     13 May 24 19:20 libtidy5.so -> libtidy5.so.4\nlrwxrwxrwx 1 root root     18 May 24 19:20 libtidy5.so.4 -> libtidy5.so.4.9.30\n-rwxr-xr-x 1 root root 659174 May 24 19:20 libtidy5.so.4.9.30\nlrwxrwxrwx 1 root root     18 May 24 19:31 libtidy.so -> libtidy5.so.4.9.30\nlrwxrwxrwx 1 root root     18 May 24 19:49 libtidy.so.4 -> libtidy5.so.4.9.30\n``\n. My bad, it worked. I forgot to change php config from--with-tidy=/usr/localto--with-tidy=/usr`\nLet's see what happens with make now ...\nLooks like it passed!\n. We should probably adjust README.md after these recent changes. \n. Thanks, @geoffmcl @denji For the first time since project was migrated to @HTACG I was able to compile php with the new tidy-html5! Let's clean up, reset instructions, and maybe add some clear info for other folks compiling php with it. I wonder how many php installations are using it anymore.\n\nNoticed that php info reports libTidy Release  1970/01/01\n. @denji - can you adjust and do a pull request. Or let @geoffmcl take care of this?\n. Ran exactly the same setup on another new server and got into the infamous \nGenerating phar.php\nphp-5.6.9/sapi/cli/php: error while loading shared libraries: libtidy5.so.4: cannot open shared object file: No such file or directory\nmake: *** [ext/phar/phar.php] Error 127\n. This worked for me:\n```\nsudo sh -c \"echo /usr/lib  >> /etc/ld.so.conf.d/local.conf\"\nldconfig\n```\nAre we talking about the same thing? I do not have the patchelf utility installed. Besides, we should be able to help others install tidy-html5 with php without too much hassle.\n. Since ldconfig worked, do you think it's correct to use it?\n```\nldconfig -p | grep tidy\n    libtidy5.so.4 (libc6,x86-64) => /usr/lib/libtidy5.so.4\n    libtidy5.so (libc6,x86-64) => /usr/lib/libtidy5.so\n\n```\n. I believe that, after adding a section on how to install php with tidy-html5, we can close this ticket. Thanks a lot @denji and @geoffmcl for your help!\n. Where's the ELF file?\n. If fix cannot go in the tidy-html5 package we still need to include info for folks building php with tidy-html5. If possible, please submit a pull request.\n. Okay thanks. That means - cannot fix from within tidy-html5 library. Maybe @geoffmcl can come up with an idea.\n. Okay, but I would not bother with suggesting flags for PHP build. Again, if it can be included with the libary ok - if not, we just provide instructions. In certain circumstances it works without the flags. I built php earlier and I didn't have to run ldconfig.\n. Thank you @geoffmcl - I can now install new tidy-html5 with PHP, my problem is solved. We need to add some clear documentation though. \n. Clear doc for others installing PHP with tidy-html5. While you gave me plenty details on this thread, I believe that README on this repo won't get anyone closer to success. Should probably extract relevant info from this thread and include with the docs, specifically for PHP with tidy-html5 installation.\nAnd, yes, can wait for 5.0.0, and repeat the process. And then document it according to our own experience. Thanks, again, @geoffmcl !\n. :+1: \n. I would vote for supporting only html5. This is tidy-html5\n. :+1: sounds good to me\n. :+1: \n. If I look at the source for a Web page and I see the HTML code as being clean and well organized, to me that's a clear indication that something good is going on there. On the contrary, if code is dirty and ugly I dismiss whatever services they offer since I don't see that particular Website built under a sustainable development environment. Google might take into account (and who can say that they don't) source code cleanliness as yet another plus signal for their ranking algorithm.\n. :+1:  And we should probably list your article somewhere in here. Any suggestion?\n. And if I configure php with  --with-tidy=/usr/local I get this:\n/usr/local/src/php-5.6.12/ext/tidy/tidy.c:34:20: fatal error: buffio.h: No such file or directory\n #include \"buffio.h\"\n                    ^\ncompilation terminated.\nmake: *** [ext/tidy/tidy.lo] Error 1\n/bin/sh /usr/local/src/php-5.6.12/libtool --silent --preserve-dup-deps --mode=compile cc  -Iext/tidy/ -I/usr/local/src/php-5.6.12/ext/tidy/ -DPHP_ATOM_INC -I/usr/local/src/php-5.6.12/include -I/usr/local/src/php-5.6.12/main -I/usr/local/src/php-5.6.12 -I/usr/local/src/php-5.6.12/ext/date/lib -I/usr/local/src/php-5.6.12/ext/ereg/regex -I/usr/include/libxml2 -I/usr/X11 -I/usr/include/freetype2 -I/usr/local/imap-2007f/include -I/usr/local/src/php-5.6.12/ext/mbstring/oniguruma -I/usr/local/src/php-5.6.12/ext/mbstring/libmbfl -I/usr/local/src/php-5.6.12/ext/mbstring/libmbfl/mbfl -I/usr/local/src/php-5.6.12/ext/sqlite3/libsqlite -I/usr/include/pspell -I/usr/local/include -I/usr/local/src/php-5.6.12/TSRM -I/usr/local/src/php-5.6.12/Zend    -I/usr/include -g -O2 -fvisibility=hidden  -c /usr/local/src/php-5.6.12/ext/tidy/tidy.c -o ext/tidy/tidy.lo\n/usr/local/src/php-5.6.12/ext/tidy/tidy.c:34:20: fatal error: buffio.h: No such file or directory\n #include \"buffio.h\"\n                    ^\ncompilation terminated.\nmake: *** [ext/tidy/tidy.lo] Error 1\n/bin/sh /usr/local/src/php-5.6.12/libtool --silent --preserve-dup-deps --mode=compile cc  -Iext/tidy/ -I/usr/local/src/php-5.6.12/ext/tidy/ -DPHP_ATOM_INC -I/usr/local/src/php-5.6.12/include -I/usr/local/src/php-5.6.12/main -I/usr/local/src/php-5.6.12 -I/usr/local/src/php-5.6.12/ext/date/lib -I/usr/local/src/php-5.6.12/ext/ereg/regex -I/usr/include/libxml2 -I/usr/X11 -I/usr/include/freetype2 -I/usr/local/imap-2007f/include -I/usr/local/src/php-5.6.12/ext/mbstring/oniguruma -I/usr/local/src/php-5.6.12/ext/mbstring/libmbfl -I/usr/local/src/php-5.6.12/ext/mbstring/libmbfl/mbfl -I/usr/local/src/php-5.6.12/ext/sqlite3/libsqlite -I/usr/include/pspell -I/usr/local/include -I/usr/local/src/php-5.6.12/TSRM -I/usr/local/src/php-5.6.12/Zend    -I/usr/include -g -O2 -fvisibility=hidden  -c /usr/local/src/php-5.6.12/ext/tidy/tidy.c -o ext/tidy/tidy.lo\n/usr/local/src/php-5.6.12/ext/tidy/tidy.c:34:20: fatal error: buffio.h: No such file or directory\n #include \"buffio.h\"\n                    ^\ncompilation terminated.\nmake: *** [ext/tidy/tidy.lo] Error 1\n. @geoffmcl - we need to provide a patch, instead of asking people to do this manually. Can you come up with something?\n. In fact it is a simple as doing this in the php source directory:\nsed -i 's/buffio.h/tidybuffio.h/' ext/tidy/*.c\n. I always install it on a clean system, not on top of the very old one.\n```\ncd /usr/local/lib\nls -l | grep tidy\n-rw-r--r--  1 root root 818522 Aug 11 18:11 libtidys.a\nlrwxrwxrwx  1 root root     12 Aug 11 18:11 libtidy.so -> libtidy.so.5\nlrwxrwxrwx  1 root root     16 Aug 11 18:11 libtidy.so.5 -> libtidy.so.5.0.0\n-rwxr-xr-x  1 root root 696520 Aug 11 18:11 libtidy.so.5.0.0\n```\nCleaning up could be done manually if one knows what old tidy libraries can be removed. More important to me is to make it possible for every one to be able to use the library with other builds (php for example).\n. :+1: \n. Thanks, @geoffmcl - this was just a suggestion but keeping the code clean is always a good idea.\n. I'd love to help but going through terrible time constraints on other projects these days. We need to reach out to community. Here's a perfect model of how we should ask for help:\nhttps://github.com/snowplow/snowplow/blob/master/CONTRIBUTING.md\nLet me know if you can create this file along with a better Contributing section in the https://github.com/htacg/tidy-html5/blob/master/README.md file.\n. :+1: \n. :+1:  @geoffmcl - we just need to continue to reach out for community contributions and involvement. \n. @geoffmcl :+1: you're doing an excellent job keeping this project active and constantly updated. I wish I could contribute more but maybe one day I'll get some more time.\n. glad I can help in some way :) :+1: \n. Seems to be compiling with php 7.. Great!. ",
    "ingochao": "sorry for the wrong title, 10.6.8 is correct.\nhttps://gist.github.com/2332122\nranlib lib/libtidy.a worked for me, thanks.\n. gcc -v\nUsing built-in specs.\nTarget: i686-apple-darwin10\nConfigured with: /var/tmp/gcc/gcc-5659~1/src/configure --disable-checking --enable-werror --prefix=/usr --mandir=/share/man --enable-languages=c,objc,c++,obj-c++ --program-transform-name=/^[cg][^.-]*$/s/$/-4.2/ --with-slibdir=/usr/lib --build=i686-apple-darwin10 --program-prefix=i686-apple-darwin10- --host=x86_64-apple-darwin10 --target=i686-apple-darwin10 --with-gxx-include-dir=/include/c++/4.2.1\nThread model: posix\ngcc version 4.2.1 (Apple Inc. build 5659)\n. ",
    "mcmayer": "For future reference and in case someone else faces weird assertion failures:\nLines like these\nC\ntidyOptSetInt(tidy_doc,TidyShowErrors,1);\nmysteriously croaked on me, giving an assertion failure:\nbash\nAssertion failed: (option_defs[ optId ].type == TidyInteger), function SetOptionInt, file ../../src/config.c, line 381.\nIn the end it turned out that I linked against libtidy instead of libtidy5. Such wrongly linked executables may actually run.\nIt's only a guess: In the case of #30 somehow the linker must have picked up the wrong libtidy.\n. Hi, thanks for following up.\nI installed tidy-html5 on a Mac using homebrew, following this hint: http://stackoverflow.com/questions/13380012/tidy-html5-on-mac-os-how-to-install, and I definitely linked against the wrong library (the MAC OS libtidy of \u201d31 Oct 2006\u201d). It was a typo in my Makefile. I think it\u2019s very good to call it tidy5 for the time being.\nMy guess was that the enums in tidyenum.h changed since then. (It seems plausible that there is some change in almost 10 years.) If that\u2019s not the case I don\u2019t have a good explanation for the assert failure. On the other hand, if I link against the wrong lib then all bets are off anyway. I\u2019m actually surprised it linked and ran at all.\nNDEBUG: It was not -D defined:\n$ brew install --HEAD tidy\n==> Installing tidy from homebrew/homebrew-dupes\n==> Cloning https://github.com/htacg/tidy-html5.git\nCloning into '/Library/Caches/Homebrew/tidy--git'...\nremote: Counting objects: 714, done.\nremote: Compressing objects: 100% (570/570), done.\nremote: Total 714 (delta 105), reused 640 (delta 103), pack-reused 0\nReceiving objects: 100% (714/714), 570.75 KiB | 308.00 KiB/s, done.\nResolving deltas: 100% (105/105), done.\nChecking connectivity... done.\n==> Checking out branch master\n==> cmake ../.. -DCMAKE_C_FLAGS_RELEASE= -DCMAKE_CXX_FLAGS_RELEASE= -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/tidy/HEAD -DCMAKE_BUILD_TYPE=Release -DCMAKE_FIND_FRAMEWORK=LAST -DCM\n==> make install\n\ud83c\udf7a  /usr/local/Cellar/tidy/HEAD: 12 files, 1.2M, built in 14 seconds\nI don\u2019t know cmake that well, is it supposed to define NDEBUG for release? \nThe library was installed in /usr/local/lib/libtidy5.a.\n\nOn 28 Apr 2015, at 18:24, Geoff McLane notifications@github.com wrote:\n@mcmayer https://github.com/mcmayer thanks for adding your findings...\nIndeed, until we actually officially release a tidy from this HTACG repo it is presently generating a libtidy5 library, either as static or shared library, and a tidy5 binary... just to keep any old tidy from being overwritten on install to allow for comparisions...\nSo I do not know how a tidy5 build could link with libtidy, instead of libtidy5? But if I am reading this correctly you are in fact linking libtidy5 to your own app, using what ever build system you have chosen. In this case you certainly need to fix that to look for libtidy5 at this time... being prepared to change it back once we have released a new tidy...\nAnd actually, even if this very unlikely event did happen I still can not see how an 'assert' was triggered. At this time the basic API remains unchanged... and tidyOptSetInt and TidyShowErrors existed back in the soureforge CVS repo that this repo started from... and that CVS repo has not been changed for more than 5 years...\nBut checking the assert line number of 381 shows whatever libtidy you used, linked with, it was neither the CVS repo, which has this assert at line 386, NOR the latest htacg src 4.9.26 where it is at line 384 of config.c - see https://github.com/htacg/tidy-html5/blob/master/src/config.c#L384 https://github.com/htacg/tidy-html5/blob/master/src/config.c#L384. So one wonders exactly what tidy library you are using. Or you have made some personal modifications!\nFurther assertions should only exist if you have NOT defined NDEBUG in the build. So what you are building is a quasy partial DEBUG version, that can fire assertions, and abort. This should ONLY be for testing, never for a release. Once NDEBUG has been defined, the assert macro compiles as nothing. Check out assert.h for this macro...\nAnyway, as stated, thanks for reporting...\n\u2014\nReply to this email directly or view it on GitHub https://github.com/htacg/tidy-html5/issues/30#issuecomment-97126286.\n. \n",
    "geoffmcl": "@mcmayer thanks for adding your findings...\nIndeed, until we actually officially release a tidy from this HTACG repo it is presently generating a libtidy5 library, either as static or shared library, and a tidy5 binary... just to keep any old tidy from being overwritten on install to allow for comparisions...\nSo I do not know how a tidy5 build could link with libtidy, instead of libtidy5? But if I am reading this correctly you are in fact linking libtidy5 to your own app, using what ever build system you have chosen. In this case you certainly need to fix that to look for libtidy5 at this time... being prepared to change it back once we have released a new tidy...\nAnd actually, even if this very unlikely event did happen I still can not see how an 'assert' was triggered. At this time the basic API remains unchanged... and tidyOptSetInt and TidyShowErrors existed back in the soureforge CVS repo that this repo started from... and that CVS repo has not been changed for more than 5 years...\nBut checking the assert line number of 381 shows whatever libtidy you used, linked with, it was neither the CVS repo, which has this assert at line 386, NOR the latest htacg src 4.9.26 where it is at line 384 of  config.c - see https://github.com/htacg/tidy-html5/blob/master/src/config.c#L384. So one wonders exactly what tidy library you are using. Or you have made some personal modifications!\nFurther assertions should only exist if you have NOT defined NDEBUG in the build. So what you are building is a quasy partial DEBUG version, that can fire assertions, and abort. This should ONLY be for testing, never for a release. Once NDEBUG has been defined, the assert macro compiles as nothing. Check out assert.h for this macro...\nAnyway, as stated, thanks for reporting...\n. @mcmayer, know nothing about Homebrew, but it looks like it is just a script to do the cloning, building and installing... something you can easily do manually, or build you own script, or modify and use the .../build/cmake/build-me.sh that comes with the source, except that does not include the cloning... and this build information is in the README.md document of the source...\nBUT I am confused about what it is exactly doing, especially why it explicitly sets the CMAKE_C_FLAGS_RELEASE to nothing! And why it sets the CMAKE_INSTALL_PREFIX to /usr/local/Cellar/tidy/HEAD... These options do NOT make sense...\nAnd you are certainly right about the enumerations having changed over the years... forgot about that... so yes the library and options enumerations MUST match, else the behaviour will be very unpredictable...\nIn linux I just did the following 5 steps, in a directory of my choice in my $HOME -\n1. $ git clone git@github.com:htacg/tidy-html5.git tidy-html5\n2. $ cd tidy-html5/build/cmake\n3. $ cmake ../.. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr\n4. $ make VERBOSE=1\n5. $ sudo make install\nIf you do not have a github.com account, with your ssh credentials, then the repo name may have to be changed to the read only https://github.com/htacg/tidy-html5.git...\nAnd it compiled tidy5 and libtidy5.a. The VERBOSE=1 showed me that each source compile includes the flag -DNDEBUG, which, as stated would remove all asserts from this Release build. And the install was -\n1. /usr/lib/libtidy5.a\n2. /usr/include/tidy.h, plus 3 other headers, including tidyenum.h...\n3. /usr/bin/tidy5\n4. /usr/share/man/man1/tidy5.1\nThen anywhere is my system I can now run $ tidy5 ..., and $ man tidy5 brought up the 4.9.26 man page... all as expected...\nFrom the little I know about the MAC OS X, you may need to add -DCMAKE_FIND_FRAMEWORK=LAST to line 3.!\nYou said The library was installed in /usr/local/lib/libtidy5.a, which is indeed the default cmake install location, and is why I add -DCMAKE_INSTALL_PREFIX=/usr, to get things in the more traditional locations... \nBut in your case /usr/local/lib does NOT make sense since cmake is being explicitily told -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/tidy/HEAD, which to me tells cmake to generate a Makefile that should intall the library in /usr/local/Cellar/tidy/HEAD/lib, and the tidy5 in /usr/local/Cellar/tidy/HEAD/bin???\nSo blew that all away and started fresh, and now added -DCMAKE_C_FLAGS_RELEASE= to the line 3. and I DO NOT GET -DNDEBUG added to the compile lines!!! So it clears this, and also the -O3 full optimized flag so the resulting binaries were different ... This seems a BAD option to add...\nFurther, in another trial, if I do not add -DCMAKE_BUILD_TYPE=Release, again I do not get -DNDEBUG!\nHTH.\n. @jznf thanks for the report...\nYou have certainly found a case where tidy, since sometime before 2009, will propagate the <span> to inside the <button> block, thus producing additional tags...\nBut as @sideshowbarker reported way back then, this does not happen in the original minimal html sample given, by @mindnektar, so this is a new case, thus would prefer we open a new Feature Request issue for this... thanks...\nI call it a Feature Request since this propagation in certain circumstances has been tidy's action for maybe upwards of 10 years. That is, it is deliberate coded behavior, so is not a bug, per se... We would need to explore why this was chosen... why was it thought needed? ie what case or cases did it fix along the way? And maybe we would need a new tidy option to now stop doing this... all of this points to this being a new issue... that needs its own discussion... thanks...\n. In the develop-500 branch added a -\nctmbstr tidyLibraryVersion(void)\nwhich will return a string \"5.0.0\"\nIs this ok for your use case?\n. Well, we have a 'test' suite, presently runable via a batch (alltest.cmd), or a shell script (testall.sh), so with the use of cmake in develop-500 branch will certainly consider add auto-running of these... it is on my TODO list, unless you beat me to it...\nSuggest an opion like -\noption( RUN_TEST_SUITE \"Set ON to run the test suite\" OFF )\nThat is it defaults to OFF, since this should only be required by developers...\n. Just a reminder the main development branch is now master, and may shortly delete the develop-500 branch, although for the moment have been trying to remember to keep them equal...\nDid various trials, but found it very difficult to make the running of tests easily understandable to the average user, certain not a new user. You need a full understanding of exactly what is being tested, and this varies with each test,\nSome just test for previous crashes; some need to view the original input and tidy output in a browser and visually decide; some need to re-run the output again through tidy and check for progressive change; some need the output compared to a previous base output; etc, etc... How can each of these be explained?\nWould basically need a giant README listing the some 240+ tests one by one, with an explanation about each, what it tests, what to look for, etc... I have done some of this, but far from complete so not pushed. \nI also toyed with a script that generated a html iframe, loading the input with the output of each test to compare them in a browser sort of side-by-side... but again some tests have no output due to deliberate 'errors' in the input html, so again not completed and pushed...\nSo now feel adding a cmake RUN_TEST_SUITE option there for everyone and anyone to try would bring more questions than providing anything useful. Such tests are scripted, and can be run by a developer anytime... so seems no need for any cmake automation...\nAnd some time back added a new html5 test set, and recently thanks to @lacombar this can now also be run in unix...\nDue to the above, and since there have been no further comment on this since Jan 2015, am closing this...\nPlease feel free to re-open, or raise a new issue... thanks...\n. Now set to tidy5, but when tested and released intend to revert to 'tidy' to overwrite previous... This 'tidy5' is intended to still correctly handle html4 and earlier as well...\n. @petdance , @balthisar , @ermshiperete as mentioned in issue #190 have pushed a CMakeLists.txt change that uses a macro set(LIB_NAME tidy5), in preparation of making it EASY to change the name back to tidy on release of 5.0.0\n. The naming strategy has been enumerated, and no further comments for nearly a month, so closing...\nFeel free to re-open, or open a new issue... thanks...\n. Well at this time 'tidy5' is intended to validate, tidy, clean everything, unless we run into a real road block that forces a separation... And at present know no restrictions on which compiler, at least as far as Visual C is concerned... but agree would be good to state this somewhere... Maybe start something and I will help fill it in...\n. You may have noted a later Issue beginning to cover this... what and where for unix/linux, MAC and Windows...\n. We sort of missed that ;=)) My present aim is 5.0.0 by end of February 2015 latest...\n. Has this now been done in http://www.htacg.org and http://www.html-tidy.org/... can this be closed?\n. Just for information the latest development code is in branch develop-500. You should do -\n$ git checkout develop-500\nand test that...\nBUT, as indicated this is a known issue from the last 2009 Tidy release, AND still exists in the current code... That is Tidy has always placed the openning script tag almost immediately following the last closing tag... \nThank you for reminding me of this, and I will keep it in mind while squashing more pressing bugs... And will look at some of the fixes suggested... You never know... maybe one day ;=))\n. Well, looking at a potential fix by clarkewd gave me a quick idea - thanks...\nPlease checkout develop-500 and check, especially for any other regressions...\nLook forward to your furhter reports, or this closed if good ;=))\n. Found a small regression, but moving my patch down seems to have fixed that...\nHope you get a chance to checkout develop-500, build, test and report... thanks...\n. Since the x86 indicates 32-bit, then download the win32 zip... it contains the DLL...\nI guess you could just copy and rename it... When I click TextFX HTML Tidy -> About Tidy in my v5.9 (UNICODE) npp, it says can not find PF32\\plugins\\Config\\tidy\\libTidy.dll, but I have never tried to fix it, or use the html functions, so not sure...\nAs suggested Notepad++ plugin support could give you more...\n. Hmmm, I wonder what compatible means here? Maybe it needs a UNICODE version of the library??\nAt present the strings in tidy are not set up for a UNICODE compile... IIRC they must be all put in a _T(\"Hello\") macro, or something like that... and the compile does the converion... The tidy strings are getting attention in #336, and maybe a unicode version would be possible with that...\nBut maybe UNICODE is not the compatibility problem... need to ask Notepad++...\nAnd yes, there are always so many preferences for Pretty Printing ... but if you have the time, fork, build, modify, and present your suggestions... they are always welcome... thanks...\n. @petdance, @balthisar, did a quick analysis of the 52 source files, 50,352 lines, approx. 2.7MB... trying to determine what, if anything, needs 'fixing' in this regard.\nSome 1.4% of the lines, 722 lines, in 34 files, have 1 or more trailing spaces. Does not seem like a giant problem ;=))\nRegarding tabs, only 4 files contain tabs\n1. tidylib.c - 2144 lines, 4 w/tab, 4 tabs\n2. sprtf.c - 440 lines, 45 w/tab, 142 tabs\n3. parser.c - 4898 lines, 124 w/tab, 341 tabs\n4. tidy-int.h - 155 lines, 6 w/tab, 19 tabs\nThe sprtf.c is my windows ONLY debug addition, so this should not be a problem. This file is not included/compiled in the release build, and is only ever 'viewed' in my MSVC IDE which is set to display tabs as 4 spaces, so it still all lines up neatly...\nparser.c is because I (or someone?) imported some code from another repo that used tabs. I did remove some, but a few remain... At 150K bytes it is the 2nd largest source file in tidy.\nThe largest is attrdict.c, 13,827 lines, 1.5MB, with no tabs, and only 131 lines with 1 or more trailing spaces.\nBut with a grand total of just 506 tabs, 0.01% of the total bytes, again it does not seem a problem.\nAs for relining, and indenting, having been through and through most of the source over the last few months, I have NOT seen anything noticeably bad...\nIn fact I LOVE that doing a big diff between cvs/sf tidy and current tidy5, there are still thousands of lines that are totally UNCHANGED. This is particular good for doing code reviews, comparison, etc...\nSo in summary, maybe I missed something, but I would not recommend this be done at this time.\nBut on the other hand, if someone wants to do this, as a PR, I would certainly look at what is about to be changed. And this is certainly the time to do it before releasing 5.0.0. But again I hope there are still thousand of lines left unchanged as mentioned above.\nA feature request that I would like to pass to git is to support a -w option on the diff, but given that git is totally line oriented, I guess this would not be easily accepted. My GUI side-by-side file comparer is WinMerge, and it thankfully chooses by default to ignore pure space changes.\nAnyway, just my 2 cent ;=))\n. No further comments for over a month, so closing...\nFeel free to re-open, or raise another issue... thanks.\n. As you may know the latest development branch is develop-500...\n$ git checkout develop-500\nThis uses cmake and the install directory can be set by -\n$ cd build/cmake\n$ cmake ../.. -DCMAKE_INSTALL_PREFIX:PATH=/install/path\n$ make install\nso I hope this can be closed?\n. The latest development branch is develop-500\n$ git checkout develop-500\nAnd as you now understand the default output-encoding used to be ascii, but is now utf8, as can be seen here -\nhttp://www.html-tidy.org/quickref.html#output-encoding\nIf you add the config of --output-encoding ascii you will get \u00a2 as before...\nHope you can get a chance to test, confirm, and hopefully close this issue...\n. Oops, seems in these issue the &cent; is translated if not quoted ;=))\n. As you may know the latest development branch is develop-500\n$ git checkout develop-500\nWe hope you get a chance to check it out ;=))\nBut using your xml sample and config I can confirm this 'feature' is still in tidy code today ;=((\nSo technically this should be labelled a feature request, but for now will leave it as a bug, and see what can be done about it... should not be so hard to push the closing para to a new line...\n. Sorry, I tried and I tried, but pushing the para to a new line proved very, VERY difficult.\nIt has nothing to do with the new-blocklevel-tags option.\nWith or without this option tidy will not indent the text more, and will append the closing tag on the same line as the text, what ever the tag is.\nGiven that Tidy has been like this probably since the beginning, this is a feature request, and can only push it out to an indefinite future.\n. @Pajamaman, given that this has been a 'feature' of tidy for a long LONG time, I am not inclined to continue the search to change this behavior.\nPlease note it is no longer necessary to checkout the develop-500 branch. All the latest is in the default master branch as we head towards a 5.0.0 release...\nI'll close this for now, but feel free to re-open, or open new issues... Thanks for reporting...\n. Sorry for the long delay in a response...\nHave moved the discussion of this 'feature' to -\nhttps://lists.w3.org/Archives/Public/public-htacg-contrib/2015Jan/0003.html\nThank you for bringing this back to my attention... and hope we can perhaps close it here...\n. @HoffmannP, thanks for that link. Yes, it does clearly indicate that\n<script should not be in a script element.\nHowever, if that is the case then the W3C validator is also in error by not\nflagging this as 'invalid'! Is this maybe a validator bug?\nBut then what about the role of tidy as a 'fixer'. My patch could see this\nis in inverted commas, and could add the escaped <\\script to successfully\nfix the document, probably with a warning.\nIt just seems to me the current MESS that tidy outputs in this case is\nquite unacceptable -\n<body>\n<script>\nvar a = '<script';\n<\\/script>\n<\\/body>\n<\\/html>\n</script>\n</body>\nOr alternatively at least to flag it as an error, thus no output unless\nforced. The idea is to not generate what would be seen as invalid\njavascript! That is a seriously compromised document.\nWhat do you think? Will also try to cross-post this to the lists to perhaps\nhave a wider audience.\n. @HoffmannP, glad we agree the current output is unacceptable ;=))\nBut tidy has to have some minimal parser of the script tag contents, otherwise it can not report that it does not match the ABNF!\nIt is agreed it could never be perfect, with so many script type options, and given that the script could even contain errors, but without any review of the content, tidy can only output the mess it does now.\nGlad you eventually worked out the strange markdown needed to include html snippets. Maybe like me you found the Markdown supported link helpful...\n. @HoffmannP, ok, I am now completely LOST! When someone clearly explains why @NoNoNo original input is valid HTML5 maybe I can do something... I too have read the link more than 5 times, and obviously have more than a 'temporal' barrier ;=))\nEven adding var b = '<script>'; passes validation????\nTo try to briefly explain the tidy internal code process... maybe that will help...\nFrom within ParseBody(...), is finds <script...>, so calls ParseScript(...). There is quite an explicit comment on this function -\nThis isn't quite right for CDATA content as it recognises\n  tags within the content and parses them accordingly.\n  This will unfortunately screw up scripts which include\n  < + letter,  < + !, < + ?  or  < + / + letter\nFrom within ParseScript(...), the contents are parsed by GetCDATA(...), which is also used for style tags (I think - not checked)... \nWhen it finds < + letter it switched out of the initial state CDATA_INTERMEDIATE into state CDATA_STARTTAG, and stays there collecting letters, and stops at the next non-letter char...\nIt notes what has been collected, 'script', matches the container, which is 'script', and bumps nested++;, and returns to CDATA_INTERMEDIATE state, continuing to accumulate until the next </script>.\nFinding the </ + letter, switches to CDATA_ENDTAG state, again accumulating letters, and notes it has collected the same name as the container, and since matching, checks nested. Finding nested not yet 0, reports the first warning that </ + letter is not allowed here, and returns to CDATA_INTERMEDIATE state.\nSince tidy is now still LOCKED in one level of 'script' it will consume the rest of the document, looking for the next </script> to break out... and will repeat the warning for </body>, and </html>, and add an escape to each... it is just accumulating CDATA text...\nNow at the EOF, not having found the end of the container, will report missing end tag, and return all that was collected as a text node, and return to ParseScript(...), exiting here again reporting missing </script>, and return to ParseBody(...).\nNow the only way out I see is to NOT trip over the var a = '<script';. Avoid taking this as a new nested container... that is what my very OLD patch did... not perfect, but did the job... and also note it was implemented with a new option, --skip-quotes, which was off by default, so the user had to request this different parsing... it would not change 'standard' tidy parsing at all...\nBut without further understanding I will leave this issue for now. Try to catch my breath...\n. @NoNoNo @HoffmannP maybe it is time to try to do something about this long outstanding problem in scripts...\n. @vielmetti thanks for the test case 1642186, now merged...\nI hope someone gets the chance to \n- get the patch I put in sourceforge, so long ago (2007) ;=))\n- or do it another, hopefully better, way...\n- provide a patch against master 5.1.9, or a PR\nThis bug has been open too long... but personally, at the moment, can not get the enthusiasm to dig back into this...\nBut will try to help if there are some questions...\n. @vielmetti glad you are interested in fixing this... look forward to it ;=))\nCan maybe help on understanding the lexer, if that is what you need...\n\nit's going to be necessary to test a whole lot of test cases\n\nNot sure why you think this? Tidy is in a very special parsing state, collecting script element text... \nMaking a small change in this particular, special parser will not effect other than whether tidy trips over a <script piece of text, or not... please avoid spreading FUD!\nAnd the bulk of the old patch is a single yes/no service, static Bool IsInQuotesorComments( Lexer * lexer ) to check where <scrip text appears, so it a simple drop in piece of code...\nIf you can not easily see where this service should be used, can maybe help since I am sure I can find the original patched code somewhere, I hope... \nBut in any case it is where the script parser sees a <, checks some more, and closes this script parsing, exiting that parser prematurely...\nIn simple terms the patch was to not trip over what look like html element if the text is in javascript comments, or is within a \"...\", or '...' blocks of text...\nLet's get it done at last...\nBut am really puzzled why this is a case for CI? #269\nOnce the coding is done, you now have test 1642186, and other samples above, to check your progress...\nPass me a patch, and I will test it also...\nOn CI for tidy, I am yet to hear an argument on how this will help tidy??? Simple, 1, 2, 3...\n. @vielmetti, you added nothing new, except perhaps more FUD... this is gettting like pulling teeth...\nSorry, got a little impatient over this, it is my 2007 patch afterall ;=))\n@vielmetti thanks you for your work on this... What you did showed me it was dead simple... especially reminding me where the test needed to be done...\nSo, found my original 2007 code, did a cut and paste job, with some little tweaks on the way, and put the results in an issue-65 branch, and added a 1642186-1 test, which passes the W3C validator, and it all works...\nTo get the code:\n$ cd tidy-html5\n$ git checkout issue-65\n$ cd build/cmake\n$ ./build-me.sh\n$ ./tidy -config ../../test/input/cfg_1642186-1.txt ../../test/input/in_1642186-1.html\n$ # Should exit 0, No warnings or errors were found.\nHave aleady done the alltest.cmd in Windows. Will shortly do it all in linux... if you could add ARM... and we still are in much need of a MAC tester...\nAgain very sorry. I should have got in there and done this ages ago, but just could not get around to it... But as suggested, it was your efforts that got me motivated. Thanks.\n. @NoNoNo after 3 year 25 days (give or take a little) this fix is in master, v.5.1.10 onwards ;=))\nAfter some more testing, have merged the issue-65 branch into master. Need to do -\n$ cd tidy-html5\n$ git checkout master\n$ git pull\n$ cd build/cmake\n$ ./build-me.sh\nOf course this new option --skip-quotes yes, it default to no, could be expanded. At present the skip logic is very simple. The service returns yes if this <+letter just found in the data stream while parsing CDATA, is -\na. In a javascript comment, either /* ... */ or to end-of-line line form\n b. Inside quotes, either single or double.\nA massive speed increment could had by keeping some state flags in the lexer. At present it begins the check at the beginning of the stream stored in the lexer at that time each time...\nThis is no problem if the script is relatively short, but have seen some html with enormous scripts... \nBut remember it is only keyed by finding a <+letter in the stream. If this sequences does not occur then it is never called...\nAnd of course it is never called unless the user specifically adds the option...\nWill close this old bug after some period of testing...\n. Have added a test/t1.sh, and t1.bat, to the repo, to be able to quickly do a single test, in our so called 228 regression tests...\nThanks to @vielmetti assistance we have a test available for this issue, 1642186-1... so can do \n$ ./t1.sh 1642186-1 0 and check the results...\n. Chis found a problem parsing...\n<script>\n   document.write('<style>body{font-family:\"'+XCOOKIE.gui_font+'\",Verdana, Arial;}</style>');\n</script>\nThink I have found the error, and will push a fix shortly...\n. Have pushed a fix for the problem Chris found... caused by the valid mixed quoting, like this  'val:\"'+var+'\",...'...\nThe logic is now, on finding unescaped quote, either \" or ', not inside a comment -\n- If not in quotes, open a quote, keeping the openner, either \" or '.\n- If in quotes, and quote matches the openner, close that quote.\n- If in quotes, and this quote does not match openner, ignore.\nAnd to be clear, this is a partial attempt to parse javascript, just to avoid a collossal tidy error on a html file that pasess the W3C validator, namely test/input/in-1642186-1.html, and others...\nI have been able to construct some special javascript examples that may fail, but such a file usually also fails the validator... \nSo perhaps that should be one of the criteria - if the sample fails the W3C validator, then it is probably ok for tidy to also fail... and vice versa...\nAnd at this time it is geared to javascript syntax, so other scripts have not been addressed...\nHope you get a chance to pull master, version 5.1.11 onwards, and try out this new option --skip-quotes yes...\nBut remember it is only really needed if you run into a javascript parsing problem... if you do not have anything resembling html tags in the script, then this is not needed...\n. Hi Chris,\nThanks for testing, and finding another bug ;=))\nThe problem was not escaping an escape char... like this \"+\\\"...\nI was letting the second escape char escape the \", thus not seeing the \nend of quotes...\nThe following patch seems to do the trick -\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 3aeb47b..39c672e 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -1990,6 +1990,10 @@ static Bool IsInQuotesorComment( Lexer * lexer )\n          }\n          else\n          {\n-            if (( c == '\\' ) && ( prev == '\\' )) {\n-                prev = 0;   /* use up the escape /\n-                continue;   /* 5.1.12 #65 (1642186): Ignore an \n  'escaped' escape ;=)) example \"+\\\" /\n-            }\n            if (( prev != '\\' ) && (( c == '\"' ) || ( c == '\\'')) )\n            {\n                /* deal with 'unescaped' quote chars \" or ' */\nMaybe you will get a chance to cut in the patch, and\ngive it a try...just 4 lines...\nStill doing some more testing, but hope to shortly push\nthis and bump the version to 5.1.12...\nAnyway, again thanks for testing and reporting on tidy...\nRegards,\nGeoff.\nOT: Had a look at edbrowse... looks interesting...\nstarted a windows port, commencing with creating a\nCMakeLists.txt to handle the configuration and generation\nstep, getting me (native) MSVC solution files, or unix\nmakefiles, or xcode, etc... but had to back up to handle\nsome dependencies... found my CURL and PCRE installs...\npresently looking at 'readline'...\n. Hi Chris,\nYup, forgot other tags use this GetCDATA() service...\nwill now will only skip-quotes for the script container...\nJoined this fix with the previous, bumped to 5.1.12,\nand pushed...\nYou may need to undo your patch before the pull to\nupdate... changed the wording a little from my previous patch.\nHope you can keep at it, testing, until this new feature, skip-quotes,\nis as close to 100% perfect as code can ever be ;=))\nHave attached the 5.1.12.patch just to review the changes,\nbut you will not need it if you update your repo... maybe -\n$ git stash # stash all local changes\n  $ git pull  # update repo...\nThanks again.\nRegards,\nGeoff.\nAttached: 5.1.12.patch\n. @CMB after a little more testing have pushed a fix, but in the comments accidentally put #64 instead of this 65 ;=((\nSee commit https://github.com/htacg/tidy-html5/commit/04ca4190807b91772e228107d75f6b9818c4b7ad\nAnd yes, when hammered out will add some samples to the test/ sub-directory...\nHope you can keep up the testing ;=))\n. @NoNoNo @HoffmannP @CMB @hoehrmann and all, the approach I took of trying to parse the script is running into big TROUBLE! Sorry...\nAs someone predicted along the way, this trying to parse <script>, and maybe <style> for exceptions is filled with danger... now is the time for them to say I told you so... but let's move on...\nSo I have switched back to the issue-65 branch to experiment with change before committing them to the stable master...\nThe simple idea now is to not increment a container count. This would only apply only to <scrip> and <style> tags, and only when the --skip-quotes yes option is enabled... so is very limited in effect...\nIt seems this would eliminate, or at least reduce the problem count ;=))\nTo test this version you need to -\n$ cd tidy-html5\n$ git checkout issue-65\n$ git pull\n$ cd build/cmake\n$ [optional] cmake-clean *\n$ ./build-me.sh\n$ ./tidy -v\n$ HTML Tidy for <OS> version 5.1.14.EXP1\n- this make-clean is a script I have to completely blow away all the last build. You should at least delete CMakeCache.txt... Although most build systems take good care of dependencies, it is a good idea to do this occassionaly...\nOnly this branch contains this change... it is experimental!!! \nPlease find the time to checkout this issue-65 branch, and participate in fixing this very old problem in tidy... thanks...\nHistory\nThis has got nothing to do with supporting HTML5... tidy has this problem before this HTACG fork of SF CVS tidy...\nAs documented it seems this change occurred in a cvs change by @hoehrmann as sf cvs rev 1.85, Apr 9 2003, but there is no clear information that keeping track of the container openers, and expecting the same number of close tags is beneficial, or needed, at least for style and script tags..\nThat push did fix another bug 443678... there is a test case input/in_443678.html - https://sourceforge.net/p/tidy/bugs/98/ - all now closed... and this version 5.1.14.EXP1 continues to pass that test. Seek verification.\nBut why this addition of keeping track of container openers? And then seeking an equal number of container closes before exit?? There seeems no old test case or bug number for this???\nThis is clearly parsing the data in the GetCDATA() service as HTML, instead of just looking for the first exposed </script> or </style> to stop the parsing, and return a text node to be attached as a child node of the container...\nCurrent issue-65 branch\nEssentially any attempt to parse <script> or <style> has been abandoned. PHEW ;=))\nNow the only change in GetCDATA() is -\n1. establish a Bool nonested = ((nodeIsSCRIPT(container) || (nodeIsSTYLE(container))) && \n       cfgBool(doc, TidySkipQuotes)) ? yes : no;\n2. if nonested is on, avoid an increment of nested with if (matches && !nonested)\n               nested++;\nNow Chris set up 5 test cases... thanks Chris -\nhttp://the-brannons.com/test.html\nhttp://the-brannons.com/test2.html\nhttp://the-brannons.com/test3.html\nhttp://the-brannons.com/test4.html\nhttp://the-brannons.com/test5.html\nAll these 5 cases now seem no problem, with or without setting the option on. They were all problems introduced by attempting to do parsing of a script. Now all pass. To be verified.\nNow there is one test case already in the repo, namely input/in_1642186-1.html. It will fail without setting the --skip-quotes yes, and passes with this option. Need verification.\nAlso if this turns out to be the solution!, we may want to re-name the skip-quotes option to something more appropriate. Still thinking of a better name. Maybe just skip-nested? Suggestions welcome.\nThis suggested change, in branch issue-65 needs to be tested! \nPlease help with that...\n. Karl gave me a sample which still has a problem with version 5.1.14.EXP1 -\nhtml\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>script bug in EXP1</title>\n<script>\ndocument.writeln(\"<script language=JavaScript> var foo = bar; <\\/script>\");\nvar a = \"<\\/script>\";\n</script>\n</head>\n<body>\n<p>para 1</p>\n</body>\n</html>\nThis is because when the nonested option is on, then the <script...> text found does not increment the nested variable... it stays zero...\nThus when escaped close tag text <\\/script> is found, then no longer need to still treat it as a close tag just to do the nested decrement...\nIn fact since nested is already zero, tidy will treat this escaped tag as a real close tag, with catastophic consequences...\nThe above sample html passes the W3C validator, no problem...\nThanks Karl for finding this...\nHave bumped to version 5.1.14.EXP2, note the 2, for this fix, so make sure you do $ git pull before re-building, and testing...\nThis issue-65 branch still needs more testing!\nAs stated, please help with that...\n. @CMB thanks for testing and reporting...\nI too have continued testing, and this fix is starting to feel very solid ;=)) \nAs @NoNoNo reported, my original patch was 5 plus years ago, and his original report now nearly 3 years ago, so this is not before time...\nThere are some small related matters outstanding -\n- Name of options - the present --skip-quotes yes does not feel exactly right, and \n- Add some more of tests in its various forms...\nBut will consider closing this shortly...\n. Note the issue-65 branch has now been merged into master, so this issue-65 branch is now dead and will eventually be removed.\nStill to address the 2 related matters, but this will now be in master, so will leave this open for a while longer...\n. Added some more tests to 1642186-1, and adjusted testbase directory accordingly...\nJust the name of the option remaining... as previously mentioned, considering skip-nested... \nThus changing the enumeration to -\nTidySkipNested,      /**< Skip nested tags in script and style CDATA */\nAnd the XML help text to -\n{TidySkipNested,\n   \"This option specifies that Tidy should skip nested tags \"\n   \"when parsing script and style data. \"\n  },\nWill effect this change in a few days, unless a better idea is presented...\nA final consideration is whether to default this option to on. This allows tidy to deal with all types of script and style data format. Other than test 1642186-1, there is no other test of this script and style tags data format, so defaulting to on does not effect any of the other some 227 tests.\nAs also discussed above this stops tidy rendering a disaster in certain cases on files that usually pass the W3C validator. Why would anyone want such a wrecked document by default? \nAnd, in hind sight, why would tidy need to keep track of such nested html while in parsing script or style data? Now this seems wrong in principal.\nThere seem all pros for defaulting to on!\n. @NoNoNo @HoffmannP @vielmetti @CMB @balthisar - Effected name change, and default to on... \nOnly what? 8 years in the making ;=))\nI think this can be closed in a few days, if no direct feedback...\n. As you may know the active development is in branch develop-500\n$ git checkout develop-500\nThe branch uses only cmake to generate the Makefile...\nIf you get a chance it would be appreciated if you could checkout this branch, compile and try an install...\nAnd if no problems close this issue...\n. Thanks for the report... Sorry for the delay in response...\nAs you may know the latest devlopment branch is develop-500\n$ git checkout develop-500\nBut in checking the latest code, this 'bug' is still present, while after building a input test sample based on yours above with the added head item -\n<meta charset=utf-8>\nthe sample passes the validators... and then found w3.org documentaions supporting 'svg', so will work on adding svg support, and advise when done.\n. Basic support for svg tag added in version 4.9.7 in the develop-500 branch...\nA big thank you to Ger Hobbelt who had implemented this in his htmltidy fork with some attribute table additions, and some parsing services, which needed only minimal changes to cut into tidy5.\nStill to review the supported attribute table, and perhaps extend, fix the list...\nAfter this table review and testing this should be closed...\n. Just to understand more exactly what you are asking for here can you give a few samples of what you get from tidyNodeGetText, and then show what you expect...\n. Hi daurnimator,\nThanks for the quick reply, and the code to boot ;=))\nAnd if I get a chance I will test your code, and perhaps add it as a simple sample of the use of libtidy, if you have no objection.\nNow I understand what you want very clearly, but at present Tidy has no such API service ;=((.\nBut it would not be difficult to write/add... Look in entities.c. At present all services there are 'private' library services... including the static entities table...\nSo perhaps add to the API with something like, remembering libtidy is C, NOT C++ - CODE NOT TESTED!\ntidy.h\n/** Get entity code point from name */\nTIDY_EXPORT Bool TIDY_CALL tidyGetEntityCode( ctmbstr name, Bool isXml, uint* code, uint* versions );\nentities.c\n/** Get entity code point from name */\nBool TIDY_CALL tidyGetEntityCode( ctmbstr name, Bool isXml, uint* code, uint* versions )\n{\n    /* little bit of versification - avoid an assert */\n    if ( !name || name[0] != '&' )\n        return no; /* failed */\n    if ( !code )    \n        return no; /* failed */\n    if ( !version )\n        return no; /* failed */\n    /* see what we get */    \n    return TY_(EntityInfo)( name, isXml, code, version );\n}\nNow, in your 'main' you could process the text buffer, replacing the entities with their code...\nAfter coding and testing you could do this as a Pull Request, or even just a simple diff patch file, and I would add it...\nIn this way we would BOTH gain a new service ;=)) at least for entities 'known' by libtidy...\nRegards,\nGeoff.\n. Didn't look that deep... maybe you are right...\nBut if you are right, then would still need an API extension, something like tidyNodeGetRawText or something... since the current API is intended that the text be placed in a html file, thus needs to be encoded... will get around to checking further...\n. @daurnimator no problem... shows I do not know the API as well as perhaps I should ;=))\nYes tidyNodeGetValue returns the data exactly as in the lexer - straight strcpy to the buffer.\nHave added a little to your sample API usage, tested, and pushed it in the hope it will help others... Thanks.\n. Have been reviewing the test list of tidy, and find this fix now causes a FAIL in alltest.cmd for test 795643-1, and maybe others...\nIn the test list, testcases.txt, is listed as -\n795643-1 1\nThat means one expects tidy to exit with a warning, but with the current fix it now exits 0!\nThe test is on a fragment, input\\in_795643-1.html\n<p>Hi</p>\nAnd the config is given as, input\\cfg_795643-1.txt -\nshow-body-only: auto\nThe history of this option is given in -\nhttps://sourceforge.net/p/tidy/feature-requests/184/\nArnaud added this case -\nin_795643-1.html 1.1 7 years arnaud02 http://tidy.sf.net/issue/795643 - show-body-only as AutoBool\nThus this test suggests a warning SHOULD be issue for 'auto'.\nThe present patch only issues a warning if --show-body-only no\nI now think the macro should be -\ndefine showingBodyOnly(doc) \\\n(cfgAutoBool(doc,TidyBodyOnly) == TidyYesState) ? yes : no\nSuggested patch :-\n```\ndiff --git a/src/parser.c b/src/parser.c\nindex 32dfaaa..ec0a950 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -4504,27 +4504,9 @@ static void AttributeChecks(TidyDocImpl doc, Node node)\n }\n/\n-  Need to know to avoid error-reporting\n+  Issue #72 - Need to know to avoid error-reporting - no warning only if --show-body-only yes\n  /\n-Bool showingBodyOnly( TidyDocImpl doc)\n-{\n-    Node node;\n-\n-    TidyTriState bodyOnly = doc->config.value[TidyBodyOnly].v;\n-\n-    switch( bodyOnly )\n-    {\n-        case TidyNoState:\n-            return no;\n-        case TidyYesState:\n-            return yes;\n-        default:\n-            node = TY_(FindBody)( doc );\n-            if (node && node->implicit )\n-                return yes;\n-    }\n-    return yes;\n-}\n+#define showingBodyOnly(doc) (cfgAutoBool(doc,TidyBodyOnly) == TidyYesState) ? yes : no\n/*\n   HTML is the top level element\n```\nCan I push this? \nAfter which tidy passes test 795643-1, and still issues no warning if --show-body-only yes, which seems to be the essence of this issue... so it remains closed...\n. As you may know the current development is in the develop-500 branch -\n$ git checkout develop-500\nand issues can only be tested against this branch at present...\n1: First a simple sample, input5\\in_88-2.html, input\n<!DOCTYPE html>\n<head>\n<meta charset=utf-8>\n<title>markup inside a code block should be ignored. #94</title>\n</head>\n<body>\n<div class=\"running-text comment\">\nbefore >> between << after\n</div>\n</body>\n</html>\n2: After this is processed by the above dev5 Tidy, input5\\in_88-3.html, output\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>markup inside a code block should be ignored. #94</title>\n</head>\n<body>\n<div class=\"running-text comment\">before &gt;&gt; between &lt;&lt;\nafter</div>\n</body>\n</html>\nSo note that Tidy5 has converted the < and > to &gt; and &lt; entities.\nFor sure the 1: will NOT pass the validator, but the 2: tidied version will!\nThis is part of the 'silent' fix-ups that tidy has always done for you, so this \nis NOT a bug, but a feature of Tidy ;=))\nYour orignal sample contains invalid UTF-8 characters so Tidy does issue warnings for those...\nIf you get a chance to pull the latest dev5, build and test the latest, appreciate you closing this issue if all is corrent.\nNote that the link to install Tidy5 no longer exists, but I hope we will soon get around to posting binaries somewhere so you can still test even if you are unable to build tidy5 yourself from source.\n. Yes, it is SAD ;=))\nCan confirm it is the same for del, and has been like that in Tidy since probably long before the last 2009 release...\nI note that in Dict tag_defs[] that they are marked as CM_INLINE|CM_BLOCK|CM_MIXED, thus when a p is encountered, marked as CM_BLOCK|CM_OPT, the ins will get copied to inside the block... and will repeat that process each time tidy is run... not good... \nNormaly these elements should be only inside the block, not surrounding it... but will see what can be done...\n. Fixed! Although marked as CM_INLINE, also marked CM_BLOCK, should not be stacked for later insertion. Added nodeIsINS(n) and nodeIsDEL(n) macros, and in IsNodePushable(n) returns no \nif either of these... This could possibly apply to others... And left remnants of my first fix, as a point where to avoid insertions... The comments are marked Issue #92:\nThis is only in develop-500 branch -\n$ git checkout develop-500\nAlso on the march to release 5.0.0, have reset the version to 4.9.1, intending to bump the point for each fix along this road so issues can address a specific version.\nAfter testing, If found fixed, appreciate if this LONG STANDING bug could be closed... phew!\n. As you may know the current development is in the develop-500 branch -\n$ git checkout develop-500\nand issue can only be tested against this branch at present...\nHave you tried the config option -\n--show-errors 10000\nor more if required ;=))\nI guess it would be nice to perhaps have say a --show-errors -1 to disable this count check... \ndoes our config 'integer' parser correctly decode -1? DRAT, no, it checks for digits, \nand squawks about a '-' sign... well the comment on the ParseInt(...) is /* unsigned integers */\nso that is expected...\nSo will have to think more about 'disabling', but meantime a LARGE integer should \nwork... Hope you get the time to pull the latest, and advise... \n. @geeljire, @balthisar, constructed a test with 26 errors, and by default only the first 6 are shown.\nHowever, adding --show_errors 10000 and all 26 are shown, so this achieves what is requested.\nIt is no longer necessary to checkout develop-500 branch. All the latest is now in the default master branch as we head for a 5.0.0 release...\nI'll close this issue, but feel free to re-open, or open a new issue on any other problem. Thanks for reporting...\n. Thanks for your post...\nAs you may know the current development branch is develop-500\n$ git checkout develop-500\nand issues can only be tested against this...\nTidy does understand 'something' about pre and code, and \npasses my small sample, input5\\in_94-2.html, taken from the W3C site -\nhttp://www.w3.org/TR/html5/text-level-semantics.html#the-code-element\n<!DOCTYPE html>\n<head>\n<meta charset=utf-8>\n<title>markup inside a code block should be ignored. #94</title>\n</head>\n<body>\n<pre><code class=\"language-pascal\">var i: Integer;\nbegin\n   i := 1;\nend.</code></pre>\n</body>\n</html>\nThis passes through tidy without problems, and the W3C validators...\nHowever, I can not find any W3C documentation that says \n\"markup inside a code block should be ignored\", and \nexpanding the above closer to what is in your sample,\ninput5\\in_94-3.html, yields validator error, as in tidy -\n<!DOCTYPE html>\n<head>\n<meta charset=utf-8>\n<title>markup inside a code block should be ignored. #94</title>\n</head>\n<body>\n<pre>\n<code class=\"xml\">\n<feed xmlns=\"http://www.w3.org/1999/xhtml\">\n  <title>Alice's posts</title>\n  <entry>\n    <id>foo</id>\n    <author>\n      <name>alice@example.com</name> \n      <id>acct:alice@example.com</id>\n    </author>\n    <published>2012-06-01T12:00:00Z</published>\n    <content>This is my newest post!</content>\n  </entry>\n</feed>\n</code>\n</pre>\n</body>\n</html>\nValidator says:\nError: Element feed not allowed as child of element code in this context.\nTidy5 says:\nline 9 column 1 - Error: <feed> is not recognized!\netc...\nSo I have to ask what are you expecting here? Can you construct a \nsmall sample that passes the W3C validators, and FAILS in Tidy5?\nThis would be a Tidy bug ;=))\n. Thanks for your post.\nAs you may know the latest development branch is develop-500\n$ git checkout develop-500\nand all issues can only be tested against this.\nNow, concerning nested a elements... maybe it 'should' be legal,\nand a quick browser test seems to indicate they have no problem, BUT -\nIt was stated very clearly in W3C for HTML4:\n12.2.2 Nested links are illegal\nLinks and anchors defined by the A element must not be nested; an A element must not contain any other A elements.\nAnd for HTML5 it is a little different, but basically similar...\nhttp://www.w3.org/html/wg/drafts/html/master/single-page.html#the-a-element\nhttp://www.w3.org/TR/html5/text-level-semantics.html#the-a-element\nTo quote (my emphasis): \"The a element may be wrapped around entire paragraphs, lists, tables, and so forth, even \nentire sections, so long as there is NO interactive content within (e.g. buttons or other links).\"\nAll three of your samples FAIL in the W3C validators, with -\nError: An a start tag seen but an element of the same type was already open.\nSo to me the real problem here is that the current Tidy 4.9.++ passes \nyour third example, and clearly it should NOT! If you do not beat me to it \nI will get around to posting a NEW issue, something like -\nNested a elements pass without error!\nusing your 3rd sample...\nAnd while Tidy does get into a MESS on your samples 1 and 2, erroneously citing \nthe sub and cite elements, that would be fixed when fixing the above no nested \ninteractive content problem...\nAnd just to prove, sub, sup and cite are no problem to dev5 Tidy, try my input\\in_95-4.html sample, containing -\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=utf-8>\n<title>should be legal #95</title>\n</head>\n<body>\n<p>This text contains <sub>subscript</sub> text.</p>\n<p>This text contains <sup>superscript</sup> text.</p>\n<p>This text contains <cite>cite</cite> text.</p>\n</body>\n</html>\nwhich also passes the W3C validators...\nSo in summery, I think this should be closed after you try the above test and a new issue about nested a opened...\n. As you may know the latest development branch is develop-500\n$ git checkout develop-500\nand issues can only be tested against this branch.\nIn testing with this branch I find whether --omit-optional-tags no,\nthe default, or with --omit-optional-tags yes, the a elements are output\nin a single line separated by a space.\nAnd even testing with the last 2009 release of tidy, of course not using \nomit-optional-tags since it did not have that option, they are also \noutput in a single line...\nInput:\n<!DOCTYPE html>\n<html>\n<head>\n<title>omit-optional-tags makes a elements output in a single line separated by space #97</title>\n<meta charset=\"utf-8\">\n</head>\n<body>\n<a>something</a>\n<a>something</a>\n<a>something</a>\n</body>\n</html>\nOutput, adding --tidy-mark no, and --show-info no, the default\n--omit-optional-tags no\n<!DOCTYPE html>\n<html>\n<head>\n<title>omit-optional-tags makes a elements output in a single line\nseparated by space #97</title>\n<meta charset=\"utf-8\">\n</head>\n<body>\n<a>something</a> <a>something</a> <a>something</a>\n</body>\n</html>\nOutput with --omit-optional-tags yes\n<!DOCTYPE html>\n<title>omit-optional-tags makes a elements output in a single line\nseparated by space #97</title>\n<meta charset=\"utf-8\">\n<a>something</a> <a>something</a> <a>something</a>\nPlease check again using the develop-500 branch, and if no change \nwhen adding omit-optional-tags please close...\nThanks for your post.\n. The latest development branch is develop-500\n$ git checkout develop-500\nAt this development stage have left out of the cmake script automated document building... so you should have no problem building and installing now... Please check and advise... and close if ok...\nAs we move towards a 5.0.0 release perhaps some of this will be restored, in which case this can be re-opened if there remains a problem...\n. Glad it compiled ok ;=))\nDo not know anything about Homebrew formula...\nOn reading around seems something to do with an\nApple package manager, or ??? and the formula\nis brewed in brew? But no idea really...\nCan only leave this to an Apple person to\naddress... maybe in build\\apple or something...\nif needed in addition to cmake...\n. Please note the latest code is now in the master branch, the default, as we head towards a 5.0.0 release - $ git checkout master; $ git pull\n. As you may know the current development branch is develop-500\n$ git checkout develop-500\nand all issues can only be against this branch for the moment...\nIt uses cmake for configuration and generate the Makefile files... \nAnd adding an uninstall target is certainly still on the list of things to be done...\n. @forthrin, @LudovicRousseau, @aristidesfl, @eric-brechemier have looked carefully at the Wiki/CMake_FAQ, but it does seem a lot for little gain ;=().\nFirst as pointed out, building and installing from source has a simple way to achieve this, namely the xargs rm < install_manifest.txt for unix/MAC systems. And for windows, if an install is done, then again this files lists what needs to be deleted.\nSecond, others who install tidy using the DEB/RPM packages have dpkg -r or -P package, or selection in say the Synaptic Package Manager. And using the EXE/MSI windows installer, does include an uninstall, as normal, in Control Panel - Programs and Features...\nSo it seems unnecessary to provide a 'make uninstall' target. And hope any build/install problems mentioned in Issue #99 have now been fixed.\nAlso note the latest code is now in the master branch, the default, as we head towards a 5.0.0 release - $ git checkout master; $ git pull\nI'll close this issue for now, but feel free to re-open, or open other issues. Thanks for reporting...\n. As you may know the current development branch is develop-500\n$ git checkout develop-500\nand issue can only be against this branch...\nThis branch has a dependency on cmake, and little else at present... Try it out...\n. @korjavin, @baptistelabat, @eric-brechemier, this has now been fully added to the cmake process, and only if xsltproc is found will the man page be generated. And cmake will issue a WARNING if in UNIX and xsltproc is NOT found. Without it no man page can be generated.\nWidows on the other hand uses a completely different set of tools, sources, and output to generate 'help' files, but these are usually only for GUI apps, not command line tools, so nothing to do for windows a this time.\nAnd note the current stable source is in the master branch, as we head towards a 5.0.0 release - $ git checkout master; $ git pull.\nSo I'll close this for now, but feel free to re-open, or open other issues. Thanks for reporting...\n. Thanks for your post...\nAs you may know the current development branch is develop-500\n$ git checkout develop-500\nIssues can ONLY be tested against this dev5 branch...\nBut to confirm this was certainly a regression BUG ;=((\nTidy 'knew' to move a leading space from the a text, if any, and \nadd it as a trailing space to the previous text, if none... quite a neat \ntrick to preserve the browser view, while still removing spaces \nfrom text in general...\nIt was caused when the 'parser' for a TidyTag_A tag was changed from \nTY_(ParseInline) to TY_(ParseBlock). I have now changed it back to \nTY_(ParseInline), and the problem is FIXED.\nThis change was inherited during the merge of tidy-fork, thus occurred \nsometime deep in the tidy-fork history, but was unable to track down WHO or \nWHY this was changed, even after reviewing the full history log, except to \nknow that I did not change it...\nAs always, one hopes it does not have other consequences, but that is \nwhat all this testing, testing, testing is about... \nHave bump the version to 4.9.2 for this important change. And moved this \nversion out to a version.txt file... for easy incrementing...\nIf you get a chance hope you can pull this develop-500 branch, and test \nagain, and if ok, close this issue.\nThanks again...\n. Yeek, being the coder, who long ago now, spent quite some time on improving \nTidy's ability to clean out lots of that conditional stuff, especially \nthat produced by Word 2000, hence the word-2000 option, I would very unlikely \nbe the person to now, what exactly?, partially avoid some things ;=))\nAs to re-writing Tidy in other languages, I can only say \"have a go!\"... but \nI was not aware C/C++ devs were a dying breed ;=))\n. @simonwiles @marcoscaceres @sideshowbarker on reviewing this issue seems there is nothing for me to do as a C code at this time ;=)).\nSo I'll close this, but feel free to re-open, or open new issues. Thanks for reporting...\nAlso note the latest and greatest is in the master branch, as we head towards a 5.0.0 release.\n. Thanks for the post. Researched quite deeply into this... naturally in the develop-500 branch...\nOn finding '=' while searching for div attributes tidy clearly indicates this with the warning -\nWarning:  unexpected \"=\", expected attribute name\nAnd the next thing found is the '\"', and again tidy squawks\nWarning:  unexpected or duplicate quote mark\nSo even IF tidy remembered it got an '=\"', which could be taken as an indication the the attribute name was missing, div supports some 16 global attributes, one of which is class, and perhaps some 80 others attributes... \nHow could tidy 'decide' that the html writer meant class in this case, as opposed to the some 95 others??? Even as a default choice...\nAnd what happens afterwards in this BAD case in anyone's guess... and while I too may not like the fix-ups and output after this mistake, I do not see anything I can do about that!\nTo me Tidy does some great fix-ups, but can not read minds ;=))\nNo, I think we have to reject this as a feature request... just too impossible for tidy to GUESS... and do not think it is a bug!\nWill leave it open for a while in case others want to try something... Maybe need another label like 'Feature Rejected', always meaning 'at least for now' ;=))\nRegards,\nGeoff.\n. Please checkout develop-500 branch, and build, test if you get a chance...\nDoes this now 'conform' reasonably well with the usual --version output?\nWhen this branch is 'tested' it will eventually be merged into the master branch, and of course the word 'experimental' will be dropped...\n. @raphaelgoetter @balthisar @wraybowling I certainly agree that maybe there are good reasons for an option to pretty printing using tabs instead of spaces. Why not!\nHow about one of you, or any others, code this? I will certainly help where I can...\nWhile the master branch is headed for a 5.0.0 release, this could be done in say a with-tabs branch for later merging after testing...\nSome quick pointers...\nAdding an option like --use-tabs, TidyUseTabs\nPick an existing boolean option like say wrap-sections, and on searching for this find the enumerated tidy option, TidyWrapSection is this case.\nA global source search for this reveals just 4 places where is is used -\n1. enumeration - include\\tidyenum.h(141):  TidyWrapSection, /**< Wrap within <![ ... ]> section tags */\n2. configuration - src\\config.c(264):  { TidyWrapSection, PP, \"wrap-sections\", BL, yes, ParseBool, BoolPicks },\n3. help text - src\\localize.c(792):  {TidyWrapSection,...\n4. use - src\\pprint.c(1723):  Bool wrapSect = cfgBool( doc, TidyWrapSection );\nNote the special doxygen comments in tidyenum.h, which are later used to build tidy documentations, along with the 'help text'... just follow the samples...\nThis particular option default to 'yes', while we might want --use-tabs to default to 'no'.\nChanging the ouput\nNow, in the pprint.c module - Bool useTabs = cfgBool( doc, TidyUseTabs ); can be used anywhere needed to determine what indent to add...\nThe pretty printer uses two levels of output. The string is first added to a buffer, which grows in size as output is added. Only on the flush-to-file service is the accumulated string written out, and the used buffer length zeroed.\nSo this useTabs could be used to either alter what is added to the buffer, indent spaces, or tabs, as the out string is built, or possibly just review and change the buffer from spaces to tabs when flushing the output. The former is probably the better way to go, but the latter offers a sort of quick fix.\nThen tidy would have a --use-tabs option ;=))\n. @raphaelgoetter, @balthisar, @wraybowling, @Acecool, @hoehrmann, @Vittorio, and others...\nAlso see a related, very OLD Feature Request on sourceforge - https://sourceforge.net/p/tidy/feature-requests/3/\nI have now looked carefully into this, and it would be relatively easy to implement ;=)) In pprint.c the leading indent spaces are only output in 3 places, as -\nfor ( i = 0; i < spaces; ++i )\n            TY_(WriteChar)( ' ', doc->docOut );\nThese 3 instances could be changed to -\nstatic unit indent_char = ' ';   /* indent character to be used */\n  /* then each instance changed to - */\n        for ( i = 0; i < spaces; ++i )\n            TY_(WriteChar)( indent_char, doc->docOut );\nAnd then the config input could set this indent_char...\nOr these 3 outputs could be re-directed to a single new service, like -\nvoid TY_(WriteIndent)( StreamOut* out, uint spaces );\nAnyway that's just a question of style, but I have two (2) question that I would seek comments on :-\n1. What should the new option be called? I suggest --indent-with-tabs yes. The default is no.\n2. How tab output should treat the current indent length, --indent-spaces integer, default is 2.\nQuest 1: @hoehrmann original 2001 post suggested indent-char: space|tab|none. Well this is another possibility, but I do not know what the none would mean! Would this just be another way of writing indent: no, which is the default, or what? That is why I now suggest the simpler indent-with-tabs: yes|no, again default no.\nQuest 2: number of tabs - The simple idea would be to treat this as the number of tabs to output for each indent level, but this length presently defaults to 2, so that seems faulty... \nOne idea would be to re-set this to 1 on reading indent-with-tabs: yes, but this would require a new service just to deal with this.\nThis is not a bad thing, since the simple 'yes' or 'no' option, could also simply change the indent_char from the default space to a tab, and vice versa, so this extra decode service could also do that...\nAnother idea would be to take this length as a tab unit length. So then the level 1 indent of 2 spaces, means 1 tab is output; a level 2 indent of 4 spaces, means 2 tabs are output, etc, etc... \nThat is the current uint spaces = cfg( doc, TidyIndentSpaces ); is used as a divisor, if > zero, to get the count of the tabs to output... this is what I presently favour...\nWould certainly appreciate some input... thanks...\nI intend to implement this probably this weekend. Probably not before time given the 14 years or so that @Vittorio mentioned in his recent post, jokingly I hope ;=))\n. @CTimmerman thanks for your comment. I tend to agree with you that the value of indent-spaces: 1 should be used as a simple count of tabs per level of indent. And in implmenting this feature, I now re-set indent-spaces to 1, just in case the user forgets. Of course supsequent indent-spaces options can set it to what the user wants...\nBut since there are likely to be some debatable points about all this, I have implemented my first cut in a new branch indent-with-tabs. Only after this is tested will I merge it back to master.\nTo get this branch you only need to do $ git checkout indent-with-tabs. This should switch your local clone to this branch, and you may need to do $ git pull to make sure you have the latest in that branch... then cmake and compile as normal...\nSo far in testing everything looks very good in normal html output ;=)) \nAs expected tabs will be used as the indent character, increasing for each level. All leading space of tags and text has been stripped, so the indent using tabs is fine. And as you point out most modern text editors allow us to set the tab expansion size in the view, and like you I tend to use 4 for this.\nThe problem I see at the moment is say in the script tag. In here, if say you have used tabs to indent the script, and if you have not changed the (TidyTabSize) default --tab-size 8, then these tabs will be expanded to 8 spaces. But even if you set --tab-size 0 to disable this expansion, or have indented the script code using spaces, then there are some weird things still happening!\nThis script code is presently output as text, but in this case the original leading spaces (or tabs) have been retained for the output. And there are some special services to count any existing leading space, to make sure the indent is not just added to that...\nIf this is not done then you get what I call creaping indent ;=() \nThis is where you are now tidying using a previously tidied output, and if not careful, a new indent will be added to the last, now retained input indent. Thus the 2nd tidied output will not matched the tidied input... things will continue to march to the right each time you run tidy on the previous tidy output... BAD!\nSo some of these services, like TextStartsWithWhitespace( doc->lexer, node, start, mode );, and IncrWS( start, end, indent, ixWS ); need to be carefully revisited. And this is tied up with the bit-wise mode flag (PREFORMATTED|COMMENT|ATTRIBVALUE|NOWRAP|CDATA) passed around... some work to do here...\nAnd another thing not yet fully tested is how (TidyWrapLen), --wrap 68 will be effected. In the SF posts I read some concerns about this...\nAnyway, this new branch indent-with-tabs is a start to implement this feature after so many years without it ;=)).\nAnd of course it is OFF by default so should only effect those who want to experiment. \nLook forward to futher comments, especially any patches or pull requests against this branch.\n. Note added 'wt' to the version to make it clear this is a --indent-with-tabs version...\n. To give more exposure to this NEW indent-with-tab: yes option have merged the branch into master.\nNow this new option will be present from version 4.9.29 onward...\n. Now have initial support for tab output...\nNo further comments for more than a few weeks so closing this for now...\nFeel free to re-open, or post a new issue.\n. The latest development is branch develop-500\n$ git chechout develop-500\nIt would be appreciated if you would pull, build and test this branch...\nI just did a quick test using your input, and a config of\nmerge-divs: no\ninput-xml: no\noutput-xml: yes\ntidy-mark: no\nAnd I certainly got -\n\n\n\n\nwhich seems correct...\n\nCan you check and confirm if you get the time... Thanks...\n. The latest development branch, develop-500 is now on the repo...\n$ git checkout develop-500\nDoes this branch correctly handle this closing tag?\nIf not could you provide a simple sample, if different to the above, together with the configuration used...\nIf yes, can we close this issue?\n. The latest development branch, develop-500, no longer has any hardcoded make files... it uses cmake to generate the Makefile...\nIt would be appreciated if you could checkout develop-500 branch, build and test, and hopefully confirm this issue can be closed... Thanks...\n. Glad it worked out for you... and thanks for closing this...\n\nHope you get a chance to STRONGLY test Tidy5, and report any BUGS... We do want to head for a new release soonest... Thanks...\n. @jay first just a reminder that the main development branch is now `master`, and may shortly delete the develop-500 branch, although for the moment am trying to remember to keep them equal...\n\nAnd would again apologize for a very tardy response... I hope we can be slicker next time ;=))\n\nI have had a chance to review your simple changes to add a **new** option `OptBoolUnofficial_KeepMySpaces`, and if this is all that is required seems interesting...\n\nOf course you would need to give it a name conforming to the tidy standard, like perhaps `TidyKeepMySpace` invoked by say `--keep-my-space yes`, default being `no`. \n\nAnd I can not see where you used the second option so perhaps this could be dropped...\n\nAnd you would need to git rebase your clone back to `master`, or just delete it and start again since it is not that many changes... and you would need to add the xml information output in localize.c, which documents the meaning and use of the feature...\n\nThen your feature would appear as a Pull Request that I could easily merge and test...\n\nAnyway, as there has been no further comment on this issue in many months, and given that your original issue was raised over a year ago, am closing this for now...\n\nPlease feel free to re-open, or raise a new issue and/or a PR... thanks...\n. Please note the current development version is in develop-500\n$ git checkout develop-500\nAt this time issue must only be against this version...\n\nBut tidy has config items -\nnew-blocklevel-tags         Tag names  tagX, tagY, ...  \nnew-empty-tags              Tag names  tagX, tagY, ...  \nnew-inline-tags             Tag names  tagX, tagY, ...  \nnew-pre-tags                Tag names  tagX, tagY, ...\nwhere you can add custom elements. Is this what you mean?\n\nIf this does not work as expected in the develop-500 branch, then look forward to further comment, especially with a sample html input, the configuration used, the tidy output, html and error/warning text, and the output expected...\n\nMaybe I misunderstand the feature requested, in which case again explain, preferably with sample html usage...\n. @bendavis78 feel free to code a new feature to be added to **libTidy** to fully disable invalid tag and attributes checking...\n\nHowever, it does feels a little contrary to what tidy is about, but such a feature addition would be considered...\n\nAnd remember such custom element additions can be added to a config file, thus removing the difficulty in constructing a command line...\n\nWill close this for now, since there have been no further comments for a few months...\n\nBut as always, feel free to re-open, or open new issues...\n. Also see #225 where `unknown` tags is used instead of `custom` elements...\n. @bendavis78 ok, I can understand in your use case is not very convenient having to add them to the config... although once this file was built up, I am not sure additions would be that frequent...\n\n> Regarding \"contrary to what tidy is all about\", can you expand on that?\n\nHmmm, not easily. To many, Tidy is **not** a validator, although I sometimes use it like that. I have seldom seen a tidied page that does not pass W3C validation. So I pass all my html pages through tidy, choose an indent formatting, add its cute logo, **and** the W3C validation logo, even before I have actually really checked... **and** would probably post an issue if it did fail ;=))\n\nThis is my simple use case, and I suspect this would be the same for many tidy users.\n\nSo the executable console app tidy is a collector of up to 100 options, reads the HTML, tidyParse..., checks for general W3C compliance, but not all, tries to fix where possible, tidyCleanAndRepair and tidyRunDiagnostics, and formats the ouput - pretty print - tidySave... \n\nThat console app uses the **`libtidy`** lirary. Any project that uses that library can ignore **`libtidy`** warnings, or buffer them, and check what is important to it... and from access to the DOM like set of tidy nodes that make up a document, can choose what it outputs... there are many use cases of this...\n\nSo while an option to **ignore** all invalid tags and attributes is certainly very possible, as indicated, it seems contrary to the library, that's all... no strong thing...\n\nAnd I, just as one person, do not yet see a wide use case, so would not be likely to do the coding at this time, but that could change... get more support...\n\nI am always here to help with tidy internal code where I can... and could help others add such an option... would not be difficult...\n\nAs always, discussion, patches, PR all welcome.\n. @Moult, @bendavis78, @qualiware-global, @jrunning, @maxnordlund, @tobie, and others, given the ongoing interest here, I am re-opening this, and giving it a milestone of the next release... or the next...\n\nTo be clear, I am **not** really against such an option, and would certainly consider and review a PR... and as @tobie mentions, it seems they would not be too difficult to `identify`... and as discussed elsewhere, it seems such W3C specs do and can get broad support long before they reach REC status, if ever...\n\nAgain I would mention this [OPTIONS.md](https://github.com/htacg/tidy-html5/blob/master/README/OPTIONS.md) document... just 4 little steps to set down, decide and discuss... then code... then a PR... as is currently happening in #456 / #458 ...\n\nSo who wants to add the `Feature Request` to **Tidy**? As always I would help where I can... thanks...\n. Due to no comments, and no action like a PR, moving this out to the next release...\n\nMaybe in fact it should be closed until someone has the time to do something specific about this issue...\n. @maxnordlund, @morewry thank you for the feedback... this is **much** appreciated, and helps with my ongoing education and understandings...\n\nSince we are considering a 5.4 tidy release, I only moved this to beyond that, since no action had been started... and only babbled about closing ;=))\n\nAs agreed elsewhere, there are times when tidy should support conditions, specification, in a relatively mature W3C working draft (WD), especially if widespread acceptance, since the recommendation (REC) status can be very slow in arriving, perhaps if ever, in some cases, as suggested somewhere...\n\nNow it seems this issue boils down to two things -\n\n 1. support `is` attribute, with a value containing a `-`. Is this allowed on **all** elements? Except `custom-elements`? Refs?\n 2. support `custom elements`, again with a name containing a `-`. See [valid-custom-element-name](https://www.w3.org/TR/custom-elements/#valid-custom-element-name)? With some exceptions...\n\nPlease correct me if I am getting this wrong... \n\nI have just pushed two README files, [ATTRIBUTES.md](https://github.com/htacg/tidy-html5/blob/master/README/ATTRIBUTES.md) and [ELEMENTS.md](https://github.com/htacg/tidy-html5/blob/master/README/ELEMENTS.md) detailing the steps to achieve 1. and 2. resp.\n\nAlthough the 2., in this case, would be a little different, in that it would have to be discovered by an algorithm, a function, rather than exactly matching a string, which presents an small extra challenge... maybe the table string could be like `*-*`, or something...\n\nAnd having said that, I can see why having to add all new `custom elements` to a config file would be untenable, in that it seems html generators can add just about **anything** they fancy, with few exceptions! So maybe this support should be via an option like `--support-custom-tags`, or something... see [OPTIONS.md](https://github.com/htacg/tidy-html5/blob/master/README/OPTIONS.md).\n\nYes, we do strongly encourage PRs... just can not do all this alone... but as seen will help, at least by adding a HOW-TO-README... and there is some discussion that this README information could also be added to a Tidy Wiki, maybe with more actual code example...\n\nAgain, look forward to further comments... thanks...\n. @balthisar hi, well I read it as two separate cases... \n\n 1: the `is` attribute, extending existing `elements`\n 2: custom elements, that can not use `is`\n\nCase 1: \"is\" attribute extension\n\nInput: input5\\in_119-2.html\n\n```html\nhtml\n\n\n\nIssue #119-2\n\n\n\n\n\n```\n\nConfig: input5\\cfg_119-2.txt\n\n```\nshow-info: no\ntidy-mark: no\ndrop-empty-elements: no\ndrop-proprietary-attributes: no\n```\n\nThe only problem with Tidy is the `is` attribute - `line 8 column 1 - Warning:  proprietary attribute \"is\"`, yet that file passes W3C validation - \"Document checking completed. No errors or warnings to show.\", for uploaded file in_119-2.html.\n\nSo it seems tidy should support the `is` attribute extension, and the only verification of the attribute value is that it contains a `hyphen`.\n\nYes, Tidy would not be able to verify, check the attribute value, so would accept anything with a hythen... not the best, but seems what the validator does... so the following seems ok -\n\n```\n\n```\n\nAnd assume tidy would warn/error on say `is=\"nohyphen\"`, or `is=\"too-many-hyphens\"`, etc... full extent of error/warn conditions to be explored, enumerated, decided, ... some work here...\n\nCase 2: a custom element\n\nInput: input5\\in_119-4.html\n\n```html\nhtml\n\n\n\nIssue #119-4\n\n\n\n\n\n```\n\nConfig: input5\\cfg_119-4.txt\n\n```\nshow-info: no\ntidy-mark: no\ndrop-empty-elements: no\ndrop-proprietary-attributes: no\nnew-blocklevel-tags: flag-icon\n```\n\nAgain, this document `in_119-4.html` passes W3C validation, and since I added the new element to the tidy config it nearly passes Tidy with an output of -\n\n```html\nline 8 column 1 - Warning:  is not approved by W3C\nTidy found 1 warning and 0 errors!\n\nInfo: Document content looks like HTML5\nhtml\n\n\n\nIssue #119-4\n\n\n\n\n\n```\n\nA little more complicated, but is really a question of an option like `--support-custom-tags yes`. So yes tidy would then accept even ``, but should reports a warning if ``, and maybe fix it...\n\nYes, I agree such an option seems to reduce some of tidy's **check every element, every attribute and value**, but as we know there are quite a number of other cases where tidy presently does not, can not, do full checking and verification, so long as it is generically right... and in other issues has trouble verifying urls in an a href, and recently an attribute `tabindex={{some code}}` since it expect only a numeric value... etc...\n\nSo I have shown two case where the W3C validator says ok, and tidy blurts out a warning... should tidy try to catch up?\n\nOr have I missed madly the point of your questions?\n\nRegards, geoff.\n. @balthisar so far I have only checkout the branch `custom_tags_wip2`, and ran a few tests, with `--custom-tags yes`...\n\nAs usual, would prefer tidy keeps html4 compatibility, and certainly not generate **bad** html4, even with warnings, or errors. But since we do maintain an internal `mode` would it not be possible to check this? \n\nConcerning the W3C [validator](https://validator.w3.org/), from what I see, and perhaps @sideshowbarker can correct me if wrong, but if you present a document with a legacy doctype, it uses one set of code, but otherwise uses the `nu` code... although I do remember him saying that may change... and of course that is not true is you directly present it to [nu](https://validator.w3.org/nu/), which will not handle legacy documents at all well...\n\nSo this is how I see tidy - legacy vs nu. If it detects a legacy doctype, it will perform one set of checks, otherwise with no doctype, a code snippet, or just `html` will stay in the **default** html5 mode...\n\nSo if we choose to default this option to `on`, like `nu`, then this could be another auto table change if legacy...\n\nSo I ran a test on the following, which passes the W3C validator. Used config `--custom-tags yes -i`, -\n\n```html\nhtml\n\n\n\nIssue #119-5\n\n\n\n\n\n\n\n\n```\n\nAnd I get the message output -\n\n```text\nF:\\Projects\\tidy-test\\test\\input5>tidy5-5.5.5I119 --custom-tags yes -i input5\\in_119-5.html\nline 8 column 1 - Info: detected autonomous custom tag ; will treat as block level\nline 8 column 1 - Warning:  is not approved by W3C\nInfo: Document content looks like HTML5\nTidy found 1 warning and 0 errors!\n```\n\nWell, if the document passes W3C, and we want tidy to agree, why that **warning**?. Either it is approved, per the validator, or, if **not** then why is tidy supporting it? Sort of a mixed message...\n\nLikewise, why the `Info:` message? The user has said support custom tags in the config! Are we going to tell him/her about every custom tag in the document? Why?\n\nI could see the opposite. If `--custom-tags no`, I could see a **helpful** warning like `Warning: detected autonomous custom tag ; use --custom-tags yes to remove warning`, or something like that...\n\nConcerning, `will treat as block level`. But did we? The output was `inline` type...\n\n```html\nhtml\n\n\n\n\nIssue #119-5\n\n\n\n\n\n\n\n\n```\n\nIn general `block` elements, like `` will take a new line... certainly in output it has been treated as `inline`... or am I missing something here...\n\nWill probably know, and understand more after **more** testing... I do understand this is WIP status...\n\nPS: Until we find a better `home` push all my tests to https://github.com/geoffmcl/tidy-test/tree/master/test/input5 ... Would certainly appreciate some more `samples` to try...\n. PPS: This was **before** #514...\n. \n> Correct me if I'm wrong about this!\n\nThis is **wrong**. The **mode** is set after finding a doctype,\nor indeed **not** finding a doctype, at the head of a doc... see\n`AdjustTags`\n\nThis has *nothing* to do with `apparentVersion`, which as you\nstate, is only valid after the parsing, and all bit eliminated...\n\nWould even ague that in tidy5, this `info` should be removed...\nI really **only** added it for debug, and deliberately excluded it\nfrom `--show-info no`... as of now it should also be excluded...\n\nSee IsHTML5Mode... reset in `ResetTags`\n\nWill address other comments later... but it seems important to\nunderstand this *mode* is set almost immediately, and can\nbe used throughout...\n\nRegards, Geoff.\n\nEdit: fix markdown, but still wrong\n. Agree with **all** that I read - good summary of the `VM` of html4, html5, custom tags, - thanks @balthisar, and now into **testing** the `custom_tags` branch...\n\nPushed a cmake fix to allow quick generation of a tidy version 5.5.6.I119 just by passing the command to cmake, `-DTIDY_RC_NUMBER=I119`... If you have anywhere near the number of version I keep, you should appreciate being able to set it to exactly what you want... of course, for this we default to the  static library link, to avoid DLL hell, or shared library dependence for each version...\n\nNeed to construct, maybe two, or more test html, in_119-4.html, and in_119-5.html, to test legacy and html5, for each of the scenarios enumerated here, etc... any help appreciated...\n\nThese should be added to https://github.com/htacg/tidy-html5-tests/tree/master/cases/testbase as case-119-4a.html, case-119-4b.html, case-119-5.html, ... so we could run a **full** regression test suite...\n\nAnd test this branch, address any bugs, like the possibility that the `inline`, `block` do not yet give the expected html output, before merging into stable `next`... At that time you now drop the `RC_NUMBER`, and it is ready for release...\n\nThis feels like quite a step forward, support `custom-tags`... thanks @Moult for opening this on Jul 19, 2014 at 01:31 GMT, and to all who participated with action and feedback... it is exciting... thanks...\n. Certainly agree with an action like the following, or perhaps as a separate `Feature Request` -\n\n> the ability to catalogue the **ACTs** in their documents. No other output.\n\n 1. could be added to tidy.c, our premier **example** of libTidy usage... maybe `-help-custom` would do, or\n 2. we could have a separate `tidy-ACT ` which did exactly that... \n\nI would undertake to write the latter, unless someone beats me to it... it's easy with the libTidy API... and we would help if it is missed...\n\nAnd love that `--show-info no` will block **all** Info: type messages, even the one I exempted so long ago... just for debug... as well as the trailing big blurb, ... that sounds good to me... any will try to test and fix this...\n\nGreat stuff! Thanks...\n. @balthisar, well to me, rather than `screwing things up` you have massively enhanced the [test](https://github.com/htacg/tidy-html5-tests) site! It becomes very usable...\n\nGreat that 5.5.0 equals 5.5.6! That is good, and proof of the testing system we use... thank you...\n\nI would not have bumped `cases/_version.txt`. Something about `stable` since blah, blah... maybe not important...\n\nAs of my last pull, of the `customs_tags` branch, I did not find any new **119** tests, but understand they can take time... thanks...\n. Read this `git clean [opts]` earlier, with **much** interest... my `git status` can show a lot of things, sometimes...\n\nBut have my own `cmake-clean` scripts, that will only clean the `build` directory... Sorry that these are **not** yet shared `globally`... but will try...\n\nCleaning the whole build environment is really needed, now and then... although I must say `cmake` seems to be able to keep track of source change, but also new/changed defines seem to trigger a full build in MSVC...\n\nBut a `clean` environment is always better...\n. Really thanks for these... it really make testing fast and furious ;=))\n\nUsing my Tidy 5.5.6.I119.2 build... as of da55a6e commit...\n\nGet a diff on 431716... it is just about the unknown option: split... I thought we had removed, changed, fixed that, but maybe just in my imagination...\n\nWhile I do not mind **too** much about using diff options `-uwB`, but at the same time can not see why the `expects` are not **set** exactly as they should be... is there some other problem I am not seeing here?\n\nYeah, still to re-create the inline vs block problem I thought I saw... maybe nothing there... and I see you have added it to `119e/f` and maybe others... forget it until I find it again...\n\nSince you providing a conf for each, why do we not add `show-info: no`, at lease to some of them? This repetitive Info: output really adds nothing to the story... and I am still to remove the one I added...\n\nBut this is all looking **great**... Hope others get the chance to check and test... thanks...\n. @balthisar yeah, do not yet know how this `split` problem still exists... maybe a `git rebase master`, or something, ... might add some changes to the  `expected`...\n\nI do **not** think `show-info` is important... just if you are including a `config` file in a test, then why not eliminate all tidy blah, blah, blah, at the end... what does it add? Anything else it does would be a nice addition...\n\nI certainly do not see this as an `exception`, creating a TidyInfo `hidden` output... FUD... rubbish...\n\nNo! When I introduced the `option/flag` **tidy-info**, the single first step was to **not** output the trailing verbiage... no more, or less... it was somewhere between the `default` and `quiet`... \n\nWorked well, in MSVC Debug mode, and helped, eliminating trailing tidy verbage... a quicker review... etc... Absolutely nothing intended to be classified as **HIDDEN**!\n\nAnd, as repeated, ad infinitum... I took the step of **excepting** the final Info:, that I regret, and would like to remove this **blip**... nothing more...\n\nThe six(6) testbase files, in the `custom_tags` branch are **great**, with lots of verbose information about the specific `test` they contain... That is **very** good, and thanks...\n\nBut you did not address the `diff` question... why not set/update the `expected` to the `facts`? Seems no problem... \n\nBut maybe I still miss something... thanks...\n. I still get 12 diffs, in linux and windows... \n\n11 of them are only one newline, and can be removed with -B... the remaining is 431716, unknown option: split...\n\nI tested with a tidy built from the **custom_tags** `branch`... at da55a6e4... I remember seeing at some time a commit with these newlines added... as suggested, maybe it is not yet in `custom_tags` **branch**... am I doing something wrong here?\n\nWow, so much said about `--show-info no`, that I hesitate to go on... I forced that \"Document content looks like HTML5\" to always be output... now so **long** ago... for debug at the time... I will fix that.\n\nDid not follow all your tangents ;=))\n. Not that this is related to supporting `custom_tags`, but can not immediately find an issue for `--show-tags`, so just pushed a **fix** here... thanks...\n\nThere is no urgency on this, it can be merged to `next`, when ever this branch is merged... which I think will be shortly...\n\nOn that, if we can get a clean [tidy-tests](https://github.com/htacg/tidy-html5-tests/tree/custom_tags), `custom_tags` branch, then I think we should do this PR #514...\n\nWhat do you think? In all testing so far it appears `stable`... \n\nI have retested the `inline` and `blocklevel` and so far seen no problems here.. quibble why not `inline`, `block`, or maybe `inlinelevel` - no that's too much...\n\nAny other minor things that may come up, can be dealt with directly in the development branch, maybe under their own issue... thanks...\n\n\n. @balthisar ok, I am getting an **extra** newline added by Tidy 5.5.6I119.3, in the results of 11 cases... starting with 1053626...\n\nTrying to track down where this is added...\n\nExpected output -\n```\nFor further advice on how to make your pages accessible\nsee http://www.w3.org/WAI/GL.\nAbout HTML Tidy: https://github.com/htacg/tidy-html5\n```\n\nBut getting a newline after `WAI/GL.`, that should **not** be there... if someone beats me to it, that would be great... thanks...\n. Presently testing this diff -\n\n```diff\ndiff --git a/src/language_en.h b/src/language_en.h\nindex 2b23455..aac3a3c 100644\n--- a/src/language_en.h\n+++ b/src/language_en.h\n@@ -227,13 +227,13 @@ static languageDefinition language_en = { whichPluralForm_en, {\n         - The URL should not be translated unless you find a matching URL in your language. */\n       TEXT_ACCESS_ADVICE1,          0,\n         \"For further advice on how to make your pages accessible\\n\"\n-        \"see http://www.w3.org/WAI/GL.\\n\"\n+        \"see http://www.w3.org/WAI/GL.\"\n     },\n     {/* This console output should be limited to 78 characters per line.\n         - The URL should not be translated unless you find a matching URL in your language. */\n       TEXT_ACCESS_ADVICE2,          0,\n         \"For further advice on how to make your pages accessible\\n\"\n-        \"see http://www.w3.org/WAI/GL and http://www.html-tidy.org/accessibility/.\\n\"\n+        \"see http://www.w3.org/WAI/GL and http://www.html-tidy.org/accessibility/.\"\n     },\n     {/* This console output should be limited to 78 characters per line. */\n       TEXT_USING_LAYER,             0,\n@@ -262,7 +262,7 @@ static languageDefinition language_en = { whichPluralForm_en, {\n     },\n     {/* This console output should be limited to 78 characters per line. */\n       TEXT_USING_BODY,              0,\n-        \"You are recommended to use CSS to specify page and link colors\\n\"\n+        \"You are recommended to use CSS to specify page and link colors\"\n     },\n     {/* This console output should be limited to 78 characters per line.\n         - The strings \"Tidy\" and \"HTML Tidy\" are the program name and must not be translated. */\n```\n\nJust 3 newline char, `\\n` removed... still in testing...\n. @balthisar also searched deeply for where they were added...\n\nI can see where the `\\n` got added - commit https://github.com/htacg/tidy-html5/commit/11178d775ba22ef52b4cdc881f61447c4b170fec - at least to TEXT_ACCESS_ADVICE1 and 2, and TEXT_USING_BODY text... and no subsequent commit removing them... they are extra...\n\nCan I push the above diff change? To tidy `custom_tags` of course...\n\nIt clears most of the diffs... seems just 2 remain -\n\n - 1642186b - Is a case using `--show-info no`, so just need `expected` updated, for removed debug message.\n - 431716 - warning about `split` not existing. Again seems case of update `expected`?\n\nAlthough the `split` could also be **fixed** by removing it from that specific conf... Which do you prefer? I lean to leaving it there, but easy either way...\n\nGetting close ... thanks...\n. Done... and will update `expects` in **tests** unless you beat me to it ;=))\n\nA question of code: Two times I see `(doc->lexer->doctype & VERS_HTML5)` in the code...\n\nIt is my understanding that `lexer->doctype` will always only contain a single bit... you can **not** have a `doctype` that is this or that... the `doctype` is one!\n\nIn the second case, `doctype` had already been setup, `uint declared = doc->lexer->doctype;`... so if a new variable is created. and nothing wrong with that, would prefer to see `Bool htmlIs5 = (declared == VERS_HTML5) ? yes : no;`, or something like that...\n\nBut really quite minor...\n\nI too think we are **good to go**... thanks...\n. @balthisar not me, but to you, and others, thanks for this **great** step forward...\n\nForget my drivel about the compound type `VERS_HTML5`... must have been **asleep**, or something...\n\nIt should be your honor to push the **green** button for #514 ... and bump the `next` version... and close this... I will move [#10](https://github.com/htacg/tidy-html5-tests/issues/10) forward... create `next`, etc... making live testing easier...\n\nSo **`is`** is born, along with `custom tags`, or **ACTs**, blended with existing the `new-xxxxxx-tags` options, combined with what we hope is an **easier** message system, and various other `goodies` along the way...\n\nOn y va! (let;s go) ;=))\n. @fyiman well that option was added by [commit 5606f32f1](https://github.com/htacg/tidy-html5/commit/5606f32f13be3d9579e544e2282d0746e398feb6)...\n\nAnd I can see a little later in the `$ git log` -\n\n```\ncommit 1dbacc9c43d42679728310d58172b4896b855bf5\nAuthor: Jim Derry \nDate:   Sun Mar 19 08:09:43 2017 -0400\n\n    Bumped to 5.5.7 to support custom tags.\n```\n\nso I guess you need to update from your Tidy version `5.5.6` to use this option...\n\nAt present we have no way of **publishing** later [versions](http://binaries.html-tidy.org/) `officially`, but I guess we should try to think of something... for in-between releases...\n\nI do from time to time make **test versions** available, like http://geoffair.org/tmp/tidy-5.5.31.I567-3-w64-vc14-md.zip... maybe I could put later version there, or somewhere else on my site, like I did [years](http://geoffair.org/tidy/#download) ago... will think about this, and seek feedback and ideas...\n\nHTH...\n. @fyiman well it would be interesting to see if it runs in Windows 7 x64... You may need to install the [MSVC14 2015 redistributables](https://www.microsoft.com/en-us/download/details.aspx?id=48145), if you do **not** have MSVC14 installed... that version 5.5.31 is certainly a `release candidate`, so is stable...\n\n> Is there a new Official release on the horizon?\n\nWell I had rather randomly set the **next** release for mid August, but it turns out I will be away from then until about mid September, so I will get around to resetting the next target release date around **mid September**...\n\nIt certainly does seem about time for a new `official` 5.6 release... a lot of good things have been added during this 5.5 dev cycle...\n\nBut on the other hand we do have some 30 plus issues outstanding, and a few pull requests... I certainly hope some of those can be closed first... but we will see...\n\nAnd still pondering on where to add some `intermediate` versions for testing...\n. With develop-500 branch available for testing I hope we can consider a release in short order, perhaps 1-2 weeks...\n\nWhen we reach that point, I know very little about how to encourage package manager to post the latest, so need help, pointers on this...\n\nAnd I know less about where, how to setup a MAC OS X release... where, what, etc...\n\nAnd then there is a question of where to put Windows binaries? And what binaries to put there, aside from the obvious 32-bit and 64-bit favours? But... \n\nSo again would appreciate discussion on this, but perhaps all this should be moved to the public-htacg list, or all lists?\n. Thanks, will try to check out https://chocolatey.org/  but requires I 'join'...\nIs any tidy contributor already a member, and could handle this?\nAnd what about other windows release site?\n. @deviantintegral, the simple answer is **YES**! With emphasis on 'stable', but not perfect...\n\nAt this moment the master and develop-500 branches are being kept equal...\n\nWe are getting close to the first 5.0.0RC1 release. At this point are trying to take great care that each 'fix' pushed has no other consequences... That is lots of quick backward compatible tests are done... We are still working on 'standardising' these unit tests, so it is not so easy at the moment...\n\nOver the following few days we will try to review ALL issues, open and closed, and if we do not find anything that could be called a 'show stopper', will bump the version to 5.0.0RC1... And will create a \nv5.0.0 branch and tag...\n\nJust for the moment some pretty print output issues will be put on the backburner, trying to concentrate on tag/element html5/html4 issues... but these will be picked up again later...\n\nWe are also still working on providing our own binary download page binaries. You will note it will include a source zip, and hopefully also a tar.gz... each matching the version.txt file in the source. \n\nThis page will always just be in addition to other, more established 'package managers'... and your help with this is much appreciated... I am afraid I have no person understanding of 'homebrew', but advise any way I can help!\n\nWe certainly hope everyone will pitch in with testing and re-testing, and help with other release candidate steps...\n. @mcandre , @Ionic , @strider72 , ... so I have started to try to add tags, but since I am not quite sure how this helps, not sure I am doing it right...\n\nPlease check and advise...\n\nAnd am still `experimenting` with adding a set of binaries to http://www.htacg.org/binaries ...\n\nLook forward to advice on what else to do in this process... thanks...\n. @Ionic well, your post started ok with `Looks okay` ;=)), but after that confused me... and @mcandre, as can be seen below we are more or less following [semver](http://semver.org/).\n\nJust to explain the current idea. We are at a unique point with this repo in that we have yet to declare an 'official' release, although for quite some time now the code here has been **very stable**. with quite extensive **html5** support, we might even suggest **complete**, while maintaining html4-- support!\n\nWhen we do eventually declare a `release` we will create say a release/5.0.0 **branch**, and a similar release/5.0.0 **tag**.\n\nAt that point version.txt will be set to 5.1.0. That is the `master` branch will contain the ongoing development. Any subsequent good bug fixes found for some time after that will be carefully tested and push back (cherry picked I think is the correct term) into the release/5.0.0, making it 5.0.1...\n\nAnd as now, just about each fix, or feature addition to the `master` will bump the version to 5.1.1, 5.1.2, 5.1.3, and so on... even 5.1.4567 if necessary ;=)).\n\nWhen we are ready for the next release, say some 6 months or so later, then a branch release/5.2.0 would be created, and tagged, and the master version.txt moved on to 5.3.0, and so on...\n\nThat is, each `release` will have an `even` second digit, followed by .0, unless any subsequent fixes are pushed back, making it .1, ... probably not many of those... while the `master` develoment HEAD will have an `odd` second digit, followed by .0, incremented for just about each significant code change...\n\nThe intial digit 5 will be maintained while the TidyLib API remains fully compatible, although there may be additions, extensions, as and when these are identified...\n\nGot this `even` = releases, 'odd' = development from reading a few unix articles on various versioning sequences, agrees in general with `semver`, and feel this is quite suitable. But, as always, open to discussion...\n\nAnd throughout this, every effort will be made to keep `master` **stable** at all times, but would expect package managers to eventually really only pick up on the `release` branches, tags. But as @mcandre suggested in the intial post here, due to the time elapsed since the last tidy release, it would be good to get `something` out there **now**!\n\nIn cases of significant code re-writes, major featues added, would propose this be done in branches until they are `stable` enought, and tested enough, to be merge back to `master`.\n\nOf course this all relates to this HTACG repository. We are in ongoing discussions with the maintainers of the sourceforge repo, but this has been slow, with some reluctance on their part. Well, of the 3 have never heard from two of them, so is really presently only 1 active.\n\nWhen, and if, this `joining` is completed, the sourceforge repo would be moved from CVS to git, and brought completely up to date, and kept that way. Or alternatively closing one or the other... but this is still into the future... for now we are here...\n\nSo we too hope package managers will help us make Tidy fully available to a wider audience, starting **now** if possible... And we will do what we can to make this as painless as possible.\n\nSorry for the longish post, but this is an important topic - packaging and releases.\n. I am now trying to remember to push a tag each time I bump the version. But may need a reminder every now and then ;=))\n\nSince there have been no further comment for many weeks am closing this for now, but feel free to re-open or post a new issue...\n. @strider72 thanks for the tag reminder... I had forgotten...\n\nJust pushed tag 5.1.24, with lots of fixes, a few new features, and as always very `stable`\n\nDo I need to do more?\n. @balthisar many thanks, but as can happen I was already working on 5.1.25, now published, after fixing a few of my scripts that help me do this...\n\nSo should I try to generate a 5.1.24 set to match, or could you now add an OS X 5.1.25, and maybe delete 5.1.24?\n\nI guess this can always happen. I was thinking 5.1.24 was a very good candidate just until I found a fix for #307, a regression... you sort of never know what great things are just around the corner!\n. @strider72 maybe @ryandesign (#192) could look at this. I think I now have the release tagging right!\n\nfirst release: https://github.com/htacg/tidy-html5/releases/tag/5.0.0\nlast release: https://github.com/htacg/tidy-html5/releases/tag/5.1.25\n\nThe `master` (stable) branch is now at 5.1.31 and we are considering another release shortly... hopefully within this month...\n\nAt least I know of one distribution that is up-to-date - [AUR](https://aur.archlinux.org/packages/tidy-html5/) - this was done virtually the same day I pushed the TAG... thanks @arthru \n\nWe just wish we could get **all** distros to update! And stay up-to-date...\n. @ryandesign sorry been forgetting some pieces... thanks for the reminder...\n. Also another broken post...\n\nBest regards,\nGeoff.\n. Hi Ionel,\n\nWhat a pleasure to get your email ;=)) It seemed no one was interested \nin furthering tidy so I reverted back to other things...\n\n> what\u2019s new in your version\n\nFirst I swung over the a cmake build which supports cross platform \nbuilding using a wide variety of 'native' tools all through a single, \neasy to maintain CMakeLists.txt. And currently build a WIN32 and WIN64 \nin Windows, and an Ubuntu linux 14.04 64-bit versions of tidy. At \npresent it is quite a basic form, but lots of other cmake 'features' \ncould be added... if needed... One obvious one on my TODO list is to \nsupply the RELEASE_DATE and PLATFORM_NAME from within CMakeLists.txt \n(removing version.h)...\n\nI now have quite a LOT of experience with cmake, and even have a \n'cmake-test' repo - https://gitorious.org/fgtools/cmake-test - where I \nexperiment with lots of different 'features'...\n\nSecond, I gathered as much information from the W3C site, particularly, \nbut not restricted to, \nhttp://www.w3schools.com/html/html5_new_elements.asp... and added about \n30 test files in test/html5 to try to test each of the 'new' elements in \nHTML5, making fixes to the code where it failed... some elements were \n'missing' in the w3c/tidy-html5 source, perhaps deliberately...\n\nThen added about a dozen pairs of html to test elements removed in 5 - \nthe pair consists of the element in HTML4, and then the element in \nHTML5, again adding/fixing code where necessary to get through these \ntests. The idea here is that if the document is found to be HTML4 then \nthere should be no warning, however is found to be HTML5 then there \nshould be a warning (or error), and if tidy is configured to clean, then \nit should try to remove/fix what it can. As you may know tidy has always \nreplaced  with  so some of this was already there... but more \nto do...\n\nThen back to the original nearly 250 'test/input' files, to try to check \nthat the HTML5 additions/changes had NOT badly broken HTML4 and earlier...\n\nHere I started to run out of steam ;=(( With no one to discuss with, \nbounce ideas off, no feedback! There were things that I could not decide \none way or another, so as stated drifted back to other things...\n\n> Is is possible to merge these changes back here?\n\nThat was always intended, but I do not have commit rights to \nw3c/tidy-html5, nor to the original cvs repo, although as you may know \nhave been involved with tidy for quite a long LONG time... but no one \nwas responding, testing...\n\nThe Questions:\n\nMy main concern is how to keep HTML4 and earlier support, while still \nbeing able to handle HTML5, since they do have some contradictory elements?\n\nOf course one course of action would be to separate the library into to \n2 separate libraries, with one specifically for HTML5, and build a tidy5 \napp, but that seems 'ugly'...\n\nIn testing I have been using doctype: html5 to tell tidy to go HTML5 \n'mode', and trigger extra HTML5 checks and fixes, but I think ideally \ntidy should 'detect' this, maybe because the document -\n\n(a) has the HTML5 doctype html\n(b) has a  without a content attribute\n(c) contains new element only in HTML5\nor a combination of these, or other things... but I never got this right...\n\nAnd maybe such a determination that this IS html5 could trigger some \ndynamic changes in the main element/attributes tables, but this seems a \nlittle difficult with the caching of these table element...\n\nSo here we are... I would be willing to put in some more time on tidy, \nbut only if there is a solid feedback channel, and others doing some \ntesting, reporting...\n\nRegards,\nGeoff.\n. Hi skynet, petdance, marcoscaceres,\n\nGood to read and 'feel' some interest ;=)).\n\n# 1: Where should this discussion take place?\n\nI do not think issues #122 here is the right place!\n\nI would whole heartedly suggest tidy-dev/sorceforge\nis where it should be at to -\n\n(a) involve the current maintainer there, arnaud02,\ncharles, and bjoern... and other contributors now\nyears back.\n\n(b) get an email when something is posted.\n\nI can/will not check back at #122 all the time!\nJust too inconvenient...\n\nIonel has been kind enough to cc's me otherwise\nI would not have known about this discussion...\n\nExcept for me, admittedly not much has been happening\non tidy-dev of late, but a discussion like this could\npossibly revive it.\n\nI will try to cross post this reply... and include\nthe replies...\n\n# 2: who can put in coding time\n\nTo repeat, I can, but to also repeat, I can/will not\ndo that in a vacuum ;=))\n\nI have been contributing code fixes since around 2000,\nsome 14/15 years. Maybe longer...\n\nBut I need others to be testing, commenting, contributing,\ndebating... and hopefully some of those will have a\ndeeper understanding of what the w3C wants...\n\nIonel, you mentioned there are 59 open tickets, and 12\npull requests...\n\nWell, I would look at these if -\n\n(a) html-tidy5 is updated to where my tidy-fork is at,\nand those needed are rechecked against the update.\n\n(b) pull requests can only be merged by those with write\naccess... so I would need that access...\n\n# 3: which repo\n\nDo not really care, but would certainly these days\nprefer a .git base repo...\n\n(a) sideshowbarker was new to me, and still to explore\nwhat is there... what is the aim... seems quite\nactive... at least on the 'validator' part...\n\n(b) tidy-html5 - yes, subject to 2:(a) and (b) above.\n\n(c) original sourceforge svn. Possibly, but only if\ngit is used which I understand is supported, and\nthen subject to 2: (a) and (b) again.\n\n(d) My tidy-fork. Well this is where I will continue for\nnow...\n\nOthers???\n\n# 4: Discussion on some of the conflicts between 4 and 5\n\nAs expressed, if the one 'library' is to do BOTH at\nthe same time, then it needs 'rules' when to treat\nit as 4 or earlier, and when to treat a document as\n5 and thus tidy/report/warn appropriately,\n\nThis is my current stalling point, and seek ideas...\n\nRegards,\nGeoff.\n. Hi Ionel,\n\nYes, as you suggest am moving on with\nmy fork ;=)) But still not many 'testers'...\n\nI just did a push to always show the\nDOCTYPE information provided NOT quiet!\n\nAnd in fact have accepted my first\nfeature request to support AngularJS\nattributes...\n\nEspecially treating -\n  <script type=\"text/ng-template\" id=\"id\">\n   html content\n<script>\nas HTML5 content rather than javascript.\n\nSee here -\n  https://github.com/geoffmcl/tidy-fork/issues/2\n\nDo you know what is the W3C position on\nAngualarJS?\n\nI note they have a tutorial on it in\nW3Schools...\n\nAll for a better tidy...\n\nRegards,\nGeoff.\n. Hi Ionel,\n\nWhile most of the AnuglarJS stuff was\nrelatively easy to support, trying to support\nthe 'template' just got **_TOO**_ difficult,\nsince tidy5 would need to fall back to html\nparsing while in a script, so I abandoned it ;=()\n\nAt this point my tidy5 fork does everything I\nwant from a tidy5, so have done nothing new of\nlate...\n\nThe last effort was a few weeks ago just to\nblow away ALL the previous 'build' methods,\nmost of which would no longer work anyway,\nleaving only CMake...\n\nRegards,\nGeoff.\n\nOn 16/12/14 16:57, Ionel Roiban wrote:\n\n> Any news about this?\n> \n> \u2014\n> Reply to this email directly or view it on GitHub \n> https://github.com/w3c/tidy-html5/issues/122#issuecomment-67181339.\n. Hi balthisar,\n\nSorry for the delayed reply but still busy with\nsome other things for a little longer... but time\nfor a brief reply...\n\nWow, it is great to read LOTS of 'tidy' activity ;=))\n\nYes, after forking and adding what I wanted I did NOT\nset up PR's because, quite frankly, nobody seemed\ninterested ;=(( There were already several outstanding\nPR's and issues that did not seem to be getting any\nattention...\n\nAs soon as I get a chance I will look at your -\n   https://github.com/balthisar/tidy-html5/tree/geoffmcl-restart\n\nNow also watching htacg/tidy-html5...\n\nAnd joined the HTML Tidy Advocacy Community Group right\nafter I 'joined' W3C, as 'geoffmcl' ;=))\n\nAnyway, great to read lots... be back soonest... obviously\nam still very interested in tidy's future...\n\nRegards,\nGeoff.\n. Hi Jim,\n\nMy other projects have quietened down so found\nsome time to devote to tidy ;=))\n\n# \n\n1) Cloned your fork - geoffmcl-restart branch\n\nOne item needed was to add a va_copy(a,b) to\ncompile in windows... in include\\platform.h\nadded in the windows section -\n\n#ifndef va_copy\n#define va_copy(dest, src) (dest = src)\n#endif\n\n# \n\n2) Merged yours with my tidy-fork... quite a\nnumber of conflicts but ALL easily resolved ;=))\n\n(i) The biggest one was src/attrdict.c - not\nsure why really but git merge always gets broken\nup over lots of space changes...\n\nYou had carefully moved every existing definition\nout 4 spaces to match the new largest attribute\nTidyAttr_ARIA_ACTIVEDESCENDANT, lot of good work,\nbut git gets confused... and say both modified:\n\nOn carefully checking this was NOT true, and\nI was able to just copy yours over mine, and\nall is happy.\n\n(ii) The only other conflicts were all in the\n'build' files.\n\nI have decided to go 100% CMake since it generates\nnative make files for just about any desired\nsystem, so had DELETED ALL the old make, starting\nwith the root Makefile, then in build directory,\ndeleted dirs gmake, gnuauto, msvc2010, rpm...\n\nAnd fixed the README.md and README.html to match...\n\nWhen I deleted all these same things in your\nclone, the merge went very smoothly, except for\n(i) above, but that is just a copy.\n\n# \n\n3) After a windows compile check, and ran a few\ntests, mainly on ARIA, but included other things,\ndid a push to my fork... to course to a\ngeoffmcl-restart branch at this time...\n\nAnd did a compile check in my Ubuntu 14.04 linux...\nNO PROBLEMS ;=))\n\n# \n\n4) Began to attack the issues open against my\nfork, and was able to close a number (3 or 4) with\nmostly simple fixes...\n\nThe most difficult is one concerning treating\nids as case sensitive, since we have to retain\nthe warnings/errors for html4 while removing\nthem if html5...\n\nBut have a good trace on this, and should be\nable to close it soon also...\n\nAlso picked up one issue from htacg/tidy-html5\nwhich was able to close changing just one word ;=))\n\nFor , change CH_PCDATA\nto CH_BOOL for TidyAttr_ASYNC...\n\nStarted to look at some others... there are 64...\n\nAnd looking at the 14 PRs, but most of which would\nNOT be needed by my current tidy_fork/geoffmcl-restart\nbranch...\n\n# \n\n5) Regression test\n\nI certainly agree this is becoming IMPORTANT ;=()\n\nTo me it is important that tidy5 can do ALL that\nthe previous tidy did without problems, while\nstill being able to handle all the new and changed\nstuff from HTML5...\n\nI have had it as a note to myself, as Issue #1,\nopened 6 Aug 2014, so it is about time I got\naround to it ;=))\n\nWill certainly try to deal with that during this\nweek, or soonest...\n\n# \n\n6) Where to next?\n\n(a) At this time htacg/tidy-html5 now seems so far\nbehind ;=(( and no cmake!\n\n(b) I could easily bring your balthisar/tidy-html5 up\nto mine, and maybe we could continue to keep them\nin sync...\n\nOf course until I see a direction emerging I will\ncontinue to 'fix', 'update', 'test' my tidy-fork...\n\nWhat is your idea?\n\nRegards,\nGeoff.\n. So have pushed develop-500 branch to this repo, and would really appreciate any testing and reviewing of this branch. $ git checkout develop-500\n\nThis should make my tidy-fork redundant...\n\nWill try to add the infrastructure label to this, since it contains a lot of discussion... and have also posted a message to -\nhttps://lists.w3.org/Archives/Public/public-htacg/2015Jan/thread.html\nwhere some of this dicussion could continue...\n\nAnd hope any, all of you can help testing this latest... Thanks...\n. The latest development branch, develop-500 now only uses a cmake build... can you check this branch\n$ git pull and git checkout develop-500\nWe really need some tester in MAC OS X, since this is one I can not test in...\nReport any problems in this cmake system, and will try to fix and assist if a problem in this branch...\n. So this seems a bug in Notepad++, which I use a lot in the same OS, but have not tried the macro function...\nI think you are right that tidy never outputs tabs, and has always been like this... and note this has been marked as a potential 'feature', in Issue #125 ...\nYou will need to explain more what is the potential BUG in develop-500 branch of tidy5...\n. You mentioned this in #127...\nCan you supply a small html test sample that demonstrates the problem against the develop-500 branch... Thanks...\n. Found a FIX, but it seems it undoes what is stated in the comments -\n    /\\* use zero indent here, see http://tidy.sf.net/bug/729972 */\n\nThe little fix - changing\n   TY_(PFlushLine)(doc, 0);\nto\n   TY_(PFlushLine)(doc, indent);\n\nAs this issue states, using a config -c --indent yes, the previous output 1 was -\n\n```\n  <style type=\"text/css\">\np { font-size: 12pt; }\n  </style>\n```\n\nNow the output 2 is -\n\n```\n  <style type=\"text/css\">\n  p { font-size: 12pt; }\n  </style>\n```\n\nLooking carefully at the bug 728872, it seems tidy did at some time indent it per the above output 2, \nbut then some time later, by the 2009 release, had reverted to output 1!\n\nAnyway now NOT entirely fixed to my satisfaction, perhaps it should add one more indent, but hopefully an improvement.\n\nAs usual bumped the version point to 6 for this fix.\n. Have experimented some more but can not get the indent increased at this time.\n\nBut am now satisfied that the current indent lines up correctly, so closing for now... to be opened again if someone find a fuller fix...\n. Sorry for the delay in a reply...\nWe are now working on the latest development branch, develop-500\n$ git pull and git checkout develop-500\nCould you supply a small html sample that demonstrates this problem (in this dev branch)...\n. While researching a fix for Issue #126 looked at why does tidy always create a new style section when doing a clean up, if this is the exact meaning of this issue.\n\nAt first it appeared to search for an existing style section, but the FindStyle(...) service it uses in clean.c ONLY searches for any previous style section it has created, and does not really do a full document search for any other style section.\n\nSo this feature request will have to wait for a bigger fix...\n. I have done some more research into this, and while it would not be too difficult to do a full document search for any existing style block, I personally do not free this is in any way critical, so that change would not be by me.\n\nMost certainly if someone presents a patch or a PR, it would be considered...\n\nAnd just a reminder we are now using the `master` branch for development, and may eventually delete the develop-500 branch, although for the moment am trying to remember to keep it equal...\n\nSince there have been no further comments on this issue since Feb 2015 will close it, but feel free to re-open, on present a PR against the current master.\n. The latest development version of Tidy is in the develop-500 branch -\n$ git checkout develop-500\n\nBut I do not understand what the problem is exactly!\n\nCan you provide a full html sample, show the output from develop-500, and then the output you expect... Then maybe I can help...\n. Sorry for the delay in a reply...\nChecked the latest development branch, develop-500\n$ git checkout develop-500\nAnd can not find 'Enfo' anywhere in the source?\nMaybe it has been fixed in this development branch. If you get a chance please check again and report perhaps with a small html sample where this happen...\n. Have searched again for this, but found nothing so will close this...\n\nIf you find it again, and supply a sample, feel free to re-open this...\n. Thanks for the report... Sorry for the delay in response...\n\nAs you may know the latest devlopment branch is develop-500\n$ git checkout develop-500\n\nBut in checking the latest code, this 'bug' is still present, while after building a input test sample based on yours above the sample passes the validators... \n\nHave found w3.org some documentaions on MathML, but would seek more pointers... especially a neat list of tags (and attributes)... etc... everything helps...\n\nOnce I begin to understand MathML will work on adding support, and advise when done.\n. Ok, have found https://github.com/GerHobbelt/htmltidy, and will check to see if it contains MathML support... ALWAYS helpful when others have done the implementation...\n. Hi Fr\u00e9d\u00e9ric (fred-wang),\n\nRe:  tidy-html5 does not understand SVG #70\nand:  tidy-html5 does not understand MathML #130\n\nThanks for the links... I am sure these will help.\n\nAs mention found https://github.com/GerHobbelt/htmltidy,\nwhich I cloned and built, and it certainly contains the\nmacros, enums, code and tables addressing these two issues.\n\nHe had also implemented his own support for html5 in general,\nand some other features, so it is not a 5 minute cut and\npaste job. Read no simple dev-5 patch...\n\nI need to schedule a few days just for this... unless\nsomeone else could pull develop-500 branch, and htmltidy\nand effect the manual 'transfer' first ;=))\n\nIn other words would really appreciate any help on this\nfairly simple, but long tedious task of extracting just\nthe svg and mathml from htmltidy, and re-coding it to\ndev-5 form...\n\nRegards,\nGeoff.\n. Thanks to Ger Hobbelt htmltidy fork, have now add initial MathML support.\n\nAnd as a thanks to Ger each change for this support is marked with a [i_a]2 comment, like that used in his code.\n\nAs stated, this is an initial implementation, and needs more testing, and perhaps modifications, extension of the attribute table, etc, etc...\n. @fred-wang thanks for testing and reporting... this is GREAT...\n\nAs indicated this was a very basic implementation using code from Ger Hobbelt fork, and I TOO am still learning to understand his code ;=))\n\nRather than the usual ALL table driven TidyTag_XXXXX, TidyAttr_XXXX, etc he used an new mode he called 'namespace' parsing... with a new GetTokenMode OtherNamespace...\n\nYes, there is one, namely the TidyTag_MATH, and it has the 'usual' big defined line in tags.c \n\ntags.c(223):  { TidyTag_MATHML, \"math\", VERS_ELEM_MATHML, &TY_(W3CAttrsFor_MATHML)[0], (CM_INLINE|CM_BLOCK|CM_MIXED), TY_(ParseNamespace),NULL }, /\\* [i_a]2 */\n\nSo for attributes on it you can look at the W3CAttrsFor_MATHML, which is SMALL at present, and certainly has no TidyAttr_DISPLAY, which presently does not exist, so that needs to be defined and  added, along with maybe others, that may or may not already be defined...\n\nNow the 'namespace' parsing is all handled in ParseNamespace, sort of handled as xml, and this is the service that I am trying to understand...\n\nBasically it just marches forward, accumulating everything until it reaches `</math>`\n\nObviously at present it does NOT expect `<mspace width=\"thinmathspace\">`, nor `<mo stretchy=\"false\">`, etc, so has to be coded to include attribute collection...\n\nInitially with no actual attribute validation, but there are generic services that can accumulate, parse attributes, including entities, and store them on the node for later output...\n\nThis would happen before the code, after gathering the attributes -\n\n```\n            /* add another child to the current parent */\n            TY_(InsertNodeAtEnd)(parent, node);\n```\n\nThe entities currently known to tidy are all stored in entities.c, and that list MAY be complete, or perhaps need to be extended...\n\nAs to the actual attribute validation and then value validation, maybe a new type of table needs to be designed for use by ParseNameSpace(), rather than the traditional mentioned above... or maybe we need to go the whole hog, and defined every MathML tag, together with an attribute table...\n\nAt present only some attributes have their own value parsers, like say -\nattrs.c(98):  { TidyAttr_ALIGN, \"align\", CH_ALIGN }, /\\* varies by element */\nwhich has its OWN value checker CH_ALIGN -> CheckAlign which ensures the value is one of a set -\nctmbstr const values[] = {\"left\", \"right\", \"center\", \"justify\", NULL};\n\nOthers have none, like CH_PCDATA -> NULL, which accepts EVERYTHING between the double quotes...\n\nSo decisions need to be made on each of these... how much should tidy validate... of course one day it is hoped 100% ;=)) but we must start small...\n\nI will try to make some time to look deeper into this, but for sure would really appreciate any assistance with code, table, definitions, etc, etc...\n\nThis can be via a Pull Request from your clone, or even just a simple diff patch file...\n\nAnyway, I hope this helps explain a little more...\n. @fred-wang interesting we both looked at entities first ;=))\n\nI downloaded htmlmathml.json and running it through a little perl script found some 2,125 compared to just 253 in entities.c, and that is without looking at the code point differences!\n\nSo what I see at this time is a new table, say static const entity entities5[] =, perhaps with some improved searching to be used initially ParseNameSpace(), but later for more...\n\nOn the other parts, during this week I will try to add the intial attribute parsing, probably initially without any validation...\n\nCertainly appreciate your help on this. \n. @fred-wang added the display attribute for the math element, but no value check yet...\n\nNow working on not giving warnings for attributes on other math children... but need to think about this more...\n\nHave done nothing about supporting the big mathml entities list...\n. @fred-wang thanks for the pull request...\n\n1) Agree that as a start tidy should NOT reject anything in the math element. Have pushed a set of very kludgy fixes which I think does that.\n\n2) Thanks for the mapping changes on rang/lang. This was merged as is.\n\n3) I agree the bigger job is to now add a table with all 2125 html5 entities.\n\n4) I would not initially go for speed. It still does not seem extreme to be doing a simple 2125 search. As to having two tables, maybe later the 2nd table could be generated from the first during init rather than hard coding two big table. But my idea is to just get it running initially, and consider speed up options later.\n\n5) Yes, I know the fact that some have several characters means that the new table must go beyond just a single unit value, maybe having 2 uints for each, with one as zero, or something...\n\nAnyway as stated, have pushed what I hope is a 'temporary' fix to get us through the initial stage. Tidy now seems to pass the 'torture_test' file without flagging any attribute or entity warnings...\n\nAppreciate any further testing you can do, and any help getting this new entity table in place.\n. Hi @physikerwelt, not sure what OS you are in, but in linux, and OS X that is, in a terminal -\n\nIf you have already done 1. earlier, then you need to make sure you are in the develop-500 branch  \n  $ cd tidy-html5\n  $ git checkout develop-500\n  $ git pull\n  $ cd build/cmake\n\nTo start from scratch  \n1. $ git clone git@github.com:htacg/tidy-html5.git # get the source\n2. $ cd tidy-html5/build/cmake # get into the build directory\n3. $ cmake ../.. # generate makfile\n4. $ make # compile and link\n6. $ [sudo] make install # optionally install\n\nThis should give you a working tidy5 binary, probably in /usr/local/bin... If you wanted it in /usr/bin then step 3. would be -  \n3. $cmake ../.. -DCMAKE_INSTALL_PREFIX=/usr\n\nIn windows, step 4. can be -  \n4. $ cmake --build . --config Release\n\nOr you can use the make-gui... then MSVC IDE...\n\nThat should give you a tidy5.exe in the Release folder, which you could copy to any directory in your PATH environment variable to use globally...\n\nBut maybe I do not understand the problem...\n. Sorry for the delay on a reply...\nAgree the validator does not flag this as a warning...\nSo have disabled emitting a warning for inserting BODY in the development branch, develop-500\nPlease pull, git checkout develop-500 and retest... if satisfied please close... \nThanks for your report...\n. Hi ezequiel-garzon,\n\nGlad you got a chance to try... let me see if I can help...\n\n1: Did you switch the branch to develop-500 BEFORE you downloaded the zip?\nUpper left should show branch: master v\nClick on the down arrow, and choose 'develop-500'\nThen it should show branch: develop-500 v\n\nThen clicking Download ZIP, and you should get a tidy-html5-develop-500.zip after \nthat... That will unzip into a directory tidy-html5-develop-500.\n\n2: This branch does NOT have any Makefile, nor a build/gmake directory... It uses \ncmake... I also have Ubuntu 14.04 LTS... so if cmake is not already installed, run \n$ sudo apt-get install cmake\n\nNow as the readme states, to build should be as simple as, get into the build/cmake directory,\nand run cmake ../.., like -\n$ cd tidy-html5-develop-500/build/cmake\n$ cmake ../..\n$ make\nand if desired\n$ sudo make install\n\nAdvise if any problems with any part of this...\n\n3: git is also very easy. To install it -\n$ sudo apt-get install git\n\nNow you can clone the repo into a tidy-html5 directory with -\n$ git clone https://github.com/htacg/tidy-html5.git\nOR\n$ git clone git@github.com:htacg/tidy-html5.git\n\nThen to switch to the develop-500 branch -\n$ cd tidy-html5\n$ git checkout develop-500\n\nThen to build, as above - get into the build/cmake directory, and run cmake ../..\n$ cd build/cmake\n$ cmake ../..\n$ make\nand if desired\n$ sudo make install\n\nOnce you have git cloned like this you can keep up with the \nlatest at any time with - no more zip needed...\n$ cd tidy-html5\n$ git pull\nand it will be updated...\n\nHope this helps... but advise if any problems... I am sure they can be solved ;=))\n\nRegards,\nGeoff.\n. Hi ezequiel-garzon,\n\nAh, yes, I did overlook the warning if you omit the optional\ntags... Maybe leave this open to remind me to look at that,\nrather than creating a new issue...\n\nGlad you got a tidy5 working ;=)) And hope you get the chance\nto use the git clone so you can stay at the latest code easily\nwith just git pull...\n\nAfter a git pull, yes it is safer to always run the 3 steps,\nbut if there has been no change in the CMakeLists.txt, which\nmay indicate a new or different source, version, etc, then the\nMakefile would still be valid, so you can just run make...\n\nBut sometimes after a very substantial source change, it in fact\nmay be necessary to delete the CMakeCache.txt and the CMakeFiles\ndirectory, because cmake tries to avoid doing everything again on\na second and subsequent runs, and sometimes previous values in\nthese can cause problems... not often...\n\nConcerning the validators, I do not really know, but I think in\nthe early days the validator tried to use Tidy, and does in fact\nstill use the now OLD version if you add the option to 'Clean up\nMarkup with HTML-Tidy'. We hope they update that when we eventually\nrelease Tidy 5.0.0...\n\nAnd I guess another reason is that tidy development sort of\n'died' for a while after the 2009 release... I have looked at\nthe source of both the validator and validator/nu, and see\nthey use a big mixture - perl, python, java, cgi - too much for\nme to understand ;=()\n\nI too was hoping we could share some tables or something,\nbut for the present it is a bit of a duplicated effort...\n\nBut this also reminded me to have a quick look at the\ntidyperl wrapper - HTML::Tidy, which uses a C++ wrapper,\nand SWIG to generate the code, and add that to the things to\ndo as we march towards the next release...\n\nAnd then there is a TidyUI (GUI), and other language bindings...\nPython, Java, COM/ATL, always a zillion things to play with ;=))\n\nRegards,\nGeoff.\n. Difficult decision to avoid this warning when no optional tags are present, in this case `<body>`.\n\nDecided only if --omit-optional-tags yes is configured, thus indicating that they may also have been omitted in the source, avoid this warning.\n\nOtherwise issue the warning since at that time tidy is parsing the `<head>`.\n\nHave bumped version point to 5 for this change.\n\nHope you are now using git since you can just do git pull, and re-build to get this update.\n\nIf satisfactory after testing please close this issue.\n. No appolgy needed for 'edge' cases... subtlety is part of Tidy ;=))\n\nGiven that I recently argued in #88, that it was ok for Tidy to 'silently' fix-up `<` and `>`, that is no warning issued, perhaps the 3 warnings issued for `<p>A&E & this && even this</p>` is excessive!\n\nI note that the validators only flags the first! And of course the tidied output passes the validators with flying colors...\n\nHave always been of two minds about 'silent' fix-ups, but given that there are probably a number of other 'silent' fix-ups, so I suppose I'd opt for suppressing these warnings... or not...\n\nJust do not like the sense that Tidy does things to my file without telling me, and thus in a way helping in my html education and understanding. \n\nMaybe all these 'silent' actions need to be at a different level that gives notice of change, if say --show-silent-fixes on, but does not raise the error exit level.\n\nSorry to be so ambiguous ;=))\n. Sorry for the delay in a reply...\nHave tested this and confirm this still exists in the latest development branch, develop-500\nIt is a conflict between preserving JSP code spacing, and adding an indent...\nWill see what can be done...\n. [develop-500 0f80c08] Issue #133 - ever increasing indent!\n\nHave made a simple but profound change in pprint.c to fix this 'bug'. A bug that has been around forever...\n\nSince leading space is preserved on script code, after tidy indents the code once, a second run on that tidied file would add more indent to already indented code.\n\nThe fix is to skip any leading spaces in the text to be output by the amount of the indent.\n\nThis fix should be carefully checked, and removed if there are other bad consequences.\n\nBump the version point to 4 for this change.\n. @nkmathew, as predicted the previous fix had adverse consequences on other tags, like script, which lost its indent, so reverted that commit!\n\nBut now found what I hope is a better fix, which for the moment only deals with an AspTag, but could apply to other text like tags...\n\nAppreciate it if you get a chance to pull the latest develop-500 branch, compile and test again. Thanks...\n\nThe version should be 4.9.15 plus for this fix...\n. The latest development branch, develop-500 now only uses cmake...\n$ git pull and git checkout develop-500\nWould really appreciate you building this branch, and reporting any problems...\n. Thank you for your quick test and report... Can we close this issue?\n. @lovasoa, as @balthisar points out this is quite interesting. I recently ran across a simple example that uses cmake as the build mechanism - http://forums.4fips.com/viewtopic.php?f=3&t=1201 \n\nThere he uses a python script to run cmake with a number of `special` parameters to use the emscripten SDK, but this could be manual, or done in any scripting... The important point is that cmake CMakeLists.txt is used as the `generator`...\n\nI was able to successfully build the js for that sample, using cmake to generate a Makefile, and mingw-make to do the compile... and it ran fine... I was in Windows 7.\n\nNow that we are using a cmake system you need to rebase your clone to bring it up to date, like -\n1. git remote add upstream git@github.com:htacg/tidy-html5.git\n2. git fetch upstream\n3. git rebase upstream/master\n\nOr just delete it, and start again. A PR must be against the current **master** htacg branch. Note no longer using the develop-500 branch.\n\nIt will probably be just the addition of a script in build/cmake (sh/bat/py) to pass extra parameters to cmake and run the appropriate compiler... Mainly setting `-DCMAKE_TOOLCHAIN_FILE=$EMSCRIPTEN/cmake/Modules/Platform/Emscripten.cmake`...\n\nAnd maybe an `option` in CMakeLists.txt, like BUILD_USING_EMCC, or something, to aid in the detection of the emscripten SDK, but it seems the above sample did not need this...\n\nHope you get a chance to revisit this... I think there would be quite some interest in a javascript version of tidy... making it easy to put up a full latest 'tidy5' web service...\n. Since no further comments in months, am closing...\n\nIn any case the fork needs to rebase to master, since the merge has conflicts...\n. Have replied to this at -\nhttps://lists.w3.org/Archives/Public/public-htacg-contrib/2015Jan/0002.html\nwhich is where I think this important discussion belongs... and hope we can close here...\nSorry for my first VERY LONG post...\n. Hi Jeffrey (alias=jyasskin),\n\nYes, you are right...\n\nThis was a 'bug' introduced when adding\nhtml5 support... it can be fixed by\nchanging one value in the source...\n\nBut I do not /YET/ have commit permission\non this repo, so can only fix it in my\nown 'fork'... and in the past PRs have\nbeen ignored... there are at least 14\noutstanding... so have not done this...\n\nSo clone -\nhttps://github.com/geoffmcl/tidy-fork\n\nAnd then change to branch geoffmcl-restart...\n\n$ git checkout geoffmcl-restart\n\nAnd you should find it 'fixed'... and a LOT\nof other features added, AND many other bug\nfixes... I hope we soon get all this\ntogether, for Tidy's sake... but it takes\ntime...\n\nBe aware, my 'fork' only uses the cmake\ngenerator build system... all others have\nbeen removed...\n\nRegard,\nGeoff.\n. Hi Ionel,\n\nSorry do not know how to create a PR just for\nthat particular single issue...\n\nBut it is just changing one word, CH_PCDATA to\nCH_BOOL, and optionally adding a comment, as\nin the following diff extract -\n\ndiff -urw tidy-fork\\src\\attrs.c F:\\Projects\\tidy-fork\\src\\attrs.c\n--- tidy-fork\\src\\attrs.c    Fri Aug 01 12:54:12 2014\n+++ F:\\Projects\\tidy-fork\\src\\attrs.c    Mon Jan 19 13:36:31 2015\n@@ -255,7 +260,7 @@\n    { TidyAttr_URN,               \"urn\", CH_PCDATA    }, /\\* for <a>, \nnever implemented */\n\n```\n/* HTML5 */\n```\n-  { TidyAttr_ASYNC,             \"async\", CH_PCDATA    },\n-  { TidyAttr_ASYNC,             \"async\", CH_BOOL      }, /\\* <script \n  src=\"...\" async> */\n  { TidyAttr_AUTOCOMPLETE,      \"autocomplete\", CH_PCDATA    },\n  { TidyAttr_AUTOFOCUS,         \"autofocus\", CH_PCDATA    },\n  { TidyAttr_AUTOPLAY,          \"autoplay\", CH_PCDATA    },\n\nOf course the line numbers may not be the same in\nhtacg/tidy-html5, but the full context is there...\n\nRegards,\nGeoff.\n. Hi Jim, Iionel,\n\nYes, you certainly have to be carefully about\n'blinding' accepting the backlog of PRs ;=()\n\nIn fact it seems PRs should have a 'sell-by-date',\nsince they are usually of the moment, and if the\nbase has moved on, then it is possible they are\neither wrong or no longer needed... and can do\ndamage...\n\nMeantime I have had a chance to commence regression\ntesting - that is run all the tests with pure CVS\n(2009) tidy, and my tidy5 - and on the very first\ntest, 426885, found a REGRESSION had crept into\nthe base CVS code ;=(( thus is in all tidies since...\n\nTidy will in SOME cases no longer convert <center>\nto a <div class..>, and in fact just DISCARDS it!!!\nThis happens if you also configure drop-font-tags...\n\nThe code is REAL simple and VERY clear -\n\nstatic Bool Center2Div(...) {\n  if (nodeIsCENTER(node)) {  // this is good, but\n    if ( cfgBool(doc, TidyDropFontTags) ) { // why here?\n      ... DiscardContainer(...); // YEEK, why this???\n      // with no check that there is a <font...>\n      return yes; // and now leaves...\n    }\n    // this does the <center> to a <div class..>\n    // but ONLY if no drop-font-tags...\n    RenameElem( doc, node, TidyTag_DIV );\n    ... AddStyleProperty(...);\n    return no;\n}\n\nWhat has font tags got to do with center???????\nSeems the cfg check should just be removed...\nSo presently working hard on removing this BIG\nBUG!!!\n\nAnd not sure how you grant 'limited' commit rights?\nI thought either a person has push permission or not.\nAnd I would certainly be pleased to be one of the\nmaintainers...\n\nAnd is there a dev-list we can use for discussion...\nthis seems strange having it inside an issue on a\nparticular repo ;=()\n\nAnyway, ever onwards...\n\nRegards,\nGeoff.\n. Hi Ionel,\n\nre: lists\n1: https://lists.w3.org/Archives/Public/public-htacg/\n2: https://lists.w3.org/Archives/Public/public-htacg-contrib/\n3: https://lists.w3.org/Archives/Member/internal-htacg/\n\nWell, especially since those lists seems totally\nBLANK ;=))\n\nSo ok, here, and NOT there, or anywhere else!,\nit seems, for now...\n\nFixed src/clean.c, of what seems like a regression,\njust by removing the if (cfg == TidyDropFontTags)\ncode block from the if ( nodeIsCENTER(node) ) block...\n\nAll now pushed to my tidy-fork...\n\nAnd progressing on the regression testing...\n\nAs always, the aim is the tidied version MUST look\nthe SAME in a browser... Quite slow since each\n'test' requires a 'visual' browser inspection...\n\nAnd really feel I must apologize to Jeffrey (jyasskin)\nfor hijacking this thread for a discussion ;=))))))\n\nRegards,\nGeoff.\n. Hi Ionel,\n\n> deltas htacg vs tidy-fork\n\nIn a word, I would probably say 'massive' at this\npoint... and always growing...\n\nI could generate a diff if this would help...\n\nOr do a clone, and switch to the geoffmcl-restart\nbranch -\n$ git checkout geoffmcl-restart\n\nI will get around to merging this into master\nsoon...\n\nBut...\n\nhtacg has no ARIA support, quite big in itself...\n\nhtacg is missing a lot of fixes...\n\nAnd for me the MOST IMPORTANT, htacg does NOT\nuse CMake...\n\nI think it is important to settle on this last\nsoonest.\n\nFor me cmake is the ONLY way to go... it generates\njust about ANY native build file set...\n\nAnd to avoid all confusion I have blown away\nMakefile, build/gmake. build/gnuauto,\nbuild/msvc, build/msvc2010, and rpm, and adjusted\nthe README.md and READM.html accordingly...\n\nAnd for unix this is as simple as -\n$ cd make/cmake\n$ cmake ../.. [options]\n$ make\n$ [sudo] make install (if desired)\n\nAn important option perhaps for unix is -\n  -DBUILD_SHARED_LIB:BOOL=ON\nIt is off by default...\n\nAnd it is just as simple for windows\n$ cd make/cmake\n$ cmake ....\n$ cmake --build . --config Release\n$ cmake --build . --config Release --target INSTALL (if desired)\n\n**\\* BE AWARE **_, for my being able to fully test\nmy fork while keeping standard tidy available\nI have *_MESSED** with the library and binary names...\nusing lib tidy-static or -shared, and tidy5...\n\nThe idea being only when fully satisfied should\nthe names be returned to the simple... libtidy,\nand tidy... and thus overwrite any existing install...\n\nThis is a simple adjustment in the single CMakeLists.txt\n\nSo, how do we go about bringing htacg into this\ncentury? ;=))))\n\nWith htacg commit rights I would be prepared to\ndo the initial merge, probably by this weekend...\n\nAnd finally, there is the question of a version,\nagain a CMakeTests.txt adjustment only...\n\nRegards,\nGeoff.\n. No problem...\n. Hi Jeffrey,\n\nThanks for the info on generating a PR\nfor a single issue...\n\nBut I thought that would be the case - to create a\nseparate branch - but I was not prepared to do\nthat just for a one word change ;=))\n\nWill keep it in mind for perhaps 'bigger'\nthings...\n\nBut my biggest hope is that we can get htacg\nup-to-date and I can forget my tidy-fork...\n\nIt was after all only generated because there was\nabsolutely NO activity on tidy's health... for\nyears and Years and YEARS!!!\n\nRegards,\nGeoff.\n. Hi Jim,\n\n# \n- merging\n\nThe BIG trick with git merging is to be prepared\nto do it SEVERAL times ;=))\n\nAnd I always keep handy a clean clone, like say\ntidy-html5-org, so I can refer back to it BEFORE\ngit tried...\n\nOn the initial merge it is ALWAYS likely there will\nbe a number of conflicts. Now conflicts can be of\nseveral types -\n\n(a) A 'real' merge conflict. This is where both\nversions have been modified around the same area\nand git wants you to manually decided WHICH code\nis to take precedence, or how to combine the\nefforts/lines...\n\nThis has to be done MANUALLY, but since git\nplaces big markers around the two blocks it is\nusually not so difficult. Perhaps tedious...\n\nAdditionally I have a wonderful tool called\nWinMerge which loads the two files and gives a\ntwo pane view, color coding the lines that\nare different... Making easy to see what has\nbeen changed, where...\n\nBut in reality between my fork and html-tidy5\nthere should be none, or few of these since\nlittle has been done to html-tidy5 since I\nfirst cloned from it...\n\n(b) A 'false' merge conflict. This is where\nonly ONE files has really been modified, but\nduring the modification some white spaces were\nadded or removed on other lines... ie lines other\nthan the NEW lines added...\n\nGit gets into a real mess with this, and will\nreport both files changed, when in fact my\nWinMerge tool, which IGNORES white space changes\nin lines, shows me that only a bunch of lines\nhave been added.\n\nReally no merge problem at all...\n\nIn most cases like this it is a simple case of\nCOPYING the new file over the old file...\n\n(c) Really false, false merge conflicts. And\nI think this is again related to white space\nchanges...\n\nThat is my WinMerge tool, which as stated IGNORES\nwhite space changes, reports the two files as\nthe SAME! As does diff -w...\n\nAgain just copy the new over the old... And things\ngo better if this is done before starting the\nmerge again on a new clean clone...\n\n(d) Where files have been deleted in one,\nbut not deleted in the other.\n\nI suppose in the interests of safety git\nwill leave the file there, and report a\nconflict.\n\nIn this case the trick, like (c) above, is to\ntrash the current merge repo, and clone again,\nand do the same deletes BEFORE attempting the\nnext merge, and git will be happy...\n\n(e) Maybe others I have not experienced ;=))\n\nAs stated, always a bit TEDIOUS, but doable...\n\nAs you point out the only real reason to be\ndoing a merge is to PRESERVE the files git\nhistory - who changed what, when, where...\n\nOf course if you do NOT care about history,\nthen just a 100% replacement is possible.\n\nAnd as is my habit, I add notes to myself, and\nothers, on my site. This is a recent tidy merge -\n\n  http://geoffair.org/unix/git.htm#merge1\n\n# \n- cmake\n\nI guess you are not too familiar with cmake?\n\nYou do understand cmake is not a build system\nin itself, but a configuration and generator\nof 'native' build systems...\n\nRunning cmake without a command will show\nthe list of generators available on your\nplatform, which will include Unix Makefiles,\nthose processed by the venerable 'make'...\n\nAnd as a tidy build has always been cmake\nsupports out-of-source builds, making\ncleanups, restarts, ... easy...\n\nAnd is this not a new generation of tidy,\nso why not simplify life for everyone,\nand settle on ONLY cmake?\n\nAnd concerning version.h I have moved the\n'versioning' into CMakeLists.txt... which\ngenerates a RELEASE_DATE string macro...\n\nSo this can be the current date, but I\nwas also considering the so library version,\nsince cmake makes building shared library\njust as easy... which unix loves, but not\nso much for windows, where they create\nextra hassle...\n\nPlease, let's go 100% cmake...\n\n# \n- push\n\nI really do not understand what you are\ndoing concerning permissions???\n\nI do not like blowing my own trumpet,\nbut I think I submitted my first patch\nto tidy in 2006 or earlier... and continued\never since then... getting close to 10\nyears... check out the tidy-develop mailing\nlist... The CVS code, and thus htacq/html-tidy5\nhas MANY of MY patches...\n\nI never push for CVS access there since arnaud\nwas always there, although Charles gave\nme access to the TidyLib Binding...\n\nWhat does giving me access to an empty\nhtacq/geoff-test repo do?\n\nI had already agreed that the merge\nwould be done in a branch... so master\nwould be UNTOUCHED... and if you did not\nlike the resulting branch, it could be\ntrashed.\n\nAnyway, if I can not be trusted with\ngit push access to htacq/html-tidy5, that is\nfine, and I guess it is up to you to do\nthe merge, if you want...\n\nI will return to quietly working on my\nown fork...\n\nRegards,\nGeoff.\n. Hi,\n\nJust for fun did a merge from geoffmcl/tidy-fork,\ngeoffmcl-restart branch to htacg/tidy-html5,\ngeoffmcl-restart branch, and surprise, SURPRISE!\nnone of the predicted merge problems were there ;=))\n\nGot exactly one(1) conflict, and that was in the\nREADME.md which was easily fixed...\n\nAnd that geoffmcl-retart branch can be easily\nrenamed 'dev' or any other name...\n$ git branch -m geoffmcl-restart <newname>\n\nAnd I need to fix up some of the info messages\nin tidy.c, since it refers to my repo, etc... but\njust simple message changes back to near the\noriginal...\n\nThen if I had push rights... it would be done,\nand ready for people to try ;=))\n\nI have continued the full regression testing,\nand so far except for the first test, which\nI have now fixed, at least the first 20 or so\nare fine... ongoing...\n\nRegards,\nGeoff.\n. Hi,\n\nHave now returned the tidy.c info messages to their\nformer glory, but it seems some URL changes\nare needed...\n\nYes, it seems they are re-directed, but also\nseems no reason not to put the correct current URL.\n\nAnd should we leave validator as 'nu', now that\nthe main validator handles both, or we could put\nboth...\n\n# \n\n  tidy5 -h\n\ntidy5 [options...] [file...] [options...] [file...]\nUtility to clean up and pretty print HTML/XHTML/XML\n\nThis is an HTML5-aware experimental fork of HTML Tidy.\n2015/01/20\n\n<skipped unchanged options text>\n\nFor more information on this HTML5-aware experimental fork of Tidy,\nsee http://w3c.github.com/tidy-html5/\n\nFor more information on HTML, see the following:\n\n   HTML: Edition for Web Authors (the latest HTML specification)\n   http://dev.w3.org/html5/spec-author-view\n\n   HTML: The Markup Language (an HTML language reference)\n   http://dev.w3.org/html5/markup/\n\nFile bug reports at https://github.com/w3c/tidy-html5/issues/\nor send questions and comments to html-tidy@w3.org\n\nValidate your HTML documents using the W3C Nu Markup Validator:\n\n   http://validator.w3.org/nu/\n\n# \n\nFor the present have set the version output as -\n\ntidy5 --version\nHTML Tidy for HTML5 (experimental) for Windows 2015/01/20\n\nOf course that says 'Unix' if compiled in unix/linux...\n\nSeek advice on what to change... if anything...\n\nRegards,\nGeoff.\n. Hi Jim,\n\nTwo problems -\n\n1: Can not push the htacg/tidy-html5. Get error\nPermission to htacg/tidy-html5.git denied to geoffmcl\nso although ready unable to push develop-500 branch.\n\n2: Can NOT place a message on either public-htacg,\nor public-htacg-contrib lists. Have checked\nallowing post to be public, and on a second try\nit advised already done (approved)\n\nSo have returned here for help.\n\nRegards,\nGeoff.\n. As you can read here -\nhttp://www.htacg.org/tidy-html5/#preserve-indenting\nthis would be a tall order ;=))\n\nAlthough I have often thought about this, I am afraid such a 'feature' is probably way into the future, if at all... but you never know...\n. Since no more comments for over a month, am closing this for now...\n\nBut feel free to re-open, or open another issue... thanks...\n. Hi techresources,\n\nThank you for moving the bug report to here, but\nplease do not put two issues in one... that is\nvery confusing...\n\nBut concerning your No 1. exception msg, you have really\nadded nothing more than was in your original report!\nWell except for the images...\n\nSo I can ONLY repeat the comments and questions from\nmy reply -\n\nPlease be aware that the continued development of\nHTML Tidy has moved to -\nhttps://github.com/htacg/tidy-html5/tree/develop-500\n\nNote that is the develop-500 branch, not master...\nThus obviously only bugs against the branch will be\nworked on...\n\nIf you have the capability of cloning the above repo,\nswitching to the develop-500 branch, and compiling a\nnew libtidy.dll, then maybe you could test against\nthat ...\n\nIf you do not have that capability, then we are working\nhard to do a new release of Tidy 5.0.0 in the shortest\npossible time, hopefully weeks...\n\nBut in any case it would be appreciated if you could\nnarrow down in exactly what circumstances the exception\noccurs, or does it happen every time...\n\nIf it can be narrowed to a minimal html case, maybe\nI could test such a case against the current development\ncode...\n\nOh, and also where is the source of TidyManaged.dll? Is\nthis what you have written in c#.net? I have/use MSVC10...\ncan I run your source?\n\nSo please answer the questions and address the comments\nin there...\n\nAnd since from the images I can see you are using MSVC IDE,\nso you should be able to Debug trace into doc.Save(),\nand point out exactly what happens... You will need to\nbe using a Debug version of tiydlib.dll for this...\n\nOr maybe even link WindowsFormsApplication1 to the Debug\nstatic library...\n\nFurther I note this is a very messy MS Word generated\nhtml file... always very difficult... it adds so much\nproprietary stuff... but Tidy tries... if configured\nto clean a word document...\n\nConcerning your no 2, that is NOT really a bug. For sure\nwhen we reach a release of Tidy 5.0.0, we would need to\nkeep that site, and several others like it, like the W3C\nvalidator, in mind, and encourage them to update to the\nlatest Tidy... but we are NOT at that point yet...\n\nI will add a note to my 'things to do on release', so\nthanks for pointing it out... so no need to create another\nissue now...\n\nBut to be able to try to help on No 1, need MORE\ninformation...\n\nAnd finally to post html code to here you need to escape\nit like I added to your post, like this -\n`<htm><p>escaped html</p></html>`\n\nRegards,\nGeoff.\n. Hi techresources,\n\n# Source:\n\nAll the source is in the git repo -\nhttps://github.com/htacg/tidy-html5\n\nClone source:\n$ git clone git@github.com:htacg/tidy-html5.git\nor using https -\n$ git clone https://github.com/htacg/tidy-html5.git\n\nSwitch to develop-500 branch - IMPORTANT -\n$ cd tidy-html5\n$ git checkout develop-500\n\n# Building:\n\nNeed CMake installed - http://www.cmake.org/download\nThere is a simple to use Windows installer which\nwill set things up... and you obviously have MSVC\ninstalled...\n\nFor 32-bit static version\n$ cd build\\cmake, and run build-me.bat\n\nFor 64-bit static version\n$ cd build\\win64, maybe adjust and run build-me.bat\n\nFor the DLL builds in the respective build-me.bat\nfiles add a line, obviously after the\nCMAKE_INSTALL_PREFIX lines -\n@set TMPOPTS=%TMPOPTS% -DBUILD_SHARED_LIB:BOOL=ON\nand run the build-me.bats...\n\n# Runtime Binaries:\n\nWe do not yet have a 'public' place to put these,\nand a question to Jim, Ionel, or others, what would\nbe your ideas on this... somewhere I, or others, can\neasily upload binaries too... and be publicly\navailable for downloads...\n\nSo for the moment I have put a full set on my\nsite, in a single zip, all in a bin folder -\n\nhttp://geoffair.org/tmp/tidy5-bin-4.9.1.zip\n\nIt contains static and dll libraries, and the exe\nfor dll32, dll64, static32 and static64, all built\nby MSVC 10, so all in the msvc100 sub-folder.\n\nYou did NOT tell me your version of MSVC, nor\nwhether you are in a 32 or 64-bit OS... and\nif your MSVC supports 64-bits...\n\nOver time, I, or others, could probably provide\nbinaries for each version of MSVC, in different\nWindows versions... Mine were using Windows 7,\n64-bits...\n\nBut these are ONLY needed if you are unable to\nbuild from the cloned SOURCE yourself...\n\nThe Tidy version 4.9.1 will increase as fixes\nare added, 4.9.2, 4.9.3, etc, etc, until we are\ntested and ready for a 5.0.0 release...\n\nThank you for using Tidy, and look forward to\nhearing good results ;=))\n\nRegards,\nGeoff.\n. @techresources I have moved your second issue to #156 and answered it there...\n\nHave you had a chance to download and test the libtidy DLL I posted? \n\nAlternatively can you post your c#.net window application source somewhere so I can compile and try it with the latest tidy5 code? Thanks...\n. @balthisar have never tried it myself but found this reference\nhttp://stackoverflow.com/questions/295120/c-mark-as-deprecated\n\nWill get around to trying it in MSVC and see what happens ;=))\n\n```\n#ifdef __GNUC__\n#define DEPRECATED(func) func __attribute__ ((deprecated))\n#elif defined(_MSC_VER)\n#define DEPRECATED(func) __declspec(deprecated) func\n#else\n#pragma message(\"WARNING: You need to implement DEPRECATED for this compiler\")\n#define DEPRECATED(func) func\n#endif\n...\n//don't use me any more\nDEPRECATED(void OldFunc(int a, float b));\n//use me instead\nvoid NewFunc(int a, double b);\n```\n. See Issue #190 for comments on why this reversion to continuing support for `tidyReleaseDate()`\n. For now continuing support for both version and date, although console tidy continues to only show only the version. Maybe the date could now also be added.\n\nBut no further comments for a few weeks so closing this for now...\n\nFeel free to re-open, or post a new issue.\n. fixed in version 4.9.8\n. You are kidding right?\n\nYou will note I am now at 4.9.10 ;=))\n. Still feel Tidy! should be able to validate the `lang` value string, and at least issue a warning... \n\nAccordingly set the milestone to 5.1... as always any help appreciated...\n. As there have been no further comments on this issue for a few months will close it for now...\n\nAs always, fee free to re-open, or open other new issues...\n. Thanks for the input, sample html, and links.\n\nSeems tidy5 should support the picture element, and will see what can be done.\n. @AlbertWiersch - Have added initial support for the picture element. Tidy now issues no warnings for the above html sample, as do the validators.\n\nAlso no warnings for #152, adding the srcset attribute to both picture and source. Also added the sizes attribute to picture.\n\nTODO:\n1. Check, verify the picture attribute list.\n2. pprint to get closer to the above input lining.\n3. check the VERS_ELEM_PICTURE. Is this element supported in more than html5?\n\nPlease pull develop-500 branch, version 4.9.12+, and if you get a chance, test and close these two issues. Thanks...\n. Thanks for the input, sample html, and links.\n\nCertainly seems an img element should allow a srcset attribute. Will see what can be done.\n. Have implemented initial support for 'srcset', and threw in 'sizes', attributes on the img element...\n\nPlease pull version 4.9.11, or later, from the develop-500 branch, and if you get a chance, test and report...\n\nThanks.\n. Thanks for the report, but I do not exactly understand what I am supposed to do with the dropbox posted bad_html.mbox!\n\nIt contains a whole mess of text... I tried extracting an xhtml... like\n\n```\n<!doctype html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n... down to ...\n<!-- End Wrapper -->\n\n<img src=\"http://www.amazon.co.uk/gp/r.html?R=163YAZTOO5PF7&C=1DJAGLDKFDR0W&H=DF24H6X4JQLHMM4KWXQ7RZLK2N0A&T=E&U=http%3A%2F%2Fimages-eu.amazon.com%2Fimages%2FG%2F01%2Fnav%2Ftransp.gif\" /></body>\n</html>\n```\n\nAnd, at first, tidy seemed to have no problem with this quite messy xhtml block... some 45 warnings, the last few were -\n\n```\n...\nline 188 column 251 - Warning: unescaped & or unknown entity \"&T\"\nline 188 column 255 - Warning: unescaped & or unknown entity \"&U\"\nline 179 column 86 - Warning: missing </table>\nline 172 column 44 - Warning: missing </table>\nline 167 column 1 - Warning: missing </table>\nline 163 column 1 - Warning: missing </table>\nline 140 column 1 - Warning: missing </div>\nline 137 column 1 - Warning: missing </table>\nline 134 column 1 - Warning: <body> proprietary attribute \"yahoo\"\nline 134 column 53 - Warning: <img> lacks \"alt\" attribute\nline 137 column 1 - Warning: <table> proprietary attribute \"yahoo\nline 140 column 1 - Warning: <div> proprietary attribute \"width\"\nline 169 column 55 - Warning: <p> proprietary attribute \"width\"\n45 warnings, 0 errors were found!\n\nInfo: Document content looks like XHTML5\n```\n\nThe sequence D%252Fb%252F%253Fnode%253D4816518031 is in the input 4 times, and it is agreed Tidy does seem to truncate the xhtml output after the line -\n\n```\nD%252Fb%252F%253Fnode%253D4816518031\">Amazon Mobile App</a></span></td>\n```\n\nBUT so does the last cvs release of tidy, 2009, so this is a long, LONG term problem!\n\nI will try some tests and see if I can find this long term problem, but it is QUITE messy and difficult using such a large sample, some 60K of data... and it does seem that it maybe due to comment opening and closing... but not sure yet...\n\nIt would really help if you could extract and construct a simple xhtml sample where tidy fails?\n\nShow tidy version used, --version, input xhtml, configuration used, output received, and then output expected. \n\nThanks...\n. Thank you. That would be really helpful... more examples ALWAYS help...\n\nBut I have found the problem. AND have constructed a simple sample -\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>Tidy fails if html contains a section <![endif]--> #153</title>\n</head>\n<body>\n<p>Para 1 - before if</p>\n<!--[if !mso 9]><!-->\n<p>Para 2 in if</p>\n<![endif]-->\n<p>Para 3 - tidy missed paragraph</p>\n</body>\n</html>\n```\n\nAll tidy, probably since it was first coded to handle secions, maybe sometime well before 2009, will see the 'endif' and 100% expects `']>'`, not `]-->`!\n\nSo will continue to march to the end of the file seeking the `]>` it expects, so EVERY thing after this section is discarded.\n\nI have coded a partial fix, so that it now reads and handles the rest of the file, but the pprint.c module does not yet output that section correctly.\n\nBut now running tidy on your big sample creates an output that displays similar/same as the original, which is always ridy's aim.\n\nHope you do not mind that I have amended your title to more suit what was found.\n\nLook forward to your further report after testing this 4.9.10 version.\n. Thanks for closing... another bug bites the dust ;=))\n\nBut still must find the time to also fix the pprint.c output for this case...\n. This was fixed by changing the showingBodyOnly() function to a macro which only returns yes if TidyBodyOnly == TidyYesState.\n\nThus the warnings are still issued if the config --show-body-only yes is not set, passing the tests, but still suppressible if desired.\n. @techresources the site you point to is probably using the last release of tidy, but even the current tidy5 will do the same!\n\nWhile you may think tidy's behaviour is 'buggy', reading around I found this about double quotes... scrole down to the section on Single or Double Quotes?\n\nYou will read -\n\"In some situations, when the attribute value itself contains double quotes, it is necessary to use single quotes:\"\n\nThere are probably many other references for this...\n\nI constructed a simple sample which demonstrates the problem, while removing all the other tidy warnings, just concentrating on the quoting problem...\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>Potentially buggy attribute translation #156</title>\n</head>\n<body>\n<p><span style='font-family:\"Palatino\",\"serif\"'>good</span></p>\n<p><span style=\"font-family:\"Palatino\",\"serif\"\">bad</span></p>\n</body>\n</html>\n```\n\nPutting this html to the W3C validators will also point out the problem. And removing the offending double double quote line and it will pass.\n\nThere is just no way tidy can handle double double quotes...\n\nAccordingly I will close this issue.\n. @bobbens, thanks for adding this issue, but as far as I can see tidy has been adding these two newlines, one after a ` ` since **BEFORE** the year **2000**, so this is a **VERY OLD** tidy feature ;=))\n\nAlso from several browser viewing tests, it seems browsers generally ignore these two newline characters. That is most browsers rendering it the same whether they are added or not, so it does not harm the document view...\n\nOn the other hand we do have a feature request to have an option to reduce the vertical spacing in tidy documents, and are considering this, but it have been marked as a 'feature', and no definitive milestone added at this time... see #163 ...\n\nAccordingly I am re-labeling this as a feature, and assure you this would be looked at again if we do try to support a reduce vertical spacing option, since this would be another easy place to remove vertical spacing in the output.\n. @bobbens @camoy - Now we are post 5.0, `master` is now 5.1, and open for development, this **OLD** `bug` is revived... any help appreciated...\n. Yes, the current development is ONLY in the develop-500 branch. We hope ot move this to master soon, but for the moment you MUST only be in the develop-500 branch.\n$ git checkout develop-500\n\nNow ALL build starts with cmake. Do you have cmake installed?\n$ sudo apt-get install cmake\n\nNow there is only a little step before building -\n$ cd tidy-html5\n$ git branch # just to check you are really in the develop-500 branch\n$ cd build/cmake # get into the building directory\n$ cmake ../.. # config and generate the native build files\nafter that you are back to the simple automake mantra ;=))\n$ make\n$ [sudo] make install (if desired)\n\nAfter install tidy5 should be available to run from anywhere...\n\nAdvise if you have any trouble...\n. @dkebler PS: That build information is in the README.md AFTER you switch to the develop-500 branch...\n\nLike I say, we hope that will all be in the master branch SOON...\n. @dkebler, in the develop-500 branch, have removed some development stuff from build/cmake/build-me.sh, so you can use that if you prefer a script, but it will still not do the install. That must be done manually.\n\n$ cd build/cmake\n$ ./build-me.sh\n$ [sudo] make install (if desired)\n\nBy default will install in /usr/local/bin, the cmake default binary install location...\n\nIf you want to install it in say /usr/bin use - note the 'bin' is not added -\n$ ./build-me.sh -DCMAKE_INSTALL_PREFIX=/usr\n$ [sudo] make install\n\nAdvise any problems...\n\nHTH.\n. @balthisar feel the next release of tidy after such a long time should be as binary compatible to the last as possible...\n\nMaybe a good idea for a 5.1, 5.2, ...\n\nps: The above link is now broken...\n. @balthisar has the time for this `beast` at hand?\n. Maybe for release 5.2, or later... for now closing this...\n. @mjbshaw, @ermshiperete, have pushed a fix for this.\n\nThis occurred during the fix for Issue #111 (#112 & #113), adding an end tag to ALL elements marked StartEnd when outputting HTML5. Have left that in place but excepted all the void elements listed here http://www.w3.org/TR/html-markup/syntax.html#syntax-elements...\n\nEstablished a new service isVoidElement(node) which returns yes if in the list... maybe this service could be optimized more...\n\nWould be pleased if you could both get a chance to retest, and if ok, close this issue.\n\nBumped version to 4.9.17 in the develop-500 branch for this fix.\n. @mjbshaw you should pull and built the latest **master** branch, version 5.1.8 (2015.09.04) onward...\n\nAs can be seen in Issue #231 Tidy has a **New Feature** `--vertical-space auto` ;=))\n\nUsing your above Input and a config file of -\n\n```\n// New Feature - *NO* vertical space\nvertical-space: auto\nwrap: 0\nshow-info: no\ntidy-mark: no\n// not sure why you added this (as -access 1)\n// accessibility-check: 1\n```\n\nGets a simple single one-line html output of -\n\n```\n<!DOCTYPE html><html><head><meta><meta><title>TITLE</title></head><body></body></html>\n```\n\nwhich is more or less what you suggested... so am closing this issue...\n\nPlease feel free to re-open, or open a new issue...\n\nFor backward config capability `--vertical-space yes` and the default `--vertical-space no` will **continue** to produce what you may think of as `additional` unneccessary vertical space, but I guess it is **much loved** by many people... \n\nSetting a `yes`, the so called `tidy classic` mode, will even add some more vertical space in specific certain circumstances...\n\nAnyway, now you have an option for **no** vertical space ;=))\n. @michaeljwilliams thanks for adding this issue...\n\nBut as far as I can see tidy already has a TidyTag_MAIN and W3CAttrsFor_MAIN... You mean something is not working right?\n\nMaybe you could construct a simple 'sample' html file that demonstrated the problem. Maybe the current implementation needs fixing or extending,,,\n\nIt presently uses the generic TY_(ParseBlock) parser. Maybe it needs it own specific parser, like say TY_(ParseMain). And maybe specific 'checking' code, like that for a table, CheckTABLE, or a link, CheckLINK, etc...\n. @fred-wang have merged this change. Thanks...\n. @michaeljwilliams have coded a fix for this bug in the develop-500 branch, and bumped version to 4.9.16. If you get a chance pull the latest, and re-test. Thanks for the report.\n. @michaeljwilliams - that's BAD... tell us more of the problem and we may be able to help...\n\nWhat OS are you working in? Have you used CMake before? Does it work for other projects, or just a problem with tidy source? What cmake command did you use, or are you using the cmake-gui? Also give the full source directory, and the chosen build directory... etc...\n\nI am out of time tonight... but be back tomorrow... but maybe other can help...\n. @michaeljwilliams , ok I am Windows and Linux... no experience with OS X... but read some others had trouble getting CMake installed and working properly... I am sure one or more of our OS X users can help... hang in there ;=)) I'm sure we can get it working...\n. @jacksonp yes, somehow this anchor tag got block and mixed added. Putting it back to just inline give the previous output...\n. @jacksonp please pull version 4.9.18 if you get a chance, and re-test... thanks...\n. @jacksonp yes I reverted the behaviour because the duplication of the anchor looked very bad! Will now look for a way to allow the anchor to be around the block if html5... thanks for the quick testing and report...\n. @jacksonp see issue #169 for hopefully a solution to this...\n. @jacksonp some further fixes on doctype and version... hope for some good news...\n. @jacksonp just glad the tags are right!\n\nTo me there is a **LOT** wrong with the pprint.c module, especially when to, and to not add a new line... there is even a feature request to try and keep the current indents, lines, etc... very difficult...\n\nBut for now I am only concentrating on html tag bugs... Would appreciate you opening a new issue for the pprint output which I think will be attacked after we have 5.0.0 out the door... probably a 5.1 target, unless you, or others, can offer easy PR or diffs... dig into it...\n\nThanks for the quick testing and report...\n. @balthisar  It should be noted that these 3 tests also fail in the last 2009 release of tidy, so they are not 'new' failures.\n\nOn carefully examining each test...\n\nTest 5-2-1-2:\n\nHmmmm, as with the other tests that fail, this has been like this since before 2009, so is not due to any change in tidy5 code.\n\nI have found a small fix that outputs this access message, but not sure I understand exactly what the CheckMultiHeaders(...) service is trying to do. It was coded to ONLY test for a rowspan/column span in the first row, but the test file uses rowspan in the second row...\n\nTest 5-5-1-3:\n\nThis has a table summary that is all spaces, like -\n`<table summary=\"       \">`\n\nTidy has two error messages about this -\n  { TABLE_SUMMARY_INVALID_NULL, \"[5.5.1.2]: `<table>` summary invalid null).\"... AND\n  { TABLE_SUMMARY_INVALID_SPACES, \"[5.5.1.3]: `<table>` summary invalid spaces).\"\n\nSometime BEFORE 2009 the table parser was coded to remove space from the beginning and end of the attribute value, thus tidy now reports 5.5.1.2, and could never report 5.5.1.3. At the time of this test tidy no longer has access to the space data that was there. Since there is already a test 5.5.1.2, with `<table summary=\"\">` I propose removing this 5.5.1.3 test, since they address the same issue, a null or all space summary value.\n\nTest 5-6-1-3:\n\nLike the above, since before 2009, tidy started cleaning away the spaces, so can not separate a true blank \"\", and only spaces \"    \". In this case can not distinguish between `<th abbr=\"\">` in test 5-6-1-2 and `<th abbr=\"    \">` in test 5-6-1-3.\n\nAgain propose removing test 5-6-1-3...\n\nPerhaps tidy could be coxed into keeping this white space, but it would only ever keep one... in some pretty **old** code all white space after the first is NOT even added to the lexer... and the comments in the code make it clear that white space should be removed -\n\n```\n    /* ignore leading and trailing white space for all but title, alt, value */\n    /* and prompts attributes unless --literal-attributes is set to yes      */\n    /* #994841 - Whitespace is removed from value attributes                 */\n```\n\nSo at present the attribute value pointer is set to NULL after the white space is removed, and no other characters remain...\n\nI see no alternative but to remove these two tests... but seek comments...\n. @ralfjunker as suggested have altered the expected output, and added a big note in the commit explaining the rational... thanks...\n. @ralfjunker, yes this is a real **problem!** It stems from trying to keep HTML4-- parsing while trying to also correctly parse HTML5++\n\nOthers have tried to 'fix' this by redefining the TidyTag_A, bringing it into line with HTML5++\n\n`{ TidyTag_A, \"a\", ... (CM_INLINE|CM_BLOCK|CM_MIXED), TY_(ParseBlock), ...`\n\nBut this led to other problems when parsing HTML4--, so I have reverted it to -\n\n`{ TidyTag_A, \"a\", ... (CM_INLINE), TY_(ParseInline), ...`\n\nFor sure the following HTML5 sample, passes the W3C validator with no problem -\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"UTF-8\">\n<title>p moved out of a #169</title>\n</head>\n<body>\n<a href=\"l1\"><p>one</p></a>\n</body>\n</html>\n```\n\nBut make a few changes, bringing it back to HTML4, and the validator will complain strongly -\n\n```\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \n\"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n<title>p moved out of a #169</title>\n</head>\n<body>\n<a href=\"l1\"><p>one</p></a>\n</body>\n</html>\n```\n\nAnd of course most browsers will display them the same, with the 'one' as a link... they have no role or interest in validating or fixing the document...\n\nOne **answer** to all this would be to have **two** separate tidy libraries - html4 and html5 - but I, and maybe others, hope it does not come to that...\n\nFor such a dual mode tidy the important question is at what point does tidy choose it is in html5 mode. There are some obvious indicators, like if the document has an earlier doctype, or the user has chosen a --doctype of not html5, then it should warn, and try to fix to suit. And if in html5 mode, should leave this alone...\n\nIssue #167 is similar...\n\nI seek **discussion**, and **help** on what I think is a tricky situation, but maybe there is a simple answer I have overlooked...\n. @balthisar You make a very good point about having **TWO** libraries is just another way of **FORCING** the user to choose. And if [s]he has to choose, then why not as a --doctype, or some other new parameter, on a **single** tidy?\n\nAnd after your comments I am beginning to think the other way around on the html5 mode. It IS 2015, and html5 is getting lots of support, so tidy should default to html5 mode. That is if it finds NO doctype, like when given just a snippet of html, or finds one of the 2 declaration you mentioned, it STAYS in html5 mode.\n\nSo **ONLY** if given another --doctype, or some new parameter, by the user, OR it detects other than a html5 doctype, will it exit html5 mode, and try to correctly handle the legacy documents with appropriate warnings and fixing.\n\nYes, I have raised this issue a few times, from a long way back. It needs a resolution, to establish the code path for tidy to follow, and agree it should be placed everywhere, and anywhere that will get peoples attention...\n\nWe really **NEED** lots of **FEEDBACK** on this **TOUGH** issue.\n. @ralfjunker , @balthisar in line with the above have reverted the TidyTag_A to HTML5, and added a service TY_(AdjustTags) to change the table back to legacy mode if it find other than a HTML5 DOCTYPE.\n\nNow tidy handles the above cases differently, and hope this fixes this issue, and #167 at the same time.\n\nBut still seek **reviews** and **discussion** on this...\n. @skeet70 yes, tidy has now been coded with an initial `table` that conforms to html5, but if the document is found to be html4--, then the table is dynamically adjusted to suit. That is just by changing the DOCTYPE different parsing, and thus different warning/errors are issued...\n\nCurrently this only effects the anchor and caption tags, but there could be more to add... But now the process is there... also see Issues #167 and #196...\n\nThe code at https://github.com/htacg/tidy-html5/blob/master/src/lexer.c#L2751\n\nAccordingly am closing this, but re-open or create a new issue if still a problem...\n\nThanks for your `chime` ;=))\n. Have added a README.md to the test directory with some some explanations... and have added a testbase directory... but this is not easy!\n\nIt is really only a sort of regression test, and as can be read requires manual human viewing and interpretation, so is **NOT** promoted as something every new user needs to try.\n\nAnyway, am closing this for now since no new comments for many weeks, but feel free to re-open, or post a new issue.\n. @vielmetti, @pedromorgan, zoot, while pondering whether this needed re-opening, there was a great flurry of comments ;=)) good to see...\n\nDid not **like** some, nor agree with all the comments given, but to touch a few...\n\nIt was here that I saw some yaml that did `cp tidy tidy5`, before calling documentation\\build-doc.sh... can not find this `build-doc.sh` script to fix it... but please do not perpetuate the `5`...\n\n> It doesn't do any `make test`\n\nThat's because there are no real `unit` tests that can be done, or at least identified... \n\nDo you propose adding some, maybe using some selected files from `test/input`? \n\nLook forward to that...\n. @pedromorgan have merged this and added some stuff for MSI/EXE windows building, for OS X, and some other tweaks. Hope this did not break the DEB/RPM creation... Thanks...\n. @pedromorgan thanks, now added to demo page <a href=\"http://www.htacg.org/binaries\">http://www.htacg.org/binaries</a>... starting to look GOOD ;=))\n. @balthisar, @pedromorgan, as expressed to Pete directly I am against this... just do NOT see the need!\n\nAnd to add to BOTH would be a complete folly. And it is not enough to reason that it does no harm.\n\nA developer adding a fix has a responsibility to check for 'breakages' BEFORE commiting and pushing a change, and not depend on some remote build to show up an error, and thus require yet another fix.\n\nYes, we must do more work to make re-running the tests easier, and add more tests, but again it is the developer that should re-run such tests before commiting...\n\nBut as always, just a personal opinion.\n. @anEffingChamp as mentioned in #178 we are certainly working towards bringing this back... the previous man tidy pages were generated using xsltproc which is not a very crossplatform way... any help appreciated...\n. @pedromorgan Thanks Pete. As the link you gave points out this can **ALL** be done in CMakeLists.txt, which is where is SHOULD be done, NOT as a separate process, including -\n1. finding if xsltproc is installed\n2. running the just built tidy executable to generate the tidy-help.xml and tidy-config.xml\n3. running xsltproc to generate the tidy.1 and quickref.html\n4. installing tidy.1 and quickref.html appropriately along with the rest\n5. then cpack would pick them up and include them in the deb and rpm\n\nAs a quick guess that would be something like, added after the exe builds, before the cpack stuff, but this is obviously untested -\n\n```\nif (UNIX)\n    find_program( XSLTPROC_FOUND NAME xsltproc )\n    if (XSLTPROC_FOUND)\n        set(TIDY1XSL /path/to/tidy1.xsl)\n        set(TIDYHELP ${CMAKE_BINARY_DIR}/tidy-help.xml)\n        add_custom_target(man ALL)\n        # run built EXE to generate output\n        add_custom_command(\n            OUTPUT ${TIDYHELP}\n            COMMAND tidy5 -xml-help > ${TIDYHELP}\n            COMMENT \"Generate ${TIDYHELP}\"\n            VERBATIM\n            )\n        # repeated for tidy-config.xml\n        # run xsltproc to generate the install files..\n        add_custom_command(\n            TARGET man\n            SOURCE ${TIDYHELP}\n            COMMAND xsltproc ARGS ${TIDY1XSL} ${TIDYHELP} > ${CMAKE_BINARY_DIR}/tidy.1\n            OUTPUTS ${CMAKE_BINARY_DIR}/tidy.1\n            )\n        add_custom_command(\n            TARGET man\n            SOURCE man\n            DEPENDS ${CMAKE_BINARY_DIR}/tidy.1\n        )\n        # repeated for quikcref.html - may need different targets...\n        install(FILES ${CMAKE_BINARY_DIR}/tidy.1 DESTINATION man/man1)\n        # add the quickref.html install\n    endif ()\nendif ()\n```\n\nAnd another small point, I would like to remove this root/build/documentation folder, maybe just in root/documentation, or something. I want to simplify the actual build to -\n`$ cd build\n$ cmake ..\n$ make \n$ [sudo] make install`\n\nNeeds some experimentation... I will get around to this eventually... but any help **ADDING** this capability to CMakeLists.txt, testing and fixing, would be **MOST** appreciated...\n. Of course this ONLY addresses UNIX man page... and maybe OS X? But still to give some thought to something similar for Windows...\n. @anEffingChamp, just to clarify this, even though closed... \n\nIn unix systems, if xlsproc is installed, then the man page is auto generated, and thus will get installed on `[sudo] make install`...\n\nAnd further at this time, until 5.0.0 is released, tidy is generated as tidy5, thus the man page will be `tidy5.1`, and can be seen by `man tidy5`...\n\nWorks great in my Ubuntu ;=))\n. @anEffingChamp have you tried the --gnu-emacs yes option?\n\nI thought this output the usual `file-name:rr:cc:` in front of each warning, error...\n. @anEffingChamp yes -h is only a quite minimal screen... try -help-config for the **BIG** list.\n\nAnd we are working on more documentation, like <a href=\"http://www.html-tidy.org/documentation\">here</a>, and as suggested in your #177 also a man tidy page... slowly moving forward... any help would be appreciated...\n. @Pajamaman, well you can get back a line break after the closing div tag using `--vertical-space yes`, but this does not fix the line break after the closing h3 tag!\n\nBut you seem completely **opposite** to @jacksonp, the openner of this issue, in that, if I read correctly, in his sample he wants the ouput to be the same as his single line input. That is with **no** vertical space added at all. Can not see how **both** aims can be satisfied!\n\nThat is why I personally do not like trying to **fix** pretty print issues. It seems the definition of `pretty` depends far too much on just personal preferences, so there is no clear path for all... perhaps only by increasing the options... but we already have over 90, which I am sure some already consider too many...\n\nThat said, if you, @jacksonp, or others want to submit a patch or PR on these `vertical-space` issues, including adding or changing options, then they will certainly be considered...\n. @Pajamaman well it is not exactly `frustration`, just no **clear** direction for me, as your post indicates, suggesting a different **correct** behaviour to what @jacksonp **wants** ;=))))\n\nAs stated, if you, or others want to submit a patch or PR they will be considered... \n\nThe giant tag table - https://github.com/htacg/tidy-html5/blob/master/src/tags.c#L168 - allows you to check if a tag has CM_BLOCK or not, if that is your criteria... you need to decide what to do if it also has CM_INLINE, and other bit combinations...\n\nOf course the current pprint.c is a can-of-worms that has just grown, Grown, and GROWN as each idea was added... maybe it is time for a complete re-write, maybe offering a user-selectable alternative of say `void TY_(PPrintTree5)( TidyDocImpl* doc, uint mode, uint indent, Node *node )` ;=))\n\nOne immediate nice addition would be being able to use tabs instead of spaces for the indent - see #108.\n\nAnd others like #205 - no wrap on '=', #189 - vertical spacing, #180 - bad indentation, #163 - unnecessary vertical whitespace, #158 - newline in pre tag, and probably some more that I have missed cross referencing...\n\nDig in, and make tidy do what you think is **correct** ;=))\n. @jacksonp @Pajamaman as you may have read else where have fully updated the `master` branch, and it contains **lots** of `newlines` features, fixes, changes... version 5.1.8 (2015.09.04).\n\nI hope you get a chance to pull it, and check it out ;=)) And make sure you try the **new feature** `--vertical-space auto` option...\n\nSince this release addresses and changes some of the above `spacing`, will close this for now, but feel free to re-open, or post a new issue.\n. @jacksonp do not understand ;=((\n\nVersion: tidy -v\n\n```\nHTML Tidy for Windows version 5.1.8\n```\n\nInput: input5\\in_179.html\n\n```\n<a id=\"Section\" href=\"#Section\"><h1>Section</h1></a>\n```\n\nConfig: input5\\cfg_179.txt\n\n```\nshow-body-only: yes\nshow-info: no\nvertical-space: auto\nwrap: 0\n```\n\nOutput:\n\n```\n<a id=\"Section\" href=\"#Section\"><h1>Section</h1></a>\n```\n\nNo space??? Even if I add a space before the h1 in the input, and/or remove the show-body-only... **still no space before the h1**?\n\n#### What am I doing wrong?\n. @jacksonp, thanks for the report...\n\nActually it seems the -indent causes the problem, not the -omit. Remove it as the output is the same as the input.\n\nAnd with -indent have pushed a small change to avoid the extra blank lines. But the extra line can be brought back with --vertical-space yes.\n. @jacksonp as mentioned in #179, with the 5.1.8 release, there have been lots of `space` changes, so will close this for now...\n\nHope you get a chance to pull `master` and re-run your tests... thanks...\n. @jacksonp again do not quite understand ;=((\n\nUsing your Input, as input5\\in_180-2.html\n\nConfig: input5\\cfg_180-2.txt\n\n```\nshow-info: no\nindent: yes\n// same as -omit\nomit-optional-tags: yes\n```\n\nOutput:\n\n```\n<!DOCTYPE html>\n<meta something=\"\">\n    <meta another=\"\">\n    <title>\n      Test\n    </title>\n  <div>\n      <a id=\"Section\" href=\"#Section\">\n      <h1>\n        Section\n      </h1></a>\n    </div>\n```\n\nI guess I could open issues on -\n- that the first meta does not get indented, and \n- the fact that the div only got an indent of 2 spaces.\n\nBut I will let others do that if they feel strongly about them... and maybe present a PR...\n\nThese do **not** happen if `-omit` is **not** used, so it should not be difficult to exactly track down why these small space changes happen... it is all in pprint.c for sure...\n\nOutput:\n\n```\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta something=\"\">\n    <meta another=\"\">\n    <title>\n      Test\n    </title>\n  </head>\n  <body>\n    <div>\n      <a id=\"Section\" href=\"#Section\">\n      <h1>\n        Section\n      </h1></a>\n    </div>\n  </body>\n</html>\n```\n\n##### So again, what am I missing?\n\nOf course, I have to **remove** the `indent: yes` if I want to use `--vertical-space auto`, else I will get indent space added all over the place in the output...\n\nI guess something the tidy.c console app could do would be to, just before it loads the file, check for that auto is on, then cancel any indent... And in the help add that `--vertical-space auto` implies `indent: no`...\n\nBut I think that is a thing the user of the tidy library API, in this case tidy.c, should check, and **not** add such a contrary configuration check **inside** the library. Maybe the user wants indent space, or now tabs, added to the single line html output ;=))\n\nSo, yes, this answers why you got a `space` in #179. You guessed correctly... the -i otpion is kinder contrary to wanting a very **compact** html output offered by `auto`...\n. @jacksonp ok, agree `--vertical-space auto` was more an aside...\n\nAnd sorry it took me so long to `understand` this issue, although it should have been clear from the title `Bad indentation with -omit` ;=))\n\nBut would also appreciate ideas on what would be the **best** indenting in this case... with `--indent-space 2` maybe -\n\nExpected Output 1:\n\n```\n<!DOCTYPE html>\n  <meta something=\"\">\n  <meta another=\"\">\n  <title>\n    Test\n  </title>\n  <div>\n    <a id=\"Section\" href=\"#Section\">\n    <h1>\n      Section\n    </h1></a>\n  </div>\n```\n\nBut really the doctype is not really a tag, so why the first indent? Maybe this would be better -\n\nExpected Output 2:\n\n```\n<!DOCTYPE html>\n<meta something=\"\">\n<meta another=\"\">\n<title>\n  Test\n</title>\n<div>\n  <a id=\"Section\" href=\"#Section\">\n  <h1>\n    Section\n  </h1></a>\n</div>\n```\n\nAnd then again, perhaps it should exactly mirror the indented output like when `-omit` is not used, just removing the omitted tags -\n\nExpected Output 3:\n\n```\n<!DOCTYPE html>\n    <meta something=\"\">\n    <meta another=\"\">\n    <title>\n      Test\n    </title>\n    <div>\n      <a id=\"Section\" href=\"#Section\">\n      <h1>\n        Section\n      </h1></a>\n    </div>\n```\n\nMaybe this third is more easily achieved, especially since the current output is already very close to it. The other 2 have more space changes, maybe meaning more code changes...\n\nOf course these are only a `target` expectation... depends on what is needed to **fix** the indent after a tag has been omitted...\n\nWhat do you, or others, think?\n\nAm re-opening to remind me to look at this, unless someone beats me to it with a PR!\n. @jacksonp LOL, I could have guessed you would `prefer` the **most** difficult ;=))\n\nAnd more than that, you threw in **few** other additional requests!!!\n- do not wrap in title element\n- do not wrap in anchor element\n- do not wrap in h1 element, maybe all header elements...\n\nTidy has been wrapping those elements since year dot ;=)) Way back to `Dave Raggett's Original` release dated 04 Aug 00, 15 years ago, which is the earliest tidy I have!!!\n\nThat is to say these newlines are **bred** into tidy, in it's soul, in it's blood... The new feature `--vertical-space auto` was to get rid of them **ALL**... but it can **not** be `selective`, and keep some!\n\nTo keep a newline for some selected elements, cases, situations, things and not others, would take some really severe work... and that is after such a RFC is fully defined... which elements, cases, etc...\n\nIn fact I think to achieve that and **not** mess up lots of other things you would be better off re-writing the entire pprint module... \n\nThis is very unlikely to happen. Certainly not by me... so will treat those additional **requests** as an aside... I am sure some have been voiced, discussed in other issues...\n\nI am not saying changing the 15 year old behavior of tidy should not be concsidered, just not as part of this specific `Bad indentation with -omit` issue...\n\nSo will take your vote as for Output 2:, a reasonable choice, which at this time also has my vote... +2 for Output 2: ;=))\n\nNow to do some debug runs to see if I can figure out why, where, what can be done **only** about the `messy` indent... and see what solutions are available...\n. @jacksonp Ok, have now done quite a few debug sessions to try to work out what is going on, but the pprint module is **very** difficult to follow... but think I found a solution...\n\nThe following are some notes... I find it helps me understand the process if I try to explain it all to others, in glory detail... so feel free to skip down to **That did it!** - the solution...\n\nNow it turns out there is also an alias option for `omit-optional-tags`, namely `hide-endtags`. In the code they are uses OR-ed together -\n\n```\n    Bool hideend  = cfgBool( doc, TidyHideEndTags ) ||\n                  cfgBool( doc, TidyOmitOptionalTags );\n```\n\nAnd this is used only once, thankfully, in the `TY_(PPrintTree)(...)`, the PP function, which is repeatedly called to output every node. \n\nPP checks for more than a dozen specific node types, and this is in the `else /* some kind of container element */`, which again checks for 2 or 3 more specific node types, and the above code is again in the final `else /* other tags */` section. \n\nSo it is sort of in the `general-general` case... the GG case... read lots of nodes go through here...\n\nIn here the tag is only printed, if it is `!hideend`, or it has attributes, so after the specific service has output the doctype, the following `html` and `head` tags are skipped.\n\nThe next `meta` tag is printed as one of the `special` PP cases, and anything in the pprint buffer is flushed, but there is nothing at this time. That is it is a node with `TY_(nodeCMIsEmpty)(node)`, so the tag is added to the pprint line buffer...\n\nNow the second `meta` arrives, and this will flush the first to actual output, and since the `WantIndent(doc)` returns `no`, no leading spaces are added to the first... and it is printed flush left... then the second meta tag is added to the pprint line buffer...\n\nThen the `title` tag arrives, and this will flush the second `meta` to output, but now `WantIndent(doc)` returns `yes`, and indent spaces are output **before** that 2nd `meta` is output, so it is indented...\n\nNow that is because on the flush of the 1st meta, `pprint->indent[ 0 ].spaces` got set to `indent` which is 4 at this time. And the first test in `WantIndent(doc)` is to check `pprint->indent[ 0 ].spaces` and if this is greater than zero do some more checks and return `yes`, so the second `meta` gets this indent 4...\n\nWhy is the indent equal to 4? One of the parameters passed to PP is this `uint indent` value. \n\nOn the first call to PP with the `root` node, and the next `doctype` node it is zero(0). Thus when the doctype is flushed to output, the mysterious `pprint->indent[ 0 ].spaces` stays zero. That is `WantIndent(doc)` will return `no`.\n\nNow one of the services called in this GG case, and in some other cases in the PP, is `ShouldIndent(doc,node)`. If this returns `yes`, then the `indent` will be bumped by `spaces`, which defaults to 2. And that incremented indent will be passed to the PP to print the child nodes...\n\nSo when the `html` node came through, indent is bumped to 2, even though it was not printed. And then when the `head` came through, indent is again bumped by 2, making it 4, even though it is also not printed...\n\nNow there's the rub! We have accumulated an indent even though the tags were not output!!!\n\nHmmm, an idea. If tidy knew earlier that it was not going to print that tag, then also don't bump the indent... or alternatively reduce the bumped indent when the tag is not printed... Let me try that latter idea... the least easiest code change...\n\n**That did it!** ;=)))))))))))))\n\nOutput 2:\n\n```\n<!DOCTYPE html>\n<meta something=\"\">\n<meta another=\"\">\n<title>\n  Test\n</title>\n<div>\n  <a id=\"Section\" href=\"#Section\">\n  <h1>\n    Section\n  </h1></a>\n</div>\n```\n\nPatch:\n\n```\ndiff --git a/src/pprint.c b/src/pprint.c\nindex 4b4593d..7d011e8 100644\n--- a/src/pprint.c\n+++ b/src/pprint.c\n@@ -2312,6 +2312,15 @@ void TY_(PPrintTree)( TidyDocImpl* doc, uint mode, uint indent, Node *node )\n                           (TY_(nodeHasCM)(node, CM_HEAD) && !nodeIsTITLE(node)) )\n                     TY_(PFlushLineSmart)( doc, contentIndent );\n             }\n+            else if ( ShouldIndent(doc, node) )\n+            {\n+                /*\\\n+                 * Issue #180 - If the tag was NOT printed due to the -omit option,\n+                 * then reduce the bumped indent under the same ShouldIndent(doc, node) \n+                 * conditions that caused the indent to be bumped.\n+                \\*/\n+                contentIndent -= spaces;\n+            }\n\n             last = NULL;\n             for ( content = node->content; content; content = content->next )\n```\n\nAppreciated it if you could cut that patch into your local master and give it a try...\n\nI have to do some other work to do to update the `test/testbase` folder to the current 5.1.8 master output so that before I commit this simple patch, I can re-run the full test suite to make sure this patch has no other adverse consequences... but it looks very sane...\n\nBe back soonest... probably a few days...\n. @jacksonp ok the update of the `test/testbase` proved easier than expected so that is done...\n\nAnd have pushed this pprint.c fix. And bumpted the version to 5.1.9 (2015.09.10) for this change...\n\nAnd as far as I can see it has no effect on the some 227 tests done by `alltest.cmd`...\n\nThanks for sticking with this, making me see this was a completely different issue to the space and newline issues I had put it in...\n\nIf you can confirm all is well, maybe you can finally close this issue ;=))\n. @pedromorgan, @balthisar, thanks for adding this... \n\nI did a test in my Ubuntu 14.04, and it worked fine... and tidy5.1 got added to the deb...\n\nAdded a small tweak... all output should be kept to the 'build' folder, the so called CMAKE_BINARY_DIR, so it can be .gitignore'd, and not polute the source tree.\n\nAnd that would be true for any added cmake docs generation, so it also does NOT become part of the source. Preferrably into a sub-directory, like say `${CMAKE_BINARY_DIR}/docs` so it can all be ignored by one entry to .gitignore.\n\nOf course the needed components, like the tidy1.xsl, .cfg, etc have to be part of the source, BUT not any generated items...\n\nAnd as previously expressed hope these can soon be moved to says a 'docs' directory, or somewhere, but out of the build directory...\n\nStill to think on a window equivalent... any ideas appreciated...\n. @pedromorgan, @balthisar, just did an install test, and now think the line \n`install(FILES ${CMAKE_BINARY_DIR}/${TIDY_MANFILE} DESTINATION local/man/man1)`\nshould be just `... DESTINATION man/man1)`\n\nSeems cmake already adds the prefix `/usr/local` so the man page ended up in `/usr/local/local/man/man1/tidy5.1`, but I am certainly NOT an expert on where things should go in unix ;=(( Just tried it, did install and `man tidy5` brings up a 4.9.20 page ;=))\n\nAs for windows there is no 'man' but as part of the SDK or MSVC there is a help file compiler, that if I remember correctly begins as a .rtf then uses something like a hcrtf.exe to convert to a winhelp .hlp file, but so long since I did this, need to re-discover the process...\n\nAnd will pull the branch for further testing soonest... but not sure why there is a PR and a branch... but will try to work it out ;=))\n. @pedromorgan, that is strange that two linux cases do different install things!\n\nFirst, I did not use the deb to install it. I just used -  \n$ sudo make install\n\nAnd for some idiot reason can not get the deb generated at the moment... something not found and can't write some file... all too weird... it worked yesterday using  \n$ make package, or  \n$ cpack\n\nBut if you run -  \n$ dpkg -c tidy5-4.9.20-64bit.deb  \nwhere does it show it will install the tidy5.1 - the full path is shown...\n\nAs stated with `local/man/man1` in CMakeLists.txt, I found it in `/usr/local/local/man/man1`...\n\nIf you want to try `manpath` and split the output that is also fine. If cmake finds a FULL path, like `/usr/local/man/man1` it knows not to add an install prefix, which is `/usr/local` by default...\n\nAnd right at this moment to me master IS the development branch, as it usually should be...\n\nWhen we get to a 5.0.0 release, then it is my idea to create say a rel-5.0.0 branch, which people checkout if they want the last 'stable'. master is always the leading edge of develpment and should not garanteee anything... but we are not there yet...\n. @pedromorgan, ok, got the deb to build... using cpack... just closed and re-opened a terminal???\n\nThis is using a modified CMakeLists.txt, with DESTINATION man/man1\n\n$ dpkg -c tidy5....deb\n\nshows it will install in `/usr/man/man1/tidy5.1`???? WHAAAA! What's going on here!?!?!? \n\nThe cmake_install.cmake CLEARLY shows -\n\n```\nIF(NOT DEFINED CMAKE_INSTALL_PREFIX)\n  SET(CMAKE_INSTALL_PREFIX \"/usr/local\")\n```\n\nThen a little later -\n\n```\n FILE(INSTALL DESTINATION \"${CMAKE_INSTALL_PREFIX}/man/man1\" ...\n```\n\nSo that means `$ sudo make install` will go to the right place, while using the DEB will send it to some other BAD place??????????\n\nNow, on the other hand, if I alter the CMakeLists.txt to the absolute path `/usr/local/man/man1' then as I thought, cmake_install.cmake AND the DEB agree ;=)) as they should...\n\nBut the cmake file adds a curious WARNING or ERROR if the user defines CMAKE_[WARN|ERROR]_ON_ABSOLUTE_INSTALL_DESTINATION? But I suppose we can ignore this...\n\nSo maybe using `manpath` to set this absolute path is the way to go...\n\nAlso note reading around that appearently Fedora uses `${CMAKE_INSTALL_PREFIX}/share/man/man1`... which is also output as one of the paths from 'manpath'... so maybe this is the best choice?\n\nAnd another titbit read during my searching and that is what package should be generated for what system...\n\nIt said add `include(SystemSpecificInformations)` to your CMakeLists.txt, then SPECIFIC_SYSTEM_PREFERED_CPACK_GENERATOR will contain the preferred generator for the system. And suggested the list would be - \n1. Windows - NSIS\n2. Debian - DEB\n3. Ubuntu - DEB\n4. Fedora - RPM\n5. SuSE - RPM\n6. other linux - TGZ\n\nI will experiment in my cpack-test repo, which I suppose is where true 'experimentation' should take place...\n\nYou can learn more every day ;=))\n. @pedromorgan, UGH, experimenting in cpack-test and reading some more seems you need to more or less write your own SystemSpecificInformations.cmake as it seems not part of the standard cmake distribution, so forget that last stuff!\n\nLet's just get the man page setup correctly...\n. @balthisar have had a look at the cmake_documentation branch. But not the PR? The CMakeLists.txt looks fine but some questions...\n\nWhy do you separate building libtidy/tidy and the documentation? That is if I add -DBUILD_DOCUMENTATION=ON you switch off building tidy, BUT the tidy exe is needed for part of it...\n\nTo me building tidy should ALWAYS be ON. That is what the project is about... and should NOT need to be switched off just because something else is also built...\n\nNow building the man page tidy5.1 is ONLY for unix, NEVER windows... as explained, windows uses an entirely different 'help' system... different tools, different source, different output...\n\nAnd if cmake is always building tidy exe than it is a 'target' so cmake 'knows' where it put a target output... we do not need to find it where ever it was output...\n\nJust for information in windows the output is in `build/cmake/<configuration>/tidy5[d].exe`, where the configuration can be Release, Debug, plus some others... and not in the root build/cmake as it does in linux... and note the 'd' added for the Debug version...\n\nBuilding the doxygen generation can also be done in window, if you have doxygen installed, which I do, but the tidy binary would not be found as you wrote it, but as suggested above we should not need to 'find' tidy, if it is already a 'target'. \n\nSo trying to separate the things...\n1. Let's always build tidy, no matter what else is being built.\n2. Let's always use that built tidy to output to say `${CMAKE_BINARY_DIR}` tidy-help.xml, tidy-config.xml, tidy.help.txt, tidy.config.txt.\n3. Have already added the first 2 to .gitignore. Just need to add the other 2, and no need to clean up.\n\nThis would be done in ALL platforms, since it only requires the built product, tidy5 binary, where ever it is put...\n\nNow if (UNIX), then we can check for xsltproc, and if found generate the man page to be part of the install... and deb,... with the two files already available...\n\nAnd finally, if (BUILD_DOCUMENTATION) then we already have some of the files needed. Only need to check if doxygen exists... and the 4 files are available, BUT in windows, remember NO xsltproc, so may need some switches for that...\n\nUsing a 'temp' directory is fine, but again why not in `${CMAKE_BINARY_DIR}/temp/` then you do NOT need any clean up... but can if you want... You will also note the root .gitignore already tells git to ignore everything temp*\n\nSo to experiment in windows I just added -\n\n```\nset(TIDYHELP ${CMAKE_BINARY_DIR}/tidy-help.xml)\nset(TIDYCONFIG ${CMAKE_BINARY_DIR}/tidy-config.xml)\nset(TIDYHELP2 ${CMAKE_BINARY_DIR}/tidy.help.txt)\nset(TIDYCONFIG2 ${CMAKE_BINARY_DIR}/tidy.config.txt)\nadd_custom_target(docs ALL DEPENDS tidy5)\nadd_custom_command(\n    TARGET docs\n    COMMAND tidy5 -xml-help > ${TIDYHELP}\n    COMMAND tidy5 -help-config > ${TIDYCONFIG}\n    COMMAND tidy5 -show-config > ${TIDYCONFIG2}\n    COMMAND tidy5 -h > ${TIDYHELP2}\n    COMMENT \"Generate ${TIDYHELP} ${TIDYCONFIG} ${TIDYHELP2} ${TIDYCONFIG2}\"\n    VERBATIM\n    )\n```\n\nInserted it just before the 'Create man pages' block, and it worked in windows... I got the 4 files created... and just tried the same in linux, and it worked there too... and of course in both cases I had to make sure there was no other tidy5 in the path... that is tidy5 -h yielded an error...\n\nHope this helps... \n\nAnd BTW I am not actually a cmake Guru ;=(( Just a very good cmake documentation searcher using google/yahoo/etc... and always find someone else has answered my question when, sometimes by chance, I phrase it correctly... sometimes need a few tries at this...\n. @balthisar hi, long time no hear ;=((\n\nNow that documentation building is now in the root CMakeLists.txt, and it seems to sort of work - some inputs, outputs could be arranged better - but is this PR needed now?\n\nLikewise for the cmake_documentation branch...\n. As the documentation generation is now merged into the `master` branch, am closing this for now...\n\nThe generation needs some more testing, but seems to mostly work...\n. And as github offers to delete this `cmake_documentation` branch will try that..\n. <a href=\"https://github.com/geoffmcl\"><img src=\"https://avatars.githubusercontent.com/u/1333435?v=3\" align=\"left\" width=\"48\" height=\"48\" hspace=\"10\"></img></a> **Comment by [geoffmcl](https://github.com/geoffmcl)**\n_Sunday Jan 18, 2015 at 19:10 GMT_\n\n---\n\nHi eksperimental,\n\nThank you for the report, and sorry about the\ndelay in my response...\n\nHmmm, this is QUITE difficult ;=((\n\nAs you point out, for html4 (and less), ids 'test',\n'Test' and 'TEST' are the same, thus the warning.\n\nSo how to keep this behaviour if the documents is\nhtml4, while at the same time treat them differently\nfor html5???\n\nThis check is done AFTER the parsing of the whole\ndocument, so could possibly 'guess' if it looks\nlike htm5 and act differently...\n\nOr it could be based on say the --doctype html5\nuser config input. If this doctype is given, only\nthen treat it as html5...\n\nNeed to think and consult on this... Will be back\nsoonest...\n\nRegards,\nGeoff.\n. <a href=\"https://github.com/subhaze\"><img src=\"https://avatars.githubusercontent.com/u/141903?v=3\" align=\"left\" width=\"48\" height=\"48\" hspace=\"10\"></img></a> **Comment by [subhaze](https://github.com/subhaze)**\n_Tuesday Jan 20, 2015 at 01:54 GMT_\n\n---\n\nJust jumping in with a thought. Would it be a bad thing if tidy-html5 only focused on html5 and allowed the existing tidy be the go to for html4?\n. <a href=\"https://github.com/eksperimental\"><img src=\"https://avatars.githubusercontent.com/u/9133420?v=3\" align=\"left\" width=\"48\" height=\"48\" hspace=\"10\"></img></a> **Comment by [eksperimental](https://github.com/eksperimental)**\n_Tuesday Jan 20, 2015 at 05:51 GMT_\n\n---\n\n@subhaze oh really, I thought tidy-html5 was a fork of tidy(-html4) that focused only on html5.\n@geoffmcl if the document doesn't explicitly say it's html4, i think tidy-HTML5 should treat it as html5.\n\nwhat you guys think?\n. <a href=\"https://github.com/subhaze\"><img src=\"https://avatars.githubusercontent.com/u/141903?v=3\" align=\"left\" width=\"48\" height=\"48\" hspace=\"10\"></img></a> **Comment by [subhaze](https://github.com/subhaze)**\n_Tuesday Jan 20, 2015 at 12:26 GMT_\n\n---\n\n@eksperimental you are right, it's a fork to add additional support. I was just throwing out a thought on if things begin to be very difficult on keeping BC, potentially moving to just HTML5.\n. <a href=\"https://github.com/geoffmcl\"><img src=\"https://avatars.githubusercontent.com/u/1333435?v=3\" align=\"left\" width=\"48\" height=\"48\" hspace=\"10\"></img></a> **Comment by [geoffmcl](https://github.com/geoffmcl)**\n_Tuesday Jan 20, 2015 at 12:36 GMT_\n\n---\n\nHi,\n\nWhile I agree life would be MUCH easier if\nwe just separated the two - leave tidy to do\nhtml4 and earlier, and have tidy5 treat everything\nas html5, that has /NEVER/ been the aim!\n\nAnd such a library separation also represents\nadditional maintenance, like when a bug is\nreported that applies to both... two sources,\nor a very messy macro switched source... UGH!\n\nAt present tidy5 tries to guess what type of\ndocument it is... if it finds tags, attributes,\nfeatures, etc only in html5, then it chooses\nhtml5... And likewise for html4, or earlier...\n\nAlso there is a --doctype html5 command that\nindicates to tidy5 that you want the output with\na html5 doctype...\n\nThe options for doctype are html5, omit, auto,\nstrict, transitional, and user, with auto\nbeing the default.\n\nSo far this has been quite successful... and\nfor the present will continue to try to have\nfull functionality in the next release of\ntidy[5] ;=))\n\nAnd you will note the W3C validator is now trying\nto do the same... so this is a push for the\nsingle, very intelligent, tidy[5]...\n\nRegards,\nGeoff.\n. <a href=\"https://github.com/subhaze\"><img src=\"https://avatars.githubusercontent.com/u/141903?v=3\" align=\"left\" width=\"48\" height=\"48\" hspace=\"10\"></img></a> **Comment by [subhaze](https://github.com/subhaze)**\n_Tuesday Jan 20, 2015 at 12:55 GMT_\n\n---\n\nGeoff, thanks for the details. I'm glad to see you're up for the task on\nkeeping everything supported :)\n\nAnd again, many thanks for putting life back into this tool.\n. @eksperimental, @subhaze moved this issue to here where the current development of tidy is taking place...\n\nFor now we are continuing with a single tidy, which defaults to html5 mode unless it finds a DOCTYPE of html4 or earlier, so should now be able to address this issue here...\n. @eksperimental, have pushed hopefully a fix for this...\n\nIf you get a chance pull version 4.9.21++ and test again... thanks...\n. @eksperimental since no further comments for nearly a month, assume this is 'fixed'.\n\nAccordingly am closing this for now... feel free to re-open, or open other issues... thanks...\n. @setupio, Yes, in a recent change FreeNodes() can depends on the doctype to deternine what hash is used, and this requires a call to HTMLVersion() which expects the lexer to exist...\n\nAs you suggested, I have moved the freeing of the lexer to just about last, in two places, so I hope the 'crash' has gone...\n\nWhat I really do not understand is why I did not get this crash before, in any of my testing... Maybe it is a case of sometimes first chance exception are skipped or something...\n\nAnyway, hope you get a chance to pull v 4.9.23 or later and re-test... Thanks for reporting...\n. In more than a month of testing this issue appears to be fixed.\n\nAccordingly, will close here, but feel free to re-open, or open a new issue... thanks...\n. @bdheeman, thanks for the diff...\n\nGeneration and Install of the TIDY_MANFILE in unix...\n\nAgree with the correction of the location of the tidy-config.xml in tidy1.xsl. This gets rid of an xsltproc warning...\n\nAnd I do agree `local/man/man1` appears wrong. It is my understanding that cmake automatically adds its CMAKE_INSTALL_PREFIX so should this not just be `man/man1`?\n\nWhen I look in cmake_install.cmake I see that if no CMAKE_INSTALL_PREFIX is defined, it gets set to `/usr/local`, but then a little later the DESTINATION of tidy5.1 is hard coded to `/usr/local/man/man1`! Why is it not using the CMAKE_INSTALL_PREFIX?\n\nHowever, if I add a specific `-DCMAKE_INSTALL_PREFIX=$HOME/projects/install/tidy-html5`, now the DESTINATION of tidy5.1 is as I expect `${CMAKE_INSTALL_PREFIX}/local/man/man1`... But that also seems wrong, in that now the default would be `/usr/local/local/man/man1`\n\nAdding your suggested change, and not specifying an install prefix, and the DESTINATION goes back to the hard coded `/usr/local/man/man1`!\n\nBut now if I add my specific install location, it is ignored, and the hard coded `/usr/local/man/man1` is used again.\n\nSo it seems if I change to what you suggest, then any specific user install location is ignored, at least for that file. Now maybe that is correct since what would be the use installing a man page in some `remote` location...\n\nFinally, if I change the CMakeLists.txt to what I suggest, then the install uses `${CMAKE_INSTALL_PREFIX}/man/man1` whether I give a specific prefix or not... so this seems the right choice...\n\nAnd that includes using what some might prefer `-DCMAKE_INSTALL_PREFIX=/usr`, to override the cmake local default... so have pushed these...\n\nBut I am a 100% windows person, and have only been using unix for a relative short time, so look forward to further advice on what might be a better choice?\n. @bdheeman, @anEffingChamp, @pedromorgan, @balthisar, @ryandesign as pointed out in Issue #193, the <a target=\"_blank\" href=\"http://www.pathname.com/fhs/\">Filesystem Hierarchy Standard (FHS)</a> doc states `usr/share/man/man1` is the correct place for this install, so have adjusted the CMakeLists.txt to `share/man/man1`... which I hope is the final choice...\n\nThis was also discussed in #177, and #181... and `-DCMAKE_INSTALL_PREFIX=/usr`, needs to be used  override the cmake `/usr/local` default....\n\nOf course, until the release, while we continue to use `tidy5` as the name you need to use `$ man tidy5` to display this page...\n\nAccordingly, am closing this, but flee free to reopen, or post another issue if there is still a problem...\n. @bdheeman, agreed, should not need to...\n\nHave modified CMakeLists.txt to accomodate 3 user additions when running cmake\n1. -DTIDY_CONFIG_FILE=\"/path/to/config\"\n2. -DTIDY_USER_CONFIG_FILE=\"/path/to/config\"\n3. -DSUPPORT_GETPWNAM=1\n\nPlease pull 4.9.22 or later, and test... Thanks for reporting...\n. @bdheeman no response for over a month so assume 'fixed' so closing...\n\nFeel free to re-open if still a problem, or open a new issue... thanks..\n. @Zackio, might be a 'bug' or a 'preference' ;=))\n\nIt seemed 'classic' Tidy added LOTS of vertical space, and hope I have left that mostly untouched if you add `--vertical-space yes` to the config, although I too do not particularly 'like' the double blank line you show...\n\nUnless someone beats me to it, and submits a PR I will take another look when I get a chance, but as mentioned elsewhere I am putting 'Pretty Print' output issues on the backburner for now...\n\nSo am marking this issue accordingly... As always, thanks for testing and reporting...\n. @Zackio as you may have noted, this `vertical-space` option is being dealt with and discussed in #228. Maybe you have some preferences here... and that includes where the so called `classic` mode should be employed...\n\nIf you get the chance to pull the latest `master` 5.1.x, and redo the test... \n\nIs this still a problem? If yes, maybe we should bump this to `bug` status...\n\nNow that release 5.0.0RC1 is rolling, it is certainly the time to re-visit, and if necessary `fix` this...\n\nDo you have any problem compiling from source? \n\nWe are presently missing a MAC binary from - http://www.htacg.org/binaries/ - \n\nCan you help with that? That is generate a Disk Image file, and put is somewhere I can get it? That would be very helpful... thanks...\n. @Zackio as you may have read else where have fully updated the `master` branch, and it contains **lots** of `newlines` features, fixes, changes... version 5.1.8 (2015.09.04).\n\nI hope you get a chance to pull it, and check it out ;=)) And make sure you try the **new feature** `--vertical-space auto` option... or download a binary from http://www.htacg.org/binaries/ ... but still in need of a mac binary...\n\nSince this release addresses and changes some of the above `spacing` issues, will close this for now, but feel free to re-open, or post a new issue.\n. @Zackio as you may have noticed @balthisar has added some later MAC [binaries](http://www.htacg.org/binaries/) up to version 5.1.14, but if you can build from source then the `master` branch is 5.1.17 with more improvements...\n\nHope you get a chance to try the latest...\n. @skynet, well at this point we are generating a libtidy5.so.4.9.23, aka -ltidy5, so an install of this version will not clobber any existing tidy install, so comparisons can be made...\n\nThis will only be changed to 'libtidy.so...', aka -ltidy on the eventual release of tidy 5.0.0. In preparation for this name change I have just pushed a modified CMakeLists.txt using a macro for the name, like set(LIB_NAME tidy5). So do another pull...\n\nTaking a quick look in php-5.6.7 configure I can see (a) it seems to support both the static and shared libtidy, and (b) for sure it is searching for 'tidy', as it should, NOT 'tidy5'. Not sure how you could change that to seeking 'tidy5'... but there would be a way...\n\nBut if you want to test compile with php as is, then just change the name in line 5 of CMakeLists.txt to set(LIB_NAME tidy), and recompile, install...\n\nHope this helps, and look forward to your report of success.\n. @anEffingChamp thanks for that quick tip! Being mainly a 'windows' person I would never have thought of that ;=))\n\nI took a look in my Ubuntu 14.04 and noted that the previous version of tidy installed is libtidy-0.99.so.0.0.0, and then there are 2 links -\n1. libtidy.so -> libtidy-0.99.so.0.0.0\n2. libtidy-0.99.so.0 -> libtidy-0.99.so.0.0.0\n\nAnd my new version is libtidy5.so.4.9.23, also with two links\n1. libtidy5.so -> libtidy5.so.4.9.23\n2. libtidy5.so.4 -> libtidy5.so.4.9.23\n\nSo what, I delete the 2 current libtidy links, and then just do -\n1. sudo ln -s libtidy5.so.4.9.23 libtidy.so\n2. sudo ln -s libtidy5.so.4.9.23 libtidy.so.4\n\nIs that it? Or have I got that in reverse? And maybe I do not need to do the deletes? \n\nAnd I also have 2 static libraries there, libtidy.a and libtidy5.a. Should I do anything about them?\n\nSorry for all the questions on linux things...\n. @anEffingChamp, certainly in the @skynet case of building php from source, I think the automake tools are looking for the tidy library, not the console binary... \n\nAnd interestingly, in another project, that uses cmake, added a `FindTIDY.cmake` module I wrote, then do `find_package(TIDY)`, and it seems IF I leave the static libtidy.a installed, this is found first, and thus I end up linking with the static library. Not a particularly bad thing, but...\n\nOnly if I **DELETED** the installed static library, would it find the libtidy.so!\n\nStill to try the change-in-the-link thingy... and thanks for the pointer that `ln` can also be used to run console `tidy5` using just `tidy`... in my case such binaries are in either `/usr/bin` or `/usr/local/bin`, or in my own private `$HOME/bin`, all of which are in my `PATH` environment variable...\n\nAnd remember if you want to check EXACTLY what is being used in the compile and link add the option `-DCMAKE_VERBOSE_MAKEFILE=ON`, and all is revealed ;=))\n. Reading around more on this `shared` versus `static` libraries, we could build, and thus install, BOTH at the same time, BUT for windows at least such libraries have to have different names, like tidy_static.lib, and tidy.lib/tidy.dll for shared pair (DLL).\n\nSome other examples I have seem are just adding an 's' for static, tidys.lib. Others choose to change the archive name of the shared pair, like tidy_imp.lib/tidy.dll. And there are probably many other choices...\n\nAnd although in unix they CAN have the same base name, since one would be libtidy.a, and the other libtidy.so, the above exploration, and reading, shows libtidy.a is likely to be found first, although I have read others think this is the opposite! So also using libtidy_static.a, or libtidys.lib seems a better, clearer choice.\n\nAnyway, this is just a thought a little off topic... for discussion... ATM CMakeLists.txt builds only one or the other, and contains an option `-DBUILD_SHARED_LIB:BOOL=[ON|OFF]`. The present default is OFF.\n. @skynet as mentioned earlier it seems if you have **BOTH** the static `libtidy.a` **AND** the shared `libtidy.so` **INSTALLED** then I found many tools tend to find the static version first...\n\nAnd your errors indicate it found and tries to use `/usr/local/lib/libtidy.a`, the **STATIC** library. Maybe just deleting this, and it has a chance to find the installed **SHARED** `libtidy.so`...\n\nWhich PHP source are you using? If you point me to the source maybe I can download and try a compile... I agree we should be able to compile PHP **with** tidy5 support...\n. @denji do not know anything about the accuracy of the cppcheck tool, but will try to find time to test...\n\nBut adding it to this thread is **NOT** the right places... Please perhaps delete it here and open a new issue... thanks...\n. @skynet 3.6.9????\n\nI can find the current stable release source 5.2.6... that's major version 5, not 3!!!\n\nSo again from where? Is this an OLD source, or what? Are we talking about the same thing ;=))\n. @skynet but it is a new `standard` ;=))\n\n```\ncd tidy-html5\ncmake .\nmake\nmake install\n```\n\nExactly like ./configure, cmake does configuration - checks for dependencies, etc, and then generates a Makefile... **_AND**_ cmake is cross-platform, so it works just as well in Wndows...\n\nOut of time tonight, but be back tomorrow...\n. @skynet, well so can I... and I had no trouble building php-5.6.9 ;=))\n\nUsed -\n1. $ cd php-5.6.9\n2. $ ./configure --with-tidy=/usr > bldlog-u.txt 2>&1\n3. $ make >> bldlog-u.txt 2>&1\n\nThe relevant sections from the build log...\n\n```\nchecking for TIDY support... yes\nchecking for tidyOptGetDoc in -ltidy... yes\n\n# and later in the compile\n\nmode=compile cc  -Iext/tidy/ ... -c .../ext/tidy/tidy.c -o ext/tidy/tidy.lo \n\n# and finally in a link\n\nmode=link cc -export-dynamic ... ext/tidy/tidy.lo ... -o .../php-cgi\n\n# at the end\n\nBuild complete.\nDon't forget to run 'make test'.\n```\n\nNote that I build tidy5 with `$ cmake path/to/src -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIB:BOOL=ON`\n\nThe first is to ensure it is installed in `/usr`, and NOT the cmake default `/usr/local`!\n\nThe second is to ensure -DNDEBUG is added to the compile to remove `assert` from the build.\n\nThird is to build shared libraries...\n\nBIG NOTE, this presently installs as `tidy5`, so I created soft links in `/usr/lib` to `tidy` so it can be found by other packages -\n\n```\n-rw-r--r-- 1 root root 826916 Apr 29 18:21 libtidy5.a\nlrwxrwxrwx 1 root root     13 Apr 15 17:11 libtidy5.so -> libtidy5.so.4\nlrwxrwxrwx 1 root root     18 Apr 15 17:11 libtidy5.so.4 -> libtidy5.so.4.9.25\n-rw-r--r-- 1 root root 698692 Apr 15 16:50 libtidy5.so.4.9.25\nlrwxrwxrwx 1 root root     13 Apr 15 17:22 libtidy.so -> libtidy5.so.4\nlrwxrwxrwx 1 root root     18 Apr 15 17:22 libtidy.so.4 -> libtidy5.so.4.9.25\n```\n\nI do also have static libtidy5.a there, but no soft link to it so other packages do not find it...\n\nIf @ermshiperete does **not** want to support a windows build, or has kept the old very out of date MSVC stuff I supplied **LONG** ago, then that is fine too...\n\nCMake allows us to be fully cross-platform with **ONE** build system... And it **works** fine also ;=))\n\nI too will be happy when we get to the 5.0.0 release stage, and the name is reset to just `tidy`, removing the need for the soft links... but please bear with us on this...\n. @ermshiperete have you tried `make package`?\n\nThis builds deb and rpm packages, and could do more, like a source tar.gz, etc... read cmake cpack capability...\n\nIn Windows if you have the necessary tools installed, it presently builds -\n1. tidy5-4.9.28-win(64|32).exe - A NSIS windows installer\n2. tidy5-4.9.28-win(64|32).msi - A windows MSI installer\n3. tidy5-4.9.28-win(64|32).zip - A simple zip, for manual install\n\nAdditionally 1 and 2 include an `uninstall` capability...\n\nSee http://www.htacg.org/binaries/ for a WIP on binary downloads... The links presently do NOT work properly, but will, eventually...\n\nMaybe open a new issue on this if this package build for debian/ubuntu is insufficient or wrong...\n. @skynet WOW you are having a lot of TRYING fun ;=()\n\nThe end of my log shows -\n\n```\n...\nGenerating phar.php\nGenerating phar.phar\nPEAR package PHP_Archive not installed: generated phar will require PHP's phar extension be enabled.\ndirectorytreeiterator.inc\ninvertedregexiterator.inc\nclicommand.inc\npharcommand.inc\ndirectorygraphiterator.inc\nphar.inc\n\nBuild complete.\nDon't forget to run 'make test'.\n```\n\nIt looks like phar.php completed successfully for me... but no phar.phar because PEAR not installed... or something...\n\nThe error message is quite confusing in that you have `checking for tidyOptGetDoc in -ltidy... yes`, which should then be searching for `libtidy.so` or `libtidy.a`! Certainly NOT `libtidy5`, which is what the error states `libtidy5.so.4`... \n\nBut maybe when given `-ltidy` it does in fact search for `libtidy*`... do not know...\n\nAnyway, please show me the complete list of tidy libraries installed -\n1. $ cd /usr/lib\n2. $ ls -l _tidy_\n3. $ cd /usr/local/lib\n4. $ ls -l _tidy_\n\nThere **must** be something screwed up here...\n. @skynet WOW, I am running out of ideas... the library list looks fine...\n\nAs mentioned I have been testing a cmake FindTidy.cmake module, and pushed it all to a little repo - https://github.com/geoffmcl/tidy-test\n\nMaybe clone and try this -\n1. git clone git@github.com:geoffmcl/tidy-test.git\n2. cd tidy-test/build\n3. ./build-me.sh\n\nThis should find libtidy, build and run a tidy-test binary... hopefully showing up if there is any problem with the installed libraries... \n\nCheck in the bldlog-1.txt file, and it will show what library it found and linked with...\n\nIs anyone else seeing any problem here? \n\nAnd specifically has anyone else successfuly built OTHER packages that use libtidy?\n\n**HELP NEEDED!!!**\n. @skynet now building BOTH static and shared libraries... version 4.9.30 onward...\n\nDue to the fact windows uses the same archive library name, have appended and 's' to the static library, and the tidy console app will link with this library...\n\nThis may fix this issue... hope you get a chance to pull, build and install... thanks...\n. @skynet and just to be sure I would delete **ALL** the tidy libraries from /usr/local/lib... these are old and not required...\n\nAnd of course after you do the new install above you will have to reset the soft link to libtidy.so.4... to the new libtidy-4.9.30... maybe delete libtidy-4.9.26...\n\nIn my php-5.6.9 source, I did a `make clean`, and a full configure and rebuild, and again no problems...\n. @skynet just hope it gets rid of your php build problems...\n\nAnd yes, in the coming days will also pack and add releases to http://www.htacg.org/binaries ...\n. @skynet @denji wow, tried to read and understand all the above, and think I succeeded ;=))\n\nJust a note on `libtidy5s.a` versus `libtidy5.a` - It seems this is a good change. Most people in unix and MAC seem to prefer shared libraries, and now they have to specifically search for the static library if they **really** want that.\n\nThus I do not think the php config should be changed to use the `static` library, unless that is what they really want...\n\nIn Windows on the other hand, dealing with the location of a DLL can be a real `pain`, so for other projects that use tidy library, I have created a FindTidy.cmake find module, that first looks for tidy5s.lib, and reverts to tidy5.lib if not found. Really good for windows, where, in any case, the static and shared libraries have to have **different** names... while in unix it will still search for libtidy5 shared library as normal... \n\nI will get around to adding this cmake module to the tidy repo in due course, and include it in the install... \n\nAnd if you want to try it, it is included in the tidy-test mentioned ealier - https://github.com/geoffmcl/tidy-test\n\nIt seems to find and use the install tidy shared library in unix without any additional flags, or running ldconfig...\n\nI have also updated the README.md... advise if there is more to do...\n\nOn the question of the version output you correctly quoted the current thinking -\n\n>  Get release date (version) for current library `@deprecated` **tidyReleaseDate()** is deprecated in favor of semantic versioning and should be replaced with **tidyLibraryVersion()**.\n\nAnd that was why **tidyReleaseDate()** had `deliberately` been set to return unix epoch date, to make it clear they were using a **deprecated** service!\n\nBut your patch has now adjusted that to `2015/01/22`??? Alternatively a patch could have been submitted to PHP to use `tidyLibraryVersion()` instead. What is the idea here? You want **BOTH** to continue, or what? What should the `date` be? When should it be `changed`? etc...\n\nBut that is a little off the topic of `usr/bin/ld: cannot find -ltidy`. Has this been fixed, cleared up, or what? Can this issue be closed, or is there something more to be done in the tidy5 source?\n. This should be cross referenced to issue #148\n\nWhile the idea was to mark the `tidyReleaseDate()` deprecate so developers using it would get a **WARNING**, this has not yet been done.\n\nSo for now have reverted to what Jim added back in Jan 2015, and that is to have BOTH version and a date in the version.txt file. Then these two things can march forward together. That is each version increment will be accompanied by a date increment.\n\nNow the CMakeLists.txt emits both a LIBTIDY_VERSION and a RELEASE_DATE macro. And as @mreiden reminded me directly, both these macros are picked up in version.h.\n\nIf and when we get around to clearly marking `tidyReleaseDate()` as a deprecaed function, and after sufficient time and release cycles, consideration could again be given to removing it in favor of using the `tidyLibraryVersion()` function.\n\nAnd for now our tidy.c will continue to only show the `tidyLibraryVersion()` on a -v or --version command. \n. No comments for a few weeks, so closing this for now...\n\nFeel free to re-open, or post a new issue.\n. @skynet glad the php link is sorted ;=))\n\nNot sure what the `clear documentation` you think we need is though?\n\nSaw things like `--rpath=/usr/lib`, but my reading of RPATH is that this is **ONLY** required if you have installed the library in an unusual path. `/usr/lib` would always be part of the search... Or do I not understand something here, or some other requirement...\n\nSurely most of this will disappear once we release 5.0.0 and drop the `5` suffix. I have scheduled this for next week unless anything else gets in the way...\n. @Pajamaman, not sure what you are missing ;=((\n\nI have checked the code on reading the config using HTML_TIDY, and line 987 of tidy.c looks fine -\n\n```\n    if ( (cfgfil = getenv(\"HTML_TIDY\")) != NULL )\n    {\n        status = tidyLoadConfig( tdoc, cfgfil );\n        if ( status != 0 )\n            fprintf(errout, \"Loading config file \\\"%s\\\" failed, err = %d\\n\", cfgfil, status);\n    }\n```\n\nSo I just put your config into a file cfg_191.txt, and \nyour html into in_191.html, and did and got -\n\n```\n~/projects/html_tidy/tidy-html5/test/input5$ export HTML_TIDY=cfg_191.txt\n~/projects/html_tidy/tidy-html5/test/input5$ tidy5 in_191.html\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nline 1 column 1 - Warning: inserting implicit <body>\nline 1 column 1 - Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n3 warnings, 0 errors were found!\n\n<html>\n<head>\n    <meta name=\"generator\" content=\"HTML Tidy for HTML5 for Linux version 4.9.23\">\n    <title></title>\n</head>\n<body>\n    <table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n        <tr>\n            <td height=\"31\">\n                <b>Currently we have these articles available:</b>\n                <blockquote>\n                    <p><a href=\"foo.html\">The History of Foo</a><br>\n                    An informative piece of information.</p>\n                    <p><a href=\"bar.html\">A Horse Walked Into a Bar</a><br>\n                    The bartender said \"Why the long face?\"</p>\n                </blockquote>\n            </td>\n        </tr>\n    </table>\n</body>\n</html>\n\nAbout HTML Tidy: https://github.com/htacg/tidy-html5/tree/develop-500\nBug reports and comments: https://github.com/htacg/tidy-html5/issues\nOr send questions and comments to: https://lists.w3.org/Archives/Public/public-htacg/\nLatest HTML specification: http://dev.w3.org/html5/spec-author-view/\nValidate your HTML documents: http://validator.w3.org/nu/\nLobby your company to join the W3C: http://www.w3.org/Consortium\n~/projects/html_tidy/tidy-html5/test/input5$ \n```\n\nAnd the same from `$ tidy5 in_191.html | cat`...\n\nSo obviously the config was read from the HTML_TIDY export, and the results are \nindeed indented... so can not see a problem...\n\nSome small things would be that since the config is `--doctype omit`, then maybe tidy should \nnot give the DOCTYPE warning... and the fact that this source is also now in the `master' branch,\nbut they do not seem to be your main problem...\n\nCan you try `$ tidy5 -config /home/nmorton/.tidyconfig ~/Desktop/articles.html`, and see what you get...\n\nDon't know what else to suggest since I can not replicate the problem! Not in linux, nor Windows..\n. @Pajamaman, as you may have noticed I have 'fixed' the other two niggles, and bumped the version to 4.9.24\n\nAnd as indicated you should now switch back to the default 'master' branch, but at least for now am also keeping the develop-500 branch up-to-date, but will eventually drop this branch...\n. @Pajamaman, no, checking for HTML_TIDY is compiled there by default... no additional config required...\n\nI just did some experiments setting a 'bad' config file name, or bad content, and I can see warnings, like ...\n\n```\n~$ tidy5 --version\nHTML Tidy for Linux version 4.9.24\n\n# point to a non-existing file\n~$ export HTML_TIDY=rubbish.txt\n~$ tidy5 --version\nConfig: Can't open \"rubbish.txt\"\n\nLoading config file \"rubbish.txt\" failed, err = -1\nHTML Tidy for Linux version 4.9.24\n\n# create an empty config\n~$ touch temp1.txt\n~$ export HTML_TIDY=temp1.txt\n~$ tidy5 --version\nHTML Tidy for Linux version 4.9.24\n\n# add a bad parameter\n~$ echo bad-conf: rubbish >>temp1.txt\n~$ tidy5 --version\nConfig: unknown option: bad-conf\nLoading config file \"temp1.txt\" failed, err = -1\nHTML Tidy for Linux version 4.9.24\n```\n\nSo this all works for me. Can you try that, and advise?\n. @ryandesign, well in the CMakeLists.txt, the only check for compiler bitness, is -\n\n```\nif (CMAKE_SIZEOF_VOID_P EQUAL 8)\n    message(STATUS \"*** Have SIZEOF void * = 8, so 64-bit\")\n    set( IS_64_BIT 1 )\nelse ()\n    message(STATUS \"*** SIZEOF void * != 8, so not 64-bit\")\nendif ()\n```\n\nAnd this result is ONLY used inside a `(WIN32 AND MSVC)` block, like -\n\n```\nif(WIN32 AND MSVC)\n    ...\n    if (IS_64_BIT)\n        set( MSVC_FLAGS \"${MSVC_FLAGS} -DWIN64\" )\n    endif ()\n    ...\nelse ()\n```\n\nSo you can see it is ONLY used to set `-DWIN64` in the MSVC Windows build.\n\nThere is NO check for `endianness`!\n\nNo other use is made of this flag, and can not see how the cmake testing of `CMAKE_SIZEOF_VOID_P' would influence your OS X universal build?\n\nHowever, if it does somehow cause a problem, then I suppose I could move the test to inside the WIN32 AND MSVC block... but thinking more about this I am not even sure WIN64 need be defined, but would need to check more on that...\n\nBut if you get a chance please re-check and advise, as we cetainly do not want to cause an OS X universal build problem... Tidy should compile and run everywhere ;=))\n. @ryandesign, have now had time to check for the 'need' in a windows build...\n\nIt seems there is **NO** need to check the architecture in windows either, so have removed the 'check' completely, and the cmake message output, to avoid confusion. It seems it was only there due to a cut-and-paste from another project when I created the initial CMakeList.txt file.\n\nJust for information, in windows, if there was a need to check 32 vs 64 bit, then the correct macro is `#ifdef _WIN64`. This is defined by the MSVC 64-bit compiler...\n\nHope this closes this issue. Thanks for reporting...\n. @ryandesign, ok, on reading the fhs document, I guess -\n\n```\n    install(FILES ${CMAKE_BINARY_DIR}/${TIDY_MANFILE} DESTINATION man/man1)\n```\n\nshould be changed to -\n\n```\n    install(FILES ${CMAKE_BINARY_DIR}/${TIDY_MANFILE} DESTINATION share/man/man1)\n```\n\nIs that correct?\n\nThat is, it would be installed in `${CMAKE_INSTALL_PREFIX}/share/man/man1`?\n\nI also think the default CMAKE_INSTALL_PREFIX on unix systems is `/usr/local`, unless a specific `-DCMAKE_INSTALL_PREFIX=/usr` is issued.\n\nFurther, cmake also allows a specific full path to be used, and it will ignore any 'prefix', like -\n\n```\n    install(FILES ${CMAKE_BINARY_DIR}/${TIDY_MANFILE} DESTINATION /usr/share/man/man1)\n```\n\nSo maybe that would be better?\n\nBeing basically a Windows person would seek further comments on this change. And note manual generation is only done `if(UNIX)`, and if the `xsltproc` is found...\n. @ryandesign  changed it to `share/man/man1`\n\nAnd agree should respect a user requested install prefix\n\nDoes this close this?\n. @conraid, sounds like a good idea...\n\nHow about something like :-\n\n```\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\nindex ce2ee17..5aac7dc 100644\n--- a/CMakeLists.txt\n+++ b/CMakeLists.txt\n@@ -23,6 +23,9 @@ set( LIB_TYPE STATIC )  # set default static\n option( BUILD_SHARED_LIB \"Set ON to build Shared (DLL) Library\"   OFF )\n option( BUILD_TAB2SPACE  \"Set ON to build utility app, tab2space\" OFF )\n option( BUILD_SAMPLE_CODE \"Set ON to build the sample code\"       OFF )\n+if (NOT MAN_INSTALL_DIR)\n+    set(MAN_INSTALL_DIR share/man/man1)\n+endif ()\n\n if(CMAKE_COMPILER_IS_GNUCXX)\n     set( WARNING_FLAGS -Wall )\n@@ -213,7 +216,7 @@ if (UNIX)\n             VERBATIM\n         )\n\n-        install(FILES ${CMAKE_BINARY_DIR}/${TIDY_MANFILE} DESTINATION share/man/man1)\n+        install(FILES ${CMAKE_BINARY_DIR}/${TIDY_MANFILE} DESTINATION ${MAN_INSTALL_DIR})\n     endif ()\n endif ()\n```\n\nThis would allow you to add a -DMAN_INSTALL_DIR=some/install/place for other distributions if different to the default.\n\nIf you would like to add a pull request, you could be the author of this change ;=))\n\n@ryandesign, any objection to this change?\n. @conraid, @ryandesign since there have been no futher comments on this have pushed this small cmake change, and bumped the version to 4.9.27\n\nI tested it in linux, and using the commands -\n\n```\n$ cd build/cmake\n$ cmake ../.. -DMAN_INSTALL_DIR=man -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release\n```\n\nThen the cmake_install.cmake shows that the tidy5.1 man file would now be installed to `/usr/man', so it seems this would now accomodate Slackware, BSD, and other man install locations...\n\nNote the final cmake command `-DCMAKE_BUILD_TYPE=Release` is **required** if you want to build a release binary without `assert` macros. That is add -DNDEBUG to the compile. See discussion on #30\n\nPlease test and advise if any problems... thanks @conraid for this added flexability...\n. @conraid, thanks for checking so promptly... interesting that it becomes a .gz file in your system... but glad it worked...\n\nAs for the location of the tidy1.xsl I guess it depends on where you actually `run` cmake... The recommended location is **build/cmake**, so from there `../documentation` is correct...\n\nBut in general it is NOT a good thing to use relative paths, since this then does depend on where you run cmake.\n\nI have just pushed a few more small CMakeLists.txt changes, including using an absolute path. That means you should be able to run cmake **ANYWHERE** and the man files will still be found.\n\nIf there is still a problem, it is probably better to open a separate issue... \n. @dwlamb if `$ man tidy` fails then I do not think `tidy.1` is installed... there is no `5` any more...\n\nIn my Ubuntu 14.01 it is installed in `/usr/share/man/man1/tidy.1`. Note it is **not** a gz file...\n\nI assume you are building from git source? What commands are you using? \n\nMy litle mantra is -\n\n```\n$ git pull       # update the source\n$ cd build/cmake # get into build folder\n$ ./build-me.sh  # build it\n```\n\nThat script adds the important option `-DCMAKE_INSTALL_PREFIX=/usr`. The cmake default if this is not given is `/usr/local/...`. And it also adds `-DCMAKE_BUILD_TYPE=Release`, unless you add `DEBUG`, to build the library without asserts...\n\nThen in the `bldlog-1.txt` file generated you should see `*** Generating man tidy.1 custom commands...`. Alternatively there will be a `*** NOTE: xsltproc NOT FOUND!...` if xsltproc is not installed...\n\nSo, do you have `xsltproc` installed?\n\nAnd if all is well the final command is `$ [sudo] make install`, and you should see what is installed, and exactly where... about 10 items, including tidy.1...\n\nThen my `$ man tidy` pops up the page with the version matching `version.txt` in the source...\n\nHope this helps...\n. @ryandesign, I understand the problem. cmake is trying to run `tidy5` before the shared libraries are installed!\n\nI would certainly seek some advice on how to overcome this problem!\n\nOne idea might be to specifically set the environment variable you mentioned with -\n\n```\n  set(ENV{DYLD_LIBRARY_PATH} \"${CMAKE_BINARY_DIR}\")\n```\n\nMaybe someone will get a chance to experiment with this... would probably need a switch around if UNIX or APPLE concerning the variable name...\n\nAnother idea would be to add an option, like say -\n\n```\noption(BUILD_MAN_PAGE \"Set ON to generate the man pages\" OFF)\n```\n\nThen later, add to the manual build section -\n\n```\nif (UNIX AND BUILD_MAN_PAGE)\n```\n\nThis would get through the initial build, which could then be installed. Then cmake is run a second time adding `-DBUILD_MAN_PAGE:BOOL=ON`. Now tidy would correctly find the installed shared libraries...\n\nAnd of course this only happens if configuring to build the shared libraries... so another possible options is to ALWAYS build the static library, and always link this with the console app, tidy, and that could be separate to whether shared libraries are also built/installed... \n\nPerhaps Issue #190 is related to this, since @skynet is also trying to build and use the shared library...\n\nAs indicated could really do with some **unix HELP** in getting this chicken and egg situation working the best possible way ;=()\n. @ryandesign now building BOTH static and shared libraries... version 4.9.30 onward...\n\nDue to the fact windows uses the same archive library name, have appended and 's' to the static library, and the tidy console app will link with this library...\n\nShould now no longer be required to set the `DYNA_LIBRARY_PATH`... but will do no harm ;=))\n\nThis change may also assist with issue #190 \n. Now building both static library, for linking with tidy, AND the shared libraries for install...\n\nNo comments for many weeks, so closing this for now...\n\nFeel feel to re-open, or post a new issue... thanks...\n. @ryandesign glad to hear it builds fine without the need for DYLD_LIBRARY_PATH set.\n\nI guess there is no `standard` for the `static` library suffix, but I too have seen some that use `s`, so chose that. And some that really spell it out like `_static`, for freeglut, libpng, and zlib with `static`. Some go the other way and rename the DLL import library, adding `_imp` to the shared lib like libcurl. Assimp even adds the bitness with `_static32`...\n\nAnd boost goes absolutely **MAD** with the name, like `libboost_system-vc100-mt-1_53.lib`. This is version 1.53 created using MSVC10. Here the `mt` denotes the use of the static runtimes, and would be `md` for the dynamic runtimes! Not quite the same, but similar idea.\n\nThe important issue is that they can **NOT** have the same name in Windows, since they both have the same `.lib` extension. This is not a problem in unix since one is `.a` (or `.la`), and the other is `.so`, with soft links to the SO version, like `.so.4` and `.so.4.9.35`, etc... \n\nBut changing the static library name also seems good for unix, in that probably most prefer to use the shared. The developer has to really know about the static library name convention, and make a specific provision to use that if desired.\n\nAnd NO, there are NOT two installed copies of the static library! One of the good things about a static library is that the linker only extracts the services needed when building tidy5.exe. I do NOT think is just embeds the whole library in the binary.\n\nSo while tidy5s.lib weighs in at (a meagre!) 1.5 MB, tidy5.exe is only 410 KB ;=)). This seems the same in unix, with the static library libtidy5s.a is 836 KB, and again tidy5 is 575 KB. \n\nBut anyway, in todays market of massive cheap HDD space, tidy is tiny, very light weight in total compared to many other packages ;=)).\n\nWhat is still to be done is for me to dig up the courage and interest to build a release **5.0.0**, or at least a **5.0.0RC1**, and drop this `5` suffix... Have scheduled that for the end of this month, but have put it off several time before ;=() for various reasons...\n. @ryandesign, yes a small correction ;=(). In boost's case -mt does indeed mean just multithreaded. Should have check their [documention](http://www.boost.org/doc/libs/1_58_0/more/getting_started/windows.html#library-naming)!!!\n\nOn first glance I assumed it was related to the MSVC /MT compiler flag, which denotes multithread and static version of the run-time library, as opposed to /MD, which denotes multithread and DLL version of the run-time library. See [documentation](https://msdn.microsoft.com/en-us/library/2kzt1wy3.aspx). Boost has other markers for this... lesson: never `assume` ;=))\n\nAnd now checking further into a recent Windows 7 MSVC10 build of boost libraries, it seems they can build BOTH versions, with an -s and without... but not for all libaries... and likewise with and without -mt for some... as well as with and without -gd (debug) for all... Usually at least 4/5/6 versions for each library... some 272 32-bit, and 266 64-bit libraries. WOW! Impressive, and not really MAD!\n. @willydee, thanks for the pull request #197. Your patch certainly does the job ;=))\n\nThe only thing I noted is maybe we should 'expand' the comment in `lexer.c(2750):` to include this issue when calling `AdjustTags`... but quite minor...\n\nAnd yes, we can expect more dynamic table adjustments as we move forward supporting html5++ while still maintaining full html4-- support.\n\nOut of time to finalise and test a little more today, but will get to this soonest... Thanks again...\n. @willydee, Thanks for this PR... merged and closed, bumped version, and added comments in lexer.c\n\nNow tidy5 passes this, like the validator, without problems...\n\nAnd constructed a backwards compatible test -\n\n```\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n  <meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\n  <title>Tidy does not allow block elements in caption #196</title>\n</head>\n<body>\n<table>\n  <caption>\n    <nav><button>Test</button></nav>\n  </caption>\n  <tbody>\n    <tr><td>Lorem ipsum</td></tr>\n  </tbody>\n</table>\n</body>\n</html>\n```\n\nand as expected the 'warnings' return, just like in the validator -\n\n```\nline 10 column 3 - Warning: missing </caption> before <nav>\nline 11 column 5 - Warning: <nav> isn't allowed in <table> elements\nline 9 column 1 - Info: <table> previously mentioned\nline 12 column 3 - Warning: discarding unexpected </caption>\nline 10 column 3 - Warning: trimming empty <caption>\n4 warnings, 0 errors were found!\n```\n\nPlease re-test when you get a chance, and close this... Thanks again...\n. @willydee thanks for this... now merged...\n. @lacombar had a quick look at this script and it looks fine...\n\nI could just copy it over, but that loses your name on the commit, and it becomes my commit...\n\nCan you create a Pull Request?\n\nSimilarly for Issue #199...\n\nOr is there a way to merge from your clone? Have not tried this often... can handle PRs...\n. @lacombar pull request now merged...\n\nWhen you get a chance please recheck and close if fixed...\n\nThanks...\n. @lacombar no further comments in the last 3 weeks so assume fixed.\n\nAccordingly am closing this now, but feel free to re-open, or open other issues... thanks...\n. @lacombar like #198, can you create a PR to keep your name on the commit?\n. @lacombar I just experimented in a fresh tidy-html5 clone and clone of your aerilon repo into tidy-aerilon folder...\n\nI can get all these changes into master by doing -\n1. cd tidy-html5\n2. git remote add aerilon ../tidy-aerilon\n3. git pull aerilon master\n4. git remote remove aerilon\n\nBut as suspected this does fetch and merge your #198 and #199 changes in one new commit authored by ME. Using a PR should keep you as the 'Author'\n. @lacombar pull request now merged...\n\nWhen you get a chance please recheck and close if fixed...\n\nThanks...\n. @lacombar no further comments in over 3 weeks so assume fixed, and closing this issue...\n\nFeel free to re-open, or open a new issue... thanks...\n. @InconceivableVizzini, do not completley understand your question. Perhaps you could add some test samples, and show what you expect... what elements? what config?\n\nReading through the git log since that initial tree, I can read several changes in the dropping 'empty' tag code...\n1. commit/6f9dc2327ed2c61bd375e7815efe855b6bcf33bb Fix for #103 - don't drop empty dd tags.\n2. commit/bf1c2f67a91c8ecc349a41a01c7d13debcafda67 Added drop-empty-elements options. Fixes #19.\n3. commit/f4edfc693b9123e07aab67f37ec738217c177a6e Empty `<progress>` tags no longer stripped #10\n4. commit/f6a3bbecdbf3bc2832e6bffc8f86b8de6ed3f2d2 fix for ISSUE #7: empty canvas no longer stripped\n5. And maybe others...\n\nThese mainly seem concerned with **NOT** dropping certain empty elements...\n\nMaybe your test samples will make it clear what you expect... thanks...\n. @InconceivableVizzini, just some quick experiments, after installing pytidylib in my Ubuntu 14.04...\n\nRan the following little script - excuse any typos - writing this in a different machine so can not use copy and paste...\n\n```\nfrom tidylib import tidy_document\ntidyoptions={\n'numeric-entities': True,\n'tidy-mark': True\n}\ndocument, errors = tidy_document('''<p>f&otilde;o <img src=\"bar'>''',\n  options=tidyoptions)\nprint document\nprint errors\n```\n\nThis showed me I presently had **OLD** libtidy 2009 installed... so made a clean clone of master, and ran -\n1. cd build/cmake\n2. cmake ../.. -DBUILD_SHARED_LIB:BOOL=TRUE -DCMAKE_INSTALL_PREFIX=/usr\n3. make\n4. sudo make install\n5. cd /usr/lib\n6. sudo rm libtidy.so\n7. sudo rm libtidy.so.0\n8. sudo ln -s libtidy5.so.4.9.25 libtidy.so.4\n9. sudo ln -s libtidy.so.4 libtidy.so\n10. ls -ls libtidy\\* # just to check it all looked good\n\nThat is did a fresh build and install, but this presently only builds and installs libtidy5.so.4.9.25, so deleted the current install links, and created new libtidy.so link to my 4.9.25 library...\n\nNow running the above script showed a tidy-mark of `Linux version 4.9.25`. So added a little more to the script -\n\n```\nfrom tidylib import tidy_document\ntidyoptions={\n'numeric-entities': True,\n'tidy-mark': True,\n'drop-empty-element': False\n}\ndocument, errors = tidy_document('''<p>f&otilde;o <img src=\"bar'></p><p>''',\n  options=tidyoptions)\nprint document\nprint errors\n```\n\nAnd as expected the output still included the 2nd empty para `<p></p>`. And it was dropped when I changed the drop-empty-element to True, and got warning trimming empty `<p>`...\n\nSo this **ALL** works for me ;=)) Not sure what your problem is exactly but hope this helps track it down...\n. @InconceivableVizzini since no further recent comment assume you have got this solved, and am closing this for now...\n\nFeel free to re-open, or open other issues... thanks...\n. @0-F characeter sets is always a difficult question to answer, but let me try...\n\nFirst, the config file **MUST** be ASCII only encoded! It has always been this way in Tidy!\n\nIn your email, the `special apostrophe`, sometimes called the `right curly quote mark`, or `&rsquo;`, `\u2019`, is encoded as 0x92. I am not sure where that value came from! Maybe Apple is using that instead of 0x60, but NOT sure... Maybe you could help me undertand this...\n\nSecond the config file is read by the same input routines as the html is read, so when the 'reader'  encounters the 0x92, or decimal 146, it spits out the warning - `Warning: replacing invalid character code 146`.\n\nAnd then later explains -\n\n```\nCharacter codes 128 to 159 (U+0080 to U+009F) are not allowed in HTML;\neven if they were, they would likely be unprintable control characters.\nTidy assumed you wanted to refer to a character with the same byte value in the\nspecified encoding and replaced that reference with the Unicode equivalent.\n```\n\nThe ONLY problem with this explanation is that it says `not allowed in HTML`. Of course it should/could also say not allowed in the config file in this case... which, as stated, should be ASCII only...\n\nNow in my Windows 7 machine, when I tap the `special apostrophe` key I get 0x60, decimal 96, in the file, which is the correct ASCII value for this particular character. And I can also enter this by typing the key sequence `Alt+096`... Consequently I get no tidy warning... \n\nAnd this is the same in my linux (Ubuntu) machine... \n\nAlso using copy and paste can change the character values..\n\nAs you point out the other warning is concerning the replacing of the `&` with `&amp;`, which is a normal warning and action of Tidy...\n\nDo a hex dump of your a.txt - `$ xxd -g 1 a.txt` - to ensure I am right about the value in the file. And if other than 0x60, changing it to 0x60 should remove this warning.\n\nSo at this time I can not see any problem, issue with Tidy to fix ;=)).\n. @dregad will certainly look into how to fix these... thanks for reporting...\n. @dregad hmmm, just tried all the links I could find, and found nothing broken... has this been fixed?\n\nElse please give the specific broken link(s)... thanks,,,\n. @dregad sorry missed those two - now fixed I hope...\n\nAdvise if you find others, and thanks for reporting...\n. @Metalgrid note I have added the `special apostrophe` to be able to `see` html...\n\nTidy already supports adding `custom` tags through the `config` file - see `new-blocklevel-tags`, `new-empty-tags`, `new-inline-tags` and `new-pre-tags`... You should be able to use these to add say `<submit-button>`, and others...\n\nAngularJS is not yet supported by the W3C, so we would be unlikely to add this at this time.\n\nBut I would be willing to work with you to ensure the addition of such `new` tag through the config file works correctly... and maybe even enhanced such an `external` approach...\n\nWhen you get a chance please experiment and test... add some sample config and html for testing... thanks...\n. @Metalgrid, have just tested the following html snippet -\n\n```\n<form>\nFirst name:<br>\n<input type=\"text\" name=\"firstname\">\n<br>\n<submit-button>\n</form>\n```\n\nUsing a config file -\n\n```\ntidy-mark: no\nshow-info: no \nnew-empty-tags: submit-button\nshow-body-only: yes\n```\n\nThen using the command `tidy5 -config input5\\cfg_204-2.txt input5\\in_204-2.html`, and got the following output -\n\n```\nline 5 column 1 - Warning: <submit-button> is not approved by W3C\n1 warning, 0 errors were found!\n\nInfo: Document content looks like HTML5\n<form>First name:<br>\n<input type=\"text\" name=\"firstname\"><br>\n<submit-button></form>\n```\n\nThis indicates tidy5 supports custom tags added through a config file... exiting only with a mild warning... which could be suppressed with `--show-warnings no`, or written to a warning file with `-f warning.txt`...\n\nSo am closing this for now... free free to re-open, add more samples, etc... but as far as I see tidy5 **supports** custom tags from an input config file.\n. @mtangoo you mean like this - http://www.htacg.org/tidy-html5/quickref.html#new-empty-tags ?\n\nAnd viewing that reminds me we must also update those docs to version 5.0.0, although not much changed since that 4.9.28/35...\n\nOne **very** important thing, especially for those using `libtidy` in their own projects, and that is the re-naming of two header files - See Major API change - #224, #223, #221\n1. renamed:    `\"buffio.h\" -> \"tidybuffio.h\"`\n2. renamed:    `\"platform.h\" -> \"tidyplatform.h\"`\n\nBut we could **always** do with more, better documentation. Feel like writing some? I will certainly help getting it `published`...\n\nAnd some more could be added to our **very bare** wiki - https://github.com/htacg/tidy-html5/wiki\n\nA reminder that tidy also has it own home page - http://www.html-tidy.org/ - and welcome additions to these pages... \n\nThe `source` of these pages is in the `gh-pages` branch of the main repo - https://github.com/htacg/tidy-html5 - Once you have cloned this repo, do -\n- `cd tidy-html5`\n- `git checkout gh-pages`\n- `git pull` - optional - only needed if not first checkout\n\nThe html site is generated via `yaml`... see `_config.yml`... and the subdirectory `index/_posts` contains the current set of index pages...\n\nAnd more programmer documentation on - http://www.html-tidy.org/developer/ - see subdirectory `documentation/_posts` for the current set of pages...\n\nAs stated, contributions, additions, corrections always **very** welcome...\n. @Pajamaman, well as far as I can tell tidy has **always** done that. Even back to tidy in 2000, the Dave Raggett's Original, the earliest copy I could find... \n\nIt just depends on choosing a specific wrap value... Change the wrap value for that snippet and it will not happen...\n\nSo if this is about adding an `option` to avoid this, I do not think there is one already, but with so many otions... Maybe someone can help here...\n\nBut if there is presently none then it will certainly be considered if you present a patch or PR...\n. @Pajamaman no further comment for over 3 weeks so am closing this for now...\n\nFeel free to re-open, or add a PR adding a new feature to avoid this if necessary... thanks...\n. @d1vanov looks perfectly reasonable... now merged and thanks...\n. @d1vanov I thought I still had **MSVC6** still installed somewhere to check if Tidy still compiles with that **OLD** version, which is the only reason for that macro in the first place, but it seems **not**.\n\nBut for now will leave it there, just in case. Does no harm...\n\nGood to hear Tidy compiles ok with MinGW...\n. @pjuhasz yes, it feels a bit like a `clash`, but not really...\n\nTo look at it another way. `--quote-ampersand yes` is the DEFAULT, so when you add `--preserve-entities yes` you are asking all such entities be preserved, including the ampersand.\n\nIf you want to just change the ampersand handling, the `--quote-ampersand no` will do that.\n\nMaybe it could be changed to `--preserve-entities yes` only effects all entities except the ampersand, and `--quote-ampersand no|yes` only effect one, the `&`.\n\nIf you would like to find and fix this, will certainly consider the patch/PR. See lexer.c(1075), pprint.c(750-751)... \n\nPages like this http://dev.w3.org/html5/html-author/charref show there are hundreds of entities. Maybe we should have `--quote-ampersand` ONLY deal with one, the `&`, while `--preserve-entities` deals with all the rest, so we have no overlap between these two options.\n\nWhat do others think about this?\n. @pjuhasz you make a very **good** point, but this is separate from `clashing` options...\n\nRight now tidy defaults to html5++ mode, only falling back to legacy html4-- mode if a doctype indicates that...\n\nSo it seems tidy5, still in html5++ mode, **should** differentiate between ambiguous and unambiguous ampersands, and probably not even issue a warning in the latter case. \n\nSo maybe the default `--quote-ampersand` should be off for this case, and only toggled to on if switching to legacy mode.\n\nSee lexer.c(2756) where the switch takes place, and tags.c(739) for the service that does this...\n\nAnd searching around found another definition an `ambiguous ampersand` here - http://www.w3.org/TR/html-markup/syntax.html#syntax-ambiguous-ampersand\n\n```\nAn ambiguous ampersand is an \"&\" character followed by one or more characters\nin the range \"0\" to \"9\", the range \"a\" to \"z\", or the range \"A\" to \"Z\", \nfollowed by a \";\" (semicolon) character, where these characters do not match \nany of the names given in the \u201cNamed character references\u201d section of the \nHTML5 specification [HTML5].\n```\n\nCould you add the URL where you found your quote.\n\nAnd this would involve considering things like `href=\"u.r.l?a=b&2\"`, `src=\"u.r.l/foo.jpg&h=96\"`, and other examples...\n\nI will continue to read and look at this more soonest, unless you, or someone else, beat me to it with a PR ;=))\n. @pjuhasz, yes reading your link does make your head spin ;=))\n\nBut maybe we are getting too deep here! I constructed a bigger test sample, in_207-2.html. Passed it to the validator, adding what it said, and through Tidy, default config - it warned and fixed all...\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>ambiguous/unambiguous ampersand #207</title>\n</head>\n<body>\n<ul>\n<li>Bare unambiguous ampersand - a & b - vok - TWF</li>\n<li>Ambiguous or not?</li>\n<li>\n<ul>\n<li>&123 - VF - TWF</li>\n<li>foo&<i>bar</i> - vok - TWF</li>\n<li>foo&&& bar - vok - TWF</li>\n<li><a href=\"http://example.com/?x=l&y=2\">foo</a> - VF - TWF</li>\n<li><a href=\"http://example.com/?x=l&2\">bar</a> - VF - TWF</li>\n<li>foo &0 bar - VF - TWF</li>\n<li>foo &lolwat bar - VF - TWF</li>\n</ul>\n</li>\n<li>Missing semi-colon</li>\n<li>\n<ul>\n<li> &amp - VF - TWF</li>\n<li> &copy - VF - TWF</li>\n<li> &not - VF - TWF</li>\n</ul>\n</li>\n</ul>\n<p>Key - VF=Validator Fail, vok=validator ok, TWF=Tidy Warn and fix</p>\n</body>\n</html>\n```\n\nIn each case, tidy warns and fixes, and the validator agrees except in 3 cases - `a & b`, `foo&<i>bar</i>`, and `foo&&& bar`, which the validator accepts. So it seems initially **ONLY** in these three cases should we try to **fix** tidy.\n\nIt should be noted that the current default output from tidy **PASSES** validation completely.\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>ambiguous/unambiguous ampersand #207</title>\n</head>\n<body>\n<ul>\n<li>Bare unambiguous ampersand - a &amp; b - vok - TWF</li>\n<li>Ambiguous or not?</li>\n<li>\n<ul>\n<li>&amp;123 - VF - TWF</li>\n<li>foo&amp;<i>bar</i> - vok - TWF</li>\n<li>foo&amp;&amp;&amp; bar - vok - TWF</li>\n<li><a href=\"http://example.com/?x=l&amp;y=2\">foo</a> - VF -\nTWF</li>\n<li><a href=\"http://example.com/?x=l&amp;2\">bar</a> - VF - TWF</li>\n<li>foo &amp;0 bar - VF - TWF</li>\n<li>foo &amp;lolwat bar - VF - TWF</li>\n</ul>\n</li>\n<li>Missing semi-colon</li>\n<li>\n<ul>\n<li>&amp; - VF - TWF</li>\n<li>\u00a9 - VF - TWF</li>\n<li>\u00ac - VF - TWF</li>\n</ul>\n</li>\n</ul>\n<p>Key - VF=Validator Fail, vok=validator ok, TWF=Tidy Warn and\nfix</p>\n</body>\n</html>\n```\n\nWhile it does not mean a lot, the view in a browser appears exactly the same for the input and the output. And interestingly, if appears the browser removes the escape from the links.\n\nSo, if we concentrate on these three differences we should be a long way down the road. \n\nI too may not get much time to work on this this week, but will try some things soonest. It would be great if you or others could also experiment...\n. @pjuhasz, ok firing the first salvo across the bows of this tricky ampersand problems ;=))\n\nHere I **ONLY** deal with two(2) cases of what has been called an `unambiguous ampersand`, which are allowed in html5 mode without quoting. The two cases are shown in this sample.\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>Test 3 - unambiguous ampersands</title>\n</head>\n<body>\n<p>f&<i>b</i></p>\n<p>A & B</p>\n</body>\n</html>\n```\n\nNow, if still in html5 mode, tidy will **NOT** issue a warning for these when found first in lexer.c(1060), and pprint.c(989) will output them as is, whether --quote-ampersand is on or not.\n\nAs iterated above there are still other cases to be tested and fixed, but this seems a good start.\n\nHave bumped the version to 4.9.37 for this change.\n\nAnd am closing this for now as feel this is the bulk of the ampersand problem, but feel free to re-open, or post other specific amerpsand problems.\n. @girishsubramanyam note to add html to a post it must be surrounded by a single special backquote, 0x60, for inline or 3 or 4 around a block. It is best to use the Preview before adding a comments. And clicking the `Markdown supported` leads to a helpful page...\n\nHere is your sample expanded to a full html block, correctly quoted -\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>Tidy doesn't cleanup attribute names with colon. #208</title>\n</head>\n<body>\n<div id=\"addthis-xsdji\"\nclass=\"addthis_toolbox addthis_default_style addthis_20x20_style\"\naddthis:url=\"http://www.dailymotion.com/video/xsdji_rick-astley-never-gonna-give-you-up_music\"\ndata-title=\"Rick Astley - Never Gonna Give You Up\"\ndata-content_version=\"us\"\ndata-video_xid=\"xsdji\"\ndata-user_xid=\"\">\n</div>\n</body>\n</html>\n```\n\nSo tidy correctly identifies the problem with `line 8 column 1 - Warning: <div> proprietary attribute \"addthis:url\"`, but if I understand you correctly you want an `OPTION` to ask Tidy to **FIX THIS!**.\n\nBut what should tidy **fix** it to? Should it remove the bad attribute? Should it convert the colon to an underscore, or to what? That is **how** should it fix it?\n\nTidy can not read the author's mind, so has no way of deciding what the author intended if it was just a typing mistake. ;=))\n\nAnother option could be considered, but need answers, comments on exactly **what action** should be taken to suit **all** such cases. And is there a clear use case for this?\n. @girishsubramanyam I am still not exactly sure of your use case, but if you just want the tidy output to pass through another parser, what about `--drop-proprietary-attributes yes`?\n\nThis would remove all `proprietary attribute` from the tidy output.\n\nAlternatively, you could pass the tidy output, or even the input before tidy, through say a perl script that could easily change all attributes with a colon to say an underscore. This could be very fast...\n\nBut concerning an additional option, could it simply be change all colons in attribute names to an undercore, say `--munge-attributes yes`, default to `no`, **or** would you need this to be very generalised say `--change-attribute-char :2_`, and say `--change-attribute-char @2-`, etc? \n\nThat is giving 3 characters - first is the character to change, a separator, and the 3rd the substitution - This could probably also be just passing in two char - first is the character to change and the 2nd the substitution...\n\nOf course the former is much simpler since it is only a switch and a search for a `:`, and change it to an `_`... \n\nThe latter would be more complicated, since each char in the attribute name has to be looked up in a list, and the user substitute character exposed/returned...\n\nBut I am hoping the existing `--drop-proprietary-attributes yes`, or even the pre or post parsing with another script will be suitable for your use...\n. @girishsubramanyam, hmmm, series of pipelines... billions of documents...\n\nOne wonders then what is tidy's role in this massive data/information mining... it does not sound like the tidied output is ever seen anywhere except passed to the next in the toolchain... and whether some other pre html parser, perhaps faster than tidy, would not be better...\n\nSo at this time I can not really see a case for an additional option for tidy... to abitrarily change one proprietory attribute name to another proprietory name...\n\nBut in reviewing the code, it would not be too difficult to catch a colon and substitute an underscore, or other transformations, as the attribute name is added to the lexer... see `lexer.c(3246): ParseAttribute(TidyDocImpl* doc, ...)`.\n\nThis could be as simple as -\n\n```\nlexer.c(3359):\n        if ( !cfgBool(doc, TidyXmlTags) && TY_(IsUpper)(c) )\n            c = TY_(ToLower)(c);\n        if (c == ':') c = '_'; /* plus other subs... */\n        TY_(AddCharToLexer)( lexer, c );\n```\n\nAnd you would have your desired library.\n\nAccordingly, am closing this, but feel free to re-open with new information, or with a patch/PR for consideration...\n. @anEffingChamp, well there is certainly presently no **easy** way to support additional `attributes`!\n\nFirst **all** attributes known to tidy are enumerated in **tidyenum.h**. So that is where each **new** attribute must be first added. Then the 'text' name, and a 'parser' in `static const Attribute attribute_defs []`.\n\nThen for each element, tag tidy supports, an attribute dictionary is constructed in attrdict.c.\n\nTake the first as an example `const AttrVersion TY_(W3CAttrsFor_A)[] =`, followed by each attribute allowed for that element, in a structure `typedef struct _AttrVersion { TidyAttrId attribute; uint versions; } AttrVersion;`.\n\nThen as each tag is defined, in tags.c, it inherits a pointer to the list of attributes supported by that element. Again the stucture entry for the anchor tag -\n\n```\n  /* W3C defined elements */\n  { TidyTag_A, \"a\", VERS_ELEM_A, &TY_(W3CAttrsFor_A)[0], (CM_INLINE|CM_BLOCK|CM_MIXED),\n  TY_(ParseBlock), NULL }, /* Issue #167 & #169 - default HTML5 */\n```\n\nNow, some work has been done to make that big table `dynamic`. That is it is constructed with html5++ support, but if the document has an html4-- doctype, then some elements in that table can be dynamically changed.\n\nSo `in theory` that could be extended to add attribute for each particular element. It could say read the information from perhaps an xml file which enumerated additional attributes for some elements.\n\nSo to say extend again the anchor tag to allow the rdfa `property` attribute, the existing `TY_(W3CAttrsFor_A)` could be copied into allocated memory, that additional attribute added, and the address of that new attribute structure for `a` put in the table.\n\nNot easy, and there are some other considerations, but not impossible. And opens the way to say externalise **ALL** attributes for tags. Then the supported list for each tag could be loaded from an exernal file on library start-up. And such extensions then becomes just an adjustment of that exernal file.\n\nHowever, this would substantially slow down the library start up... but perhaps not too much...\n\nI left the explicit comment in the above example `/* W3C defined elements */`, and note in the `xhtml-rdfa-primer` link the words `Publication as a Working Group Note does not imply endorsement by the W3C Membership`. So at this stage, support for `rdfa` in tidy is unlikely.\n\nOf course this does not stop anyone from coding such changes for their own `extended` tidy library... and presenting that as a patch or PR for consideration...\n\nI will leave this virtual `feature request` open for a while in case others want to add comments... and thanks for bringing it up.\n. @Aeyoun, thanks for posting another example...\n\nI just constructed a full sample using your content, and much more, and note it fully passes the W3C validator, so I guess this **MUST** be looked at sooner rather than later ;=()\n\n```\ninput5/in_209-2.html\n<!DOCTYPE html>\n<html prefix=\"og: http://ogp.me/ns# article: http://ogp.me/ns/article# \"\n    vocab=\"http://ogp.me/ns\" lang=\"en\">\n    <head>\n        <meta content=\"Some kind of title\" property=\"og:title\" />\n        <meta charset=\"utf-8\">\n        <title>microdata / microformat / RDFa support #209</title>\n    </head>\n<body vocab=\"http://purl.org/dc/terms/\">\n   <div resource=\"/alice/posts/trouble_with_bob\">\n      <h2 property=\"title\">The trouble with Bob</h2>\n      <p>Date: <span property=\"created\">2011-09-10</span></p>\n      <h3 property=\"creator\">Alice</h3>\n   </div>\n   <div resource=\"/alice/posts/jos_barbecue\">\n      <h2 property=\"title\">Jo's Barbecue</h2>\n      <p>Date: <span property=\"created\">2011-09-14</span></p>\n      <h3 property=\"creator\">Eve</h3>\n   </div>\n</body>\n</html>\n```\n\nThe current tidy5 issues 12 warnings for this...\n\nAs always, appreciate a patch or PR implementing these...\n\nAnd accordingly changed the milestone to 5.1\n. @halindrome thanks for the additional links... will get around to some careful reading... and I too note they seem accepted by the validator... is the validator ahead of the docs? Or indicating the way? Which should tidy follow?\n\n> RDFa attributes are technically legal on ALL elements.\n\nThis gives me the idea that this could be just a table of say `RDFa` attributes, rather than the heavy cut and paste operation to add them to the attributes allowed for each element...\n\nMaybe not even individually enumerated in TidyAttrId;, except perhaps as TidyAttr_RDFa... but then you have to deal with API items like tidyAttrGetId(TidyAttr)...\n\nThen if the user adds an option like `--allow-rdfa-attributes yes` or whatever, coud default to on, every attribute collected is first checked in this `RDFa` attribute list...\n\nThis compare service could then also have exceptions depending on the specific node they are on, or the indicated doctype, or ..., if need be...\n\nAnyway, just an idea off the top of my head on hearing `ALL` elements...\n\n> I will see if I can put together a pull request that supports this in its simplest form.\n\nThat would be very much appreciated... thanks...\n. @halindrome just wondering how this is going? \n\nCan I do anything to help?\n\nCan anyone else help with this?\n\nI am seeing more and more sites using these RDFa attributes, so it becomes important Tidy begins to have some support...\n\nWe should be able to start small, avoid the `PROPRIETARY_ATTRIBUTE` warning... It is only used once - [LN1343](https://github.com/htacg/tidy-html5/blob/master/src/attrs.c#L1343) ... after a `AttributeIsProprietary(node, attval)` returns `yes`.\n\nIt could have an additional condition to return `no`, like maybe -\n\n```\n   if (isRDFa_Enabled() && matchesRDFa(attval) && inHTML5Mode())\n    return no;\n```\n\nThe first checks the user option is on, the second that is matches a RDFa global list, and the 3rd that we are still in HTM5 mode...    \n\n### **\\* HELP NEEDED ***\n. @halindrome that is great news... are you going to share this code with granddaddy tidy?\n\nI note your current fork is quite a number of commits behind htacg:master... You probably already know this, but this is my little **update a fork** mantra -\n\n```\n$ git remote add upstream git@github.com:htacg/tidy-html5.git # once only\n$ git checkout master\n$ git status\n$ git stash    # if not clean\n$ git fetch upstream\n$ git rebase upstream/master\n$ git stash pop # if reuired, and fix conflicts\n$ git push      # update the fork\n```\n\nThen you could create a PR for us to look at...\n\nMaybe you are right about **not** needing an option, which it would seem we would want to default to `on` anyway...\n\nIf the above fork/PR is too much trouble, then you could just post, or send me a patch from `$ git diff -u > ../RDFa.patch`...\n\nMaybe this has already been solved ;=))\n. @halindrome we now seem to have our first RDFa issue #333... hope you can help in this...\n\nAm closing this as the first initial cut done... feel free to re-open or add a new issue... thanks...\n. See the thread https://lists.w3.org/Archives/Public/html-tidy/2015AprJun/0009.html for some discussion on alternatives to this table summary attribute...\n. @skynet thanks for the comment. I would agree supporting html5, but there are still some questions.\n\nI have constructed 4 test files, all with a table, and put them to the W3C validator, and to tidy 4.9.32 and show the results - (NWORE = No warnings or errors were found)\n1. in_210-1.html - html5, no summary - PASS NWORE\n2. in_210-2.html - html5, with summary - **FAILED** NWORE\n3. in_210-3.html - html4, no summary - PASS NWORE\n4. in_210-4.html - html4, with summary - PASS NWORE\n\nTest 2 shows me the validator is **serious** about `NO SUMMARY` in HTML5, yet Tidy says `NOTHING`.\n\nHere I suggest a new warning like `warning: The summary attribute on the table element is obsolete in HTML5.`\n\nAnd also for case 3, when the document is NOT html5, output the usual summary warning, even though the validator sees nothing wrong. That is restoring tidy's previous behaviour.\n\nAnyway, baring any convincing comments to the contrary, this is how I will proceed.\n. It's done ;=)) Bumped version to 4.9.33 for this change.\n\n##### 1. in_210-1.html - html5, no summary - remains NWORE\n\n```\nNo warnings or errors were found.\n\nInfo: Document content looks like HTML5\n```\n\n##### 2. in_210-2.html - html5, with summary - NEW WARNING\n\n```\nline 8 column 1 - Warning: The summary attribute on the <table> element is obsolete in HTML5\n1 warning, 0 errors were found!\n\nInfo: Document content looks like HTML5\n```\n\n##### 3. in_210-3.html - html4, no summary - OLD WARNING retored\n\n```\nline 9 column 1 - Warning: <table> lacks \"summary\" attribute\n1 warning, 0 errors were found!\n\nInfo: Doctype given is \"-//W3C//DTD HTML 4.01//EN\"\nInfo: Document content looks like HTML 4.01 Strict\n\nThe table summary attribute should be used to describe\nthe table structure. It is very helpful for people using\nnon-visual browsers. The scope and headers attributes for\ntable cells are useful for specifying which headers apply\nto each table cell, enabling non-visual browsers to provide\na meaningful context for each cell.\n\nFor further advice on how to make your pages accessible\nsee http://www.w3.org/WAI/GL.\n. You may also want to try\n\"http://www.cast.org/bobby/\" which is a free Web-based\nservice for checking URLs for accessibility.\n```\n\n##### 4. in_210-4.html - html4, with summary - NWORE\n\n```\nNo warnings or errors were found.\n\nInfo: Doctype given is \"-//W3C//DTD HTML 4.01//EN\"\nInfo: Document content looks like HTML 4.01 Strict\n```\n\nLook forward to testing and comments...\n. No comments for a few weeks, so closing this for now...\n\nFeel free to re-open, or post a new issue.\n. @michaeljwilliams, can not replicate the problems in the current tidy version 4.9.26!\n\nI get `No warnings or error were found` when tidying (input5/in_211.html) -\n\n```\n<!DOCTYPE html>\n<head>\n<meta charset=\"utf-8\">\n<title>Issue #211</title>\n</head>\n<body>\n<a>\n  <div>\n    <p>Tidy says \"inserting implicit &lt;a&gt;\"</p>\n  </div>\n</a>\n</body>\n</html>\n```\n\nCan you update and test again... thanks...\n. @michaeljwilliams sorry to hear updating is a **pain** ;=((\n\nBut what is the problem? Maybe I can help... I note you are in a MAC OS X, so it should be as easy as open a terminal window, git clone the repo, then cmake, and build...\n\nThe actual steps would be -\n1. Open Terminal Windows\n2. Navigate to where you want to clone tidy\n3. $ git clone git@github.com:htacg/tidy-html5.git # should create a tidy-html5 folder\n4. $ cd tidy-html5/build/cmake # get into the build folder\n5. $ cmake ../.. # generate the unix Makefile\n6. $ make # compile and link\n7. $ make install # install tidy5, but not sure where this goes in OS X\n\nIf you have not setup github.com ssh access, then maybe in step 3 you would need to use the READ ONLY repo - `https://github.com/htacg/tidy-html5.git`\n\nAnd even without the install step 7, in tidy-html5/build/cmake you should then have an up-to-date binary, called `tidy5`... can be run with `./tidy5 -v`...\n\nAnd if you have already done the step 3 somewhere else, then navigate into that directory, and change step 3 to just `$ git pull`, and this will update the source to the latest... then onwards step 4, 5, 6, ...\n\nI know others have built tidy5 in OS X, and maybe they could also help with any problems... it should be **easy** ;=)) we need more 'testers' before 5.0 is released...\n. @michaeljwilliams , I see from a previous post, #164, you are on on Mavericks (10.9.5), and reported cmake install problems back then... \n\nAnd to confirm, the stable branch is now `master`...  and yes building tidy from source absolutely requires cmake! It is a cross platform `generator` that can build a Makefile, and other native build systems. And is now the base build system in **MANY** projects...\n\nI will get around to deleting the develop-500 branch which is now no longer up-to-date!!! \n\nAnd then again in #166, where it seems you reported being able to build and install cmake from source using `sh boostrap`. What happened to that installation?\n\nI personally always use the CLI interface, and have little experience with the GUI, which in some platforms is a separate install, after a successful CLI install.\n\nOn stackoverflow I can read others also had problems installing cmake using the dmg files - See : http://stackoverflow.com/questions/18857408/cannot-install-cmake-for-mac-os-x-10-8 - \n\nThere the offered solution was -\n\n```\nYou can install cmake via (Homebrew)(http://brew.sh/)\n\nInstall Homebrew\n\nruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\nInstall cmake via Homebrew\n\nbrew install cmake\n```\n\n**But take care if you then also try to build and install tidy using homebrew!**\n\nUnless they have fixed the script this can lead to problems - see #30 - read my post at/near the bottom where I found the `tidy` script seemed to not be doing the right thing! And offered the simple steps in a terminal window... which you have seen before...\n\nI can see from your multiple posts this has been a trying experience for you, but I hope you will find the time to continue to **share** your experiences here so other OS X owners can benefit... and sorry cmake is causing such **pain** ;=()\n\nAnd hope other OS X users who have successfully installed cmake can also share... Also please add your OS X version, as it seems this can change things... thanks...\n. @DanSmall, no you are not missing anything ;=))\n\nThis is like a regression due to the fact that in tidy5 mode the anchor element is treated as a block element, thus is parsed by ParseBlock, while earlier CVS tidy treats it as an inline element, and is parsed by ParseInline.\n\nThus if you added a doctype of say 4.1, or earlier, tidy5 would adjust the table back to html4-- mode, and this leading space in the anchor text would be coalesed into text node before the anchor.\n\nWhen ParseInline is called the mode is MixedContent, so the space is added to, and left in, the lexer, so can be worked on later, while ParseBlock is called with mode IgnoreWhitespace, so the leading space is dropped, and just lost forever...\n\nAs you point out a simple case of `<a href=\"#1\">A</a><a href=\"#2\"> B</a>` will be **fixed** by cvs tidy to `<a href=\"#1\">A</a> <a href=\"#2\">B</a>`, rendered as `A B`, while tidy5 will presently output `<a href=\"#1\">A</a><a href=\"#2\">B</a>`, rendered as `AB`! A case of the missing space!!!\n\nAm looking for a fix, unless you, or others find it first and add a pull request... thanks for reporting...\n. @DanSmall, turned out to be a simple patch but am always suspicious of simple fixes ;=))\n\nAs suspected, this was due to the fact that in html5 mode the anchor tag is now parsed in ParseBlock, and in the interests of speed, normally leading text spaces of block tags were removed unconditionally by setting IgnoreWhitespace mode. \n\nNow, since an anchor tag is marked as both CM_BLOCK and CM_INLINE, the MixedContent mode is retained if there is a likehood, that this leading space may need to be moved out to before the block tag, restoring the previous behaviour.\n\nHave run a full set of diagnostic tests in this 4.9.28 version of tidy, and everything seems ok.\n\nHope you get a chance to test and close...\n. @DanSmall thanks for re-opening this... at this stage can only confirm your results... will find time to look into it, unless someone else beats me to it ;=))\n. @DanSmall have pushed a further fix which should now preserve the space to maintain the correct broswer view. Did this by changing the `mode` to `MixedContent` if it is likely that a leading space may be needed to create a space text node to insert before this element.\n\nAnd found at a deeper layer that for no good reason it seems `ParseTag` is called with a hard coded `IgnoreWhitespace` while code above it has potentially set the `mode` variable to `MixedContent` in certain cases, but it is not used??? But want to test and think about this change some more...\n\nHave bumped the version to 4.9.32 and hope you get a chance to pull an update, re-compile and test, and maybe again `close` this issue, hopefully forever this time ;=)) but thanks for testing...\n. @EvansMike thanks for the report...\n\nBut as usual, to speed up testing, fixing, can you provide a **small** sample input, the configuration used, the tidy version used, the output, and the `expected` output... thanks.\n\nRemember to bracket code in 3 back-ticks to render it literally...\n. @EvansMike thanks for the sample, and I can see a missing space, and will try to look at this when using -xml...\n\nAlternatively, if you do not want the header footer parts then you can also use `--show-body-only yes`, which does preserve the space -\n\n```\n$ tidy5 --show-body-only yes --show-info no input5\\in_212-6.html\nNo warnings or errors were found.\n\n<h2>The Things</h2>\n<p>The required things are readily available from online sellers.\nRefer to <a href=\"https://some.random.com\">free things</a> at\nrandom site, then:</p>\n```\n\nPreserving the space when using `-xml`, which tells tidy to treat the input as well formed xml, may also be possible... but maybe not! I do not think `well formed` xml can have a space here! Will see when and where this space is lost...\n. Or even trimmer adding `-q` (quiet) -\n\n```\n$ tidy --show-body-only yes -q input5\\in_212-6.html\n<h2>The Things</h2>\n<p>The required things are readily available from online sellers.\nRefer to <a href=\"https://some.random.com\">free things</a> at\nrandom site, then:</p>\n```\n. @rickdog yes it is appears wrong... will fix it soonest... thanks for reporting...\n. @rickdog that link should be fixed now... advise if you find any others... thanks...\n. After a few more tries, SEEM to have now got this right ;=()\n\nRequired checking out the gh-pages of the tidy-html5 repo, and modifying documentation/_posts/2000-01-01-part_intro.md...\n\nBut still do not quite understand why a url reference `[2]: /tidy-html5/tidylib_api/` works by resolving to http://www.htacg.org/tidy-html5/tidylib_api/ which gets there, but the actual documentation is in repo root/tidylib_api???\n\nThe mysteries of yaml ;=))\n\nAnd also manage to add some garbage to the page, which will also try to fix...\n. @RalfRoemling yes, we are aware of that and it should be fixed shortly... thanks for reporting...\n\nIt is for that reason that we have not yet added any later versions...\n\nAnd it is one of the last few remaining things before setting up the first 5.0.0RC1 for testing.. We want to make sure the release candidate is available for the widest testing possible, not only for those who can compile from source...\n\nSoon I hope ;=))\n. @RalfRoemling if you have `wget` or similar http fetch tools, or even in a browser, you can use -\n\nwget http://www.htacg.org/binaries/binaries/tidy-4.9.26/tidy5-4.9.26-win64.zip\n\nNote the double `binaries/binaries` folder...\n. @RalfRoemling and now clicking on the links should start the downloads... maybe refresh the page...\n\nIn the coming days might put up one more version, just to make sure it all works... and develop a process to make it simple...\n\nHopefully later in the week should be ready for the first **5.0.0RC1**... this will be called just `tidy`... not before time ;=))\n. @andya9 to speed things up and save me doing lots of research could you please give a short sample html. Show the config used, the output, and what the expected output should be... thanks...\n. @andya9 thanks for the sample... seems this warning has been in tidy for a **LONG** time... since before the last release circa 2009... will see what I can do...\n. @andya9 - Hmmm, the message value is NESTED_QUOTATION. Is only used once, in parser.c(1736). Decide to only issue this warning `if (TY_(HTMLVersion)(doc) != HT50)`\n\nBumped the version to 4.9.36 for this change.\n\nHope you get a chance to pull and compile the latest, and close this if fixed... Thanks for reporting...\n. Ok, found the problem and what seems like a suitable solution...\n\nThis is a case where we effectively have `href=\"\"`, although here we have `=\"\\x12\"`, but the ReadChar() function will drop all control chars...\n\nSo since there is no attribute value, len will be zero, which is ok... it is the truth - there is no attribute value length...\n\nNow the code has `if (len > 0 || delim)`. Well it is delimited, `\"\"`, so this block is entered, and it is in here that len can be reduced...\n\nSo added to the code in this block -\n\n```\n    /* Issue #217 - Also only if/while (len > 0) - MUST NEVER GO NEGATIVE! */\n    if ((len > 0) && munge &&\n```\n\nAnd even more, if len does have a value, then protect against len ever going negative with -\n\n```\n    while (TY_(IsWhite)(lexer->lexbuf[start+len-1]) && (len > 0))\n       --len;\n\n    while (TY_(IsWhite)(lexer->lexbuf[start]) && (start < len) && (len > 0))\n    {\n        ++start;\n        --len;\n    }\n```\n\nIt was the first of these two that did the damage. \n\nstart=4, len=0, and just coincidently lexer->lexbuf[3] contained an 0xa, thus len was decremented to -1 ;=((.\n\nThat in itself is quite unique since there are only a few special cases where control chars are added to the lexer. But you guessed it, one is when parsing 'code', like `<?xm...`, to preserve the newlines in the 'code'...\n\nNow when the code does `value = TY_(tmbstrndup)(doc->allocator, lexer->lexbuf + start, len);` if `len == 0` it will return a NULL, which is exactly what the attribute value is, a `blank`!\n\nIn some cases this bug could exibit a different problem like parsing the snippet `<a <?xm \\0xd?> href=\"\">`.\n\nNow the lexer buffer will contain 2, or more IsWhite() chars and len would be reduced to -2, or less, which means the malloc buffer allocation would be a giant 4,294,967,295 byte allocation, a value lots of OSes will reject...\n\nAnd I can confirm this **BUG** exists in the 2008/9 libtidy.0.99.so last release, the sourceforge cvs tidy, which is still present in some distributions. Just the quite unique nature of using 'code' ending in spaces or a newline just before an attribute with a 'blank' value prevents it from being seens more often...\n\nInterestingly, it is **NOT** present in TidyAug2000, the earliest tidy source I have, since (a) it did not have that additional len decrement, and (b) used an int in wstrndup, the predecessor of tmbstrndup, so the code `while (len-- > 0 && (*p++ = *str++));` drops out on the first loop when len is 0, and thus just 1 byte has been allocated, so the final `*p = '\\0';` is ok...\n\nAnyway, now no more buffer corruption, or massive allocs, for this latest tidy ;=)). I love crushing such ancient bugs...\n\nAlso bumped the version to 4.9.31 for this important fix.\n. Since no further comment for a few weeks will close this now...\n\nPlease feel free to re-open, or open another issues...\n. Ok, chose the first, and it got rid of this issue ;=))\n\nBumped version to 4.9.34\n. @vladimir-kovalenko yes the input file must follow all options... then you can have more options and another input file, and so on...\n\nClosing this as 'fixed', but thanks for reporting...\n. @vladimir-kovalenko yes, as you figured out each time Tidy5 changes an enumeration, or list of options `TidyManaged` has to be changed appropriately to match **exactly** ;=().\n\nIt would be good if you forked `TidyManaged` into your own github user space, cloned and worked on your fork to get it to match the current tidy5. Then when you 'fix' your fork, and pushed, you could present a pull request to @markbeaton to update there as well...\n\nGood luck...\n\nMeantime closing this as not being a tidy5 problem... but thanks for reporting and sharing...\n. @ryandesign, I share some of your concern about the current versioning. The major version 4 was **never** meant to last this long. It, together with the suffix `5` was introduced to allow a previous version of 'classic' tidy to co-exist with the developing new tidy5 version. It was supposed to be quite **temporary**...\n\nThere were some ideas that we would continue tidy5 separately, but I think it has now been shown that tidy can have two modes. Default html5+, but if given an older document revert to html4- mode. Proving this is feasible is one of the reasons the major 4, suffix 5 has continued so long... But I think it has been proven... so...\n\nIn general the idea is to follow [Semantic Versioning](http://semver.org/), where -\n1. MAJOR version change to denote incompatible API changes\n2. MINOR version when functionality is added in a backwards-compatible manner\n3. PATCH version on each bug fix.\n\nThe first release of tidy 5.0.0 is presently targeted for the end of this month. Then the suffix `5` will be dropped, and the shared library will be ligtidy.so.5.0.0, and soft links libtidy.so and libtidy.so.5 will be created.\n\nYes, this may require projects linking with libtidy to be rebuilt. This will be the first release of tidy in about 6 years...\n\nA tag and a 5.0.0 release branch will be created. And the master branch changed to 5.1.0\n\nThere after, only the PATCH number will increase for each bug fix, and maybe some feature fixes applied giving 5.1.1, 5.1.2, ... in master... the development branch...\n\nIf a fix is significant, important, such fixes will also be pushed to the 5.0.0 branch, making it 5.0.1, 5.0.2, ... and projects linking with libtidy would not need to be rebuilt to be able to use this later library. Just pull, compile and install the later library...\n\nWhen thought appropriate a next release 5.2.0 (tag and branch) created, but again projects linking with libtidy only need pull, compile and install to use this next release. And the master moved on to 5.3.0...\n\nAnd so on, at least until there are incompatible API changes...\n\nIt is agreed there are many variation on `versioning`, and here have chosen one...\n\nDoes this sound reasonable to you and others?\n. @ryandesign, sorry, I guess I did not make it clear enough. There was never supposed to be a major `4` released. And further distinguished it by adding a `5` suffux. It was just an interim, which got extended and extended and extended... It was **always** intended that the next release would jump all the numbers from 0.99, 1.0, etc directly to `5.0.0`, and that's what will happen...\n\nAnd while the API is mostly binary compatible even with 0.99, some enumeration have changed, especially related to config, thus it is necessary to rebuild any project that uses libtidy...\n\nAnd this is all about the libtidy version, and that **is** the project version... \n\nIn essence the tidy console app is just an example of how to use libtidy, so it has no 'version'. And yes, if we did choose to re-write this console app, but not sure why, then it might begin to have it own version, and as you point out that could be different to the libtidy, aka project version.\n\nGood to hear you have already dropped the suffix `5`... I made sure that was as easy as changing one name in CMakeLists.txt... which is exactly what I will do next week on releasing 5.0.0...\n. @ryandesign hope now all is agreed...\n. @skynet could not agree more...\n\nMy (perceived) advantages of using Tidy on each new or edited web pages - now a few thousand on my `sprawling` web site ;=)) are -\n1. So I can say I keep my web pages Tidy! And add the tidy logo. ;=))\n2. Nicely space indented for the MSVC IDE integrated web content 'source' editor.\n3. It acts as a quick validator of type, so can add W3C validation icon with little fear.\n\nWhile the MSVC IDE web content editor also uses, suggests indenting, it is not very complete, or flexible, so after manually writting to a page, my last step is to still run tidy... I have it all setup in a macro...\n\nHowever, I see a **LOT** of web contents with either -\n- very little regards for code layout - extreem is single line, sort of compressed html, or \n- has its own which is probably then acceptable to the owner and the chosen content editor. \n\nIt seems sites `written` like this would have little or no use for Tidy!\n\nI am also not too sure about using tidy to reduce page load overhead. In my case at least, it usually adds spaces (weight) to the file, since I like the visual source indenting and vertical spacing...\n\nI guess a person either falls in love with what tidy does, and thus will use it all the time... others not so much... so not sure what characteristics need to be put in an article to attract **new** users... just so they can decide if they love/hate tidy ;=))\n. @skynet, @vielmetti I agree the obvious place is http://www.html-tidy.org/...\n\nAs recently mentioned the `source` of these pages is in the `tidy-html5` repo, in the `gh-pages` branch - `$ git checkout gh-page`... Simple to modify, understand, add to... and do **not** seek alternative web page technologies...\n\nThe present 7 `headings`, or *.md pages are -\n\n```\n\"TIDY\", \"WHAT IS TIDY?\", \"DOX\", \"HISTORY\", \"ACK\", \"GET TIDY\", \"FAQS\"\n```\n\nMaybe the best choice here is \"WHAT IS TIDY?\", which ends with `TidyLib is used today in desktop applications, web servers, and more.`.\n\nTo that we could add say a link, like `Here is a list of <a href=\"proj.html\">projects</a> that use the TidyLib API, or the tidy condole app.`... Put the list in proj.html...\n\nAlso at present there is a section in \"GET TIDY\" talking about `Software using TidyLib`, but is does not list anything... So such a list could be added there... or maybe this could be moved to the above...\n\nAlternatively, the above 7 headers could be expanded. Maybe add a \"USES OF TIDY\" page...\n\nMore suggestions welcome... our web pages could certainly do with some TLC ;=))\n. @ryandesign this is a very **valid** point. One that has concerned my for quite some time, as I have experienced these generic header `name` problems several times before...\n\nOne of the worst is the many projects that use and install a `config.h` ;=() And although tidy does have a `config.h`, it is only local, and not installed.\n\nI think I would go for the platform.h to tidyplatform.h, and buffio.h to tidybuffio.h rather than the alternative of changing to `<tidy/titdy.h>`, thus installing in a tidy sub-directory, but will reflect upon this a little...\n\nAnd now is a good time to make this change before the release, so will not reflect for too long ;=)).\n\nLook forward to any other comments...\n. @ryandesign done and issued 5.0.0.RC1 at the same time...\n. @zmwangx, sorry I always seem to get this tagging wrong ;=() Have deleted the 5.0.0, and added a 5.0.0.RC1 pre-release tag. Hope that is the correct action... The code is stable...\n\nYes, with this release the `5` suffix has been dropped. This was `always` supposed to be **very** temporary, but it got extended, extended, and extended... so for sure it drifted into user scripts...\n\nSo yes, for sure [Homebrew](https://github.com/Homebrew/homebrew/blob/master/Library/Formula/tidy-html5.rb), and any other build/install scripts, need to be updated...\n\nJust a question on the `tidy-html5.rb` script. I note the cmake is `system \"cmake\", \"../..\", *std_cmake_args` which looks fine...\n\nBut I do **NOT** know what is in `std_cmake_args`?\n\nIf you are planning to build and install a Release version, that is one where -DNDEBUG is defined to remove the `asserts`, this should include `-DCMAKE_BUILD_TYPE=Release`.\n\nAnd if you want to install tidy in the `usual` unix /usr/include, /usr/lib, ... should also add `-DCMAKE_INSTALL_PREFIX=/usr` to such std_cmake_args variable... cmake often chooses some other places, like `/usr/local` as the default if none given.\n\nAlso, since this also includes two renamed header files, it would be a good idea if all previous versions of libtidy be uninstalled first. While there is presently no `uninstall` target, the contents of install_manifest.txt should contains the last install... just delete the files listed...\n\nAnd even if that `manifest` is not available, the 2 renamed headers means all installed instances of buffio.h and platform.h should be **DELETED** from /usr, /usr/local, etc, ...\n\nThis is particularly **important** for the `man` page installation. Earlier versions of tidy, before the introduction of the `5` suffix, would install `tidy.1` into `/usr/local/share/man/man1/`. Sometimes a `man tidy` can look in there first, and load an OLD `tidy.1`. This should be deleted...\n\nSimply, `$ man tidy` should open a man page with the correct version, 5.0.0.RC1, at the top and bottom... \n\nHTH, and sorry about the tag mess up...\n. @zmwangx, thanks for the info on `std_cmake_args`... and good to hear Homebrew includes a sort of `uninstall`... certainly storing an app in 'Cellars' is an interesting way to control what is installed and where, then a symlink in /bin... helps me understand Homebrew a little more...\n\nHave now published some 5.0.0.RC1 binaries - http://www.htacg.org/binaries/ - ...\n\nUnfortunately the Windows MSI and NSIS EXE Installers are quite useless at the present time. These installers are NOT really suitable for a command line app, and are usually reserved for GUI apps. How about a <a href=\"https://github.com/geoffmcl/tidy-gui2\">Tidy-GUI2</a>, but still very much a WIP. Any help appreciated...\n\nFor Windows the best bet is the ZIP. It contains a stand-alone tidy.exe, which can be copied to any path given in your PATH environment variable, so it can be run from anywhere. Of course if also contains the 4 headers, and static and shared libraries, which can be moved to a `3rdParty` directory for development.\n\nAnd have a little repo <a href=\"https://github.com/geoffmcl/tidy-test\">Tidy Test</a> to find and link with such an installed tidy libraries and headers... and produce `tidy-test`, which is actually just `tidy` too... This is to develop and test a `FindTidy.cmake` cmake find module, to propose to the cmake maintainers at some point...\n\nTODO: Still to do is update the API docs, with doxygen, and publish... again, any help in this would be **much** appreciated...\n. @zmwangx, again so am I confused, hence the delay in a reply...\n\nI did some background reading about git tagging. It seems it is nothing more than a marker for the last commit... full stop... You can even `back-date` a tag by saying which specific commit you want the tag `attached` to, like -\n\n```\n$ git tag -a v1.2.3 9fceb02\n```\n\nSo when I added tag 5.1.7 I was adding a marker to hopefully the last commit to `issue-228` before I commence the merging that branch back into the `master` branch...\n\nSo in a sense it was just a marker added to the repo for my benefit... if there is a problem with the subsequent merge I want to be able to get back to there...\n\nHowever it seems you are taking this **tag** to mean something else, like a `signal` of something...\n\nMaybe you could describe its meaning to you, maybe point to some reading, and I will try to use the tagging that suits you, and other downstream package managers...\n\nMaybe we could use two tag forms, say an `i5.1.8` meaning internal tag, and say `v5.1.9` as an indication to downstream packages that this is a `stable` point to take note of... or something like that...\n\nAs indicated here and in other comments actual `releases` are already stored in a `branch`, like `release/5.0.0`. Using a `branch` seems the only way to fully isolate a specific block of code...\n\nSo, to me, 'tags' are more just like a `time` and `place` marker... they just mark at a specific commit point, and do **not** take account of the branches... but maybe I do not understand something here...\n\nAnd to repeat, the aim it to always make sure the `master` branch is `stable`...\n\nAnd each `version` increment, in `version.txt`, represents a bug or feature fix, improvement, whether I remember or not to add a tag as well... \n\nAnd it is hope downstream packagers can take advanatage of this to offer the latest, best, soonest thereafter...\n\nPlease help me understand your **tag** needs...\n. @zmwangx thanks for the link...\n\nFirst, it is intended that Tidy does generally follows [Semantic Versioning](http://semver.org/)...\n\nAnd yes, it seems github docs inexplicably **link** `Releases` with `tags`... in that the [Releases](https://github.com/htacg/tidy-html5/releases) link is actually just a list of tags...\n\nBut you can see the `important` tags are marked with a colored left label, while others are just listed bare...\n\nI need to experiment to get to understand what **github** wants, expects us to do to mark a release...\n\nAnd this reminded me I must get around to doing two other things -\n1. Remove the .RC1 from the 5.0.0 and declare it an official `release`, and\n2. Merge the `issue-228` branch back to `master`, when I will bump the version to 5.1.8\n\nThen maybe move that green `Latest Release` label to it, 5.1.8... as the latest and best `release`...\n\nAnd maybe it is time to consider a 5.2.0 release soon... when master would move on to 5.3.0...\n\nHope to get this right eventually ;=)) \n. @zmwangx as you point out unfortunately it seems those labels are added by github... At least so far I have not found to way to fully control them... it depends on using the `Draft a new release`, and then `Publishing` it with comments, and artifacts...\n\nI just added a tag for 5.1.8, the final merge of the `issue-228` branch back into `master`, and I am sure that green label will move if I take the `publishing` step... not exactly what I would prefer...\n\nBut on the other hand, as you point out, maybe that is ok... \n\nSince I **do** feel 5.1.8 is a stable, and good step forward with -\n- new feature `--vertical-spaces auto`, with `--wrap 0`, `--indent no`, which outputs the html as a single **compact** html line, \n- new feature `--indent-with-tabs yes`, maybe `--indent-spaces 1`, which becomes a tab count instead of spaces,\n- fix some newline problems with a pre element, and\n- some other good fixes... see 5.1.8 [Release Notes](http://www.htacg.org/binaries/binaries/tidy-5.1.8/5.1.8.html) for details...\n\nit is **worthy** of being `published` as a `release`, and let the `Latest release` label moved to it...\n\nWill leave that decision for a little time for some more testing by everyone pulling `master`...\n\nThanks for helping me get my head around this `tagging` idea ;=)) As you suggest, I will try to `publish` **important tags**, thus urging downstream packages to do an update.\n\nAnyway, this `Major API change` Infrastructure issue has sort of run its course, so will close it...\n. @qualiware-global I know of no option to skip all unknown tag...\n\nAnd not sure of the use case for such an option... maybe if you explained more...\n\nIf it is a problem of no output from tidy on an error then you can use the `--force-output yes` to ensure there is output...\n. @qualiware-global see some more discussion on this in issue #119, where `custom` elements has been used instead of `unknown` tags...\n\nAm closing this for now since there have been no further comments for over a month, but feel free to re-open or post a new issue...\n. @flok99 thanks for this PR... now merge to master, and the version bumped...\n\nI added a test226 app to https://github.com/geoffmcl/tidy-test and both the node deletion, and attrib deletion seem to work just fine...\n\nThis may not be a problem you face, but in linux had to delete some old tidy,h (+buffio.h, platform.h and tidyenum.h) from /usr/local/includes, and some old tidy5 libraries... but that's probably residual in my system where I have done lots of earlier development especially **BEFORE** 5.0 release...\n\nAnyway, thanks again for this simple API extension...\n. @flok99 PS: Not sure what you mean by 'let me know where to rebase to'?\n\nNow and again a fork should be rebased back to the master it came from, namely htacg/tidy-html5... just to keep it in sync... that's all...\n\nWe have had some discussions with the sourceforge maintainers,  arnaud02, creitzel, and hoehrmann, but have only ever heard from the latter... \n\nWe have offered to do just as you say... we have presented a proposal to `re-join` all tidy efforts together... present `one` tidy...\n\nThe last communication was probably about a month ago now, so I do not know where things will go... or when...\n\nWill cross post this on the tidy-dev list...\n. @nokome thank you for testing 5.0.0RC1... that is important...\n\nyes, newlines inserted in `<pre>` tags #158 (feature and pretty print) is an old, **OLD** problem, still to be resolved... thankfully it is **NOT** a problem in some browsers, but others do make a new line in the display which should not be there! A big `horror` of `tidy`...\n\nAnd Add option to prevent outputting unnecessary vertical whitespace #163 (feature and pretty print) is a clear request that `--vertical-space f` mean almost **NO** vertical space ;=)) Sort of like a compact html stream - just one line - maybe an interesting feature addition someone could be interested in coding...\n\nBoth `requests` are marked `indefinite future`, which means we are still looking for the C coder to take interest, give their time, and work on these two great **features**...\n\nAre you the one? ;=))\n\nAnyway, again, tar muchly for testing 5.0.0RC1... and reporting...\n. @nokome had a look at Bountysource - looks quite interesting... a good way to motivate a programmer ;=))\n\nFrom my quick reading around their site I can not see any problem with accepting such code if it is released under the same, or a compatible license, as Tidy, as written in the header tidy.h...\n\nBut I am no expert in these matters...\n. @nokome as covered in #228, #231, and others, think we can close this now...\n. @nokome  wow, you have certainly made a good start... thanks...\n\nWhat you have effected is `--vertical-space off` means almost NO vertical space! But is that exactly what we want? Maybe an enumeration might be better... or something...\n\nLooking at the code the current  TidyVertSpace is just used 3 times -\n1. `<hr>` - horizontal rule\n2. `<pre>` and `<textarea>`\n3. container element, other tags\n\nIn each case you can read the simple comments `/* insert extra newline for classic formatting */`\n\nAnd also the help text states, which is what is shown on `$ man tidy` page -\n\n```\n  {TidyVertSpace,\n   \"This option specifies if Tidy should add some empty lines for \"\n   \"readability. \"\n  },\n```\n\nSo, for sure, an additional part of this PR would need to `amend` this text appropriately... \n\nBut in the enumeration, which is a comment that appears in doxygen docs generation... maybe it is already simple enough...\n\n```\n  TidyVertSpace,       /**< degree to which markup is spread out vertically */\n```\n\nSo then, using the Bool we have -\n\nIt defaults to `no`, meaning you get lots of vertical space, even some undesirable like in the ` ` case, and a `yes` means just add some extra `classic` vertical space, in a few special cases...\n\nHmmm, rather than a new special enum we could use the `TidyTriState` Autobool option - no,yes,auto... \n\nThen we have 3 states -\n1. TidyNoState,     `/**< maps to 'no' */`\n2. TidyYesState,    `/**< maps to 'yes' */`\n3. TidyAutoState    `/**< Automatic */`\n\nThen `no` means output as now, with vertical spaces... `yes` means classic, add some extra vertical spaces...\n\nAnd `auto` means give me the leanest version of tidy! That is almost **NO** vertical space... sort of compressed one line html... light and fast... modern...\n\nThen the man page could read -\n\n```\n  {TidyVertSpace,\n   \"This option specifies if Tidy should add some empty lines for \"\n   \"readability.  Default 'no'. If set to 'auto' Tidy will eliminate almost all vertical-space.\"\n  },\n```\n\n### Issue #158 - newlines inserted in `<pre>` tags\n\nTo me the ` ` is a separate and special issue, and maybe does not need to be related to this `vertical-space` option at all. \n\nTo me `pre` means do **not** mess at all with my spacing. And that would mean avoiding a newline after a ` ` tag, again unless there is one in my text.\n\nI think a strict application of this does not need an option. It is what Tidy should do in the html5 era ;=)) So think this should be a separate fix/PR... as always, any help appreciated...\n\n### But back to this PR...\n\nSo I think it is not quite the right time to merge this PR into `master`, but have merged it into an `issue-226` branch to continue its development... you should be able to pull it into your fork, using rebase...\n\nAnyway, what would be your, or of others, comments on the above ideas? \n\nYou have done some very necessary ground work here, thanks again, and it seems more a case of how to present this extended 'option', and deal with the use cases... \n\nIf you get a chance to continue this PR that would be great... I will help where I can...\n. @nokome ok, I could agree with your AutoBool enum wrapping, but as you point out this introduces backward compatibility to existing configs in use by (Zillions? ;=)) of users... \n\nWhere as my mapping meant no change for anyone, except the new user, who wants to use your **new** feature, that is nearly **no** newlines...\n\nSo if we go to -\n- no : no vertical spaces except explicit newlines in `<pre>,<script>,<style>` (and possibly some others?)\n- yes : Tidy adds new lines between elements (the current no , current and new default)\n- auto : Tidy adds extra new lines for readability (the current yes == classic)\n\nAnd assuming a changed `default` to `yes`, it does break some backward compatibility, and causes change! How much? If in their config -\n- No use of `--vertical-space` - no change for them. Hopefully the majority???\n- Uses `--vertical-space yes`  - need to change to `--vertical-space auto` (classic)\n- Uses `--vertical-space no`   - need to change - a really **BIG** surprise for them!!! ;=))\n\nAnd of course no one would yet have `--vertical-space auto`, since it does not exist.\n\nCompared with the current `default` of `no`, and using my mapping of -\n- no : output as now, with vertical spaces...\n- yes : means classic, add some extra vertical spaces...\n- auto : A **new** feature - almost **NO** vertical space...\n\nIf in their configs -\n- No use of `--vertical-space` - no change for them. Hopefully the majority???\n- Uses `--vertical-space yes`  - no change for them. They get the extra vertical space (classic) \n- Uses `--vertical-space no`   - no change for them. They get the default...\n\nAnd the **new** user, who wants the **new** compact html feature adds -\n- Use `--vertical-space auto`  - They get a bare output, with almost no newlines\n\nSo I am really 50:50 which mapping is used, but I suppose would fall on the side of maintaining backward compatibility. Need some more people to comment on this to decide...\n\nRegarding, #158 newlines inserted in `<pre>`, as you may have seen have merged this. It deals with one small problem, now solved...\n\nConcerning the fact that Tidy! `eats` any leading user newline, I would prefer you open a **new** issue for this!\n\nThis `loss` of a leading newline would be back in the parser/lexer building of the tree... nothing to do with pprint... I can confirm that 5.1.2 does this, and it is a **bug** in my book... might be easy to find, fix, ... but I haven't yet seen where... will probably be something to do with `GetTokenMode mode`, or in the post token collection in TrimSpaces( doc, element );... any help appreciated...\n\nBut here in this #228 have a potential **NEW** feature ;=)) Always welcome, and exciting... let's continue...\n\nYou will note the PR is no longer auto-mergeable... you need to rebase your fork... can help with this... and as mentioned this change is now in the issue-228 branch... so this PR has been used. Thanks...\n\nWhich way forward?\n. @nokome since I found a potential solution I opened a new #230 specifically to deal with the `eaten` user newline in `<pre>` tag...\n. @nokome thanks for rebase? to master... but it seems you did not switch to the `issue-228` branch... but no problem...\n\nCertainly, let's wait a few days to see if there is any further comments...\n\nMeantime, agree and have added the `<style>` and `<script>` to my patch, and added this to this `issue-228` branch...\n\nIn this branch there are just 5 cases of `cfgBool( doc, TidyVertSpace );` to be changed to `cfgAutoBool`, and deal with the case switching, like ... \n\n```\n    /* pseudo code - not used */\n    TidyTriState vert_space = cfgAutoBool( doc, TidyVertSpace );\n    Bool classic = no;\n    Bool no_vert_space = no;\n    switch (vert_space) {\n    case TidyNoState:    /**< maps to 'no' */\n        # nothing to change...\n        break;\n    case TidyYesState:    /**< maps to 'yes' */\n        classic = yes;\n        break;\n    case TidyAutoState:    /**< Automatic */\n    default: /* not sure this is required */\n        no_vert_space = yes;\n        break;\n    }\n```\n\nAnd/Or this could be presented as macros -\n\n```\n/*\\\n * Issue #228 20150715 - macros to access --vertical-space tri state configuration parameter\n\\*/\n#define TidyClassicVS ((cfgAutoBool( doc, TidyVertSpace ) == TidyYesState) ? yes : no)\n#define TidyAddVS ((cfgAutoBool( doc, TidyVertSpace ) == TidyAutoState) ? no : yes )\n```\n\nI have implemented these in the `issue-228` branch using the above MACROS... but have done no tested yet...\n\nI think I missed `squashing` two `unwanted` newlines that I saw in commit #0bf0d85a of your fork... would like to look at this first rather than just removing some extra lines traditional tidy! added for readability... And this is unrelated to whether or not there is a leading newline in the users text data, which needs to be preserved in the lexer... maybe a separate issue even...\n\nAdded the xml tri-state text for this option... for `$ man tidy` help page...\n\nIf you get a chance to sync up with this branch, and run your tests...\n\nSo to me things are moving forward ;=))\n. @nokome some test results using the `issue-228` branch, and your above test.html...\n\nDEFAULT config - --tidy-mark no --show-info no\n\n```\nCONFIG = DEFAULT\n<!DOCTYPE html>\n<html>\n<head>\n<title>Flatland</title>\n<meta charset=\"utf-8\">\n</head>\n<body>\n<div>\n<div>Some like it flat</div>\n</div>\n<pre>\nI want my\n            newlines preserved.\n</pre>\n<style>\n\n            .me.too {\n                color: red;\n            }\n</style>\n<script>\nI dont want any at all!\n\nA long piece of\ntext that will get wrapped.\n\n\n```\n\n```\nCONFIG += --vertical-space yes\nhtml\n\n\nFlatland\n\n\n\n\nSome like it flat\n\n\nI want my\n            newlines preserved.\n\n\n\n            .me.too {\n                color: red;\n            }\n\n\nI dont want any at all!\n\nA long piece of\ntext that will get wrapped.\n\n\n```\n\n```\nCONFIG += --vertical-space auto\nhtmlFlatlandSome like it flatI want my\n            newlines preserved.\n            .me.too {\n                color: red;\n            }\nI dont want any at all!A long piece of\ntext that will get wrapped.\n```\n\nI think I forgot the role of `wrap` in the last test... yes, with `--wrap 0` the last line is one line...\n\nSo, what if anything is wrong with these 3 outputs?\n- no (default) = add vertical space as before\n- yes - (classic) = add some extra vertical space on certain element\n- auto - new one line feature, almost **NO** vertical space\n\nLooks very good to me, but it is getting late, and tired eyes can \nmiss lots of things ;=))\n. @nokome Yes, had missed the fix #158, a PR which happened after creating this branch... have re-implemented it here, adding some more comments, which will probably result in a conflict if and when this branch is merged back to master... but will deal with that then...\n\nAlso bumped the version to match master...\n\nAnd, as stated, still `thinking` about extra newlines at start of script and style - stencila/tidy-html5@0bf0d85 patch - it looks ok, but... maybe these `extra` newlines should remain if in `classic` mode... What do you think?\n\nAnyway for now, everything is current in this `issue-228` branch, ie all other patches are in, so will do some more testing...\n\nIt is beginning to feel like a complete implementation of your `smart` newline, which presently looks for `--vertical-space auto` to produce almost a single line html output... a **great** new feature ;=)) thanks...\n. @nokome just opened issue #238 which seems related to this `issue-228` branch...\n\nHave code one fix, but looking for a `better` way to do it..\n. @nokome seems you did have some immediate ideas ;=))\n\nBut it seems in your PR, if I am reading it correctly, removing the `PFlushLineSmart(...)` from the `PPrintScriptStyle(...)` permanently changes the `` output, and would **shock** those of us who expect such a newline... whether I added it or not in the code...\n\nThat is -\n\n```\n<script>var a = 0;\n\n```\n\nshould be output as -\n\n```\n\nvar a = 0;\n\n```\n\nAnd I think you would need more to deal with the `` tag which can also now suffer from this creeping newline syndrome ;=((\n\nI have suggested another, far simpler patch in #238, and that is to revert a little of what we discussed above... only excepting the `<pre>` tag, which has already had the post PrintTag newline removed... and returning `<script>` and `<style>` to what they were...\n\nAppreciate it if you get a chance to try it... it seems to keep the current Tidy! output in the default case, and still fully honor the new `auto` switch...\n\nWhat do you think?\n. @nokome have now merge branch `issue-228` into the `master`branch... look for to testing of this new feature...\n\nThank you for your efforts that brought all this about...\n. @nokome you may be **right**... but I need the code proof that these need such a `saver` ;=))\n\nMaybe they too lose any leading newline ;=((\n\nIt is after all a simple extension of this patch... but I have not yet had time to fully followed the path for `<style>` or `<script>` content gathering...\n\nMaybe some simple html5 examples would suffice... showing now, output, and expected... \n. With the 5.1.8 release with lots of `newline` changes, fixes and the `--vertical-space auto` option closing this...\n. Added another fix #232 to this branch, bumped the version, and added a RC_NUMBER (D231) to -v output...\n\nIn a few weeks of testing so far of this `issue-228` branch have not found a problem with this feature, so will consider merging it back into `master` in another week or so...\n\nTesting and comments appreciated...\n. Pushed a small 'fix' for the -xml-help output, used in the tidy.1 man page generation...\n. Have been strongly testing this `issue-228` branch for more than 4 weeks... and hope others have also had a chance...\n\nFor me, Tidy! remains `stable` in every test, and everything viewed, checked... all looks **good** ;=))\n\nThis included running alltest.cmd and comparing the new output to the `testbase` output.\n\nSome changes, some for fixes added to `master` before the creation of `issue-228`, cause the `message` ouput to change, and a few change (mostly the newline count in) the html output...\n\nThe most noteable of these is the restoring of the `missing` summary warning when the document is detected as being html4--, and issuing a warning if in html5++ mode and there is a summary attribute... this effected about a dozen+ tests... See issue #210\n\nAnd the changed treatement of pre and textarea tags, issue #228 and others, accounted for another dozen of so ouput changes... \n\nAnd accepting `&`, issue #207 another 5, of a total of just 31 changed files, of the 447 in `testbase`.\n\nWhat this means is that after this merge of `issue-228` into `master`, there has to be a `testbase` update...\n\nHave already experimentally done this merge and seems no conflict problems... so will get to this in the comming days, hopefully not weeks ;=().\n\nThen these new features will be in `master` thus expose them to more reviewers, testers...\n. Found what appears to be a bug! see #238 which may hold up the merge to `master`...\n. Eventually got around to fully merging the `issue-228` into `master` branch, from version 5.1.8 (2015.09.04) onward, and will at some stage delete the `issue-228` development branch...\n\nStill to update the `testbase` output to match, but that has nothing specifically to do with this **New Feature**, so will close this issue.\n\nLook forward to everybody heavily **testing** this feature, and the several other fixes included at the same time...\n\nTidy `master` appears very stable and maybe it is time to consider a 5.2.0 release, perhaps after a few months, especially since I only recently got around to actually making the 5.0.0 release...\n\nOn the other hand maybe 5.1.8 includes some important bug fixes which should be put out there soonest... so should not wait too long... although, as always, it is hoped some package managers will pick up on this `stable` master branch for distribution...\n. @emerick, hmmm, an interesting case... thanks for reporting...\n\nYes, internally Tidy! marks the `<object>` element as being allowed in `<head>`, and on being given no other clues as to what the user wants, chooses to put it in an `implied` head...\n\nOf course, normally an `<object>` element would be part of another block, like -\n\n```\n<p>See my video\n<object type=\"application/x-shockwave-flash\">\n<param name=movie value=\"http://example.com/watch.swf\">\n</object>\n</p>\n```\n\nin which case Tidy! would put it in the `<body`, since `<p>` is not allowed in the head... and `<object>` is a child of `<p>` so goes with it...\n\nSo, I do not feel this is a **bug** ;=))\n\nNow, if important enough, then yes we could added some additional option to tell Tidy! to use `<body>` in this `<object>` case...\n\nAnd a decision made whether this **new** option, when implemented, would effect other specific elements, like say -\n\n```\n<script>\nvar val = 0;\n</script>\n```\n\nwhich again, without other user clues, will be placed in the `<head>`...\n\nPersonally, I am not sure such a **new** option is warranted, given the **very** limited case, but will leave this open for a while for further comments... and marking this as a `feature` with an indefinite milestone...\n. @emerick, oops, sorry, the one W3C ref I consulted did not seem to mention not in head in html5... maybe you can give me some urls, refs? Just to confirm this...\n\nIf this **is** the case then the fix looks trivial ;=))\n\nWe already have several cases where Tidy! is internally setup to process html5++. But if it detects a previous doctype, will change some structures, values, flags to process the document as html4--.\n\nIn `void TY_(AdjustTags)( TidyDocImpl *doc )` we already adjust TidyTag_A - Issue #167 & #169, and TidyTag_CAPTION - Issue #196... so this would just be an addition...\n\nThe `TidyTag_OBJECT` line in `tag_defs` would have the `CM_HEAD` bit removed for the default html5++ mode, and then your html snippet should be placed in the implied body... \n\nBut if html4-- detected, then `or` this bit back into the table...\n\nYet to get around to testing this... maybe you will beat me to it ;=))\n. @emerick, This patch would allow you to test...\n\n```\ndiff --git a/src/tags.c b/src/tags.c\nindex 5470831..5e34ead 100644\n--- a/src/tags.c\n+++ b/src/tags.c\n@@ -160,8 +160,8 @@ static CheckAttribs CheckHTML;\n #define VERS_ELEM_WBR        (xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|HT50|XH50)\n\n /*\\ \n- * Issue #167 & #169\n- * Tody defaults to HTML5 mode\n+ * Issue #167 & #169 & #232\n+ * Tidy defaults to HTML5 mode\n  * but allow this table to be ADJUSTED if NOT HTML5\n  * was static const Dict tag_defs[] = \n \\*/\n@@ -232,7 +232,7 @@ static Dict tag_defs[] =\n   { TidyTag_META,       \"meta\",       VERS_ELEM_META,       &TY_(W3CAttrsFor_META)[0],       (CM_HEAD|CM_BLOCK|CM_EMPTY),                   TY_(ParseEmpty),    NULL           },\n   { TidyTag_NOFRAMES,   \"noframes\",   VERS_ELEM_NOFRAMES,   &TY_(W3CAttrsFor_NOFRAMES)[0],   (CM_BLOCK|CM_FRAMES),                          TY_(ParseNoFrames), NULL           },\n   { TidyTag_NOSCRIPT,   \"noscript\",   VERS_ELEM_NOSCRIPT,   &TY_(W3CAttrsFor_NOSCRIPT)[0],   (CM_HEAD|CM_BLOCK|CM_INLINE|CM_MIXED),         TY_(ParseBlock),    NULL           },\n-  { TidyTag_OBJECT,     \"object\",     VERS_ELEM_OBJECT,     &TY_(W3CAttrsFor_OBJECT)[0],     (CM_OBJECT|CM_HEAD|CM_IMG|CM_INLINE|CM_PARAM), TY_(ParseBlock),    NULL           },\n+  { TidyTag_OBJECT,     \"object\",     VERS_ELEM_OBJECT,     &TY_(W3CAttrsFor_OBJECT)[0],     (CM_OBJECT|CM_IMG|CM_INLINE|CM_PARAM),         TY_(ParseBlock),    NULL           },\n   { TidyTag_OL,         \"ol\",         VERS_ELEM_OL,         &TY_(W3CAttrsFor_OL)[0],         (CM_BLOCK),                                    TY_(ParseList),     NULL           },\n   { TidyTag_OPTGROUP,   \"optgroup\",   VERS_ELEM_OPTGROUP,   &TY_(W3CAttrsFor_OPTGROUP)[0],   (CM_FIELD|CM_OPT),                             TY_(ParseOptGroup), NULL           },\n   { TidyTag_OPTION,     \"option\",     VERS_ELEM_OPTION,     &TY_(W3CAttrsFor_OPTION)[0],     (CM_FIELD|CM_OPT),                             TY_(ParseText),     NULL           },\n@@ -762,6 +762,20 @@ void TY_(AdjustTags)( TidyDocImpl *doc )\n         tagsEmptyHash( doc, tags );\n #endif\n     }\n+\n+/*\\\n+ * Issue #232\n+ * TidyTag_OBJECT not in head in HTML5,\n+ * but still allowed in HTML4\n+\\*/\n+    np = (Dict *)TY_(LookupTagDef)( TidyTag_OBJECT );\n+    if (np)\n+    {\n+        np->model |= CM_HEAD; /* add back allowed in head */\n+#if ELEMENT_HASH_LOOKUP\n+        tagsEmptyHash( doc, tags );\n+#endif\n+    }\n }\n\n void TY_(FreeTags)( TidyDocImpl* doc )\n```\n\nLooks fine in initial tests...\n. @emerick, I am presently working in the issue-228 branch, which includes a new cool feature, see #231 and #228, so have added this 'fix' there. You can test it with -\n\n$ git checkout issue-228\n$ git pull  # if above done previously\n$ cd build/cmake\n$ cmake-clean # at least delete CMakeCache.txt\n$ cmake ../.. [options]\n$ make\n\nChecking the reference you gave, and using the 6 MetaData content give of `base link meta noscript script style template title` **Tidy!** does not yet include `template`!\n\nIt means adjusting the following template table line to include the CM_HEAD bit...\n\n```\n  { TidyTag_TEMPLATE,    \"template\",     VERS_ELEM_TEMPLATE,    &TY_(W3CAttrsFor_TEMPLATE)[0],    (CM_BLOCK),                    TY_(ParseBlock),     NULL           },\n```\n\nPerhaps this should be part of this fix also? Or perhaps **NOT**? Undecided on this, and comments welcome.\n\nAnd just out of interest found the CM_HEAD bit is in the following tags `\"nextid\", \"bgsound\", \"server\", \"command\"` in **Tidy!**. Have not yet figured out all the ramifications of this, and whether anything else should be changed. Again comments welcome.\n\nThere have been a few weeks of testing of this `issue-228` branch, and will shortly, maybe another week or so, be merging it all back into the development branch, `master`...\n\nMeantime appreciate any testing and feedback...\n. @emerick, just a small note to advise the `issue-228` branch has now been fully merged into the `master` branch, from version 5.1.8 (2015.09.04) onwards... and will at some stage delete the `issue-228` development branch...\n\nIt would be great if you get a chance to update to `master` and rebuild -\n\n```\n$ cd tidy-html5\n$ git checkout master\n$ git pull\n```\n\nI have re-tested this bug with 5.1.8 and it seems/remains fixed, so am closing this. Please feel free to re-open, or open another issue...\n\nI agree with the caution on the `template` tag, until someone specifically has a case and opens an issue, adding sample html, and adds W3C HTML5 support references...\n\nThanks for this little `tweak` ;=))\n. @airtonix thanks for reporting...\n\nI was not aware **Tidy!** promises to not break `the principle of least surprise`. To me it does some quite `surprising` things, pun intended ;=))\n\nBut in this case there is an option to prevent this, namely `--show-body-only yes` or `--show-body-only auto` and you will get back what you gave...\n\nNote this will not happen if the first element of fragment has the CM_HEAD bit set - see #232 for details...\n\nThis option defaults to `no`, and I do not think there would be general agreement to defaulting this to `yes` to avoid this fragment of `surprise`, since that would introduce many `surprises` to those presentling a full html file...\n\nAnd since **Tidy!** is a venrable app it does strongly tend to try to **not** `surpise` the long term users! That is do what it has always done, only better... maybe with new, more options...\n\nSo giving this fragment to **old** versions like `tidy04aug00 (2000)`, `tidy-2004`, `tidy-cvs (2009)`, ..., they **all** do the same wrapping of the fragment into full, viable html...\n\nErgo, this is one of those **tidy has always done this** `principles`! ;=))\n\nI do see arguments both ways, with maybe a new option like `--omit-implicit-elements`, or something... but tend to fall into the `do not change this` pool at present... \n\nWill leave it open for now for other comments, ideas...\n\nAgain, thanks for opening the topic...\n. @airtonix since there have been no further comments for over a month am closing this, but feel free to re-open or post another issue...\n. @Andrew-Dunn thank you for this PR...\n\nI am currently working in the issue-228 branch, so have merged your patch there...\n\nIt also works fine for my MSVC10 build...\n\nAs noted in the merge, in general **agree** with a header include order of -\n- [optional] Sometimes a local `\"version\"` or `\"config\"` file...\n- System includes `<headers>`\n- Local includes `\"headers\"`\n\nBumped version to 5.1.5 for your good PR...\n\nAm getting to the end of testing this `issue-228` branch, and will shortly merge back into `master`, and that will include your patch...\n\nThanks...\n. @Andrew-Dunn as mentioned have pulled this into the `issue-228` thus is in the code so closing this..\n. @skynet, yes, two header file names **have been changed** - See Major API change - #224, #223, #221\n\nCommit https://github.com/htacg/tidy-html5/commit/1e70fc6f15190a0ee497232daeb506241c6f9eba\n\nThis means in the PHP source, \"buffio.h\" needs to be changed to \"tidybuffio.h\" in the file ext/tidy/tidy.c, and anywhere else \"buffio.h\" is used...\n\nAnd if the tidy \"platform.h\" old header is included anywhere in the PHP source, it must be changed to \"tidyplatform.h\"...\n\nAnd all should be well compiling PHP ;=))\n\nIt is also a good idea to check `/usr/include` and `/usr/local/include` and **delete** any old instances of \"buffio.h\" and \"platform.h\", just to be sure...\n\nAnd this would be a `good time` to remind the PHP maintenance people that the API `tidyReleaseDate()` is **deprecated**, and they should use `tidyLibraryVersion()` instead... see lines 1105 and 1360 of that same ext/tidy/tidy.c file... and maybe else where...\n\nAlso note `--with-tidy=/usr/local` will **only** be the default Tidy 5.0.0 install location if you do not add the option `-DCMAKE_INSTALL_PREFIX=/usr` when building, installing Tidy! from source...\n\nFurther, if you want to install a `Release` version of Tidy! - that is one free of the **assert** macro - then you should also add the option `-DCMAKE_BUILD_TYPE=Release` when building and installing from source...\n\nHope this gets things ticking ;=))\n. @skynet, as I suggested above I was poking around looking for `old` tidy headers to delete, and just checked in /usr/lib!\n\n```\n$ cd /usr/lib\n$ ls -l *tidy*\n```\n\nAnd WOW, what a lot of **crud** I found ;=((\n\n```\nlrwxrwxrwx 1 root root     21 Jul 23 19:30 libtidy-0.99.so.0 -> libtidy-0.99.so.0.0.0\n-rw-r--r-- 1 root root 379384 Jul 23 19:30 libtidy-0.99.so.0.0.0\n-rw-r--r-- 1 root root 836298 Jun  9 13:04 libtidy5s.a\nlrwxrwxrwx 1 root root     13 Apr 15 17:11 libtidy5.so -> libtidy5.so.4\nlrwxrwxrwx 1 root root     18 Jun  9 13:05 libtidy5.so.4 -> libtidy5.so.4.9.35\n-rw-r--r-- 1 root root 649706 May 24 15:25 libtidy5.so.4.9.30\n-rw-r--r-- 1 root root 649706 Jun  3 20:32 libtidy5.so.4.9.31\n-rw-r--r-- 1 root root 649706 Jun  4 18:07 libtidy5.so.4.9.32\n-rw-r--r-- 1 root root 649706 Jun  6 13:16 libtidy5.so.4.9.33\n-rw-r--r-- 1 root root 649706 Jun  8 14:00 libtidy5.so.4.9.34\n-rw-r--r-- 1 root root 649706 Jun  9 13:04 libtidy5.so.4.9.35\n-rw-r--r-- 1 root root 545232 Jul 23 19:30 libtidy.a\n-rw-r--r-- 1 root root    950 Jul 23 19:30 libtidy.la\n-rw-r--r-- 1 root root 838296 Aug 15 11:10 libtidys.a\nlrwxrwxrwx 1 root root     12 Aug 15 11:11 libtidy.so -> libtidy.so.5\nlrwxrwxrwx 1 root root     18 Jun  9 13:07 libtidy.so.4 -> libtidy5.so.4.9.35\nlrwxrwxrwx 1 root root     16 Aug 15 11:11 libtidy.so.5 -> libtidy.so.5.1.5\n-rw-r--r-- 1 root root 649741 Jul  1 11:58 libtidy.so.5.0.0\n-rw-r--r-- 1 root root 649706 Jun 23 16:03 libtidy.so.5.0.1\n-rw-r--r-- 1 root root 649824 Jul 13 13:07 libtidy.so.5.1.1\n-rw-r--r-- 1 root root 649954 Aug 15 11:10 libtidy.so.5.1.5\n```\n\nI pruned that down to just four(4) -\n\n```\n-rw-r--r-- 1 root root 838296 Aug 15 11:10 libtidys.a\nlrwxrwxrwx 1 root root     12 Aug 15 11:11 libtidy.so -> libtidy.so.5\nlrwxrwxrwx 1 root root     16 Aug 15 11:11 libtidy.so.5 -> libtidy.so.5.1.5\n-rw-r--r-- 1 root root 649954 Aug 15 11:10 libtidy.so.5.1.5\n```\n\nThis is actually the version built by the current `issue-228` branch...\n\n```\n$ tidy -v\nHTML Tidy for Linux version 5.1.5.D231\n```\n\nWhat would be great if an `install` cleaned up the `old` libraries, but I do not know how to do that!\n\nAny ideas welcome...\n. @skynet I have no problem with this, so why not merge it?\n\nIn general additional information to help users with integrating `libtidy` with other specific packages is very welcome...\n\nIf the number of different packages grows large we may want to consider adding say a specific package readme, like `README.<package>.md` for each...\n\nBut this is an **important** header file name change, and certainly `deserves` to be noted in the main general readme...\n. @mperham have you tried the option `--drop-empty-elements no`?\n\nSeems this will do what you want?\n\nAnd maybe `--drop-empty-paras no` if you want to also keep empty `<p>` elements...\n\nAlso, if like the sample shown, it is just a html snippet, then you may want to add `--show-body-only yes`...\n\nAnd just a reminder, `-help-config` will output the considerable list of Tidy! options, and `-show-config` will list the current defaults...\n\nIf installed in a unix/linux system then `$ man tidy` should bring up manual page tidy(1) with option descriptions...\n\nAnd the same thing can be seen on - http://www.html-tidy.org/quickref.html -\n\nI guess Tidy! would prefer to call it `fixing`, rather than `mangling` the document!\n\nBut it is agreed it takes some time to get with the some 94 **diverse** options of Tidy! ;=))\n. Found a fix, but not entirely happy with it... it works but...\n\n```\ndiff --git a/src/pprint.c b/src/pprint.c\nindex 4b4593d..e8f4523 100644\n--- a/src/pprint.c\n+++ b/src/pprint.c\n@@ -1939,7 +1939,22 @@ void PPrintScriptStyle( TidyDocImpl* doc, uint mode, uint indent, Node *node )\n\n     PPrintTag( doc, mode, indent, node );\n\n-    TY_(PFlushLineSmart)(doc, indent);\n+    if ( !xhtmlOut && ( node->content != NULL ) && (node->content->type == TextNode) && doc->lexer && doc->lexer->lexbuf )\n+    {\n+        /*\\ \n+         * Issue #238 - First cut, but seems too 'messy' - need elegence!\n+         * avoid adding a newline if the script text data begins with a newline \n+        \\*/\n+        uint start = node->content->start;\n+        if (doc->lexer->lexbuf[start] != '\\n')\n+        {\n+            TY_(PFlushLineSmart)(doc, indent);\n+        }\n+    }\n+    else \n+    {\n+        TY_(PFlushLineSmart)(doc, indent);\n+    }\n\n     if ( xhtmlOut && node->content != NULL )\n     {\n```\n\nAnyway, the idea here is simple -\n- we are in a service PPrintScriptStyle(...), so\n- if the first text node text starts with a newline\n\navoid the PFlushLineSmart, which will 'add' another newline, unless `--vertical-space auto` - the macro `if (TidyAddVS)` tests this...\n\nAnd to make sure we all agree on the `exact` meanings, we have -\n- `--vertical-space no` is the default, and means normal vertical space.\n- `--vertical-space yes` means classic - ie adds more vertical space - and \n- `--vertical-space auto` means almost **NO** vertical space in output...\n\nBut here it seems we **MUST NOT** add another newline, else we get the creeping newline syndrome ;=))\n\nStill looking deeper, like why this newline is in the lexer. Suspect it was not there previously... \n\nNormally leading spaces are either not collected, or trimmed off later... But there have been some changes in this code path... have the feeling less are trimmed... ???\n. On exploring **why** this newline is in the lexer, as suspected, a previous fix for Issue #230 has **removed** the eating of a newline after a start tag, with the code fix :-\n\n```\n    /*\\\n     * Issue #230: Need to KEEP this user newline character in certain \n     * circumstances, certainly for <pre>, <script>, <style>...\n     * Any others?\n    \\*/\n    if ( nodeIsPRE(lexer->token) || nodeIsSCRIPT(lexer->token) || nodeIsSTYLE(lexer->token))\n    {\n        mode = Preformatted;\n    }\n```\n\nWe can see `pre`, `script`, and `style` are **excepted** from this process, which leaves the newline in the file data to be collected with the following `text`, thus gets into the lexer buffer... thus we get two on output... urgo the creeping newline...\n\nWell except for the `<pre>` which now deliberately avoids adding an uncondtional newline after the tag output... see @bobbens @camoy Fix #158 which has no `PFlushLineSmart` after the PPrintTag( pre or textarea )...\n\nWe certainly want that for the `<pre>` so we can respect and keep any user newline in the text data, or not, as the case may be... but maybe that is not so true for `<script>`, or `<style>`???\n\nAnd in that #230 discussion, initially only excepted `<pre>`, but was persuaded to add the other two for the `test-newline-eaten.html` test sample given...\n\nSooo, reverting my pprint.c (too messy!) patch, and returning to just excepting the `<pre>` tag with the simple fix...\n\n```\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 07b5274..5d5d0fa 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -2628,8 +2628,9 @@ static Node* GetTokenFromStream( TidyDocImpl* doc, GetTokenMode mode )\n                  * Issue #230: Need to KEEP this user newline character in certain \n                  * circumstances, certainly for <pre>, <script>, <style>...\n                  * Any others?\n+                 * Issue #238: maybe **ONLY** for <pre>\n                 \\*/\n-                if ( nodeIsPRE(lexer->token) || nodeIsSCRIPT(lexer->token) || nodeIsSTYLE(lexer->token))\n+                if ( nodeIsPRE(lexer->token) )\n                 {\n                     mode = Preformatted;\n                 }\n```\n\nAlso seems to **fix** the problem ;=))\n\nI certainly prefer this patch than the messy one in `pprint.c`... That is it seems best avoid creating the problem in the first place that would need a bigger fix later in the pprint output...\n\nAnd running the new exe on the #230 `test-newline-eaten.html`, I seem to get as I expect, desire...\n\nOuput: with `--vertical-space no|yes`\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.1.6.D231\">\n<title></title>\n</head>\n<body>\n<pre>\nStarts with newline</pre>\n<style>\nStarts with newline\n\n\nStarts with newline\n\n\n\n```\n\nNote the default `no`, and a `yes` are the same! That is there are no additional newlines for `classic` mode in this sample...\n\nOutput: `--vertical-space auto' **the new feature**\n\n```\nhtml\nStarts with newlineStarts with newlineStarts with newline\n```\n\nNote the **only** newline for `auto` is the one the user put in the ``... well except the attribute wrap which I could turn off... or by adding `--wrap 0`...\n\nWill reflect on this a little, and appreciate any comments and testing, but this looks like **the way forward** for this `issue-228` branch ;=))\n. Have now pushed this fix to the `issue-228` branch, and bumped the version...\n. Further testing with version 5.1.7.D231 indicates this is solved... so am closing this...\n\nAgain time to consider merging this `issue-238` branch back into `master` as mentioned in #231 \n. @Justin-Maxwell thanks for checking and reporting...\n\nI do not know `sublimelinter` except what I just read on the web here and there... and now some donwloaded bits... did not insstall it...\n\nI was pleased to see that it seems to use a separately installed version of Tidy!, but the [plugin](https://github.com/SublimeLinter/SublimeLinter-html-tidy) README.md has some quite `old` links... and seems to first search for `tidy5`, then `tidy` executables... which is ok I guess...\n\n#### History\n\nIn brief when we, [HTACG](http://www.htacg.org/), revived the development of Tidy! we asked to also take over the sourceforege site and repo, to update them, but todate this has not happened. Sorry about that!\n\nFor now we have :-\n- site: http://www.html-tidy.org/\n- source: https://github.com/htacg/tidy-html5\n- binaries: http://www.htacg.org/binaries/\n- bugs: https://github.com/htacg/tidy-html5/issues\n- list: https://lists.w3.org/Archives/Public/html-tidy/\n- api: http://www.htacg.org/tidy-html5/tidylib_api/\n- quickref: http://www.htacg.org/tidy-html5/quickref.html\n\nAnd of course urging `system` maitainers to add the current HTML Tidy! 5.0.0 as an auto-install, or at least a package installer...\n\n#### But back to your report...\n\n> &apos wasn't technically valid in HTML4 but is AFAICT under HTML5.  \n\nI searched around, but could not find a specific W3C reference that definitively stated an `&apos` entity is ok under html5... Do you know some? Can you give me some pointers?\n\nIf it **is** allowed then the fix is one line... modern Tidy! has sort of two modes. It defaults, starts in,  HTML5++ mode, and only if it finds a doctype of an earlier version, it switches back to HTML4-- mode.\n\nThis patch would suppress that warning if still in HTML5++ mode...\n\n```\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 07b5274..d4fa9e1 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -983,7 +983,8 @@ static void ParseEntity( TidyDocImpl* doc, GetTokenMode mode )\n     if ( TY_(tmbstrcmp)(lexer->lexbuf+start, \"&apos\") == 0\n          && !cfgBool(doc, TidyXmlOut)\n          && !lexer->isvoyager\n-         && !cfgBool(doc, TidyXhtmlOut) )\n+         && !cfgBool(doc, TidyXhtmlOut)\n+         && !(TY_(HTMLVersion)(doc) == HT50) ) /* Issue #239 - no warning if in HTML5++ mode */\n         TY_(ReportEntityError)( doc, APOS_UNDEFINED, lexer->lexbuf+start, 39 );\n\n     if (( mode == OtherNamespace ) && ( c == ';' ))\n```\n\nIf you, or others could verify the W3C references, then this could be added...\n\nInitially, it may be added to the `issue-228` branch, which will in due course be merged with `master`... and thus be in the next release... and maybe pushed back into 5.0.0?\n. @Justin-Maxwell thanks for the references...\n\nHave pushed this fix to the `issue-228` branch, and bumped the version...\n\nTo try this version -\n\n```\n$ cd tidy-html5\n$ git pull # just to make sure it is up-to-date\n$ git checkout issue-228\n$ git pull # if this is not your first checkout of this branch\n$ cd build/cmake\n$ cmake ../..\n$ make\n$ ./tidy -v\n```\n\nIf you get a chance to confirm all is now ok, maybe you could close this issue...\n\nWith the fix in the `issue-228` branch, it will eventually be merged to `master`...\n. @nkmathew I seem unable to repeat this problem! ;=((\n\nI used a config file as above, **except** removed the last tidy-mark:no option so I could **see** the version...\n\nCommand: `> ...\\test>tidy-5.0.0 -config input5\\cfg_240.html input5\\in_240.html`\n\nOutput:\n\n```\nhtml\n\n  \n    \n    \n      Testing tidy-html5\n    \n  \n  \n    \n      Hello World\n    \n  \n\n```\n\nI get these **same** results with the current `master`, and the later `issue-228` branches of the repo, except for the versions being `5.1.2` and `5.1.6.D231` respecively...\n\nNow, if I use an **OLD** cvs version of tidy, namely one built from the now **old-out-of-date** sorceforge cvs repo, I do get something similar to what you show...\n\n```\n...\\test>tidy-cvs -config input5\\cfg_240.html input5\\in_240.html\nConfig: missing or malformed argument for option: doctype\nhtml PUBLIC \"-//W3C//DTD HTML 3.2//EN\"\n\n  \n    \n    \n      Testing tidy-html5\n    \n  \n  \n    \n      Hello World\n    \n  \n\n```\n\nYou need to check your `PATH` environment variable! Or maybe a `TIDY` environment variable...\n\nIt really seems like you are using a truly ancient version of tidy ;=)) `>tidy -v` should reveal what it is...\n. @nkmathew glad you have updated to a later Tidy! version...\n\nConcerning SciTE, maybe you could somehow advise `Neil` that the latest version of Tidy! is **here** ;=))\n\nI do not know much about Scintilla/SciTE but in checking out some web pages I note they all still seem to refer to the now very **outdated** tidy sourceforge sites...\n\nWe have tried very hard to get in touch with the tidy sourceforge site maintainers, and offered to assist in updating that sf site to the latest code here, but have not had much luck so far...\n\nSo we will have to put up with the type of problem you encountered for some time yet...\n. @nkmathew thank you for the SciTE `Troy` installer information...\n\nJust out of interest, if a Tidy binary **is** included with the SciTE 3.6.0 installer, what **version** of tidy is it?\n\nAs you may have noted, I just recently merge the `issue-228` branch into the `master` branch and bumped the version to 5.1.8 (2015.09.04), with a new option `--vertical-space auto`, but it also contains quite a number of other bug fixes...\n\nProbably, if you can compile tidy from the git source, you could update the tidy binary in the SciTE installation, and thus benefit from using the **latest and best** ;=))\n\nOver time I will also try to get around to adding a final tidy 5.0.0, and a tidy 5.1.8, to  http://www.htacg.org/binaries/ ... \n\nSince the tidy binary consists of just one executable file it should be very easy to update it in any other project install... Of course if they installed in the usual `Program Files` directory in Windows you may need to run as administrator to do the copying and over-writing...\n. @nkmathew again thank you for the information...\n\nYes, it does look like he got the exe/dll from the binary site, which is good to know...\n\nTidy version 4.9.35 is certainly quite recent... circa Jun 9 2015... is quite stable, and contains some good featues and bug fixes...\n\nI have now added **both** a final tidy 5.0.0, and a tidy 5.1.8, releases to http://www.htacg.org/binaries/ ... so assume he would pick these, or a later version, on the next SciTE release cycle...\n\nWith the tidy version `5.+.+` release the name reverted to just `tidy.exe`, dropping the `5`, and the exe is linked with the **static** version of library tidy, so the DLL would not be needed...\n\nAs stated you could probably update your current SciTE installation just by downloading the tidy-5.1.8-win32.zip, extract the files somewhere, and copy the tidy.exe to the SciTE install, renaming it to tidy5.exe...\n\nHmmmm, I just tried to install firsts scite-3.6.0.msi and then scite-3.6.0x64.msi, and found **both** still contains `tidy.exe` 32-bit... Maybe I can understand the 32-bit, since have not been able to find a windows 64-bit scintilla/SciTE download... and have nearly done this from source... But this `tidy.exe` is still the **OLD 2009** version!!!\n\nAlso I found these `msi` installers contained no `*.properties` files, so I get no color coding for each language! The manual install of `wscite360.zip`, I downloaded from http://www.scintilla.org/SciTEDownload.html, that I did earlier, contained some 79 `properties` from `abaqus - yaml`... and includes `html`, `perl`, ... which I use now and then...\n\n#### What did you download? Install? From where?\n\nSorry to add more questions, but I would like to understand how you got `tidy5.exe`, v4.9.35?\n\nOn a separate note, have you tried [Notepad++](https://notepad-plus-plus.org/)? Like SciTE, it also uses the `scintilla` library... is fast, efficient, and includes the ability to run a tidy exe... and **lots** of other great features...\n. @mbmasuda I think the answer lies in your last comment...\n\n> I don't know what the difference is between running Tidy from my Ruby script and running it directly in the shell so I am stuck.\n\nWell one would expect `no` difference! Maybe they find different versions of tidy? Ruby may install its own? Need to check what the script output of `%x(tidy -v)` is, versus `$ tidy -v`. But even different versions does not seem to be the answer...\n\nAre we talking about the exact **same** file set? \n\nThat is, is the script `#{File.join(dir, \"*.html\")}` producing the **same** set of files as `$ ls *.html`? Obviously using the same runtime directory???\n\nHmmm, there is a little `trick` to **show** the file name in case of `warnings` or `errors` and that is add the option `--gnu-emacs yes` to the command...\n\nThis will cause `warnings` like you show -\n\n```\n    line 1 column 1 - Warning: inserting missing 'title' element\n```\n\nto be ouput as -\n\n```\n.html:1:1: Warning: inserting missing 'title' element\n```\n\nso you can see the file names... then you can run tidy from the shell on that **same** file... \n\nUnfortunately there is no way to get tidy to output the file name if there are no `warnings` or `errors`... Maybe someone could `add` this feature to tidy ;=))\n\nNeedles to say, tidy version 5.1.2 does **NOT** issue a `warning` for a `blank` title element. And will in fact insert such a `blank` title element if none is found...\n\nIn the cases where this warning is issued you need to check and **see** that the file must not have a title element... This would be a **bug** if you could show me **one** instance where this is not true.\n\nSo on Rudy, just do not know, but hope there are some ideas, clues in the above...\n. @mbmasuda you are certainly having some **ruby-pandoc-tidy** fun ;=))\n\nOk, you seem to have proved there is no difference between runnig Tidy! from the shell, or from within a ruby script... as expected... and you say you have checked it is the same file set... soooo...\n\nFirst I do **NOT** know `pandoc` very well... I just installed it in my Ubuntu 14-04 system for a trial...\n\nI created a simple 1.md -\n\n```\n# heading\n\npara 1\n```\n\nAnd ran `$ pandoc -f markdown -t html5 -o 1.html 1.md`, and the default html I get **has no title**! It is just 2 lines -\n\n```\nheading\npara 1\n```\n\nSooo, then when I run `$ tidy -m -i -w 0 -utf8 --gnu-emacs yes 1.html`, I get what I expect. 3 warnings about no doctype, no body, **and** a warning about no heading...\n\nBut, **take care here**, thanks to the `-m` option, now 1.html is converted to -\n\n```\nhtml\n\n\n  \n  \n\n\n  heading\n  para 1\n\n\n```\n\nNote a `blank` title element has been added by Tidy. And of course if I run Tidy! again I will now **not** get any warnings... simple before and after...\n\nNow I note there is a `pandoc` option `-T title`, and maybe other options, and when I add this I do get `full` html, with all sorts of **strange** things added! But the important change is it does now have a **title** ;=))!\n\n```\nhtml\n\n\n  \n  \n  \n  title - \n  code{white-space: pre;}\n  [if lt IE 9]>\n    <script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script>\n  <![endif]\n\n\nheading\npara 1\n\n\n```\n\nAnd running `tidy` on this source has no warnings or errors, as expected...\n\nSo it seems all is fine with Tidy! ;=)) \n\nOne should be quite **careful** when using the `-m` (modify the original input files) option. Naturally you can expect a difference between when Tidy! is first run on the source, and then further runs on the now `tidied`, changed source...\n\nYou will note here I am using the very latest Tidy!, version 5.1.6.D231, from the `issue-228` branch, but in this sample should be the same for the version 5.1.2 you show from the `master` branch...\n\nAnd you should carefully check your `pandoc` options used... it seems the -H and -B also allow you to `include` other files in the html header... etc, etc, ...\n\nAfter you run `$ ruby pandoc.rb ~/path html`, you should **physically** check the contents of **more than one** `~/path/number/???.html` file does contain a title element **BEFORE** you run Tidy!\n\nTidy is clearly telling you it does not! But it will be there **after** you run Tidy! with the `-m` option...\n\nIn your very first head example, you **do** show a blank ``, which first is quite different to what I got, namely `title - `, but maybe your `pandoc` options used allows it to omit the title element in certain specific source md situations... Seems the only answer...\n\nYou showed options of `pandoc -t html5 -s --no-highlight --no-wrap MY_MARKDOWN.md -o MY_HTML.html` and using that I do get a `blank` title, I think due to the `-s`, but as suggested above, maybe the md source content influences whether this is added or not???\n\nA question for the pandoc list/forum/...\n\nI am sure when tidy reports missing 'title', there is **none** in that source file. You have to work out exactly what caused this to happen... as stated this seems to be the **only** explanation at this time...\n\nI hope this helps clear things up for you...\n. @mbmasuda one little thing... you can reduce the output by adding the options `--show-info no`... just reduces the clutter of repeated information...\n\n#### But we are still in the same place ;=((\n\nHow can `$ ruby pandoc-to-hippo.rb ...` produce a different output from tidy than running `$ tidy -m -i -w 0 -utf8 ~/.../tidy-example.html`?\n\nMaybe offer a virtual prize to someone that spots the problem, the difference ;=))\n\nOther than that??? Keep at it! There must be a difference we are not yet seeing...\n\nAgain, I would state tidy will **not** issue a warning if it finds a title element in the document...\n. @mbmasuda have you solved this yet?\n\nBut since there does not seem to be a problem with the actual Tidy code, am closing this, but feel free to re-open or open another issue...\n. @b4hand agree... good catch, and thanks...\n\nCould I ask you do one more thing before I merge this PR, and that is to change the header name from `` to the new correct name `` in the first example as it has already been done in the 2nd...\n\nOf course there is the question why we have this example file twice, and several other files... I think we intended to drop the `build/documentation` folder in favor of the `documentation` folder, or something... \n\nBut I note that the `build/documentation/README.md` has lots more information than its counterpart, so some information should be moved before such a deletion... \n\nAnd the CMakeLists.txt still refers to `build/documentation/tidy1.xsl` which is slightly different to its counterpart... will check these later...\n\nIf you could just add that header name change will merge the results... thanks...\n. @b4hand now merged into master, and thanks...\n. @dmit25 thanks for your interest in tidy and a suggested extension and 'fixes'...\n\nIt seems there are several different parts of your patch... trying to divide it up...\n1. addition of three elements, index, noindex, author\n2. add CM_BLOCK to table of the iframe element\n3. deal with `` and `![cdata...`\n4. deal with a incorrect `<?` tag\n\n#### 1. Adding new elements\n\nThis question is addressed by the relatively new add custom tags options...\n\n```\nnew-blocklevel-tags         Tag names                                         \nnew-empty-tags              Tag names                                         \nnew-inline-tags             Tag names                                         \nnew-pre-tags                Tag names                                         \n```\n\nSee http://www.htacg.org/tidy-html5/quickref.html#new-blocklevel-tags\n\nWhile this will not remove the `warning` it does remove the `error`, thus the file gets written without using `--force-output yes`...\n\nAnd such new tag lists can be added to your common tidy config file to make them semi-permanent each and any time you run tidy...\n\nNow whether we **should** support certain tags just because `they are frequently used by some hand-broken programmers` is a separate question. \n\nOn these three, I do not really know their use frequency, but I think I would vote `no` to including them in tidy's internal table, which, in effect, should conform to the W3C tags lists... \n\nBut am open to ideas, and comments of others... \n\n#### 2. Adding `block` to 'iframe'\n\nThis may be the case, but I would like to see some samples of what this change actually fixes.\n\nIf there is a **bug** here then this should be separated to its own issue, with the sample code... and not bundled in here...\n\n#### 3. Deal with misformed end tags\n\nHmmm, just reading the code you changed a single next byte read to a `while()`, and if it matches your criteria - is white or '!' - you decrease the lexer size by `-= 2;`, each time, which may be correct...\n\nAgain I need to construct some sample code with the shown faults, and test it further...\n\nMaybe you could add any samples you have... please just the essence to show the problems rather than a cut-and-paste from a document...\n\n#### 4. Deal with incorrect tag ` `\n\nHmmm, it is always difficult just `reading` code, but it seems you are reading another character from the stream after the ``, and if it is a ``, decrease lexer size by 4?. 4! Maybe that is correct, but again would need to setup a sample, and test...\n\nBut if it is not a `>` you do not seem to unget this character, so it would be lost... Again would need to test with some samples to determine exactly what will happen...\n\n### This Pull Request\n\nWell, does the ability to add `new` tags through a config option solve the first problem? Can these addtitional tags be removed from the PR?\n\nAnd you can see while the others may be legitimate issues, they should be separated into individual issues and dealt with separately... separate testing... discussion...\n\nThis keeps the git history separate making it possible, for example, to revert just one at any time, rather than a whole block...\n\nSo as stated, thanks for your work on Tidy!, that is always good, but at this stage can only reject this as a single PR...\n\nConcerning a `project test system` there is something in the `test` directory, but most of this was accumulated long ago... it still needs some work to try to make it some sort of `unit test`... a WIP...\n\nAnd good to hear you have no problem using MSVC 14 to compile Tidy! The README.md does mention that is is also possible to use the MSVC IDE load of the solution file for building, while only showing the command line use...\n. @dmit25 just a rough sample input using the 3 tags... but not sure how to eactly use them since they are `undocumented` elements...\n\n```\nF:\\Projects\\tidy-html5\\test>type input5\\in_243-1.html\nhtml\n\n\n\nTest 1 - Issue #243\n\n\nSmith\nindex\nnoindex\n\n\n```\n\nOutput:\n\n```\nF:\\Projects\\tidy-html5\\test>C:\\MDOS\\tidy-issue-228.exe --tidy-mark no --show-info no --new-blocklevel-tags \"author,index,noindex\" input5\\in_243-1.html\nline 8 column 1 - Warning:  is not approved by W3C\nline 9 column 1 - Warning:  is not approved by W3C\nline 10 column 1 - Warning:  is not approved by W3C\n3 warnings, 0 errors were found!\n\nInfo: Document content looks like HTML5\nhtml\n\n\n\nTest 1 - Issue #243\n\n\nSmith\nindex\nnoindex\n\n\n```\n\nThe `errors` are reduced to an `appropriate` set of warnings...\n\nAnd using the `--show-warnings no` option, this can be reduced to 1 line -\n\n```\n3 warnings, 0 errors were found! Not all warnings/errors were shown.\n```\n\nThis of course is using the very latest in the `issue-228` branch, namely `HTML Tidy for Windows version 5.1.7.D231`... but this new tags support is unchanged for quite some time now, well before 5.0.0.RC1...\n. @b4hand thanks for this PR, but we have discussed this before, I think in #59, and maybe others, but it was eventually **not** done!!!\n\nAs mentioned back then, from my perspective this change is not good. It is still possible to do a big diff between earlier versions of tidy, and the current, and get a meaningful diff showing the important additions, subtraction without the massive clutter of just pure space changes...\n\nYes, I know diff has a `-w` switch to suppress some space different but then you also lose intentional space changes; Unfortunately `$ git diff` does not seem to support this option; Then there is a great WinMerge GUI, which I often use to compare files, and my own file comapare [FC4](https://github.com/geoffmcl/FA4) and directory compare (DC4W) utilities... each dealing with pure space change in different ways...\n\nSo I certainly prefer we do **not** do such a clean up!!!\n\nAnd I just do not see much gain... I quickly re-ran my tab and trailing space [chktabs.pl](https://github.com/geoffmcl/scripts) script and it seems little has changed since the #59 summary... Processed 58 files, 58473 lines, appx 2998185 bytes...\n\nI added a check for leading and trailing newlines in the source files, and only found a few...\n\nIn general I think tidy code is already quite clean ;=))\n\nAnyway, thanks for thinking of tidy... there are some open issues you could work on...\n\nWill leave this open for a while, in case others have a strong argument one way or the other...\n. Since no further comments for a few weeks, am closing...\n\nAlso the fork would need to rebase to master, since there are now conflicts that need to be resolved...\n. @skynet wow, you find some interesting things...\n\nI downloaded and built it from source to give it a try... called it `unc` rather than having to type in `uncrustify` all the time ;=))\n\nZUTE! And I thought our Tidy! was **heavy** with so many `options` until I read, from `$ unc -?` -\n\n```\nThere are currently 502 options and minimal documentation.\n```\n\nAnd similar to Tidy! has a `--show-config` which lists them all, with a brief description...\n\nI guess you could merrily spend weeks, months, or more!, getting the `configuration` you like... Thankfully, like Tidy! it can all be kept in a configuration file...\n\nI saw some `interesting` options, like one I was faced with recently, remove a BOM...\n\n```\n# Control what to do with the UTF-8 BOM (recommend 'remove')\nutf8_bom                                 = ignore   # ignore/add/remove/force\n```\n\nBut there are just so many options ;=()\n\nHmmm, while I think it seems an interesting tool for some projects, I do not think it is needed for Tidy!\n\nFirst do not like the idea of **impose** a style! For a start who is to choose that style? By votes? How? \n\nSome things would probably be simple to more or less agree, like 4-space indenting, and no tabs, no C++ commenting `\\\\`, opening `{` takes a new line, etc... but I can see personal preferences and differences getting in the way of others being universally agreed...\n\nAnd if I understand a `git-hook` correctly I really do not like the idea that after I push a change, a `git-hook` can alter that file, make indent changes, and my local repo would be immediately behind... That would not feel good ;=((\n\nAnd besides, Tidy! source already has a style, unfortunatley only really documented by reading the source, but in general people do tend to follow this `style`...\n\nI guess one of the first things would be to try and **document** the Tidy! `style` ;=))\n\nAs a consequence of this exploration found [UniversalIndentGUI](http://universalindent.sourceforge.net/) which lists `HTML Tidy` as a supported feature, unfortunatley with the **old** sourceforge URL, as well as this `uncrustify`...\n\nHaving some difficulty compiling this GUI from source until I get around to building [QScintilla](https://riverbankcomputing.com/software/qscintilla/intro) first... a dependency...\n\nAnyway, just a personal comment on this... maybe there are others with a different ideas...\n. @skynet certainly agree with `keeping the code clean` is important...\n\nHave started a CODESTYLE.md file, in the repo, with some initial ideas... Maybe you, or others, have things to add to this... to make it a full and complete `Tidy Style` document...\n\nA little off topic, but also have got very interested in the [scintilla](http://www.scintilla.org/) library, and an editor, `SciTE` that uses it... \n\nSome of the first real fun coding I did (in Intel 8086 asm) was on what I called `the world's fastest IBM PC editor`!, so have always liked playing with `editors`... which, in a way, is what Tidy! is... So thanks for opening this box of butterflies ;=))\n. @skynet good idea!\n\nAdded a [CONTIBUTING.md](https://github.com/htacg/tidy-html5/blob/master/CONTRIBUTING.md), and a link to it from README.md...\n. @skynet while `Code Style` is a **forever** open topic, will close this for now...\n. @BMOv2600 thank you for reporting...\n\nI **thought** I had fixed this! \n\nSee issue #213... but as you can see I do not exactly understand `yaml` **voodoo** ;=))\n\nThat is the link given on the http://www.htacg.org/tidy-html5/documentation/ page... That seem to be still working...\n\nOr have you found **another** that need fixing?\n\nThe `Tidy Documentation` link you gave only seems to point to http://google.com???\n\nThe `correct` link for the quick ref is http://www.htacg.org/tidy-html5/quickref.html\n\nMaybe you could checkout the gh-pages branch -\n\n```\n$ cd tidy-html5\n$ git checkout gh-pages\n```\n\nand find the link in the `documentation/_posts/*.md` docs that needs to be fixed...\n. @BMOv2600 thanks for checking and confirming the link now correct...\n\nWill close this, but feel free to re-open, or post other issues...\n. Hi @bizharvest, thanks for reporting, but I can not seem to find a problem with the `--drop-empty-elements false` option. It seems to work for me...\n\nInput: file input5\\in_247.html\n\n```\nEmpty  italics\n```\n\nConfig: file input5\\cfg_247.txt\n\n```\ndrop-empty-elements: false\nshow-info: false\nshow-body-only: true\n```\n\nVersion: from `tidy -v`, from the current `master` branch -\n\n```\nHTML Tidy for Windows version 5.1.2\n```\n\nOutput: as expected, using `...\\test> tidy -config input5\\cfg_247.txt input5\\in_247.html`, namely -\n\n```\nNo warnings or errors were found.\n\nInfo: Document content looks like HTML5\nEmpty  italics\n```\n\nGot the same results from the version `5.0.0.RC1`, in the `release/5.0.0` branch, and the latest `5.1.7.D231`, from the `issue-228` branch...\n\nOf course it will **not** work with the sourceforge cvs source, version `HTML Tidy for Windows released on 25 March 2009`, since it does **not** support this `drop-empty-elements` option...\n\nWhat **version** of Tidy! are you using? Where did you get it? Or what source, and branch, if you compiled from source...\n\nIf there is still a problem for you, then please provide a small input sample, the config used, the output, and if different to output, the expected output...\n\nHope this helps...\n. Hi Denis,\n\nThanks for replying. I am adding your emails here. It is better done here rather than direct emails to me, so that others can see them, and comment...\n\nOn 09/09/15 00:31, Denis Denisov wrote:\n- https://coderwall.com/p/vemncg/what-is-the-difference-rest-docutils-sphinx-readthedocs\n\nI recommend to look at Readthedocs.org\n\nSimilar: http://pythonhosted.org/.\n\nreadthedocs, aka rtfd / rtd / readthedocs.org is a website for serving\ndocumentation for software projects.\n\nIt builds and hosts sphinx documentation projects.\n\nEach software project's documentation may have it's own .rst files,\nsphinx extensions and sphinx theme.\n\nSincerely,\nDenis Denisov\n\nAnd then added -\n\nhttp://breathe.readthedocs.org/en/latest/\n\nBut I was **not** really looking for an `alternate` documentation generation system, but someone interested in taking over the task of document generation and pushing it to the site...\n\nNaturally that person, or persons, could choose other than the xsltproc/doxygen tool chain presently used... that could be discussed and agreed...\n\nThe important thing is to generate the API docs for each version, like -\n\n```\n4.9.35\n5.0.0\n5.1.9\n... and so on ...\n```\n\nMaybe this could be setup on one of the public CI (continuous integration) servers, like as @pedromorgan once suggested #173, #175, and @daaain $16, ... using https://travis-ci.org/ or http://jenkins.freeflightsim.org/, or where-ever... \n\nPete, are you still interested in this? We want it now ;=))\n\n##### So again, anyone out there interested in helping with this API document generation side of the project?\n. @pedromorgan thanks for the comment on `readthedocs`... it seems ok with me that we stick to doxygen... which is already setup...\n\nIf the version feature changes were as simple as just two ideas - (a) introduced in v.x.y and (b) deprecated in v.y.z - then maybe it **could** all be covered in terms... could still try that...\n\nAnd yes, http://tidy5docs-htacg.rhcloud.com/ looks good. I note it is presently 4.9.20... How can I `download` those site files? I do not see any login, admin, etc... but maybe I have forgotten...\n\nAnd then how do I go about updating that to say the [5.0.0 release](https://github.com/htacg/tidy-html5/releases/tag/5.0.0)? And again getting all the site files...\n\nThis seems like a good start ;=))\n. @pedromorgan, well my opeshift.com email is the usual ubuntu _at_ geoffair _dot_ info I think...\n\nRe: updating to 5.0.0\n\nThis sounds good, but you did **not** answer `how do I download the site pages`?\n\nMy idea at this time is the have `that` site always with the **latest**... Maybe triggered when the version.txt is updated... but for now just up to 5.0.0...\n\nBut for the http://www.html-tidy.org/tidylib_api/ I am still thinking of the sub-directory versioning mentioned above... so it is **important** I collect the 5.0.0 page **before** it is updated to the next version, probably 5.1.9...\n\nRunning out of time tonight, but two options spring to mind - `vertical-space` went from Bool to AutoBool with the new `auto`, and `indent-with-tabs` new to 5.1, not in 5.0 - IIRC ;=))\n. @balthisar absolutely! [api.html-tidy.org](http://api.html-tidy.org) looks great... thanks...\n. @sria91 thanks for looking at this... a bit `sneaky` of MS for changing this structure, but...\n\nBut using a structure member name was very **sloppy** coding on my part!\n\nIn general the `FILE` structure should be considered opaque, and one should **not** relie on specific member names, which could changes, as it seems MS has done with stdio.h that comes with VS2015 (_MSC_VER == 1900)... changing the `struct _iobuf`...\n\nCan you try the following patch which uses the `_fileno()` function. This patch works for my VS2010... and should be good for **all** MSVC versions...\n\n```\ndiff --git a/src/fileio.c b/src/fileio.c\nindex a1c14c9..f2e11e7 100644\n--- a/src/fileio.c\n+++ b/src/fileio.c\n@@ -86,7 +86,7 @@ void TIDY_CALL TY_(filesink_putByte)( void* sinkData, byte bv )\n   FILE* fout = (FILE*) sinkData;\n   fputc( bv, fout );\n #if !defined(NDEBUG) && defined(_MSC_VER)\n-  if (fout->_file != 2)\n+  if (_fileno(fout) != 2)\n     SPRTF(\"%c\",bv);\n #endif\n }\n```\n\nThat way we do not have to have the extra `#if (_MSC_VER) == 1900` switch code... and in case they change it again...\n\nWe could also use the POSIX compatible `fileno()`, minus the leading underscore, but in this case it is already inside a _MSC_VER macro... so is presently not compiled in other than Windows...\n\nIf you can test this use of `_fileno()`, and modify the PR, I would merge this... thanks...\n. @sria91 thanks for testing the use of `_fileno()`, but in the PR it seems you have just done that fix on **top** of your earlier fix...\n\nSo if I merged this, then we would get **two** commits ;=(( -\n- https://github.com/sria91/tidy-html5/commit/48cea8c221fe06bc92c283ba55f97cde7fed5951\n- https://github.com/sria91/tidy-html5/commit/a45f34ade59753e410e47c958ea3c54792a9e90f\n\nI would prefer this be just one commit, taking the code from what it is now directly to using _fileno()... no intermediate step...\n\nAlso then there is this additional 3rd commit in the PR -\n- https://github.com/sria91/tidy-html5/commit/60883b8d1fa6f5135db063ca04ed701f3938010d\n\nwhich in fact has already been applied to master... so may do nothing, but I would prefer it not be there...\n\nAs I see it you need to -\n1. backout/revert **both** your fileio.c fixes.\n2. regularly rebase your fork to htacg/master - important!\n3. apply a single simple _fileno() fix only.\n\nThe second item, the rebase, is something **all** forks need to do regularly, but the process is quite simple - from say here https://robots.thoughtbot.com/keeping-a-github-fork-updated,  or many other references -\n1. In your local repo create a one time remote reference calling it say 'upstream'\n   - $ git remote add upstream git@github.com:htacg/tidy-html5.git\n2. Then Each time you want to update your local master branch:\n   - $ git fetch upstream\n   - $ git rebase upstream/master\n\nThis should give us a simple single line PR ;=))\n\n#### alltest.cmd\n\nAlso thanks for the `test` info and testing... \n\nCoincidently I have been doing some tidying up in there... the above rebase will pull all those changes into your fork. I have added a little more informational output, and put it all in the 'temptest.txt' file...\n\nAnd these tests are not meant to be run using the `Debug` version of tidy, which with MSVC adds a **lot** of extra debug only information...\n\nSo in running 'alltest.cmd' I do **not** get the two errors you show of ERROR TESTS [ 837023 1072528]??? When I run alltest.cmd these two have no problems - extract from my `temptest.txt` -\n\n```\n...\nDoing: '..\\build\\cmake\\Release\\tidy.exe -f temp-5\\msg_837023.txt -config input\\cfg_default.txt        --tidy-mark no -o temp-5\\out_837023.html input\\in_837023.html  \nTesting 837023, expect 1, got 1, msg temp-5\\msg_837023.txt \n...\nDoing: '..\\build\\cmake\\Release\\tidy.exe -f temp-5\\msg_1072528.txt -config input\\cfg_default.txt        --tidy-mark no -o temp-5\\out_1072528.html input\\in_1072528.html  \nTesting 1072528, expect 1, got 1, msg temp-5\\msg_1072528.txt \n...\n```\n\nSo not sure why you got those two errors???\n\n#### acctest.cmd\n\nAnd I had not tried `acctest.cmd`, but in just trying that first had to correct the EXE name, and then it ran fine... That is I get **no** failed tests... Not sure why you show failed 13.10.1.1???\n\nFor me it ends with `Appears ALL tests ran fine`...\n\n#### alltestc.bat\n\nThe 'alltestc.bat' is really just a **repeat** of 'alltest.cmd', with the addition of a compare of the output with the output in the 'testbase' folder... like `alltest.cmd`, it runs fine except for test 661606...\n\nIn both tests, test 661606 seems to show up as a `binary` compare???\n\n```\nDoing: 'diff -u testbase\\out_661606.html temp-5\\out_661606.html' \nBinary files testbase\\out_661606.html and temp-5\\out_661606.html differ\nGot a DIFFERENCE between testbase\\out_661606.html and temp-5\\out_661606.html \n```\n\nHmmm, why is `diff` choosing this/these as `binary`... Other file compare utilities, like my own fc4, WinMerge, ... show the files as **exactly** the same...\n\nThey are encoded in `shift_jis` and apparently diff can not handled that... \n\nBut I am convinced they are the same, so there is no problem here...\n\n#### cleanup.bat\n\nIt has been a long time since I looked in the test\\html5, and thanks for the heads up about `cleanup.bat`. It will indeed eroniously delete template.org.html. As a quick fix have renamed it to atemplate.org.html... \n\n##### Meantime, look forward to a clean PR for the fileio.c/_fileno() fix ;=))  thanks...\n. @sria91 have now merged the PR... thanks for persisting with this... \n\nAnd yes, now that I think about it `$ git reset --hard` is the right thing to discard commits, not `revert`, which effectively adds a new commit...\n\nAnd, yes, I have the older `diff` 2.7 which does not support the `--strip-trailing-cr`! \n\nBut I find if I add the -a (treat as text) option diff finds them equal... This is only needed in my case on 661606, which as mentioned contains shift-jis characters... that is byte sequences like 82 BA 82 F1 82 D4 81... and is treated by git as `binary`... And as a binary file, there are no line endings changes done... \n\nThe `testbase` is git maintained, and I remember a long time ago doing `$ git config --global core.autocrlf true` in my windows system which I thought made all downloads CR/LF, but only uploaded as a LF... or something like that...\n\nAnd then the new output by the current tidy to `temp-5` should again have native windows default of CR/LF when run in windows... This is what I get for the files checked...\n\nExcept I now note 2 configs, a cfg_647255.txt with `newline: LF` and cfg_649812.txt with `newline: CR` so would expect tidy to honor that in those cases...\n\nJust did a quick line-end check of 447 files in `temp-5` and see 446 have CRLF, and 1, out_647255.html, has UNIX LF, which sort of agrees with the first of the above. Why none with just CR???? Could be just a bug in my perl script...\n\nOn the other hand of the 447 files in `testbase` 444 have CRLF, and 3, out_500236.html, out_647255.html, out_661606.html with UNIX LF... 647255 was requested in config... 661606 is treated as binary, as mentioned above. Why 500236? Again maybe a scirpt bug???\n\nAnyway, as stated, except for the line endings, the two ouputs of 661606 are the same... so no problem with tidy that I can see... \n\nNot exactly sure why the second, 500236, does not show up for me, as it does seems to have  different line endings! But again see no problem with tidy...\n\nAnd like you, running the Debug version of tidy, tidyd.exe, does show some problems with 837023 and 1072528. Not sure WHY, but the debug output is massive, and hard to pin it down... but again I am not really concerned about this... but will still try to explore at some time...\n\nAnd thanks for the test/html5/testhtml5.cmd fix. Have now changed and pushed that...\n. @sria91, wow 4 smilies... must be doing something right ;=)) (my special smile!)\n\nAnd thanks for looking into the debug crashes on 837023 and 1072528... \n\nWhat you have done would work fine, but I prefer to fix the Show_Node() debug service to handle a NULL node. It may be important to know that at that point a NULL node is returned, and with the GTDBG macro used in some 20+ cases, we need to protect against a NULL node in **every** case...\n\nA bit of a quick messy patch, it is just debug stuff, but now I can run tidyd.exe, BUT it does **not** produce a clean `diff -ua testbase temp-5`, while there is no diff with the Release version. \n\nApparently the debug version has some other slightly different output, but no time to exactly explore why...\n\nIt is sufficient that the Release version is clean... Thanks again...\n. @vielmetti as you may know from the Tidy! source, tidy is really two(2) separate items...\n1. tidy library - libTidy - a C library with an extensive API, in `tidy.h`, and\n2. a console app, tidy, canonical example usage of the API to achieve its goals.\n\nSo while I do not think the conversion of the xml output to json is a job for libTidy - json is **not** html nor xhtml - we build our own DOM like tree of elements, so no change to libTidy needed...\n\nBut it could be a function written into a console app that uses libTidy to get the XML!\n\nStarting with say the `tidy.c` source, renaming it to maybe `tidy-json.cxx`, and including say the `xml2json.hpp` from https://github.com/Cheedoong/xml2json, or some other `conversion` code/modules, then you could add the -tojson switch.\n\nThis would take the tidy-json input and convert it to xml in a tidyBuffer with -\n- `tidySaveBuffer(doc,buf)`, or\n- a user buffer with `tidySaveString(doc,ubuf,plen)`, \n\ninstead of using the normal `tidySaveFile` or `tidySaveStdout`, and pass that buffer to `xml2json`, returning the required json string... `json_str = xml2json( buf.bp );`...\n\nIf you wanted to share that source, maybe we could add such a `tidy-json.cxx` to console or experimental folders, as another choice, another example of what can be done with the libTidy API...\n\nOr like my [tidy test](https://github.com/geoffmcl/tidy-test) be a separate repo, and use the `FindTidy.cmake` in there to find and link with an installed version of libTidy...\n\nPossibilities are endless ;=))\n\nAnd maybe I will get a chance to try it in my `tidy test`! I just found I first built `xml2json` back in 20140215, by adding a CMakeLists.txt and doing some WIN32 porting... \n\nI updated my local clone, re-built and installed it. So now I have an installed set of some 33 xml2json.hpp, rapidjson/\\* and rapidxml/\\* headers to easily link into a new app ;=)) \n\nWill see how that progresses... if I get the time, interest...\n\nSo at present do not see this as a `Feature Request`, more `Technical Support` for using the API...\n\nHope this helps.\n. Well sorry now I spent so much time of researching and preparing a \ndetailed answer if it was not so important...\n\nBut trying to promote the libTidy API is always a good thing, so no \nproblem...\n. @vielmetti I personally am basically a `Windows` person and only keep a dual boot linux distro for quick building and testing...\n\nThis was the first I had heard of `Dockerfile`, so can only leave it to others to deal with this... And although I work with a **considerable** number of FOSS projects, none so far have such a `beast` ;=))\n\nBut really tidy only has a few simple build dependencies as enumerated **clearly** in the README.md.\n\nI suppose that would be -\n- $ [sudo] apt-get install git\n- $ [sudo] apt-get install cmake\n- And what ever installs gcc, libc headers, ie the normal build tools in linux\n\nWhat else do you think is needed? \n\nTo me Tidy! is **very** light weight compared to some project ;=))\n. @vielmetti oops forgot that... Yes, in unix/linux there is an extra build dependency of `xsltproc`... for the man page...\n\nAnd if you want to build the docs - `$ [sudo] make documentation` - also needs `doxygen`...\n\nAnd there may be some other things if you want to generate release binaries - `$ [sudo] make package` - but not sure of that list...\n\nBut there is no real user use in building the `api documentations`, or the `release binaries`, so maybe these additions are special for `maintainers` that want to update the API documents and/or the binary distribution page...\n\nA PR is always welcome ;=))\n. @vielmetti, yes it is very **sad** `apt-get install tidy` only seems to gets you a 2009 cvs version of Tidy! This is VERY OLD! 5 plus years...\n\nBut we, the HTACG Tidy community, can only urge package managers to pick up and offer later releases in their distribution... \n\nWe have tagged some dozen `Releases` - https://github.com/htacg/tidy-html5/releases\n\nWe maintain our own binary distribution page - http://www.htacg.org/binaries/ - a page shown in the README.md\n\nYou should send a strong note to `Raspberry Pi` urging, asking, demanding, pleading, ... that they **update** their tidy package distribution to a later version...\n\nAnd help us understand what **more** we, as HTACG, need to do to get the **latest** tidy into distribution...\n\nWill leave this open in case others want to comment, but at this point I know of nothing else for Tidy! to do ;=((\n\nQuite a number of issues have touched this package manager topic - #99, #120, #159, #174, #194, #223, #224, #231, and maybe others... just searching `package` and `manager`...\n. @vielmetti it would be even **better** to get the latest **5.1.9** into homebrew ;=))\n\nRelease 5.0.0 is already several months old, **and** \n\nRelease **5.1.9** has several **new** features, a few bug fixes, and is `stable`... already been tested lots... passes all 227 backward compatibility tests with no problems, all the accessibility tests... etc...\n\nBut hey, any and all distribution updates are great ;=))\n. @vielmetti well `$ ./testall.sh` runs fine in my linux system...\n\nSee https://github.com/htacg/tidy-html5/commit/88a656f0293b3a1a457ef2a777117f2da6c66ff3\n\nWhat version do you have?\n. @vielmett ok, this looks like a `script` build... No particular problem with that...\n\nSome small points, ideas, comments -\n\nFirst, as a suggestion! To me a PR should not be for your `first pass`, plus fixes that you required on testing... It should be the final, tested product, clean of say spelling mistakes... in this case one new file... no history of patches on it before it even arrives...\n\nOthers:\n1. `MAINTAINER` - should this not be the HTACG group? Yes, by all means add something like `\n   # First added by Edward M. Vielmetti  on...`\n2. `# install prerequisites` - well ok, if you really want to **mess** with someone else system... I'd prefer this 'switchable', at least to be **off**...\n3. `# build everything I possibly can` - Hey, WHY? As a user why would you want the documentation, and packaging??? They are of no use to him/her! No gain...\n\nFor 2. I do not know if it supports any `if-else-endif` logic, but my idea would be say in pseudo code -\n\n```\n#IF NOT ENV $DOUPDATE EQU NO\n    # Update the system AND prerequisites\n    RUN apt-get update && apt-get install -y \\\n    build-essential \\\n    cmake \\\n    ... etc ...\n#ENDIF \n```\n\nso I can do `export DOUPDATE=NO` to stop this...\n\nAnd it would be nice of the list of `install` items was also externally configerable... and maybe current system dependence, if any needed...\n\nOn the latter 3. accepting to not build **eveything** would certainly reduce the `prerequisite` system invasion ;=))\n\nTo build the default, assuming you have cloned the source, why not just -\n\n```\n# change to the git source\nWORKDIR $HOME/projects/tidy-html5/build/cmake\n# and build tidy...\nRUN ./build-me.sh\n```\n\nAnd you will note the `build-me.sh` chooses some defaults but has some user options... one of which is to generate the stripped release, production version...\n\nAnd I certainly agree with with another of your TODO comments, namely using the git cloned  source, or even some other specific branch, other than the default `master`, like `release/5.0.0`, or even some earlier tagged versions, not just a **fixed** zip version...\n\nOtherwise why is git installed? And if not using zip, then no `curl` install needed...\n\nBut either way, this `Dockerfile` does not really seem to be part of the tidy-html5 source repo... \n\nIf you have already cloned the repo to get it, why is it then choosing to download another zip, **or** another clone, to a `WORKDIR /root` no less!... Does not really make sense to me...\n\nMaybe this type of thing could be hosted somewhere else as `<...>/tidy-html5/Dockerfile`... as a sort of `do-it-all` script... if people want, need that... maybe added to http://www.html-tidy.org/#get_tidy... as an alternative 'full-download-build-install' script... \n\nOr maybe we need another repo, say `htacg/meta`, which could hold such `download-and-compile` scripts, and other `meta` data... I have an `updtidy-html5.sh` script which does the cloning, but could be expanded... or something...\n\nSo, for the reasons above, I personally see no Tidy! gain in this PR at this time... sorry...\n\nWill certainly listens for other comments, ideas... \n\nMaybe I am missing something here? Maybe `Dockerfile` is the new `holy grail` ;=)) \n\nI do note it is **not** installed by default in my Ubuntu 14.04!\n. @vielmetti, Wow, WOW, loving the new enthusiam over Tidy! Thanks...\n\nVery much appreciated... keep it up...\n\nAnd also real glad you **did** recognise this is about an `old version of libtidy` ;=))\n\nAny bug that mentions `libtidy-0.99` means it is from the sourceforge cvs site... and indicates a date circa, before, after, around, 2009, like 20051018 plus, can **not** be accepted as a **Tidy 5.1.9 bug**! \n\nRead the **long** history... the efforts to update the sf cvs site, etc, etc, etc...\n\nOf course the **ONLY** suggestion is `recommend that Ubuntu pick up tidy-html5 to replace the old libtidy`... **no other choice**! ;=))\n\nI am sure you will understand that only **bug** against `libTidy 5.1.9` plus can be accepted here...\n\nAt this point, unless there is a very compelling reason, will **not** back port any current fixes to release 5.0.0, making a 5.0.1 release neccessary... \n\nWould prefer we look forward to a `release 5.2`, perhaps in the not so distant future...\n\nAnd just to be clear I try hard to leave no stone unturned...\n\nAn input of:\n\n```\nhtml PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"\n\n BC\n\n```\n\nOutput:\n\n```\nline 2 column 7 - Warning:  isn't allowed in  elements\nline 2 column 7 - Info:  previously mentioned\nline 3 column 23 - Warning: replacing unexpected i by \nline 3 column 29 - Warning: discarding unexpected \nline 3 column 33 - Warning: inserting implicit \nline 3 column 33 - Warning: replacing unexpected b by \nline 3 column 33 - Warning: discarding unexpected \nline 3 column 37 - Warning: inserting implicit  \nline 3 column 37 - Warning: missing ? before \nline 3 column 7 - Warning: missing  before \nline 3 column 4 - Warning: missing  before \nline 2 column 7 - Warning: inserting missing 'title' element\nline 3 column 33 - Warning: trimming empty \nInfo: Doctype given is \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\nInfo: Document content looks like XHTML 1.0 Strict\n12 warnings, 0 errors were found!\n\nhtml PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"\n\n\n\n\n\n\nB C?\n\n\n```\n\nAnd can **not** see the `invalid tags change on each run` suggested, indicating that it is `fixed`!\n\nA simple test you could have done before wasting time on this issue...\n\nClosed!\n. @vielmetti, thanks for updating the Ubuntu bug information, I think ;=))\n\nI guess my point was more that I do not feel this `issues` is the right place to post this now **ancient not now a bug** report...\n\nAnd please, please avoid reviewing, re-opening the some 142 **open** bugs on the sourceforge tidy bugs list, and other tidy lists on sf! As mentioned I/We (htacg) offered to update the sf source, review, test, comment, and close them **all**...\n\nStill awaiting a response for the tidy sf maintainers ;=((\n\nBut if you do have `others` you want to comment on, maybe they could be added to a list like - https://lists.w3.org/Archives/Public/html-tidy/ - or other lists, tidy and/or Ubuntu... \n\nAnd on reading this type of report may have just replied `tks`...\n. @vielmetti and read #224 for **lots** more on tagging...\n\nI certainly hope tidy is now `(somehow) properly tagged`... ;=))\n\nAnd is it just me, but again while this is an `interesting`, important comment, piece of information which is good to know by those of us very interested in tidy, but should the `issues` system be used for this? \n\nWhy not a tidy list? Do we need other places opened for comments?\n\nHere in `issues` we are faced with what `label` to apply to it, what `milestone` to add... what to do about it...\n\nAnd then how, when is it closed? By whom?\n\nAs basically a `comment` on something you have done, completed, it is sort of self closing!\n\nOr are you suggesting we should leave it open just so new comers can read it without clicking the [ closed ] filer.\n\nIf so, for how long?\n\nA little confused...\n. @vielmetti I think expanding the package naming convention to include a cpu type is not a bad idea to help identify the binaries better...\n\nIt seems the CMAKE_SYSTEM_PROCESSOR, which I understand is the ENV %PROCESSOR_ARCHITECTURE% in Windows, and `uname -p` in linux is the variable to check, and/or CMAKE_HOST_SYSTEM_PROCESSOR for cross compiling, and set say a CPU to like, AMD64, x86_64, etc... and now perhaps ARM[?]...\n\nAnd thanks for `gcc -dumpmachine` @somian. In my Ubuntu 14.04 LTS, 64-bit machine I get `x86_64-linux-gnu`...\n\nBut what are some of the naming conventions used by other packages?\n\nOne **mad** example I know is Boost. I have not checked in linux, but in windows you get names like `boost_thread-vc100-mt-gd-1_53.dll` for DLL naming... but that's not packaging...\n\nWhat would be your suggestion(s)? \n\nSomething like `tidy-$VERSION-$CPU-$BITNESS.deb`? \n\nOr what?\n. No further comments for over a month... I guess there is no interest in expanding the deb file name conventions?\n\nJust some small changes in CMakeLists.txt should do it...\n\nSo for now will close, but feel free to re-open, or add another issue... thanks...\n. @vielmetti agreed, the word 'experimental' has long outlasted its usefulness, if there was one...\n\nTry again! \n\nMaybe need to push refresh to refresh your cache...\n\nThanks...\n. @vielmetti have replied to https://lists.w3.org/Archives/Public/html-tidy/2015JulSep/0019.html\n. @vielmetti see reply on the appropriate forum...\n. @StefanScherer thank for this...\n\nBut I do not think these chocolatey `script` files belong in the tidy-html5 source repo...\n\nIn Issue #255 like the `Dockerfile` have suggested other possible places for such `meta` data...\n\nAccordingly have replied to https://lists.w3.org/Archives/Public/html-tidy/2015JulSep/0019.html, and added a zip of your files there...\n\nThanks...\n. @vielmetti, OOF, take care about the **voluntary** work done by others... over years...\n\nOf course, always `There could be more.` ;=))\n\nNo idea about `TAP`! But would ask what it can do so much better that scripts?\n\nAbout `automated testing`, do not see a need, but that is not to be taken as against it!\n\nBut as copiously explained several times before, some of which I added to the test/README.md, we do not really have `unit` tests for tidy... some of the current tests can only be verified visually... some test other specific things...\n\nSomewhere else you wrote about a test that failed for you. When I looked at the reason for the test, it was about a crash/segfault because of `Missing attr values`... That is fixed.\n\nYou reported a small difference in output, using your version of tidy... not really part of the test... but when I run the tests in Windows 64-bit, and Ubuntu, using tidy 5.1.9, I have no problem.\n\nSo if your `automated testing` leads to what I think at this time is a **false** alert, then fix the automation before offering it... We would not want it to generate noise!\n\nThe reason I want to **improve** the test process is so that any developer that adds to tidy code has a way to quickly test their work **before** offering it as say a PR. Thus expect it to have been tested before merging to master...\n\nIf I think some developer has **not** done this, then I will usually try to find the extra time to do it for him/her... And, if it does cause a `difference`, explore it, discuss, decide if it is a valid change, and update `testbase` at the same time...\n\nSo at this time do not see how `automated testing` will help in this. If I am mistaken, then please enlighten this `old fart` ;-))\n\nBut what can you contribute to the current scripts?\n\nThey do need some TLC here and there... like another thing I read about a horrid `cp tidy tidy5` in a yml script... Any script still using `tidy5` should be fixed... not a new thing adjusted to perpetuate this `5`... tidy is now tidy ;=))\n\nAlways open to what else can be done...\n. Just to also be very clear -\n\nWhat I hear is that you are only interested in what fits @vielmetti needs, and maybe finding some difference between Intel and ARM7 testing... no problem...\n\nAgree we very much welcome extended porting to every system...\n\nAnd when I am sure we are talking about the same code, meaning the same version of tidy, then will listen more carefully about differences in output when running the tests... \n\nBut more importantly how the code can be adjust to accommodate, fix the output change, and **not** break other major ports...\n\nThat could include some MACRO in the code like -\n\n```\n#ifdef SYSTEM_ARM\n/* do this for @vielmetti */\n#else /* for everyone else */\n/* do that */\n#endif\n```\n\nHopefully minimal... \n\nWe would then also need some help from CMakeLists.txt configuration to generate say `add_definitions(-DSYSTEM_ARM)`... probably using like CMAKE_SYSTEM_PROCESSOR... Welcome research into this, and ideas...\n\nAnd as read somewhere else, also some discussion, recommendations on package naming conventions, to include a CPU string... which would also start with something similar to build the full name string...\n. @vielmetti looks like you are having fun with travis-ci... Enjoy...\n\nWhile suggestions for **improving** the test infrastructure are always welcome, not so much for **automating**, as already explained...\n\nAnyway, before you can automate `testing` it seems a good idea to improve, understand, and  discuss the testing...\n\nWe have already fixed some the old scripts, but there is more to do here first... \n\nSolving some currently identified problems with just using the diff of two files as decision ctiteria... and not talking about just skipping it... but...\n\nIn the past I have had to exclude some original tests, and maybe there are more that are not relevant now... maybe some could come back... need to identify, discuss, and decide...\n\nAnd probably some other **improvements** to the test infrastructure...\n\nBut the point is to **not** automatically run it as is, at this time, yet... but it's your travis-ci to do as you like...\n\nAs you state, please open an issue if you find something concrete. Of course if the something is related to current issues, then just add it appropriately... accordingly closing this. \n\nAs indicated, I prefer `suggestions`, `requirements`, ... be discussed on a `list`... build a consensus... get opinions... detail options, alternatives, and **most** importantly,  **benefit to tidy**...\n. @vielmetti, done and thanks... I certainly hope it is the last ;=))\n\nAs can be seen in the #173 i searched for a non-existant `build-docs.sh`, otherwise this would have already been done...\n. @ppKrauss thanks for the post... my first introduction to `polyglot markup` ;=))\n\nIn reading the W3C doc, the best definition I saw was -\n\n\"A document that uses `polyglot markup` ... parses into identical document trees (with some exceptions, as noted in the Introduction) when processed either as HTML or when processed as XML...\"\n\nInteresting idea... sort of subset of HTML5 that can be represented in XML... or something like that...\n\nFrom stackoverflow -\n\n> a tool that transforms (or filters losing spurious information) \"any HTML5\" into Polyglot XHTML5?\n\nNo, I do not know of such a 'tool'!\n\nBut the libTidy API could be used quite easily to **create** such a tool... as one of the posts mentions...\n\nIt could read the input into tidy's internal representation of the DOM tree, through the library API, filter, or adjust that tree, again through the lib API, deleting `spurious` information, then finally, again use the lib API, write an output...\n\nSo again, I do not know of such a tool, but one could be written using the libTidy API... \n\nAny takers? I would assist where I can...\n. No further comments for over a month, so closing this for now...\n\nPlease feel free to re-open, or open another issue... thanks...\n. @ppKrauss oops, my offer to `assist where I can` does not mean I want to write such a **filter**! Just no interest...\n\nTo be able to create such a tool, and use the libtidy API, you have to be able to write C/C++ code. It can parse HTML/XHTML, and build a tree of nodes, that could be **filtered**, or **converted** to give a  `html-polyglot` output... If that the `tool` you are looking for!\n\nWe provide a simple [Hello World](http://api.html-tidy.org/tidy/tidylib_api_5.0.0/tidylib.html#example_hello) skeleton showing basic API services...\n\nThe source of the tidy [console app](https://github.com/htacg/tidy-html5/blob/master/console/tidy.c) is itself an example of a html file input, and then an output in various forms...\n\nI have more examples in my [tidy-test](https://github.com/geoffmcl/tidy-test) repo, some of which, for example fetch a url page, using libcurl, and output just the text (url2txt). This show how to enumerate the tidy nodes set up from parsing the html document, and just show some of them, in this case the text nodes, but that is the same idea of a `filter`...\n\nThese all **show how to start the task**, but that certainly requires being able to read and write C/C++.\n\nTo repeat. Any takers? I would assist where I can...\n. @vielmetti thanks for reporting this difference...\n\nAs you point out, this does **not** seem to happen in linux (64-bit Intel), nor Windows (32-bit and 64-bit builds)... But will carefully re-test these 3 situation...\n\nAnd I do not think it happened on linux (32-bit Intel), but that machine went down, so can not test there again... \n\nSo not sure it is a 32 vs 64 bit situation... nor memory byte order... although I guess ARM is  bigendian? Which is opposite to Intel...\n\nWe are talking about a byte sequence after the word 'name', between the double quotes...\n\nFirst looking at the source - Input: input\\in_427664.html\n\nEditor Shows: \u00c31/2\nAnd using say `$ xxd -g 1 in_427664.html`, shows a byte sequence of -\nHex Dump: C3 31 2F 32\n\nBut that is **strange** in that the comment in the source says - ` attribute name is 2 bytes hex c3 87 `. Well the `c3` is there, but no `87`???\n\nSo the first question is why, how, when did this file get changed? I will check its history... Hmmm, it is also C3 31 2F 32 in the 2009 SF CVS source... so it was inherited this way by this repo...\n\nBut that **puzzle** is nothing to do with different tidy text output shown here...\n\nThen looking at testbase: testbase\\msg_427664.txt\n\nEditor Show: name \"??1/2\"\nHex Dump: 6E  61 6D 65 20 22 EF BF BF EF BF BF 31 2F 32 22\n\nWOW, now we are getting \" ef bf bf ef bf bf 31 2f 32 \"!!!!!!!!!!!!\n\nAnd when I run this test in Windows and Linux, I get that **same** strange output... so no diff...\n\nUnfortunatley I think the values show first in this post have been `transformed` either by the `diff` you are using, or the cut and paste from your screen... or something else... In the first it is \" 3F 3F 31 2F 32 \", and in the second it is \" C3 31 2F 32 \", which is intersting since that is what is in the source... \n\nBut as stated, I think these are `trasformations` by the tools used to create the text... so are no use or indication...\n\nSo I need you to -\n- confirm this EF BF BF EF BF BF 31 2F 32 is what is in your testbase\n- and show me the hex content in your ARM tmp/msg_427664.txt\n\nPlease not all, just the sequence that causes the trouble...\n\nAnd I do not think you need to build other test cases at this stage. Quite likely, if we can solve this one difference in character encoding, it might solve them all...\n\nMeantime I will try to understand why `c3` got `ef-bf`-ed by tidy???\n\nWelcome to the **crazy** world of character encodings ;=))\n. Have not yet had a chance to dig further into this **427664** difference, and while the above is about a difference that seems to be between Intel and ARM CPUs, have now identified two more differences between Linux and Windows, both 64-bit Intel machines...\n1. **431895** - This can **NOT** be avoided. It is the only case where emacs output is enabled, and in the emacs file name output, naturally the path separator will always be different, aside from the fact that the unix scripts add an unnessary `./` in front.\n2. **676205** - Both the msg and out are different. This does **not** look like a character encoding issue so perhaps it should be a separate issue, but for now it is open and here.\n\nIt seems the only **solutions** for 1. is to exclude it, or mangle the windows app a little to use unix path seps for this filename output... not too difficult to fix... and fix the unix script to avoid the leading `./`... then **no** diff...\n\nThe output in 2. has different line numbers, and even have a different doctype... Very, very  strange!!! need to investigate more...\n\nErrata: Above item 2 erroneously had 878205, now fixed. \n. @vielmetti just an update on these test differences...\n\n#### test 676205\n\nFound the problem with test 676205. As indicated seemed like different files were being processed, and that was it. \n\nIf the file input/in_676205.html, which has no doctype, is deleted, the test input will be the correct one, namely input/in_676205.xhtml, and the output will now exactly match that in testcases/out_676205.html.\n\nI guess this was a difference between how the test file was selected in linux and windows scripts. linux was selecting the HTML, and windows the XHTML, with the correct doctype.\n\nWill push this fix, well actually just a deletion, soonest...\n\n#### test 431895\n\nAs explained above, test 431895 can not be avoided since it is the one case where the filename is output to the message file and thus there can always be differences between the platform path separators. Correct it for one, and the others can show a difference...\n\nThe only choices here are -\n1. to remove it from testcases.txt,\n2. be prepared to accept a different message output, but still same markup,\n3. patch the code to always use `/` for emacs output, and drop any leading `./`\n\nAny help on option 3 very welcome... should not be too difficult...\n\n#### test 427664\n\nAs both my machines have Intel CPUs I can not replecate this problem, so can do nothing more to try to understand the difference on an ARM.\n\nHowever, recently there was a change in the internal moving of characters to the lexer, issue #286, and maybe this would change something to do with this?\n\nAll the recent development in the `issue-65` branch has now been merged to `master`, and that branch will eventually be deleted.\n\nSo if you get a chance to pull the latest `master` 5.1.17+ version, build and test again it would be appreciated. Thanks...\n. Well, fixing 431895 using the option 3. turned out easier than expected...\n\nThe TidyEmacsFile name is set for each file in the input - \nhttps://github.com/htacg/tidy-html5/blob/master/console/tidy.c#L1299 - \nit's simple to massage it and return a standardised name in an allocate, or even a static buffer...\n\nThe following patch should do it!\n\n```\ndiff --git a/console/tidy.c b/console/tidy.c\nindex 430df55..5297d03 100644\n--- a/console/tidy.c\n+++ b/console/tidy.c\n@@ -954,6 +954,34 @@ static void unknownOption( uint c )\n     fprintf( errout, \"HTML Tidy: unknown option: %c\\n\", (char)c );\n }\n\n+/* Issue #266 - test 676205 - standardise emacs file name */\n+static tmbstr getEmacsFilename( ctmbstr htmlfil )\n+{\n+    static tmbstr emacsFile = 0;\n+    size_t i, out, len = strlen(htmlfil);\n+    int c;\n+    if (!emacsFile) {\n+        emacsFile = (tmbstr)malloc(264);\n+        if (!emacsFile) outOfMemory();\n+    }\n+    out = 0;\n+    for (i = 0; i < len; i++) {\n+        c = htmlfil[i];\n+        if ((i == 0) && (len > 2) && (c == '.') ) {\n+            c = htmlfil[i+1];\n+            if (( c == '/' ) || ( c == '\\\\' )) {\n+                i++;\n+                continue;\n+            }\n+        }\n+        if (c == '\\\\')\n+            c = '/';\n+        emacsFile[out++] = c;\n+    }\n+    emacsFile[out] = 0;\n+    return emacsFile;\n+}\n+\n int main( int argc, char** argv )\n {\n     ctmbstr prog = argv[0];\n@@ -1295,8 +1323,8 @@ int main( int argc, char** argv )\n #if (!defined(NDEBUG) && defined(_MSC_VER))\n             SPRTF(\"Tidying '%s'\\n\", htmlfil);\n #endif // DEBUG outout\n-            if ( tidyOptGetBool(tdoc, TidyEmacs) )\n-                tidyOptSetValue( tdoc, TidyEmacsFile, htmlfil );\n+            if ( tidyOptGetBool(tdoc, TidyEmacs) ) /* #266 - use std name */\n+                tidyOptSetValue( tdoc, TidyEmacsFile, getEmacsFilename(htmlfil) );\n             status = tidyParseFile( tdoc, htmlfil );\n         }\n         else\n```\n\nIf someone wants to pick this up, and test it, maybe improve the getEmacsFilename() function, that would be great... only quickly tested it in windows... thanks...\n. @mcepl sorry, almost missed this comment... not sure **neat** qualifies as a `use` case, but I understand ;=))\n\nWe have opened a discussion on the tests and testing procedures - see #330\n\nOnce we have all the tests sorted out, fixed, running correctly, testing and showing what we want, yes it would be possible to add a `$ make check` target. Good idea... thanks...\n\nAs a windows developer, I have already scripted that to -\n\n```\n???> htt # get to the test folder\ntest> alltest # run the tests\ntest> diff -ua testbase temp-5 # compare with test base\n```\n\nThe equivalent windows cmake command to `$ make check` would be, like\n\n```\nbuild\\cmake> cmake --build . --config Release --target check\n```\n\nSo either would work for me... If you want to add that to the CMakeLists.txt, in your fork, then would appreciate a patch or PR, and it will certainly be tried... but as stated, please add that to #330 discussion...\n\nIt seems the only other open discussion here is also on those very tests, so will close here, and cross-reference here from there...\n. @mtangoo, @vielmetti thanks for reporting these, and the suggested content enhancement...\n\nAll welcome, but I would certainly appreciate any help in `fixing` these...\n\nThe site pages are stored in the tidy-html5 repo, `gh-pages` branch. To get the source just -\n\n```\n$ cd tidy-html5\n$ git pull\n$ git checkout gh-pages\n$ git pull\n```\n\nAll the contents, links etc are in the `_posts/*.md` docs... \n\nI have tried a few times to fix these URL's, but as indicated **need** HELP! Maybe there is something about the _config.yml, or other yaml parameters that I do not understand...\n\nConversly, the content of the API docs, http://www.html-tidy.org/tidy-html5/tidylib_api/ pages are generated in the tidy-html5 `master` branch, using `xsltproc` and `doxygen`, so a fix of a link in those documents starts with the source in the `documentation` folder...\n\nSee doxygen.cfg, *.dox and tisy1.xsl files, and others...\n\nAnd to generate the API documentation you need to do the standard tidy build and then add an important cmake option -DBUILD_DOCUMENTATION:BOOL=YES to add a documentaion target...\n\n```\n$ ch tidy-html5\n$ git checkout master\n$ git pull\n$ cd build/cmake\n$ ./build-me.sh # simple build, and then, and if ok...\n$ ./build-me.sh -DBUILD_DOCUMENTATION:BOOL=YES\n$ [sudo] make documentation\n```\n\nThat last step will `generate` the API documentation in `documentation/temp/tidylib_api`... \nCan be locally viewed with say `firefox index.html`...\n\nThere are about 3 outstanding doxygen warnings during this step that need looking at, but do not seem the stop the API docs generation...\n\nThe publishing is a separate step, consisting of again checking out the `gh-pages`, and copy the site files generated above to the `tidylib_api` folder, and pushing the result... easy...\n\nBut of course any change in the content must be **fixed** in the relevant sources...\n\n@pedromorgan has also setup an API documentation site, read #248, namely http://tidy5docs-htacg.rhcloud.com/, but I have no idea how to get, or publish these...\n\nAny help on this site pages and/or api documentation gen is **much** appreciated ;=))\n. @mtangoo thanks... look forward to it when you get the chance...\n. Yes, the old `development-500` branch has been deleted after its contents were merged with `master`... \n\nThis is also true for the `indent-with-tabs` and `issue-228` branches. Their content has been merged to `master` and will get around the deleting them in due course...\n\nWill shortly be merging and deleting the `issue-65` branch, after a little more testing...\n\nThere are currently only 3 relevant branches -\n1. **release/5.0.0** - Is release 5.0.0\n2. **master** - the default stable branch\n3. **gh-pages** - the site pages\n\nThe idea is additional, new branch will be create now and then, to isolate say possible code  regressions, errors, and thoroughly test them, before merging to `master`...\n\nBut this issue is about site pages content, not code, so -\n- If correcting site pages - http://www.html-tidy.org - then it is the `gh-pages` branch.\n- If correcting doxygen generated API docs - http://www.html-tidy.org/tidylib_api/ - then it is the `master` branch...\n\nLook forward to help getting the site fixed and updated...\n. @vielmetti since Travis CI has been discussed and rejected in #175...\n\nAnd have added lots more comments on the same topic recently...\n\nAs stated elsewhere, #65 is **not** a case for CI...\n\nDo not see a reason why tidy needs this at this time...\n\nSo again this is **CLOSED**.\n. @vielmetti it seems to me you are more interested in the process of **automation**, the CI itself, setting it up, than in any results or benefits this could bring to the project... but that's ok... no problem...\n\nSome things I note from your various CI links -\n- I saw some compile warnings [travis-ci](https://travis-ci.org/vielmetti/tidy-html5/jobs/80416894). It would be good if these were looked at and **fixed**... `pprint.c:1030:52`, `localize.c:370:27`, `streamio.c:955:19`, ...\n- If I understand your `skip` notation, several compares with `testbase` fail. I think 427672(msg), 431895(2), 675205(2), 1415137(msg)... is this all of them? What is the problem? Can we **fix**? Test 427664 is already in #266, so others could be **added** to there...\n- testcases.txt contains 228 tests, but you seem to only compare a small sub-set, but maybe I do not understand. Why are you not doing ALL 228? You do seem to run `testall.sh`, which does 228... Due note of the WIP title, but is this something that will be **fixed**?\n- you build the docs, and we see some warnings. Have these been looked at? Can they be **fixed**? And I think there is a wrong path in CMakeLists.txt but lack the time to track it down... There are two `tidy1.xsl` files? Which is correct?\n\nAs can be seen in #266 to be able to analyse the problems, and look at fixing this diff, need access to the ouput generated by `testall.sh`, not specifically that generated by a diff tool, or perhaps changed in the cut-paste operation... Prefer the files themsleves... maybe in a zip... \n\nAnd as expressed elsewhere, it would be great if the `testall.sh` tool chain could be enhanced to have just one log output, and include the version of tidy being used in the test... date, time, ... and need access to that log also...\n\nAnd after the API docs build, there seems a deploy: token. Can I get access to the `tidy-docs.zip`, assuming it contains the entire contents `-r temp/tidylib_api/*`. As you can read in #248, this is part of what I seek...\n\nSo I would say, these are some very **positive** results from your CI work. Thank you for the effort! I might even be tempted to try the same with my own `tidy-fork` ;=)) Looks like fun...\n\nBut I do not see any follow-up on fixing the actual problems in tidy source... \n\nAs always, any help on **fixing** tidy is much appreciated...\n. Hi @pedromorgan, thanks for looking into this...\n\nYes, I/We tried to **move** the `documentation` source from `build/documentation` to just the `documentation` sub-directory... Anything remaining in `build/documentation` is intended to be **deleted**.\n\nAnd yes, the building of the doxygen API docs is just a cmake process... \n\nTo generate the API documentation you need to do the standard tidy build first, no need to install, and then add an important cmake option -DBUILD_DOCUMENTATION:BOOL=YES to add a documentaion target... as follows...\n\n```\n$ cd tidy-html5\n$ git checkout master\n$ git pull\n$ cd build/cmake\n$ ./build-me.sh # simple build, and then, and if all ok...\n# gen docs target...\n$ ./build-me.sh -DBUILD_DOCUMENTATION:BOOL=YES\n$ [sudo] make documentation\n```\n\nAnd in looking at the CMakeLists.txt that sets up this target I note an **error** on [line 216](https://github.com/htacg/tidy-html5/blob/master/CMakeLists.txt#L216).\n\nThis line uses the `tidy1.xsl` from `build/documentation` which is **wrong**! Now the only difference between the two `tidy1.xsl`, is a relative PATH to tidy-config.xml -\n\n```\n27c27\n< \n---\n> \n```\n\nTell me the PATH change for `documentation/tidy1.xsl`, if any, and I will effect the **fix** for CMakeLists.txt... that should make the `build/documentation' folder completley redundant, and can be **deleted**!\n\nAlso just to be very clear, there are sort of **two** tidy sites for these doxygen generated API docs - \n1. http://www.htacg.org/tidy-html5/tidylib_api/, **and**\n2. http://www.html-tidy.org/tidylib_api/\n\nMaybe this is the reason why I can not get the links correct! See #268, #214, #203, and maybe others... It seems when adjusted for one, the other becomes a **broken link**... or something???\n\nI suppose we could questions - do we need to keep **both** URI? - I would certainly **prefer** to keep then **both** if the generated links can be got right! And they are both just DNS records with the actual docs in the repo...\n\nAnd I even like, would keep things like - http://tidy5docs-htacg.rhcloud.com/. and/or say tidy.freeflightsim.org... and/or https://travis-ci.org/vielmetti/tidy-html5/jobs/80416894 if  @vielmetti chooses to expose the docs he built... and others...\n\nIs it not better to have **more** sites, rather that put all the eggs in one basket, and redirect all others to it?\n\nAnd while all links to within the `tidylib_api` folder can and should be relative if possible, there are some few sort of **external** links to outside the API docs themselves. Maybe these need to be **absolute**... or something...\n\nAnd please do not **mix** or **confuse** -\n- these doxygen generated API docs, which is in the `master` branch, and \n- the home-site pages, which are in the `gh-pages` branch... \n\nI like that these two things separated, and certainly do **not** want, nor would accept doxygen use on the home site pages - http://www.html-tidy.org - those `gh-pages` pages will should remain under manual adjustment at least for now...\n\nAnd to **repeat** strongly and clearly, while I am not adverse to having some 3rd party API doc sites that just show the latest single form API docs, and thus we need to sprinkle some \"@new features\" and \"@dereciated\" fluff here and there for this...\n\nBut for tidy owned site(s), to be in sub folders... each containing the one time only built docs, version separated like -\n- tidylib_api/5.1.11\n- tidylib_api/5.0.0\n- tidylib_api/4.9.20\n- ... etc ...\n\nAs indicated in #248. Maybe we can have **two** doxygen configs - one the generate just one `tidylib_api`, and the other to use the lib tidy version information to generate in `tidylib_api/5.1.11`... this latter should be the default gen...\n\nAnd if this is too messy, then **only** generate the version `tidylib_api/5.1.11` for the tidy owned sites... \n\nAnd we need to design a `tidylib_api/index.html` page that lists the available versions. I would like to add some notes about each version...\n\nHope we can get these doxygen API docs worked out, agreed... \n\nAnd once this is working, I would like to work with you to maybe add some more special pages, like we did for fgms... to try to add some `useful-to-programmers` pages, in addition to the copious listing stuff doxygen builds...\n\nMaybe some HOWTO things like `create a new feature`, `enable debug options`, etc, etc... but that's for later...\n\nRight now there is a need to get the API docs up there, published ;=)) HELP NEEDED!\n. @balthisar thanks for the repo addition... looks good... \n\nAnd I too hope we can delete the `build/documentation` folder, in favor of just using only the `documentation` folder, thus removing some duplicated, and perhaps confusing, stuff...\n\nConcerning the additional pages, I do not have any complete at the moment... I have some notes, but are not yet formed into complete pages, ideas...\n\nSo from my perspective this can be closed...\n. @vielmetti thanks for the good idea ;=))\n\nMaybe you or @ryandesign could assist by drafting some text for the [get_tidy](https://github.com/htacg/tidy-html5/blob/gh-pages/index/_posts/1970-06-01-get_tidy.md) page, if you get the time...\n\nIn general we **welcome** updates, ideas for the site pages. These can be by -\n- making the suggestion, like this...\n- add some draft text changes, either as plain text, or in md\n- adding a PR, but would prefer some discussion on that before...\n\nI will certainly keep Macports in mind, and try to think of some wording, paragraphs, outline... thanks again... \n. @vielmetti, thanks for the `you might start with this` suggestion. It looks good... a very positive start...\n\nBut, oops, I have a personal reversed on site updates... sorry, but that can happen ;=((\n\nIn general site updates are a **good** thing, but I have a rave about that... skip to `done rave` to skip this ;=))\n\nAt present the tidy site pages are in the `gh-pages` branch of the tidy-html5 repo... no problem with that... each time a push is done the site pages are updated... all great... simple... easy...\n\nBut how are the pages updated? Changed? \n\nAt present the site pages are represented as markdown documents, processed by yaml, to produce html... no problem with that... it works fine... it looks good... good css... all perfect... So a change means modifying the MD, and push...\n\nBut this is **HTML Tidy** we are talking about! \n\nWhy on earth would grandfather `tidy` have baby `yaml` produce html for it from md?\n\nTidy is the **king** of all HTML!\n\nTo me, `HTML Tidy` site pages should -\n1. be written in html5++\n2. be tidied, cleaned, indented, pprint-ed, by `tidy`\n3. bear the `HTML Tidy`, logo, and\n4. when tested with the W3C validator, bear the HTML5++ logo.\n\nMaybe this can all be done using `markdown`. But that is not the point! \n\nThis is **HTML Tidy**, and it seems to me it's pages should be in the repo as HTML, not MD!\n\nI would seek some help to convert the current `markdown + yaml` to just `yaml`, publishing tidy cleaned html5 pages, each proudly showing the Tidy+W3C icons...\n\ndone rave!\n\nSo my personal reversal on site updates is that unfortunatley I do not have the time to look at `suggestions`, or suggested `text`... Maybe others can help with that...\n\nI would look at a PR, where I can quickly review the simple change, and merge, **or** ask questions, why this, that...\n\nSo who out there can help with these site update issues? Like this, and others...\n. @vielmetti, well their help page says \"You can provide feedback through the mailing lists, through the various trackers at SourceForge (see the home page for direct links), or directly to package maintainers.\", but took some time finding addresses for the latter...\n\nSee https://sourceforge.net/projects/fink/ shows `Brought to you by: alexkhansen, danielj7, dmacks, dmrrsn, and 5 others` so you could write to them...\n\nCertainly the http://pdb.finkproject.org/pdb/package.php/tidy package has a 2009 date (090425), and of course only points to the SF source... they are sadly in need of an update...\n\nMaybe if you joined say the beginner or user lists, you could add a post there... and/or this tracker - https://sourceforge.net/p/fink/package-submissions/ - seems to specifically ask for package updates... or...\n. @martinthomson I ran this test **many** times, in linux and windows, with tidy versions 4.9.36, 5.0.0, 5.1.8, 5.1.12, and can **not** repeat the problem ;=()\n\nMy simple temp1.html input was -\n\n```\nhtml\n\n\n\nIssue #273 - Doctype removal on otherwise clean\ninput\n\n\npara 1\n\n\n```\n\nCommand: `$ tidy -q --show-info no -modify temp1.html`\n\nThe first modified output, with just with a tidy-mark added -\n\n```\nhtml\n\n\n\n\nIssue #273 - Doctype removal on otherwise clean\ninput\n\n\npara 1\n\n\n```\n\nAnd repeating that command over and over does not have a problem!\n\nWhat version of tidy are you using? What is in the tidyconf file? \n\nDo you have a $HOME/.tidyrc in use? What is its contents, if yes? What is the content of index.html?\n\nHave I missed something here?\n. @keithmendozasr again sorry, but I do not have time to debug all scripts that use tidy...\n\nHowever I did read through some of the stuff... the only suspect lines seen were -\n\n```\nsupport_dir ?= $(CURDIR)/.support\ntidy ?= $(shell which tidy 2>/dev/null)\nifeq (,$(tidy))\ntidy := $(support_dir)/bin/tidy\nendif\n```\n\nLater you do build and install tidy from source, and install into `$(support_dir)`, but to me it is not clear which tidy is being used in `$(tidy)`...\n\nBut ok, you have tidied tidy's output with fixup.sed, which gets you over the problem, but does **not** explain what is really going wrong...\n\nAs indicated I do **not** think there is a **bug** in tidy! I can not produce this!\n\nCan you reproduce this problem either running tidy from its installed location, like `/usr/bin/tidy`, or `/usr/local/bin/tidy`, or running the newly built and installed version in `$(support_dir)/bin/tidy`?\n\nPointing me to a repo does not prove anything... maybe someone else can see the fault, and offer some help...\n. @keithmendozasr WOW, this is a really weird bug... thanks for persisting, and finding a repeatable scenario, namely tidying https://github.com/w3c/mediacapture-fromelement/blob/tidy/index.html\n\nThe first time tidy parses this document, it shows quite a number of warnings, and declares it as `Info: Document content looks like HTML Proprietary`, and in the output, say `temp1.html`, refuses to add a DOCTYPE!!!\n\nThen when you re-run tidy on the `temp1.html` output, and output it to `temp2.html`, it only warns about the missing doctype, but says it looks like XHTML5 -\n\n```\nline 1 column 1 - Warning: missing   declaration\nInfo: Document content looks like XHTML5\n1 warning, 0 errors were found!\n```\n\nThen when you re-run tidy on the `temp2.html` output, and output it to `temp3.html`, you get a clean report -\n\n```\nInfo: Document content looks like XHTML5\nNo warnings or errors were found.\n```\n\nBut now `temp3.html` will not have a DOCTYPE... and is exactly equal to `temp1.html`... and the cycle continues... forever!\n\nSo this shows it is nothing to do with the `-modify` option used. This flip/flop happens even when outputting to a new file each time, and then using that new file as the next input... and each alternate outputs are exactly equal...\n\nNow this ONLY happens with the full contents like `index.html`. If I use a simpler XHTML input like the following there is no problem -\n\n```\nhtml\n\n\n\nTest 2 - #273\n\n\n\nPara 1\n\n\n```\n\nThis will output as -\n\n```\nhtml PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"\n\n\n\n\nTest 2 - #273\n\n\n\nPara 1\n\n\n```\n\nAnd this output can be re-run through tidy forever with no change...\n\nNow to dive into the code and try to discover why tidy, given your `index.html` content, removes the doctype on the first run, and adds a doctype on the next - flip/flopping ;=((\n. Zeek! The first debug run, using `temp2.html` as the input reveals where it happens... I am using `temp2.html` (actually input5\\in_273-4.html in my test cases archive) because it is the cleaned `index.html` that has a doctype...\n\nThe following is an extract from my extra debug output. Unfortunately at present this EXTRA debug output is only available in the Windows MSVC Debug version. ie not available in linux at this time -\n\nHere I interate through all the nodes in the internal tree just before `clean and repair` is done, and then after the `clean and repair`, and there is a big difference...\n\n```\nAll nodes BEFORE clean and repair\nRoot  \n DocType  \n StartTag html   lang=\"en-us\" xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en-us\"\n  StartTag head  \n... etc ... then -\nAll nodes AFTER clean and repair\nRoot  \n StartTag html   lang=\"en-us\" xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en-us\"\n  StartTag head  \n... etc\n```\n\nWhy is tidy **removing** the internal `DocTYpe` node in `clean and repair`????\n\nThe saga continues ;=))\n. @keithmendozasr think I have found, and fixed it...\n\nIt happens in Bool TY_(SetXHTMLDocType)( TidyDocImpl\\* doc )... Called from `int tidyDocCleanAndRepair( TidyDocImpl* doc )`, `if (xhtmlOut && !htmlOut)`...\n\nAt this time the TidyDoctypeModes dtmode == TidyDoctypeAuto, after testing the lexer->versions contains certain flags (val == 0x0004e000), and not finding any it wants, like VERS_FRAMESET, VERS_LOOSE, VERS_HTML40_STRICT, etc. in `else` it will discard the DocType node... WHAT! discard doctype??????\n\nNote that 0x0004e000 corresponds to `(VER_SUN | VERS_NETSCAPE | VERS_MICROSOFT)`, which combined are `VERS_PROPRIETARY`, **and** the `XH50` bit... I am immediatley tempted to make this an exception in this last else case, and that is to NOT delete the DocType node, IFF...\n\nWait, there is a meta `VER_HTML5` defined... so if this is still possible, ie not all the html5 bits have been eliminate during the parsing, then true to html5 pragma, do not leave a document without a DocType! Do **not** delete this node... try that!\n\nWow, this seems to remove the **bug**! A diff -\n\n```\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 638f72f..8cc2b0d 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -1771,6 +1771,16 @@ Bool TY_(SetXHTMLDocType)( TidyDocImpl* doc )\n             TY_(RepairAttrValue)(doc, doctype, sys, GetSIFromVers(X10T));\n             lexer->versionEmitted = X10T;\n         }\n+        else if (lexer->versions & VERS_HTML5)\n+        {\n+            /*\\\n+             *  Issue #273 - If still a html5/xhtml5 bit\n+             *  existing, that is the 'ConstrainVersion' has\n+             *  not eliminated all HTML5, then nothing to do here.\n+             *  Certainly do **not** delete the DocType node!\n+             *  see: http://www.w3.org/QA/Tips/Doctype\n+            \\*/\n+        }\n         else\n         {\n             if (doctype)\n```\n\nWill do some more testing, and if you get a chance to apply this diff, and test again, and comment, will push this **fix** to `master`...\n\nAgain, thank you for finding the repeatable sample... this is **so** important in chasing this type of bug...\n\nHope this fix tests positive ;=))\n. @keithmendozasr thanks for testing and reporting...\n\nI have also now done the 228 regression tests with no problem...\n\nSo have now pushed this change to `master`, and bumped the version to 5.1.14\n\nPerhaps after some more testing you can close this? And interesting bug...\n. @keithmendozasr yes got my tags in a mess ;=() sorry...\n\nWas meant for @martinthomson ;=))\n. No more comments for over a month, so I guess we can close this...\n\nPlease re-open, or open another issue if required... thanks...\n. @CMB done and thanks...\n. @keithmendozasr sorry, can not repeat this issue ;=((\n\nHad no problem with the following sample, scraped directly from the [W3C web site](http://www.w3.org/TR/html5/sections.html#the-section-element) -\n\n```\nHtml\n#275 test - section not recodnizedGraduationCeremonyOpening ProcessionSpeech by ValidactorianSpeech by Class PresidentPresentation of DiplomasClosing Speech by HeadmasterGraduatesMolly CarpenterAnastasia LuccioEbenezar McCoyKarrin MurphyThomas RaithSusan Rodriguez\n```\n\nDefault config:\n\n```\n// default config\nshow-info: false\n```\n\nCommand: `tidy  -config input5\\cfg_def.txt input5\\in_275.html`\n\nOutput:\n\n```\nNo warnings or errors were found.\n\nInfo: Document content looks like HTML5\nhtml\n\n\n\n#275 test - section not recodnized\n\n\nGraduation\n\nCeremony\nOpening Procession\nSpeech by Validactorian\nSpeech by Class President\nPresentation of Diplomas\nClosing Speech by Headmaster\n\n\nGraduates\n\nMolly Carpenter\nAnastasia Luccio\nEbenezar McCoy\nKarrin Murphy\nThomas Raith\nSusan Rodriguez\n\n\n\n\n```\n\nAnd except for the version string get the same ouput from tidy version 5.0.0...\n\nWhat version of tidy are you actually using? What does `tidy -v` show?\n\nCan you provide a sample input, configuration used, current output, and expected output...\n\nMyabe I am missing something here???\n. @vielmetti tidy still waits for **actual** help on the site pages updates, rather than just very welcome suggestions... thanks...\n\nSo who out there can assist with this?\n. @vielmetti, @balthisar this fink [package](http://pdb.finkproject.org/pdb/package.php/tidy) pages shows 5.0.0 is there... that is great.. thanks...\n\nMaybe there is a later page, or is it possible to get that updated to release [5.1.25](https://github.com/htacg/tidy-html5/releases/tag/5.1.25)? \n\nDo we have to file another bug report like in #272, or what? \n\nSome distribution systems reply on our release [feed](https://github.com/htacg/tidy-html5/releases.atom). Is something like that possible for `fink`?\n\nAny help appreciated...\n. @hexmode I read through the links you provided, and some deeper links, but still not sure what is required? Exactly what are you/they looking for???\n\nFirst I note some of the `blocks` were raised against sourceforge tidy, which has been frozen since circa 2009!\n\nWe, HTACG, have approached the SF Tidy maintainers, with an aim to doing something about that... but presently no suitable response... so sf is just there, frozen... now causing never ending confusion...\n\nSo the first thing would be to update to using only http://www.html-tidy.org/, and source https://github.com/htacg/tidy-html5, and re-test **all** to see if tidy still **sucks** ;=()\n\nI would suggest it has improved a lot over the last 5+ years in github, especially since June 2015 when we release 5.0.0... and the current 5.1.14+ contnues to improve...\n\nBut this re-test might prove impossible since it felt like some had already made up their mind about tidy... and given that I read several that were not happy with tidy's handling of space and newlines, and for sure, like a browser, tidy removes most `space`, unless encoded as `\u00a0`, so this in itself may not be suitable...\n\nBut, yes, given a stream or buffer to parse tidy produces an internal DOM tree. As the tidy.h sample code `dumpNode()` shows, you can iterate through all the nodes... if this is what you want... and build your own tree from that...\n\nBut there are presently no internal DOM tree sevices - to create nodes, append or insert nodes, delete nodes, deal with attributes, create, add, delete, sort, and add a text node, etc, etc - exposed. They are all `private`, internal to the library...\n\nI suppose given a use case such services could be added to the API, but this would **not** be an easy task, like all the text is not actually kept in the node tree, but rather as offsets into a lexer buffer... which is part of the document...\n\nAnd one could argue this is **NOT** really the purpose of libtidy, to include manipulation of tidy's internal DOM tree, presently deliberately kept **very** opaque...\n\nAnyway, maybe I do not understand the question... hope this helps...\n. @hexmode again I am confused by your question...\n\nWhat is libTidy if it is not a `HTML parser` with a configurable serializer called `Pretty Printing`, rendering its internal DOM like tree to HTML or XHTML, to a file, buffer, or stdout? Maybe fixing some html problems along the way...\n\nNow, can we say libTidy is a `precisely HTML 5 compliant` parser? Hmmmm...\n\nWell it is as `precise` as we can make it, and `HTML 5 compliant` is precisely what has been added here at htacg, on top of an already great `HTML 2 to 4` parser, having two internal modes, html5++ and html4--, to deal with the differences...\n\nSo, yes, for sure, I am interested in making that possible...\n\nOr are you talking about a separate project to build Yet-Another-HTML-Parser (YAHP!)? Well I  could also be interested in that, but for different reasons ;=))\n. @hexmode if it is a tidy problem I am interested ;=))\n\nAs previously stated, your links all look like OLD bugs... using the OLD sf tidy cvs 2009 source, or even the now old HTACG up to 2014, maybe even early 2015 tidy source... \n\nThey would need to be **RE-TESTED**, against current 5.1.14, and if there is a continuing problem then we would appreciate an issue, with sample html, config, output, expected, filed at https://github.com/htacg/tidy-html5/issues... that would be great...\n\nNow, I do not have time to test the 3 links you gave, but I did find one I could quickly **re-test**, namely https://phabricator.wikimedia.org/T65699\n\nRunning the sample html given through tidy 5.1.14 shows no problem here. The warnings tell what it found -\n\n```\nline 1 column 214 - Warning:  is probably intended as \nline 1 column 234 - Warning: discarding unexpected \n```\n\nSo now no problem over the missing `` nor the extra ``, both are corrected in the output... so who is going to close that bug?\n\nHow many more of the bug links are like that?\n\nSo I repeat again. I am **very** interested in tidy 5.1.14 issues!\n\nI am sorry your pointer to a W3C draft document did not help me understand \"precise html 5 compliance\", in that I could not find `precise`, `html 5`, nor `compliance` on that page???\n\nTidy is not a browser! Its DOM tree is never modified by say document.write()... it is a HTML Parser, fixer, and Pretty Printer... that's all... how it arranges such a node tree to achieve that does not seem very relevant... but there is some DOM tree interrogation in the API...\n\nSo, give that no tidy 5.1.14 bug has been identified here yet, and anyway would prefer them in their own separate issue, will close this for now. \n\nAs always, feel free to re-open, or file a new issue... thanks...\n. @KingDuckZ hmmm, reviewing the diff shows **many** lines changed by what looks like just space changes...\n\nCould you please adjust your editor to not do this, to make it easy to see and review what is being changed... I expected just `CMAKE_SOURCE_DIR` and `CMAKE_BINARY_DIR` substitutions...\n\nThat also made it hard to see what you fixed concerning `tidy-config.xml`... which may be a good thing... when I can see what you have done...\n\nAnd then why is `build/documentation/tidy1.xsl` in your diff at all? In fact this particular file should be deleted, and only `documentation/tidy1.xsl` should be used... so could accept a change for that...\n\nFor the reasons above not prepared to merge this yet... can you address the issues raised?\n. @KingDuckZ first, let me say I have no problem with the cmake variable substitution... I have often wondered about exactly what is the difference between these two cmake variants... and if it lets tidy be a git submodule, and still be the sole, primary repo then no problem... that is **good**!\n\nIn fact, I would appreciate a few clues how to make tidy a submodule of another github repo  that uses tidy, like say edbrowse, and/or maybe others... just to experiment with how easy/hard this is... understand its benefits... pros/cons... document it... etc...\n\nAnd yes, perhaps I should have warned you that if you just reverse the space change, github will just create yet another patch and join that to the others in the existing PR... \n\nWhile the final result in CMakeLists.txt is now clear, as just a `substitution`, the spaces changes will also be in the history...\n\nThat's not particularly a problem, but it would be better to return to the htacg HEAD in your fork and just apply just the substitution cleanly... and sometimes the only way to achieve that is to in fact delete your fork, and fork cleanly again...\n\nAnd now I can see what the second, unrelated change is, and also this looks **very** good in principal, but...\n\nYou have changed `build/documentation/tidy1.xsl` to deal with the missing tidy-config.xml... you have renamed it `tidy1.xsl.in` and added a `configure_file(...)` to write it, doing the substitution of `@TIDYCONFIG@`... that is all ok...\n\nBut as mentioned, this is in the wrong folder in the first place...\n\nThe file `build/documentation/tidy1.xsl` needs to be deleted, and CMakeLists.txt adjusted to use the file `documentation/tidy1.xsl` or a `documentation/tidy1.xsl.in`, to do the name substituion... but this is nothing to do with this issue `Fix cmake for use as subproject`.\n\nCan they be separated? \n\nNow take care here... github will always see what you do to in your `master` branch as a single PR to the upstream `master`... \n\nThe only way I know to separate things is to either wait until other PRs are cleared, merged, and you have done a rebase, and push, or to do this 2nd change in a `branch` you create...\n\nSo, in summary -\n1. On the first, I could do this simple replacement, still attributing it to you in the message, or you could present a single clean PR for this, which will then have your name on the change...\n2. On the second issue, thanks for this, but can we separate it? \n\n   I do not want to make a change in `build/documentation` when later this will just be deleted. Seems creating history for nothing... Can we fix cmake to use `documentation/tidy1.xsl`, or better `documentation/tidy1.xsl.in`?\n3. And 3rd, on the suppression of trailing spaces even this should be considered... it has been discussed before a few times, like Code cleanup #59, but not done... but this too should be a separate issue, carefully timed to do **all** source files in one hit... with no **other** change what-so-ever...\n\n   We should be able to do an external diff with -rw and not see a single `diff`...\n\nSorry for this carrying on, on simple issues, but I would like to keep the repo history as clean as possible, with issues clearly, and cleanly separated...\n\nReally thanks for your efforts, but we are not quite there yet... can you help with a few more steps? How can I help to make that easier?\n. @KingDuckZ this is now a single issue, and merged, having trust that this change of a CMake variable has no effect when tidy is a sole, primary repo... I think, hope not...\n\nThanks for this... merge done...\n\nDo I have to explain why multiple commits are not particularly good for a single change, or why `git can handle millions of commits` is an argument for allowing more commits than neccessary to effect a desired change? I hope not!\n\nConcerning using submodules you're pointing me to your repo that uses tidy (and it seems curl) as submodules... thanks for this... \n\nBut this does not seem to help in the git command sequences that sets up these 3rdParty libaries as a submodule of `duckscraper`... and how to keep them updating on each build...\n\nI can see there is a .gitmodules file containing, among other things -\n\n```\n[submodule \"lib/tidy\"]\n    path = lib/tidy\n    url = https://github.com/htacg/tidy-html5.git\n```\n\nThat looks a good start, and I suppose creating such a .gitmodule file with these entries may help, but maybe there are git command to create this?\n\nBut then where is the `git pull 'tidy'` to make sure this source is the latest? And re-build if there is a change...\n\nI have read some things about git submodules that are good, but I am still missing some basics about setting it up for other repos that depend upon the latest tidy... maybe you can help?\n\nIt seems maybe is starts with something like -\n\n```\n$ git submodule add https://github.com/htacg/tidy-html5.git\n```\n\nBut then how to enable this submodule, and make sure it is updated, pulled, each time the primary project is built?\n\nSorry for these newbie questions on submodules, but all the reading suggests it is a good way to go if you depend on the latest 3rdParty source... \n\nBut not quite getting it all...\n\nBut again thanks for your persistance and effort on this cmake gitmodule change...\n. @KingDuckZ thank you for the cmake link, and the explanation of git submodules... I will get around to experimenting with this some more...\n\nOf course, when I think about it, updating a submodule should not be automatic... that should only be when I decide an update is needed... which could in turn be scripted to be done on each build if so desired... or not...\n\nLooks like fun... thanks again...\n. @KingDuckZ thanks for following through on this... now merged...\n\nI too do not know whether the `build/documentation` can be deleted yet, but that is a separate issue...\n\nThe ultimate aim is to remove `build/documentation`, `build/win64`, and `build/cmake`, and the contents of the current `build/cmake` be just in `build`, but that can be further down the road...\n\nAgain thanks...\n. @KingDuckZ oops, missed that you had created a **new** `CMAKE_CURRENT_BINARY_DIR/documentation`! This seems just adding unnecessary depth, and more to clean up...\n\nAnd then telling git to ignore this now built tidy1.xsl...\n\nStill to fully test the API documentation build... but all looks good so far...  thanks...\n. @CMD thank you for this issue, and yes the sample html you pointed to, now imbedded here, is a perfect example of the **big** problem in tidy ;=((\n\n```\nhtml\n\n\n\nNested style tag in comment block\n\n<!--\n.stuff { color: red }\n<style>\n-->\n\n\n\npara 1\n\n\n```\n\nThis sample `passes` the W3C validator with no problem...\n\nIn all browser tried shows the text `para 1` in red, so adding the html comment block ` ... ` in the `` does not 'hide' the CSS from a browser... it still reads and uses it...\n\nNor does it seem the browsers tested open a second level of `<stype>`, on seeing the second `<style>` and thus expect two closing tags ``, like tidy does...\n\nThis tripping over a second `` causes tidy to render **rubbish**!\n\nThis tidy counting of the opens of the container, in the GetCDATA(...) service, was introduced a **long** time ago into the code. And this increment of a `nested` variable causes tidy to continue to seek a second close ``, thus, in this case, treating the balance of the document as part of the `` tag text... with very **bad** results...\n\nI think the `nested` variable was added to sf cvs rev 1.85, Apr 9 2003 by @hoehrmann,  mentioning bug 443678... there is a test case input/in_443678.html - https://sourceforge.net/p/tidy/bugs/98/ - all now closed... \n\nBUT, this is a **different** bug, like supporting `<script src=\"my.js\">` with no close element... a very good and important change... \n\nSo that does not show, or explain the reason for the `nested` increment... but I hesitate changing this very old code... Maybe it is needed for other tags that pass through here like `<script>`, not sure...\n\nMy suggestion is to add another option TidySkipComments. \n\nWhen this is enabled, on getting a `<` from the stream, would test if this is within a `c-start <!-- ... --> c-end` comment block. If yes, ignore and continue, waiting for a `</sytle>` close...\n\nThis option is similar to the TidySkipQuotes recently inroduced, #65, to get over problems in the `<script>` tag, tripping over what seems like new tags...\n\nThis new option, TidySkipComments, could default to `off` thus have no effect on the default behaviour of tidy, although there may be a case for this option to default to `on`?\n\nThe W3C seems to allow this comment block addition to the `<style>` tag. See here http://www.w3.org/TR/html5/document-metadata.html#the-style-element, and maybe in other references...\n\nThe relevant quote is \"The textContent of a style element must match the style production in the following ABNF, the character set for which is Unicode.\"\n\n```\nstyle         = no-c-start *( c-start no-c-end c-end no-c-start )\nno-c-start    = < any string that doesn't contain a substring that matches c-start >\nc-start       = \"<!--\"\nno-c-end      = < any string that doesn't contain a substring that matches c-end >\nc-end         = \"-->\"\n```\n\nThis seems to indicate that when there is a comment block open `<!--`, any string is allowed until c-end, `-->`... the TidySkipComments options would do this...\n\nAs usual, with changes in such old established code are considered, look for to comments from others before implementing... thanks...\n. @foxinushka opened a similar issue, Tidy fails with following HTML #283, now transferred here..\n\nTest html:\nhttps://www.dropbox.com/s/d4me1itots9j8sm/test.html?dl=0\n\nIf I remove `<style> ... ` tag and its content, tidy works well.\nOtherwise it adds next text:\n\n```\n/*]]>*/\n\n\n\n\n\n```\n\nafter `` tag. \n\nIn this case the in container counter is incremented on finding a comment block with another style open - `/*  ... */` and tidy will not exit the style until it finds a second close `` with catastrophic consequences...\n. @CMD @foxinushka see #65 for a possible fix pushed to the `issue-65` branch...\n\nI hope you will get a chance to do `$ git checkout issue-65`, pull, build and test again with this 5.1.14.EXP1 version of tidy... thanks...\n. @foxinushka well I have re-tested your dropbox test.html and find no problem now...\n1. are you sure your checkout of `issue-65` branch went ok?\n2. did you then do a git pull to update that branch?\n3. did you delete the CMakeCache.txt?\n4. when you run `./tidy -v` what version do you see?\n5. are you adding `--skip-quotes yes` to the config?\n\nYou must use tidy version `5.1.14.EXP1`, with special emphasis that the version must end in **.EXP1**!\n\nFor this sample you **must** use the `--skip-quotes yes` configuration option, otherwise you will see very bad results...\n\nWithout that additional config option set to **on** the whole file becomes just one style block, with just 2 warnings. And using -i, the output ends with the very bad -\n\n``` html\n   end footer\n\n\n\n\n\n\n\n\n\n```\n\nWith that option **on** you will get some 27 warnings, and using -i the output ends correctly with -\n\n``` html\n       end footer\n\n\n\n\n```\n\nVery puzzled... Please check again and advise...\n. @foxinushka no problem...\n\nAnd make a clear note the name of this option `TidySkipQuotes` will probably change to something like `TidySkipNested`, or ??? in the final version... after some testing time...\n\nAnd of course `skip-quotes` to say `skip-nested`...\n. @joeheyming yes, that certainly seems an erroneous warning output...\n\nWill look at it soonest, unless someone else beats me to it...\n\nThanks for reporting...\n. @joeheyming hmmmmm, that message usually warns that tidy has inserted an escape character into javascript...\n\nBut this conversion of `/` to `\\/` only happens if the container has no attributes, like just ``, or has a type or lang attribute declaring it as \"javascript\"...\n\nIn this sample you have used `type=\"text/html\"`, so you see the warning but not the effect...\n\nI guess this warning should be after the attribute check, and only issue it if tidy adds the escape character...\n\nSince I am presently working in an experimental branch `issue-65`, have effected this change there for testing...\n\nTo get this version, please do\n\n```\n$ cd tidy-html5\n$ git checkout issue-65\n$ git pull\n$ cd build/cmake\n$ rm CMakeCache.txt [optional]\n$ ./build-me.sh\n$ ./tidy -v\n$ HTML Tidy for <OS> version 5.1.14.EXP1\n```\n\nHope you get a chance to re-test using verions 5.1.14.EXP1 and report... thanks...\n. @joeheyming, unfortunately can not duplicate a problem with the html sample you give...\n\nIs that a typo `my local ./tidy5`? \n\nTidy does NOT have a `5` appended since release 5.0.0 in June this year!\n\nWhat do you get when you run `./tidy -v`? \n\nIf you do not see 5.1.14.EXP1, especially the **EXP1**, then something is wrong in your checkout of `issue-65` branch?\n\nWhat branch displays when you run `$ git status`?\n\nVery puzzled...\n. @joeheyming have fully merged `issue-65` branch to `master` and will get around to deleting it...\n\nIf you get a chance to pull, build, install `master` version 5.1.17 plus, and confirm this remains fixed, maybe we can close this issue? Thanks...\n. @joeheyming no, I think not... my reading of http://braumeister.org/formula/tidy-html5 says that only has 5.0.0! This fix is only in 5.1.17++\n\nYou could add a [comment](https://github.com/Homebrew/homebrew/commit/74c2df7c6d57170ab6e277597f4da4a8d8103a40#Library/Formula/tidy-html5.rb) to this commit, asking @zmwangx, @mikemcquaid to add the [5.1.25](https://github.com/htacg/tidy-html5/releases/tag/5.1.25) release... it is a dropin replacement of 5.0.0... just change the url to  https://github.com/htacg/tidy-html5/archive/5.1.25.tar.gz...\n\nBut why use homebrew? I note they have a backlog of some 250 PR, and a similar number of issues, so it looks like the `homebrew` maintainers have some catching up to do...\n\nWhy not continue to build your tidy from source, like it seemed you were doing at the beginning, then you can use the latest, 5.1.32, or even participate in testing of developmental branches...\n\n**Tidy needs your help!**\n. @joeheyming yes, the stats are **awesome**... sorry for the casual observation! And look forward to your PR so you **can** make an impact on open source ;=))\n. @shwoodard thanks for opening this issue...\n\nI guess when html5 was added to tidy, the use of the `template` tag was still in **draft** form, so in tidy it is parsed as any other block element... \n\nHas the W3C spec moved on since then? \n\nMaybe some with W3C knowledge can comment, and maybe provides some links to read...\n\nTo check browser support I scraped a working example from [whatwg.org](https://html.spec.whatwg.org/multipage/scripting.html#the-template-element) - thanks to them -\n\n``` html\n<!DOCTYPE html>\n<meta charset=\"utf-8\">\n<title>Test 2 - template tag #282 - Cat data</title>\n<script>\n // Data is hard-coded here, but could come from the server\n var data = [\n   { name: 'Pillar', color: 'Ticked Tabby', sex: 'Female (neutered)', legs: 3 },\n   { name: 'Hedral', color: 'Tuxedo', sex: 'Male (neutered)', legs: 4 },\n ];\n\n\n\n\nName Colour Sex Legs\n \n\n\n\n\n\n var template = document.querySelector('#row');\n for (var i = 0; i < data.length; i += 1) {\n   var cat = data[i];\n   var clone = template.content.cloneNode(true);\n   var cells = clone.querySelectorAll('td');\n   cells[0].textContent = cat.name;\n   cells[1].textContent = cat.color;\n   cells[2].textContent = cat.sex;\n   cells[3].textContent = cat.legs;\n   template.parentNode.appendChild(clone);\n }\n\n```\n\nThis seems to function fine in chrome and firefox, but **not** in IE, Opera, or Safari, but I may not have all the latest windows 7 64-bit versions installed... especially since this [caniuse.com](http://caniuse.com/#feat=template) report suggests better than I found...\n\nOf course I am unable to construct even a simple sample that passes the W3C validator... but there have been some 'complaints' about that like here in [stackoverflow](http://stackoverflow.com/questions/16187085/html-where-can-i-put-the-template-tag-without-the-w3c-validator-complaining)... but that was a few years ago...\n\nThe following sample got close, but shows the nu validator is parsing the text in the `template` block **as html**, so warns of an empty h1 header -\n\n``` html\nhtml\n\n\n\nTest 3 - template #282\n\n\n\n\n\n\n\n\nTest 3 - template #282\n\n\n```\n\nI hope someone can give us some samples using `template` which do **pass** W3C validation!\n\nMy reading of the spec is that the `template` block contains metadata content, and should not be parsed as html... should not be too difficult implementation in tidy... treat it all as a text node with no html parsing applied...\n\nBut the first step here is to hear from some people with good W3C intel... \n\nSo again, thanks for bringing it up. Is it now time to kick tidy `template` tag support up a notch?\n. And such a service, to treat the meta content as a text node, with no html parsing applied, if implemented in tidy, may also be useful for the `script` and `style` tags, which are running into trouble - see #65, #280, #281, and maybe others...\n\nFor them we need a service that collects a text token from the stream, until the first container close tag is found, and the `template` tag could be added as a user of the service...\n. This `feature` did not make it to 5.1... maybe good for the next 5.2? Or later... meantime marking it indefinite...\n\nAs always, ideas, patches, PR very welcome...\n. No further comment for many weeks, so closing this for now...\n\nPlease feel free to re-open, or raise another issue... thanks...\n. @foxinushka thanks for reporting, and providing a sample...\n\nThis is now a known bug in tidy, see #280, and the cause has also been found, and are considering fixes...\n\nSince this seems a repeat of the same problem, am closing this and transferring your comments to there...\n\nPlease follow it there, and again thanks for reporting...\n. @skynet no, not really... \n\nI would like to see this `issue-65` branch fully tested, issues #65 and #280 closed, and maybe some others... and merged into `master` first...\n\nBesides I thought the original idea was to aim at a new release each 6 months, and the first 5.0.0 was delayed and delayed until June 30 2015, so that would suggest the Dec/Jan 2016 for the next release...\n\nOn the other hand when #65 and #280 are closed, there are also some very good, and important, fixes in this 5.1.++, so maybe an earlier release is warrented. What do you think?\n\nAnyway, for now will moved this date out to Nov 20 for now...\n. @skynet as you have no doubt seen I have moved the next release version discussion to #334, so closing this...\n\nNow have release 5.1.25 into several distributions... [AUR](https://aur.archlinux.org/packages/tidy-html5/), [homebrew](http://braumeister.org/formula/tidy-html5)... \n\nStill pushing others, like Debian [bugs](https://bugs.launchpad.net/ubuntu/+source/tidy/+bug/1029209) and Ubuntu [question](https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623)...\n\nAnd have begun a discussion on the steps, etc... appreciate your input...\n. @skynet it remains **fun** so why not... and I do like getting your `thumbs-up` icon now and again... thanks ;=))\n. After testing for a while, have pushed a fix for this to the `issue-65` development branch...\n\nBasically, when a html4-- doctype is seen, the internal attribute table is adjusted to html4-- \nmode in `TY_(AdjustTags)(doc)`.\n\nHave now added a `TY_(ResetTags)(doc)` which resets the table back to html5++ mode before parsing each new document...\n\nThere are presently only 3 or 4 entries changed, so this reset is no big thing! And added a big note that any change to `AdjustTags` should have a corresponding entry in `ResetTags`...\n\nNow when processing a set of command line documents, nothing from the previous document parsed will bleed through to the next document parse... all document, snippet, parsing starts in the same html5++ mode...\n\nBumped version the 5.1.15.EXP3 for this change.\n. Branch `issue-65` now merged to `master`, and will eventually be deleted... and bumped version to 5.1.17...\n\nClosing this issue as **fixed** ...\n. @chg365 you need to add the three back quotes when adding html and output to the comment...\n\nHave adjusted your posts accordingly...\n\nNow to try to look at the problem...\n. @chg365 ok, now have a valid utf-8 file to test...\n\nWow, yes the -clean option really mangles the valid utf-8 when transferring the text from the span to the generated css string...\n\nNow to try to solve the problem...\n. @chg365 I noted from the images you posted on #287 that you are using version 5.0.0 of tidy...\n\nThe present development is in the `issue-65` branch, at version 5.1.15.EXP3, but confirm this bug is in that version also...\n\nSo will first work on a fix in 5.1.15.EXP3. \n\nAre you able to checkout and build using the `issue-65` branch for testing? Thanks...\n. Examining and resolving the problem.\n\nSo the `-clean` option sets `TidyMakeClean`, thus an additional service `TY_(CleanDocument)( doc );` is used to replaces presentational markup by style rules.\n\nThis service is also used if the TidyDropFontTags `--drop-font-tags yes` is on...\n\nThe function `CleanDocument` first calls `CleanTree( doc, &doc->root );` which causes no harm to the character set... but if `TidyMakeClean` is on it next calls `DefineStyleRules( doc, &doc->root );` and then `CreateStyleElement( doc );`. It must be in one of these...\n\nHmmm, yes, in `CreateStyleElement`, before the 'clean' the font-family name is, in hex is -\nE6 96 B9 E6 AD A3 E4 BB BF E5 AE 8B\n\nI use hex because editors and copy/paste can also mangle utf-8...\n\nHowever after the above 'cleaning', and the font-family name moved to style css text the hex is -\nC3 A6 C2 96 C2 B9 C3 A6 C2 AD C2 A3 C3 A4 ...\n\nThe damage is done... \n\nNow to discover WHY????\n\nOk, there's the problem. When transferring that font-family string to the newly created style css it uses `void TY_(AddStringLiteral)( Lexer* lexer, ctmbstr str )` which does -\n\n```\nvoid TY_(AddStringLiteral)( Lexer* lexer, ctmbstr str )\n{\n    byte c;\n    while(0 != (c = *str++) )\n        TY_(AddCharToLexer)( lexer, c );\n}\n```\n\nNow the str contains the correct utf-8, but when it reaches the first E6, the `AddCharToLexer` will treat this E6 badly, then the 96, and so on...\n\nThe `AddCharToLexer` uses `err = TY_(EncodeCharToUTF8Bytes)( c, buf, NULL, &count );`, and if say you pass these to it, as bytes, it will create a 110X XXXX two byte sequence for each... ending up with rubbish...\n\nSo, using this `AddCharToLexer` to transfer this aleady valid utf-8 sequence to the lexer will cause this problem...\n\nBy the looks of this, this BUG has been in tidy for a long, long time... I do not think it is anything to do with the added html5 support...\n\nSo now I have found when, where, why... on towards a fix ;=))\n\nThe string has to be transferred to the lexer, since that is where the style tag text is held, stored, but maybe instead of `AddCharToLexer` which involves character translations, maybe the `AddStringLiteral` should just use `AddByte`, which does exactly that...\n\nBut this `AddStringLiteral` is called some 20 plus places in clean.c! Is it safe to always just use the `AddByte`? Not sure yet... in most caase looks fine like `TY_(AddCharToLexer)(lexer, '{');`, but what about `TY_(AddStringLiteral)(lexer, bgurl);`? What characters could be in `bgurl`?\n\nMaybe I just need say a new function like say `AddStringAsIs`, which uses `AddByte` and only use that in place of `TY_(AddStringLiteral)(lexer, style->properties);`. \n\nThat is assume all style properties have aleady been translated, and the data just moved byte by byte to the lexer... this seems a safe assumption...\n\nAnd this certainly seems a minimum code change to deal with a specific case...\n\nWill reflect on this a little... but any feedback, comments VERY welcome...\n. @chg365. well thinking again maybe the `AddStringLiteral` should just use `AddByte`!\n\nThis is in clean.c, so it is not invloved in reading data from a file stream, where `c = TY_(ReadChar)(doc->docIn);` must correctly handle collecting multi-byte UTF-8 from the stream, range checking it, and storing it internally.\n\nIn clean.c this is **always** just transferring already checked, `translated` data from some internal location, or static data, to the lexer buffer. It is like a simple strcpy(), but must take care of expanding the lexer buffer, if required, to hold the string... a simple copy until zero reached...\n\nThere is no need to use `AddCharToLexer`, which uses `EncodeCharToUTF8Bytes`, and to do this would in fact be a **fault**!\n\nOne that has been hanging around for quite a time to be found, due to the fact that you have to have multi-byte utf-8 data, not just ASCII single bytes, in a style attribute, and you must configure -clean to move that style to some generated css text... quite unique...\n\nSo this is the proposed simple patch -\n\n```\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 479fcc9..495aa0d 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -1407,8 +1407,16 @@ static Node* NewToken(TidyDocImpl* doc, NodeType type)\n void TY_(AddStringLiteral)( Lexer* lexer, ctmbstr str )\n {\n     byte c;\n-    while(0 != (c = *str++) )\n-        TY_(AddCharToLexer)( lexer, c );\n+    while(0 != (c = *str++) ) {\n+        /*\\\n+         *  Issue #286\n+         *  Previously this used TY_(AddCharToLexer)( lexer, c );\n+         *  which uses err = TY_(EncodeCharToUTF8Bytes)( c, buf, NULL, &count );\n+         *  But this is transferring already 'translated' data from an\n+         *  internal location to the lexer, so should use AddByte()\n+        \\*/\n+        AddByte( lexer, c );\n+    }\n }\n\n /*\n```\n\nHope you or others get a chance to apply this patch, and test... it works for me ;=))\n. @chg365 thanks for testing, and reporting...\n\nIt feels like this little bug is squashed...\n\nHave now pushed the patch to the `issue-65` branch, and bumped the version to 5.1.16... \n\nAfter a little more testing this branch will eventually be merged into `master`...\n\nThanks again for helping us improve tidy...\n. @chg365 have now merged `issue-65` to `master` and bumped the version to 5.1.17... will eventually get around to deleting the `issue-65` branch...\n\nIf you get a chance to pull `master`, build and test, maybe this issue can be closed? Thanks...\n. @chg365 am closing this as a **repeat** of issue #286... \n\nThanks for the images, but now understand the utf-8 is badly mangled when being transferred from the span to the generated css... These images should have been only added to #286,,,\n\nPlease monitor #286 and only add any comments to there... thanks...\n. @claviska thanks for reporting, but at this moment struggling to understand what you think the bug is!\n\nExcept of course the name of the option, `drop-font-tags` does seem to be a little misleading in what is says in the help, and what it in fact does... Is this what you are referring to as a bug?\n\nIf this option is on, then for each node, the service `Node* CleanNode( TidyDocImpl* doc, Node *node )` will be used. The comment on the head of that service is `/* Applies all matching rules to a node */`, which already seems a better desription of what it will do.\n\nAnd this same service is called when the clean (-c) option is on, the only difference being that after applying all matching rules to a node, it will move the style to a class, so the output becomes -\n\n``` html\n\n span.c2 {font-style: italic}\n a.c1 {font-style: italic}\n\n\n\nTest\nTest\nTest\nTest\n```\n\nAnd yes, these are the **only** two options that call CleanDocument... and again the comments in the code seem a better description than the current help text, namely -\n\n```\n    /* replaces presentational markup by style rules */\n    if ( clean || dropFont )\n        TY_(CleanDocument)( doc );\n```\n\nSo at present I see nothing `inconsistent`, other than the actual help desription. What would be a better option name, and decription?\n\nAnd why do you think this `breaks` something if `` is used?\n\nSo an input of -\n\n``` html\n\nTest 5\n\n```\n\nbecomes an output of -\n\n``` html\nTest 5\n```\n\nor if clean (-c) is used -\n\n``` html\nTest 5\n```\n\nThis looks `consistent`?\n\nAnyway, for the moment marking this as a `feature`, but hope you can clarify what you expect. thanks...\n. @claviska absolutely agree it was not evident from the name, nor the docs description...\n\n@balthisar thanks for picking up on this...\n\nThis all looks good, but one comment about changing an option name, and about changing what the option actually does... the behaviour...\n\nI feel, if changing a very old option name, I would prefer that that old option name continue to exist for quite a period of time, which I would expect to be quite long, but we could add a `nag` during that period... something like -\n\nThe option `drop-font-tags` is depreciate, and will be removed [maybe a when]. Consider using `clean-legacy-tags` and/or `blah blah` instead [because... etc] - a big nag.\n\nThis annoying `nag`, maybe output even if quiet is on, out to stderr, is to warn the user to change that old configuration file, script, or whatever... sooner better than later... or suffer...\n\nAnd likewise for the behaviour. The old option name should continue to do exactly as before, while the new option or options, replacements and/or enhancements, of course offer another, hopefully better, at least clearer idea...\n\nOf course, this is **not** about the docs help descriptions. For sure they should be changed soonest to better reflect what the option really does, even if its name implies something else...\n\nI guess the original `drop-font-tags` only did that. But now it does a great deal more. I am still struggling to prepare a big list of what it does! And as you suggest, could be increased to cover other things, or at least the new option could, but somehow the help description just never got changed... It sure needs to...\n\nAnyway, just my 2 c ;=))\n. issue-288 - 20151027\n\nIf options clean and/or drop-font-tags is on, CleanNode( doc, node ) is called. It \"Applies all matching rules to a node.\".\n\nIt presently has 8 actions, only the last is related to font!\n\n#### 1. Bool Dir2Div\n\n```\n    Symptom:   where  is only child\n    Action: coerce   to  with indent.\n    if ( nodeIsDIR(node) || nodeIsUL(node) || nodeIsOL(node) )\n```\n\n#### 2. Bool NestedList\n\n```\n    Symptom: ...\n    Action: discard outer list\n    if ( nodeIsUL(node) || nodeIsOL(node) )\n```\n\n#### 3. Bool Center2Div\n\n```\n    Symptom: \n    Action: replace  by \n    if ( nodeIsCENTER(node) )\n```\n\n#### 4. Bool MergeNestedElements( DIV and SPAN )\n\n```\n    Symptom ...\n    Action: merge the two XXs\n```\n\n#### 5. Bool BlockStyle\n\n```\n  Symptom: the only child of a block-level element is a\n  presentation element such as B, I or FONT\n  Action: add style \"font-weight: bold\" to the block and\n  strip the  element, leaving its children.\n  example:\n    \nDraft Recommended Practice\n\n  becomes:\n      \n        Draft Recommended Practice\n      \n  This code also replaces the align attribute by a style attribute.\n  However, to avoid CSS problems with Navigator 4, this isn't done\n  for the elements: caption, tr and table\n```\n\n#### 6. Bool InlineStyle\n\n```\nthe only child of table cell or an inline element such as em\n```\n\n#### 7. Bool InlineElementToCSS\n\n```\n    Transform element to equivalent CSS\n    if ( FindCSSSpanEq(node, &CSSeq, yes) )\n```\n\n#### 8. Bool Font2Span (eventually)\n\n```\n  Replace font elements by span elements, deleting\n  the font element's attributes and replacing them\n  by a single style attribute.\n    if ( nodeIsFONT(node) )\n```\n\nOf course each has other conditions that need to be met. Essentially it converts lots of things to an inline style...\n\nThis is done when either option is on, and only if clean is on, will that inline style be converted to a class, C1, C2, etc... ie css is generated.\n\nHope this helps.\n. @balthisar, wow, as we dig into this, and begin to understand more, `--drop-font-tags yes` is really a disaster! It really does just **toss** the font tag into the bit bucket ;=()\n\nSimple example: Some big, red text \"Test 6!\"\n\n``` html\nTest 6!\n```\n\nWith drop-font-tags on this becomes something completely different! NO size or color perserved ;=(( Really! ZUTE!! I certainly can not see a use case for such document mangling!!!\n\n``` html\nTest 6!\n```\n\nAnd with clean, get something nearly reasonable, but is still seems wrong in size -\n\n``` html\n\n span.c3 {color: red; font-size: 70%}\n...\n<p><span class=\"c3\">Test 6!</span></p>\n```\n\nWhy is the font size **reduced** to a small `70%`! That should be more like `170%`, or something, but that is another topic...\n\nSo yes, I certainly agree with your big **do not use** warning in the docs for drop-font-tags...\n\nConcerning the proposed docs for clean, I would perhaps change the `However`, to `Warning`, but perhaps we should not even mention this ugly drop-font-tags... but as you like...\n\nSo if we amend those two description, is that it for now? \n\nLet any other issues, like this size problem, consider additional tags like tt, big, small, ..., and the validator warns about the use of the font tag in html5, but tidy does not, etc, be posted separately on a case by case basis...\n\nLet's at least have suitable descriptions ;=)) \n\nThanks @claviska for bringing this up. What do you think about the new descriptions, and the warning on drop-font-tags?\n\nOn a separate issue I feel confident about all the improvements in the `issue-65` branch, so have now merged it into `master`, bumped the version to 5.1.17, so your changes can now go in `master`. Thanks...\n. @balthisar, ok cherry-picked 2d0f971 to `master`... and like seeing the new descriptions ;=))\n\nAnd after a pull, build, install in linux, read the new tidy,1 doc with `$ man tidy`... looks good... thanks...\n. @balthisar yes, there are a lot of exciting changes... thanks...\n\nI have review all changes, but only looked mainly for code changes. In other words I did not fully check all the new decsriptions, words, syntax, etc, ... but all that I did read made sense... and of course it still compiles without a problem...\n\nAlso have not yet got around to trying an API documentation build, since I may need a change to the script I use, but I will get around to that... I am sure you have done this several times...\n\nSo I think this should be merged to `master`, and the version bumped to 5.1.18, with a correspond date change. I know most of these are not code changes, but if someone now reports an error in a description we need to know they are reading the new descriptions...\n\nOf course, as expected, the removal of the dead `bobby` link, which is good, does cause about a dozen message files, generated from `./testall.sh`, to be different from those in `testbase`... but it is only message file changes... so after this merge, we also need to update `testbase` with the new messages...\n\nThere are 2 other message file differences NOT related to your changes - test 431895 `(./ diff)`, and test 443678 `(3 to 2 warnings)` that I have been trying to `solve`. In 431895 I think the leading `./` difference comes from the different scripts, but still to track down which and change it, then decide which should be in `testbase`, and 443678 seems a good desired change, but again still to explore it exactly... and see some other discussion on changes in #266...\n\nBut these other changes are not related to your pushes, so, as stated I think it should be merged... again, thanks... lots of work went into this...\n. @balthisar thanks muchly...\n\nPushed a small C/C++ crossover problems, that gcc has been allowing for FOREVER!, but fails with compilers that still honor this K&R (pure) C rule... nothing really...\n.  @balthisar this is a great patch... a good catch... thanks...\n\nAnd for sure `tidyDocSaveStream` is the best home, since every `save` method uses this internal common output service, be it to a buffer, a file, or just tossed into the air...\n\nDefinitely a version bumper ;=)) one BUG less...\n\nAn absolute **must have**\n. @logistiker this is related to feature request #226, to build a **HTML Cleaner**... \n\nAs you can see, @flok99 added node and attribute deletions to the libtidy API...\n\nSo in your personalised version of `tidy.c` you could add a `deleteStyle(tdoc)`, a `deleteScript(tdoc)`, etc, just before the `status = tidySaveFile( tdoc, htmlfil );`, and it would be done... you would not \nhave to parse the result again...\n\nSo this is easily achieved outside the tidy library. See [test226.cxx](https://github.com/geoffmcl/tidy-test/blob/master/src/test226.cxx) as an example, showing the tidy node tree before and after deletions...\n\nNow, as to whether we take this one step further and add a configuration option like say `--drop-tags any;tag;list` into the tidy library... hmmm, that does feel like destruction of the document... Should libtidy offer such a killer option?\n\nI do not think I personally would be interested in coding such an option, but maybe there are other use cases out there where this would be beneficial? Certainly if a PR was presented, with a sound use case, it would be considered, but no guarantee of inclusion...\n\nThat I will leave open for comment.\n. @logistiker it is trivial to remove any tag... that is agreed ;=))\n\nBut I guess we have a difference on `parse the document`. Even with such an option, this could not be done during what I will call `document parsing` phase - reading the file byte by byte and adding the contents to a (DOM like) node tree.\n\nYou could not get into deleting a tag until **all** of the tag say `<style...> 1000+ lines ` was in the tree... such a removal would have to be done `post document parsing`, where already many filter, many options begin to maniuplate, test, change the tree of nodes, ready for the final phase, output... \n\nLike an option `--show-body-only yes` does not mean we can avoid parsing the doctype and head, even though we know these will never be output...\n\nSo there is no double `parse the document` as you suggest. And such deletions can be just as efficiently handled in `tidy.c` as within the library...\n\nNow, using tidy within say php is a use case for this being a library option... `tidy.c` is not involved... \n\nBut why do you want such a `stripped` document? Now useless for human viewing, what html is about... I know lots of pages that are 100% script, and if you stripped the script tag you have nothing... just curious...\n. Agreed, `almost` a use case ;=))\n\nCertainly a PR would be considered...\n. As no further comment or action since Nov, closing this for now...\n\nPlease feel free to reopen, or raise another issue... thanks...\n. @halindrome thank you for this, and ignoring my band aid kludge approach...\n\nThis look like a good start...\n. @halindrome oops, maybe I acted too quickly here...\n\nFirst a few small patches to compile in windows - MSVC enforces K & R C order of variable declaration before an execuatble statement, and `index()` does not seem to exist in windows, but assume `strchr()` works as well... a small diff -\n\n```\ndiff --git a/src/attrs.c b/src/attrs.c\nindex 3e67889..ff737ac 100644\n--- a/src/attrs.c\n+++ b/src/attrs.c\n@@ -2219,6 +2219,7 @@ void CheckRDFaPrefix ( TidyDocImpl* doc, Node *node, AttVal *attval)\n\n     /* Copy the attribute value so we can split it */\n     if (attval->value) {\n+        tmbstr t, tPtr; /* early context declarations */\n         uint prefixCount = 0;\n         /* isPrefix toggles - start at 1 and change to 0 as we\n          * iterate over the components of the value */\n@@ -2232,9 +2233,8 @@ void CheckRDFaPrefix ( TidyDocImpl* doc, Node *node, AttVal *attval)\n         TY_(tmbstrcpy)( s, attval->value );\n\n         /* iterate over value */\n-        tmbstr tPtr = s;\n+        tPtr = s;\n\n-        tmbstr t;\n         while ( ( t = strtok(tPtr, \" \") ) != NULL ) {\n             tPtr = NULL;\n             if (isPrefix) {\n@@ -2242,7 +2242,7 @@ void CheckRDFaPrefix ( TidyDocImpl* doc, Node *node, AttVal *attval)\n                 /* prefix rules are that it can have any\n                  * character except a colon - that one must be\n                  * at the end */\n-                tmbstr i = index(t, ':') ;\n+                tmbstr i = strchr(t, ':'); /* is this the same as index()? */\n                 if (i == NULL) {\n                     /* no colon - bad! */\n                     TY_(ReportAttrError)( doc, node, attval, BAD_ATTRIBUTE_VALUE);\n```\n\nThat got it compiled in windows... \n\nBut when I ran the 227 tests (alltest.cmd/testall.sh) this seems to break a number of backward compatible doctypes... just the first of the typical different is -\n\n```\ndiff -ua testbase\\msg_1002509.txt temp-5\\msg_1002509.txt\n--- testbase\\msg_1002509.txt    Sat Nov 07 13:17:09 2015\n+++ temp-5\\msg_1002509.txt  Sat Nov 07 14:02:04 2015\n@@ -5,7 +5,7 @@\n line 20 column 2 - Warning: trimming empty \n line 19 column 1 - Warning: trimming empty \n Info: Doctype given is \"-//W3C//DTD HTML 4.01 Frameset//EN\"\n-Info: Document content looks like HTML 4.01 Frameset\n+Info: Document content looks like HTML Proprietary\n 5 warnings, 1 error were found!\n\n This document has errors that must be fixed before\n... plus about 20 more...\n```\n\nNow maybe this can be easily 'fixed', but until I have had time to check further, am reverting this...\n\nSorry should have checked this before merging, but here we are...\n\nMaybe it is time to forget this `backward` compatible html4-- mode we have been trying to maintain? But maybe the fix is easy...\n. @halindrome have narrowed the difference down to the value remaining in `doc->lexer->versions`, in the  `tidyDocRunDiagnostics(doc) -> ReportMarkupVersion(doc) -> ApparentVersion(doc) -> HTMLVersion(doc)` stack... \n\nPreviously, this used to have a value of 0x0e490, but with commit c572e3e3c, has now been 'contrained' to 0x0e000, thus VERS_UNKNOWN is returned, so we now get `HTML Proprietary`...\n\nSpecifically the H41F bit, 128u, 0x80, for this `frameset` document, has been removed! Why? The `doc->lexer->doctype` still has this 0x80 value...\n\nNarrowed it down further to this part of the patch -\n\n```\n        /* Override the settings on these attributes because\n         * they are allowed everywhere by RDFa */\n        if (strcmp(attval->attribute,\"content\") == 0)\n            return (XH50 | HT50);\n        if (strcmp(attval->attribute,\"rel\") == 0)\n            return (XH50 | HT50);\n        if (strcmp(attval->attribute,\"rev\") == 0)\n            return (XH50 | HT50);\n```\n\nWhen the node is `meta`, and the attribute is `content`, version is contrained as above!\n\nNote, since `(lexer->doctype != VERS_HTML5)`, `AdjustTags()` has been called - that is tidy is back to legacy HTML4-- mode, but the above is in `AttributeVersions(node,attval)`, ie no `TidyDocImpl` to check this, and maybe skip this if not html5++ mode... need some simple `isHTML5Mode()` to make it easy...\n\nSo, as suggested, maybe this can be 'fixed', but running out of time tonight to explore further... maybe you can see something simple...\n. @halindrome ok your new changes look good. Need to test them, but again it reads well - with no version constraints created for those additional attributes that are shared html5/html4...\n\nI guess to get a PR back, you now need to revert the revert...\n\nOn reverting a revert, found a few links which I hope help -\nhttp://stackoverflow.com/questions/1078146/re-doing-a-reverted-merge-in-git\n\nWhich even mentions a 2008 `Linus Torvalds` post -\nhttps://www.kernel.org/pub/software/scm/git/docs/howto/revert-a-faulty-merge.txt\n1. I should have tested the merge before merging it. I usually do, but at that moment I was also in the process of updating some `testbase` files, and it all `looked` so good...\n2. Reverting a merge created 2 more unnecessary commits - ugh!\n3. Reverting a reverted merge creates more, but that is where we are now.\n\nBut once you stash and bring your fork back even to htacg, revert the revert, and re-apply your stashed changes on top, I think you should be able to present a new complete PR. I hope!\n\nAdvise if you run into git problems... I am sure there is a way... After the revert, I was able to cherry pick your commit c572e3e3 back, just for more testing, but it was a messy process...\n. @halindrome sorry for the pain!\n\nAs mentioned I had success in directly cherry picking your first commit c572e3e back into my htacg local at HEAD, as a new commit, and am sure I could do the same with the next 0beb6e0... \n\nAs I said your second commit `looks` good, but still to make the time to test it... but after testing, if it works as expected, maybe we can get it **all** into htacg that way... \n\nI guess in your fork, git hub can already 'see' that commit is there, and refuses a PR on an existing commit... as you can see from the git log that c572e3e exists, and is attributed to you... I guess it has to be another commit to revert the reverted... or something...\n\nAnother thought would be maybe if you did these two changes in a branch... and created a PR for that...\n\nAnyway, advise if it continues a problem... I have been holding off on doing a few later things to try to not muddy the water... I would like to get this initial RDFa support in there first...\n. @praiskup sorry for the brief delay on this...\n\nSee @mcepl PR #298 which should fix this...\n. @praiskup @mcepl PR #298 merged, and version bumped - thanks for this fix.\n. @mcepl good to see someone looking after a Fedora build, install and packaging...\n\nAs you have found, and as your build log shows, lines 47-55, none of your `magical` Cmake variables do anything about this ;=()\n\nThe install sub-directory is controlled around [Lines 168+](https://github.com/htacg/tidy-html5/blob/release/5.0.0/CMakeLists.txt#L168). You would need to change the `DESTINATION` to `lib64` if that is where you want it installed...\n\nNow it would be possible to make this a `user` option, like say -\n\n```\nif (NOT LIB_INSTALL_DIR)\n    set(LIB_INSTALL_DIR lib)\nendif ()\n```\n\nThen you could add an option `-DLIB_INSTALL_DIR:PATH=lib64`. And likewise perhaps also a `-DBIN_INSTALL_DIR=bin`...\n\nSo then we could have -\n\n```\n    install(TARGETS ${name}\n        RUNTIME DESTINATION ${BIN_INSTALL_DIR}\n        ARCHIVE DESTINATION ${LIB_INSTALL_DIR}\n        LIBRARY DESTINATION ${LIB_INSTALL_DIR}\n        )    \n```\n\nNow this would then be relative to a `-DCMAKE_INSTALL_PREFIX=/usr`, which I note you do add...\n\nAnd IIRC if the user gives absolute paths here, like `-DLIB_INSTALL_DIR=/usr/lib64`, then cmake will use that absolute path... need to experiment with that...\n\nSo this could be fixed, but we would be unlikely to push such a small cmake only fix back into `release/5.0.0`, making it `release/5.0.1`, especially since I hope we will have another release within a few months...\n\nAnother comments on reading your build log, is concerning adding `-DNDEBUG` to the compile. CMake **will** add this automatically if you set the `-DCMAKE_BUILD_TYPE=Release`... replacing 3 options with one...\n\nOops, but then I note you already have `-DCMAKE_BUILD_TYPE:STRING=Debug`! Why would you want any `Debug` code in a distribution package? Specifically in tidy the only unix `debug` code is quite a number of `asserts`, which compile to nothing is `-DNDEBUG` is added...\n\nAnd note the `-DBUILD_SHARED_LIBS:BOOL=ON` defaults to `ON` so no need to add that...\n\nI like your `-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON` option. This adds a lot of important information to the build log... I also use this all the time...\n\nBut that is getting away from the main issue here about the library install path...\n\nSo, for 5.0.0 building you will have to manually adjust that, and for the future, I will certainly look at adding the above `install` path user variables, like I have seen in several other cmake projects...\n. @mcepl your `CMakeLists.txt` patch looks fine... Assume you have tested it and can now build the rpm? \n\nIf it works, then for sure a PR would be accepted against the current 'master', and be there for the next release....\n\nBut you **must** remove the patch to `build/documentation/build_docs.sh`. That folder will longer exists, and I think this has been fixed the new `documentation/build_docs.sh`, if there is one...\n\n@balthisar is presently working on this in the `tidy_doc_cleanup` branch, which, when completed, tested, will be merged to `master`...\n\nAlso test/testone.sh has been fixed in `master` some time ago...\n\nIn any case, I know it is extra work, but we prefer PRs be only about 1 issue at a time. \n\nThis is actually quite difficult in github. It collects all commits and puts them in the one PR. It seems the only (silly!) way around this is to put each fix in a new branch... extra work...\n\nBut for sure, let's have a flexible CMake install locations... and maybe we should also consider an  `${INC_INSTALL_DIR}` for the headers. Someone might like them installed to say `include/tidy`, etc...\n\nOops, just noted @rdieter added PR #300 which includes the static library... so this looks good also... \nat least before we consider GNUInstallDirs... must experiment with this...\n\nConcerning gcc debug symbols, IIRC `-DENABLE_DEBUG_SYMBOLS:BOOL=TRUE` will also add the -g option, need to check, but why add debug symbols only to strip them later? This is done very differently in WIN32.\n\nAnother thing noted in your log was that you run `testall.sh`. Nothing particularly wrong with that, but you do realise these are not any sort of `unit testing` in the usual sense. It is quite a collection of tests, about 228, that we have tagged as `regression` tests... and would have been run before we made that release... so do not expect distribution builders would need to run them...\n\nThis testing process is **not** yet well documented, but when a code change is done, a developer is expected to have run these tests before submitting a PR. To check for regressions... And if they forget I try to do it before the merge...\n\nAnd in any case the `testall.sh` misses a final important part of the test, and that is to compare the results written to `tmp` with the `testbase` - a simple `$ diff -ua testbase tmp`. \n\nBut be aware there can be some differences which have to be accepted, like the different path separators between unix and windows... if we adjust `testbase` for one os, then there are differences in the other... we are still pondering what to do about this... so do not wildly publicise this until it is solved somehow... and better documented... however some improvements have been done since that 5.0.0 release...\n\nOn the other hand, you could add that last `diff` to your build log just to make sure the 3 or 4 presently expected difference are on our radar. See #266 - thanks...\n. @mcepl ok that is neat you offer both a `release` and a `-debuginfo` package to run with `gdb`. That would really help a user track down a bug, and provide a fix... \n\nMaybe we should consider that for Ubuntu and Windows... bump the binary packages offered...\n\n> don't underestimate niceness of running tests on weird architectures\n\nWell we don't, but what we did reject was using Travis-CI directly attached to the htacg tidy-html5 repo. I tried to encourage @vielmetti to continue this using his fork, and asked for more information on some of the test results to see what could be done... sadly he has chosen not to reply...\n\nAnd like you have done with a tidy package for `armv7hl`, `i686` and `x86_64` we did want to develop a `naming` scheme, see bottom of #258, but it lapsed due to lack of feed back... need support to develop a cmake test to have something like `tidy-$VERSION-$CPU-$BITNESS.deb`\n\nAs you said, Oh well, c\u2019est la vie ;=))\n. @mcepl distros have done this for years...\n\nAbsolutely, could not agree more... at least on the limited perception of a mainly \"Windows\" user, with a token `linux` system, for building, testing...\n\nIn windows it is a little more difficult, in that you need to also distribute a `debug` library, and  including the separate `*.dbf` file, for the symbols... not easily done, but can be achieved... some projects have tried this with varying success...\n\nHowever, due to the failure rate of those projects I have worked on, I do not recommend this path for tidy windows, but maybe there is a CPack option that is easily available for unix? Maybe there is a way to also store the `debug` version of a unix binary as well... That I would like to hear about... a PR or patch appreciated...\n\nSo that purely a windows difficulty has got nothing to do with what is possible using CMake CPack in unix. Maybe it is possible to also generate a `-debuginfo` version for distribution... That I would be interested to hear about... a PR or patch welcome...\n\nBut what has this to do with your subject? - **install libraries into /usr/lib64** - this seems to has been adresseed, and I hope closed? Is this still **closed**?\n\nOT: It certainly does seem we should expand the naming convention of a distribution binaries, that is for sure, and we **seek** ideas on how to do this... maybe add say a $DBG versions?... several other issues begin to address this... your comments in those would be much appreciated.\n. @mcepl with #300 merged, and no new comments in nearly 3 weeks, assume this can be closed...\n\nPlease feel free to re-open, or add a new issue... thanks.\n. @mcepl as far as I remember the only place libtidy uses `exit` is in the default memory allocators/re-allocators... there is no way such a memory service can return an error code, a NULL in this case, to the caller... nor can all callers to the service be adjusted to politely 'exit', or do something else, if a NULL passed back... so this stays, discouraged or not!\n\nHowever, if some other software **uses** the libtidy, it can choose to replace the default allocators, with its own allocators, see `tidyCreateWithAllocator`, and choose to do what it wants if the OS returns a NULL... So it is possible for such a **user** of libtidy to `fix` this in their own way.\n\nAs to be expected there may be others in the `Debug` builds... that is specifically if `-DNDEBUG` is **not** defined in the compile, there are quite a number of `asserts` in the library, which I think also lead to an `exit` if fired. Of course, none should... But by specifying `-DCMAKE_BUILD_TYPE=Release` these assert compile to nothing.\n\nAnd there are some more in the WIN32 Debug build, in the sprtf.c module. But this module is again ONLY used in the windows Debug build... and not part of the Release library...\n\nSo at this time I do **not** see this as a 'bug' in the library, but will leave the issue open a while for further comment, if any...\n. @mcepl I have now had a chance to **carefully** search the full library sources, and can confirm the only `exit(2)` is in the `defaultPanic()` service.\n\nAnd the documentation for [Memory Allocation](http://api.html-tidy.org/tidy/tidylib_api_5.0.0/group__Memory.html#details) makes specific mention of this **exit** IIF the default **panic** is used. And adds a clear note from tidy.h:\n\n> For applications in which it is unacceptable to abort in the case of memory allocation, then the panic function can be replaced with one which longjmps() out of the tidy code. For this to clean up completely, you should be careful not to use any tidy methods that open files as these will not be closed before panic() is called.\n\nIs there not a way to suppress this warning?\n\nAnyway, closing this for now... thanks...\n. @mcepl as you point out in #295 the local utility `tab2space` is **not** presently installed, so I do not think we need a man page for it! See the cmake comment on [LN192](https://github.com/htacg/tidy-html5/blob/release/5.0.0/CMakeLists.txt#L192)\n\nIn other words we are **not** offering a universal utility to the world at large, supported by us like tidy, so the `BUILD_TAB2SPACE` option should be `off`, the default, when building distribution packages.\n\nIt is only for tidy developers who might have not adjusted their editors to use spaces instead of tabs... it was a quick way to convert the file to conform to the tidy `no tabs` code style.\n\nI would go on to add, while the previous SF tidy maintainers had a `horror` of tabs in the source, I feel the current maintainers, at least me, are not so strict. And at this moment there are a few tabs in one or two source files... but there are other reasons we do not immediately run them through this purely local utility...\n\nOf course, I still try to check source code changes by others for massive tabulation, and maybe fix that, but like I say, does not seem so important these days...\n\nSo thanks for the PR, but I think not at this time...\n\nWill leave this open for a while in case others want to comment...\n. @mcepl ok, had to look up what is a `Pythonista` ;=))\n\nOf all the code/scripts I have written, over so many years, Python is probably the least... but with its `indent` **has** meaning, to denote context, I can see why `tabs` may not be your friend.\n\nI too thought this utility **a bit excessive**, so when I wrote the CMake script, I made it optional, and defaulted it to `OFF`.\n\nAnd as mentioned directly in #298, just a brief delay on what `looks` like a good patch... but now merged...\n\nSo, am closing this. Please feel free to re-open, or comment\n. @mcepl certainly removing it entirely is an option... but wait, it is an option already ;=))\n. @mcepl sorry for the brief delay on this...\n\nA few things... I was waiting for another event, but it looks like that may be delayed, and I have been looking for a way to `test` this... seems difficult in my english system...\n\nBut the patch looks simple and good, so hope to add it shorly... patience...\n. @mcepl I have been trying to test this, but maybe you can help me?\n\nA little off topic, but what language is your OS running in? How are you able to generate, and display that chinese? Do you have a way to input, write utf-8? I know the two character used in the example are the word chinese, zhongw\u00e9n, the utf-8 hex sequence E4 B8 AD E6 96 87...\n\nBut how do you enter these? What is your `local`, or `codepage`? Did you have to install any special fonts?\n\nWay, WAY back in history, in the 80's, I assisted in implementing chinese, japanese, korean, ... in an IBM PC program. But in that case we had an input method driver that took over the keyboard, and essentially allowed character selection... so have some familiarity with these languages...\n\nHow can I do that in Ubuntu 14.04? And/or Windows 7? Any ideas?\n. @mcepl ok, copy and paste works in my Ubuntu linux, but not in windows where it already mangles the name...\n\nAnyway, look fixed... thanks...\n. @Beep6581 I guess the option you are looking for is `--drop-empty-elements no`! It defaults to `yes`. See [quickref](http://api.html-tidy.org/tidy/quickref_5.0.0.html#drop-empty-elements)\n\nYou may also want `--drop-empty-paras no` to keep those also... The other two `drop` options default to `no`...\n\nHTH.\n. @Beep6581 agreed the -h or -? help options only show a relatively small number to the available options - sort of like a brief help - but at the bottom, under `Miscellanious`, there are `-help-config`, and `-show-config`, which output the some 95 config options...\n\nThere are also some xml outputs, like `-xml-config`... this is used, with `xsltproc` to produce the `$ man tidy` page, which has both. It commences with the brief help, and then lists all config options... \n\nSo if you are building from git source, and have `xsltproc` installed, and finished with `[sudo] make install`, then you have a `$ man tidy` with the latest, while some of our online help pages may not be...\n\nIt is agreed perhaps we should allow the most common unix `--help`, but should it just give the brief help, or the config help, or both? I am certainly not totally happy that at present all you see is `Config: unknown option: help`, and you are in stdin reading mode, needing like Ctrl+c to exit... will try to find time to look at this... unless someone beats me to it and offers a PR...\n\nMeantime, I hope the `drop-empty-elements` works for you... and we can close this...\n. @Beep6581 well it is hard to know what to emphasise, what is brief help, what is full help, etc, and we may all differ in that decision anyway, but the words there near the bottom of the -? help seem clear that there is **more** to see ;=))\n\n```\nUse --optionX valueX for any configuration option \"optionX\" with argument\n\"valueX\". For a list of the configuration options, use \"-help-config\" or refer\nto the man page.\n```\n\nBut as mentioned will try initially to include `--help` to be the same as `-help`, `-h`, `-?` as a  double `-` option exception that has a long tradition, at least in unix... And it seems we already except `--version` being the same as `-v`\n\nAnd I personally do not know the exact reason that set were chosen for the brief help, but I do not think `popularity` was one of them ;=))\n\nBut using any new tool, utility, ... I generally do `--help` and `--version` and am disappointed, even annoyed, if I do not get a suitable response... \n. @Beep6581 have pushed a small patch to version 5.1.21... turned out to be very easy, and we already do it for a number of options... thanks for this urging...\n\nIf you have any specific suggestions for improving the `--help` output would certainly listen...\n\nAnyway, given that you have now found the full list of configeration options I guess we can close this...\n\nFeel free to re-open, or add a new isssue - thanks.\n. @rdieter thanks for this... will certainly look at it...\n\nWhat about the idea of adding INC_INSTALL_DIR?\n. @rdieter thanks...\n\n@mcepl what do you think of this?\n\nSeems in your case would only need to add `-DLIB_SUFFIX=64`, which you already have...\n. @rdieter @mcepl now merged... thanks...\n\nAs this in only a cmake change, did not bump the version\n. @benkasminbullock thanks for the report... yes that sample code also had another error, namely that the include file `buffio.h` is now `tidybuffio.h`...\n\nRefresh the page and it should be fixed... thanks...\n. @benkasminbullock, yes, feels nicer if the opener does the closing... thanks...\n. @benkasminbullock ok, it looks like it is trying to include `` because `HAS_FUTIME` is defined as 1.\n\n```\ntidy-html5.h:446:23: fatal error: sys/utime.h: No such file or directory`\n```\n\nIt seems tidy-html5.h header is generated by make-c-file.pl, but looks like a simple combining of the tidy headers tidyplatform.h, tidyenum.h, tidy.h, and tidybuffio.h...\n\nDoes the gnukfreebsd platform have `` instead?\n\nIf yes, then we need a way to `detect` the OS... \n\nIn tidyplatform.h we already have several BSD_BASED_OS, namely `__FreeBSD__`, `__NetBSD__`, `__OpenBSD__`, `__DragonFly__`, `__MINT__`, `__bsdi__`.\n\nWhat would be the equivalent in gnukfreebsd? And `HAS_FUTIME` could be set to 0.\n\nI further assume `PRESERVE_FILE_TIMES` is set to 1 in this platform. Is it? \n\nIf this option is off then maybe we do not need the utime() functions, or perhaps there is an aternative that can set the file time appropriately...\n\nOf course I need big **HELP** to fix this since I do not have access to a gnukfreebsd box to test...\n. @benkasminbullock I have now looked at the `make-c-file.pl` found at [HTML-Valid-0.00_01](http://search.cpan.org/~bkb/HTML-Valid-0.00_01/MANIFEST), and you seem to have understood this, and there is a `sub print_h_defines ($out);` which does set -\n\n```\n#define PRESERVE_FILE_TIMES 0\n#define HAS_FUTIME 0\n```\n\nThis is set at the top, and maybe `tidybuffio.h` just needs to be adjusted to watch if these have already been so defined, and not reset their value... and does not need to include either `` nor `` at all...\n\nShould be a simple fix...\n. @benkasminbullock ok, you do not have a gnuk/freebsd, nor I presume a Darwin box for #305. And to me these small build problems can only be addressed by a person with that OS, and who is willing to conduct tests, and help in a fix...\n\nThere seems no way I could **guess** what needs to be done from these simple error reports, without the ability to test and confirm... We do want to support just about **every** platform, including `gnukfreebsd` and `darwin`, but I can only test in the platforms I have.\n\nSo this HTML Tidy `issues` does **not** seem like the right place for these reports. \n1. First there could be **many**, and would increase if such [CPAN Testers](http://matrix.cpantesters.org/?dist=HTML-Valid+0.00_01) and/or [meta::cpan](https://metacpan.org/source/BKB/HTML-Valid-0.00_02) extend to say [HTML-Tidy-1.56](https://metacpan.org/pod/HTML::Tidy), and any others using HTML Tidy library.\n2. Could be open for a **long** time, until the above mentioned developer with that particular setup comes forward, thus pollutes the list.\n3. Some of the results seem inconsistent. `HTML-Valid+0.00_01` reports `darwin` as green, `gnukfreedsb` orange, and `HTML-Valid 0.00_02` the reverse, albeit different versions?\n\nSo I have moved these to one of our public list, say https://lists.w3.org/Archives/Public/html-tidy/ under the topic like `CPAN Tester Error Reports` - see https://lists.w3.org/Archives/Public/html-tidy/2015OctDec/0007.html\n\nAccordingly, will close this and #305... as stated thanks for reporting...\n. @halindrome thanks...\n. @halindrome the trouble was my too quick reversion...\n\nThis time I ran all the tests first, and while there is one difference, it is nothing to do with this...\n\nAnyway, it is in there now so we can go forward... thanks...\n\nYou will note I have bumped the version to 5.1.22 for this initial support...\n. @benkasminbullock it certainly does... have pushed a fix to `master`...\n\nSince it is not really a bug, will not bother to cherry pick the commit back into the 5.0.0 release... but it will be there for the future...\n\nThanks for catching this...\n. @benkasminbullock like #302, see https://lists.w3.org/Archives/Public/html-tidy/2015OctDec/0007.html\n\nIf you find more, please add them to the above list... thanks for reporting...\n. @benkasminbullock thanks for spotting this!\n\nIf is a clear case where adding a `cast` can mask what is obviously a `typo`. Of course it shows up now because in 64-but systems a pointer (ctmbstr) is 64-bits, while on most systems a uint will be 32-bits only.\n\nLooking back in history, this `cast` is there in the 2009 cvs source, so was inherited by this htacg repo way back. Sooo it has been waiting for a long time for someone to spot it.\n\nIf you get a chance, pull the latest 5.1.24 and re-test... and maybe close this... thanks\n. @benkasminbullock have added it to my [repo](https://github.com/geoffmcl/tidy-test) of tidy test apps... thanks...\n. @benkasminbullock thanks for reporting... it certainly looks like a **bug** has crept in ;=((\n\nRunning very close to your exact sample, my local only `input5\\in_307.html`, through tidy 5.1.22+ yields no warning or error! And the output has the same nested anchors...\n\nRunning it through tidy-cvs (circa 2009) will yield -\n\n```\nline 8 column 1 - Warning: missing  before \nline 8 column 76 - Warning: discarding unexpected \n```\n\nAnd the output will be corrected to -\n\n```\nmini monkey\n```\n\nNote I added one space between `mini` and `monkey`, which I want preserved...\n\nI too have trouble deciphering W3C documents, fully understanding, so will let others comment on that. But I too note the W3C validator also flags an `Error`! So for now marking it as a bug!\n\nIn fact I now note we have an existing regression test for this! \n\nTest 427827. However this does not flag a problem because someone, probably me!, has put the nested anchor output in `testbase`. This bug was reported way back in [2001](https://sourceforge.net/p/tidy/bugs/28/), and **fixed** in July of that year.\n\nThere are some clues in the text of the above bug report, and I hope to use them to again fix 2015 tidy, unless someone else beat me to it with a PR or patch, or cites W3C documentation that specifically allows **nested anchors**.\n. @benkasminbullock have found a fix for this... \n\nEssentially the 23 Aug 00 427827 [bugs/28](https://sourceforge.net/p/tidy/bugs/28/) fix copied from ParseInline(), which used to handle anchors, and still does if the document has a legacy html4-- doctype, to ParseBlock(), which now handles anchors in html5++ mode, but will hold off pushing a few more days in case someone can cite W3C documentation that specifically allows **nested anchors**.\n\nBut all my W3C reading so far on anchors indicates they represent a `link` in the document, and thus nested anchors would make no sense. Browsers tend to display it correctly, but the W3C validator spits out an error.\n\nThis fix also includes changing the `testbase` files, out_427827.html and msg_427827.txt to match the current output. And actually found a second case 431874, [bugs/53](https://sourceforge.net/p/tidy/bugs/53/), 2001-06-10, marked as a duplicate, with similar nested anchors, files also now fixed.\n\nThe current full diff can be found at http://geoffair.org/tmp/issue307.diff if you want to try it meantime...\n. @benkasminbullock hmmm, and assuming the spec has not changed in nearly 15 years since that post ;=))\n\nThe reason this bug re-arrived was due to a HTML5 **change** in the content of an anchor. \n\nPreviously it only allowed `inline` or [phrasing](http://www.w3.org/TR/html-markup/terminology.html#phrasing-content) content, but can now have `block` or [flow](http://www.w3.org/TR/html-markup/common-models.html#common.elem.flow) content. See #167 and #169 and the commits for that...\n\nBut I have now found in a relatively recent document [a.html](http://www.w3.org/TR/html-markup/a.html) a clear statement **`The interactive element a must not appear as a descendant of the a element`**. As repeated that makes sense.\n\nSo have pushed this change to `master`, and bump the version to 5.1.25.\n\nHope you get a chance to pull, test, and close this if fixed... thanks...\n. @benkasminbullock no further comments in nearly 3 weeks, so assume this can be closed?\n\nPlease feel free to re-open, or open a new issue... thanks.\n. @tspivey thanks for narrowing this down to a very simple case, and yes I can repeat it in windows.\n\nThis seems a very nasty **bug**!\n\nWill look at it soonest, unless you or someone else beats me to it with a PR or a patch.\n. @CMD Thanks Chris for the second small sample... and like the first this also triggers the same  **assert**!\n\nI have looked a little using Tyler's simple \"\" sample, and at the moment of the assert the node is of course the `` end tag, but the parent is of course the `` tag, so we have an assert! They are not the same, but **why should they be**.\n\nSo what I can **NOT** figure out is what is the reason for having this assert at all! At this point it seems that particular assert could just be **removed** and there would be no problem, as it is when you compile the `Release` configuration.\n\nEven the first of the two warnings, here in ParseNamespace, does not make good sense -\n1. line 1 column 6 - line 1 column 6 - Warning: replacing unexpected g by ``\n2. line 1 column 12 - line 1 column 12 - Warning: discarding unexpected ``\n\nFurther, the second warning DISCARDING_UNEXPECTED is not acted on, in that I can not see the node is freed, and that first warning NON_MATCHING_ENDTAG, is used 4 times in parser.c, and in none of the other cases have such an assert. And simply tidy is **not** replacing an unexpected g by ``.\n\nThis first warning is for things like `bold`, where tidy assumes the second `` is just a user typo, and replaces it with a ``...\n\nThere is another clear case in ParseInline, which separates the 2 warnings, and makes good sense -\n\n```\n    if ( node->tag == element->tag )\n    {\n        TY_(ReportError)(doc, element, node, NON_MATCHING_ENDTAG );\n        TY_(FreeNode)( doc, node);\n    }\n    else\n    {\n        TY_(ReportError)(doc, element, node, MISSING_ENDTAG_BEFORE );\n        TY_(UngetToken)( doc );\n    }\n```\n\nNote, this is one warning or the other, not together, depending on whether the tags are equal, or not...\n\nI need to think more about this... as usual, when in doubt, I do nothing!!!\n\nBut meantime can I suggest you use the option `-DCMAKE_BUILD_TYPE=Release` when building libtidy, so that there are no asserts...\n\nAnd would appreciate any other comments on what is **the best thing to do here** for the Debug version, and to fix what looks like a mess...\n. @tspivey, @CMD, Ok, also tried the second case, and it seems the same things...\n\nSo rather than do nothing have pushed the following patch to a `issue-308` branch for testing...\n\n```\ndiff --git a/src/parser.c b/src/parser.c\nindex 583b2ef..19ecf54 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -1587,10 +1587,11 @@ void TY_(ParseNamespace)(TidyDocImpl* doc, Node *basenode, GetTokenMode mode)\n            else\n            {\n                /* unmatched close tag: report an error and discard */\n-               TY_(ReportError)(doc, parent, node, NON_MATCHING_ENDTAG);\n+               /* TY_(ReportError)(doc, parent, node, NON_MATCHING_ENDTAG); Issue #308 - Seems wrong warning! */\n                TY_(ReportError)(doc, parent, node, DISCARDING_UNEXPECTED);\n                assert(parent);\n-               assert(parent->tag != node->tag);\n+               /* assert(parent->tag != node->tag); Issue #308 - Seems would always be true! */\n+                TY_(FreeNode)( doc, node); /* Issue #308 - Discard unexpected end tag memory */\n            }\n        }\n        else if (node->type == StartTag)\n```\n\nAs can be seen have decided -\n1. the NON_MATCHING_ENDTAG seems the wrong warning here!\n2. removed the assert which seems would just about always be true\n3. and freed the discarded tag, to free the memory.\n\nAppreciated if you get a chance to checkout this branch `issue-308` and test... thanks...\n. @tspivey, @CMD, now merged `issue-308` branch to `master` and will get around to deleting it... bumped version to 5.1.32\n\nHopefully can close this as `fixed`... but feel free to re-open or open a new issue...\n. @Janghou yes I can see the problem, but how to fix it?\n\nIf seems a version `20091223cvs-1.2ubuntu1.1` is for some reason considered later than `5.1.14`!\n\nNeed **help** for a unix/linux guru. How do we make `5.1.14` appear to be the latest, and greatest, which it is?\n. @Janghou glad you found a solution... generate your own deb using a higher version number! Ingenious...\n\n> Probably: (20091223 > 5.1.14)\n\nWell, simply back in that epoc that was the distribution versioning used by the then maintainers. As far as I am aware none of those individuals are presently active in tidy development, although would welcome them back...\n\nSo I do not think we, htacg, should consider going back to using that `date` versioning, just to remove an `update` warning, but that is a possibility... and this is **tidy**, we are **tidy**, so that name has to stay. It is meant to replace the old with the new...\n\nOf course what I hope is the Ubuntu distribution, all debian repositories, etc, are updated to the latest tidy, using the current versioning, some time soon... elsewhere we have some discussion on how to help distributions easily update. I hope that is being worked on too... read some things like `proper` tagging, but need some **help** to get this right!\n\nAnything you can do, like filing say a ubuntu distribution [bug](https://launchpad.net/ubuntu/+filebug/?no-redirect)!, which it sort of is, would be most appreciated.\n. @Janghou well at this time this **is** canonical tidy, as that [655200](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=655200) bug notes at the bottom. \n\nSee the tidy [history](http://www.html-tidy.org/#history) page for the timeline...\n\nThere was a time when we did consider a split to handle legacy html4--, and modern html5++, but now modern htacg tidy handles **BOTH** without problems, so we tossed the `5`, and kept both the package and binary names of `tidy`. There is only **one** tidy!\n\nI have been working with tidy since 2006/7, and am a developer on the SF CVS site, and with this [HTACG](http://www.htacg.org/) group. All development on the SF site ceased around 2009, and we hope to get around to updating that web site, and deciding what to do about that old CVS source **soon**!\n\nThank you for the [question](https://answers.launchpad.net/ubuntu/+question/274893) and you seems to have a solution that worked for you, but not at all sure if this means the debian repo will be updated?\n\nConcerning PHP, yes @skynet has successfully compiled tidy with PHP - see #190, and others...\n\nCoincidently I think we should be considering a new tidy release around mid-december 2015. The last 5.0.0 was in June. The current `master` is at 5.1.24 with lots of fixes and features... very `stable`...\n\nAnd that would certainly be the time to make a concerted effort to get tidy distributed and into repos, etc... so thanks for the [link](https://www.debian.org/doc/manuals/distribute-deb/distribute-deb.html)... we alreayd have the package building built into CMakeLists.txt...\n. @Janghou thanks for your help on this one...\n\nI am sure you now understand why we do not want to `break` our current, more or less [Semantic](http://semver.org/), versioning system, just to avoid a warning about a very old distribution.\n\nBut can you document exactly what you did, just in case others run into this ugly `overwrite` problem!\n\nWas it simply that you **altered** the `version.txt` file prior do doing `$ make package`, or `$ [sudo] make install`? or was it more complicated than that? \n\nAs a separate question why do you use `$ [sudo] checkinstall`? The Makefile generated by cmake already has **both** `install` and `package` targets... Or does `checkinstall` do more, or something different?  Have never used it...\n\nBut if it was just the `version.txt`, you changed it to what exactly? It looks like you just changed the first line to `20151118`. Was that it? If it was more complicated can you describe the steps.\n\nJust to document this so even I can understand ;=))\n\nAnd we will continue to try to work with distros... you may have noted I re-opened #120 for this purpose...\n\nThanks again...\n. @Janghou thanks for explaining what you did... not sure I undestood exactly, but hopefully it will help others who run into this problem...\n\nAs replied on https://bugs.launchpad.net/ubuntu/+source/tidy/+bug/1029209 \nwe are doing our best to get this issue fully resolved...\n\nAnd have an outstanding [question](https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623) on the issue.\n\nHopefully soon...\n. @behnam yes, it seems for package distribution repos, that is the way to make sure an update is later than the previous, by adding an epoch...\n\nMaybe @balthisar will be more successful than I in doing something like that to the binaries we post to on our  [site](http://binaries.html-tidy.org/), but as he suggests, maybe the CMake/CPack we use to build the binaries does not easily support this. And why would we add an epoch anyway?\n\nAnd @Janghou has documented how he was able to proceed...\n\nI think the packages built by maintainers of say the Ubuntu, Debian, etc distros are built from source using more 'traditional' package building processes, and they **can** add that epoch, if it is needed, to ensure a package will be seen as later, even though it has what appears to be a lesser release version than they have already released.\n\nNow we **are** working hard to get **`Tidy`** updated in the various repos! See #324, https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623 and https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=655200... Anything you can do to nudge this process along would be **much** appreciated... thanks... \n\nBut as indicated I am not sure we could, or should! begin adding an `epoch` to our binary distributions... And now that we have #324 open directly addressing this will close this...\n. @hermanbergwerf thanks for filling out the issue... a feature request to support [jinja](http://jinja.pocoo.org/) syntax.\n\nOne quick thing, like `--show-body-only yes`, there is another option, `--fix-uri no`, you can try, which will at least stop tidy messing up the URI.\n\nOne minor improvement in the message output only. I guess if a user has added `--fix-uri no` then tidy should **not** output the big blurb \"URIs must be properly escaped, ...\". The user has already said \"no uri fix needed\", but is quite minor...\n\nAs for putting `{% %}`, etc on a new line, I was hoping `--vertical-space yes` might help. Internally this is called `classic` tidy mode, and increases the vertical spaces. Well, while it did push `{% endblock %}` to a newline, but it left most the others as is, and added some more blank newlines...\n\nAnd just experimented on running tidy on some of our site yaml templates, see `gh-pages` branch, with quite **poor** results, even using the above options. For sure one main thing is not putting `{% %}`, etc on a new line, but their were lots of other re-lining problems, issues! Tidy is not Python based!\n\nSo the question seems to be **\"Should HTML Tidy become a HTML/yaml/jinja/... aware tidy?\"**\n\nMy first instinct is why not? And would certainly consider a PR or patch, provided it/they did not displace one hair of standard HTML parsing and output, so that would probably mean another option, options, or something... \n\nOTOH are these `templates` really HTML? They can be after the `engine` has run, but before that they are more like a script to be passed to the correct parser, and maybe that is not Tidy! I guess I did not fully understand your use case involving [sphinx-doc](http://sphinx-doc.org/)?\n\nWhat do others think?\n. @benkasminbullock well is that not what the **`--show-body-only yes`** does? Allows tidy to operate on a HTML fragment, and suppresses warnings about say a missing doctype, head or title...\n\nSo, for example, in what way would a say `--fragment yes/no` option be different?\n\nAnd there is no way a parser can `bypass` checking something. Tidy has to parse the complete data stream, as html... Once the data stream is in a tidy node tree, only then can it skip to the body node, and ouput that alone... \n\nAnother app, different to tidy.c, using **`libtidy`** API could choose any criteria it wanted... the API allows that app to iterate over the node tree, and output what it wanted... See the [Document Tree](http://api.html-tidy.org/tidy/tidylib_api_5.0.0/group__Tree.html) group, and others... For instance I have played with a `html2json` output, which of course does not use the `pprint` in tidy...\n\nSo even if you wanted to word say a `--fragment` option different to the current wording of [TidyBodyOnly](http://api.html-tidy.org/tidy/quickref_5.0.0.html#show-body-only) it seems to me it amounts to the same thing! \n\nAnd of course we would always entertain suggested improvements to the API documentation. Do you have a specific suggestion here?\n. @hermanbergwerf, @benkasminbullock, @zanona, well a **solution** popped up when researching a fix #396 ... simply put, HTML5 a `` is allowed to have **0 or more li**, so needed to fix some things when still in hmlt5 mode... and that seems to have **helped** here... \n\nThat 5.1.52-test1 outputs seems to matches some expectations of, **to format Jinja templates correctly**? \n\nIn fact, I think we may be **there** ;=)) the first time since Tidy-2000!\n\nAs previously expressed, the first must set option `--fix-uri no`, but the second needs no special config, except if you want to avoid the html noise, then set `--show-body-only yes`...\n\nInput 1:\n\n``` html\nIssue #310 - needs cfg --fix-uri no\n{% extends \"layout.html\" %}\n{% block body %}\n  \n  {% for user in users %}\n    {{ user.username }}\n  {% endfor %}\n  \n{% endblock %}\n```\n\nOutput 1:\n\n``` html\nhtml\n\n\n\nIssue #310 - needs cfg --fix-uri no\n\n\n  {% extends \"layout.html\" %} {% block body %}\n  \n    {% for user in users %}\n    \n{{ user.username }}\n{% endfor %}\n  {% endblock %}\n\n\n```\n\nInput 2:\n\n``` html\nIssue #310-1 cfg --show-body-only yes\n\n  {{~it.array :value}}\n    {{=value}}\n  {{~}}\n\n```\n\nOuput 2:\n\n``` html\n\n  {{~it.array :value}}\n  {{=value}}{{~}}\n\n```\n\nI can see a few **relining** and/or **indenting** issues, but this should be the subject of a **new** issue... that is `Pretty Printing`...\n\nBug #396 is in parsing the stream, and is a **prerequisite** to get the above output...\n\nBut it seems a start of maybe closing this issue...\n\nSo, it is a question of when will that **`issue-396`** branch be available, even for testing... I will try to submit my test code within a week, but that will shortly be interrupted by beginning the process of a 5.2 release... it will certainly be there in 5.3.0, hopefully some time soon... maybe @rtack is working on it too..\n\nAccordingly, adjusting this milestone to 5.3... look forward to comments, feedback, ideas on closing this... thanks...\n. @zanona seems I did **not** explain well that a **fix** for this only exists in a **test** fork/branch of tidy at the moment... version 5.1.52-test1... @rtack is working on providing a PR for this... @rtack, as @balthisar requested, could you add a normal PR, and I will deal with it...\n\n@zanona you need to wait for that... **or** you could build that **test1** version, by applying the patch shown in #396, **or** clone the [issue-396](https://github.com/rtack/tidy-html5/tree/issue-396) branch from the @rtack fork...\n\nThis patch is **nothing** to do with a Jinja template! \n\nIt is merely a patch to allow a `` element to have 0 or more li children, plus other children... that's all... but this leaves the Jinga template sample code un-touched... well some re-lining and maybe some indenting slightly differently... the important thing is **no warning** about a missing ``, and more importantly, no addition of an implicit ``... in the output...\n\nIf the Jinga engine does have problems with the **re-lining and/or indenting**, then this should be another `Pretty Print` issues... and if Jinga has problems with other than the `` elements, then these should be a new issue...\n\nBut if the Jinga engine has no problem with this, then with this **patch**, maybe this issue is, by consequence, closed... we have to wait and see... thanks...\n. @zanona that above PR has now been merged to `master`... pull the latest 5.3.1 and give it a try...\n\nAs explained, maybe this unrelated `` patch has done something for this issue...\n\nPlease check and advise... thanks...\n. On re-testing this this seems closed in master 5.3.15, so closing this...\n\nPlease feel free to re-open, or present a new issue... thanks.... @slavafomin hello back, and thanks for the `thanks`... always appreciated...\n\nI know **nothing** about `gulp-tidy` nor `Twig (Jinja2)`, and in re-reading **all** the above **closed** issue, HTML Tidy is primarily intended for **[X]HTML**... and can **not** get into `Jinja templates` parsing... sorry...\n\nFurther, if you are using Tidy `5.2.0`, then it seems some changes that may **assist** in this issue only occurred in `5.3.15`, and later, so perhaps you will get better results using release Tidy `5.4.0`, or **later**...  the latest `next` branch is at `5.5.31`...\n\nSo again thanks for your comment, but it is **unclear** what you want Tidy to do **more**... please explain... thanks...\n. @guzur glad to hear of someone trying MinGW build in Windows... please to meet you and I will try to help where I can... In fact I would try to install MinGW in my Windows 7 64-bit, and would hope that I can generate 32 and 64 bit binaries from it.\n\nBut first please help me with a few things -\n\nA: What is the correct C/C++ define for MinGW? I have seen `#if defined( __MINGW32__ )` in other sources. Is this correct?\n\nIf it is then the line ver 195 iine in mappedio.c `#if defined(_MSC_VER) && (_MSC_VER < 1300)` could be changed to `#if (defined(_MSC_VER) && (_MSC_VER < 1300)) || (defined(__MINGW32__))` to use the standard `GetFileSize()`...\n\nOr there could be other fixes for this, like using stat/stat64...\n\nBUT it is really important to get the exact correct file size into the MappedFileSource::size, a LONGLONG 64-bit variable. And if this does not get set then that may be the cause of your binary hang, but do not know...\n\nB: Getting the correct install of MinGW. I found this [download](https://sourceforge.net/projects/mingw/files/) site, but as usual there are choices. Like what is MSYS?\n\nBut I assume I can start with `mingw-get-setup.exe (86.5 kB)` and see what that gives me. \n\nWhat have you installed? In what OS? 64 or 32 bit?\n\nC: Cmake and Eclipse\n\nI did not understand your \"I try to compile with Eclipse or Cmake\"? What do you mean by `or` here? As I see it that they work together, not or. CMake generates the Eclipse make files first, then I use Eclipse to do the compile and link...\n\nMy cmake --help offers me a generator \"Eclipse CDT4 - MinGW Makefiles\". So I assume the first step is to generate these. Is that what you did?\n\nI have a (`partial` or `faulty` I think) install of MinGW with `Emscripten`, and when I tried in `build\\cmake` to use `cmake ..\\.. -G \"Eclipse CDT4 - MinGW Makefiles\"` it FAILS.\n\nThe first thing is it could not determine the Eclipse version. I found [downloads](https://eclipse.org/downloads/) and assume I can just download the installer? \n\nWhat did you use to install Eclipse?\n\nNext the cmake test compile with gcc (D:\\Emscripten\\mingw\\4.6.2_32bit\\gcc.exe) failed to compile. \n\nBut I would probably unistall all that `Emscripten` stuff, and as mentioned above would intall MinGW fresh.\n\nSorry for the twenty questions!\n\nBut it seems the only way I can help is to first have the ability to do a mingw compile myself. I will try to do that... But that may take some time. I will be away from my computers from the 23rd until the end of November, so it may be after that...\n\nHowever, meantime maybe there are other MinGW users out there that can help...\n\nWe would certainly like to add a Windows MinGW compiled of tidy to our binary distributions.\n. @guzur thanks for the information... you seemed to have posted twice... can you remove one...\n\n**A: Compile Error**\n\nOk, it looks like MinGW also does not support the union members `LowPart` and `HighPart` of the  `LARGE_INTEGER` structure... sad, but not a problem.\n\nFor MinGW it seems we need another way to get the file size from a file handle... put the file size into the 64-bit LONGLONG size member? Maybe -\n\n```\n#if defined(__MINGW32__)\n    {\n        DWORD lowVal, highVal;\n        lowVal = GetFileSize(fp, &highVal);\n        if ((lowVal == INVALID_FILE_SIZE) && (GetLastError() != NO_ERROR))\n        {\n            TidyFree(allocator, fin);\n            return -1;\n        }\n        fin->size = highVal;\n        fin->size = (fin->size << 32);\n        fin->size += lowVal;\n    }\n#else /* NOT a MinGW build */\n#if defined(_MSC_VER) && (_MSC_VER < 1300)  /* less than msvc++ 7.0 */\n    // all the current stuff\n\n#endif /* MinGW y/n */\n```\n\nIn my quick testing the above sample code worked fine... unfortunately I do not have any 4 GB plus html files to really test the highVal...\n\nOtherwise we would need to go deeper, and pass in either the file name and use stat/stat64 to get the size, or in fact do such a stat earlier and pass in the LONGLONG size to this function...\n\nSo there are other alternatives...\n\n**B: MinGW install**\n\nAs stated I removed all previous and did a fresh MinGW install to D:\\MinGW... I found it does NOT add D:\\MinGW\\bin to the PATH, which I am glad for, because there are a LOT of things in that folder that I would NOT want in my normal PATH...\n\nBut I added that just before doing the cmake config and generation... But it warned me that Eclipse did not support the build in a subdirecotry of the source... \n\nSo my tidy is in F:\\Projects\\tidy-html5, and I was in build\\cmake, so I created a sibling directory F:\\Projects\\build-tidy-mingw, and it seemed the cmake config/gen went fine... I got .cproject and .project files built...\n\nBUT still to install Eclipse to try the next step... \n\nAnd also note this seems a 32-bit install of MinGW, but found a mingw-w64-install.exe which I also want to try...\n\nStill some step to go...\n\n**C: CMake and Eclipse**\n\nAssume some typos in what you used, in that you missed the `..\\..` directory, but that looks fine otherwise...\n\nBut also wonder why you do not add the IDE in the generator string, like `-G \"Eclipse CDT4 - MinGW Makefiles\"`. It seems this causes the `CMAKE_ECLIPSE_VERSION` to be set, but maybe is not important...\n\n**D: iOS and android**\n\nI do not know `gumbo`, but I would see no immediate problem with tidy iOS and android compiles. Maybe some functions would need to be substituted, but tidy has no special other 3rdparty library dependencies, and quite normal file and IO functions from the OS...\n\nGood luck with that.\n. @guzur yes, that [HTML_Tidy_for_Windows](http://www.paehl.com/open_source/?HTML_Tidy_for_Windows) is an **OLD** 2009 version of tidy, but downloading the tidy.zip, and unzipping, it ran fine for me.\n\nAnd note he does have a more recent [HTML_Tidy_for_HTML5](http://www.paehl.com/open_source/?HTML_Tidy_for_HTML5) with version 5.1.20 which is quite recent - 2015.11.05. Both the 32-bit and 64-bit tidy.exe ran ok in my system, at least with the -v option.\n\nSo not quite sure what you mean by **didnt work**? You do know that running tidy with no input file puts it in reading stdin mode, and the only exit from that is ctrl+c?\n\nWe also have recent versions in a zip - see http://binaries.html-tidy.org/\n\nI must get around to publishing later versions, and as mentioned would love to add a MinGW build. \n\nWe have been considering expanding the naming convention to say `tidy-$VERSION-$CPU-$BITNESS.zip` - see #258 and #295, and maybe should even consider `tidy-$VERSION-$CPU-$BITNESS-$COMPILER.zip`, then we could have `MSVC10`, `MinGW`, etc... but need feedback and specific platform support to do all this...\n. @guzur well the first thing is while redirecting the ouput is possible, the best way is to specify an output file, before the input, like `tidy -o output.htm index.html`.\n\nBut what do you get with `tidy -v`? Does this just show the version? And `echo %ERRORLEVEL%` shows `0`?\n. @guzur ok, maybe it is time to run it in a Debugger!\n\nReading around it seems MinGW ships with a port of the unix gdb - see [here](http://stackoverflow.com/questions/4671900/how-do-i-use-the-mingw-gdb-debugger-to-debug-a-c-program-in-windows), and it seems Eclipse can connect to that in the [IDE](http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.cdt.doc.user%2Ftasks%2Fcdt_t_debug_prog.htm)...\n\nTo enable debug symbols to be added to the binary, you will probably need to build the debug version, `-DCMAKE_BUILD_TYPE=Debug`. As you can see in the first link above this adds a `-g` option the the compile. You might also add `-DCMAKE_VERBOSE_MAKEFILE=ON` just to check the `-g` gets added...\n\nYou could also create a simple `Hello World` program, and see what that does, like -\n\n```\n#include \nint main (int argc, char **argv)\n{\n    printf(\"Hello World\\n\");\n    return 1;\n}\n```\n\nCompile it like in the first link, run it, and run it in the gdb debug... \n\nAfter loading the exe set a breakpoint at main, like `break main`, and then `run` should stop at `main`, and print the first line. A `step` command should advance to the next statement... but I have **not** used gdb very often, so you have to read up on [gdb](https://sourceware.org/gdb/current/onlinedocs/gdb/)...\n\nJust out of interest, can you post your tidy.exe somewhere I can download it from?\n\nReally, I have no idea why your Eclipse/MinGW built tidy fails! But running in the gdb debugger you may be able to provide more clues... tidy.exe certainly does not seem to be built correctly...\n. @guzur have successfully built tidy using MinGW-32, and it all works fine for me.\n\nHad to apply the following two patches -\n\n```\ndiff --git a/include/tidyplatform.h b/include/tidyplatform.h\nindex a40e0a0..ea999c5 100644\n--- a/include/tidyplatform.h\n+++ b/include/tidyplatform.h\n@@ -469,7 +469,7 @@ extern \"C\" {\n */\n #if defined(_WIN32) && !defined(__MSL__) && !defined(__BORLANDC__)\n\n-#ifndef __WATCOMC__\n+#if !(defined(__WATCOMC__) || defined(__MINGW32__))\n #define fileno _fileno\n #define setmode _setmode\n #endif\ndiff --git a/src/mappedio.c b/src/mappedio.c\nindex 61cf748..f80c978 100644\n--- a/src/mappedio.c\n+++ b/src/mappedio.c\n@@ -191,7 +191,21 @@ static int initMappedFileSource( TidyAllocator *allocator, TidyInputSource* inp,\n     fin = (MappedFileSource*) TidyAlloc( allocator, sizeof(MappedFileSource) );\n     if ( !fin )\n         return -1;\n-    \n+\n+#if defined(__MINGW32__)\n+    {\n+        DWORD lowVal, highVal;\n+        lowVal = GetFileSize(fp, &highVal);\n+        if ((lowVal == INVALID_FILE_SIZE) && (GetLastError() != NO_ERROR))\n+        {\n+            TidyFree(allocator, fin);\n+            return -1;\n+        }\n+        fin->size = highVal;\n+        fin->size = (fin->size << 32);\n+        fin->size += lowVal;\n+    }\n+#else /* NOT a MinGW build */\n #if defined(_MSC_VER) && (_MSC_VER < 1300)  /* less than msvc++ 7.0 */\n     {\n         LARGE_INTEGER* pli = (LARGE_INTEGER *)&fin->size;\n@@ -210,6 +224,7 @@ static int initMappedFileSource( TidyAllocator *allocator, TidyInputSource* inp,\n         return -1;\n     }\n #endif\n+#endif /* MinGW y/n */\n\n     fin->map = CreateFileMapping( fp, NULL, PAGE_READONLY, 0, 0, NULL );\n```\n\nThe first was to remove a warning. The second was to provide a MinGW work-around for no `GetFileSizeEx()`, and no `LARGE_INTEGER` support in MinGW.\n\nI have NOT yet installed Eclipse, so this was using the `MinGW32-make.exe` that comes with MinGW, so the commands were -\n\n```\nset PATH=D:\\MinGW\\bin;%PATH% # this is optional, only if MinGW\\bin not already in the PATH\ncmake ..\\.. -G \"MinGW Makefiles\" # note, this is without Eclipse\nmingw32-make # build using the Makefile generated\n```\n\nThen I could run the MinGW built `tidy.exe` without problems, and I also used it to run all the 228 tests without problems... Temporarily have add `MinGW` to the version, but need to think this through further...\n\n```\ntidy -v\nHTML Tidy for Windows version 5.1.27.MinGW\n```\n\nThis patch I have presently pushed to the `mingw-build` branch, so to test it do -\n\n```\ncd tidy-html5 # or wherever you have the git source\ngit pull    # make sure up to date\ngit checkout mingw-build # switch branches\ngit pull    # make sure up-to-date\n```\n\nNow that I can directly build using my 32-bit MinGW I will probably not pursue the Eclipse build, but it should not be a problem, using the correct generator. And will still try to find the time to install and test the MinGW 64-bit build... will take some time...\n\nIf you could get a chance to pull this **branch**, compile and test it, and if successful, close this issue, and I will get around to pulling it into `master`... thanks...\n. @guzur **wow**, I do not know what is wrong with your system???? I downloaded the tidy.exe you posted and it ran fine for me!!!\n\n```\n...\\Downloads> .\\tidy.exe -v\nHTML Tidy for Windows version 5.1.27.MinGW\n```\n\nAnd it successfully **tidies** any HTML I feed it! It seems to work fine here...\n\nAnd I have checked the EXE with some utilities like `dumpbin` in the MSVC command prompt, and it looks like a fine, normal windows PE executable... I do note the MinGW linker does NOT correctly set the timestamp - 50000 time date stamp Sun Jan 04 20:01:20 1970, but that is minor... It is a regular 32-bit app - 14C machine (x86), 10B magic # (PE32), etc, etc... \n\nI guess we should have seen this coming. I seem to remember you saying you downloaded the Win32/64 zip from `http://binaries.html-tidy.org/`, or from somewhere?, and they also **did not work**! Is that correct? If not please download one or more of the windows zips, unzip, and run `.\\tidy.exe -v`...\n\nNote I use a path name to the exe, `.\\`, and add the `.exe` extension. This is to make sure you are running only that **exe**, and there is not another `tidy.exe, tidy.com, tidy.cmd, tidy.bat, etc` in your system PATH that gets run instead of the `tidy.exe` you built.\n\nAt present this does not feel like a MinGW problem at all, but something about your system... hope you find what...\n. @guzur wow, as simple as that!!!\n\nCertainly not sure why an antivirus program would pick up on tidy! It only does file IO, no web hooks, etc??? Would never have expected this...\n\nAssume we can close this... but feel free to re-open, or post a new issue... cheers...\n. Have merged and deleted branch \"minGW-build\", and bumped version to 5.1.29, removing the `MinGW` rc from version... Have still to install the MinGW64 to ensure no compile problem with it... but the tidy-MinGW32.exe is fine so hope 64-bit is also no problem.\n. @benkasminbullock this is how it should be!\n\nThe TidyDoctypeMode is **ONLY** for internal library use. That is \"doctype-mode\" is **NOT** a user option, so no user documentation.\n\nThe first clue to that is in the public `tidyenum.h` - it says `/**< See doctype property */`, with no other explanation. Sort of like saying to a user, forget it, look somewhere else...\n\nThe next clue to a library developer is that there is no `parser` for the option. It is a NULL. Every other option has a `parser`, well except also the first `TidyUnknownOption`, and the last `N_TIDY_OPTIONS`...\n\nWhile it is appreciated you **combing** through the source for `errors`, I hope you are beginning to learn that without digging deeper, like where is it used? how is it described, or not described? are all clues as to its nature, and a simple overview can lead to false positives.\n\nSo closing this as a non-issue... but feel free to re-open, or post a new issue.\n. @benkasminbullock oops, did not mean to imply anything bad ;=() sorry...\n\nMaybe change the line 79 to `printf (\"doc: undocumented. May be an internal option.\\n\");`\n\nAnd now we are **both** aware of what this is, you could skip it, or something...\n. @benkasminbullock yes, it appears it is `unused` at this time... do not have time right now to go back in history to find where and when it was used, if ever...\n\nBut will leave it there as a sort of `spare` int variable in the main (opaque to users) structure. There have been times in development that I have wanted another `flag` in the internal doc, and will try to remember this next time that comes up... thanks...\n\nThat is I do not think this 4-byte allocation save is important at this time, so closing this, but thanks for pointing it out.\n. @benkasminbullock agree warnings do look a little odd. \n\nIf `--show-body-only yes` we already suppress some other `head` messages. Maybe these two could likewise be suppressed?\n\nPR or patch welcome.\n. @benkasminbullock looked into this... as suggested, seems can suppress that warning with a simple condition expansion, using the services of `showingBodyOnly` macro, presently only available in parser.c, but could be expanded... so the patch is -\n\n```\ndiff --git a/src/parser.c b/src/parser.c\nindex 6924828..e751130 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -3639,8 +3639,9 @@ void TY_(ParseHead)(TidyDocImpl* doc, Node *head, GetTokenMode ARG_UNUSED(mode))\n         {\n             /*\\ Issue #132 - avoid warning for missing body tag,\n              *  if configured to --omit-otpional-tags yes\n+             *  Issue #314 - and if --show-body-only\n             \\*/\n-            if (!cfgBool( doc, TidyOmitOptionalTags )) {\n+            if (!cfgBool( doc, TidyOmitOptionalTags ) && !showingBodyOnly(doc) ) {\n                 TY_(ReportError)(doc, head, node, TAG_NOT_ALLOWED_IN);\n             }\n             TY_(UngetToken)( doc );\n```\n\nI am presently testing in the `issue-329` branch so have added that patch there... to be later merged to `master`, or at least cherry-picked into `master`, if the testing fails on this branch...\n\nIf you could get a chance to update, and pull that `issue-329` branch, and confirm the message is absent when the option `--show-body-only yes` is set... that would be great... thanks...\n. @benkasminbullock sorry for the delay. This issue got mixed with #329 and almost lost!\n\nIt is now in `master` branch, version 5.1.43 onwards...\n\nConcerning your 2nd issue, when adding a `` after bare text, I have decided to do nothing about this at this time.\n\nOn finding bare text, tidy has to insert an implicit ``, as a container to hold this text, so will still report `line 2 column 1 - Warning: discarding unexpected `. \n\nYes this could be more verbose like `discarded unexpected  because have already inserted an implicit  on finding bare text.`, but maybe this would be excessive? Hope you agree.\n\nAppreciated if you could pull and build, and if satisfactory close this issue... thanks...\n. @benkasminbullock, since there are no further comments in over 3 weeks, assume this is closed...\n\nPlease feel free to re-open or post a new issue. **Tidy needs your help!** thanks...\n. @benkasminbullock like #314 thought at first these warnings may seem a little odd...\n\nBut there is an option to not trim empty elements, `--drop-empty-paras no`, which will keep an empty `` para after the ``, thus no second warning...\n\nSo at the moment can not see a `better` solution here... but suggestions welcome...\n\n**Alternatively**, as I think you are implying, the behaviour of tidy could be changed to choose to drop an unexpected ``, especially when there is going to be no content before it, with an appropriate warning. Perhaps this makes more sense that inserting an implicit ``? Not sure! Would need to think and experiment...\n\nThis has been the tidy behaviour since some time before the last CVS 2009 release. And interestingly tidy2000 would default to replacing the `` with a ``. There is still a `--coerce-endtags yes` option, which coerces `bar` to `bar<\\b>`, but it does not seem to affect this p/pre sample case...\n\nSo that is a **feature** change, which are always up for discussion...\n\nComments, PR, patches welcome...\n. No further comment since Nov, so closing this for now...\n\nPlease feel free to re-open, and raise another issue... thanks...\n. @CMB thanks have merged it...\n\nBut was not able to use 'wget' to get the page you showed, like I usually can do...\n\nedbrowse (in windows) did better and I got -\n\n> edbrowse  https://www.indiegogo.com/projects/translation-of-the-book-play-to-live-volume-6\n> no ssl certificate file specified; secure connections cannot be verified\n> 1139\n> warning: http error 416, Requested Range Not Satisfiable\n> 4438\n> 957\n\nI did that before and after I merged but no crash here in either case, despite the obvious over-run before...\n\nHope you get a chance to update tidy to 5.1.26 and test again... and thanks again...\n. @CMB Thanks Chris. Yes, the wget worked fine on [broken.html](http://the-brannons.com/broken.html)\n\nIt turned out we just needed the line 3 `badAccess |= BA_MISSING_IMAGE_ALT;\n            TY_(ReportMissingAttr)( doc, node, \"alt\" );\n        }\n\n        if ( alttxt ) {\n            AttVal *attval = TY_(AddAttribute)( doc, node, \"alt\", alttxt );\n            TY_(ReportAttrError)( doc, node, attval, INSERTING_AUTO_ATTRIBUTE);\n        }\n     }\n```\n\nAgain, not really that important, and what you have is fine.\n\nWould welcome other ideas, comments...\n\nAnd the new `TidyAltText` message is fine by me. Go for it ;=))\n. @tspivey thanks for reporting...\n\n@benkasminbullock added your patch and can confirm this removes the infinite loop from this sample...\n\nCan you do a PR? I tried the usual fetch from your fork and cherry pick the commit to keep you as the author but this failed! Or I can just push the patch?\n. @CMB thanks for that option... will keep that in mind as an alternative in future...\n\n@benkasminbullock well I tried a similar approach -\n\n```\n$ git fetch git@github.com:benkasminbullock/tidy-html5.git\n$ git log # to find the commit I wanted - this failed!\n$ git cherry-pick commit\n```\n\nSo as indicated this failed in this case! Not sure why? It usually works. `$ git pull` would auto merge **all** the fork commits, which in this case was only one, so would have worked fine...\n\nBut thanks for the PR #322, now merged... and version pushed to 5.1.27\n. @tspivey if you get a chance to pull 5.1.27, and if fixed, close this... thanks...\n. Will close this... feel free to reopen, or add a new issue...\n. @benkasminbullock I do not yet know if this is the complete solution to this, but certainly we now have 2 reports in #321 that it works, so that is good enough for now... patch merged, and thanks...\n. @balthisar looks fine to me...\n. @balthisar pulled this `progress_callback` branch, and can confirm it compiles in Windows, no problems... \n\nConcerning your use case, for sure it does give back an `interesting` mapping between the input `node->line`, `node->column` to now an output line number, which could be used in such a `synchronized` scroll view in a \"before\" and \"after\" GUI compare... **neat**...\n\nNote you do not add this for `PPrintXMLTree`! But maybe not needed for that output?\n\nDo not yet have any app to test this, but will consider something...\n\nSo it compiles, and does **feel** like a new feature ;=)) Go for it...\n. @balthisar just for fun - love coding! - wrote a [tidy-view](https://github.com/geoffmcl/tidy-view) gui app implementing your progress call back to match lines in the `left - before` view and add them to the `right - after` view of a html file.\n\nAs with [tidy-gui2](https://github.com/geoffmcl/tidy-gui2) I use Qt4 to do the windows in a cross platform way. In general I think you will find that Qt implements quite a good OS specific look and feel, like using native file selection dialogs, etc... Anyway just another reason to install Qt4 and give it a try...\n\nSeems the input line value is not always updated correctly by tidy - may be a bug? - but generally works... sort of... Have not yet done sychronised scrolling, but could... And because I use a QTextEdit can not yet see how to easily align the left/right lines... would need to pad the data with newlines to get it all lined up??? feels quite difficult... \n\nAt present the color coding is for C/C++ text, so that is another TODO - implement HTML specific color coding.\n\nAnyway, just a FUN tidy viewer ;=)) Usage $ tidy-view index.html\n. @balthisar yeah, great idea - just synchronize on the middle line. This should not be too difficult.\n\nI have another very powerful gui file compare, [winmerge](http://winmerge.org/?lang=en), and my own dc4w, similar purpose, which do line them up line by line, but these use a list type display so is easy to insert blank lines... and that was what I was thinking of...\n\nBut yes, just the middle line, lined up, would look good...\n\nAnd for sure Qt has that capability... lots of example code... hope you get a chance to try it...\n\nStill to get a chance to look closer at your tidy localization, but will get there...\n. @vcunat yes, at this time the tidy console binary is linked with the static library, mainly as a convenience to Windows users where we do not have a convenient DLL (shared library) install mechanism. Easier to have a stand-alone app...\n\nAnd as far as I can see it poses no problem in linux. And in fact, as a developer, it is convenient for me having several stand-alone versions of tidy around for backward testing. But as things settle down we will consider changing this, for linux only, just to conform to the norm... but will continue to build and install both libraries, allowing 3rdParty libtidy or libtidys users a choice...\n\nThe `tab2space` is now an optional build, and even if built, is no longer included in the install or packages. This local only utility was just for developers that had not adjusted their favorite editor to conform to the tidy code style of using 4-space indents, and **no** tabs, so is seldom required, and there are other tools/utilities that can do the same job... probably better...\n\nIf you have a 4.9 package there already, I think this will be `tidy5`, and `libtidy5.so`, not sure? These should be removed... that suffix `5` was just used in development, when we were considering tidy in two forms - tidy for html4-- (old tidy), and tidy5 for html5++. We have since decided there should be only **one** tidy which handles all...\n\nSo, yes, 5.?.? is meant as a drop-in replacement for old tidy, removing that `5` suffix... it is good that you are updating the package for [Nix / NixOS](http://nixos.org). We hope other distribution will also update. We have some problem with distro with even older versions available... see #309 and others...\n\nWill leave this open for a while for further comments... if any... but see nothing at present to do here...\n. @vcunat ok seems I must read `tend to prefer` as **`must`** ;=))\n\nWith the beginning of the `5.*` packages, two generically named header files were changed, to avoid any conflict with other package headers - see #223\n1. renamed: `\"buffio.h\" -> \"tidybuffio.h\"`\n2. renamed: `\"platform.h\" -> \"tidyplatform.h\"`\n\nWill certainly explore adding a cmake option to link the tidy console app to the shared libray...\n. @vcunat added a cmake option **`-DTIDY_CONSOLE_SHARED:BOOL=YES`** to link the console app tidy to the shared library, Of course the `BUILD_SHARED_LIB` must remain on.\n\nHave tested all combinations in windows, and all got built/linked as expected.\n\nMuch appreciated if you could get a chance to pull 5.1.30++ and give it a try... thanks...\n. @balthisar fast work ;=))\n\n@benkasminbullock I pulled 5.1.28 and now see a warning... guess we can close this... thanks...\n. @benkasminbullock well this was the simple addition of an error message, so not sure of the need for a test case, but maybe...\n\n> struggling to understand the testing scripts\n\nThis is the main problem. The current testing procedure and scripts are not well documented, and mostly do not do what people think! In their present form they are certainly not any form of `unit testing`, or any other formal testing method...\n\nThere are some 228 tests in test/input. Some are repeats which need to be pruned. Some were a segfault. Some can only be visually compared to decide pass or fail. Some are to compare the output. At present the tests only compare the exit code with an expected exit code. In most case that is not sufficient.\n\nAs it turns out, this case could be detected by the current procedure in that previously the exit code was 0, now it is a 1. And that is all the scripts presently compare.\n\nRecently I did add a test/testbase folder which contains the expected output, thus could do a simple `diff` and check that. But even that is not complete in that right now for instance there are 2 or 3 differences, which only a developer would know to except. That is they are not a `bug`. See #266, and others. So at present these tests are not recommended for the casual user.\n\nFWIIW I have been collecting a new set of tests, about 230 plus, since around Jan 2015, and for sure I added this case in that. In two forms - one without `` to test the warning, and one with to make sure the warning went away. But again have not shared that yet in that it is very much WIP. But could...\n\nIt would certainly be appreciated if someone were to take this up. Define a group of tests, clearly indicating what is tested. Prune, combine, fix, sort the current `input` tests. Like dividing them say into categories, or something... maybe designing new tests... fix up and document the scripts... etc, etc...\n\nOne suggestion by @vielmetti has been to use say travis-ci or the like - see #269 - We have rejected this automation in the past, but if the tests could be defined as in the above, fixed to specifically test something, then maybe it is time to reconsider this method...\n\nThis **`testing`** is certainly an area of Tidy that could do with some TLC ;=))\n. Oops, found a simple case where this warning should **not** be issued when the following processed with `--show-body-only yes`!\n\nInput:\n\n```\nThis a minimal example for\nTidyTidyTidyTidyTidyTidyTidyTidyTidy is another nice open source tool :)\n```\n\nOutput:\n\n```\nline 1 column 1 - Warning: missing \nInfo: Document content looks like HTML5\n1 warning, 0 errors were found!\n\nThis a minimal example\nforTidyTidyTidyTidyTidyTidyTidyTidyTidy is another\nnice open source tool :)\n```\n\nAnd this sample code exposes another `feature request`. Most browser will show a space between `for` and `Tidy...` while Tidy loses that newline, which I assume the browsers take as a space. \n\nThis is an old bug https://sourceforge.net/p/tidy/bugs/949/ posted 2014-03-01 by @yvand, now moved here...\n. @benkasminbullock wow, thank you for the quick test... sort of a proof of concept...\n\nI have pulled and tried your branch in Window, and was pleasantly surprised that the perl install includes a `prove.bat` which seems to work...\n\nThere were some windows TIDY exe issues. Like the current test scripts maybe this can be externalized as an environment variable, TIDY, or something... there are times I need to test with other than the currently built tidy...\n\nI am particularly interested in how you will handle an output compare, where just testing the exit code is not sufficient? And can we not use, leverage, the files in `input` and `testbase`? Must they all be done again? What is the process needed to add a new test? Assume this can be moved to the current test folder, and not be a new one?\n\nI do have some other questions, concerns, but today is my very short computer day, so will get into that tomorrow, so do not suggest you put too much more time into this until I can reply...\n\nAgain, really thank you for helping in this... Maybe this should all be moved to a new important issue?\n. @benkasminbullock have moved the `test` procedures to #330 \n. @benkasminbullock, @balthisar have now done the full regression tests, and this **fix** changes MANY message outputs! Of course it does not effect the html output, just the message output.\n\nThere are many cases where the test sample does **not** have a doctype, head, or title. In the past tidy would only warn `no doctype`, but it has **never** warned that it added an implied head, added a title. But now it warns that it is missing a ``!\n\nTypical change is -\n\n```\ndiff -u testbase\\msg_1050673.txt temp-5\\msg_1050673.txt\n--- testbase\\msg_1050673.txt    Mon Nov 23 16:09:01 2015\n+++ temp-5\\msg_1050673.txt  Wed Dec 02 12:50:06 2015\n@@ -1,4 +1,5 @@\n line 1 column 1 - Warning: missing   declaration\n+line 1 column 1 - Warning: missing \n line 1 column 1 - Warning: inserting implicit \n line 1 column 1 - Warning: missing  before \n line 3 column 1 - Warning: missing \n@@ -12,7 +13,7 @@\n line 2 column 1 - Warning: trimming empty \n line 4 column 1 - Warning: trimming empty \n Info: Document content looks like HTML5\n-13 warnings, 0 errors were found!\n+14 warnings, 0 errors were found!\n\n About HTML Tidy: https://github.com/htacg/tidy-html5\n Bug reports and comments: https://github.com/htacg/tidy-html5/issues\n```\n\nThis effects some 35 tests - 1050673 1056023 1062511 1063256 1072528 1210752 1266647 1398397 1408034 1415137 1603538-1 1603538-2 1632470 1707836 1715153 427836 427840 431874 431889 433666 435903 438956 441508 487204 511679 566542 620531 640473 647255 658230 676156 678268 765852 795643-1 795643-2 \n\nFurther, in the following sample tidy does **not** report a missing ``, nor a missing ``, nor the missing ``!\n\n```\nhtml\n\n\n\nIssue #327 - missing head warning\n\nBorn from an egg on a mountain top.\n```\n\nBTW that above sample **passes** the W3C validator!\n\nSo why should tidy now start reporting a missing ``?\n\nSo this is not only a problem when the option `--show-body-only yes` is added. It even shows this missing `` if you add the option `--omit-optional-tags yes` when no implied `` would be output!!!\n\nI am all for reverting commit 61cfcb15550bfa5b266cb238d0e34b18d810bad9! \n\nAnd close this issue with a statement like - \"Yes, tidy does **not** warn about a missing ``, nor many other non-essential closing tags, although it will add them to the output unless the option `--omit-optional-tags yes` is used.\"\n\nThoughts?\n. @benkasminbullock well I hope you get access to the W3C [validator](https://validator.w3.org/#validate_by_upload) soon. Today it is one of the quick tests I always try to run, just to check what the validator says. If you **\"don't think it should do that\"** then file a bug on the validator, after you very carefully check the W3C documentation.\n\nWhile reading W3C specs often makes my head spin, this page on [the-p-element](http://www.w3.org/TR/html5/grouping-content.html#the-p-element) makes it clear the end tag may be omitted in certain circumstances. And this is true for a number of elements...\n\nIn tags.c there are some 39 elements with the `CM_OPT` bit set, which indicates the end tag is `optional`. These will not be printed if you set `--omit-optional-tags yes`. And assume the person who built that table knew what they were talking about.\n\nPlease check the validator... please read the documentation... please present a simple sample... before you suggest **\"this behaviour is not very consistent\"**! As it stands this is just speading FUD!\n\nAnd please remember it is not as simple as **\"what you think\"**!\n\nI still think reverting commit 61cfcb15550bfa5b266cb238d0e34b18d810bad9 is the correct thing! Right now this is the **inconsistent** behaviour!\n. @balthisar it is your commit... can we revert it?\n. @benkasminbullock @balthisar commit reverted, and version bumped to 5.1.31...\n\nChanged this from a bug to technical support on the tidy way ;=))\n\nAssume this can be closed...\n. @balthisar sorry I have not had a chance to try this branch, so do not have specific comments now, but some generalizations only...\n\nFor me there is always a concern about Windows support! I suppose it depends how it is done, but in quite a number of projects have always had trouble with the unix `locale` implementations... NSL_LANG or is that a different thing?\n\nThe simple way `edbrowse` does it does work everywhere, including in windows. They have a `translated` file for each set of messages in each language, naturally defaulting to English if no user preference given. It does bloat the app/library, having each language set built in, but maybe this is not a big problem... and allows dynamic changing, if that is needed, desired...\n\nIt does become a distribution addition if the languages are in a separate library, or in *.po files (gettext) implementations... again is that the same or different?\n\nNaturally I do agree Tidy should be `international`, and it depends on finding people to do each of the translations... and making that **easy** for them to contribute...\n\nAgain in the edbrowse case, they already have 6 message files done... they have each in a single file in the source, and use a cmake run perl script to combine each file into one,, msg-strings.c?, for the compile...\n\nAnyway will naturally comment more when I have had a chance to catch up a little, and give it some thought... and look at some other projects to see how they have done it... etc... \n. Wow, as a primary windows user, I really do not know \nif I should weight in on this (unix/MAC) discussion!\n\n# \n\nRe: Use of the GNU gettext library\n\nI absolutely understand the `norm` I see in unix is\n`getext/PO`, ie PO translation files... **BUT**, I have \nyet to see this **well** implemented in a Windows \nenvironment! \n\nYes, I have seen that there are some binary install \noptions for windows, but the last time I checked, the \nGNU GetText for Windows -\nhttp://gnuwin32.sourceforge.net/packages/gettext.htm\nis a 10 years old project... maybe it still works,\nbut I for one will probably **NOT** install such an \nOLD system... \n\nAnd that is only 32-bit! What about if I want a \n64-bit install, or heaven forbid, a UNICODE 32 \nand 64 bit version?\n\nI hope you really understand gettext() has some \nserious dependencies... especially in Windows...\n\nDo you have a link to something more recent?\n\nAnd all that is in CMake terms... Yes, there is a\nFindGetext.cmake in the distribution, and I `pass`,\nhaving somehow installed `msgmerge`, `msgfmt` executables!\n\nSo, for instance, for the almost defunct [fgrun](https://sourceforge.net/projects/fgrun/) project,\nI can successfully build the `gettext/PO` files... but \nI wonder how many other Windows developers have that?\n\nEven I do not remember well how I got there!\n\nFor sure, I want internationalization of Tidy!!! Who \nin their right mind would be against that!\n\nBut it is not just finding the people to provide \nthe message 'translations', but how to implement \nthat in a cross-platform way, **WITH** the minimal \nof additional dependencies, especially in Windows.\n\nBut this is still mute at this time since we only \nhave one translation, and that is English... I \nsuppose we could easily mess up an UK/USA difference...\n\nI look forward to taking the time to checkout this \n`localize` branch, just to check, show that what has \nbeen implemented still works fine for that language\nin Windows... \n\nAt present language.c fails to compile in Windows,\nbut I am sure this can be easily fixed... yes, the \nuse of the gcc only `.` structure init... \nhttps://github.com/htacg/tidy-html5/blob/localize/src/language.c#L34\neasily fixed... do not use that gcc ONLY struct init \nform... use what works in K&R C...\n\nBut on the broader topic, it seems when we have 2 or \nmore translations would be the time to reconsider the \npossible **cross-platform** options...\n\nThat might include having cmake find_package(Getext),\nbut also having a backup translation plan if that \nfails...\n\nTidy should support **every** language under the sun!\nAs said, finding, encouraging, helping text translators\ngive us alternatives... \n\nIf they want, need, the text in some familiar, easy to \nuse format, then I for one would help write some scripts \nto produce that format, and when it is back, into what \ntidy is currently using, if required...\n\nLet us **Go International**\n. @balthisar thanks for the quick K&R struct fix for language.c ;=)) That now compiles with MSVC...\n\nThe next thing is tidy.c! For a long time now gcc has allowed 'late' variable declaration, even after a code statement, like in C++...\n\nMSVC sticks to the original K&R where, in any given context, all variables MUST be declared before code statements.\n\nI tried for find a gcc dialect option that reverted this behavior, but found none! \n\nThought `-ansi`, which is `-std=c89`, might do it, but that undefined `uint` which is used everywhere ;=(( \n\nSo there seems no way to **check** this using gcc... maybe I missed something...\n\nSo you can see the diff, attached below is a tidy.c.diff. As can be seen it is just a case of bubbling variable declaration to near the top of the context. Does not change anything else (I hope!)...\n\nAnd yes, I have no problem using the PO format to store the translated strings, and using a script to get them ready for a compile...\n\n```\n\ndiff --git a/console/tidy.c b/console/tidy.c\nindex 35ba8e6..f5344ea 100644\n--- a/console/tidy.c\n+++ b/console/tidy.c\n@@ -275,7 +275,7 @@ static const CmdOptDesc cmdopt_defs[] =  {\n  */\n static tmbstr stringWithFormat( const ctmbstr fmt, ... )\n {\n-   va_list argList = {};\n+   va_list argList;\n    tmbstr result = NULL;\n    int len = 0;\n\n@@ -1060,6 +1060,8 @@ static tmbstr cleanup_description( ctmbstr description )\n    states state = s_DATA;\n    charstates charstate;\n    char c;\n+   int j = 0, k = 0;\n+   transitionType transition;\n\n    /* Process the HTML Snippet */\n    do {\n@@ -1088,9 +1090,6 @@ static tmbstr cleanup_description( ctmbstr description )\n        }\n\n        /* Find the correct instruction */\n-       int j = 0;\n-       transitionType transition;\n-\n        while (transitions[j].state != s_LAST)\n        {\n            transition = transitions[j];\n@@ -1130,7 +1129,7 @@ static tmbstr cleanup_description( ctmbstr description )\n                    case a_EMIT_SUBS:\n                        name[i_name] = '\\0';\n                        i_name = 0;\n-                       int k = 0;\n+                       k = 0;\n                        writer = \"\";\n                        while ( replacements[k].tag )\n                        {\n@@ -1357,6 +1356,7 @@ static void xml_options_strings( TidyDoc tdoc )\n  */\n static void xml_strings( void )\n {\n+    uint i;\n    ctmbstr current_language = tidyGetLanguage();\n    Bool skip_current = strcmp( current_language, \"en\" ) == 0;\n    Bool matches_base;\n@@ -1364,7 +1364,7 @@ static void xml_strings( void )\n    printf( \"xml version=\\\"1.0\\\"?\\n\"\n           \"\\n\", tidyLibraryVersion());\n\n-   uint i = tidyFirstStringKey();\n+   i = tidyFirstStringKey();\n    do  {\n        printf( \"\\n\", i );\n        printf( \" \", \"en\" );\n@@ -1423,6 +1423,7 @@ int main( int argc, char** argv )\n    ctmbstr cfgfil = NULL, errfil = NULL, htmlfil = NULL;\n    TidyDoc tdoc = tidyCreate();\n    int status = 0;\n+   tmbstr locale = NULL;\n\n    uint contentErrors = 0;\n    uint contentWarnings = 0;\n@@ -1433,7 +1434,6 @@ int main( int argc, char** argv )\n // tidySetPrettyPrinterCallback(tdoc, progressTester);\n\n    /* Set the locale for tidy's output. */\n-   tmbstr locale = NULL;\n    locale = tidySystemLocale(locale);\n    tidySetLanguage(locale);\n    if ( locale )\n\n```\n\nSo now the `localize` branch compiles in WIN32. using MSVC... Would push this change if ok... But still to do some actual tidy testing...\n. @balthisar just push small K&R like change to compile with MSVC10...\n\nNow over the coming days hope to get into some Windows testing... anything special to look at?\n. @balthisar have not yet got to actual code testing... that will come...\n\nIt seems, maybe, by MSVC 2013, MSVC12, they, MS, have maybe dropped this quite stupid K&R rule that **all** variable declaration **must** be at the top of a context... good on them! about time! gcc has been doing this since the beginning of time! But on the other hand, it is not a **bad** rule... makes developer think about just adding this variable now... it is still **all** on the function stack...\n\nMaybe if you adjusted your Windows VM to use [MSVC10](http://microsoft-visual-cpp-express.soft32.com/) then this would be clear... not sure...\n\nAnd of course that brings up issues of backward MSVC compatibility in windows.\n\nTraditionally, Tidy has supported back to MSVC6... not really suggesting that, but why not? Really, Tidy code has no special quirks... Tidy is simple, well formed C, not C++! It should be very easy to compile... no special compiler version required... in **all** systems... hopefully with **no**, or **very few** compiler specific MACROS!\n\nIt has some already, but what I see are most are related to only my _MSC_VER, no NDEBUG, code... the others should be removed where possible...\n\nAnd you seem mix this with regression `testing`?\n\nHere you have proposed a completely Ruby way to test... no problem... looks interesting... but you have control over the `expected`. You can, from what I have read, and what you told me, simply update the expected, to `canonical`. Now I know the **`terror`** in this!\n\nUpdate one wrong file that has other than just `known` string changes, and you hide this fault, this possible regression, for some time... I do not like such an easy option. To change the `expected` should require some additional steps... deliberately make it difficult, not **easy**, to change the `expected`...\n\nSimply, it is difficult to decide, case by case, excluding known string changes, but that is what is required! Only update when **very** sure!!! But update you must, to be able to see any **real** regression problems, without false hits...\n\nThat type of **difficult** choice should be carefuly considered, even discussed, if it is **not** just a known string changes...\n\nBut as stated, I will get around to testing both... including searching for memory leaks, and the like... \n\nWe are moving forward...\n. @yapper-git thank you for moving the **bug** here... This is certainly where it may receive attention!\n\nYou might want to **update** your tidy output to show this problem still exists in current htacg tidy, current `master` branch, version 5.1.28 plus. Showing a 2009 output does not help the case.\n\nI called this a `feature request` purely because tidy has been doing this **forever**! So it is a quite a fundamental change in the parsing...\n\nThe problem is, in the current parsing, in certain circumstances, tidy `hides` newlines, quietly swallowing them, so the caller does not know they even exist. So the fix is deeper than you think.\n\nBut that said, does not mean it is not a **bug**. I, for one, agree 100% that all the browser tests I have tried on your sample shows a space between `for` and the first `Tidy...`, and one of the **strong** aims of tidy is to render a **tidied** output that will **look** the same in a browser!\n\nAs stated, thanks for the report, and I, or others, will look into this soonest. But please update the output to reflect current tidy, and maybe remove the `.` which does not seem to be in the input... thanks...\n. @yapper-git thanks for updating the sample... as promised will look at this soonest...\n\nOT: Just out of interest where did you get the tidy 5.1.25 version?\n. @yapper-git thanks for the info. It is good to see your [AUR](https://aur.archlinux.org/packages/tidy-html5/) packages really keeps up with Tidy release tags... thanks to @arthru - seems [s]he updated that almost the same date as I pushed that tag.\n\nI really wonder how to get my [Ubuntu](http://packages.ubuntu.com/trusty/tidy) 14.04 LTS package updated? It still holds a 2009 release of tidy!!! YUCK! But that is OT here.\n\nI have started to look at this, but as suspected it becomes how to **know** to move a space, in this case a newline, to back before the `` tag? \n\nThere was another case of moving a space - yes in this sample `Move bold space` gets correctly tidied to `Move bold space`. The space was kept, and moved...\n\nThat seems to be the same principal here, except it is a newline. And as I suspected, changing that sample space after the `` to a newline gives me a **bad** result `Movebold space`!\n\nJust about out of time today, but I am on its tail ;=))\n. @yapper-git have pushed an experimental fix to the `issue-329` branch...\n\n```\n$ cd tidy-html5\n$ git pull\n$ git checkout issue-329\n$ cd build/cmake and build...\n```\n\nAs suspected, after the `` is decoded, any following newline was quietly discarded... \n\nThe fix is quite profound in that if it is a newline, and the mode is not IgnoreWhitespace, save this to the lexer - well actually it later gets changed into a space. \n\nMaybe this improves this case and does not break previous behaviour... still in testing...\n\nIf you have the chance, please test... thanks...\n. Have just been alerted to a possible problem with this fix... still to be fully tested...\n\nThe case involves the `textarea` element... need to test 3 cases -\n\n```\n1: line 1\nline 2\n\n```\n\n```\n\n2: line 1\nline 2\n\n```\n\nand the extreme case -\n\n```\n\n\n\n3: line 1\nline 2\n\n```\n\nAny help with testing, comments, ideas... very welcome...\n. As suspected the behaviour is quite different - using only default configuration...\n\n#### Input (input5\\in_329-3.html)\n\n``` html\n1: line 1\nline 2\n\n\n2: line 1\nline 2\n\nand the extreme case -\n\n\n\n3: line 1\nline 2\n\n```\n\n#### Current Tidy - Output\n\n``` html\n\n1: line 1\nline 2\n2: line 1\nline 2\n and the extreme case -\n\n\n3: line 1\nline 2\n\n```\n\n#### issue-329 Tidy - Output\n\n``` html\n\n1: line 1\nline 2\n\n2: line 1\nline 2\n and the extreme case -\n\n\n\n3: line 1\nline 2\n\n```\n\nThis is a **lot of difference**!\n\nNow is it bad, or wrong, or better, perfect? It does seem to respect what the users wrote, but is that is what is needed? Sometime tidy concatinates, sometimes expands, like with wrapping... What is **best**? Seek comments on that...\n\nThis fix works wonders on getting the following snippet correctly rendered as `a b>`, so some parts of it **must** stay!\n\n```\na\nb\n```\n\nBut it does set back the schedule for merging this `issue-329` branch to `master`, until this is further discussed and clarified.\n. @yapper-git as explained above I have coded a simple fix for this, in lexer.c, but at present it has other consequences which must then be addressed as well...\n\n```\n                 {\n                      c = TY_(ReadChar)(doc->docIn);\n\n -                    if (c != '\\n' && c != '\\f')\n +                    if ((c == '\\n') && (mode != IgnoreWhitespace)) /* Issue #329 - Can NOT afford to lose this newline */\n +                        TY_(UngetChar)(c, doc->docIn);  /* Issue #329 - make sure the newline is maintained for now */\n +                    else if (c != '\\n' && c != '\\f')\n                          TY_(UngetChar)(c, doc->docIn);\n\n                      lexer->waswhite = yes;  /* to swallow leading whitespace */\n```\n\nThis is an important bug, and **must** be fully fixed... and I must also clean up the `issue-329` branch I created, but @balthisar has shown me how to do this, but yet to get to it...\n\nHowever, we are currently considering a new release 5.2 shortly, and it is unlikely that I will get to fully fixing this before then, so am moving the milestone to 5.3...\n\nIf you or others can look into this, then maybe it could still make it into 5.2...\n. @yapper-git eventually got around to pushing the above **fix** to `master`, and have now deleted the `issue-329` branch...\n\nI hope you, or others, can pull `master`, version 5.3.18 plus, and test this `fix`... it certainly seems to work on your minimal example...\n\nMaybe this can eventually be closed... thanks...\n. This seems to have been fixed, so closing this issue...\n\nPlease feel free to reopen, or post a new issue... thanks...\n. @joeheyming thank you for starting to look at this...\n\nThe **original** tests, still all there, are in unix shell scripts, which are also **not** too portable. Charles and I added the MS cmd/bat files to mirror that unix system, and in some ways added a little to it...\n\nIt is correct to separate, for want of a better word, the current **regression** tests, from any more formal **unit testing**. That is a different topic, maybe `Test Procedures 2`. And as @balthisar points out, that may require some restructuring, testing interaction of the options, etc, etc,... a much bigger topic.\n\nSo just concerning the tests we have. How can these be dealt with, in a cross platform way?\n\nThe suggestion is first we get Travis CI running, then we will start thinking? HUH? I would suggest we start think before we automate the tests ;=)) \n\nGet some aims? Know what we trying to achieve... fix, get them clean... then, and only then automate, if need be... chicken and egg, no more like putting the cart before the horse...\n\nThe present aim of the first 228 tests in testcases.txt, is to compare the exit code with expected, and compare the output with the testbase output. Uses the ../build/cmake/tidy binary, and processes each case to an output. They do not presently do the last step of the diff between the output, and the testbase folder. That must be done manually... but could be added easily...\n\nIs this sufficient? Does this give us what we want? Well **yes**, I think so. It quickly tests some things for change, but only some things, and this should/could have been done **before** it was pushed to `master`, not after! Get in front of the problem, not just be in catch up mode...\n\nIf you want, need to experiment, do it in a branch, and make sure you run these tests before offering a PR.\n\nSo I would like help, discussion, ideas on getting this working now, in as cross platform way as possible. Including maybe adding some more documentation on how to run them, what to expect, etc... see [test/README.md](https://github.com/htacg/tidy-html5/blob/master/test/README.md), maybe add to [CONTRIBUTING.md](https://github.com/htacg/tidy-html5/blob/master/README/CONTRIBUTING.md)...\n\nConcerning Travis CI, I would like some more experience with this before attaching it to htacg tidy, even **if** we want that.  But I do need some help setting up my [fork](https://github.com/geoffmcl/tidy-fork). I did [experiment](https://travis-ci.org/geoffmcl/tidy-fork) a little a few months ago, but did not get very far...\n\nDoes someone have a `.travis.yml` file that I can try? Do they have something working now I can look at? Another fork? @vielmetti did this, see #266, but have not heard from him in a while, and it seemed to involve re-writing each of the test???\n\nI definitely want to experiment, see what is possible, before maybe recommending it to htacg tidy. It should first use what we have. And new, different things should be thought about, discussed, setup, experimented with, etc, all **before** other tests be considered, added...\n\nSo there are few issues here -\n1. look at, discuss, fix, repair the current set of tests.\n2. document, and make them easy to run by every developer.\n3. experiment, test what travis ci can bring.\n\nI look forward to help, ideas, patches, PRs, on these topic... thanks...\n. @mcepl suggests another **neat** target, see [266](https://github.com/htacg/tidy-html5/issues/266#issuecomment-156573361) of `$ make check`. Maybe he will come back with a patch or PR... thanks...\n\nAnd re-reading all of #266 gives some discussion on **difference** when test are run on different **`OS/CPU`** combinations, some of which were never resolved... one has a patch to fix the path separator... etc... lot of reading, information here... \n\nThis is issue # 1. **Look at, discuss, fix, repair the current set of tests**.\n. @balthisar this looks like a great effort... thanks... it is good someone else begins to see the current `mis-matches`, and tries to understand, fix, change, except, handle them ;=))\n\nAfter jumping through a few hoops got a working [Ruby](http://rubyinstaller.org/downloads/), installed, and running, my first in Windows - chose version 2.1.7 (32)... \n\nBut could never get the tidy tests to run... the problem seems to be the setting of the path to the tidy.exe to use... \n\nSo switched to Ubuntu 14.04 LTS to give it a try there... well it had no trouble using an installed tidy binary (`/usr/bin/tidy`)... seemed to run all the tests, but got an error in `make_report`!\n\n```\n./regression_test.rb:140:in `make_report`: uninitialized constant TidyRegressionTesting::TidyTestRecord::DateTime (NameError)\n```\n\nBut then I wanted to use other than an `installed` tidy version - very necessary since I do not want to install this as yet un-tested tidy - and ran into the same problem as in windows when I tried to add a binary option, like -\n\n```\n$ ./regression_test.rb -t ../../build/cmake/tidy rtest\n```\n\nAll I get is the `rtest` usage??? And when I ran this without the `rtest` it shows me the correct path to `tidy` but not the correct version??? Which in this case is the `localizing` version...\n\nBut I realise this is a first cut, and lots of time, effort, thought, and testing... and can not wait until maybe it matures a little... thanks again... this seems another step down an interesting road...\n\nIt does add a Windows Ruby dependency, not normally present, but OTOH it does not seem too extreem to expect some tidy developers to take that extra install step, if they get better, more thorough **regression testing**, and perhaps other testing...\n\nI have been experimenting with an [Test-Tidy](https://github.com/geoffmcl/tidy-test/blob/master/Test-Tidy.md) app, and must take the time to look closely at the mis-match cases I found there, and see if they compare to those you mentioned. Of course that is other than those where the you have **changed** the string, if that is the only difference...\n\nMy list from that testing is 445557, 500236, 647255, 649812 and 658230!\n\nI would really like to understand, and do something about these `exceptions`... they niggle me all the time...\n. @balthisar ok it now runs in Windows! Thanks ;=)) But in unix I get the same error as @mcepl!\n\n```\nregression_test.rb:219:in `make_report': uninitialized constant TidyRegressionTesting::TidyTestRecord::DateTime (NameError)\n```\n\nConcerning version of tidy in the tests, maybe line 540 in regression_test.rb is the problem `tidy_out.split.last.scan(/\\d+/).join('.')`. It seem this `split` needs to include more than numbers, like `5.1.32localizing` so I exactly know which tidy is being used. Sorry do not know rudy enough to correct that... but why is that not just `tidy_out.split.last`? Seemed to work for me...\n\n**But what have you added to these tests?**\n\nIt seems you have now added the contents of the test\\html5 folder, and sub-folder??? These are not `regression tests`! These were just **development** files I added while I was working on adding html5 support, way back in my fork... and when htacg merged my fork, they were just sort of left there... and the topic sort of did not come up...\n\nI did **think** about formalising them, but as the 20140805 README.txt I wrote says it, was more about comparing to tidy 2009 output, than comparing two modern current versions of tidy... I have not used them for ages... they were just for development... they perhaps should have been deleted... \n\nI certainly do not think they should be added to your `benchmarks/cases`!\n\nNow if you want to **add** more tests then I have been keeping a `test\\input5` folder, and for just about every bug I have worked on has one or more test cases in there. Over 300 files! I have developed batch files to run these cases, but I have not added a `base` compare... that could be done. Using these would certainly be a `regression test` for each recent bug.\n\nBe aware it includes files for the re-testing of some of the old SF bugs, some `edbrowse` bugs, and assorted others... It is quite a **MESS** really... so again I am not sure if this is the time to add those... but advise and I will push them...\n\nAnd have not checked, but what about the list in `xmlcases.txt`? But I am fairly sure I did not add a `testbase` output for them... not sure...\n\nBut I do not think we should be looking to expand, increasing the tests at this time. As stated, it seems the first priority is to achieve a clean run, in any/every OS/CPU, on the `testbase` ;=)) a proof of concept...\n\n##### Access Testing\n\nNow part of that **base** testing was to do the access tests. Although I have not checked carefully or fully yet, it seems the access tests do need some TLC - see #338, which was reported so long ago, and still exists within tidy today...\n\nOf course these access tests do **NOT** compare the output with another `base` output, but rather that the expected access warning value is shown. That is, they uses `grep` (or `find` in windows) to find the expected say `1-1-1-1` in the current message output... \n\nMaybe this could be another test type like `atest`, instead of `rtest`, or something... and as seen in my #338 case, maybe some of the access warning values, and/or descriptions, and maybe when emitted, do need some work...\n\n##### Missing files\n\nNow you mention missing `testbase` files, but I am sure you do realise in certain tests there is no html output due to the fact that tidy detected a html error and `--force` was not added to the config, so there is **no** html output. And it would thus be an error if an output was found! IIRC there were 6 of this type 427676 434100 647900 1002509 1063256 2046048, but need to check... these are the tests that exit with a `2`...\n\nAnd then of course there is 431958, which I only 'discovered' recently! It uses `write-back: yes` in its config! That is, it modifies the input file!!! So there will be no html in `testbase` for it. Interesting that only `$ git status` would show if this test failed in that there should be no write-back modification of the input ;=))\n\nThen there is case 431895! The **only** test to use `gnu-emacs: yes` in its config. And this **must** show a difference in the path separator between unix and windows. I note you did not include a `case-431895-expect.txt`. But how does `rtest` avoid showing this as a problem either in one or the other OS, depending on what `-expect.txt` is added. Can we have say 2 expects, like an `expect-u.txt` and `expect-w.txt`, and switch compare unix/win32?\n\nAs repeated, I hope we can go back to just `testcases.txt`, plus perhaps `xmlcases.txt`, and solve, decide on, discuss, fix,  the specific problems in those, so we can have a clean run... \n\nAnd maybe consider something different for `access` testing... this would go a long way to showing the viability of this Ruby scripted solution...\n\nJust my 10 cents ;=))\n\nOT: While I am **not** suggesting Travis CI for this htacg, at least not yet, I am trying to experiment with it from my fork. @mcepl do you have something running in Travis CI? See https://travis-ci.org/geoffmcl/tidy-fork... Seems I need `rake` or something... do you have a working .yml file? Any help appreciated...\n. @mcepl, hey, I am **not** a Rubyist ;=)) Nor am I a Python guy ;=((\n\nI am a C/C++ coder, and only use scripts where I really have to! And even then usually only until I write some C/C++ to do the same thing... usually not because it is faster, or easier, or anything, ... but because I love C/C++ coding...\n\nBut forget 'testing' for now... can you setup your [fork](https://github.com/mcepl/tidy-html5) to just build on Travis CI... that is clone the repo, cd build/cmake; cmake ../..; make;... that would be a great start... thanks...\n. @mcepl thank you... I have dropped that cmake version back to 2.8.7... There was no real reason to have a minimum version of 2.8.8... and it could be even lower... tidy CMakeLists.txt makes no use of cmake feature since probably 2.8.0, and even probably **LONG** before that... maybe even say 2.6...\n\nI did not understand the install: target comment... We would only need to `install` in Travis CI if something else **only** worked if the package is `installled`... but to me everything else just correctly depends on creating a `build/cmake/tidy` executable... it does not need to be installed... It, by default, is links with a static _`libtidy`_, so unless other cmake options are added, the tidy exe is self contained, and can run from anywhere...\n\nCan you try the build again? thanks...\n. @balthisar yes, I can understand my `accidently` added HTML5/4 files **could** be use in `regression testing`, even given that they did not have that original purpose, but they would need to be culled heavily, **and** a `basetest` **standard** output added... just work, effort, thought, and discussion, on what is being added, and that the test is not already tested in other tests...\n\nRemoving them would reduce a `lot of noise`, and the work to add to the `base`, ie the `expect.txt/html`, that is all...\n\nHmmmm, I do not think `access` testing should be, or can be, based on the same `basetest` file comparision. If we correct **one** access message, or suppress it due to html5, etc, thus changing the output text, then that should not invalidate perhaps several other access test **comparisons**, for the wrong reason?\n\nNo, the access tests were designed to output a specific access value, and the tests success or failure depends on that alone. Not on what else was output... or have I got the wrong idea here?\n\nMaybe you do \"capture non-forced output\", although I do not quite understand that... do you want the ruby script to read and parse the config to see if `force-output: yes` is there? to decide if there will be no html output??? A quick check of the `input` config files only shows 647900 as having it... that seems excessive... and difficult... again maybe I do not understand...\n\nBut you seem on a roll with this, so no negative thoughts intended... **go for it** ;=))\n\nGlad the xml tests were included... and good luck with the Ubuntu VM install...\n\nOh, I have not yet understood what to `canonize` them actually means... still to try that option...\n. @mcepl thanks for your Travis CI lead ;=)) I just needed a working sample... I think the Ruby bug seems gone in the latest... you need to rebase your fork, specifically the `testing` branch...\n\nI have not yet tried the Ruby road, but was able to do the previous [regression tests](https://github.com/htacg/tidy-html5/blob/master/test/README.md) without too much trouble... Used a [travis.yml](https://travis-ci.org/geoffmcl/tidy-fork) file of -\n\n```\n# whitelist - only specific branches\nbranches:\n  only:\n    - master\n    - testing\nlanguage: c\nrvm:\n    - 2.0.0\naddons:\n  apt:\n    packages:\n    - cmake\n    - xsltproc\nsudo: false\n#install:\n#    - bundle install --gemfile=test/benchmarks/Gemfile\nbefore_script:\n    - cd build/cmake\n    - cmake ../..\n    - make\n    - cd ../../test/\n    - ls -l ../build/cmake/tidy\n    - ls -l ../build/cmake/\nscript:\n    - ./testall.sh\n    - diff -ua testbase tmp\n# eof\n```\n\nThis gets me back to seeing the problem tests I am concerned about **solving**, namely -\n- 431895 txt - but just a leading `./` by the script I think - can be fixed\n- 500236 html - can't quickly spot the difference - need to check\n- 661606 html - a whole file diff??? quite strange - need to check\n\nBut wow, in general this is **not** something I want run each time I do a push... maybe there is a way to have a specific single trigger, like pushed a version.txt file change only, or something... \n\nQuite fun initally, but frustrating to debug (yaml/compile/versions/...) problems... and too slow to be any real dev cycle use - after a push I could fall asleep waiting for the vm to start, clone, setup, ... ;=)) \n\nAnd it seems a `testing` build overwrites the `master`... well nothing of the vm is kept after the finish - of course you can keep the text log (with ansii color sequences)...\n\nWill continue to experiment, sporatically, now and again... and I notice they have an osx vm ;=)) thanks...\n. @alvestrand at this moment `testing` is under HEAVY development in a new repo - [tidy-html5-tests](https://github.com/htacg/tidy-html5-tests)...\n\nWe are getting there, and shall hopefully shortly add a big notice here... sorry for the delay...\n. @alvestrand things have massively progressed in the testing repo [tidy-html5-tests](https://github.com/htacg/tidy-html5-tests), thanks largely to @balthisar, the latest being in the `refactor` branch of that repo... . You can forget 90% of the discussion above, since so much has changed since then...\n\nMost of the readme instructions have also be updated once you checkout that `refactor` branch, but to state it simply, assuming unix, but it is very similar in windows, and assuming the clones are into the same `root` folder, and using the default repo directory names...\n- Clone latest tidy from [tidy-html5](https://github.com/htacg/tidy-html5), `master` branch, currently version 5.1.42\n- Build the latest tidy 5.1.42, in build/cmake. There is no need to install it. Check `./tidy -v` emits 5.1.42\n- Clone latest tests from [tidy-html5-tests](https://github.com/htacg/tidy-html5-tests), and checkout `refactor` branch.\n- Change to `tools-sh` folder, and run `./testall.sh ../../tidy-html5/build/cmake/tidy`. Should be no errors reported.\n- Compare the results - `diff -ua ../cases/testbase-expects ../cases/testbase-results`. Should exit cleanly - no diffs!\n\nIf both `testall.sh` and `diff` report no errors, you have **successfully** run some 224 regression tests. If in windows, use the tools-cmd, and run `alltest.bat path\\to\\tidy.exe`, and the same diff... Advise if you have any problem... \n\nNow you are ready to make changes in the tidy source... do fixes, add features, changes, what ever..., and at any time you can run the above test suite again, using your new tidy, to make sure you have not triggered some regression problem.\n\nOf course, if your tidy changes changed some message strings, or the order of warning output, then you can expect a difference, but any other difference should be investigated very carefully.\n\nAnd of course even then, such difference may in fact be an improvement in tidy, and when your changes are accepted, merged into tidy, version updated, then a final step would be to also update the particular tests `expects` to reflect that change. In effect the **source** repo and the **tests** repo will march forward, version by version. Mismatches can produce many differences...\n\nThis testing repo will only function from 5.1.42 onwards. No attempt has been made to provide the correct `expects` output to earlier versions. But why would you need that?\n\nWe shall now steadily add new tests, and variations on tests, like with different configs, etc, but this is starting to feel very solid.\n\nNow we are still testing and refining this `regression test` process, hence the use of a branch, so your assistance in reporting any problems, ideas, etc would be very much appreciated... thanks...\n. @joeheyming, @mcepl, @alvestrand, as discussed above, thanks to @balthisar, the **testing** has been moved to its own [tidy-html5-tests](https://github.com/htacg/tidy-html5-tests) repository...\n\nThe READMEs there should clearly explain the process. For the moment it is still in a `refactor` branch of that repo, but hope that will soon be merged back into `master`.\n\nAlso for the moment we have returned to using batch scripts for Windows, in the `tools-cmd` folder, and bash scripts for unix, in the `tools-sh` folder... \n\nBut basically, after you have built tidy, from this source, in a `tidy-html5/build/cmake` directory, on the same level as the **tests** repo clone, that is in the **same** root, you should be able to run **`alltest.bat`** in `tools-cmd` folder for windows, and **`run-tests.sh`** in the `tools-sh` folder for unix, and see the results of presently of about 225 `testbase` tests...\n\nThere are other options, like exactly which tidy exe to use, and other tests... consult the README for these...\n\nSo any further discussion on **testing** should be in [issues](https://github.com/htacg/tidy-html5-tests/issues) there, and of course forks and [pull requests](https://github.com/htacg/tidy-html5-tests/pulls) are always appreciated...\n\nWe could really do with some help expanding and refining these tests...\n\nMeantime, closing this here... But hope to see you on the other side ;=)) \n. @thlinard thank you for the report... I tried to construct a sample from your fragments but did not succeed.\n\nAs with #333 could you please supply a small input sample, show tidy version, config used, output and expected output... thanks...\n. @thlinard thanks for the additional input information...\n\nUsing a slightly modified sample, which passes W3C [validation](https://validator.w3.org/#validate_by_upload) -\n\n``` html\nhtml\n\n\n\nIssue #332\n\n\nIt'(s)\n\n\n```\n\nWhen I run tidy on this, using the default configuration, I see -\n\n```\n$ tidy input5\\in_332.html\nline 8 column 9 - Warning:  attribute \"href\" lacks value\nInfo: Document content looks like HTML5\n1 warning, 0 errors were found!\n```\n\n``` html\nhtml\n\n\n\n\nIssue #332\n\n\nIt'(s)\n\n\n```\n\nI do not see the extra spaces...\n\nAs requested, what is the configuration used? What is the tidy library version? thanks...\n. @thlinard that ouput-xml option causes the `PPrintXMLTree` service to be used, which has **not** always received the same attention as the main HTML Pretty Print service, `PPrintTree`, but they do shares many of same `PPrintxxxxx` services, but can have differences... See the code -\n\n```\n    if ( xmlOut && !xhtmlOut )\n       TY_(PPrintXMLTree)( doc, NORMAL, 0, &doc->root );\n```\n\nI do not understand what you mean by `former Tidy`, `old set`...? Testing your sample using the last SF cvs release circa 2009, it outputs the same as tidy 5.1.32 (2015) when the `--output-xml yes` option is used. This is certainly the intended behaviour, but that can change...\n\nWe could leave this open as a **Feature Request**? If anyone has an idea, patch, or PR on improving this xml output, then they would certainly be considered...\n. Moving this to indefinite until someone comes up with a patch or a PR to the `xmlOut`, `PPrintXMLTree1` handler...\n. @spookyahell all I can say is I am losing track of the real problem here...\n\nI would repeat the option `--ouput-xml yes` has **not** received that attention it deserves... but it does its current best, and does not seem to produce the addtional `added space` first reported here... So I do **not** see the extra newline shown in the original post!\n\nIf you are experiencing the **same problem** please add a sample input used, and the configuration used, what current tidy, 5.1.36 plus, `master` branch, outputs, and what you expect... then maybe something can be looked at, and done...\n\nAnd I am not sure why you say \"--markup no\" is not accepted by tidy? In my testing that does exactly what is says - no markup generated! What else do you expect from this option?\n\nVery confused... please explain... thanks...\n. @spookyahell correction... yes there is a newline added in the output, but that has **always** been there... What exactly shoud be changed?\n\nComments, ideas, PR always welcome...\n. @spookyahell, thanks, yes now understand! If you do not want tidy to wrap those lines 448/449, then add `-wrap 0`, or some other big number, to your config and it wont...\n\nWith `-w 0` you will get, now around output line 226, as lots of other lines are also wrapped at the default 68 chars... see [wrap](http://api.html-tidy.org/tidy/quickref_5.1.25.html#wrap) documentation...\n\n```\nThe Big Bang Theory - The Platonic Permutation (Clips).zip\n```\n\nBTW, I used version 5.1.36 for this test of my in_332-1.html from your dropbox, but I do not think there has been any change in this since 5.1.25...\n\nHTH! Can this be closed?\n. @thlinard thank you for the report... as you may know RDFa support #209 / #292 is quite new to tidy.\n\nTo speed up the testing could you please supply a small input sample, show tidy version, config used, output and expected output... thanks...\n. @thlinard sorry if I confused the situation. As per #209, @halindrome added our initial RDFa support, and at the moment I see this an extension of that support.\n\nLooking at the code - [tags.c#L232](https://github.com/htacg/tidy-html5/blob/master/src/tags.c#L232) - we can see that the tag `TidyTag_META` is marked with a `CM_HEAD` bit. That tells tidy, in legacy html4-- mode, this can only exist in the head. So it politely moved them...\n\nSo perhaps one part of this, if I read the spec correctly, and as per your sample, it seems `meta` can be used anywhere. That means, in the above table entry, it probably should have the `CM_HEAD` bit removed, and then be added to `AdjustTags()`, to set HTML4-- mode, **and** `ResetTags()`, to reset HTML5++ mode, the default... something like -\n\n```\n    np = (Dict *)TY_(LookupTagDef)( TidyTag_META );\n    // AdjustTags to html4-- mode add `CM_HEAD`\n    // ResetTags  to html5++ mode, remove `CM_HEAD`, the default in the table\n```\n\nIt also looks like, that if these two services continue to grow, the changes could be put in a table, or something... rather than just linear growth as at present... but that is secondary here...\n\nAnd perhaps you are right, that the `attrdict.c`, `const AttrVersion TY_(W3CAttrsFor_META)[] =` needs to be extended for more attributes for the `HT50|XH50` pages? Like `TidyAttr_ITEMPROP` and maybe others...\n\nI do not have time right now to experiment with these fixes, but will get to it! Maybe it needs more than these adjustments?\n\nBut, to be clear, what we want is **to implement full microdata support in tidy**, RDFa! Anything you, @halindrome or others can do towards this would be very much appreciated, like patches, or a PR from a fork, in say an `issue-333` branch... thanks.\n. @halindrome your comments are well noted...\n\nIt also does not help that the W3C validator passes the following, while tidy barks and mangles dropping the span -\n\n``` html\nhtml\n\n\n\nIssue #333 - RFDa support - 2\n\n\n\n\n\nThe Castle (1986)\n\n\n\n```\n\nAs stated, any help appreciated... thanks...\n. @thlinard, @halindrome since no one has come forward to work on this, am moving the milestone to 5.3\n\nWe are considering a release 5.2 shortly and it is unlikely to be fixed before then...\n\n**Tidy needs your help!**\n. As we are about to release 5.4, and nothing has been done about this, as before moving ti to `next` 5.5... thanks...\n. @thlinard, @halindrome - Just reviewing this, especially using the above **sample**, which passes W3C validation, the problem happens in `parser.c`.\n\nWe are here with the `meta` node, and the `span` element, so we enter this block - \n\n```\n        /* block level tags end this element */\n        if (!(node->tag->model & CM_INLINE) &&\n            !(element->tag->model & CM_MIXED))\n        {\n```\n\nSo we could add **CM_INLINE** to `TidyTag_META`, but that would cause lots of `meta` tags in the `head` of the document to not be put on a new line, and that looks awful...\n\nWe could add **CM_MIXED** to `TidyTag_SPAN`, but that would cause some `span` tags to be propogated, getting more `span` tags added, which is also a **mess**!\n\nBut to **fix** this problem we **must** not enter this block of code, so could create another condition that blocked it...\n\nCould sort of create this **single**, specific exception with -\n\n```diff\ndiff --git a/src/parser.c b/src/parser.c\nindex dd9d11e..9023ba6 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -2149,9 +2149,17 @@ void TY_(ParseInline)( TidyDocImpl* doc, Node *element, GetTokenMode mode )\n             }\n         }\n\n-        /* block level tags end this element */\n+        /*\\\n+         *  block level tags end this element \n+         *  Issue #333 - There seems an exception if the element is a 'span',\n+         *  and the node just collected is a 'meta'. The 'meta' can not have\n+         *  CM_INLINE added, nor can the 'span' have CM_MIXED added without\n+         *  big consequences.\n+         *  There may be other exceptions to be added...\n+        \\*/\n         if (!(node->tag->model & CM_INLINE) &&\n-            !(element->tag->model & CM_MIXED))\n+            !(element->tag->model & CM_MIXED) &&\n+            !(nodeIsSPAN(element) && nodeIsMETA(node)) )\n         {\n             if ( !TY_(nodeIsElement)(node) )\n             {\n```\n\nThen the output from the above sample becomes -\n\n```html\nNo warnings or errors were found.\n\nhtml\n\n\n\n\nIssue #333 - RFDa support - 2\n\n\n\n\n\n\n\n      The Castle (1986)\n    \n\n\n\n```\n\nThis patch causes no regression tests to break, and gets tidy through a document that passes W3C validation...\n\nHave pushed this to the `issue-333` branch, and would ask others to test... thanks...\n. @balthisar sorry I wrote 5.1 but meant 5.2, now edited... stupid mistake...\n\nSo it seems we agree, the next Release is 5.2.0!\n\nBut I am unsure why I am bringing this up now... really **5.1.25** was just 'released' on 2015/11/23, so it is not that urgent...\n\nBut to cover some parts of it now... like **choosing a candidate**. \n\nVersion 5.1.32Exp (in `issue-329` branch) feels good, after some more testing of this profond change in the parsing of a `` followed by a newline, and it is eventually merged to `master`... maybe at least another few weeks or so, or even Jan, Feb,... that is say 5.1.33++ territory...\n\nAccordingly have updated the 5.2 milestone to January 22, 2016 for now, added a 5.2.x Feb 22,2016, and added a 5.3 March 22, 2016, and will get around to migrating some more issues to them so the percentage stats look right... and get around to closing some that are in release 5.1.25, so the stats for that should read 100% closed...\n\nBut another part is to begin to document the **steps needed for a release**, and maybe designate who will deal with what. This is just an initial list. Those marked with (G) I could/would do -\n- Update version.txt (G)\n- Update verslog.txt (G)\n- Create TAG, create release (G)\n- Generate 5.2.0.html for binaries (G)\n- Add binaries (G-win/ubu) (B-mac?)\n- Add api doc (B?)\n- Update web page (G or B?)\n- Create 5.2.x milestone (?)\n- Other things?\n\nThis list needs to be filled out. I have some scripts for the updating of verslog.txt (2), gen. of html (4), add bins (5), which I can share... maybe we add say a `meta` repo, and these could be added to a `scripts` folder, or something... These are just for releasing and I do not think should be in tidy source directly, but...\n\nAs I have said somewhere, item 4, gen. of the html for the binaries, the [release notes](http://binaries.html-tidy.org/binaries/tidy-5.1.25/5.1.25.html), does need some TLC. It is presently a very dry list of the git commit log, with email address obfuscation, and an authors list... at present this is gen. by -\n\n```\n# Get the changes since the last release, from verslog.txt \n$ git log \"--decorate=full\" \"--since=Sat Apr 25 19:20:16 2015 +0200\" > ../tempvXX2.log\n# get to correct folder and generate say the release 4.9.32.html \n$ emailobs f:\\Projects\\tempvXX2.log -o 4.9.32.html -a 4.9.32 -i\n```\n\n`emailobs` is just a perl script, `emailobfuscate.pl`, that reads the git log file, converts email addresses, and writes a simple html container as the output file, in this case `4.9.32.html`... minimal formatting...\n\nBut if possible, if someone could collect say a set of points, changes, improvements, issue closed, etc, and this text could be added to the top of this file as a far more succinct `release notes`... Just an idea...\n\nNote that item 3 fires the [tag](https://github.com/htacg/tidy-html5/tags.atom) feed, used by some distributions as a signal for an update, most notably, homebrew(http://brew.sh/)...\n\nBut, at this time #329 needs some testing... and maybe do some other fixes, or minor features added... \n\nWhat about `localize` or should this be later? As a 5.2.x?\n\nAfter that 5.2.0 release, maybe some more, other intermediate 5.2.xx, if needed, before 5.3, 5.4 etc... and so on... \n\nThis seems good to go?\n. @AnWeber thanks for the report, sample, version, etc... yes, 6 tabs seems a tad too many ;=))\n\nThis is still present in the latest 5.1.32Exp version... `issue-329` branch...\n\nWill look at this soonest. If you find a solution in the code, say in your fork, then patches, PRs very welcome... thanks...\n. @AnWeber hmmm, without the [indent-with-tabs](http://api.html-tidy.org/tidy/quickref_5.1.25.html#indent-with-tabs) the indent for the `content=\"HTML...\"` is 6 spaces... those spaces are converted to tabs... in pprint.c... [Line 685](https://github.com/htacg/tidy-html5/blob/master/src/pprint.c#L685)...\n\nWe need to do something else if `indent_char` is a tab, other than output 6 tabs! That is `if (indent_char == '\\t')`, or the option `if (cfgBool(doc, TidyPPrintTabs))` is true... but what to do?\n\nWe could go back to where that was set, but there is some pretty hairy code there, and anyway that would really mess with the space indenting, outputting, so I think that `GetSpaces(pprint)` number stays...\n\nBut then it is the question of how many spaces does that user want the tab to represent, like 2, 4, 8, ...?\n\nSo then the tab count output could be `int cnt = spaces / user_tab_spaces; if ((cnt == 0) && spaces) cnt++;`. Now we know how many tabs to output... I do not think the answer should/will always be 1!\n\nWe could double up and use [tab-size](http://api.html-tidy.org/tidy/quickref_5.1.25.html#tab-size), but that is for input, not output. \n\nWe could use [indent-spaces](http://api.html-tidy.org/tidy/quickref_5.1.25.html#indent-spaces) but I susupect that is already used in a different way... Note it is set to 1 in [config.c:1238](https://github.com/htacg/tidy-html5/blob/master/src/config.c#L1238) when the use tabs option is on...\n\nSo do we need another option, say `tab-stops` or something? Say TidyTabStops, \"Representing the number of columns per tab when replacing indent space with tabs. See also indent-with-tabs, indent-spaces, indent-attributes, and indent\"\n\nOr can we default to something used in all cases, or fix this some other way... \n\nComments, ideas, patches, PR, very welcome...\n. @AnWeber I have no particular problem with the stop-gap method of always just using 1 tab, but nobody has stepped forward to make this change, so am moving the milestone to 5.3.\n\nWe are considering a release 5.2 shortly, and it is unlikely to be addressed and tested before then...\n. While this remains a problem, but no work has been done on it, and we are about to release a 5.4, am moving it to `next` 5.5... thanks...\n. @AnWeber reviewing this again, have decided to at least use `tab-size`, to reduce the **tabs** output, in most cases to 1...\n\nHave moved this writing of the `indent_char` to output to a single `WriteIndentChar(doc)` service, where there is more control...\n\nWhile it is not exactly related, have pushed this fix to the `issue-333` branch for testing... thanks...\n. That `WriteIndentChar(doc)` may be helpful in issue #508 where we want to add one additional indent when lines are wrapped by Tidy..\n. Since no one has stepped forward to work on this, moving the milestone to 5.3\n\nWe are considering a 5.2 release shortly, and improvements in these access warning is unlikely to happen before then...\n. In combing through the **old** SF bugs, and closing them as `out-of-date` ran across more access test problems in [Bug #797](https://sourceforge.net/p/tidy/bugs/797/) I added 2006-10-28, listing and documenting other problems with these tests...\n\nIt would be really appreciated if someone would take an interest in this issue, and hopefully commence to sort things out better... thanks...\n. Since we are to shortly release 5.4, and no work has been done on this, am moving it to `next` 5.5... thanks...\n. While the merge #541 might not exactly close this, in that there are probably other access tests that need TLC, they can be opened as new issues...\n. @gaa-cifasis, Gustavo, thank you for the detailed reports, with version, ASAN, gdb, and the sample page... this is great...\n\nBut unfortunately I can **NOT** reproduce the problem, using the `use-after-free.html` page, in Ubuntu 14.04 linux, nor in Windows 7, both 64-bits...\n\nAnd that github attachment seems a very messed up page?? Did something happen with the cut/paste/drop???\n\nBut I found perhaps the original page [here](http://www.w3.org/MarkUp/Test/HTML401/current/htmltestdocumentation.html), but still no problem found running either Tidy version 5.1.25, nor later versions, so can do nothing... I will keep trying this... experimenting...\n\nNow, we did have a buffer memory overrun problem - see #319 - where the fix was added to 5.1.26 plus I think... I do not know if this is the same or a different problem...\n\nAnd it would be appreciated if I could run ASAN in linux. What do I need to download, install? How do I set this up?\n\nDid you build the binary you are using? Or did you download and install it? From where?\n\nFor testing, I built a 5.1.25 binary from source... \n\nI did a clone of [tidy](https://github.com/htacg/tidy-html5), and a checkout, but you could also use the [zip](https://github.com/htacg/tidy-html5/archive/5.1.25.zip) source... Or you could GitHub Fork tidy, and clone from your fork...\n\n```\n$ git clone git@github.com:htacg/tidy-html5.git tidy-html5-5.1.25\n$ cd tidy-html5-5.1.25\n$ git checkout 5.1.25\ngit usual warning about detached HEAD state\n$ cd build/cmake\n$ ./build-me.sh DEBUG\ny\n$ ./tidy -v\nHTML Tidy for Linux version 5.1.25\n$ gbd --args tidy $HOME/downloads/use-after-free.html\nGNU gdb ... 7.7.1\n...\nReasing symbols from tidy...done.\n(gbd) run\n...\ntidy output -\n453 warnings, 15 errors...\n...\n[Interior 1 ... exited with code 02]\n(gdb) q\n$\n```\n\nSo how do I now get an ASAN report?\n\nAnd then I tried a test using the [original](http://www.w3.org/MarkUp/Test/HTML401/current/htmltestdocumentation.html) W3C page and just get just two warnings -\n\n```\n> tidy5-5.1.25d -v\nHTML Tidy for Windows version 5.1.25\n> tidy5-5.1.25d in_314-4.html\nline 40 column 28 - Warning: replacing invalid UTF-8 bytes (char. code U+0007)\nline 760 column 1 - Warning:  lacks \"summary\" attribute\nInfo: Doctype given is \"-//W3C//DTD XHTML 1.0 Strict//EN\"\nInfo: Document content looks like XHTML 1.0 Strict\n2 warnings, 0 errors were found!\n```\n\nAnd that `tidy5-5.1.25d` executable is a special Debug build of tidy which will also detect a write/read to freed memory, as well as lots of other memory problems... but it shows nothing, with either file... nor under MSVC debug mode which always detects this... so...\n\nWe need to narrow down the problem by reducing the html to a minimum sample, and get a repeatable **bug**... and test with later versions... get an ASAN report... get to a **fix** ;=))\n\nAnything you can do to help would be most appreciated... thanks again...\n. @gaa-cifasis thanks, tried valgrind, first on the **`good`**, original page - and no problems -\n\n```\n~/projects/html_tidy/tidy-html5-5.1.25/build/cmake$ valgrind tidy -o temp1.html $HOME/downloads/HTML-Test-Suite-Documentation.html\n==4694== Memcheck, a memory error detector\n==4694== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==4694== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info\n==4694== Command: tidy -o temp1.html /home/geoff/downloads/HTML-Test-Suite-Documentation.html\n==4694== \nline 40 column 28 - Warning: replacing invalid UTF-8 bytes (char. code U+0007)\nline 760 column 1 - Warning:  lacks \"summary\" attribute\nInfo: Doctype given is \"-//W3C//DTD XHTML 1.0 Strict//EN\"\nInfo: Document content looks like XHTML 1.0 Strict\n2 warnings, 0 errors were found!\n==4694== \n==4694== HEAP SUMMARY:\n==4694==     in use at exit: 0 bytes in 0 blocks\n==4694==   total heap usage: 2,911 allocs, 2,911 frees, 278,364 bytes allocated\n==4694== \n==4694== All heap blocks were freed -- no leaks are possible\n==4694== \n==4694== For counts of detected and suppressed errors, rerun with: -v\n==4694== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n```\n\nThen with the MESS downloaded - this is a really **broken** file -\n\n```\n~/projects/html_tidy/tidy-html5-5.1.25/build/cmake$ valgrind tidy -o temp2.html $HOME/downloads/use-after-free.html\n==4700== Memcheck, a memory error detector\n==4700== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==4700== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info\n==4700== Command: tidy -o temp2.html /home/geoff/downloads/use-after-free.html\n==4700== \nline 1 column 32 - Warning: replacing invalid UTF-8 bytes (char. code U+0004)\nline 1 column 1 - Warning:   converting backslash in URI to slash\nline 1 column 1 - Warning:   escaping malformed URI reference\nline 4 column 12 - Warning: replacing invalid UTF-8 bytes (char. code U+0080)\nline 4 column 13 - Warning: replacing invalid UTF-8 bytes (char. code U+00FF)\nline 4 column 14 - Warning: replacing invalid UTF-8 bytes (char. code U+00FF)\nline 4 column 15 - Warning: replacing invalid UTF-8 bytes (char. code U+00FF)\n... many MANY warnings skipped ...\nline 40 column 9 - Warning:  attribute \".html\" lacks value\nline 40 column 9 - Error:  is not recognized!\n==4700== Invalid read of size 1\n==4700==    at 0x4130F9: prvTidytmbstrdup (in /usr/bin/tidy)\n==4700==    by 0x446573: prvTidyInsertedToken (in /usr/bin/tidy)\n==4700==    by 0x42C771: prvTidyGetToken (in /usr/bin/tidy)\n==4700==    by 0x41E6E2: prvTidyParseInline (in /usr/bin/tidy)\n==4700==    by 0x41E8A4: prvTidyParseInline (in /usr/bin/tidy)\n==4700==    by 0x41E8A4: prvTidyParseInline (in /usr/bin/tidy)\n==4700==    by 0x41FF36: prvTidyParseRow (in /usr/bin/tidy)\n==4700==    by 0x420C10: prvTidyParseTableTag (in /usr/bin/tidy)\n==4700==    by 0x4225CC: prvTidyParseBody (in /usr/bin/tidy)\n==4700==    by 0x423B1F: prvTidyParseDocument (in /usr/bin/tidy)\n==4700==    by 0x416619: prvTidyDocParseStream (in /usr/bin/tidy)\n==4700==    by 0x416735: tidyParseFile (in /usr/bin/tidy)\n==4700==  Address 0x5290580 is 0 bytes inside a block of size 3 free'd\n==4700==    at 0x4C2BDEC: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==4700==    by 0x4463C8: prvTidyPopInline (in /usr/bin/tidy)\n==4700==    by 0x41F233: prvTidyParseInline (in /usr/bin/tidy)\n==4700==    by 0x41E8A4: prvTidyParseInline (in /usr/bin/tidy)\n==4700==    by 0x41E8A4: prvTidyParseInline (in /usr/bin/tidy)\n==4700==    by 0x41FF36: prvTidyParseRow (in /usr/bin/tidy)\n==4700==    by 0x420C10: prvTidyParseTableTag (in /usr/bin/tidy)\n==4700==    by 0x4225CC: prvTidyParseBody (in /usr/bin/tidy)\n==4700==    by 0x423B1F: prvTidyParseDocument (in /usr/bin/tidy)\n==4700==    by 0x416619: prvTidyDocParseStream (in /usr/bin/tidy)\n==4700==    by 0x416735: tidyParseFile (in /usr/bin/tidy)\n==4700==    by 0x4093D0: main (in /usr/bin/tidy)\n==4700== \n```\n\nAnd this block is repeated 3 or 4 times...\n\nSo this only happens for me with the really messed file, but given that tidy should handle everything, maybe it is still a valid sample? But maybe not??\n\nThese appear to be in prvTidytmbstrdup()... just about out of time today, but will re-check #319 ... what was the fix there? Was this in 5.1.25 or not? etc... And will take a look at Tidy's strdup function... And I note Tidy's internal TY_(tmbstrlen) returns only byte count until the first zero, and your `sample` file does contain quite a few '0' bytes... \n\nUsing `$ xxd -g 1 file` on the bad downloaded html file I can see (linux and WIN32) -\n\n```\n0000020: 54 44 20 48 00 10 4c 20 34 2e 30 31 2f 16 45 4e  TD H..L 4.01/.EN\nand\n00000b0: 47 62 41 64 79 3e 0d 0a 3c 64 72 69 66 79 20 00  GbAdy>....@div \nand\n0000110: 73 54 00 20 04 00 64 22 3e 54 65 73 74 20 66 6f  sT. ..d\">Test fo\nand\n0000140: 68 34 20 6e 20 31 ff ff 33 2e ff 7f 00 00 2f 64  h4 n 1..3...../d\nand\n0000160: 6f 6c 6c 6f 77 69 6e 67 00 00 80 00 6c 50 2c 20  ollowing....lP, \n0000170: 74 68 65 20 00 04 72 64 65 72 20 61 74 74 72 69  the ..rder attri\nand\n0000230: 0a 3c 74 72 3e 3c 74 64 00 00 60 10 6c 65 20 44  ......i>not[NUL][NUL][NUL]an style=\"text-decoration:underline\">underlined\n```\n\nThat `` is put on the istack, to be propogated... When tidy gets to the `` it must close the ``, so pops the istack... Then something strange - it thinks it is dealing with an `` so pops and frees too much including the `` but then wants to duplicate that node, which is an ``, which has been freed... so three bytes are read `e`, `m`, plus the [NUL], twice - once getting the length, and again to do the copy == 6 read errors...\n\nBut something does not make sense here... why is an `` mistaken as an ``???????\n\nIt shows up differently in Windows MSVC Debug, but it is there. In this heavy debug mode, freed memory is not actually freed, but filled with a pattern, to check if it is ever later written to... But it is not written to, so no warning, only read after being freed... so no auto-detection... but looking at the node added to the tree it now has a name of that pattern up until the first nul... So you get a strange warning message like - `line 67 column 102 - Warning: inserting implicit `...\n\nAnd I also installed [Dr.Memory](http://drmemory.org/) for Windows (32-bit), and it confirms it, in a report similar to valgrind... so am adding back the **bug** classification...\n\nBut as I say, if you let your editor modify that file too much, it stops happening... So it is quite a unique sequence that triggers it...\n\nIn the [original](http://www.w3.org/MarkUp/Test/HTML401/current/htmltestdocumentation.html) file that is line 81 -\n\n``` html\nSample hyperlinks from test suites are not underlined\n```\n\nIt does not matter how it got munged, just that it did and provides this sample...\n\n### The Solution\n\nNow, as you point out, we could just abort file processing if we find a [NUL]. That's an option... **and** it is agreed Tidy must not have this memory problem...\n\nBut in tracing through the code, Tidy handles well **all** control characters from the file stream. It specifically deals with `\\n`, `\\r`, `\\t`, `\\f`, and simply tosses all others less than 32... just go an read the next character from the stream. It also seems to deal well with invalid utf-8 sequences... makes a lot of noise about them...\n\nSo much noise that I had to remember a little used options concerning seeing **all** warnings and errors, namely `--show-errors 600`, to see them all...\n\nSo it **should** be able to handle binary files, with any random sequence of characters, if I can find and fix the specific `trigger` in this case... and convince myself this is closed, and can **not** happen again... then maybe, just maybe, we do not need to use the abort option... \n\nWill work on it some more... Thanks for an interesting bug ;=))\n\n### ASAN Testing\n\nAnd also thanks for the ASAN tutorial pointer. Just adding the following cmake options, I got it compiled in -\n\n```\ncmake-clean # a script I have to blow away ALL the last build files...\ncmake ../.. -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_C_FLAGS=-fsanitize=address -DCMAKE_BUILD_TYPE=Debug -DENABLE_DEBUG_SYMBOLS:BOOL=TRUE\nmake\n```\n\nAnd running the resulting Tidy, `HTML Tidy for Linux version 5.1.33Exp` in this case, on the **bad** file, I get a similar report -\n\n```\n$ ./tidy --show-errors 600 path/to/bad/file\n... skipped ...\nline 56 column 21 - Warning: missing  before \nline 58 column 1 - Warning:  isn't allowed in  elements\nline 8 column 1 - Info:  previously mentioned\nline 58 column 4 - Warning: inserting implicit \nline 58 column 4 - Warning: inserting implicit \nline 63 column 1 - Warning: plain text isn't allowed in  elements\nline 8 column 1 - Info:  previously mentioned\nline 63 column 1 - Warning:  isn't allowed in  elements\nline 8 column 1 - Info:  previously mentioned\nline 64 column 1 - Warning: inserting implicit \nline 64 column 1 - Warning: inserting implicit \nline 67 column 40 - Warning: replacing unexpected span by \nline 67 column 95 - Warning: discarding unexpected \n=================================================================\n==5035== ERROR: AddressSanitizer: heap-use-after-free on address 0x60040000ba30 at pc 0x4201c1 bp 0x7fff8bc3da80 sp 0x7fff8bc3da78\nREAD of size 1 at 0x60040000ba30 thread T0\n    #0 0x4201c0 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x4201c0)\n    #1 0x41faf9 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x41faf9)\n    #2 0x48c3df (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x48c3df)\n    #3 0x458db5 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x458db5)\n    #4 0x43e15c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x43e15c)\n    #5 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #6 0x43e11c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x43e11c)\n    #7 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #8 0x43e11c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x43e11c)\n    #9 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #10 0x4407e5 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x4407e5)\n    #11 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #12 0x442975 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x442975)\n    #13 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #14 0x447662 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x447662)\n    #15 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #16 0x44942a (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x44942a)\n    #17 0x44a55c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x44a55c)\n    #18 0x425e8f (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x425e8f)\n    #19 0x4246e9 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x4246e9)\n    #20 0x424344 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x424344)\n    #21 0x40e159 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x40e159)\n    #22 0x7ff184c67ec4 (/lib/x86_64-linux-gnu/libc-2.19.so+0x21ec4)\n    #23 0x409138 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x409138)\n0x60040000ba30 is located 0 bytes inside of 3-byte region [0x60040000ba30,0x60040000ba33)\nfreed by thread T0 here:\n    #0 0x7ff18502033a (/usr/lib/x86_64-linux-gnu/libasan.so.0.0.0+0x1533a)\n    #1 0x47cc3b (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x47cc3b)\n    #2 0x48b6ae (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x48b6ae)\n    #3 0x48b701 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x48b701)\n    #4 0x48b93b (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x48b93b)\n    #5 0x43cbcc (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x43cbcc)\n    #6 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #7 0x43e11c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x43e11c)\n    #8 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #9 0x43e11c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x43e11c)\n    #10 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #11 0x4407e5 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x4407e5)\n    #12 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #13 0x442975 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x442975)\n    #14 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #15 0x447662 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x447662)\n    #16 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #17 0x44942a (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x44942a)\n    #18 0x44a55c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x44a55c)\n    #19 0x425e8f (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x425e8f)\n    #20 0x4246e9 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x4246e9)\n    #21 0x424344 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x424344)\n    #22 0x40e159 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x40e159)\n    #23 0x7ff184c67ec4 (/lib/x86_64-linux-gnu/libc-2.19.so+0x21ec4)\npreviously allocated by thread T0 here:\n    #0 0x7ff18502041a (/usr/lib/x86_64-linux-gnu/libasan.so.0.0.0+0x1541a)\n    #1 0x47cb4e (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x47cb4e)\n    #2 0x41fb5b (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x41fb5b)\n    #3 0x48b37c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x48b37c)\n    #4 0x43aeb8 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x43aeb8)\n    #5 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #6 0x43e11c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x43e11c)\n    #7 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #8 0x43e11c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x43e11c)\n    #9 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #10 0x43e11c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x43e11c)\n    #11 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #12 0x4407e5 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x4407e5)\n    #13 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #14 0x442975 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x442975)\n    #15 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #16 0x447662 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x447662)\n    #17 0x436f80 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x436f80)\n    #18 0x44942a (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x44942a)\n    #19 0x44a55c (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x44a55c)\n    #20 0x425e8f (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x425e8f)\n    #21 0x4246e9 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x4246e9)\n    #22 0x424344 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x424344)\n    #23 0x40e159 (/home/geoff/projects/html_tidy/tidy-html5/build/asan/tidy+0x40e159)\n    #24 0x7ff184c67ec4 (/lib/x86_64-linux-gnu/libc-2.19.so+0x21ec4)\nShadow bytes around the buggy address:\n  0x0c00ffff96f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c00ffff9700: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c00ffff9710: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c00ffff9720: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c00ffff9730: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x0c00ffff9740: fa fa fd fa fa fa[fd]fa fa fa 03 fa fa fa fd fa\n  0x0c00ffff9750: fa fa fd fa fa fa 00 03 fa fa 06 fa fa fa 05 fa\n  0x0c00ffff9760: fa fa fd fa fa fa fd fa fa fa fd fa fa fa 07 fa\n  0x0c00ffff9770: fa fa 06 fa fa fa 00 00 fa fa 03 fa fa fa 05 fa\n  0x0c00ffff9780: fa fa 02 fa fa fa 00 fa fa fa 06 fa fa fa 05 fa\n  0x0c00ffff9790: fa fa 00 04 fa fa 03 fa fa fa 02 fa fa fa fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:     fa\n  Heap righ redzone:     fb\n  Freed Heap region:     fd\n  Stack left redzone:    f1\n  Stack mid redzone:     f2\n  Stack right redzone:   f3\n  Stack partial redzone: f4\n  Stack after return:    f5\n  Stack use after scope: f8\n  Global redzone:        f9\n  Global init order:     f6\n  Poisoned by user:      f7\n  ASan internal:         fe\n==5035== ABORTING\n```\n\nAnd that report again indicates some of the sequence... an `` gets on the istack, the `` is not shown... and just after discarding the ``... big trouble...\n\nSo you can see I am now on its tail ;=)) Thanks...\n. @gaa-cifasis, @monsieurp unfortunately while I have been able to repeat the bug, and sort of see the problem, it is proving quite hard to exactly track down a **fix**!\n\nAs previously mentioned the test file contains invalid 0x00, and even 0x0000 characters, but was hoping I could fix tidy to overlook this problem, rather than just **aborting** with an error message something like `this file is binary`...\n\nTidy does quietly skip over those bad character values... in fact skips all characters below 0x20, except CR, LF, TAB and FF... but in this case, tidy then frees some nodes in its tree, but then incorrectly re-reads data from one of the freed nodes!\n\nShould be simple to catch and fix, but as indicated is proving very allusive. I have removed the assignment to myself, and added **Help Needed**. Would appreciate others trying, commenting, patches, even a PR.\n. @gaa-cifasis, @monsieurp, @mjbshaw while I agree with the sentiment that it would be ok to solve this with an abort due to invalid characters in the stream, I have found a solution which allows tidy to continue even with such invalid characters, which it discards...\n\nThe problem was that something in this stream caused the istack to be freed. It is quite unique and I only found it in the first sample but not the second. But tidy wanted to duplicate a token, but there was no token to duplicate, hence the reading of freed memory. Now such duplications have one more condition to be met, and that is the istacksize is not zero.\n\n@lifeforms while I do not think this could ever be classified as a security issue, of course it is better fixed, as are all bugs...\n\nI have pushed this fix to the `issue-341` branch so I can pull it into linux and continue testing there...\n\nIt would be much appreciated if any of you could pull this branch and redo the ASAN and valgrind testing on any file... thanks...\n. @serjepatoff, yes thanks for the report... took me some time to set up a repeatable test using a 5.1.14 exe... compare the outputs... etc...\n\nAnd can confirm there is a change, even a loss, in output, that happened some time after 5.1.14... and is still there in the current 5.1.33Exp... will try to narrow that down... maybe by building successives versions, commit by commit, to see when this specifically occurred...\n\nIt would be really good if you could trim down the contents of say `Content1_original`, now my `input5\\in_342-1.html`, to the minimum, and still show just **one** of the problems, like say the missing name `Michael Kuzmin`...\n\nThis would really assist in debugging... helps narrow down the what exactly is going wrong...\n\nAbout that time there was quite a change, see #65, but may not be related. Just to be sure could you try with `--skip-nested no`, or `tidyOptSetBool(tdoc, TidySkipNested, no);`. Does this change anything? Probably not... just guessing...\n\nWill try to set up the same test, and other tests... and get back soonest...\n. @serjepatoff, have narrowed it down to a change after 5.1.24, commit 496c81c48d540f7f9ddf485cceef9443c8c7ad08, Date:   Wed Nov 18 20:02:54 2015 +0100\n\nThat is to say, it appears Tidy 5.1.24 outputs the **same** as 5.1.14... \n\nTidy version 5.1.25, commit 2388fb017565bf09b65a400175de800154909955, starts to be different... and it looks like there were two, or more, stages in the changes...\n\nYou can checkout a source for each commit, like this -\n\n```\n$ git checkout 496c81c48d\n```\n\nThis gets the source at that moment in time, 5.1.24 in this case, and you can check the version.txt file, and build a tidy for testing...\n\nI am certainly developing a collect of versions - 5.1.14, 5.1.17, 5.1.19, 5.1.22, 5.1.23, 5.1.24, 5.1.25, 5.1.27, 5.1.33Exp ;=))\n\nMaybe something to do with Issue #307, #167, #169 - regression of nestd anchors - your sample 1 document certainly appears to have some anchors not closed... but the hrefs are large and hard to follow...\n\nWill look deeper as time permits, but maybe this will assist in tracking this down... and putting together a simple sample for debug...\n. @serjepatoff, yes, it had everything to do with the above patches, which began allowing mixed content in an anchor, as per the HTML5 spec...\n\nSo your first sample does not have a doctype, so tidy would stay in html5 mode... and treat the page as html5...\n\nBut your config does set the doctype - `tidyOptSetInt(tdoc, TidyDoctypeMode, TidyDoctypeUser);` - but this was not being looked at...\n\nSo it is a simple case, if no doctype, and the TidyDoctypeMode is not 'auto', the default, nor 'html5', then flip tidy back into html4-- mode...\n\nIn this mode, tidy will again force an anchor closed as soon as it meets another element, not allowed in an anchor... and we are back to 5.1.14 anchor like parsing...\n\nThe simple patch so far is -\n\n```\ndiff --git a/src/parser.c b/src/parser.c\nindex e751130..c2d78b0 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -4744,12 +4744,21 @@ void TY_(ParseDocument)(TidyDocImpl* doc)\n         /*\\\n          *  #72, avoid MISSING_DOCTYPE if show-body-only. \n          *  #191, also if --doctype omit, that is TidyDoctypeOmit\n+         *  #342, adjust tags to html4-- if not 'auto' or 'html5'\n         \\*/\n-        if (!TY_(FindDocType)(doc) && !showingBodyOnly(doc)) \n+        if (!TY_(FindDocType)(doc)) \n         {\n             ulong dtmode = cfg( doc, TidyDoctypeMode );\n-            if (dtmode != TidyDoctypeOmit)\n+            if ((dtmode != TidyDoctypeOmit) && !showingBodyOnly(doc))\n                 TY_(ReportError)(doc, NULL, NULL, MISSING_DOCTYPE);\n+            if ((dtmode != TidyDoctypeAuto) && (dtmode != TidyDoctypeHtml5))\n+            {\n+                /*\\\n+                 *  Issue #342 - if not doctype 'auto', or 'html5'\n+                 *  then reset mode htm4-- parsing\n+                \\*/\n+                TY_(AdjustTags)(doc); /* Dynamically modify the tags table to html4-- mode */\n+            }\n         }\n         TY_(InsertNodeAtEnd)( &doc->root, html);\n         TY_(ParseHTML)( doc, html, IgnoreWhitespace );\n```\n\nIf you are testing with command line tidy, then you need to add say the command `--doctype 'user'`, or add `doctype: \"user\"` to the config...\n\nI have still to test it on your second sample, but expect it to work... I will get around to adding that patch to the repo, but that may be a few days, unless someone beats me to it with a PR ;=))\n\nIt would be appreciated if you could add this patch, compile from source, test and report... thanks...\n. Oops, that patch is against the `issue-329` branch, which is where I was working at the time...\n\nTo get it -\n\n```\n$ git checkout issue-329\n```\n. @serjepatoff eventually got around to pushing this to `master`...\n\nWould be appreciated if you could pull master 5.1.35 plus, and test...\n\nAnd if this fixes this issue close it... thanks...\n. No further comment for over a week, so closing this for now...\n\nPlease fell free to reopen, or raise another issue... thanks...\n. @serjepatoff no problem, and thank you for retesting...\n\nI have now updated the `issue-373` branch with all the latest from master, and changed the version to `5.1.41issue-373` which I used for re-testing...\n\nConcerning your zip, I assume there was some mistake in the `doc1_before.html` since it started with an img tag... that would cause a real mess in parsing so removed it... Also since the patch made was for when there was no doctype, but a user doctype given, also removed the html5 doctype...\n\nThen to match your config used a config file below. Note commented out the tidy-mark since I wanted to be sure I was using the correct `5.1.41issue-373` version\n\n```\n// cfg_342-4.txt\ndrop-empty-elements: no\nwrap: 0\noutput-xhtml: yes\n// tidy-mark: no\ndoctype: \"user\"\nnumeric-entities: yes\nchar-encoding: utf8\nindent: yes\n```\n\nAnd yes something is wrong with the second? table width, and the final text is right aligned, so have re-opened this issue...\n\nWill see if I can find what is wrong... but it would be appreciated if you could update to this latest and re-check your samples are all ok,  except the case you posted... thanks...\n. @gaa-cifasis, hi Gus, yes this is a **Tidy Feature** ;=))\n\nI guess if I searched back far enough in the bugs, in SF, I would find it maybe mentioned, maybe several times... It is really easy to create a rediculously long html sequence that will exhaust the stack... but it is usually not a very pratical html file...\n\nYou are welcome to commence a re-write of library tidy and do this another way. The current library uses recursive calls as the DOM like stack/tree... I too could think of other, maybe better ways, like all of us probably, but this would be a major re-write of the parser!!!\n\nI remember reading at that time, way back in history, that if you do run across such a rediculous beast in the wild there are maybe ways to increase the stack allocation of the executable, if you really **must** use **`libtidy`** to handle this file... but there are probably some limits on that...\n\nBut hey, thanks for generating that beautiful 1.4 MB sample... and look forward to ideas on a tidy re-write to handle **ANYTHING** ;=))\n. @benkasminbullock, well only in the sense that it has existed since the first tidy I have, Dave Raggett's tidy04aug00, so this stack exhaustion is built into the fabric of tidy code... built into the way it works... so it is a `feature`? And a `feature request` to change it...\n\nI do not want to label it a `bug`, although that is what it also is, as I want to keep that label here for fixable bugs! Things being worked on...\n\nBut this **big-bad-bug**, or **limitation** of tidy has no solution other than a full re-write, a redesign, of the parser code. It is maybe a **`design flaw`**, built into the code, but I do not have labels like this? Nor do I particularly want to create them... so chose `feature` from what I have... no big idea...\n\nIf I was in your repo I could add labels like `enhancement`, and certainly `help wanted`, ...\n\nI have added `Technical Support`, meaning a discussion on tidy workings. As stated, look forward to ideas on a tidy re-write, re-design, to handle **ANYTHING** ;=)) and do something about this `perpetual bug`...\n. @gaa-cifasis, @benkasminbullock in combing through, and closing all the **old** SF bugs, found this was mentioned as far back as 2005-12-01, by  Lee Jensen, [Bug 742](https://sourceforge.net/p/tidy/bugs/742/)!\n\nNow what Lee mentioned, and we discussed, was that maybe there could be configuration options like `--max-stack-depth NNNN`. The default could be `0`, which means there is **no** limit...\n\nAlready in my MSVC Debug code I have a static counter for the depth of say the calls to `ParseInline`, and running this sample, using my debug version, it exhaused the stack at a depth of 5747, as indicated by the last entries in my debug output log, just before the windows tidy-stopped-working dialog -\n\n```\nEntering ParseInline 5746...\nR=682 C=64: Returning starttag node  stream\nEntering ParseInline 5747...\nR=682 C=69: Returning starttag node  stream\n```\n\nA second run stopped at 5753, then 5750,... but, for sure it **stops**!\n\nNaturally each exit from `ParseInline` also decrements this static counter -\n\n```\nR=681 C=69: Returning starttag node  stream\nEntering ParseInline 5740...\nR=682 C=1: Returning endtag node  stream\nExit ParseInline 2 5739...\nR=682 C=7: Returning endtag node  stream\nExit ParseInline 2 5738...\nR=682 C=13: Returning endtag node  stream\nExit ParseInline 2 5737...\nR=682 C=19: Returning starttag node  stream\nEntering ParseInline 5738...\nR=682 C=24: Returning starttag node  stream\nEntering ParseInline 5739...\n```\n\nOf course using a static counter is not the best, since we would also have to ensure it is cleared for each document, but it could be a simple variable as part of the TidyDocument lexer structure, which is created new for each document... And we might need to count more than just `ParseInline`... that would need to be checked, verified...\n\nAnyway, this seems like a viable possibility... \n\nWhat do other think? Should we bother? Thoughts, comments, even a PR welcome... thanks...\n. @balthisar good idea to close this... since it would be quite an **effort** to do something meaningful in a cross platform, multi-cpu way...\n\nBut really the stacked calls are the heart of tidy functionality... the **best** way would be a **total** rewrite! Employing an entirely different methodology...\n\nDid not know we had a `Won't Fix` label... ;=)) Will keep it in mind...\n. Hi Lilly,\n\nRe: libtidy stack overflow\n\nAs discussed in this issue - circa 2016 -\nhttps://github.com/htacg/tidy-html5/issues/343\nthis is a **feature** of how tidy was written,\nand was perhaps first mentioned back in 2005 -\nhttps://sourceforge.net/p/tidy/bugs/742/\nalthough there could be other references...\n\nAs can be seen, there has been some discussion\nabout adding an option to count, and say limit\nthe stack depth, but no code has been presented\nso far...\n\nSo at this time, there is **NO SOLUTION** pending...\nsorry...\n\nWe, at Tidy, would certainly appreciate any further\nthoughts or code, on this, but please share it on\nissue #343 so others can respond, rather than just\nme... thanks...\n\nRegards,\nGeoff.\n\nPS: Will cross post this there...\n\nOn 30/07/17 23:53, Lilly Random wrote:\nLilly Random \n> Hi,\n> \n> I am planning to use your lib tidy for html parsing and traverse. However, it \n> seems that if I generate a sample html file with a lot of nested lists it \n> crashes because of stack overflow. I have to take into account any possible \n> input without crashing, so is this something that can be added in the near \n> future? Eg. having the depth when adding nodes (parent depth +1), and then stop \n> processing if certain depth is exceeded? \n> Thanks a lot.\n\n. @CuthbertJungle ok, wow... I generated that in my Ubuntu 14.04 LTS, using CMake/CPack version 2.8.12.2...\n\nMaybe need adjustments in [CMakeLists.txt](https://github.com/htacg/tidy-html5/blob/master/CMakeLists.txt#L346)? There are LOTS of CPack variables and maybe I missed some... suggestions... fixes... patches...\n\nAs basically a Windows person I really needs help in linux...\n. @sataris thanks for the information about CMake 3.3+\n\nThe actual package building has been moved out of this main source repo, to its own [binaries](https://github.com/htacg/html-tidy.org.binaries) repo, so we have a chance to use other packaging methods, other than cmake.\n\nIn any case we have concluded the CMake/CPack packaging is **too rudimentary** for both Windows and MAC OS X, and are already planning alternative `packaging` for those systems...\n\n@CuthbertJungle we are considering a new release 5.2 shortly, and will try to certainly take care that any package we generate for unix passes the lintian tests... and have moved this to [Issue 1](https://github.com/htacg/html-tidy.org.binaries/issues/1) in the `binaries` repo...\n\nPlease continue any comments on this to there...\n\nMeantime closing this here...\n. @CMB yes, I can see the problem... thanks...\n\nWill look at a fix soonest...\n. @CMD wow, this problem dates back to the first Tidy... in other words it is not a new **`bug`** that has crept in... although there has been a small change over time...\n\nFor the inputs -\n\n```\nNetflix\n```\n\nPrevious Tidy would output -\n\n```\nNetflix\n```\n\nThat is an unencoded space, and it seems the browsers I tried have no problem with this... they remove the space, and understand, action, this href...\n\nBut somewhere along the road, Tidy started escaping the space! New output -\n\n```\nNetflix\n```\n\nThe problem is that seems to really mess up a browser, and leads to a 404. The browser tries to load a local file...\n\nSo this is definitely a **`bug`** that needs to be squashed, but since it has existed for a long time may take some time to find and fix.\n\nAnd then there is the question, what should the fix be? \n\nIt seem the simplest hack would be to avoid encoding any leading space in a href value. That would get us back to what all previous tidys did. Will try to track back to when that encoding happened, and why...\n\nBut is that a complete fix? Would there **ever** be any case for maintaining this leading space at all? Could it **always** just be dropped? It seems to me the answer is **yes**!\n\nAs always, look forward to ideas, comments, patches or a PR...\n. @CMB, @zcorpan thanks for your further comments...\n\nIn researching what are valid HREF characters, see #352, also saw several times that leading/trailing spaces are ok, so for the moment will search for a hack to at least **not** escape them...\n. @CMB, @zcorpan in searching for a fix for this it turned out just as easy to discard the leading space as to not escape it...\n\nPlease pull master 5.1.36 or plus and test if you get a chance... thanks...\n. @zcorpan see [comment](https://github.com/htacg/tidy-html5/commit/7d0d8a853a01004572d27e47b5c1146361816271#commitcomment-15816559) on commit...\n. No further comment for over a week so closing this for now...\n\nPlease feel free to re-open or post another issue... thanks...\n. @zanona thanks for the report...\n\nWell this simple answer is `TidyAttr_ITEMPROP` **is** included in the table `W3CAttrsFor_DIV[]`, along with some other `ITEMxxxx` attributes, while it is **not** included in `W3CAttrsFor_ARTICLE[]`.\n\nNow is that deliberate? Or just an oversight? We have to check the W3C HTML5 specificaltions...\n\nIt would help if you could research and find some links to decide this... after that it is just a copy-paste operation... thanks...\n. @zanona thanks for commencing the research into this... it seems in the 'microdata' section, which is relatively new to tidy in the first place... And I would not look at references other than the W3C... Tidy is a W3C utiltiy... \n\nSee #209, and maybe others... you will find a note in there to the effect \"that microdata is NOT an approved W3C Recommendation, but it is supported by the validator so...\"\n\nThat implementation was for RDFa - https://www.w3.org/TR/html-rdfa/ - it also notes \"RDFa attributes are technically legal on ALL elements.\"...\n\nI do not have a full understanding of the different between `microdata` and `RDFa`... except what I can read in the [Abstract](https://www.w3.org/TR/microdata/) section... just different data formats...\n\nBut just looking at the facts that we have. That is the tables in that giant file `attrdict.c` - 1.5MB - by far the largest file in tidy source...\n\nA quick perl analysis shows it contains some 135 elements, from `A` to `XMP`. Of that 135 elements, only 45 presently have `ITEMPROP`, usually together with the 4 other `ITEMxxxx` atrributes - that is ITEMID ITEMPROP ITEMREF ITEMSCOPE ITEMTYPE...\n\nThe list with: A ABBR ADDRESS BLOCKQUOTE BODY BR CAPTION CITE CODE DD DFN DIV DL DT EM FORM H1 H2 H3 H4 H5 H6 IMG INPUT KBD LABEL LI LINK OBJECT OL OPTION P PRE Q SAMP SELECT SPAN STRONG TABLE TD TEXTAREA TH TR UL VAR. \n\nWhy, how was this list chosen?\n\nSo some 90 elements, the majority, do **not** have the `ITEMPROP` attribute listed, and will thus not have any other `ITEMxxxx` attributes... \n\nBut that is a **BIG** missing list, not just the `ARTICLE` you mentioned, but of course it is there too...\n\nThe missing list: ACRONYM APPLET AREA ARTICLE ASIDE AUDIO B BASE BASEFONT BDI BDO BIG BUTTON CANVAS CENTER COL COLGROUP COMMAND DATALIST DEL DETAILS DIALOG DIR EMBED FIELDSET FIGCAPTION FIGURE FONT FOOTER FRAME FRAMESET HEAD HEADER HGROUP HR HTML I IFRAME INS ISINDEX KEYGEN LEGEND LISTING MAIN MAP MARK MATHML MENU MENUITEM META METER NAV NEXTID NOFRAMES NOSCRIPT OPTGROUP OUTPUT PARAM PICTURE PLAINTEXT PROGRESS RB RBC RP RT RTC RUBY S SCRIPT SECTION SMALL SOURCE STRIKE STYLE SUB SUMMARY SUP SVG TBODY TEMPLATE TFOOT THEAD TIME TITLE TRACK TT U VIDEO WBR XMP\n\nIf they are allowed on **every one of these element**, then it seems we should have another code way to verify such `universal` attributes, rather than just a massive copy-paste to each element in the list, again massively increasing the size of `attrdict.c`... Will try to look for a way to `accept` these 5 `ITEMxxx` attributes on **all** elements, in case this becomes the decided **`right`** way...\n\nBut it is way above my pay grade to decide this alone ;=)) I am just a coder, when others have decided, voted the way... established clearly the right thing to do... \n\nSo need lots more comments on this, more ideas... and as always, patches, PR always welcome for consideration...\n. @balthisar you ask another important question... sort of are there any attributes that are **universally** allowed on **every** element?\n\nTweeking my perl `attrdict.c` analyser a little, to show which **attributes** appear in all 135 element listed?\n\nWell the answer is **none** at present, per our current table layout. This is not addressing whether they should be in all, just looking at what we presently have, to see if that sheds any light...\n\nThe attribute with the highest hits is `ID`, present in 130 of the 135 elements, but it is closely followed by `CLASS`, `STYLE`, and `TITLE`, present in 129 of the 135 element... and next is `DIR` in 126 of 135. Must remember to also try to look at the exception... is this a special element set? See below...\n\nNext is 125:135: 10 attributes of the form `Onxxxxxx`, but not all `On`! - OnCLICK OnDBLCLICK OnKEYDOWN OnKEYPRESS OnKEYUP OnMOUSEDOWN OnMOUSEMOVE OnMOUSEOUT OnMOUSEOVER OnMOUSEUP (10). It looks like the other `Onxxxxx` appear down at 114-113:135, with 45 attributes - looks like the balance 43 more `Onxxxx` attributes, plus ACCESSKEY. Plus LANG 123, XML_LANG 119...\n\nNow a big block of attributes 124:135: 35 attributes of the form `ARIA_xxxxx`. This appears to list all the `ARIA_` attributes, so will not repeat that big list here.\n\nThen the numbers drop away quickly \n\n```\ncnt: attribute list... (cnt)\n============================\n112 CONTENTEDITABLE CONTEXTMENU DRAGGABLE DROPZONE HIDDEN SPELLCHECK TABINDEX (7)\n91 ROLE (1)\n86 XMLNS (1)\n46 ITEMPROP (1)\n45 ITEMID ITEMREF ITEMSCOPE ITEMTYPE (4)\n36 SDAFORM (1)\n27 ALIGN (1)\n18 NAME (1)\n17 SDAPREF TYPE WIDTH (3)\n12 FORM HEIGHT (2)\n10 DISABLED SRC (2)\n8 CHAR CHAROFF VALIGN (3)\n7 VALUE (1)\n6 AUTOFOCUS LABEL MEDIA (3)\n5 BGCOLOR COMPACT SIZE TARGET (4)\n4 ALT CHARSET CITE HREF (4)\n```\n\nFinally there are some 147 attributes that just appear in 3=13, 2=49, and 1=85 elements... the rare earths...\n\nSo while there are none that are currently **universal** there are many that appears in most, and maybe could be better handled with an `exception` list, especially big blocks like the `ARIA_xxxx` set... rather than just **duplicating** them in each element table...\n\nSo maybe there is a way to code this differently, and thus reduce the bulk of `attrdict.c`... sort of having a single table structure of attriubtes - these are allowed just about every where except for specific elements...\n\nAnd that led me to examining the reverse - for each attribute, show what it is **not** present in. Maybe this will give some clue, patterns, ...\n\nLike for the top 6 attributes, the closest to **universal** that we presently have, what elements do **not** include this attribute -\n\n```\nAttribute: Elements that do not include the attribute\nID       : LISTING NEXTID PICTURE PLAINTEXT XMP  (5)\nCLASS    : BASEFONT LISTING NEXTID PICTURE PLAINTEXT XMP  (6)\nSTYLE    : BASEFONT LISTING NEXTID PICTURE PLAINTEXT XMP  (6)\nTITLE    : BASEFONT LISTING NEXTID PICTURE PLAINTEXT XMP  (6)\nDIR      : APPLET BASEFONT FRAME FRAMESET LISTING NEXTID PICTURE PLAINTEXT XMP  (9)\nOnCLICK  : APPLET BASEFONT FONT FRAME FRAMESET ISINDEX LISTING NEXTID PLAINTEXT XMP  (10)\n```\n\nHmmm, see glimming of a pattern, but...\n\nThe full perl script log file is here - http://geoffair.org/tmp/attrdict.txt - most should be self explanitory... and would share the script, but requires a little setup...\n\nBut yes, the only real question is whether or not it's agreed that these attributes _are_ meant to be universal? Then, how `universal` is `universal`?\n\nI remember reading a phrase in one of the references viewed that said like - \"while these attributes may be added to every element, they may have no meaning...\" - sort of like syaing you can add them to all without a problem... And I do not think browsers would care, since in many cases they have no effect on what is displayed. \n\nBut this is a difficult, **open** question... help needed... thanks...\n. @balthisar ok, thanks for flattening the development...\n\nFirst it compiles fine in WIN32 with MSVC10, both as 32-bits, and 64-bits... \n\nBut it failed to compile in MinGW32 - some problem with -\n\n```\nlibtidys.a(win_vsnprintf.c.obj):win_vsnprintf.c:(.text+0x1a): undefined reference to `_vscprintf_p'\nlibtidys.a(win_vsnprintf.c.obj):win_vsnprintf.c:(.text+0x5c): undefined reference to `_vsprintf_p'\n```\n\nWill need to look deaper into this... maybe needs some `#ifdef __MINGW32__` in that source, or maybe `if (MINGW)` in CMakeLists.txt... not sure... still trying to get with this MinGW build, which uses its own `gcc 4.8.1` WIN32 port, and lots of other tools... I would like at some stage to offer MinGW 32 and 64 builds in our binaries, as alternative to the MSVC10 files now offered...\n\nBut onto testing the WIN32 64-bit EXE... I tried a few known tests, and at least nothing crashed... I did compare the HTML output with `testbase`, since this HTML output should **not** change... and in the limited tests done with tidy exe 5.1.33localizing, everything appeared ok... as it should - localization should no effect html output...\n\nOf course comparing the error output file shows up all the good changes made in the text... but this is a separate question... and I have yet to also get into the new rudy testing you have offerered...\n\nOver the coming days I will try to do a fuller testing...\n\nConcerning the tranlation of the POT file, wow, I am new to this... Yes, I know perhaps enough french to put the messages into say google translate, and apply some corrections to the results, and pass the results to a french friend to finalise... together we could get there...\n\nBut what is this PO toolchain? Favorite PO editor? I do not seem to have these in WIN32. What are they in linux? But the README.md does seem to say it can be done manually, if you are careful... \n\nDo I understand it correctly that for every `msgid` (english), there must be a `msgstr` in the language of choice, if there is a translation...\n\nIs that it? If it is, then I could develop my own toolchain to extract each `msgid`, work on a translation, with my friend, and put it back together... and then use the poconvert.rb to generate the .h file... But maybe there is more to understand?\n\nConcerning running ruby... I have Ruby installed, and can easily setup (modify the PATH) to use it, but in each new case it exits with warning to run `bundle install`... but when I do that it also alters the Gemfile.lock... but then I can run `ruby`... it is always confusing to have an altered file, that git notes, that probably should **not** be pushed to the repo...\n\nBut then the readme says to run [potool.rb](https://github.com/htacg/tidy-html5/tree/localize_flat/localize#potoolrb), but I can not find that tool... I seem missing something... confused a little...\n. @balthisar, as you can see moved the MinGW discussion to #349\n\nThanks for expanding on the `msgid` and `msgstr`, and plurals... I think I understand better...\n\nI was about to install a Windows POEdit, but then saw the source is available, but unfortunately it is not a cmake project, and the poedit.sln MSVC solution files given failed to build it, even after also installing all the submodules... a nearly 2 GB of sources... 75 thousand files... but there was one or more failed - eventually it build 27 of the 33 projects... 6 failed...\n\nI will try to continue with this, but see it is mixed with gettext, iconv, i18n, wxWidgets, BerkeleyDB, boost, expat, zlib, and others, so this will be a **difficult** windows build ;=((\n\nI have tried for **years** to get some of these dependencies compiled in native windows, have some successes, but it is tough going... cetainly not possible for the average user...\n\nMaybe I will try their Windows binary installer when I feel **braver**! Usually the installer will also contain all the dependency libraries/DLLs... But yet another editor... why not!\n\nJust a small note concerning using `ruby poconvert.rb`. It is possible to associate a `.rb` extension to use the ruby.exe to load, run it, but it is a tedious process if the installer does not handle putting that association in the windows registry, and `PATHEXT` environment variable... \n\nLike for example with python, perl, etc. If I have a `which.py` script, then for sure I can run that as `python which.py args`, but because the installer did all the registry/environment setup then I can also run it as `which.py args`, or even `which args`... so such a setup is possible, just not always done, or desired...\n\nThe undesirable part of these associations is that if say you already have a `which.exe` app in the PATH, then you can be confused with what exactly is being run, when, where... \n\nSo no real problem about using ruby, in general... but would appeciate you putting the changed `Gemfile.lock` file in .gitignore if we can do without it being there... just to avoid a git modified notice after I run `bundle install`...\n\nOk I can understand the name change from `potool.rb` to `poconvert.rb`... no problem... and can see this utility converts between `po` and `h`... again no problem when I get there... \n\nBut to start say a french translation I assume I just copy either `tidy.pot` to say `language_fr.po` and set to work adding french `msgstr` strings... or maybe copy `language_en_gb.po` to `language_fr.po`, or is that the same thing? This seems not exactly clear in the current `README.md`!\n. @gagern wow, thanks for sharing your German translation notes...\n\nThat enthused me to begin a French translation... So I installed the binary POEdit in Windows, and kicked off...\n\nAt first it looked like a breeze ;=)) \n\nClick on the 'Source Text' and POEdit provided one or more French translations, rated... Selecting, and sometimes modifiying slightly, and it was done, and I thought I would be finished in no time at all... \n\nBut after about 10/20 or so translations POEdit started to **`nag`** about upgrading to the PRO version to 'remove the limitation'... Bah!, I am not ready to `buy` it yet, even at just 20 bucks, or so... so had to bring up google translate and get into copy and paste... a little **more** work but still very workable... got exhausted at about 10% done, but will come back later...\n\nSome comments - \n\nI assume I must **not** alter the 'Source Text', the English, although POEdit lets you do that... My single purpose is to give a `msgstr` in French language_fr.po... Or else I would have to push my new english changed `msgid` back upstream to say tidy.pot. Is this the right idea? But in thinking about a translation, did see some better english phraseology...\n\nAnd POEdit also output a binary language_fr.mo, which I have still to explore...\n\nHave not yet got into running the poconvert.rb script, but assume it can only work properly if the original english `msgid` base is not change... but maybe it does not care? And works on the msgctxt sort of `identifier`. Please advise.\n\nAnd like you say if we are to try to stay in the 78 character column width, in certain cases it would be good to know the length of the `%1$s` possible options for that item...\n\nAnd finally, isn't 78 a bit narrow for today's world? Yes, back in the small screen days, not **so** long ago, 78 was probably a good choice, but now I could see that being say 100, or even 110... I now never work in a console of less than about 120 characters wide... in linux and windows...\n\nBut maybe poconvert.rb could do that? Adding a column width option, and it relines the text... remove the trailing `\\n`, and joins following lines... but again how would it know the approximate size of the potential substitutions? \n\nAlso started a crude perl poconvert.pl, since I know and use perl **all the time** ;=))\n\nAlso sort of like you, had to sometimes understand more of the context where the string is used, to provide a more meaningful translation... Sort of wanted to be able to run tidy on say a file STRING_DISCARDING.html, and tidy outputs an example of that warning/error... but I suppose that would require quite some work to set that up... many files... will try to experiment a little...\n\nAnd concerning MinGW #349, so far found **no** cases, but only at 10%, where I would need to mess with the order of parameters... so at this time feel they could be dropped, and left as a future enhancement, if the need arises... What about in German? Have you needed to change any parameter order?\n\nAnyway, just wanted to report a good start... seems all workable... thanks...\n. @balthisar did not get time to do more than a pull, and it compiled in MSVC10 (32 and 64 bit) without problems... and my mingw 32-bit...\n\nAnd I too have problems with say Chinese in the standard `CMD` prompt, despite what I do with `chcp`... have never been able to solve this, while some editors, and browsers do successfully display the Chinese...\n\nBut the above comments by you and @gagern give some interesting ideas about using the Windows `W` wide char (unicode) functions... will experiment more...\n. @KevinCarhart hi Kevin... I saw this mentioned on the eb dev list a few times... I guess I try to handle too many emails... so this is a better place to put it... thanks...\n\nThis is not really related to #65... that was more about the script parser keeping count of nested open elements, and not exiting until the count went zero, hence the idea of `too greedy`... At first I tried to solve this by parsing the actual javascript, but tidy should **not** get into that! That is a veritable mine field! \n\nIt was eventually solved by adding the `--skip-nested` option, which defaults to on, but the old behaviour can be used by setting it `off`.\n\nBut virtually since the **beginning of time**, tidy has been adding an escape character if it found '<' + '/' + letters, and transforms that into `<\\/letters`, in every case, and issues the warning... I have always wondered why! Now you have found a case where this is a **bad** idea!\n\nMy chrome browser readily accepts `ua = /`, and sets a `matched` variable...\n\nWhat about a simple `document.write('para');`? Tidy would change this to `<\\/p>`. Why is it doing that? What is gained? Is it important to continue to do that? Is there a problem if it does not? What is the problem? It seems the javascript parser does not see a problem.\n\nI am always reluctant to change such **old**, established behaviour without discussion, understanding and **good** reasons! \n\nSo really need some help in deciding... especially concerning the original purpose! What did such escaping solve that would now **not** be solved if removed? Is this going to be different between html4-- and html5++ modes? Maybe it should be a new option, say `escape-javascript yes/no`? etc, etc, etc...\n\n**Please** help with comments, especially W3C reference specs on `` content... maybe that would help... has it changed?\n. @CMB, @KevinCarhart, @zcorpan, thank you for the feedback and information on this... I am **slowly** becoming convinced that Tidy should get out of the **script escaping business**!, especially after reading another error example on the edbrowse list, js on page... but always come back to it has been there for **so long**...\n\nI did try trudging back in the list achives, and found quite a **lot** said about 'script parsing', like [this](https://sourceforge.net/p/tidy/mailman/message/8437044/) one back in 2004, that suggests an option to control this. And even then you can see Klaus is challenging with sort of \"show what harm is done?\". We certainly now do have some examples where this is clearly wrong.\n\nI would certainly appreciate being pointed to other relevant posts...\n\nThis option idea is certainly how I will likely proceed... perhaps something like `--escape-scripts yes`, initially the default, with a description like - \n\n```\nTidyEscapeScripts,\nThis option specifies that Tidy should escape script elements that look like closing tags. \nThat is '' would become '<\\/p>'. Set to 'no' to prevent this action.\n```\n\nAnd I am keeping in mind that this may also apply to style and textarea, but will concentrate on script parsing first...\n\nAs always appreciate **more** comments on this quite, what feels like, **dramatic** change in Tidy's behaviour... \n\nAnd if you want to try your hand at coding this, and presenting a PR, then please create an `issue-348` branch to hold this change... thanks...\n. @KevinCarhart thanks for the additional [sf803](https://sourceforge.net/p/tidy/bugs/803/) link, and yes it seems it is the same `\n\n\n\n#348-5 - Tidy problem\n\nfunction htmlEncode(s){return (s+'').replace(/\\&/g,'&amp;').replace(/\\</g,'&lt;').replace(/\\>/g,'&gt;')}\n\n\n\n\nThis document is not parsed correctly and the proposed clean up by Tidy is erroneous.\nDocument passes https://validator.w3.org/check - 20160213\n\n\n```\n\nSo yes, this is **persuasive**! \n\nI am convinced there should be an option the user can use to prevent this. Will work on it when I get a chance. Just prevent this [block](https://github.com/htacg/tidy-html5/blob/master/src/lexer.c#L2152) of code from running. Note it is already restricted to a javascript container.\n\nOnce the new option is added, say `--escape-scripts yes`, to tidyenum.h, config.c, and language_en.h, then the `if` becomes say -\n\n```\n if ((TY_(IsJavaScript)(container)) && cfgBool(doc, TidyEscapeScripts))\n {\n    /* Issue #348 - only escape the ETAGO if option is Yes */\n    ... do warning and escape the ETAGO ...\n```\n\nAs always would appreciate patches, or a PR...\n. @zcorpan, well not exactly. Despite the repo name being tidy-html5, and the `5` being used in many places, this is actually classical tidy4 to handle legacy documents **and** modern tidy5 to handle the new, rolled into one...\n\nSo the option idea is to allow the user to choose between those modes ;=)) \n\nIt is true we may later choose to default such an option to `off`... as we have done with other options that establish the mode...\n. @CMB sorry for the delay... I actually encoded this many weeks ago, but could not find the right time to push it...\n\nI am not sure we need to be concerned about the `` and `<textarea>` tags because, as far as I can see this `escaping` only happened if it was a `<script...>` tag. Note the `(TY_(IsJavaScript)(container)` as part of the `if`, but please advise if I am wrong...\n\nNow this has been pushed to the `master` branch, but the option defaults to `yes`, so you need to add `--escape-scripts no` to your config...\n\nThis is in the 5.1.47++ version, so you need to pull, and build that. Please advise if this does not **fix** the problem. I have only done minimal testing...\n\nAt the same time I have added an `README/OPTIONS.md`, describing the steps required to add a **new** option to Tidy.\n\nAppreciated if you get the chance to test this version, and the new option, and if ok, close this... thanks...\n. @KevinCarhart, @CMB thanks for testing and reporting... \n\nAnd searching deeper into the if check - `(TY_(IsJavaScript)(container)` - I can now see that if the container contains **no** atributes, that service returns `yes`? Strange! But if it does have attributes, then only if there is a `type` or `name` attribute which then contains the string `javascript` will it return `yes`... In other words it is **not** doing exactly as I thought!\n\nThe file tags.h does have a define of what I expected that to be, namely `nodeIsSCRIPT( node )`... but...\n\nBut now I have added an AND to the if `- && cfgBool(doc, TidyEscapeScripts)`, so compiling libtidy with that with set `no`, or adding a permanent config item `--escape-scripts no`, or in your case, in html-tidy.c, in html2node() service, around line 122, simply adding the code `tidyOptSetBool( tdoc, TidyEscapeScripts, no );`, I think you will get the desired bahaviour.\n\nIn any case, would prefer this closed and a new issue opened if you run across a use cases, hopefully with minimal sample html, where this blocking of the escaping still fails... thanks...\n. Below is a **full** patch to get it compiled using MinGW, but that turned up a **bug** in the string handling -\n\n```\n$ .\\tidy -v\nHTML Tidy for $s version $s\n```\n\nHow come the platform and version are not shown? This works in native windows, and linux. Why not with MinGW???\n\nAnyway, here is the full patch to get it compiled with WinGW\n\n```\ndiff --git a/console/tidy.c b/console/tidy.c\nindex 49a77e2..ef00bcd 100644\n--- a/console/tidy.c\n+++ b/console/tidy.c\n@@ -11,7 +11,7 @@\n #include \"tidy.h\"\n #include \"language.h\"\n #include \"locale.h\"\n-#if defined(_WIN32)\n+#if defined(_WIN32) && !defined(__MINGW32__)\n /* Windows requires special help for printf positional format specifiers. */\n #include \"win_vsnprintf.h\"\n #define nest_(x) TY_(x)\ndiff --git a/include/tidyplatform.h b/include/tidyplatform.h\nindex 908692e..570a94e 100644\n--- a/include/tidyplatform.h\n+++ b/include/tidyplatform.h\n@@ -450,7 +450,9 @@ extern \"C\" {\n #define utimbuf _utimbuf /* Windows seems to want utimbuf */\n #define stat _stat\n #define utime _utime\n+#if !defined(__MINGW32__)\n #define vsnprintf prvTidywin_vsnprintf\n+#endif\n #endif /* _WIN32 */\n\n #endif /* PRESERVE_FILE_TIMES */\ndiff --git a/src/language.c b/src/language.c\nindex 2635f2e..debf6d6 100644\n--- a/src/language.c\n+++ b/src/language.c\n@@ -17,7 +17,7 @@\n #endif\n #include \"tmbstr.h\"\n #include \"locale.h\"\n-#if defined(_WIN32)\n+#if defined(_WIN32) && !defined(__MINGW32__)\n #include \"win_vsnprintf.h\"\n #define nest_(x) TY_(x)\n #define printf nest_(win_printf)\ndiff --git a/src/tmbstr.c b/src/tmbstr.c\nindex 5fcf515..2057b54 100644\n--- a/src/tmbstr.c\n+++ b/src/tmbstr.c\n@@ -8,7 +8,7 @@\n #include \"forward.h\"\n #include \"tmbstr.h\"\n #include \"lexer.h\"\n-#if defined(_WIN32)\n+#if defined(_WIN32) && !defined(__MINGW32__)\n #include \"win_vsnprintf.h\"\n #endif\n\ndiff --git a/src/win_vsnprintf.c b/src/win_vsnprintf.c\nindex 392e498..0ebb709 100644\n--- a/src/win_vsnprintf.c\n+++ b/src/win_vsnprintf.c\n@@ -10,7 +10,7 @@\n #include \"forward.h\"\n #include \"win_vsnprintf.h\"\n\n-#if defined(_WIN32)\n+#if defined(_WIN32) && !defined(__MINGW32__)\n\n static char* TY_(new_string)( const ctmbstr fmt, va_list args );\n\ndiff --git a/src/win_vsnprintf.h b/src/win_vsnprintf.h\nindex 714cc5f..371494d 100644\n--- a/src/win_vsnprintf.h\n+++ b/src/win_vsnprintf.h\n@@ -9,7 +9,7 @@\n  * See tidy.h and access.h for the copyright notice.\n  */\n\n-#if defined(_WIN32)\n+#if defined(_WIN32) && !defined(__MINGW32__)\n\n #include <stdio.h>\n #include \"tidyplatform.h\"\n\n```\n\nI could push these if you want? Advise...\n. Ok, maybe the above patch is **all** wrong! Sort of the reverse of what is needed...\n\nI can now see in Windows you have replaced the `printf` with `TY_(win_printf)` because the format string returned is `HTML Tidy for %1$s version %2$s`, which I assume can not be handled by standard windows `printf`.\n\nSo you divert it to use `out_string = TY_(new_string)( s, args );`, which uses `len = TY_(win_vsnprintf)( result, 0, fmt, args );` to first get the length, then allocate a buffer, and again use `TY_(win_vsnprintf)` to format the string... using native `_vscprintf_p`...\n\nThat `malloc`, which can fail, and thus you would do a hard exit(2), can be replaced with libtidy allocator, which in turn can be replaced with a user supplied allocator, allowing a library tidy users to avoid such a hard exit, but that is later... libtidy can only have one hard exit, and that is in its default allocator, but this can be overcome by using your own allocator and dealing with memory failures as the lib user wants... see #296\n\nAnd I further assume that in linux `printf` can handle such position parameters like `%1$s`?\n\nBut this MinGW is in windows, and not linux, so it too would need to uses some substitute, since obviously it only prints out `HTML Tidy for $s version $s`!\n\nBut what substitute can MinGW offer in windows? As mentioned I do not think it has the native vsnprintf_p emulated in its libraries... could not find it...\n\nSo the above patch goes the wrong way... we are still in Windows... maybe missing some native functions in the MinGW emulation libraries... but we still need to swap out `printf` for something else... but what?\n\nIt seems a serious impediment that our current localization presently does not support a MinGW build! But as indicated, maybe there are work arounds that can be done...\n\nBut forget the above patch...\n. @balthisar Keeping my patch, and adding the `#define __USE_MINGW_ANSI_STDIO 1`, which I added to `CMakleLists.txt` as -\n\n```\nif (MINGW)\n    add_definitions ( -D__USE_MINGW_ANSI_STDIO=1 )\nendif ()\n```\n\ncertainly got a different result. Now the output is `HTML Tidy for %1$s version %2$s`! I am not sure that is an improvement or regression ;=)) And of course this is seen in all messages that have positional format params...\n\nI can see that macro **is** used several times on the MinGW `<stdio.h>` header... so makes a difference...\n\nNow it seems the positional parameters, which I have never tried before, and still understanding, are completely ignored in the code `__retval = __mingw_vprintf( __format, __local_argv );` seen in the gdb debugger? \n\nSo it seems from other tests `printf` supports them in native linux, but neither it, which would be native WIN32 `printf`, nor this substitute `_mingw_vprintf` support them in MinGW! The joys of cross compiling...\n\nBut I am sure there is a solution, and will keep searching...\n. @balthisar addressing also your comments in #347...\n\nRe: Which MinGW?\n\nWell my first install was from what seems like it main **canonical** home - http://www.mingw.org/ - and its SF downloads - https://sourceforge.net/projects/mingw/files/ - downloaded mingw-get-setup.exe, and installed in in D:\\MinGW. And use a set-mingw.bat to add MinGW to the environment of that specific console/terminal before the build... in part -\n\n```\n@set MINGW_ROOT=D:\\MinGW\n@if NOT EXIST %MINGW_ROOT%\\nul goto NOROOT\n@set PATH=%MINGW_ROOT%\\bin;%PATH%\n@set INCLUDE=%MINGW_ROOT%\\include\n@set LIB=%MINGW_ROOT%\\lib\n```\n\nAs indicated, this seems a very full 32-bit port, with over 400 headers, 200 libraries, lots of tools, utilities... so seemed to offer the best chance, especially when you pointed out the define __USE_MINGW_ANSI_STDIO which, through its own `<stdio.h>`, converts `printf` to `_mingw_printf` so looked good, but unfortunately does **not** appear to support positional parameters!!!\n\nI have now installed MinGW-w64, but this has just a measly 22 headers, and `<stdio.h>` is **not** one of them, and only has about 30 libraries. So this package, from https://sourceforge.net/projects/mingw-w64/ seems to try to mostly use the native windows headers, and libraries... so that means `printf` is not converted, and thus the tidy.exe built is back to the first output `HTML Tidy for $s version $s`...\n\nSo maybe for the MinGW-w64 build maybe I need to **reverse** my patch, and hopefully be able to use the native windows `_vscprintf_p`??? Will try to experiment with that... \n\nBut for now would like to at least get the http://www.mingw.org/ 32-bit working...\n\nAnd concerning the `__MINGW32__` macro, I guess this could be like Windows in that respect. `WIN32` and `_WIN32` are defined in both the 32 and 64 bit builds. For the 64-bit build, there is an additional `WIN64` that can be defined to move more things into 64-bits. And this post - http://mingw.5.n7.nabble.com/Macros-MINGW32-AND-MINGW64-td26319.html - suggests **both** `__MINGW32__` **and** `__MINGW64__` are defined in the MinGW 64-bit build. Will try to test that...\n\nRe: POSIX\n\nTo quote directly from the - http://www.mingw.org/ - site **\"MinGW, being Minimalist, does not, and never will, attempt to provide a POSIX runtime environment for POSIX application deployment on MS-Windows. If you want POSIX application deployment on this platform, please consider Cygwin instead.\"** \n\nI suppose I also need to install CYGWIN somewhere, and see what it does... I did have it installed a long time back, but decided I did not like the special proprietary DLL it embeds in every application! But just to see what it does, uses...\n\nRe: Positional Format Parameters\n\nAll this is about supported such `positional parameters`, which I must admit I had never heard of before a few days ago. I have **never** seen them in any of the **many** cross-ported projects I have worked on. Even the one project I remember with PO languages files, FGRUN, does not use them!\n\nAre these really needed in tidy's case. The bulk of the warning and error messages are deliberately short. Would there ever be a case for putting the parameters in a different order in the final string? It seems not. I note they have been used in tidy.pot even when there is only one parameter, like `\"Can't open \\\"%1$s\\\"\\n\"`!!!\n\nAnd the largest is `%4$`, in `\"%1$u %2$s, %3$u %4$s were found!\"`, but you can not mess with that too much because 2 are ints, and 2 are strings, by why would you need to **`mess`** with it?\n\nYes languages like french put say some adjective in reverse, like a `the blue bag` becomes a `le sac bleu`, but it seems this type of difference can be handled in the translation strings, and I can not see how this would be related to using such positional parameters...\n\nIf we could get rid of those, then this problem goes away ;=)) Are they really worth the pain and effort???\n. @balthisar absolutely **bloody** amazing - please excuse my french ;=))\n\nYes, after following your README.txt, and modifying my D:\\MinGW install with the 2 new files, my MinGW generated tidy.exe now correctly emits `HTML Tidy for Windows version 5.1.33localizing` - PHEW! That is **GREAT**.\n\nI immediately wanted to help you file a PR to MinGW. I did the first step - forked their SF repo - https://sourceforge.net/u/geoffmc/mingw-fork/ci/master/tree/ - and will explore this further... I agree adding these files to tidy source, and presenting quite complex build instructions is not the best way to go... **but it works**!\n\nAnd that is asside from the fact that I prefer to **not** add a `mingw` folder. I wanted to remove `cmake` and `win64` folders... I think `build` should be for what ever available tools you use to build, but never got around to that...\n\nWhat an amazing tool they offer, the `dlltool`. To be able to extract modules from native windows DLLS and create a linkable static library is something I have searched for in the past. You are a **super sleuth** in finding this!!! And using the MSVC `dumpbin` to explore... I am sure I would never have got there...\n\nBTW, `dlltool` offers an option I have always wanted for tidy - `@<file> - Read options from <file>`... but that is another story...\n\nAnd to then know to add a `specs` file to automate that linkage... If we can find the `msvcrt.def` they use to create the existing distributed `libmsvcrt.a`, maybe we would not need to add a `libmsvcrt_tidy.a`... That old, circa 2011 msvcrt.dll exports what?, over a thousand functions... what else did they not add to theirs?\n\nSo, whether we really need positional format parameters or **not**, and thus have that additional WIN32 only source module, now they are available... and that is another small cmake fix I would like - only add that source to the link if in WIN32... no need to add a blank object to the linux link...\n\nAnyway, out of time tonight, but lots to explore ;=)) thanks...\n. And MinGW-w64 also builds correctly, with NO PPS, so does not matter if they act on your SF ticket or not... thanks...\n. @balthisar sorry for the delay in my reply on this one... sometimes I forget to also check in PR's ;=() and the fact that it is partially in #346 and here did not help, but that is no real problem...\n\nFirst a word about the `doctype` option, which I saw used in your example in #346, and the so called html4-- and html5++ modes, which effect what input tidy expects, thus reports. I have still to push it, but see the small [patch](https://github.com/htacg/tidy-html5/issues/342#issuecomment-170267062) to fix #342. The reason for that is I did it in my `issue-329` branch, which does fix #329, but introduces some other not so good side-effects, so can not yet merge it...\n\nIt drags up a newline character from the lower io layer, to be able to correctly get `<p>a <em>b></p>`, from `<p>a<em>\\nb></p>` but presently causes lots of other not so desireable changes... but back to doctype...\n\nIf the doucment has a DOCTYPE, and if that is not html5, then tidy reverts to html4 mode - see [AdjustTags](https://github.com/htacg/tidy-html5/blob/master/src/lexer.c#L2832). That works fine...\n\nBut if there was no DOCTYPE, then tidy would stay in html5 mode, hence the above patch to allow the `doctype` option to also switch input modes.\n\nBut this is **incomplete**. For example what about when both are present - a doctype on the document **and** a doctype config option. In the end, I think a user config option of the doctype should over-rule any physical doctype, but was not completley sure about that... so did nothing...\n\nNow I say all this because in your #346 [sample](https://github.com/htacg/tidy-html5/issues/346#issuecomment-172448333) you do have a DOCTYPE, so tidy would slide to html4 mode, but you also added a `--doctype transitional` config, which would do nothing... In your case it would not matter since they are the same... but it could matter...\n\nAs you point out while tidy has this big attribute table, with each attribute bit marked in where it is allowed, this is not really used. Well there is some version reduction/factoring, but that was only really used in an info output... Because your sample has attributes which were not allowed in html4, the only note by tidy is `Info: Document content looks like HTML Proprietary`... \n\nTidy is not exactly clear why it is 'proprietory', except interally all html4 bits were removed, so it was left with sort of 'nothing fits'!\n\nIt seems your questions are exactly about this. I agree with you, that, like the W3C validator, tidy should output warnings -\n\n```\nDoctype:    HTML 4.01 Transitional\nLine 6, Column 14: there is no attribute \"ACCESSKEY\"\nLine 6, Column 47: there is no attribute \"CONTEXTMENU\"\n```\n\nNow I have not looked deeper, but I expected `--drop-proprietary-attributes yes` to remove those unexpected attributes. But it seems to have done nothing! The result is that tidy writes a tidied html4 document with them still there. That is it is outputting a known **invalid** document!\n\nSo I think that has to be changed... with or without additional options that may further control this...\n\nI have still to checkout your `attrdict_346` branch, and look at what you have done... but will try to get to that soonest...\n\nBut have I answered your questions? In simple terms -\n- tidy **should** warn specifically about attributes not matching doctype\n- given the right options, tidy should try to output a fully **valid** docutment to match the doctype\n\nAs mentioned elsewhere, I feel a tidied document should have a `99%` plus chance of passing validation.\n\nAs usual, out of time tonight, but will bounce back with more soon...\n. @balthisar wow, I am trying to keep up... but with more than a dozen commits to this `attrdict_346` branch in that last few days, plus a proposed more than 6+ doctypes to test, and testing 2+ `--doctype` options, will take time ;=))\n\nAs stated off list, this seems to be generally headed in a new good direction for Tidy, which seems all **good**. Now no recent `crashes` which is great! And of course this is futher complicated by lots of `new` message text, your localization, which is also good, but complicates test comparisons, but not really a problem...\n\nIn general it seems, feels, much better that the analysis of the nodes collected during the parsing phase, and thus warning/error reporting, has been moved only to the important clean up phase... This facilitates the decision of what doctype is on the document, assume HTML5 if none; what doctype it desired by the user config, if any; and finally what doctype is tidy to finally output... and some previous hard coded decisions are moved into the tables... We are truely now enforcing some previous `faults` that current tidy overlooks...\n\nAs stated separately, given the right set of config option, allowing tidy to delete, modify, at will, I hope tidy can output say a `strict` document, that will pass W3C validation... sans fault...\n\nAnd with all this reducing attrdict.c from its **massive** 1.5MB size, to a more `normal` 320KB file is fabulous... It is still the largest source file, but now only about twice the parser.c, and lexer.c, which are the true guts of Tidy... and the new language_en.h, which alfter all is just text strings...\n\nBut we really need that `yet-to-be-decided` option to turn this new behavior `on` and `off`, because that too needs to be tested! As stated separately, we need to be able to turn off this `new` behaviour to test that the old tidy is still there, without any problems, even if we later decide only the new behaviour should totally prevail...\n\nThis is a stupendous effort! I just hope your enthusiasm, and available time continues... I will certainly do my best to dig into testing, and give feedback... \n\nAnd really invite **all** others to check out this branch, and give it a whirl... a new tidy is born!\n. @balthisar thanks for another 6 plus commits, including adding the `strict-tags-attributes` option... this is starting to come together ;=))\n\nSo my first test was to -\n- Create a new testbase using **5.1.36** master. This assumes all the changes there were purely text. That still needs verification!\n- Then re-ran the 228 testcases.txt adding `--strict-tags-attributes no` using version **5.1.36attr_dict** attrdict_346 branch.\n\nOf course I expect **no change**. Well the simple testing of the tidy exit value yielded just 5 that were different 438954 661606 1183751 1207443 1282835 - just a 2% change. It seems simple that these warning outputs need to be 'protected' by say an `if (cfgBool( doc, TidyStrictTagsAttr ))`. That is only emit them if this is on, and tidy would pass this first stage...\n\nThe 'unexpected' warnings output were -\n- BAD_BODY_HTML5  - Warning: Found attribute on body that is obsolete in HTML5. Use CSS\n- BAD_ALIGN_HTML5 - Warning: The align attribute on the `<xxx>` element is obsolete. Use CSS\n\nNow, I have not yet done the full compare of outputs. That may yield **more** cases of difference...\n\nSo how do you want to deal with this? I could find the above, add the above `if` and push, but if you get the time, you may find those and other 'new' messages that should **not** be output if the option is off... that is if I have the right idea here...\n\nAnd as mentioned I am slowly migrating my testing to potentially a separate 'test' repo, and can now see multiple compares depending on versions, **AND** more importantly on the config options used. Many of these config items will now change the output expected, and each would need to be tested for `regression`... not an easy task... and I will continue to use batch processing, since that is what I know best...\n\nAs usual this is my short shopping and french day so do not have time to do more now...\n. @balthisar did not get a big chance to look at this today... Hope you enjoyed the wine, and family and a **big** Kung Hei Fat Choi to you and all...\n\n> what's the difference between auto and html5?\n\nWell my reading of the [documentation](http://api.html-tidy.org/tidy/quickref_5.1.25.html#doctype) and understanding is that if the user adds html5, that is what tidy should output on the document, and if it is auto, then tidy should choose the best doctype to output after observing what is in the document... constrained versions, depending on what was found... and then the other choices - omit, strict, loose, or user...\n\nNote this is output... so if it is set to html5, then for sure we should do CheckHTML5! However, if is is auto, then if and only if the document either does not have an existing doctype, or has a html5 doctype, only then does auto equal html5, and CheckHTML5 can be done...\n\nThese 5 tests 1183751 1207443 1282835 438954 661606 all have a doctype 4 transitional, so I think you are right! If auto, then should not use CheckHTML5! Thus [tidylib.c:1810](https://github.com/htacg/tidy-html5/blob/attrdict_346/src/tidylib.c#L1810) must be modified - **not** be a simple compare...\n\nBut what service gives us a clear answer to this? You suggest versionEmitted, but where, how is this set?\n\nI can see it is set in FixDocType, but that is not called until line 1845 - that could be moved up - but FixDocType is some difficult reading!\n\nSome things are clear... `if (xhtmlOut && !htmlOut)`, then SetXHMTDoctype is used... it will set versionEmitted to `ApparentVersion`, an X value, one of VERS_XHTML...  forget them for now...\n\nIf we have a document doctype node, and `(mode == auto)` and `(lexer->doctype == VERS_HTML5)` then set HT50, and return Yes. And later will switch case making a guess. Only case mode html5 set HT50, else otherwise, and return Yes.\n\nCan it ever return no? It seems not checked... But it seems it could be called before line 1810... Maybe it is a mistake to be calling CheckHTML5 so early in `tidyDocCleanAndRepair`?\n\nQuite frankly I can not remember the reason why I added it so early in the process... in fact maybe it should be nearly last? Let everyone else fix the document, warn about what they have to, fix, coerce, stylise, etc, only then check HTML5 compatibility, only if the output is to be html5\n\nThen we could have a simple -\n\n```\n  if (lexer->versionEmitted == HT50)\n  {\n    TY_(CheckHTML5)( doc, &doc->root );\n  }\n  TY_(CheckHTMLTagsVersions)( doc, &doc->root );\n  TY_(AttributeChecks)(doc, &doc->root);\n```\n\nWhat do you, others think?\n\nI can agree that in getting close to closing this issue, the more complicated the solutions sometimes seem. But in this case also seems to simplify, and help demystify the code...\n\nOut of time tonight to test this, and tomorrow having some raspberry pie ;=))))\n\nBut this feels good... Should remove the problem for those five tests, and maybe some others... maybe you will get a chance to try it before me ;=)) and I can pull a **fixed** tidy...\n. @balthisar thanks for the quick fix ;=))\n\nI think emittedVersion, assuming `lexer->versionEmitted`, should always be just one bit value, and would consider it a sort of **bug** if not - Tidy can emit only **one** version! - but in this case maybe it is also correct that the test be for VERS_HTML5, ie both bits... but have done very little XHTML testing... Does CheckHTML5 correctly deal with this different X doctype? Or should there be a similar CheckXHTML5 function? Questions to be explored...\n\nWow, thank you for the compiled, and commented, Exception Log... it goes a long way to convincing me that I should give Ruby a try ;=)) Nope, I take that back. Just tried to run `ruby regression_test.rb rtest -r=f:\\path\\to\\tidy.exe` but it always exits with an error... it creates a `results-5.1.36attr_dict` folder, with maybe 3/4 cases done, but then bombs... \n\n```\nD:\\temp\\tidy-testing\\test\\benchmarks>ruby regression_test.rb rtest -t=F:\\Projects\\tidy-testing\\build\\win64\\Release\\tidy.exe\n.........D:/Ruby21/lib/ruby/2.1.0/fileutils.rb:1454:in `rmdir': Directory not empty @ dir_s_rmdir - C:/Users/user/AppData/Local/Temp/d20160211-5476-1osf6yg (Errno::ENOTEMPTY)\n        from D:/Ruby21/lib/ruby/2.1.0/fileutils.rb:1454:in `block in remove_dir1'\n        from D:/Ruby21/lib/ruby/2.1.0/fileutils.rb:1468:in `platform_support'\n        from D:/Ruby21/lib/ruby/2.1.0/fileutils.rb:1453:in `remove_dir1'\n        from D:/Ruby21/lib/ruby/2.1.0/fileutils.rb:1446:in `remove'\n        from D:/Ruby21/lib/ruby/2.1.0/fileutils.rb:776:in `block in remove_entry'\n        from D:/Ruby21/lib/ruby/2.1.0/fileutils.rb:1502:in `postorder_traverse'\n        from D:/Ruby21/lib/ruby/2.1.0/fileutils.rb:774:in `remove_entry'\n        from D:/Ruby21/lib/ruby/2.1.0/tmpdir.rb:94:in `mktmpdir'\n        from regression_test.rb:698:in `execute'\n        from regression_test.rb:1085:in `block in process_case'\n        from regression_test.rb:1014:in `each'\n        from regression_test.rb:1014:in `process_case'\n        from regression_test.rb:1156:in `block in process_all'\n        from regression_test.rb:1156:in `each'\n        from regression_test.rb:1156:in `process_all'\n        from regression_test.rb:1290:in `rtest'\n        from D:/Ruby21/lib/ruby/gems/2.1.0/gems/thor-0.19.1/lib/thor/command.rb:27:in `run'\n        from D:/Ruby21/lib/ruby/gems/2.1.0/gems/thor-0.19.1/lib/thor/invocation.rb:126:in `invoke_command'\n        from D:/Ruby21/lib/ruby/gems/2.1.0/gems/thor-0.19.1/lib/thor.rb:359:in `dispatch'\n        from D:/Ruby21/lib/ruby/gems/2.1.0/gems/thor-0.19.1/lib/thor/base.rb:440:in `start'\n        from regression_test.rb:1363:in `<main>'\n```\n\nOh, well, maybe next time ;=))\n\nBut returning to my batch testing I get the same/similar results as you. Now clean as far as exit code, as you indicate. Step one accomplished by this last change...\n\nI got (aprx) 33 diferences, and on the 27 message compares, as you point out some are just the order of the warnings, which is understandable - and of the 6 html output differences, most seemed doctype, but still to look closely...\n\nConcerning the `Info: doctype` diffs, like you my first thought was also we are not doing ConstrainVersion properly, but then noted commit 8bdaa2f763 added back this call in the one place you had removed it, so this needs more investigation...\n\nSo why do 5 message compare cases, 1004051 1015959 1241723 1410061-2 441568, have -\n\n```\n  New: Info: Document content looks like HTML 4.01 Transitional\n  Old: Info: Document content looks like HTML 3.2\n```\n\nTidy does add a `<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">`, so this just seems like the `Info:` output got it **wrong**! That is the `Info:` does **NOT** matching the doctype tidy added. That should **not** be possible... hopefully easily fixed...\n\nAnd actually there are 8 outputs with `3.2//EN` - Why are 3 tests - 1445570 1986717-3 427818 - ok? That is very strange...\n\nDo not know where the time went today? Well spent some time on the new 367 - line break on href, and some **more** time on the prepetual 348 - script parsing, and did not even get into eating my `Raspberry Pie` ;=))\n. @josephgrossberg and @balthisar wow, you guys are just too **fast**! All within less than 20 hours...\n\nYes, this did start life as a pre-processor mark - in my old personal `fixfile` [ff](http://geoffair.org/ms/fixf32.htm) utility which rewrites a file to ensured is has only windows line endings, CRLF, by default, although it does have an option to also go the other way, adds `# eof`, unless a `-n` option is added, but after a few years, I got to also like seeing it... even found benefits...\n\nThis `ff` utility was essential when I worked on **many** cvs/svn/gz/... unix sources, and used some stupid windows editors that handled such files badly, most notably `notepad.exe`! Now, with say git, which does automatic line ending fixes, and windows editors, compilers, tools, that can handle both forms such a conversion utility is needed and used less and less...\n\nOne strange one that remains is the MSVC10 compiler bombs on MAC line endings, forcing me to fix them before they compile. One current, but quite old source, that comes to mind is [pthreads for win](https://www.sourceware.org/pthreads-win32/). \n\nBut as said, I began to like seeing it. As I read down a file it became a marker that indicated no more page-downs were required. I was at the end. So it became a `Geoff Style` **`tm`**, marker! Some stupid editors would `bell` me if I entered another `down`! Most annoying...\n\nAnd I do the same thing in C/C++ source files, terminating with `// eof`, or `/* eof */`. There are some like this in Tidy, and is **always** there in sources that I generate. And another `eof` marker frequently seen is the `emac` format tail, also still in Tidy and other sources... The worst was when even any training newline was remove, which even diff makes noise about... \n\nI would suggest these **not** be removed!!!\n\nNow I do not mind, even welcome a discussion on why this is a **bad** thing, and **must** be removed. But to me it seems very inoffensive, and will continue to do it ;=)) Oh, and it can also be seen on many html, and other sources I create... any text file... We seem beyond the era when saving **every** byte was important...\n\nAnd @balthisar my general idea on PRs and merging... Sometimes you can check the git [blame](https://github.com/htacg/tidy-html5/blame/master/README/VERSION.md) on the sources to see who did this, and if say the files has a single author, and if they are still active, then it seems we should wait at least a little time for them to respond, at least a day or so...\n\nOk, at this time I will not revert this commit! It is just not that important. But be aware, without the above discussion as to why this is **bad**, **wrong**, **confusing**, ... convincing me otherwise I may add this again if I work on any of these files in future...\n\nSo yes, sort of thanks for this purely `style` change ;=)) \n\n@josephgrossberg, Tidy needs, wants others to help, participate, thanks, and I hope this is **not** in any way discouraging that. But please let a little water flow under the bridge before a change, especially if it is only `style` like... \n\nOTOH always a simple good **bug** fixes can be instantaneous, but that should include a version.txt bump - not suggesting that here... thanks...\n. @ncouture thanks for reporting...\n\nOnly had time for brief test tonight, but can confirm current tidy seems to ignore those **bad** chars... and indeed so does tidy circa 2009, even back to tidy 2000... \n\nAre we missing something in configuration here? Do we need to `enable` something else, aside from `fix-uri` which is on by default?\n\nTidy has a `CheckUrl` (CH_URI) service, but is does not yet seem called on your sample, but even if it was, I can not see where it would flag those characters as bad?\n\nI am tentatively marking it as a **bug**, and will explore more...\n\nMaybe others have comments, ideas, patches, PR...  and maybe some W3C references on valid URI charcters... thanks...\n. @ncouture thanks for the further comment...\n\nFirst, I have no idea why the W3C validator classifies the `|`, \"pipe\" character as invalid in the href attribute, nor why it then points to a unicode reference [nfc-faq](http://www.macchiato.com/unicode/nfc-faq)???\n\nAnd as indicated, even if the existing internal tidy service [CheckUrl](https://github.com/htacg/tidy-html5/blob/master/src/attrs.c#L1469) was being called/used it would **only** escape characters in the range `if ((c > 0x7e) || (c <= 0x20) || (strchr(\"<>\", c)))`, so would also **not** escape the pipe characters. I note the validator also gripes about `<` and `>` in hrefs...\n\nAccordingly, for now I am removing the `bug` classification. Not that it is not a 'bug', but since it seems tidy has never done this escaping of a pipe char, it is a feature request. And further it seems clear we should clear up the documentaion on exactly what the `fix-uri` option does do, so added docs.\n\nWhile as expressed many times, tidy is not a `validator` per se, it should, in most cases, be able to report the same warnings/errors as the validator, and where possible tidy should try to help the user fix the document. So, in general a tidied document should pass W3C validation.\n\nI did read that a href can contain a leading and/or trailing spaces, that need not be escaped. See #345 for some discussion on this.\n\nI will keep searching, reading, but seek other W3C references to clear up what are valid URL characters. Comments, patches, PR very welcome to solve this, so adding **Help Needed**.\n. Note, per #378, this URL escaping includes accented characters...\n. @ncouture, @zcorpan thanks for the comments, but since no one has stepped forward to do this, and I am still unclear on what Tidy **should** do, am moving the milestone to 5.3.\n\nWe are considering a release 5.2 shortly, and it seems unlikely that we will have an agreed, implemented, and tested solution before then...\n. Since we are about to release **5.4**, and nothing more has been done on this to date, moving it to `next` **5.5**...\n\nAs mention I am still unclear on what is needed here... what is correct... so would appreciate comments, patches or PR to take this forward... thanks...\n. @balthisar the first problem seems to be getting a valid sample to test...\n\nMaybe it is due to the cut-paste, or difference in the code page, or something, but what should the value be in the first `<a href=\"\u20ac\">`, line 8? And this symbol is repeated twice more in the document.\n\nYou have added a `<meta charset=\"utf-8\">` but when I cut that sample into a file, it is **not** utf-8! Its value is `0x80`. In the last URI, you do indicate the correct U+20AC code point, `<a href=\"%E2%82%AC\">`, line 20.\n\nSo of course Tidy, any tidy, will complain `line 8 column 11 - Warning: replacing invalid UTF-8 bytes (char. code U+0080)`\n\nThen Tidy will just generically warn - `line 12 column 3 - Warning: <a> illegal characters found in URI` - I think it would good if tidy could report, at least the first code point it found invalid. In this case I think it is the `[` char, but it would be helpful to know... if possible... maybe too difficult...\n\nNow I expected a warning - ``line 11 column ? - Warning: <a> illegal characters found in URI`, which is one of the samples discussed, namely `<a href=\":|\">`, but did not get one, but maybe I did something wrong here with the lines, and need to check this more in the debugger... to check exactly...\n\nBut is there are way to add a utf-8 Euro sign utf-8 sample... maybe by drag and drop... otherwise would appreciate if you could say zip it and email it directly... \n\nCertain agree with tidy should **not** generate invalid html... ever...\n\nWould really like to help in closing this... and will test, report, comment, etc... as reported it has existed back to 2000! Thanks...\n\n. @balthisar just got into running debug, and hit my first little problem...\n\nBut first I did find the warning I expected... I had miscounted the lines... I expected and got `line 12 column 3...` so that is fine...\n\nIn Windows, the service `isalnum(c)` will trigger an assert if passed `0xfffd` - ie the internal value after getting `0x80`. From the MSN site \"The behavior of isalnum and _isalnum_l is undefined if c is not EOF or in the range 0 through 0xFF, inclusive.\" Ugh!\n\nBut it was quite simple, maybe ugly, to write a work around, which would work for unix/MAC too, if we want to get rid of the `#ifdef _WIN32` switch...\n\n```patch\ndiff --git a/src/attrs.c b/src/attrs.c\nindex cbcb6a9..4f1c449 100644\n--- a/src/attrs.c\n+++ b/src/attrs.c\n@@ -1475,13 +1475,21 @@ static void CheckLowerCaseAttrValue( TidyDocImpl* doc, Node *node, AttVal *attva\n }\n\n /* methods for checking value of a specific attribute */\n+#ifdef _WIN32\n+#define ISUPPER(a) ((a >= 'A') && (a <= 'Z'))\n+#define ISLOWER(a) ((a >= 'a') && (a <= 'z'))\n+#define ISNUMERIC(a) ((a >= '0') && (a <= '9'))\n+#define ISALNUM(a) (ISUPPER(a) || ISLOWER(a) || ISNUMERIC(a))\n+#else\n+#define ISALNUM(a)  isalnum(a)\n+#endif\n\n static Bool IsURLCodePoint( ctmbstr p, uint *increment )\n {\n     uint c;\n     *increment = TY_(GetUTF8)( p, &c ) + 1;\n\n-    return isalnum( c ) ||\n+    return ISALNUM( c ) ||\n         c == '%' ||    /* not a valid codepoint, but an escape sequence */\n         c == '#' ||    /* not a valid codepoint, but a delimiter */\n         c == '!' ||\n```\n\nCould push this to the branch, for one **or** for all... ie no switch... What do you think?\n\nAs stated, would love that the message `<a> illegal characters found in URI` actually showed, at least the first, **illegal** character, but could not see an easy solution yet... but will keep searching...\n\nStill trying to work on a utf-8 URL test... but otherwise it is all looking good...\n\nWow, ok found a little free hex editor (for windows - http://www.techsupportalert.com/best-free-hex-editor.htm - hxd.exe) and was able to manually modify the 3 instances of `0x80` to the correct utf-8 - `0xe2 0x82 0xac` - and everything seemed to work fine in initial testing... ie no noise about invalid character coding...\n\nIn default mode, the 3 utf-8 bytes are escaped and I get the messages, excluding the two expected **invalid** messages -\n\n```\nline 8 column 2 - Warning: <a> escaping malformed URI reference\nline 10 column 3 - Warning: <a> escaping malformed URI reference\n```\n\nThen if I added the option `--fix-uri no`, I got -\n\n```\nline 8 column 2 - Warning: <a> improperly escaped URI reference\nline 10 column 3 - Warning: <a> improperly escaped URI reference\n```\n\nAs usual pushed [in_352-4.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_352-4.html) to my repo, with correct utf-8 encoding... \n\nAnd as expected, the W3C validator only barked about the invalid `<a href=\":|\">` and `<a href=\"http://[\">`... fully accepting the two **unescaped** utf-8 uri... \n\nOf course it also barked about your `<IMG SRC=..blah..>`, but that is nothing to do with this, and wonder why it was included in your sample??? Must get around to removing it...\n\nNow to ponder about this a little more... maybe sleep on it... but this seems **very good**... thanks...\n. @zcorpan wow thanks for the giant json list... it contains some 470+ samples...\n\nIn a perl script, I was able to decode the json, and generate a list to test... of course without reading all the `specifications` on what this list means, it seems **if** the `\"input\": \"http://f:21/ b ? d # e \"` produces a `\"href\": \"http://f:21/%20b%20?%20d%20# e\"` it is valid... that is does **not** have `\"failure\": true`... But that specific case puzzles me, because why have they **not** escaped the final `# e`? Tidy **will**, so we get the output ending in `#%20e`, which seems right... I think...\n\nAnd as @balthisar wrote somewhere, without getting **deeply** into parsing each component of the `href`, Tidy has no way to **failed** `375:i: <a href=\"http://10000000000\">failed</a><br>`, as they do. And of course it follows that they pass `376:h: <a href=\"http://10000000000.com/\">valid</a><br>`. The leading number here is just the approximate order in the json list...\n\nAnd you can see more of that deep **deep** parsing with `469:h: <a href=\"non-special://[1:2::3]:80/\">valid</a>` being **valid**, while `470:i: <a href=\"non-special://[:80/\">failed</a>` **failed**... assuming because it could **not** correctly parse a `\"host\":`... there are so many more like that...\n\nFWIIW I have added my generated list as [in_352-5.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_352-5.html) to my repo so others can get into testing and understanding...\n\nSo I think what @balthisar has done here is a reasonable start, but really should libtidy get **deep** into `href` parsing? I think not, at least not at this stage... \n\n@balthisar but did not quite understand what you are saying about utf-8 characters, also as in #378, but from the validator tests it seems they are valid, escaped **or** un-escaped, but need to read and understand more on this... \n\nAnd I do tend to agree with if a know legible user adds `--fix-uri no`, maybe we should **not** output some warnings... but again need to investigate more...\n\nI will push my macro soonest, and experiment with the list a little more, in the hope we can **fix** and/or **accept** some more `hrefs`... thanks...\n. @zcorpan thanks for the clarification on what that json list represents, especially that tests without `failure` may **or** may not be **valid**...\n\nAnd thanks for the link to the [url-writing](https://url.spec.whatwg.org/#url-writing) rules, but **wow**, there is a lot to take in there... still to read it again, and again, and all its links ;=))  it would be a **tricky** business to `validate` and `fixup` everything possible...\n\n@balthisar I eventually pushed the macro as I had first written it, after reading `isalnum(c)` does **not** seem to have the same problem in unix... but anyway its there now if we do need it later, or for something else...\n\nAt this point I can see no problem merging #547 as is... this is an improvement... we can take up further issues as they arise... thanks...\n. @ncouture sorry seem unable to repeat this problem!\n\nWhat version of tidy are you using? `$ tidy -v` I was using 5.1.32... but repeated it using an old 4.9.35 I have with the same result... so I do not think it is version related...\n\nI just get an **endless** list of 1's!!!\n\nFurther the bash testing seems faulty! If I read the intent correctly the `while` should be repeated until the tidy exit value is 0. Well that should only be once, since tidy should find no warnings on the second run on the tidied file? So why do I get an endless list of 1's? But I am no `bash` expert...\n\nI also tried a simpler -\n\n``` bash\n#!/bin/bash\n#< test-353.sh - 20160124\nBN=`basename $0`\nTMPFIL=\"temp.html\"\nTMPEXE=\"tidy\"\nif [ -f \"$TMPFIL\" ]; then\n    rm -v $TMPFIL\nfi\ntouch $TMPFIL\n$TMPEXE -v\necho \"$BN: Doing 4 tests...\"\n$TMPEXE -m $TMPFIL 2> /dev/null\necho \"$BN: First exit value '$?'\"\ngrep 'meta name=\"generator' \"$TMPFIL\" | wc -l\n$TMPEXE -m $TMPFIL 2> /dev/null\ngrep 'meta name=\"generator' \"$TMPFIL\" | wc -l\n$TMPEXE -m $TMPFIL 2> /dev/null\ngrep 'meta name=\"generator' \"$TMPFIL\" | wc -l\n$TMPEXE -m $TMPFIL 2> /dev/null\ngrep 'meta name=\"generator' \"$TMPFIL\" | wc -l\necho \"$BN: Last exit value '$?'\"\ncat $TMPFIL\n# eof\n```\n\nwhere only the first shows an exit value of `1`, and the last `0`... and the file only contained 1 meta...\n\nPlease carefully check again, and advise.\n. @mcandre as some background I would add -\n\nBoth I and @balthisar have added to an old bug report - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=655200#70\n\nMaybe a current Debian user could file a **new** bug? Add their voice to ours...\n\nFor Ubuntu I am holding open a question - https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623 - Maybe other Ubuntu users could add to this, or add something new?\n\nAs first I thought it may be the holiday season that delayed things, but we are now nearly at the end of January 2016 and still no results!!!\n\nIt is really ugly that the tidy offered is a 2009 cvs source release... or have I missed something here?\n\n**What else can we do?**\n. Hi Manfred,\n\nRe: Update HTML Tidy package\n\nThank you for help searching around for a solution to this... you\nare a great help...\n\nIn fact your search link leads to an email from Jason, clearly\nsaying he no longer has time to maintain HTML Tidy, dated 2011-06-01\n01:05:31 GMT\nhttp://article.gmane.org/gmane.linux.debian.devel.general/162695/match=\n\nSo am also sending this to the MIA team -\n\nDear MIA Team,\n\nHi, I hope you can help HTML Tidy.\n\nBack in 2011-06-01 Jason advised he no longer has time to maintain\nHTML Tidy. Manfred's search reveals his last action was in 2013 -\nhttp://search.gmane.org/?query=&author=Jason+Thomas&group=gmane.linux.debian.*&sort=date\n\nI do not know your process in choosing a new maintainer, but note\nfor example that Daniel offers his help, twice -\nhttps://bugs.debian.org/cgi-bin/bugreport.cgi?bug=655200#65\nand\nhttps://bugs.debian.org/cgi-bin/bugreport.cgi?bug=770129#20\n\nHope you can help get HTML Tidy updated, when you get a chance.\n\nLast release: https://github.com/htacg/tidy-html5/releases/tag/5.1.25\n\nRegards,\nGeoff.\n\nOn Mon, Jan 25, 2016 at 4:12 PM, Manfred Hampl <\nquestion276623@answers.launchpad.net> wrote:\n\n> Your question #276623 on tidy in Ubuntu changed:\n> https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623\n> \n> ```\n> Status: Open => Answered\n> ```\n> \n> Manfred Hampl proposed the following answer:\n> When searching on the Debian pages, I cannot find any activity of the\n> Debian maintainer of the tidy package in the past two years.\n> \n> http://search.gmane.org/?query=&author=Jason+Thomas&group=gmane.linux.debian.*&sort=date\n> shows the last activity in March 2013\n> \n> On the Debian pages there are some pages dealing with the case that a\n> Maintainer seems to be neglecting his duties or cannot be reached, see\n> http://www.debian.org/doc/developers-reference/beyond-pkging.html#mia-qa\n> and https://wiki.debian.org/Teams/MIA\n> \n> I suggest you contact the MIA team.\n> \n> ## \n> \n> If this answers your question, please go to the following page to let us\n> know that it is solved:\n> \n> https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623/+confirm?answer_id=13\n> \n> If you still need help, you can reply to this email or go to the\n> following page to enter your feedback:\n> https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623\n> \n> You received this question notification because you asked the question.\n. On Mon, Jan 25, 2016 at 05:38:37PM +0100, Geoff McLane wrote:\n\n> Hi Manfred,\n> \n> Re: Update HTML Tidy package\n> \n> Thank you for help searching around for a solution to this... you\n> are a great help...\n> \n> In fact your search link leads to an email from Jason, clearly\n> saying he no longer has time to maintain HTML Tidy, dated 2011-06-01\n> 01:05:31 GMT\n> http://article.gmane.org/gmane.linux.debian.devel.general/162695/match=\n> \n> So am also sending this to the MIA team -\n> \n> Dear MIA Team,\n> \n> Hi, I hope you can help HTML Tidy.\n> \n> Back in 2011-06-01 Jason advised he no longer has time to maintain\n> HTML Tidy. Manfred's search reveals his last action was in 2013 -\n> http://search.gmane.org/?query=&author=Jason+Thomas&group=gmane.linux.debian.*&sort=date\n> \n> I do not know your process in choosing a new maintainer, but note\n> for example that Daniel offers his help, twice -\n> https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=655200#65\n> and\n> https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=770129#20\n> \n> Hope you can help get HTML Tidy updated, when you get a chance.\n\nThe MIA team doesn't \"choose\" a new maintainer, the most it can do is\norphaning a package, and usually that's a really lenghty process.\n\nWhoever wants to adopt (and _maintain_) it, I think he should feel free\nto do so, given the maintainer words in\nhttps://lists.debian.org/1306890331.558.1.camel@localhost (linked by you\nabove).\nIf he is not a Debian developer, that's not really a problem, just find\na DD willing to sponsor such update, or otherwise send a RFS (request\nfor sponsorship), as usual.\n\n## \n\nregards,\n                        Mattia Rizzolo\n\nGPG Key: 66AE 2B4A FCCF 3F52 DA18  4D18 4B04 3FCD B944 4540      .''`.\nmore about me:  http://mapreri.org                              : :'  :\nLaunchpad user: https://launchpad.net/~mapreri`. `'`\nDebian QA page: https://qa.debian.org/developer.php?login=mattia  `-\n. Hi Mattia, hi Jason,\n\n> Whoever wants to adopt (and _maintain_) it, I think he should feel free\n> to do so, given the maintainer words in\n> https://lists.debian.org/1306890331.558.1.camel@localhost\n\nI'm willing to adopt the tidy package, and would suggest it for\ncollab-maint, as I am not a Debian Developer:\n\nhttps://wiki.debian.org/Teams/CollabMaint\n\nCheers!\n\nDaniel\n. I am holding my [question](https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623) open... \n\nDaniel has offered to adopt tidy package maintenance, but things seem to be moving very slowly... if at all..\n\nAnything **anybody** can do to move this along would be much appreciated... \n\nSpecifically, could any Debian or Ubuntu developers, who are familiar with Tidy, please **HELP**!\n. Just posted this on my [question](https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623) to keep it open... \n\n```\n*** HELP *** HELP *** HELP ***\n\nDoes **nobody** care that Ubuntu still offers a 2009 package of Tidy?\n\nWhen 2015 releases are available - https://github.com/htacg/tidy-html5/releases - and we are moving towards the next...\n\nHas Daniel's offer to take over orphaned Tidy been accepted? Being worked on? Any indication when this might happen?\n\nAs repeated, repeated, is there anything I can do as a Tidy maintainer to assist?\n\nSomebody please HELP!\n```\n\n**Can anybody HELP with this?**\n. Since we are considering a release 5.2 shortly, changing the milestone on this to **indefinite**!\n. Cross posted on [question](https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623)...\nHi Daniel,\n\nAs can be seen here - https://github.com/htacg/html-tidy.org.binaries/issues/1 - I\nam trying to script a DEB build... one that passes `lintian`... I seem to have \nnarrowed it down to a few remaining issues...\n\nMaybe you could help with this? Then when/if you take over orphaned Tidy \ndistribution, the ground work would have been done...\n\nOr maybe you or others could point me to some good tutorials on building \nan acceptable DEB... thanks...\n\nGeoff.\n. @mcandre - **Wow**, this feels like a break-through!\n\nCheck out https://github.com/danielhjames/tidy-packaging \n\nCan others **help** Daniel, me, and Tidy with this? Thanks...\n\nI am still learning Debian packaging, but understand a test can be done with -\n\n```\n$ dpkg-buildpackage -S -uc -us\n$ pbuilder-dist sid amd64 build tidy_20160404-1.dsc\n```\n\nAll help very much appreciated...\n. See #406 for a DEB build problem... Maybe you can help...\n. As @danielhjames points out, some **massive** steps forward ;=))\n\n http://anonscm.debian.org/cgit/collab-maint/tidy.git/\n\nThank you! Read all about it -\n\nOn 08/06/16 15:28, Ludovic Rousseau wrote:\n\n> Hello,\n> \n> Packaging for version 5.2.0 is available at http://anonscm.debian.org/cgit/collab-maint/tidy.git/\n> \n> Daniel, thanks for your work.\n> Use gbp to build the package push commit to the collab-maint project.\n> If you can't push your commits to git.alioth.org just send them to me (or create a github clone so I can get them from there).\n> \n> I also uploaded this new version to Debian. The package should be available soon in unstable.\n> \n> tidy is back up to date in Debian. :-)\n> \n> Bye\n\n**AND**\n\nOn 08/06/16 15:37, Ludovic Rousseau wrote:\n\n> One .deb is new and so require manual review. The delay is generally a few days.\n> \n> I just got this email:\n> \n> binary:libtidy5 is NEW.\n> source:tidy-html5 is NEW.\n> \n> Your package has been put into the NEW queue, which requires manual action\n> from the ftpteam to process. The upload was otherwise valid (it had a good\n> OpenPGP signature and file hashes are valid), so please be patient.\n> \n> Packages are routinely processed through to the archive, and do feel\n> free to browse the NEW queue[1].\n> \n> If there is an issue with the upload, you will receive an email from a\n> member of the ftpteam.\n> \n> If you have any questions, you may reply to this email.\n> \n> [1]: https://ftp-master.debian.org/new.html\n\n**AND**\n\nOn 08/06/16 16:29, Daniel James wrote:\n\n> Hi Ludovic,\n> \n> > binary:libtidy5 is NEW.\n> > source:tidy-html5 is NEW.\n> \n> Given the suffix number changes, it's only fair that the package be\n> checked over again ;-)\n> \n> I've pushed a first commit to collab-maint for some non-urgent\n> maintenance, just to check it works:\n> \n> http://anonscm.debian.org/cgit/collab-maint/tidy.git/commit/?id=9aa28147ef9bb83e9f89d4683ab6890656acd03b\n> \n> Thanks for setting this up!\n> \n> Daniel\n\n**AND**\n\nOn 08/06/16 17:29, Ludovic Rousseau wrote:\n\n> 2016-06-08 16:29 GMT+02:00 Daniel James daniel@64studio.com:\n> \n> ```\n> Hi Ludovic,\n> \n> > binary:libtidy5 is NEW.\n> > source:tidy-html5 is NEW.\n> \n> Given the suffix number changes, it's only fair that the package be\n> checked over again ;-)\n> \n> I've pushed a first commit to collab-maint for some non-urgent\n> maintenance, just to check it works:\n> \n> http://anonscm.debian.org/cgit/collab-maint/tidy.git/commit/?id=9aa28147ef9bb83e9f89d4683ab6890656acd03b\n> ```\n> \n> It works.\n> Now you only need me to upload a new version to Debian.\n> \n> Bye\n> \n> ## \n> \n>  Dr. Ludovic Rousseau\n\n; eof - ref: tidy-199-debian-build.txt\n. @AdamMajer, @danielhjames, thanks for your comments... it is very good to read... we are certainly interested in `Publish tidy-html5 to a Debian repo`... some comments on what I read...\n\n> Why not update current tidy? Why have new package?\n\nAs a tidy maintainer, **absolutely** agree.\n\n```\n libtidy.so -> libtidy.so.5\n```\n\nAdding this link is exactly the upgrade of tidy that is required, requested, here - across every distribution... \n\nI have not asked my friends, the original SF maintainers, exactly why that last release 2009, was named: 0.99, but when the baton was passed on, to us, HTACG, we chose the first release name to be Tidy 5.0.0... but no API change! ... lots and lots of history in that...\n\nNow, in building the Debian package, somewhere along the line I might have thought changing the base name would be ok for a Debian release... but fully agree, if it is possible, install and do the above link update... all is done...\n\nAlso agreed... no delete of the last... if an app has the direct link to `libtidy-0.99-0.so` then it will still run... but not sure when, how, ... to delete those???\n\nThe sample console app, `tidy`, as opposed to `libtidy`, is meant to always fully replace the old, and chooses to be linked to the matching static library... this should be a 100% overwrite...\n\nThen any current app, linked to the generic `libtidy.so` will immediately benefits from the improved stability of the library... that is, an `upgrade` only...\n\nSo where does this go next?\n\nDo we, as Tidy, wait for the **new** Debian name approval? I am sort of ok with that, if this gets tidy into distribution, after a much too long delay... 6-7 plus years...\n\nOr, are there some simple debian build steps which will **keep** the preferred single name of **tidy**... ie no **new** approval is required...\n\nAny help, ideas, you can provide would be **much** appreciated... thanks for the comments, and to @danielhjames for big efforts to get this moving... on a very important issue to us... getting the tidy update into distribution...\n. @mcandre, @AdamMajer, @LudovicRousseau, @jasonethomas, as @danielhjames points out, we try to deal with issues promptly, so if I have missed something, please point it out to me... open/re-open an [issue](https://github.com/htacg/tidy-html5/issues)... thanks...\n\nBut yes, it seems `Publish tidy-html5 to a Debian repo` has been achieved... a big **thanks to all**... so closing this here...\n. @balthisar thanks for that [Fedora](https://apps.fedoraproject.org/packages/tidy) link. So nice to see it is up-to-date with release 5.4.0... thanks to @rdieter, and others, for that...\n\nAnd then another I found [rpm=tidy](https://rpms.remirepo.net/rpmphp/zoom.php?rpm=tidy), which has our [html-tidy.org](http://www.html-tidy.org/) url, rather than the old sourceforge on the Fedora site...\n\nIn reading around a little, it seems **yum** is used for Fedora, CentOS, and Red Hat, but you can get very disappointed googling around with say `RHEL Tidy`, in that you stumble across **lots** of sites still showing the **ancient** `2009` release...\n\nAnyway, @mcandre, as @balthisar asks, is there anything else we should be doing here? Or can this be closed? \n\nOf course understanding that this **publishing** will always be an ongoing battle, but one where we, as Tidy, can do little more directly than publish our releases... Thanks...\n. @mcandre well I searched [Chocolatey](https://chocolatey.org/) for HTML Tidy, but it does not seem to exist! And maybe it should not exist there?\n\nWhile I can see Chocolatey helping some user install `packages` like git, cmake, ImageMagick, MinGW, etc, etc... that is packages that have multiple dependent DLL's, and the install needs to be added to your existing PATH, I really can not see Chocolatey use for installing a single, standalone tidy.exe binary, which can be downloaded and copied to any folder in your PATH, or to a new folder added to your PATH...\n\nEven if you wanted to develop an app using libtidy.dll (shared), or libtidys.lib (static), and thus need access to tidy's headers then again we are just talking about 5 or 6 files, which would be better copied to your project, rather than `installing` tidy somewhere...\n\nYou will note I no longer include a Windows NSIS nor MSI installer in our published [binaries](http://binaries.html-tidy.org/), as this is really of no use, and would probably cause confusion... What they installed was unreachable without further manual setup...\n\nOTOH I have published a small repo [tidy-test](https://github.com/geoffmcl/tidy-test) which contains a `FindTidy.cmake` module, and some sample apps, which does link with such an `installed` tidy... as an example to dvelopers of how this can easily be done... And simularly a WIP [Tidy GUI2](https://github.com/geoffmcl/tidy-gui2) as another example...\n\nThus I do not see any benefit in `publishing` tidy to Chocolatey... but am open to comments...\n\nSo unless there is a use case, and a user who wants to do this, I am closing this for now... but thanks for the thought...\n. @sria91 wow, nice to meet a fellow MSVC user ;=))\n\nNice catch. I run Debug mode just about every day, but missed this...\n\nNow merged, and thanks...\n. @sria91 took the opportunity to tidy up that debug code a little more...\n\nYou need to rebase your fork to master... hope you get the chance to check it out... thanks...\n. @sria91 thanks for bringing this up. For a long time now I have thought tidy should add the **appropriate** charset meta to a tidied document, like it adds a `<title>` if missing... My reason was solely that the the W3C validator blabs an error if there is **none**, and **no** BOM!\n\n```\nError: The character encoding was not declared. Proceeding using windows-1252.\nor\nError: The character encoding was not declared. Proceeding using utf-8.\n```\n\nNow, as @balthisar points out this is not simple to decide, what and when, like your list of possibilities @srai91, and given that tidy already has an option `--output-bom yes/no/auto(def)` and an `--output-ecoding raw/ascii/latin0/latin1/utf8(def)/iso2022/mac/win1252/ibm858/utf16le/utf16be/utf16/big5/shiftjis`! And not sure I agree with \"BOM is hardly used nowadays\". The validator, tidy, many editors recognizes it!\n\nBut I do not think this should be confused with the **input** `--char-encoding similar list` option, but it does involve the equivalent short forms like `-utf8` which sets **both** input and output at the same time... \n\nThere are actaully three options internally, and maybe the comments help -\n\n```\n  TidyCharEncoding,    /**< In/out character encoding */\n  TidyInCharEncoding,  /**< Input character encoding (if different) */\n  TidyOutCharEncoding, /**< Output character encoding (if different) */\n```\n\nAnd be aware, the html5 simple charset meta is rejected by the W3C validator if the document has a legacy doctype. There it expects the html4 meta content form. Unfortunately, tidy does not presently make this distinction, but maybe it should.\n\nThis may include new options like `add-charset`, but I would probably see that as a Bool - yes (def) - add meta for current doctype if none, or no - do nothing, like the present current/old behaviour... I too do not like multiple options which force the user to know more than they want... although this happens already...\n\nSo, yes, there is a **lot** to discuss and decide here...\n\nAnd @sria91 in your given sample what happens if you add `--output-bom yes`... does the browser then display it corrently?\n. @sria91 thanks for testing the addition of a BOM effects the browser, as it does for the W3C validator... this is good to know...\n\nSome points about the BOM. Presently tidy **only** detects 3 BOM's. The `in->encoding` is set from cfg TidyInCharEncoding, def=UTF8 -\n- UNICODE_BOM_BE=0xFEFF - UTF16BE - warn ENCODING_MISMATCH if `in->encoding` not UTF16 or UTF16BE\n- UNICODE_BOM_LE=0xFFFE - UTF16LE - warn ENCODING_MISMATCH if `in->encoding` not UTF16 or UTF16LE\n- UNICODE_BOM_UTF8=0xEFBBBF - UTF8 - warn ENCODING_MISMATCH if `in->encoding` not UTF8\n\nAnd if it does issue such a **warning** will keep that info in `doc->badChars |= BC_ENCODING_MISMATCH;` to use later in `ErrorSummary`, but strangely does not output anything more for this `BC_ENCODING_MISMATCH` flag, despite the comment `#define BC_ENCODING_MISMATCH 16 /* fatal error */`! Some mysteries here? Should it be changed to an **error**? Should **more** summary info be given in this case?\n\nNow, sites like [Wikipedia](https://en.wikipedia.org/wiki/Byte_order_mark) lists 11 BOMs... So the question is, should tidy be extended? And need to explore what happens if there exists one of the other BOMs, which tidy will presently put back into the stream (unget)! What mess will happen in later parsing?\n\nAnd to answer my own question, I would say **`no`** at this time... let that come up as a new issue if a use case is ever found.\n\n@balthisar thanks for starting a specification. But concerning 1 & 2, there is some wording I do not understand. Sort of \"found BOM ... a BOM not expected (error)\". What spec are you using to decide a BOM is not expected? While I can read here and there that a BOM is not needed, but I can not see this as an `error` if added! Maybe we could `warn` with say `a BOM found, but it is not needed`, but why? I read a BOM **may** be added for UTF8... Am I reading something wrong here?\n\nAs stated above on finding a BOM tidy already warns if it does not match the given input encoding. So I do not quite understand the idea in 1 and 2?\n\nBut **absolutely** agree with - For versions of Tidy greater than 5.x.y, Tidy will enforce the use of charsets in its output.\n- HTML4-- will use the `meta content-type` attribute.\n- HTML5++ will use the `meta charset` attribute.\n\nSo I see it as split in 3 cases - BOM or NOT or EITHER\n1. Known BOM found\n   1. Warn (as now) or Error? if not matching input encoding.\n   2. Warn (or Error?) if any not matching metatdata found, and none added. **New!**\n   3. Write BOM to output, as now, matching output encoding.\n2. No BOM found\n   1. Add BOM only if requested, matching output encoding.\n   2. If no BOM requested, Warn and add appropriate doctype metadata, if none found. **New!**\n3. Either\n   1. Warn if current metadata does not match doctype, and fix. **New!**\n   2. If **both** meta charset and content-type are found. Warn, and drop one depending on doctype. **New!**\n\nQuestion: If an appropriate doctype metadata, **and** it matches the BOM, should both be kept? Suggest `yes`.\n\nAnd yes, agree we could add an option like `enforce-charset-attribute`, defaulting to `yes`, but it seems that would only be required if we really feel we need to preserve the old behaviour with a `no`! \n\nIt seems clear to me the W3C feels there **MUST** be either a BOM **or** an appropriate charset meta on **all** html documents, so would also be ok with only the new behaviour. But as yet have not found a W3C spec which exactly states this. Of course there are many character encodings that do not have a BOM, so that can only be a doctype **appropriate** meta charset for those...\n\nThe important issue is that a **tidied** document should have the best chance possible to pass W3C validation. And hopefully thus be correctly displayed by browsers... This fixes the original issue raised.\n\nOr to put it another way - This **is** `granddaddy` **`Tidy`**! Should **`Tidy`** have a `no` option which renders an output `invalid`? Allow users to over-ride the good intentions of `granddad`? Suggest `no`!\n\nHmmmm, seems I added more questions than answers ;=))\n. @balthisar yes, as indicated tidy presently decodes 3 BOMs, and not suggesting it should do more... at present these seem to be the common possibilities encountered on the www... the middle `w` standing for `wild` in this case ;=))\n\nAnd what the user added in config, and the results of that test of the first up to 3 bytes of the file, are used in `uint TY_(ReadChar)( StreamIn *in )` for **every** character read from the stream there after... \n\nThis `ReadChar`, and its sister `ReadCharFromStream`, are quite a complex functions returning a `uint`, so handles multibyte characters of various input encodings... it is a forever loop, `for (;;)`, reading the stream, until EOF, to get the next character, what ever it is... the lexer, the usual character string holder, is thus an array of `uints`... \n\nI would say I only fully understand parts of them... having never had say an `iso2022`, `big5`, `shiftjis`, etc... file to play with, and explore... would welcome those for testing...\n\nAnd ok I now read your 2 as the same as my 1.ii... warn if that BOM does not match any meta `charset` found. And I lean towards this being an **error**, not warning! The BOM tells tidy one things, and the metdata contradicts this!!! \n\nAs you point out the user has maybe converted the file to UTF, but forgot to correct the metadata. I am sure the W3C validator would have strong words to say abouth such confusion ;=)) need to test that more...\n. Now `release` **5.4** is out the door, and we have moved on to development `next` **5.5**, I think it is time to give this `Feature Request` a definitive milestone of **5.5**!\n\nMy motivation is that if the document looks like html5, and does **not** have a meta charset, the W3C validator will raise an error! In simple terms that means what tidy presently outputs will **not** pass the validator! **That is sad!**\n\nLots of ideas and specification have been given above, but we could start simple, If the default config of `utf8` remains for both input and output, then tidy could add this missing `<meta charset=\"utf-8\">`, and more documents would pass validation.\n\nIs there anyone interested in working at least on this beginning? I would help where I can... Thanks...\n\n. Oops, but is this not covered by #456, and WIP PR #458?\n\nMaybe this should be closed, and we just continue with the above.... As suggested some time back, feel this is fully covered by #456, and WIP PR #458, so closing this...\n. @jamesla just for **fun** I installed cygwin 2.873 (32-bit) in an old Windows XP box I have... which took ages for the default install...\n\nOpenned a Cygwin terminal, and cloned tidy into my `$HOME/projects/tidy-html5`... then changed directory to `tidy-html5/build/cmake` and ran `$ cmake ../.. -G \"Unix Makefile\"`... I needed to specifically add the `generator` since by default cmake found and wanted to use my installed MSVC8!\n\nBut this quickly showed me that I also needed to also install the **Devel** category to get gcc, et al, and noted that this also included cmake, and git, and **LOTS** of other things... again another long long install... and consumed many giga bytes of disk space... and some warning about usb0...\n\nAnd you have to be careful some of the tools like `make.exe`, ... are not already in your PATH... as these may be used instead of the cygwin installed `/usr/local/bin:/usr/bin` tool set... causing very unusual errors...\n\nBut then the cmake succeeded in generating a `Makefile`, and I could run `$ make`, and tidy.exe got built... as well as tidy1.xsl, ..., a tidy.1 man page, libtidy.dll.a, and a strange cygtidy-5.dll??? etc...\n\nBe aware the `tidy.exe` built will not run in other than the cygwin terminal, unless you make special provisions for finding the \"embedded in everything built by cygwin\" **cygwin1.dll**... one of the big reasons I do not like Cygwin... adds this proprietary DLL to everything... who know what it does???\n\nAnd that dependency influences where you can install tidy.exe and run it... I did not try it, but in the cygwin terminal a `$ make install`  looks like it would copy the exe to `/usr/local/bin`, as in linux, unless you give cmake another install directory... and the headers to `/usr/local/include`... libs... etc...\n\nBut yes, a tidy build seems `compatible` with a cygwin build... advise if you have problems...\n. As no further comments for two weeks, closing this for now...\n\nFeel free to reopen, or post a new issue... thanks...\n. @jamesla see #680 - the search for an active `tidy package for cygwin` maintainer...\n. @mssiva86 thanks your for your comment... all help appreciated... but I do not quite understand...\n\nI did remove that `RC1` version with [commit](https://github.com/htacg/tidy-html5/commit/3d1abac5303e33c4dbdb0f14bdc0d0e79d369990). Did I not do something else here? Is something else required?\n\nIt seems your PR, which can not automatically merged due to many more changes, is doing the **same** thing?\n\nAnd we have moved on from there with [release](https://github.com/htacg/tidy-html5/releases/tag/5.1.25) 5.1.25...\n\nMaybe you need to update your fork, with something like...\n\n```\n$ git remote add upstream git@github.com:htacg/tidy-html5.git # once only\n$ git checkout master\n$ git status\n$ git stash    # if not clean\n$ git fetch upstream\n$ git rebase upstream/master\n$ git stash pop # if required, and fix conflicts\n$ git push      # update the fork\n$ git checkout release/5.0.0\n$ git rebase upstream/release/5.0.0\n$ git push      # update the fork\n```\n\nAm I not understanding something here? Please explain, elaborate... thanks...\n\nCan this be closed?\n. @jsmad thanks for the report...\n\nSorry there is an install problem, and hope someone with Fedora 23 can shed some light on the problem...\n. Keep in mind we already have the Boolean options `uppercase-attributes` and `uppercase-tags`, both of  which default to `no`, and this conversion is done at a low level stream reading, thus the original user case of tags and attributes is **lost** very early in the process... so like say a `match-user-case` option would need to be done at that same low level collection phase...\n. @balthisar sorry for the delay in reviewing this... for some silly reason this issue did not get into my `Issue Database`... it is now...\n\nI found that even back in [html4](https://www.w3.org/TR/html4/intro/sgmltut.html#h-3.2.2) legacy documents a clear statement **Attribute names are always case-insensitive.**, so any browser that does **not** honor this should be thrown in the **dust bin**... and begin to wonder why Tidy was so strict in this regard... so glad this was made **global**...\n\nAnd glad you were able to leverage the existing option `uppercase-tags`, adding a `preserve` option, and as you point out, works well with the **new** `PickListItems`, PR #553, now merged...\n\nI have now tested the PR #554 on at least the simple sample case give, [in_365.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_365.html), and it works fine...\n\nAnd have run the `regression` tests using Tidy 5.5.24.I365, and no problem... \n\nOf course if you add the new option `--uppercase-attributes preserve`, there will be **lot** of diffs, but this just shows the efficiency of the new option... **and** all those diffs disappear if you add `diff -i`... so this is a 100% **PASS**!\n\nI would certainly vote for merging this #554 `Feature Request`... thanks...\n. @mstanleyjones there is presently no direct option to modify this... so this would be a new feature... \n\nYou can set [wrap](http://api.html-tidy.org/tidy/quickref_5.1.25.html#wrap) to zero, `-w 0`, but then the whole paragraph `<p class=\"p\">` through to `</p>` would be all one line, which you may also not want...\n\nAs to where it happens in the code, of course it is all in pprint.c. The 'printing' is a two layer approach. The node tree output it first stored in the `pprint->linebuf`, as an array of correctly encloded `uints`, and this array is flushed at various points to the actual output... this two level approach makes following exactly what happens a little difficult some times...\n\nIn this case the whole single string `large ... on <a class=\"xref\" href=\"glossaries.html#glossary__glos_hdfs\">` has been stored without a line break, during this first level placement, and at various points, a variable `pprint->wraphere` gets set...\n\nIn the output phase the first flush is just up to this `pprint->wraphere` point - see current `master` 5.1.36, line [610](https://github.com/htacg/tidy-html5/blob/master/src/pprint.c#L610) in the `WrapLine()` sevice. The line is output up to `href=`, a newline inserted, and the remaining text moved up in the head of the `pprint->linebuf` buffer by  `ResetLineAfterWrap()`... and the `PPrintTree()` continues...\n\nSo to change this behaviour you would have to change the setting of the `pprint->wraphere` point. This is set in `SetWrap()`, in `PPrintChar()` and `ResetLineAfterWrap()` if the char is a space, and in other places, usually to the current length of the line buffer, as each html element, or attribute component is added, so it is not easy to control... and is reset in `ResetLine`...\n\nWith such a new option, you could put all setting of `pprint->wraphere` into a single pprint function, and if the option is on, review what is in the buffer and set an appropriate value, but as suggested not so easy... \n\nAnd I am not sure of the use case for such an option. The memory is little dim, but I think others have desired something like this... maybe they could comment again...\n\nHTH.\n. @mstanleyjones thanks for the reply... and close...\n\nActually it is not that the `=` is a wrappable character, but rather the `\"` on the attribute value...\n. @geeknik thanks for the report. All I can comment at this stage is that that assert is indeed fired using your sample!\n\nAs I am sure you are aware asserts only existing in the debug version, as a debug aid mostly, and to remove them you need to add `-DCMAKE_BUILD_TYPE=Release`. In other words, they do not exist in the Released version of the library.\n\nIf I remember correctly the initial MathML support came from @GerHobbelt, from https://github.com/GerHobbelt/htmltidy, I think, or maybe others - it was certainly not written by me - see #70 and #130 - so I am unsure of the reason, or meaning, for that particular assert... maybe he or others can comment...\n\nIn a quick test, removing it seems to have no adverse consequences, but hope others can comment on this...\n. @geeknik, as suggested I can see no problem with removing these Debug only asserts, but as indicated would love to hear from the original author of the code, or from others...\n\n```\ndiff --git a/src/parser.c b/src/parser.c\nindex 2d9de5c..0447fe8 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -1564,8 +1564,13 @@ void TY_(ParseNamespace)(TidyDocImpl* doc, Node *basenode, GetTokenMode mode)\n                     n->closed = yes;\n                     TY_(ReportError)(doc, n->parent, n, MISSING_ENDTAG_BEFORE);\n                 }\n-                assert(outside == no ? n == mp : 1);\n-                assert(outside == yes ? n == basenode->parent : 1);\n+\n+                /* Issue #369 - Since 'assert' is DEBUG only, and there are\n+                   simple cases where these can be fired, removing them\n+                   pending feedback from the original author!\n+                   assert(outside == no ? n == mp : 1);\n+                   assert(outside == yes ? n == basenode->parent : 1);\n+                   =================================================== */\n\n                 if (outside == no)\n                 {\n```\n\nI will continue testing this, but meantime we are considering a release 5.2 shortly, so resetting the milestone to 5.3.\n\nIf you or others can make time to test with this patch, and report, maybe it could still be included in 5.2...\n. @geeknik I have done further testing of this removal, and can sse no problem doing it, but as noted, subject to any feedback from the original author...\n\nHave bumped the version to 5.1.51... Appreciated if you could pull the latest `master` and retest the DEBUG version... and close if ok... thanks...\n. @geeknik this is now in release 5.2, and no reported problems... well it only effects the debug version in any case... so am closing this...\n\nPlease feel free to re-open, or file a new issue... thanks for your support...\n. @Warbo thanks for the comment...\n\nWhile mozilla developers may think this is a `good thing`?, it seems the W3C validator also issues an error on your sample -\n\n```\nError: Bad value \n... for attribute src on element img: Illegal character in scheme data: line break is not allowed.\n... Characters should be represented in NFC and spaces should be escaped as %20.\n```\n\nThe links given are [img](http://w3c.github.io/html/single-page.html#the-img-element) and [NFC](http://www.macchiato.com/unicode/nfc-faq)\n\nTidy is thus following this... \n\nEven [wikipedia/Data_URI_scheme](https://en.wikipedia.org/wiki/Data_URI_scheme) states \"Permitted characters within a data URI are the ASCII characters for the lowercase and uppercase letters of the modern English alphabet, and the Arabic numerals. Octets represented by any other character must be percent-encoded, as in `%26` for an ampersand `&`.\", but then strangely gives a red dot example broken into lines, which Tidy will warn about, and remove...\n\nNow maybe you, and others, think there is a use case that this should be optional, but I will let you, them comment on that... \n\nFor the moment Tidy correctly warns, and removes, such `invalid` characters...\n. Have placed a fix in the `issue-373` branch...\n\nThe modified patch is -\n\n```\ndiff --git a/src/entities.c b/src/entities.c\nindex 935b567..7dd55eb 100644\n--- a/src/entities.c\n+++ b/src/entities.c\n@@ -352,6 +352,7 @@ uint EntityCode( ctmbstr name, uint versions )\n Bool TY_(EntityInfo)( ctmbstr name, Bool isXml, uint* code, uint* versions )\n {\n     const entity* np;\n+    int res;\n     assert( name && name[0] == '&' );\n     assert( code != NULL );\n     assert( versions != NULL );\n@@ -363,13 +364,23 @@ Bool TY_(EntityInfo)( ctmbstr name, Bool isXml, uint* code, uint* versions )\n\n         /* 'x' prefix denotes hexadecimal number format */\n         if ( name[2] == 'x' || (!isXml && name[2] == 'X') )\n-            sscanf( name+3, \"%x\", &c );\n+            res = sscanf( name+3, \"%x\", &c );\n         else\n-            sscanf( name+2, \"%u\", &c );\n+            res = sscanf( name+2, \"%u\", &c );\n\n-        *code = c;\n-        *versions = VERS_ALL;\n-        return yes;\n+        /*  Issue #373 - Null Char in XML result doc - sf905 2009 */\n+        if ( res == 1 )\n+        {\n+            *code = c;\n+            *versions = VERS_ALL;\n+            return yes;\n+        }\n+        else\n+        {\n+            *code = 0;\n+            *versions = ( isXml ? VERS_XML : VERS_PROPRIETARY );\n+            return no;\n+        }\n     }\n\n     /* Named entity: name =\"&\" followed by a name */\n```\n\nNow using the above xml sample with a config -\n\n```\ninput-xml: yes\noutput-xml: yes\npreserve-entities: yes\n```\n\nGet output as follows, which seems perfect, given that these are not valid entities -\n\n```\n<entry>\n<edef>A string of the form &#xdddd or &#dddd</edef>\n</entry>\n```\n\nWithout adding the `--preserve-entities yes`, will of course get an escaped `&` output -\n\n```\n<entry>\n<edef>A string of the form &amp;#xdddd or &amp;#dddd</edef>\n</entry>\n```\n\nBut in both case now no **null** in the output.\n\nI hope others with get a chance to `$ git checkout issue-373`, build and confirm this is indeed fixed... and it will be merged to `master`... thanks...\n. Test binaries for various OS have been added to tagged [Pre-Release](https://github.com/htacg/tidy-html5/releases/tag/5.1.36issue-373).\n\nYour help in testing tidy would be most appreciated.\n. branch 373 now merged to master... seems to have fixed the issue...\n. @JasonWoof thanks for the quick reaction, nearly 10 years later, if you are the same Jason that filed that initial SF bug...\n\nBut I guess my post on closing that out-of-date SF bug should have said - \"... **maybe** current tidy still exhibits this/these problems. **If it does** please file an issue...\"\n\nWith the above input I get an output of **exactly** `<textarea>foo</textarea>` using tidy 5.1.36, the current `master` version... and I get the **same** with ` `!\n\nI have not yet closed [sf790](https://sourceforge.net/p/tidy/bugs/790/), a `pre` example, but when I do will make sure I add the **maybe** and the **iff** ;=))\n\nIf you get the chance to build the current tidy, maybe you can do some more testing, and close this issue if solved...\n\nBut thanks for caring about tidy and taking the time...\n. @JasonWoof yes, I will try to watch my wording ;=))\n\n> Maybe I'll nudge debian to include something newer than 2009\n\nThat would be **FABULOUS** ;=))\n\nHave a look at Issue #354 - seems the maintainer is [MIA](https://lists.debian.org/debian-devel/2011/06/msg00000.html), for many years, also called Jason! \n\n@Daniel has offered to pick up this tidy orphan but little or nothing visible is happening...\n\nAnything you can do to help would be **MOST** appreciated, and as stated, in various places, just shout if there is anything I can do to help as a Tidy maintainer...\n\n**Tidy is ALIVE and WELL!**\n. **Warning**: This could introduce some regressions! \n\nIt allows a newline char to be fetched from the stream. This does wonders to correctly rendered as `<p>a <em>b></em></p>` from -\n\n```\n<p>a<em>\nb</em></p>\n```\n\nNote the newline has been replaced with a space, and moved to before the `<em>`, making it render correctly in browsers, but this newline can then also move some things down in output. This will mostly not effect the browser display, but becomes a pretty print problem of not trimming leading spacey chars...\n\nI think some further work is needed to complete this fix before merging!\n. @balthisar would you be able to show me, help me, tidy up this branch? Get it back to just one fix... well maybe two separate items...\n\nIs is sort of only one small fix, commit f3de815963, even without the debug line and col change, which can be dropped...\n\nAs stated this presently has other pretty print changes that are not good, but getting it back to a clean state, single fix, could help me move forward with that...\n\nMaybe by writing a REBASE.md readme, and/or rebasing it, or something... thanks...\n\nIn other cases I have seen you are a wizard at getting rid of the development crud ;=))\n\nAnd then I have confused it with a different issue commit 3e93d41b which should be in master anyway. It only avoids a warning output that should be done separately. Maybe cherry picking, which I have never tried... again hope you can help...\n. @balthisar wow, thanks for the efforts... sorry it was so `weird and tricky`!\n\nI think I understood some of what you did, and for sure the `329_rebased_merged` branch now correctly reflects the two simple fixes involved.\n\nBut these two things are totally unrelated to each other. But now they are clear and nicely separated and I will redo them again. They are very small...\n\nThe `parser.c`, issue #314 I will add to `master` soon. It is a good fix, and presents no problems.\n\nThe 'lexer.c', issue #329 is only a partial fix, and needs more attention, and I will maybe create a new clean `issue_329` branch for this, where I can work on it, especially now that we have our [tests](https://github.com/htacg/tidy-html5-tests/tree/refactor) repo looking good. It is `regressions` that I fear most about this fix! Now we have the tools...\n\nMeantime, am closing this pull request as too much of a **mess**, and will eventually delete the issue-329 branch... and I think you can delete the two branches you created... Again thanks for your efforts on this... I think I learned something...\n. @a3nm thanks for the report, with sample html - always appreciated...\n\nYes, in #210 we suppressed that warning for HTML5, but tidy is viewing this document as XHTML5... replace the `<html dir=\"ltr\" xml:lang=\"en\" lang=\"en\">` in your sample with just `<html>` and no warning will be emitted...\n\nLooks like a simple fix... will get to it soonest, unless you, or others beat me to it with a patch, or PR... thanks..\n. @a3nm as expected, tidy was only checking for `HTML5 (HT50)`, not also `XHTML5 (XH50)`...\n\nHave applied a small patch to `master`, version 5.1.44 onwards, to fix this case.\n\nCould have also tested the version using `VERS_HTML5 (HT50|XH50)`, but `HTMLVersion(doc)` is expected to only return a **single** version value, so I think this this fix is clearer in its intention.\n\nBut in reviewing other code I note several other places where we are only testing for the HTML5 version, but have left these as a new issues, as and when they come up. At that time maybe need a new service like `IsHTML5Version(doc)`, in addition to `HTMLVersion(doc)`, to generalise this.\n\nAppreciated if you could pull, build and test this, and close this issue if satisfactory... thanks...\n. @a3nm yes, it is **working** for me! \n\nAre you sure you pulled and built the `master` branch. Make sure it contains commit 7bdc31af760...\n\nUsing an input: input5\\in_377.html\n\n```\n<!DOCTYPE html>\n<html dir=\"ltr\" xml:lang=\"en\" lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>Issue #377</title>\n</head>\n<body>\n  <table>\n    <tr><td>foo</td></tr>\n  </table>\n</body>\n</html>\n```\n\nRunning tidy with a configuration `-utf8 -i`, got the great output:\n\n```\nInfo: Document content looks like XHTML5\nNo warnings or errors were found.\n\n<!DOCTYPE html>\n<html dir=\"ltr\" xml:lang=\"en\" lang=\"en\" xmlns=\n\"http://www.w3.org/1999/xhtml\">\n<head>\n  <meta name=\"generator\" content=\n  \"HTML Tidy for HTML5 for Windows version 5.1.44\" />\n  <meta charset=\"utf-8\" />\n  <title>Issue #377</title>\n</head>\n<body>\n  <table>\n    <tr>\n      <td>foo</td>\n    </tr>\n  </table>\n</body>\n</html>\n\n... blah blah blah - this blah can be suppressed with '--show-info no' \n    or '-q' to also drop the first lines...\n```\n\nYou can see the version I am using, 5.1.44. Note, adding a config of `-utf8` does not change anything since that is the default. If I add `-errors -quiet` I get **no** output, as expected.\n\nPlease carefully check the version of tidy, `tidy -v`. If I backup even one version, of course it is still there -\n\n```\nF:\\Projects\\tidy-test\\test>tidy5-5.1.43 -errors -quiet input5\\in_377.html\nline 8 column 3 - Warning: <table> lacks \"summary\" attribute\n```\n\nCan only suggest you are using an earlier version still!\n. @a3nm thanks for the quick reply. Ok, we are now fine on the version ;=))\n\nHmmm, I added that meta tag because the W3C validator gave a warning about no charset... and it also pushed tidy to say -\n\n```\nInfo: Document content looks like XHTML5\n```\n\nNow without that meta tag tidy will take the document as XHTML 1.0 strict, and will thus emit the table summary warning... \n\n```\nInfo: Document content looks like XHTML 1.0 Strict\n```\n\nThe only change I made was to not emit it for HTML5 or XHTML5...\n\nSo now the question is what is the W3C say on the summary attribute on a table for XHTML 1.0 strict? Is it a spurious warning?\n\nNeed to research that... appreciate any links you find... thanks...\n. @a3nm thanks for looking that up... and yes, I understand the \"summary\" attribute on the \"table\" element is not mandatory in XHTML 1.0 strict... but it is allowed, and that does mean tidy will emit the warning...\n\nThis warning was added by the original founders of tidy. They indicated it was there as an aid to the visually impaired, to descibe the table, like an accessibility warning. Over the early years I too argued against it, but did not get anywhere. And now that I am in that position of choice, am not yet convinced to suppress it.\n\nConcerning the meta charset tag, it was introduced in this form only in html5, previously as a meta content attribute. During the parsing tidy thus sees that new form constraining what the document type may be to HTML5 type, hence chooses HTML5 or XHTML5, and acts accordingly. \n\nYou will note tidy does not warn about its omission, but perhaps should, like the W3C validator does. Following your links to [the-meta-element](https://www.w3.org/TR/html5/document-metadata.html#the-meta-element) I can read -\n\n```\nExactly one of the name, http-equiv, and charset, attributes must be specified.\nand\nThere must not be more than one meta element with a charset attribute per document.\n```\n\nBut that is a different question, as a separate issue.\n\nSo concerning the summary warning, you obviously vote for suppression. What do other think? Remove it? In what document types? Maybe add yet another option like `--show-summary-warning no`? Or leave as is?\n\nI will try to listen to reason, but as stated am not yet convinced to suppress it for any document less than HTML5 and now XHTML5.\n. @a3nm yes, while I agree the absense of a HTML5-specific element is **not** a good reason for not considering the document as HTML5, the present code decision logic allows tidy to choose `XHTML 1.0 Strict` in this case. So some review of the current code logic is perhaps warrented, but I personally am not yet convinced of this!\n\nBut please feel free to carefully examine this code logic, and present a patch, or a PR, showing a better way, without causing regressions when tidy is parsing obviously `legacy` documents... we do always want improvement in tidy code! ;=))\n\nAnd at this time also agree, the omission of a content encoding header should not be a tidy warning, but just wish the W3C validator would agree also ;=)) but this is a separate subject!\n\nAnd it is also agreed, as a general comment, that having a myriad of command line options to toggle warnings would perhaps be a good thing!? \n\nI am immediately reminded of the gcc options, where for just about every warning, there is a `no-` option, like `-Wno-unused-variable`, etc, etc, etc. Again, feel free to implement this in a fork, and present a PR. It will **certainly** be considered.\n\nBTW I will shortly be pushing a new option to tidy, `--escape-scripts no`, see #348, and #65 before it, where I will be including a new `README/OPTIONS.md` detailing the simple 4 step process of adding a new option to tidy. Maybe this would help...\n\nUnfortuately, **someone** has to **care** about tidy's behaviour ;=))\n. @balthisar thank you for your comment... and separating it into two clear issues... \n1. What libtidy reports, and \n2. What our console app, tidy, reports\n\nOn the first libtidy should continue to report **ALL** warnings it sees during the parsing of the document. This should not change! It is correct that libtidy, if it `sees` the document as a `VERS_HTML5 (HT50|XH50)` doc it should not emit this table summary warning, and that has been fixed. And vice versa...\n\nYes, others apps using libtidy have the choice to add various filters for this output... their choice...\n\nOn the other hand, our sort of sample app, console tidy, should **not** have such filters. It should report what libtidy offers. Adding some 231 additional options to it would seem very wrong... even as a separate `filter` config...\n\nNow libtidy, from 5.1.44 onward, has been fixed to not report a warning if it finds the document as a `VERS_HTML5` type, and to continue to report otherwise...\n\nSo to me the original request has been met, and I am re-setting this as a Feature Request (FR), with an indefinite future (IF), until further comments convince me it is otherwise...\n\nBe aware, such FR-IF will be closed in the absence of further comments after a reasonable time... So please speak up...\n\nAs always, thanks for your comments...\n. @balthisar yes, I had thought of `--doctype html5` could influence this case, but found at this time it does not change anything. But agree maybe it should/could be taken into account...\n\n@a3nm it is not so much `automatic detection`, but a process of elimination as the document is parsed. We have about 20+ [doctype](https://github.com/htacg/tidy-html5/blob/master/src/lexer.h#L166) bits defined, from HT20 to XH50, and many combinations, and each document starts with **all** bits enabled, in `doc->lexer->versions`. And then for each element, attribute we have a big [tag-defs](https://github.com/htacg/tidy-html5/blob/master/src/tags.c#L168) table of what doctypes that item is allowed in, supports.\n\nSo as certain elements are found in the parsing, some bits are eliminated. The service is called `void TY_(ConstrainVersion)( TidyDocImpl* doc, uint vers );`. It is called many times during the parsing phase...\n\nNot yet checked exactly in code, but assume for example your `<html dir=\"ltr\" xml:lang=\"en\" lang=\"en\">` kicks off all the non-xhtml bits. And likewise if a purely html5 element is found, like `<meta charset=\"utf-8\">`, all the non-html5 bits are eliminated, hence at the end only XH50 bit remains, so tidy `guesses` XHTM5.\n\nBut without that meta tag, or some other HTML5 only element, I guess XHTML 1.0 strict is also still in the bits remaining, and tidy chooses this, over XHTML5, which I think would also be there. While this choice could be altered I can hear others users suggesting **I prefer strict**, if it is available... It is not a question of `blaming` or `benefit of doubt` but choosing exactly what to report.\n\nBut there is light at the end of the tunnel ;=))\n1. I too think the `--doctype [html5|omit|auto|strict|transitional|user]` should play a role.\n2. For a while now I also think the doctype on the document should also be taken into account.\n\nBy that I mean, what I shall call short form `<!DOCTYPE html>`, and that would include the absense of it, when tidy assumes html5 mode, maybe should also `constrain` the version bits to VERS_HTML5? But this is not so sure, since it appears it can also be on XHTML 1.1 strict, which is why I have left it as is...\n\nBut one or both these could push tidy to choose only XHTML5.\n\nI will find time to look more closely at this, but as always patches, or a PR would be appreciated... thanks...\n. @a3nm as mentioned that comment about kicking off non-xhtml bits was done without actually doing any debug, as is wrong, but the general idea of contraining remains valid...\n\nI added some more debug output, and first observing the dimishing bits, **with** the meta charset tag - input5\\in_377.html\n\n```\nExit ParseHead 1...\nR=7 C=1: Returning starttag node <body> stream\nBefore: HT20|HT32|H40S|H40T|H40F|H41S|H41T|H41F|X10S|X10T|X10F|XH11|XB10|----|HT50|XH50\nAfter : HT20|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nEnter ParseBody...\nBefore: HT20|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nAfter : ----|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nExit ParseHTML 2...\nBefore: ----|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nAfter : ----|----|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|----|----|HT50|XH50\nBefore: ----|----|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|----|----|HT50|XH50\nAfter : ----|----|----|----|----|----|----|----|X10S|X10T|----|XH11|----|----|----|XH50\nBefore: ----|----|----|----|----|----|----|----|X10S|X10T|----|XH11|----|----|----|XH50\nAfter : ----|----|----|----|----|----|----|----|X10S|X10T|----|----|----|----|----|XH50\nBefore: ----|----|----|----|----|----|----|----|X10S|X10T|----|----|----|----|----|XH50\nAfter : ----|----|----|----|----|----|----|----|----|----|----|----|----|----|----|XH50\n```\n\nAs you can see there was no change effected by the html element contrary to what I suggested. The fact that the document has a body, immediately removed all frameset bits after exit ParseHead. Then something else remove HT20, and no more until after exit ParseHTML, the end of the document parsing...\n\nNow we had four more constraints, the last, presumed the meta tag, kicked of everything except `XH50`, so we have `XHTML5`.\n\nNow the sequences when there is **not** a meta charset tag - input5\\in_377-3.html\n\n```\nExit ParseHead 1...\nR=6 C=1: Returning starttag node <body> stream\nBefore: HT20|HT32|H40S|H40T|H40F|H41S|H41T|H41F|X10S|X10T|X10F|XH11|XB10|----|HT50|XH50\nAfter : HT20|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nEnter ParseBody...\nBefore: HT20|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nAfter : ----|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nR=7 C=3: Returning starttag node <table> stream\nExit ParseHTML 2...\nBefore: ----|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nAfter : ----|----|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|----|----|HT50|XH50\nBefore: ----|----|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|----|----|HT50|XH50\nAfter : ----|----|----|----|----|----|----|----|X10S|X10T|----|XH11|----|----|----|XH50\nBefore: ----|----|----|----|----|----|----|----|X10S|X10T|----|XH11|----|----|----|XH50\nAfter : ----|----|----|----|----|----|----|----|X10S|X10T|----|----|----|----|----|XH50\n```\n\nNaturally, largely the same, except for what I presume was the last meta kicker, so this time tidy has 3 bits to choose from, and here, as we know, it chose `X10T (XHTML 1.1. strict)`.\n\nNow as pointed out in commit 7bdc31af760 to at least not emit the warning for `VERS_HTML5`, one of the services involved is [HTMLVersion](https://github.com/htacg/tidy-html5/blob/master/src/lexer.c#L248), which is a bit comlicated to read, but it seems by the time this is called when checking the table element, the `choice`, if we can call it that, has been made.\n\nPerhaps I even need more debug to show exactly the reasons for each constraint... what element, attribute is the cause... Naturally I am only showing events where to call to the service actually caused some change...\n\nAnyway, will continue digging, especially how to incude at least `--doctype html5` in this choice...\n\nAs always ideas, discussion, patches, or a PR would be appreciated... thanks...\n. @a3nm, have found a patch which will return XHTML5 before XHTML1, in specific circumstances, but need to do some more testing -\n\n```\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 097a1bc..9f68cb9 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -261,6 +261,8 @@ int TY_(HTMLVersion)(TidyDocImpl* doc)\n     if (dtver == VERS_UNKNOWN) return HT50;\n     /* Issue #167 - if NOT XHTML, and doctype is default VERS_HTML5, then return HT50 */\n     if (!xhtml && (dtver == VERS_HTML5)) return HT50;\n+    /* Issue #377 - If xhtml and (doctype == html5) and constrained vers contains XH50 return that */\n+    if (xhtml && ((vers & VERS_HTML5) == XH50) && (dtmode == TidyDoctypeHtml5)) return XH50;\n\n     for (i = 0; W3C_Doctypes[i].name; ++i)\n     {\n```\n\nMeantime, since we are considering a release 5.2 shortly, changing the milestone here to 5.3...\n\nBut if you can get a chance to add this patch and confirm it works, and if I get time for more testing then **maybe** it could be included in 5.2!\n. @a3nm you did add `--doctype html5` to your config?\n\nThat is one of the required circumstances... thanks for testing...\n\nPS: Please try to remember to delete this text if you directly email reply... it just clutters up the issues if left...\n. @a3nm your persistence is winning through ;=))\n\nIf we assume **`libtidy`** defaults to **html5** mode, then should not the default `TidyDoctypeAuto` also mean **html5** is preferred?\n\nAccordingly, have expand the patch, and fixed another little niggle - MSVC10 prefers explicit `Bool` references - to :-\n\n```\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 097a1bc..3adf0bf 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -255,12 +255,18 @@ int TY_(HTMLVersion)(TidyDocImpl* doc)\n     TidyDoctypeModes dtmode = (TidyDoctypeModes)cfg(doc, TidyDoctypeMode);\n     Bool xhtml = (cfgBool(doc, TidyXmlOut) || doc->lexer->isvoyager) &&\n                  !cfgBool(doc, TidyHtmlOut);\n-    Bool html4 = dtmode == TidyDoctypeStrict || dtmode == TidyDoctypeLoose || VERS_FROM40 & dtver;\n+    Bool html4 = ((dtmode == TidyDoctypeStrict) || (dtmode == TidyDoctypeLoose) ||\n+                  (VERS_FROM40 & dtver) ? yes : no);\n+    Bool html5 = (!html4 && ((dtmode == TidyDoctypeAuto) ||\n+                  (dtmode == TidyDoctypeHtml5)) ? yes : no);\n\n     if (xhtml && dtver == VERS_UNKNOWN) return XH50;\n     if (dtver == VERS_UNKNOWN) return HT50;\n     /* Issue #167 - if NOT XHTML, and doctype is default VERS_HTML5, then return HT50 */\n     if (!xhtml && (dtver == VERS_HTML5)) return HT50;\n+    /* Issue #377 - If xhtml and (doctype == html5) and constrained vers contains XH50 return that,\n+       and really if tidy defaults to 'html5', then maybe 'auto' should also apply! */\n+    if (xhtml && html5 && ((vers & VERS_HTML5) == XH50)) return XH50;\n\n     for (i = 0; W3C_Doctypes[i].name; ++i)\n     {\ndiff --git a/version.txt b/version.txt\nindex 7b3a3df..37cd9d6 100644\n--- a/version.txt\n+++ b/version.txt\n@@ -1,2 +1,2 @@\n-5.1.48\n+5.1.48test\n 2016.03.27\n```\n\nThen, tidy in `default` mode, ie no config, will **not** issue this `summary` warning!\n\nAppreciate you, and others, testing more and commenting... this could make it into 5.2 if all positive feedback... thanks...\n\nOT: Also **love** that if you add `-lang fr` you can read, perhaps bad?, french information ;=))\n. @a3nm I like this fix because it again demonstrates the default **html5** nature of tidy, while still handling legacy documents...\n\nAccordingly, have moved this back to a 5.2 milestone, and included it, bumping the version to 5.1.50...\n\nPerhaps this can now be closed? thanks...\n. @a3nm hope you get a chance to checkout the new release [5.2.0](https://github.com/htacg/tidy-html5/releases/tag/5.2.0), or if you prefer, to stay with `master` then just **pull** the better 5.3.0 ;=))\n. @a3nm I think this is **very** related to #352 - sort of `what are valid characters in a URL`?\n\nAs then, I again searched **hard** for answers here. All I can read according to [rfc 1738](http://www.rfc-editor.org/rfc/rfc1738.txt), and many other references, all characters out of the US-ASCII range must be escaped, and even quite a few within that range!\n\nEven trying an example in the [W3CSchools](http://www.w3schools.com/tags/ref_urlencode.asp), admittedly not to be taken as W3C approved, escapes such `accented` characters...\n\nAs indicated in #352, the existing internal tidy service [CheckUrl](https://github.com/htacg/tidy-html5/blob/master/src/attrs.c#L1469) has a simple test of what characters tidy will escape, namely `if ((c > 0x7e) || (c <= 0x20) || (strchr(\"<>\", c)))`, and even this range check should maybe be extended to more invalid characters...\n\nI would ask you, and others, to provide further W3C references on this issue... and the fact that the W3C validator does not flag a problem is definitely **not** the sole criteria to be considered... thanks...\n. @a3nm, thank you for the continued the research into this... this is what we need... help to understand...\n\nI have tried to carefully read, and understand, to the best of my ability, each link you provided... but this still remains complex...\n\n> Does this sound reasonable to you?\n\nI think you ask here, should full UTF-8 character encoding be allowed in a `href` URL? Like the W3C validator seems to allow!\n\nYou provided an interesting [link](https://url.spec.whatwg.org/#url-code-points), but ask us to **ignore** the `NOTE` there, which I repeat -\n\n```\nCode points higher than U+009F will be converted to percent-encoded bytes by the URL parse\n```\n\nThat is what tidy does, and issues a warning about its change, as it should about document change.\n\nShould tidy have another option, like if instructed this a utf-8 encoded document, then accept utf-8 in a `href`, like the W3C validator does?\n\nNot so sure. The validator, and browsers, readily also accept the tidy percent encoded url, and browsers seem to display the accented character as the link... so browsers 'understand' percentage encoding, and correctly display the result...\n\nAnd **note** tidy already has a **`--fix-uri no`** otpions, and it will **not** escape the uri, but will still issue the warning.\n\nNow, maybe there is a small case here for, if the user adds the option `--fix-uri no`, then maybe tidy should not emit the warning, since it has been instructed to **not** change the document. This is a possibility...\n\nBut as it stands, I am sorry, I am not yet convinced to change tidy's current behaviour...\n\nBut as always, seek more comments on this... thanks...\n. @a3nm ok, I think I understand your only concern is about the warning, and as suggested I do see a small case for omitting the warning with the option `--fix-uri no`, since tidy is then doing nothing except outputting exactly what it was given... but otherwise, if left to escape the uri, then the warning of change should stay...\n\nBut we are considering a release 5.2 shortly, and it seems unlikely that I or others will be able to agreed, implemented, and tested a solution before then am moving this to milestone 5.3.\n. As we are about to release **5.4**, and no further progress has been made on this issue, and there is the option `--fix-uri no` exists, **and** this issue is also covered by #352, am closing this for now.\n\nAnother option would be moving it to `next` **5.5**, but as indicated it does seem a duplicate of #352, so...\n\nAs always, feel free to re-open or file a new issue... thanks...\n\n\n. @gaa-cifasis thank you for your usual detailed report... you certainly come across some weird documents... what characer encoding was the doument supposed to be? It is certainly not utf-8! But as discussed before, tidy should have no problem with any byte sequence...\n\nNot in a position to push this to the repo today, but would be much appreciated if you could apply the follow patch, and try again -\n\n```\ndiff --git a/src/pprint.c b/src/pprint.c\nindex bb7eccc..e3dbce5 100644\n--- a/src/pprint.c\n+++ b/src/pprint.c\n@@ -1034,10 +1034,11 @@ static void PPrintText( TidyDocImpl* doc, uint mode, uint indent,\n             ix = IncrWS( ix, end, indent, ixWS );\n         }\n         else if (( c == '&' ) && (TY_(HTMLVersion)(doc) == HT50) &&\n-            (((ix + 1) == end) || (((ix + 1) < end) && (isspace(doc->lexer->lexbuf[ix+1])))) )\n+            (((ix + 1) == end) || (((ix + 1) < end) && (isspace(doc->lexer->lexbuf[ix+1] & 0xff)))) )\n         {\n             /*\\\n              * Issue #207 - This is an unambiguous ampersand need not be 'quoted' in HTML5\n+             * Issue #379 - Ensure character passed to isspace in range 0 to 255\n             \\*/\n             PPrintChar( doc, c, (mode | CDATA) );\n         }\n@@ -1866,8 +1867,11 @@ static int TextEndsWithNewline(Lexer *lexer, Node *node, uint mode )\n     if ( (mode & (CDATA|COMMENT)) && TY_(nodeIsText)(node) && node->end > node->start )\n     {\n         uint ch, ix = node->end - 1;\n-        /* Skip non-newline whitespace. */\n-        while ( ix >= node->start && (ch = (lexer->lexbuf[ix] & 0xff))\n+        /*\\\n+         *  Skip non-newline whitespace. \n+         *  Issue #379 - Only if ix is GT start can it be decremented!\n+        \\*/\n+        while ( ix > node->start && (ch = (lexer->lexbuf[ix] & 0xff))\n                 && ( ch == ' ' || ch == '\\t' || ch == '\\r' ) )\n             --ix;\n```\n\nThe first is because your document contains some high bit characters, and without the `& 0xff` an assert can be triggered in debug form of `isspace(int)`, due to sign extension... \n\nThe second is in the service `TextEndsWithNewline()` you pointed out and how we got away with the **`>=`** for so long is beyond me!\n\nObviously `ix` can only be decremented if it is greater than the start of the text. In this case we are checking the first character in the lexer buffer, and `ix` starts as zero, and it is a space, with very bad consequences... \n\nAnd note here we do add `& 0xff` to ensure no sign extension, and uses the more tidy traditional testing of the character rather, than using `isspace()`. Maybe a fuller fix for the first part would be to repeat this logic there, but will leave that for the moment...\n\nAnyway, will push this fix soonest but would be much appreciated if you could test the patch... This is against the latest `master`, version 5.1.42... Thanks...\n. @gaa-cifasis because I am currently doing extensive testing on #380 I have also pushed the above patch to the `issue-380` branch, and bumped the version to 5.1.45-Exp2.\n\nIt would be great if you could checkout `issue-380` and re-test... thanks...\n\nIn fact every ones help in testing this branch would be **most** appreciated... it now has **two** important fixes... thanks...\n\nAfter sufficient testing of this issue and #380 in this branch will be merged to `master`... \n. @gaa-cifasis this is now in `master`, and as there have been no further comments for several weeks closing this...\n\nFeel free to re-open, a file a new issue... thanks...\n. @gaa-cifasis thanks for your continued support... tidy **needs** this... keep em coming ;=)) tidy **loves** your support!\n\nUnfortunately at this stage we can not go back to fix the 5.1.25 release! But I **can** see the problem with release 5.1.25... It does get locked in an infinite loop! Very **BAD**!!\n\nHopefully this will be addressed in future releases, where there should be a **branch** for each release... and thus we can retest, and push back later important fixes to such a release, bumping the release number... read [README/VERSION.md](https://github.com/htacg/tidy-html5/blob/master/README/VERSION.md) for the general idea. But 5.1.25 was an odd man out! No branch was created!\n\nBut testing your fragment with the latest `master` 5.1.44 I can **not** repeat the problem with this latest... Thus can do nothing about it...\n\nTest case input: input5\\in_380.html\n\n```\n<a/</li><li><a href=x\n```\n\nConfig: `$ tidy --show-info no input5\\in_380.html`\n\nOutput:\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.1.44\">\n<title></title>\n</head>\n<body>\n</body>\n</html>\n```\n\nMessage output:\n\n```\nline 1 column 1 - Warning: <a> attribute \"/\" lacks value\nline 1 column 1 - Warning: <a> missing '>' for end of tag\nline 1 column 4 - Warning: discarding unexpected </li>\nline 1 column 1 - Warning: missing </a> before <li>\nline 1 column 9 - Warning: inserting implicit <ul>\nline 1 column 22 - Warning: <a> end of file while parsing attributes\nline 1 column 9 - Warning: missing </li> before <a>\nline 1 column 9 - Warning: missing </ul>\nline 1 column 1 - Warning: missing </a>\nline 1 column 9 - Warning: trimming empty <li>\nline 1 column 9 - Warning: trimming empty <ul>\nline 1 column 1 - Warning: trimming empty <a>\nTidy found 12 warnings and 0 errors!\n\nInfo: Document content looks like HTML5\n```\n\nEven adding `--drop-empty-elements no` did not change this except it adds the empty elements...\n\nPlease re-test with the latest, always `stable` master branch, find a problem, and we will certainly look into it further...\n\nAgain, thanks for your support... tidy need this type of testing... at this stage I can only mark this as Technical Support, with an indefinite future...\n\nFind a repeatable problem case, with the latest, and this will quickly change... thanks...\n. @gaa-cifasis wow, **thanks** I think ;=))\n\nIt is certainly a **weird** document, with SUB and NUL chars, but yes it seems to repeat forever...\n\nWill look at it soonest... unless someone beats me to it with a patch or PR... thanks...\n. @gaa-cifasis, first I have added a lot a MSVC debug code to `master`, and bumped the version to 5.1.45. \n\nBut unfortunately this debug is only available with a Windows MSVC compiler, and does not exist in the Release. I must do something about that one day... make it available with other compilers... it is very helpful tracking down where, and when...\n\nI have narrowed it down where the problem starts... As suspected it is nothing to do with the odd character values in your file. As previously mentioned tidy does just drop all these... \n\nIt is the sequence of events, and have found a relatively simple html sample, my in_380-3.html, that can trigger it, and still trying to reduce that sample even more...\n\nHave found a patch, but it chops some code added in 2004, so I am not sure this is the full answer... or what all the consequences of that are...\n\nIt does not seem present in the last CVS release in 2009, nor in tidy-4.9.13, circa 08/02/2015, so something changed, added, modified, since then, and am trying to work backward to see what that is/was... a slow painful process...\n\nThis is just an update... moving forward slowly... thanks for this **interesting** bug ;=))\n. @gaa-cifasis have found this occurred from 4.9.17 to 4.9.18. Here commit 86f626cd674d reverted the anchor tag to just `CM_INLINE` to fix issue #167. This reverted a fix for issue #169, while trying to keep open the dual parsing of html4-- and html5++. So this fix must stay.\n\nSo now I have identified exactly when a certain set of events can cause this infinite loop, but that does not provide a simple solution.\n\nAs mentioned I have found a patch, created an `issue-380` branch, and pushed it. \n\nWill now explore that further... moving forward...\n\nIt would be much appreciated if you get a chance to checkout and test that patch, `issue-380` branch, version 5.1.45-Exp1... thanks...\n. @gaa-cifasis after adding in the patch for #379 have bumped the version to 5.1.45-Exp2 in the `issue-380` branch...\n\nEveryone's **help** in fully testing this branch would be most appreciated... thanks...\n. @gaa-cifasis this is now in `master`, where I have continued testing, and find no problems, so closing this...\n\nFeel free to re-open, or file a new issue... thanks...\n. PS: See [Issue 3](https://github.com/htacg/tidy-html5-tests/issues/3) in the `test` repo for further details...\n. Well, **if** we accept, agree the message output will **always** be utf-8 text, then the translation service `WriteChar` can be simply replaced by the `TidyOutputSink *outp->putByte()`! As stated, the stream is already valid utf-8.\n\nThis can be achieved by the following relatively small patch. Please ignore the removal of the Debug output. This is already now handled in the `putByte`, and this avoids a duplication in my debug log. -\n\n```\ndiff --git a/src/message.c b/src/message.c\nindex 2328515..6de12bc 100755\n--- a/src/message.c\n+++ b/src/message.c\n@@ -260,30 +260,32 @@ static void messagePos( TidyDocImpl* doc, TidyReportLevel level, uint code,\n     if ( go )\n     {\n         enum { sizeBuf=1024 };\n-        char *buf = TidyDocAlloc(doc,sizeBuf);\n+        TidyOutputSink *outp = &doc->errout->sink;\n+        char *buf = (char *)TidyDocAlloc(doc,sizeBuf);\n         const char *cp;\n+        byte b;\n         if ( line > 0 && col > 0 )\n         {\n             ReportPosition(doc, line, col, buf, sizeBuf);\n-#if !defined(NDEBUG) && defined(_MSC_VER)\n-            SPRTF(\"%s\",buf);\n-#endif\n             for ( cp = buf; *cp; ++cp )\n-                TY_(WriteChar)( *cp, doc->errout );\n+            {\n+                b = (*cp & 0xff);\n+                outp->putByte( outp->sinkData, b );\n+            }\n         }\n\n         LevelPrefix( level, buf, sizeBuf );\n-#if !defined(NDEBUG) && defined(_MSC_VER)\n-            SPRTF(\"%s\",buf);\n-            SPRTF(\"%s\\n\",messageBuf);\n-#else\n         for ( cp = buf; *cp; ++cp )\n-            TY_(WriteChar)( *cp, doc->errout );\n-\n+        {\n+            b = (*cp & 0xff);\n+            outp->putByte( outp->sinkData, b );\n+        }\n         for ( cp = messageBuf; *cp; ++cp )\n-            TY_(WriteChar)( *cp, doc->errout );\n+        {\n+            b = (*cp & 0xff);\n+            outp->putByte( outp->sinkData, b );\n+        }\n         TY_(WriteChar)( '\\n', doc->errout );\n-#endif\n         TidyDocFree(doc, buf);\n     }\n     TidyDocFree(doc, messageBuf);\n```\n\nOf course the last newline output must still use `WriteChar` to effect the newline translation that is in effect. And maybe the extraction of the value and and-ing with 0xff is over-kill, since `b` is a `byte` already, but reads cleanly this way...\n\nFurther, the acceptance of always utf-8 for the message output seems the best choice, since if the user does not give an output file name then this is to standard `stderr`... \n\nYes, I can read around, and see in my own systems, that **Windows** can have some problems correctly displaying multi-byte utf-8, despite using `SetConsoleOutputCP(CP_UTF8);`, and other changes..., I now think it depends on some deeper registry values, or something, which I do not particularly want to effect on my basic 'english' system... but should be fine on systems that already use multi-byte utf-8, like Chinese, Japanese, etc...\n\nAnd this should be fine for most *nix systems...\n\nOf course it will also means changing the `expects` in `tests` for these tests...\n\nTo facilitate testing in other OSes, have pushed this fix to the `issue-380` branch. \n\nIn the absence of further comments here, or directly on #379, or #380, will merge this branch shortly to `master`. \n. This needs **more** work... all message file output is already valid utf-8, and does **not** need to be `converted`...\n. Created a `fr.po` branch with -\n- another fix for message output\n- a language_fr.h WIP for testing\n\nPleas checkout, and test this branch... thanks...\n. Now merged into master and think all issues here fixed, version 5.1.48, so closing this...\n. @seaburg, thank you for your PR. We **love** those ;=))\n\nWhile your commit 7d28b21 certainly addresses an issue of fixing the **bad** html of `<<a href=\"http://example.com\">example</a>>`, you seem to have also removed an earlier fix [Bug 762102](https://sourceforge.net/p/tidy/bugs/486/)?\n\nNow I have tried to reconstruct that old 762102, now sf 486, created 2003-06-27, by Igor Katraev, but I have not been very successful... not sure exactly what the input was supposed to be... too many 'escapes'!\n\nYour fix certainly seems to produce a better output in the case of a duplicated leading `<`... and I certainly think the current output of `&lt;&lt;a` is quite stupid... and needs fixing... but your fix is not yet tried...\n\nAnd maybe you have good reason why this old fix code was removed... in which case your PR is good... and will be merged... after testing...\n\nPlease explain...\n. @seaburg, @smirn0v, yes I can see this is a more general change for every `< + non-letter` case, and still testing the full consequences of that... but so far things are looking good, but want to do a little more testing before merging to `master`...\n\nHopefully, if I get the time, in just a few more days...\n. @seaburg, @smirn0v, ok after some more testing, I am re-thinking this...\n\nReally, all we want here is to put back certain characters following the `<`, and back up the lexer, so that that particular character can be fetched again and assessed in the `LEX_CONTENT' state.\n\nPreviously we only put back an `&` 2nd character, so, in `LEX_CONTENT`, an entity can be tested...\n\nAnd this issue specifically identifies also if the second character is another `<`, then this should be also put back, lexer backed up, and let `content` handle it... that much is **agreed**!\n\nBut should **every** next non-letter be put back in the stream to be re-assessed? The state is already being changed to `LEX_CONTENT` anyway... It is just a question whether this 2nd non-letter character after a `<` need be pushed back, and the lexer backed up each and every time...\n\nSo, at this point I am leaning towards a simpler fix of the current `if (c == '&')` being expanded to `if ((c == '&') || (c == '<'))`.\n\nAre there any **other** 2nd non-letter characters that need to be re-assessed?\n\nSeek, and appreciate, more comment and testing on this... \n\nIf we can resolve this quickly, it can make it into 5.2, otherwise I will move the milestone to 5.3, since we hope to shortly issue a new 5.2 release... thanks...\n. @seaburg yes, on tracing through it all again, and again, I am coming around to agreeing ;=)) \n\nIt does seem better to put it back, back up the lexer, and let `LEX_CONTENT` deal with it, whatever it is, rather than trying to decide what extra logic need be added... can now not see any bad consequences with this...\n\nNearly out of time today, but should be able to get around to merging this tomorrow... thanks for hanging in there...\n. @seaburg now merged... thanks... add comments, and bumped version to 5.1.49...\n. It seems this `tidy.pot` error of some missing trailing `\"\"` on several strings comes from an error in `poconvert.rb`, because the strings seem ok in `language_en.h`.\n\n```\n    { STRING_DOCTYPE_GIVEN,  0,   \"Doctype given is \\\"%s\\\"\"   },\n```\n\nI just ran `poconvert.rb` in windows, could not get it to run in linux, and the new file it created seems to have the same problems... But maybe I do not understand the process properly...\n\nI can see in that Ruby script -\n\n```\n        # Eliminate C double-double-quotes.\n        tmp = tmp.join.gsub(/\"\"/) { |g| }\n```\n\nbut maybe has nothing to do with this...\n\nSome Ruby help needed, I think...\n. @balthisar as stated my `language_fr.po` is a WIP - only 40% done - so I do not want to push it, and then have to push each update I make there after, but will send it direct. I am trying to get into a habit of doing a few more each day, and do not want to get into perpetual 'pushing' ;=))\n\nAs stated, the Ruby script fails to run in my linux, so can not call that **stable** ;=))\n\n```\n~/projects/html_tidy/tidy-html5/localize$ ./poconvert.rb msginit ../src/language_en.h\n./poconvert.rb:389:in `block (3 levels) in parse_header': undefined method `[]' for #<Enumerator:0x00000001f581a0> (NoMethodError)\n    from ./poconvert.rb:388:in `each_value'\n    from ./poconvert.rb:388:in `block (2 levels) in parse_header'\n    from ./poconvert.rb:387:in `scan'\n    from ./poconvert.rb:387:in `block in parse_header'\n    from ./poconvert.rb:386:in `scan'\n    from ./poconvert.rb:386:in `parse_header'\n    from ./poconvert.rb:316:in `source_file='\n    from ./poconvert.rb:290:in `initialize'\n    from ./poconvert.rb:589:in `new'\n    from ./poconvert.rb:589:in `convert_to_po'\n    from ./poconvert.rb:1016:in `msginit'\n    from /var/lib/gems/1.9.1/gems/thor-0.19.1/lib/thor/command.rb:27:in `run'\n    from /var/lib/gems/1.9.1/gems/thor-0.19.1/lib/thor/invocation.rb:126:in `invoke_command'\n    from /var/lib/gems/1.9.1/gems/thor-0.19.1/lib/thor.rb:359:in `dispatch'\n    from /var/lib/gems/1.9.1/gems/thor-0.19.1/lib/thor/base.rb:440:in `start'\n    from ./poconvert.rb:1140:in `<main>'\n~/projects/html_tidy/tidy-html5/localize$ \n```\n\nTo my surprise it did run in windows, sans error -\n\n```\nF:\\Projects\\tidy-html5\\localize>ruby poconvert.rb msginit ..\\src\\language_en.h\nWrote a new file to F:/Projects/tidy-html5/localize/language_en.po\nmsginit exited without errors.\n```\n\nIs that not the correct usage? Is not `language_en.h` the base for everything thereafter?\n\nThe output almost exactly matched the tidy.pot, one msg change and one new one, but **still** with the missing trailing `\"\"` errors mentioned. That seems a **bug** in my book.\n\nI am begining to understand the PO/POT format, but how many times does a tranlator want to read the same long comment, saying the same thing, especially about trying to stick to a 78 width per line, what to not translate, and what html to put around what content type. To me these are sort of **pre-instructions**. Once read once should be remembered, and applied throughout!\n\nI could understand adding some individual message instructions, like adding where this is used, providing context to the string, that may help in the translation, understanding the meaning better, but not a continual nag about 78, no change to say 'HTML Tidy', and how to add html format to various components within the string. This is just repetative and thus un-helpful. As stated I think such common instructions should **only** be in the README before you start a translation. I would delete them **all** from the `language_en.h` header.\n\nBut I am not a `professional` translator. My first time using POEdit. Maybe they do expect such repetition! So they could start with any random message. Let's hear from others on that...\n\nTo overcome the present short comings of `poconvert.rb` I have written a `poconvert.pl`, not hard, to at first do the header to po conversion, and what I did was only ever add each comment once, and added a README output to collect them together as **common** pre-instructions, that apply to **all** strings... Maybe they could be in a README.en.md, and then we could add a README.fr.md, etc...\n\nAnd I will be extending this to not only start with the `language_en.h` base, but also load my current `language_fr.po`, and thus fill in `msgstr` that have been done... that is a merge function... even warning that the `msgid` has changed, thus should re-check the translation... also a fun WIP...\n\nSo no problem on the ETA... I now have a way forward ;=))\n. It's is amazing what you discover by taking the effort of a perl decoding the `language_en.h` file, and outputting a `language_en.po` file. You learn a **lot**!\n\nAnd then loading my `language_fr.po` and **merging** that into the output, and also comparing the respective `msgid` text, for a given `msgctxt`, you learn even **more** ;=))\n\nFrom my `msgid` diff I can see you made quite a number of **good** `msgid` changes between version 2016-01-23 and 2016-02-17. Thanks... Some minimal, but important additions of the ending `;` char on some entities, for instance, but many others, what all seem like, **changes-for-the-better**...\n\nIt took a bit to get the output all accepted by POEdit, firstly correctly dealing with the plurals, but mainly due to perl does **not** input/output utf-8 by default, but that can be fixed/forced. But there still seem some encoding problems in the results, as indicated in the POEdit display!\n\nOne particular one is the replacement of double inverted commas in English by the French guillemet characters `\u00ab \u00bb`... probably `U+00AB` and `U+00BB`, `&laquo;` and `&raquo;`... these still shows up wrong in the perl output in POEdit??? And a few others, to be explored...\n\nStill to publicly publish my `poconvert.pl`... it is still a WIP...\n\nBut as I say... lots of fun moving forward...\n. @balthisar this will be brief - visitors, lunch, shopping, french - so a very short computer day!\n\n#### Linux running poconvert.rb\n\nFirst I do not think it can be the `language_en.h` file I used. That is the file in the repo, so should be exactly the **same** as you!\n\nNow tried in RPI Raspbian, and it fails there too -\n\n```\npi@raspberrypi ~/Projects/tidy-html5/localize $ ./poconvert.rb msginit ../src/language_en.h\n/usr/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- bundler/setup (LoadError)\n        from /usr/lib/ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'\n        from ./poconvert.rb:8:in `<main>'\npi@raspberrypi ~/Projects/tidy-html5/localize $ ruby -v\nruby 2.1.5p273 (2014-11-13) [arm-linux-gnueabihf]\n```\n\nAnd my Ubuntu is 14.04.4 LTS, but the Ruby is `ruby 1.9.3p484 (2013-11-22 revision 43786) [x86_64-linux]`. Synaptic shows this as the 'default version', but also shows some installed ruby2.0 pieces, some installed??? And I can see there are many components of **both** not installed... maybe I am missing one, some of them????\n\nAh, ha, I can now see there is a ruby-full 1:1.9.3.4 **unchecked**. I will get around to trying this later, in Ubuntu. Maybe that will fix that there...\n\nBut I have a big problem in RPI in that my /dev/root is nearly full, and have started to read-up, and try to understand how to extend this partition, but it looks `complicated`, and **dangerous**... it now has a 1 TB USB Samsung drive attached so has ooddles of space...\n\n#### Fixed bug\n\nGlad you found the **bug**, and I am surprised it was the line I pointed out. Maybe I know more ruby than I thought ;=))\n\n#### Changed msgid\n\nI think I do understand the role of this, and `msgctxt`, and yes minor changes can be ignored, but **not** if the change results in a completely `different` meaning, thus the `translation` **has** to also be corrected. So washing this via a round trip conversion still means you must take notice of the change sometimes!\n\nThat is why in my `poconvert.pl`, in my merge function, taking the latest and greatest `language_en.h`, joining in my old `language_fr.po`, I can also alert myself to those `msgid` updates, changes, compared to the string I used for the translation, to see what translations I should re-visit with the aim of correcting them also. Does that make sense?\n\nAnd that `problem`, if we can call it that, would be the same for **every** translation. Many changes in the base `language_en.h` have to alert the translator to re-look at certain translations. But this would be true for **any** tool-chain used. How is this handled in an all PO/POT tool-chain? How are base project.POT changes communicated to translated PO generators?\n\nAnd, yes, I too have noted some quite messed up re-lining of some big messages. I am not sure if this was me doing something wrong, or POEdit doing the change... and have again started to think about using my `poconvert.pl` to carefully do the relining to max. 78... should not be too hard...\n\nBut as stated, off do other things today...\n. @balthisar pulled the latest `localize_tuneup` branch, and can confirm `poconvert.rb` now works fine in Ubuntu, with Ruby 1.9.3... thanks...\n\nOn RPI, I think you meant `$ sudo gem install bundler`, and then in the `localize/` directory `$ bundle install`. And yes, after these 2 steps, `poconvert.rb` runs fine in RPI, at least for the `msginit` action... again thanks...\n\nAs far as I am concerned this `localize_tuneup` branch could be merged to `master`...\n\nConcerning the **fuzzy** `msgid` changes, while I agree it would be perhaps rare we completely change the meaning of a `msgid`, but it could happen. And there is the simple case of say changing the `default` for example, has to also then be changed in **all** the translations. \n\nAnd then there are **new** strings, where it would also be nice if these were flagged. As you point out, since this all starts with the base `language_en.h`, then there is a git diff using a previous sha, assuming the person doing the translation for tidy is also git savvy... \n\nIn my WIP `language_fr.po` case that turned out to be `$ git diff 9ae15f45a7e14 src\\language_en.h`. This got me a reasonable diff to look at. Of course it is a little **muddied** by the previous 3 lines of comment to the new 8 lines beginning `Important notes for translators:...`, but ok can read past these...\n\nThen there are still lots difference that **do** effect my current translation, like the simple cases of `<code>omit</code>` is now `<var>omit</var>`, etc... which do not actually effect the translation per se, but must still be adjusted in the french string.\n\nBut ok, I understand this is the **tough** work of the translator, and must be done... and we can only help where we can...\n\nI am afraid I did not exactly understand `should regenerate all of the language-specific POT's`! Surely, at this stage we only have `tidy.pot`, the english base file, generated from extracting text from our code base of `language_en.h`. And then from that `tidy.pot` base we could have many language PO files... including one exactly equivalent, `language_en.po`...\n\nYes, when I say **finish** my `language_fr.po`, I suppose we could also generate a `tidy_fr.pot` for people who would prefer to translate from french to their native language, but we are certainly not there yet... But again maybe I am missing something else here...\n\nAs far as this issue is concerned, I now have a working `poconvert.rb` in **all** my systesm, and can quietly move forward completing the translation, as bad as it may be ;=))\n. Wow, I just did a `msgfmt` on my most recent `language_fr.po`... copied the source language_fr.h to `src/`... a few fixes in `language.h`, compiled and ran like `$ echo abc | release\\tidy -lang fr_fr` and it worked ;=))\n\nOf course, the windows console output does not correctly support utf-8, so I saw some messy characters ;=/ But so nice to see warnings like -\n\n```\nLigne: 2 Col: 1 - Attention:manquante <!DOCTYPE> d+\u00acclaration\n```\n\nThis is working fine... now to (slowly) work on the other 60% ;=))\n. Oops, spoke too soon... still some very **bad** things... sent the output to a file, `-o temp1.txt`, and used a utf-8 aware editor to read it...\n\nWhile the `Ligne: 2 Col: 1` and `Info:` msgs are valid UTF-8, and I see `french`, the other message file outputs contain the previous error hex `ef bf bf ef bf bf` ;=((\n\nObviously more fixes needed in #383... all message file output has to be **`unconverted`** - it is already valid utf-8... \n\nSome work to do... which is why I needed to get to this point to expose the problem...\n. @balthisar ok, that would be great to automate the update of the various language_XX.po files... and still to explore what this `fuzzy` means/does...\n\nYes, from reading only, installing RVM seems to allow multiple ruby versions... but I sort of hope I will never need that ;=)) I am not likely to get into ruby script debugging and fixing any time soon...\n\nIn the windows console, all multi-byte utf-8 characters are presently displayed only as sequences of extended ASCII characters, and I can not seem to find anything I can do to temporarily change that! Yes, as mentioned, there are deeper registry changes that can be made, through the control panel, then reboot... I am sure this would work...\n\nIn Control Panel -> Region and Languages - Administrative tab, it shows the current language as `English (United States)`, but there is a `Change System Locale...` button, which opens a dialog with a dropdown where I can select up to about 100 languages. I am sure selecting say `French (France)`, or `Chinese (Simplified, PRC)`, etc, and re-boot, I would then be able to 'see' the French say... But I am **not** willing to do this!\n\nIt is not a problem. As stated it all works well in the Ubuntu linux terminal, even when the locale is set to en_US. Running `$ locale` it shows  `LANGUAGE=en_US`, `LANG=en_US.UTF-8`, while most of the `LC_XXXX` show `en_GB.UTF-8`. But it **still** correctly displays the multi-bytes as a  single accented french characters. Similar in my Ubuntu 32-bit...\n\nHowever, in RPI, with all en_GB, I get the same multi-byte extended ASCII display as Windows! Really do not understand why it is **different**? What have I somehow enabled in Ubuntu that I have not done here in Raspbian, another Debian derivative I understand?\n\nAnd it is even stranger in my old Windows XP (32-bit)! It correctly displays the multi-byte utf-8 as a **single** character, but it is not the correct french accented character. Quite weird...\n\nBut as advised, I have some editors in Windows that also correctly display the utf-8, so this is sufficient for me, for now... Even dumb `notepad.exe` will correctly display utf-8, sometimes!\n\nI have rebase my `fr.po` branch to your merged `master`, and will get around to another round of `french` tests... but think this issue has been solved...\n. After another round of french tests, have now merged the `fr.po` branch into `master`, see #388, and deleted that branch...\n\nRemember to do `$ git checkout master && git fetch --prune` to remove deleted branches...\n\nOf course the pushed `language_fr.po` is a WIP, with only about 40% of the text translated... And have not yet done the `$ ruby poconvert.rb msgfmt translations/language_fr.po`, in windows, to put all the latest into the source, but...\n\nBut when I run that command I get -\n\n```\nE, [2016-03-30 17:55:05#5960] ERROR -- : header_template?: Did someone tamper with the header template? If you\nE, [2016-03-30 17:55:05#5960] ERROR -- : header_template?: meant to change the template and know what you're doing,\nE, [2016-03-30 17:55:05#5960] ERROR -- : header_template?: then the new digest is:\nE, [2016-03-30 17:55:05#5960] ERROR -- : header_template?: cc4a9fbfb7cb9d8e686d92d3dc9e9ef06ecbafb75d18ccf61ada0acbc7b787db\n```\n\nNow I can **fix** this by changing the `@@header_digest =` value to the above, but is this what I am supposed to do?\n\nAnd of course git then advises of a modified file. Am I supposed to commit and push this? Will this change all the time?\n\nI don't **think** I changed the `template` but maybe... What is happening here? There seems no mention of this in any of the README\\* files as far as I can see...\n\nThe error message is **interesting** in that it sort of asks `do I know what I'm doing?`... Hell, **no**! I am **lost** ;=))\n\nAs usual seek **help** in understanding why I get this error!\n. While this still needs work, but we are to shortly do a release 5.4, thus am moving this to `next` 5.5...\n. @balthisar on re-reading this I can see nothing really **open**... so will close...\n\nIt was my attempt to understand the **language** process, and `play` with a French translation, but will leave it to a native speaker to continue that effort...\n. @tyson-nw I am not sure I fully understand your comment... but the fact that you use `/>` in your expected output suggests that you are talking about xhtml?\n\nWhen I use the options `-i -xml` I seems to get exactly what you expect from your sample -\n\n```\nF:\\Projects\\tidy-test\\test>tidy -v\nHTML Tidy for Windows version 5.1.47\n\nF:\\Projects\\tidy-test\\test>tidy -i -xml --show-info no input5\\in_386.html\nNo warnings or errors were found.\n\n<html>\n  <head>\n    <title>Issue #386</title>\n  </head>\n  <body>\n    <form>\n      <input id=\"$nodeid[0]\" />\n      <input id=\"$nodeid[1]\" />\n      <input id=\"$nodeid[2]\" />\n      <input id=\"$nodeid[3]\" />\n    </form>\n  </body>\n</html>\n```\n\nAm I missunderstandong something here? Or is that what you were looking for?\n. After another round of french testing have merged this...\n. @OlafvdSpek thanks for moving it here... will get to it soonest...\n. Oops, need to also add a config -\n\n```\n// config for #390 - sf563\nindent: yes\nindent-spaces: 4\nhide-endtags: yes\n```\n. @OlafvdSpek wow, that was a tough search!\n\nThe problem was the indent gets reset on a conditional flush... which would only reset the indent if there was something to flush!\n\nWhen you add `--hide-endtags yes`, **or** `--omit-optional-tags yes`, then in certain cases no endtag is added to the pprint buffer, so the conditional flush had nothing to flush, so thus did not reset the indent...\n\nI feel confident in this **fix** in that, it only effects the pprint output, not the document parsing, so have backed up the milestone to 5.2, and have included it in `master`.\n\nTo get to this I had to add a **lot** of DEBUG output, but this **only** exists in the MSVC Debug build, and only if you define some extra items, so it has no effect on the Release build.\n\nAccordingly have bumped the version to 5.1.52...\n\nInterestingly, this fix also triggers four **regression test** differences in html output, testbase 427820, 504206, 505770, and xml 1510101! \n\nBut carefully reviewing the html, it looks **better**, in that some previous **bad** indents are also fixed! So will get around to updating those [tests](https://github.com/htacg/tidy-html5-tests) also...\n\nThanks for persisting with this... it only took about **12 years** to fix ;=))\n\nIf you get a chance, please pull the latest, and test... and if fixed, close... thanks...\n. @OlafvdSpek have opened an [Issue #5](https://github.com/htacg/tidy-html5-tests/issues/5) to look after the fixing of the **tests**... so from my perspective this can be closed...\n. Since we about to release a 5.4, and no work has been done on this, am moving it to `next` 5.5... thanks...\n. This seems to continue as an ongoing **bug**, but as we are to shortly do a 5.4 release, and no work has been done on this, am moving it to `next` 5.5... thanks.... Hmmm, seems I **nearly** fixed this when fixing #133. That was for the `AspTag`...\n\nBut as **noted** at the time, perhaps this would also apply to **other** text like nodes...\n\nIt seems this could now be extended to `PhpTag` with the small patch -\n\n```diff\ndiff --git a/src/pprint.c b/src/pprint.c\nindex 9106396..68e8d44 100644\n--- a/src/pprint.c\n+++ b/src/pprint.c\n@@ -1935,6 +1935,8 @@ static Bool TY_(nodeIsTextLike)( Node *node )\n         return yes;\n     if ( node->type == AspTag )\n         return yes;\n+    if (node->type == PhpTag)\n+        return yes; /* Issue #392 */\n     /* add other text like nodes... */\n     return no;\n }\n```\n\nBut then taking a look at my **old** patch, maybe a **better** answer would be to extend this `nodeIsTextLike(node)` service to something like done back in 2007 -\n\n```diff\ndiff -ur C:\\FGCVS\\tidy\\src\\tags.c tidycvs\\src\\tags.c\n--- C:\\FGCVS\\tidy\\src\\tags.c    Fri Dec 29 17:31:08 2006\n+++ tidycvs\\src\\tags.c  Mon Sep 03 14:10:53 2007\n@@ -870,6 +870,22 @@\n   return no;\n }\n+\n+/* new 20070818 - tags that normally contain text */\n+Bool TY_(nodeIsTextLike)( Node * node )\n+{\n+   switch ( node->type )\n+   {\n+   case TextNode:    /* yes for sure */\n+   case CDATATag:   /* maybe??? */\n+   case SectionTag: /* maybe??? */\n+   case AspTag:     /* yes? */\n+   case JsteTag:    /* yes? */\n+   case PhpTag:     /* yes for sure */\n+      return yes;\n+   }\n+   return no;\n+}\n+\n Bool TY_(nodeIsElement)( Node* node )\n {\n   return ( node && \n```\n\nYou will note that includes `CDATATag`, `SectionTag`, `JsteTag`, and moves the service to `tags.c`, which is maybe where it belongs... but no real problem with it remaining in `pprint.c`, which is the only place it is used...\n\nAppreciated if others could cut in the small patch, and test this [in_392.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_392.html) sample...\n\nRemember the test is to run tidy with `-i -o temp1.html in_392.html`, then run tidy again on that output, `-i -o temp2.html temp1.html` and make sure it is **not** changed again, `diff temp1.html temp2.html`... that is **no creeping indent**...\n\nLook forward to further comments... thanks...\n. Maybe incomplete, but have pushed a branch `issue-392`, with the simple fix...\n\nFeedback very welcome,, thanks...\n. @rstrauss yes, this is a **repeat** of issue #321, and is a **known** problem with version 5.1.25, but has been fixed by version 5.1.27, and later...\n\nNow I looked at the `homebrew/Library/Formula/tidy-html5.rb`, and unfortunately it downloads and uses the `5.1.25.tar.gz` source, so can do **nothing** about that... This shows the same at http://braumeister.org/search/tidy...\n\nIt would be good if `homebrew` offered a formula to use the latest `master` git source, but note that site has over 200 pull requests, so even if I, or someone, offered say a `tidy-latest.rb` it might be a long time before it got into distribution for you to use...\n\nBut building and installing the latest 5.1.51 plus tidy is **not** difficult... I do not use a MAC, but open a terminal and enter the following commands should do it, assuming you have git, cmake and build-essentials installed -\n\n```\n$ git clone --depth 1 https://github.com/htacg/tidy-html5.git\n$ cd tidy-html5/build/cmake\n$ cmake ../.. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr\n$ make\n$ sudo make install\n```\n\nThis will install tidy in `/usr/bin`, so you should be able to run `$ tidy -v`, and see version 5.1.51...\n\nWe are in the process of considering a tidy 5.2.0 release shortly, but again it might be some time before that would be available in homebrew...\n\nReally, the best solution seems to be **build it yourself**... just follow the above steps... maybe other MAC OX X users can offer more...\n. @rstrauss hmmmm, reading around I think you could install the `cmake` command line tool using your `homebrew`\n\n```\n$ brew install cmake\n```\n\nBut using the cmake-gui is also quite easy. It would just replace the 3rd line with some GUI steps, and generate the makefile system of your choice, on configure... \n\nI wonder whether it was the simple **curses** gui, `ccmake`, or the full **Qt** based `cmake-gui`? Just curious...\n\nAnyway, glad you got current **tidy** built and installed... You can now always keep up with the **latest** by -\n\n```\n$ cd tidy-html5\n$ git pull\n$ then cmake configure and build\n```\n\nHave you had a chance to test out the latest **tidy** on your sample html?\n\nIf the problem is **fixed** appreciate you closing this issue... thanks...\n. @gagern thank you for the opportunity to explain, and yes, will try to add something somewhere to make the **release** process clearer...\n\n> unless these version bumps are not meant as releases, ...\n\nExactly! The `version.txt` will be bumped for just about every code change. This make it easy for testing, to make sure you are using the correct version. And documenting, like make sure you are using version 5.1.51 plus, and so on... this has proved very useful in many cases...\n\nOnly when we actually make a **release** will a tag be created. Well **much** more than that, a `branch` will also be created. More or less accidentally, this was **not** done for the 5.1.25 release...\n\nWe are right now considering a **release** 5.2.0, when a `tag` and a `branch`, **release/5.2** will be created, `version.txt` set to 5.2.0, the web site updated, etc, etc... Quite a number of steps. Barring any unforeseen problems this is scheduled for the 6/4/2016... ie in a few days... or soonest thereafter...\n\nAt that time the `master` version.txt will be bumped to 5.3.0, and again each code change will bump this - 5.3.1, 5.3.2, etc... As stated many times, we really try to keep the `master` branch very **stable**, so for some this can also be treated as a kind of `release`...\n\nIf an important, critical **fix** comes along, then this will also be pushed back into the `release/5.2` branch, and the version bumped to 5.2.1... and so on, but we do not expect any/many of these...\n\nSome of this is already described in [VERSION.md](https://github.com/htacg/tidy-html5/blob/master/README/VERSION.md), and we will certainly try to improve that wording, and suggestions, even a [PR](https://github.com/htacg/tidy-html5/pulls), **very welcome**...\n\nAnd we will also try to find a suitable place in the web pages to make this clear. Again, suggestions, or a [PR](https://github.com/htacg/html-tidy.org/pulls) very welcome... Note the site page are in a separate repo - https://github.com/htacg/html-tidy.org - That is **new** and please excuse any hiccups...\n\nAnother of those **release** steps is to generate the [API](http://api.html-tidy.org/) documentation. That is also done in their own repo - https://github.com/htacg/html-tidy.org.api - again **new** so...\n\nAnd finally the **release binaries** in - https://github.com/htacg/html-tidy.org.binaries - As you can see in [Issue 1](https://github.com/htacg/html-tidy.org.binaries/issues/1) there, we do need some **help** with the DEB creation... As usual I can produce WIN32 32 and 64 bit releases, @balthisar can produce a MAC OS X release, but linux/unix remains a problem...\n\nAny **help** you can offer in this process would be **most** appreciated...\n. @gagern thanks for the reply...\n\n> I'll suggest some changes to wording...\n\nThat would be **most** appreciated... Yes, the 5.1.25 was a little mistake, and when we do release 5.2.0 maybe its mentioning can be removed, at least from the web site, proudly announcing 5.2.0! Also the target release date for 5.2.0 is Apr 7, not 6 as previously mentioned... \n\nBut of course that depends on a lot of things... for instance I lost my internet connection for 3-4 hours today... that is the first time I have had such a stoppage for a **long** time, and I am struggling on with a weak wifi connection - hope it is all back tomorrow - but it indicates you can never exactly know...\n\n> Do a `git tag -a 5.3` at the beginning of the 5.3 series...\n\nOk, that was one thing I only just now started reading up on, that is namely `annotated` tags. Todate I have always used `lightweight` tags, but I still do not really see any additional benefit? And I do not see the use of `$ git describe ...` for anything...\n\nI already have a neat way to generate [verhist.log](https://github.com/htacg/tidy-html5/blob/master/README/verhist.log), and that gives me commit value, if/when I want to back up to any previous version... its easy...\n\nAnd I also have a way to generate a 5.2.0.html, like this [5.1.25.html](http://binaries.html-tidy.org/binaries/tidy-5.1.25/5.1.25.html), which serves as a simple changelog...\n\nAnd when you add a tag, GitHub has a whole mechanism for generating releases - see [releases](https://github.com/htacg/tidy-html5/releases) - so this all works fine...\n\nDo I really need `annotated` tags?\n\n> generate Linux binaries using Docker...\n\nWell I did not quite understand this... First I have two linux boxes... both Ubuntu 14.04... one 64-bit, one 32-bit... so why do I need `docker`...\n\nI can generate and install tidy using CMake, and unix a makefile... so I do **not** need `docker` for that...\n\nI have been able to generate DEB and RPM using CMake/CPack, but that seems cmake version specific - see #344 - a problem...\n\nSo began searching for other ways... we have had a Dockerfile suggested before - see #255... I will try to look at it again, but wonder what if offers not in CMake/CPack...\n\nBut I am really not looking for **yet another way** ;=)) \n\nBut thanks for the info... maybe I did not understand what you were actually suggesting...\n. @gagern thanks for the comments... these are very **helpful**!\n\n> more or less follows the Semantic Versioning\n\nI guess here I should have stressed the **less** MORE ;=))\n\nAfter reading, searching around a **lot**, looking at the **many** projects I have work on, I personally **like** the `odds/even` style... `odds` for current, `even` for **official** releases...\n\nBut let's be **very** clear here - **this is for package maintainers** ONLY! Thus the `tag` and `branch`... supported well by GitHub...\n\nAs stated, we make **every** effort to **keep** the master branch absolutely **stable**, so anyone downloading the `master` branch is in fact downloading a better **release** - full stop!\n\nIf there is any doubt about a **fix** it will be done in a `branch`! We have had many of those, come and gone, and still have one **fix**, namely issue #329. It is an **important** fix, but presently needs more work, so only exists within a `branch`... \n\nAnd in those branches we often use `additional` identifiers, like `5.0.0RC1`, `5.1.14.EXP1`, `5.1.33Exp`, `5.1.36issue-373`, `5.1.45-Exp1`, etc, etc... we have not yet **settled** on a `style` for these additional `identifiers`, but I guess we **should**! But really additional items like `-pre.1`, `-pre.2` just do not seem very descriptive... But ideas, comments, welcome here...\n\nAgain these additions to the version are **very** important to make sure the `testers` are using the correct version for testing a change...\n\nBut I do not expect **package maintainers** to try to follow, what can be, daily changes in the `master` code, even though each change is probably a **change-for-the-better**. And thus we will more or less arbitrarily choose when to issue a **new** official release. I really hope this makes some sense!\n\nAnd as stated, if an **important**, **critical** fix comes alone, then it will be pushed back into say the `release/5.2` branch, making a new `5.2.1` release...\n\nAnd to add to that, so far we have had **no** change that broke backward compatibility to version `5.0.0`. There have been a number of additions, even changes, to the API, but these do **not** break compatibility with any existing `config` file! When/if we do that, then the `major` version would change to `6`, and so on...\n\nI certainly agree **versioning** is a very important topic, and very much welcome comments, ideas, suggestions... from everybody... thanks...\n\nPS: My internet connection seems to have **recovered**! PHEW!\n. Have commenced the 5.2 release process...\n- create release/5.2 branch and tag 5.2.0\n- update verhist.log - git/perl scripted\n- add a change log - 5.2.0.html - gen git/perl scripted\n- push the GitHub new [release](https://github.com/htacg/tidy-html5/releases/tag/5.2.0) button\n- upload some GitHub binaries, DEB included, but maybe open issue \n- reset master version.txt to 5.3.0\n\nAll little steps... I have not thought this through completely, but some other things to be done...\n- update [tests](https://github.com/htacg/tidy-html5-tests) to 5.2.0\n- update [web page](http://www.html-tidy.org/), to announce...\n- build [api 5.2.0](http://api.html-tidy.org/) docs\n- update [bin](http://binaries.html-tidy.org/) releases, adding other OSes, also to GitHub, mirrors?\n- check distro/build updates, [debian](https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623), [Ubuntu](https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623), homebrew, etc...\n- probably lots of things I missed...\n\nAny help with any of these steps, or others, **most** appreciated... thanks...\n. @balthisar, thanks for completing many more steps... beautiful ;=))\n\nAs a note to self, the order of the release process should/could have been -\n1. reset master version.txt to 5.2.0\n2. update verhist.log - git/perl scripted\n3. add a change log - README\\RELEASE.html == 5.2.0.html - gen git/perl scripted\n4. create release/5.2 branch and tag 5.2.0 - `$ git push origin release/5.2 --tags`\n5. push the GitHub new [release](https://github.com/htacg/tidy-html5/releases/tag/5.2.0) button\n6. upload GitHub binaries - coord with multi-OS binary generators... maybe over 24 hours...\n7. update web page to 5.2.0... maybe a link to the RELEASE.html changelog\n8. Binaries updated using the GitHub bins. Copy RELEASE.html to tidy-5.2.0\\5.2.0.html\n9. API site update\n10. Adjust Milestones - del 5.1, 5.2 show all closed, if poss., mod/add 5.3, 5.4 target dates?\n11. checkout master, reset master version.txt to 5.3.0\n12. Check distro/build updates, [debian](https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623), [Ubuntu](https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623), homebrew, etc, etc...\n13. Probably lots of things I missed...\n\nSo at this point it seems 1-11 have been accomplished, in less than 48 hours... that's good!\n\nI suppose **Check distro/build updates** is the most difficult... \n\nIt would be good to develop a list to monitor, and maybe add to the site -  http://www.html-tidy.org/#get-tidy - we could list what version is available in what distribution channels... both the Windows and Linux distro channels need to be fill out... again with version... need help here...\n\nI tried to look at homebrew, but could not find the repo containing tidy_html5.rb... I was going to adjust the source to 5.2.0, and maybe present a PR... but could not find it! Can someone help with this?\n\nI wish we could do something about the **dreadful** situation with debian/ubunutu... Is there some way I, or another, could become the **maintainer** for **orphaned tidy**? This is a big important channel that is **not** open... **UGH**!\n\nNow that I have a Raspberry Pi, Raspbian OS, I will try to learn about their distribution. You will note I have now added a `tidy-5.2.0-arm7.deb`... any help with this most appreciated...\n\nYou will note Items 2. and 3. are scripted, but I need a place to publish these... at this time it is is just a batch file, **genhisthtm.bat**, running 3-4 perl scripts - vershist.pl, emailobfuscate.pl, lib_utils.pl, ... maybe need some adj for linux, and sh added... I was thinking of say a `tidy-meta` repo... sort of \"Misc. Tidy Items - shell, batch, scripts\", or something along those lines...\n\nOr is it appropriate to add these somewhere in the current repos? I would not mind using tests/tools-perl, but then `tools-cmd` gets muddied... but I am sure it could benefit from using _environment.bat... not urgent, just for next 5.4 release, in October maybe... advice, ideas, welcome...\n\nAnd would appreciate any additions to this list... what else should we be looking at as part of the **Release** process?\n\nThis seems to fully cover this specific issue of `Release tagging`, and maybe this can be **closed**?\n. @gagern, @balthisar, @hannob ...\n\nWell, release 5.2 has now been long out the door, and maybe it is time to consider a 5.4 release... see #471 \n\nSo closing this, as we consider release 5.4... but we should not forget all the above comments... will add a cross-link...\n. @rtack thank you for the report...\n\nTo make testing and fixing easier I wonder if you would be kind enough to -\n- Advise the tidy version `$ tidy -v`\n- Supply a (minimal) html sample\n- Advise any non-default config used\n- Current output\n- Expected output\n\nYes, we can **guess** at some of these, but it makes it quicker if given **all** the above... thanks...\n\nI did some searching but seem unable to find a neat list of `boolean attributes`! Yes, I saw **checked** and **disabled**, but maybe need a complete list, if there is one, and each of the elements they can be used on...\n\nHowever, before that, using the following simple input sample I can **not** reproduce this problem!\n\n```\n<label><input type=checkbox checked name=cheese disabled> Cheese</label>\n```\n\nAnd a config of `--show-body-only yes --show-info no -w 0`, I get the output of -\n\n```\nNo warnings or errors were found.\nInfo: Document content looks like HTML5\n<label><input type=\"checkbox\" checked name=\"cheese\" disabled> Cheese</label>\n```\n\nI was using a very recent tidy `HTML Tidy for Windows version 5.1.51`...\n\nSo the questions become what version?, on what sample?, with what config?\n. @rtack, wow, thank you for the feedback, further testing, and the **time consuming research**...\n\nFirst fixing the title - 3 times - was not really necessary, once the issue is clarified, the original title would have been ok... but no problem... thanks...\n\nIf simple terms this looks like a **simple** fix - watch out for a `/` when parsing an attribute - it could mean it is a self closing tag, provided of course tidy already has `input` flagged as a possible self closer, which I think it does...\n\nBut even if it does **not**, a `/` should be a clear signal to check the next character in the stream, and if it is a `>`, get out of here quick... \n\nSo this gives a very clear path for getting a **fix** for this...\n\nAs to using [stackoverflow](http://stackoverflow.com/a/707702/1275767) as a **valid** W3C reference... well that is possible... but we need to check the code to see exactly why it passes over say `checked` as **not** a problem... does tidy have some list, table, etc... it uses for such decisions... Maybe need some enhancement here, but that is really a separate issue...\n\nAnd also thank you for checking the W3C validator... While that is **not** always definitive, we are `HTACG`, ie part of the `W3C` community... so it does have an influence...\n\nSo like I say, there seems a clear code path to check, if you, or someone else, do not beat me to it ;=))\n\nAgain thank you. **Tidy needs your support!**. Patches or a [PR](https://github.com/htacg/tidy-html5/pulls) are **very** welcome...\n. As we are about to release **5.4**, and no further work has been done on this issue to date, moving it to `next` **5.5**.\n\nI have already indicated there is a clear path to **fixing** this. Patches or PR **very** welcome... thanks...\n. @rtack after several months, cycled back to looking at this **again**... as stated it seems the `code path` is there...\n\nIn general see nothing wrong with `disable\\>` versus `disable \\>`... **both** should be acceptable by tidy...\n\nSo created an `issue-395` branch to look at this... \n\nMade a simple patch to specifically solve this...\n\n```diff\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 238fbfa..77af713 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -3723,6 +3723,22 @@ static tmbstr  ParseAttribute( TidyDocImpl* doc, Bool *isempty,\n         if (TY_(IsWhite)(c))\n             break;\n\n+        if (c == '/') /* Issue #395 - potential self closing tag */\n+        {\n+            c = TY_(ReadChar)(doc->docIn);  /* read next */\n+            if (c == '>')\n+            {\n+                /* got a self closing tag - put is back and continue... */\n+                TY_(UngetChar)(c, doc->docIn);\n+                break;\n+            }\n+            else\n+            {\n+                /* Not '/>' - put it back */\n+                TY_(UngetChar)(c, doc->docIn);\n+            }\n+        }\n+\n         /* what should be done about non-namechar characters? */\n         /* currently these are incorporated into the attr name */\n```\n\nThis seems to **fix** this issue...\n\nAppreciate others checking out the `issue-395` branch, and testing... specifically with sample [in_395-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_395-2.html)...  thanks...\n. @rtack thanks for the report...\n\nI got quite a **surprise** when running your simple sample through a current tidy version 5.1.51, with the config `--show-body-only yes --show-info no`... \n\nIt **converted** the `<ul class=\"list-group\">` to a `<div...>`???\n\nOutput:\n\n```\nline 3 column 5 - Warning: missing <li>\nline 2 column 1 - Warning: missing </ul>\nTidy found 2 warnings and 0 errors!\n\nInfo: Document content looks like HTML5\n<div style=\"margin-left: 2em\" class=\"list-group\"><a href=\"#submenu\"\nclass=\"list-group-item active\" data-toggle=\"collapse\" data-target=\n\"\">someText</a></div>\n```\n\nSo **yes** there is the warning about the missing `<li>`, and assume this would only apply to html5, and **not** to legacy html4-- documents? That is one thing to check and verify... Maybe the `Zero or more li elements` only applies to html5...\n\nThen it also reports missing `</ul>`, but there is now no `<ul>`! It removed it... so why this report... maybe a minor niggle...\n\nReally need help on understanding what is happening here! Under what circumstance will current tidy do this conversion? And why?\n\nSo at this point can do nothing until I understand more... comments, ideas, help **very** welcome... thanks...\n. @rtack, wow, like the previous issue #395, thank you for the feedback, further testing, version information, and the **time consuming research**...\n\nAs you have no doubt understood, tidy has basically two modes. It starts, defaults to html5++ mode, but if it finds a legacy doctype in the data, or is given a user `--doctype <string>`, can revert to html4-- mode...\n\nAt present there is no simple `flag` to show this, but it has been in my mind for quite a while that there should be one... like a simple internal `TY_(IsHTML5Mode)(doc)`, return `yes`, `no`...\n\nThis could be a `Bool isHTML5` value added to the opaque `_Lexer` structure, which is re-initialized for each document, and could be set by `TY_(ResetTags)`, and un-set by `TY_(AdjustTags)`... need to check the code exactly...\n\nSome places in tidy use `TY_(HTMLVersion)(doc)`, and/or `TY_(ApparentVersion)(doc)`, **but** this should only be used after **all** the document parsing is **completed**... all the constraining values taken into account... not **during** the document parsing...\n\nThen this new `TY_(IsHTML5Mode)(doc)` could influence whether this no `<li>` warning is issued... simple...\n\n**BUT**, this is inexplicably mixed up with why does tidy choose to **convert** the `<ul>` to a `<div>`! \n\nTo me this **must** be understood... This conversion might be a separate issue, but may influence what we do about this missing `<li>` warning, if it is no longer a `<ul>`... aside from the simple suggested mode check...\n\nAlso thank you for the simple `input` example... as stated this always helps... And personally, without further explanations, I can see no good reason to convert what looks like perfectly valid html5 `<ul> ... </ul>` input to be converted to a `<div>`!!!\n\nOne tidy niggle on the input title... why not make this like `Issue #396`... but not important...\n\nSo yes, let's add a `TY_(IsHTML5Mode)(doc)` service, and suppress this missing `<li>` warning if still html5++ mode... that would be one thing **fixed**... and could help in other issues like it..\n\nAs always, patch or PR **most** welcome...\n\nBut me, I still seek more understanding of the current **conversion** reasoning...\n. @rtack, have carefully looked into the **conversion** reasoning... and maybe it is all ok...\n\nFirst, tidy has been doing this for a **long** time! As far back as vers 4th August 2000! Practically the first release of tidy...\n\nIt is done **after** the document parsing, in `tidyCleanAndRepair(tdoc);`, specifically it begins in `TY_(List2BQ)()`.\n\nAs the name implies, this renames the `<ul>` to a `<blockquote>`, under certain conditions. Those conditions include that it only has **one** child, and that child is **implicit**. That is added by tidy. The code comment associated with this service is -\n\n```\n/*\n Some people use dir or ul without an li\n to indent the content. The pattern to\n look for is a list with a single implicit\n li. This is recursively replaced by an\n implicit blockquote.\n*/\n```\n\nIn this case, at that moment, the tidy node tree contains -\n\n```\n  StartTag body\n   StartTag ul\n    StartTag li implicit  style=\"list-style: none; display: inline\"\n     StartTag a   href=\"#submenu\"\n```\n\nSo one can see that tidy has already set this up by adding an implicit `<li style=\"list-style: none; display: inline\">` around the anchor...\n\nIn `List2BQ`, the `<li>` is removed, just leaving the anchor contents, and the `<ul>` is renamed to `<blockquote>`, and marked as `implicit`.\n\nThe next transformation occurs in `TY_(BQ2Div)()`, again under certain conditions, namely that it is an implicit `<blockquote>`, which will now be renamed to a `<div>`, and the style `margin-left: 2em` added. The comment associated with this service is -\n\n```\n/*\n Replace implicit blockquote by div with an indent\n taking care to reduce nested blockquotes to a single\n div with the indent set to match the nesting depth\n*/\n```\n\nAnd the change is complete... Now the tidy node tree contains -\n\n```\n  StartTag body  \n   StartTag div implicit  style=\"margin-left: 2em\"\n    StartTag a   href=\"#submenu\"\n```\n\nSo we can see this would not have happened if tidy had **not** added that implicit `<li>`! So fixing this for html5 mode - that is **not** adding an implicit `<li>` during parsing - will also remove this transformation of `<ul>` to `<blockquote>` to `<div>`... my understanding of this is now complete...\n\nSo backing up into the parsing, at the point where an implicit `<li>` is added, and the warning issued...\n\nThe problem starts in [parser.c:2517](https://github.com/htacg/tidy-html5/blob/master/src/parser.c#L2517). The next token in the stream is **not** an `<li>` - ie `if ( !nodeIsLI(node) )`. The token is stored, and an implicit node added...\n\nIf we could check the mode, like `if ( !nodeIsLI(node) && !TY_(IsHTML5Mode)(doc) )` then things would be good... this next token would be added as a child of the `<ul>`, what ever it is...\n\nI will work on this, if you or others do not beat me to it... thanks...\n. It turns out there are some good results in fixing this **bug**... See Issue #310 \n\nPatch to build **5.1.52-test1**\n\n``` diff\ndiff --git a/src/parser.c b/src/parser.c\nindex 0447fe8..ae773aa 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -328,7 +328,6 @@ static Bool CanPrune( TidyDocImpl* doc, Node *element )\n     if (nodeIsDD(element))\n         return no;\n\n-\n     return yes;\n }\n\n@@ -2514,7 +2513,14 @@ void TY_(ParseList)(TidyDocImpl* doc, Node *list, GetTokenMode ARG_UNUSED(mode))\n             continue;\n         }\n\n-        if ( !nodeIsLI(node) )\n+        if ( nodeIsLI(node) || TY_(IsHTML5Mode)(doc))\n+        {\n+            /* node is <LI> \n+               Issue #396 - A <ul> can have Zero or more li elements\n+             */\n+            TY_(InsertNodeAtEnd)(list,node);\n+        }\n+        else\n         {\n             TY_(UngetToken)( doc );\n\n@@ -2567,9 +2573,6 @@ void TY_(ParseList)(TidyDocImpl* doc, Node *list, GetTokenMode ARG_UNUSED(mode))\n                 TY_(InsertNodeAtEnd)(list,node);\n             }\n         }\n-        else\n-            /* node is <LI> */\n-            TY_(InsertNodeAtEnd)(list,node);\n\n         ParseTag( doc, node, IgnoreWhitespace);\n     }\ndiff --git a/src/tags.c b/src/tags.c\nindex ed3436c..9e77fcb 100644\n--- a/src/tags.c\n+++ b/src/tags.c\n@@ -780,6 +780,12 @@ void TY_(AdjustTags)( TidyDocImpl *doc )\n     }\n }\n\n+Bool TY_(IsHTML5Mode)( TidyDocImpl *doc )\n+{\n+    return doc->HTML5Mode;\n+}\n+\n+\n /*\\\n  * Issue #285\n  * Reset the table to default HTML5 mode.\n@@ -809,6 +815,7 @@ void TY_(ResetTags)( TidyDocImpl *doc )\n #if ELEMENT_HASH_LOOKUP\n     tagsEmptyHash( doc, tags ); /* not sure this is really required, but to be sure */\n #endif\n+    doc->HTML5Mode = yes;   /* set HTML5 mode */\n }\n\n void TY_(FreeTags)( TidyDocImpl* doc )\n@@ -823,6 +830,8 @@ void TY_(FreeTags)( TidyDocImpl* doc )\n\n     /* get rid of dangling tag references */\n     TidyClearMemory( tags, sizeof(TidyTagImpl) );\n+\n+    doc->HTML5Mode = no;    /* reset html5 mode == legacy html4 mode */\n }\n\n\ndiff --git a/src/tags.h b/src/tags.h\nindex 2412717..de75809 100644\n--- a/src/tags.h\n+++ b/src/tags.h\n@@ -88,6 +88,7 @@ void TY_(InitTags)( TidyDocImpl* doc );\n void TY_(FreeTags)( TidyDocImpl* doc );\n void TY_(AdjustTags)( TidyDocImpl *doc ); /* if NOT HTML5 DOCTYPE, fall back to HTML4 legacy mode */\n void TY_(ResetTags)( TidyDocImpl *doc ); /* set table to HTML5 mode */\n+Bool TY_(IsHTML5Mode)( TidyDocImpl *doc );\n\n /* Parser methods for tags */\n\ndiff --git a/src/tidy-int.h b/src/tidy-int.h\nindex bf1ccd3..e76cb1d 100755\n--- a/src/tidy-int.h\n+++ b/src/tidy-int.h\n@@ -76,6 +76,8 @@ struct _TidyDocImpl\n     uint                badChars;    /* for bad char encodings */\n     uint                badForm;     /* bit field, for badly placed form tags, or other format errors */\n\n+    Bool                HTML5Mode;  /* current mode is html5 */\n+\n     /* Memory allocator */\n     TidyAllocator*      allocator;\n\ndiff --git a/version.txt b/version.txt\nindex 4901f78..5ca3a38 100644\n--- a/version.txt\n+++ b/version.txt\n@@ -1,2 +1,2 @@\n-5.1.52\n+5.1.52-test1\n 2016.04.04\n\n```\n\nWill try to create an `issue-396` branch soon, unless you beat me to it...\n. @rtack, as @balthisar says, just add a normal PR, and I will deal with it... looks great in a quick review... \n\nCan't wait to tests when it is in htacg, as an `issue-396` branch... probably version **5.3.0-test2**... thanks...\n. Now merged to `master`, and 5.3.1... thanks..\n\nIf you get a chance to re-test this issue, and if ok, close this... thanks..\n. @NaziaMuhaimuna tidy has been doing this `propagation` of certain `representational` elements since the beginning of time! From the first release, tidy-2000; through the last cvs release, tidy-2009; right up to now, tidy-5.3.0 2016... it still does it...\n\nNow the fact that tidy has been doing this for over 16+ years does **not** make it totally right, but to **fix** it requires quite a fundamental change in the current tidy parsing...\n\nIt is agreed, the current tidied version will appear different in a browser, and this is certainly one of the things tidy tries to avoid... that is the tidied document should appear the **same** as the input in cross-browser testing...\n\nClearly your sample shows this visual difference, but I wonder how many other cases there are where this propagation has helped... need to do some testing on this...\n\nYou can see the process in the tidy node tree after parsing... indent is significant...\n\n```\n   StartTag span\n    StartTag b\n     Text   (9) 'Test Tidy'\n   StartTag div   style=\"font-weight: normal\"\n    StartTag span implicit\n     StartTag b implicit\n      Text   (12) 'Do something'\n```\n\nSo you can see the problem is already there... on getting the `<div...>`, tidy closes the `<b>` and the `<span>`, but stores them in a stack, then implicitly re-opens them inside the div...\n\nIf you extend your sample, and add another p after the div, you would see the same propagation of span and b -\n\nInput: \n\n``` html\n<span>\n<b>Test Tidy\n<div style='font-weight: normal'>Do something</div>\n<p>Para 2</p>\n</b>\n</span>\n```\n\nOutput:\n\n``` html\n<span><b>Test Tidy</b></span>\n<div style='font-weight: normal'><span><b>Do\nsomething</b></span></div>\n<p><span><b>Para 2</b></span></p>\n```\n\nThe Tree:\n\n```\n   StartTag span\n    StartTag b\n     Text   (9) 'Test Tidy'\n   StartTag div   style=\"font-weight: normal\"\n    StartTag span implicit\n     StartTag b implicit\n      Text   (12) 'Do something'\n   StartTag p\n    StartTag span implicit\n     StartTag b implicit\n      Text   (6) 'Para 2'\n```\n\nHere the propagation into the p correctly shows bold **Para 2**, as it does in a browser... so it is necessary and correct...\n\nAs stated, in this div case, it would be better if tidy did **not** pull the span and b into the div, but as indicated need to do some more tests, maybe even experimenting with disabling this stack propagation, at least for a div that has style... or for other criteria...\n\nIs there something special about a div with **style**? Or some other reason to not do it in this case...\n\nAt this time I am treating this as a feature request, rather than a bug, since it is what tidy is presently coded to do...\n\nComments, ideas, even a PR would be tested, so help would be **much** appreciated... thanks\n. @NaziaMuhaimuna concerning your questions...\n- legacy HTML - modify console/tidy.c, and the output buffer can be scanned for anything...\n- test Tidy - see https://github.com/htacg/tidy-html5-tests - a WIP - automated yes/no - \n- libTidy is a plug-in, like plugs into Notepad++ say, see API http://api.html-tidy.org/\n- config options and API docs aside, there are no `special` documents... do not understand this...\n\nThe power, versitility of this library can be a plus to any project dealing with html...\n\nPS: We keep that tidy.sf legacy site, but maybe need to update some more links - https://github.com/htacg/tidy.sf.net.legacy -  but the main site is for sure http://www.html-tidy.org/\n. As we are about to release **5.4**, and there has been no work done to date on this issue, or comments, in nearly a year, am closing this.\n\nAnother option would be keep it open, but to move it to `next` **5.5**, but...\n\nPlease feel free to re-open, or file a new issue... thanks...\n. Now merged to `master`, and version bumped to 5.3.1... thanks...\n. @markstinson just checked tidy-5.2.0-win32.zip and tidy-5.2.0-win64.zip, on binaries web site, and did not find anything... but have never used VirusTotal before... maybe did something wrong...\n\nCan you explain more...\n. @markstinson as stated, I get clean results using the direct URL -\n\nhttps://www.virustotal.com/en/url/158d765841a2cda5f7b33e284daa6a7ed14a49c32e2be524928cae62b2da9253/analysis/\n**and**\nhttps://www.virustotal.com/en/url/c39fcae6f30bdba971953c4e8ab9dc28891295cf23fc72e979f37b5726998ad4/analysis/\n\nLooks all green to me... do I miss something here..\n\nThen if I use the file upload, of exactly the **SAME** files, I get the same VEX2662.Webshell!\n\nWhen I download this **SAME** file, it compares 100% to the original I uploaded... also same files that are on https://github.com/htacg/tidy-html5/releases/download/5.2.0/tidy-5.2.0... I generated them in my Win7-PC...\n\nAnd when I downloaded them again my McAfee does a scan, and it reports nothing...\n\nSince I do **not** think either of these two files have any virus infection, so what do we do now?\n\nWho is going to contact contact@virustotal.com and try to remove this **blot**? I think this is a **false positive**!\n. @Shanmuganandh the test cases can be found in their own https://github.com/htacg/tidy-html5-tests repo...\n\nYou need to checkout the `refactor` branch... be aware it is WIP... specifically [Issue 5](https://github.com/htacg/tidy-html5-tests/issues/5) needs some work...\n\nMust make a note to update that SF link [here](https://github.com/htacg/tidy.sf.net.legacy) -  another repo, just for those legacy pages - please use -\n- main page - http://www.html-tidy.org/\n- api docs - http://api.html-tidy.org/\n- bin - http://binaries.html-tidy.org/, etc... \n\nPatches and PR appreciated on all htacg repos... thanks...\n. @majkinetor **absolutely** great... thanks...\n\nAnd yes, **must** be added to the Windows section of [get-tidy](http://www.html-tidy.org/#get-tidy) web page... and will try to get to trying it soon...\n\nAs previously muttered, it would be great to have a list known distros, and the version they offered. Sort of - get on the list type - encouragement to distro project maintaners... or not... maybe, how can we, htacg, help those **channels**?\n\nEvery step in distribution **really** helps... thanks...\n. Since we are to shortly release a 5.4, and there seems no particular Tidy issue here, am closing this for now...\n\nPlease feel free to reopen, or post a new issue... thanks for your tidy support...\n. @TomTrottier I think I get the idea... you want a `&#39;` entity output... is that it?\n\nCould you please add -\n- version of tidy `$ tidy -v`\n- small sample html\n- config used\n- current output\n- expected output\n\nThis will help move this along,,, thanks...\n. @jacksonp thanks for the report... actually I think this has been posted before, but can not find it at the moment... maybe only in my imagination...\n\nI think the problem is that tidy outputs -\n\n``` html\n<pre>   A,\n        B,\n        C,</pre>\n```\n\nThat is it reduces the spaces output for the tab by the length of the `<div>` on the same line...\n\nTo preserve the view in a browser, tidy should output -\n\n``` html\n<pre>        A,\n        B,\n        C,</pre>\n```\n\nThis needs to be checked, and fixed... any takers? \n. As we are about to `release` **5.4**, but this does remain a sad `Pretty Print` alignment issue, and it is a case where the output of tidy does not keep the browser rendering of the original, am moving it to `next` **5.5**...\n\nI am sure there could be a relatively easy **fix** for this alignment... \n\nAs always, comments, patches, PR very **welcome**... thanks...\n. @balthisar I certainly agree changing tidy to **not** replace `<pre>` tabs with spaces at this late stage might bring out **all** the users who now **expect** this behaviour, rightly or wrongly. It was that way back in the earliest 2000 version I have... that's more than 17 years of history, expectations, acceptance...\n\nAnd even then, the first tab in the `<pre>` before the `A` got given less spaces than the `B` or `C`, so this pretty printing `<pre>` spacing bug on the first line of text has been around for a **long** time...\n\nOn the other hand, I agree there seems a **strong** argument to leave things alone when `preformatted` indicated... but I guess at this stage that would have to be a new opt-in option...  like say  `--keep-tabs-in-pre yes`, or something...\n\nBut it also seems it would not be too difficult to treat the `<pre>` tag as having zero length, as @fyiman suggested, thus produce a spaced out text that matched what is visually expected in a browser... an important criteria...\n\nAnd it is interesting that `-i --indent-with-tabs yes` does **not** effect this situation. If a `<p>para</p>` is added in front of the `<pre>`, the `<p>`, and the `<pre>` tags will be indented with a **tab**, but the tabs in the text in the `<pre>` will still get converted to spaces...\n\nHave not checked fully, but this new `indent-with-tabs` option may produce other anomolies here... but maybe not...\n\nPersonally, I would go for fixing the small `space` problem... that should not be difficult to discount the `<pre>` tag as representing space, and leave the bigger, perhaps different, question of whether there should be a new option to handle `preformatted` text differently to later, separately, but that's just me...\n\n**BUT** as I start to look **deeper** into this, I am starting to feel **both** ideas are much more involved than just a simple rational choice...\n\nFirst I started to look at the upper level, pretty print output, but as you will see that is not it...\n\nThe `<pre>` output is handled in the `Ln:2255:    else /* some kind of container element */`, which also handles the `<textarea>` tag. Before outputting the `<pre>` the internal print buffer has been flushed, so is empty. \n\nThen `PPrintTag( doc, mode, indent, node );` is done... and then the node content, with `(mode | PREFORMATTED | NOWRAP)` added... which be done in `PPrintText(...)`...\n\nBut when I look at the `doc->lexer->lexbuf`, I can see the **problem** is already **there**... the 3 lines of text, spearated by `0x0a` has already been added as -\n\n```hex\n20 20 20 41 2c 0a 20 20 20 20 20 20 20 20 42 2c 0a 20 20 20 20 20 20 20 20 43 2c 0a\n```\n\nSo that means going back down to the text collection from the stream... that is where the `<pre>` caused the first line tab to only add 3 spaces, while the 2nd and 3rd line tabs got converted to 8 spaces each...\n\nSo in a way this turns out to **not** be a pretty print problem, but a very low level text collect from the stream problem... maybe not as easy as I first thought... but one never nows until one looks at exactly where it happens... down at `DocParseStream`...\n\nNow when a tab is fetched from the stream, `if (c == '\\t')`, the problem is that the `in->curcol` size is used to determine how many spaces to add - the code -\n\n```code\n        if (c == '\\t')\n        {\n#ifdef TIDY_STORE_ORIGINAL_TEXT\n            added = yes;\n            TY_(AddCharToOriginalText)(in, (tchar)c);\n#endif\n            in->tabs = tabsize > 0 ?\n                tabsize - ((in->curcol - 1) % tabsize) - 1\n                : 0;\n            in->curcol++;\n            c = ' ';\n            break;\n        }\n```\n\nAnd of course, due to the `<pre>`, the current `in->curcol` is 6, thus `in->tabs` get set to 2 - actually 3 minus one space that is being returned now... so the **problem** has been created `streamio.c`...\n\nEventually we get to the **newline**, `if (c == '\\n')`, and `in->curcol` is returned to 1... and on the next tab, `in->tabs` gets set to 7 - actually tabsize, 8, minus one space returned now...\n\nWow, so it seems quite difficult to inform this very low level io service that in this case `in->curcol` needs to be ignored... can something be done with `in->lastcols[LASTPOS_SIZE]`? ... We are keeping the stream io position... could we also keep a document column position, that would know a html tag takes no column size? or something...\n\nSomehow, I now do **not** see this as a simple fix!\n\nAnd given that I now see, remind myself, this low stream io does the tab to space conversion, even an idea to **not** convert tabs, is some case, would also not be trivial... It would mean tabs would have to be added to the lexer buffer, and the choice of tab-to-space conversion done later, probably during output...\n\nThis needs a **lot** more investigation...\n\nBut HTH!\n\nOT: This will probably be my last tidy comment/action before getting back in mid Sept... and really, **really** thanks for stepping in, especially doing the merges... many thanks... g.\n. Have pushed a test branch, `keep-tabs`, that has a new option, `--keep-tabs yes`... it defaults `no`.\n\nAt this stage have only done some preliminary tests. It certainly **fixes** this specific issue sample, but have yet to do more extensive tests...\n\nThe full diff is given below to facilitate a quick review...\n\n```diff\ndiff --git a/include/tidyenum.h b/include/tidyenum.h\nindex 90d7352..ae523a6 100644\n--- a/include/tidyenum.h\n+++ b/include/tidyenum.h\n@@ -604,6 +604,7 @@ typedef enum\n     TidyJoinClasses,             /**< Join multiple class attributes */\n     TidyJoinStyles,              /**< Join multiple style attributes */\n     TidyKeepFileTimes,           /**< If yes last modied time is preserved */\n+    TidyKeepTabs,                /**< If yes keep input source tabs */\n     TidyLiteralAttribs,          /**< If true attributes may use newlines */\n     TidyLogicalEmphasis,         /**< Replace i by em and b by strong */\n     TidyLowerLiterals,           /**< Folds known attribute values to lower case */\ndiff --git a/src/config.c b/src/config.c\nindex 2fd89d7..7b7bd2e 100644\n--- a/src/config.c\n+++ b/src/config.c\n@@ -214,6 +214,7 @@ static const TidyOptionImpl option_defs[] =\n     { TidyJoinClasses,             MX, \"join-classes\",                BL, no,              ParsePickList,     &boolPicks          },\n     { TidyJoinStyles,              MX, \"join-styles\",                 BL, yes,             ParsePickList,     &boolPicks          },\n     { TidyKeepFileTimes,           IO, \"keep-time\",                   BL, no,              ParsePickList,     &boolPicks          },\n+    { TidyKeepTabs,                PP, \"keep-tabs\",                   BL, no,              ParsePickList,     &boolPicks          }, /* 20171103 - Issue #403 */\n     { TidyLiteralAttribs,          MR, \"literal-attributes\",          BL, no,              ParsePickList,     &boolPicks          },\n     { TidyLogicalEmphasis,         MC, \"logical-emphasis\",            BL, no,              ParsePickList,     &boolPicks          },\n     { TidyLowerLiterals,           MR, \"lower-literals\",              BL, yes,             ParsePickList,     &boolPicks          },\ndiff --git a/src/language_en.h b/src/language_en.h\nindex f56f1ec..9f5b93e 100644\n--- a/src/language_en.h\n+++ b/src/language_en.h\n@@ -700,6 +700,17 @@ static languageDefinition language_en = { whichPluralForm_en, {\n         \"Note this feature is not supported on some platforms. \"\n     },\n     {/* Important notes for translators:\n+     - Use only <code></code>, <var></var>, <em></em>, <strong></strong>, and\n+     <br/>.\n+     - Entities, tags, attributes, etc., should be enclosed in <code></code>.\n+     - Option values should be enclosed in <var></var>.\n+     - It's very important that <br/> be self-closing!\n+     - The strings \"Tidy\" and \"HTML Tidy\" are the program name and must not\n+     be translated. */\n+        TidyKeepTabs,            0,\n+        \"This option specifies if Tidy should keep tabs found in the source. \"\n+    },\n+    {/* Important notes for translators:\n       - Use only <code></code>, <var></var>, <em></em>, <strong></strong>, and\n       <br/>.\n       - Entities, tags, attributes, etc., should be enclosed in <code></code>.\ndiff --git a/src/streamio.c b/src/streamio.c\nindex cd36efe..bf75a1a 100644\n--- a/src/streamio.c\n+++ b/src/streamio.c\n@@ -239,7 +239,6 @@ static void RestoreLastPos( StreamIn *in )\n uint TY_(ReadChar)( StreamIn *in )\n {\n     uint c = EndOfStream;\n-    uint tabsize = cfg( in->doc, TidyTabSize );\n\n     if ( in->pushed )\n         return PopChar( in );\n@@ -269,11 +268,15 @@ uint TY_(ReadChar)( StreamIn *in )\n\n         if (c == '\\t')\n         {\n-            in->tabs = tabsize > 0 ?\n-                tabsize - ((in->curcol - 1) % tabsize) - 1\n-                : 0;\n+            Bool keeptabs = cfg( in->doc, TidyKeepTabs );\n             in->curcol++;\n-            c = ' ';\n+            if (!keeptabs) {\n+                uint tabsize = cfg(in->doc, TidyTabSize);\n+                in->tabs = tabsize > 0 ?\n+                    tabsize - ((in->curcol - 1) % tabsize) - 1\n+                    : 0;\n+                c = ' ';\n+            }\n             break;\n         }\n\n```\n\nI have put it in the `PP` category, **TidyPrettyPrint**, but since this happens at the IO level, maybe that should be `IO`, **TidyFileIO**, or some other category. Also maybe the simple text explanation could be expanded to include information on tidy's default IO level tab replacement...\n\nAnd maybe this is too general since it will effect `tabs` **anywhere** in the html code, **not** just in a `<pre>` block, and maybe that could have other consequences...\n\nShould have no effect on the `regression` tests, should there be any tabs there, since it defaults to `no`...\n\nWould be appreciated if others could pull and test this branch, and provide feedback... thanks...\n. Created PR #641 to address this, after full testing and agreement... thanks...\n\n. @balthisar thanks for testing...\n\nYes, now in more testing, adding tabs **everywhere**, I too see they are replaced with **a** space, seemingly in nearly everything but a `<pre>`, as this issue requests...\n\nNot only should the description be changed, but perhaps the option should be renamed `keep-pre-tabs` to make it real clear...\n\nIt seems the `lexer` guards against adding tabs with -\n\n```C\n                if (TY_(IsWhite)(c))\n                {\n                    /* was previous character white? */\n                    if (lexer->waswhite)\n                    {\n                        if (mode != Preformatted && mode != IgnoreMarkup)\n                        {\n                            --(lexer->lexsize);\n                            SetLexerLocus( doc, lexer );\n                        }\n                    }\n                    else /* prev character wasn't white */\n                    {\n                        lexer->waswhite = yes;\n\n                        if (mode != Preformatted && mode != IgnoreMarkup && c != ' ')\n                            ChangeChar(lexer, ' ');\n                    }\n\n                    continue;\n                }\n```\n\nNote it not only changes non-space `white` chars to a space, but dumps them if more than one... and of course when the `<pre>` is being collected, the mode is `Preformatted` so the tabs are left alone, if the option is `yes` and they are fed from the stream...\n\nBut that leaves another case when they will be kept, and that is when the mode is `IgnoreMarkup`... When does that happen? Maybe it is more than just the `<pre>`... \n\nNeed to test, and understand more... **more** feedback very welcome... thanks...\n. Ok, seems tabs are also retained in a `<script>` block... so can not use `keep-pre-tabs` as the option name... and further alters any description of the option...\n\nAlso thought they might be retained in a `<style>` block, but seems not...\n\nStill testing... but as stated **more** feedback very welcome... thanks...\n. This is getting **crazy** to exactly tie down which source `tabs` will be **kept**, and which **converted** to spaces, and under what **circumstances**...\n\nNow it seems **some** will be kept in a `<style>` block if indent, `-i`, is **not** used!?!? How can that be? Or more importantly, how can that be easily described?\n\nJust pushed yet another sample [in_403-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_403-2.html) to my test repo, which demonstrates this...\n\nBut what else is effected? Not easy to logically decide without actual trying a sample...\n\nStill testing, but **need** help... thanks...\n. After **lots** more testing, have come up with the following quite **full** description of this **new** `keep-tabs` option -\n\n```\n        \"With the default <var>no</var> Tidy will replace all source tabs, with spaces, \"\n        \"controlled by the option <code>tab-size</code>, and the current line offset. \"\n        \"<br/>\"\n        \"If set <var>yes</var> this option specifies Tidy should keep certain tabs \"\n        \"found in the source, but only \"\n        \"in preformatted blocks like <code>&lt;pre&gt;</code>, and other CDATA elements like \"\n        \"<code>&lt;script&gt;</code>, <code>&lt;style&gt;<code>, and other pseudo elements like \"\n        \"<code>&lt;?php ... ?&gt;</code>. As always, all other tabs, or sequences of tabs, in \"\n        \"the source will continue to be replaced with a space. \"\n```\n\nComments sought before pushing this to PR #641... thanks...\n\nHave also pushed a small special debug change to be able to `see` tabs in text...\n. @balthisar Thanks for the review... err, no - it is this \"current line offset,\" that causes this bug in the first place...\n\nGiven source lines of `<pre>\\tA\\n\\tB`, the first tab will be expanded to 2/3 spaces, while the second to 7/8 spaces, thus the **visual** rendering bug in a browser...\n\nHave expanded the description a little more -\n\n```diff\ndiff --git a/src/language_en.h b/src/language_en.h\nindex 9f5b93e..56b91e8 100644\n--- a/src/language_en.h\n+++ b/src/language_en.h\n@@ -708,7 +708,17 @@ static languageDefinition language_en = { whichPluralForm_en, {\n      - The strings \"Tidy\" and \"HTML Tidy\" are the program name and must not\n      be translated. */\n         TidyKeepTabs,            0,\n-        \"This option specifies if Tidy should keep tabs found in the source. \"\n+        \"With the default <var>no</var> Tidy will replace all source tabs, with spaces, \"\n+        \"controlled by the option <code>tab-size</code>, and the current line offset. \"\n+        \"Of course, except in the special blocks/elments enumerated below, this will later \"\n+        \"be reduced to just one space. \"\n+        \"<br/>\"\n+        \"If set <var>yes</var> this option specifies Tidy should keep certain tabs \"\n+        \"found in the source, but only \"\n+        \"in preformatted blocks like <code>&lt;pre&gt;</code>, and other CDATA elements like \"\n+        \"<code>&lt;script&gt;</code>, <code>&lt;style&gt;<code>, and other pseudo elements like \"\n+        \"<code>&lt;?php ... ?&gt;</code>. As always, all other tabs, or sequences of tabs, in \"\n+        \"the source will continue to be replaced with a space. \"\n     },\n     {/* Important notes for translators:\n       - Use only <code></code>, <var></var>, <em></em>, <strong></strong>, and\n```\n\nHave now pushed this change to PR #641, which I will merge shortly, barring any negative feedback... thanks...\n. Seems 5.5.85 passes all regression tests, so **now** this could be closed... \n\nOops, someone already did that **prematurely** ;=))\n. @GingkoFr that is add `--show-body-only yes` on the command line, or if placed in a config file `show-body-only: yes`.\n\nDoes this not do what you want?\n. @obonyojimmy thank you for the report...\n\nBut I am **not** familar with **Browserify**, and have no understanding why it can not find a module `utf-8-validate`...\n\nIn the source of HTML Tidy I too can **not** find a `module` utf-8-validate???\n\nPlease explain more... thanks...\n. Got an update -\n\n```\nOn 08/05/16 21:31, Ludovic Rousseau wrote:\n> - extract the .orig.tar.gz\n> - copy the debian/ directory inside\n> - run \"debuild\"\n```\n\nTried to follow that to a T ;=))\n\n```\n# in the repo directory...\ntidy-packaging $ md temp\n$ cd temp\n$ tar -xvf ../tidy_20160407.orig.tar.gz\n$ cd tidy-5.2.0\n$ copy ../../../debian/* .\n$ debuild > bldlog-1.txt 2>&1\n```\n\nAfter waiting quite a while I get -\n\n```\nThis package has a Debian revision number but there does not seem to be\nan appropriate original tar file or .orig directory in the parent directory;\n(expected one of tidy_20160407.orig.tar.gz, tidy_20160407.orig.tar.bz2,\ntidy_20160407.orig.tar.lzma,  tidy_20160407.orig.tar.xz or tidy-5.2.0.orig)\ncontinue anyway? (y/n)  dpkg-buildpackage -rfakeroot -D -us -uc\ndpkg-buildpackage: source package tidy\ndpkg-buildpackage: source version 20160407-1\ndpkg-buildpackage: source distribution unstable\ndpkg-buildpackage: source changed by Daniel James <daniel@64studio.com>\n dpkg-source --before-build tidy-5.2.0\ndpkg-buildpackage: host architecture amd64\ndpkg-checkbuilddeps: Unmet build dependencies: dh-autoreconf\ndpkg-buildpackage: warning: build dependencies/conflicts unsatisfied; aborting\ndpkg-buildpackage: warning: (Use -d flag to override.)\ndebuild: fatal error at line 1364:\ndpkg-buildpackage -rfakeroot -D -us -uc failed\n```\n\nStill a mystery... anyone who can help... thanks...\n\nRegards,\nGeoff.\n\nPS: copy is aliased to `cp -A` IIRC...\n. @danielhjames thanks for that additional depends information...\n\nHave installed dh-autoreconf, and will try again... and ensure the copy includes all subdirectories, but I think it did...\n\nThanks for the link to fpic... but as suggested the standard build for tidy.c, the console app that uses libtidys.lib (static library), does not need relocation... I do not understand that warning...\n\nMaybe something in the **MANY** extra flags added causes the need for relocation... maybe someone can try adding -fPIC and see if tidy.c compiles, links...\n\nThis is still a mystery to me...\n. @danielhjames yay, thanks, it all compiles... \n\nWell I get an error on the gdp signing...\n\nThis is an extract from my deblog-1.txt log file...\nfull : http://geoffair.org/tmp/deblog-1.txt\n\n```\n[skip]\nNow running lintian...\nE: tidy changes: bad-distribution-in-changes-file unstable\nW: tidy source: newer-standards-version 3.9.8 (current is 3.9.5)\nN: 2 tags overridden (2 info)\nFinished running lintian.\nNow signing changes and any dsc files...\n signfile tidy_20160407-1.dsc Daniel James <daniel@64studio.com>\ngpg: skipped \"Daniel James <daniel@64studio.com>\": secret key not available\ngpg: /tmp/debsign.emNssAQc/tidy_20160407-1.dsc: clearsign failed: secret key not available\ndebsign: gpg error occurred!  Aborting....\ndebuild: fatal error at line 1283:\nrunning debsign failed\nbuild-me.sh: debuild failed... in 36 secs... \n```\n\nWhen I build a DEB for our own binary distribution -\n http://binaries.html-tidy.org/\nit would be great if I could sign them on behalf of HTACG.\n\nCan you help with some pointers, like how to gen the \n'secret' key? Is this like a .ssh key?\n\nBut that is not too important, it generated some great \nstuff...\n\n```\nlibtidy-0.99-0_20160407-1_amd64.deb\nlibtidy-dev_20160407-1_amd64.deb\ntidy_20160407-1_amd64.build\ntidy_20160407-1_amd64.changes\ntidy_20160407-1_amd64.deb\ntidy_20160407-1.debian.tar.gz\ntidy_20160407-1.dsc\n\n```\n\nI was surprised by the tidy-0.99-0 deb, but assume \nthis deals with the deletion of the tidy-0.99? It \njust contains 3 files, and the important link \nchange - ./usr/lib/libtidy.so -> libtidy.so.5\n\nAnd I can see now how you separate the -dev, which \nbasically just contains headers, and the main \ntidy_20160407-1_amd64.deb\ncontains the binaries...\n\nBut wait you seem missing the LIBRARIES! To me, the \n-dev package should contain all the components to use \nthe Tidy API... You have them all generated in \nthe obj-x86_64-linux-gnu folder... and install in \nthe debian/tmp directory...\n\nFor example our tidy-5.2.0-64bit.deb, contains -\n\n```\n/usr/bin/tidy\n/usr/lib/libtidys.a\n/usr/lib/libtidy.so -> libtidy.so.5\n/usr/lib/libtidy.so.5 -> libtidy.so.5.2.0\n/usr/lib/libtidy.so.5.2.0\n/usr/include/tidy.h\n/usr/include/tidyenum.h\n/usr/include/tidyplatform.h\n/usr/include/tidybuffio.h\n/usr/share/man/man1/tidy.1\n```\n\nEverything need to install both the console app,\ntidy, and libraries, and headers, for development\nusing tidy... although maybe we should gzip tidy.1...\n\nBut maybe I do not understand something about \nyour package building...\n\nAnd I am puzzled about the `.dsc` file content? \nWhy does it mention 0.99, and not 5.2.0, like -\nBinary: tidy, libtidy-0.99-0, libtidy-dev\n\nAnd nowhere can I find this is the 5.2.0 release... \nis has -\nVersion: 20160407-1\n\nBut ok, it is your 'description' file and can contain \nwhat you need...\n\nAlso note from my log, I had no problem with compiling,\nand linking tidy.c with libtidys.lib... no -fPIC required...\n\n```\n[ 50%] Building C object CMakeFiles/tidy.dir/console/tidy.c.o\n/usr/bin/x86_64-linux-gnu-gcc  -DHAVE_CONFIG_H -DLIBTIDY_VERSION=\\\"5.2.0\\\" -DRELEASE_DATE=\\\"2016/04/07\\\" -DSUPPORT_ACCESSIBILITY_CHECKS=1 -DSUPPORT_ASIAN_ENCODINGS=1 -DSUPPORT_LOCALIZATIONS=1 -DSUPPORT_UTF16_ENCODINGS=1 -g -O2 -fPIE -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2  -Wall  -D_REENTRANT -I/home/geoff/projects/html_tidy/tidy-packaging/temp/tidy-5.2.0/include -I/home/geoff/projects/html_tidy/tidy-packaging/temp/tidy-5.2.0/src    -DTIDY_STATIC -o CMakeFiles/tidy.dir/console/tidy.c.o   -c /home/geoff/projects/html_tidy/tidy-packaging/temp/tidy-5.2.0/console/tidy.c\nLinking C executable tidy\n/usr/bin/cmake -E cmake_link_script CMakeFiles/tidy.dir/link.txt --verbose=1\n/usr/bin/x86_64-linux-gnu-gcc  -g -O2 -fPIE -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2  -Wall  -D_REENTRANT   -Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now  CMakeFiles/tidy.dir/console/tidy.c.o  -o tidy -rdynamic libtidys.a \nmake[3]: Leaving directory `/home/geoff/projects/html_tidy/tidy-packaging/temp/tidy-5.2.0/obj-x86_64-linux-gnu'\n```\n\nI will now try this in other architectures... like on an \nx86, and an arm7... and I like it that your deb contains an \n`arch`, like **amd64**... We discussed that a little, but \nthe conversation petered out, before we reached a conclusion...\n\nAnyway, thanks again for your help on this...\n\nI used a script, which I think would be a good addition\nto your repo - http://geoffair.org/tmp/build-deb.sh.txt\n\nRegards,\nGeoff.\n. Hi Daniel,\n\nYeah, sorry about the many questions.\n\nThanks for the information on debian keysigning -\n https://wiki.debian.org/Keysigning\n\nI will jump through those hoops when needed ;=))\n\nBut for now I will assume they will be getting \ncorrectly signed by you, so we can leave this \nissue... forget it for now...\n\nIt seems the important issue is -\n\n**DEB Contents**\n\nSo now I see 3 deb files built -\n1. libtidy-0.99-0_5.2.0-1_amd64.deb\n2. libtidy-dev_5.2.0-1_amd64.deb\n3. tidy_5.2.0-1_amd64.deb\n\nBut nowhere can I find libtidy.so.5.2.0!\n\nThe deb 1. contains just one link -\n ./usr/lib/libtidy.so -> libtidy.so.5\n\nThe deb 2. contains the headers, and the 3. just the tidy console\napp, and its man page...\n\nIn the previous /OLD/ 2009 release, we had -\n1. libtidy-0.99-0_20091223cvs-1.2ubuntu1.1_amd64.deb  \n2. tidy_20091223cvs-1.2ubuntu1.1_amd64.deb\n3. libtidy-dev_20091223cvs-1.2ubuntu1.1_amd64.deb\n\nAnd as you point out, it is the first that has the \nlibrary, and the associated links were, folders only excluded -\n\n```\n-rw-r--r-- root/root    379384 2015-07-23 19:30 ./usr/lib/libtidy-0.99.so.0.0.0\n-rw-r--r-- root/root      2131 2015-07-23 19:29 ./usr/share/doc/libtidy-0.99-0/copyright\n-rw-r--r-- root/root      1964 2015-07-23 19:30 ./usr/share/doc/libtidy-0.99-0/changelog.Debian.gz\nlrwxrwxrwx root/root         0 2015-07-23 19:30 ./usr/lib/libtidy-0.99.so.0 -> libtidy-0.99.so.0.0.0\nlrwxrwxrwx root/root         0 2015-07-23 19:30 ./usr/lib/libtidy.so -> libtidy-0.99.so.0.0.0\n```\n\nNow, I have no idea why `-0.99` was chosen... but it was,\nand that is history... and if we must, I suppose we must \nput up with that...\n\nI think it was a mistake, back 7 years ago, or the committer \ndid not know, or understand the ABI significance, and it is \na shame we seem unable to correct the situation now...\n\nI would like to just see -\n1. tidy_5.2.0-1_amd64.deb - just want the tidy console app.\n2. libtidy-dev_5.2.0-1_amd64.deb - need lib and headers for development\n\nBut as stated, at the moment the new `libtidy-0.99-0_5.2.0-1_amd64.deb`\ndoes not contain any **shared** library?\n\nWhat am I missing here?\n. Hi Daniel,\n\nOOF, lots of issues here...\n\nThe primary aim of tidy is to offer a very \nflexible API for tidying html documents...\n\nThat is, it offers libtidy.so, and libtidys.lib \nyou can use in your application... cross ported...\n\nNow, in addition to that fruit cake, we offer a \nconsole app, tidy.c, that adds a command line UI,\nbut then uses `libtidy`...\n\nMore a sample app, but its usage has spread... \nand in some minds 'tidy' just means that, without \nlibtidy... in all its forms...\n\nNow we have made a conscious choice to link that \nexecutable to the static version of the library. \nExe bloat acceptable...\n\nIf you want, need, to go beyond the wishes of the \ntidy maintainers, then I suppose a tidy console app \ncan be built using the shared library... I think you \ncan find the cmake parameters for that...\n\nBut I would hope a distribution does not impose its \nown rules on a FOSS project... but at the same time \nwould like to be part of every major distribution...\n\nAdvise it you can not build 'tidy' in what ever form \nyou think appropriate...\n\nAnyway, I will schedule another test shortly...\n\nReally, thank you for your efforts here... we seem \nto be headed forward...\n\nRegards,\nGeoff.\n\nRef: tidy-194-debian-build.txt\n. Hi, \n\nI guess I prefer libtidy5, rather than libtidy1... but \nmaybe we should get some more input on this?\n\nThe linking of the sample tidy.c with the static library,\nis our choice for distribution of that binary.\n\nBut no problem if you prefer it otherwise. I think the \ncmake option is -DTIDY_CONSOLE_SHARED:BOOL=YES... advise \nif you have troubles with this...\n\nConcerning seeking further comment I will share this on -\n\n https://github.com/htacg/tidy-html5/issues/406\n\nAnd I will schedule another build test shortly...\n\nThanks,\nGeoff.\n\nOn 17/05/16 12:05, Daniel James wrote:\n\n> Hi Ludovic,\n> \n> > The Debian/Ubuntu package would be named \"tidy\". Is that confusing?\n> \n> I think that binary package will be the one most people are looking for.\n> \n> > The _source_ would be named \"tidy-html5\". But only people rebuilding the\n> > binary would (need to) know that.\n> \n> That's true. It would mean a change of package name in the changelog\n> too, but perhaps that's no bad thing for a new epoch.\n> \n> Cheers!\n> \n> Daniel\n\n_AND_\n\nOn 17/05/16 12:17, Daniel James wrote:\n\n> Hi Geoff,\n> \n> > However, a new app, that contains this additional\n> > API call, can **NOT** be backwards linked to the old\n> > libtidy-0.99.\n> \n> If additional API calls are added, it is possible for other applications\n> to set minimum library versions without changing the package name.\n> \n> However, the -0.99 is rather unusual in a library name, and this could\n> be a good chance to put it right.\n> \n> Originally the library was libtidy0 in Debian, i.e. the first version.\n> I'm guessing the -0.99 meant 'not quite ready to be version 1'.\n> \n> So I'd be fine with either libtidy1, or libtidy5 to reflect the upstream\n> numbering.\n> \n> Cheers!\n> \n> Daniel\n\n_AND_\n\nOn 17/05/16 16:43, Daniel James wrote:\n\n> Hi Ludovic, hi Geoff,\n> \n> > So I'd be fine with either libtidy1, or libtidy5 to reflect the upstream\n> > numbering.\n> \n> The lintian output indicated that libtidy5 is preferred, to match the\n> SONAME of libtidy.so.5\n> \n> I've updated https://github.com/danielhjames/tidy-packaging for this,\n> and also fixed the issue with the shared library being missing from the\n> libtidy\\* package.\n> \n> A remaining issue is that the /usr/bin/tidy binary works, but is built\n> without using this shared library. I tested this using the sid amd64\n> package with:\n> \n> dpkg -x tidy_5.2.0-1_amd64.deb /tmp/sid-tidy5\n> \n> objdump -p /tmp/sid-tidy5/usr/bin/tidy\n> \n> This shows the output:\n> \n> Dynamic Section:\n>   NEEDED               libc.so.6\n> \n> It looks like libtidy5 is not being linked against, making the binary\n> bigger than it should be (given that the package already has a\n> dependency on the libtidy5 package).\n> \n> According to:\n> \n> https://github.com/htacg/tidy-html5/blob/master/README/README.md\n> \n> \"If you do not need the tidy library built as a 'shared' (DLL) library,\n> then in 2. add the command -DBUILD_SHARED_LIB:BOOL=OFF. This option is\n> ON by default.\"\n> \n> It looks like CMake when used with debhelper builds the shared library\n> but does not link against it. Any ideas?\n> \n> I'm also wondering if we should be running ldconfig in the postinst,\n> given that we're installing a library.\n> \n> Cheers!\n> \n> Daniel\n\n*EOF Ref: tidy-196-debian-build.txt *\n. Hi,\n\nDaniel, thanks for the repo update...\n\nI have just run a new test with the latest and it \nproduced 3 DEB packages, without problems -\n1. libtidy5_5.2.0-1_amd64.deb\n2. libtidy-dev_5.2.0-1_amd64.deb\n3. tidy_5.2.0-1_amd64.deb\n\nAside from the fact that I could not find the static \nlibrary, libtidys.a, in any of them, that looks quite\nconfusing, with the varied naming conventions...\n\nWe have `libtidy5_`, `libtidy-dev_` and `tidy_`???\n\nBut, ok, I guess a developer wanting `tidy` would know \nto select all three, but then they are still missing the \nstatic library! Where will this be included?\n\nI guess I would really prefer everything just be included \nin **one** DEB, for such a small package...\n\nConcerning static versus shared linkage, for the tidy \nconsole app, this is very convenient in Windows, which \nhas lots of hoops to jump through to distribute such \nsmall command line utilities with private DLL dependency.\n\nAs it is now, tidy.exe can be distributed alone... very \nuser friendly... perhaps when, if we have a TidyGUI2,\nwe would certainly consider a Windows installer, which \ncan then also take care of DLL dependency... until then \nwe use static linkage... in all...\n\nBut as stated, distribute it as needed... but I hardly \nthink any bloat argument really applies ;=))\n\nBut let's distribute the **whole** package, including \nthe static library, across ever how many DEB files as you \nthink fit... thanks...\n\nRegards,\nGeoff.\n\nOn 19/05/16 11:30, Daniel James wrote:\n\n> Hi Geoff, hi Ludovic,\n> \n> > I guess I prefer libtidy5, rather than libtidy1... but maybe we\n> > should get some more input on this?\n> \n> The name libtidy5 is suggested by the lintian output that the library\n> name should match the SONAME, so I'm fine with that. I've updated the\n> test packages in\n> https://github.com/danielhjames/tidy-packaging/tree/master/debs/ to suit.\n> \n> > The linking of the sample tidy.c with the static library, is our\n> > choice for distribution of that binary.\n> \n> As for the /usr/bin/tidy binary building in the library, if that is what\n> the upstream project prefers I am also fine with that, personally\n> speaking.\n> \n> The practical difference is that the tidy package would no\n> longer have a dependency on the libtidy\\* package. This would only cause\n> bloat on the target system in the scenario where the user wishes to have\n> both /usr/bin/tidy and another program which relies on libtidy installed.\n> \n> However the Debian project seeks to avoid bloat whenever possible and\n> may prefer that /usr/bin/tidy does not build in the library.\n> \n> > But no problem if you prefer it otherwise. I think the cmake option\n> > is -DTIDY_CONSOLE_SHARED:BOOL=YES... advise if you have troubles with\n> > this...\n> \n> I think we would have to create an override for cmake in the\n> debian/rules file. Perhaps Ludovic has some ideas about that.\n> \n> Cheers!\n> \n> Daniel\n\n_AND_\n\nOn 19/05/16 13:30, Ludovic Rousseau wrote:\n\n> Hello,\n> \n> 2016-05-19 11:30 GMT+02:00 Daniel James daniel@64studio.com:\n> \n> ```\n> Hi Geoff, hi Ludovic,\n> \n> > I guess I prefer libtidy5, rather than libtidy1... but maybe we\n> > should get some more input on this?\n> \n> The name libtidy5 is suggested by the lintian output that the library\n> name should match the SONAME, so I'm fine with that. I've updated the\n> test packages in\n> https://github.com/danielhjames/tidy-packaging/tree/master/debs/ to suit.\n> ```\n> \n> Good choice.\n> https://www.debian.org/doc/debian-policy/ch-sharedlibs.html#s-sharedlibs-runtime\n> \"Normally, the run-time shared library and its SONAME symlink should be placed in a package named librarynamesoversion, where soversion is the version number in the SONAME of the shared library.\"\n> \n> ```\n> > The linking of the sample tidy.c with the static library, is our\n> > choice for distribution of that binary.\n> \n> As for the /usr/bin/tidy binary building in the library, if that is what\n> the upstream project prefers I am also fine with that, personally\n> speaking.\n> \n> The practical difference is that the tidy package would no\n> longer have a dependency on the libtidy* package. This would only cause\n> bloat on the target system in the scenario where the user wishes to have\n> both /usr/bin/tidy and another program which relies on libtidy installed.\n> \n> However the Debian project seeks to avoid bloat whenever possible and\n> may prefer that /usr/bin/tidy does not build in the library.\n> ```\n> \n> I found the footnote https://www.debian.org/doc/debian-policy/footnotes.html#f30 from https://www.debian.org/doc/debian-policy/ch-source.html#s-embeddedfiles \"4.13 Convenience copies of code\"\n> \n> I think we should use a dynamic link if possible.\n> \n> ```\n> > But no problem if you prefer it otherwise. I think the cmake option\n> > is -DTIDY_CONSOLE_SHARED:BOOL=YES... advise if you have troubles with\n> > this...\n> \n> I think we would have to create an override for cmake in the\n> debian/rules file. Perhaps Ludovic has some ideas about that.\n> ```\n> \n> That should be the way to go.\n> \n> Bye\n> \n> ## \n> \n>  Dr. Ludovic Rousseau\n\n_EOF - tidy-197-debian-build.txt_\n. Hi, \n\nThis all looks good to me... noted new content... seems\neverything included... across multiple DEBs?, ok... some \nusual questions on use case for a static library...\nbut includes all required by `tidy` maintainers...\nthanks...\n\nYup, let's distribute this soonest...\n\nWhat is next step? How can I help in that? \n\nRegards,\nGeoff.\n\nOn 20/05/16 12:54, Daniel James wrote:\n\n> Hi Geoff,\n> \n> > Aside from the fact that I could not find the static\n> > library, libtidys.a, in any of them\n> \n> According to https://www.debian.org/doc/debian-policy/ch-sharedlibs.html\n> section 8.3, the static library should be in the development package.\n> I'll look into how that is enabled.\n> \n> > that looks quite\n> > confusing, with the varied naming conventions...\n> > \n> > We have `libtidy5_`, `libtidy-dev_` and `tidy_`???\n> \n> That's standard for Debian.\n> \n> > But, ok, I guess a developer wanting `tidy` would know\n> > to select all three\n> \n> The idea is that a developer building against libtidy would need\n> libtidy5 and libtidy-dev, not the tidy package.\n> \n> > I guess I would really prefer everything just be included\n> > in **one** DEB, for such a small package...\n> \n> Debian is concerned with small target systems, so for example an\n> embedded system which never builds from source does not need headers or\n> static libraries from the -dev packages.\n> \n> Cheers!\n> \n> Daniel\n\n_AND_\n\nOn 20/05/16 13:12, Ludovic Rousseau wrote:\n\n> 2016-05-20 12:54 GMT+02:00 Daniel James daniel@64studio.com:\n> \n> ```\n> Hi Geoff,\n> > Aside from the fact that I could not find the static\n> > library, libtidys.a, in any of them\n> \n> According to https://www.debian.org/doc/debian-policy/ch-sharedlibs.html\n> section 8.3, the static library should be in the development package.\n> I'll look into how that is enabled.\n> ```\n> \n> You do not _have_ to provide the static library in a Debian package.\n> But if you do it is in the -dev package.\n> \n> Why would you need the static library if you can use the dynamic one (and have security fixes and other upgrades for free)?\n> \n> Bye\n> \n> ## \n> \n>  Dr. Ludovic Rousseau\n\n_AND_\n\nOn 20/05/16 13:36, Daniel James wrote:\n\n> Hi Ludovic,\n> \n> > Why would you need the static library if you can use the dynamic one\n> > (and have security fixes and other upgrades for free)?\n> \n> I was wondering that. I guess it is for specialised use cases, such as\n> guaranteeing binary compatibility at build time.\n> \n> There is a /usr/lib/libtidys.a file, so I will put that in the -dev\n> package for now.\n> \n> Cheers!\n> \n> Daniel\n\n_AND_\n\nOn 20/05/16 16:37, Daniel James wrote:\n\n> Hi Ludovic,\n> \n> > ```\n> > I think we would have to create an override for cmake in the\n> > debian/rules file.\n> > ```\n> > \n> > That should be the way to go.\n> \n> Thanks, I used in debian/rules:\n> \n> override_dh_auto_configure:\n>         dh_auto_configure -- -DTIDY_CONSOLE_SHARED:BOOL=YES\n> \n> This seems to have worked because the tidy package is now much smaller,\n> from 176KB down to 41KB on jessie. Also objdump reports the dependency:\n> \n> Dynamic Section:\n>   NEEDED               libtidy.so.5\n>   NEEDED               libc.so.6\n> \n> New test packages in\n> https://github.com/danielhjames/tidy-packaging/tree/master/debs/jessie\n> work for me. If it's OK with you, perhaps the package could go on to\n> collab-maint now.\n> \n> I found the libtidy5 package does not need an explicit postinst hook for\n> ldconfig in the packaging sources because this is now taken care of by\n> an auto generated option in the DEBIAN/triggers file of the sid package:\n> \n> activate-noawait ldconfig\n> \n> or in the jessie package by this auto addition to the postinst:\n> \n> # Automatically added by dh_makeshlibs\n> \n> if [ \"$1\" = \"configure\" ]; then\n>   ldconfig\n> fi\n> \n> Cheers!\n> \n> Daniel\n\n; eof ref: tidy-198-debian-build.txt\n. See all #354, and specifically https://github.com/htacg/tidy-html5/issues/354#issuecomment-224635444 - for an update...\n\nI have now done successful package builds in Ubuntu 14.04 LTS 64-bits, and Raspbian arm7, so am closing this...\n\nPlease feel free to re-open, or add a new issue... thanks...\n. @zanona thanks for the report...\n\nI do not know the exact definition of `non-void HTML elements`, so not sure if `tidy is self closing` them, what ever they are? Please explain a little more...\n\nBut maybe you are suggesting tidy should output all those warnings, like the W3C validator? As errors, or warnings? Is that it? \n\nNot just a benign, hey, I added a body element for you... (to your truncated and mixed up mess ;=))\n\nWithout checking deeply, it seems tidy's output is ok, given the messy input... Where is the issue?\n\nMaybe you could add one more panel - Expected output! ... thanks...\n. @zanona ok, `<br />` is not allowed in html, and `<br>` is not allowed in xhtml... have I got that right?\n\nAgain, what output do you expect?\n\n```\nI Expect: fill this in\n```\n. @zanona, ok, I think I understand you would like to see the html `errors` clearly stated...\n\n> I believe the current output is pro-actively correct already, \n> so I don't expect anything on the output generation to change.\n\nTidy has two outputs, which can be re-directed to files, so when I ask for `expected` output it is either, or both, these outputs... So, you accept the html output, but...\n\n> I expect \"..., but alerting of an error in the markup.\"\n\nSo I think that means you would like the message output something like - a la validator - \n\n```\nError: The character encoding was not declared. Proceeding using windows-1252.\nError: Self-closing syntax (/>) used on a non-void HTML element. Ignoring the slash and treating as a start tag.\nFrom line 3, column 1; to line 3, column 17\no</title>?<div class=bar />?<scri\nError: Self-closing syntax (/>) used on a non-void HTML element. Ignoring the slash and treating as a start tag.\nFrom line 4, column 1; to line 4, column 21\nss=bar />?<script src=baz.js />?\nError: End of file seen when expecting text or an end tag.\nAt line 4, column 22\n=baz.js />?\nError: Unclosed element script.\nFrom line 4, column 1; to line 4, column 21\nss=bar />?<script src=baz.js />?\nError: Unclosed element div.\nFrom line 3, column 1; to line 3, column 17\no</title>?<div class=bar />?<scri\nError: End of file seen and there were open elements.\nAt line 4, column 22\n=baz.js />?\n```\n\nWow, such an amount of noise...\n\nI am sure tidy could do **some** of that... but instead it chooses to try to **fix** the document... very quietly... \n\nSo, are we now on the same page ;=))\n\nMaybe I agree, tidy should be more aggressive with html errors, but maybe not... not decided...\n\nBut now, perhaps this `Feature Request` is clear, others would care to comment...\n\nAnd thanks for the clarification... I just hope I got the idea right.\n. Since there has been no further comments, in nearly a year, and it remains unclear exactly what is required of tidy, closing this issue for now....\n\nPlease feel free to re-open, or file a new issue... thanks...\n. @john-black-3k, thanks for the feature request... sorry for the brief delay, but was hoping we would get some other comments first... oh, well...\n\nHmmmm, a `sort-elements` option... as you point out not much use for html, but **may** have a use case for XML, but even then...\n\nOne small point, at present the tidy `integer` type does not support `-1`, but that means either adjusting the above sorting operations, or a small `libtidy` change in the integer parsing... something I have thought about before...\n\nAnd this is just to **compare** two files? With some `diff` program??\n\nIn a way this seems outside what console tidy [tidy.c](https://github.com/htacg/tidy-html5/blob/master/console/tidy.c) is all about... that is tidy up a html file, and pretty print the results...\n\nBut it would be a breeze to write say a `tidy-diff.cxx`. It could use **`libtidy`** to load the two files into its DOM like tree of nodes, and then you get each node from file1, and really compare it to every node in file2, flag same/different/differences/etc, maybe adding the results in say a vector... or whatever... not a big task...\n\nIf you, or anyone else would like to write such a `tidy-diff` utility, then we would certainly help with technical support, even new library API functions if you need something not already available...\n\nBut without further explanation... maybe I misuderstood something... I can not see this option added to tidy directly... but await further comments... thanks...\n. @gagern you raise a very valid point, one I have had for a long time...\n\nWhy does tidy use an opaque structure? It does stop libtidy \nusers messing with that structure... But is that needed?\n\nAnd then you have to also ask about the TY(function)( params ) \nmacro. Why 'hide' these functions? Some are static, but some \nare public...\n\nSo I guess part of it is being able to publish a very \nflexible API, and keep it documented, without the need \nto publish the meaning of every tidy doc member... every \nnon-static internal C function...\n\nI know tidy quite well, but that documentation would be the \ntip of an iceberg regarding some very neat C technologies \nin the code, which I hope one day **are** published...\n\nNow, I am not in any way defending that as perhaps being a \n \"... pretty strange approach ...\"? It has been well done, \nand reasonably documented... would always like to see more \nhere, but where are the writers when you need them?\n\nAs you point out, a few minor changes could expose everything, \nbut do we want that? At this time? To what gain?\n\nAnd what additional doxygen needs to be added, to where, etc, \nsuch that that an extended API change can be `published`... \nand maybe install some additional 'tidy' headers, to expose \nmore... add page to API documentation...\n\nAnd there is the question of backward compatibility, if \nthat is needed, or desired... Is this 5.6?\n\nBut I suppose, at present a documented API that gives you, \nto varying degrees, access to the structure, through API functions \nis what tidy presently does, in a C++ way, and that works too...\n\nAnyway, @gagern this is my 2 bits on this ;=)) a good question!\n. Since @balthisar has planned to **tackle messaging in 5.5** moving the milestone out to `next` **5.5**... thanks...\n. @gagern in a quick look I agree 100% with this **fix**...\n\nAll agreed?\n. @gagern oops nearly missed this good patch... thanks...\n. @gagern sorry, but do not understand? \n\nYou say \"As discussed in #409\"? What was discussed? Anything agreed? Did I miss something?\n\nAs to the PR, so far all I can see is a lot of find and replace... ok, to what gain exactly? \n\nHow will this improve tidy? What **bug** does it address? What is the desired `features` added? What do you find difficult to read in the code, where this will make it easier?, etc, etc, etc... ?\n\nAnd just as an aside, please target such a large proposed code change in a branch, maybe `issue-409`, or something... but **not** the `master` branch... this has to be tested, agreed, discussed, understood, ... before committing it to the `master` branch...\n\nBut it looks like you have an **idea**, but can not yet quite see what it is ;=)) thanks, I think...\n. @gagern, have downloaded, built, and done some testing of the result... which I versioned `5.3.1-exposed` :=))\n\nWhile this PR has the diffs, a total diff I am reviewing is here - http:/geoffair.org/tmp/gagern.diff\n\nAnd then paused a few weeks, waiting for comments from others... ok, none at this point... just you and me...\n\nTo be right up front, I do not like the merge yet! There are some **good** points, but to me it fails to reach the `50%` plus swaying point... really sorry...\n\nJust to make sure we are on the same page, what I see is essentially what you have done is made a `TidyDoc doc` usable in `external` and `internal` code! That seems to defeat some of the idea of a tidy defined **opaque** type, but ok, I understand you are offering an alternative, that also works somewhat simularly? \n\nAnd done the same with some other pointers, like the `node *`, attr *... and I think added another... I do understand the different approaches to the same idea...\n\nJust to put it in, hopefully, simple terms, currently an external app is passed a `TidyDoc tdoc` pointer. The fact that it is `tidy defined` opaque pointer means it can not address the structure, and equally important can **not** be use to call an internal library functions, not in the API, without most compilers complaining... aim achieved in current code...\n\nWhen that `opaque` pointer is passed into the library it is **converted** to a `TidyDcoImp *`, which all/most internal libery services/functions use... Same with several other pointers...\n\nAfter a fundimental header definition change, this leads to a mostly cut-and-paste, almost cosmetic, difference, like -\n\n```\n-void TY_(AccessibilityChecks)( TidyDocImpl* doc );\n+void TY_(AccessibilityChecks)( TidyDoc doc );\n```\n\nSo if we **agree** that is the discussion here, then to address your 6 points...\n1. Yes, if your calculations are correct we could save a few hundred instructions, which are just `stack a = b;`... But I do not think it really effects readbility to an exterienced programmer, or code maintainability overall... No.\n2. It could help new programmers, in that it is a tiny tidy code learning step. But once known, understood, is no problem... Yes.\n3. If a coder happened to pass in an inappropriate pointer into the API, they should suffer the consequence of that error, which will not always be flagged by every compiler/linker, **what ever we do**, so can not see how this improves that... No.\n4. I too know of no bug this fixes... sort of change with what gained? but open...\n5. How other projects do this is their business... the tidy creators constructed their own maco... why are we now choosing to abandon this? for simplicity? If it is wrong fix it, otherwise leave it alone... open\n6. ... easier to promote an internal service to the API? Yes, since with this change all internal library functions become very close to public, just not yet in `tidy.h`, ie not published... open...\n\nThen you point us to the less trivial, fundimental changes in the important `definitions`\n1. `tidyplatform.h` yes, you changed the macro to a simpler macro, and changed the comment more to your choice!\n2. `lexer.h` and `tidy-int.h` yes, we understand, one change means more...\n3. `forward.h` as above, consequential to the first change...\n4. `tidy-int.h` more consequence to the above choice...\n\nSo the choice remains - should we stick with the current implemetation, or switch a few important definitions, and then accept 2. 3. 4.? A very difficult yes/no choice, at least for me... open...\n\nSo, in summary, while I agree there is some reduced verbosity and noise on pointers, I do not yet see a real gain at this time, and again wonder why we should change something that was put there by the tidy founders, that works... \n\nSo to the central question here - Make internal and external types equivalent - I would suggest **no**!\n\nBut will certainly wait for other comments... thanks for the effort, and all the work done here... that is very great! Shows a fundimental understanding of tidy code... \n\nI hope you will apply the same enthusiam and efforts to fixing some other tidy **issues**...\n. @gagern I do not think there would be any objection to a **new** opaque type being added, using the style currently in use...\n\nAnd just a small negative to the suggested change here, when using the MSVC **Visual** C/C++ IDE, this opacity is very clear in the IDE local variable display, when debugging...\n\nPresently the the tidy `opaque` pointer and the `impl` pointer show up **visually** different, making the situation very clean -\n\n```\n- tdoc  0x00000000004e64f0 {_opaque=0x00000000 }    const _TidyDoc *\n    _opaque 0x00000000  int\n- impl  0x00000000004e64f0 {root={...} lexer=0x0000000000000000 config={...} ...}   _TidyDocImpl *\n +  root    {parent=0x0000000000000000 prev=0x0000000000000000 next=0x0000000000000000 ...} _Node\n +  lexer   0x0000000000000000 {lines=??? columns=??? waswhite=??? ...} _Lexer *\n + ... etc\n```\n\nThat seems good, and very clear...\n\nIn the proposed `5.3.1-exposed` version there are not two pointers, they are the same, so the IDE will show the `doc` in full,  all the time - in and outside the library code - like -\n\n```\n- doc   0x00000000004e64f0 {root={...} lexer=0x0000000000000000 config={...} ...}   _TidyDocImpl *\n +  root    {parent=0x0000000000000000 prev=0x0000000000000000 next=0x0000000000000000 ...} _Node\n +  lexer   0x0000000000000000 {lines=??? columns=??? waswhite=??? ...} _Lexer *\n + ... etc\n```\n\nSo there is is a loss of a visual clue to the `opacity` of the first, versus the real `impl` structure pointer... making it **look** like you have access to say `doc->config.value[0].v`... of course the compiler will still belch an error if outside the library...\n\nSo of course the compile guards are still there. If you try to write code like this outside the library, the IDE/compiler will quickly stop you... but it does now **visually** imply you could...\n\nMaybe not so important to coders that do not have or use a **visual** IDE to write code... but MSVC coders get to reply on it...\n\nAnyway, I think you have correctly assessed the situation - without further support, reasons, ... - this merge will not be made, and I hope we can move on... thanks...\n. In the absence of further supporting comments, am closing this for the reasons given... but thanks for the work involved... it certainly shows another way to handle `transparent` types...\n. @zanona thanks for the issue...\n\nSorry for the delay... I thought I had replied, but it was just in my imagination ;=))\n\nFirst, yes tidy could probably warn about this **silent** fix. But it does quite a lot of `quiet` fixes. Should we warn about these too?\n\nAnd it follows, should tidy follow the validator type path... make a big noise about everything... \n\nOr be a relatively quiet, mainly fixing tool... just get on with the job of tidying and pretty printing... leave validation to nu?\n\nHmmm, will have to think about that? Sometimes I think tidy is already too noisy about somethings...\n\nBut what do other think? Add one, or more, warnings? Remember, this also effects the exit value of tidy.\n\nLook forward to more comments on this... thanks...\n. @zanona, thanks for the kind words... tidy does try to be a good `linter` ;=))\n\nYes I can see a **new** option for this. I think `--verbose` is out, because we already shortcut `-v` to `--version`, but there has to be other choices... maybe `--noisy yes`, `-n`... Zute, there is already a `-n` for `TidyNumEntities`... but I am sure we can find a suitable option name...\n\nLast time I added an option, I wrote an [OPTIONS.md](https://github.com/htacg/tidy-html5/blob/master/README/OPTIONS.md). It is quite straight forward even... once the name is selected...\n\nSo if you, or others want to create a fork, and present a PR, or a patch, that would be most appreciated... thanks...\n. @zanona picking an option name was a little difficult...\n\nFirst I extracted, and sorted the tidy.c command line parsing, and got, just as a reminder of the letters already used, the following list -\n\n```\n--option_name+value   - tidyOptParseValue(tdoc, argv[1]+2, argv[2]) ) more\n-access               - tidyOptSetInt( tdoc, TidyAccessibilityCheckLevel, acclvl );\n-ashtml               - tidyOptSetBool( tdoc, TidyHtmlOut, yes );\n-asxml -asxhtml       - tidyOptSetBool( tdoc, TidyXhtmlOut, yes );\n-bare -b              - tidyOptSetBool( tdoc, TidyMakeBare, yes );\n-clean -c             - tidyOptSetBool( tdoc, TidyMakeClean, yes );\n-config               - tidyLoadConfig( tdoc, argv[2] ); more\n-errors -e            - tidyOptSetBool( tdoc, TidyShowMarkup, no );\n-file --file -f       - tidySetErrorFile( tdoc, errfil );\n-gdoc -g              - tidyOptSetBool( tdoc, TidyGDocClean, yes );\n-help-config          - optionhelp( tdoc ); and exit(0)\n-help-option          - optionDescribe( tdoc, argv[2] ); and exit(0)\n-help --help -h -?    - help( prog ); and exit(0)\n-indent -i            - tidyOptSetInt( tdoc, TidyIndentContent, TidyAutoState ); plus\n-language -lang       - tidySetLanguage( argv[2] ) ) more\n-modify -m -change(OB) -update(OB) - tidyOptSetBool( tdoc, TidyWriteBack, yes );\n-numeric -n           - tidyOptSetBool( tdoc, TidyNumEntities, yes );\n-omit                 - tidyOptSetBool( tdoc, TidyOmitOptionalTags, yes );\n-output --output-file -o - tidyOptSetValue( tdoc, TidyOutFile, argv[2] );\n-quiet -q             - tidyOptSetBool( tdoc, TidyQuiet, yes );\n-raw -ascii -latin0 -latin1 -utf8 -iso2022 -utf16le -utf16be -utf16 -shiftjis -big5 -mac -win1252 -ibm858 - tidySetCharEncoding( tdoc, arg );\n-show-config          - optionvalues( tdoc ); and exit(0)\n-upper -u             - tidyOptSetBool( tdoc, TidyUpperCaseTags, yes );\n-version --version -v - version(); and exit(0)\n-wrap --wrap -w       - tidyOptSetInt( tdoc, TidyWrapLen, wraplen );\n-xml-config           - XMLoptionhelp( tdoc ); and exit(0)\n-xml-error-strings    - xml_error_strings( tdoc ); and exit(0)\n-xml-help             - xml_help( ); and exit (0)\n-xml-options-strings  - xml_options_strings( tdoc ); and exit(0)\n-xml-strings          - xml_strings( ); and exit(0)\n-xml                  - tidyOptSetBool( tdoc, TidyXmlTags, yes );\n```\n\nThen I likewise alpha sorted the internal **`libtidy`** option table - it is quite large -\n\n```\n  { TidyAccessibilityCheckLevel, DG, \"accessibility-check\",         \n  { TidyXmlDecl,                 MU, \"add-xml-decl\",                \n  { TidyXmlSpace,                MU, \"add-xml-space\",               \n  { TidyAltText,                 MU, \"alt-text\",                    \n  { TidyAnchorAsName,            MU, \"anchor-as-name\",              \n  { TidyAsciiChars,              CE, \"ascii-chars\",                 \n  { TidyXmlPIs,                  MU, \"assume-xml-procins\",          \n  { TidyMakeBare,                MU, \"bare\",                        \n  { TidyBreakBeforeBR,           PP, \"break-before-br\",             \n  { TidyCharEncoding,            CE, \"char-encoding\",               \n  { TidyMakeClean,               MU, \"clean\",                       \n  { TidyCoerceEndTags,           MU, \"coerce-endtags\",              \n  { TidyCSSPrefix,               MU, \"css-prefix\",                  \n  { TidyDecorateInferredUL,      MU, \"decorate-inferred-ul\",        \n  { TidyDoctypeMode,             MU, \"doctype-mode\",                \n  { TidyDoctype,                 MU, \"doctype\",                     \n  { TidyDropEmptyElems,          MU, \"drop-empty-elements\",         \n  { TidyDropEmptyParas,          MU, \"drop-empty-paras\",            \n  { TidyDropFontTags,            MU, \"drop-font-tags\",              \n  { TidyDropPropAttrs,           MU, \"drop-proprietary-attributes\", \n  { TidyEncloseBlockText,        MU, \"enclose-block-text\",          \n  { TidyEncloseBodyText,         MU, \"enclose-text\",                \n  { TidyErrFile,                 MS, \"error-file\",                  \n  { TidyEscapeCdata,             MU, \"escape-cdata\",                \n  { TidyEscapeScripts,           PP, \"escape-scripts\",              \n  { TidyFixBackslash,            MU, \"fix-backslash\",               \n  { TidyFixComments,             MU, \"fix-bad-comments\",            \n  { TidyFixUri,                  MU, \"fix-uri\",                     \n  { TidyForceOutput,             MS, \"force-output\",                \n  { TidyGDocClean,               MU, \"gdoc\",                        \n  { TidyEmacsFile,               MS, \"gnu-emacs-file\",              \n  { TidyEmacs,                   MS, \"gnu-emacs\",                   \n  { TidyHideComments,            MU, \"hide-comments\",               \n  { TidyHideEndTags,             MU, \"hide-endtags\",                \n  { TidyIndentAttributes,        PP, \"indent-attributes\",           \n  { TidyIndentCdata,             MU, \"indent-cdata\",                \n  { TidyIndentSpaces,            PP, \"indent-spaces\",               \n  { TidyPPrintTabs,              PP, \"indent-with-tabs\",            \n  { TidyIndentContent,           PP, \"indent\",                      \n  { TidyInCharEncoding,          CE, \"input-encoding\",              \n  { TidyXmlTags,                 MU, \"input-xml\",                   \n  { TidyJoinClasses,             MU, \"join-classes\",                \n  { TidyJoinStyles,              MU, \"join-styles\",                 \n  { TidyKeepFileTimes,           MS, \"keep-time\",                   \n  { TidyLanguage,                CE, \"language\",                    \n  { TidyLiteralAttribs,          MU, \"literal-attributes\",          \n  { TidyLogicalEmphasis,         MU, \"logical-emphasis\",            \n  { TidyLowerLiterals,           MU, \"lower-literals\",              \n  { TidyShowMarkup,              PP, \"markup\",                      \n  { TidyMergeDivs,               MU, \"merge-divs\",                  \n  { TidyMergeEmphasis,           MU, \"merge-emphasis\",              \n  { TidyMergeSpans,              MU, \"merge-spans\",                 \n  { TidyNCR,                     MU, \"ncr\",                         \n  { TidyBlockTags,               MU, \"new-blocklevel-tags\",         \n  { TidyEmptyTags,               MU, \"new-empty-tags\",              \n  { TidyInlineTags,              MU, \"new-inline-tags\",             \n  { TidyPreTags,                 MU, \"new-pre-tags\",                \n  { TidyNewline,                 CE, \"newline\",                     \n  { TidyNumEntities,             MU, \"numeric-entities\",            \n  { TidyOmitOptionalTags,        MU, \"omit-optional-tags\",          \n  { TidyOutputBOM,               CE, \"output-bom\",                  \n  { TidyOutCharEncoding,         CE, \"output-encoding\",             \n  { TidyOutFile,                 MS, \"output-file\",                 \n  { TidyHtmlOut,                 MU, \"output-html\",                 \n  { TidyXhtmlOut,                MU, \"output-xhtml\",                \n  { TidyXmlOut,                  MU, \"output-xml\",                  \n  { TidyPreserveEntities,        MU, \"preserve-entities\",           \n  { TidyPunctWrap,               PP, \"punctuation-wrap\",            \n  { TidyQuiet,                   MS, \"quiet\",                       \n  { TidyQuoteAmpersand,          MU, \"quote-ampersand\",             \n  { TidyQuoteMarks,              MU, \"quote-marks\",                 \n  { TidyQuoteNbsp,               MU, \"quote-nbsp\",                  \n  { TidyDuplicateAttrs,          MU, \"repeated-attributes\",         \n  { TidyReplaceColor,            MU, \"replace-color\",               \n  { TidyBodyOnly,                MU, \"show-body-only\",              \n  { TidyShowErrors,              DG, \"show-errors\",                 \n  { TidyShowInfo,                DG, \"show-info\",                   \n  { TidyShowWarnings,            DG, \"show-warnings\",               \n  { TidySkipNested,              MU, \"skip-nested\",                 \n  { TidySlideStyle,              MS, \"slide-style\",                 \n  { TidySortAttributes,          PP, \"sort-attributes\",             \n  { TidyBurstSlides,             PP, \"split\",                       \n  { TidyStrictTagsAttr,          MU, \"strict-tags-attributes\",      \n  { TidyTabSize,                 PP, \"tab-size\",                    \n  { TidyMark,                    MS, \"tidy-mark\",                   \n  { TidyUnknownOption,           MS, \"unknown!\",                    \n  { TidyUpperCaseAttrs,          MU, \"uppercase-attributes\",        \n  { TidyUpperCaseTags,           MU, \"uppercase-tags\",              \n  { TidyVertSpace,               PP, \"vertical-space\",              \n  { TidyWord2000,                MU, \"word-2000\",                   \n  { TidyWrapAsp,                 PP, \"wrap-asp\",                    \n  { TidyWrapAttVals,             PP, \"wrap-attributes\",             \n  { TidyWrapJste,                PP, \"wrap-jste\",                   \n  { TidyWrapPhp,                 PP, \"wrap-php\",                    \n  { TidyWrapScriptlets,          PP, \"wrap-script-literals\",        \n  { TidyWrapSection,             PP, \"wrap-sections\",               \n  { TidyWrapLen,                 PP, \"wrap\",                        \n  { TidyWriteBack,               MS, \"write-back\",                  \n```\n\nAfter some thought I came up with `--strict`, or maybe `--strict-warnings` if you like typing. And that would lead to say a **TidyStrictWarnings** define, which seems to `fit` ok in the above internal table...\n\nAnd using this then we could also have a `-s` shortcut, and/or a `-strict` shortcuts to turn it on...\n\nAnyway, just a suggestion. \n\nThe other thing to decide is which currently `quiet` tidy **fixes** should be a `warning`? Only one has been identified here so far...\n\nMe, going with the idea of `strict`, I would say **ALL**. Anytime tidy adds to the users input, modifies the file text, of course excluding case, spacing, ... it should `educationally` warn about what it had to do to get valid html... But maybe that is **too much noise**... \n\nOr we could start with this one, and add as the case comes up... comments?\n\nAnd who is going to implement this **new** feature in code?\n. @zanona some more good ideas... thanks...\n\n#### But who is stepping up to choose and implement?\n. @zanona absolutely, we wait, until after the endless, repetitive, drum roll... very funny LOL...\n\nI like the feature, as yet not fully spec'ed, and it is on my TODO: list, but a little bit below the `tidy` top...\n\nIf we have some other takers, like **you**, who brought this up, or **others**, then that might be quicker...\n\nI hope our `drummer` does not get fed up by the continued silence! But why should [s]he? It is a repeat forever gif... thanks for the fun image...\n\n**So, the question remains, who is there to do this now?**\n. As we are about to `release` **5.4**, and no one has stepped up to do this, can only move the milestone out to `next` **5.5**...\n\nMaybe it will happen in the **next**... thanks...\n. @balthisar the PR #612 covering this is awesome, great... thanks...\n\nBut you know me. It breaks some 24 regression tests. Thankfully **only** in the message text output - read **no html output seems changed**!\n\nLike my `TidyShowMetaChange/show-meta-change`, should we also guard against changing the message text output, like say a `show-attribute-change`, which would default to `no`, 100% preserving backward compatibility...\n\nOr more generally adding say an option like `--strict, -strict, -s`, defaulting to `no`, as discussed above, but if put `on` this, and **other**, presently silent fixes done by tidy, would become an `Info:` type message...\n\n### So the question is how concerned should we be about changes in the output message text?\n\nI can see cases where this simple message change could break some post processing, and force the user to effect change. I have several perl scripts, that parse and give me additional analysis, that would **bark** on finding a new `line 5 column 1 - Info: message...`, but could be easily fixed...\n\nAt this point I guess I am about `50:50`... still deciding, but not against. As expressed elsewhere I just **wish** this type of change was at the beginning of a new release cycle, giving us time to deal with **feedback**, if any... and not just be dumped in a new release in Nov... maybe I am being over cautious...\n\nAnd since you accidentally? used the `issue_412` branch as the base for PR #613, branch `issue_434`, which is also a great addition, it presently can not be accepted until we decide, resolve, discuss this... but this could be uncoupled... which I would prefer, since they are **not** really related, except both concern attributes...\n\nI am not sure I understood your question about `Unquoted attribute value syntax`? As you further point out tidy has been double-quoting **forever**, so does not seem a problem. It could be an error if you add the `quote-attributes` option, and the user chose `none`... my [in_412-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_412-1.html) passes nu... but maybe I missed your point?\n. @balthisar thanks for the reply... and agree **mostly**...\n\nOk, I'm for it, at least 51:49 ;=))\n\nAnd since I also **like** the new option `TidyPriorityAttributes/priority-attributes`, #434, PR #613, maybe we just merge that, since it includes this... or separate? What do you think?\n. @balthisar this is **not** about this issue, but some of the change seems to have occured with PR #612, but may have been others...\n\nA certain number of source file had their permission attribute changed, from 0664, rw-rw-r--, to 0755, -rwxrwxr-x... that is the execute bit has been added...\n\nI changed tidy.c back to 0664, but then thought there may be some reason for this...\n\nI would change all the others back, if there is no problem with this... is the MSVC10 editor, or some other editor accidently doing this?\n\nIt is not particularly a problem, except my color coded linux command prompt dir listing shows them as a different color, and I can run them, rather than getting `Permission denied`...\n. @balthisar no problem... have now reverted all perm changes found to 0664, -rw-rw-r--...\n\nI have not tried MSVC 10 in a while, but do not seem to have the same problem with MSVC15, or copying, in Windows... strange, since windows does not have the same file attribute idea...\n\nAnyway, now fixed until next time, if ever... thanks...\n. @xktproject thanks for the report, but I not think I understand... a `<style>` tag should be in the `<head>`, not the `<body>`... how come you want it to remain in `<body>`?\n\nBut could you give a small sample html case, the output you get, what config, tidy version, and exactly what you expect the output to be... makes for easy testing, and understanding,,, thanks...\n. @xktproject thanks for the more information, but sorry, now I am getting even more confused!\n\nI constructed a simple html sample -\n\n``` html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>Issue #413</title>\n</head>\n<body>\n<style>\np.one { color: red; }\np.two { color: blue; }\n\n\nRed para 1\n\n\nBlue para 2\n\n\n\n```\n\nThis will pass the validator test, except it wants an attribute added to the `` tag...\n\nUsing tidy on this file I get -\n\n``` html\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\n\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.3.0\">\n<meta charset=\"utf-8\">\n<title>Issue #413</title>\n</head>\n<body>\n<style>\np.one { color: red; }\np.two { color: blue; }\n</style>\n<p class=\"one\">Red para 1</p>\n<p class=\"two\">Blue para 2</p>\n</body>\n</html>\n```\n\nSo tidy has done nothing about moving the `<style>` tag... it seems to leave it in the `<body>`...\n\nJust to make sure console tidy is not acting any different to tidy tidyParseBuffer, but it uses the same parsing services, added a small tidy-buf-test to https://github.com/geoffmcl/tidy-test and output the tidy node tree. But do not see the `<script>` tag moved...\n\nIts output when loading the above file -\n\n```\nF:\\Projects\\tidy-test\\build>Release\\tidy-buf-test F:\\Projects\\tidy-test\\test\\input5\\in_413.html\ntidy-buf-test: Loading file 'F:\\Projects\\tidy-test\\test\\input5\\in_413.html' into a tidy buffer...\ntidy-buf-test: Loaded 237 characters into the tidy buffer to pass to 'tidyParseBuffer'...\ntidy-buf-test: Showing nodes of 'F:\\Projects\\tidy-test\\test\\input5\\in_413.html'\ntidy-buf-test: Got 13 nodes in tidy tree...\nNode:1: DOCTYPE (19) <!DOCTYPE html>^M^J^M^J\nNode:2: html\n  Node:3: head\n    Node:4: meta charset=\"utf-8\"\n    Node:5: title\n      Node:6: Text (12) Issue #413^M^J\n  Node:7: body\n    Node:8: style\n      Node:9: Text (49) p.one { color: red; }^M^Jp.two { color: blue; }^M^J^M^J\n    Node:10: p class=\"one\"\n      Node:11: Text (12) Red para 1^M^J\n    Node:12: p class=\"two\"\n      Node:13: Text (13) Blue para 2^M^J\ntidy-buf-test: Done 13 nodes from tidy tree...\n```\n\nSo at this moment, can not repeat this problem... maybe you can re-test, or explain more... what code are you using, etc... thanks...\n. @xktproject thanks for the further examples... I have not found the `error` you suggested in your second comment yet, but to deal first with the `<style>` being moved...\n\nFirst, I do not think it matters whether you use `tidyParseString` in place of `tidyParseBuffer`. Internally, whether the input is a file, a string, or a buffer, **all** go through the **same** internal tidy parsing services to build a node tree... should be no difference...\n\nWhen I pass your first html fragment to tidy I note it emits 4 warnings, among others -\n\n```\nline 9 column 9 - Warning: missing </span> before <style>\nline 10 column 11 - Warning: <style> isn't allowed in <td> elements\nline 8 column 5 - Info: <td> previously mentioned\nline 15 column 803 - Warning: discarding unexpected </span>\n```\n\nSo tidy is parsing the sequence `<td><span><style>`. On reaching the `<style>` it has to close the open `<span>`. This will create an empty span, which it will later remove, but gives us the 4th warning when it reaches the eventual later `</span>`, now with no open span...\n\nBut the 2nd tidy warning is **very** clear. `<style>` is **not** allowed in a `<td>` element. And far from discarding the `<style>` block, it simply moved it into the implied `<head>`.\n\nNow, I am sure this **was** true in legacy `html4--` documents, but maybe the `html5` spec is more liberal in this regard. If you, or others, could find some W3C references that -\n1. shows that a `<span>` can be around a block element like `<style>`, and\n2. shows that a `<td>` element can now contain a `<style>` block...\n\nThen then one or both could be marked as a html5 parsing **bug**, and we can attempt a `fix`.\n\nBut looking at your code fragments I can not quite work out the overall purpose. If you wanted to get the text html output, why are you just getting the body node? Why not get the root to get all the text? But as I say, do not really know the purpose? Simply, what are you trying to do?\n\nI have added some of your code to the `tidy-buf-test` in the `test-tidy` repo mentioned earlier, so I could study this case more. Will push it shortly. It could be used to get all the **text** in a document, without html markup, if that is part of the purpose...\n\nConcerning your second, it is hard to spot the error. Could you point it out exactly, maybe reduce the html input to a minimal case that shows the error, and maybe it can be a new issue... thanks...\n\nBut meantime, look forward to your further comments in this `<style>` issue... thanks...\n. Given the fact that we are about to `release` **5.4**, and there has been no further comments in some 9 months, **and** it remains unclear what the actual problem with libtidy is, closing this...\n\nPlease feel free to re-open, or file a new issue... thanks...\n. @AdamMajer me I would just fired `Bob`... wait, my middle name is `Robert`! ;=))\n\nAnd then really wonder why we, htacg, gave [s]he commit access, our full confidence, in the first place... very sad...\n\nYes, security **is** important... absolutely agreed... and what we do about it is a group decision... in a group situation, like tidy is, then there can not just be just **one** gpg signature, or even multiple gpg sigs... \n\nBut maybe adding the **hashes** to the binaries is a good idea... lots of other sites have them... I just hope this can be a  semi-automated step for a secured login maintainers... even in drag-and-drop...\n\nBut am I prepared to add my gpg signature to every commit, and every time I create a release tag... I guess the answer is **no**... at least until someone shows me a RL case, not just what is possible in the imagination, fiction... so have carefully read your **horror story**... good mystery thriller material...\n\nThe facts are - never do a merge without checking a few things - even from your most trusted compatriot - even just for typos - that is stupid, and not done by responsibe maintainers, no matter how sleepy you are, from giving your free time to...\n\nAs I say, maybe adding hashes to binary releases, signed and unsigned, is maybe a good thing... but the others ideas expressed here await further verification, explanation, expansion, discussion...\n\nBut just my 2 bits ;=))\n. As we are about to `release` **5.4**, I will certainly consider using `git tag -s 5.4.0`, especially if this adds some `security`... thanks...\n\nWill also consider adding hashes to the published binaries, if there is an easy way to do this...\n\nMeantime closing this as question asked and answered... Please feel free to re-open, or file a new issue... thanks...\n. @pengyu thank you for the issue... it took some time to do the steps in a debug session... sometimes you can speed that up by just supplying a minimal example... but ok, downloaded the indicated file and constructed a small input5\\in_415-1.xml example...\n\nIn tracing the code, I find that if the node is CDATA then there will be no entity translations...\n\n```\n    /* comment characters are passed raw */\n    if ( mode & (COMMENT | CDATA) )\n    {\n        AddChar( pprint, c );\n        return;\n    }\n```\n\nAnd there seems **no** option to override this at present... I thought `--escape-cdata yes` might help, but it converts the `&` to `&amp;`, and other things, so was of **no** help...\n\nIt seems to do the desired translation to UTF-8 if you remove the `<![CDATA[ ... ]]>`...\n\nInput: \n\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n<authors>\nBilz&#x00E3;  Ara&#x00FA; jo;  Liang Zhao\n</authors>\n<org>\n<![CDATA[Bilz&#x00E3; Ara&#x00FA; jo; Liang Zhao]]>\n</org>\n</root>\n```\n\nOutput:\n\n``` xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n<authors>Bilz\u00e3 Ara\u00fa jo; Liang Zhao</authors>\n<org>\n<![CDATA[Bilz&#x00E3; Ara&#x00FA; jo; Liang Zhao]]>\n</org>\n</root>\n```\n\nSo if there is a big use case, perhaps there could be a **new** option to change this CDATA output behavior? Maybe `--encode-cdata yes`, def `no`, ... or something...\n\nAwait your further comments... thanks...\n. Since we are about to `release` **5.4**, and it remains unclear what is required of tidy, and no further feedback, for abt 8 months, closing this...\n\nPlease feel free to re-open, or file a new issue... thanks...\n. @AdamMajer, oops, maybe I miss your question here, but thanks for bring this up ... maybe the info has not been published enough...\n\nWe have moved the `Doxygen` document generation to its own repo [html-tidy.org.api](https://github.com/htacg/html-tidy.org.api)... I have not personally generated the API site documentation in a while, but if you have some problems with it then we would certainly appreciate an [issue](https://github.com/htacg/html-tidy.org.api/issues) filed... We need all the help we can get to improve this API document generation... much appreciated... patch or PR welcome... thanks...\n\nAt the moment, the current **Doxygen** generation exists on [API 5.2.0](http://api.html-tidy.org/tidy/tidylib_api_5.2.0/). \n\nMe, I would like to also publish the latest development, like `5.3.1, 2, 3, ... 100, ... NNNN`, without really polluting the above release site... but somewhere I would always like the **latest** available API docs, for pre-view, comment, suggestions, help, etc... but seek a way to implement this... Maybe a special `version`, on that page, say **Development**... only ever 1, and after each version update, is re-gen'ed...\n\nThis is the sort of thing that could be done by say a Travis CI, ..., to automate its update on each version.txt change pushed...\n\nBut at this moment, we have published the latest release 5.2.0 `Doxygen` API docs, and offer a way anybody can contribute to the doc gen, improvements, change, fixes, etc... \n\nSo yes, old tidy, and current tidy include API doc generation... it certainly comes in **handy** as you say... I use it regularly when addressing **`libtidy`** API issues, and even though I think I `know` the API, sometimes the current docs make me jump through hoops to find what I want, and often when I find it, it does **not** tell me enough...\n\nI sort of wish we had some wiki pages with more programmer information, or some FAQ pages, that could be searched... I would certainly try to contribute to that, with maybe some **HOW TO** ideas, test, use **`libtidy`**, etc... \n\nBut at the moment, these are only dreams I have... really if you can help in any way improve **`libtidy`** documentation, then we are all ears... \n\nAfter you check out the separate API doc gen repo, I hope this solves this issue... thanks...\n. @kmaradona thanks for the report...\n\nCan you add a minimal sample html, tidy version, config used, output seen, and output expected... thanks...\n. @kmaradona ok, an upgrade has fixed the first problem - **great**!\n\nAnd I am sorry, I do not understand the new issue?\n\nHow did you add this `ignore_match`? Does not look like a tidy option...\n\nAgain, can you add a minimal sample html/php/..., app used, tidy version, config used, output seen, and output expected... thanks...\n. @kmaradona oops, your upgrade **FAILED** `badly` ;=((\n\nThat `2009` version is exactly that, year 2009... old, dead, out-of-date, etc...\n\nCommencing with release 5.0.0 in 2015, we have had several releases since then, the last is `5.2.0`, Apr 2016... Where did you get your upgrade from?\n\nWe publish binaries here - http://binaries.html-tidy.org/ - but there are other ways to upgrade and install modern tidy...\n\nOnly when you are using a current version can we hope to address any problems... thanks...\n. @bdesham thanks for this PR... in a quick review it looks **great**... I will certainly merge this in a day or so, unless there are any objections from others... and/or additions...\n\nWhile we see `developer.mozilla.org` as an important informational source, we would prefer W3C references, and I have started to search for those... please advise any pointers you may have...\n\nAs stated, this looks good, and will probably merge directly to `master`... it certainly does not seem to pose any stability threat... but will pause a bit... thanks again...\n. @bdesham, thanks for the great W3C link list...\n\nMaybe I found one more?\n- [audio](http://www.w3.org/TR/2014/REC-html5-20141028/embedded-content-0.html#the-audio-element)?\n\nThat is `W3CAttrsFor_AUDIO` in **`libtidy`**. Should this be added? Are there any others? thanks...\n. @bdesham thanks for the quick PR addition, and the [index](http://www.w3.org/TR/2014/REC-html5-20141028/index.html#attributes-1) link...\n\nJust a matter of a day, or so... allow others to comment... thanks...\n. @bdesham yes, sorry for the delay...\n\nAs noted bumped `version.txt` to `5.3.2 2016.06.18` for this change...\n\nThanks...\n. @bdesham  oops, we let the `TidyAttrId` enumeration get out of order with the dictionary table, `attribute_defs[]` - UGH! I should have checked!!!\n\n### A big note to libtidy programmers\n\nThat includes me ;=))\n\nSo that we can easily address an attribute within the `attribute_defs[]` table, in `attrs.c`, using just its `ID`, rather than the usual searching, these **MUST be strictly kept** in the enum `TidyAttrId` order, in `tidyenum.h` - ie 1:1.\n\nIn the beginning this enumeration started life `alphabetically`, but that no longer applies. Then they were sort of added by groups... But that also makes a mess sometimes...\n\nNow all **new** enumerations, and thus additions to the table should **always** just be added next, above the final `N_TIDY_ATTRIBS` entry, which **must** be last, in both the enumeration and table. This should avoid this problem in future...\n\nAnd as a note to self, must check the API documentation to see if there is a clear message about this...\n\nHave pushed a small fix, and bumped version to 5.3.5\n\nThis means we must watch out for versions 5.3.2, 5.3.3, and 5.3.4. These versions have this fault.\n\nAnyway, we are back on track with this 5.3.5... thanks...\n. @bdesham can you look at #441 ... did we miss some cases, or is this different? \n\nThanks...\n. @bdesham ok it seems we missed the `integrity` attribute... #441... hope you can help... thanks...\n. @maxstarkenburg, thanks for the issue...\n\nHmmm, looking at that commit c63cc39, in the meta, that was July 2012. We can do nothing about that old tidy version... It seems you should upgrade the tidy version used by Notepad++.\n\nRunning current tidy, with **default** configuration, does not seem to have this problem, using your above input sample!\n\nOutput:\n\n``` html\nF:\\Projects\\tidy-test\\test>tidy5 input5\\in_419.html\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\n\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.3.0\">\n<title>The page's title</title>\n</head>\n<body>\n<br>\n<svg width=\"40\" height=\"40\" viewbox=\"0 0 9 9\">\n<title>The SVG's title</title>\n<polygon points=\n\"3,0 0.5,0 0,0 0,0.5 0,3 0.5,3 0.5,0.5 3,0.5\"></polygon></svg>\n</body>\n</html>\n\netc...\n```\n\nSo maybe all the problems have been fixed...\n\nMaybe if we can find who built the `Tidy2.dll` plugin, we could quickly update that to use the latest `Tidy` library... I have found https://github.com/bruderstein/NppTidy2? Ah, Ha I have been here before ;=))\n\nI had created a [fork](https://github.com/geoffmcl/NppTidy2), and had updated my Notepad++ installation with a new Tidy2.dll, using tidy verion 4.9.33, circa June 2015, and just trying a `clean`, using the first config, of your sample, and everything  worked fine...\n\nSo in that fork, I pulled the latest 5.3.1 in the tidy-html5 submodule folder, and built a new Tidy2.dll, copied it to the Notepad++/plugins, stop and start NotePad++, and **bingo** I was using 5.3.1... an easy update...\n\nSo the path is there for you to update, if you want to get into building it yourself... I have added a binary to the repo [Tidy2.dll](https://github.com/geoffmcl/NppTidy2/blob/master/dll/Tidy2.dll), if that helps...\n\nPlease advise how I can help more to get your Notepad++ plugin installation updated, and maybe explore where I could publish this `Tidy2.dll` to make it appear in say plugin updates... thanks...\n. @maxstarkenburg glad it all worked ;=))\n\nI have actually removed the single `Tidy2.dll`, and put it in a `Tidy2-5.3.1.zip`, with some other files, particularly the `quickref.html` so you get matching help... The README.md I added should explain more...\n\nThe best way to refer to this 'release' is through this URL - `https://github.com/geoffmcl/NppTidy2/releases/tag/5.3.1` - where the zip is available for download...\n\nThis would be the best link to use if you add anything to StcakOverflow...\n\nI do not know what version of tidy is used at - https:/infohound.net/tidy/ - but if you are in touch with the owner then it should be fairly easy to update the site to use the latest and best...\n. @AdamMajer thank you for the PR... always welcome...\n\nYes, this was a tough decision for our first release in about 7+ years... see #223 and others... you will note the alternative of installing in like `<tidy/tidy.h>` was also considered, and **rejected**, at that time... could be reconsidered for future releases...\n\nSo while there will remains a possible conflict with other `generic` header names, if installed in `/usr/include` or `/usr/local/include`, it seems a benign cmake option... It defaults to `OFF`, and only users with the knowledge, and should know what they are doing, would set it `ON`...\n\nBut after 7+ years I doubt there would be much **current** software out there using those **old** headers... but maybe...\n\nOther major packages, that are likely to have links with libtidy, like say PHP, and hopefully others... already use the re-named headers from using later tidy sources, maybe due to **no** distribution updates, to build their own distribution libraries and/or other binaries... so these are aware...\n\nAll known windows apps that use lib tidy DLL **never** depend on a globally installed Tidy DLL! It does not exist, yet! Most have updated from source, so this is **not** needed in windows... And that is good because the `#warning \"ABC\"` gcc macro used is **not** MSVC compatible... it is an error!\n\nWill leave it for a little time, for others to comment, but looks ok to me, at this time... \n\nIf there is a use case, why not? Comments welcome...\n. @AdamMajer yes, absolutely agree, even after 7+ years, there may be cases where compatible (old) headers may be required...\n\n> I think apache2 tidy mod broke along with others ...\n\nIf you are referring to - http://mod-tidy.sourceforge.net/ - yes, I note src/mod_tidy.c (2006) uses \"buffio.h\". But in the source I built in linux, and windows, had embedded an old tidy source, with the old headers, so does not use any installed tidy-dev headers... and in fact effectively uses tidy in a static like form, ie not using a shared library...\n\nAnd also note that site has not been updated in quite a while, and still points people to our old historic dormant SF site... must add it to my TODO list to try to contact them...\n\nBut, like I say, there could be others, thus support this PR...\n\nAnd yes there are various macros that can be used as a substitute for the gcc #warning \"ABC\"... But in Windows people who build tidy from source would have no need to enable this option... Seldom, probably never would a windows user actually 'install' tidy, at least not to the meaningless Program `Files folders` in tidy's case...\n\nIn development, I do install tidy into a `<some-root>\\3rdParty`, so I can test the `FindTidy.cmake` module correctly finds things, but of course all the `test` sources there already use the modified headers, so would never need these compatibility headers... and if by accident was compiling some old third party package, that still used these headers, prefer the compile error, so it can be fixed... rather than a soft warning message... so what is there is ok...\n\nWill merge this shortly...\n. While not totally happy! with this, do see a certain use case...\n\nAnyway, now merged... thanks @AdamMajer\n\nAnd version bumped to 5.3.6...\n. @AdamMajer thank you for the PR... but it covers separate things... not usually good for a PR...\n\n**shared/static**\n\nWe have been over this topic a few times - see #326, and others - We have provided an option to link the console app with the shared library... Case solved?\n\nI really do not know what is a `niche` case ;=)) but all cases are important for us... we want to run in every distribution imaginable... including my arm7 raspbian rpi machine...\n\nBTW: Over the last few days I participated in the update of the `Tidy2.dll`, used by Notepad++ (NPP), to provide a HTML Tidy functions - ie pretty print a documents - Now, in generating that special DLL (shared) plugin library, using the latest HTML Tidy source, I chose to link `Tidy2.dll` with the static lib tidys. Why? Because then, in the install of NPP I can add a one file plugin, rather that a two file set `Tidy2.dll`, and `tidy.dll`, which in this case required a special WIN32 UNICODE build, so was already not the standard build...\n\nYes, the use of a shared library, ie the install 2 DLLS idea, gains by the fact that a user could update `tidy.dll` to the latest... But does he know how to do that? Where does he get such a DLL from? To install in an app specific location, in this case `C:\\Program Files (x86)\\Notepad++\\plugins`, more or less a `private` location... requires `admin` priviledges! And that would miss the update of `C:\\Program Files (x86)\\Notepad++\\plugins\\doc\\Tidy2\\quickref.html`, update cfg files, ... all of which **is** handled well in unix... I know...\n\nAnd this `tidy.dll` is installed in a `private` place, so can **never** actually be used as a `shared` library... ie never be used by any other processes in the system... that seems a waste, bloat, etc... When you link with a static library, only the modules your app uses are written into your exe, so, in a way, it can be less bloat... at least never more...\n\nSo yes, I guess there are `niche` out there where the **static** library is **important**... agreed, maybe much, much **less** in unix/mac/..., which have an easy, in place, documented, understood, shared library install, that all processes have access to... even deals with dependancies... **great**!\n\nBut tidy provides an option for this. It defaults to `OFF`, because that is `best` for windows users. But that can be set `ON` by unix users, much more savvy to command line switches... Best of both worlds? Shared culture...\n\n**cmake macros**\n\nYes, we are aware of the cmake macros - with extra S - and chose to not use those... deliberately, not by accident... see no reason to change that yet...\n\nBut as I have gained more cmake experience, since that decision, and do now wonder `why not?`... was that the best choice? so this is for sure open... comments please...\n\n**library names**\n\nThere are several ways do deal with the clash in library names in windows... CURL chose to rename the DLL library libcurl_imp.lib... others, like you suggest here, a big `-static.lib` suffix... etc, etc... \n\nWe chose `tidys.lib`... which will be `libtidys.a` in unix... simple and elegent...\n\nIf this is **really** important to you, then maybe we can consider an option to set the static library name... I would certainly prefer the same naming convention be applied across unix/mac/windows... but could be persuaded otherwise... but it could be externally configurable... user selectable...\n\nThat would mess with some API documentation, ie the names used, and make the task of a cmake FindTidy.cmake script that much harder, and quite messy, but, just maybe... not sure... open\n\nAs usual, will leave some time for others to comment... but at this time, for the reasons given, and the previous discussions and decisions, suggest rejecting this PR as it presently stands...\n. In the absence of further supporting comments am closing this for now... for the reasons given...\n. @sesom42 thanks for this PR...\n\nIt looks good, but need to experiment a little...\n\nWill get back soonest... thanks...\n. @sesom42 ok, have now tested it for a while... it certainly seems a better option to output truncated debug data, than potentially overrunning the fixed buffer... thanks...\n. @pinotree, @danielhjames thanks for this PR... adding `defined(__GLIBC__)` to an already long list looks ok...\n\nIs there a better way to do this, as @AdamMajer suggests?\n\nWell, yes in CMake terms there is, using say -\n\n```\nin CMakeLists.txt\ncheck_include_file(utime.h     HAVE_UTIME_H)\ncheck_include_file(sys/utime.h  HAVE_SYS_UTIME_H)\nif (HAVE_SYS_UTIME_H)\nadd_definitions( -DHAS_FUTIME=1 )\nelse ()\nadd_definitions( -DHAS_FUTIME=0 )\nendif ()\nthen maybe in a config.h.in\n#cmakedefine HAVE_UTIME_H 1\n#cmakedefine HAVE_SYS_UTIME_H 1\n```\n\nThis could be add to the tidy cmake build, and thus define `HAS_FUTIME` before the header `tidyplatform.h` is used... that would hide any problem in the current `tidyplatform.h`, but...\n\nBut that does not help users of the binary tidy-dev install, while this PR addition does address that user's needs more... Of course they too could also add a `HAS_FUTIME` define in their build system, and again step over the problem...\n\nWill leave a little more time for any others to comment, but at this stage this looks fine to be merged... thanks...\n. Now merged to master... thanks...\n. @danielhjames thanks for this date update in `LICENSE.md`...\n\nI am not sure why we have **both** a LICENCE.md **and** LICENCE.txt in the first place... but certainly they should agree...\n\nIIRC it was something about when the documentation build was in the source... doxygen, or some other tool, preferred one and not the other, and a copy was made... but documentation has been moved to its own repo, so may be one, or the other, should be deletd here... or something...\n\nAnyway, this looks good to upddate the `md` file...\n\nAnd yes, it looks like this could/should be done in **many** places... just about every `src` file I looked at needs the year changed... but maybe that can be a separate issue... it should maybe be a once a year event... or maybe even the year should be removed from every src?\n\nI also saw a query somewhere about the `Copyright University of Toronto` notice, but really do not know the answer to that... maybe some others can step in and comment on that...\n\nAs usual will leave a little time for others, but looks no problem... thanks...\n. Now merged to master... thanks...\n. @nijel ok, what I understand is that your app calls `tidyDocCleanAndRepair(doc)` even when no document loaded! And this causes a crash in the current library, what version?, while it was harmless in an older library version, what version?\n\nWell, that would certainly be a regression bug. Thanks...\n\nBut looking at your patch, I do not think this is quite right, even though as you say it works for you...\n\nWe need to look at why we need an extra guard for `CheckHTML5` **and** `CheckHTMLTagsAttribsVersions`... These calls should be harmless, like earlier `List2BQ`, and several others... with or without a loaded doc...\n\nI think it might be the test `if (doc->lexer->versionEmitted & VERS_HTML5)` maybe the **crash**. Maybe there is no `lexer` if no document loaded...\n\nIt will take me a little time to setup a test for this... be back soonest... but look forward to any further information you can supply... thanks...\n. @nijel discussion and patch move to #429 ...\n\nMeantime closing this as not being the correct patch... but thanks for pointing us to it...\n. @vargenau, wow, thank you for this...\n\nI had used Google translate, I am Austrlian, and my french wife is always telling me it produces rubbish a lot of the time... I did go back and alter a few obvious things, but I am still learning french...\n\nThis will be merged shortly... but if you get the time to add a few more, then they can be added to this PR without problems... thanks again...\n. @vargenau thanks for this much **improved** french translation... now merged to master...\n\nMaybe @balthisar could run the header gen, and bump the version number at that time... thanks...\n. @rtack thank you for this issue...\n\nFrom your html sample I certainly agree tidy should not emit these warnings, if running in `html5` mode...\n\nNow, for this specific case, I experimented with the following patch -\n\n```\ndiff --git a/src/parser.c b/src/parser.c\nindex ae773aa..4fb7a8c 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -4022,9 +4022,9 @@ void TY_(ParseBody)(TidyDocImpl* doc, Node *body, GetTokenMode mode)\n         */\n         lexer->excludeBlocks = no;\n\n-        if ( nodeIsINPUT(node) ||\n+        if (( nodeIsINPUT(node) ||\n              (!TY_(nodeHasCM)(node, CM_BLOCK) && !TY_(nodeHasCM)(node, CM_INLINE))\n-           )\n+           ) && !TY_(IsHTML5Mode)(doc) )\n         {\n             /* avoid this error message being issued twice */\n             if (!(node->tag->model & CM_HEAD))\ndiff --git a/version.txt b/version.txt\nindex 5075da1..abfc04f 100644\n--- a/version.txt\n+++ b/version.txt\n@@ -1,2 +1,2 @@\n-5.3.5\n+5.3.5-Issue-428\n 2016.07.01\n```\n\nAnd maybe this is wrong, and the test for html5 mode should only be for the `input` node, ie to the left of the `||` and thus **not** include skipping other nodes without `CM_BLOCK && CM_INLINE`... have to research and test what they might be...\n\nBut that little `fix`, which ever way it is best implemented, in **no** way addresses the bigger question - to allow all \"flow content\" in body and don't warn for html5\n\nWe do have some 21 bits - content model shortcut encoding - lexer.h, from CM_EMPTY to CM_OMITST - but it seems no `bit` for say `CM_FLOW`, that we could use to mark the elements listed in your second link, which would lead to an easy `flow content` test, but maybe we should have one...\n\nAnyway, hope you get the chance to try the above patch, or modifications of it, to see how far that leads us down the road... \n\nYou should certainly update to version 5.3.5 plus... that 5.3.3, well 5.3.2 to 5.3.4, had an enumeration flaw... see #418\n\nI have done this patch in an `issue-428` branch, which I will consider pushing after some more tests... this feels like a **bug**... thanks...\n. @rtack have pushed my `issue-428` branch for testing...\n\nJust pull and checkout issue-428... thanks...\n. @rtack have now merged `issue-428` and this should close this issue... can you confirm... thanks...\n. @nijel thanks... you are **absolutely** correct... CheckHTMLTagsAttribsVersions also can **not** be called with **no** document... should have checked...\n\nHave created a **new** patch, which in fact is very close to your PR #426 ... different entry test, but could be persuaded on this... and some comments added...\n\n```\ndiff --git a/src/tidylib.c b/src/tidylib.c\nindex 28ebbb2..4787336 100755\n--- a/src/tidylib.c\n+++ b/src/tidylib.c\n@@ -1908,9 +1908,18 @@ int         tidyDocCleanAndRepair( TidyDocImpl* doc )\n        it can ever be, so we can start detecting things that shouldn't\n        be in this version of HTML\n      */\n-    if (doc->lexer->versionEmitted & VERS_HTML5)\n-         TY_(CheckHTML5)( doc, &doc->root );\n-    TY_(CheckHTMLTagsAttribsVersions)( doc, &doc->root );\n+    if (doc->lexer) \n+    {\n+        /*\\ \n+         *  Issue #429 #426 - These services can only be used\n+         *  when there is a document loaded, ie a lexer created.\n+         *  But really should not be calling a Clean and Repair\n+         *  service with no doc!\n+        \\*/\n+        if (doc->lexer->versionEmitted & VERS_HTML5)\n+            TY_(CheckHTML5)( doc, &doc->root );\n+        TY_(CheckHTMLTagsAttribsVersions)( doc, &doc->root );\n+    }\n\n #if !defined(NDEBUG) && defined(_MSC_VER)\n     SPRTF(\"All nodes AFTER clean and repair\\n\");\n```\n\nMay take me a few days to push something... But if you get a chance to try it, that would be great... or even present it in a PR...\n\nLike your nijel/utidylib patch as well... avoids a wasted call if nothing loaded...\n\nThanks for the further testing...\n. @TPS agreed ;=))\n. @zhenjie thanks for the request...\n\nGiven that the role of **`tidy`** is the parse, fix, and beautify **html**, it would be unlikely to have such an option...\n\nBut such a `text extractor` tool could easily be written using **`libtidy`**.\n\nIn fact my [tidy-test](https://github.com/geoffmcl/tidy-test) repo has such a sample, called [url2text](https://github.com/geoffmcl/tidy-test/blob/master/src/url2text.cxx). It uses the **CURL** library to fetch a URL, and output just the text nodes from the libtidy `tree`...\n\nOf course that CURL fetching could be replaced with a simple file read, and would do more or less what you request...\n\nI do not know anything about `BeaufitulSoup 4`, but it looks like a python library... so the above extraction function could be added as part of the python bindings for tidy...\n\nHope this helps...\n. Since we are headed for a 5.4 release, and there have been no further comments on this for quite a while, am closing it...\n\nPlease feel free to reopen, or post a new issue... thanks...\n. @chowbok thanks for the report...\n\nHowever when I run your sample through tidy 5.3.5, default config, I get -\n\n```\nF:\\Projects\\tidy-test\\test>tidy5 input5\\in_431.xhtml\nInfo: Document content looks like XHTML5\nNo warnings or errors were found.\n\n<?xml version='1.0' encoding='utf-8'?>\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en-us\" lang=\n\"en-us\">\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.3.5\" />\n<meta charset=\"utf-8\" />\n<title>Tidy testcase</title>\n</head>\n<body>\n<div>\n<p>Foo</p>\n</div>\n</body>\n</html>\n\n...\n```\n\nSo what config items did you add to cause tidy to change the doctype?\n\nI **note** when I add the option `--doctype strict`, I do get a **bad** `<meta charset=\"utf-8\"`... Is this what you refer to here?\n\nI guess that should be **replaced** with say `<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />` to match the DTD XHTML 1.0 Strict... \n\nBut maybe there are other `output`, or other config options, to also be taken into account...\n\nPlease explain more... thanks...\n. @tewe thanks for your report...\n\nI downloaded your `sample.xml.txt` file, but find that is a **binary** file... it commences with -\n\n```\nFile [sample.xml.txt], 979 bytes.\n0000:0000 1F 8B 08 00 00 00 00 00  03 00 9D 56 59 73 DB 36 ...........VYs.6\n0000:0010 10 7E CF AF 40 F1 4E 41  47 3D 4D 3A 14 33 B1 E5 .~..@.NAG=M:.3..\n0000:0020 34 6E 5D 4B 6D E5 76 D2  17 0F 44 AE 24 D4 20 C0 4n]Km.v...D.$. .\n0000:0030 80 4B 51 EA AF EF 82 97  75 D9 75 E2 17 43 7B 7D .KQ.....u.u..C{}\n0000:0040 7B 7C BB 52 F8 7E 9B 6A  B6 01 97 2B 6B C6 7C D0 {|.R.~.j...+k.|.\n```\n\nNow running `tidy` 5.3.5 on that file, with an `-xml` option, certainly only outputs **one** newline... what else do you **expect**?\n\nOf course if you had added `-f temperr.txt`, instead of a redirection to `/dev/null` you would see some some 390 warnings...  \n\nI remember in use-after-free in tidy-html5 5.1.25 #341, or/and perhaps in other issues, we had some discussion about maybe tidy should `abort`, with an error, if it say detects say 0x00 in the input data, and tidy has not been instructed to use some form of uni-code input, or something... seems hard to nail down a reasonable criteria for the abort...\n\nNothing was decided, so tidy only warns, and does its very best with the **rubbish** it may be reading...\n\nBut maybe something went wrong in the `sample` upload, and we should be talking about another file...\n\nPlease explain more...\n. @tewe yes, I tool should have noted the gzip magic number (1b 8f) in the dump... glad we are back on track ;=))\n\nThanks for closing...\n. @nijel wow, thanks for making this **easy**... now merged to master...\n. @PING, thank you for the feature request... looks interesting...\n\nYour sorting options brings up the idea of `global attributes`... I understand that, a term used frequently in W3C docs, **but does tidy**? Have we arranged the attribute tables with the **global** flag in mind? Maybe... need to check deeper...\n\nBut other than that, just expanding the enum types, and write a `ptAttValComparator ptComparator`\nto compare `p,q`...\n\nThe difficult one would be `Custom`... How do you let the user define the `comparitor` to use?\n\nCertainly look forward to more discussion, and even some code to determine if an attribute belongs to **global**... \n\nAnd I hope you can explain more the use case... why do we need this sorting... thanks...\n. @jidanni thanks for the (evolving) issue...\n\nI certainly agree, the use of `--doctype [enum]` has some very weird problems...\n\nEnumerate each, and file a separate issue... of course each issue should include tidy libtidy version, sample html, out html, config used, expected html, comments, etc...\n\nAnd absolutely agree, the present docs help, does imply `--doctype user` will work! And certainly needs enhancing... a docs issue... please help...\n\nSo I agree, you have opened a **can of worms**... and **that is good**... separating and isolating the problems, one by one, may lead to a **faster** solution...\n\nOr do you have a PR for review?\n\nFor sure, several `--doctype [enum]` problems exist, and should be isolated, addressed, and fixed... thanks...\n. Also see issue #472, with suggested patch, and a related config issue #468. which needs testing...\n\nSpecifically concerning the failure to use the user supplied `<fpi>` string, marking this as a **bug**!. Since we are about to `release` **5.4**, and no work has been done on this, can only move it out to `next` **5.5**.\n\nAlthough I would have to say it is a little unclear exactly what is expected of tidy, so certainly need further clarification... thanks...\n. @jidanni I guess I am still very confused... tidy does **not** change the doctype...\n\nIf you leave the `--doctype auto`, the **default**, you do not seem to have given us one simple example where tidy **changed** your existing valid `doctype` in the output... it may, if none, or is invalid...\n\nSo while it is agreed the documentation presently says `Tidy will use an educated guess based upon the contents of the document.`, that seems to only mean it will use your `valid` doctype in the output, but may add an `Info:` output suggesting what it found...\n\nSo it seems tidy does **not** decide a different doctype would be more suitable, and change the output doctype, but merely shows, as an `Info:` type message, of what it would suggest...\n\nSo give us an example where tidy **did** change the doctype, while in `auto` mode, and maybe we can do something... \n\nOtherwise this seems closed, except for improving the `quickref/man tidy` description output... and I hope that will be addressed in **5.5**, when we will address many message outputs...\n\nOr have I got something really wrong here? Pleas help... thanks...\n. Sounds good... am adding the `Docs`. and `Feature Request` tags in the hope that this will get picked up in the full **5.5** documentation review, and removing the `Bug` tag... thanks.... @jidanni thanks for this issue... Yes, the description is **wrong**...\n\nSuggest a small patch -\n\n```\ndiff --git a/src/language_en.h b/src/language_en.h\nindex 7a8d1de..a895b31 100644\n--- a/src/language_en.h\n+++ b/src/language_en.h\n@@ -2058,8 +2058,8 @@ static languageDefinition language_en = { whichPluralForm_en, {\n           be translated. */\n       TidyStrictTagsAttr,           0,\n         \"This options ensures that tags and attributes are applicable for the \"\n-        \"version of HTML that Tidy outputs. When set to <var>yes</var> (the \"\n-        \"default) and the output document type is a strict doctype, then Tidy \"\n+        \"version of HTML that Tidy outputs. When set to <var>yes</var> \"\n+        \"and the output document type is a strict doctype, then Tidy \"\n         \"will report errors. If the output document type is a loose or \"\n         \"transitional doctype, then Tidy will report warnings. \"\n         \"<br/>\"\n```\n\nWill get to this, unless someone has a better wording... thanks...\n. @jidanni, as we are about to `release` **5.4**, can only move this out to `next` **5.5**...\n\n@balthisar note you mentioned this `strict-tags-attributes` option in a direct email, and certainly look forward to your **stab** at the `several`, maybe even **many**, documentation issues in **5.5**... thanks...\n. @bfrmtx thanks for the report...\n\nI assume the problem is that the above php will be output as **one** line...\n\nIn checking the code, it seems some time back we removed a conditional line flush, after each php block... I have not had a chance to look deeper into why? When?\n\nBut as a test, I applied the following small patch -\n\n```\ndiff --git a/src/pprint.c b/src/pprint.c\nindex a4f2aef..9d443ea 100644\n--- a/src/pprint.c\n+++ b/src/pprint.c\n@@ -1819,7 +1819,9 @@ static void PPrintPhp( TidyDocImpl* doc, uint indent, Node *node )\n                 indent, node );\n     AddString( pprint, \"?>\" );\n\n-    /* PCondFlushLine( doc, indent ); */\n+    if (wrapPhp)\n+        PCondFlushLine( doc, indent );\n+\n     WrapOn( doc, saveWrap );\n }\n\n```\n\nWhile that restores each php statement to a new line, whether you add one or not, I am **not** sure it is the correct use of `wrapPhp`... Maybe we should be using another config parameter???\n\nAnd what about if you write -\n\n```\n<?php include(\"/a.inc\"); ?><?php include(\"/b.inc\"); ?><?php include(\"c.inc\"); ?>\n```\n\nShould they be kept as one line, or a newline added? At the time these blocks are output tidy has no memory of whether the user put them on one line, or over many lines... that information is lost...\n\nBut have I got the right idea here? Look forward to your further comments...\n. @bfrmtx, well I explored back into the source to find out exactly when that `PCondFlushLine()` was **commented out**, to try to understand why... and came up with a **surprise**...\n\nIt was `imported` like that, when this github repo was initialized, by @sideshowbarker, on Nov 17, 2011, so went back into the old, **old** cvs source, and again, is was imported like that, in Revision 1.1, Sun May 27 02:27:46 2001 UTC (15 years, 1 month ago) by terry_teague, when the SF cvs repo was created... \n\nTidy has **always** been like this... that is **never** placing successive `php` blocks on a new line... so this is certainly a **Feature Request**... a change in long established behavior...\n\nI have not yet done a search in **all** the issues... ie has this come up before... strange if it has not... but, sure, it seems worthy of consideration...\n\nNow I do not write much `php` in `html`, but the following seems another case, where keeping blocks `inline` would be important -\n\n```\n<p>Issue <?php echo $version ?><?php echo $date ?></p>\n```\n\nWith this patch this becomes -\n\n```\n<p>Issue <?php echo $version ?>\n<?php echo $date ?>\n</p>\n```\n\nNow while browsers, like tidy, tend to ignore newlines, they will usually add at least a `space`, which may not be desired here... you would get `$version $date` versus `$version$date`...\n\nSo while this simple patch, or a similar patch, is going to potentially change things for those that do  use `php` in `html`, and then use **`tidy`**...\n\nAnd like I advised, at the time of this `pretty printing`, tidy has no memory of whether the user added, or did not add, a newline between consecutive `php` blocks... \n\nMaybe we do need a way to retain that info, and use it to help decide, and this may assist in other issues, like say #329 - still open... \n\nWe do still have one open `php` issue, #392 - creeping indent on `php` blocks - but maybe this does not seem to effect that... that too still needs a **fix**...\n\nAnd we do have one `php` block in the [testbase](https://github.com/htacg/tidy-html5-tests/tree/refactor), namely [433656](https://github.com/htacg/tidy-html5-tests/blob/refactor/cases/testbase/case-433656.html), but this patch does **not** effect that output... so would not signal a **regression** flag...\n\nSo, like I say, seems like a sound **new** feature, but since tidy has been like this for **15 plus years**, will leave it a **little** time longer for more consideration and comments... \n\nWhat do other think? Thanks...\n. @bfrmtx thanks for taking the time and considering this more...\n\nOk, if we go for a **new feature** what would be its **name**?\n\nYou suggest `wrap-php-extended`, which is maybe ok, but what about `wrap-php-tags`, or something... \n\nAnd there is a README [OPTIONS.md](https://github.com/htacg/tidy-html5/blob/master/README/OPTIONS.md), which enumerates the basic four steps of a **new** option, the last just being its use in the code... \n\nAnd adding a test regression case is optional, and anyway it is in another [repo](https://github.com/htacg/tidy-html5-tests/tree/refactor)... note the `refactor` branch... so would be a separate issue anyway...\n\nBut maybe we are getting ahead of ourselves... maybe a **new** option is **not** required!\n\nFirst we need to understand what does the current `wrap-php`, namely `TidyWrapPhp` do, if anything? I am struggling to understand exactly what it does!\n\nThe description is simple \"... should line wrap text contained within PHP pseudo elements, which look like: `<?php ... ?>`.\"... but in **all** tests so far, I can **not** make that happen... \n\nAfter the `<?` is added to the output, the actual php text content is done by `PPrintText`, and the **only** difference is the **mode**, from `(wrapPhp ? CDATA : COMMENT)`... and `--wrap-php` is **on** by default...\n\nNow it seems in `PPrintText` the text data will be added character by character to the `print` buffer, and it seems these two modes, `CDATA` or `COMMENT` are treated the **same**, with the code -\n\n```\n    /* comment characters are passed raw */\n    if ( mode & (COMMENT | CDATA) )\n    {\n        AddChar( pprint, c );\n        return;\n    }\n```\n\nAnd when you think about it more, **how could tidy wrap php script**! \n\nIt does not know php syntax, and thus has **no** idea where line breaks would be allowed in such a script... ergo, it can **not** wrap any of this inner php text...\n\nWhile maybe indenting is ok - just adding space to the beginning of each line - although as mentioned there is a problem with that in #392... it seems **wrapping** is **impossible**...\n\nSo maybe we have this **useless** `wrap-php` option, that becomes available for another use...\n\nMaybe it should default to `no`, the description amended to say like... add a newline after each php pseudo element `<? ... ?>`, and then the patch does what you want...\n\nAlways interesting how quickly a simple idea can get a lot more complicated ;=))\n\nLook forward to further comments...\n. While this still seems a good `Feature Request`, and potentially a **new** option, nothing has been done about this to date...\n\nAccordingly, since we are about to `release` **5.4**, moving this out to `next` **5.5**.\n\n**As always, comments, patches, PR very welcome**... thanks...\n. Review and more RESEARCH:\n\n#### The `wrap-php` option\n\nSeems `wrap-php` is **only** used to add `CDATA or COMMENT` to the **mode** in a call to `PPrintText`, from `PPrintPhp`, as follows...\n\n```\n    PPrintText( doc, (wrapPhp ? CDATA : COMMENT),\n                indent, node );\n```\n\nBut how is this `mode` later used?\n\nWell in `PPrintText` it is passed to `TextEndsWithNewline`, but there the **test** of `mode` is -\n\n```\nif ( (mode & (CDATA|COMMENT)) && ...\n```\n\nso it make **no** difference there, one or the other...\n\nIt is also passed to `TextStartsWithWhitespace`, but again the **test** of `mode` is -\n\n```\nif ( (mode & (CDATA|COMMENT)) && ...\n```\n\nSo again it makes **no** difference...\n\nFinally, `IFF` the character being printed is a `&`, the **mode** is passed to `PPrintChar`, sometimes with `CDATA` also added, or not, so maybe different, but again the code says -\n\n```\n    /* comment characters are passed raw */\n    if ( mode & (COMMENT | CDATA) )\n    {\n        AddChar( pprint, c );\n        return;\n    }\n```\n\nAnd yet again, it seems to make **no** difference when printing PHP text... It does make a difference in printing other text nodes...\n\nSo as suggested above this option `wrap-php` makes **no** significant difference, `yes` or `no`. It is presently a completley **useless** option, not really changing anything... could even be removed, but that should be a separate issue...\n\nAnd may likewise apply to some other script type `wrap` options...\n\n#### Re-use of `wrap-php` option\n\nSo, also as stated, Tidy could **not** really `wrap` PHP text. It does **not** understand PHP syntax, so could **never** `wrap` such text, so could this option be changed, and used to wrap PHP blocks? That is to add a newline between successive `<?php ... text ... ?>` blocks?\n\n**BUT** as stated, that could add a newline, which would probably be treated as a space character in a browser, adding perhaps an unwanted space... as shown above... so now, on further reflection, do not think I agree with this...\n\nSo, in total, while it seems **nice** to apply line wrapping to the original sample PHP blocks, as requested, rather than outputting a single line as current tidy does, that single line is also **not** wrong...\n\nAnd could not those multiple php blocks be written as one block, like -\n\n```html\n<p>\n<?php \ninclude(\"a.inc\");\ninclude(\"b.inc\");\ninclude(\"c.inc\"); \n?>\n</p>\n```\n\n#### Conclusion\n\nAt this point I am thinking of adding `Won't Fix`, and **closing** this, especially since we are headed for a new release this month, and no one has stepped up with a solution here, or even provided further feedback in more than a year... comments welcome... thanks...\n. Have 2nd, 3rd, 4th,... thoughts on this, and after much **more** testing ;=))\n\nFirst my reading of the code logic was **wrong** in parts... But still in **all** tests conducted with really long php lines, already wrapped, or not, short, etc, etc, I could **not** make this option do anything... the default `yes` **or** `no` always ouput the same thing... **maybe** I need to test **more**, got it **wrong** again! But...\n\nBut since the `wrap-php` option presently **seems** to do **nothing**, why **not** use it as suggested above?\n\nThe patch is very simple, only using `--wrap-php yes` to wrap consecutive `<?php ... ?>` blocks, if desired... default `no`, and adjusted the description accordingly... which it seems more or less what @bfrmtx wanted back in 2016... Well not exactly `wrap`, but adds a new line at the end of the blcok, which is nore or less the same thing...\n\nAt least this causes a difference between `yes` and `no` in some of my 8 test cases, see `in_437*.html`, while there is **none** with current 5.5.76 tidy...\n\nThis is pushed to an `issue-437` branch for testing, and comments...\n\nAs stated above, this probably applies to **all** `wrap-xxx` options, but will leave that to separate issues, when/if brought up... \n\nAs also implied, it seems these were an option to **wrap** these various pseudo tags, in that if `off`, would temporarily set `TidyWrapLen` to `0xFFFFFFFF`, with the comment `/* very large number */`, but perhaps subsequently always disabled this wrap... at least I could **not** get it to work as advertised, but maybe I got the tests wrong...\n\nWhat do others think? Maybe I should just give up, and close, but this branch does do what @bfrmtx asked, I think... Thanks...\n. Created PR #645 to address this... review, testing and feedback welcome... thanks...\n. @balthisar well I think **all** those questions have been raised, and discussed, and felt **answered**, **before** I presented the simple `re-use` PR #645, so am still for merging it **as is**... but...\n\nBut if you want to open another issue like `What about the other **wrap-xxx** options that do **nothing**?`, then that is ok, including using some **depreciation** mechanism you mention, but do **not** describe... How can we know what you have in mind here?\n\nOr if you want to suggest that the **new** behaviour be implemented in a **new** option, like `wrap-php-blocks` or `wrap-php-elements` then again go for it... Maybe close my PR and present a new one... not too hard... Not much code to change... reinstate the **do nothing** `wrap-php`, a few re-names, new enum, etc...\n\nBut me, feel I have discussed, researched, this to **death**, and **not** prepared to do anything different, or any **more** at this time... maybe being a bit under-the-weather atm features in this... do not know...\n\nOr just move it out to a new **milestone**, beyond this release, close the PR, and we do dicuss it **more**... it has already been open since Jul 11, 2016, and could probably **wait** some more...\n\nLook forward to **your** choice... thanks...\n. As this is still open, and under discussion moving the milestone out...\n. @balthisar one last quiet, calm **try** before this Jul 11, 2016 issue gets moved out to the next milestone... yet again...\n\n> tl;dr: I'm just trying ask, _where do you see the other options going_?\n\nAnd I am trying to answer, that is **not** the issue being addressed here. If you want to address other than `wrap-php`, i.e. **this issue**, then please open a **new** issue for that, with broader scope... \n\nThen preferable add some code changes, patch or PR to support **that** issue... and that might include further changes in `wrap-php` as part of it... let your coding fingers do the talking ;=))\n\n> \"What to do\" hinges on what we might want to do in the future...\n\nCan't see what I might want to do **in the future**! And that means open, discuss, code, and present other patches, PR's on other than `wrap-php`, although that may also include `wrap-php`...\n\n> If the vision is limited to one change, then that's not a vision and everything becomes ad hoc. \n\nYes, at this time it is limited to **one** change. Whether you call that a `vision`, or `ad hoc` does not seem to matter, although prefer the former...\n\nBut I do **not** think because of this **one** change, then **everything** becomes ad hoc. That seems a **gross** exaggeration... \n\nAnd am **not** too concerned that some very **astute** user might discover there is a set of `wrap-xxx` options, 3-4 I think, and here only **one**, at this time, is being changed, making it **inconsistent** with the others **at this time**...\n\nI have spent time, discussed, and presented PR #645 just for `wrap-php`... just a few lines of code... \n\nThat does **not** preclude me **having a vision**, open another issue, discuss, and code and present something more **inclusive** in the future, but just **not** now... \n\nAnd that might include some sort of **renaming** of it, or **all** of them, to `wrap-php-blocks`, or something... which might then include depreciating the current names... but just **not** now...\n\nWe have **this** code for now, just for this **specific** issue... merge it or **not** is the only reply I want...\n\nAs stated earlier, this **issue** has already been around for some considerable time, so skipping it for now is also no problem... thanks...\n. @GaborWnuk thanks for this PR, but it seems I noted, and fixed this around the same day as you, with commit https://github.com/htacg/tidy-html5/commit/b26271e3f81d458264664f3d85dff3ec94297ce3\n\nPlease rebase your fork to master... thanks...\n. @marcoscaceres, thanks for the comment... I searched, but did not find any `option` for this...\n\nIf seems if the attribute is **not** marked as a `boolean` type, ie has `CH_BOOL` bit, like say `nowrap`, `checked`, ... etc, that `=\"\"` will unconditionally be added, if no value given...\n\nSo it seems a **new** `option` would be the only way to go to inhibit this behavior...\n\nThere is a README [OPTIONS.md](https://github.com/htacg/tidy-html5/blob/master/README/OPTIONS.md), which enumerates the basic four steps of a **new** option, the last just being its use in the code... \n\nBut would ask you, or others, to comment on the use case for this... thanks\n. Since we are about to `release` **5.4**, and nothing has been done about this `Feature Request`, can only move the milestone to `next` **5.5**.\n\nAs always, further comments, patches, PR **very** welcome... thanks...\n. @fyiman yes, tidy does have a way to classify an attribute as `boolean`, like the above mentioned `nowrap`, but that only exists for **known**, allowed attributes, as enumerated within tidy code... but this is a **proprietary** attribute...\n\nAnd @marcoscaceres as you point out there is presently no way of saying this **idl** is boolean... although we can suppress the warning with `--warn-proprietary-attributes no`...\n\nBut I did think of one thing. We have an option `literal-attributes`, which defaults to **no**. I experimented with the following small patch -\n\n```diff\ndiff --git a/src/pprint.c b/src/pprint.c\nindex 68e8d44..8f84b8d 100644\n--- a/src/pprint.c\n+++ b/src/pprint.c\n@@ -1118,6 +1118,11 @@ static void PPrintAttrValue( TidyDocImpl* doc, uint indent,\n     if ( delim == 0 )\n         delim = '\"';\n\n+   if (value && (value[0] == 0) && cfgBool(doc, TidyLiteralAttribs))\n+   {\n+       return; /* Issue #439 - If '--literal-attributes yes', and value is null, no '=\"\"' */\n+   }\n+\n     AddChar( pprint, '=' );\n\n     /* don't wrap after \"=\" for xml documents */\n```\n\nThis effectively says, if the attribute value is zero in length, and the user has requested `--literal-attributes`, then treat this as a `boolean` type... does not seem to stretch the meaning too much... but would probably need to adjust the docs to mention this behaviour...\n\nI have already run the full regression tests with this patch, and seems no problem... probably just because there are no examples in the tests, since dropping the `=\"\"` is certainly a **change**!\n\nWhat do you guys, and others, think? thanks...\n. @balthisar wow, you have certainly **expanded** the scope of the original @marcoscaceres request - read the title...\n\nI thought my **patch** did exactly what was required, and more to the letter of the [literal-attribute](http://api.html-tidy.org/tidy/quickref_next.html#literal-attributes) description, namely to preserve what was there, in that if there was **no value**, then do **not** add `=\"\"`... not exactly **hijacking**, more like making it do what it promises...\n\nAnd note, I think this `PPrintAttrValue`, where my patch is, is **only** called if the attribute is **not** marked `boolean`... need to check more, verify, but that was what was expected... maybe XHTML???\n\nI guess I made the **mistake** of referring to this as a `boolean` type attribute... It is **not**! It is an attribute that `literally` has **no** value, and suggested a way tidy could `honor` that fact, with an existing `option`...\n\nI agree with \"there's a _big_ difference between a boolean attribute, and an attribute without a value.\"... never meant to suggest differently... sorry if otherwise was implied...\n\n**Three Other Issues**\n\nBut this was **not** meant to mess with what I think is a completely **separate** issue - should we offer an option for truely **marked** `boolean` atributes, to be output as say `naked`, the default, `null`, add `=\"\"`, or `named`? I have **not** read any request for this. Maybe I missed it... Is there a use case?\n\nAnd has nothing to do with another completely **separate** issue - does tidy have **all** `boolean` attribute? **Or** is there a need to add another **new** option, like `new-boolean-attributes`? Maybe, but again nothing to do with this issue...\n\n**AND**, this has nothing to do with what I would also consider a **separate** tidy **bug** issue, namely it will **not** flag a warning on say `disabled=\"false\"`... it should, and it should **fix** it... Need to open a issue, unless someone beats me to it...\n\nSo, aside from the above **three** separate, generally unrelated issues, do **not** agree with PR #654... \n\nEven find the comment description as **false**, `/**< Treat attributes without values as boolean */`. There was no such intention in the patch... thus also do not like the name `boolean-attributes`... maybe more like `null-attribute-values`, or something...\n\nAnd also **not** sure of `booleans are given the valid null string value.` in **current** tidy. Only had time to quickly test my **new** sample [in_439-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_439-1.html), but it seems `checked` was output as **naked**. \n\nIt is also noted the validator flags the `disabled=\"false\"` error, which tidy overlooks, and even outputs it as the same... **UGH**! As stated, need an issue for this obvious **bug**...\n\nDo agree we move this out of pending release 5.6! And hope the PR is removed/closed... thanks...\n. @Claghorn have you tried `--vertical-space yes`?\n\nAs the docs state \"This option specifies if Tidy should add some extra empty lines for readability.\"\n\nLook forward to your further comment...\n. @dengeist thanks for the issue... quickly reviewing your link it certainly looks like tidy should not warn about SRI attributes...\n\nI remember something recently at least about `crossorigin` - yes, can you look at #418... Is this related? That has been merged... Did we miss some cases?\n\nIf yes, can you give a brief sample html, config used, output, and expected output... thanks...\n\nOr is this completely different? Separate...\n\nLook forward to your further comments... including tidy library version tested, etc...\n. Hi @dengeist, thanks for the further information, especially the version and the source... that makes a **lot** of difference...\n\nYes, the release 5.2.0, available by `Brew`, does not have this **fix**, or **enhancement**... \n\nI am sorry that normally, distributions like `Brew`, and others, do not offer you the latest development version, but perhaps they could/should... but that is up to each distribution to choose...\n\nBut this is an additional **new** feature, as tidy moves on, and is **not** a critical **bug**, so this enhancement of tidy is very unlikely to be pushed back to release version 5.2, creating say a 5.2.1, which `Brew` might pick up, so the only solution is to move forward... \n\nIt **will** be in the next tidy release, `5.4`, but there is no definite date on that yet... hopefully, in a few months, at most...\n\nBUT, your issue also now points out, we seemed to have **missed** the `integrity` attribute... in my book, this is a **bug**... and should be addressed...\n\nYou know, `Brew` is actually a simple script for cloning the tidy repo, and building the project... You should be able to achieve the same by directly cloning the latest, building and installing the project... without `Brew`...\n\nBut, this points out an issue, that the `integrity` attribute is not yet accepted by tidy version 5.3.7 plus... and that needs to be addressed... PR very welcome...\n\nAgain, thanks for showing this up...\n. @dengeist, that is interesting, that Brew can build the **latest** tidy... maybe you could share with us how to do that... that is good to know...\n\nSo thanks to @bdesham, #442, have now merged this 'integrity' support... and that merge marked this as closed...\n\nSo to get this support you need to build the **latest** `master` branch, version 5.3.8, plus... \n\nWould appreciate you testing, and reporting... if you get a chance... thanks...\n. @bdesham in a quick view, this looks good... thanks...\n\nJust did the free MS Windows 7 to 10 upgrade, and still exploring what I may have lost, or gained ;=)) aside from some very obvious color changes...\n\nWill get to this tidy merge soonest... thanks...\n. @bdesham, sorry some small fights with Windows 10... but seems ok... living with it...\n\nHave merged this... bumped to 5.3.8 for this support... thanks...\n. @marcograss, thanks for the issue...\n\nIn the process of setting up a `sanitizer` build, to try to repeat the problem...\n\nYou say this also happens in `master` v. 5.3.8, or plus... appreciate any more information... thanks...\n\nWill get back soonest...\n. @marcograss it seem PR #445 fixes this...\n\nAppreciate it if you get a chance to apply the patch and test... thanks...\n. @marcograss got a chance to test, and see the bug, and #445 seems to fix, so now merged...\n\n> can be reachable from apps using libtidy\n\nYes, some `locale` services were added to **`libtidy`**, circa Nov. 2015. These are used by our console app, `tidy.c`, but would be **very unlikely** to be used by any other app using **`libtidy`**, at this stage... For example, they are not yet published in the public [API](http://api.html-tidy.org/tidy/tidylib_api_5.2.0/).\n\nThey are still under test, as part of Tidy's international language support, but hopefully will be included in the next release... such an app would need access to the source, to even be able to use these API extension... they are presently **only** in `language.h`, which is not installed by distributions...\n\nAnyway, tests of version `5.3.9` (2016.08.04) show this has been **fixed**... Hope you get the chance to pull, build and re-test, maybe closing this, and the CVE-2016-6583... thanks...\n. @marcograss, @AdamMajer, have you had a chance to test, re-test this?\n\nI just had a chance to built and run a sanitize Tidy version, in my RPI2/Raspbian/arm7 machine, using `cmake ../.. -DCMAKE_C_FLAGS=-fsanitize=address [options]`, and the problem **seems** fixed in the current `master` 5.3.9... \n\nCan we close this? ... thanks...\n. @marcograss just tried this `-DCMAKE_C_FLAGS=-fsanitize=address` in a 3rd system, and it seems fully fixed, and since no further comments for 3/4 months, closing this...\n\nPlease feel free to re-open, or open another issue.... thanks...\n. @dcb314 thanks for the issue...\n\nAssume you are talking about line https://github.com/htacg/tidy-html5/blob/master/src/parser.c#L4740 ?\n\nCertainly agree the same switch logic is achieved by -\n\n```\n    if (node->line != 1 || node->column != 1)\n```\n\nMaybe others care to comment...\n\nIt is quite minor, but will consider it... thanks for spotting it, and reporting...\n. @AdamMajer thanks for the PR... eyeballing the code it certainly seems to avoid an overrun...\n\nAnd the code feels cleaner, but wonder why `result[i] = tolower( search[i] );`... it seems it would already be in lower case from `search = TY_(tmbstrtolower)(search);`... but quite minor...\n\nI have yet to test #443... but it certainly looks like this addresses that...\n\nWill merge shortly, unless others see a problem... thanks...\n. @AdamMajer well, it appear the table is in lowercase, but this protects against table changes...\n\nHave now had a chance to add `-fsanitize=address`, test, and can repeat the bug, which seems fixed with your patch...\n\nAccordingly, have merged it, and bumped to version **5.3.9** (2016.08.04)... thanks...\n. @dieselmachine thanks for the issue...\n\nYes, initial, quick, research shows html4-- was more tolerant, in some ways, than html5++, so tidy still treats this `<ul>...</ul>` code in html4-- mode... that is with permissiveness of the contents of a `<ul>`, ul element, ul tag... it leaves other element, even text, as-is... \n\nExcept of course, real old tidy (circa 2004), which would would add a `<li style=\"list-style: none\">` element around the contents...\n\nAlso see issues #310, #396, #398, and maybe others...\n\nSo tidy maybe needs to change? Even without the suggested/implied additional `option`... especially, since it seems to presently result in `invalid` html, aka the W3C validator... being generated...\n\nSo is this the time, if tidy is still in html5++ mode, to end this permissiveness contents of a `<ul>`, Maybe, but need more information, specifications, understanding... to proceed...\n\nThe `Content Model` includes `Zero or more li`, that is clear, especially the `0`... which, in itself, implies other content...\n\nBut what exactly are [script-supporting-elements](http://w3c.github.io/html/dom.html#script-supporting-element)? The link only lists `<script>`, and `<template>`, but...\n\nSuch a change would certainly break the indirect support of say @hermanbergwerf #310, @rtack #396, leading to @rtack PR #398, and maybe others... \n\nCertainly look forward to **further** comments on this... It seems a fix to conform to html5++ would certainly break/change some current tidy behaviour...\n\nDo we want that? Or should it really be subject to a **new** option... but then again tidy should **not** deliberately generate invalid html...\n\nSo thanks for the [grouping-content](http://w3c.github.io/html/grouping-content.html#elementdef-ul) link, maybe read differently by others... \n\nLet's see where this goes... thanks again for the issue...\n. As we are about to `release` **5.4**, and no work has been presented on this `Feature Request`, can only move it to milestone `next`, **5.5**.\n\nAs always, further comments, patches or a PR much appreciated... thanks...\n. @alexneblett thanks for the issue...\n\nCertainly, extacting your `in` and `out` sample htm files, and viewing them in a browser, and I can certainly `see` the additional vertical space created in the table... but still trying to understand **why**!\n\nYes, it certainly seems mixed up with the `<div>`, a **block** level element, and the `<span>`, which is an **inline** element... You have **lots** of them...\n\nWill keep picking at it... but it would be much appreciated if you could create a very minimal example... hopefully maximum a 3 x 3 table, or less... reading and comparing the current in/out is quite difficult...\n\nAnything you can do to really narrow down exactly what is tidy adding, changing, fixing, that causes that extra space would speed up the process... thanks...\n. @alexneblett thanks for looking further into this...\n\nWow, yes, while that **hack** might cure a certain space problem, that **really** changes the attributes of `<span>`, and even the `parser`. I think that will do **much** more than just remove an extra space ;=))\n\nAnd may break backward compatibility with html4-- mode... so may need to be re-set on mode changes... have not checked...\n\nLook forward to a simple table to test, so I can even get to see exactly what extra `space` you are talking about... \n\nHopefully, maybe there is a quieter, less invasive **fix**... thanks...\n. @balthisar well @alexneblett **did** attach a zip file with a sample...\n\nIf you extract the zip, and load `spaninlineblock.htm` in a browser, you will see a neat, compact table, where the cell height is say 1em, or there abouts...\n\nThen if you run current tidy on that, and load the tidied output, or load his `spaninlineblockout.htm`, in a browser, you will see the cell height is at least double... there must be **simple** reason for this...\n\nSo this is a case where the browser view of the tidied document does **not** match the original! And that breaks one of the maxims of tidy to produce the same view...\n\nNow his sample is quite large and complex, but it should be possible to reduce it down to a very minimal sample, and discover what has changed in the tidy output that causes this very large visual change... \n\nIt does contain a lots of `<span style=\"vertical-align:bottom;width:80%;border-bottom:solid 2px #000000;display:inline-block;\" class=\"center\">` and `<div ...>` elements, but in general Tidy just repeats all those... no problem...\n\nYes, it would be nice if @alexneblett could help in this simplifying of the sample, and find the cause... then I am sure we can find a **fix**...\n\nAgain this is a simple case of tidied output **not** matching the display of the original, and I certainly do not think it should be closed... until solved, or at least **understood**, when we might even say `Won't Fix`, or maybe even `Can't Fix`...\n\nIt does **not** involve Tidy in `interpret CSS`, and there is no `javascript`... he is **not** asking tidy to recognize `display: inline-block`... it might involve how tidy relines, and places these spans and divs, in a table... and even saying that gives me some other thoughts to try...\n\nI will try to push myself to look at this issue again... get a simple sample case... and work on a fix...\n. @balthisar, @alexneblett **wow** after a **lot** of reviewing I think I found the **main** problems with Tidy!\n\n 1. It will **not** allow an open `<span style=\"whatever\">` to remain open on reaching a `<div>`.\n 2. In places it puts a space between `</span>` and the next `<span>`. It is that `space` that causes an extra line height in each cell.\n\nThat is aside from the document has some other grievious problems, like it has `displa\\ny:block`, `cla\\nss=\"blah\"`, etc... That is it seems some wrapping tool has added line breaks in words! Ugh!\n\nNow this issue of a `<span><div>` has come up before, like in #530, and maybe **accepting** this new option `insert-inline-tags` may help the situation, but as warned there could have a lot of other consequences...\n\nI have still to research into where this extra space like `</span> <span ...` comes from... but have made some progress...\n\nAdditionally tidy seems to want to use the entity `&nbsp;` in place of the numeric equivalent `&#160;`, but maybe there is an option to control this, but it seems to cause no problem, either way...\n\nTo assist in the research have pushed some **448** samples to my [tidy test](https://github.com/geoffmcl/tidy-test) repo. There, the `in_448.html` and `out_448.html` are the **originals** from the above zip. \n\nThe sample [in_448-4.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_448-4.html) is a manually **cleaned** sample. All the unnecessary `<div>` removed, and the above inappropriate linebreaks fixed, that, aside from the obsolete `cellpadding` and `cellspacing` on the table, will **pass** W3C `nu`, and tidy will **not** reports any warnings/errors.\n\n**And**, if you do a global replace of `</span> <span` with `</span><span` in the tidy output, with `--wrap 0` config - ie just removing that creepy **space** - the tidied output will **correctly** display the compact table...\n\nSort of out-of-breath on this issue for the moment... will get around to figuring out where that **creepy** space comes from... unless someone else beat me to it... it does not seem a **big** problem...\n\nBut this is working on the already partially **fixed** `in_448-4.html` sample. To work on the original requires either the above option `insert-inline-tags` to be considered, with its **big** consequences...\n\nOr perhaps a more limited **new** option like `allow-span-to-cross-div` or something... in that it seems browsers do not care... maybe tidy could allow `<span>` to be a block-like tag, with this option **yes**, and thus **span** other blocks... \n\nJust an idea... feedback welcome... thanks...\n. No comments for a while, but after re-reading maybe there is a possible new option here... still waiting for more feedback... but meantime moving the milestone out... thanks...\n. @marcoscaceres thank you for the issue, and the PR fix #450... that is good to see - a problem, a link, and a solution at the same time...\n\nNow my reading of the link - https://www.w3.org/TR/preload/ - I can see - \n\n```\nW3C Working Draft 11 July 2016, \nand \nImplementers should be aware that this document is not stable....\n```\n\nSo my question is `Should we update HTML Tidy at this time?`\n\nIt certainly seems the W3C Validation service has no problem with this attribute...\n\nMaybe it could be implemented under a compile time switch of the form say `#ifdef IMPLEMENT_PRELOAD_AS` or something...\n\nAnd then there is the question, should we support the value enumeration, or as suggested here - accept any string?\n\n### But I strongly seek comments on what should be the Tidy update policy?\n\nShould Tidy try to follow **draft** W3C  specifications, like it seems the validator has done? \n\nOr should Tidy wait until the spec moves up the acceptance ladder?\n\n### Need help to decide!\n\nBut again @marcoscaceres, thanks for bringing up the issue... also look forward to your further thoughts...\n. @marcoscaceres thank you for your further feedback... I largely agree with you... especially about things **not** ever rising to `REC` status...\n\nAt this time I am inclined to accept your PR #450 as is. \n1. It is just a `link` attribute, and has no html display consequences... \n2. do not see the need to add an enum of values, but that could be added later, if desired...\n3. it does not seem worth adding another option, like `experimental` at this time for it...\n4. the W3C validator accepts it, regardless of actual browser support...\n\nBaring any further negative comments I will merge this over the next few days... thanks...\n. See discussion on #449 - thanks...\n. @maxfancourt thanks for the issue...\n\nI will let @Balthisar answer for his Tidy, but can certainly confirm that not putting the comment on a new line is certainly the default action of the latest **libTidy** 5.3.9 in `master`...\n\nI thought the option `--vertical-space yes` might do something, but found no option to change this behavior!\n\nCertainly, aesthetically speaking, it would also be ok to start the comment on a new line, and going back to the old SF release, 25 March 2009, it did just that... so it got changed some time later, but earlier than tidy5-4.9.14, circa 2015-02-10...\n\nBut in reality, is there anything wrong with the current tidy action? It is the beginning of a comment after all...\n\nSeek further comments... thanks...\n. @maxfancourt I think old tidy 2009 did this by always flushing that `<link ...` line, but that can add addition newlines, which some users did not like... so was removed...\n\nBut without getting into an option to control this behavior, the patch is relatively trivial -\n\n``` patch\ndiff --git a/src/pprint.c b/src/pprint.c\nindex a4f2aef..1d922c1 100644\n--- a/src/pprint.c\n+++ b/src/pprint.c\n@@ -2194,6 +2194,7 @@ void TY_(PPrintTree)( TidyDocImpl* doc, uint mode, uint indent, Node *node )\n     }\n     else if ( node->type == CommentTag )\n     {\n+        PCondFlushLineSmart( doc, indent ); // #450 - start comment on new line\n         PPrintComment( doc, indent, node );\n     }\n     else if ( node->type == RootNode )\n```\n\nJust a quick experiment... not fully tested...\n\n### As stated, seek further comments... thanks...\n. @AthanasiusOfAlex thanks for the issue... it seems you bring up two good **documentation** points -\n1. Bool tidyOptParseValue( TidyDoc tdoc, ctmbstr optnam, ctmbstr val );\n   - Set named Option value as a string.  Good if not sure of type.\n2. ctmbstr tidyOptGetValue( TidyDoc tdoc, TidyOptionId optId );\n   - Get current Option value as a string\n\nIt certainly seems the code comments in `tidy.h`, for these two functions, which are then put in the API documentation, leave a **lot** to be desired! ;=))\n\nI certainly agree, the first, `tidyOptParseValue` should make it clear that the `optnam` is a `string`, and **not** an enumerated `TidyOptionId`. Of course here we can see in `tidy.h` that the 2nd parameter is a `ctmbstr`, but agreed, the documentation could/should make that much clearer.\n\nAnd yes, the second, `tidyOptGetValue` does sort of imply it will return the option as a string, when in fact it will **only** return an option that is a `string`. In fact, the DEBUG build of libtidy has an `assert( opt && opt->type == TidyString );` which will abort the program if it is **not** a `string` type. \n\nIn the release it just returns the `.p` value of the particular `config.value[id]`, which may not be zero, so a `nullptr` test will **not** work, and who know what passing that returned value to `cout` will do...\n\nBut I am **not** too familiar to how `doxygen` converts these `tidy.h` code comments to API documentation, so hope you, or others can make very **specific** suggestions on how to change this/these... \n\nThat is a patch or PR would be great... thanks...\n. @AthanasiusOfAlex I have started to `experiment` with this API documentation change... and now can do more...\n\nI do **not** yet want to push it to the main API url, since we are **not** yet at the next release point, so I am using a `temporary` free rhcloud/openshift API URL...\n\nCheck out - http://tidy5docs-htacg.rhcloud.com/group__Configuration.html#ga0fbe23ab1e4ec374fa38e6f514617e4d - you may need to do a **refresh** to get the latest...\n\nBut please let me know what you think...\n\nAs I say, the actual `wording` of the API may need more massaging... and really **welcome** more thought on that, but it is a start of a change... and for other API items... thanks...\n\nOf course, such API documentation changes will only appear on the next `official` http://api.html-tidy.org/ when we make the **next** release, 5.4.0, but would really appreciate further feedback before that... thanks...\n. As we are about to issue a `release` **5.4**, and no change has yet been presented, can only move the milestone to `next` **5.5**.\n\nIn **5.5** we are expecting quite a number of documentation changes, and hopefully this will be included... thanks...\n. @zen0x90 yes, I too seem to remember having run into this problem in linux of a **missing** `uint`...\n\nWill look back over my stuff to find out what I did to solve it... \n\nMaybe some others will have a quick, better idea...\n\nOn another topic, but maybe related, why are you using `-std=C99`? Do you use `C99` declarations in your `clean.c`? Why do you not name it `clean.cxx`, then you should not need `C99(C11)` C extensions, which by the way are **not** supported in Windows MSVC compilers until the latest MSVC 2015...\n\nBut I am sure there is a simple explanation of this missing `uint` case... it has been in Tidy since its beginning... quite puzzling...\n. @zen0x90 thank you for your continued research, time and testing... this is good...\n\nYes, you seem to have found a **hole** in the `tidyplatform.h`, in that is does **not** correctly address certain `linux` 64-bit builds, and look forward to a patch or PR to address this...\n\nI am sure you will have noted the comment in there -\n\n```\n/* hack for gnu sys/types.h file which defines uint and ulong */\n```\n\nMy builds, of projects using `libtidy` in Ubuntu 14.04 LTS 64 bit linux do **not** have this problem...\n\nAs you can understand, it is very difficult to keep this tidy `platform` header up-to-date, and would really seek ways to avoid this continual update of that tidy `header`... it should not be necessary... to discover, and account for, every possible OS `type`...\n\nWhen you run `tidy -v`, what does it show?\n\nMaybe it could be included in a cmake configuration... that is search for a `<sys/types.h>` and set a variable `HAVE_SYS_TYPES_H`, and on this find/not found, include that file... or something...\n\nConcerning `C99`, I am sad that you do not seem to include `Windows` cross porting compatibility in your projects... Yes, you are in GNU/Linux 64 bits, but do you **not** want your code to be compileable in Windows? No problem... that is for sure, your choice...\n\nBut back to the **missing** `uint`, we **do** want tidy to be compileable in **ALL** systems, so what do you suggest? thanks...\n. @zen0x90 glad you found the solution, and as I thought, it is tied to this quasi `C99(C11)` standard?, absolutely **not** yet agreed for massive cross-porting of code...\n\nWhy some `gcc` developers think that it is a good idea to port some `C++` conventions, namely you can declare a new variable in certain contexts at any time, is quite beyond me ;=)) and do not quite see how this got mixed up with the declaration of a `uint` and `ulong`... that too is quite beyond me... but `c'est la vie`...\n\nAll declared function variables **must** be allocated off the stack of the function, whether they are declared at the top of the function, as in the K&R C standard, before any actual function code, or when ever the developer just thinks they needs them... \n\nIt is just a question of whether the compiler is willing to over look this late declaration or not... all variable just become an ASM offset into the stack... It **is** the agreed `standard` in C++...\n\nAnd as you understand, MS Windows compilers have been **very** late coming to this, what `laziness`? party ;=))\n\nBut very glad you found yet another **GNU** define, that puts things back to where they were a little, even when you choose `C99`... for what ever reason...\n\nI will try to find a place in our Tidy documentations to add the obscure `-D__GNU_SOURCE`, if you want to declare `C99`, and still use **`libTidy's`** C headers... \n\nAnd certainly hope you will consider a MS Windows port, probably still upwards of `40% plus` of the desktop market share in some stats, for your great app...\n\nReally, thank you for this issue, time. exploration, solution and close...\n. @HaleTom hi, it looks like to do not have `xsltproc` installed. It is needed to build the `tidy.1` man page...\n\nWhen I run `sudo make install` I see -\n\n```\npi@raspberrypi ~/Projects/tidy-html5/build/cmake $ sudo make install\n[ 49%] Built target tidy-static\n[ 50%] Built target tidy\nGenerate /home/pi/Projects/tidy-html5/build/cmake/tidy-help.xml\nGenerate /home/pi/Projects/tidy-html5/build/cmake/tidy-config.xml\nGenerate tidy.1\n[ 50%] Built target man\n[100%] Built target tidy-share\nInstall the project...\n-- Install configuration: \"Release\"\n-- Up-to-date: /usr/lib/libtidys.a\n-- Up-to-date: /usr/include/tidyplatform.h\n-- Up-to-date: /usr/include/tidy.h\n-- Up-to-date: /usr/include/tidyenum.h\n-- Up-to-date: /usr/include/tidybuffio.h\n-- Up-to-date: /usr/lib/libtidy.so.5.3.9\n-- Up-to-date: /usr/lib/libtidy.so.5\n-- Up-to-date: /usr/lib/libtidy.so\n-- Up-to-date: /usr/bin/tidy\n-- Installing: /usr/share/man/man1/tidy.1\npi@raspberrypi ~/Projects/tidy-html5/build/cmake $\n```\n\nDuring the cmake configuration and generation stage you should have seen -\n\n```\n-- *** NOTE: xsltproc NOT FOUND! Can NOT generate man page.\n-- *** You need to install xsltproc in your system.\n```\n\nMaybe these should be elevated to `warnings`? When it is installed the above two lines will be replaced with -\n\n```\n-- *** Generating man tidy.1 custom commands...\n```\n\nIn Ubuntu I guess `sudo apt-get install xsltproc` should do it... advise if there is still a problem... thanks...\n\nOn another note I note you have `-- Install configuration: \"\"`. You need to add `-DCMAKE_BUILD_TYPE=Release` to the cmake configuration and generation step, otherwise you are getting the default partial `Debug` (I think) version, which has development `asserts`. This is not really a problem, but it is better to explicitly set `Release`. \n\nWhat this does is it adds `-DNDEBUG` to the compiler options, which removes those `asserts`. You can use `-DCMAKE_VERBOSE_MAKEFILE=ON` to be able to **see** all the compile options. Conversely, adding `-DCMAKE_BUILD_TYPE=Debug` will add `-g` to the compiler options, and all the debug symbol will be included as well.\n\nThe second thing is you are installing into `/usr/local/.`, the cmake default. In my case I run cmake with `-DCMAKE_INSTALL_PREFIX=/usr` to install tidy into the general `/usr` space, but again no problem if you prefer `/usr/local/.`... works the same in most cases...\n\nYou will note there is a `build-me.sh`, which, if used, adds the above two options to `cmake`... \n\nI have made a strong **TODO** note to myself to find where to beef up the build documentation, certainly adding the `xsltproc` **prerequisite** to build the man page...\n\nHope this helps...\n. @HaleTom closed my TODO by beefing up the [README.md](https://github.com/htacg/tidy-html5/blob/master/README/README.md) - adding -\n\n```\n4. the `xsltproc` tool is required to build and install the tidy.1 man page.\n```\n\nCan you confirm this was the problem, and can this be closed... thanks...\n. @AthanasiusOfAlex thanks for the `Feature Request`\n\nIt seems a reasonable feature request, as a new option, to add this, styled depending on the document type detected, like `<meta charset=\"utf-8\">` for html5, especially since it seems the W3C validator **barks** at you if it is missing...\n\nMaybe the option could be say `--add-meta-charset`, or something... Boolean, default no...\n\nThere is an [OPTIONS.md](https://github.com/htacg/tidy-html5/blob/master/README/OPTIONS.md) which details the adding of an option... quite simple...\n\nWould certainly consider this addition, if you or others presented code... thanks...\n. @marcoscaceres, thanks for your offer to take this on, and for sure I will help where I can...\n\nAs mentioned [OPTIONS.md](https://github.com/htacg/tidy-html5/blob/master/README/OPTIONS.md) gives the 4 steps to do this... and we should discuss and decide here the values for 1, 2, and 3... my first suggestion is as follows, but am open to other ideas -\n1. **ID** - `TidyMetaCharset`\n2. **table** - MS, \"add-meta-charset\", BL, no, ParseBool, boolPicks \n3. **description** - \"This option adds a charset meta tag, appropriate to the document type, in the document head.\"\n\nAs stated, these are just quick, first thoughts, suggestions, and look forward to them being massaged...\n\nAs to part 4., using it in the code, take a look at [AddGenerator](https://github.com/htacg/tidy-html5/blob/master/src/lexer.c#L1678), in `lexer.c`. You could add a new say `TY_(AddMetaCharset)(doc)`, which does a similar thing - `FindHEAD`, and if found, search for, and maybe **fix** any existing meta charset entry, and return, or continue down and **add** a new one if none, inserting it in the node tree... \n\nNote the different styles, based on whether this is html5, xhtml, or a legacy document... and like the `TidyMark`, this could be called from `tidyDocCleanAndRepair()` in `tidylib.c`, if the option is **on**...\n\nLook forward to your code, either as a patch, or make a fork, add say a branch, and present it as a PR... thanks!\n. See WIP PR #458 \n. Since PR #458 has already been move to milestone **5.5**, doing likewise here...\n\nI hope you get the time to finish this great WIP soon... please ask if you need further help... thanks...\n. Just noted we have an older #361 which also has some good notes on this... the effort should be combined...\n\nI will look deeper into this in the coming days, since as stated, always prefer that tidy does **not** output invalid html...\n. @AthanasiusOfAlex, @marcoscaceres, @balthisar as agreed, further discussion on this **new** option `--add-meta-charset` should be moved from PR #458, back to here...\n\nI have continued with some testing, using [tidy-tests](https://github.com/htacg/tidy-html5-tests/) and find a few problems... \n\n 1. Tidy 5.5.20.I458 crashes on [case 1117013](https://github.com/htacg/tidy-html5-tests/blob/next/cases/testbase/case-1117013.html). You will note here that the attr.value can be **NULL**.\n 2. And @marcoscaceres did ask can one dereference a TidyBuffer to get a pointer. **No**, one must use the buf.bp member - a pointer to contents, but it can also be a **NULL**.\n\nBut these are **not** big problems, and easily addressed... \n\nBut this **regression** testing also showed that I think, at least initially, this option should default to **no**. Otherwise, when this option is eventually merged a considerable number of test cases would need to be reset... There might be a day when we do default this to `yes`, but **not** on first introduction... but am willing to be swayed on this... feedback welcome...\n\nAnd @balthisar, yes I **will** get around to setting up a `issue-456` branch, containing the current state of this WIP feature, so we can **all** work on it... I have already tested this, no problem, but have **one** quick question...\n\n@marcoscaceres what is the purpose of the two **new** files, `attrask.c` and `attrget.c`? They do **not** seem in any way included in the cmake build, or any other files, but maybe I have missed something... Simply **can they be deleted?*** Thanks...\n. @balthisar yes, thanks for legacy info... have dealt with that and merged @marcoscaceres branch `meta-charset` from his fork, to an `issue-456` branch, but no **fixes** applied at this stage... **but** did default the option to `no`...\n\nThe open issues identified at this stage are the 2 mentioned above, the addition of the two messages, replacing the `printf`, and some other decisions on what to do in case of a clash of encoding... at present there is only the warning. Maybe tidy should also **fix** the encoding...\n\nAlso at present I think if it finds a meta charset it does not warn, or change the type, when it conflicts with the current output doctype... but is this wrong anyway... need to research that...\n\nSo still some work to be done perhaps even before a PR is created...\n\nAny help appreciated... thanks...\n. @balthisar well I started to look at it and do some **fixing**, but then noted some more small problems...\n\nAlthough I had suggested using a TidyBuffer, it might not be appropriate since the string in the buf.bp is **not** guaranteed to be a zero terminated C string, so even code like `TY_(AddAttribute)( doc, metaTag, \"content\", (char*)buf.bp);` can **not** be used...\n\nIt may be possible to ensure it **is** zero terminated with something like `tidyBufAppend(&buf, \"\\0\", 1);` but need to **check** that... seems possible...\n\nAnyway, ended up pushing nothing....\n\nSo if you get a chance to look at it, at least removing the `printf` by creating appropriate messages, that would be most appreciated... thanks... not sure I can get back to it before next week...\n\nAnd then there is the question if an encoding mis-match **is** detected, should tidy **fix** it... or just **warn**... I would like a **fix** I think...\n\nQuite an interesting service as you get into it, with many choices... ;=))\n. @balthisar just a quick ping to say I did find time to work on this, and think I have solved **all** the problems... and maybe we do not need any new messages...\n\nHave prepared some tests, and am preparing a report, with still some questions to decide, but hope to push my results later today... just a heads up in case you also started looking at it...\n. @balthisar, @marcoscaceres first it seems a `TidyBuffer` can be used using the suggested `tidyBufAppend(&buf, \"\\0\", 1);`... that is good... and it would be trivial to always ensure the buffer append service added 1 extra byte, and always was zero terminated, but that is a separate issue...\n\nAs I prepared some test files, the first thing noted that Tidy has been silently correcting the output encoding of the `<meta http-equiv...>` tag, probably for years - did not check when the service `TY_(VerifyHTTPEquiv)(doc, head)` service was added - and imagine my surprise that by the time we reached the **new** service `TidyMetaCharset(doc)` the encoding on **this** particular tag was always `correct`... \n\nOf course we still have to correct the `<meta charset=\"value\">` tag, but like the `http-equiv` change, maybe we do not need to `warn`. But on the other hand do not see why not! Tidy is modifying a tag, and as other comments here and there, maybe it should be a `warning`, or maybe at least an `Info`. \n\nBut if added here then should also be added if `VerifyHTTPEquiv` makes such a modification. Seek feedback on this...\n\nSo now I am thinking this **new** service should always be called, to **fix** the `<meta charset=\"value\">` tag, and only if `--add-meta-charset yes` would we add this tag if **none** existed in the document. And this could mean we in fact eliminate the `VerifyHTTPEquiv` service, and do it all here. Again seek feedback on this?\n\nJust 6 tests files added at this time, covering most situations...\n\n 1. [in_456-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_456-1.html) - html5, no charset meta, add if option yes - no warn\n 2. [in_456-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_456-2.html) - html4, no charset meta, add if option yes - no warn\n 3. [in_456-3.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_456-3.html) - xhtml5, with meta, nothing changed - no warn\n 4. [in_456-4.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_456-4.html) - html4, 2 charset meta, correct one and discard one - warn\n 5. [in_456-5.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_456-5.html) - html5, correct meta to utf-8 - no warn\n 6. [in_456-6.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_456-6.html) - html5, 2 meta, correct one, discard one - warn\n\nTest 4 is the same as [case 1117013](https://github.com/htacg/tidy-html5-tests/blob/next/cases/testbase/case-1117013.html), but now no **crash**...\n\nAt this stage have coded for no warning on meta addition, if option on, nor on modification, as before, but warn on discards, and depreciated `VerifyHTTPEquiv` just with `#if 0 ... #endif` at this stage...\n\nNow set to always calling this **new** service `TidyMetaCharset`... to potentially silently correct each meta type, as before, and **only** add a missing meta charset if requested, again silently fixing the document...\n\nAlso maybe this **new** service should be moved out of `lexer.c`, and added to `clean.c`, where the old service resided...\n\nHope others will get the chance to checkout this `issue-456` branch, and take it for a spin... it feels quite complete, but needs testing... thanks...\n. With latest commits, moved the **new** `TidyMetaCharset` to `clean.c|h`, out of `lexer.c|h`, and avoid doing any head cleaning if just showing body only...\n. **Arrgh**! just got around to `regression` tests... number of problems detected... \n\nImmediate issue if the use of in-place `tmbstrtolower`, which permanently alters the `attr` string... must either copy, or avoid...\n\nWorking on it... all look solvable... . @balthisar thanks for the #554 reminder, and indeed one of the remaining issues is case related... but this is the case of the `=value`, **not** in the actual `attribute` name...\n\nHave effected some code changes, but there remains three (3), outstanding `regression` issues -\n\n 1. 378b - But this seems related to a recent change of `--fix-uri no`\n 2. 586562 - missing space - expects `content=\"text/html; charset=iso-8859-1` - results `\"text/html;charset=iso-8859-1\"`!\n 3. 676205 - expects `iso-8859-1`, results `ISO-8859-1` - ie changed case of content `=value` only.\n\n**Case 1: 378b:** This issue is about a utf-8, e acute, `0xC3 0xA9`, in a HREF. The **expects** has `No warnings or errors were found.`, but now 5.5.21.I456-2 does issue a `warning`...\n\nOk, that change was very recent, #378, so maybe I need to rebase/merge `next` into `issue-456`... that is bring it up to 5.5.24, then add all `I546` on top... **BUT** somehow that **always** gets me in a big **mess**, with the final `issue-456`, containing first all @marcoscaceres commits, **and** my later commits repeated **multiple** times in the **git log**... seems/feels very **bad**!\n\nHow can I avoid this? What should I do? @balthisar I sometimes see you creating a **new** branch?\n\nIt would be really **great** if someone could checkout `issue-456` branch, and kick it forward to 5.5.24, or **later** if that, push it, and advise the **exact** steps taken, so I can do this **next** time... thanks...\n\n**Case 2: 586562:** This `space` is **missing** in the `tesbase\\case-586562.html`, but is present in the `testbase-expects\\case-586582.html`. It seems the **old** retired service `VerifyHTTPEquiv` made sure there was a **space**, while the **new** `TidyMetaCharset` preserves the input...\n\nNow this case appears generated by the **old** `Microsoft FrontPage 4.0`, which obviously felt there was no need for this space... and I too think it is optional, but would be nice to have...\n\nAs stated, need to recheck what `VerifyHTTPEquiv` was doing, and see if it is easy to get `TidyMetaCharset` to do the same... or else we just update the `expects`? \n\nWould appreciate feedback on this...\n\n**Case 3: 676205:** What is the correct **case** for the meta http-equiv contents `value`? \n\nLooking at say a [IANA REF](https://www.iana.org/assignments/character-sets/character-sets.xhtml) most are in upper case, but some are mixed. Tidy's internal `enc2iana[]` table is effectively **all** lowercase.\n\nTestbase input is uppercase - `ISO-8859-1`, testbase-expects is lowercase - `iso-8859-1`, our **new** results preserves the uppercase of the input...\n\nThis would **not** be trivial change in `TidyMetaCharset`, to **not** use `tmbsubstr`, which in effect then uses `tmbstrcasecmp`, so does **not** flag the uppercase input as a **mismatch**... \n\nThere used to be two `tmbsubstrncase` **and** `tmbsubstr`, but at some point the former was commented out, and the latter made case-insensitive...\n\nThe `IANA` reference clearly states - **no distinction is made between use of upper and lower case letters.** - so again we could just update the `expects`... \n\nI tend towards using the users input, since it is **not** wrong, but on the other hand we could use tidy's lowercase table for general consistency...\n\nAgain seek feedback on this... \n\nSo far I have **not** pushed my **fixes**, in `clean.c` - they are quite messy at this point, and need to be cleaned up... but below attach the messy diff, just to see my thinking, and some questions raised in comments...\n\nBut would really like **Case 1: 378b:** to drop off my radar first... any help getting there with git magic help would be **most** appreciated... thanks...\n\n```diff\ndiff --git a/src/clean.c b/src/clean.c\nindex b4e9a38..026bfe4 100644\n--- a/src/clean.c\n+++ b/src/clean.c\n@@ -2309,8 +2309,8 @@ Bool TY_(TidyMetaCharset)(TidyDocImpl* doc)\n     Node *prevNode;\n     TidyBuffer buf;\n     TidyBuffer charsetString;\n-    tmbstr httpEquivAttrValue;\n-    tmbstr lcontent;\n+    /* tmbstr httpEquivAttrValue; */\n+    /* tmbstr lcontent; */\n     tmbstr newValue;\n     /* We can't do anything we don't have a head or encoding is NULL */\n     if (!head || !enc || !TY_(tmbstrlen)(enc))\n@@ -2330,7 +2330,7 @@ Bool TY_(TidyMetaCharset)(TidyDocImpl* doc)\n     tidyBufAppend(&charsetString, \"charset=\", 8);\n     tidyBufAppend(&charsetString, (char*)enc, TY_(tmbstrlen)(enc));\n     tidyBufAppend(&charsetString, \"\\0\", 1); /* zero terminate the buffer */\n-                                            /* process the children of the head */\n+    /* process the children of the head */\n     for (currentNode = head->content; currentNode; currentNode = currentNode->next)\n     {\n         if (!nodeIsMETA(currentNode))\n@@ -2339,10 +2339,10 @@ Bool TY_(TidyMetaCharset)(TidyDocImpl* doc)\n         httpEquivAttr = attrGetHTTP_EQUIV(currentNode);\n         if (!charsetAttr && !httpEquivAttr)\n             continue;   /* has no charset attribute */\n-                        /*\n-                        Meta charset comes in quite a few flavors:\n-                        1. <meta charset=\"value\"> - expected for (X)HTML5.\n-                        */\n+        /*\n+            Meta charset comes in quite a few flavors:\n+            1. <meta charset=\"value\"> - expected for (X)HTML5.\n+         */\n         if (charsetAttr && !httpEquivAttr)\n         {\n             /* we already found one, so remove the rest. */\n@@ -2355,8 +2355,8 @@ Bool TY_(TidyMetaCharset)(TidyDocImpl* doc)\n                 continue;\n             }\n             charsetFound = yes;\n-            /* Fix mismatched attribute value */\n-            if (TY_(tmbstrcmp)(TY_(tmbstrtolower)(charsetAttr->value), enc) != 0)\n+            /* Fix mismatched attribute value - note case insensitive match */\n+            if (TY_(tmbstrcasecmp)(charsetAttr->value, enc) != 0)\n             {\n                 newValue = (tmbstr)TidyDocAlloc(doc, TY_(tmbstrlen)(enc) + 1);   /* allocate + 1 for 0 */\n                 TY_(tmbstrcpy)(newValue, enc);\n@@ -2367,11 +2367,16 @@ Bool TY_(TidyMetaCharset)(TidyDocImpl* doc)\n                 TidyDocFree(doc, charsetAttr->value);   /* free current value */\n                 charsetAttr->value = newValue;\n             }\n+#if 0 /* 000000000000000000000000000000000 not sure about this \n+                but have read certain documents where the charset\n+                should be present in the first 1024 bytes of the \n+                doc... and what about likewise for the html4 form? */\n             /* Make sure it's the first element. */\n             if (currentNode != head->content->next) {\n                 TY_(RemoveNode)(currentNode);\n                 TY_(InsertNodeAtStart)(head, currentNode);\n             }\n+#endif /* 00000000000000000000000000000000 */\n             continue;\n         }\n         /*\n@@ -2391,24 +2396,30 @@ Bool TY_(TidyMetaCharset)(TidyDocImpl* doc)\n                 currentNode = prevNode;\n                 continue;\n             }\n-            httpEquivAttrValue = TY_(tmbstrtolower)(httpEquivAttr->value);\n-            if (TY_(tmbstrcmp)(httpEquivAttr->value, (tmbstr) \"content-type\") != 0)\n-                continue;   /* is not 'content-type' */\n+            /* httpEquivAttrValue = TY_(tmbstrtolower)(httpEquivAttr->value); */\n+            if (TY_(tmbstrcasecmp)(httpEquivAttr->value, (tmbstr) \"Content-Type\") != 0)\n+                continue;   /* is not 'Content-Type' */\n             if (!contentAttr->value)\n             {\n+#if 0 /* 00000000000000000000000000000 \n+                case 1117013 (in_456-4) keeps this 'content=\"\"'! But WHY? */\n                 prevNode = currentNode->prev;\n                 /* maybe need better message here */\n                 TY_(ReportError)(doc, head, currentNode, DISCARDING_UNEXPECTED);\n                 TY_(DiscardElement)(doc, currentNode);\n                 currentNode = prevNode;\n+#endif /* 0000000000000000000000000000 */\n                 continue;\n             }\n             /* check encoding matches\n             If a miss-match found here, fix it. previous silently done\n             in void TY_(VerifyHTTPEquiv)(TidyDocImpl* doc, Node *head)\n             */\n-            lcontent = TY_(tmbstrtolower)(contentAttr->value);\n-            if (TY_(tmbsubstr)(lcontent, charsetString.bp))\n+            /* lcontent = TY_(tmbstrtolower)(contentAttr->value); \n+               Note: 'tmbsubstr' uses 'tmbstrcasecmp`, so 'ISO-' \n+               will match 'iso-'! Is this desired?\n+               see cases 586562 and 676205 */\n+            if (TY_(tmbsubstr)(contentAttr->value, charsetString.bp))\n             {\n                 /* we already found one, so remove the rest. */\n                 if (charsetFound)\n@@ -2446,7 +2457,8 @@ Bool TY_(TidyMetaCharset)(TidyDocImpl* doc)\n         }\n         /*\n         3. <meta charset=\"utf-8\" http-equiv=\"Content-Type\" content=\"...\">\n-        This is generally bad. Discard and warn.\n+           This is generally bad. Discard and warn.\n+           Not so sure about this, but seems a reasonable idea?\n         */\n         if (httpEquivAttr && charsetAttr)\n         {\n```\n\nAny and all feedback very welcome... this seems a good option, but important to get it right... thanks\n. Updated the `issue-456` branch, ie merged `next`, and created a WIP PR #565...\n\nBut this is still a **WIP**!\n\nSomehow, I am getting **stale** on this... I just can **not** seem to get it right...\n\nWith the last desperate commit, reusing the **old** service if the option is **off**, which it is by default, so I still use that service, but should not have to...\n\nBut still about 3 regression tests **fail** in the `diff`... the diff shows a change in some message encoding when showing an attribute value... cases 427664-1, 427664 and 427672, where a value `1/2` is now output as `122`... so maybe this `difference` is **nothing** to do with what this issue is about... maybe a previous commit... more checking needed... \n\nAny help appreciated... maybe a new pair of eyes will quickly see what I am **missing** ... thanks...\n. Updated the `issue-456` branch, ie merged `next`, to pick up the **fix** for #395, PR #564... now at least the `issue-456` branch passes the `regression` tests - **PHEW** - which it should with this options default `no`...\n\nWill try to find the `energy` to continue with this PR #565... it does seem **so** close... but as always, any help appreciated... at least reading the code comments, and commenting... thanks...\n. @balthisar no problem... hope it was a great **adventure**...\n\nIt seems I was shooting myself in the foot with a stupid reversed **logic** error... BAH!\n\nHave fixed that, and now with the default `no` for this option, it 100% passes the regression tests...\n\nOf course, with this option `yes`, lots of tests now get a **new** meta charset, so there is lot of difference, as expected, since many tests did not have one before... but still to fully check that output - like seems I saw one case where the wrong type of meta was added... but need to study more...\n\nSo this has taken a good step forward... have now 100% replaced the previous service, with the **new** single service, which can be discussed and refined...\n\nAs suggested have put a number of comments in the code, and will try to find time to enumerate and discuss them here... trying to make the right choices... so when you get the chance... thanks...\n. This issue is moving forward, but there are a numbers of **QUESTIONS** which I seek feedback on...\n\nThere seems no problem when there is **no** existing meta charset in the document. Simply add one of the appropriate type, and encoding value, namely -\n\n - html5 `<meta charset=\"utf-8\">`\n - others `<meta content=\"text/html; charset=iso-8859-1\">`\n\nOops, but that does raise a question. I now believe the **others** should be -\n\n```\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n```\n\nBut that's an easy **fix** in the new **single** service...\n\nThe questions pile up when there is an **existing** meta charset, of one type or the other, or indeed more than one... so -\n\n 1. Multiple charset declarations\n\nWhile have never actually seen this in RL, it could happen, and Tidy needs to choose what to do about it.\n\nAt present it just discards the 2nd or later meta... just keeping the first...\n\nBut if we do choose to **discard**, and warn about the discard, a further improvement would be to discard those that do **not** match the doctype...\n\n 2. Charset with wrong encoding\n\nObvious Tidy should **fix** this, but this could involve, lead to the next case...\n\n 3. Charset encoding of wrong type for doctype\n\nAt present nothing is done about this...\n\nBut to be perfectly correct, Tidy should **change** the meta to a declaration that matches the doctype...\n\n 4. To warn or not, or at least info\n\nPresently tidy does what it does in other case - **silently fixes problems** - As has been addressed, discussed, in several other issues, maybe there should be at least a suppressible `Info:` message if it **adds** or **modifies** a charset meta...\n\nThen there is the strange test case 1117013.html which has what is really a mal-formed meta -\n\n```\n<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"\">\n```\n\nThe original new service was coded to discard this, but have commented it out for now, due to conforming to the test `expects`... But as I think about this more, I do think this should be **discarded**, and the expects **adjusted** accordingly...\n\nProbably some of these issues could be decided re-reading the W3C specs, and maybe by presenting a sample to the W3C validator, and choose an action accordingly...\n\nAs mentioned above I have already pushed 6 test cases - `in_456-[1..6].html` - to my [test](https://github.com/geoffmcl/tidy-test) repo. Maybe these could be the basis of tests eventually added to the [tidy-tests](https://github.com/htacg/tidy-html5-tests) repo...\n\nWith this option set `yes`, each need an `expects` created, and that output validated... tedious work... any help in this process would be most appreciated... thanks...\n\nMaybe more tests need to be added to specifically address the above questions, again matching with W3C specs, and validated... again help and feedback appreciated... thanks...\n\nPS: One unrelated minor quibble. Believing that this meta should be declared as early as possible in the document, I now do **not** like that the `<meta name=\"generator\" content=\"...Tidy...\">` gets put above this... but maybe a later small issue...\n. @balthisar the above push adds an `Info:` type message when Tidy adds an appropriate `<meta charset=...` node to the document, because this option was `yes`, and none were found...\n\nIt also **fixes** the addition of the `http-equiv=\"Content-Type\"` attribute noted above...\n\nMoving forward slowly, hopefully... but look forward to **feedback**... thanks...\n. @balthisar the above push adds an `Info:` type message when Tidy modifies, corrects, replaces the `charset` value with the current output encoding...\n\nAs mentioned in #561, leveraged an existing `BAD_ATTRIBUTE_VALUE_REPLACED`, creating a **new** `ATTRIBUTE_VALUE_REPLACED` message, but in the `ReportAttrError` function, `switch (code)` tumble created a message with `TidyInfo`... This is manageable but messy...\n\nAnd while it gives good info to the user, it does not say what it replaced it with... but is ok... I suppose... tests `in_456-5.html` and `in_456-6.html` exercise this new message... which can be suppressed with `--show-info no` option...\n\nTesting and feedback welcome... thanks...\n. To fully **maintain** backward compatibility, add **new** option `--show-meta-change Bool`...\n\nIn the past Tidy fixed the `<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">` without showing this **fix**... a **silent** change... not **always** liked, but a fact...\n\nThis option, default to `no`, maintains that compatibility, but **not** for the HTML5 charset `changes`, or `addition`, which are **always** reported as an `Info:` type message... which can be suppressed by `--show-info no`...\n\nWith this default option `no`, **no** regression test is changed... **all** pass, 100%...\n\nThis **new** option `--add-meta-charset` now feels complete, see PR #565\n\nAs stated, testing and feedback welcome on this `issue-456` branch... thanks...\n. @MartinPerry thanks for the issue. I started looking at this before you edited the post, but ok you have remove the `random` loss of a `<TD>` node, but still think tidy somehow misses the closing `` tag... Is that it?\n\nI constructed an `in_457-1.html` sample -\n\n[in_457-1.html.txt](https://github.com/htacg/tidy-html5/files/504993/in_457-1.html.txt)\n\nCut your code into my [tidy-tree.cxx](https://github.com/geoffmcl/tidy-test/blob/master/src/tidy-tree.cxx) test sample code, and can not find any problem using the latest `5.3.11 (2016.09.11)` master branch code...\n\nRunning `tidy-tree` on my sample there does not seem a problem...\n\nMy `dumpNode` reports 49 nodes, and so does your `IterateNode` seems to be doing the same... log output -\n\n[temptree.txt](https://github.com/htacg/tidy-html5/files/504994/temptree.txt)\n\nSpecifically note -\n\n```\nR=5 C=1: Returning starttag node  stream\nR=5 C=48: Returning lex-cdata TextNode [<!--some...ment -->]20 lexer\nR=5 C=68: Returning endtag node <script> stream\n```\n\nSorry, can not seem to duplicate the problem. Am I missing something here? Please advise...\n. @MartinPerry yes, that is correct. **NO** `end tags` are kept in the internal tidy node tree... none... they are **all** discarded...\n\nThey can only be **implied** by the fact that there are no more children on a node... if you see what I mean...\n\nSo after dealing say with the `<script>` tag, with one child, text, it ends, as you can see, by the loss of the `indent` in my log, which is where the end tag, if needed for that tag, needs to be added... before the StartTag body...\n\nAnd look at say nodes 9 to 14, like -\n\n```\n  Node:9: body \n    Node:10: table \n      Node:11: tr \n        Node:12: td \n          Node:13: font \n            Node:14: Text (6) \n```\n\nSo at this point in the iteration of the node tree, if that was the end of data, we would need to close 5 open tags, well actually 6, so in this case would need to add -\n\n```\n          </font>\n        </td>\n      </tr>\n    </table> \n  </body>\n</html>  \n```\n\nTidy has an option `--hide-endtags`, Boolean, def no, and some `optional` implied end tags would not be output...\n\nOf course, some tags, like `meta`,... do not have an end tag, and if correct output is expected from a tidy node iterator, you have to know those... see the quite complicated code in `pprint.c`...\n\nHope this make the situation clear ;=)) but understand this may not be what you expected...\n\nBut it depends on exactly what you are trying to achieve with your code... feel free to ask more question, and I will help if I can...\n. As we are about to `release` **5.4**, and there has been no further feedback in 4 months or so, am closing this...\n\nPlease feel free to -re-open, or file a new issue... thanks...\n. @marcoscaceres, @garvankeeley, sorry been busy on other things for a few days...\n\nHave now had a chance to review the changes so far, and in general most looks good, but there are a few issues to be addressed...\n1. memory allocation\n2. C89 vs C99(11?)\n\nThe tidy library uses very indirect [Memory Allocation](http://api.html-tidy.org/tidy/tidylib_api_5.2.0/group__Memory.html). This allow **`libtidy`** users the ability to provide their own memory allocation and failure mechanisms. \n\nThis is important when **`libtidy`** is embedded in bigger application like say perl, php, etc, where that application may want to deal with memory allocation/reallocation failure more calmly than just aborting...\n\nSo this means there will be no malloc/calloc/free in the library, except in the default alllocators... Please change to using this mechanism... or maybe use a stack buffer, if we are sure of the maximum needed...\n\nWhile it maybe nice to apply the C99(11?) compiler standard to **`libtidy`**, this has not yet been done. I think you can add the switch `-std=c89` to gcc to set it back to that mode, and I think you will find the your lexer.c code will not compile.\n\nIn Windows I think any compiler before msvc140 (2015) will also bark at this... and in fact issue very difficult to understand error messages, like when using msvc100 -\n\n```\n  ..\\..\\src\\lexer.c(1692): error C2143: syntax error : missing ';' before 'type' [F:\\Projects\\tidy-html5-charset\\build\\win64\\tidy-static.vcxproj]\n...\n  ..\\..\\src\\lexer.c(1694): error C2065: 'node' : undeclared identifier [F:\\Projects\\tidy-html5-charset\\build\\win64\\tidy-static.vcxproj]\n... and many more like this, ending with -\n    42 Warning(s)\n    79 Error(s)\n```\n\nIn pure K&R `like` C, which **`libtidy`** is, you can **not** intermingle variable declarations, and code. All variable declaration must come before `any` code. And that includes `for` loops, like `for (Node *node = head->content;...`...\n\nAnd while inline comments, ie `//`, are allowed (I think) in `c89` we do not use them in **`libtidy`** yet. Again I think you can add `-ansi -pedantic`? to gcc, to show these as an error. And am sure there is a similar switch for msvc in windows...\n\nSo while it may be time we discussed these changes for **`libtidy`**, that should be a separate discussion, and certainly not part of this PR. We do have a small [CODESTYLE](https://github.com/htacg/tidy-html5/blob/master/README/CODESTYLE.md) document, which certainly needs to be filled out more, but it is a start... As stated there, look at the current library coded in general for more...\n\nAnd while this is still a WIP, which I understand, we have to eventually remove the `printf` statements, replacing them with the usual **`libtidy`** warning/error message system... which perhaps includes enumerating a new value, and adding the english output message, which can then be later translated...\n\nFinally, when this is all sorted out, I would like it to be a clean PR, with very little internal history of change, but can help with that clean up when we get to that...\n\nSo as stated, really thanks for the effort and time. In general it all looks good. I may get some time this weekend to help further in this great effort... and hope you will keep going... you seem close... thanks...\n. See issue #456 for initial discussion...\n. Sorry for the extra noise, but just `experimenting` with the newly offered `review` process...\n. @marcoscaceres, continued on with my reviewing a little, using a C99 compatible compiler, and found a memory **bug** in these lines [1768-1770](https://github.com/htacg/tidy-html5/pull/458/files#diff-92587e94259bcadd0c463ae6237c5ecfR1768).\n\nYou are adding an attribute and **value** with `TY_(AddAttribute)( doc, node, \"content\", \"text/html; charset=\");`, but the `value` buffer now has the length `\"text/html; charset=\"` + 1, and you can **not** do a following `TY_(tmbstrcat)(contentAttr->value, enc);`...\n\nThat would lead to a buffer overrun, which my msvc140 flags, when this buffer is later freed, at program exit...\n\nYou have to give the full `content` value to `AddAttribute`, so you need to prepare that **full** value, before that call... but I like your correct switch on `HTMLVersion` document type...\n\nAnd in this case, where you need a buffer to prepare the full value string, and the earlier case where you use `calloc/free`, why not use a Tidy Buffer, where you have functions like `tidyBufAppend` which will automatically grow the buffer to contain the final full string...\n\nAnyway running out of time today to continue with more now... So far have only tried samples with no current meta charset... Do want to build up some samples where there is already such a meta, and check the code that attempts to change this if not the correct type... be back soonest...\n. @marcoscaceres,  in just a few more minutes, after declaring `TidyBuffer buf;` right at the top of the `TidyMetaCharset(doc)` function, c89 style ;=)), tried out some buffer code per the following patch -\n\n``` patch\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 0a48e53..48005b4 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -1682,6 +1682,7 @@ Node *TY_(FindBody)( TidyDocImpl* doc )\n  */\n Bool TY_(TidyMetaCharset)(TidyDocImpl* doc)\n {\n+    TidyBuffer buf;\n     Node *head = TY_(FindHEAD)( doc );\n     ctmbstr enc = TY_(GetEncodingNameFromTidyId)(cfg(doc, TidyOutCharEncoding));\n     Bool charsetFound = no;\n@@ -1765,9 +1766,11 @@ Bool TY_(TidyMetaCharset)(TidyDocImpl* doc)\n             break;\n         default:\n             TY_(AddAttribute)( doc, node, \"http-equiv\", \"content-type\");\n-            TY_(AddAttribute)( doc, node, \"content\", \"text/html; charset=\");\n-            AttVal *contentAttr = TY_(AttrGetById)(node, TidyAttr_CONTENT);\n-            TY_(tmbstrcat)(contentAttr->value, enc);\n+            tidyBufInit(&buf);\n+            tidyBufAppend(&buf, \"text/html; charset=\", 19);\n+            tidyBufAppend(&buf, enc, TY_(tmbstrlen)(enc));\n+            TY_(AddAttribute)( doc, node, \"content\", buf.bp);\n+            tidyBufFree(&buf);\n     }\n     TY_(InsertNodeAtStart)( head, node );\n     return yes;\n```\n\nAnd it seems to work fine... hope this helps...\n. @marcoscaceres how are things going with this?\n\nNo problem about the timing, but since we are headed for a `5.4` release soon, moving this out to `5.5`...\n\nCan I help with anything more... thanks...\n. @marcoscaceres sorry to hear you are not finding the time to work on this ;=((\n\nI have pulled your fork, did a **rebase** to current 5.5.20 tidy `next`, actually only 3 **conflicts**, easily solved... and now have a `meta-charset` branch that is 163 commits ahead of **your** fork origin... I could push these if I had commit rights on your repo...\n\n**BUT** we probably need to close, remove the current PR #458, since this is a merge to `master`. Since then we have moved all development to the `next` branch and any/all pull requests now need to be against that `next` default branch...\n\nI have built a tidy version **5.5.20.I458** using your now updated fork code...\n\nNow I have started checking your **new** service, `TY_(TidyMetaCharset)(doc)`, using the 4 scenarios listed there -\n\n   1. if there is no meta charset, it adds one.\n   2. if there is a meta charset, it moves it to the top if HEAD.\n   3. if it doesn't match the output encoding, warn about that.\n   4. if there are duplicates, discard them.\n\nIn my first test html5 file [in_458-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_458-1.html), which has no `meta`, your 5.5.20.I458 correctly adds `<meta charset=\"utf-8\">`, unless I add `--add-meta-charset no`, so it seems 1. is ok for HTML5++...\n\nMy next test file is `HTML 4.01` [in_458-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_458-2.html), which has no `meta`, your 5.5.20.I458 correctly adds `<meta content=\"text/html; charset=utf-8\">`, unless I add `--add-meta-charset no`, so it seems 1. is ok for HTML4--...\n\n**I have still to construct test files to test 2..4 combinations** ... but this is a **good** start...\n\nBut of course I note that service still has 2 **printf**, and tidy messages need to be added to replace these...\n\n```\n    if(TY_(tmbsubstr)(lcontent, (ctmbstr) &charsetString))\n        printf(\"WARN ABOUT CLASH: %s \\n\", contentAttr->value);\nand\n    if(httpEquivAttr && charsetAttr)\n        printf(\"WARN ABOUT HTTP EQUIV AND CHARSET ATTR! \\n\");\n```\n\nAnd then **fully** test all the other combinations...\n\nNow yes, I could cut all these **changes** into current tidy `next`, or probably a branch, and **add** the two missing messages, and do some more testing, but then your name on the commits would be lost... \n\nOf course I would attribute the changes to you in the commit comments, but that is **not** the same thing... I would like to try to preserve your commits...\n\nBut, as stated, I would need commit access to your repo to do that, and to repeat, the first thing is to delete/close this current PR since that is against `master`... A new PR against `next` is needed...\n\nSo this seems **so close to completion**... what should we do next? how can I help? what little time can you offer? thanks...\n\nPS: As I am suggesting we **must** close this, maybe we can move the discussion back to the **open** #456, which follows on from the closed #361...\n. **NOTE** - All discussion moved to #456 ... thanks...\n. **NOTE** created an `issue-456` branch, see #456, to continue work on this option... so closing this...\n\nBut @marcoscaceres again thanks for your efforts in this regard... and certainly hope you find the time to work on this or other parts of Tidy...\n. @fgeek I tested the bugs.html, from our direct exchange, and now the above file, and **yes**, tidy gets stuck in a parsing loop... still in process of tracking it down exactly... and thanks for bringing it here, and adding a test file... that makes testing easy...\n\nBeing only a single process, I did not see `uncontrolled resource consumption`, `resource exhaustion`... the cpu usage rose, but capped at about 20-50%, saw no significant memory increase, and still to check stack space... but agree these are **bad** signs... \n\nS/w should **never** get `stuck` in a **forever** loop ;=))\n\nAnd must look up some recent similar problems when parsing sort of random binary data streams, and what was decided, done there... your files certainly have interesting sequences...\n\nI remember one option was to simply abort, and return error, if say zero(s) found, or other bytes, not part of the input charset, but I think in that case, a solution was found... again need a little time to re-read all that... maybe some others can remind me...\n\nBut, yes. in general this is a **bug** that we would like to **fix**... tidy just should not have a problem with any random input byte stream... any code, patches, suggestions welcome... thanks...\n. @fgeek some back reading, and found -\n\nIssue #341 was about some allocated memory, but it was there that there was some discussion on aborting the parsing in certain binary file cases... related, but not the same...\n\nThere is another binary file mentioned in #432... but again different case...\n\nWill get back to trying the exactly understand the sequence that puts tidy into a **fatal** tail spin... thanks...\n. @fgeek ok, found a problem in some code I added circa 20150201, Issue #166, v.4.9.6... It needs to check every node, but with the current code, that can be tens, hundreds, if not thousand, exponentially growing, checking each node multiple, multiple times... and potentially consuming heavy stack space...\n\nHave **fixed** the code, and now tidy has no problem with either of your samples... the patch is -\n\n``` patch\ndiff --git a/src/parser.c b/src/parser.c\nindex 4fb7a8c..30a9911 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -3851,7 +3851,15 @@ Bool TY_(FindNodeWithId)( Node *node, TidyTagId tid )\n     {\n         if (TagIsId(node,tid))\n             return yes;\n-        for (content = node->content; content; content = content->content)\n+        /*\\ \n+         *   Issue #459 - Under certain circumstances, with many nodes, this use of\n+         *   'for (content = node->content; content; content = content->content)'\n+         *   would produce a **forever** circle, or at least a very extended loop...\n+         *   It is sufficient to test the content, if it exists,\n+         *   to quickly iterate all nodes. Now all nodes are tested only once.\n+        \\*/ \n+        content = node->content;\n+        if (content)\n         {\n             if (TY_(FindNodeWithId)(content,tid))\n                 return yes;\ndiff --git a/version.txt b/version.txt\nindex 9c3783d..f9c3f12 100644\n--- a/version.txt\n+++ b/version.txt\n@@ -1,2 +1,2 @@\n-5.3.11\n-2016.09.11\n+5.3.12\n+2016.10.14\n```\n\nWith it, each node in the tree is now only checked once... should be very quick, and not consume much stack space... bug squashed?\n\nI will try to get around to pushing this, after some more testing, but meantime maybe you could apply the patch, and re-test tidy v.5.3.12... thanks...\n. @fgeek thanks for the `response` comment, but took me `weeks` to get to the push ;=((\n\nHope version 5.3.12 meets those needs...\n\nThanks again for the report...\n. @marcoscaceres I agree 100% with this/these options for gcc/clang compilers... that support them...\n\nThe current CMakeLists.txt has two places where these options can be added... \n\n```\nif(CMAKE_COMPILER_IS_GNUCXX)\n    set( WARNING_FLAGS -Wall )\nendif(CMAKE_COMPILER_IS_GNUCXX)\n\nif (CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\") \n   set( WARNING_FLAGS \"-Wall -Wno-overloaded-virtual\" )\nendif() \n```\n\nOr a third, ...\n\n```\nif(WIN32 AND MSVC)\n    # note dual, in Windows, and using MSVC...\nelse()\n    # add any gcc flags\nendif()\n```\n\nReally need help in setting the correct `gcc` flags,\nas @arnaud always had in **his** build scripts... is it just the 2\nflags - `-std=c89 -pedantic` - to be added? \n\nWelcome a patch, PR, ... on this gcc issue...\n\nConcerning Windows/MSVC there are no `-std=...` flags, that\nI know of... as the msvc advanced it supported, more to c11 \nthan before... seems msvc140 fully supports `c11`?!?!\n\nBut I remember, from somewhere, there may be a MSVC flag \nto treat the file as `pure` 'C'... at least as I remember,\nin the early MSVC builds, it too would flag a warning about \nat least the use of `\\\\` inline comments...\n\nSome help in finding this `flag` again would be appreciated...\n\nSo, yes, I agree `CMAKE_C_FLAGS` should probably have a default,\nplease help us in getting there... thanks...\n. @marcoscaceres sorry for the delay, but it took me some time to get around to more `testing`, particularly in linux... used Ubuntu 14.04, gcc 4.8.4, Ubuntu 16.04, gcc 5.4.0, and RPI2, Raspbian 8.0 jessie, gcc 4.9.2...\n\nPresently tidy `master` 5.3.12 **compiles** cleanly in the above systems, as it does in windows...\n\n## Windows and MSVC versions\n\nIn MSVC, as I understand it, some c99/c11 changes/features were supported quite a while back. Some more were added in MSVC14 (2015), but is it fully `c99/c11` compliant? I doubt it, but have not hit any problems yet...  \n\nThe last time I checked, back about 4 months, or so, tidy would compile with MSVC10, aka _MSC_VER 1600, 2010... I now do not have any earlier version available, but tidy did used to compile in MSVC6 (2005)...\n\nSo this does not seem to be a windows problem... I would be very happy if we maintained compatibility back to say MSVC10, which it seems, is what we have now...\n\n## unix/linux\n\nBut considering the `gcc` compiler, it seem this can sort of be divided into two(2) issues -\n\n 1. Use of `//` inline comments, arrays, string length, ... -pedantic\n 2. Adding specific standard -std=c89, c99, c11, ...\n\n#### -pedantic\n\nIf I add -pedantic, and fix the one very noisy warning in include/tidy.h - `// bit like OPTIONS` - there are not too many other `//` uses, and these can be easily fixed... and I think should be done... but am open on this `comment` issue...\n\nThere is the quite disturbing warning set from src/language.c, which has quite a number of strings greater than `509`, and the use of a flexible array... Do these need to be **fixed**? How do you support strings of greater than `509`, which tidy needs to, to support different language sets?\n\nSo, in principal have no problem that `-pedantic` being added to the CMakeLists.txt, making it the default, but we would have to **fix** `language.c` first. \n\nWhat do others think?\n\n#### standards -std=c89, c99, c11, ...\n\nIt seems if I add any of these `-std=xXX` options, the compile FAILS! The noisiest error is missing definition of `uint`!\n\nTidy has been using a `uint` since the beginning of time... it is present in `tidy4aug00` code, now 16 years ago. What! Now, 16 years later, gcc decides to not support this? What is this all about?\n\nIt does support it if you do not add this `-std=cNN` option! This, I do not understand?\n\nYes, as I remember from an earlier issue, we could do a massive search and replace every `uint` with something else, but what? Or what header has to now be added to the build to get this defined? Why is this happening?\n\nCan someone **help** with exactly what has to be done here?\n. @marcoscaceres, oops, maybe I overlooked what is in your PR #463... sorry...\n\nI will try to find the time to pull your patches... test, and look... maybe you have answered some of my questions above... thanks...\n. As we have now merged PR #463 which removed all the single line comment, `//`, assume we can close this...\n\nPlease feel free to re-open, or file a new issue... thanks...\n. @jznf, thank you for bringing this here...\n\nAs discussed, off list, this has been the behavior of tidy for a long time, thus any change should be subject to a new option, to `suspend` this action... probably not too difficult... \n\nVery much **welcome** any thoughts on this... thanks...\n. As we are about to `release` **5.4**, and there has been no progress on this `Feature Request`, moving it to `next`, **5.5** milestone...\n\nI have constructed a sample [in_461.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_461.html) which passes W3C validation, so certainly think this feature should be added, even as the default...\n\n**As always further comments, patches or a PR very welcome**... thanks...\n\n\n\n\n. @lhchavez as stated. thank you for your PR #531... While this **works** fine, I have now proposed an alternative **fix**, PR #540, that not only addresses this `<button>` issue, but tidies up some other code... including an important fix for the `TY_(IsHTML5Mode)(doc )` service...\n\nI have been delaying merging #540 hoping you would get a chance to pull and test the `issue-461` branch, and confirm. @balthisar has already tested, and confirmed... \n\nAnd now there is also a branch `issue-461` in the [tidy-tests](https://github.com/htacg/tidy-html5-tests/tree/issue-461) repo, which should match this change, and should pass 100% - stage 1 - exit codes, and 2 - diff results vs expects...\n\nI understand RL must come first, but you say closing your #531, and/or adding a `+1` here, or something, would indicate for me to move forward... \n\nI am also holding off on a few other PRs to get #540 in place first... which will bump us to 5.5.15... thanks...\n. @lhchavez thanks for the quick reply... sorry to push when there may be other critical RL items...no apology needed...\n\nIt's a bit late in my working day today, to get into merges, etc, but will get to it tomorrow, or soonest... thanks...\n. @ralfjunker, thanks for the report...\n\nDealing with `Word 2000` was a very specific set of `clutter` to remove, and I think could easily be encouraged to skip any chars between  `<![endif]` and `>`, if desired...\n\nIf possible, please give a minimal `sample` html, tidy version, config, etc...\n\nNot sure why you include other Tidy parser's, like ASP, JSTE, PHP, ... advise more...\n\nBut more specific information would also be helpful, like where, how, was this `Word 2000` html document generated... thanks...\n. @ralfjunker just noted that this topic has more or less been raised again in #487...\n\nAs suggested there one or the other should be closed while we seek a suitable solution for this `extra` data between the closing `]>` endif. \n\nAnd note maybe there can also be `extra` data in the opening `<!xxx[`...\n\nSeek ideas, comments, patches or PR... thanks...\n. As we are about to release 5.4, moving this out to `next` 5.5... and as stated, maybe we should close one of these two issues which refer to the same problem... Although no further comments in a **long** time, appears still open, although also seems duplicate of #487,  so moving out the milestone again...\n\n. @marcoscaceres, wow, we have let things slip in this regard...\n\nBy the time I came back to tidy, I guess some of these `slips` had been done...\n\nBut is it the time to **reject** all the compiler advances since the `-ansi` option?\n\nYou have quite rightly highlighted many instances of where tidy has slipped a little... but are these wrong? Some maybe need to be looked at...\n\nOn the **single** issue of inline comments `//`, versus **only** `/* ... */`, I am very ambivalent... I do not see a problem accepting `//`... but that is just my view... \n\nCode I write at the moment exclusively uses `/*\\ ... \\*/`, but that is a **style** I have adopted for **tidy**...\n\nLook forward to further comments... thanks...\n. See #460 for additional comment...\n\nWill try to pull and test this... thanks...\n. @marcoscaceres have now carefully reviewed your `ansi_compliance` branch, and this all looks good... \n\nCan you `rebase` your fork to master to ensure there are no conflicts, and will merge this... thanks.... @marcoscaceres sorry for the brief delay... \n\nAre we still good to go on this?\n. Done, and thanks.... @marcoscaceres, thanks for your issue transfer...\n\nAnd on the sample given, current libtidy does go into freefall...\n\nThis seems part of the ongoing effort to bump libtidy parsing \ninto this century ;=)), so the FR label...\n\nAs @sideshowbarker merge sort of points out, we all \nneed to change with the times... it would be even greater if \none change mirrored others... he is a htacg dev, like you...\n\nLook forward to some code suggestions to fix this... thanks...\n. As we are about to `release` **5.4**, moving this to `next` **5.5**.\n\nHave added a sample [in_468-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_464-2.html) which passes validation! Tidy should do likewise...\n\n**As usual comments, patches or PR very welcome**... thanks...\n. @jean-christophe-manciot thanks for your comment...\n\nMaybe [VERSION.md](https://github.com/htacg/tidy-html5/blob/master/README/VERSION.md) is a little unclear, but we use odd/even `minor` version numbering, where only `even` number indicates a release, and tags are **only** created on a release...\n\nSo to date we have had only two relatively recent releases, 5.0, and 5.2, and the next 5.4, has not been done. Oh, and yes, there was an exception, 5.1.25, along the way, which I hope will not be repeated...\n\nSo, sort of nothing is missing - tags are only added for releases, and there have been none since 5.2...\n\nWhile there have been quite a number of **fixes**, and **features** added since 5.2, there also seems a considerable number of outstanding, important issues, which need attention... any, all help appreciated...\n\nBut agree it is about time for another release... and consider `master` 5.3.12 a good, stable, candidate... will try to keep the present Dec 15, 2016 schedule for 5.4... \n\nWhat do others think? Thanks...\n. @still-dreaming-1 thank you for your comment...\n\nI am sure current tidy, trying to support both HTML5, and all previous versions, \nhas some problems...\n\nBut **not** sure what you point out here?\n\nYes, I suppose tidy can be **confused**, and we need to work on \nthat...\n\nThe internal string for `4.01 transitional`, in W3C_Doctypes[], is -\n\n```\n  {  5, H41T, \"HTML 4.01 Transitional\", \"-//W3C//DTD HTML 4.01 Transitional//EN\", \"http://www.w3.org/TR/html4/loose.dtd\"                      },\n```\n\nAre you suggesting a change here?\n\nBut give us a minimal html input, what tidy outputs, and what \nyou expect...  to understand the discussion... and the libtidy \nversion used...\n\nBest regards, Geoff...\n. @still-dreaming-1, I guess I am still missing your point here ;=(( But maybe gain some insight from reading your other posts...\n\nFrom https://github.com/validator/validator/issues/408, I liked some of your questions, and @sideshowbarker answers, which I largely agree with, so copy them here -\n\n`<quote>`\n\n> So basically between HTML 4 and 5, we are supposed to choose one or the other?\n> No, you\u2019re just supposed to use HTML, period. The HTML language is now versionless.\n> \n> I want to understand what these options mean not just in terms of which one we are supposed to use, but how they might affect browser behavior\n> Browsers process HTML without regard to any version. For browsers, HTML is versionless, just as with the language itself.\n> \n> I'm guessing if I set the doctype to one of the HTML 4 values, this means the browser should work correctly with HTML 4, but it might not work at all with HTML 5 stuff. Is that right?\n> No, browsers don\u2019t care if you use an HTML4 doctype or the \u201cHTML5\u201d one. Browsers will process the document in exactly the same way regardless.\n\n`</quote>`\n\nRegarding legacy doctypes, I, like perhaps many older sites, can have **MANY** legacy doctypes... at the time, now years ago, 4.01 transitional seemed the best fit for what I wanted...\n\nAnd these still display correctly in most browsers, and pass the validator, like -\n\nhttps://validator.w3.org/check?uri=http%3A%2F%2Fgeoffair.net%2Ftidy%2Findex.htm\n\nThat is what I expect, and likewise tidy reports no problems... and that page proudly sports a `valid 4.01`, and a `tidy` image... I hope that will remain unchanged, at least in the foreseeable future... so in what sense is 4.01 transitional invalid?\n\nNow, if I feed that page to validator `nu' I will get the mess I expect -\n\nhttps://validator.w3.org/nu/?doc=http%3A%2F%2Fgeoffair.net%2Ftidy%2Findex.htm\n\nToday, new pages I add are usually in conformity to the later html standards, but not always... you get into a habit... note, I too try to not use html4 versus html5, but this is an easy way to talk about the quite big transition... so this is my new standard `blank5` page, which passes `nu` -\n\nhttps://validator.w3.org/nu/?doc=http%3A%2F%2Fgeoffair.net%2Fblank5.htm\n\nIf I feed the above valid `index` 4.01 trans legacy page to tidy, and instruct it, by config, to treat it as a html5 doctype, while it will change the doctype, that is about all it will do! **Very bad**!\n\nA giant **`Feature Request`** coming out of this could be that tidy either, spit out many errors and warnings, like `nu`, or better still, modify the document to suit the doctype requested... some `little` steps have been taken in this regard, but lots to do... and each should be its own issue...\n\nBut then what is the purpose of tidy? Is it just a pretty printer? Should it try to do more? It does try to handle all doctypes... And what is the general interest in such a product? Usages? There are many open questions...\n\nHope this helps, regards, Geoff.\n. @still-dreaming-1, as stated, what is tidy, is an open question...\n\nIn the many, many years I have been associated with tidy, when ever someone suggested tidy was a `validator`, some core developer(s), at the time, would quickly say **no**!, citing various reasons... and now I suppose I am a core developer, I have more or less inheritied that... to varying degrees...\n\nWhen I was big into expanding my web site, I used it in that way. If I ran tidy over my pages, there seemed an almost 100% chance that the page would also pass the W3C validator... but that is no longer true for html5 pages I create today... tidy fails to warn me of many problems... sad...\n\nThat is an interesting question - what is the difference between the original validator, and validator `nu`?\n\nThis, and many previous experiments with the W3C validator - https://validator.w3.org - seems to show that, if your document has a legacy doctype, then it will be handled there, but if it has a html5 doctype, it will be shunted to `nu`... which sort of seems reasonable... if you specified just `<!DOCTYPE html>`, aka versionless html, then you want the document validated according to the latest `standards`... otherwise the doctype determines what should be, and not be, there, and you should be validated **only** on that...\n\nMaybe @sideshowbarker could help us with that, being a developer of `nu`?\n\nIn a sence, **`libtidy`** is both of those, rolled into one. Internally it has two modes - default html5, and legacy html4. When it reads the doctype you have given, it can switch modes, tables, decisions...\n\nNow, should tidy, on reading a valid 4.01 transitional doctype, issue a warning, or error? I say absolutely not! \n\nIf we **were** in the business of nagging users, like, on reading `ANY` legacy doctype we could say `Aw shucks, you are using an ancient legacy doctype, especially a **transitional** one! You should consider moving to a later specification!`, or something like that... for me, we already have too much `Info` of this type output, and I added a `--show-info no` option to removing this type of `nagging`...\n\nTo me, your reading of what @cvrebert said, is not quite right, or at least needs some expansion? Authors who have used this doctype, probably thousands, millions of web documents, should have no fear about browser support, at least for a very long time, and back to what @sideshowbarker said, `No, browsers don\u2019t care if you use an HTML4 doctype or the \u201cHTML5\u201d one. Browsers will process the document in exactly the same way regardless.`...\n\nAnd perhaps the @cvrebert emphasized `Authors MUST NOT use them.` is a little too **strict**, but in a sense right. I too would encourage new html pages, created today, should try to conform to the latest html spec.! Why not?\n\nAnd it is my big lament that tidy does not do **more** in this regard... it still allows legacy features in the latest doctype... run the page through `nu` will show what tidy needs to flag, and fix... As stated, this needs `work`... I will help work on these issues, one by one... volunteers **very** welcome... thanks...\n\nThis could certainly include a warning, if given the option `--doctype html5`, and it finds the document starts with legacy doctype, issue a warning like found illegal doctype, but will correct that on output... at present tidy does this fix silently... as with quite a few others...\n\nThe W3C validator used to have a backend of **`libtidy`**, where it output the corrected, prettified document, but that check box has done nothing for years...\n\nSo, yes, the `nu` validator would also be my choice today. What I like is that it usually gives you good information about how to effect a `fix`... \n\nMaybe a `nu+` could effect all those changes, and output a corrected, validated, document... a java_Tidy_5... it could pass that corrected doc to **`libtidy`** to pretty print, with lots of format options... I dream...\n. As we are headed for a new 5.4 release soonest, am closing this... just do not see a question current tidy needs to address...\n\nBut feel free to re-open, or post another issue... thanks...\n. @slavatarbinskyi thank you for your issue...\n\nMaybe your html sample suffered in the cut and paste process, You need to put at least 3 back-checks around html blocks... or drag and drop the file to effect an upload... but I think I got it all...\n\nAs far as I can see the document has no `<body>`, and you set `doc.OutputBodyOnly = AutoBool.Yes;`, so that is what you got, nothing... that seems correct...\n\nWhen I run command line tidy v5.3.12, the latest `master`, with `$ tidy --show-body-only yes input5/in_467.html` I get, like you, nothing...\n\n````\nline 6 column 1 - Warning: missing </title> before </body>\nline 7 column 1 - Warning: discarding unexpected </body>\nline 7 column 8 - Warning: discarding unexpected </html>\nInfo: Document content looks like HTML5\nTidy found 3 warnings and 0 errors!\n````\n\nMaybe I am missing something here?\n. @slavatarbinskyi running tidy on your `dirty.txt` html document does indeed output a **lot** of warnings, and more important, an **error**...\n\nAt the end of the output I see -\n\n````\n...\nTidy found 12734 warnings and 1 error!\n\nThis document has errors that must be fixed before\nusing HTML Tidy to generate a tidied up version.\n\nCharacter codes for UTF-8 must be in the range: U+0000 to U+10FFFF.\nThe definition of UTF-8 in Annex D of ISO/IEC 10646-1:2000 also\n... etc ...\n````\n\nSo `tidy` is making it clear that the document has an error, thus does not give any **tidied** output. You can either fix that by removing the `error`, or adding forced output option of `--force-output yes`... but be aware that does not guarantee tidy will output a valid, fixed, document... but it will try...\n\nThat document seems to have many, many UTF-8 encoding errors, even though the document states it is UTF-8 with `<meta charset=\"UTF-8\">`! The encoding problems begin with the first word of the `<title>`, in hex - CF EB E0 ED F8 E5 F2 E8 - What is the actual document encoding? Tidy does support a wide range...\n\nHope this helps...\n\nRegards, Geoff.\n. @slavatarbinskyi ok, character encoding is **not** my strong point ;=)) I hope others will hop in and help here...\n\nHmmm, I too can not find [Windows 1251](https://en.wikipedia.org/wiki/Windows-1251) tidy encoding, but it does support [Windows 1252](https://en.wikipedia.org/wiki/Windows-1252), which is another 8-bit character encoding... the option to `tidy` is `-win1252`, which in effect does `tidySetCharEncoding( tdoc, arg );`...\n\nAnd indeed if I run `> tidy -win1252 -f temperrs.txt input5\\in_467-4.html`, my copy of your `dirty.txt`, I still get many warnings, and an error, but no `utf-8` encoding warnings... \n\nLikewise if I use the `-ascii`, or `-raw` options, which are other 8-bit encodings, and then using `--force-output yes` I get a tidied result, but only you can judge if the output html is **correct**, displayed language wise...\n\nMaybe experimenting with the `--input-encoding xxx` and/or the `--output-encoding xxx` options, where the `xxx` is one of raw, ascii, latin0, latin1, utf8, iso2022, mac, win1252, ibm858, utf16le, utf16be, utf16, big5, shiftjis, but obviously you can skip those that are `multi-byte` types...\n\nBut aside from getting the character encoding correct, that document has some **serious** html problems... from bad hrefs `<a href=\"/jobs\" \"=\"\">`, to minor missing `;` on `&nbsp;` entity... lots... Tidy found 455 warnings and 1 error! And in **fixing** many of these, the result may be wrong! \n\nTidy can not read the generators mind! Like that href will be output as `<a href=\"/jobs\">` - which is probably not the correct link!\n\nAgain hope this helps...\n\nRegards, Geoff.\n\nOT: I have only briefly looked at `TidyManaged` quite a few years back now... Which repository are you using as source? And which `libtidy.dll` version are you using? I will try a build and test again...\n\n. @slavatarbinskyi I think I am losing track here?\n\nWhat exactly do you want `libtidy` to do? \n\nI am afraid I do not understand what is a `good closed tags`? To my thinking that is what tidy does already, so what is your problem? What tag did it not **close**?\n\nAnd the information I offered should get rid of the `utf-8` warnings - Then using `-raw`, `-ascii`, `-win1252`, ... will treat the text as an 8-bit byte stream... What more do you want, that Tidy does not already do?\n\nMaybe specifically supporting 1251 is not `written` down, but what I am saying is maybe one of the other 8-bit options will do the same. Explain better why it does not?\n\nYes, there are still many warnings about what tidy found, and fixed... What is the problem with this?\n\nThis started as a question `output is null?`. Has this been answered? Use `--force-output yes`. Do you now get an output? If yes, can this be closed? \n\nPlease open another issue if there is some other problem... thanks...\n\nAs I say, getting **very** lost on what is needed here?\n\nAnd you did not answer the question on `TidyManaged`? Where from? libtidy version?\n\nRegards, Geoff.\n. @slavatarbinskyi, ok, you have found an option, `doc.ForceOutput =true;`, in the `TidyHtml5Managed` project, and this still **not** produce output! Is this what I read?\n\nThen I **suggest** this does `not` sound like a **`libtidy`** problem, here, but a `TidyHtml5Managed`, version 1.1.0 problem! Open an issue there!\n\nIn all my tests, using current **`libtidy`**, through our sample console app, `tidy`, I get an output... no problem...\n\nYou still did not tell me exactly where!\n\nI note there is a [TidyHtml5Managed](https://github.com/frandi/TidyHtml5Managed) repo, which says `This branch is 14 commits ahead of markbeaton:master`, where the last commit was some 9 months ago... Is this what you are using? If not, then **where**?\n\nSimply, this is **`libtidy`** here. Where and how this library is used is not our direct problem. That is we can **not** debug every implementation! But we are always still interested in helping, if we can...\n\nYou seem to be seeking a `code` solution? Then why not use C/C++? I have a dozen, or more, samples, in my [tidy-test](https://github.com/geoffmcl/tidy-test) repo...\n\nSo, I repeat, this does not feel like an `open` **`libtidy`** issue? Do we agree?\n\nRegards, Geoff.\n. @slavatarbinskyi, thanks for closing this...\n\n> Gonna find other solution.\n\nI too think this is best ;=)) And hope you will tell us what you found...\n\nI got a chance to update my `TidyManaged` fork - https://github.com/geoffmcl/TidyManaged - using the later library and tools, and looked at what [TidyHtml5Managed](https://github.com/frandi/TidyHtml5Managed) had done, changed, fixed, and I think there is still some work to be done on `TidyManaged` to make it viable...\n\nWhile I did **not** specifically get around to testing different character encodings, nor the `doc.ForceOutput = true;`, I found, in the simple [Test1/Program.cs](https://github.com/geoffmcl/TidyManaged/blob/msvc140/Test1/Program.cs), I added, that setting the options `doc.ShowWarnings = false; doc.Quiet = true;` did **not** seem to work, but maybe my compilation is faulty... Note the `output` still contains the `warnings`...\n\nAnd specifically concerning the encoding, although **you** may have changed the encoding to 'raw', note in `CleanAdnRepair()` the code -\n\n```\n    EncodingType tempEnc = this.InputCharacterEncoding;\n    this.InputCharacterEncoding = EncodingType.Utf8;\n    PInvoke.tidyParseString(this.handle, this.htmlString);\n    this.InputCharacterEncoding = tempEnc;\n```\n\nAnd similarly in `Save()`!\n\nIt seems `TidyManaged` forces the use of **utf-8** internally... At the very least this suggests you should first convert the file data to `utf-8` before passing it into the **`libtidy`** interface through `TidyManaged`... or something... do not have time to explore further at the moment...\n\nAnyway, this sounds like a lot of fiddling and fixing, with no guarantee that `TidyManaged` will then work as expected!\n\nOn this very brief test, I could only rate `TidyManaged` as a **WIP**, unless there is some other fork(s) with more work, tests, updates... especially concerning encoding, and the get/set options... done...\n\nSo, yes, it seems `other` solutions would be better ;=)) Or at least quicker...\n\nRegards, Geoff.\n. PS: Have opened an Issue https://github.com/geoffmcl/TidyManaged/issues/1 to try to get some help on this... \n\nI too would like `TidyManager` to work...\n. @jidanni thanks for the issue. This is for sure a **bug**!\n\nIf I embed that UTF-8 filename, which google tells me means \"Taiwan TG butterfly garden\" - nice name, if the translation is right - tidy correctly outputs the same UTF-8 into the body of the tidied document... \n\nBut makes a real cheese of it when outputting that same UTF-8 sequence as the emacs type warning string ;=(( And what is, where did that \"Warning: discarding invalid character code 143\" come from?\n\nA test in windows showed more of these warnings, and also show the mangled utf-8 filename - ignore the fact that the codepage I had in use, 1252, does not support utf-8 display. The filename becomes just a set of 8-bit values... not petty, but not mangled... \n\n```\nF:\\Projects\\tidy-test\\test\\input5>tidy5 --gnu-emacs yes --show-info no \"\u00e5\u008f\u00b0\u00e7\u0081\u00a3TG\u00e8\u009d\u00b6\u00e5\u0153\u2019.html\"\nWarning: discarding invalid character code 143\nWarning: discarding invalid character code 129\nWarning: discarding invalid character code 157\nWarning: replacing invalid character code 156\nWarning: replacing invalid character code 146\n????TG???S\u0019.html:4:1: Warning: discarding unexpected </html>\n????TG???S\u0019.html:7:32: Warning: missing </button>\netc\n```\n\nMust look at the output mechanism used when writing to the error file, or console if none... It is not handling valid UTF-8 sequences correctly...\n\nWill certainly look at that as time permits, but if anyone else has some clues, help would be appreciated... thanks...\n\nRegards, Geoff.\n. @jidanni ok, understand a snip of sort of repeated warnings... no problem... and it took me a while to figure out exactly where they were coming from... and that provided the clue...\n\nHave found what looks like a simple fix - changing the input encoding from `ASCII` to `RAW`, in `ParseConfigValue`, as in the following patch -\n\n```patch\ndiff --git a/src/config.c b/src/config.c\nindex ddb677c..d001d3d 100644\n--- a/src/config.c\n+++ b/src/config.c\n@@ -934,7 +934,7 @@ Bool TY_(ParseConfigValue)( TidyDocImpl* doc, TidyOptionId optId, ctmbstr optval\n         if (optId == TidyOutFile)\n             doc->config.cfgIn = TY_(BufferInput)( doc, &inbuf, RAW );\n         else\n-            doc->config.cfgIn = TY_(BufferInput)( doc, &inbuf, ASCII );\n+            doc->config.cfgIn = TY_(BufferInput)( doc, &inbuf, RAW );\n         doc->config.c = GetC( &doc->config );\n\n         status = option->parser( doc, option );\n```\n\nObviously, if it turns out correct, then we can actually get rid of the `if (optId == TidyOutFile)... RAW ... else`.\n\nWould appreciate if you could apply the patch, and test the `--gnu-emacs yes` option again on any, and every filename... thanks...\n\nYou might wonder, like I did at first, why is this not `UTF8`! \n\nWell, tidy internally translates `UTF-8`, its default in/out encoding, to `unicode` internally. Nothing wrong with this, but on output it does requires an internal unicode-to-output encoder, which tidy does for the html file text... allowing different output encoded text... \n\nBut this emacs format just copies the string with `TY_(tmbsnprintf)(buf, count, \"%s:%d:%d: \", cfgStr(doc, TidyEmacsFile), line, col);` where `cfgStr` just returns a buffer pointer...\n\nSo if we used `UTF8` then the **filename** would be stored as `unicode`, so the buffer pointer returned to this `ReportPostion` service would be 'unicode'... ie no encoder involved... one could be added... But we have been using `RAW` for years for the `TidyOutFile`, so I think `RAW` is the best choice here... for now...\n\n> Perhaps the warnings should mention on each line that they are coming from the filename...\n\nWell it is not only for the filename, and they sort of do, in what they do not show. If this was a `ReportPostion` during document parsing, then we would have a `lexer` to give us `row` and `column` of the document, and the filename, if the gnu-emacs option set. \n\nSo they are warnings before any actual document parsing has started, so by the absense of this info, indicates they are from when the configuration options are read, one of which would be the `TidyEmacsFile` string... but also for many other config options that require a string...\n\nA possible minor enhancement of the message might be, say -\n```\nconfig - Warning: discarding invalid character code 143\n```\n\nThat is, if no `lexer`, then replace the usual `line 7 column 7`, or the gnu-emacs equivalent, with just say `config`... probably not too difficult... will try to look at that...\n\nIn this case they will not occur if the config reads are configured with `UTF8` or `RAW`, but as stated, there are other considerations, and suggest `RAW` is the right choice here. Look forward to comments on this...\n\nHope you, and others using filenames outside ASCII range, get a chance to test and report... thanks...\n. @jidanni, thanks for the brief reply...\n\n> (I only test .debs... when they reach Debian sid.)\n\nWell, that is sad, because it is only after testing can this **fix** reach `release` stage, and then reach Debian sid... minimum months later, unless considered hyper-critical...\n\nAnd there are not that many of us, in dev, that have filenames that are outside the ASCII range... it took some effort for me to create one, first in linux, and then in windows...\n\nI certainly hope others, using filenames outside ASCII range, get a chance to test and report if it **fixes** the `--gnu-emacs yes` output... thanks...\n\n> Anyways if you don't output Filename Problem: ... ... ...\n\nWell, as mentioned it is **not** only a `filename` problem, but **any** configuration parameter that takes a string, which is why I suggested it be preceded by the word `config`, or some such indicator...\n\nI have looked at this, and it would not be hard to do, but it involves first setting up the `prefix` in the `language_en.h`, new .po gen'ed, etc, so it can be internationalized... \n\nAs stated, at present that prefix generation is controlled by the code `if ( line > 0 && col > 0 )` equals add document line/column, or gnu-emacs, prefix, else none, at present... \n\nI have yet to prove to myself that an `else` here **always** means we are dealing with a config item, thus can add something like the `config` prefix... or an even longer `filename or config` or something...\n\nWill certainly be considering this, but this is a little outside providing the correct gnu-emacs prefix option...\n\nAnd for people who do not like to get into source patching, have pushed an `issue-468` branch, with this **fix**... so you just need to do -\n\n```\n$ git clone git@github.com:htacg/tidy-html5.git\n$ cd tidy-html5\n$ git checkout issue-468\n$ cd build/cmake\n$ cmake ../..\n$ make\n```\n\nNow you should have a local `tidy` - `$ ./tidy -v` - ... version 5.3.13-I468, for testing...\n\nAs stated, hope others, especially using filenames outside ASCII range, test and report it **fixes** the `--gnu-emacs yes` output, for all cases... thanks...\n. As requested, looking for to users testing branch `issue-468`, particularly with **non-ascii** file names... thanks.... @zmwangx thanks for testing this...\n\nAlthough you have been the only tester so far, I am convinced changing `ASCII` to `RAW` is correct in this case...\n\nAccordingly, have pushed a fix to `master`, version 5.3.19, and deleted the `issue-468` branch... \n\nAlthough the `if (optId == TidyOutFile)` is no longer needed, since the code is now equivalent, have chosen to leave it in place, as a reminder, for the moment...\n\nIf you, or others, could pull `master`, and test this `--gnu-emacs yes` option, especially with utf-8 file names, maybe this can be closed... thanks...\n. @zmwangx thanks for testing, so am closing this.... @jidanni thanks for your issue...\n\nNow I know very little about what is supposed to be in the tidy.1 man page, its format, but those headers also appear twice in the `man/tidy1.xsl.in` in the source, used to generate the man page, using `xsltproc` ... \n\nIn other words, it does appear quite **deliberate** repetition! Is there something wrong with this?\n\nWill leave it to others, who know about man page generation and format to comment... thanks...\n. @jidanni, yes, as indicated by @eric-brechemier, these `duplicated` **sections** have been there for a long, **long**, time... since circa May 2005... and are thus also present in most `Apple` forked sources... including the build 15.17 mentioned... thus if **not** in any particular generated tidy.1 doc, must be due to some additional post processing, not passed back to us...\n\nOf course, `time` does **not** necessarily make them right, but for what ever reason, the file was split into two parts with this Mon May 2 16:12:52 2005 UTC commit, in the historic cvs repo - http://tidy.cvs.sourceforge.net/viewvc/tidy/tidy/htmldoc/tidy1.xsl?annotate=1.2 - and has basically remained that way over the 11 years since... to the current, active source - https://github.com/htacg/tidy-html5/blob/master/man/tidy1.xsl.in - in the github repo...\n\nIt does seem they wanted to separately list command line options that begin with a single `-`, from those that begin with `--`, which can also be placed in a **config** file... So it is **not** a simple matter to just delete one or the other... both `option types` **must** be there...\n\nAnd if I read @eric-brechemier correctly, and he has found a tidy.1 doc without `duplicates` may mean that particular tidy.1 doc only gives information about one or the other type of options, which would also be very **bad**...\n\nSo we need help from someone who understands the tidy.1 doc generation from the `.xsl` file, using tidy's own xml outputs, and `xsltproc`, to potentially **fix** the situation, and still keep **all** the information... \n\nI can see the two forms of `SYNOPSIS` could be combined, and the seconds type, the `--` config options, be called say `OPTIONS2`, and `DESCRIPTION2`... or something... thanks...\n. @eric-brechemier look forward to what you can do to **fix** this situation... thanks...\n. @jidanni @eric-brechemier - see #473 for further comments on this, and a WIP PR... thanks...\n. @jidanni thank you for your issue...\n\nThere seems to be three parts, if I read you correctly -\n\n 1. Improve Quick Help wording\n 2. More vertical space control.\n 3. Current vertical space for `<hr>` element\n\n####  1, Improve Quick Help wording\n\nYes, this **documentation** is always an issue, and suggested changes are **very** welcome...\n\nSpecifically on http://api.html-tidy.org/tidy/quickref_5.2.0.html#vertical-space\n\n> Do there please mention what happens if set to 'yes'.\n\nWell, the wording, `This option specifies ...`, used on many, **many** of the options, to me, already sort of says `If you set this option`, so it tells the `y, yes, t, true, 1`... but open to suggestions...\n\n> And don't say \"some\". This is not a random number. State the hard facts.\n\nWell I used `some` because at that stage I do not know the hard facts ;=() And still don't...\n\nTo back up a bit, and search through the development of this option, there seemed a sort of consensus that tidy output too much vertical space, so this `Bool` vertical-space option was developed... it defaulted to `no` to satisfy those wanting to reduce the vertical space, and the `yes` became known as `classic` tidy mode internally, hopefully to put back all the previous vertical spaces back... but in the octopus the pretty-print module has become, I am not so sure this is true... hence my `some`!!!\n\nWould really appreciate it if someone could better document this... between what elements will a `yes` add, or **not** add, vertical space... As you will see in the code, this is not an easy task to decide...\n\nThen another user brought up a `compact` tidy option, where most, if not all, vertical space will not be printed/output... There was thought about this being a separate option, but eventually got tacked onto vertical-space, changing it to an `AutoBool` - 3 states - no, yes, auto, and the `auto` removes the newlines... maybe not ideal, but that's where we are now...\n\nSo you are correct in your current summary -\n\n - no = use less vertical space\n - yes = tidy classic mode with extra vertical space\n - auto = use no vertical space - compact mode\n\nAnd it is agreed more definition of what vertical spaces are effected, by `no` and `yes` would be good...\n\nBut, as I say, always open to improving the docs... How do you think it should be worded? Exactly?\n\n####  2. More vertical space control\n\n> There ought to be additional choices: -1, 0, 1, 2, ... what is just...\n\nThis is a good `Feature Request`, for pretty printing... and we may have had something like it before...\n\nOne point. At present tidy does not support `-1`, ie negative integers... there have been some other occasions where I **wish** it did... just need to improve the parser for these `integer` options probably... but **not** yet done...\n\nIf you, or others, start to look at this, you will need some time to get into the pretty printer... how it builds up the output string in an internal buffer, and only at certain points, flush it to the real output, adding a new line, and potentially adding indent, etc... quite interesting to try to follow... and then support an option level for newlines... which you started to spec out...\n\nOr indeed, write a **new** `pprint2.c` module, offering a better approach...\n\nAs always, I will help where I can...\n\n####  3. Current vertical space for `<hr>` element\n\n> P.S., shouldn't `</p><hr><p>` always have an equal number of newlines between them?\n\nNow you give a specific sample, and a question. This I have expanded to `input5\\in_470.html` for testing...\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Issue #470</title>\n<meta charset=\"utf-8\">\n</head>\n<body>\n<p>Para 1</p><hr><p>Para 2</p>\n</body>\n</html>\n```\n\nThis is certainly one example of where `classic` tidy, ie `--vertical-space yes` will have extra blank lines around the `<hr>`... it appears some people like it that way... so, I would answer your question with `no`, these particular elements do change, depending on this option... but others do not...\n\nBut as you point out, maybe there should be **better** case-by-case, element-by-element control... additional choices... more user flexibility... look forward to it... thanks...\n. Agree with the above, and I guess @balthisar just missed hitting the close button...\n\nThere are so many issues related to the message output, and I think @balthisar will address these in `next` 5.5...\n. @hannob thanks for opening this... and in general I do think it is about time for another release...\n\nI do not think I can get to it by the current Dec 15 target date, being the holiday season, and will shortly move the target to mid-Jan 2017... unless others have a better suggestion...\n\nAnd also see the now closed Issue #394 `Release Tagging` for some **additional** comments on the actual release process... listing the steps to be done... \n\nAnd there are probably several other issues that touch the topic...\n\nBut we have some 60 open issues. While only 8 or so are marked as **bugs**, there are nearly 30 **Feature Requests**... it is hope some of these can be closed, and included in 5.4... I will do my best, but need some `help`... Of course, those not closed will be moved to the next 5.6 release...\n\nAs always, look forward to comments and help... thanks...\n. @gagern, that is certainly an option, which is **not** ruled out...\n\nBut I would also like to see a **new** 5.4 release... as soon as possible...\n\nBecause there are an issues I would like to closed first, namely #468... maybe quite minor, but `charset` is an important issue for tidy...\n\nAccordingly moving the release date out 2 more weeks...\n\nBut as said, that does **not** exclude doing a **backport**, and also creating a 4.2.1 release...\n\nReally. thanks for the input...\n. Just to document some notes on a Tidy *release* 5.4, planned to commence tomorrow, Mar 1, 2017 -\n\n -  Create 5.5 milestone\n - To **close** or **move** all `5.3` target to `next` **5.5**\n - To generate the list `$ git log -p version.txt > ..\\tempv.log`\n - Extract date, and version changes made `$ verhist.pl ..\\tempv.log -o verhist.log`\n - commit and push (repo tidy-html5, branch master)\n - Merge README docs - PR 500\n - Update version.txt to 5.4.0 - commit, push\n - Update verhist.log - commit, push\n - Create TAG 5.4.0, create release release/5.4 commit, push\n - Generate 5.4.0.html for binaries - bin repo\n - Add binaries (win/ubu/mac) - bin repo\n - Add api docs - api repo\n - Update web page - PR #5\n\nAnd AFTER Release\n\n - Create 'next' branch\n - Update version.txt to 5.5.0 - commit, push\n - Commence to urge distro to ship latest\n\nBaring any untoward incidents this will commence about 14:00 UTC Mar 1...\n\nEdit: Now mostly completed\n. @ralfjunker wow, you raise an interesting question or 2, which leads to a potential **bug**... thanks...\n\nAs far as I can see, there is **no** actual option, `TidyDoctypeMode`, aka `--doctype-mode ????`, and will lead to a crash if used, so there should be no **documentation** of it! It is only used internally, in the library...\n\nAnd there should be a **fix** to avoid that **crash**... In the `option_defs[]` config table, it will be noted that it is the option with a `NULL` parser, except of course for the first and last entries...\n\nPerhaps the `tidyenum.h` comment should be something like - \"Not a valid otpion! Only used by 'doctype' property\" - or something...\n\nTo try to explain more. This particular `--doctype enum` option has two forms - \n\n 1. as an enumerated int value, and \n 2. in one case a user `string`\n\nAnd as @jidanni points out in #435, all this is **not** well explained in - http://api.html-tidy.org/tidy/quickref_5.2.0.html#doctype! Nor, as also pointed out, completely implemented, in that a user string type seems ignored...\n\nI think because of this **dual** option type the actual enumerated int is kept in the `TidyDoctypeMode` line in the config table, but if that is set to `TidyDoctypeUser`, then the user's string will be kept in the `TidyDoctype` line... certainly a bit confusing, for all...\n\nSo first, the simple **bug** I see. If a person enters an option `--doctype-mode <value>`, the first part of the config parser will find it, and see it as a **valid** option, but will blow up when the NULL `option->parser` is called. Note the following quick patch would solve that -\n\n```patch\ndiff --git a/src/config.c b/src/config.c\nindex ddb677c..343b337 100644\n--- a/src/config.c\n+++ b/src/config.c\n@@ -924,8 +924,12 @@ Bool TY_(ParseConfigValue)( TidyDocImpl* doc, TidyOptionId optId, ctmbstr optval\n     const TidyOptionImpl* option = option_defs + optId;\n     Bool status = ( optId < N_TIDY_OPTIONS && optval != NULL );\n\n-    if ( !status )\n-        TY_(ReportBadArgument)( doc, option->name );\n+    if (!status || !option->parser) {\n+        /* Issue #472 - report a 'bad' option name,\n+           *or* if the option has a NULL parser.\n+           TODO: Add error message for a NULL parser. */\n+        TY_(ReportBadArgument)(doc, option->name);\n+    }\n     else\n     {\n         TidyBuffer inbuf;            /* Set up input source */\n```\n\nAnd note, the actual error message needs to be added for this NULL parser case. One could argue that they should **not** be using an option **not** documented - just what they found in the source. But on the other hand tidy should not **crash** in `any` case...\n\nAnd further note, this area of the config code is also related to #468, where I am waiting for some user's with **non-ascii** file name test the fix in branch `issue-468`, to fold this in...\n\nNeed to explore more on this, and would appreciate any assistance, including the documentation issue, and implementation, mentioned in #435... thanks...\n. @ralfjunker, yes I think your patch reads better in that is also preserves the return failure...\n\nAlso see #473 for mention of another option, `gnu-emacs-file` as another 'internal' only option, that, if possible, should **not** appear in user docs... or at least only in `developer` docs...\n\nStill to get to testing this... thanks...\n. @eric-brechemier have reviewed this WIP, and it is looking great... some little points...\n\n#### SYNOPSIS\n\nI like you have reduced this to one(1) single simple line, as it should be... but maybe it should read like -\n\n```\nSYNOPSIS\n   tidy [options] [file[ ...]] [[options] [file[ ...] ...]\n```\n\nBut maybe the additional square braces are **too** much, too `pedantic`... what do you think?\n\nAnd in fact maybe it could be reduced to **just** `tidy [options] [file1[ file2[ ...]]]`, and the fact that this `[options] [file(s)]` can be repeated be only mentioned say in the description. Or not at all...\n\nI have never really used, or tested, this multiple `[options file]`, since as far as I can see, if tidy exits `1`, you would not know, without actually reading the output, which file caused this warning... but assume it works... but what really is the use case?\n\nIn any batch, or scripted processing, I can understand having one set of options applied to a big list of files, although again, you do not know which actual file caused the exit value... but to then change the options for another file, or files, does not seem to make much sense...\n\nBut ok, maybe this is not the place or time to discuss this quite unique multiple `options file(s)` that tidy offers... but I would be ok with **not** suggesting, sort of promoting this...\n\nAs stated, I am happy with the single line, with, or without, the addition square braces, as it is...\n\n#### OPTIONS\n\nAgain it is great that you have added a good description, clearly pointing out tidy has two types, `-`, and `--`. I suppose some might argue that in *nix systems two dashes, `--`, is more the 'regular', or 'standard', but we can wear that semantic difference... and your description makes the intention clear...\n\nAnd I like that, for most single dash, `-`, you have added a double dash, `--`, form, which can then be put in a config file...\n\nAnd maybe it would be too much if each double `--` option mentioned a `-` option, where it exists... like say `clean` with a `See also: -c`... that is each is fully crossed referenced... but as I say, maybe **too much**?\n\n#### Temporary Files\n\nYes, thanks for making this effort, to be able to read them in a non-nix system... \n\nBut in *nix I found I could just compile tidy in say build/cmake, and view the results with `man -l tidy.1`, **without** doing any **install**...\n\nAnd I certainly hope others, espceially @jidanni, can do this, and offer his comments, since he opened #469. I do understand that he wants to use only released tidy in production, but as stated this great new man page change does **not** need to be installed - just in a few mintues -\n\n```\n$ cd some/tmp/work/dir\n$ git clone git@github.com:htacg/tidy-html5.git\n$ cd tidy-html5/build/cmake\n$ cmake ../..\n$ make\n$ man -l tidy.1\n```\n\nSo I think these 'temporary' files can be remove, but as stated, thanks for the thought...\n\n#### Multiple, multiple commits\n\nWhile I have no real problem with this as you were developing the change, but hopefully the final PR is essentially only one commit, since as far as I can see it only effects one file, man/tidy.xsl.in... \n\nYou would probably need copy your final modified `tidy.xsl.in` to say `new-tidy.xsl.in`... back up to `master`... make sure it is rebased to the current `master`... create a new branch, say `man-final`... overwrite `tidy.xsl.in` with your new... maybe commit with a multiline commit message... and push... otherwise I understand github just adds each new commit to this existing WIP PR...\n\nBut, as stated, not really a problem...\n\n#### Other possible changes\n\n1. Yes, we are always looking for better, more concise, suscinct descriptions, but these each can be raised as separate issues...\n\n2. I wish we could remove `internal` only option, like `gnu-emacs-file`. Maybe these should **not** appear in any docs, even with a comment `Used internally.`. See #472 for some discussion on others like this... But again these could be dealt with as separate issues. \n\nSo, as stated, this is a sterling effort... look forward to the final... thanks...\n. @eric-brechemier, wow, thank you for the detailed, and very thoughtful responses...\n\n#### SYNOPSIS\n\nReally, my additions here were **only** a suggestion... I basically agree with going forward with the single line `SYNOPSIS` proposed, as in the current first `SYNOPSIS` used...\n\nForget my additional square brackets as **too** confusing, but not sure what you mean in a `lispy` way... and yes, like `curl`, tidy does offer this multiple `options file(s)` possibility, so lets go forward with the single line `synopsis` as offered... ok?\n\n#### more concise, succinct descriptions...\n\nAnd yes, I would support **not** repeating such mundane information, like I do prefer, say -\n\n```\n       --add-xml-decl <boolean:no>\n            description\n```\n\nversus our currently very **repetitive**, space using form of -\n\n```\n       add-xml-decl\n\n              Type:    Boolean\n              Default: no\n              Example: y/n, yes/no, t/f, true/false, 1/0\n              description\n```\n\nThe main `DESCRIPTION` should take care of this type of multiple acceptable inputs of a config option type, which it nearly does already...\n\n#### showing non-options\n\nNo, the `tidy.1` build should **not** have to seek `Used internally.`! As you suggest, the `./tidy -xml-config` should be adjusted to just **not** output these as `options`, so forget this here... \n\nThat is another issue about what the `-xml-config` output, that is fed to the XSLT transformation... agreed as a separate issue... the man page generation should absolutely use what it is fed...\n\n#### compacting commits\n\nThank you for the links on this, and now I have seen that I can choose a `Squash and merge` commit that I did not know about before... look forward to trying this when you remove the `WIP` moniker from the PR... thanks...\n\nNow I do think the cross referencing the `extended`, `--`, options back to those that have a single `-` option quite important, but not essential...\n\nAnd now realize my suggested script to @jidanni, and others, was in error. They need to be cloning, and building **your** fork, and specific branch, not the htacg master, at this time... to test this change...\n\nAgain, thanks for your efforts on this... very much appreciated...\n. @eric-brechemier ok, have pulled your fork, `issue-469` branch, built and reviewed this, in linux, and everything looks good, but really wish there were others mac/unix reviewers. Being a windows person, which does **not** have a `$ man page` command, do not feel totally comfortable with just my quick linux `$ man -l tidy.1` review...\n\nAs far as I can see, so far this is only modification of one file, `man/tidy1.xsl.in`. And it seems to me you have completely removed the **duplications**, and improved the wording here and there... that effectively solved the #469 issue raised by @jidanni... As I say this looks good to me... and once you remove the two temporary files, and hopefully a positive review by at least one other, would be prepared to merge this... many thanks...\n\nAnd if I read, and understand things correctly, as a further enhancement, you would now like to modify the `xml` output of tidy.c. That is the modify the `xml` fed to the transformation. If I am understanding this correctly then I would like that as a separate issue. I need to explore how that is done presently...\n\nLike I see in the code - `printf(\"  <seealso>%s</seealso>\\n\",tidyOptGetName(optLinked));`, but presently do not immediately see how to know to add a single `-` or a double `--` in front... The `tidyOptGetName(optLinked)` is a tidy API call, which probably can not be changed, but maybe another internal function could be added to do that... or something...\n\nI certainly like the idea the we could have xml ouput of -\n\n```\n   ...\n   <seealso>-i</seealso>\n   <seealso>-indent</seealso>\n   <seealso>--indent-spaces</seealso>\n </option>\n```\n\nwhich in turn would add **See also:** `-i`, `-indent`, `--indent-spaces`... to the tidy.1 page... That is fully cross-referencing the options... But as stated else where this is **not** essential that we have every cross-reference...\n\nBut is it convenient to separate this as a further, separate step?\n\nRegards, geoff.\n. @eric-brechemier yes, it's a wrap, even if we do not get another unix reviewer...\n\nJust about out of time tonight, but tomorrow, or soonest, will merge this using the special `Squash and merge` option offered, which I think will pull in you some 47 commits as one... First time I have tried this, so hope it works out well...\n\nBe back soonest... thanks\n\nAnd look forward to your further enhancement as a separate issue... thanks.... @eric-brechemier seems the `SnM` worked fine... thanks.... @ctjhoa thanks for your question, but I know of **no** option to merge siblings...\n\nAnd take care with your example... you have put a newline between the two `spans`... that would become a space... so you would get `A B`... that is the `A` and `B` text elements would be separated by the space,` ` text element... which would not have the same rendering options...\n\nSo if you remove that newline/space, I suppose it would be possible, in post processing, to find say touching text element, in the node tree, review the `span` around them, and if the same merge the two text elements, and extending the `span` around them both...\n\nEven as I write that, I can see some quite difficult code decisions, that the human eye can see quite easily... so even if there was a convincing use case for such a merging, which I am not yet convinced of, I personally would not be prepared to work on such an `option`...\n\nBut given a substantial use case, maybe you, or others may, and I would consider it, and help where I can...\n\nWill leave this Feature Request open for a while for further comments... thanks... but no definite milestone yet...\n. @ctjhoa no, unfortunately, do not see this as a similar issue...\n\nAnd as the [merge-divs](http://api.html-tidy.org/tidy/quickref_5.2.0.html#merge-divs) documentation stated, this **only** effects the [clean](http://api.html-tidy.org/tidy/quickref_5.2.0.html#clean) option... and will do the same for `--merge-divs auto` and `--merge-divs on`, and will leave the outer `<div>` if `--merge-divs no`...\n\nSo, with `clean` on all tidy is effectively doing is removing the outer `<div>` which has no attributes...\n\nYou mentioned MS Word files, turned into html, and assume you have experimented with the [word-2000](http://api.html-tidy.org/tidy/quickref_5.2.0.html#word-2000) option...\n\nBut back to the question `merge sibling tags`, at present Tidy has no such option...\n\nIn the absence of further comment, and a use case for trying to implement such an option, I am closing this issue...\n\nPlease feel free to re-open, or file a new issue... thanks...\n. @pmorch, as @jry2 points out this is an **ongoing** feature of tidy! That is, it remains in the current version 5.3.14...\n\nJust reading here - http://stackoverflow.com/questions/6117886/javascript-and-forward-slashes-in-strings - suggests this may be another html4 versus html5 change that tidy should catch up on, if there is a change in the `<script>` specs... any links to the appropriate REC doc appreciated...\n\nBut as you can read there - \"As far as JS is concerned `/` and `\\/` are identical inside a string. As far as HTML is concerned `</` starts an end tag but `<\\/` does not.\"... Hence tidy presently adds the escape, and issues a warning...\n\nNo #281 is a different problem, which has been solved. Change your javascript to `type=\"text/html\"`, and maybe add a template `id=...`, and tidy will not issue this warning...\n\nNow whether tidy needs to conform to a later spec just depends on the documentation... any help finding, understanding that would help greatly... thanks...\n\n. @pmorch ok, you are starting to convince me this is a html4 vs a html5 thing...\n\nI can still find references to this `escaped`, sort of end tag, in the html4 REC - https://www.w3.org/TR/html401/interact/scripts.html#h-18.2.4 - shows a clear example: \n\n```html\n<TITLE>Test Document</TITLE>\n <SCRIPT type=\"text/javascript\">\n     document.write(\"<p><b>Hello World!<\\/b>\")\n \n ```\n\nAnd of course, I can **not** yet find the equivalent reference in the html5 REC - https://www.w3.org/TR/html5/scripting-1.html#script - they removed the example ...\n\nIs that sufficient to raise this to a **bug** status... maybe...\n\nAnd of course, I can read copious javascript references to `` and `<\\/` are essentially **equivalent**, even `===`, as far as javascipt goes...\n\nSo maybe tidy, in html5 mode, errors on the **safe** side, issuing a warning, and adds the `escape`...\n\nThe fundamental question remains, is it time tidy stopped doing this, if still in html5 mode? \n\nShould this be an **option**, or should tidy behavior change, without an option? \n\nAnd that is why it remains a `Feature Request`, rather than an outright **Bug**, at this time!\n\nLook forward to more thoughtful, fruitful comments...\n. @pmorch, wow, shame on me for not **remembering** we already have this option! \n\nTry `--escape-scripts no`, and tidy will **not** issue the warning, and **not** escape `</b`... see [escape-scripts](http://api.html-tidy.org/tidy/quickref_5.2.0.html#escape-scripts) documentation...\n\nAnd shame on you guys for **not** reminding forgetful me that we already have this `feature`... see #348, Jan 16, 2016, v.5.1.47 onward... and in fact was discussed back as far as 2006-11-22 in the [sf803](https://sourceforge.net/p/tidy/bugs/803/) bugs! All worth reading...\n\nIn fact it was the re-compiling [edbrowse](http://edbrowse.org/), with msvc140, that brought me back to this option... I had a compile error if I used an **old** version of `tidy`, since it uses this `feature` in its code...\n\n**So it is there already!** Please test and advise on this `option`...\n\nIt seems the single remaining question is whether it is time to change the `default` to **no**?\n\nBut that is a different issue, and if someone is interested in arguing this case, they should open another issue, referencing all the previous conversations, and present specific  reasoning... \n\nMeantime, am closing this here... thanks...\n. @balthisar **OOPS**, sorry, I looked into this a little and prepared a reply back at 2016-12-24, but somehow **forgot** to post it. So first is my original comment from then, which also mentions the weirdness I found, that you also mention -\n\n2016-12-24: @jidanni yes, this is a strange action that I have never explored before...\n\nIn reading around this seems a concession only for `ColdFusion` users, but maybe there is a wider reason, that is applies generally... I can not seem to find anything specific about 2 or more adjacent hyphens in comment in W3C docs... Perhaps you or other could point me to some documentation on this... thanks...\n\nI agree, like several other warnings tidy issues, it makes no mention that it made a change, a fix, in this case 2 or more adjacent hyphens all to `=`. I guess the tidy creators want to really keep warning strings very short... Perhaps that is **not** so necessary these days...\n\nIn further experimentation I found that in using `--fix-bad-comments no` I found 2 things which feel buggy -\n\n 1. will still issue the warning! Hmmm.\n 2. will still convert the last `-` to an `=`! Which seems weird?\n\nIf I specifically turn the option **off** should tidy still issue a warning? Somehow I feel **no**, but if kept like this, then we would have to sort of have two warning types: one advising `changed to =`, and the other not. And the continued conversion of the last, even when `off` seems very strange. I would expect my `no` to cause tidy do nothing.\n\nBut that aside, in this simple case perhaps this warning could be changed to -\n\n```\nline 9 column 19 - Warning: 2 or more adjacent hyphens within comment, changed to equal signs.\n```\n\nOr something else? Ideas... thanks...\n\nIt does seem to already mention this change on the man page, although as usual the actual wording could be improved. Ideas welcome... thanks...\n\nForward to 2017-09-24: So you can see I also thought it **buggy**... certainly not what I expected... and proposed some ideas on a **fixes**... \n\nAnd thinking about it more now, do not exactly agree with your two options... moving forward...\n\nAgree, perhaps this option has outlived it usefulness... I can not imagine any modern parser getting messed up over two, or more adjacent `-` in a comment field... so maybe it should **now** default to `no`? And tidy does **nothing**, and **no** warning...\n\nAnd if the user sets `yes`, the issue an `Info:` on any change tidy makes, not a **warning**...\n\nBut would not remove it...\n\nIt seems we do agree, this should be changed... Just exactly how is the question... What do you propose after my additional comments, old and new? \n\nAnd thanks for bring this up again... Do not know why I missed posting, except it was Christmas!\n. @balthisar oops again, seems we cross posted at about the same time ;=))\n\nMaybe we agree -\n\n - Default to `no`, and tidy does **nothing**. No fix or warning\n - User sets `yes`, if they have say ColdFusion problem, and tidy fixes and advises by `Info:` of change\n\nAgreed?\n. @balthisar yes, still crossposting...\n\nWhen I suggested the default change to `no`, that includes a code **fix** to really do **nothing**... certainly **not** as now...\n\nAlthough maybe that default is **changed** on legacy mode detection, see `AdjustTags`, and `ResetTags`, if the legacy validator still burps...\n\nAnd if the option is set `yes`, either by user or legacy mode, or maybe by setting XHTML?, then we fix, and `warning`, or `Info:`, spelling out the change...\n\nBut do not understand exactly why you say `yes` **breaks** CodeFusion. I thought **yes** was to provide a fix for ColdFusion, even if this requires some adjustment of the current code...\n\nAnd agree, it seems an XHTML should be slightly different again... but maybe not...\n\nWill end crosspost, since off for dinner ;=))\n. @balthisar wow, thanks for PR #615...\n\nI think this is a great change for current HTML5 documents, in that `tidy` does nothing, by default... as I think it should... thanks...\n\nBut for legacy documents, it also does **nothing**, except issue a warning - see say  [in_476-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_476-1.html)\n\n```\nline 11 column 19 - Warning: detected adjacent hyphens within the comment; consider fix-bad-comments\nline 12 column 24 - Warning: detected adjacent hyphens within the comment; consider fix-bad-comments\n```\n\nThus tidy's output will **not** pass the W3C legacy validator... \n\nPrincipal: Where possible tidy should output fully valid HTML, and not just almost tell me what else I could do... that is, **not** output **invalid** html, in **any** circumstances... and if tidy is **not** going to fix the problem, or can't decide, then should flag an **error** and **not** output anything, unless **forced**...\n\nDo we all agree with that **principal**?\n\nSo one way to fix that would be the following patch -\n\n```diff\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 6a6775e..4d1b7a6 100755\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -2613,7 +2613,7 @@ static Node* GetTokenFromStream( TidyDocImpl* doc, GetTokenMode mode )\n     Bool isempty = no;\n     AttVal *attributes = NULL;\n     Node *node;\n-    Bool fixComments = cfgBool(doc, TidyFixComments);\n+    Bool fixComments = cfgBool(doc, TidyFixComments) || !(TY_(HTMLVersion)(doc) & HT50);\n\n     /* Lexer->token must be set on return. Nullify it for safety. */\n     lexer->token = NULL;\n```\n\nBut there are probably other ways to achieve the same, or and even with this there is **more** to be done, since, while we now get a fix of a legacy document, we return to the original reason for this issue - namely a **silent** change/fix...\n\nAlso thanks for the additional input on ColdFusion and SGML... \n\nI note the legacy validator seem to only error on the trailing `--->`, with a rather weird message - processing [in_476-3.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_476-3.html), a legacy document with a CF comment - \n\n```\nLine 10, Column 20: invalid comment declaration: found name character outside comment but inside comment declaration\n- CF comment -\n```\n\nRemove that single character, and it passes, which make me wonder why tidy ever attacked the `<---` as well... and did not try to get into why ` a -- b ` is an error, in legacy docs -\n\n```\nLine 10, Column 11: invalid comment declaration: found name start character outside comment but inside comment declaration\n a -- b \n```\n\nAnd also did **not** get into why the warning from `nu`, with [in_476.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_476.html) -\n\n```\nWarning: The document is not mappable to XML 1.0 due to two consecutive hyphens in a comment.\nAt line 9, column 21\nComment with -- end -->\n```\n\nSo left the XHTML/XML possible issues until a later time... although I think some have been covered, like `-asxhtml` seemed to do the fix... but not fully tested, explored...\n\nBut what about the above patch, to either **fix** a legacy document, with a `warning` **or** `Info:` message, or bomb out with an `error` message? Thanks...\n\nAnd a minor quibble - I have adopted the idea to add `Issue #XXX` to all new comments, in the code... I feel this gives new developer a quick way to look back to a possible **why this change**... to read some of the discussion, and perhaps understand more of the reason...\n\nYou have certainly commented well your changes, but misses that additional clue of where to look in `issues`... What do you think...\n\nSorry for the **very** short working day today, so this will be my only comment... be back soonest...\n. @balthisar unfortunately another very short `tidy` working day, but this seems the **perfect** use of `auto`...\n\nTo me `auto` sort of means tidy should do the **right thing**, baring user intervention... although I know some options where that is **not** exactly `true`... perhaps most notably `--vertical-space auto`, but probably others...\n\nAnd in a quick pull, build and regression testing, the changes become very **minimal**, which again to me is a very **good thing**... and 100% maintains configuration options, which is why it was also oddly chosen in `vertical-space`...\n\nYes, I understand the **nu** warning, but still wonder why it thinks it should warn me about mapping to **XML 1.0** when validating my **HTML**, that's all... no biggie...\n\nGlad you agree on adding the `Issue #XXX` in certain code fix cases... and on the principal that tidy should strive to **not** output known **invalid-for-doctype** html, where possible...\n\nWill try to find time soonest to cycle back to `tidy`... thanks...\n. @balthisar done review... but note it is now **after the fact**, just minutes ago...\n\nChecked out branch `issue_476`, pulled and built tidy-5.5.43.I476, and re-run the regression tests. First with the tests `next` branch. Seems we get differences in just 4 cases...\n\n - 1266647 - txt and html - now [709](https://sourceforge.net/p/tidy/bugs/709/) \n - 676156  - txt and html - now [316](https://sourceforge.net/p/tidy/bugs/316/)\n - 678268  - txt only - now [319](https://sourceforge.net/p/tidy/bugs/319/)\n - 688746  - txt and html - now [333](https://sourceforge.net/p/tidy/bugs/333/)\n\nSeems each of these cases dealt with some early problems with utf-8 encoding... that particular issue remains solved, but each case had a comment containing consecutive `-`, which previously tidy would change to `=` signs...\n\nIn one case, 678268, it `identifies` itself as `xhtml`, and tidy does the substitution, and the only difference in the txt message output changes the message content -\n\n```\n-line 3 column 17 - Warning: adjacent hyphens within comment\n+line 3 column 17 - Info: tidy replaced adjacent \"-\" with \"=\"\n```\n\nIn the other 3 cases, the document does not `identify` itself as a **legacy** document, so current tidy will stay in html5 mode and correctly **not** make the change... so there is a difference in the `html` output. But I find the change acceptable...\n\nAnd of course, the previous `warning` of the type below is dropped -\n\n```\n-line 1 column 5 - Warning: adjacent hyphens within comment\n```\n\nAgain, after this careful review I find **all** differences **acceptable**, and thus the `testbase-expects` should be **updated**...\n\nThen checking out the tests `issue_476` branch, and it seems **all** these differences have been addressed...\n\nAccordingly, fully agree with merge PR #615 here, and [22](https://github.com/htacg/tidy-html5-tests/pull/22) there in tests, and adjust respective versions...\n\nWill be out for a little, but when back will re-check the results...\n\nThanks @balthisar for this great effort...\n. @balthisar have now re-tested `next`, 5.5.46, after merge, here and in `tests`, in Windows, and get a full **pass**... as expected...\n\nWill try to catch up soonest with the new PR's... but a quick read of them all, without actual testing, and all look **good** to me...\n\nGreat job... thanks...\n. If this is still open, moving out the milestone...\n. @onnimonni thanks for the issue...\n\nAnd thanks for the small sample. Always speeds up the investigation, and in this case a solution...\n\nIf `xmlns:xlink` is a valid `` attribute, and its value is a url, then this could be added to tidy in just 3 steps...\n\n 1. Define attribute: `TidyAttr_XMLNSXLINK, /**< svg xmls:xlink=\"url\" */`, in tidyenum.h, just before `N_TIDY_ATTRIBS`\n 2. Add to attribute_defs [] like `{ TidyAttr_XMLNSXLINK, \"xmlns:xlink\", CH_URL }, /* for  */`, just before `N_TIDY_ATTRIBS`,\n 3. Pass attr to W3CAttrsFor_SVG[] - `{ TidyAttr_XMLNSXLINK, xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|XH11|xxxx|HT50|XH50 }, /* svg xmln:xlink=uri */`\n\nRe-build, and that should do it...\n\nCan you give some W3C reference links? I do not think just relying on what the validator.nu does should be the sole criteria, but it is certainly sometimes a very good indication that tidy may have something wrong...\n\nMaybe these steps to **add an attribute** could be put in say a `README/NEWATTRIBUTE.md`, as others may come along, not yet built into tidy's tables...\n\nComments, patches, PR, ... very welcome...\n. @onnimonni thanks for the links... \n\nI, like you, did not really find `xmlns:xlink` except the W3C REC - https://www.w3.org/TR/SVG/linking.html - contains an elipse sample, which contains this...\n\n```html\nxml version=\"1.0\" standalone=\"no\"?\nsvg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"\n\nExample link01 - a link on an ellipse\n  \n\n\n\n\n\n```\n\nAssuming this was thought of as a valid document, while not totally conclusive in itself, with this evidence, I think I would be for adding this attribute...\n\nAs stated, comments, patches, PR, ... very welcome...\n. @onnimonni wow, is it next week already? ;=))\n\nSince this was only opened a day ago, is just a warning, will leave it at least few days... for others to comment... maybe even pull and test your fork...\n\nI have some other tidy items to catch up on first, and you may need to rebase your fork, now and then, since one of them involves quite a number of files... \n\nPlease **remind** me if I forget for too long... thanks for the quick work...\n. @blat thanks for the issue...\n\nHave not had time to fully research why, but the W3C validator will also issue an error on \n\n```html\nhtml\n\n\n\n\nIssue #479-2\n\n\n\n\n```\n\nSaying: `Error: Element div not allowed as child of element pre in this context.`, so this agrees with tidy...\n\nThe question is, `is your sample valid html?`\n\nLook forward to further comments...\n\nRegards, geoff.. @blat, thanks for the old link... as I re-read and remembered, this debate was **not** solved then...\n\nYes, solely in the interests of generating a html that renders like the original, I think tidy could have an option for this... What to call it?\n\n```\ntidy --allow-invalid-html yes, hmmm, maybe not ;=))\ntidy --rendering-priority yes, I can maybe see this...\n```\n\nOf course tidy should still warn about the **invalid** html, and whine about have been told to **break html rules**, in preference for maintaining rendering equivalence... but this seems **hard** to do... do not know if I am for or against this...\n\nOr, alternatively, is there a way re-do the html, such that it conformed, **and** retains the rendering by browsers?\n\nCertainly look forward to ideas, code, patches, PR to do this, either as an option, or changed output... thanks...\n. Since we are about to release a 5.4, and presently no conclusion on what should, could be done here moving it out to `next` 5.5... thanks.... Since no further comments in quite some time, closing this...\n\nFree free to re-open, or file a **new** issue... thanks...\n. @HarrisonXi thanks for your comment...\n\nYes, am aware current Tidy will still **fix** this **invalid** html... and read no arguments here that tidy should accept this... \n\nOf course, we understand most browsers will not **care**, and maybe render it as the user wants to see, but that in itself is **not** an argument for tidy to **break** W3C recomendations... And it is agreed that tidy's **fix** may be rendered differently...\n\nWas going to try to find more W3C references on this, but seems https://www.w3.org/ is temporarily down, returning 503... but will try to remember this, and do some more research later...\n\nWhat I am seeking are specific W3C references on allowing a `` inside a ``... please add pointers if you find any... and look forward to more feedback... thanks...\n\nUntil then still feel this should remain closed... sorry...\n. Yes, done, thanks...\n. @ganego yes, seems I forgot to enable Issues there... now done...\n\nNot sure what you ask about the `old` configs... the example you show seems to be where someone added some proprietary tags... and maybe some that tidy 5.3.14 now does support... not sure...\n\nAnyway have merged your https://github.com/geoffmcl/NppTidy2/pull/1 ... thanks for this doc change...\n\nBut since at the moment this relates only to https://github.com/geoffmcl/NppTidy2 am closing this here...\n. @MaVo159 thanks for the issue. \n\nWhat version of tidy are you using? With your input, and `--show-body-only yes --show-info no` I get, with current tidy 5.3.14 -\n\n```\nNo warnings or errors were found.\n\nInfo: Document content looks like HTML5\n{{range .Models}}\n{{.Name}}\n{{end}}\n```\n\nYes, there has been some re-lining of the code, but no additional `` added?\n\nThere has been some previous discussion on something like this... see #282, #310, #396, #447, and maybe others...\n\nLook forward to further comments... thanks...\n. @jckdrpr thanks for the issue...\n\nI am afraid I get very confused by character encoding, so am perhaps not the best person to comment, but given an input of `\ud83d\ude0d` I can indeed **confirm** tidy will output, in hex `ED A0 BD ED B8 8D`, which my utf-8 checker advises is **not** valid utf-8. But what is the `right` or `wrong` thing in this case, I do not know!\n\nI can see in the debugger, on the input decoding, after seeing the `&#` start, and `;` end, it will store these in its lexer first as `D83D` and `DE0D` resp., then will generate two 3-byte, supposed to be utf-8, `ED A0 BD` for the first, and `ED B8 8D` for the second...\n\nUsing those entities as inputs, my browsers displays them as two black diamonds with a white `?`, which I understand as invalid characters, but...\n\nBut what exactly do you expect to be the utf-8 output given those two numeric entities as input? \n\nMaybe if I understand this, I could comment more... and maybe others can offer more insight...\n\nMeantime marking this as `Technical Support`, until more information, understanding, comes to light...\n. @jckdrpr thanks for the full explanation, which I sort of understood, maybe... but still stuck on **fixing the problem**!\n\nAs mentioned, during the decoding of the numeric entity, begins `&#` and ends `;`, tidy starts out with `26 23 35 35 33 35 37` in its lexer buffer. Then as part of the post processing of the collected text data, it ends up replacing that with the invalid utf-8 `ed a0 bd`...\n\nSo this starts in ParseEntity() - https://github.com/htacg/tidy-html5/blob/master/src/lexer.c#L1063 - so it decodes the first and has `26 23 35 35 33 35 37` in its buffer and calls EntityInfo - https://github.com/htacg/tidy-html5/blob/master/src/entities.c#L352 - it sees the second char is `#`, to denote a numeric entity, check if it is hexadecimal or not, and uses sscanf to get its value - the lexer buffer is always zero terminated -\n\n```\n        if ( name[2] == 'x' || (!isXml && name[2] == 'X') )\n            res = sscanf( name+3, \"%x\", &c );\n        else\n            res = sscanf( name+2, \"%u\", &c );\n```\n\nNow it backs up the lexer, and replaces it with the sscanf value, `D83D`, **converted** to utf-8 by - https://github.com/htacg/tidy-html5/blob/master/src/utf8.c#L337 - then does the same with the second entity... and so on if more text to decode from the file...\n\nNow I give all this explanation to try to understand at what point should tidy start looking for these `surrogates`? That is `Detect the surrogate pair`?\n\nIs it just sufficient to range check the `sscanf` value is in the invalid range U+D800 and U+DFFF? But at that point we only have the first value! Are we always looking for a pair?\n\nNow I can see that if I set the value, c above, to `0x01f60d`, tidy will generate 4 byte `f0 9f 98 8d`, so tidy's value to utf-8 seems ok... But in this case that **value** is derived from combining two values... How to know to look at two values, and combine them with `N = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000`?\n\nThe problem seems tidy operates in a linear like fashion. Yes, after adding 3 utf-8 bytes to the lexer buffer, could check (a) is this 3 byte utf-8 - it would always be 3, in this surrogate case, right?, (b) see this is in the **bad** range with `v = (c1 & mask3) << 12 | (c2 & maskx) << 6 | (c3 & maskx)`, (c) Is it preceded by 3 bytes in the lexer, (d) if yes, and it is in the same **bad** range, deal with changing the 6 bytes to something else - WOW, that **might** be possible...\n\nAs you can see I know tidy's code very well, but it is just getting my head around looking for `surrogate pairs`... When? At what point?\n\nSort of out of time tonight... will sleep on this... but really look forward to your help on this... it is for sure feeling like a big bad **BUG**!\n. @jckdrpr ok, seemed a good idea to look for `surrogates` when doing the output. That is when `pretty printing` the document, specifically in this case PPrintText, ie a text node - https://github.com/htacg/tidy-html5/blob/master/src/pprint.c#L1052 - and dealing with utf-8 output...\n\n```\n        /* look for UTF-8 multibyte character */\n        if ( c > 0x7F )\n             ix += TY_(GetUTF8)( doc->lexer->lexbuf + ix, &c );\n```\n\nNow in that service, `GetUTF8`, it reads the `ed a0 bd` back into the `0xD83D` code point - this is done so tidy can have a different output encoding - and bingo found this had been partially done before, but now commented out, `#if 0`, with a comment that it breaks `Big5` decoding -\n\n```\n#if 0 /* Breaks Big5 D8 - DF */\n    if (!hasError && (n >= kUTF16LowSurrogateBegin) && (n <= kUTF16HighSurrogateEnd))\n        /* unpaired surrogates not allowed */\n        hasError = yes;\n#endif\n```\n\nI say `partially`, because as you can see it is only checking the first of the `pair`! The comment `unpaired surrogates not allowed` seems to imply that the conversion of a pair into a different utf-8 sequence, a different code point, should/would have been done before this...\n\nNow this code point is stored in an output print line buffer, a `uint *`, and only when it is actually flushed to out, is the output encoding applied - see WriteChar https://github.com/htacg/tidy-html5/blob/master/src/streamio.c#L588 - where the output encoding will determine the output, and again there is a commented out section, for utf-8 output, `if 0`, with the same comment -\n\n```\n    else if (c <= 0xFFFF)  /* 1110 XXXX  three bytes */\n    {\n        buf[0] = (tmbchar) (0xE0 | (c >> 12));\n        buf[1] = (tmbchar) (0x80 | ((c >> 6) & 0x3F));\n        buf[2] = (tmbchar) (0x80 | (c & 0x3F));\n        bytes = 3;\n        if ( c == kUTF8ByteSwapNotAChar || c == kUTF8NotAChar )\n            hasError = yes;\n#if 0 /* Breaks Big5 D8 - DF */\n        else if ( c >= kUTF16LowSurrogateBegin && c <= kUTF16HighSurrogateEnd )\n            /* unpaired surrogates not allowed */\n            hasError = yes;\n#endif\n    }\n```\n\nSo no, I am starting to believe these `surrogate pairs` **must** be handled on input of entities! It seems only at that moment can the idea of a `pair` can be applied...\n\nThe idea would be, when we reach the `;`, fetch one more char from the stream... if it is not another `&`, put it back - tidy has no problem with that - and continue, else range check the value, and if in the low/high range of surrogate, continue and collect the second entity, etc, etc... \n\nThis looks like a good place - https://github.com/htacg/tidy-html5/blob/master/src/lexer.c#L1162 - We already have `ch == 0xd83d`... falls into the pair range... can enter another `while ( (c = TY_(ReadChar)(doc->docIn)) != EndOfStream ) { }` loop fetching the second... can apply the `N = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000`, and get another value, etc, etc...\n\nFrom your comments, and [here](https://en.wikipedia.org/wiki/Universal_Character_Set_characters#Surrogates) I think I read that these code points are divided into leading or \"high surrogates\" `(D800\u2013DBFF)` and trailing or \"low surrogates\" `(DC00\u2013DFFF)`. Assume that means we should range check the first and second differently? And then there is deciding what to do if one or the other fail...\n\nThis might be workable, without **too** much change... need to experiment with this... probably in a branch `surrogates`...\n\nBut am now convinced it is a **bug**, and marking this so... Tidy should try hard to **not** output invalid utf-8...\n\nNaturally would appreciate any help with this... comments, patches, PR... \n\nAnd really thanks for my ongoing education in this weird charset world... always fun...\n. @jckdrpr started to try to code this but ran into my first big bump ;=() **naming conventions!**\n\nThe pair you gave `&#55357;&#56845;`, or `D83D DE0D`, seems correct, but then some naming conventions seem **reversed**?\n\nThe [wiki](https://en.wikipedia.org/wiki/Universal_Character_Set_characters#Surrogates) I pointed to says \"These code points are divided into leading or \"high surrogates\" (D800\u2013DBFF) and trailing or \"low surrogates\" (DC00\u2013DFFF).\" \n\nAnd then you stated \"surrogates are in range U+D800 to U+DBFF (low) and U+DC00 to U+DFFF (high)\", which seems correct in order, but **opposite** in conventional naming low/high!!! \n\nSo the wiki states the leading value, called the \"high surrogates\", is in fact the `lower` value range, `D800-DBFF`, and the trailing value, called the \"low surrogates\", is in fact the 'higher` value range, `DC00-DFFF`... \n\nIt seems a sort of reversal in naming convention... that is **not** named according to the range, but according to the position, in the pair... \n\nWho, which is **right**? Specifically which range should be the first found? Which the second? Assume the wiki is correct...\n\nThen tidy source has a utf8.c, which has 2 services, which like you, seemed named after the **range** values, rather than the **position** - quite confusing...\n\n```\n/* UTF-16 surrogate pair areas */\n#define kUTF16LowSurrogateBegin  0xD800\n#define kUTF16LowSurrogateEnd    0xDBFF\n#define kUTF16HighSurrogateBegin 0xDC00\n#define kUTF16HighSurrogateEnd   0xDFFF\n\nBool    TY_(IsHighSurrogate)( tchar ch )\n{\n    return ( ch >= kUTF16HighSurrogateBegin && ch <= kUTF16HighSurrogateEnd );\n}\nBool    TY_(IsLowSurrogate)( tchar ch )\n{\n    return ( ch >= kUTF16LowSurrogateBegin && ch <= kUTF16LowSurrogateEnd );\n}\n```\n\nIf we go with the wiki positional naming, ie `first == high`, but the **lower** range, and `second == low`, but the **higher** range, then maybe these service should be renamed -\n\n```\nIsHighSurrogatet -> IsTrailingSurrogate or IsSecondSurrogate\nIsLowSurrogatte -> IsLeadingSurrogate or IsFirstSurrogate\n```\n\nOr could keep these names so long as one understands the `first` should be an `IsLowSurrogate`, followed by the second, an `IsHighSurrogate`...\n\nAnd that naming works for the other important services offered -\n\n```\ntchar   TY_(CombineSurrogatePair)( tchar high, tchar low )\n{\n    assert( TY_(IsHighSurrogate)(high) && TY_(IsLowSurrogate)(low) );\n    return ( ((low - kUTF16LowSurrogateBegin) * 0x400) + \n             high - kUTF16HighSurrogateBegin + 0x10000 );\n}\n\nBool   TY_(SplitSurrogatePair)( tchar utf16, tchar* low, tchar* high )\n{\n    Bool status = ( TY_(IsValidCombinedChar)( utf16 ) && high && low );\n    if ( status )\n    {\n        *low  = (utf16 - kUTF16SurrogatesBegin) / 0x400 + kUTF16LowSurrogateBegin;\n        *high = (utf16 - kUTF16SurrogatesBegin) % 0x400 + kUTF16HighSurrogateBegin;\n    }\n    return status;\n}\n```\n\nNote, in that `combine` service, seems should pass in `(tchar second, tchar first)`, which is counter intuitive...\n\nBut somehow still feel should go for `Leading/Trailing`, or `First/Second`, of a **pair**, and avoid the confusing `High/Low`...\n\nStill undecided, but would appreciate comments from others who maybe understand this more...\n\nCoding **stalled** until I get all this completely **clear** in my mind... help... thanks...\n\nPS: Just read yours on sending this... Thanks for your offer to help...\n\nThis is a patch I started - not complete - WIP - but shows the idea, if we have the first of a surrogate, plough on to get the second...\n\n```\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 0fea386..fc01a63 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -1159,6 +1159,62 @@ static void ParseEntity( TidyDocImpl* doc, GetTokenMode mode )\n         found = TY_(EntityInfo)( lexer->lexbuf+start, isXml, &ch, &entver );\n     }\n\n+#if 0 /* 0000000000000000000000000000000000000000 */\n+    /* Issue #483 - Deal with 'surrogate pairs' */\n+    if (!preserveEntities && found && TY_(IsLowSurrogate)(ch))\n+    {\n+        uint c1;\n+        if ((c1 = TY_(ReadChar)(doc->docIn)) == '&') \n+        {\n+            /* have a following entity */\n+            uint start2 = lexer->lexsize;  /* to start at \"&\" */\n+            TY_(AddCharToLexer)(lexer, c1);\n+            entState = ENT_default;\n+            charRead = 0;\n+            while ((c1 = TY_(ReadChar)(doc->docIn)) != EndOfStream)\n+            {\n+                if (c1 == ';')\n+                {\n+                    semicolon = yes;\n+                    break;\n+                }\n+                ++charRead;\n+\n+                if (charRead == 1 && c1 == '#')\n+                {\n+                    TY_(AddCharToLexer)(lexer, c1);\n+                    entState = ENT_numdec;\n+                    continue;\n+                }\n+                else if (charRead == 2 && entState == ENT_numdec\n+                    && (c1 == 'x' || (!isXml && c1 == 'X')))\n+                {\n+                    TY_(AddCharToLexer)(lexer, c1);\n+                    entState = ENT_numhex;\n+                    continue;\n+                }\n+\n+                if (entFn[entState](c1))\n+                {\n+                    TY_(AddCharToLexer)(lexer, c1);\n+                    continue;\n+                }\n+\n+                /* otherwise put it back */\n+                TY_(UngetChar)(c1, doc->docIn);\n+                break;\n+            }\n+\n+        }\n+        else \n+        {\n+            /* otherwise put it back */\n+            TY_(UngetChar)(c1, doc->docIn);\n+        }\n+\n+    }\n+#endif /* 000000000000000000000000000000000 */\n+\n     /* deal with unrecognized or invalid entities */\n     /* #433012 - fix by Randy Waki 17 Feb 01 */\n     /* report invalid NCR's - Terry Teague 01 Sep 01 */\n```\n\nBut stopped after getting confused about high/low, low/high, **and** decided this should be pulled out as a new service, like `GetSurrogatePair`, probably not storing the collected second in the lexer at all... too confusing... \n\nEvery thing will be fixed if we can get the combined value into the `ch` variable, `0x1f60d`, then tidy will store `fo 9f 98 8d` in the lexer, having eaten the two entities... WIP...\n. @jckdrpr thanks for clarifying...\n\nYes, while maybe changing the Tidy function names might be a good idea, I decided to press on using the current slightly confusing names...\n\nHave now pushed what I think is a **fix** to a `surrogates` branch - to try it out -\n\n```\n$ cd tidy-html5\n$ git pull\n$ git checkout surrogates\n$ cd build, and build, test...\n```\n\nNow loading the output into a browser I see the funny emoticon ;=))\n\nAt this stage I have done nothing about when a **leading** entity is found, and the **trailing** entity fails, but left a TODO: note in the code...\n\nHope you get a chance to test this `surrogates` branch and look forward to suggestions on dealing with an error condition... thanks...\n. @jckdrpr just for **fun** I wrote a short perl script to generate all 1,048,576 `surrogate pairs` entities, in a big table... then ran tidy 5.3.16I483, the `surrogates` branch, and found Tidy rejected 32 of them... not sure why yet... they seem the last two at the end of a row... and I note the Tidy service, `IsValidCombinedChar` says no to FFFE and FFFF...\n\n```perl\n# range\n# Leading: U+D800 to U+DBFF (High - low range) and\n# Trailing U+DC00 to U+DFFF (Low - high range) \n# (1,024 \u00d7 1,024 = 1,048,576 code points\nsub gen_surrogates() {\n    my ($x,$y,$e1,$e2);\n    my $count = 0;\n    my $width = 32; # 64;\n    my $htm = \"<table>\\n\";\n    my $wrap = 0;\n    for ($x = 0xd800; $x <= 0xdbff; $x++) {\n        for ($y = 0xdc00; $y <= 0xdfff; $y++) {\n            $count++;\n            $e1 = sprintf(\"&#%u;\",$x);\n            $e2 = sprintf(\"&#%u;\",$y);\n            if ($wrap == 0) {\n                $htm .= \"<tr>\\n\";\n            }\n            $htm .= \"<td>$e1$e2</td>\\n\";\n            $wrap++;\n            if ($wrap >= $width) {\n                $wrap = 0;\n                $htm .= \"</tr>\\n\";\n            }\n        }\n    }\n    $htm .= \"</table>\\n\";\n    $x = get_nn($count);    # just add the comas\n    prt(\"Generated $x surrogate pairs...\\n\");\n    write2file($htm,$out_file);\n    prt(\"html written to $out_file\\n\");\n}\n```\n\nThen when I loaded the tidied file into a browser - takes a **long** time to load - many minutes! Is a 16MB html file - found zillions of them that do not correspond to a glyph in my Windows 10 system... just get an open squarish box... but also found they produce some very, **VERY**, interesting and complicated glyphs... some very ccolorful... seems all the emoticons, including your test sample, many I had never seen before... of course **lots** of what looks like Chinese characters...\n\nI have copied the tidied file to - http://geoffair.org/tmp/surrogates.html - but don't blame me if it blows up your browser ;=() \n\nAnd seem to get many more glyphs shown in linux, than in windows... in fact there seems no `blanks` like a see in Windows, but they do not `look` right... each is multiple??? Something wrong there... seems not being interpretated as utf-8 at all???\n\nAnyway, interesting, but all just for **fun**...\n. @jckdrpr, wow, had to read up on \"What is Haskell?\" ;=)) Looks interesting, and may give it a try...\n\nHowever, in dealing with the error cases, found several **bugs** in my implementation, and have now pushed a **fix** to the `surrogates` branch.\n\nNow, with this fix, if Tidy encounters an invalid `surrogate pair`, Tidy just silently generates the invalid utf-8, as before... no warning/error yet issued!\n\nSo, the first question is what error message should be output? And then should this be a `warning`, or an `error`? At this moment I tend to think `error`! As you may know tidy will **not** produce an output if an error condition, unless you add [--force-output yes](http://api.html-tidy.org/tidy/quickref_5.2.0.html#force-output). Tidy should **not** output invalid utf-8!\n\nAnd then what to do about it? I note in a utf-8 decode error - https://github.com/htacg/tidy-html5/blob/master/src/utf8.c#L447 - Tidy will substitute code point `0xFFFD`. Is that also a good idea for this **bad** `surrogate pairs` case, together with a warning message of course?\n\nReally seek your ideas on this, and comments from other, so we can settle on a direction... thanks...\n. @jckdrpr thanks for the feedback, and no apology needed! A late reply is much better than **no** reply...\n\n> ... directly creating an error would not be ideal ...\n\nBut that is **exactly** what tidy does now! It generates **invalid** utf-8! That should **not** happen!\n\nAnd looking more into the code point `U+FFFD`, `bf bf bd`, the so called `replacement character`, is exactly what I see browsers do when trying to display an invalid utf-8 - they display a black diamond with a white question mark - ie `U+FFFD`!\n\nRemember, my **fixed** `surrogates` branch tidy now correctly generates over 1 million `surrogate paris` perfectly correctly, at least generates the valid 4-byte utf-8 sequences, so this `replacement character`, basically a question mark, is only in the following **limited** circumstances -\n\n 1. have a valid leading surrogate entity, and a valid trailing entity, but is one of the 32 out-of-range cases - add 2 `U+FFFD`, replacing both entities.\n 2. have a valid leading surrogate entity, but an invalid trailing entity - just add 1 `U+FFFD`, replacing the leading entity, and let tidy deal with what ever the second is.\n 3. have a trailing surrogate entity, with no leading - just add 1 `U+FFFD`, replacing that entity.\n\nAnd in each case, output a warning message, advising the problem encountered, 1, 2, 3. Still to decide if that should be a warning, or an error.\n\nThe warning/error messages could be something like -\n\n 1. Have out-of-range surrogate pair U+XXXX:U+XXXX, replaced with two U+FFFD values.\n 2. Leading (High) surrogate pair U+XXXX, with no trailing (Low) entity, replaced with U+FFFD\n 3. Trailing (Low) surrogate pair U+XXXX, with no leading (High) entity, replaced with U+FFFD\n\nSo then this issue as written - `Generates invalid utf-8 (Surrogate pairs)` - would be **solved**... and tidy would **never** output invalid utf-8... at least in this `surrogate pair` case...\n\nReconsidering, what do you, and others think? Thanks...\n\nP.S. Unfortunately meeting my **favorite** language, `Haskell` will have to wait a while ;=))\n. @balthisar, @jckdrpr thanks for the feedback, and agree, if we are going to use the substitute character, U+FFFD, then yes Tidy will be outputing valid utf-8, so this should be a **warning** messages only, advising  of the problem and substitution done...\n\nI have modified my new `GetSurrogatePair()` service to return an enumerated `SPStatus` value...\n\n 1. `SP_ok` means all done and combined character is good to go - combine char added - works for over 1 million valid surrogate pairs.\n 2. `SP_failed` means found two entities, but is one of the 32 out-of-range pairs. Will eat the two value, warn, and add 1 (or 2) substitute chars.\n 3. `SP_error` means could not get the second, so only eat first, use sub. char, and warn failed to get the second of a pair.\n\nAnd added the case where a trailing pair value found with no leading. Warn and use the substitute U+FFFD. So this now covers the 3 warnings given above.\n\nThen add 3 new `tidyErrorCodes` enumerations -\n\n 1. BAD_SURROGATE_PAIR, = got lead, tail, but have out of range pair\n 2. BAD_SURROGATE_TAIL, = got lead, but failed to get valid trailing\n 3. BAD_SURROGATE_LEAD, = got tail, but no lead\n\nNow came unstuck when adding the warning messages. @balthisar seems I have not been following too well all your language work. Started a README/MESSAGE.md, and understood some things, but then saw **new** stuff that do not yet understand.\n\nI hope you can help fill out my MESSAGE.md, describing, if possible each change that is needed to establish these 3 new messages. Don't worry about the code to do the actual message formatting yet. I will handle that...\n\nSo I have pushed my WIP to the `surrogates` **branch**. It should all work, but **without** the actual warning messages being output. Need to test and review all my code logic, **especially** for the error cases... that is 1. good pair, but out of range, 2. good lead, but some rubbish following, and 3. trailing without a leading... \n\nWell warnings **are** output, but only using `fprintf(stderr,\"format\"...);` mechanism... search for `SP WARNING:`... would really appreciate if the error conditions could all be tested... realising this is WIP... thanks...\n\nAlso have not solved how to output 2 sub. chars in case 1.\n\nMy cases:\n\n 1. in_483.html   - `&#55357;&#56845;` - valid pair - no warning\n 2. in_483-1.html - `&#55359;&#57342;` - out of range pair\n 3. in_483-2.html - `&#55357;no tail`  - no trailing pair\n 4. in_483-3.html - `no lead&#56845;`  - no leading pair\n\nPS: These test files are (temporarily) in my repo - https://github.com/geoffmcl/tidy-test, in the test/input5 folder... each run with `-o out_483-1.html --show-body-only yes --show-info no in_483-1.html`, view the messages, and load the out in a browser for viewing, and check that the out contains valid utf-8 using the **messy** tools from this repo - https://github.com/geoffmcl/utf8-test\n\n. @balthisar thanks for the comment...\n\n> I'll have a look at fleshing it out. \n\nThat would be greatly appreciated...\n\n> ...use of the existing message output functions.\n\nYes, **absolutely**!\n\nI have started to look a little deeper. We are in decoding an entity, and there is an existing `TY_(ReportEntityError)()`. but this does **not** seem very suitable. This has things like `UNKNOWN_ENTITY`, which will report like `unescaped & or unknown entity \"&rubbish;\"`, and a few others like this, but as I say, do not seem particulary good for these `surrogate pairs`!\n\nAs I have already added, and envisage 3 messages like, although would appreciate any thoughts on the **exact** wording -\n\n```\n{ BAD_SURROGATE_PAIR,  0,  \"Have out-of-range surrogate pair U+%s:U+%s, replaced with 2 U+FFFD values.\"}, /* warning */\n{ BAD_SURROGATE_TAIL,  0,  \"Leading (High) surrogate pair U+%s, with no trailing (Low) entity, replaced with U+FFFD.\" }, /* warning */\n{ BAD_SURROGATE_LEAD,  0,  \"Trailing (Low) surrogate pair U+%s, with no leading (High) entity, replaced with U+FFFD.\" }, /* warning */\n```\n\nAnd as already reported, the `replaced with 2` is not yet a reality...\n\nYou can already see I want to be quite explicit and show what the problem with the pair really is - 1. bad pair, 2. bad trailing, 3. bad leading - and show the substitution. Maybe I am being too, just **TOO** ambitious?\n\nAnd maybe actually reporting using `code points`, as the above suggests, is also too much? Up until I started doing this issue, I too was quite confused by `code points` - what is that? But ok, I now have a much better idea, and they do describe the situation very precisely... once you `understand`...\n\nMaybe we would need a new service like say `TY_(ReportSurrogatePairError)()`, but again was hoping to avoid that, and use one of the existing `report error` services, like `TY_(ReportWarning)()`...\n\nBut on the other hand, we do already have more that a dozen `ReportXXXX`, so maybe yet another, special for `surrogate pairs`, is not really a bad thing...\n\nStarting to **sink** in the **sea of options**, and thus **stalled**! ;=() Any comments appreciated...\n. @balthisar ok, added a new `ReportSurrogateError` service... and replaced all my previous `fprintf` messages with this, and pushed... seems to be working fine...\n\nIf someone can test and confirm, will merge this `surrogates` branch, and close this is as fixed... thanks...\n. Added PR #490...\n. @balthisar thanks for updating the [MESSAGES.md](https://github.com/htacg/tidy-html5/blob/surrogates/README/MESSAGES.md)... this looks good...\n\nNow that you are back I **must** get used to doing a `git pull`, a lot, otherwise you get a nasty message when you try to `push` ;=))\n\nYou will note that in the new service, using `%04X` in the message format string easily handled outputting the `U+XXXX` code point, so no special effort needed here...\n\nHope you get a chance to test it... I have, using my 4 test files, and it seems to work fine...\n. LWillms thank you for your issue...\n\nYes, my preference too would be to sometimes, in some cases, have **less** vertical newline space, especially in lists and tables. As you suggest, keeping certain tags in a single line, especially if `wrap:0`, which in a way even implies this...\n\nSome little steps were taken in this regard, and an option `--vertical-space auto/no/yes`, ie [vertical-space](http://api.html-tidy.org/tidy/quickref_5.2.0.html#vertical-space), was added. Take care, the `auto` will eliminate nearly **all** vertical space, and the `yes` will add some additional vertical space in some cases, so this does not help this case...\n\nAnd it is further complicated by the fact that adding the indent option `-i` also adds vertical space. I do not understand your second `<p>Looong text...</p>` example. Tidy does seem to keep that **inline**?\n\nThis has been a hot topic, mentioned in many issues. See #158, #163, #179, #189, #227, #228, and probably others...\n\nSo yes, this is a `Feature Request`, for `Pretty Printing`. If you, or others, want to present some ideas, as a PR, in a forked branch, I would certainly review, and consider it, but obviously as a new `option`, which should default **no**, at least initially... or as a level, like `vertical-level:0-5`, or whatever... thanks...\n. @LWillms thanks for the additional comment...\n\nCould you please avoid truncating the lines... they become **useless** as sample html to test... \n\nYou do know you can drag and drop files here, and github will upload the data, and present a link pointer for downloading, so we can get the **complete** files for testing...\n\nThen do the same with the current tidy output, manually re-lining them to what you would like to see... and we have a full target files to **match** with...\n\nYes, I do think I see the grouping you would like... and this can be done by modification of the `pprint.c` module... \n\nAll we **need** is some C programmer, with the **time**, to take on the task, and present patches or a PR... I will help where I can... thanks...\n. @LWillms while it seems generally **agreed** by some Tidy could do with some TLC in the `Pretty Printing` vertical spacing department, it still requires someone to actually do the coding... Have not seen that yet...\n\nThe biggest problem seems to be that each have their personal **preference**... I personally generally have no problem with the current output, so that coder is unlikely to be me...\n. @LWillms I guess I really should try to stay out of this... since my strong view on backward compatibility is well known... early tidy **loved** vertical space...\n\nFirst @balthisar proposal starts with `propose breaking past behavior`, and ends with a `current behavior breaker`... \n\nMy reply to that is simply! `Why does it have to be that`? Why can't we keep the current behavior, for perhaps **many** people, over some 17 years, that have their config files in place... why break it for them?\n\nI have nothing wrong with enhancing the behavior, with **new** opt-in options, that create a different output.. that seems good... go for it... would help...\n\nThen, although I have read this many times, I am still **unclear** of exactly what you want, **prefer**!\n\nAnd as you point out `it is not 100% clear what is meant by the \"fine grained control\"`... are we going to have a **new** option for just about every element? What is included, excluded? What does a `yes` mean, what does a `no` mean...\n\nUnfortunately, the large sample files you gave seem to be confusing... it seems for sure you want `<li>....</li>`, on the **same** line, but **not** if it contains other `<ol>` elements... similarly for many other `elements`, like `<p>`, `<hN>`, etc... but you do seem to want `<div>` separated by even an extra line...\n\nNow that is **your** preference, no problem, and maybe having **new** options to do this would be good... and if @balthisar wants to take this on, then that too is good...\n\nBut on the other hand, I have no doubt others feel differently, including me...\n\nSo while there is a glimmer of an idea here to offer more `fine-grained` control over vertical space, it seems far from clear what exactly are we talking about...\n\nThe assigning a `milestone` says nothing about when it **will** be done... and will be moved it out if another releases approaches, and there is no **agreed**, coded, tested, solution...\n\nAnyway, as stated, I will try to stay out of this **preferences** battle, so long as the current behavior is **not** broken... thanks...\n. @LWillms thanks for the further feedback... this is helping, **me** at least, to **more** understand your **preference**...\n\nAs stated it might really **help** if you construct some **small** samples to be used in testing... like I tried -\n\nInput: \n\n```html\n  <ul>\n    <li>\n      <a href=\"#one\">List 1</a>\n    </li>\n    <ol>\n      <li>\n        <a href=\"#ord1\">Ord 1</a>\n      </li>\n      <li>\n        <a href=\"#ord2\">Ord 2</a>\n      </li>\n    </ol>\n    <li>\n      <a href=\"#two\">List 2</a>\n    </li>\n    <ol>\n      <li>\n        <a href=\"#ord3\">ord 1</a>\n      </li>\n      <li>\n        <a href=\"#ord4\">ord 2</a>\n      </li>\n    </ol>\n  </ul>\n```\n\nAnd using tidy default, with `--show-body-only yes`, and maybe with `-w 0`, if needed, due to length, I get the `<li>` output in one line -\n\nOutput:\n\n```html\n<ul>\n<li><a href=\"#one\">List 1</a></li>\n<ol>\n<li><a href=\"#ord1\">Ord 1</a></li>\n<li><a href=\"#ord2\">Ord 2</a></li>\n</ol>\n<li><a href=\"#two\">List 2</a></li>\n<ol>\n<li><a href=\"#ord3\">ord 1</a></li>\n<li><a href=\"#ord4\">ord 2</a></li>\n</ol>\n</ul>\n```\n\nAnd I **do** find it **strange** that just adding the `-i`, indent option will re-produce the multi-lined `Input:` version... hmmm...\n\nBut what this shows is that it would be relatively easy to **add** another option, of some name or another, to stop that newline being added to the `<a ...>` tags, if indent on... But as stated this would have to be an opt-in option... \n\nThat is **allow** others to have their current **preference**, and **not** break current behavior... \n\nAfter all it make no difference to browser rendering... just in an editor view of the source... so is **not** a **bug**... just a **preference**... which I am sure maybe others might be interested in...\n\nSo I am sure it would help to setup **small** samples, showing `input`, current `output` with options used, and `expected` output... for each situation... it will be longer if you push the code developer to do this...\n\nYes, you may **try** to describe it using semantics like `block`, `inline`, etc, but it is difficult to agree what these words actually mean... especially when for example `<p>`, `<h1-6>`, ... are often described as a `block` elements, yet you seem to want them to be sort of output as a single line... \n\nNo particular idea about `text structuring tags`... except what I can read in a google search...\n\nConcerning self-written post-processing, I would probably use Perl, but that is just because I am more familiar with it than Python... but I do **not** think it would be a `one-liner` ;=))\n\nAnd in what you showed, I think the `other command` would be more like `tidy -q [options] file.html | python ...` the `-q`, quiet option, stops tidy outputting to errout, which should not be `piped` to python...\n\nGood luck with this... will help where I can... thanks...\n. @LWillms I live a little south of Paris, in Antony, France, which I just added to my `profile`, which is presently on CEST, or CEDT or ECST... which is probably the **same** as you, with `summertime`, DST...\n\nOT: I understand, during the war, France took on German time, and after it was finished, never reverted. Logitude wise, France, and probably Spain, should probably be on UTC/GMT time, but then there is the interesting **relationship** between France and England, which probably does **not** help this case... and even more now with `Brexit` ;=))\n\nI think you are **correct** that say a `<ul>` can **not** be the direct descendant of say an `<ol>`, and vice versa, and etc... these should be an **error**, at least according to the W3C validator... but they can be descendants of a `<li>`... ie **nested lists**...\n\nHave **not** yet found the direct W3C docs/recs on this, but any pointers would be appreciated...\n\nAt present tidy does not **bark** at this! If you want to file a **separate** issue on this, with a small sample, that would be great... it is probably a **bug**, once the recs are found...\n\nAs far as **this** `Pretty Print` **preference** issue is concerned, you have **not** added much, except another link to a **large** file, which, as I have tried to indicate, is nearly **useless** as a testing sample...\n\nBut we are still waiting for @balthisar, or other **coders**, interested enough to step into the `tangled shrubbery` of options, LOL, and suggest a way forward... maybe with **new** opt-in options, but no **breakage**... thanks...\n. @LWillms **wow**, my inbox is **flooded** with emails - 23:21. 23:23, 23:24, 23:26, 23:26, 23:28 - What are you doing?\n\nAll seemingly a **repeat**... Please **try** to avoid that...\n\nOk, we get your **preference** is that an `<li>...</li>` be output on the **same** line, even if `-i` is  used... **we get that**, **we understand!**, and a very simple few line sample would show that... which you have now learned, can be pasted inside three back ticks, in the github markdown system...\n\nRead [Styling with Markdown is supported](https://guides.github.com/features/mastering-markdown/)... or other references...\n\nSo, I am sorry, **nothing** new added here, except more posts... more **noise**... no problem...\n\nAlso, please understand, your first **post** is what reaches `our` **inbox**, to alert us there is a **post**, but subsequent edits to that post are **not** dispatched... the only way we see the **final** is through adressing [issues](https://github.com/htacg/tidy-html5/issues) directly... \n\nIt is **preferred** you prepare your posts in an editor, like me, then copy-paste it to issues, and use **preview** to read, see how it will look... sometimes **several** cycles until I get it right...\n\nOf course you do now reveal your `config` used, and I have several comments on that -\n\n```\noutput-html: yes # is the default, not needed\ndoctype: html5  # is the default, not needed\ninput-encoding: latin1  # ok, interesting...\noutput-encoding: utf8   # is the default, not needed\noutput-bom: yes # wow, really! With output utf-8 no BOM needed, but ok!\nclean: yes  # ok\nindent: yes # ok\nwrap: 0     # ok\nvertical-space: no  # is the default, not needed\nnew-inline-tags: math, mroot, mrow, mi, mn, mo, msqrt, mfrac, \n msubsup, munderover, munder, mover, mmultiscripts, msup, msub, \n mtext, mprescripts, mtable, mtr, mtd, mth  # the sample has none of these, but I think most now supported by default, but ok...\n```\n\nMoving forward... thanks...\n. @LWillms yes, I too, on **very rare** occasions, can get a 10-30 second delay, before my comment appears - almost as if github.com server is **asleep**! - so one must learn to be **patient**... but no problem... you did clean up the list... thanks...\n\nFor some strange historic reason the comment lines in config commence with `//`... you can see this in [tidy_config](http://api.html-tidy.org/tidy/tidylib_api_next/tidy_config.html)... scroll down to the `Sample`... which looks like the `sample` you started with...\n\nIn reading the source [config.c](https://github.com/htacg/tidy-html5/blob/next/src/config.c#L802) it also skips lines commencing with `#`, which seems `undocumented` as far as I can find...\n\nYes, you may add as many config items as you want... I even had one person recently suggest having a `sample` with them **all**, as a sort of reminder... but rejected that, as more upkeep... and you can get a current alphabetic list with `-show-config`...\n\nI was merely try to indicated that default items are **not** needed, nothing more... just trying to be helpful...\n\nAnd glad you now understand tidy can have different input and output encoding... the default being `utf-8`...\n\nThe choice of what is in the so called **first** level of `-h` is always difficult, and generally have a copy of the `-help-config` output handy, and use the [quickref](http://api.html-tidy.org/tidy/quickref_next.html) frequently... it is always a learning process, even for me...\n\nHTH\n. @LWillms as you may know, with current `Tidy`, the option `-show-config` will output the default option list, as did the Tidy version 2009...\n\nAnd it was interesting to compare the `input`, `output` encoding change -\n\n```\n2009:\ninput-encoding              Encoding   latin1\noutput-encoding             Encoding   ascii\n2017:\ninput-encoding              Encoding   utf8                                    \noutput-encoding             Encoding   utf8\n```\n\nWith a little bit of perl scripting, I was able to massage this `-show-config` list easily into a **full** default config file for tidy... could post that `tidy-conf.pl` somewhere, if interested... in fact just added it to http://geoffair.org/tmp/tidy-conf.pl.zip ...\n\nUsage:\n\n```\ntidy -show-config > temptidy.conf\nperl -f tidy-conf.pl temptidy.conf\n```\n\nAnd it should write a full `tidy-def.conf` file locally...\n\nPerhaps you already know, you can use the environment variable `HTML_TIDY` to always load such a default config... before the command line is processed... so it can be over-ridden on the command line, or in another `-config new.conf` option...\n\n```\nset HTML_TIDY=/path/to/tidy-def.conf\n```\n\nThere are so many ways of using `granddaddy` **`tidy`** ;=)) but we are getting way off the topic of this issue...\n\nWho is interested in looking at this `Pretty Print` **preference** issue? Thanks\n. Although no further comments in many months, and no one stepping up to do the coding, maybe this is still open, so moving out the milestone.... @rkopaliani thanks for your issue, but I am confused over a few things here...\n\n 1. A problem with the `[if mso]` comment?\n 2. What is the DOCTYPE you want?\n 3. What character set are you using?\n\nAfter a few attempts I was able to construct in input which passes W3C validation -\n\n```html\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n            \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<META http-equiv=Content-Type content=\"text/html; charset=iso-8859-1\">\n<title>Issue #487-2</title>\n  <!--[if mso]>\n  <![end if]-->\n<body>\n<p> Yada yada yada </p>\n</body>\n</html>\n```\n\nAnd the latest Tidy also has **no** problem with this -\n\n```html\ntidy input5\\in_487-2.html\nInfo: Doctype given is \"-//W3C//DTD HTML 4.01 Transitional//EN\"\nInfo: Document content looks like HTML 4.01 Strict\nNo warnings or errors were found.\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.3.15\">\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>Issue #487-2</title>\n<!--[if mso]>\n  <![end if]-->\n</head>\n<body>\n<p>Yada yada yada</p>\n</body>\n</html>\n\nAbout HTML Tidy: https://github.com/htacg/tidy-html5\netc...\n```\n\nBut could **never** get `<!\u2014[if mso]><![end if]\u2014>`, ie using em dash, to pass the validator - get warning, and two errors -\n\n```\nuploaded file in_487.html\n 1. Warning: Legacy encoding windows-1252 used. Documents should use UTF-8.\n 2. Error: Bogus comment.\n    At line 5, column 7 <!\u2014[if mso]>\n 3. Error: Bogus comment.\n    At line 6, column 7 <![end if]\u2014>\n```\n\nAnd as you point out, tidy just eats all the `<body>`...\n\nTidy also has no problem if I put the `em dash` in the body text, like `<p> Yada \u2014 yada \u2014 yada </p>`, and add the option `--char-encoding win1252`, except it will convert the output to entities, like `<p>Yada &mdash; yada &mdash; yada</p>`\n\nI have also re-tested issue #153, with current tidy, and there seems still **no** problem there, so maybe these are **not** related...\n\nSo I am afraid you really need to clarify what you want to do! \n\nThe premier thing would be to give a simple sample document that **passes** https://validator.w3.org/#validate_by_upload, then show what **tidy** does wrong, and what you expect of **tidy**... thanks...\n. @rkopaliani, @balthisar, thanks for the added comments...\n\nI have now had time to do a careful MSVC debug session, using your sample case, for a few hours, very slow, meticulous and tedious, and here is what I found, in **detail**...\n\nIn lexer.c, in GetTokenFromStream(), on finding a `<` char switches state `lexer->state = LEX_GT; continue;` to get next char. When in this state, if the next character is `!`, then tidy immediately reads the next character. There is a quite telling comment in the code at this point, which indicates maybe more could or needs to be added -\n\n```\n                /*\n                   look out for comments, doctype or marked sections\n                   this isn't quite right, but its getting there ...\n                */\n```\n\nNow if the next character is a hyphen, `-`, then tidy gets one more, and if two found, then changes state `lexer->state = LEX_COMMENT;  /* comment */`. Easy, no problem...\n\nBut in this case it is an em dash, dec 151, 0x97, which, if the `--char-encoding win1251`, tidy will convert into utf-16 0x002014. Why, I do not yet know. Need to explore... see more below on this..\n\nIf this next had been an `[` char, then the state would be set `lexer->state = LEX_SECTION;... continue;`\n\nBut with this `em dash`, now tidy will now eat characters until it finds a `>` character... the code comment is `/* else swallow characters up to and including next '>' */`...\n\nOn reaching the next `>` will scrub out the `<!` in the lexer, and switch the state `lexer->state = LEX_CONTENT; ... continue;`, so in the sample given the first `<!\u2014[if mso]>` will just be wholly discarded, without a warning, or any indication of **lost** content...\n\nTidy will now swallow the newline, and leading spaces to get to the next char, which is another `<`, so switches state again to `lexer->state = LEX_GT; continue;` and get next...\n\nSince the next is a `!`, then as above, tidy immediately reads the next, which this time is a '[', so tidy clears the `<!` from the lexer, and sets `lexer->state = LEX_SECTION; continue;`... the comment here is `/* Word 2000 embeds <![if ...]> ... <![endif]> sequences */`...\n\nThe next character is an `e` of `endif`, and the code comment is `case LEX_SECTION: /* seen \"<![\" so look for \"]>\" */`\n\nSo on getting the `]` looks for `>`, or as per #153 also `-->`, but what it gets is the `em dash`, transformed, by `DecodeWin1252` into 0x2040, per a table with the comment - \n\n```\n/* Mapping for Windows Western character set CP 1252\n** (chars 128-159/U+0080-U+009F) to Unicode.\n*/\nstatic const uint Win2Unicode[32] =\n{\n    0x20AC, 0x0000, 0x201A, 0x0192, 0x201E, 0x2026, 0x2020, 0x2021,\n    0x02C6, 0x2030, 0x0160, 0x2039, 0x0152, 0x0000, 0x017D, 0x0000,\n    0x0000, 0x2018, 0x2019, 0x201C, 0x201D, 0x2022, 0x2013, 0x2014,\n    0x02DC, 0x2122, 0x0161, 0x203A, 0x0153, 0x0000, 0x017E, 0x0178\n};\n```\nSo the 0x97, dec 151, em dash becomes Win2Unicode[151 - 128], ie 0x2014. I do not know if the table is right or wrong, but this page - http://www.fileformat.info/info/unicode/char//2014/index.htm - seems to suggest that it is correct...\n\nNow the **weird** part! Tidy just puts this 0x2014 back - `TY_(UngetChar)(c, doc->docIn); continue;`, stays in the `LEX_SECTION` state. So when it gets this 0x2014 back, and adds it to the lexer, as utf8, e2 80 94, it then goes on looking for the `]` char! \n\n**BUT** the problem, in this case, is it has already **passed** the `]`, so, in this case, will reach the end of the document, stuck in this `LEX_SECTION` state, and at the EOF, will discard everything... and return a NULL node!\n\nAt that time tidy was in `ParseHead()`, which on getting a NULL, will exit there, with, in this case the whole document used up, and discarded...\n\nSo, in addition to the above warning about eaten content, I can at least see another warning, something like, \"Reached EOF in the get 'section' state, while looking for `]>`, or `]-->`\".\n\nOr alternatively, know, or keep the memory, that we have seen a `]`, and stop at the next `>`, regardless... Need to think about this...\n\nAnd also need to ponder on why the first, agreed badly formed so called `section` content was discarded. Is there a way to keep this, but still maybe warn about it being mal-formed? Maybe even correct it...\n\nOn some other thing read in the comments... \n\n 1. You want DOCTYPE html. That is good. We can forget old, complicate legacy doctypes! Go all html5 - yay!\n 2. utf8 - That is also good, but then you can **not** have an `em dash`, a win1252 character, in the document!\n 3. This has nothing to do with `tidyCleanAndRepair()`, which is a later stage. The body content is lost during the lexer parsing phase.\n\nMore on item 2. There are some utf-8 checkers out there. I have some **messy** code in https://github.com/geoffmcl/utf8-test, but I am sure there may be others... \n\nTidy **defaults** to utf-8, and will **scream** if passed an invalid sequence, 0x97 in this case, unless explicitly configured to expect other than fully correct utf-8 sequences. So you would need some pre-file processing before passing this to tidy, with the correct `--char-encoding xxx` config.\n\nSo yes, I now see this as a **bug**, and marking it so. But as stated need to think a little about a solution, or at least a clear warning or two, why most of the document was thrown away...\n\nFurther comments would be appreciated... thanks...\n. @rkopaliani, @balthisar, @ralfjunker, I just noticed this is virtually the **same** as #462... and there a solution has been suggested, namely that tidy should allow `<![endif] EXTRA >`, which of course would include your `<![end if]\u2014>`, at least if `TidyWord2000` (`--word-2000 on`), but maybe even without this...\n\nNow that we have a crossrefernce, I this think one or the other should be closed, while we decide a good solution for this...\n\nSeek ideas, comments, patches or PR... thanks...\n. As we are about to release 5.4, moving this out to `next` 5.5... thanks. As appears still open, moving the milestone out yet again...\n. @balthisar have quickly tried and tested this, with my `input5\\in_488.html` - no attributes, and `input5\\in_488-1.html` - with attributes...\n\nOf course, this only effects `<script ...>`, i.e. with attributes, otherwise such blank script tags are dropped anyway, unless the option `--drop-empty-elements no` is added. But your patch puts the `<script></script>` on one line, and looks **good** to me...\n\nOne small suggested addition, would be that I note if I have -\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>PR #488</title>\n<script>\n</script>\n</head>\n<body>\n<p>Blank script tags</p>\n<script>\n</script>\n</body>\n</html>\n```\n\nand run `$ tidy --drop-empty-element no input5\\in_488.html` I get a **nasty** newline after the `<title>`, before `<script></script>`. Maybe this should only happen if in tidy so called `classic` mode, i.e. `--vertical-space yes`, `TidyClassicVS`, and **stupidly** if I add this option this vertical space goes away, which seems **opposite** to the intent... but maybe this can be a separate issue...\n\nAnd then thinking about this more, maybe your `if ( node->content != NULL )` could also include a test for this `classic` mode, which in general means people do **prefer** `more` vertical space, like `if ( ( node->content != NULL ) || TidyClassicVS )`, but this is just a thought... and again could be separate...\n\nAs stated, generally agree with it **as is**... please merge and bump version when you like... thanks...\n. @balthisar this reads really **well**... have no problem with it being merged any time... with or without a version bump... thanks...\n. Sorry., did not mean to do that... just clicked on the wrong button...\n. @eric-brechemier as indicate in researching #492, the `-xml-help` and `-xml-config` are generated from different tables, which contain different levels of information about an option...\n\nThe `-xml-help` option is generated from a table local to `tidy.c`, namely `cmdopt_defs`, which, as the name implies, only lists all the single dash command line options supported by the console app. And that app `converts` those command line options, and passes the appropriate option into the library...\n\nThe `-xml-config` on the other hand is generated from the internal to libTidy `option_defs` table, which are all the config options supported by tidy. They can be used on the command line as double dash items, or placed in a config file.\n\nAs you know, and helped change, it is the combination of these two type of options, and two types of xml output, that are combined together by `xsltproc` to produce the tidy man page... Formally, there were two `OPTIONS` sections, now correctly only one... all the single dash, command line only, followed by all the double dash options, which can also be placed in a config file...\n\nSo I would have to ask **why** would you want the `<name>` values of `-xml-config` to be as those of `-xml-help`? What do we gain? What does it add? How would it be used?\n\nMaybe I misunderstand something here... or got something wrong... please explain... thanks...\n. @eric-brechemier took me a bit of time to look into this... sorry...\n\nHmmm, these command-line options come from a specfically created table in `tidy.c`, and at present that table does **not** directly contain the type information, but that information does come as an internationalized string...\n\nThat **same** `cmdopt_defs` table is also used for the `-h`, `-?`, `--help`, ie the standard help option, where the `%s` **is** converted to a string, like you suggest... see the function `print_help_option()`...\n\nSo say `-output <%s>` **is** output as `-output <file>`, in English, and maybe `-output <fichier>`, in French, and `-wrap <%s>` becomes `-wrap <column>`, in English, and something else in french, german, etc, etc, etc...\n\nIt does this in `localize_option_names(CmdOptDesc *pos)`, where, as the comment there states, \"the option names aren't localized, but... `<file>` should be `<archivo>` in Spanish\". It gets the local sub-key, `tidyLocalizedString(pos->subKey);`, and allocates memory and formats the complete string in `tmbstr stringWithFormat( const ctmbstr fmt, ... )`...\n\nNow why is this **not** done when the output is in xml, from `-xml-help`? I guess just overlooked, or something... \n\nNow this XML is done in the function `xml_help()`, `print_xml_help_option()`, `print_xml_help_option_element(\"name\", pos->name1)`... Of course another wrinkle in XML output is that the `<` and `>` must also be escaped... \n\nBut there seems no reason why the same allocation with localized substitutions done could not also be done for XML... That `tidy-help.xml` **is** passed to `xsltproc`, to generate the man page... so this may need to also be considered...\n\nI hope I have given enough clues as to where and how this is done in the normal help, so this could be applied to the XML output in the same, or similar way... if it presents no problem to `xsltproc`...\n\nLook forward to comments, patches or even a PR to close this... thanks...\n\nAnd it also provides some clues about #491... why in one case we have `<name>` with a dash, and not in the other - they are generated from completely different tables... but will now try to look deeper there, and see what can be done...\n. @balthisar well you changed the `-output <%s>` to `-output <file>`, but yes you did not apply the same changes, substitutions to the `<eqconfig>` entry, in `tidy-help.xml`...\n\nSeems just a few more tiny steps ;=))\n. @eric-brechemier thanks for this issue...\n\nSimilar to my comment in #491, why would you want the `<seealso>` values of `-xml-config` to be like the `<eqconfig>` values of `-xml-help`?\n\nAs indicated there, they come from different tables, with different level of information about an option.\n\nWhile processing the `-xml-config`, namely the libraries `option_defs` table, there is a second table `docs_xrefs[]`, which cross references certain config options with some other config options, if present for any option these will be output as `<seealso>`... Since these are all **config** type options, then each could be used on the command line with a double dash, or in a config file with a colon, `:`... Indeed some of them **may** have a single dash command line option, but we have no such cross-referenced table...\n\nWhile processing the '-xml-help', namely the `tidy.c` table, `cmdopt_defs`, some of these single dash command line options will have a hard coded double dash config options, and these will be shown as `<eqconfig>`... I do not know why each of these are shown only in the colon form..\n\nSo in the first case, `<seealso>` they are just possibly related things, like if you are interested in say `wrap-attributes`, then you may also be interested in say `wrap-script-literals`, or `literal-attributes`, but these are just hints, guesses, and nothing to do with each other really... and they are all double dash or colon options...\n\nIn the second case, `<eqconfig>`, you are looking at a single dash command line option, and for sure you may also want to know what is the equivalent option you can place in a config file, or use on the command line with a double dash...\n\nMaybe I misunderstand something here... or got something wrong... please explain... thanks...\n. @eric-brechemier, @balthisar, now I understand more, am certainly all for for more cross reference help information...\n\nAs carefully clarified here and some other related comments, there are two levels of help - \n\n 1. Help for the console app user, and give the big list of command line switches - single dash\n 2. Help for a user's app, that wants to link with, and use libTidy, interested in the config options.\n\nNow the console app also allows the config options to be put in config file, **and** used on the command line, with a double dash.\n\nThe list 1. is built from a table, `cmdopt_defs`, in the console app code, `tidy.c`, and it includes a column giving the `<eqconfig>` option. ie the euivalent config option.\n\nThe list 2. is built from a table, `option_defs`, in the library code, `config.c`, with iterators and accessors so they can be enumerated by an app. And it includes some maybe **related** options, from `docs_xrefs[]`, as `<seealso>`.\n\nBut I do **not** see it correct that another structure be added to the `library` code, to enumerate CLI switches, **only** used by the console app, `tidy.c`. That information has nothing to do with the **library**.\n\nWhen doing the `-xml-config`, output, ie list 2, as suggested, we could add a new key, like say, `<console_arg>`, or even `<eqconsole>`...\n\nAnd the services `XMLoptionhelp`, `ForEachOption`, `printXMLOption`, which, as stated, are enumerating the `option_defs`, could also lookup the `cmdopt_defs`, find the `<eqconfig>` for the current option, and thus add a new key `<eqconsole>`, giving the equivalent command line switch, or switches, with language translations... simple...\n\nSo it seems to me, if we want this cross reference between `config` options, and its equivalent command line option(s), then all the table information is already there... no need for a new structure anywhere...\n\nIn `printXMLOption`, after say `printXMLCrossRef`, we could have a **new** service say `printXMLEqConsole`, which added this new key... then with a little XSL translation, these `<eqconsole>` items would appear in the `tidy.1` man page...\n\nAs stated, would welcome a PR on this, and would help in any way I can... thanks...\n. @balthisar what about the `ctmbstr eqconfig` member of the `cmdopt_defs` table?\n\nLike `-output <%s>` has `output-file: <%s>`, etc!\n. @balthisar not sure why you make it sound difficult...\n\nIf we are outputting `TidyOutFile`, then 'printXMLOption' already has the `d->name`...\n\nThen a simple case of going though `cmdopts_defs` using `if ((pos->eqconfig) && (strncmp(d->name, pos->eqconfig, strlen(d->name) == 0))`, then as you say, your now have `pos->name1..3` as cross references...\n\nOf course there are probably a lot of config options that do **not** have a command line alternative... maybe output as `<eqconsole/>`, or nothing...\n\nEasy as pie - c'est du gateau in French ;=))\n. Wow, what would you say if you wanted to make it sound hard? ;=))\n\nA literal translation of the french would be `it is of cake`, ie `C'est tres facile` aka `easy`... nothing to do with Spanish `cats` ;=)). @eric-brechemier thanks for raising this issue... \n\nI **too** would prefer this internal only option excluded from the [api](http://api.html-tidy.org/tidy/quickref_5.4.0.html#gnu-emacs-file) documentation...\n\nOne quick, crude, **fix** would be in the `ForEachOption` function in `tidy.c`. This then only effects `tidy.c` and does not involve the library...\n\n```diff\ndiff --git a/console/tidy.c b/console/tidy.c\nindex 58d8ac3..6214f5a 100644\n--- a/console/tidy.c\n+++ b/console/tidy.c\n@@ -755,6 +755,8 @@ static void ForEachOption( TidyDoc tdoc, OptionFunc OptionPrint )\n         OptionDesc d;\n\n         GetOption( tdoc, topt, &d );\n+        if (strcmp(d.name, \"gnu-emacs-file\") == 0)\n+            continue;\n         (*OptionPrint)( tdoc, topt, &d );\n     }\n }\n```\n\nThis is because the `topt` is an **opaque** structure in `tidy.c`, and thus we can not just do a compare for its enumeraed value, `TidyEmacsFile`.\n\nWe could get the enumerated value using the lib function `tidyOptGetId( topt )`, but that feels worse than the above brute `strcmp()`...\n\nAlternatively, a more general solution would be to modify `tidyOptIsReadOnly(topt)`... At present it converts the opaque structure to a `TidyOptionImpl* option`, and only checks that the option `parser` is NULL, so presently excludes `doctype-mode`, `TidyDoctypeMode`, another quasi option that is only used internally...\n\nThat patch would look like this -\n\n```diff\ndiff --git a/src/tidylib.c b/src/tidylib.c\nindex f0457a0..f3d8b83 100755\n--- a/src/tidylib.c\n+++ b/src/tidylib.c\n@@ -381,8 +381,10 @@ Bool TIDY_CALL          tidyOptGetDefaultBool( TidyOption topt )\n Bool TIDY_CALL          tidyOptIsReadOnly( TidyOption topt )\n {\n     const TidyOptionImpl* option = tidyOptionToImpl( topt );\n-    if ( option  )\n-        return ( option->parser == NULL );\n+    if (option) \n+    {\n+        return ((option->parser == NULL) || (option->id == TidyEmacsFile));\n+    }\n     return yes;\n }\n```\n\nOf course, another idea would be to **not** store such used internally only strings in this `options` table, but then we would need to create another storage area, and provide get/set services... seems a much bigger job...\n\nSeek comments, or other ideas which way to hop on this... thanks...\n. @balthisar I do not think your merge really closes this... but maybe... but...\n\nWhy are you making a `Used internally.` value a **first class configuration option**? You yourself question why anyone would want to use it! Why would you want to replace the `input file name` with some other name? For what use case? That just does **not** make sense!\n\n> simply an expedient fix ... but maybe it's better than what we have now.\n\nWell all that we had was that it shows up in the tidy man page, but was clearly marked **Used internally.**. And I provided two simple solutions for that! Yes, it is only _hiding_ an option that was never meant to be part of the API.\n\nWe do have a **flag** to hide such options from the API, and we already `hide` one other, namely `--doctype-mode enum`.  You will see in #312 and later in #472, I even made sure tidy will not **crash** if passed this option... even if someone finds, and uses it... Are you going to suggest we also make this a **real** API option too?\n\nUnfortunately, that particular method for hiding it can not be used for this `--gnu-emacs-file file` option, and I would certainly **not** suggest we just have yet another flag for such **hiding**, just for these, presently, two entries, especially since the code - `return ((option->parser == NULL) || (option->id == TidyEmacsFile));` - will do the same.\n\nSo I do **not** think of it yet as **fixed**! While the current description is relatively clear, I think it should make it clearer that this option alone will **do nothing**!... **And** supplying a file name will over-rule, destroy, break, the present sensible automatic action of Tidy to use the **input** file name... for use by GNU Emacs...\n\nBut would really prefer that we just _hide_ it! Already sugested in https://github.com/htacg/tidy-html5/pull/473#issuecomment-268329059\n\nAgain I would respectfully seek further comments, or other ideas which way to hop on this... thanks...\n. Look forward to it... thanks...\n. @marcoscaceres thank you for your comment, and html sample...\n\nYou say `sometimes`... \n\nI experimented with your sample, with many different configs, but in the latest master 5.3.20, I can **not** get the `<var>` newline split you show...\n\nWhat tidy version, and what config did you use to get this? Thanks...\n. As we are headed for the 5.4 release, hopefully in just days, am closing this for now...\n\nAnd yes, when 5.4 is out, posting a PR to [Homebrew](https://github.com/Homebrew/homebrew-core/blob/master/Formula/tidy-html5.rb) would be great... we always need help in pushing other distributions to update...\n\nPlease feel free to re-open or post a new issue... thanks.... @seaburg thank you for the PR... we always like those...\n\nThis certainly looks like a good fix, in that, as you point out, `start` is an offset into the `lexer->lexbuf`, while `len` is the length of the last `name`, and thus `len` could/would almost always by less than `start`, and thus tidy would not enter that `while` leading white space trim ...\n\nAnd thus while such leading white space would not be trimmed there, it none the less gets trimmed later in CheckAttributes, like CheckUrl, but this has **bad** consequences since there is then a warning - `escaping malformed URI reference` - which is **not** strictly correct... All that happened was the leading space was removed...\n\nSo I think this is a good move, and merged your PR... added a comment, and bumped version to 5.3.20... thanks for catching and fixing this...\n. @ehlertjd thank you for your issue...\n\nYes, given your sample html, I can confirm even that latest version 5.3.20 still unconditionally **discards** the second `<table ...>` reference...\n\nAnd also agree with your assessment that browsers will probably just ignore the first entry, and for sure apply the background color on the second, like you showed in `fiddle`...\n\nAnd in the general **aim** of tidy to produce html that will be browser rendered per the original, discarding the second, especially since it has an attribute, is a **bug**...\n\nFurther note that changing the order of the table entries will cause browsers to render the table in default style, again showing browsers may in fact be doing what you suggest, namely to close the first table, and render the second...\n\nAlso tidy's warning about a `missing <tr>`, then a later a second warning of `trimming empty <tr>` seems wrong...\n\nThe code change to just close the first table is quite trivial, but still trying to read and digest the W3R spec... help in that appreciated...\n\nMeantime have pushed a **fix** to branch `issue-498`...\n\nWould be appreciated if you, and others, can `checkout` this branch, and test... thanks...\n. @ehlertjd thanks for testing the `issue-498` branch... I too have done some more testing and it still **looks** good...\n\nAs you may know, we are headed for a **new** release 5.4 very soon, and I was hoping to include this... but still reading and re-reading that W3C spec... still might, especially if we get some more testers read, test and agree... thanks...\n. This felt so right, have now merged it, and closed this issue... thanks.... @LWillms, hmmm, a **tricky** question ;=))\n\nAFAIK lines that `begin` with `Info:` **should** follow all the lines that begin with `line `... and what I remember of the code the `Info: ` output is after all the parsing and cleaning stages, so should be after...\n\nI just checked some over 200 what I call `message` files, and could not find an exception... see the https://github.com/htacg/tidy-html5-tests/tree/master/testbase repo - files beginning with `msg_`...\n\nBut also **note** there are presently 3 types of lines beginning with `line nn column nn -` output, namely - `Error:`, `Warning:` **and** `Info:`...\n\nAlso, note there is an option `--gnu-emacs yes`, which will change those lines to begin with `filename.html:row:col:` which is another way to correctly position an editor, like emacs... but never used this myself...\n\nCertainly the parsing should stop at `Tidy found %u %s and %u %s!` **or** `No warnings or errors were found.`...\n\nAnd the option `--show-info no`, to **not** show all the usual babble at the end of these `msg` files, would reduce the parsing effort...\n\nHTH! Geoff.\n. @LWillms thanks for the clarification... so am closing this...\n\nThat does not mean you can not post further comments, which we will get and read, or indeed open a new issue... thanks...\n. @HoffmannP thanks for the issue...\n\nFirst there is the option `--fix-uri no`, it defaults to `yes`. This will stop some of the escaping, but not all, and the warning message is still output. Maybe this could be fixed, at least for those it outputs exactly as the input, 2 and 3 in this case...\n\nSome of this has been discussed at length in earlier issues...\n\n#310 - Jinja - As you say some attempt has been made to allow `handlebars`, or `curly bracket`, ie `{ ... }` syntax, but sometimes the warning message remains...\n\n#352 - href illegal characters - Where also the W3C validator will flag an illegal `|` character in the href...\n\n#378 - accented chars - This href contains a utf-8 character, which **is** accepted by the W3C validator... maybe tidy should also...\n\n#485 - while not specifically on an anchor href attribute, is also about escaping characters, especially `<` and `>`...\n\nNow here again you are asking tidy to **not** check or change the URI, even though the URI has not yet been really formed. As indicated in other comments, while it might be possible to code tidy to skip over such `pseudo` attributes is this really the purpose of tidy?\n\nI **can** see Tidy being extended to accept 1, `\"<# ... #>\"`, and 4, `\"<?= ... ?>\"`, like it does for 2, `\"<% ... %>\"`, and 3, `\"<?php ... ?>\"`, and patches, or a PR would be considered for these...\n\nBut what do others think? Look forward to further comments... thanks...\n. No comments for a **long** time... maybe question asked and answered... so closing this...\n\nFeel free to re-open, or file a **new** issue... thanks...\n. @balthisar thank you for adding these - `tidy-html5-5.4.0.tar.gz` and `tidy-html5-5.4.0.zip` - [here](https://github.com/htacg/tidy-html5/releases/tag/5.4.0), within a few hours...\n\nHowever I note the `zip` source contains unix line endings! \n\nThat is what I would expect in the `tar.gz`, but it is my general idea that a `zip` would have Windows, CRLF, line ending... or is this an incorrect assumption on my part?\n\nIt is not too important since **most** Windows editors, and compilers, handle both easily... the exception of course is the very dumb `notepad.exe` that is still shipped with Windows... and MSVC will refuse an xml solution file with unix line endings the  last time I checked, but there are none of these in the source...\n\nSome unzip utilities, like WinZip, also include an auto line ending translation, but this can lead to a big mess in a binary file, and should usually be left **off**... but again these are no binary files in this source...\n\nIt should be further noted, that provided a Windows user has setup the **git config** correctly, when they clone the source repo **all** files will have CRLF, and git will warn on commit if you add a unix line ending source... and the MSVC IDE editor will also warn about such a file, and offer to normalize it... but of course, on a git push, only the default repo unix line endings will be uploaded...\n\nI could replace the zip, if desired... but as stated not too important...\n. @balthisar ok, did not know that ZIP was the default archive format on Mac OS X...\n\nAnd also only now noted that Mac OS X had switched to LF (unix)... good to know...\n\nSo not important... leave it as GitHub used... forget it... thanks...\n. @balthisar, sorry, was off dealing with some other projects that hold my interest...\n\nWhile I am sure this is \"_great_ progress\", and really thank you for all the big **work** and **time** involved, but it represents so **many** changes, making a rational review almost **impossible**!\n\nPlease, please try to make incremental changes, split it into many commits, but ok, I do understand some changes **are** big, and requires lots and lots of changes, all at one time... \n\nBut **again** I find myself reading through some changes, while it might start with an important change, like `+    TidyReportLevel_first = 350,`, and also adds some **new** enums, but why all the just space/indent changes? This just make reviewing very, **very** difficult... no, impossible...\n\nBut ok, in checking out this branch, `message_system`, is does **not** compile in Windows 10 64-bit, using msvc140.x64!\n\nOne of the immediate things is the use of `WCHAR`, if `WIN32`! Now Tidy has **never** supported `WCHAR`, utf-16 like. It seems the only other place it is used is in my SPRTF modules. but please note it is under an `#ifdef UNICODE` switch! And this was **never** intended to be turned **on**, and I suspect would **not** work anyway... \n\nI personally think `WCHAR` should be totally removed, even in my SPRTF modules... It simply has no place in a utf-8 world!\n\nThe next thing is the use of `int32_t`, `uint32_t`, `int64_t`, and `uint64_t` in the `PrintfArg` structure union, in messageobj.c. Yes, these can be supported, in Windows, with `#include <stdint.h>`, but are they really necessary?\n\nPresently, message formats can include `%d`, or `%u`, but will it ever be necessary to support 64-bit values? That is output value over 2 million? Maybe... but **much** more work has to be done for this...\n\nAnd that would also go for supporting a `double`, or pointers! Yes, maybe at some future time, perhaps, but that really gets into trying to support things format items like `%p`, or `%I64u`, ... in the format string... a giant **can of worms**...\n\nYes, there is nothing wrong with going for **everything** is supported, but could that not be left to some future date, when the need arises... Just an idea...\n\nSo even if I add the above `include`, I still see **several** warnings, of the type -\n\n```\n1>D:\\Tidy\\tidy-html5\\src\\messageobj.c(387): warning C4311: 'type cast': pointer truncation from 'TidyMessageArgument' to 'int'\n```\n\nMaybe these are benign, and could be suppressed, if they are not **really** a problem...\n\nSo, in the end I can get it to compile with the following patch -\n\n```diff\ndiff --git a/src/messageobj.c b/src/messageobj.c\nindex 1c7b40f..f77006a 100644\n--- a/src/messageobj.c\n+++ b/src/messageobj.c\n@@ -13,7 +13,9 @@\n #if !defined(NDEBUG) && defined(_MSC_VER)\n #include \"sprtf.h\"\n #endif\n-\n+#ifdef _WIN32\n+#include <stdint.h>\n+#endif\n\n /*********************************************************************\n  * BuildArgArray Support - declarations and forward declarations\n@@ -44,7 +46,7 @@ struct printfArg {\n         double d;\n         const char *s;\n         size_t *ip;\n-#ifdef WIN32\n+#if (defined(_WIN32) && defined(UNICODE))\n         const WCHAR *ws;\n #endif\n     } u;\n@@ -718,7 +720,7 @@ static struct printfArg* BuildArgArray( TidyDocImpl *doc, ctmbstr fmt, va_list a\n                 break;\n\n             case 'S':\n-#ifdef WIN32\n+#if (defined(_WIN32) && defined(UNICODE))\n                 nas[ cn ].type = TYPE_WSTRING;\n                 break;\n #endif\n@@ -815,7 +817,7 @@ static struct printfArg* BuildArgArray( TidyDocImpl *doc, ctmbstr fmt, va_list a\n                 nas[cn].u.s = va_arg( ap, char* );\n                 break;\n\n-#ifdef WIN32\n+#if (defined(_WIN32) && defined(UNICODE))\n             case tidyFormatType_WSTRING:\n                 nas[cn].u.ws = va_arg( ap, WCHAR* );\n                 break;\n```\n\nHave **not** yet had a chance to run, and test the results, but, as asked, really do we need all the additions that cause this?\n\nRegards, Geoff.\n\nOT: In other projects, some Mac, and linux/unix, developers have been able to install a Windows 10, maybe they had to buy a licence, with msvc140 (free) and at least test a compile before pushing forward changes... Just an idea!\n. @balthisar seems we agree ;=))\n\nYes, I do often configure diff to ignore white space changes, and in this case that removed about 11K from a 144K diff, but a 133K diff is still a lot to take in, but, as stated, also undertand sometimes it is **needed**... \n\nOk, let's kick out the WCHAR from Tidy. While it can **not** be said that is is **not** needed in Windows - the whole OS **is** using WCHAR! - but thankfully the parts of the OS used by tidy are presently taken care of in the system API, so for the moment we can continue to use `char *` in a fully portable way...\n\nIn general, Tidy has avoided including `<windows.h>` in most modules, and would like to keep it that way for as long as possible. And even in the `mappedio.c` case, which has to use the native Windows API, for memory mapping, we chose to specifically use `CreateFileA`, and thus use the common `ctmbstr filnam`... and would have preferred it not be included in `tidy.c` either, for the console change, but that's another story...\n\nIn another big unix app, someone decided they just **had** to use `wchar_t` for Windows, and wow, you should see the squiggly, ugly, switched, code that resulted, and it was weeks, months to get it near right! So, agreed, **no** WCHAR for Tidy, for the moment...\n\nNot sure where you had `a big internal debate` over printf formats. I would be 100% for Tidy only needs to support what we use **now**. And given that we deal with html, I can not see us even needing `int` **and** `uint`. Since we would not been dealing with over 2 million lines, they are the same... but, ok, no problem...\n\nSo, yes let's remove WCHAR and larger ints, doubles and pointers, and **none** of my patch would be required! \n\nThat I would prefer...\n. Yes, your cleaned branch compiled in Windows, and I have had a chance to run some small tests, and all looked fine...\n\nCan not see any reason why this is not merged to **development** `next`... thanks...\n. @allsey87 thank you for your issue, which I think at this time would be a Pretty Print Feature Request\n\nFor your examples it would be good to show the full config passed to tidy. I assume `-xml`, but still get warnings about the comma, `,`? How do I get rid of this?\n\nYou seem to be searching in the correct code, `pprint.c`, in `PPrintAttrValue` or `PPrintAttribute`, but I am not sure I exactly understand what you want to happen... except it seems you want the attribute indented, even without the `--indent-attributes on`, or something... You need to explain a little more here...\n\nMaybe it would be possible change `indent-attributes` to an `AutoBool`, which then has 3 states - `auto`, `yes', `no`, and have different actions for each state...\n\nAnyway, at this time seek more information... and of course patches or a PR to show what you want more exactly... thanks...\n. @allsey87 ah, thank you for clarifying... I now think I understand...\n\nI too have long considered this missing an indent bump after a wrap as very close to a **bug**!\n\nAnd this does not only apply to `xml`, but there is the same problem with html, like the following with default config plus `-i --show-body-only yes`...\n\n```html\n<div class=\"div_class\">\n<p class=\"paragraph_class\" id=\"unique_id\" title=\"About this paragraph\" tabindex=\"1\">\nparagraph 1</p>\n</div>\n```\n\nWill output:\n\n```html\n<div class=\"div_class\">\n  <p class=\"paragraph_class\" id=\"unique_id\" title=\n  \"About this paragraph\" tabindex=\"1\">paragraph 1</p>\n</div>\n```\n\nI too think that `\"About...` would **look better** if indented, 2 spacees in this case...\n\nNow doing this may be quite difficult, in that, of course if it wraps to a 3rd or more lines, then we can not add more indents. And in this case, when the paragraph is finished, we have to drop the indent, and any extra secondary indent added... On the other hand, maybe this will be quick and easy...\n\nMaybe what is applied to `xml` output could also be applied to `html` output... they share some `pprint` services...\n\nThis must also work if the user chooses to use tabs in place of spaces, and we have a long outstanding **bug**, #335, concerning too many tabs being added... And may be related to #403, preserving the tab space in a `<pre>`...\n\nAs you will learn, tidy first of all accumulates the output in an internal buffer, the `pprint->linebuf`, in `AddC`, `AddAsciiString`, ... and only when this buffer is **flushed** is wrap and indent applied, and the actual output happens, `WriteChar`... \n\nWe could even extend, add to, the `TidyPrintImpl` and/or the `TidyIndent` structures, to carry, preserve **more** information. This is carried in the `doc` structure passed to just about every `pprint` function...\n\nIf you have the htacg repo checked out, you might also consider cloning the repo into your own github space, and check that out. Then you can test and experiment, in say an `issue-508` branch, and push things to your own repo. I would then be able to checkout your repo, and test, suggests, etc... and when all done you can present a PR, which preserves your name on the commits... but patches are also fine...\n\nIt would be very much appreciated if you could look into this, and I will help where ever I can... thanks...\n. @allsey87 yes, the `doc` structure contains indent information, and maybe this is sufficient right now... but just saying should you need more...\n\nAnd yes, you need to use information from `pprint->ident[2]`, to re-generate the current required indent, which it does now fine, **but** after there has been a `wrap`, need to add one more... the trick will be to know a wrap has happened, and output the indent amount one more time...\n\nYes, enabling `indent-attributes` causes a different code path...\n\nIn `PPrintAttribute`, you can see `indAttrs  = cfgBool( doc, TidyIndentAttributes );`. It gets some extra `xtra = AttrIndent( doc, node, attr );`, added to **indent** if not `first` attribute...\n\nNow we want this `extra` also applied **after** a wrap, and `indAttrs == no`... \n\nSo I have corrected your sample - https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_508.html - removed the commas, and using **config** `-xml -w 50 --show-info no F:\\Projects\\tidy-test\\test\\input5\\in_508.html` started testing...\n\nThe problem in this case is the wrapping that takes place after `...=\"valueb\"` has been added to the print buffer, this is flushed, and that leaves just `attributec=\"valuec\"></tag>` tail in the internal print buffer...\n\nSo when the print buffer is finally flushed, the current code does not look at what happened, and thus does **not** add any indent to this...\n\nThe wrapping happens in `CheckWrapIndent`, when the next space/indent count, `GetSpaces`, **plus** the print buffer contents, `pprint->linelen`, is greater than or equal to the configured wrap length, `cfg(doc, TidyWrapLen)`... it seems we should store this `yes`, that we wrapped, somewhere...\n\nNow we have effectively, in this case, finished printing the tree of elements, and then we have the final `TY_(PFlushLine)( doc, 0 );`... **Note** it is called with `indent == 0`... but that does nothing here... \n\nThen in `PFlushLineImpl` the `WantIndent` will return **no**... but even if we could somehow enter the indenting loop, because we do want to indent this last content, it would still fail because `GetSpaces` would also return 0, from `pprint->indent[ 0 ].spaces`...\n\nThat is why I suggest we may need to keep the fact that the current print buffer contents are **after** a wrap, and thus require an indent... if you see what I mean...\n\nMaybe I need to construct a bigger sample, or use `-w 30`, that requires wrapping to 3 or more lines... code added to ensure the 2nd, 3rd, etc lines are **correctly** indented, could also be used to cause this final flush to add an indent... or something... that is an output -\n\n```html\n<tag attributea=\"valuea\"\nattributeb=\"valueb\"\nattributec=\"valuec\"></tag>\n```\n\ncan be what I think we would like to see -\n\n```html\n<tag attributea=\"valuea\"\n  attributeb=\"valueb\"\n  attributec=\"valuec\"></tag>\n```\n\nWill work on this now and then... but do not see an easy answer yet... maybe you will find something... thanks...\n. @allsey87 Just pushed some tests to the `issue-333` branch, trying to solve #335 and #333 ... \n\nThe interesting thing added is a service to output the indent_char... It is this service that would add the indent to subsequent content lines, just before they are flushed to output...\n\nIt is now a question of figuring out the signal, the sequence of events, flags, markers, values, that would allow this to be called, when internal print buffer is flushed... maybe a step forward?\n. @allsey87 did not know we had this slight difference, but it seems just in the amount of extra indent... I am ok with either amount... aligning all subsequent wrapped lines to the first attribute is also fine...\n\nYou are certainly reading the right area of code in pprint.c... at least for the `attribute` output...\n\nWhether the person that added `/* fix for odd attribute indentation bug triggered by long values */` thought of it as a **hack** or a **fix** does not really matter... we could probably dig back in git/cvs history and find who, and maybe more on why... I hope it was not me... I am usually quite verbose in my comments...\n\nSo what exactly is the problem with `how long the line is and where the wrapping occurs`? Can this too be **fixed** or **hacked**, which ever description you prefer?\n\nAnd what about the final eventual flush, where both `indent` and `xtra` are ignored... now outside printing attributes...\n\nWill try to get around to some more testing... but thanks for looking deeper into this... maybe you'll find **something**... thanks...\n. Although there have been no recent comments it does seem like a reasonable Pretty Print Feature Request... look forward to further feedback... but meantime moving out the milestone... thanks...\n. @pdo2641 thanks for the issue, but not sure what you exactly want... for sure I am no expert on character encoding issues, but have picked up a few things along the way...\n\nYou have used an `o umlaut`, `\u00f6`, 0xf6, 246, and `\u00f1`, 0xf1, 241, and if I use a config `--input-ecoding latin1 --output-encoding utf8`, those two will be converted to utf-8, namely `0xc3 0xb6` and `0xc3 0xb1`, resp., and in a browser are again correctly displayed as `\u00f6` and `\u00f1`, so where is the problem?\n\nSure, in my code page 437 console, they are only shown as `?`, or sort of garbage - sequence of high bit characters - since my console does **not** support utf-8, even if I run `chcp 65001`. But they are correctly displayed in good editors, and browsers, even very dumb notepad, as the character they are...\n\nThis seem nothing to do with a Word 2016 document, or Word filtered html... especially since your config shows `word-2000: No`... This would seem true for any html containing `latin1` characters... like the follow french accented characters -\n\n```html\n<ul>\n<li>c\u00e9dille \u00c7,</li>\n<li>accent aigu \u00e9,</li>\n<li>accent circonflexe \u00e2, \u00ea, \u00ee, \u00f4, \u00fb,</li>\n<li>accent grave \u00e0, \u00e8, \u00f9</li>\n<li>accent tr\u00e9ma \u00eb, \u00ef, \u00fc.</li>\n</ul>\n```\n\nProcessed this with the above config, `--input-ecoding latin1 --output-encoding utf8`, the output document will be displayed the **same** in a browser, but each has been converted to utf-8. The latin1 `\u00c7`, 0xC7, has been converted to utf-8, 0xC3 0x87, and so on for each of the others...\n\nMaybe I misunderstanding somethings here... please explain more... thanks...\n. No comments for a **long** time... maybe question asked and answered... so closing this...\n\nPlease feel free to re-open, or file a **new** issue... thanks...\n. @AlbertWiersch well it will fail to run on **all** Windows systems that do **not** have the [Visual C++ Redistributable for Visual Studio 2015](https://www.microsoft.com/en-us/download/details.aspx?id=48145) installed.\n\nYou need to match the vc_redit.[x64|x86]. depending whether you are using the 64 or 32 bit exe, resp.\n\nOf course they will also be installed if you install Visual Studio 2015 (msvc140)...\n\nSince these components are a free download from Microsoft, we do **not** include them in the distribution package...\n\nAdvise if you have any trouble... thanks...\n. @AlbertWiersch yes we could... but that gets us into a lot of messy `zip/exe` naming conventions...\n\nLike I could build a Windows EXE with say MSVC10, but that still needs the vc10 re-dist dlls... I would have to check back, but maybe the 5.2.0 build used that...\n\nAnd could maybe build using a `static` version of some of these DLLs... that is using `/MT` versus `/MD`... Maybe that is worth exploring...\n\nWe could also build with say MinGW and MinGW-x64, which avoids the later MSVC DLLs... and  there are **other** Windows build systems that can be used... but **who** is going to take over, and supply these **each** release time...\n\nIt's also possible to generate a Windows **msi** installer, which would probably include such dlls... will check this... but this installs in `C:\\Program Files\\tidy` by default...\n\nBut the easiest way is for you to clone the source and build it yourself... You only need some minimum build tools, depending on the `make` files you ask CMake to **generate** for you... `cmake -help` will list all the `generators` it supports... quite a list..\n\nLots of **food** for thought here... will explore... thanks...\n\nHTH\n\n. Ok, some parts of the puzzle solved ;=))\n\nTidy.exe, **5.2.0**, 64-bit, has a dependence on msvc100, `MSVCR100.dll` to be exact... Tidy.exe, **5.4.0**, 64-bit, has a dependence on `VCRUNTIME140.dll`, plus a **dozen** or so others... MS is certainly making it harder to distribute binaries...\n\nThe `msi` package **failed** to build for 5.5.10, the latest in `next` branch... not sure what is going wrong... I can still build the Windows installer EXE, **but** it does **not** include the dependent run-time DLLs...  so adds nothing at this time...\n\nI note a recent `GeographicLib 1.47` installed the `VCRUNTIME140.dll`, and some others... need to look at what they did in `CMakeLists.txt` to get this to happen... in my case I would like to understand, and maybe `undo` it...\n\nStill to explore some other options... \n. @AlbertWiersch just about of time tonight, but I have experimented with CPack, and **have** been able to **included** the MSVC DLLs in the **zip**... but this was just in a **test** package...\n\nI was also able to build both the **msi** and Windows **exe** installer, but still to check if the DLLs were included...\n\nIf I can then move this additional CPack stuff into Tidy's `CMakeLists.txt`, and build these there, I could certainly add them to our binary distribution...\n\nAnd as stated, still to find time to experiment with using the `static` link to some of these system libraries, to see what DLL dependence is removed... \n\nTidy.exe already links with the tidys.lib - the static library - removing the need for the Tidy.dll...\n\nWill do some of that over the coming days... hang in there... thanks...\n. ok, have built a **zip**, `tidy-5.5.10-win32.zip`, which contains the system runtime DLLs... could publish it shortly, if I **need** to...\n\nHave published the CMake/CPack source changes to the `cpack-test` branch...\n\nBut meantime have uploaded - http://geoffair.org/tmp/tidy-5.5.10-win32.zip - (SHA1 ACEDEA2280AF62B81B560A4A2BBA63962BB3F121) ...\n\nIf you could download that zip, and test, that would be a great help... thanks...\n. @AlbertWiersc I suppose they do not call it **dll hell** for nothing ;=))\n\nBut with the free distribution of Visual Studio, and as it moves on, each active windows user, **must** keep up with distributions. Now we could ship the 14,572,000 vc_redist.x64.exe and 13,767,776 vc_redist.x86.exe packages, **with** our package... but they are **big**, and can be [downloaded](https://www.microsoft.com/en-us/download/details.aspx?id=48145) by anyone, any time... and installed, and all done...\n\nI am glad you now realize that the `tidy.exe` we distribute has always had dependence on a `MSVCR100.dll` up to 5.2.0, and thereafter on msvc140 re-distrib DLLs. And ok, it seems CMake/CPack missed adding a DLL, or 2 - **What DLL did it report missing?**\n\nThat ZIP contained `msvcp140.dll` and `vcruntime140.dll`, **but** I note my msvc140 redist folder contains 4, adding `concrt140.dll` and `vccorlib140.dll`. And other folders... Was the missing DLL one of these? Now, I do not know why CPack missed these two...\n\nAccordingly have added these two(2) to a [tidy-5.5.10-win32-2.zip](http://geoffair.org/tmp/tidy-5.5.10-win32-2.zip). Actually it is a little smaller than the original, in that I removed the **debug** DLLS... no need for those... Would be good if you could download and test this... thanks...\n\nAs to adding the ability to build an **all** `static` version, I have already tested this in another project, and it works fine. You just need to add \"-DUSE_STATIC_RUNTIME:BOOL=YES\" to the running of cmake, and bingo, an exe with no msvc DLL dependence... it will, of course, still have some dependence on systetms DLLs, like KERNEL32.dll,... as always. But the little test example jumped from 25K, /MD, to 158K, /MT, static... quite a leap in size...\n\nAfter a little more testing, will move this `option` into Tidy...\n\nThen we could add say a `tidy-5.4.0-win32-mt.zip`, or something to the distribution... that will take some time...\n\nMeantime, I hope you can report Tidy 5.5.10-cpack-test runs without problems... thanks...\n\nEdit: fixed link typo.... @AlbertWiersch argh, that `api-ms-win-crt-runtime-l1-1-0.dll` can **only** be installed through running the `vc_redist.[x64|x86].exe`! Searching the web you can find **plenty** of people with this problem, as more and more s/w gets built with msvc140 (2015), and shortly there is a msvc 2017 version to come out, so this will get even worse... For most sites read, installing the vc redist exe cleared up the problem...\n\nAs a first cut, a WIP, have uploaded [tidy-5.5.10-win32-ms.zip](http://geoffair.org/tmp/tidy-5.5.10-win32-ms.zip), containing a tidy.exe with, where possible, **all** static links... I think it should depend on only KERNEL32.dll... it will emit a version `5.5.10-cpack-test2`...\n\nHave not had a chance yet to push this change to the source, but will get to that soonest, so others can built and test it...\n\nAfter a suitable testing period, can probably backport this to release 5.4... but do you need this? Why not go forward with the latest stable 5.5.10 version?\n\nAnyway, I hope you get a chance to test it and report... thanks...\n\n. Yes, something went wrong with the upload... will try to come back after dinner to fix this... maybe I could attach it to a direct email... maybe try it here ...\n\n[tidy-5.5.10-win32-mt.zip](https://github.com/htacg/tidy-html5/files/862760/tidy-5.5.10-win32-mt.zip)\n\nOk, maybe that worked... advise.... @AlbertWiersch, yes sadly, running `virustotal.com` on the `tidy.exe` repeats that **malware** report... UGH!\n\nBut reading up on the `Qihoo-360` I know `tidy,exe` does **not** contain this... so it is, for sure, a **false** report... very **SAD**...\n\nBut moving forward, I have created a `Pull Request`, #516, to include this building of an **all** static version of **`Tidy`**, and hope to merge this soon...\n\n> Is the tidy.exe file safe to distribute with my application?\n\nAbsolutely! Yes, all of the `next` branch is considered very stable, and a good improvement on the last official `release`...\n\nYou should consider updating your build environment, so you could generate the **latest** tidy.exe, from source, to ship that with your app...\n\nI am sorry MS has created this **big** distribution problem...\n\nOT: You should also consider directly using **`tidys.lib`** in your app, rather than running the **sample** tidy.exe... it would give you better ongoing control... In a way `console/tidy.c` is just the current example of using **libtidy**...\n\nAnyway, moving forward, I hope we can soon close this issue... thanks...\n. @balthisar Thanks for testing... \n\nThere are a few clues that the libraries **are** statically linked. The first is the size... I see at least 150K added. But the best is to run `dumpbin /ALL tidy.exe > temp.txt`, and search for **imports:**. There you will see a list for the `/MD` version, and just one for the `/MT` version... You need to be in a MSVC prompt to run `dumpbin`...\n\nI have my own [dump4](https://github.com/geoffmcl/dump4), but it is broken at the moment for the 64-bit build... It also list the `imported` DLLs, when it is working ;=))\n\n> why the ugly license from the tidy.h header with the stupid Doxygen comments? \n\nInitially just needed a file to test - one of the windows binary builders insists it be a `.txt` file - then forgot about it...\n\nMaybe it could be a straight copy of `LICENSE.md`, or maybe delete what I hastily added, and rename that to `.txt`?\n\nWhat do you think?\n. Yes, thanks for that... I just did a 5.5.12 `/MT` build of tidy.exe, and unfortunately it still show `Qihoo-360`... are you a member there... can you leave a comment that this appears to be a false positive?. @balthisar I have reviewed this - it compiles and runs fine in Windows... thanks...\n\nBut as usual it is quite difficult to review a 230K diff file... As suggested previously, it would be **much** better if done in increments, and keep issues **separate**... new feature vs formats vs ... but ok, understand when you are on a roll, you are on a roll... ;=))\n\nWhat exactly is `word wrapping`? Is this addressing a **bug**, or a specific **Feature Request**. Simply, why do we need a new configuration, `--console-width`?\n\nIn reading the `TidyConsoleWidth`, and some of the code... I think I understand - but in `language-en.h` I can see you sometimes removed the newline, `\\n`, but in other case kept, or added them... And I can still read `output to 78 characters per line` here and there... Quite confusing, sort of contrary... \n\nAFAIK the console will wrap a string anyway... in linux and Windows at least... but I was happy that tidy had long ago sort of chosen a wrap at about 70+ chars... because again if I read correctly, if I have redirection in place, such wrapping will now **not** take place - still to test this - but then not all editors I use either support, or can be configured to do, line wrap, so long lines would go out of view...\n\nAnd as you point out, this means updating the tidy-tests bases to match, which you mention will happen after the merge... and adding this new config option, already in branch `word_wrap`...\n\nNot that I am against it, just rather curious about the use case...\n\nOf course the other big part seems to be the Doxygen formatting... although still to carefully read through all the changed wording, aside from the format changes, but what I did read looks good... thanks...\n\nJust a small coloring changed noted in the API docs since 5.4.0... while I consider myself a poor judge of `style`, I do not like the `red` on `green`... seems to lack sufficient contrast, but perhaps that is just my failing sight...\n. @balthisar this is **nothing** about your `Doxygen` improvements... everything there seems **very** good... and lots of work... thanks...\n\n> Feature request. One that I've had for a while. \n\nWell, we are `owners`, so I guess in a way, what we would **like** will prevail... no discussion...\n\nBut me, on, `wrap text`, I would like to discuss this **more**...\n\nSimply, you have not yet convinced me that we **must** remove the `\\n` from many messages, and replace it with this `console-width` option...\n\nI think today **everybody** uses a console much **wider** that something like about 80 characters, but I really have no problem that tidy messages wrap at about that length... with a `\\n` embedded in the message stream...\n\nSo, **no**, I do **not** see the introduction of this **new** option, as necessary, required, or desired... but maybe I am **wrong**!\n\nNote, have still to **test** what happens when one of the outputs is **redirected**...\n\nRemove this from the PR, and the rest is ok... **great** even...\n\nIf you feel **very** strongly on `wrap text`, then open an issue, and let's discuss it... in detail, advantages, disadvantages, reasons, gains, losses, etc... including languages that do not normally have a `space` wrap...\n\nBut right now, I personalty am against this **all** inclusive PR... sorry...\n\nAnd very thankful for some `color` **style** changes in the API docs... thanks...\n. @balthisar thank you for this `FR`, and even a `PR #518` implementing this, but unfortunately much more, which I do not 100% agree with...\n\nAs stated that `PR` has some **very** good Doxygen additions... and these should move forward... nothing to do with this...\n\nIn a simple reading of this `FR` I suppose I could add a `+1` tag... but...\n\nBut, sorry, there are some issues... that I see... maybe I am real **wrong**! And only look for clarification...\n\nLike `While many consoles wrap, some do not.`? Which consoles do **not** wrap? Yes, they for sure **wrap** at the console width, and do not respect a `space` as a wrap criteria, but this is the **essence** of a `tty` output...\n\nSo why should `libtidy`, get involved in this? Simply, IMO, tidy should **not** be involved in this... for many reasons...\n\nIf you have an app that uses `libtidy`, then you can deal with re-lining these messages, in a GUI, for instance... like *libtidy* deals with newline characters in the html input stream...\n\nSo I ask, what are we `gaining` here?\n\nYes, a **new** option, `--console-width nn`, but what is added? What is gained?\n\nSo, sorry, still on the **negative** side here, but can be convinced...\n\nI think, for sure, Tidy messages should wrap at about 80 chars... any user app that uses *libtidy* can deal with that...\n\nShould we re-set our message output, globally, removing these `\\n`? I think **NO**!\n\nBut it seems just a voice in the wilderness here...\n. @balthisar wow, how many more ways can you say these **stupid newlines** ;=))\n\nBut how this can be classified as a **cardinal sin**, which I thought were `pride, greed, lust, envy, gluttony, wrath, and sloth` is quite beyond me... or even informally, **an unforgivable error or misjudgment**...\n\nIf we really wanted a console `Word Wrap` option, and I obviously do **not** think we do, then the wrapping service could just as easily remove them, before applying the new wrapping... no need to change the strings themselves... but just an idea...\n\nAnd even if a 3rd party app uses the **new** message callback API, which I hope you are not suggesting we use in `tidy.c`, it can handle the data however it wants... newline characters are **not** blocks of stone...\n\nOT: Then you jump all over config option that you suggest are `client`, not `library` related? Yes, one of the library API actions is to decode, and store a few `client` only, options, like even `-quiet`... What is so bad about this? I do not think these should be **gutted**, especially with some not well understood or defined aim of **purifying** the library! Another religious reference?\n\nAnd then I started to wonder again **what** are all these **other** changes in `tidy.c`, which I thought appeared on `Doxygen` formatting, like `@file`, `@para`, etc. But what has **Doxygen** got to do with `tidy.c`? I suppose maybe we could have a http://console.html-tidy.org/ site, but I do not think it should be blended with the current http://api.html-tidy.org/... or am I really missing something here?\n\nThere is no doubt we could improve and increase the `tidy.c` internal code documentation, like you have done with say the `print2Columns` - that is great, and helps understand the service, but that does not need to be `Doxygen` formatting, like `/**< blah blah */`, does it? Would not just `/* blah blah */` be ok? But as stated, maybe **way** out of my tree here...\n\nAt this moment I still feel **most** of #518 is **not** needed, but can be swayed... thanks...\n\nAnd a small point. If you **do** suggest a change in the `base` **language_en_gb.h** file, then you should just present that for consideration, not go on and change the other `language` files immediately, and certainly **not** auto-regenerate the `*.po`, and `tidy.pot` in the same pass... \n\nIf the change is agreed, then these additional, very necessary steps can come later... This would certainly reduce the `diff` review process... all such changes stem from the one **language_en_gb.h** I think, but again maybe I am wrong...\n. @iamfreee thanks for the issue...\n\nHave no problem with that, but **how** to do it? \n\nCan you, or @thorade, or others, help?\n\nWe certainly want tidy distributed as much as possible... thanks...\n. @iamfreee good, that **looks** fairly straight forward...\n\nAssume you have `Alpine` installed, and running, so you are more than halfway there ;=)) \n\nAdvise if you have any problems building `tidy`... I am sure they can be addressed and quickly **fixed**...\n\nThen you, or anyone else with `Alpine` installed, could present a PR to - https://github.com/alpinelinux/aports/pulls - through say a `main/tidy/APKBUILD`, or `testing/`, ... package...\n\nI could not specifically find it, but feel sure they would support the `Makefile` generation using **cmake**... after that it is just standard unix `make`... tidy, the console app, and libtidy, static and/or shared, have no particularly **special** dependencies...\n\n**Go for it**... will help where we can... thanks...\n. @thorade thanks for the issue... sort of cross linked to another repo...\n\nWell the issue is a little complicated by the fact that some tags have an `optional` end tags, in the html spec... \n\nHence we have the option [omit-optional-tags](http://api.html-tidy.org/tidy/quickref_5.4.0.html#omit-optional-tags)... you can see that `<li>` is one of those...\n\nSo, as your [Issue 52](https://github.com/lbl-srg/BuildingsPy/issues/52#issuecomment-73225266) points out, Tidy will silently **fix** the following -\n\n```html\n<ul>\n<li>the function is defined and monotone increasing for all <i>x</i>.\n<li><i>dy/dx</i> is bounded and continuous everywhere (for <i>n &lt; 1</i>).\n</ul>\n```\n\nwith a config of `--show-body-only yes --show-info no -w 0` will give an **output** of -\n\n```html\nNo warnings or errors were found.\n\n<ul>\n<li>the function is defined and monotone increasing for all <i>x</i>.</li>\n<li><i>dy/dx</i> is bounded and continuous everywhere (for <i>n &lt; 1</i>).</li>\n</ul>\n```\n\nSo you are right, Tidy stays silent on missing **optional** end tags... Maybe it shouldn't? What do you, or others, think?\n\nYou can add the config option `--omit-optional-tags yes`, and the closing `</li>` will be dropped... and then for sure there should be no warning...\n\nNow Tidy **will** bark if you omit the non-optional end tag `</ul>`...\n\nSo given a sample, similar to the documentation page - which perhaps needs some fixing, like adding the `<ul>` tag - like -\n\n```html\n<ul>\n<li>1st list item\n<li>2nd list item\n```\n\nFor sure you get -\n\n```html\nline 1 column 1 - Warning: missing </ul>\nTidy found 1 warning and 0 errors!\n\n<ul>\n<li>1st list item</li>\n<li>2nd list item</li>\n</ul>\n```\n\nDoes this fully answer your question? Look forward to further feedback... thanks...\n. @thorade, have added a small note to the [documentation](http://www.html-tidy.org/documentation/#documentation20000201part_what)... scroll to `List markup with missing tags`... just to make it clearer... thanks...\n. @thorade thanks for clarifying your use case...\n\nYou say via `pytidylib`? Is this a python libtidy port, or what? Where can I find it?\n\nBut concerning **`libtidy`**, at this time no one has stepped up to add/code a new option like say `--warn-optional-tags yes`, for those that want to see **every** fixed optional tag tidy makes, or at least more of them...\n\nIt would probably **not** be too difficult to implement, but you have to first find the person interested to add such code... \n\nIf someone was to start something here, say in their own fork/branch, I would certainly help guide them where I can...\n. Thanks for the issue...\n\nYes, I too had noted that, but it is more or less there as `5.3.0`... or even `5.1.52`... There is a `5.2.0` tag, and a `release/5.2` branch\n\nIt was just the order in which I did the tagging... and how and when that `verhist.log` is generated by a script...\n\nAnd you will note I corrected that order when doing the `5.4.0` release...\n\nWe learn more each time ;=))\n. Question asked and answered, so closing this...\n\nPlease feel free to re-open, or file another issue... thanks...\n. Done... of course this must now ripple through the other languages, and eventually a re-run of the auto-gen files...\n. @balthisar I was looking at closing this, but it seems I have left the enumeration there in [tidyenum.h](https://github.com/htacg/tidy-html5/blob/next/include/tidyenum.h#L157)! Oops...\n\nI am pretty sure this should **also** be removed... correct?\n\nThen it also shows up in [language_fr.h](https://github.com/htacg/tidy-html5/blob/next/src/language_fr.h#L203), and again assume it should be removed... that should entirely remove the enumeration...\n\nBut then I find the `text` in this case, \"TEXT_WINDOWS_CHARS\", in **several** PO files, and in **`tidy.pot`**? How do I get rid of these? \n\nDo I have to remove it from the master `template` **tidy.pot**, I assume by say running `./poconvert.rb xgettext`? And then regenerate the PO files? ... or something...\n\nI am sorry I have not fully kept up with your great `localize` efforts, and while [localize/README.md](https://github.com/htacg/tidy-html5/blob/next/localize/README.md) seems clear on how to add another language, it does **not** seem to enumerate the process required to **delete**, completely **eliminate** a particular previous message...\n\nIt would seem the process is -\n\n - eliminate it from `tidyenum.h`\n - eliminate it from **each** `language_XX.h`... for as many as there are...\n - regen master template `tidy.pot`... but how?\n - regen each `language_XX.po`... but how?\n\nYour help appreciated... thanks...\n. @Rodeoclash thanks for the issue...\n\nYes, unfortunately, current tidy will **not** add say a `<ul>` around your sample block... but maybe it should... and I know of no **option** to cause this... \n\nMaybe there should be one, or maybe it should be done by **default**... the W3C validator seems to agree...\n\nAnd the W3C specs, like https://dev.w3.org/html5/spec-preview/the-li-element.html, indicates \"Contexts in which this element can be used:\" as `<ol>`, `<ul>`, `<menu>` parents... but it does go on with `Otherwise ...`! Need to read and examine more W3C specs... any more definitive pointer really appreciated...\n\nI hesitate to call this a **bug**, but maybe it is, but it is certainly a request to change tidy's behaviour, namely a `Feature Request`...\n\nI will try to look at this, over time, but as always, feedback, a patch, or PR, would be very welcome... thanks...\n. @LWillms the short answer is, as often written, Tidy can not read authors' minds ;=))\n\nBut in this case it would put the `<ul>` after the firsts `<br>`, that is before the first `<li>`, since the W3C spec says an `<li>` can only be a child of `<ol>`, `<ul>`, `<menu>` parents, and the `</ul>` before the second `<br>`... Tidy has good internal structures and can **easily** do this...\n\nSince the general idea is Tidy should try to **not** output **invalid** html, then at least it should flag this as an **error**, and not produce html...\n\nBut then we have a `--force-out yes` option, saying **do your best, regardless**, and **understand no guarantee of the result**... but in such a forced output it could add the `<ul>...</ul>` pair... with additional appropriate warning that it is doing this...\n\nMy whole point is, at the moment, given the above sample, and `--show-body-only yes` will output **No warnings or errors were found.** which is **wrong** in my view... effectively a **bug**... Tidy should do **something**...\n\nAnd yes, the user, any user, can apply `pre` and/or `post` processing, by a myriad of apps, as they see fit...\n\nThanks for your feedback... always welcome...\n. I have just done some **more** research, and find that up to, and including, tidy `5.3.10`, circa Sept 11, 2016, tidy **would** add a `<ul> ... </ul>` around that block of `<li> tags`, using my [in_525-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_525-2.html) test, with the warnings and output -\n\n```\nline 11 column 1 - Warning: <li> isn't allowed in <body> elements\nline 9 column 1 - Info: <body> previously mentioned\nline 11 column 1 - Warning: inserting implicit <ul>\n... skipped ...\n<body>\n<br>\n<ul>\n<li>Bachelor of Arts</li>\n```\n\nThen it was **gone** in tidy `5.3.11`, and remains **missing** through to the current `5.7.0`, so should be possible to track down the commit that changed this behaviour... and **restore** it...\n\nHmmm, how to review all commits between these two versions? Maybe checkout and diff, or something...\n\nWill try to find time to look into this, unless someone beats me to it... but meantime moving out the milestone...\n\nShould not be too difficult to **fix** this **bug**... thanks...\n. Well the patch that **broke** this behaviour was **easy** to find -\n\n```diff\ndiff -ur tidy-html5-5.5.10\\src\\parser.c tidy-html5\\src\\parser.c\n--- tidy-html5-5.5.10\\src\\parser.c  Thu Nov 30 14:39:53 2017\n+++ tidy-html5\\src\\parser.c Thu Nov 30 14:41:12 2017\n@@ -4022,9 +4022,9 @@\n         */\n         lexer->excludeBlocks = no;\n\n-        if ( nodeIsINPUT(node) ||\n+        if (( nodeIsINPUT(node) ||\n              (!TY_(nodeHasCM)(node, CM_BLOCK) && !TY_(nodeHasCM)(node, CM_INLINE))\n-           )\n+           ) && !TY_(IsHTML5Mode)(doc) )\n         {\n             /* avoid this error message being issued twice */\n             if (!(node->tag->model & CM_HEAD))\n```\n\nEffectively, this allows the `<li>` to be in the `<body>`, if in HTML5 mode... should still add implicit `<ul>` if a legacy doctype...\n\nI added this when addressing issue #428... and merged the `issue-428` branch... I did add a `BIG` caveat - \n**\"And maybe this is wrong\"**!!!\n\nWell, now I have the feeling to **undo** this change, which maybe re-opens #428, and find a better, perhaps more restrictive, patch to be added to again fix it...\n\nWill experiment a little on this... be back soonest... feedback very welcome... thanks...\n. @jckdrpr thanks for the issue...\n\nHave you tried the option `--quote-ampersand no`?\n\nRunning current tidy, 5.5.14, on your sample, with a config of `--quote-ampersand no --show-body-only yes --show-info no input5\\in_526.html` you will still get two warnings, and an `alt` message, and this should be the same in `release/5.4.0`, except for an additional `Info:` message, which has now been suppressed -\n\n```html\nline 1 column 35 - Warning: unescaped & or unknown entity \"&bction\"\nline 1 column 1 - Warning: <img> lacks \"alt\" attribute\nTidy found 2 warnings and 0 errors!\n\n<img src=\"http://abc.com/?action=a&bction=b\">\n\nThe alt attribute should be used to give a short description\nof an image; longer descriptions should be given with the\nlongdesc attribute which takes a URL linked to the description.\nThese measures are needed for people using non-graphical browsers.\n\nFor further advice on how to make your pages accessible\nsee http://www.w3.org/WAI/GL.\n```\n\nBut the `&bction` is **not** converted...\n\nDoes this solve the problem?\n. @jckdrpr wow, that seems **impossible**!!!\n\nI just re-tested in Windows 10, Ubuntu 14.04, and RPi Rasbian 8.0, with various versions of tidy, back as far as release 5.0.0, and before, like a dev version Jan 2012, even the last cvs release, Mar 2009, ... and in **every** case using the option `--quote-ampersand no` changed the output...\n\nCan you check again? Can others do the test, and report... Or am I going **mad**? ... thanks...\n. @jckdrpr thanks for re-testing and reporting... glad it worked out... so closing this...\n\nPS: No, have **not** got around to `haskell` yet... Quite some time ago did some experiments in `go` but also abandoned that... I guess I like standard C/C++ **too** much to change, and find it **easy** ;=)) I do continue to write a lot of **perl** when I want to test something...\n. @chiccorosso glad this got closed... \n\nI had done **many** tests, and was unable to duplicate...\n\nNo problem... now closed... thanks...\n. @chiccorosso sorry you are going to have to explain more exactly what is the problem... and what config are you using, if any...\n\nWhen I run tidy 5.5.14 latest, or release 5.4.0, that `<script src=\"glb_LInk.js\"></script>` is **NOT** removed?\n\nYes, I can see your `myTEST.htm` file is in UTF-16, with a BOM to indicate that, so tidy inputs it as UTF-16... Tidy does **not** look for `meta charset=\"???\">` tag to set the input encoding, but it does use the BOM...\n\nSince I added no encoding to the config, tidy complains that the default input encoding (utf-8) does not match the actual (utf-16), as indicated by the BOM -\n\n```\nline 1 column 1 - Warning: specified input encoding (utf-8) does not match actual input encoding (utf-16)\n```\n\nAgain in the absence of a config, tidy used its default of utf-8 for output... the first part of the output is -\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.5.14\">\n<link href=\"../STILI.CSS\" rel=\"stylesheet\" type=\"text/css\">\n<script src=\"glb_LInk.js\"></script>\n<title></title>\n</head>\n<body class=\"IndexTop\">\n<p class=\"TitoloIndice\">USO DELLA MACCHINA</p>\n<ul>\n<li class=\"VoceElenco Linked\"><a href=\"Ind_Introduzione.htm\"\ntarget=\"Dn_right\" onclick=\n\"parent.frames[1].location.href=&quot;Pag_Pulsantiera.htm&quot;\">INTRODUZIONE</a></li>\n<li class=\"VoceElenco Linked\">\n<script language=\"JavaScript\">\n           glb_1_PageLinkOnClick(\"Ind_Navigazione.htm\",\"NAVIGAZIONE\",\"Dn_right\",\"Pag_glbHMI_Uso_pulsanti.htm\");        \n</script></li>\n<li class=\"VoceElenco Linked\">\n<script language=\"JavaScript\">\n           glb_1_PageLinkOnClick(\"Ind_Dati_visibili.htm\",\"DATI SEMPRE VISIBILI\",\"Dn_right\",\"Pag_glbHMI_Banner_allarmi.htm\");        \n</script></li>\n... and so on\n```\n\nAnd except for the tidy mark, the output of tidy version 5.4.0 is exactly the same...\n\nYes, tidy does complain that the `<a>` contains unexpected or duplicate quote marks, but seems to **fix** the `<a>` tags, and converts the unexpected `\"` to `&quot;`, which again looks fine... and it corrects the malformed `target` and `onclick` attributes...\n\nWhat is wrong here? It seems all script tags have been maintained, or am I missing something very obvious?\n\nMaybe I do not understand... please try to explain more exactly what problem you see... thanks...\n. No comments in a long, **long** time...\n\nMaybe it solved itself ;=)), so closing this...\n\nFeel free to re-open, or file a **new** issue... thanks...\n. @lhchavez sorry for the brief delay in replying on this...\n\nAlthough I have not yet tested it, it looks good eye-balling the changes...\n\nUnless someone has a negative comment, I will merge this in a few days... thanks...\n\nPS: The same for #531 and #532... thanks...\n. @lhchavez ok, have now had a chance to pull your fork, branch `add-insert-inline-tag`, build and test...\n\nIt certainly `passes` using my [in_461.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_461.html), in that, now by default, tidy will not propagate the `<span>`, unless I add `--insert-inline-tags yes` to the config... so this is **good**...\n\nBut I guess I am **confused** with the current state of the **regression** [tests](https://github.com/htacg/tidy-html5-tests)! Using the `next` branch, I get problems on much more than case 1015959! And there is no `case-1015959.conf`. That case uses `config_default.conf`, but even adding `insert-inline-tags: yes` to it does **not** clear up the several problems...\n\n@balthisar, you say \"Test successful on macOS\", but is that the simple `in_461.html` test, or the full 232 regression tests... maybe I should be using some other tests branch? Or something...\n\nMaybe we should, initially at least, default the `insert-inline-tags` option to **yes**, to keep the current behavior? Just for a certain period of time... or something...\n\nAnyway, seek more comments, feedback before merging this... thanks...\n. @lhchavez ok, I can see you have added a `case-1015959.conf`, which is just a copy of the `default` with `insert-inline-tags: yes` added... thanks, and that gets through the **first** part of the tests, which just checks tidy's exit value...\n\nBut I am still getting differences when doing the `diff -u ../cases/testbase-expects ../cases/testbase--results`, which is the **second** part of the tests, but maybe I am doing something really wrong... \n\nThere is a diff on cases 1050673, 1062511, 1068087, 1410061b, 1410061c, 1423252, 1638062, 1773932, 427838, and quite a few more... \n\nNaturally, I do **not** get these diffs when using `next` Tidy 5.5.14... Of course, leaving the new addition `conf` file there, I do get an `expected` diff, since 5.5.14 does not know about this option... of -\n\n```diff\ndiff -u ..\\cases\\testbase-expects\\case-1015959.txt ..\\cases\\testbase-results\\case-1015959.txt\n--- ..\\cases\\testbase-expects\\case-1015959.txt  Sat Apr 29 18:19:59 2017\n+++ ..\\cases\\testbase-results\\case-1015959.txt  Sat Apr 29 19:17:25 2017\n@@ -1,3 +1,4 @@\n+Config: unknown option: insert-inline-tags\n line 7 column 1 - Warning: missing </font> before <p>\n line 8 column 4 - Warning: inserting implicit <font>\n line 9 column 4 - Warning: inserting implicit <font>\n```\n\nTaking just case **1050673**... it is a simple html **mess** - \n\n```html\n<HEAD>\n<TITLE>\n<MARQUEE>\n</BASEFONT>\n</BODY>\n<B>\n<BASE>\n<HR>\n```\n\nUsing 5.5.14 I get the output - and ignoring the different warnings issued for now -\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.5.14\">\n<title></title>\n<base>\n</head>\n<body>\n<hr>\n</body>\n</html>\n```\n\nWhen I use 5.5.14.I461 I get a completely different output -\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.5.14.I461\">\n<title></title>\n</head>\n<body>\n<b>\n<base>\n<hr></b>\n</body>\n</html>\n```\n\nQuite a lot of **striking** differences... `<base>` not in `<head>`, `<b>` retained...\n\nNote, to get that **additional** version numbering, you can add `-DTIDY_RC_NUMBER=I461` to the cmake command line... this is how I try to make sure I **am** running the modified version of tidy... \n\nThis was all using a **Windows** build... maybe I have done something really **crazy**... tomorrow, or soonest, I will re-run the build and test in linux... sorry for the delay...\n. @lhchavez yes, sorry, maybe we do **not** make it clear enough that the tests are at **two** levels... will try to look at the docs on this... \n\nUsing the Windows tools-cmd bat files, I do do this diff, and report a problem if diff does not exit zero... maybe this 2nd diff part needs to be added to runalltests.sh also?\n\nPS: Of course in testing 5.5.14.I461 using the option `--insert-inline-tags yes`, I do get back close to what is expected -\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.5.14.I461\">\n<title></title>\n<base>\n</head>\n<body>\n<hr>\n</body>\n</html>\n```\n\nStill to **check** this, and the warnings closely for an **exact** match...\n\nAs mentioned earlier, maybe the default should be `yes` at this time... but maybe there is also more to understand here... maybe need to add more checking to the PR... unfortunately out of time tonight... be back soonest...\n. @lhchavez back briefly after dinner...\n\nWow, really sorry you are feeling **frustrated** with trying to add a **new** option to tidy... I can say I also feel that many, **many** times...\n\nNot sure what you describe as **edge** cases... Tidy tries very hard to deal with whatever it is given... whatever the html **mess** is... **edge** or not... and tries to produce **valid** html output, regardless...\n\nOk, you have flipped the default to **yes**... but have you fully described to the **user** what is likely to happen if they set this option to **no**? What are the **full** consequences... I agree your `help` text describes one case, but it seems there are others... quite difficult to describe...\n\nPlease do **not** get me wrong... I seem to support, encourage, such an option... it does do some things I may want, as in my simple `in_461.html` case... I only suggest maybe more could be done to protect against what you call **edge** cases...\n\nLike in `src/istack.c`, should we block **every** `InlineDup` just because this option is `no`? Or in `src/parser.c`, where there is already a **big** comment about `block level tags end this element... big consequences...`, should it also be only on this option is `no`?\n\nNow, I do **not** know yet the full answers to these questions! But am willing to **explore**!\n\nAlthough I have still to **test** #531, there seems a good case for having a separate parser function for `<button>`... and will get around to testing this...\n\nAnd again, thanks for the PR 14 on [tidy-tests](https://github.com/htacg/tidy-html5-tests/pull/14) documentation... this looks good... \n\nI have still to run the `tests` in linux, to see how we can clearly describe what the **regression** tests do... \n\n - stage 1 - just tidy exit value... \n - stage 2 - diff of the result to expected... \n\nbut on reading this feel sure it helps... and assume this negates the previous [PR 13](https://github.com/htacg/tidy-html5-tests/pull/13)...\n\nSo again **very sorry** this feels like such a **frustrating** process... \n\nWhile in some ways HTML Tidy is **simple**, in other ways it can be quite **complex**... developed over a **long** period of time, by many participants... \n\n**Please continue to try to help**... thanks...\n. @lhchavez now that we are specifically addressing the `<button>` issue #461, with your, or my alternative, branch `issue-461` patch, is this **new** option **really** required?\n\n**Are there other cases, like your `<div>` sample, where this is required, desired, beneficial?**\n\nYes, in a way, we understand browsers, in general, accumulate, set, display type attributes, until the next DOM change, and do not close, revert, such attributes, on the next `block` element, but should Tidy also do this?\n\nAnd as demonstrated, this can have **dire** consequences... at least for **legacy** doctypes, and certain html snippets...\n\nYou have now defaulted this option to `yes`, so it only influences those that add a **no** to the config...\n\nEven if this option is **accepted**, then at the very least, I would like the **help** text expanded to -\n\n```\n        TidyInsertInlineTags,               0,\n        \"This option enables inserting \\\"missing\\\" inline elements around the\\n\"\n        \"contents of blocklevel elements such as <code>P</code>,\\n\"\n        \"<code>DIV</code>, etc. For instance, this causes\\n\"\n        \"<code><span><div>OK</div></span></code> to become\\n\"\n        \"<code><span><div><span>OK</span></div></span></code>.\\n\"\n        \"Experimental: Warning - Setting this option to <code>no</code>\\n\"\n        \"can have \\\"dire\\\" consequences on some html documents!\\n\"\n        \"It can result in Tidy outputting \\\"invalid\\\" html!\\n\"\n        \"Use at your own risk!\\n\"\n```\n\nOr something like that! It explains the **risk**...\n\nSimply, abandoning the current default behavior of Tidy **can** produce **invalid** html... like case **1050673**...\n\nAnd now that we have identified, and have fixes for the `<button>` case, should **not** each such `block` element be dealt with individually, rather than a **gross** abandonment of this behavior?\n\nMaybe I am really **out of order** here...\n\nAs always, just seek comments, feedback, ideas... thanks...\n. @lhchavez given that you agree with the additional **warning**, if you can provide some **use** cases, samples, and show how it can be helpful, maybe there is an argument for this option... just concerned that it can also mangle a document... but not entirely against it...\n\nBut it seems your initial example is **not** exactly correct. The current, normal propagation of Tidy will **close** the `<span>` on reaching the `<div>`, and then reopen it, or inline-duplicate it, after the `<div>`, and then close it before the end `</div>`. And, unless you add `--drop-empty-elements no`, will then drop the leading empty `<span>`...\n\nIn other words, `<span><div>OK</div></span>` will become `<div><span>OK</span></div>`, and `<span><p>OK</p></span>` will become `<p><span>OK</span></p>`, etc...\n\nAccordingly, below is the corrected text, plus the suggested warning, now conforming to the text template -\n\n```\n        TidyInsertInlineTags,               0,\n        \"This option enables inserting \\\"missing\\\" inline elements around the \"\n        \"contents of blocklevel elements such as <code>P</code>, \"\n        \"<code>DIV</code>, etc. For instance, this causes \"\n        \"<code><span><div>OK</div></span></code> to become \"\n        \"<code><div><span>OK</span></div></code>.\"\n        \"<br/>\"\n        \"Experimental: Warning - Setting this option to <var>no</var> \"\n        \"can have \\\"dire\\\" consequences on some html documents! \"\n        \"It can result in Tidy outputting \\\"invalid\\\" html! \"\n        \"Use at your own risk!\"\n```\n\nBut now we agree it **must** default to `yes`, maybe this could be completely reworded, in light of the above - sort of making it clearer that this has always been Tidy's **normal** behavior, and this option allows that to be **reversed**...\n\nMaybe you could add that text, or a modified version, to the PR... if you agree...\n\nWhat do others think? Would certainly appreciate some **more** feedback on this option. For sure, I am still slightly on the negative side, but can be swayed by **use** cases, where it helps, with samples, and helpful comments... thanks...\n\nPS: A `+1` will not cut it here ;=))\n. As replied to #530...\n. @lhchavez sorry for the delay on this...\n\nI was working on an alternate patch, to put this change of the parser for `<buttom>` in `TY_(ResetTags)` - reset to html5, and `TY_(AdjustTags)` - set to html4 mode, if a `legacy` doctype is found. As you will see this is where **several** other such mode swithes are handled...\n\nAnd have pushed my patch to the `issue-461` branch for testing...\n\nThis would keep **all** the `switches` between html5 and htm4 mode in **one** place, rather than creating a **new** parser just for `<button>`, which does the same thing - switches between `ParseInline` and `ParseBlock`...\n\nBut ran into `regression` testing problems, in that my **fix** caused quite a number of **diffs**, and some exit value changes... Arrgh!!!\n\nOn investigating this, it seems some **errors** have crept into the `regression` tests!\n\nNow most of the `regression` tests are still **legacy** documents. Take say 1086083. It is `HTML 4.01`, and testcase contains the code `<li>Huh?</li>`, and tidy is supposed to **fix** this by adding a `<ul>`, which, if we back up the tidy-tests repo is what we will find in the original `out_1086083.html`, but **not** in the current `expects/case-1086083.html`!\n\nIn other words, this `expects/case-1086083.html` now **fails** validation with the error `Line 16, Column 6: document type does not allow element \"LI\" here; missing one of \"UL\", \"OL\" start-tag`! While the original `out_1086083.html` passes!!\n\nThat is we now expect, allow some html5 tolerance in a legacy document, and this is an error! And there seems to be several other similar cases... yet to be explored fully...\n\nNow this has nothing to do with `<button>`, or #461, and may in fact merge this, as is, **until** I can find time to investigate and correct the current `expects`, in a separate issue... please bear with me... thanks...\n. PS: Now opened [Issue 15](https://github.com/htacg/tidy-html5-tests/issues/15)... \n\nAny help appreciated... thanks...\n. @lhchavez as agreed have merged #540 and closed #461, so closing this...\n. As replied to #530... thanks...\n. @lhchavez have not had a chance to test this, but as @balthisar says, looks like a nice addition... thanks...\n. @HassanAmmori thank you for your comment...\n\nBut exactly which JTidy are you referring to?\n\nSearching around I found http://jtidy.sourceforge.net/ - https://sourceforge.net/projects/jtidy/ - but as you point out it seems little has happened there since about 2012... Maybe you were referring to some other site/source?\n\nBut also as you point out, a Java port of tidy is not technically as issue for here... You need to urge the JTidy maintainers to do an update...\n\nBut will leave this open for a while, in case there are further comments... thanks...\n\nAnd yes, Grand-Daddy HTML Tidy is still **alive and well**, and we continue to try to **march** it forward... as best we can...\n\n. @HassanAmmori thanks for confirming the JTidy project links...\n\nActually it seems I had checked out this projects a few years back, just to have a look...\n\nBut **nothing** has been pushed to this svn repo since Nov 2010, Rev: 1191... so it now seems **abandoned**...\n\nAs you point out this is a **complete** Java port, actually I would say **rewrite**, of the HTML Tidy C code, right down to supporting what looks like pretty close to the exact command line and configuration options as Tidy! Even copied the idea of a 'lexer' to extract tokens from the input stream... build up a DOM like node list.. pretty printing, with indenting... etc, etc, ... even adopting the same MIT license...\n\nBut since it **stopped** some 7 years ago, it has no html5 support... so that would mean now porting/rewriting all the html5 changes... a quite big task!... and like you, I am not up to the level of such a port, aside from the fact that I am not too interested in writing Java... despite all its fabulous claims...\n\nIt is much more that **JTidy needs update**! As indicated, identifying all the html5 changes in the C code, and then rewriting them in Java, would be quite a heavy job...\n\nAs @balthisar points out this is really completely **unrelated** to HTML Tidy, a C project, thus closing this... \n\nBut thanks for the reminder of what is out there... and thanks for the compliments...\n. @spk thanks for this PR... we like those...\n\nBut please remind me why we **need** a pkgconfig file... Working mainly in Windows, it seems this is not required, or used there... but...\n\nAnd it seems you have only added it to the CPack package config... that is if a DEB/RPM/... is generated. What about a normal build and install from source?\n\nHowever, it also seems no harm, so if no negative comments, will merge this in a few days... thanks...\n. @spk thank you for the update...\n\nHowever, as a mainly Windows person, where this `pkgconfig` change is **never** used, I think?, then I am **not** the person to decide on this...\n\nOne comment against `currently going to \"/usr/local\" where for Debian its a violation of the policy`, when working with the **last** Debian update - a very **long** and **arduous** process - I got the **opposite** impression... but what do I know...\n\nSee https://answers.launchpad.net/ubuntu/+source/tidy/+question/276623, and https://launchpad.net/ubuntu/+source/tidy-html5 - added Tidy 5.2.0...\n\n**Especially** see Issue #354, and maybe others, for more on this **Debian** process... with @AdamMajer, @danielhjames, @jasonethomas, @mcandre, and we urge them to update to release Tidy 5.4.0... when they get the chance...\n\nAnd maybe during the **Debian** package creation, this was already done... I do not know...\n\nFor sure, CMake defaults to `/usr/local` if **no** `-DCMAKE_INSTALL_PREFIX=<path>` is given... that is **known**...\n\nSimply, if this is ok by @balthisar, in OS X, a *nix type OS, then for sure I have no problem with this... thanks...\n. @gidmeister2 yes, a long time back now, **Charles** built **COM/ATL/.NET** wrappers - see http://users.rcn.com/creitzel/tidy.html#dotnet - that would be suitable for use in Vb.net...\n\nSeveral times, over recent years, I have tried to update that, from his original source, those zips are still available... but lack the skills required to complete it... I make some steps forward, but ultimately fail...\n\nIf you, or others, want to take this on, then I will certain **help** where I can... thanks...\n. @Daijobou I am afraid I do **not** know the exact answer...\n\nI note @skynet and @sideshowbarker maybe touched on this way back at issue #26... and then @mcroiban with issue #91... then another PHP compile, from source, by @skynet in issue #190 and #235... and maybe others I missed...\n\nIt seems you need to build and install the Tidy shared library, and then compile PHP with `--with-tidy=/path/to/tidy/install`... but maybe the PHP source would also need to be updated to use the **new** tidy header names, etc... ie the glue code that joins them together...\n\nSo it seems all **doable**, from respective sources... I will try to find time to experiment... and once we have **current** modern Tidy compiled into, and working inside PHP latest, we would need to **press** the PHP maintainers to **update**!\n\nHope this helps... and could maybe help more if you have specific questions... thanks\n. @Daijobou I guess I am still missing some point here... whoa is me... sorry...\n\nAnd thanks @skynet for the two +1's... that's appreciated...\n\n**But what are you asking of HTML Tidy library?**\n\n> a release for HTML5 coming soon, maybe for 10. libtidy bday? :)\n\nWell, we have just recently released `5.4.0`, but still await various distros to catch onto that... we will do anything to help, encourage, help, push...\n\nI agree, `libtidy is a great library`, and it continues to move forward... that last release addressed many problems, and the latest `next` branch, even more... and that will continue...\n\nSo, I repeat, **what can the HTML Tidy repo** do to **HELP**, especially with `plesk`?\n\nI think the latest, at least the last release `5.4.0`, of Tidy, if not `next`, should be part of the latest `php5.x/7.x/7.1` releases, **but** what can we, as `HTML Tidy`, do to get there? Who to contact, notify, assist, push, explain, help, even yell at... ?\n\nAny **help** appreciated... thanks...\n. @padraic thanks for the links... the [rfc](https://wiki.php.net/rfc) certainly looks a good place to start, but maybe also directly contacting the [php-tidy](https://pecl.php.net/package/tidy) maintainers would also be good...\n\nBut first I wanted to see if I could (a) build the current PHP, and (b) then link it to Tidy, but am a little confused about the PHP source...\n\nThe last time I tried that seems a few years back with PHP version 5.6.9. That was from a tar ball. But it seems PHP has also moved on...\n\nNow I find a GitHub repo - https://github.com/php/php-src - it seems the version jumped from 5.6 to 7.0, 7.1, and `next` 7.2, but is this v7 in any distributions yet? I think this is the source I should be using...\n\nChecking Synaptic Package Manager in my Ubuntu 14.04 LTS only shows php 5.5.9, but this distro is now quite old, and I do need to update at some time... \n\nBut in another machine running Ubuntu 16.04 LTS it show 7.0, so I guess I should target at least 7.0... Any thoughts, comment on this very welcome...\n\nThen looking at the php_tidy.h, as suspected, it still includes \"buffio.h\" which is now named \"tidybuffio.h\" to avoid generic file name clashes... But since we have not really changed the API substantially, it looks like it should compile... Then looking at the other php glue code, tidy.c, again it looks like everything is still good... One of the benefits of trying to keep the HTML Tidy API consistent and stable...\n\nSo, as indicated, I will try to find time to compile PHP 7.0, making the required fixes in php_tidy.h and see where I get... would be appreciated if others also get the chance to try... \n\nAs I say, it would be nice to approach the PHP-Tidy maintainers with something we know works... thanks...\n. @padraic thanks for clarifying...\n\nHave now cloned the `master` source, to **php-src**, in Windows, and there is no `next` branch... so at this point assume the `master` is 7.2, in that there are also `PHP-7.1.5`, `PHP-7.1.4`, etc back to `PHP-4.0` branches... but agree the best target at this time would be `master`, what ever the actual version it is...\n\nAnd yes there is `php-src\\ext` folder, with some 75 extensions, including **tidy**. And yes, there have been some updates to `php_tidy.h`, `tidy.c`, files  including the use of 'tidybuffio.h', if found... it seems the name of the main PHP-tidy maintainer remains as before from the PHP 4 PECL site...\n\nHowever, in the PHP 7 tidy.c I can see he has a macro to `register` all HTML tags, and this list is from circa 2009 - **LOTS** of new tags were added in supporting html5... need to add some 30 plus... but really wonder **WHY** such a table would be needed in PHP tidy.c... what use is it put to...\n\nI guess we do **need** to strike up a conversation with John Coggeshall, the author of this PHP 7 tidy.c module... or add something to one of the PHP mailing lists... or **both**...\n\nIf we could **eliminate** that table, and another about node types, then, as stated, the API to `tidy` a document rests essentially unchanged, and a rebuild of this PHP tidy extension, linking with the current shared libtidy.so.5 should work... no problem...\n\nSo at this moment this seems more like an issue to be filed with PHP, rather than anything HTML Tidy can do here...\n\n**Does anybody more interested in PHP want to take this on?** As stated I would help where I can... thanks...\n\n. @deathbaba thanks for the PR... we like those...\n\nHave not yet tested, but this looks like a simple, effective change...\n\nHave you run the [Regression Tests](https://github.com/htacg/tidy-html5-tests) with this change? While this seems to comply with all html5 spec read, I have a small concern about legacy html4 docs... Maybe the change needs to also check the active doctype... but maybe not...\n\nGiven a suitable consideration of the above, and time for other comments, and feedback, will consider merging this in a few days... thanks...\n. @deathbaba as stated thanks for this... while I share the idea with @balthisar that the `name` has been depreciated in html5, but this can be raised as a separate issue if needed.... @deathbaba I just created a simple gdoc online, and downloaded it, as a html zip... my last creation there was 2012!\n\nI only had a header, `<h1>`, and two `<p`>... \n\n**Wow** what a giant `<style>` **mess** they create ;=)) Creating some 25+ style elements, and only use abt 5 in the document...\n\nAnd yes no `<!DOCTYLE ...>`, which would default to html5, but then uses legacy **meta** - `<meta content=\"text/html; charset=utf-8\" http-equiv=\"content-type\">`, and **style** - `<style type=\"text/css\">`... \n\nIt immediately reminded me of the **old** MS Word 2000 export to html, which added lots of proprietary tags and attributes, but maybe not quite as bad... but close ;=))\n\nDefault tidy barked about the some of these, and immediately deleted 4 empty spans...\n\nBut **zut**, adding the `-gdoc` option certainly massively **simplified** the content...\n\nThen I got adventurous, and added a couple of internal links - `bookmarks` - to the page and saw how tidy-5.5.18 correctly adds the `id` to the paragraphs, while tidy-5.5.14 **failed**...\n\nGood work, and now see the `name` attribute has **nothing** to do with this issue...\n\n**Seems a very good fix**... thanks...\n\nPS: Add test [in_537.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_537.html) to my tidy-test repo, so other can try and verify this fix...\n. @jcubic while I do not think it rises to the level of a **bug**, it is certainly a valid Pretty Printing Feature Request...\n\nFor quick testing could you please add a very minimal complete xml document? It should be minimal but include some indenting... thanks...\n\nPatches, or a PR very welcome... thanks...\n. @jcubic thanks for the simple sample... this made testing quick and easy...\n\nWhile it might not be exactly what you want, in running a debug session I note that there is an `--indent-cdata yes` option - it defaults to **no**.\n\nThus in the service `static void PPrintCDATA( TidyDocImpl* doc, uint indent, Node *node )` there is the code -\n\n```\n    Bool indentCData = cfgBool( doc, TidyIndentCdata );\n    if ( !indentCData )\n        indent = 0;\n```\n\nNotice the indent is set zero if this option is off...\n\nWith this **on** Tidy not only indents the `<![CDATA[`, but the text as well...\n\nIs this ok?\n. @jcubic another thing noted during the debug concerning xml pretty printing `<![CDATA[`, and that is the `text` content is **never** wrapped... as you can see in the code below, wrapping is **always** disabled in this `PPrintCDATA` text...\n\n```\n    PCondFlushLineSmart( doc, indent );\n    saveWrap = WrapOff( doc );        /* disable wrapping */\n\n    AddString( pprint, \"<![CDATA[\" );\n    PPrintText( doc, COMMENT, indent, node );\n    AddString( pprint, \"]]>\" );\n\n    PCondFlushLineSmart( doc, indent );\n    WrapOn( doc, saveWrap );          /* restore wrapping */\n```\n\nIn fact such `CDATA` also preserves any newline chars, so -\n\n```xml\n  <tag><![CDATA[\n    Lorem Ipsum Dolor Sit Amet \n    Lorem Ipsum Dolor Sit Amet \n    Lorem Ipsum Dolor Sit Amet \n    Lorem Ipsum Dolor Sit Amet \n    Lorem Ipsum Dolor Sit Amet\n       ]]></tag>\n```\n\nwill be output as - of course with `-xml -i --indent-cdata yes` -\n\n```xml\n  <tag>\n    <![CDATA[\n        Lorem Ipsum Dolor Sit Amet\n        Lorem Ipsum Dolor Sit Amet\n        Lorem Ipsum Dolor Sit Amet\n        Lorem Ipsum Dolor Sit Amet\n        Lorem Ipsum Dolor Sit Amet\n           ]]>\n  </tag>\n```\n\nSo, unless you have other `text` nodes, outside `CDATA` then the option you showed of `-wrap 200` would **not** do anything...\n\nAlso Tidy `defaults` to `-utf8` so you do not need to add that...\n\nHTH.\n. @jcubic sorry, this is what I would call a `Creeping Feature Request` (CFR) ;=))\n\nYou initially asked why is `<![CDATA[` **not** indented. I spent time, research, debug, ... and find **AH HA**, you need to add option `--indent-cdata yes`... seems issue **closed**?\n\nYou bounce back with, sort of `well yes...`, but do **not** actually say to that, and go on with, `but...` now I want **more** ;=))\n\nNo problem, but at the very least what you want **more** should be **new** issues to be consider... close this and move on...\n\nBut to try to address the 2 new features I perceive here - maybe I missed something...\n\n 1. The closing `]]>` should **not** be indented again - perhaps fair enough - another, different, FR!\n 2. tidy is adding indent blindly - **NO**! CDATA is collected as the user input, and if indent requested, then what the user gave will be `indented`\n\nOn the 2nd item, consider an input of -\n\n```xml\n  <tag><![CDATA[\n    Lorem Ipsum Dolor Sit Amet \n    Lorem Ipsum Dolor Sit Amet \n        Lorem Ipsum Dolor Sit Amet \n        Lorem Ipsum Dolor Sit Amet \nLorem Ipsum Dolor Sit Amet\n       ]]></tag>\n```\n\nTidy will honor the **user** xml input, and if **indent** requested, will **keep** all the leading space... **as I think it should**...\n\nSo yes, it is good to have more **expectations**... and some of them could be a **new** FR to be considered, like 1. ... but some, like 2. are very unlikely to be worked on... even considered...\n\nHave I missed something important here?\n\nSorry to be so blunt... thanks for your interest in Tidy...\n. @jcubic I guess we have quite a different understanding of what an xml `<![CDATA[ ... ]]>` section is...\n\nThe best quote I could find was \"Everything inside a CDATA section is ignored by the parser\". And that is what Tidy does - ignores it... until the ending `]]>`... just stores what ever is exactly there, and outputs it **as is**... except it will always place the section open and close on a new line...\n\nNow Tidy has an option, deliberately **off** by default, which when turned **on**, Tidy will add measured indent space (or tab) characters to the beginning of each line of the **as is** data... it can **not** look upon it as ordinary text, and somehow **merge** its indent addition with any pre-existing leading space characters...\n\nI just do **not** see an option to `allow to format CDATA like normal text` would fly... sorry...\n\nSo I think question asked and answered, so closing this... Please feel free to re-open, or file another issue... thanks...\n. @balthisar thanks for looking into this...\n\nI have checked out your `issue_338` branch, built and tested both cases, and it seems good...\n\nSince I was in there, namely `access.c`, in debug, I took the opportunity to hopefully **fix** two other access warnings -\n\n 1. Access: [3.2.1.1]: <doctype> missing. - But there is a html5 `<!DOCTYPE html>` so got rid of this warning\n 2. Access: [13.2.1.1]: Metadata missing. - Well, not sure I understand this `test` exactly, but my original in_338.html and your above additional in_338-2.html do have `<meta charset=\"utf-8\">`, so again suppressed this warning if in html5 mode if this meta found...\n\nMy simple patch for these 2 -\n\n```diff\ndiff --git a/src/access.c b/src/access.c\nindex 7244492..ac3b9aa 100644\n--- a/src/access.c\n+++ b/src/access.c\n@@ -2761,6 +2761,10 @@ static Bool CheckMetaData( TidyDocImpl* doc, Node* node, Bool HasMetaData )\n                         TY_(ReportAccessError)( doc, node, REMOVE_AUTO_REDIRECT);\n                     }\n                 }\n+                if (TY_(IsHTML5Mode)(doc) && attrIsCHARSET(av) && hasValue(av))\n+                {\n+                    ContainsAttr = yes;\n+                }\n             }\n\n             if ( HasContent || HasHttpEquiv )\n@@ -2840,9 +2844,17 @@ static void CheckDocType( TidyDocImpl* doc )\n         if (DTnode && DTnode->end != 0)\n         {\n             ctmbstr word = textFromOneNode( doc, DTnode);\n-            if ((strstr (word, \"HTML PUBLIC\") == NULL) &&\n-                (strstr (word, \"html PUBLIC\") == NULL))\n-                DTnode = NULL;\n+            if (TY_(IsHTML5Mode)(doc))\n+            {\n+                if ((strstr(word, \"HTML\") == NULL) &&\n+                    (strstr(word, \"html\") == NULL))\n+                    DTnode = NULL;\n+            }\n+            else {\n+                if ((strstr(word, \"HTML PUBLIC\") == NULL) &&\n+                    (strstr(word, \"html PUBLIC\") == NULL))\n+                    DTnode = NULL;\n+            }\n         }\n         if (!DTnode)\n            TY_(ReportAccessError)( doc, &doc->root, DOCTYPE_MISSING);\n```\n\nOf course, until I merge PR #540 to fix #461, that `TY_(IsHTML5Mode)(doc)` always returns `yes`... But that will happen shortly I hope, maybe after you and @lhchavez have had a chance to test my `issue-461` branch...\n\nHow do you want to handle this? Even though not related to the `audio` 1.1.6.2 warning, I could push to this branch, so these get into there when eventually merged... It is all in the theme access warning need some TLC #338... and its earlier #11... Of course this merge probably means we need to re-set some the access test expects...\n. @balthisar done... pushed the patch to `issue_338` branch... thanks...\n. @balthisar this is a good start to #338 in that 3 spurious warnings have been dealt with... thanks for assisting this...\n. @cjerdonek thanks for the report...\n\nThis seems quite a **strange** one! And yes, has been around for a **long** time...\n\nAs you can see the enumerated value is called `SUSPECTED_MISSING_QUOTE` - just a **suspicion**, not a fact...\n\nSince the parser has seen more than 10 `\\n|<|>` chars, seen at least 1 `>`, the user has **not** added the option `--literal-attributes yes`, it is **not** `IsScript`, is **not** `IsUrl`, **not** `javascript:`, **not** `<xml `, yet it chooses this is a **fatal** error! ie no html output unless `--force-output yes` added...\n\nReally, on an seemingly arbitrary count of greater than 10 `\\n|<|>` chars Tidy outputs a catagorical statement `Error: missing quote mark for attribute value`, and goes ballistic! Huh?\n\nAt the very least I would see a clear warning like `Warning: suspect missing quote mark for attribute value`, but only as a warning, **not** fatal!\n\nWhile Tidy is always very terse with warnings, and errors, if we ever went for longer descriptive helpful warnings I would suggest something like -\n\n```\nWarning: In parsing an attribute value, found %d '\\n', '<', or '>', plus at least one '>' \ncharacter, and really **suspect** there is possibly a missing closing quote somewhere. \nIgnore me at your own peril!\n```\n\nOr something... but Tidy is very unlikely to go that very verbose way, at least for now...\n\nSo, as suggested, what about reducing it to a **warning** and include the idea that this is only a **suspicion**, based on counts...\n\nAnd maybe increasing the arbitrary hard coded 10 count, to at least say 20, 50... but that is still arbitrary. And in a real case, where the user did miss a closing quote, even 10 could be **too** many...\n\nOn the other hand, adding `--literal-attributes yes` to the config also removes this error/warning **and** preserves the `\\n` chars, another thing that could be added to a verbose info output... \n\nNote that without that option tidy will only output -\n```\n<div foo=\"&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt;\">x</div>\n```\n even if **forced**... not exactly equivalent to the first sample input...\n\nWhat do other think? Seek further feedback on this... thanks...\n. @balthisar this looks good... of course in conjunction with the tests [PR 17](https://github.com/htacg/tidy-html5-tests/pull/17)... and assume you will do the usual version bump, in both places...\n\nGo for it... thanks...\n. @lhchavez thank you for this **repeated** idea... as @balthisar pointed out there have been numerous back reference to this topic - `Travis CI`...\n\nSometimes this seems to become **divisive** - but it should **not** be so...\n\nAs I have said in numerous previous comments, I, personally, do **not** see any benefit here... Yes, it is free, it is there, but really what does it really add?\n\nI am 100% sure some projects **benefit** from this... so why not Tidy?\n\nIt seems to me it took a long time to (a) get these `regression` tests into order, and (b) separate them from the main source repo. Thanks to @balthisar for a lot of that, although I did not agree with some **name** changes at the time, it has matured as a **separate** test site... and it **works** well...\n\nNow the whole idea of adding a git **submodule** puts them back together... Why?\n\nWho benefits from this? \n\nYes, there are two levels to consider - simply `maintainers` and `contributors` - who gains?\n\nFrom the `contributors` point of view, it seems an easy step to pull the `next` tidy-tests repo, and run all the `regression` tests, and check out your work. Yes, you pointed out maybe our documentation of this step was lacking, but I immediately added your suggestion for this. And maybe the test scripts can still be improved... This test can be a simple script... run seconds after your build...\n\nFrom the `maintainers` point of view, I have **multiple** `t-xxx.bat` files, so I can quickly check out a new `branch`, or a new forked `branch`, an idea, and run the `regression` tests... So what do I gain from `Travis CI`? Except **more** work in maintaining the **submodule**...\n\nNow I am lucky! My own personal compile farm includes Ubuntu 14.04 64-bit, Ubuntu 16.04 32-bits. Windows XP 32-bit MSVC8 (2005), Widnows Vista 32-bit MSVC10 (2010). Windows 10, 32 & 64 bit, MSVC14 (2015), **and** from the earlier back references, added RPI2, ARM7, 32-bit... and thinking about getting a RPI3, 64-bits... so do I need `Travis CI`, even if it can duplicate **some** of those environment? **I think not!**\n\nI will repeat. I am **not** against this! Just do **not** see the need, or benefits... **yet**...\n\nBut as @balthisar said somewhere, always open to **discussion**... maybe I am **wrong**! Stupid, and just do not see the point...\n\nReally, thanks for your great additions to tidy code... this is **most** appreciated... and hope for more...\n\nLet's not get stuck, or unstuck, on `Travis CI`... please... thanks...\n. @lhchavez thanks for the further feedback... that is no problem... I left it a few days in case others wanted to **chime** in...\n\nI think the important thing to understand is that these are **not** `Unit Testing`, nor perhaps `Integration`, `System` nor `Acceptance` testing, which one would expect to be part of the main source, and kept 100% in sync with such source...\n\nThey are what we have called **`Regression`** testing, and in general, do **not** have to be 100% in sync with the main source... \n\nWhile over the last weeks, month or so, there have been a number of changes, which required updating the `tests` at the **same** time... this should **not** happen that often... As you may have seen the version 5.5.7 in tests stayed the **same** up until tidy 5.5.15...\n\nAnd these changes do require a **lot** of branch juggling for development testing, where both need to be changed at the same time...\n\nBut in general, I really do **not** see much of a **burden** in the following **normal** procedure, which could be scripted -\n\n```\n$ cd ../../../tidy-html5-tests/tools-sh\n$ git pull\n$ ./run-tests.sh\n```\n\nAlso understand, they **were** originally in the **same** source, and we **deliberately** chose to move them out... like we also moved out the Doxygen API document building... tidy site documentation, etc, etc... so this was **not** by accident...\n\nI think I have said everything I need to say about CI ;=))\n\nI hope this, and the PR #546 can be closed, and we move on... but as always thanks for the ideas, support and feedback... this is very **much** appreciated...\n. @balthisar thanks for this, but in testing your `issue_352` branch, have some questions which I will post on #352... that is in the originating issue... if that's ok with you?\n. @jfilter thanks for the issue...\n\nI am not so sure about a **security risk**, but certainly an interesting use of the `window.opener` property...\n\nIn the past I have used `target=\"_blank\"` simply because I did not like the default behavior of replacing the current page... but these days write very little html...\n\nAt this time will just mark this with a `Technical Support` label, since I am not sure Tidy needs this `feature`... although it would not be hard to do...\n\nI did some searching around the W3C sites, but could not find anything specific... advise if you, or others  find any **authoritative** links... thanks...\n\nWhat do others think? **FUD** or **fact**? Thanks...\n. @balthisar thank you for looking into this #391 issue...\n\nI have only tested in Win10, and it seems to work... **except** you need to move the `fclose(fn)` up to before the `#ifdef _WIN32` switch... windows will **not** allow that file to be opened again... now pushed - `Close the file before the _WIN32 switch f7e7554`...\n\nI did think of using the existing libtidy service `tidyFileExists`, but this uses `access`, which, for some reason, I never liked, **and** at this time we have a `TidyDocImpl *doc`, **not** a `TidyDoc tdoc` required for that service - we would need to move it back to `tidyParseFile(tdoc,...)` - **and** maybe a `directory` would pass the `access` test... not tested, tried... forget it... too troublesome...\n\nI also thought of using `stat` instead... this **saves** opening it as \"r+\" only to close it, also something I do not like, **and** could replace the later `fstat` done... but when I tried to do this, this added even **more** squiggly code... it would work... \n\nBut involves yet another macro for `_WIN32` to test for a `directory`... just the usual **with** or **without** a leading underscore, like -\n\n```\n#ifdef _WIN32\n#define M_IS_DIR _S_IFDIR\n#else /* !_WIN32 */\n#define M_IS_DIR S_IFDIR\n#endif /* _WIN32 y/n */\n```\n\nSo on balance, **if** this works across platforms, let's go for what you have... and like the new `descriptive` message...\n\nWill get around to testing linux, but if it works on the macOS, no reason to think not... merge it... thanks...\n. When I started this I had only lit up the respective **old** systems, pulled and compiled, and saw there were **many** errors, some of which I looked at... but still did not seem too big...\n\nNow it turns out that the **many** was just the cascading effect in the compiler... failing to create a variable can generate **many** more errors... thankfully the compiler sort of gives up about 100+\n\nBut now that I look at it closely, the actual patch, given below is quite small and very limited. \n\nThis does not address one `#pragma execution_character_set(\"utf-8\")` that did not exist back in MSVC8 2005, but is only a warning... so left it... \n\nThe minimal patch is -\n\n```diff\ndiff --git a/console/tidy.c b/console/tidy.c\nindex 4a9fe0a..4614052 100644\n--- a/console/tidy.c\n+++ b/console/tidy.c\n@@ -24,6 +24,9 @@\n #include \"locale.h\"     /* for determing and setting locale */\n #if defined(_WIN32)\n #include <windows.h>    /* Force console to UTF8. */\n+#if (defined(_MSC_VER) && _MSC_VER < 1900)\n+#define snprintf _snprintf\n+#endif\n #endif\n #if !defined(NDEBUG) && defined(_MSC_VER)\n #include \"sprtf.h\"\n@@ -1547,8 +1550,8 @@ static void printXMLCrossRefEqConsole(TidyDoc tdoc,   /**< The Tidy document. */\n\n     if ( hit )\n     {\n-        localHit = *hit;\n         tmbstr localName;\n+        localHit = *hit;\n         localize_option_names( &localHit );\n         printf(\"  <eqconsole>%s</eqconsole>\\n\", localName = get_escaped_name(localHit.name1));\n         free((tmbstr)localHit.name1);\n@@ -1900,12 +1903,12 @@ int main( int argc, char** argv )\n     TidyDoc tdoc = tidyCreate();\n     int status = 0;\n     tmbstr locale = NULL;\n-    tidySetMessageCallback( tdoc, reportCallback); /* experimental group */\n-\n     uint contentErrors = 0;\n     uint contentWarnings = 0;\n     uint accessWarnings = 0;\n\n+    tidySetMessageCallback( tdoc, reportCallback); /* experimental group */\n+\n     errout = stderr;  /* initialize to stderr */\n\n     /* Set an atexit handler. */\ndiff --git a/src/message.c b/src/message.c\nindex 2c5587e..f2556ad 100755\n--- a/src/message.c\n+++ b/src/message.c\n@@ -567,9 +567,9 @@ void TY_(ReportAttrError)(TidyDocImpl* doc, Node *node, AttVal *av, uint code)\n /* lexer is not defined when this is called */\n void TY_(ReportBadArgument)( TidyDocImpl* doc, ctmbstr option )\n {\n+    TidyMessageImpl *message;\n     assert( option != NULL );\n-\n-    TidyMessageImpl *message = TY_(tidyMessageCreate)( doc, STRING_MISSING_MALFORMED, TidyConfig, option );\n+    message = TY_(tidyMessageCreate)( doc, STRING_MISSING_MALFORMED, TidyConfig, option );\n     messageOut( message );\n }\n\n```\n\nJust 4 little blocks, in just 2 files, and as seen 3 are just moving the code position only...\n\nSo I will shortly get around to cutting this in... thanks...\n. Oops, just noted the above `-std=x99` should probably be `-std=c89`, or something... will get to trying that in linux... just looking for a way to show these K&R C warnings using gcc... any help appreciated... thanks...\n. @foxinushka thanks for the issue, and the exploration of the tidy versions, commits and code... that is **good** to see... a person trying to help themselves...\n\n> Where can I read about tag a, if it can't be a block in HTML 4.01?\n\nYes, the `<a>` tag changed - see [a-changes](http://w3c.github.io/html-reference/a.html#a-changes) - where it essentially changed from an inline `phasing-content` to `transparent` ie a block element...\n\nSo since your document contains a HTML 4.01 doctype, Tidy will do `TY_(AdjustTags)(doc);`, and treat it as `inline`... and close the `<a>` on reaching the `<center>` tag... with catastrophic results... we no longer have a `facebook` link...\n\nIf you change the doctype to `<!DOCTYPE html>`, the transparent block nature of the anchor will produce what you want... I think... try it...\n\nOf course, Tidy will still `bark` about the use of `<center>` and `<font>`, elements removed from html5. And so will the W3C validator!\n\nAm marking this as `Technical Support` until we can narrow down exactly what you expect tidy to do in this case... \n\nLook forward to further feedback and comments... thanks...\n\nPS: Just so we are sure we are testing the same document have pushed [in_551.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_551.html), your original, and [in_551-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_551-2.html), with a html5 doctype...\n. @foxinushka thanks for the further explanation...\n\n> I can't change doctype to HTML5, because it change content representation in some cases.\n\nThat makes things quite difficult. Seems you **want** legacy html4 parsing, oh, **except** for the `<a>` tag! Hmmmm...\n\nSince it seems you can compile **`libTidy`** from source, you could certainly **fork** the source, add you own branch, and add you own option like say `--treat-a-as-html5 yes`, or something, then avoid changing the parser or model of `TidyTag_A` in `AdjustTags`... it would continue to be parsed as html5...\n\nI am sorry `most browsers work well with it` does **not** cut it for Tidy, which is associated with the W3C. Tidy will always have to strive for **doing the right thing**, as far as html specs go, so your above patch, even as an option, may not be accepted to become part of official tidy... but would work for your use case...\n\nIn other words, if you learn a bit of `git` magic, you could easily maintain your own **custom** version of the library... that is good, correct use of open source... encouraged even...\n\nNot sure what you are trying to say about `parser.c:1343` - `Issue #307 - an <A> tag to ends any open <A> element`!\n\nThere seems **no case** for disabling this. You can **not** have a `link` within a `link`, and **must** mess up in most browsers, since how would they know which `link` to follow `onclick`! Of course, you may get lucky, and get what you want or expect, but it remains **bad** html coding...\n\nBut maybe I misunderstand something here?\n\nAnyway, hope this helps... be happy to try to answer any other questions... thanks...\n. @balthisar wow, that seems very **strange** indeed... what gcc version?\n\nI see it with -\n\n - Ubuntu 16.04 - 32-bit - gcc 5.4.0 - Intel Pentium 4 LE\n - Ubuntu 14.04 - 64-bit - gcc 4.8.4 - Intel Core2 Quad Q5500 LE\n - Rasbian 8.0  - 32-bit - gcc 4.9.2 - arm71 LE\n\nYou must be the **luckiest** guy on the planet ;=))\n. @balthisar you did not mention the gcc version...\n\nAnyway, suggest the last patch shown - just drop in a `default:`? Agreed?\n\nYes, I too am surprised how good MinGW 32-bit, and MinGW.x64 does... Never had any particular problem with it, but then again I do **not** test with it that much..\n\nCertainly seems we should maybe consider add one or the other, or both on the **next** release... but I think it includes a runtime dll dependency, which always causes more distribution bother, but certainly no more than MSVC...\n\nOff for dinner, and not sure will make it back tonight... we will see..\n. @balthisar since we added the MinGW topic, now I can report one **more** gcc version that reports this warning, but I can also report **one** that does **not**!!!\n\n - Windows 10 - 64-bit - MinGW 32-bit - gcc 4.8.1 - WARNING\n - Windows 10 - 64-bit - MinGW-w64 64-bit - gcc 5.3.0 - NO WARNING\n\nBut whether a compiler **does** or **does not** report a potential uninitialized `tagtype` variable, we can see there is **no** `case default:`, so the potential is there!\n\nCan we at least agree on the following **one line** patch -\n\n```diff\ndiff --git a/src/message.c b/src/message.c\nindex 48c300f..9321c9d 100755\n--- a/src/message.c\n+++ b/src/message.c\n@@ -243,6 +243,7 @@ void TY_(ReportNotice)(TidyDocImpl* doc, Node *element, Node *node, uint code)\n                     tagtype = tidyLocalizedString( TIDYCUSTOMINLINE_STRING );\n                     break;\n                 case TidyCustomPre:\n+                default:\n                     tagtype = tidyLocalizedString( TIDYCUSTOMPRE_STRING );\n                     break;\n             }\n```\n\nI  hope you get the chance to cut this in, just make sure this does **not** cause any other warning... it works fine for me in the above 2 MinGW builds... thanks...\n\nYes, whether we publish the MinGW binaries is an open question, but adding them would ensure we do always maintain MinGW comptibilitiy going forward... I note my MinGW install is a few years old, and my mingw-w64 last year, so maybe I need to do some updates at some time, if the respective projects have continued to move forward...\n. @balthisar just checked out `new_picklists` branch to test, in Windows 10, MSVC14, **but** the build **FAILS**???\n\n```\n  config.c\nF:\\Projects\\tidy-html5\\src\\config.c(596): error C2065: 'ParseAutoBool': undeclared identifier [F:\\Projects\\tidy-html5\\build\\temp-553\\tidy-static.vcxproj]\nF:\\Projects\\tidy-html5\\src\\config.c(596): warning C4047: '==': 'ParseProperty (__cdecl *const )' differs in levels of indirection from 'int' [F:\\Projects\\tidy-html5\\build\\temp-553\\tidy-static.vcxproj]\n````\n\nHave I missed something?\n\nHave not had a chance to look into yet, but maybe you will see the reason immediately... thanks...\n. @balthisar starting to look into it...\n\nOne thing I remember you saying is that I think you **only** build the `Release` version... In the `Release` version an `assert` compiles to nothing...\n\nTry -\n```\nbuild\\Win64> cmake --build . --config Debug\n```\n\nOnly then will an `assert` exist...  and this error is in such an `assert`... thanks...\n\nPS: Looks like you found it... but for the future I always build **both** Debug **and** Release in Windows... Do you use the above `cmake` to do the building... I do not think _DEBUG is the same thing...\n\n. Yes, it now builds, and will get on with testing...\n\nIn fact the controlling MSVC macro is `/D NDEBUG`... if this is defined then there is **no** `assert`!\n\nAnd I think this is the **same** in gcc, so would assume same in `Clang`... it is defined that way in some standard header...\n\nIn fact, never sure why tidy uses `assert` at all, since only if there is **no** `-DNDEBUG`, does `assert` do anything, thus is really only for the **Debug** build... \n\nSo we are sort of asking **all** developers to first build and test in the **debug** version... But that is perhaps another topic...\n\n. @balthisar have now compiled and tested this branch, in Windows 10, and see no immediate problem in this merge...\n\nA **small** niggle! \n\nIt would be **really** appreciated if you would consider opening a `Feature Request` prior to **refactoring**, and presenting a `fait accompli` PR, saying one can read the commit notes...\n\nThis would give us a chance to present objections, ideas, feedback, ... or nothing... **before** all the effort is expended... not that there would be any objection to such a `change` and `cleanup`, but would also allow for suggested improvements, enhancements, etc... that could be considered...\n\nJust a quiet **suggestion**... it is already noted in the `CONTRIBUTING.md`, which you wrote - \"it is best to create an issue before putting the effort into a pull request\". Why **not** follow this?\n\nAnyway, for what, at this time, after such a brief, pushed, review, looks like a **good** move... thanks...\n. LGTM... see comments on #365...\n. @AnrDaemon thank you for your issue...\n\n> I just stumbled upon this highly undesirable and unexpected behavior.\n\nNot sure I agree with your assessment here!\n\nIf **you** go to the trouble of setting the unique ENV variable `$HTML_TIDY`, do you not want to know that this **FAILED**? I would... You will note it does **not** effect what tidy later does...\n\nTidy, like several other projects I work with, tests and reads `$HTML_TIDY`, or their equivalent ENV `rc` type file, if they have one and if given, **before** the command line is read, so that any command line options, and/or `-config <file>` option, can override it...\n\nSo to me this seems **normal**... very reasonable...\n\nJust remove the ENV `$HTML_TIDY` if you do **not** want this noise... or do just `$ touch $HTML_TIDY`... or something...\n\nMy first assessment here is `Won't fix`, but would listen to reasonable feedback otherwise... thanks...\n. @AnrDaemon, @balthisar well tidy's order of reading configuration, in the [code](https://github.com/htacg/tidy-html5/blob/next/console/tidy.c#L1938) is -\n\n 1. TIDY_CONFIG_FILE, if defined during the compile.\n 2. ENV HTML_TIDY, if exists, **OR**\n 3. TIDY_USER_CONFIG_FILE, if defined during the compile.\n 4. Command line options, including `-config <file>`\n\nSee the file [tidyplatform.h](https://github.com/htacg/tidy-html5/blob/next/include/tidyplatform.h#L20) for sample suggestions. So 1 and 3 can be defined in there by uncommenting appropriately, **or** by adding such a definition to **cmake**, like `-DTIDY_CONFIG_FILE=/path/to/file`.\n\nIn each case 1..3, if the reading of the specified file fails, then a `TC_MAIN_ERROR_LOAD_CONFIG` message will be sent directly to `errout`. Note this failure is **not** added to `warning` or `error` count... it is informational only...\n\nSo **for sure** a `-config <file>`, on the command line, or any other options like `--show-info no` **will** override anything read from 1, 2 or 3, if specificied/defined... and again tidy will report `Config: Can't open \"notexist.txt\"`, but this will **not** be added to the `warning` or `error` count shown...\n\nAlthough I do remember some projects that use ENV variables, like say OSG library, to control various things, not exactly a `config` type file, but projects like FlightGear.org/fgfs read a `$HOME/.fgfs.rc` or the like, before they parse the command line... and in the number of `.dirs` in `$HOME` I am sure there are some others...\n\nLikewise for Tidy, command line options, and indeed a `-config <file>`, overrides anything read from 1..3, if given, if they exist, and contain valid options... \n\nI regularly use the ENV `HTML_TIDY=def.conf`, containing some of my `favorite` options, knowing that I can override these later on the command line, or in another `-config <file>`...\n\nSo what exactly is the issue? Maybe I do **not** understand something? Is it just the `errout` warnings, even if later options and/or a `-config <file>` given? Thanks...\n. @AnrDaemon thanks for the further explanation... \n\n> The exact issue is that tidy reads ALL config files.\n\nWell, to be fair, Tidy only reads **config** files it is **given** ;=)) Not exactly **ALL**...\n\nAs enumerated, 1. and 3. need to be compiled in! If you want you can build a custom version of tidy to always get the **config** from a specific file you name, and tidy will warn you if it can not be found... \n\nLikewise for 2. ENV `HTML_TIDY`. And note it will override 3.! Tidy can **not** read it if the environment variable does **not** exist... just remove it... or create a blank file...\n\nTidy is a command line app, so to simplify life, and not having to always type in a **big** command line, it provides a **few** ways config information can be given...\n\nFirst tidy has a **default** for every config item. To **see** the default, use `-show-config`. It will output a complete list, adding type and current value. This is helpful, in that you **only** need to specify those that you want to **change**...\n\nAnd the option `-xml-confg` will output a fuller XML version, including default, description, etc... if fact this output is used to generate the `man tidy` pages...\n\n> ... all honor config file given in commandline options\n\nSo does tidy! It 100% honors options given on the command line, and that includes a `-config <file>` option... What suggests otherwise?\n\n> and don't try to steer away from it to other places.\n\nNow maybe our documentation does **not** fully, clearly spell out, that the configs given are read in the order 1,2,3,4, with the command line overriding **all** others, if any given... but the `man tidy` does seem quite clear -\n\n```\nENVIRONMENT\n       HTML_TIDY\n              Name of the default configuration file.  This should be an absolute path, since you will\n              probably invoke tidy from different directories.  The value of HTML_TIDY will be parsed after\n              the compiled-in default (defined with -DTIDY_CONFIG_FILE), but before any of the files\n              specified using -config.\n```\n\nI am sure we would accept some improvement in the wording... maybe it should make it clear that tidy will warn if it fails to find such a declared file... but it can be a blank file... and maybe **add** after `using -config`, \"which will **override** any and all previous\"... \n\nSince Tidy accepts multiple input files on the command line, as the `SYNOPSIS` indicates, you can have -\n\n```\n$ tidy -config conf1.txt in1.html -config conf2.txt in2.html etc etc...\n```\n\nSo while I read, this seems **unexpected**, for you, it is entirely **expected** by me... \n\nIn Windows, where I work mostly, we do not have a `tradition` for this `rc` type file, but it is common to have the ability to use what is sometimes called a `response` file... and tidy's config file system is exactly like that... **very useful**...\n\nSo my question remains, what exactly do you see as a problem here?\n\nIf you are sort of suggesting, if the user sets a **bad** ENV `HTML_TIDY=missing.txt`, tidy should hold off on a warning until it has fully checked the command line, or something... that seems very cumbersome... what about if there is no specific `-config file` given, the user chooses all the `--option yes/no` form, or even **accepts** all the defaults and has no options on the command line...\n\nFurther we could have a special message for `HTML_TIDY` like `Config: Can't open 'missing.txt', given in HTML_TIDY, but do not be concerned! Tidy has an internal default configuration that will be used, **and** you can specify a valid **-config file** later on the command line`. Would this get over the idea the user is being **steered** away? or something...\n\nOne idea I have had for a long time, and that is tidy should abort in this case. My general idea is that if a config item **fails** in some way, tidy should not continue with possibly an unintended configuration... but have always held off on this `Feature Request`...\n\nMaybe we should add a compile option, to compile out support for `HTML_TIDY`, if desired... but as far as I can see it has been part of tidy for the last 17 years, including the `Can't open <file>` message...\n\nSo, again, just trying very hard to understand what do you **expect** ;=)) thanks...\n\nAt this stage, other than the above message enhancements, always an ongoing WIP, I see no problem in tidy code, and do **not** think it should be changed...\n. @AnrDaemon, not sure why I bother since you suggest I **don't want to understand**... but stupid me!, I really do **try**... with every, and **all** issues raised... thanks @balthisar for your comments...\n\nFirst Tidy is **not** a `sever`, running **all** the time, and it has absolutely **no** default configuration file, like `/etc/nginx/nginx.conf`, unless you choose to compile in one, or define one in ENV `HTML_TIDY`... ie by the methods 1..3 enumerated... \n\nSimply **NO DEFAULT** configuration file...\n\nSecond, if a configuration file **is** defined by one of the methods 1..3 enumerated, then that `config` is fully overridden by the command line... and I **still** think tidy should **complain** that such a **defined by user** file is **not** found... \n\nYou, the **user** defined it - there is **no** default - so you deserve to know what you deliberately **set**, suggested, defined, is **not** found... or even has problems...\n\nYes, you can use the idea **merged**, but there is **no** `exposing both servers`! Not a `server`, and later configs overrule any earlier...\n\nWhat is given on the command line finally **rules the day**... and will be applied to the next input file on the command line... and as stated a second `-config in2.conf in2.html` can overrule that... and so on...\n\nReally, I very gently ask again, **where is the problem in this?**... thanks...\n. @deathbaba and @zmwangx I had to read up on the meaning of `LGTM` ;=)) assume `Looks Good To Me`...\n\nThanks for the support...\n\n@balthisar as stated elsewhere, I think!, I also agree with this small change... thanks...\n. @balthisar well actually 4:25 am... not done too frequently these days... I too off to bed... ;=))\n\n. @balthisar to use my newly learned acronym, LGTM ;=))\n. @bruceburge thanks for the issue...\n\nI am not sure I would characterize it as **shady** ;=))\n\nBut, yes, unless configured otherwise, tidy, by default, will create such a meta tidy mark...\n\nThere are various ways you can configure tidy to **not** do this -\n\n 1. On command line - add option `--tidy-mark no`.\n 2. Put the option in a file, say `tidy.conf`, as `tidy-mark: no`, and add `-config tidy.conf` on the command line.\n 3. And once you have this option in a file, you can tell tidy via the environment - `set HTML_TIDY=D:\\path\\to\\tidy.conf`\n\nAnd I am also not sure **advert** applies to free, open source software, and it is only put in the `<head>` of the document, not normally seen unless you inspect the html in an editor...\n\nAlso it is **good** to tell the age of your version of tidy. A commit of c63cc39 is from about 5 years ago, circa 2012. We have subsequently dropped the `(experimental)` moniker, and have a web site http://www.html-tidy.org/\n\nYou can get much later version from http://binaries.html-tidy.org/...\n\nAnd if you are able to compile tidy from source, then the [latest](https://github.com/htacg/tidy-html5) would `inject` -\n\n```\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.5.24\">\n```\n\nNotice we have switched to using a version number, rather than the git commit hash...\n\nHope this helps... thanks...\n. @bruceburge well I use Notepad++ (NPP) **all** the time, just not the Tidy plug-in that often. But my NPP v5.9 (UNICODE) does support using config files with Tidy, so could certainly add `tidy-mark: no` to those...\n\nAnd searching more now, it seems I **forked** the `bruderstein` [NppTidy2](https://github.com/bruderstein/NppTidy2) repo some time back, and built myself a [Release](https://github.com/geoffmcl/NppTidy2/releases) plug-in, using Tidy 5.3.1... circa June 2016... \n\nI should try to find time to **update** that... I just tried a quick re-build, but it **failed**... but do not have time now to look into it... any help **much** appreciated... thanks...\n\nOn the matter of the meta `generator`, I probably agree it is debatable if **fixing** and **pretty printing** constitutes actually **generating**, but now you should have a way to tell tidy to omit adding it, it seems a mute point...\n\nAnd I just modified my NPP `tidy1.cfg`, actually `C:\\Users\\<user>\\AppData\\Roaming\\Notepad++\\plugins\\config\\tidy1.cfg`, to include `tidy-mark: no` and it worked... give it a try... thanks...\n. @bruceburge ok, I found the little problem in compiling my [NppTidy2](https://github.com/geoffmcl/NppTidy2) fork, and have managed to update my own NPP installation to use a Tidy2.dll, version 5.5.24, but will continue to **hack** at it as time permits...\n\nNow my NPP `Plugins ->  Tidy2 -> About` reports `Uses 5.5.24...`, but my attempts to make this dialog string from a `version.txt` file failed - see [Issue 2](https://github.com/geoffmcl/NppTidy2/issues/2) ... as stated there will work on this as time permits, and try to publish a **new** `NppTidy2` DLL soonest...\n\nWhile this is **not** specifically `HTML Tidy` related, it is a very **good** use of the Tidy library... in this case it uses the STATIC library to build the `Tidy2.DLL` plugin... See also http://www.html-tidy.org/ -> TIDY+\n\nWe move slowly forward...\n. @bruceburge as you may have noted I have [released](https://github.com/geoffmcl/NppTidy2/releases) a `5.5.24` version of **Tidy2.dll**, in the `Tidy2-5.5.24.zip` there, **and** have tested that I **can** add the option `tidy-mark: no` to config files... no problem...\n\nThen Tidy will **not inject** a meta generator tag...\n\nHave you managed to update your NPP installation?\n\nCan we close this? Thanks...\n. @bruceburge thanks for your reply, and additional information...\n\nWow, it turns out my NPP is way out-of-date! Shows Build time : Mar 31 2011, v5.9 (UNICODE) - I should probably do something about that ;=))\n\nI know **nothing** about where the `Plugin Manager` gets the **plugins** from, or where it checks for updates... \n\nI just forked Dave Brotherstone [NppTidy2](https://github.com/bruderstein/NppTidy2), to my [NppTidy2](https://github.com/geoffmcl/NppTidy2), and proceeded to build it...\n\nSince I am a maintainer of [HTML Tidy](https://github.com/htacg/tidy-html5) I used a later version of libTidy, namely 5.5.24, circa 2017.05.13...\n\nAnd **manually** installed the results into NPP, and took the liberty of adding my name to the NPP `Plugins -> Tidy2 -> About -`\n![tidy2-about](https://cloud.githubusercontent.com/assets/1333435/26632573/dad74d70-4610-11e7-8abb-d9bd8c967109.jpg)\n\nConcerning the Tidy **config** options, yes the config file does support `// comment` lines, and yes one idea would be to add **all** to one of the config files, but...\n\nWith my Tidy2 [release](https://github.com/geoffmcl/NppTidy2/releases), the zip includes a `quickref.html` which can be copied to NPP install, and viewed with `Plugins -> Tidy2 -> Show Config Help`. This seems a better way to show all the config option, with a description about each...\n\nAnd of course, we at HTML Tidy publish this through http://api.html-tidy.org/, where you can choose various `quickref` versions...\n\nThus I do not think it is necessarily a good idea to list them as comments in a config file...\n\nSo, like I say, do **not** really know about the NPP `Plugin Manager`, but you could use my above install **manually** if my release is compatible... it is 32-bit, but it is also a **UNICODE** version... so not sure...\n\nAnd yes, will close this... thanks...\n. @sballeste  LGTM, and @balthisar assume it is just that you have not yet found the time to do the merge... thanks...\n. @chomse thanks for the issue...\n\nThat is certainly a **shame** the link of Tidy DLLs with `Freepascal` **failed**... and assume it also fails with the Tidy `static` libraries... \n\nI do **not** know or use Freepascal... so am paddling in deep water here ;=))\n\nAs you can see in the following Tidy code, from [tidyplatform.h](https://github.com/htacg/tidy-html5/blob/next/include/tidyplatform.h#L513) WIN54 uses `__fastcall`, and 32-bits `__stdcall` -\n\n```\n#ifndef TIDY_CALL\n#ifdef _WIN64\n#  define TIDY_CALL __fastcall\n#else\n#  define TIDY_CALL __stdcall\n#endif\n#endif\n```\n\nAnd just above that block the `export` convention is also defined... DLL vs STATIC...\n\nBut as can also be seen, it allows `TIDY_CALL` to be defined externally... so could potentially generate a DLL/Static library with any valid calling convention... \n\nThere is a caveat I read, that some calling conventions do **not** support variadic arguments, say like in  `printf()`... need to check if we have any APIs like that... a quick search yielded none...\n\nSo the question becomes, **What calling convention does FreePascal use?**\n\nSo again, quickly reading around, I read that `__pascal` is now obsolete, but seems replaced with `__stdcall`... but **not** sure...\n\nYou need to do some **deep** research, and come back with a specific request, and maybe we can generate, and publish suitable DLL/Static libraries... or indeed help you build one from Tidy source... thanks...\n. @chomse thanks for the further comment... I can read what you **want**, and it becomes a question of **how** to achieve that...\n\nAs @balthisar asked, the first question is which binaries are you using? pre-built **or** your build from source?\n\nThen for sure there is a **big** difference between 32-bit (x86) and 64-bit (x64/AMD64/x86_64)! chaulk and cheese... \n\nx64 really simplified things, passing some variable in registers, the so called FASTCALL... The caller cleans up the stack, if used, so no addition of `@NN` to the name... for sure this is the best way forward...\n\nCan the same be done for x86 (32-bits)? Not sure... I experimented a bit with setting TIDY_CALL, but this seemed to make things worse... that is could **not** get rid of the leading `_`, or the trailing `@`, like `_tidyCreate@0`, or your example `_tidyAttrDiscard@12`! \n\nBTW, this is **not** name mangling as I understand it... and `tidy.h` does use `extern \"C\"`...\n\nWill keep trying if I get another idea... there **must** be a way...\n. @chomse ok, had not got around to trying the obvious ;=))\n\nAdded to CMakeLists.txt\n\n```\nif(WIN32 AND MSVC)\n    set(WARNING_FLAGS \"${WARNING_FLAGS} -DTIDY_CALL=__cdecl\")\n```\n\nThis gave me, in the Tidy.dll -\n\n```\n  Entry Pt  Ordn  Name\n  00021A90    29  tidyAttrDiscard\n  00021B60    54  tidyCreate\n```\n\nIn the static tidys.lib, the underscore remains...\n\n```\n  00092BC0  _tidyAttrDiscard\n```\n\nIs this it?\n. @chomse well, my build is using the latest 5.5.24 source, so I can **not** add that to the `release` [binaries](http://binaries.html-tidy.org/) at this time...\n\nThis also raises another issue, touched on in #515, and that is RUNTIME DLL dependency... now you have **not** raised this yet, so maybe you have already installed the MSVC14 redistributables?\n\nSo I have uploaded two zips, to my `tmp` site location -\n\n  - http://geoffair.org/tmp/tidy-5.5.24-win32-vc14-md-cdecl.zip - 728,629 - SHA1: EEA1A307ABA28386D5261A35B955ACB84ABC8B57\n  - http://geoffair.org/tmp/tidy-5.5.24-win32-vc14-mt-cdecl.zip - 903,702 - SHA1: 9DD9D820DB9379FA489C73A024271C40E96BFD9D\n\nThe first is built using the default `/MD` - dynamic runtimes, and the second, using the cmake option `-DUSE_STATIC_RUNTIME:BOOL=ON`, uses `/MT` - static runtimes, at a cost of a few hundred K in size... and both using `-DTIDY_CALL=__cdecl`\n\nBut as @balthisar points out, you could simply get into building your own custom Tidy.DLL, and the runtimes would already be handled... \n\nAnd further as he points out, you could also build the Tidy DLL using MinGW... which I quickly tried, with the same `-DTIDY_CALL=__cdecl` set for the mingw-gcc compiler, and it built a `libtidy.dll`, again with clean exports like `tidyWarningCount`, so this too looks a viable possibility for Win32... \n\nAs with the MSVC static tidy library, all exports in `libtidys.a` have a leading `_`... so this seems **normal** for a static library... and feel you **should** be able to also link with such a **static** library... Did not have time to try MinGW.x64...\n\nGood luck. Let us know how things turn out... thanks...\n. @chomse glad one **or** the other Tidy.dll (md **or** mt) worked out for you - you did not say which - and the closing of this...\n\nAnd just to document it for next time, if there is one, below is the patch I used in CMakeLists.txt -\n\n```diff\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\nindex d3a7f0f..3e0891b 100644\n--- a/CMakeLists.txt\n+++ b/CMakeLists.txt\n@@ -81,6 +81,7 @@ if (CMAKE_CXX_COMPILER_ID STREQUAL \"Clang\")\n endif() \n\n if(WIN32 AND MSVC)\n+    set(WARNING_FLAGS \"${WARNING_FLAGS} -DTIDY_CALL=__cdecl\")\n     # turn off various warnings\n     set(WARNING_FLAGS \"${WARNING_FLAGS} /wd4996\")\n     # C4090: 'function' : different 'const' qualifiers\n@@ -99,6 +100,7 @@ if(WIN32 AND MSVC)\n     set( CMAKE_DEBUG_POSTFIX \"d\" ) # little effect in unix\n else()\n     # add any gcc flags\n+    set(WARNING_FLAGS \"${WARNING_FLAGS} -DTIDY_CALL=__cdecl\")\n endif()\n\n set( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${WARNING_FLAGS} ${MSVC_FLAGS} -D_REENTRANT\" )\n```\n\nThe first `set` was for WIN32 MSVC, and the second was for `MinGw` gcc 32-bit... since they are only for a special **custom** dll builds, of course the changes have **not** been pushed to `next`... but if this comes up again, maybe an option, like say `TIDY_CALL_CDECL`, or something, could be added to make it easy and flexible...\n\nAnd I really wondered what `output` we were reading... but no problem...\n\nNow you have a GitHub account, it is very **easy** to make your work into a GitHub repository... that is **share** your `FreePascal` code... it's a long, **LONG** time since I looked at any `Pascal` coding... anyway, just an idea...\n\nThanks for your interest in HTML Tidy...\n. @balthisar thanks for this issue... sorry for the small delay on this... \n\nI must have read, and re-read this message umpteen times, or more!, but still a little unclear on exactly what you are proposing... sorry...\n\nDoes it come down to a `Feature Request` to add an **new** enumeration option `show-other-messages`?\n\nBut some other things you touched on -\n\n**_buffer_ all of the document message output**\n\nAs you point out, an app using `libtidy` does, or can, do this, and could then **sort** them, if it felt necessary...\n\nBut should **our** console sample use of `libtidy` do this? I think not! Why are we, as `libtidy` maintainers making our console app even more complicated? Just to show it can be done, or what?\n\nAs you do understand, the current order is the result of the phases tidy goes through... As you get to know tidy this in itself is a clear indication of which phase the warning, error, came from... It works great for debug mode, where I even output **more** messages...\n\nAnd take an extreem example of a **crash**, a segfault, now we would see nothing... the user would not be able to give us some indication of what output was already given before the event... and neither would I see them in debug mode...\n\nSo, **no** I do **not** think the messages should be buffered, or sorted... by libtidy **or** console tidy... and as you agree a 3rdParty app using libTidy can already do this... Let them offer a `TidyPro` with **all** the bells and whistles possible...\n\nWhere is the gain for HTML Tidy? More maintenance...\n\nAnd the new suggested `show-other-messages` enum could be in addition to the option already in existence, most of which have been there since the beginning, for 17 years plus, except `show-info`, which I added much, much later, mainly as a debug aid... As I run tidy thousands of times in testing, debugging, I got sick of that final blah-blah-blah, and added this option... it does not even suppress all that I want...\n\nAs an additive option, the users have the choice of what to use... we should not be the dictator, or arbiter, of what is best in this regards... no matter how more logical you think this would be...\n\nAnd so far none of this really touches what is started in #412... and we have had other requests to **improve** the message content, especially when libTidy has applied a **fix**. And I agree some messages should perhaps be much more explicit about what libtidy is doing...\n\nBut that does not seem to suggest we should `restructure` the message system... maybe it does mean improving message wording... but on the other hand, after a few days working with tidy, it should become very clear that just about every warning/error means tidy did something... touched your html... fixed it...\n\nAnd I, like others, get confused by some message, like say `<p>Para 1<p>` will output `Warning: trimming empty <p>`. Huh? Takes some reading to understand the error fixed... I am sure everyone could point out **many** of these... but none of these are **solved** by, for some reason, re-enumerating the message types...\n\nThen there are the so called `silent` changes... these need to be singularly identified, and message constructed, and maybe we could use `Info:` for these... but I would need to see and think about them on an individual case by case... and I certainly do **not** see the need to establish yet another message type...\n\nYou do make a good point that maybe `show-error` should perhaps cover **all** output, **not** just errors, but again that's probably a separate issue, and does not mean `revamping` the message system itself... \n\nDid I miss something in your comment? Please bring it up again if I did...\n\nBut this at least gives you some of my perspective on this -\n\n 1. How can we simplify console tidy?\n 2. You, or others can fork it, and build a `TidyPro`\n 3. What specific messages do you want to change?\n 4. What messages do you want to add, or remove?\n 5. Do you want to add a new option `show-other-messages`?\n 6. Are you suggesting the `show-error` should apply to all output?\n 7. What messages do you want to change the type on?\n 8. Other items?\n\nIn fact maybe each of these could be a **separate** issue... discussed, decided... certainly **not** all lumped together under the catch-all title **Message Handling \"cleanup\"**...\n\nAs stated, still quite confused... what **cleanup** do you want to do? Thanks...\n. @balthisar maybe your `messages_experiment` branch is a WIP, and that can be understood...\n\nBut a rough review of the 130K diff file, shows some **alarming** things... If this is truely an **experiment**, and will be **deleted**, then skip this quick review... no problem... sorry for the noise...\n\n```\nRESEARCH:\nNew Messages:\n+    FN(ENCODING_IO_CONFLICT)          \\\n+    FN(UNESCAPED_ELEMENT)             \\\n+    FN(COERCE_TO_ENDTAG_WARN)         \\\n-    FN(UNEXPECTED_ENDTAG)             \\\n-    FN(UNEXPECTED_ENDTAG_XML)         \\\n+    FN(UNEXPECTED_ENDTAG)\nMaybe all good, but could we **not** discuss these, one by one?\nNew enumeration:\nEssentially replaced TidyBadFile with TidyBadDocument, but then lots of spaces changes...\nand\n-    { TidyBadFile,            0,   \"File: \"          },\n+    { TidyBadDocument,        0,   \"Document: \"      },\nCould this not be discussed?\nName Change:\n-            TY_(Report)(doc, NULL, node, PROPRIETARY_ELEMENT);\n+            TY_(ReportError)(doc, NULL, node, PROPRIETARY_ELEMENT);\nand\n-        TY_(ReportFileError)( doc, filnam, FILE_CANT_OPEN );\n+        TY_(FileError)( doc, filnam, TidyError, FILE_CANT_OPEN );\nwhich might be all ok, but WHY? Again, discussion...\nChanges in FR language file:\nMaybe correct, but should be a separate issue...\nFunction Deleted:\n-static ctmbstr HTMLVersion( TidyDocImpl* doc )\nAgain maybe correct, but should be a separate issue...\nPossible change in severity:\n-                            TY_(Report)( doc, NULL, lexer->token, UNKNOWN_ELEMENT_LOOKS_CUSTOM );\n+                            TY_(ReportFatal)( doc, NULL, lexer->token, UNKNOWN_ELEMENT_LOOKS_CUSTOM );\nand\n-                TY_(Report)(doc, element, node, NESTED_EMPHASIS);\n+                TY_(ReportWarning)(doc, element, node, NESTED_EMPHASIS);\nSeveral, many, of these...\nAs always, maybe **right**, **correct**, **perfect**, but should be discussed, reviewed, first...\nMessage.c changes:\nIt is almost **impossible** to review what has been done here... Again **maybe** everything is **great**, but how can a reviewer tell? Especially when mixed with all the rest...\n```\n\nNow, as expressed, maybe **everything** read is **good for tidy**, but there is no way such a melange of changes can be accepted without some discussion, justification, item by item... sorry...\n\nAs my first post indicated, **split this up**... show the new messages, and the reason, discuss the changes in the severity level of certain messages, if this is what is intended, and so on, and on...\n\nWow, we love the enthusiasm, and the effort put into this, but this is **granddaddy** tidy we are talking about... please take it easy... step by step... incremental...\n\nPlease respect the collaborative process... I could also open an all inclusive issue `HTML Tidy \"fixes\"`, and put everything I can think of into that... and they might all be **good**... but would **expect** such a broad, inclusive issue/PR to be rejected... without an item by item discussion...\n\nMaybe just a voice in the wilderness, previously accused of `carmudgeony`... perhaps I am, but I **care** for `tidy` to the best of my ability... **please help**... thanks...\n. @balthisar I cycle back to this... given that in **every** proposed change there **must** be an element of **truth**, and with that, maybe **benefit**... so I seek to find that... embrace that... **accept** that...\n\nOk, the biggest change here is to **rename** `Report` to `ReportError`... seems innocuous, **except**, in some cases, it is changed to `ReportFatal`, or `ReportWarning`... **Oops**...\n\nSo you want to move the `classification` of the `Report` type into many lower level parts of the code! How can that be **beneficial**? Each part of the code should just `Report`... as it does now...\n\nTo me, everywhere, and anywhere, tidy wants to `Report`, bad html, a problem fixed, a minor change, a big bad problem, etc, etc, ... it should call `Report`, and then we can 100% control, in the **single** service, `Report`, how that is handled... What it sets...\n\nDoes this **not** make sense? Seem very logical? Or have I got something real **wrong**... please tell me... explain why such a distributed system is better, benefits a libTidy developer, than exactly **one** `Report` service...\n\nExplain why **sprinkle**, throughout tidy library code, such various **categories** of reports, is some how **better**, more **logical**, **easier to understand**, to a developer... I do not see it! And I suppose **oppose** it...\n\nAnd this has nothing to do with the introduction of some **new** `Reports`... They could be welcomed, very necessary, but that should be the subject of a **separate** issue... discussed, decided, agreed...\n\nReally, just seek understanding here... **not** opposition... thanks\n. @balthisar it was only recently that I realized I had done the diff **backwards** - new-to-old, instead of old-to-new - but you can see I clearly **liked** the one-Report-to-rule-them-all function ;=)) and even thought for a moment that was what we had!\n\nFor issue #456 I was just looking at how can I **add** a new message like `Info: Modified meta charset from '%s' to '%s'.`, or something, but am **struggling**. It seems we have no `handler` to pass two such string, although we do have handlers that sort of do that...\n\nWe have say the `BAD_ATTRIBUTE_VALUE`, which might work, but would need to test it to see what I get... but would still be faced with the fact that this is a `warning`, and I want this only as `info`...\n\nSo I agree the problem with a single `Report` function is to be able `to pass arbitrary, extra information for format strings.`!\n\nBut again I would really suggest you **separate** what you want to do into different, completely separate, issues, like - just taken from the **big** diff -\n\n 1. Retire strings that are not used. Which? Good idea...\n 2. Deal with the `TidyBadFile = TidyBadDocument` separately\n 3. Change in `FILE_CANT_OPEN_CONFIG`, but can't sort out what exactly...\n 4. Changes in `status` of some messages... maybe... which?\n 5. Maybe other small things I missed...\n\nThese have **nothing** to do with this idea of `single-report-function`. If presented separately, each can be easily discussed, reviewed, **agreed**, and merged... **all done**... no wall of words...\n\nI do understand the `single-report-function` change would be massive... many files... and so far what I read **looked very good**... this is **not** about the size of the change per se... I just whine a little when there seems **unrelated** changes, that could, should, each be dealt with **separately**...\n\nLook forward to further `experiments`... thanks...\n. @petdance I am not too familiar with compiling using `Makefile.PL`, but gave it a go ;=))\n\nModified `Makefile.PL` to suit my Windows install of static `tidys.lib`, and made some small changes in `Tidy.xs` - header names, and using `tidyLibraryVersion()`, replacing `tidyVersion()`... full diff -\n\n```diff\ndiff --git a/Makefile.PL b/Makefile.PL\nindex 1bca2ef..a2cb460 100644\n--- a/Makefile.PL\n+++ b/Makefile.PL\n@@ -9,8 +9,8 @@ use ExtUtils::MakeMaker;\n use ExtUtils::Liblist;\n use Config;\n\n-my $libs = '-ltidyp';\n-my $inc = \"-I. -I/usr/include/tidyp -I/usr/local/include/tidyp -I$Config{usrinc}/tidyp\";\n+my $libs = '-ltidys';\n+my $inc = \"-I. -IF:/Projects/software.x64/include\";\n\n eval { require Alien::Tidyp; };\n\n@@ -20,12 +20,12 @@ if ( !$@ ) {\n     $inc = Alien::Tidyp->config('INC');\n }\n else {\n-    print \"Alien::Tidyp not found. Looking for for tidyp on your system.\\n\";\n-    my @vars = ExtUtils::Liblist->ext( '-L/usr/lib -L/usr/local/lib -ltidyp', 0, 1 );\n+    print \"Alien::Tidyp not found. Looking for for tidys on your system.\\n\";\n+    my @vars = ExtUtils::Liblist->ext( '-LF:/Projects/software.x64/lib -ltidys', 0, 1 );\n     $libs = $vars[2];\n\n     if ( !$libs ) {\n-        $libs = '-ltidyp';\n+        $libs = '-ltidys';\n         print <<'EOF';\n\n It seems that you don't have tidyp installed.  HTML::Tidy does no\ndiff --git a/Tidy.xs b/Tidy.xs\nindex 2238b0b..c726b48 100644\n--- a/Tidy.xs\n+++ b/Tidy.xs\n@@ -2,8 +2,8 @@\n #include \"perl.h\"\n #include \"XSUB.h\"\n\n-#include <tidyp.h>\n-#include <buffio.h>\n+#include <tidy.h>\n+#include <tidybuffio.h>\n #include <stdio.h>\n #include <errno.h>\n\n@@ -196,7 +196,7 @@ _tidyp_version()\n     PREINIT:\n         const char* version;\n     CODE:\n-        version = tidyVersion();\n+        version = tidyLibraryVersion();\n         RETVAL = newSVpv(version,0); /* will be automatically \"mortalized\" */\n     OUTPUT:\n         RETVAL\n```\n\nThen in a MSVC14 x64 command prompt, ran `perl -f Makefile.PL`, and to my **surprise** it cleanly generated a `Makefile`, **and** `Tidy.c`... Woweee...\n\nAnd when I ran `nmake` it nearly got there... a few warnings on the `tidy.c` compile, but no big problems, but really **bombed** on the link... some **49** unresolved externals... a few are given below -\n\n```\ntidys.lib(alloc.obj) : error LNK2001: unresolved external symbol __imp___acrt_iob_func\ntidys.lib(tidylib.obj) : error LNK2001: unresolved external symbol __imp_fclose\nmsvcrt.lib(utility_desktop.obj) : error LNK2001: unresolved external symbol memset\noldnames.lib(strdup.obi) : error LNK2001: unresolved external symbol __imp_strdup\nmsvcrt.lib(dll_dllmain.obj) : error LNK2001: unresolved external symbol __C_specific_handler\nmsvcrt.lib(utility.obj) : error LNK2001: unresolved external symbol __C_specific_handler\nmsvcrt.lib(utility.obj) : error LNK2001: unresolved external symbol _seh_filter_dll\n```\n\nYou will note they are **not** all related the `tidys.lib`... very strange... searched around and got some ideas...\n\nThis **looks** like the link is missing some specfic runtime library, but the `Makefile` already includes a considerable list of `LDLOADLIBS`, so still trying to sort that out... what exactly is **missing**? And then how to add more libs to the list... something to do with `ExtUtils::Liblist`...\n\nAnother idea is to compile `tidys.lib`, using the static runtimes, ie `/MT` instead of `/MD` - just add `-DUSE_STATIC_RUNTIME:BOOL=YES` to the cmake command... this might help, as it really reduces runtime dependencies...\n\nAlso could try the DLL version of Tidy library, but that would mean somehow also adding it to the Perl install... and dealing with the name clash, since this is also a build of a `tidy.dll`...\n\nAlternatively, could try a MinGW.x64 build of `tidys.lib` - namely `libtidys.a`... that might be better...\n\nAnyway, not much time left tonight to play, but have pushed my changes to my [HTML::Tidy](https://github.com/geoffmcl/html-tidy) fork, in the 'test1' branch, if you want to look at them, or try...\n\nAlso now anxious to try a linux build... but that would be tomorrow, or soonest...\n. On Windows, today, did try -\n\n  1. MinGw-w64 build, but it produced the **same** unresolved as MSVC14, and had to copy `libtidys.a` to `tidys.lib` for it to be found...\n  2. Tried a `/MT` build, and while this **reduced** the missing externals, was now **also** missing say `tidyLibraryVersion`, and all the other tidy APIs used...\n  3. Even tried a `TIDY_CALL=__cdecl`, like for `pascal`, but still missing the tidy API calls, as well as some others... like there only a difference of the leading `_`... \n\nSome more options, combinations to **try**... still work to do here... WIP in Windows...\n\nOk, seemed to do better in **linux** (Ubuntu 14.04 x64), maybe? - with perl v5.18.2...\n\nFirst some, fixes -\n\n```diff\ndiff --git a/Makefile.PL b/Makefile.PL\nindex 1bca2ef..9a1fb93 100644\n--- a/Makefile.PL\n+++ b/Makefile.PL\n@@ -9,8 +9,8 @@ use ExtUtils::MakeMaker;\n use ExtUtils::Liblist;\n use Config;\n\n-my $libs = '-ltidyp';\n-my $inc = \"-I. -I/usr/include/tidyp -I/usr/local/include/tidyp -I$Config{usrinc}/tidyp\";\n+my $libs = '-ltidys';\n+my $inc = \"-I. -I/usr/include -I$Config{usrinc}/tidy\";\n\n eval { require Alien::Tidyp; };\n\n@@ -20,15 +20,15 @@ if ( !$@ ) {\n     $inc = Alien::Tidyp->config('INC');\n }\n else {\n-    print \"Alien::Tidyp not found. Looking for for tidyp on your system.\\n\";\n-    my @vars = ExtUtils::Liblist->ext( '-L/usr/lib -L/usr/local/lib -ltidyp', 0, 1 );\n+    print \"Alien::Tidyp not found. Looking for for tidys on your system.\\n\";\n+    my @vars = ExtUtils::Liblist->ext( '-L/usr/lib -L/usr/local/lib -ltidys', 0, 1 );\n     $libs = $vars[2];\n\n     if ( !$libs ) {\n-        $libs = '-ltidyp';\n+        $libs = '-ltidys';\n         print <<'EOF';\n\n-It seems that you don't have tidyp installed.  HTML::Tidy does no\n+It seems that you don't have tidys installed.  HTML::Tidy does no\n real work on its own.  It's just a wrapper aound tidyp.\n\n Please read the README.markdown file for details on how to install.\ndiff --git a/Tidy.xs b/Tidy.xs\nindex 2238b0b..1091189 100644\n--- a/Tidy.xs\n+++ b/Tidy.xs\n@@ -2,8 +2,8 @@\n #include \"perl.h\"\n #include \"XSUB.h\"\n\n-#include <tidyp.h>\n-#include <buffio.h>\n+#include <tidy.h>\n+#include <tidybuffio.h>\n #include <stdio.h>\n #include <errno.h>\n\n@@ -196,7 +196,8 @@ _tidyp_version()\n     PREINIT:\n         const char* version;\n     CODE:\n-        version = tidyVersion();\n+        version = tidyLibraryVersion();\n         RETVAL = newSVpv(version,0); /* will be automatically \"mortalized\" */\n     OUTPUT:\n         RETVAL\n+ \n```\n\nThe `perl -f Makefile.PL` seemd to run fine, and it seems `Tidy.c` is not generated at this stage... but in the next stage...\n\nThen ran `make`, and got -\n\n```\nSkip blib/lib/HTML/Tidy/Message.pm (unchanged)\nSkip blib/lib/HTML/Tidy.pm (unchanged)\ncc -c  -I. -I/usr/include -I/usr/include/tidy -D_REENTRANT -D_GNU_SOURCE -DDEBIAN -fstack-protector -fno-strict-aliasing -pipe -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -O2 -g   -DVERSION=\\\"1.56\\\" -DXS_VERSION=\\\"1.56\\\" -fPIC \"-I/usr/lib/perl/5.18/CORE\"   Tidy.c\nRunning Mkbootstrap for HTML::Tidy ()\nchmod 644 Tidy.bs\nrm -f blib/arch/auto/HTML/Tidy/Tidy.so\ncc  -shared -L/usr/local/lib -fstack-protector Tidy.o  -o blib/arch/auto/HTML/Tidy/Tidy.so  \\\n       -L/usr/lib -L/usr/local/lib -ltidys      \\\n\n/usr/bin/ld: /usr/lib/libtidys.a(buffio.c.o): relocation R_X86_64_32S against `prvTidyg_default_allocator' can not be used when making a shared object; recompile with -fPIC\n/usr/lib/libtidys.a: error adding symbols: Bad value\ncollect2: error: ld returned 1 exit status\nmake: *** [blib/arch/auto/HTML/Tidy/Tidy.so] Error 1\n```\n\nOk, seems to want the `libtidys.a` recompiled with `-fPIC`... does **not** seem right for a **static** library, but who am I to argue with `ld` ;=))\n\nWill get around to trying this... as before pushed my changes to my `fork`, **test2** branch... any feed back welcome... thanks...\n\nSo as you asked @balthisar, it does seem HTML Tidy may need some small changes to be able to produce a **compatible** library, that can be used to build a Perl5 `Tidy.dll` build... at least in linux amd Windows...\n\nHaving already done this for his `tidyp`, maybe @petdance will have some ideas, clues, on this... thanks...\n\n. @petdance thanks for the feedback... **very** welcome, as always...\n\n> Note that my goal is to do away with tidyp and Alien::Tidyp.\n\nAgree absolutely! Luckily on my working systems I have **neither** of these installed... and thus did **not** specifically remove their references... but they should eventually be removed...\n\n> ... work with Perl::Critic and ack to deal with first.\n\nAbsolutely understand... we each have our priorities...\n\n* Re: Windows build of `Tidy.dll`\n\nFirst I returned to the `default` static `tidys.lib` build, and noted one single, little, thing...\n\nIn reading the `Makefile` created by `perl -f Makefile.PL`, it adds a link option `-nodefaultlib`! **This is BAD**... very bad... the so called **default** runtime libraries are **very** important...\n\nI searched for ways to convince `ExtUtils::MakeMaker` to **not** do this... but found **none**... but maybe I missed something... need to learn, understand more here...\n\n**But** if I manually modify the `Makefile` to **exclude** this option, then a perl5 `Tidy.dll` is built... **Yowee**... a **success**...\n\nBut **before** installing this now created `Tidy.dll` I run the usual `nmake test`, and get some positive and negative results... still to be analysed fully...\n\n```\nF:\\Projects\\html-tidy-pet-fork>nmake test\n\nMicrosoft (R) Program Maintenance Utility Version 14.00.24210.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n        C:\\Perl64\\bin\\perl.exe \"-MExtUtils::Command::MM\" \"-MTest::Harness\" \"-e\" \"undef *Test::Harness::Switches; test_ha\nrness(0, 'blib\\lib', 'blib\\arch')\" t/*.t\nt/00-load.t .......... # Testing HTML::Tidy 1.56, Perl 5.014002; tidyp 5.5.27\nt/00-load.t .......... ok\nt/cfg-for-parse.t .... ok\nt/clean-crash.t ...... 1/2 Use of uninitialized value $newline in regexp compilation at F:\\Projects\\html-tidy-pet-fork\\b\nlib\\lib/HTML/Tidy.pm line 243, <DATA> line 1.\nUse of uninitialized value $errs in split at F:\\Projects\\html-tidy-pet-fork\\blib\\lib/HTML/Tidy.pm line 243, <DATA> line\n1.\nt/clean-crash.t ...... ok\nt/extra-quote.t ...... 1/4\n#   Failed test 'Should have exactly three messages'\n#   at t/extra-quote.t line 31.\n#          got: '4'\n#     expected: '3'\n\n#   Failed test 'Matching warnings'\n#   at t/extra-quote.t line 35.\n#     Structures begin differing at:\n#          $got->[2] = '- (4:1) Warning: <img> illegal characters found in URI'\n#     $expected->[2] = '- (4:1) Warning: <img> lacks \"alt\" attribute'\n# Looks like you failed 2 tests of 4.\nt/extra-quote.t ...... Dubious, test returned 2 (wstat 512, 0x200)\nFailed 2/4 subtests\nt/ignore-text.t ...... 1/3\n#   Failed test 'Matching warnings'\n#   at t/ignore-text.t line 33.\n#     Structures begin differing at:\n#          $got->[0] = Does not exist\n#     $expected->[0] = 'DATA (24:XX) Warning: unescaped & which should be written as &amp;'\n# Looks like you failed 1 test of 3.\nt/ignore-text.t ...... Dubious, test returned 1 (wstat 256, 0x100)\nFailed 1/3 subtests\nt/ignore.t ........... 1/9\n#   Failed test 'Matching warnings'\n#   at t/ignore.t line 38.\n#     Structures begin differing at:\n#          $got->[2] = Does not exist\n#     $expected->[2] = '- (24:XX) Warning: unescaped & which should be written as &amp;'\n# Looks like you failed 1 test of 9.\nt/ignore.t ........... Dubious, test returned 1 (wstat 256, 0x100)\nFailed 1/9 subtests\nt/levels.t ........... 1/3\n#   Failed test 'Matching messages'\n#   at t/levels.t line 28.\n#     Structures begin differing at:\n#          $got->[3] = Does not exist\n#     $expected->[3] = '- (24:XX) Warning: unescaped & which should be written as &amp;'\n# Looks like you failed 1 test of 3.\nt/levels.t ........... Dubious, test returned 1 (wstat 256, 0x100)\nFailed 1/3 subtests\nt/message.t .......... ok\nt/opt-00.t ........... ok\n at t/parse-crash.t line 19HTML::Tidy: Unknown error type: Tidy found 3 warnings and 0 errors!\nt/parse-crash.t ...... ok\nt/perfect.t .......... ok\nt/pod-coverage.t ..... skipped: Test::Pod::Coverage 1.04 required for testing POD coverage\nt/pod.t .............. skipped: Test::Pod 1.14 required for testing POD\nt/roundtrip.t ........ 1/3 HTML::Tidy: Unknown error type: Tidy found 4 warnings and 0 errors! at t/roundtrip.t line 18\n\n#   Failed test 'Cleaned up properly'\n#   at t/roundtrip.t line 31.\n#          got: '<!DOCTYPE html>\n# <html>\n# <head>\n# <meta name=\"generator\" content=\n# \"HTML Tidy for HTML5 for Windows version 5.5.27\">\n# <title></title>\n# </head>\n# <body>\n# <a href=\"http://www.example.com/\"><em>This is a test.</em></a>\n# </body>\n# </html>\n# '\n#     expected: '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n# <html>\n# <head>\n# <meta name=\"generator\" content=\"Tidy\">\n# <title></title>\n# </head>\n# <body>\n# <a href=\"http://www.example.com/\"><em>This is a test.</em></a>\n# </body>\n# </html>\n# '\n# Looks like you failed 1 test of 3.\nt/roundtrip.t ........ Dubious, test returned 1 (wstat 256, 0x100)\nFailed 1/3 subtests\nt/segfault-form.t .... 1/3 Use of uninitialized value $newline in regexp compilation at F:\\Projects\\html-tidy-pet-fork\\b\nlib\\lib/HTML/Tidy.pm line 243, <DATA> line 1.\nUse of uninitialized value $errs in split at F:\\Projects\\html-tidy-pet-fork\\blib\\lib/HTML/Tidy.pm line 243, <DATA> line\n1.\nt/segfault-form.t .... ok\nt/simple.t ........... 1/4\n#   Failed test 'Right number of initial messages'\n#   at t/simple.t line 20.\n#          got: '6'\n#     expected: '5'\n# Looks like you failed 1 test of 4.\nt/simple.t ........... Dubious, test returned 1 (wstat 256, 0x100)\nFailed 1/4 subtests\nt/too-many-titles.t .. 1/3\n#   Failed test 'Matching warnings'\n#   at t/too-many-titles.t line 27.\n#     Structures begin differing at:\n#          $got->[1] = '- (4:9) Warning: too many title elements in <title>'\n#     $expected->[1] = '- (4:9) Warning: too many title elements in <head>'\n# Looks like you failed 1 test of 3.\nt/too-many-titles.t .. Dubious, test returned 1 (wstat 256, 0x100)\nFailed 1/3 subtests\n at t/unicode-nbsp.t line 19:Tidy: Unknown error type: No warnings or errors were found.\n\nt/unicode-nbsp.t ..... 1/2 #   Failed test 'Perl chars OK'\n#   at t/unicode-nbsp.t line 19.\n#          got: '&nbsp;\n# '\n#     expected: '&nbsp;\n# '\n at t/unicode-nbsp.t line 20pe: No warnings or errors were found.\n\n#   Failed test 'Byte string OK'\n#   at t/unicode-nbsp.t line 20.\n#          got: '&nbsp;\n# '\n#     expected: '&nbsp;\n# '\n# Looks like you failed 2 tests of 2.\nt/unicode-nbsp.t ..... Dubious, test returned 2 (wstat 512, 0x200)\nFailed 2/2 subtests\nt/unicode.t .......... 1/9\n#   Failed test 'Cleanup didn't break anything'\n#   at t/unicode.t line 35.\nWide character in print at C:/Perl64/lib/Test/Builder.pm line 1759, <DATA> line 1.\n#          got: '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n# <html>\n# <head>\n# <meta name=\"generator\" content=\n# \"HTML Tidy for HTML5 for Windows version 5.5.27\">\n# <title>\u00b5\u00f9\u00d1\u00b5\u00a3\u00bc\u03a6\u00ac\u20a7\u03c0\u00fc\u00ab\u03c0\u00e2\u00a2\u03c0\u00e2\u00e1\u03c0\u00e2\u00dc\u03c0\u00e2\u255d\u03c0\u00e9\u2555</title>\n# </head>\n# <body>\n# <p>Unicode\u03c0\u00fc\u00ee\u03c3\u00d1\u255c\u03c0\u00fc\u00ec\u03c0\u00fc\u00ba\u03c0\u00fc\u00d6\u03c0\u00fc\u00ef?</p>\n# </body>\n# </html>\n# '\n#     expected: '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n# <html>\n# <head>\n# <meta name=\"generator\" content=\"Tidy\">\n# <title>\u00b5\u00f9\u00d1\u00b5\u00a3\u00bc\u03a6\u00ac\u20a7\u03c0\u00fc\u00ab\u03c0\u00e2\u00a2\u03c0\u00e2\u00e1\u03c0\u00e2\u00dc\u03c0\u00e2\u255d\u03c0\u00e9\u2555</title>\n# </head>\n# <body>\n# <p>Unicode\u03c0\u00fc\u00ee\u03c3\u00d1\u255c\u03c0\u00fc\u00ec\u03c0\u00fc\u00ba\u03c0\u00fc\u00d6\u03c0\u00fc\u00ef?</p>\n# </body>\n# </html>\n# '\n\n    #   Failed test 'Cleanup didn't break anything'\n    #   at t/unicode.t line 54.\nWide character in print at C:/Perl64/lib/Test/Builder.pm line 1759, <DATA> line 1.\n    #          got: '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n    # <html>\n    # <head>\n    # <meta name=\"generator\" content=\n    # \"HTML Tidy for HTML5 for Windows version 5.5.27\">\n    # <title>\u00b5\u00f9\u00d1\u00b5\u00a3\u00bc\u03a6\u00ac\u20a7\u03c0\u00fc\u00ab\u03c0\u00e2\u00a2\u03c0\u00e2\u00e1\u03c0\u00e2\u00dc\u03c0\u00e2\u255d\u03c0\u00e9\u2555</title>\n    # </head>\n    # <body>\n    # <p>Unicode\u03c0\u00fc\u00ee\u03c3\u00d1\u255c\u03c0\u00fc\u00ec\u03c0\u00fc\u00ba\u03c0\u00fc\u00d6\u03c0\u00fc\u00ef?</p>\n    # </body>\n    # </html>\n    # '\n    #     expected: '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\n    # <html>\n    # <head>\n    # <meta name=\"generator\" content=\"Tidy\">\n    # <title>\u00b5\u00f9\u00d1\u00b5\u00a3\u00bc\u03a6\u00ac\u20a7\u03c0\u00fc\u00ab\u03c0\u00e2\u00a2\u03c0\u00e2\u00e1\u03c0\u00e2\u00dc\u03c0\u00e2\u255d\u03c0\u00e9\u2555</title>\n    # </head>\n    # <body>\n    # <p>Unicode\u03c0\u00fc\u00ee\u03c3\u00d1\u255c\u03c0\u00fc\u00ec\u03c0\u00fc\u00ba\u03c0\u00fc\u00d6\u03c0\u00fc\u00ef?</p>\n    # </body>\n    # </html>\n    # '\n    # Looks like you failed 1 test of 3.\n\n#   Failed test 'Try send bytes to clean method.'\n#   at t/unicode.t line 55.\n# Looks like you failed 2 tests of 9.\nt/unicode.t .......... Dubious, test returned 2 (wstat 512, 0x200)\nFailed 2/9 subtests\nt/venus.t ............ 1/2\n#   Failed test 'Cooked stuff looks like what we expected'\n#   at t/venus.t line 25.\n#     Structures begin differing at:\n#          $got->[5] = '  <body bgcolor=\"#FFFFFF\" link=\"#5B3D23\" alink=\"#8C6136\"'\n#     $expected->[5] = '  <body bgcolor=\"#FFFFFF\" link=\"#5B3D23\" alink=\"#8C6136\" vlink=\"#BE844A\" background=\"../../Wetla\nndGraphics/PaperBG.gif\">'\n# Looks like you failed 1 test of 2.\nt/venus.t ............ Dubious, test returned 1 (wstat 256, 0x100)\nFailed 1/2 subtests\nt/version.t ..........\n#   Failed test 'Valid version string'\nt/version.t .......... 1/4 #   at t/version.t line 11.\n#                   '5.5.27'\n#     doesn't match '(?^:^\\d\\.\\d{2,}$)'\nArgument \"5.5.27\" isn't numeric in numeric ge (>=) at (eval in cmp_ok) t/version.t line 12.\n\n#   Failed test 'Valid version string'\n#   at t/version.t line 11.\n#                   '5.5.27'\n#     doesn't match '(?^:^\\d\\.\\d{2,}$)'\nArgument \"5.5.27\" isn't numeric in numeric ge (>=) at (eval in cmp_ok) t/version.t line 12.\n# Looks like you failed 2 tests of 4.\nt/version.t .......... Dubious, test returned 2 (wstat 512, 0x200)\nFailed 2/4 subtests\nt/wordwrap.t ......... HTML::Tidy: Unknown error type: Tidy found 5 warnings and 0 errors! at t/wordwrap.t line 34\n\nt/wordwrap.t ......... 1/1 #   Failed test 'Cleaned stuff looks like what we expected'\n#   at t/wordwrap.t line 36.\n#     Structures begin differing at:\n#          $got->[1] = 'html>'\n#     $expected->[1] = 'html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">'\n# Looks like you failed 1 test of 1.\nt/wordwrap.t ......... Dubious, test returned 1 (wstat 256, 0x100)\nFailed 1/1 subtests\n\nTest Summary Report\n-------------------\nt/extra-quote.t    (Wstat: 512 Tests: 4 Failed: 2)\n  Failed tests:  3-4\n  Non-zero exit status: 2\nt/ignore-text.t    (Wstat: 256 Tests: 3 Failed: 1)\n  Failed test:  3\n  Non-zero exit status: 1\nt/ignore.t         (Wstat: 256 Tests: 9 Failed: 1)\n  Failed test:  3\n  Non-zero exit status: 1\nt/levels.t         (Wstat: 256 Tests: 3 Failed: 1)\n  Failed test:  3\n  Non-zero exit status: 1\nt/roundtrip.t      (Wstat: 256 Tests: 3 Failed: 1)\n  Failed test:  3\n  Non-zero exit status: 1\nt/simple.t         (Wstat: 256 Tests: 4 Failed: 1)\n  Failed test:  3\n  Non-zero exit status: 1\nt/too-many-titles.t (Wstat: 256 Tests: 3 Failed: 1)\n  Failed test:  3\n  Non-zero exit status: 1\nt/unicode-nbsp.t   (Wstat: 512 Tests: 2 Failed: 2)\n  Failed tests:  1-2\n  Non-zero exit status: 2\nt/unicode.t        (Wstat: 512 Tests: 9 Failed: 2)\n  Failed tests:  4, 9\n  Non-zero exit status: 2\nt/venus.t          (Wstat: 256 Tests: 2 Failed: 1)\n  Failed test:  2\n  Non-zero exit status: 1\nt/version.t        (Wstat: 512 Tests: 4 Failed: 2)\n  Failed tests:  1, 3\n  Non-zero exit status: 2\nt/wordwrap.t       (Wstat: 256 Tests: 1 Failed: 1)\n  Failed test:  1\n  Non-zero exit status: 1\nFiles=22, Tests=66,  3 wallclock secs ( 0.08 usr +  0.09 sys =  0.17 CPU)\nResult: FAIL\nFailed 12/22 test programs. 16/66 subtests failed.\nNMAKE : fatal error U1077: 'C:\\Perl64\\bin\\perl.exe' : return code '0x1'\nStop.\n```\n\nSo we get some **success**, and some **failures**...\n\nNow, as I **try** to analyse the difference, it does **seem** some tests need to be adjusted to the **current** behavior of Tidy 5.5.??... That is **maybe** the test expected **results** need to also be adjusted... to what `tidy5` will do...\n\nDespite these **negative** test indications, I chose to do `nmake install`, and this successfully added ` C:\\Perl64\\site\\lib\\auto\\HTML\\Tidy\\tidy.dll` to my perl installation. and added `C:\\Perl64\\site\\lib\\HTML\\Tidy\\Tidy.pm` ... all seemed good...\n\nBut then when I tried `Tidy03.pl`, I get an **error**?\n\n```perl\n#!/usr/bin/perl -w\nuse strict;\nuse warnings;\nuse HTML::Tidy;\nmy $tidy = HTML::Tidy::Document->new();\nif (! $tidy) {\n    die \"ERROR: Failed to load HTML::Tidy ... $! ...\\n\";\n}\nmy $doc = <<\"EOF;\";\n <p>Hello HTML::Tidy!</p>\nEOF;\n```\n\nError message -\n\n```\nCan't locate object method \"new\" via package \"HTML::Tidy::Document\" (perhaps you forgot to load \"HTML::Tidy::Document\"?) at Tidy03.pl line 5.\n```\n\nSo ok, the API has maybe changed from http://search.cpan.org/dist/HTML-Tidy/lib/HTML/Tidy.pm ...\n\nBut what is the **new** API? The `tests` seem to show just `my $tidy = HTML::Tidy->new($args);`, but I remain a bit confused...\n\nSeems lots of **good** steps forward, and maybe my **bad** understanding of the Perl5 API is my problem...\n\nLook forward to **feedback**, when you have the time... thanks...\n. @petdance ok, it looks to me as if just about everything is working ok in Windows... my simple test, more just to understand than anything else -\n\n```perl\n#!/usr/bin/perl -w\nuse strict;\nuse warnings;\nuse HTML::Tidy;\n\nmy $use_conf_file = 1;\nmy ($tidy);\nif ($use_conf_file) {\n    #my $txt = \"show-body-only: 1\\ntidy-mark: 0\\n\";\n    my $txt = \"indent: 1\\nwrap: 0\\nshow-info: 0\\n\";\n    my $file = 'temptidy.cfg';\n    open WOF, \">$file\" or die \"ERROR: Unable to open $file! $!\\n\";\n    print WOF $txt;\n    close WOF;\n    $tidy = HTML::Tidy->new( {'config_file' => $file} );\n} else {\n    #my $args = { show_body_only => 1,\n    #    show_info => 0 };\n    my $args = { indent => 1,\n        wrap => 0,\n        tidy_mark => 0,\n        show_info => 0 };\n    $tidy = HTML::Tidy->new( $args );\n}\nif (! $tidy) {\n    die \"ERROR: Failed to load HTML::Tidy ... $! ...\\n\";\n}\nmy $doc = <<\"EOF;\";\n <p>Hello Tidy!</p>\nEOF;\n#my $rc = $tidy->parse( '-', $doc );\n#print \"$clean\\n\";\nmy $clean = $tidy->clean( $doc );\nprint \"$clean\\n\";\nmy @msg = $tidy->messages();\nif (@msg) {\n    my $cnt = scalar @msg;\n    print \"Have $cnt messages...\\n\";\n    print join(\"\\n\",@msg).\"\\n\";\n}\n# eof\n```\n\nThis produced the **great** output -\n\n```html\n at tidy04.pl line 33rror type: Tidy found 3 warnings and 0 errors!\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta name=\"generator\" content=\"HTML Tidy for HTML5 for Windows version 5.5.27\">\n    <title></title>\n  </head>\n  <body>\n    <p>\n      Hello Tidy!\n    </p>\n  </body>\n</html>\n\nHave 3 messages...\n (1:2) Warning: missing <!DOCTYPE> declaration\n (1:2) Warning: inserting implicit <body>\n (1:2) Warning: inserting missing 'title' element\n ```\n\nNot sure why the first line looks to be an overlap of messages, but maybe a Windows `CrLf` was not used somewhere... looks like just `Cr` got out...\n\nThen I started looking at why the `nmake test` failed a few of the tests, and as suspected, some of them just need the **expected** updated to what current library HTML Tidy 5.5.27 will generate...\n\nHowever test `t/clean-crash.t` suggests a small problem in `tidy.xs`, around line 163... in the `_tidy_clean` service... you had earlier made the prognosis `/* XXX I think this cascade is a bug waiting to happen */`... which comes **true** on this test case...\n\nThe input html of the test has an **error**, so **no** output will be generated! So I think `output.bp` will be zero. So no outputs will be pushed for the return...\n\n```\nvoid\n_tidy_clean(input, configfile, tidy_options) \n    ...\n        if ( rc >= 0 && output.bp && errbuf.bp ) {\n            XPUSHs( sv_2mortal(newSVpvn((char *)output.bp, output.size)) );\n            XPUSHs( sv_2mortal(newSVpvn((char *)errbuf.bp, errbuf.size)) );\n```\n\nSo back in the `Tidy.pm` the appropriate variables will be **uninitialized**!\n\n```\n    my ($cleaned, $errbuf, $newline) = _tidy_clean( $text,\n                                          $self->{config_file},\n                                          $self->{tidy_options});\n    utf8::decode($cleaned);\n    utf8::decode($errbuf);\n\n    $self->_parse_errors('', $errbuf, $newline);\n```\n\nSimply put, `_tidy_clean` must **always** return 3 params... **or** `_parse_errors` must deal with the not defined case, or something...\n\nOf course for the test, we could probably add a { force_output => 1 }, config, but for some reason you have `marked` this option as **unsupported**. Not sure why? \n\nI removed it from `lib\\HTML\\Tidy.pm`, rebuilt and added `my $tidy = HTML::Tidy->new( { force_output => 1 } );` to this test, and it **PASSES**... but not sure why the `Unknown error type:` carp...\n\n```\nHTML::Tidy: Unknown error type: Tidy found 8 warnings and 1 error! at t/clean-crash.t line 20\nt/clean-crash.t ...... ok\n```\n\nBut of course it still should also work without this config option... to avoid the **noise** from line `my @lines = split( /$newline/, $errs );`...\n\nHave pushed these changes to the `test1` branch of my fork, and opened an [Issue 1](https://github.com/geoffmcl/html-tidy/issues/1) there to **mirror** this issue, and **track** this Windows x64 build...\n\nWill continue to work on other `tests` as time permit...\n\nBut really **thank you** for this **great** `HTML::Tidy` package... It is just what the **doctor ordered** ;=))\n. @petdance well until I got deep enough into building, testing, etc, was still unsure if anything was needed **here** to make the `tidys.lib` library compatible to `tidyp`, and thus be linkable into html-tidy Tidy.dll! But so far it seems it is...\n\nSo, yes, **sorry**, will move these now purely `perl` issues back to my `html-tidy` fork, which I have started to do in [Issue 1](https://github.com/geoffmcl/html-tidy/issues/1) there... thanks...\n\nThe aim there is to try to prepare a PR to merge into your **master** source... is this ok?\n\nOr do you have some other preferred way I can offer help? Do you want a **new** issue for each? Directly in your repo? Patches maybe... please advise... only trying to help... thanks...\n. As this is **not** technically a `HTML Tidy` issue, closing this...\n. See ongoing **WIP** discussion in #456...\n. @LWillms thanks for the issue, and **sad** to hear that...\n\nReading around here and there this can have several possible causes...\n\n1. File is corrupt, bad, or missing.\n\nBut assume you have checked this... tried another download... verify the file exists... etc...\n\n2. File is not designed for your version of Windows:\n\nOne of the most obvious is you are trying to run a 64-bit Tidy on a 32-bit OS...\n\nBut it might also be that certain MSVC runtimes are missing, and need to be installed... but I think that should be a different error message about **missing** DLLS.\n\nTidy Version 5.4.0 was built with MSVC14 (2015)... the earlier with MSVC10 (2010)... See MS sites [like](https://www.microsoft.com/en-us/download/details.aspx?id=48145), and many others...\n\nAnd read issue #515, where we were able to supply a `/MT` version... the default is `/MD`... but this was a **LINK** problem, not running the Tidy EXE...\n\nSo have you checked the bit-ness of your OS matches the Tidy binary you downloaded? \n\nWhere, and exactly **which** tidy binary **did** you download and install?\n\n3. Blocked by Anti-virus program.\n\nSeems unlikely, but have you scanned the tidy.exe file, or tried with the anit-virus off?\n\n4. Or **something else**... there seems a **lot** of posts about this...\n\nI hope the above offers some ideas... please **advise** more... thanks...\n. @LWillms, sorry but I am getting a little **lost** ;=()\n\nIs your current Server 2003 32 or 64 bit? You talk about **upgrading** to a `64 bit` Server 2008 R2...\n\nOf course if it is currently 32-bit it can **not** run a 64-bit executable... Usually the 32-bit EXE will run in both OSES...\n\nThen you say `the 5.2 version still does its work`! Is that the 32 or 64 bit? Or both?\n\nMaybe I could try building a MSVC10 version, but do you want a 32-bit or a 64-bit version? I would like to understand and solve this, **if possible**...\n\nSorry for being so dense... please advise **more**, and keep it real simple for me... thanks...\n. @LWillms thanks for the further information... ok, we are talking about **two** systems...\n\n 1. Win7 - 64-bit\n 2. Server 2003 - 32-bit\n\nSo I have some questions...\n\n 1. Win7 - 64-bit\n\nYou seem to be reporting `32-bit Tidy 5.4` runs there, now that you have installed the VCruntime140.dll. That's good... no problem... understood...\n\nBut if you also installed the VC 64 (x64) runtimes, then so should `64-bit Tidy 5.4`!\n\nAre you saying this `64-bit Tidy 5.4` **fails**? In Win7 - 64-bit! With what error message?\n\nAnd **OT**, why do you not upgrade this to Win10? That is the path I took. This Win10 64-bit machine was formerly Win7 64-bit... and I was offered a **free** upgrade... but that is another topic...\n\n 2. Server 2003 - 32-bit\n\nWell, until you **upgrade** this to a 64-bit OS, you can only run **32-bit Tidy 5.4**. Of course, for **5.4 Tidy 32-bit**, you may have to also install the `VC 2015 Runtime 32 (x86)`...\n\nAre you saying this does **not** work? Is this where you get `not a valid Win32 application`?\n\nYou advise **32-bit Tidy 5.2** is working. But so should **32-bit Tidy 5.4**, with the appropriate `runtimes`...\n\nAnd am still **puzzled** why `tidy-5.5.10-win32-mt.zip` did not work! IIRC it is 32-bit, and does **not** need the VC runtimes... so should run in `Server 2003 - 32-bit`! What error message?\n\n**Tidy Releases**\n\nConcerning the next Tidy **Release**, that will be version 5.6... only even numbered minor versions are official releases... That is presently scheduled for mid August 2017, but if the past is anything to go on, that date may slide a few times, sometimes by months...\n\nBut we do keep the development version, `5.5`, presently `5.5.30`, in a very stable state, so it **can** be used in a production environment...\n\nJust to check, with a few small patches, I **can** build Tidy `5.5.30` 64-bit, using MSVC10 (2010), but at this time have only tried the `64-bit` build... May get time later to build a 32-bit Tidy 5.5.30 using MSVC10, but that may be a few days...\n\nSo looking forward to further **clarification**... hopefully **success**... thanks...\n. @LWillms sorry to hear no complete success yet...\n\nBut yes, I really hope we can **solve** the problem, and **thanks** for your offer to help testing...\n\nIt turned out easier than I thought, to generate a current 32-bit Tidy 5.5.31, using MSVC10 (2010), so will try to embed a zip here...\n\nZip: \n[tidy-5.5.31-w32-vc10.zip](https://github.com/htacg/tidy-html5/files/1039208/tidy-5.5.31-w32-vc10.zip)\n\nAs the zip name implies, this is a 32-bit binary, built using MSVC10 (2010), the **same** as Tidy `5.2`... so if `5.2` runs, so should this - **I hope!**..\n\nIf you get the time, please test and advise... thanks...\n. @LWillms really thanks for testing tidy-5.5.31-w32-vc10.zip, and reporting... and glad it seems to work across the board...\n\nWhile I agree somewhat with it is **not** simply `32 bit Tidy` vs. `64 bit Tidy`...\n\nBut for sure you can **not** run an app using 64-bit memory addressing in a 32-bit OS... Even though the particular CPU may have 64-bit registers, there is **no way** for the hardware drivers, etc to handle it... they have been built to **only** handle 32-bit addressing...\n\nAnd while a 64-bit OS continues to support compatible modes, WOW, etc, it should always be able to run a 32-bit app... not sure how long MS will continue this support...\n\nThere does seem to be a **particular** difference between an app built with MSVC10 and MSVC14. \n\nFirst there is the difference between the required MSVC runtime `vcruntimeXXX.dll`... that is `100` for VC10, which almost seemed to be included in most OSES, and `140`, and some others, for VC14, which usually require the appropriate `vc_redist.xXX.exe` to also be installed...\n\n**BUT** the use of **static** runtimes should overcome that! That is built with /MT vs. /MD...\n\nI have again built a 32-bit Tidy, using **static** runtimes... it is in http://geoffair.org/tmp/tidy-5.5.31-w32-vc14-mt.zip. This 32-bit Tidy runs fine in my 2 32-bit Vista machines, and tomorrow, will try it in my 32-bit XP machine... I expect it to work...\n\nBut maybe you are **right**, that something **drastically** changed between XP, and later OSES...\n\nIt would be appreciated if you could get the time to download this, and give it a try... thanks...\n\nWhile I know MS has given up on XP support, at this time I see no reason for Tidy to do this, while it costs very little extra effort... I talk about this in #550... and have recently added some small fixes to allow continued building with MSVC10... but would prefer using MSVC14, or later, hence the above zip... thanks...\n. @LWillms really thanks for following this and reporting...\n\nI tried the `tidy-5.5.31-w32-vc14-mt.zip` in my **XP** machine, and as you reported got the `invalid win32` dialog, like in your Server 2003... BAH!\n\nBut you seem to have hit the nail on the head with the [stackoverflow](https://stackoverflow.com/questions/35664861/how-to-target-windows-xp-in-microsoft-visual-studio-c) link, and setting the `Platform Toolset` in MSVC14...\n\nAnd while I would probably not characterize `Auntie Google is your friend`, it is certainly **very helpful** at times... ;=))\n\nThankfully this `Platform Toolset` can be done via cmake - just add `-T v140_xp` to the cmake config...\n\nSo the first I built was using the `default` **/MD** libraries, and while this EXE runs in XP, of course it complains about missing `VCRUNTIME140.dll`, and probably others, all of which I could probably be install... by the appropriate `vc_redist.x86.exe`... \n\nBut I did **not** want to do that, in that venerable **old** machine... like you, it was the last machine where I had `Microsoft Office`, `Frontpage`, `Outlook`, `etc $$$$` installed, but have managed to wean myself of these `expensive` tools...\n\nSo then I built a `tidy 5.5.31 w32-vc14-mt-xp`, ie using the `static **/MT** libraries, and it ran fine in **XP**, and no doubt would also run in **Server 2003**... \n\nIf you want to try it at this time I have only uploaded a http://geoffair.org/tmp/temp2.zip containing just the EXE... running it with `-v` should yield -\n\n```\nHTML Tidy for Widnows version 5.5.31.w32-vc14-mt-xp\n```\n\nSo now it seems we have at least two(2) ways to continue supporting **XP**... use MSVC10, **or** MSVC14 using the `-T v140_xp` toolset... and this can probably be extended to later MSVC versions...\n\nI hope you get the chance to try and report success with `temp2.zip`... thanks...\n\nAnd yes, as you reported, there is no problem using this EXE, or others I sent, in a production environment... You do get all the advantages of the later version...\n\nSo maybe this issue has been **solved**, and can be closed... thanks...\n. @LWillms you can see I have opened a #568 to remind myself what needs to be done...\n\nMy idea is to **not** replace, but **add** to the distribution...\n\nPS: No need to re-open an issue to add a comment... we get them **all** anyway ;=)). @LWillms thanks for your feedback... but no **idea** what you are saying here...\n\nOf course you can **go back** to any version you prefer... no problem...\n\n> Nice, but it does not produce any output. \n\nWhat does this mean? **totally** confused... in what system? what input? please explain... thanks...\n. @LWillms I can only think you are running the **wrong** tidy.exe...\n\nIn my system I have up to **150** versions of `tidy.exe`, but **none** have that name! In fact in my system the command `tidy -v` will yield -\n\n```\n'tidy' is not recognized as an internal or external command,\noperable program or batch file.\n```\n\nThat is the way I deal with having **so** many versions, and **not** get confused... Each is given a unique name, usually related to their version. My oldest is `tidy2000.exe` -\n\n```\n<anywhere>tidy2000 -v\nHTML Tidy release date: 4th August 2000\nSee http://www.w3.org/People/Raggett for details\n```\nThen the **latest** \n\n```\n<anywhere>tidy5-5.5.31 -v\nHTML Tidy for Windows version 5.5.31\n```\n\nYou always need to **know** exactly which EXE is being run, if you have more than one... And that will depend on where you are at the time, as the system first searches locally, and then what is in one of the **PATH** directories... very easy to get it wrong...\n\nSo, in one sentence you say -\n```\n> tidy -v produces this:\n> HTML Tidy for Windows version 5.5.31.w32-vc14-mt-xp\n```\n\nThat is it produced an **output**...\n\nThen, in the next sentence, after **rebooting**, tidy produced a **crash** dump, and no **output**... I can only ask **which** actual tidy EXE produced this? And what was the command line at the time...\n\nI have no problem with you sending that **dump** directly to me, perhaps in a zip file. And maybe you could include the `tidy.exe` that caused it... this might help...\n\nHope we can get this sorted... thanks...\n. @LWillms this is getting very **frustrating**...\n\n> Q: You have no longer the exe which you produced ... Strange...\n\n**Of course I do**! It exists in **all** of my, Win 10 64-bit, Vista 32-bit, **and** XP 32-bit systems as -\n\n```\n Directory of c:\\mdos\n2017-06-01  18:08  693,760 tidy-5.5.31.w32-vc14-mt-xp.exe\n```\n\nThis `mdos` is just where I put **all** versions of `tidyXXXXX.exe`, and that directory, `C:\\MDOS` is **permanently** in my `PATH` environment variable, so I can run **all** these versions from **anywhere**... especially against the formal [release](https://github.com/htacg/tidy-html5-tests) regression tests, and [my](https://github.com/geoffmcl/tidy-test/tree/master/test/input5) informal test files... hundreds and hundreds of them...\n\n**AND** the - http://geoffair.org/tmp/temp2.zip - is still there... but that can be over-written anytime...\n\n**AND** for me, this xp version runs fine in Win10, Vista and XP... so really unsure what you want me to do!!!\n\n**LIKEWISE** I have a `tidy5-5.4.0-w32-mt-xp.exe` in my `MDOS`... this is from http://binaries.html-tidy.org/... `tidy-5.4.0-w32-mt-XP.zip` - downloaded, extracted, and renamed... and it **also** runs **fine**...\n\nSorry about the slightly **inconsistent** naming conventions I use... I am still **working this out**... that is what indicators to include in the naming convention... which I will apply to the `release` zips for Windows...\n\n**SO** to me you have **two**, well 3++ if we count a vc10 versions, to use... Which one is giving you trouble? Are you using some other version, known to be a problem?\n\n**What else do you want me to do?**\n\nBy clicking on my abundant pictures on GitHub, should put you in my profile page, where I do list a direct email address... or you could use `ubuntu _at_ geoffair _dot_ info` as the most active... or probably several other emails addresses I have... but essentially they **all** end up at `ubuntu`... my main linux Thunderbird email client...\n\nBut if you really **sort out** the version you are using, maybe you do **not** need to send me anything... and this can be **closed**... again... thanks... \n. @LWillms ok, got your zip, **but** you did **not** include the `D:\\UTIL\\tidy.exe` as requested... please zip and send this... **exactly** this, no others...\n\nFrom looking at the dumps, this appears to be the `tidy` from an earlier **`temp1.zip`**, since I can see MSVC14 dynamic DLLS there, like `api-ms-win-core-string-l1-1-0.dll` and others. When run I suspect this `tidy` would output `HTML Tidy for Windows version 5.5.31.w32-vc14-xp`, which is **not** exactly what you wrote above... **NOTE** the missing **-mt-**!!!\n\nIf you download and run the `tidy` from the **`temp2.zip`**, it will yield `HTML Tidy for Windows version 5.5.31.w32-vc14-mt-xp` - **NOTE** the added **-mt-**, that you wrote... **this is an important difference**\n\nAs suspected these crash **dump** do **not** give me much information... a copy of the actual `tidy.exe` would tell me more... analysis would give the exact date it was built, and more importantly exactly **which** system DLLS it would depend on... which is why I asked for a zip of the EXE...\n\nPlease **check**, and **re-check** the tidy version you are running... thanks...\n. @LWillms no **new** zip arrived? Even checked the spam folders... but I do **not** really need this... **forget** it...\n\nI get it that you think you are mailing back what you downloaded, but the **dump** given indicates otherwise...\n\nI will repeat **again** - the dump indicates `api-ms-win-core-string-l1-1-0.dll`, and others. \n\nThe `tidy.exe` in `temp2.zip` does **not** use that DLL... look at the dumps yourself... the names are in unicode, but clearly visible... simple...\n\nOr look at the EXE. I have my own [dump4](https://github.com/geoffmcl/dump4) utility, but open up a MSVC Command Prompt, and run `dumpbin /EXPORTS tidy.exe` and note the `Section contains the following imports:`... \n\nYou should **only** find `KERNEL32.dll`... just **one** imported DLL in the **-mt-** version...\n\nThen do the same with other tidy.exe versions you have... you will find, as well as `KERNEL32.dll`, `VCRUNTIME140.dll`, `api-ms-win-crt-stdio-l1-1-0.dll`, and others...\n\nEither you sent the **wrong** dumps, or something... \n\nIf you are truly running the **-mt-** version of tidy, which you seem to be **insisting**, ok, no problem... then at least send me the correct, matching **dump**... thanks...\n. @LWillms no zip received, but as indicated I do **not** think this would help in **any** way... so please **forget** it...\n\nAm thinking of the following **stern** warning -\n\n**WARNING**: While some effort has been made to provide a Windows **`XP`** version of Tidy.exe, using MSVC14, this has **not** proved completely successful in **all** cases. We do **not** know exactly why!\n\n**Regrettably**, if you have an **`XP`** like system, which seems to include `Windows Server 2003`, and this `Tidy.exe` fails to run correctly, for any reason, then you have no other options but to upgrade the system to a later version of Windows, and/or if you have the capability and tools, maybe build tidy from source in that system...\n\n**Alternatively**, apparently some **older** versions of **`Tidy.exe`** may still run...\n\nIf you have this problem, then we can only state `HTML Tidy` no longer supports such **old** systems, and will **not accept any issue on the subject! Sorry**!\n\nDoes that make the position clear? Do you have any other suggestions about the warning? Over time I will find some places to **publish** this information, so users can be **warned**... thanks...\n\nConcerning your question about `-v`, `-version`, even `--version`, when this command line item is reached, as you state, tidy will output the version string to stdout, and exit(0). No further processing will take place...\n\nNow, if this `version` option is preceded by other commands, like say `-f temp1.txt`, then yes, this file might be created, but it may be blank... \n\nTidy processes the command line in a completely **linear** way, so you can have like `-f temp1.txt first.html -v second.html`, where the `first.html` will be processed before it reaches the `-v`, but then, here the `second.html` would not be processed... and so on...\n\nThe tidy man page, and even `tidy -?` shows this ability to repeat options and files, on the command line, like -\n\n```\ntidy [options...] [file...] [options...] [file...]\n```\n\nAnd one thing that can still catch me now and then is when no **`file`** is given, like `tidy [options...]<enter>`!\n\nTidy will appear to **hang** since it will attempt to read the input from stdin... only `Ctrl + c` gets back to the prompt... so you can do like `echo para 1 | tidy [options...]` and get a html output including 'para 1'... Not something normally done in windows, but I am assured common in unix...\n\nI have not particularly come across many other apps that will do all this... **`tidy`** may be **unique** ;=))\n. @LWillms yes, you had already informed us that `Tidy 5.5.31.w32-vc10` worked... thanks... but, as stated, I was hoping to **drop** the use of that 2010 tool, and use only vc14 2015, or later... may have to rethink that... at least for the next release...\n\nAnd while I **would** be interested in finding out why the one built with vc14 failed in **some** environments, and that `tidy.exe`, as indicated, only has a dependence on `KERNEL32.DLL`, no others, so no need for `tidy.dll` - it runs, works fine, in my **XP** installation - it seems we have spent enough time chasing this...\n\nOT: BTW, I am well aware of the `queue of filters`, and thanks for the reminder. That was not the **unique** thing I was referring to...\n\nWhile there are many programs that support `-options file1 file2 file3 ...` - that is quite normal... and is supported by the GNU `getopt` library, putting all the non-options at the end of the list, so does even support out-of-order `-options`...\n\nBut Tidy's pure **linear** support for `-option1 file1 <process> -option2 file2 <process> ...` is **not** common, in my experience... although I am sure there **are** others... and do not need a list on this OT subject...\n\nAccordingly, am marking this `Won't` fix, which in this case means more like, tried **many** things, spent a lot of time on it, and **can't** fix... and have some ideas for the future... thanks for all the feedback...\n\nCan we now close this overly long saga? I have supplied you with a **working** up-to-date version `5.5.31.w32-vc10`... What more is there? Thanks...\n. @suchafreak thank you for the issue...\n\nI know very little about jTidy, but, for sure, current 5.5.31 Tidy refuses to move `<style>` elements to the `<head>`, and unless convinced otherwise, marking this as a big **BUG**!\n\nCurrent tidy still has the message `{ TAG_NOT_ALLOWED_IN,0,\"%s isn't allowed in <%s> elements\" },` but as far as I can see the message is now **never** used...\n\nGoing back in Tidy **versions**, my earliest, `Tidy4aug00`, which I call `Tidy2000` moved it to the `<head>`, and issued the **warning**, as did the last `cvs` code release circa 2009... even a `Jan 2012`, `tidydev` fixed this...\n\nBut the **fix** was gone by our first [release 5.0.0](https://github.com/htacg/tidy-html5/releases/tag/5.0.0), circa 2015... the first release since 2009... but that is all just **history**...\n\nIt will take more digging into the code, to find out exactly when and why this was **changed**, and hopefully **change it back**, unless, as stated, there is some **valid** reason for this change...\n\nWill look deeper into this soonest, and report... and would appreciate any further feedback... thanks\n. @suchafreak, ok, found the exact [line](https://github.com/htacg/tidy-html5/blob/next/src/parser.c#L4056) that causes this...\n\nIt changed from -\n```\n        if ( nodeIsINPUT(node) ||\n             (!TY_(nodeHasCM)(node, CM_BLOCK) && !TY_(nodeHasCM)(node, CM_INLINE))\n           )\n        {\n```\n\nto -\n\n```\n        if (( nodeIsINPUT(node) ||\n             (!TY_(nodeHasCM)(node, CM_BLOCK) && !TY_(nodeHasCM)(node, CM_INLINE))\n           ) && !TY_(IsHTML5Mode)(doc) )\n        {\n```\n\nBut, at some point `CM_BLOCK` got added to the `\"style\"` tag, [line 259](https://github.com/htacg/tidy-html5/blame/next/src/tags.c#L259), so now it does **not** enter this block of code... still to track the commit that did this, and examine why...\n\nAnd even if that `CM_BLOCK` was removed from the `<style>` tag, **my** commit 685f7a6c5b2 also means the code does **not** enter this block of code, if still in HTML5 mode... \n\nAnd thus never gets to the code, which does exactly what it says -\n\n```\n            if (node->tag->model & CM_HEAD)\n            {\n                MoveToHead(doc, body, node);\n                continue;\n            }\n```\n\nWould be relatively easy to add code like -\n\n```\n    if (nodeIsSTYLE(node)) \n    {\n        MoveToHead(doc, body, node);\n        continue;\n    }\n```\n\nFull patch -\n\n```diff\ndiff --git a/src/parser.c b/src/parser.c\nindex a037280..41ff2d0 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -4121,6 +4121,14 @@ void TY_(ParseBody)(TidyDocImpl* doc, Node *body, GetTokenMode mode)\n             }\n         }\n\n+        /* Issue #567 - <style> tags found in this <body> parsing\n+           should be moved to the <head>, always... */\n+        if (nodeIsSTYLE(node))\n+        {\n+            MoveToHead(doc, body, node);\n+            continue;\n+        }\n+\n         if (node->type == EndTag)\n         {\n             if ( nodeIsBR(node) )\n```\n\nIs there **any** reason this would **not** be **true**?\n\nNeed to give this a little **more** thought... testing and feedback very welcome... thanks...\n. @suchafreak thank for the links and feedback... wow, there has certainly been a **lot** said about allowing `<style>` in the `<body>`, and the `<style scoped>` issue that leads on from that... certainly some **heated** debate...\n\nAnd while few browsers, other than Firefox, support the `scoped` style, all do work with a `<style>` in the body... but that has little weight in that Tidy tries hard to follow the W3C specs...\n\nOne can read the clear [comments](https://github.com/whatwg/html/issues/552#issuecomment-239588536) from @sideshowbarker, who worked on tidy a while back, that he added the error to W3C `nu` validator... and likewise the legacy document validator also flags an error...\n\nSo if the aim of Tidy is to produce **valid** html, then I too think it should move it to the `<head>`... simple...\n\nNo, the addition of `&& !TY_(IsHTML5Mode)(doc)` was to **only** address issue #428, namely the change in the `<input>` tag between html5 and legacy documents... and missed the fact other tags come through here...\n\nAs mentioned, the moving of the `<style>` to the head has been **broken** ever since the `CM_BLOCK` bit was added to the `<style>` tag table entry, but I still can **not** trace the origin, and reason for that **change**! \n\nSo removing that bit would be **one solution**, but could have other consequences... although none seen in the 235 `regression` tests... but sadly there seems no tests covering this `<style>` in the `<body>`... obviously one should be added to check this in the future...\n\nBut on balance, it seems the proposed patch is a **clean**, very specific, and a **clear** solution, once it is agreed Tidy **should** issue this warning, and make this document **fix**...\n\nWill ponder this some more... as always feedback very welcome... thanks..\n. @suchafreak to facilitate easy testing have pushed the changes to an `issue-567` branch...\n\nHave also pushed some sample `in_567*.html` to my [test](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_567.html) repo...\n. @suchafreak well I do like working on **bugs** ;=)) It's my kind of **fun**...\n\n> get hold of a binary of this fixed version for Windows?\n\nWell, we have no present place to `officially` publish such an intermediate, `test` version of Tidy, but maybe we should... \n\nI could copy one to a temporary place, but you would probably still need some other `installs` to get it working... What version of Windows are you using, and bitness, 32 or 64?\n\nBut just because it is **easy**, I have copied a zip - http://geoffair.org/tmp/tidy-5.5.31.I567-w64-vc14-md.zip - but this assumes a Windows 64-bits, and you may have to install the appropriate [vc_redist.x64](https://www.microsoft.com/en-us/download/details.aspx?id=52685), if not already done...\n\n> lack the necessary build environment\n\nBut this is **so** easy to set up... you just need 3 things `git`, `cmake`, and `MSVCxx`... all free.. and voila...\n\n 1. git - https://git-scm.com/download/win\n 2. cmake - https://cmake.org/download/\n 3. MSVCxx - https://www.visualstudio.com/vs/community/\n\nThis is documented in our [BUILD.md](https://github.com/htacg/tidy-html5/blob/next/README/BUILD.md)... but repeated here, once the above 3 tools are **installed**...\n\nStart in `<someroot>`, like say `C:\\Projects` or even `C:\\Users\\<user>\\Projects`, etc...\n\n 1. git clone https://github.com/htacg/tidy-html5.git # clone repo\n 2. cd tidy-html5   # get to source tidy root\n 3. git checkout issue-567  # checkout the desired branch - `git branch -r` will show all\n 4. cd build\\cmake  # get into a build directory... \n 5. cmake ..\\\\..     # do configure and generation\n 6. cmake --build . --config Release    # actually build the project...\n 7. release\\tidy -v # run the built tidy, and show version...\n\nThis may default to a 32-bit build, but if in a 64-bit system, change 4. to `cd build\\win64`, and run the MSVCxx x64 command prompt before continuing with 5.... Both these `build` directories contain a `build-me.bat` that may just require a few version tweaks, or none, to be used...\n\nThat does **not** seem too hard... Why not try it? It is **fun**!\n\nLook forward to further feedback... thanks...\n. @suchafreak yup, the patch I proposed will **only** deal with moving the `<style>` if it occurs as a direct descendant of `<body>`... at that moment Tidy is in `ParseBody`, where the patch lives...\n\nBut when the token `<div>` is decoded, tidy will enter `ParseBlock` to handle that, and so on for about 20 other `ParseXXXXX` elements... my patch would then need to be replicated in these many `parsers`... **not the way to go!**\n\nSo if we want to catch any and every `<style>` element, this has to be done after the initial `token` decodes, where they are added to a DOM like `tree` of nodes... and the file stream is closed...\n\nThen tidy runs `status = tidyCleanAndRepair( tdoc );`, which in turn runs `tidyDocCleanAndRepair( impl );`...\n\nHere the complete **node tree** can be processed again, node, by node... \n\nThis is where, for example, inline `style` attributes, like `<span style='font ...'>` are converted to CSS in the `<head>`, and replaced with `<span class=\"c1\">` in the `<body>`, if **clean** is on...\n\nReading `tidyDocCleanAndRepair( impl );` will show there are many little **services**, like `NestedEmphasis`, `List2BQ`, `BQ2Div`, `CleanDocument`, etc, etc, some dependant on **options**, but in essence each will traverse the **node tree**, looking to **fix** what they are intended for...\n\nSo as indicted, to move **all** `<style>` out of body, we would need a new service like say `TY_(CleanStyle)( TidyDocImpl* doc )`, or something...\n\nWill give this some thought, and cycle back to it as time permits, but if you, or others, have some ideas, then feedback, patches, PR very welcome... thanks...\n\nGlad to hear you were able to clone and build tidy. The next step would be to **fork** `tidy-html5` repo to your own github space, then clone and build that fork... \n\nThen you can make code changes, usually in a branch, push these to your fork, and present a PR... the process is simple... after you have **forked** the repo -\n\n 1. git clone git@github.com:suchafreak/tidy-html5.git tidy-html5-fork # clone fork to dir\n 2. cd tidy-html5-fork   # get to source tidy fork root\n 3. git checkout -b test1  # checkout the **new** branch - **important**\n 4. **make desired code changes** now or later...\n 5. cd build\\\\cmake  # get into a build directory... \n 6. cmake ..\\\\..     # do configure and generation\n 7. cmake --build . --config Debug    # actually build the project...\n 8. cmake --build . --config Release  # actually build the project...\n 9. **in the MSVCxx IDE, test that the built tidyd.exe does what you want**\n 10. git commit -m \"Changes for issue #567\" -a   # commit the code changes\n 11. git push -u origin test1   # add branch and changes to fork\n 12. **setup a PR**\n\nI usually leave step 4. until after 8., and load the MSVCxx IDE, and make code changes using its very helpful IDE editor... Then as in 9. you can build and test in the IDE...\n\nAdvise if you need any help with this... thanks...\n. @suchafreak ok, took another look at this, but not pushed anything yet... but as before have copied an experimental build to http://geoffair.org/tmp/tidy-5.5.31.I567-2-w64-vc14-md.zip\n\nNote it is experimental, and have not yet tested all cases... It would really help if you could find a sample where it fails...\n\nAnd if I get the chance will push this to an **issue-567-2** `branch`, so you can build it yourself..\n\nBut now **two** things **trouble** me -\n\n 1. Should this be a `option`?\n 2. What about a `warning`, or at least `info` message?\n\nIf I load my [in_567-3.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_567-3.html) test file in a browser that supports `scoped`, like firefox 43.0.1...54.0... the `Hello` is in **red**, and the `World` is in **green**, and I would be **very upset** with `tidy` if it unconditionally moved these two `<style>` blocks to the `<head>`, when browsers will **only** use the last style, **green**...\n\nSo there would need to be a option like `--move-style-to-head yes/no`... or `--fix-style-tag`, or something, so I could turn this **off** if I am using a browser that supported `scoped`... Maybe you are right - there are not many - but the moment there is one, then this option becomes important...\n\nOf course, it seems Chome and IE, and maybe others, show both words in **green**...\n\nAnd at the moment, this is a **silent** fix! I think I would want to know, at least as an `Info:` type message, that `tidy` has made this quite drastic change... even if it is correct html...\n\nSOOO, really seek further **feedback** on this... thanks...\n. @suchafreak thanks for the feedback and links... I understand the `scoped` attribute is **non-standard**, and support could be **removed** at any time from the few browsers that support it at this time...\n\nAnd if I was into browser development I too would be **against** it, since you would have to attach rendering attributes to just about every level of the DOM (like) tree... rather ugly and quite difficult... aside from consuming more memory, to hold rendering attributes at every context level... YIKES!!!\n\nBut to play it safe, I have proceeded to implement a `--fix-style-tags` which defaults to **yes**, but not pushed yet... mainly because you reported my [tidy-5.5.31.I567-2-w64-vc14-md.zip](http://geoffair.org/tmp/tidy-5.5.31.I567-2-w64-vc14-md.zip) exe **FAILED**! UGH!!!\n\nIt seems to work on the five samples I have created in my [test](https://github.com/geoffmcl/tidy-test/tree/master/test/input5) repo, see in_567*.html... maybe you can confirm the above `tidy -v = 5.5.31.I567-2` also works for you on these 5 samples... just to be sure I have not fallen out of my tree...\n\nSo it is my turn to say **What am I missing?** ;=))\n\nCan you provide at least one little sample, hopefully the smallest, where it fails... please try to trim it down to the basics...\n\nMaybe I need to do more to fully traverse the tidy DOM like tree... I guess what I have now will miss if the `<style>` is more that 2 child levels deep into a parent node tree... or something...\n\nAm sure I can fix that by **fully** iterating **every** node in the `<body>` tree... if that is the problem... \n\nSo, like I say, still considering an `option`, but it would default to `yes`, so would only be needed by a users that specifically did **not** want this action... could be forgotten by most of us... never used... and maybe removed again when **all** browsers drop support...\n\nBut the first thing is to get it **working fully**, and hope you can help with a **small** sample that fails... thanks...\n. @suchafreak really do not understand why http://geoffair.org/tmp/tidy-5.5.31.I567-2-w64-vc14-md.zip works fine for me. Given your above input, I get the following output -\n\n```\nC:\\Users\\user\\Downloads\\tidy-5.5.31.I567-2-w64-vc14-md>tidy-5.5.31.I567-2-w64-vc14-md in_567-simple.html\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\n\n<!DOCTYPE html>\n<html lang=\"de-CH\">\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.5.31.I567-2\">\n<meta charset=\"UTF-8\">\n<title>A title</title>\n\n<style type=\"text/css\">\n  #someId {\n    right: 0;\n  }\n</style>\n</head>\n<body>\n</body>\n</html>\n```\n\nThat is the `<style>` has been moved to the `<head>`, **silently**...\n\nBut as stated, I do recognize there may be cases where the fix in `5.5.31.I567-2` could fail, and I tried to construct such a sample, and had some **surprises**...\n\nCurrent tidy 5.5.31 will already **fix** the following sample -\n\n```html\n<table>\n<tr>\n<td>\n<style  type=\"text/css\">\n p { color: red }\n</style>\n<p>red text</p>\n```\n\nWith the output:\n\n```html\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nline 1 column 1 - Warning: inserting implicit <body>\nline 4 column 1 - Warning: <style> isn't allowed in <td> elements\nline 3 column 1 - Info: <td> previously mentioned\nline 1 column 1 - Warning: missing </table>\nline 1 column 1 - Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\nTidy found 5 warnings and 0 errors!\n\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.5.31\">\n<style type=\"text/css\">\n p { color: red }\n</style>\n<title></title>\n</head>\n<body>\n<table>\n<tr>\n<td>\n<p>red text</p>\n</td>\n</tr>\n</table>\n</body>\n</html>\n```\n\nSo am still searching for an example that **breaks** my current patch... so I can work on it further...\n\nBut still really **puzzled** why version `5.5.31.I567-2` fails for you, and seems to work ok for me... that is a big **mystery**...\n\nAnyway, will work on this as time permits... thanks...\n\nPS: Found a test case that FAILED! [in_567-7.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_567-7.html), and did some more **fixes**... Still testing, but copied a test http://geoffair.org/tmp/tidy-5.5.31.I567-3-w64-vc14-md.zip... hope you get the chance to test... hopefully reporting success... thanks...\n. @suchafreak thank you for testing the version 3, `5.5.31.I567-3`, and reporting **success**...\n\nI had tested with your given `config` and found no problems... The **only** time this **fix** will be skipped is if you tell tidy to treat the `input` as **xml**, when this, and a **lot** of other `[x]html` cleaning is skipped... \n\nSee [tidyXmlTags](https://github.com/htacg/tidy-html5/blob/next/src/tidylib.c#L2011), where tidy will return from `tidyDocCleanAndRepair` immediately, if this is set... ie if `--input-xml: yes` is given in the config...\n\nReading around it seems `xhtml1`, was effectively the **same** as `html4`, but then the spec moved on to `html5`, which seems to have made `xhtml1` somewhat redundant... so not sure why you are choosing `output-xhtml: true`? Why not just use `html5`? \n\nBut many `blogs` I read sometimes seems somewhat contradictory, or at least unclean, so I guess users are free to choose what they want... the only difference I saw was self closing tags, like `<meta ...` will end in ` />`, and the style tag will be wrapped in `<![CDATA[ ... ]]>`... But I do not think browsers care about such changes...\n\n> Should we also tests files containing even deeper nested structures?\n\nI do not think this is necessary. The way I have re-arranged to **fix**, it iterates through **every** tag in the `<body>`, so the actual depth should now **not** matter... but it never hurts to try and be sure...\n\nI will shortly get around to pushing my latest changes to the `issue-567-2` branch, and set up a PR for further testing...\n\nBut in general, starting to feel good about this **fix**... thanks...\n. All changes pushed to `issue-567-2` branch... hope others get a chance to checkout, pull, and test this branch... thanks...\n. @LWillms have just added a `tidy-5.4.0-w32-mt-XP.zip` to the [binaries](http://binaries.html-tidy.org/)\n\nIt runs fine in my **old** XP machine...\n\nIt would be most appreciated if you could download and test it in `XP` and `Server 2003`... thanks...\n\n. @LWillms glad you found the **new** `32-bit XP Windows` build...\n\nNow I am unsure if we **need** a `64-bit XP Windows` build? Since neither of us have `64-bit XP` we can't test it anyway... I will wait until I get a **specific request**, from a **64-bit XP owner**, so they can test it **first**... I did build it, just not uploaded anywhere yet...\n\nAs I mentioned in the other thread, I think the Tidy `32-bit XP Windows` build will **run** in a `64-bit XP OS` through what MS call `Windows-on-Windows`, or **WoW64**, as they call it in later OSES...\n\nThe reverse, a `64-bit` application will **never** run in a `32-bit` OS!\n\nThere are **some** `32-bit` applications that will **not** run in a `64-bit` OS! That is if they include `32-bit` kernel mode device drivers, or that plug into the process space of components that are implemented purely as 64-bit processes (e.g. Windows Explorer) - they cannot be executed on a `64-bit` platform. See [Wow64](https://en.wikipedia.org/wiki/WoW64), and probably many others, for more details...\n\nBut Tidy is a very simple `32-bit` **service** application, only in `user` mode, and should have no problems in `64-bit` OSES, with `WoW64`, like in my `Windows 10 64-bit`... All the 32-bit Tidy apps I build run in it fine... and this should be the same for your `Windows 7 64-bit`...\n\nI guess we will have to wait-and-see... thanks...\n. WARNING WARNING WARNING\n-----------------------\n\nSee Windows [binary](http://binaries.html-tidy.org/) `tidy-5.4.0-w32-mt-XP.zip`, added recently.\n\n**WARNING**: While some strong effort has been made to provide a `5.4` Windows **`XP`** version of `tidy.exe`, using MSVC14 2015, this has **not** proved completely successful in **all** cases. We do **not** know exactly why!\n\n**Regrettably**, if you have an **`XP`** like system, which seems to include `Windows Server 2003`, and this `tidy.exe` fails to run correctly, for any reason, then you have no other options but to upgrade the system to a later version of Windows, and/or, if you have the capability and tools, maybe build tidy from source in that system...\n\n**Alternatively**, apparently some **older** versions of **`Tidy.exe`**, `5.2` and before, may still run... these were built using the MSVC10 2010 tool...\n\nIf you have this **problem**, then we can only state `HTML Tidy` no longer supports such **old** systems, and will **not accept any issue on the subject! Sorry**!\n\nOn the other hand, we would **love** to hear from you if it does successfully run in **old** systems, as it does in my ancient **`XP`** system... but **not** in the even older `Windows 98`!\n\nSome thought will be given to this for the next `5.6`, and later, releases, and the above positive feedback would help in this, but be **sternly** warned, release `tidy.exe` may not be **compatible** with Windows **`XP`**, and earlier systems!\n\nMaybe this **compatibility** problem should be added to the Tidy website somewhere... suggestions welcome... thanks...\n. With release **5.6** out-the-door, and have included a 32-bit version built with MSVC10, hope this can be closed...\n\nIf not please feel free to re-open, or perhaps file a **new** issue... thanks...\n. @no1xsyzy thank you for your issue, but there are a few things I do **not** understand...\n\nYou did **not** give the version of Tidy used? The **new** option `--custom-tags yes` was only available from about 5.5.7, Mar 19, 2017... see [custom-tags](http://api.html-tidy.org/tidy/quickref_next.html#custom-tags)...\n\nNor did you give the configuration used?\n\nSo you say `Expected: No warnings or errors were found.`, but the sample given has **no** DOCTYPE so that is at least 1 warning, unless you add `--show-body-only yes`...\n\nThen unless you are using a tidy later than 5.5.7, and added a config of `--custom-tags yes`, you will get an **error**, which is very clear, and explicit -\n\n```\nline 37 column 3 - Error: <demo-grid> is not recognized! Did you mean to enable the custom-tags option?\n```\n\nBut even if you enable these two option, you will still get warnings about the attributes -\n\n```\nline 37 column 3 - Warning: <demo-grid> attribute name \":data\" (value=\"gridData\") is invalid\nline 37 column 3 - Warning: <demo-grid> attribute name \":columns\" (value=\"gridColumns\") is invalid\nline 37 column 3 - Warning: <demo-grid> attribute name \":filter-key\" (value=\"searchQuery\") is invalid\nline 35 column 12 - Warning: <input> proprietary attribute \"v-model\"\n```\n\nI do not know any option to suppress the above warnings, but maybe I missed something... maybe other feedback would help...\n\nMaybe we missed something, like attributes commencing with a `:` character can follow a `custom element`? Are there some reference links on that?\n\nSo if your issue `Html 5 components support` is about `custom tag/element` support, then please read #119, PR #514, maybe #225, and maybe others...\n\nBut with more information, we may be able to help more... thanks..\n. @skynet you mean other than http://binaries.html-tidy.org/release_notes/5.4.0.html?\n\nThis of course is really just `$ git log since-a-date`, massaged a little...\n\nIt would be quite some work to extract the information, and present a neat summary of important changes, but could be done... \n\nAny offers? thanks...\n. @skynet at least now added the [Release Notes](http://binaries.html-tidy.org/release_notes/5.4.0.html) link to [Releases](https://github.com/htacg/tidy-html5/releases)...\n\nHTH.... @suchafreak thank you for your issue...\n\nWell, it seems the `addition` of a **id** attribute when tidy finds a **name** attribute, in an `anchor`,  has been the action of tidy for a long, **LONG** time... not that that in itself means anything... \n\nBut not quite sure why that includes `<form>`, but it does...\n\nAnd then `--anchor-as-name false` option just removes the **name** attribute, as the [docs](http://api.html-tidy.org/tidy/quickref_next.html#anchor-as-name) implies...\n\n> The form tag is not an anchor element and should therefore be unaffected by `anchor-as-name` \n\nAs you suggest, the first thing seems to be to understand why `<form>` got included. In tests it does **not** seem to act as an `anchor`, so why is it changed, but not say `<p name=\"para\">Para</p>`...\n\nBut of course `name` is not a valid attribute of `<p>`... is that it, all elements that support the **name** attribute are effected?\n\nWill do some research... any pointers in the code or docs appreciated... thanks...\n. Need to re-look at what is desired/required here, but meantime moving out the milestone...\n. @emilycrutcher thank you for the issue...\n\nYes, it looks like somewhere between version 5.3.0, Apr 7, 2016, and 5.3.4, Jun 30, 2016, tidy **lost** the ability to detect and **fix** this case...\n\nThe correct output of 5.3.0, using your sample html snippet, with `--show-body-only yes`, is -\n\n```html\nF:\\Projects\\tidy-test\\test>tidy5-5.3.0 --show-body-only yes -i input5\\in_572.html\nline 3 column 4 - Warning: missing <li>\nInfo: Document content looks like HTML5\nTidy found 1 warning and 0 errors!\n\n<ol>\n  <li>first item\n    <ol>\n      <li>first sub item</li>\n    </ol>\n  </li>\n  <li>second item</li>\n</ol>\n```\n\nFrom 5.3.4, up until the present 5.5.31, so that includes release 5.4.0, the output is invalid, as you showed...\n\nWill see what I can do tracking down the commit, or commits, that caused this, and **fixing** it again...\n\nUnless someone beats me to it... thanks...\n. @emilycrutcher thank you for your kind words, but have now tracked down the commit b704a4d0d4587c that caused this problem... and while the commit is by @rtack, through a merge, it was a patch I suggested...\n\nThis was an attempt to **fix** issue #396, but now see it as **wrong**, or at least **incomplete**, so while the patch to **fix** this issue is to simply remove that **fix**, that would re-open #396, so now they must be considered together...\n\nTidy is in a service `TY_(ParseList)(TidyDocImpl* doc, Node *list, ...)`... In this case we have already had one valid `<li>`, ie done in `ParseBlock`... Now we have another start list, `<ol>` in this case...\n\nThe issue #396 is that, in html5, a list can have zero `<li>`, but here we have had one, so this should **not** apply... so have some ideas to add...\n\n```diff\ndiff --git a/src/parser.c b/src/parser.c\nindex a037280..be07b29 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -2435,6 +2435,7 @@ void TY_(ParseList)(TidyDocImpl* doc, Node *list, GetTokenMode ARG_UNUSED(mode))\n     Lexer* lexer = doc->lexer;\n     Node *node, *parent, *lastli;\n     Bool wasblock;\n+    Bool nodeisOL = nodeIsOL(list);\n\n #if !defined(NDEBUG) && defined(_MSC_VER)\n     in_parse_list++;\n@@ -2452,6 +2453,7 @@ void TY_(ParseList)(TidyDocImpl* doc, Node *list, GetTokenMode ARG_UNUSED(mode))\n\n     while ((node = TY_(GetToken)( doc, IgnoreWhitespace)) != NULL)\n     {\n+        Bool foundLI = no;\n         if (node->tag == list->tag && node->type == EndTag)\n         {\n             TY_(FreeNode)( doc, node);\n@@ -2521,10 +2523,16 @@ void TY_(ParseList)(TidyDocImpl* doc, Node *list, GetTokenMode ARG_UNUSED(mode))\n             continue;\n         }\n\n-        if ( nodeIsLI(node) || TY_(IsHTML5Mode)(doc))\n+        if ( !nodeIsLI(node) && nodeisOL )\n         {\n-            /* node is <LI> \n-               Issue #396 - A <ul> can have Zero or more li elements\n+            /* Issue #572 - A <ol><li> can have nested <ol> elements */\n+            foundLI = FindLastLI(list, &lastli); /* find last <li> */\n+        }\n+\n+        if ( nodeIsLI(node) || (TY_(IsHTML5Mode)(doc) && !foundLI) )\n+        {\n+            /* node is <LI> OR\n+               Issue #396 - A <ul> can have Zero or more <li> elements\n              */\n             TY_(InsertNodeAtEnd)(list,node);\n         }\n```\n\nThis seems to fix this issue, but still to re-test #396... have pushed this change to an `Issue-572` **branch**...\n\nAnd need to think about this some more, and experiment... and hope others get the chance to checkout this branch and test... be back soonest, unless someone beats me to it... thanks...\n. @emilycrutcher - your `thanks` are a little premature... but `thanks`... ;=))\n\nI have now had a chance to run our [regression tests](https://github.com/htacg/tidy-html5-tests), using the tidy 5.5.31.I572, built from the 'issue-572' branch, and it **fails** on test `case-1773932` - UGH!\n\nThis is the ongoing **game** with tidy - to make a **fix** such that it does **not** cause a **regression**... so still more to do on this issue, to get back the previous **good** behavior, and not **break** something else in the process...\n\nWill continue to chip away at it... any help, ideas, feedback, patches, PR, ... very welcome... thanks...\n\nPS: If you email reply to an issue, please scrub **all** the incoming text, since that is already available here... but not a big problem... just repetitive text... thanks...\n. @emilycrutcher pushed another patch to the 'issue-572' branch...\n\nNow tidy 5.5.31.I572, built from the 'issue-572' branch, **passes** on tests -\n\n 1. [case-1773932](https://github.com/htacg/tidy-html5-tests/blob/next/cases/testbase/case-1773932.html), as part of the regression tests...\n\n 2. [in_572.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_572.html), and several others added there, **and**\n\n 3. [in_396.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_396.html), and several others...\n\n**BUT** the fix feels like a huge kluge, awkward... will continue to look for a better fix...\n\nBut meantime, hope people can `checkout` this **issue-572** and test it to death... thanks...\n. @emilycrutcher thank you for the feedback and questions...\n\n - Whitespace question\n\nThe patch only checks the internal `lexer` character buffer, and this string has already been converted from the input charset, what ever that is, utf-8 being the default, into tidy's internal 32-bit character code, so I think it could only ever be a `' '`, `'\\n'` or `'\\t'`... all other space chars would have been dropped, and not made it to this internal `lexer` buffer...\n\nIn fact, it is only due to another change that returned this space only text in the first place... there were times we need to know about a protential space like in -\n\n```html\n<p>This<strong>\nword</strong></p>\n```\n\nOlder version of tidy, like 5.0.0, would render that as -\n\n```html\n<p>This<strong>word</strong></p>\nthat is the 'space' is lost, instead of\n<p>This <strong>word</strong></p>\n```\n\nSo I am fairly sure the patch would **not** have to deal with other **space** chars... but thanks for thinking of it...\n\n - Test Question\n\nWell, yes, the formal regression tests, ie as in https://github.com/htacg/tidy-html5-tests, do offer the expected results... But here I was only pointing to my own `informal` test repo, where I do not provide the expected results in many cases...\n\nIf any of my informal tests are eventually added to the `official` regression tests, then yes, an expected result would also be offered...\n\nI have now setup a PR #577 to merge this patch... testing and feedback welcome... thanks...\n. @truongminhlong1988 I am not sure I understand your question exactly... if seems you want to drop `<?php ... ?>` tags, ie `node->type == PhpTag`, from a file...\n\nWell the current console app, `tidy` does **not** have such an option... so that would be a `feature request` to add a **new** option... but I would question the **use case**...\n\nBut you say you are using C++... does that mean you are building an app using **`libtidy`**?\n\nIf that is the case, then **yes**, you can scan through the nodes, and **drop** any `node` you do not want to keep with [tidyDiscardElement](http://api.html-tidy.org/tidy/tidylib_api_next/group__Tree.html#gaa1157e1d6f918885ed790b558d88f7a6), before outputting the results... simple...\n\nHTH. Please explain more if I missed the point... thanks...\n. @onlyanegg unfortunately tidy has **no** option to `ignore` lines in the input data...\n\nBut a quick read of the curl `--help` suggests it will **not** output the http header information if you remove the `-i` curl option...\n\nMaybe there is a curl option to write the http headers to a file, instead of stdout, or maybe write the body data to a file, and pass that to tidy... or...\n\nHTH...\n. @jacksonp I sort of understand what you say with -\n\n> Dropping empty elements isn't always safe, I think doing this by default violates the principle of least astonishment :)\n\nBut that would only apply to **new** or **newer** users of `Tidy`... \n\nOn the other hand if you were a veteran user, reaching back up to 10 years, then you would be **shocked** if tidy did **not** drop empty elements ;=))\n\nIn fact the last sf cvs release, circa 2009, trimmed empty elements, and offered **no** option to avoid this...\n\nI am not sure when the `drop-empty-elements` option was added, but it was offered in a solution to issue #35 of May 2012, so sometime before that... it was certainly **not** present in the last SF cvs source, circa 2009...\n\nI am also a little puzzled by the warnings about `<span>` and `</button>` you showed output by version 5.4.0... It does not seem these are present in the current tidy, so maybe there are later fixes for those -\n\n```html\nF:\\Projects\\tidy-test\\test>tidy5 --drop-empty-elements no -i input5\\in_575.html\nline 4 column 1 - Warning: inserting implicit <body>\nInfo: Document content looks like HTML5\nTidy found 1 warning and 0 errors!\n\n<!DOCTYPE html>\n<html>\n<head>\n  <meta name=\"generator\" content=\n  \"HTML Tidy for HTML5 for Windows version 5.5.31\">\n  <title>Tidy Test</title>\n</head>\n<body>\n  <form>\n    <div class=\"typeahead__container\">\n      <div class=\"typeahead__field\">\n        <span class=\"typeahead__query\"><input class=\"js-typeahead\"\n        name=\"q\" type=\"search\" autocomplete=\"off\"></span>\n        <span class=\"typeahead__button\"><button type=\n        \"submit\"><span class=\n        \"typeahead__search-icon\"></span></button></span>\n      </div>\n    </div>\n  </form>\n</body>\n</html>\n```\n\nAnyway, look forward to other feedback... maybe it is time to change this default... what do others think? Thanks...\n\nOT: Can anyone help me with this type of history search? Is there some way to know exactly what commit added \"drop-empty-elements\" to the big table in `config.c`? There should be a way, but I do not know it... any help appreciated... thanks...\n. OT: Just concerning the `history` search, found a solution, in two steps -\n\n - Make a 'git log' list, and search this...\n - Make a 'git show COMMIT' list, for each commit in the above, and search this...\n\nIn this case `drop-empty-elements` can be found in the 'git log' list, as -\n\n```\ncommit bf1c2f67a91c8ecc349a41a01c7d13debcafda67\nAuthor: Michael[tm] Smith <mike@w3.org>\nDate:   Thu Mar 15 10:58:10 2012 +0900\n\n    Added drop-empty-elements options. Fixes #19.\n```\n\nBut if this was not sufficient information on the actual diff that added the option, then this can be found in the much bigger second list... where the **full** applicable diff can be found -\n\n```diff\ndiff --git a/include/tidyenum.h b/include/tidyenum.h\nindex a125bce..1cef305 100644\n--- a/include/tidyenum.h\n+++ b/include/tidyenum.h\n@@ -126,6 +126,7 @@ typedef enum\n   TidyLogicalEmphasis, /**< Replace i by em and b by strong */\n   TidyDropPropAttrs,   /**< Discard proprietary attributes */\n   TidyDropFontTags,    /**< Discard presentation tags */\n+  TidyDropEmptyElems,  /**< Discard empty elements */\n   TidyDropEmptyParas,  /**< Discard empty p elements */\n   TidyFixComments,     /**< Fix comments with adjacent hyphens */\n   TidyBreakBeforeBR,   /**< Output newline before <br> or not? */\ndiff --git a/src/config.c b/src/config.c\nindex 6eb8287..95c3394 100644\n--- a/src/config.c\n+++ b/src/config.c\n@@ -251,6 +251,7 @@ static const TidyOptionImpl option_defs[] =\n   { TidyLogicalEmphasis,         MU, \"logical-emphasis\",            BL, no,              ParseBool,         boolPicks       },\n   { TidyDropPropAttrs,           MU, \"drop-proprietary-attributes\", BL, no,              ParseBool,         boolPicks       },\n   { TidyDropFontTags,            MU, \"drop-font-tags\",              BL, no,              ParseBool,         boolPicks       },\n+  { TidyDropEmptyElems,          MU, \"drop-empty-elements\",         BL, yes,             ParseBool,         boolPicks       },\n   { TidyDropEmptyParas,          MU, \"drop-empty-paras\",            BL, yes,             ParseBool,         boolPicks       },\n   { TidyFixComments,             MU, \"fix-bad-comments\",            BL, yes,             ParseBool,         boolPicks       },\n   { TidyBreakBeforeBR,           PP, \"break-before-br\",             BL, no,              ParseBool,         boolPicks       },\ndiff --git a/src/localize.c b/src/localize.c\nindex 9823f12..b47870a 100644\n--- a/src/localize.c\n+++ b/src/localize.c\n@@ -425,6 +425,9 @@ static const TidyOptionDoc option_docs[] =\n    \"<code>--numeric-entities yes</code>. This option does not offer a \"\n    \"validation of the document conformance. \"\n   },\n+  {TidyDropEmptyElems,\n+   \"This option specifies if Tidy should discard empty elements. \"\n+  },\n   {TidyDropEmptyParas,\n    \"This option specifies if Tidy should discard empty paragraphs. \"\n   },\ndiff --git a/src/parser.c b/src/parser.c\nindex aad2d14..46d1728 100644\n--- a/src/parser.c\n+++ b/src/parser.c\n@@ -240,6 +240,9 @@ void TY_(InsertNodeAfterElement)(Node *element, Node *node)\n\n static Bool CanPrune( TidyDocImpl* doc, Node *element )\n {\n+    if ( !cfgBool(doc, TidyDropEmptyElems) )\n+        return no;\n+\n     if ( TY_(nodeIsText)(element) )\n         return yes;\n``` \n\nBut as indicated, this is **OFF TOPIC** - just for information... but does point to more discussion in #19, and maybe some other issues referenced there, or elsewhere...\n\n**Still seek further feedback on changing this default**... Thanks...\n. @svinkle thank you for the issue and blog link, but unsure what you want tidy to do?\n\nWhile all, or most of, the `aria-xxxx` attributes are now supported, there is certainly presently **no** checks in tidy that the 3 attributes you mentioned are only used on the elements you mentioned...\n\nFor example, tidy, like the current W3C nu validator, will **not** flag a warning for say `<div aria-labelledby=\"l1\">`, if that is what you suggest...\n\nWhile tidy does do some level of attribute checking, but only for certain elements and some attributes... very **far from all**... \n\nAnd I am not sure tidy will ever get into such strict, full attribute checking, but look forward to further feedback and ideas... thanks...\n. Although no further comments in a while, maybe this is still open, so moving out the milestone...\n. @truongminhlong1988 thanks for your question...\n\nUnfortunately, tidy has **no** configuration option to **stop** it adding `implicit` tags. That is what you have called `auto generated` tags. Some of these are added during `tidyParseString`, as you point out...\n\nAnd potentially more could be added in `tidyCleanAndRepair`, and/or `tidyRunDiagnostics`, which you left out of your sample code... see full api [sample](http://api.html-tidy.org/tidy/tidylib_api_next/libtidy_04.html)...\n\nSince one of the aims of **`libtidy`** is to **fix** badly formed html, we would be unlikely to add an option which would potentially generate badly formed, or incomplete, **html**... that seems against the purpose of the tool...\n\nWow, your sample is a **crazy**, potentially dangerous, ASP app, but we do not need that to demonstrate this addition of `implicit` tags. Run tidy on a simple html snippet like `<h1>Hello World</h1>` will do that...\n\nBut since you are planning to use the library in a C++ app, you could iterate through tidy's DOM like tree, using say this [sample](http://api.html-tidy.org/tidy/tidylib_api_next/group__Tree.html) code, and thus ignore any node you do not want... thus producing your own output...\n\nWhat follows is my **DEBUG** output of the node tree, using the above html snippet, before and after `tidyCleanAndRepair` -\n\n```\nAll nodes BEFORE clean and repair\nRoot\n StartTag html implicit\n  StartTag head implicit\n   StartTag title implicit\n  StartTag body implicit\n   StartTag h1\n    Text   (11) 'Hello World'\nAll nodes AFTER clean and repair\nRoot\n DocType   PUBLIC\n StartTag html implicit\n  StartTag head implicit\n   StartTag meta implicit  name=\"generator\" content=\"HTML Tidy for HTML5 for Windows version 5.5.31\"\n   StartTag title implicit\n  StartTag body implicit\n   StartTag h1\n    Text   (11) 'Hello World'\n```\n\nSee the `dbg_show_node` service... and note all `auto generated` tags are marked as **implicit**... \n\nAlso note closing tags are **not** included in the Tidy tree... these are implied, as appropriate, by the indentation... \n\nSo a **lot** more could be done code wise if you coded sort of an extension to the library for yourself... That is not link to the completed pre-built library, but included the library modules as part of your app... if you see what I mean...\n\nAnyway, good luck, and HTH...\n. @truongminhlong1988 well the W3C [nu](https://validator.w3.org/) java validator [source](https://github.com/validator/validator) is available... so you can build and run the `nu.jar` locally...\n\nNot exactly a linkable **library**... but could maybe be converted...\n\nAnd it also has a web API... this python3 script [html5check.py](https://gist.github.com/akamch/1430166) written a few years ago... makes it easy...\n\nThere are probably others out there, but are not familiar to me... maybe others can help with this question... thanks...\n. @ogolovanov thank you for your issue, but do not understand what you expect tidy to do?\n\nAs far as I know, a `<script>`, within a `<script>` is **not** valid javascript, and probably **not** valid html...\n\nCertainly, when tidy enters a `<script>`, it suspends any html decoding, and is only searching for the close, namely `</script>`, which it found... then it found a second one, so it gives a warning...\n\nReally, what else would you expect tidy to do in this case?\n\nIt can **not** see the `<!--` as the beginning of a comment! It is in reading a **script**, only searching for the close, `</script>`. \n\nAnd I am very sure the javascript interpreter would also see `<!-- <script>..` as an error... certainly not valid javascript... a comment in javascript is preceded by `//` or `/* ... */` block, but those are also **not** seen by tidy...\n\nGiven this **invalid** input, it seems tidy has done the **best** it can, so sorry, I do not see anything to **fix** here...\n\nYou indicate v5.4, but this is the same in the latest 5.5.31 version. This is the output given your sample, and the default configuration -\n\n```html\nF:\\Projects\\tidy-test\\test>tidy5 input5\\in_580.html\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nline 6 column 1 - Warning: discarding unexpected </script>\nline 2 column 1 - Warning: inserting missing 'title' element\nTidy found 3 warnings and 0 errors!\n\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.5.31\">\n<title></title>\n</head>\n<body>\n<script>\n<!-- <script>\n</script> --&gt;\n</body>\n</html>\n```\n\nAs indicated, please maybe explain more if you think the output should be different, but understand tidy does **not** read javascript... it treats all as transparent text until a `</script>`, is found... thanks...\n. @shentino thanks for your question...\n\nThat extra line space is what is called `classic` mode, and is enabled by the option **--vertical-space yes**\n\nTesting your sample, I get output -\n\n```html\nF:\\Projects\\tidy-test\\test>tidy-5.5.31 -i --vertical-space yes --show-body-only yes input5\\in_581.html\nNo warnings or errors were found.\n\n<ul>\n  <li>foo</li>\n\n\n  <li>bar</li>\n\n\n  <li>baz</li>\n</ul>\n```\n\nNote the use of 3 back-ticks to suspend html interpretation in these issues... rather that using entities `&lt;` and `&gt;`...\n\nActual this looks like it added **two** newlines, which feels like a bug...\n\nHTH.\n. @shentino well configuration options can only be used **one** of **two** ways -\n\n 1. command line = preceded by two `--`, then option, plus a space, then the value\n 2. in config file = option followed by colon, `:`, optional space and value\n\nNote, neither method has an equal sign, `=`, and the **value** will depend on the `type` of option -\n\n - Boolean = value can be `y/n`, `yes/no`, `t/f`, `true/false`, `1/0`\n - AutoBool = value can be a `boolean` value, or `auto`\n - String = value will be a string\n - Enum = value will be one of an enumerated string\n\nCan not immediately find where this is spelled out in the tidy [docs](http://api.html-tidy.org/), but it is clearly stated in the unix `man` file, because there is another type of command line option with a single dash, `-`, like say `-i`, which is the same as `--indent auto`, or `indent: auto` in a config file...\n\nAnd you have to be **careful** with the use of double quotes. Adding `\"--vertical-space yes\"` will probably be ignored, because the double quotes would combine them into one option, when it should be `--option <space> value`, if you see what I mean...\n\nSo ok, you have learned `--vertical-space yes` works, **but** it presently adds **two** new lines, and as I mentioned that feels like a **bug**... that so called `classic` mode should only add one newline, in certain places, to preserve the prior tidy5 output...\n\nI will try to get around to adding an issue for this, if you do **not** beat me to it... thanks...\n\nBut we have to document and verify that this `classic` mode, that is `--vertical-space yes`, or `vertical-space: yes` in a config file, also works on the `<p>` element, and maybe some others... maybe there are other subtle `pretty print` bugs here... thanks...\n. @shentino discussion moved to #582, so closing this...\n. @shentino thank you for this issue... as you suggest, it has been around for a while... \n\nProbably even since the `vertical-space` option was expanded from a simple boolean type, to an autoboolean type, and `PCondFlushLineSmart( doc, indent );` and `TY_(PFlushLineSmart)( doc, indent );` were introduced... see commit f6979787d150080e98e8e4b457fda9ec9439ec95, circa Jul 13, 2015...\n\nNote that `--vertical-space auto` is a **special** case where nearly **all** newlines are **removed** from the output... see #231, but started in #228, and several other cross-referenced issues...\n\nThese need to be read, reviewed to appreciate this vertical space issue...\n\nBut `--vertical-space yes` is also mixed up with the **indent** option...\n\nGiven a simple input:\n\n```html\n<ul>\n  <li>foo</li>\n  <li>bar</li>\n  <li>baz</li>\n</ul>\n```\n\nWith a config of `--show-body-only yes --show-info no --vertical-space yes` I get an output of -\n\n```html\nF:\\Projects\\tidy-html5\\build\\win64>tidy5 --show-body-only yes --show-info no --vertical-space yes F:\\Projects\\tidy-test\\test\\input5\\in_581.html\nNo warnings or errors were found.\n\n<ul>\n<li>foo</li>\n\n<li>bar</li>\n\n<li>baz</li>\n</ul>\n```\n\nWhich is perfect. A single newline is added...\n\nNow I add `-i` indent and get -\n\n```html\nF:\\Projects\\tidy-html5\\build\\win64>tidy5 -i --show-body-only yes --show-info no --vertical-space yes F:\\Projects\\tidy-test\\test\\input5\\in_581.html\nNo warnings or errors were found.\n\n<ul>\n  <li>foo</li>\n\n\n  <li>bar</li>\n\n\n  <li>baz</li>\n</ul>\n```\n\nSo, in this case, it is the additional interaction with the `--indent auto` option that seems to add an additional newline...\n\nThat might be a clue to look for where this **extra** newline is added...\n\nWe need to also test `<p>`, `<dt>`, `<dd>`, ... and any other **elements** effected by this...\n\nAppreciate any comment, patches or PR on this... thanks...\n. @shentino Ok, I can sort of see where it happens... all in pprint.c module...\n\n[Line 2349](https://github.com/htacg/tidy-html5/blob/next/src/pprint.c#L2349) does a `TY_(PFlushLineSmart)( doc, indent );` if **classic** mode... We have already output `[indent]<li>foo</li>\\n`, per [Line 2451](https://github.com/htacg/tidy-html5/blob/next/src/pprint.c#L2451), and this adds a **second** newline...\n\nWe sort of have what we want... that is an **extra** newline, if **classic** mode...\n\nBut then a little later, [Line 2364](https://github.com/htacg/tidy-html5/blob/next/src/pprint.c#L2364), if **indent: auto**, that is `indsmart`, **and** `classic` **both** are on, then the **third** newline is added...\n\nMaybe this **third** newline is no longer required, and can be removed... but maybe this is not the problem...\n\nPerhaps someone will get the chance to comment out 2364 and 2365 and run some tests, and show the results... we would also need to conduct the full [regression](https://github.com/htacg/tidy-html5-tests) tests... thanks...\n. @shentino have pushed a fix to the **issue-582** `branch`... check it out...\n\n```\n$ cd tidy-html5\n$ git pull\n$ git checkout issue-582\n$ cd build/cmake\n$ ./build-me.sh\n```\n\nAs a sample test case, try [in_582-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_582-1.html) using config [cfg_582-1.txt](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/cfg_582-1.txt)...\n\nAs suspected, just removing lines 2364-2365 did the trick - patch -\n\n```diff\ndiff --git a/src/pprint.c b/src/pprint.c\nindex 68e8d44..87568b0 100644\n--- a/src/pprint.c\n+++ b/src/pprint.c\n@@ -2340,7 +2340,8 @@ void TY_(PPrintTree)( TidyDocImpl* doc, uint mode, uint indent, Node *node )\n         else /* other tags */\n         {\n             Bool indcont  = ( cfgAutoBool(doc, TidyIndentContent) != TidyNoState );\n-            Bool indsmart = ( cfgAutoBool(doc, TidyIndentContent) == TidyAutoState );\n+            /* Issue #582 - Seems this is no longer used\n+               Bool indsmart = ( cfgAutoBool(doc, TidyIndentContent) == TidyAutoState ); */\n             Bool hideend  = cfgBool( doc, TidyOmitOptionalTags );\n             Bool classic  = TidyClassicVS; /* #228 - cfgBool( doc, TidyVertSpace ); */\n             uint contentIndent = indent;\n@@ -2360,9 +2361,11 @@ void TY_(PPrintTree)( TidyDocImpl* doc, uint mode, uint indent, Node *node )\n              *  Issue #180 - with the above PCondFlushLine, \n              *  this adds an uneccessary additional line!\n              *  Maybe only if 'classic' ie --vertical-space yes \n+             *  Issue #582 - maybe this is no longer needed!\n+             *  It adds a 3rd newline if indent: auto...\n+             *  if ( indsmart && node->prev != NULL && classic)\n+             *   TY_(PFlushLineSmart)( doc, indent );\n             \\*/\n-            if ( indsmart && node->prev != NULL && classic)\n-                TY_(PFlushLineSmart)( doc, indent );\n\n             /* do not omit elements with attributes */\n             if ( !hideend || !TY_(nodeHasCM)(node, CM_OMITST) ||\n```\n\nHave done a full regression test and it passes...\n\nLook forward to further feedback... thanks...\n. @shentino, since @balthisar has merged PR #583, thanks, this seems to have fixed this so closing...\n\nAnd note you have openned #596 to cover other vertical space matters... thanks...\n. @shentino thanks for your question...\n\nThe short answer if **NO**, there is **no** default config file...\n\nBut one can be set with the environment variable `HTML_TIDY`...\n\nThe relevant code in `console/tidy.c` is -\n\n```\n    if ( (cfgfil = getenv(\"HTML_TIDY\")) != NULL )\n    {\n        status = tidyLoadConfig( tdoc, cfgfil );\n        if ( status != 0 ) {\n            fprintf(errout, tidyLocalizedString( TC_MAIN_ERROR_LOAD_CONFIG ), cfgfil, status);\n            fprintf(errout, \"\\n\");\n        }\n    }\n```\n\nAnd if you compile console `tidy` from source, then a **default** config file **can** be compiled into the app, through either `TIDY_CONFIG_FILE`, through the code -\n\n```\n#ifdef TIDY_CONFIG_FILE\n    if ( tidyFileExists( tdoc, TIDY_CONFIG_FILE) )\n    {\n        status = tidyLoadConfig( tdoc, TIDY_CONFIG_FILE );\n        if ( status != 0 ) {\n            fprintf(errout, tidyLocalizedString( TC_MAIN_ERROR_LOAD_CONFIG ), TIDY_CONFIG_FILE, status);\n            fprintf(errout, \"\\n\");\n        }\n    }\n#endif /* TIDY_CONFIG_FILE */\n```\n\nor through `TIDY_USER_CONFIG_FILE` -\n\n```\n#ifdef TIDY_USER_CONFIG_FILE\n    if ( (cfgfil = getenv(\"HTML_TIDY\")) != NULL )\n    {\n        // as above\n    }\n    else if ( tidyFileExists( tdoc, TIDY_USER_CONFIG_FILE) )\n    {\n        status = tidyLoadConfig( tdoc, TIDY_USER_CONFIG_FILE );\n        if ( status != 0 ) {\n            fprintf(errout, tidyLocalizedString( TC_MAIN_ERROR_LOAD_CONFIG ), TIDY_USER_CONFIG_FILE, status);\n            fprintf(errout, \"\\n\");\n        }\n    }\n#endif /* TIDY_USER_CONFIG_FILE */\n```\n\nAnd note the **order** -\n\n 1. TIDY_CONFIG_FILE\n 2. Env HTML_TIDY, **or**\n 3. TIDY_USER_CONFIG_FILE\n\nAnd note the command line can also load a `-config <file>`, and the **last** config loaded prevails...\n\nHTH.\n. @shentino ok, have added `Feature Request`, but not sure how much traction it will have...\n\nFirst, any person that builds tidy from source can already build such a **beast** for themselves, just by setting `TIDY_CONFIG_FILE` **and** `TIDY_USER_CONFIG_FILE` during the compile... that is add -\n\n```\n$ cd build/cmake\n$ cmake ../.. -DTIDY_CONFIG_FILE=/etc/tidy.conf [more options]\n$ make\n```\n\nand bingo, it is done...\n\nBut also note, at present, setting `HTML_TIDY` in the environment will override any configured `TIDY_USER_CONFIG_FILE`... but that could be changed by removing the appropriate `else` in the code...\n\nThe second thing would be to decide what to do for the Windows build. Windows does not have a commonly accepted configuration folder like `/etc/`, and does **not** have a `$HOME` environment variable...\n\nIn modern Windows systems, while it is disputed by some, `$HOME` is generally accepted to be `%USERPROFILE%`, or a combination of `%HOMEDRIVE%%HOMEPATH%`, which will normally be `C:\\Users\\<user>\\`... but have seen other projects also use `%APPDATA%`, ie `C:\\Users\\<user>\\AppData\\Roaming`... or `%LOCALAPPDATA%`, ie `C:\\Users\\<user>\\AppData\\Local`...\n\nAnd a `global` thing like `/etc/` is probably `%ProgramData%`, or `%ALLUSERSPROFILE%`, usually `C:\\ProgamData`, usually in a project name subdirectory...\n\nBut asside from this **choice** in Windows, where there is **no** strong established tradition for this, I have found this type of `built-in` config and/or rc file can be very **confusing** later... \n\nThat is someone sets up a `/etc/tidy.conf` and/or a `$HOME/.tidyrc`, and over time **forgets** that they are effecting **every** run of tidy... leading to testing **confusion**... have seen this many times in other projects over the years... it is very hard to keep such silent behaviour **modifiers** in mind...\n\nSo you can see in general, I am not 100% for this feature, especially since it can already be done for your **own** build, and we do have the **enviroment** variable `HTML_TIDY`, but would be willing to listen to what others want...\n\nLook forward to further feedback on this... thanks...\n\nOT: Just a heads up - I will shortly be on vacation, without full computer access, until the middle of September...\n. Accidentally posted my comment to #603, but is related, so will leave the mistake as is... \n. @shentino as you have pointed out this wrapping empty elements to a new line is what is call tidy's `classic` behaviour... \n\nThe original founders of tidy were in **love** with adding a **lot** of vertical space to the pretty print output... so in respect for this we have kept `--vertical-space yes` to signal this is what you want, expect and **like**... extra vertical space in the output...\n\nAnd no, issue #582, now fixed, merged, was where `classic` mode even added a **3rd** newline in some circumstance, a **bug**, so is not really related... except in the vertical space sense...\n\nIt has to be understood, the `pretty print output` comes down to a **lot** of **different** personal preferences, and tidy could **never** please everybody! But it does have a lot of options to try as best it can to be **acceptable** to all...\n\nSo this is certainly **not** a **bug**. It is designed behaviour. But thanks for pointing it out...\n\nSo closing this, but feel free to re-open, or add a new issue... thanks...\n. @shentino have you tried `--vertical-space no`? This is in fact the default value...\n\nAn even more interesting one, to avoid line-splitting just about every tag, try `--vertical-space auto`... sometimes combined with `-w 0`...\n\nHTH.... @JohnArcher as you can read in several other posts, I am **all for** trying to do this... and have done it for certain versions, to make it easy for others to get and try a specific version, now and again... but...\n\nIt becomes more **where** to put them? And how and when?\n\nThe obvious place might seem to be [Releases](https://github.com/htacg/tidy-html5/releases)... you will note at present there are **seven**, and one of these is actually a **next** marked as `Pre-release` 5.1.14...\n\nBut this has the **BIG** problem that it requires adding a **tag**, but I wanted to keep **tags** `only` for `official` releases, like we have `5.0.0`, `5.2.0`, `5.4.0`, and hopefully `5.6.0` soon - **note** the **even** numbers...\n\nI suppose ideally we could create a `Pre-release` tag every time we **bump** the version number, but this has big problems that (1) we would have to remember to go back and delete older `next` tags, otherwise it seems we would get a too big, confusing list, and (2) this creating a tag, setting up a `pre-release`, and adding binaries, is a **big** manual task... a drag and drop process...\n\nMaybe this can be achieved through the github api? Do not know... any pointers?\n\nAnd just checking, it seems it is also quite a number of **manual steps** in doing the deletes...\n\nWhile it is agreed some of this could be semi-automated via scripts - I would try to look after a Windows `next` release zip, maybe both 64 and 32 bit, and maybe a unix Ubuntu deb and rpm, and @balthisar with  something for the macOS... \n\nBut as he points out, building them for every version bump, which can be each week, or even more frequently in some cases, would be quite **time consuming**... quite an extra burden...\n\nSo while I started out being all for this, I am sort of talking myself out of it, due the **big extra manual effort** involved...\n\nThus it feels like the `github.com` release system is **too much effort** each time for `next`...\n\nIt is agreed, maybe we should try to increase the official release cycle... I did want to try for at least twice a year, but have not been able to achieve that...\n\n**Are there other ideas?**\n\nAs a developer, I have over 150 Windows versions available, so I can easily do backward testing... like -\n\n```\ntidy-2000.exe                     tidy-2004.exe                     tidy-2009.exe\n... etc ...\ntidy5-5.5.13.exe                  tidy5-5.5.14.exe                  tidy5-5.5.15.exe\ntidy5-5.5.16.exe                  tidy5-5.5.17.exe                  tidy5-5.5.18.exe\ntidy5-5.5.2.exe                   tidy5-5.5.20.exe                  tidy5-5.5.21.exe\ntidy5-5.5.24.exe                  tidy5-5.5.27.exe                  tidy5-5.5.31-1.exe\ntidy5-5.5.31.exe                  tidy5-5.5.31.I567.exe             tidy5-5.5.31.w32-vc14-mt-xp.exe\n```\n\nCould I just maybe zip these and copy them to say my [site](http://geoffair.org/tidy/), like I used to do **years** ago? Last was sort of 2012... \n\nIs there another site, that could be used?\n\nThe idea would be to add a little to my build scripts, and as I build each `new` version, it is like `scp'ed`, or some other `copy` tool, to the site... all done...\n\nOf course the other idea is that people should be encouraged to **build tidy from source**... this has long been the `tradition` in linux, and given tidy's very minimal dependance is quite easy to achieve in Windows using `free` MSVC, and other tools... not sure what is available in the macOS... maybe it is **asking too much** that the current maintainer try to take on this task...\n\nAnyway, I am just throwing out ideas here, and seek feedback... I will certainly do something if it is **easy**... thanks...\n. @balthisar agree with all you have said, including I too really do not like such CI automation... even though some rave about it... very hard to put my finger exactly on the problems I see... but, as replied to @JohnArcher, would like to do something **easy**...\n\nConcerning Windows it seems github does offer [AppVeyor](https://github.com/marketplace/appveyor), which is **free** for open source projects, which tidy is...\n\nSeems someone, but not me, needs to **test and experiment**... my concerns and questions would be -\n\n  - Is this MSVC Win64 only? Which version? What about 32-bits? What about special builds, like static `/MT'?\n  - Exactly **where** would the binaries be posted? I do **not** think this should be `htacg/tidy-html5` repo.\n  - What about MingGW build? 64 and 32 bits?\n  - And then do we have to also have Travis CI for `unix`?\n  - What about the `macOS`? Others?\n  - And probably lots **more** questions if this progresses...\n\nI can certainly say this CI process concerns me... and as stated, it should cover **multiple** OSes... Will **not** accept just one, or 2... min. 3 - unix, macOS, win32, but hopefully more...\n\nBut if this `AppVeyor` can build and deploy binaries to say a `gh_pages` site, why can't I set that up here?\n\nWhy are we using a 3rd party to do the building, when the `scp` copying after a build here is just as easy for me... it would probably be just a few lines added to the batch files I already use... and is much more under my control... \n\nSo the single main problem for me is the **target** deployment site... can someone add some thought, details on that... thanks...\n\nI would see this 2nd binary site setup is required, whatever we eventually decide to do... I certainly would not want http://binaries.html-tidy.org/ cluttered with, in this case some 38 `next` binaries... tidy-5.5.1 through to tidy-5.5.38, etc... until the next release...\n\nIn fact maybe the current `binaries.html-tidy.org` could be changed to `releases.html-tidy.org`, and `binaries` replaced with say `next.html-tidy.org`, but have no idea how to do that...\n\nAs stated, just ideas, and would go along with anything **easy**...\n\n\n\n. Still sort of an open issue, but moving it to `Indefinite`...\n. @MayfeelYang thank you for reporting a **bug** that shows up when using the `AddressSanitizer:` on a file with very **bad** utf-8 sequences...\n\nAnd I can certainly repeat it in linux, using the sample file you supplied... that is for sure a nasty file, but certainly tidy should not have a problem...\n\nWhile not exactly the same topic, I made a WIN32 fix in issue #352 for this... specifically my [comment-299720449](https://github.com/htacg/tidy-html5/issues/352#issuecomment-299720449)... but then only for `WIN32`...\n\nAs stated there, the Windows MSN documentation is quite clear that the service `isalnum(c)` will trigger an assert if passed 0xfffd - ie the internal value after getting 0x80. From the MSN site \"The behavior of isalnum and _isalnum_l is undefined if c is not EOF or in the range 0 through 0xFF, inclusive.\" Ugh!\n\nMaybe it is the same or similar in some linux implementations... and @balthisar, maybe the macOS (64-bit) runtime libraries do not have this problem... are you building the `Debug` version? I only see it in windows if -DNDEBUG is **not** defined, and therefore `assert` is active...\n\nThe cmake command line I use in linux is -\n\n```\n$ cd build/cmake\n$ cmake ../.. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_FLAGS=-fsanitize=address \\\n-DCMAKE_VERBOSE_MAKEFILE=ON\n$ make\n```\n\nThe adding of `-DCMAKE_VERBOSE_MAKEFILE=ON`, allows me to see the full compile lines, especially to see the `-g` added for the debug version, and of course `-fsanitize=address`, and certainly **no** `-DNDEBUG`, etc...\n\nI am still on vacation until mid Sept, but just briefly back at my machines, so prepared the following patch -\n\n```diff\ndiff --git a/src/attrs.c b/src/attrs.c\nindex a4cb379..bda6f01 100644\n--- a/src/attrs.c\n+++ b/src/attrs.c\n@@ -1475,14 +1475,15 @@ static void CheckLowerCaseAttrValue( TidyDocImpl* doc, Node *node, AttVal *attva\n }\n\n /* methods for checking value of a specific attribute */\n-#ifdef _WIN32\n+/* Issue #588 - use simple macros only!\n+   Seems 'isalnum(c)' is undefined and can\n+   cause an assert or a SIGSEGV in some libraries\n+   if 'c' is not EOF, or in the range 0 to 0xff,\n+   so avoid using it. */\n #define ISUPPER(a) ((a >= 'A') && (a <= 'Z'))\n #define ISLOWER(a) ((a >= 'a') && (a <= 'z'))\n #define ISNUMERIC(a) ((a >= '0') && (a <= '9'))\n #define ISALNUM(a) (ISUPPER(a) || ISLOWER(a) || ISNUMERIC(a))\n-#else\n-#define ISALNUM(a)  isalnum(a)\n-#endif\n\n static Bool IsURLCodePoint( ctmbstr p, uint *increment )\n {\n```\n\nAs suggested back in #352, the use of these simple macros should work in **all** cases...\n\n@MayfeelYang hope you get a chance to try this patch... it certainly fixes the problem in my linux machine... thanks...\n. Has anyone had a chance to test my patch... namely use only the macro in place of `isalnum`? Does this fix the problem? Thanks...\n\n@fgeek thanks for the [CVE-2017-13692](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-13692) link, but I will leave others to deal with that...\n. @fgeek as stated, thanks for the cross-reference, but will leave **others**, probably the person who opened it, to deal with that...\n\nWhat I need here is someone to test and confirm the patch is good so I can push it as a **fix**... thanks...\n. @mthorpe7 thanks for reporting, and as @balthisar says, PR's are **very welcome**...\n\nCertainly, just trying your simple sample with the `--word-2000 yes` option does indeed segfault...\n\n```html\n<html xmlns:o=\"urn:schemas-minrosoft-com:office:office\"X<?ody><table><img class=\"\" /></table></body></html>\n```\n\nThat particular problem can be avoided with the small patch -\n\n```diff\ndiff --git a/src/clean.c b/src/clean.c\nindex 707e4d9..fc5ca31 100644\n--- a/src/clean.c\n+++ b/src/clean.c\n@@ -1902,7 +1902,8 @@ void TY_(CleanWord2000)( TidyDocImpl* doc, Node *node)\n             attval = node->attributes;\n             while ( attval ) {\n                 next_attr = attval->next;\n-                if ( strcmp(attval->attribute, \"xmlns\") != 0 )\n+                /* Issue #591 - take care of a NULL attribute */\n+                if ( !attval->attribute || ( strcmp(attval->attribute, \"xmlns\") != 0 ))\n                     TY_(ReportAttrError)(doc, node, attval, PROPRIETARY_ATTRIBUTE);\n                 attval = next_attr;\n             }\n```\n\nAnd also please checkout the patch proposed in #588. This was certainly one case where invalid utf-8 could cause a problem, hopefully fixed by that patch...\n\nAs @balthisar mentioned, I am still on vacation until mid Sept, so do not have time now, but look forward to your efforts to make tidy **crash/hang** free... thanks...\n. Has anyone had a chance to test my suggested patch for at least the one `word-2000` issue? thanks...\n\nAnd @mthorpe7 you suggest a **a plethora of crashes/hangs**... can you enumerate, give specific examples... thanks\n. @ablackton have not had a chance to fully test this yet, but just reading the patch in your PR #595 this looks good... thanks...\n\nWill merge this if someone else can find the time to test it fully, and run the compatibility tests... thanks...\n. @ablackton as commented in #594 this looks good... thanks...\n\nWill merge if someone else can test and confirm... thanks.... @ablackton, @balthisar, now merged... bumped to version 5.5.39, 2017.09.20... thanks...\n\n. @shentino thank you for this follow on from #582...\n\nIf possible, to show html use, the three back-ticks. It is a github markdown extension - see [creating-and-highlighting-code-blocks](https://help.github.com/articles/creating-and-highlighting-code-blocks/) - try not to use pseudo html coding...\n\nSo it seems your request is, if you use `--vertical-space yes`, you want -\n\n```html\n<p><span>blah blah blah</span></p>\n```\n\n**instead of**\n\n```html\n<p><span>blah blah blah</span>\n</p>\n```\n\nIt would be relatively easy to add code to do this.\n\nThe problem is would it be acceptable to **all** users. This **vertical space** is in the realem of a `pretty print` user **preference**...\n\nSo then it is necessary to create a **new** option, so **both** vertical space preferences can be supported... so what would be the new options name? type?\n\nIn this particular case, I too would **prefer** that the `</p>` not be moved to a **newline**, and in fact tidy-2000, my oldest version, did not. But by tidy-2009 it did, with `--vertical-space yes`, so tidy has been that way for a long time... Personally, I have gotten used to it!\n\nLook forward to more feedback on this **tough** preference problem... thanks...\n. @shentino thank you for the added comment, and you now seem to understand the github specific markdown of 3 back-ticks... makes html, and other code formatting quite easy...\n\nI do not know why the change occurred between 2000, more or less the first release of `tidy`, and 2009, the last cvs release of `tidy`, and have **not** tried to track down the specific commit, which may or may not have given some reasoning... \n\nBack prior to 2009, the source was housed in a sourceforge cvs repository, and while I was a contributor back then, it was not until well after the source was moved to [this](https://github.com/htacg/tidy-html5) github repository, that I became a **full** maintainer...\n\nYou certainly make quite a **compelling**, simple case - **why should things change just because you add one letter**? Does **not** seem too `logical`...\n\nAs time permits, I will search for a **fix**... maybe it would be simple... and if found, give it strong consideration... any help appreciated, and further comments of course... thanks...\n. As it seems this Pretty Print issue is still open moving out the milestone...\n. @ralfjunker thank you for the issue... it caused me to turn **on** some memory diagnostics that I have not run for a **long** time, and indeed do find **several** `memory leaks`...\n\nI had to further enhance my memory diagnostics to track them down... that I am in the process of doing...\n\nBut the particular case you point to does **not** seem to be one of them? \n\nFirst, the `parser.c[1362-1365]` lines are correct... the process of `TY_(UngetToken)( doc );` is **not** trying to discard and free a node. It pushed the `node` onto the lexer stack, by `doc->lexer->pushed = yes;`, and allows tidy to continue processing the current `token`, and that pushed node will be recovered, and dealt with on the next `GetToken(doc)`... Read the top of `lexer.h` for a bit of an explanation of this...\n\nAs you further point to `parser.c[1922-1933]`, that shows a case of a switch between using `UngetToken`, which will be later used, and `FreeNode` which completely destroys/frees the node...\n\nSo while I am not sure the code you point to is the problem, I am **sure** there appears to be some 16 memory leaks - from my additional memory diagnostic output, massaged with perl script, `shwtidymem.pl`, to give a **summary**, which is -\n\n```\nRemains 16 in HASH\n# :cnt: address          size\n 1: 74: 0000020AF9707860 136\n 2:122: 0000020AF97087A0 136\n 3: 36: 0000020AF9707FD0 2\n 4: 13: 0000020AF970C750 136\n 5: 97: 0000020AF9706DC0 136\n 6: 38: 0000020AF9708050 2\n 7:105: 0000020AF9706E90 136\n 8: 49: 0000020AF9707540 136\n 9: 41: 0000020AF9707470 136\n10:115: 0000020AF97086D0 136\n11: 39: 0000020AF97073F0 56\n12: 24: 0000020AF97071C0 136\n13: 37: 0000020AF9709AA0 5\n14: 66: 0000020AF9707790 136\n15: 35: 0000020AF9707340 104\n16: 57: 0000020AF9707610 136\n```\n\nThis seems to agree with the Windows CRTDBG module output -\n\n```\nDetected memory leaks!\nDumping objects ->\n{427} normal block at 0x0000020AF97087A0, 136 bytes long.\n Data: <  p             > C0 16 70 F9 0A 02 00 00 00 00 00 00 00 00 00 00 \n{420} normal block at 0x0000020AF97086D0, 136 bytes long.\n Data: <  p             > C0 16 70 F9 0A 02 00 00 00 00 00 00 00 00 00 00 \n{408} normal block at 0x0000020AF9706E90, 136 bytes long.\n Data: <  p             > C0 16 70 F9 0A 02 00 00 00 00 00 00 00 00 00 00 \n{400} normal block at 0x0000020AF9706DC0, 136 bytes long.\n Data: <  p             > C0 16 70 F9 0A 02 00 00 00 00 00 00 00 00 00 00 \n{377} normal block at 0x0000020AF9707860, 136 bytes long.\n Data: <  p       p     > C0 16 70 F9 0A 02 00 00 F0 C5 70 F9 0A 02 00 00 \n{369} normal block at 0x0000020AF9707790, 136 bytes long.\n Data: <  p      rp     > C0 16 70 F9 0A 02 00 00 90 72 70 F9 0A 02 00 00 \n{360} normal block at 0x0000020AF9707610, 136 bytes long.\n Data: <  p     `pp     > C0 16 70 F9 0A 02 00 00 60 70 70 F9 0A 02 00 00 \n{352} normal block at 0x0000020AF9707540, 136 bytes long.\n Data: <  p       p     > C0 16 70 F9 0A 02 00 00 F0 C5 70 F9 0A 02 00 00 \n{344} normal block at 0x0000020AF9707470, 136 bytes long.\n Data: <  p      rp     > C0 16 70 F9 0A 02 00 00 90 72 70 F9 0A 02 00 00 \n{342} normal block at 0x0000020AF97073F0, 56 bytes long.\n Data: <         i      > 00 00 00 00 00 00 00 00 10 69 9F 85 F6 7F 00 00 \n{341} normal block at 0x0000020AF9708050, 2 bytes long.\n Data: <1 > 31 00 \n{340} normal block at 0x0000020AF9709AA0, 5 bytes long.\n Data: <href > 68 72 65 66 00 \n{339} normal block at 0x0000020AF9707FD0, 2 bytes long.\n Data: <a > 61 00 \n{338} normal block at 0x0000020AF9707340, 104 bytes long.\n Data: <                > 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 \n{327} normal block at 0x0000020AF97071C0, 136 bytes long.\n Data: <  p      qp     > C0 16 70 F9 0A 02 00 00 10 71 70 F9 0A 02 00 00 \n{316} normal block at 0x0000020AF970C750, 136 bytes long.\n Data: <  p             > C0 16 70 F9 0A 02 00 00 00 00 00 00 00 00 00 00 \nObject dump complete.\nThe program '[0x2B54] tidyd.exe' has exited with code 1 (0x1).\n```\n\nThis is of course using your sample snippet of html, with the default configuration...\n\nAs stated needed to enhance my **old** memory diag code, and add a WIN32 `crtdbg.h` and enable it, all added as `options` to `CMakeLists.txt`, and have done this in the new `memory-test` branch... this will soon be merged to `next`, since it is **only** diagnostics, which is **not** compiled into the release... \n\nAnd offers the possibility for at least enabling some of it in a `unix` build... any thought on that welcome... and/or other `unix` utilities for that...\n\nNow to identify the **actual** memory leak locations, and **fix** them... at present they seem to be in the message reporting system, but not sure yet... any help appreciated... thanks...\n. @ralfjunker you were **spot on**... thanks...\n\nAt that point in the code, if we are not storing the **node** with `UngetToken`, then we **must** use  `FreeNode` to discard and free the node, and added a warning about the `discard`...\n\nThere was also a problem in the `message/report` system, in that while `tidyMessageRelease` released all the components of a message structure, it failed to release the allocated 136 byte structure as well... just a one line fix.\n\nHave pushed these two fixes to the `memory-test` branch. Would be much appreciated if people could checkout this branch and test more thoroughly, and report... thanks...\n\nAnd @balthisar, maybe you could check my one line fix in `tidyMessageRelease`... thanks...\n\nWill continue testing, but feel these **memory leaks** have now been **plugged**... appreciate futher testing and comments... thanks...\n. The `memory-test` branch now merged to `next`, per #599, and deleted... bumped version to 5.5.40...\n\n@ralfjunker hope you get a chance to pull and test `next` 5.5.40, and hopefully this can be closed... thanks...\n. @ReubenM thank you for the issue...\n\nCould you please add a simple `html` sample, to facilitate easy, quick testing... giving say -\n\n - configuration\n - sample html\n - current tidy ouput\n - expected tidy output\n\nAnd maybe you could point us to some supporting W3C documentation... thanks...\n. @balthisar now merged, and bumped to 5.5.40...\n\nRe SPRTF, as replied on #604 look forward to this... advise if any probs... thanks...\n. @balthisar had to look it up, but went for `thanksgiving`, Nov 23, 2017, I think ;=))\n\nWill work toward clearing as many issues as possible, as usual...\n\nAlso created a 5.7, for about 6 months later - May 24, 2018 - but just a random date... will start to move issue unlikely to make it to release 5.6 to there... thanks...\n. @balthisar, now up to .85, and have reviewed the new `verhist.log`, and a test sample `5.6.0.html` release notes, and there is certainly some great stuff... some 436 commits by 12 authors... most by you, 306...\n\n**Tidy Release Steps**\n\nI though I already had this somewhere, but could **not** now immediately find it... Also note several steps are very order specific...\n\n 1. Change `version.txt` to 5.6.0, and push the change\n 2. Update `README/verhist.log` and push\n 3. Create tag `5.6.0`, and push\n 4. Create branch `release/5.6`, and push\n 5. Generate `5.6.0.html` release notes, in `binaries/release_notes`, and push\n 6. Generate release binaries, and upload to release - (a) Win, (b) Mac, (c) Unix\n 7. Update `binaries/_data/tidy.yml` and push\n 8. Merge `release/5.6` to `master`, and push\n 9. Update `next` version.txt to 5.7, and push\n\nI have easy scripts to do 2. and 5., so I could take it up to 6 (a)... advise if I missed anything... bad order... appreciate feedback on this list... \n\nAre there any special **issues** that you think **must** be included, if at all possible... which may put the schedule back? I have none...\n\nBut if none, then we need to actually choose a day... suggest Sat or Sun, 25 or 26? Which is better for you? Or some other? thanks...\n. @balthisar yes, feeling better... thanks...\n\nYes, had forgotten the api docs update... glad you will take care of that...\n\nGenerally, Fridays are very short computer days for me... shopping takes over...\n\nWill probably skip #645 for now, and move it out to next 5.7...\n\nSo let's go for Saturday, with Sunday fall back... as stated I will try to kick off with 1 to 6a...\n\nAgree for two guys separated by an ocean, with different views on some things, we do do OK ;=))\n. @balthisar as expected, little time today, but do want to float two ideas for this release...\n\n 1. Binary Files use a `naming convention`\n 2. Add SHA1 hash for binaries\n\nThe first is because I am thinking of at least 4 zips for windows, with names like `tidy-<version>-<tool>-<bits>.zip`, so I would upload -\n\n 1. tidy-5.6.0-vc14-64b.zip\n 2. tidy-5.6.0-vc14-32b.zip\n 3. tidy-5.6.0-vc10-64b.zip\n 4. tidy-5.6.0-vc10-32b.zip\n\nAnd also some variation for my Ubuntu builds, 32 and 64 bit...\n\nMaybe even add a MinGW build, or builds, and Raspbian build... and there are possibly other Windows variations, like `/MT` static instead of `/MD`... etc\n\nWhat do you think? suggestions... thanks...\n\nOn 2., as you know we have had a virus report, a false positives I think, but remember we did discuss adding at least a SHA1 hash... \n\nFor each I could also upload like a `tidy-5.6.0-vc14-64b.zip.SHA1` text for each zip at the same time...\n\nCould this either hash value, or at least the download of the corresponding SHA1 file, be added to the [binaries](http://binaries.html-tidy.org/) site?\n\nI seem to remember we did discuss this somewhere, and you would look into it... any other quick ideas, other than adding the SHA1 file?\n\nOff shopping now... be back soonest...\n. @balthisar ask for **A** and get **B**, sans discussion!, but thanks, I think ;=))\n\nHave now completed 1 to 6.a.1 at least... slight delay while I adjusted my tool chain for the SHA256 generation in Windows... \n\nTried Power Shell, but that reminded my how much I dislike that interface, and [forked](https://github.com/geoffmcl/crypto-algorithms) `github.com/B-Con/crypto-algorithms` to build my own...\n\nAnd that setting up of a tool chain is why now adding multiple builds is **not** really `overwork` ;=)) Is  **FUN** even...\n\nAnd if you read through the appropriate issue comments, I think more choices is **better**, plus 32-bits, etc... I even still run 2 32-bit linuxes... Will add more **bins** over the coming days...\n\nOut for a nice cup of coffee, in the sun, but getting quite cool... later... thanks...\n. @balthisar no problem... as you can see I rather enjoyed finding, researching, building and setting up **my**  Windows tool chain... but takes time...\n\nBut that did make me ponder about **other** Windows users... what are they **likely** to have available by way of checksum generators, and checkers? \n\nI certainly do **not** think it is installed by default in Windows 10, at least not in my **free** upgraded to 10... and in fact did not even find a binary install that included it... but did not look too hard now I have my **own** ;=))\n\nSo to be very **sure** added the small files `tidy-5.6.0-vc14-64b.zip.SHA1` **and** a `tidy-5.6.0-vc14-64b.zip.MD5`, that they can download with those checksums, for verification that the **zip** has **not** been tampered with...\n\nOr even check **all** if they are really vexed about **security** LOL\n\nBut am happy that the binaries site only has **one** displayed... looks more **professional** now... thanks...\n\nAnd also seems `sha256` is **not** in my main Ubuntu 14.04 64-bits, and tried the suggested `$ sudo apt-get install hashalot`, **but** that does seem the right thing! What am I supposed to be using? I do have `md5sum` and `sha1sum`, which seem to work fine... **AH HA!**, I do have `sha256sum`, so maybe this is ok...\n\nBut in trying the `--check <file>.SHA256` maybe what I have presently uploaded is in the **wrong** format! Seems it should be just `checksum file`, or something... Will experiment more but out of time tonight...\n\nMaybe you will get a chance to complete some more of the release steps... thanks...\n. @balthisar did not get very much done on `tidy` today, but note you have been very **busy** ;=))\n\nAs mentioned, the binaries site looks great, and yes did not particularly intend you `link` with the **--check file** checksum files, although... more on that below...\n\nBut wow, suddenly realized you are talking about an `openssl.exe`! And **yes** that is installed, in my case as part of the `Subversion` install, a **long** time ago, which is around the date of this system's original creation - \n\n```\n Directory of C:\\Program Files (x86)\\Subversion\\bin\n2012-02-16  09:24           381,006 openssl.exe\n```\n\nSo, yes, I now do have an alternative way to generate a `sha256` checksum, for a zip, say - \n\n```\nF:\\Projects\\install\\msvc140-64>openssl dgst -sha256 tidy-5.6.0-vc14-64b.zip\nWARNING: can't open config file: /usr/local/ssl/openssl.cnf\nSHA256(tidy-5.6.0-vc14-64b.zip)= 59ac22427a3d759c72108814f6a8f0e98511b12f87744ca19e0a500a00687be8\n```\n\nBut the `<file>.SHA256` I have uploaded has quite an **interesting** purpose, now I have the correct the format, for this `check` file, and that is you can just download the `<file>` **and** `<file>.SHA256` to some common place, and running the following should give an `OK`, like -\n\n```\n$ sha256sum --check <file>.SHA256\n<file>: OK\n```\n\nThat is, it gets the checksum and actual file name from the **`check`** file, and does the generation and verification... Now maybe `openssl.exe` has a similar functionality, not yet found, but my own `sha256_test.exe` does...\n\nBut as stated, I am also happy the just have the `sha256` checksum **visible** on the binaries site, but will continue to add the **`check`** files to the github release site, for this sort of `dual` download test process...\n\nAlthough, **if** the binaries site also offered them, the **`check`** files, as a download, it would be one less pieces to have to add to `tidy.yml` each time if we adopted the `<file>.SHA256` convention for all... but I am ok with either... \n\nWhat do you think?\n\nAnd thanks for doing the api site... this looks great too... and the `master` merge, and `next` to 5.7.0...\n\nAs usual off to **dinner** - sleep is much, **much** later...\n\nI too think **we are good** ;=))\n. @balthisar well I too was ignorant of it too until a few days ago, when you pushed me into finding and using `sha256sum`... and through the `--help` command got curious about the `--check` option...\n\nBut it is **really** picky about the `format` of the file, and I still have to fix what is there... it will **not** accept windows CR/LF... will fix that...\n\nSo after downloading the 2 files -\n\n```\n~/downloads$ dir tidy-5.6.0*\n-rw-rw-r-- 1 geoff geoff 1174012 Nov 27 15:24 tidy-5.6.0-vc14-64b.zip\n-rw-rw-r-- 1 geoff geoff      90 Nov 27 15:25 tidy-5.6.0-vc14-64b.zip.SHA256\n~/downloads$ sha256sum --check tidy-5.6.0-vc14-64b.zip.SHA256\n: No such file or directory64b.zip\n: FAILED open or readip\nsha256sum: WARNING: 1 listed file could not be read\n~/downloads$ dos2unix tidy-5.6.0-vc14-64b.zip.SHA256\nUsing 'fromdos tidy-5.6.0-vc14-64b.zip.SHA256'\n~/downloads$ sha256sum --check tidy-5.6.0-vc14-64b.zip.SHA256\ntidy-5.6.0-vc14-64b.zip: OK\n```\n\nLook how **angy** it gets, with very **misleading** error messages, over line endings...\n\nBut after I ran `dos2unix`, was as **happy as pie**...\n\nNow I do **not** know how many people `know` about this, but it seems an easy way to verify a checksum without actually ever **seeing** the checksum... and just tested changing just one letter in the `.SHA256` file and got -\n\n```\ntidy-5.6.0-vc14-64b.zip: FAILED\nsha256sum: WARNING: 1 computed checksum did NOT match\n```\n\nAlthough I did **not** know about this `--check` option way back when I wrote a windows `md5` app, I did include an option to do the **compare** for me - it was just too much trouble, and fraught with possible mistakes, to do a physical visual compare -\n\n```\nC:\\Users\\user>md5\nmd5: Compile on Nov 28 2008, at 16:59:18 - Usage: [Options] file\n  --help     -h (or -?)  # this brief help, and exit.\n  --test     -t          # run the self-test (A.5 of RFC 1321), and exit.\n  --t-values -l          # print the T values for the library, and exit\n  --version  -v          # print the version of the package, and exit.\n  --digest=  -d=<digest> # compare file digest with this value.\n  --html                 # ouput information in HTML table form.\n  filename               # output the MD5 sum for the file.\n```\n\nJust noted, nearly the 9th aniversary of that app...\n\nAnd certainly note quite a **lot** of, usually ftp type, download sites do include these **check** files... so they too offer the possibility... and it works for `md5sum` and `sha1sum` the same way...\n\nAnyway, as stated, I am also happy with just showing the SHA256 on the binaries site...\n\nBut will continue to add the **check** files for each on github... and will try to get around to doing it also for all the previous files... unless you beat me to it ;=))\n. Tricky Geoff ;=))\n\nAdded an option to my `sha256_test` app to directly output an out file, `-o out.SHA256`, rather than using redirection as before, and it has **no line endings!**... Who can dislike that?\n\nTried that out with linux `sha256sum`, and it is **happy** ;=))\n\nWill now do the same for my **new** `md5_test` and `sha1_test` apps... will than be able to add the **check** files for **all**, hopefully suitable for **all** OSes... \n\nHope you get a chance to **check** in the macOS... thanks...\n. @balthisar have now added the 4 windows zips I promised, including the appropriate **check** files...\n\nFound a tiny **tiny** problem with the MSVC10 build, and had to apply the following patch -\n\n```diff\ndiff --git a/src/tidylib.c b/src/tidylib.c\nindex 85d59e2..ce72acd 100644\n--- a/src/tidylib.c\n+++ b/src/tidylib.c\n@@ -1436,8 +1436,8 @@ int         TY_(DocParseStream)( TidyDocImpl* doc, StreamIn* in )\n     Bool xmlIn = cfgBool( doc, TidyXmlTags );\n     TidyConfigChangeCallback callback = doc->pConfigChangeCallback;\n\n-    doc->pConfigChangeCallback = NULL;\n     int bomEnc;\n+    doc->pConfigChangeCallback = NULL;\n\n     assert( doc != NULL && in != NULL );\n     assert( doc->docIn == NULL );\n\n```\n\nHave not pushed it to `master` nor `release/5.6.0`... will get around to fixing it in `next`... but will face the problem should a user try to compile the release with MSVC10... likelihood seems very low...\n\nHave now generated **all** the `check` files, for **all** the binaries, and could upload them, but am waiting for your choice on whether to support this in the `binaries` downloads... that is changing the SHA256 from a text string to a link... \n\nAnd if possible, instead of the long filename being the link text it just be something like -\n\n```\nName    Last Modified   Size    Description SHA256\nreplace with\nName    Last Modified   Size    Description Checksums\n```\n\nWhere `Checksums` could just be 3 links, like -\n\n... [SHA256](https://github.com/htacg/tidy-html5/releases/download/5.6.0/tidy-5.6.0-vc14-64b.zip.SHA256) [SHA1](https://github.com/htacg/tidy-html5/releases/download/5.6.0/tidy-5.6.0-vc14-64b.zip.SHA1) [MD5](https://github.com/htacg/tidy-html5/releases/download/5.6.0/tidy-5.6.0-vc14-64b.zip.MD5)\n\nOr is that too busy, or too much trouble... look forward to your ideas... thanks...\n. @balthisar have now added more **check** files for releases, but only for the Windows binaries at this time, since this is where people perceive the biggest threat from viruses... rightly or wrongly...\n\nAnd made mention of the reason for these **text** files in the `comment`...\n\nBut, as indicated would add them for **all** binaries, if you agree... please advise... thanks...\n\nAlso suggest we now **delete** intermediate `releases`, namely `5.1.4`, `5.1.25`, `5.1.24`, `5.1.8`, from `github`, and from `binaries` where appropriate... What do you think? Thanks...\n. Just moved the milestone, but for no particular reason chose `Indefinite`...\n. > I can't fathom a use case that requires the ability to turn these off any more.\n\n@balthisar me neither... they should be removed...\n\nYou might also consider `TIDY_STORE_ORIGINAL_TEXT`. \n\nAlthough I used it for some diangostic reasons years and years ago, it needed quite a number of patches to make it work, which never made it into the base code, and would be difficult for me to recover now... Even Bj\u00f6rn, who I understand introduced the compile option, thought it a bad idea that I try to use it... \n\nI think it too can go...\n\nThere may be others... will look around... thanks...\n. @shentino, @balthisar, given the strong tradition of these two files, I have no objection to defaults being added to CMakeLists.txt, just for `unix`, and perhaps `macOS`... \n\nBut avoiding such **defaults** for `WIN32`, or at least `MSVC`, although such users should still be able to define their own, using cmake `-D...` option, as now...\n\nThe code in tidy.c already checks for their existance, so I would further suggest **no** such files, either containing `nothing`, or `all` possible options, commented out, be added to the distribution. \n\nI do see adding perhaps a sample `tidy.conf`, and/or a `.tidyrc` to the repo source, but as indicated do **not** see it necessary that these files be added to the **install**, and thus **distribution**... but since this would be `unix` **only** also do not see a problem...\n\nBut these samples, if they contain a list of options, would then need to be updated as each **new** option is added, or changed... additional, albeit minimal, admin...\n\nThe docs could explain that while tidy will **look** for such defaults, in unix, will not complain if none are found...\n\nAlso note the present tidy.c coded order -\n\n 1. TIDY_CONFIG_FILE\n 2. Environment `HTML_TIDY` **OR**\n 3. TIDY_USER_CONFIG_FILE\n 4. command line `-config <file>`\n\nNote the present **OR** between 2 and 3... not that there needs to be any change here... but the docs changes, additions, covered in #603, should make this clear...\n\nI personally use environment `HTML_TIDY` in Windows a **lot**, so would certainly `burp` if this is broken...\n\nBut go for it... look forward to a PR for review... thanks...\n. Oops, meant to post this the #584, but seems ok here...\n. @balthisar I have been using my little `sprtf` module for a long, **LONG** time, and for sure it should be platform agnostic...\n\nI have not yet had time to fully check whether `tidy` has my latest `sprtf.[c|h]` modules, but a quick review indicates a 2017/02/12 date, which is for sure fairly recent, but advise if any problem compiling it in `unix/macOS` as I do have versions that work fine in several `unix` projects...\n\nIn `tidy` code, the main thing seems to be replacing the clumsy `_MSC_VER` macro, `#if !defined(NDEBUG) && defined(_MSC_VER)`, and some variations, with something more appropriate...\n\nAs advised, will help where I can... thanks...\n. @balthisar yes, you are certainly **On a roll...** ;=))\n\nSo fast in fact that I did **not** have time to respond on this...\n\nMy concern is that all you have done mainly is to remove the `defined(MSC_VER)`...\n\nOn many that is fine because they have a second define, like `defined(DEBUG_PPRINT)`, `defined(DEBUG_INDENT)`, `defined(DEBUG_MEMORY)`, or `defined(DEBUG_ALLOCATION)`, and that is ok...\n\nBut that leaves **many** with just `#if !defined(NDEBUG)`. Now that is also fine in the Windows build because `NDEBUG` is automatically added to the MSVC builds other than the `Debug` configuration...\n\nBut this is **not** the case in linux. If the user does **not** add `-DCMAKE_BUILD_TYPE=Release`, then I have seen cases where `NDEBUG` is **not** defined automatically...\n\nI am just afraid linux users could end up seeing all this `Debug ONLY` output from the EXE they build... and I am sure they would be surprised, if not **shocked** by all the extra output, that I am sure they do not want to see...\n\nI have not thought out a solution yet... and maybe my concern is unwarranted... but I would certainly feel better about the macro being changed to something that the user has to opt-in to use... not get `accidentally`...\n\nAnd maybe there is a case for also being able to enable it in other than the Windows Debug build... that is none of it depends just on `NDEBUG`...\n\nWill give this some thought, and maybe you have an idea... thanks...\n. @balthisar not sure what **test** you did in Ubuntu, but as predicted, if I just do -\n\n```\n$ cat version.txt\n5.5.59\n2017.10.06\n$ cd build/cmake\n$ cmake ../..\n$ make\n$ cat ../../version.txt > temp.html\n$ ./tidy temp.html\n```\n\nThat is **without** the option `-DCMAKE_BUILD_TYPE=Release`, the resultant `tidy` will **output** all the SPRTF debug stuff... very **alarming** if you have not seen it before... totally **unexpected**...\n\nBut could **not** find the `ex.log` - **note:** need to change this default in `sprtf.c`... but did find the ouput sent to `ex.log.html`... this need to be fixed in case `set_log_file(...)` is **not** called... but why no `ex.log`... puzzling... need to look at macro switches again in `tidy.c`...\n\nAnd if I turn on `-DCMAKE_VERBOSE_MAKEFILE=ON`, and look carefully at the `cc` compile lines I can **not** find `-DNDEBUG` added... seem the Ubuntu cmake has no **default** build type, or it defaults to `Debug`... need to check more on this...\n\nThinking more about it, maybe replace **all**, well **most** - there may be some exceptions - need to check - `#if !defined(NDEBUG)` with say `#if defined(DEBUG_TIDY)`, or something... still contemplating...\n\nI would also add it as an `option` in `CMakeLists.txt`, so it can be turned on anytime... for any build type...\n\nAs to whether there should be some default in say `tidyplatform.h` **not** sure... How could it be done and still avoiding the problem if `CMAKE_BUILD_TYPE` is **not** defined by the user?\n\nMaybe it could again be based on `MSC_VER`, since, as indicated, the MSVC solution files will always add `-DNDEBUG` in **all** builds except `Debug`... But this is mainly for my **convenience**, in that I do want this Debug stuff `on` for the Debug build, hopefully by **default**... as I had...\n\nStill pondering, and experimenting... but feel something should be **urgently** done for the *nix builds, before we get the expect **WTF** message ;=))\n\nWhat would be your idea? Thanks...\n. @balthisar certainly agree with the **hot** fix using `DEBUG_TIDY`... thanks...\n\nAnd check the `Before:` and `After:` showing the flags as below. I seem to get this output even in the Windows `Release`...\n\n```\nBefore: HT20|HT32|H40S|H40T|H40F|H41S|H41T|H41F|X10S|X10T|X10F|XH11|XB10|----|HT50|XH50\nAfter : ----|HT32|H40S|H40T|H40F|H41S|H41T|H41F|X10S|X10T|X10F|XH11|XB10|----|HT50|XH50\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nline 1 column 1 - Warning: inserting implicit <body>\nAfter : ----|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nline 1 column 1 - Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\nTidy found 3 warnings and 0 errors!\n```\n\nAnd maybe adjust the `default` file name in `sprtf.c`, if you get a chance... would suggest `temptidy.txt` for all cases... thanks...\n. Yeah, the Before: After : stuff, [Line 325](https://github.com/htacg/tidy-html5/blob/next/src/lexer.c#L325) should also be changed to `#if defined(DEBUG_TIDY)`... thanks...\n\nPS: Will shortly be `out` for a while, and may not get back to my machines tonight... my friend has a black blank screen and is screaming for help...\n. @balthisar thanks for the **hot** fix, but nope! Now I get ENABLE_DEBUG_LOG enabled **all-the-time** in Windows...\n\nStill checking why, but it seems CMAKE_BUILD_TYPE is **not** defined when I build in windows, so now the CMakeLists.txt enables it all the time... I do **not** define it when I run `cmake ..\\.. options` in Windows...\n\nSo I think preserving my Windows behaviour, to get logging for the Debug build only, must be done outside cmake...\n\nStill looking for HOW!\n. @balthisar yes, understand what you were trying to do, and thanks... but, in general, cmake can only define global macros. Not macros that change depending on the build configuration...\n\nAs stated I run cmake without setting CMAKE_BUILD_TYPE, eg -\n\n```\n$ cmake ..\\.. [options]\n$ cmake --build . --config debug\n$ cmake --build . --config release\n```\n\nSo agree, the option ENABLE_DEBUG_LOG must be default **off** for **all** platforms... please push this if you get a chance...\n\nIt may be difficult to have this automatic difference in Windows, where Debug and Release are always built by me...\n\nMaybe something like, in tidyplatform.h -\n```\n#if defined(_MSC_VER) && !defined(ENABLE_DEBUG_LOG) && !defined(NDEBUG)\n#define ENABLE_DEBUG_LOG\n#endif\n```\n\nOr something... still searching... ideas welcome... thanks...\n. @balthisar WOW, out of the `fat`, and into the `fire` ;=))\n\nNow you have defaulted the cmake `option` ENABLE_DEBUG_LOG to **ON** for all platforms??? Why would you do that? Is that what you intended? I think this should default to **OFF** for **all**...\n\nAnd as an aside, I wish the cmake `option` and the `macro` had **different** names, just to avoid confusion in discussion, as I have done with say `option` ENABLE_MEMORY_DEBUG, versus `macro` DEBUG_MEMORY, etc... \n\nAnd that points out another problem, now you have added `option` ENABLE_DEBUG_LOG... if you want `option` ENABLE_MEMORY_DEBUG, you can only have that IFF you also enable ENABLE_DEBUG_LOG. A problem I did not have with how I have it set up for **just** _MSC_VER... This needs to be thought out again...\n\nI just wish we were **experimenting** with all this in a `branch`, but in future I would ask a little more time, patience, before merging a PR... 48 hours is **not** sufficient time... no time for a review,  especially when it effects so much, so many files, builds, etc... ... but that is water under the bridge...\n\nOk, we have to separate the two ports - unix versus windows. Of course they are, using the default cmake generator, **very** different! In unix, a standard make `Makefile` is generated, and in Windows, if you have MSVC installed, a MSVC solution file is generated. In **both** systems there **are** alternative generators. The Windows list is quite large -\n\n```\n  Visual Studio 14 2015 [arch] = Generates Visual Studio 2015 project files.\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\n  Visual Studio 12 2013 [arch] = Generates Visual Studio 2013 project files.\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\n  Visual Studio 11 2012 [arch] = Generates Visual Studio 2012 project files.\n                                 Optional [arch] can be \"Win64\" or \"ARM\".\n  Visual Studio 10 2010 [arch] = Generates Visual Studio 2010 project files.\n                                 Optional [arch] can be \"Win64\" or \"IA64\".\n  Visual Studio 9 2008 [arch]  = Generates Visual Studio 2008 project files.\n                                 Optional [arch] can be \"Win64\" or \"IA64\".\n  Visual Studio 8 2005 [arch]  = Generates Visual Studio 2005 project files.\n                                 Optional [arch] can be \"Win64\".\n  Visual Studio 7 .NET 2003    = Generates Visual Studio .NET 2003 project\n                                 files.\n  Visual Studio 7              = Deprecated.  Generates Visual Studio .NET\n                                 2002 project files.\n  Visual Studio 6              = Deprecated.  Generates Visual Studio 6\n                                 project files.\n  Borland Makefiles            = Generates Borland makefiles.\n  NMake Makefiles              = Generates NMake makefiles.\n  NMake Makefiles JOM          = Generates JOM makefiles.\n  Green Hills MULTI            = Generates Green Hills MULTI files\n                                 (experimental, work-in-progress).\n  MSYS Makefiles               = Generates MSYS makefiles.\n  MinGW Makefiles              = Generates a make file for use with\n                                 mingw32-make.\n  Unix Makefiles               = Generates standard UNIX makefiles.\n  Ninja                        = Generates build.ninja files.\n  Watcom WMake                 = Generates Watcom WMake makefiles.\n  CodeBlocks - MinGW Makefiles = Generates CodeBlocks project files.\n  CodeBlocks - NMake Makefiles = Generates CodeBlocks project files.\n  CodeBlocks - Ninja           = Generates CodeBlocks project files.\n  CodeBlocks - Unix Makefiles  = Generates CodeBlocks project files.\n  CodeLite - MinGW Makefiles   = Generates CodeLite project files.\n  CodeLite - NMake Makefiles   = Generates CodeLite project files.\n  CodeLite - Ninja             = Generates CodeLite project files.\n  CodeLite - Unix Makefiles    = Generates CodeLite project files.\n  Eclipse CDT4 - MinGW Makefiles\n                               = Generates Eclipse CDT 4.0 project files.\n  Eclipse CDT4 - NMake Makefiles\n                               = Generates Eclipse CDT 4.0 project files.\n  Eclipse CDT4 - Ninja         = Generates Eclipse CDT 4.0 project files.\n  Eclipse CDT4 - Unix Makefiles= Generates Eclipse CDT 4.0 project files.\n  Kate - MinGW Makefiles       = Generates Kate project files.\n  Kate - NMake Makefiles       = Generates Kate project files.\n  Kate - Ninja                 = Generates Kate project files.\n  Kate - Unix Makefiles        = Generates Kate project files.\n  Sublime Text 2 - MinGW Makefiles\n                               = Generates Sublime Text 2 project files.\n  Sublime Text 2 - NMake Makefiles\n                               = Generates Sublime Text 2 project files.\n  Sublime Text 2 - Ninja       = Generates Sublime Text 2 project files.\n  Sublime Text 2 - Unix Makefiles\n                               = Generates Sublime Text 2 project files.\n```\n\n#### Windows ONLY\n\nI am **sure** you understand some of this, and really **sorry** for the repetition, but it seems important to **exactly** establish the situation...\n\nMy 'standard' cmake command line is -\n\n```\nDoing: 'cmake ..\\.. -DCMAKE_INSTALL_PREFIX=..\\..\\..\\software.x64 -G \"Visual Studio 14 Win64\" \\\n -DBUILD_SHARED_LIB:BOOL=OFF' \n```\n\nBut remember that `build` file generation can **also** be done in the CMake GUI, when you will be asked to set the generator...\n\nAnd by default, the `Visual Studio` generation will generate FOUR(4) configurations - `Release`, `Debug`, `RelWithDebInfo`, `MinSizeRel`, but that can be configured, changed...\n\nNow the actual `build` can be done in the MSVC IDE GUI... just load it on the `Tidy.sln` file, select the desired configuration, and `build`... Ctrl+Shift+B... if you select one after the other, you can build 4 version of `Tidy.exe`, output to different paths...\n\n**OR** you can use a command line, like I do... which runs the `MS Build Engine`, `MSbuild.exe`? IIRC, invoked by -\n\n``` \n$ cmake --build . --config <CONFIG>\n```\n\nAnd the `<CONFIG>` type can be any of the 4... And the `tidy.exe` built is placed in an appropriate output directory, to keep each build separate...\n\n#### Unix/Linux\n\nThe above is very `foreign` to unix, which seems to only build **ONE** configuration at a time, writing a **single** executable, `tidy`, in the build directory, using `make`... \n\nAlthough, as in Windows cmake, there are some 14 or so generators, only one of which is `Unix Makefiles`... seemingly the **default**, assuming you have the appropriate `tools` installed...\n\nAnd maybe it only has two(2) - Release or Debug... and as I understand it, even the `Debug` is only an EXE with symbols embedded, and can in fact be stripped... so is the same or similar to the release, except perhaps for optimization...\n\nNow in a quick test, it seems `$ cmake --build . --config <CONFIG>`, can **also** be used to run `make`, but given that the resultant `tidy` EXE has the **same** size, I guess building different configuration versions this way fails with `make'.\n\nThe actual `Makefile` generated must be different for `Release` and `Debug`, so that **choice** must be made in the actual `generation` phase... established by `-DCMAKE_BUILD_TYPE=<config>`...\n\nAnd it is still up-for-grabs which is built if you do **not** add that option...\n\n#### Summary\n\nSo, yes, I would like to **maintain** the default I have had for **YEARS**, but that is **not** the important issue... I will continue to search for that... but only when **all** builds, in **all** systems settle back to what we had...\n\nNamely, a default build in **all**, using the minimum of `option` choices, produces a useable `Release` EXE...\n\n**AND** that should cover **all** possible **generators** available in that system...\n\nSo back here, late at night, pondering this... the single important issue seems to be to default that option `OFF`... have pushed this... and bumped to 5.5.63...\n\nWill need some **time**, and **help** to address other items... as always, ideas welcome... thanks...\n. @balthisar on further reflection, after a good nights sleep, while I was initially **all for** expanding this DEBUG capability to `*nix` systems, it is clear **now** that this is **not** very convenient for Windows MSVC, and **maybe** XCode, developers, in that the various configuation build types are done very differently.\n\nNow, if you turn on `-DENABLE_DEBUG_LOG:BOOL=ON`, in the cmake configuration and generation stage you get the extra DEBUG output in **ALL** configurations, including `Release`. As a Windows developer, I am **not** sure I would ever want that!\n\nSo maybe `!defined(NDEBUG)` should still be involved? This would mean devs, in all `ports`, could **never** enable it for a `Release` configuration build! But at this moment, do **not** see that as a **bad thing**! \n\nNeed to reflect more... I am a **slow** thinker, and want to thoroughly **test**... of course, I would move this testing back to a branch, maybe `issue-604` to get it **right**...\n\nWhile we agree, the `next` branch **is** for development, but I would like to keep it 100% stable and usable to encourage more people to fully trust it, like a release...\n\nWhat are your thoughts, or the thoughts of others on this? Thanks...\n\nConcerning the README/BUILD.md docs, as always, I agree this could do with some enhancements. Ideas welcome...\n\nAnd then there is the question of the `default` log file name. I just copied my `sprtf` modules from another project called `ex`, but added 'set_log_file((char *)\"temptidy.txt\", 0);`, but that is **not** good for library users, who should **not** need to add this to their apps...\n\nThat's an easy change in `sprtf.c` but what name should we use? \n\nFor windows I chose a local to the runtime directory. Again that is very convenient for running in the MSVC IDE Debugger, which uses the solution directory by default, and as you will see the root `.gitignore` contains `temp*`, so it was easy to find and read, and ignored by `git`. So here, want to keep `temptidy.txt` for Windows.\n\nBut this is **not** the usual place, or name, for `*nix`. I suppose we could use something like `/tmp/tidy.log`. But on the other hand, a `*nix` developer who enabled this extra debug output should **not** be `installing` that version of tidy. They **should** be just testing that special debug `tidy` in the build directory only. So again, maybe a local `temptidy.txt` **is** appropriate in that case...\n\nAgain, look forward to further comments? Thanks...\n\nAnd as a separate issue, just built such a debug tidy, 5.5.63, with symbols as well, and could **not** find an `ex.log`? Why is this **not** being written? \n\nTried to run it using `gdb`... set `break sprtf`, then `run`, but it does **not** break!!!\n\nI have tried `gdb` many times before, but **never** seem to be able to get what I want! Does anybody know a good GUI debug for Ubuntu that I can try?\n\nAnd perhaps others with more `gdb` skill can help out here... why is no log file written? Or at least give me the commands. I did -\n\n```\n$ gdb --args ./tidy -xml tidy-help.xml\nGNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1\n... skipped ...\nReading symbols from ./tidy... done.\n(gdb) break sprtf\nBreakpoint 1 at 0x41c8b0: file ...sprtf.c, line 371\n(gdb) run\n... lots of output, including the sprtf debug stuff\n[Inferior 1 (process 3742) exited normally]\n(gdb)\n```\n\nWhat am I doing wrong? Thanks...\n. @balthisar have **not** had time to explore **all** here, but think I have at least found why the log file is **not** written in Ubuntu...\n\nAs part of commit dedcb7bb4d, the definition of SPRTF was removed from `sprtf.h`!!! **WHY???**\n\n```patch\ndiff --git a/src/sprtf.h b/src/sprtf.h\nindex 14c3e02..c589707 100644\n--- a/src/sprtf.h\n+++ b/src/sprtf.h\n@@ -62,10 +62,6 @@ TIDY_EXPORT char *get_date_time_stg();\n TIDY_EXPORT int gettimeofday(struct timeval *tp, void *tzp);\n #endif\n\n-#ifndef SPRTF\n-#  define SPRTF sprtf\n-#endif\n-\n #ifdef   __cplusplus\n }\n #endif\n```\n\nWithout this, in other places `SPRTF` is just defined as `printf`... I **only** added that in case any use of `SPRTF` was outside the original macro `#if !defined(NDEBUG) && defined(_MSC_VER)`... There should be **none**, and that define to `printf` should be removed now that `sprtf.[h|c]` is included in **all** ports...\n\nAnd agreed, it is trivial to **only** accept the **additional** debug options, if the primary is on, or at least warn and/or advise that otherwise say if `ENABLE_ALLOC_DEBUG` is set by the user, it will do **nothing**...  this should certainly be added/done one way or another...\n\nAnd I do **not** particularly want to somehow stop enabling the extra debug in the `Release` build. As you point out that is their deliberate choice... \n\nThe only thing I would like is to be able to add it **only** in the Debug configuration, by default if **possible**, IFF MSVC... as I had, but as stated, not important, and will work on that...\n\nThe main thing now is to even get the log file written, in **all** ports, if `ENABLE_DEBUG_LOG` is `ON`...\n\nWill try to work on solutions here, as time permits, but would be great if you beat me to it... thanks...\n. @balthisar well to be very frank it is **not** `a can of worms you opened!`, but more what you **created** in merging the `sprtf` branch without fully testing, or waiting for a **review** ;=))\n\nNow I see **more** potential problems! You have **included** `sprtf.h` in `tidyplatform.h`, but `sprtf.h` is **not** a header included in the distribution, **nor** should it be, so a `libtidy` user will potentially **not** be able to link with `libtidy` in their app...\n\nThey will include `tidy.h`, and if they define `ENABLE_DEBUG_LOG` accidently or experimently or for what ever reason, they will find they are missing an `include`.  That should **not** be the case...\n\nIf we **do** want to add SPRTF to the distribution, and I suggest **not**, then at the very least `sprtf.h` should be **renamed** to say `tidysprtf.h` to avoid any generic clash of names... But I obviously think `distributing` it is a **BAD** idea... aside from the fact that the **extra** debug stuff would **not** be in the library anyway...\n\nIn essence, we should **never** be distributing a `libtidy` with this enabled. So it should have **no meaning** if accidentally enabled in someone's 3rdParty app... they would be linking to a `libtidy` that does not contain this **extra** debug stuff anyway... full stop!\n\nI do not mind the **restriction** that `ENABLE_DEBUG_LOG` can **only** be done if you are building the library from source... \n\nTo me the **only** use of this **extra** debug stuff, is if you are **DEBUGGING** a potential problem in **libtidy**, before it is distributed... and really helped me recently to track down the problem #597, and several other items before this... it is also a learning/teaching tool... thus `sprtf.h` should **only** be available in the **source**!\n\nMy fixes would include essentially moving `ENABLE_DEBUG_LOG` out of `tidyplatform.h`... `sprtf.h` would only be included in modules that use SPRTF, and defining `SPRTF` as `sprtf`, if **not** defined, **not** `printf`...\n\nBefore I start making **fixes**, in perhaps an `issue-604` branch, to close this `can!`, are we in **full** agreement on this? Or am I misunderstanding something? Missed something else you have in mind? Please advise... thanks...\n. @balthisar pushed initial cut to `issue-604` branch... looks good in Windows MSVC... still to test in Ubuntu...\n\nOther testing welcome... thanks...\n. Have now pushed another small fix to the `issue-604` branch to **not** include the `sprtf` code unless ENABLE_DEBUG_LOG is **ON**... and re-tested in Windows 10...\n\nNote, have added back the auto-building of `ENABLE_DEBUG_LOG` in the MSVC **Debug** configuration, that I had, but this can be disabled by defining `DISABLE_DEBUG_LOG`...\n\nHave now further tested it in Ubuntu 14.04, **and** in Raspbian GNU/Linux 8.0 (jessie), and all appears to work fine...\n\nConveniently, issue #631, @jokester PR #630 provides a convenient memory leak test. I have a perl script, `shwtidymem.pl`, which will analyse the `temptidy.txt` log file, and correctly report the memory leak...\n\nThus in a `build/temp-604` did the following... Note, it is using the `Release` build in this case, but could just as easily been the `Debug` build...\n\n```\n$ cmake ../..  -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_DEBUG_LOG:BOOL=ON \\\n-DENABLE_ALLOC_DEBUG:BOOL=ON -DENABLE_MEMORY_DEBUG:BOOL=ON \\\n-DTIDY_RC_NUMBER=I604 -DCMAKE_BUILD_TYPE=Release'\n... skipped ...\n$ echo \"Hello World\" | ./tidy\n... skipped ...\n$ shwtidymem.pl temptidy.txt\n... skipped ...\n262:102: FREE 0x20fc008 6924 1\nFound 104 alloc, 0 realloc, and 102 frees...\nTotal mem 129668, Max mem 29635\nRemains 2 in HASH\nOrdered list...\n# :cnt: address          size\n 1:  7: 0x20fe660 24\n 2:  9: 0x20fe708 256\n```\n\nNote it clearly shows the memory leaks... real easy...\n\nNow I would/could share the `shwtidymem.pl` script, but it also requires my `lib_utils.pl`, but must find a place to put these... suggestion welcome...\n\nSo this has now been tested in Windows 10, Ubuntu and Raspbian, and all appears ok... created PR #632...\n\nIf others could review/test would merge that PR... thanks...\n. @balthisar well they were **always** there, just under an `if (MSVC)`... \n\nAs discussed elsewhere it is not really possible to switch things according to the MSVC build configuration, Debug, Release, etc, at the cmake level... and I only recently got my **auto-special-debug** back working as I had, and would like to keep that, if possible...\n\nWhat is the **notice** you are seeing?\n\nThe `sprtf.c` has no code if `ENABLE_DEBUG_LOG` is **not** on. I know some compilers warn when there is no code in a module... easily **fixed** by putting some small thing outside the macro... or is it something else...\n\nMaybe the original macro could be changed to `if (MSVC OR ENABLE_DEBUG_LOG)`, or something... \n\nWhat are you suggesting? Thanks...\n. @balthisar although still thinking about adding an `if (MSVC)` option for `DISABLE_DEBUG_LOG` have decided this is quite minor, so will forget it for now...\n\nAccordingly, agree, seems this can be closed...\n. @rffontenelle **AWESOME** - thank you...\n\nAnd sorry about the misleading PR against `master`, in `localize/README.md`. \n\nWe missed that when we switched to using `next` as the default development branch... and maybe this also needs to be fixed in `README/CONTRIBUTING.md`...\n\nThe file `README/BRANCHES.md` does already make it clear that a PR should be against the **development** `next` branch... but for sure all files should convey the **same** idea...\n\nFrom my perspective this can be merged, but @balthisar is our language guru... thanks again...\n. @balthisar checked out this `dialogue_cleanup` branch, and it built fine in Windows...\n\nAnd a run of the regression tests using this 5.5.37-exp-jsd, 2017.08.31 version showed no problems...\n\nFrom my perspective, this can be **merged**, with the obvious `version.txt` change... thanks...\n. @balthisar I have tried to comment on this several times, and always get into a **too long** mess! This is still **too long**, but is the **shortest** so far...\n\nWhile your `tl;dr` summary reads good, invoking a `yes, that is what we want`, my first thought was `but is this not what we have now, more or less?`. Not perfect, but par contre, not **too/so** bad...\n\nReading, and re-reading, the text above the `summary` does not seem to clarify exactly what you want to do! What will really be changed? How will that improve the situation? A branch/PR may certainly help...\n\nIt seems clear you want to replace `TidyShowErrors(b)/TidyShowInfo(b)/TidyShowWarnings(b)/TidyShowMetaChange(b)` with `TidyLimitReports(int)/TidyShowReports(enum)/TidyShowFootnotes(enum)`, and maybe modify `TidyQuiet(b)`, but not sure about that exactly... Hmmm, wow, I really do **not** see the **full** purpose here... sorry...\n\nAnd then you follow this with #608 - formalize `footnotes`, and #609 - cleanup `config`... again, while everybody can agree with the simple sentiment in their repectvie titles, the final results still seem unclear for me...\n\nThe end result, which ever way you look at it, is considerable **backward compatibility** will be lost!\n\nAnd a small word about `TidyShowMetaChange`. I introduced this **only** to maintain compatibility... \n\nAnd while I can see the **new** nomenclature of `footnotes` standing for the bit field of `TY_(ErrorSummary)`, do not see it as a simple replacement of `Info` messages, which includes `tidyGeneralInfo`... these seem different... but...\n\nAt the very least I would ask that such changes, if it is what is desired, be moved to a milestone beyond the next 5.6 release of Nov 23, 2017... In other words, such message type/groups changes, and config changes be introduced immediately **after** the 5.6 release, and we have time before the next release to deal with what ever crops up...\n\nIn other words, such a comptibility change should come at the **beginning** of a development cycles, not dropped in virtually weeks before a release...\n\nAlternatively, maybe we could add a **new** `tidy6` console app, shipped with tidy, so users can try it, and give us feedback before that is the only `app/lib` shipped, re-named to `tidy`... just an idea...\n\nI do want change, improvement, and I am sure many others do too, but we, as the current maintainers, should **not** make ourselves the sole arbiter of change, no matter how good, logicial, it is... Given the current 17 year history, we should give a year or **more**, to get feedback... If little or none, as has been the recent case, then we proceed, else we find a compromise that suits most...\n\nFor some reason I feel like I am `raining on your parade`... sorry about that... maybe I am too old, and conservative... but if I had a current compatible tidy-5.6, and a **new** tidy6 to play with, I am sure I can adapt...\n\nMeantime, there seems a large number of issues, **bugs**, **feature requests**, ... to deal with, but I understand voluntary **work** leads us to do what we are most interested in...\n\n### I certainly **hope** we get more **feedback** on this topic... thanks...\n. @pwang2 thank you for the issue... this indeed seems a tidy5 **bug**... tidy does **not** recognized the `<template>` tag correctly, if I read the W3C documentation correctly...\n\nWhile we do try to take notice of `developer.mozilla.org` docs, our guide is W3C, but I have found a similar reference in W3C documentation - [the-template-element](https://www.w3.org/TR/html5/scripting-1.html#the-template-element) - which indicates the `Content model:` allows a considerable range of `elements`... \n\nTidy seems for sure **wrong** in inserting a `<table>` element, if in a `<template>` element... but not sure there is a problem with the insertion of newlines, but maybe...\n\nWe are shortly to issue a new 5.6 release of tidy - see #600, Nov 23 - and if someone does not work on this soon it may be necessary to extend the `milestone`...\n\nAdded 3 test files to my repo [in_611.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_611.html), [in_611-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_611-1.html), and [in_611-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_611-2.html), for easy testing... \n\nFurther, for `in_611-2.html`, which **passes** [Nu Html Checker](https://validator.w3.org/nu/#file), appears tidy will move the `<template>` **out** of the `<table>` if present... and tidy's output ends up being a very different html, and thus **breaks** browser rendering, two **important** issues for tidy...\n\nI will try to find the time to look deeper. It should just involve checking tidy is not in legacy mode,  and extending some internal tables... hopefully...\n\nHope others also gets a chance to look at this, and present a patch or PR... thanks...\n. Moving out the milestone...\n. @sharpaper, as @balthisar suggested, `vertical-space: auto` is the only type of `minify` we have...\n\nAnd you might try adding `omit-optional-tags: yes` to the list...\n\nLet us know whether this does what you want... thanks...\n. Ambivalent...\n\nSo marking it as a Feature Request, and moving out the milestone...\n. @balthisar wow, this sort of seems like an out-of-the-blue **Feature Request** ;=))\n\nI have now had a chance to `checkout` this `squelch_reports` branch, and test it using the `pr_629` branch of `tests`... and it works... thanks... \n\nYou say the reason for this is - This gives the user great control over hiding things that he or she doesn't care about seeing. - sounds good... no problem...\n\nIs this a Feature Request by you, or do others feel the need for this as well? Please ponit me to the issues...\n\nI am afraid I still do not see any use case where specific messages need to be suppressed, other than the control we already have...\n\nMaybe you can open a `Feature Request` issue to discuss this further...\n\nAnd the name, `squelsh`! Yes, in the lexicon of this word, there is a sense of `suppress`, maybe `mute`, but in general, at least in English dictionaries, as opposed to American, is has -\n\n 1. sound treading through mud\n 2. electronic: suppresses signals below certain level\n\nAnd wikipedia seems to concentrate on the second meaning...\n\nYes, in say Merriam-Websters, I can find the senses of `quell` or `silence`... usually `resistance` or `protests`... \n\nThen it seems you want the user to **know** the message identification name, internal to the library, like `MISSING_ENDTAG_OPTIONAL`. Where are these published, except in the source, in `language_en.h`, and `tidyenum.h`?\n\nAssume you intend to massively expand the public API, so that I could find a message to be `suppressed`, and thus find its identification name, to even be able to use this `squelch: <name>` option... **users** should **not** have to search source code...\n\nFinally, tidy library user can already install a message filter, which you also added, to filter out what they do not want...\n\nYou can see, at this moment, without lots more discussion, and reasoning, hopefully in a feature request `issue`, I do **not** see the reason for this... sorry...\n\nOk, back here later - I always prepare my replies offline - and trying to be **positive**...\n\nFirst still against the choice of the option name, `squelsh`!\n\nIf I was searching for options to `suppress`, `mute`, `silence`, `quell`, `stop`, `inhibit` a particular message, I do not think I would **ever** think of `squelsh`! Maybe something in my Australian English education, but I have travelled, and worked, all over the world... But ok assume a better choice of the option name is chosen...\n\nReally what is the **use case**, given that I understand it will still count in the warning/error count?\n\nWe can use `-q` to quiet them all... and there is a limiter, `--show-error NN`, and given that a library user can filter messages - `The filter has had a chance to suppress *any* message from output.`... what more is needed?\n\nIs this just a way to `retire` at some point, `TidyShowMetaChange` and `TidyWarnPropAttrs`, and stop more of these? But then you add **more** code to `replace` these...\n\nI guess I should stop here. It goes without saying, I do **not** support this PR, at this time... \n\nMaybe more feedback will make it clearer... maybe I am just confused... thanks...\n. @balthisar ok, warming to the idea ;=)) with the name change to `mute`, and I had completely miss-read the meaning of the `--mute-id yes` option... now exploring with my tidy 5.5.63.I629...\n\nTwo things I found -\n\n 1. It seems it only works on warnings and errors?\n 2. The noisy `Config: ...` output seems not suppressed by `-q`?\n\nThe output of `Info: Document content looks like HTML5 (STRING_CONTENT_LOOKS)`, and I add `--mute STRING_CONTENT_LOOKS`, will give me `Config: option \"mute\" given bad argument \"STRING_CONTENT_LOOKS\"`. So is muting of `Info: ...` messages not possible, except by `--show-info no`?\n\nAnd although I added `-q` I still see -\n\n```\nConfig: messages of type \"MISSING_DOCTYPE\" will not be output\nConfig: messages of type \"INSERTING_TAG\" will not be output\nConfig: messages of type \"MISSING_TITLE_ELEMENT\" will not be output\n```\n\nI guess I expect `-quiet` to really be **quiet**?\n\nStill exploring... thanks for the additional comments...\n. @balthisar, thanks, `STRING_CONTENT_LOOKS` has now been **fixed**...\n\nI guess we have a different idea about changing the `errout` messages!\n\nAs you correctly point out, I added `TidyShowMetaChange` specifically, and **only** to maintain the existing `errout` regression test messages... The idea being that there would be a period where people could get used to these **new** messages... Then maybe we later switch the option default to **yes**, and again wait for maybe a few release cycles... And after all that **patience**, maybe **remove** the option... A steady, careful, measured progression...\n\nBut a recent PR, this?, or another?, you at the same time **changed** some 30 plus `expected` messages... This completely tosses **out** my very **cautious** approach...\n\nI am trying hard to get over my **caution** ;=)) Maybe you are **right!** `errout` messages should **not** be considered **important**... but I still sit on the fence...\n\nAnd certainly **agree** `-q`, if given early in the command, should also **suppress** `Config:...` messages. Did not test, but could only find one `testbase-expects/*.txt` that has a `Config:` message, case-431716, but does not have `-q`, so should not change... but as I say, not fully tested...\n\nBut ok, let's **go for it** ;=)) We may or may not get **blow-back** when we release 5.6, hopefully next month...\n. @jokester see `issue` #631... will merge this shortly... thanks.... @jokester PR #630 now merged to `next`, so guess we can close this...\n\nPlease feel free to re-open if **not** fixed, or open new issues... thanks...\n\n. @balthisar sorry for the brief delay on this. Got sucked into another project which should end shortly and can then cycle back to `tidy`...\n\nThanks for the addition testing, but want to add a MSVC only cmake option, `DISABLE_DEBUG_LOG`, to enable cutting out the extra debug code in the MSVC Debug build, if need be...\n\nBe back soonest... thanks...\n. @usamec **wow**, using wget, that is something like a 2.3MB file, over 100,000 lines, some really long...\n\nTidy exhausts the default Windows stack after some 3,551 interations into `ParseBlock`, parsing a massive, meaningless, seemingly **empty** `<dl><dd><dl><dd><dl><dd><dl><dd><dl><dd><dl><dd>...etc, etc, etc` sequence... \n\nEven my default Notepad++ editor has **big** difficulty with this file... and seemed a near endless load in Chrome, not ended until I closed it...\n\nAs @balthisar has pointed out, this is a repeat of #343, and others, and **no work** is either being done on a **full** rewrite of tidy to remove the recursive process, **nor** on possibly adding some type of configurable **recursive counter**, and stopping the process before the **inevitable** `out-of-stack` **CRASH**...\n\nAccordingly marking this as `Won't Fix`, and closing it... but as usual thanks for pointing this out again... we just hope there are **not** too many such nasty **deep** beasts in the wild... thanks...\n. @usamec FWIIW that file, of its 111,563 lines, some 83 blanks, and 46 spaces only, has one line some 881,372 characters long, which I think is what gave my editor a big **headache**, and it is entirely made up of the sequence `<dl><dd><dl><dd>...etc, etc, etc...<dl><dd>Hi`... **meaningless**, **stupid** html...\n. @usamec yeah, sorry that **tool** can not be `tidy`...\n\nI do not exactly understand why you are `crawling` the web, and parsing **random** pages, but again FWIIW my simple personal perl html parser script was able to handle that file, and gave me the `stats`... html parsing in perl is not all that difficult. Maybe you could write a script to do that... just an idea...\n. @balthisar have **tested** this `quiet_fix` branch, and together with [PR 24](https://github.com/htacg/tidy-html5-tests/pull/24) `quiet_fix` branch in tests and it all works as expected...\n\nGiven that the one test case changed, 1067112, originally [SF Issue 638](https://sourceforge.net/p/tidy/bugs/638/) was about **fixing** an empty `<o:p></o:p>` tag, and nothing about message output, and this remains **fixed** in the html output, reducing the `expects` message text to a null file seems fully correct... with a config containing `quiet: yes`, and `show-warnings: no`, there should be **no** output...\n\nAlso thanks for undating the `.po`, and `.pot` files to better reflect the meaning of `--quiet yes`...\n\nAccordingly, think this and PR 24 in tests should be merged, and will do so shortly, unless you beat me to it... thanks...\n. @suchafreak thanks for the issue, and the sample code...\n\nWhat version of `tidy` are you using?\n\nI just ran a quick test with `next` 5.5.63, using your sample and config and do **not** get a **hang**? With or without your config...\n\nIt does report -\n```\nline 115 column 9 - Warning: missing <tr>\n```\n\nas well as many -\n\n```\nline 9 column 1 - Warning: <table> attribute \"align\" not allowed for HTML5\nline 13 column 17 - Warning: <td> attribute \"align\" not allowed for HTML5\nline 18 column 17 - Warning: <td> attribute \"align\" not allowed for HTML5\netc etc etc\n```\n\nHave I **missed** something? Thanks...\n. @suchafreak as you can appreciate, a **hang** is considered a very **important** BUG!\n\nI have now re-tested the above `sample` with releases `5.0.0`, `5.2.0` and `5.4.0`, as well as with the latest `next` 5.5.70 and **unable** to repeat this problem with this sample...\n\nIn this case can you post a **full** file somewhere... or `files` if as you say **It is not the first time...**...\n\nMust be able to reproduce the **hang** to even begin to search for a solution... thanks...\n. @jokester thanks for the issue...\n\nSeems to be at least two questions here -\n\n 1. Use of `strdup` versus `tmbstrdup` in library\n 2. GCC C standards, and portability\n\nFirst, concerning the use of `strdup` in the **library**, I feel this is wrong. **ALL** memory allocations in the library should use **TidyAlloc**, ie `tmbstrdup`...\n\nThis is so that other apps using `libtidy` can supply their own memory allocator, especially including what to do in case of a `failure`, ie **panic**... When the library is part of a bigger app, it may not be appropriate to just `exit` that app, so they can add their own memory handler...\n\nSo my suggested patch for that, which includes replacing the `free` also, is -\n\n```diff\ndiff --git a/src/language.c b/src/language.c\nindex 6ef97f5..4f758ea 100644\n--- a/src/language.c\n+++ b/src/language.c\n@@ -335,7 +335,7 @@ tmbstr TY_(tidyNormalizedLocaleName)( ctmbstr locale )\n     uint i;\n     uint len;\n     static char result[6] = \"xx_yy\";\n-    tmbstr search = strdup(locale);\n+    tmbstr search = TY_(tmbstrdup)(&TY_(g_default_allocator), locale);\n     search = TY_(tmbstrtolower)(search);\n\n     /* See if our string matches a Windows name. */\n@@ -343,8 +343,8 @@ tmbstr TY_(tidyNormalizedLocaleName)( ctmbstr locale )\n     {\n         if ( strcmp( localeMappings[i].winName, search ) == 0 )\n         {\n-            free(search);\n-            search = strdup(localeMappings[i].POSIXName);\n+            TidyFree(&TY_(g_default_allocator), search);\n+            search = TY_(tmbstrdup)(&TY_(g_default_allocator), localeMappings[i].POSIXName);\n             break;\n         }\n     }\n@@ -376,7 +376,7 @@ tmbstr TY_(tidyNormalizedLocaleName)( ctmbstr locale )\n         }\n     }\n\n-    free( search );\n+    TidyFree(&TY_(g_default_allocator), search);\n     return result;\n }\n\n```\n\nGood catch...\n\nAs to the GCC standard to use, I will leave that to others, but it is important to understand that MS compilers may not exactly follow the **same** GCC standard...\n\nAnd given that `tidy` is a relatively simple `C` project, it should be compileable by the oldest MS compiler possible, within reason... at this time at least MSVC10 (2010), which I understand did not, could not!, have `full` c11 (2011) compliance...\n\nNot much experience with older versions of GCC... but have no problems with my Ubuntu 14.04, gcc 4.8.4, circa 2013...\n\nLook forward to further feedback... thanks.... @jokester look forward to the replacement of `strdup/free` appropriately... thanks...\n\n@balthisar just tried a MSVC 10 build, my first for a while, and it failed! Needed the following small `context` change -\n\n```diff\ndiff --git a/src/config.c b/src/config.c\nindex 2a40f15..2f6bc16 100644\n--- a/src/config.c\n+++ b/src/config.c\n@@ -581,8 +581,9 @@ static Bool subDeprecatedOption( TidyDocImpl* doc, ctmbstr oldName, ctmbstr oldV\n             }\n             else\n             {\n+                ctmbstr val;\n                 TY_(SetOptionInt)( doc, newOptId, value );\n-                ctmbstr val = tidyOptGetCurrPick( tdoc, newOptId );\n+                val = tidyOptGetCurrPick( tdoc, newOptId );\n                 TY_(Report)( doc, NULL, NULL, OPTION_REMOVED_APPLIED, oldName, newName, val );\n             }\n         }\n```\n\nWill try to get around to adding this MSVC 10 build more frequently... it is a good test...\n\nI have tried several times before to add some flag to `gcc` to **show** up this, but have never succeeded! See discussion in #460, #453, and maybe others...\n\nI was able to gcc compile tidy using `-std=c11 -D_GNU_SOURCE`... the main problem seems to be **uint** not being defined, without `-D_GNU_SOURCE`, but **uint** is used a **lot** in tidy source... some 750 times... as can be seen in earlier discussions, this **uint** problem is something I do not understand fully...\n\nNote a `typedef unsigned int uint;` is done in `tidyplatform.h`, which is where it is defined in the Windows build... see [Lines 544-555](https://github.com/htacg/tidy-html5/blob/next/include/tidyplatform.h#L544)... and note the **interesting** comment that starts this block...\n\nAnd more puzzling, I specifically modified the CMakeLists.txt in `tidy` to do this, but in another `C` project noted that it seems, under **certain circumstances**, cmake generates a `Makefile` that **includes** the flags `-std=c11 -D_GNU_SOURCE`... but then in another `C` project it did **not** add these flags??? What were the **different** circumstances???\n\nSeems lots to explore, discuss, and **understand** here, **before** changing anything...\n\nAnyway, look forward to the simpler `strdup` fix... thanks...\n. @jokester assume you meant `strdup/free`, in the **library**, of which there are only 2, shown above... thanks...\n\nOf course, `malloc/free` are the default allocators in the **library**, if a user does not supply his/her own, so do exist, but **once** only... \n\nAnd `malloc/free` can be **freely** used outside the **library**, as in the console app, `tidy.c`... there is no problem here...\n\nAnd I have solved my `flag` problems. Seems cmake caches any flags used, and I think it was just that I did not clean up a previous build, i.e. at least delete `CMakeCache.txt`, before conducting further gcc flag experiments...\n\nConcerning `uint`: In my Ubuntu 64-bit system, I do find `typedef unsigned int uint;`, in `/usr/include/x86_64-linux-gnu/sys/types.h` but it is under an `#ifdef __USE_MISC` guard, so I guess adding `-D_GNU_SOURCE` adds this... but only needed if you also add `-std=c11`...\n\nBut as you point out, that should be a separate issue, if it is thought there is some problem to be addressed here, but I see none at the moment... certainly see no problem maintaining `/* Old compatibility names for C types. /*`, that is used some 750 times in **libtidy**...\n\nLook forward to a PR if you get the time, or I can apply the above patch... thanks...\n. As can be seen pushed a small fix to compile with MSVC10 2010... not really related to this issue... thought too small to bump the version...\n\nBut since #637 is now merged to `next`, guess we can close this...\n. @jokester thanks for this PR replacing `strdup/free` with `TY_(tmbstrdup)/TidyFree`... this is great...\n\nNot so sure about the need for the comment change in `tmbstr.c` but minor...\n\nBut your discovery of one case of a `malloc`, and changing it to `TidyAlloc`, certainly raises some questions! \n\nAs far as I can see it is **not** used in the **library**, and is passing the allocated memory out of the library for the user app to free. It guards, and warns in its comments, that it can be `null`, while `TidyAlloc` will **abort** if it fails... quite different behaviour...\n\nThis raises the question what is this API doing in a HTML parsing library at all... but will raise that as a separate issue soonest... if/when I get the chance...\n\nStill to get around to a test in an app that **replaces** tidy's default allocator with its own... but expect no problems... Will do that shortly... \n\nMeantime, no objection to a merge, as is... thanks...\n. @jokester,\n\n> Oops, I misunderstood what `tidySystemLocale` really does.\n\nMe **too!**, given its `confusing` comments, and that it only does `setlocal(...)`! Why is it in **libtidy** at all? If `tidy.c` needs to do this, and I am **not** sure it does, then it should do it **all**... It certainly does **not** seem required in Windows...\n\nI would think that a user of a particular language would already have the console setup as desired, i.e. `stdout/stderr`, or could set it up differently, outside `tidy`, if need be... so maybe this API can be removed... \n\nThis is the jist of the separate issue I was going to raise, but maybe can be dealt with here...\n\nMaybe @balthisar will comment when he gets a chance, since I think he introduced this code as part of localization... part of commit 53f2a2da2, and maybe others...\n\nStill to get around to a test the `strdup` replacement using an `external` **allocator**, but as stated, do not expect any problems... thanks...\n. @jokester now merged... and bumped to version 5.5.74... thanks...\n\nHave done some initial tests with my [tidy-opts](https://github.com/geoffmcl/tidy-test/blob/master/src/tidy-opts.c), which has a `test 2` which replaces the default tidy `allocator`  and all is ok, but need to do more...\n\nWill try to open a separate issue to address the other API questions raised here...\n. @jokester, @balthisar, **OOPS**, all is **not** right, or at least **not** what I `expected`!!!\n\nIt seems using `doc = tidyCreateWithAllocator(&allocator.base);` does **not** set the `g_default_allocator/g_malloc/...` as I expected!\n\nIt does set the `allocator` used in a `TidyDoc`, so most allocations are done using my replaced `allocator`, but **not** anything using the `g_default_allocator`...\n\nThat does **not** necessarily negate this `merge`, but it seems to point out **more** needs to be done...\n\nIf I create a `doc` giving my `allocator` I guess I expect that to be used in **all** allocations... seems to do that I maybe need to specifically do `tidySetMallocCall` with my `malloc`, etc, etc...\n\nWill revert after **much** more testing, and understanding... further feedback appreciated... thanks...\n. @bpj have you tried the `-c`, `-clean`, or `--clean yes` option? These are all the same...\n\nThis will convert -\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>head</title>\n</head>\n<body>\n<p>I am normal</p>\n<p style=\"color:red;\">I am red</p>\n<p style=\"color:blue;\">I am blue</p>\n<p style=\"font-size:36px;\">I am big</p>\n</body>\n</html>\n```\n\nto \n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.5.76\">\n<meta charset=\"utf-8\">\n<title>head</title>\n\n<style type=\"text/css\">\n p.c3 {font-size:36px;}\n p.c2 {color:blue;}\n p.c1 {color:red;}\n</style>\n</head>\n<body>\n<p>I am normal</p>\n<p class=\"c1\">I am red</p>\n<p class=\"c2\">I am blue</p>\n<p class=\"c3\">I am big</p>\n</body>\n</html>\n```\n\nIf that is **not** what you meant, or have some other question, then you will need to **explain** more...\n\nIncluding tidy **version**, giving some **sample** input code, what **config** used, what **current** output, and what you **expect** as output... thanks...\n. @bpj as asked, does the above **answer** your question... can this be **closed**? Thanks...\n. No response, so assume can close this...\n. @balthisar,\n\n> Delete the Library routine completely, and do this in tidy.c:\n\nAgree with this, thanks for the PR #640, **except** the `do this in tidy.c`!\n\nCan this **auto** selection of the language, based on `setlocale(LC_ALL, NULL)`, be done in say `tidyCreate()`?\n\nA writer of an app to use `libtidy`, like console `tidy.c` is, should **not** be burdened with `remembering` this extra step/api call...\n\nAnd that would avoid having to add it to our simple [Sample Program](http://api.html-tidy.org/tidy/tidylib_api_next/libtidy_04.html)...\n\nThat would not stop application writers using the `tidySetLanguage( <lang> )` to set other than that selected by such an `auto` process, should they really want output in some other available language...\n\nI have just done some crude, quick tests with my [sample2](https://github.com/geoffmcl/tidy-test/blob/master/src/sample2.c) app, and was great to read the messages in say french, or a little chinese... \n\nOf course, as always the console output looks `strange`, but when written to a file, and loaded in a sensible editor, saw the correct stuff... As I have now read in several places, the Windows console has almost no support of utf-8, unless you do some quite drastic changes... certainly **not** as simple as changing the codepage as some suggest... but that is another subject...\n\nJust an idea to try to keep the use of `libtidy` as simple as possible...\n. @balthisar yes, I am aware there **are** some purely `get string` api functions that do **not** depend on a `tidyDoc`...\n\nBut look at the console `tidy.c`, and our `sample code`, and my **several** tests in my `tidy-test` repo, the very first thing done is `tidyCreate`, whether it is needed or not... this is how we ask people to run the library... **get a `tidyDoc`**... \n\nAnd as in `tidy.c` if just outputing some strings, like `-help...`, in its many forms, will release that `tdoc` before exit...\n\nIf some user chooses to ignore that startup, and only use some pure `strings` api, then they would get the default language, unless they specfically set `tidySetLanguage( <something> )`, which to me seems ok... but this seems very unlikely `libtidy` be used that way...\n\nAnd even one `Remarks` in the api docs, on one of the pure string functions makes it clear - \"These are provided for documentation generation purposes, and probably aren't of much use to the average LibTidy implementor.\"\n\nThe main point is I do **not** want to add an extra **burden** on the **average** `libtidy` use! Force people to `remember` this extra step/api call! **Make** them add it to their app, if other than english is their `locale`...\n\nIt should be **automated** within the library. And as indicated, a user can choose to override that and directly use `tidySetLanguage`, but normally should **not** have to be concerned about this...\n\nI still **vote** for removing `tidySetLanguage` from `tidy.c`...\n. @balthisar sorry, but I only just noted you did **not** do exactly what you **suggested** in the above comment, in the PR, namely -\n\n```\n    tidySetLanguage( setlocale( LC_ALL, NULL ) );\n```\n\nMy reading of `$ man setlocal` this does **exactly** what we want -\n\n```\n    If locale is NULL, the current locale is only queried, not modified.\n```\n\nWhy in the PR are you using `\"\"`, which does indicate **modification** can occur, but maybe not important... somehow still prefer the `NULL`... maybe this is what you meant, but somehow typed `\"\"` thinking they are the same...\n\nI would imagine say a french PHP-tidy user would be upset if tidy messages stayed in english, unless the  `PHP<-->LibTidy` **glue** code, which does `tidyCreate`, was changed to include a `tidySetLanguage`... and the same for **all** `LibTidy` clients... \n\nYou're right, I am **against** change that causes **each and every** client to add something which can equally be done in the library `tidyCreate()` function...\n\nAs to adding `Bool manually_set;` to the structure, I do not feel this is **necessary**, but have **no**  problem with it... and the additional functions to manage it... seems messy overkill, but no prob...\n\nI would think that a `libtidy` user who wants to set a language other than the `locale` would have no problem repeating the `tidySetLanguage`, should they also have the **need** to create another `TidyDoc`... already an unusual, special case...\n\nAnd also have no problem with the `tidyCreate` doxygen comment change to satisfy your `semantic` sensibilities ;=)) \n\nI might even add something like - \"`tidyCreate` should be the **first** call, before **any** other api calls, whether they use the `tdoc`, or **not**\" - or **not**... I have always considered it implied **initialize**, but nothing wrong with explicitly adding, stating it...\n\nAre we good to go? thanks...\n. @balthisar oops, seems I should have tested more before speaking...\n\nIn Windows `setlocale( LC_ALL, NULL )` just returns `C`, which is **not** what we want...\n\n`setlocale( LC_ALL, \"\" )` returns `English_United States.1252`, which is what we want...\n\nSo, at least in Windows, `\"\"` is what is needed... sorry for the mix up...\n\nNot against your `defense flag`, but still question the **reasoning**, and **need**, but **not** important...\n\nLet's get it done... thanks...\n. This PR seems good-to-go... any testing and feedback appreciated... thanks...\n. With the above hot fix tidy 5.5.85 seems to fully pass all tests.... @jokester well concerning the **`LibTidy`** public API, I think those are the only two which allow `elements` to be deleted from the tidy DOM like tree of nodes...\n\nThe **public** API is very light on services to manipulate, mutate, change, add to, etc, the **opaque** tree of nodes... I guess the tidy founders never saw `libtidy` as a builder of a document other than by reading html...\n\nOf course **internally** there are quite a number of functions which create, add, place `nodes` into the tree, including a `coerce` function, the word it uses, to mutate a node from one type to another... these will either be `static` - ie only available in that module, or encased in the `TY_(<name>)` macro, which is libtidy's way of saying - only for use within the library...\n\nIn the main, the module `clean.c` has many of these `manipulators`, but they can be anywhere... \n\nAnd as far as I can see those two public API functions are **not** used in the library... but `tidyDiscardElement` is converted to the internal function, `TY_(DiscardElement)`, and `tidyAttrDiscard` to `TY_(RemoveAttribute)`, which may be used internally...\n\nThis points out the interesting way public API functions only use **opaque** structures, which are `cast` to a visible structure internally, and vice versa passing out of the library...\n\nIt is hard to know what to add, cover, without exactly knowing the reasons behind the question...\n\nDoes that answer your question? If not, ask or explain more... thanks...\n. Have push a new branch `issue-643` which contains an `entities.c`, with some 2031 entities, scraped from the [charref](https://dev.w3.org/html5/html-author/charref) page with some quick perl...\n\nNow processing that downloaded web page [HT202021](https://support.apple.com/en-us/HT202021) using my new tidy 5.5.76.I643, and adding `--drop-empty-elements no`, the warnings fell from 104 to just 18, and of course none of the warnings were about **unknown** entities.\n\nAnd the test file pushed to my repo, [in_643.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_643.html), goes from 16 warnings, including 2 spurious `missing <li>`, to clean... \n\nAs noted in the source, I have removed the column alignment to keep the total size down to 80K, rather than the nearly 150K for adding sort of meaningless alignment. This is of course much larger than the original 13K.\n\nI hope this is kept sane... it does break a little from tidy's usual **good** code, especially table alignment...\n\nAnd as also noted in the source, I have added some more small optimization steps to the `entitiesLookup` service which depend upon the entities table being kept in alphabetic order, and think this should be fast enough for now, rather than adding to the lib setup time by creating some type of hash. \n\nAlso previously the entities were grouped, but not sure why... did not seem necessary...\n\nAlso I do not specifically know the html `version` that should be used on these new entities. \n\nFor the 253 that existed, I used the version they had. But for all the **new** have used `VERS_CHECK`, which I define as `VERS_ALL`. But if some of these entities do really belong to specific html versions, then this should be replaced as appropriate...\n\nAs noted above, I have only used those in the `charref` W3 page, and not cross referenced this with other lists of entities... but it is now certainly sufficient to address this issue... but maybe there are even more...\n\nIf others, especially `edbrowse`, could checkout this `issue-643` branch and test, this could be merged to `next`, maybe in time for the upcoming 5.6 release, hopefully later this month... thanks...\n. Branch `issue-643` now **re based** to `next` to add the **fixed** header install location, see issue #646, PR #647 ...\n\nTesters must do a **pull** to update their local repo, `issue-643` branch, for further testing, **and** should make sure any installs to `include/tidy` are **deleted**... thanks...\n. @balthisar thanks for your comment in the PR #644...\n\nI have now had a chance to run my test sample [in_643.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_643.html) through the W3C validator, and it **passes**.\n\nSo then I added a [in_643-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_643-1.html), using a legacy `4.01` doctype, and it **FAILED**...\n\nSo I think you are right, maybe `VERS_CHECK` should be set to only html5, or **something**, until we know better... but...\n\nI do not think a browser test is a valid test of this... \n\nIf I was a browser writer, I think I would simply support **all** known entities, and **not** even read, or change anything, according to the doctype... they are **not** in the business of caring about **validation**... just render the document as well as possible... why not support **all** for **any** doctype...\n\nThe wikpedia [citation](https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references) adds a **Standard** column which seems to clearly set a html version for each, but then does **not** seem to include the two that started this issue, namely `&Tab;` and `&NewLine;`...\n\nAnd that article cites various other references, like [html40](https://www.w3.org/TR/1998/REC-html40-19980424/sgml/entities.html), which does indeed suggest many of these entities were allowed in html4 documents, in that case... Then another reference, [html32](https://www.w3.org/TR/REC-html32#latin1) which again shows a list greatly expanded on the some 252? only that **were** in tidy...\n\nSo I do think my defining `VERS_CHECK` to equal `VERS_ALL` is **not** correct, and suggest at this time it be defined as `VERS_FROM40`, which I think would get **many** of them nearly right...\n\nUntil such time someone is willing to take the time and **big** effort and set the actual version for each... and then, where possible **validate** the choice... **not** a simple task...\n\nAnd I have not yet had the chance to run the regression tests on this... but can understand there may be some changes... thanks for starting to look at this...\n\nOf course, Karl, of edbrowse, has reported this `issue-643` branch, as is, works for them... but again they just want libtidy to parse the document, and probably do not have much interest in the doctype...\n\nWhat do you, and others, think about using `VERS_FROM40` for now? Thanks...\n. Further exploration and understandings...\n\nFirst, I **implied** the html 3 and 4 versions had a considerably **enhanced** list of entities, but seems I did not exactly count and compare them, which I have **now** done, and **no**!, it seems up to html 4 there were just some **253** known entities, which tidy has **always** supported...\n\nAnd the version indicated in the [wikpedia](https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references) page largely **agrees** with what tidy currently uses for these... still to tie down the minimal differences, and try to decide which is **right**, tidy or wikipedia...\n\nIt was only in **html 5** that the list jumped upwards to about 2031 entities, so those not already in tidy should **all** be marked as **`VERS_HTML5`** only. These came from the [charref](https://dev.w3.org/html5/html-author/charref) file...\n\nThen I found this slightly bigger [html 5](https://www.w3.org/TR/html5/syntax.html#named-character-references) list, which is available as a [json](https://www.w3.org/TR/html5/entities.json) file... and note the change from calling them `entities`, to `Named character references`... wonder why, but seems ok...\n\nThis adds about an additional 94, and the only reason I can see that these did **not** make it into the `charref` list is that most, maybe all?, have more than one `codepoint`, namely 2 different `codepoints`!. \n\nSo to add these to the tidy supported list, we can only add one or the other value, since our table can **not** have 2 values, and even if the 2 were added separately, our search and lookup services would only ever find the first value, so maybe no point... but this has not been fully checked, and to decide which is the **best** value if using only one...\n\nAlso, I have found a small number of cases where the various tables do **not** agree on even a single codepoint... Need to dig deeper here to see if I can discover the reason, and which is correct! Two known are entity `lang`, code 9001 vs 10216, and `rang`, code 9002 vs 10217... there are about 10 or so, but that seems a separate issue, after we have the bulk of the support included...\n\nAnyway, at this moment working on adding these 94 or so, and as indicated defining `VERS_CHECK` to be `VERS_HTML5`, but also still to explore XML versions...\n\nAlso, at the same time as generating the C table structure for tidy, also generated some HTML, and it seems my chrome browser display a `glyph` for very nearly **all** - great to see... seems independent of `doctype`... will get around to pushing this/these somewhere...\n\nSo moving this forward **slowly**, and hopefully **carefully**... further feedback **very** welcome... thanks...\n. Wow, it is really interesting what you discover by outputting a little HTML ;=))\n\nI can now see why the **94**, with what I thought had **two** numeric values, are **not** in `charref`! It is **not** two values, but an `entity` that sort of **combines** two values...\n\nTake the first, `&NotEqualTilde`. It is a **single** `glyph`, sort of combining two 'glyphs', value `&#8770;`, with `&#824;`, that `overlay` each other, so like tidy, `charref` has no current way to represent this as a **single** value!\n\nThat is they are `entities` or `named character references` that do **not** have a **single** numeric value...\n\nHave to give some thought about how to support this in tidy... feedback welcome... thanks... \n. #### Current Tidy\n\nIf you want to `view` the 253 entities currently supported by Tidy, an uploaded html display is here, [temptidyents.html](http://geoffair.org/tmp/temptidyents.html).\n\nAnd have uploaded a number of other `temp` html pages... see below...\n\n#### Two value entities\n\nStill pondering how to make tidy **support** this **94**, or maybe **93**, entities that consist of two(2) values. Not sure what happened to the 94th? Maybe I miss counted before...\n\nYou can view these `93` here, [tempmultents.html](http://geoffair.org/tmp/tempmultents.html)... \n\nYou can see how each is actually a combined `glyph`, made up of 2 values... sort of overlaying each other, at least in **most** cases...\n\nAnd the last column shows that if you add the two values one after another they sort of work as a sort a surrogate pair, and do seem to produce the **same** single `glyph`. \n\nThat is, for example `&NotEqualTilde;` looks the **same** as `&#8770;&#824;`, so maybe this gives a **clue** on how they **could** be supported in tidy...\n\nAs stated still pondering, exploring, this...\n\n#### Comparison of tables\n\nHave now looked **deeper** into the **9** differences, plus 1 missed from first, and 2 missed from the second.\n\nA html visual is uploaded here, [tempdiffents.html](http://geoffair.org/tmp/tempdiffents.html). Some are slight **variations**, and some appear the **same**, or **equivalent**...\n\nThis is from a comparison of the 2031 entities from [charref](http://geoffair.org/tmp/tempents.c.html) page, [reference]((https://dev.w3.org/html5/html-author/charref), and the 2032 entities from the [json](http://geoffair.org/tmp/tempents2.c.html) page, [reference](https://www.w3.org/TR/html5/entities.json)...\n\nIn that table I show the `entity`, then each value as a numeric entity. So, for example, the first, `&OverBar;` shows a glyph `\u203e`, and `&#175;` shows `\u00af`, and `&#8254` shows `\u203e`, if these appear ok in this github markdown. So in this case the second value 8254 appears more like what the `entity` shows, so I guess that should be the value... and it seems other `choices` of the best value can be made...\n\nAnd others like `&ohm;` looks to really have two possible values, 8486 or 937. How to choose between these?\n\n#### Some conclusions\n\nPerhaps need a second table to support the **93** that are like surrogate pairs... seek ideas, feedback on these... maybe could even be a separate issue... thanks...\n\nIt does seem the branch `issue-643`, taken from the `charref` page is **very** close... perhaps 2 or 3 could be **adjusted**, and 1 added, considering the above `difference` display, but is already largely fully **correct**, for all the single value `entities`...\n\nSo, aside from redefining `VERS_CHECK` to `VERS_HTML5`, seems PR #644 is good to go, and will merge this shortly... comments welcome... thanks...\n. @balthisar seems we sort of cross posted... \n\nAfter `visually` examining the value displays carefully, have now chosen one value over another... and made some other changes, after carefully comparing `charref` and the `json`, so think I have now **answered** most of my own questions...\n\nPresently headed out for a while, but will write this up more on my return later... certainly now consider the PR, with 2032 known, single value, entities very complete and accurate... \n\nThis of course does not yet address the **94** - yes found the other one I think - which are like surrogate pairs... anyway, more later...\n. @balthisar as suggested above I have now **visually** examined all the differences between the two **references**, [charref](https://dev.w3.org/html5/html-author/charref) **and** [json](https://www.w3.org/TR/html5/entities.json). They are the **SAME** for some 2021 entities, and as mentioned the **differences** are enumerated here [tempdiffents.html](http://geoffair.org/tmp/tempdiffents.html). \n\nNote in the last two the `Name` and `G` columns have been correct! That was just a code error in the perl script, `tidyentities.pl`, used to generate that page... it previously erroniously showed `&zwnj;` for both, but their correct names are `&bsolhsub;` and `&suphsol;` as now shown...\n\nThat **visual** examination led me to the 12 changes made in commit 54f14ff9fc. 9 changes in value, removal of 1, `&race;` since it is one of the **93** special pairs, and the addition of 2, `&bsolhsub;` and `&suphsol;`, for some reason strangely missing from the `charref` reference.\n\nFor most of the changed values, the choice is simple, except perhaps `&angst;` although the `glyph` for 197 does look slightly better?, and `&ohm;`, which does seem to have 2 exactly equivalent values.\n\nThese changes were also effected in the perl script, except for the additions, so now the difference between the list generated for the `charref` reference, [tempents1.c.html](http://geoffair.org/tmp/tempents1.c.html), and the list generated for the `json` reference, [tempents12.c.html](http://geoffair.org/tmp/tempents12.c.html) is **nothing**, except for the 2 missed, namely [tempdiffents1.html](http://geoffair.org/tmp/tempdiffents1.html).\n\nIn other words, tidy's `entities.c` **agrees** 100% to the `json` reference, **except** for the **93** - yes, back to **93** since the extra one I thought I had found, `race` was already there - see [tempmultents1.html](http://geoffair.org/tmp/tempmultents1.html), which is unchanged from the previous list...\n\nI too have yet to examine **all** this, at least for the entities with a single numeric value, in libtidy code terms, that is `how Tidy handles this internally`...\n\nAs you suggest, I think when an alphabetic, or `ascii` entity is encountered, it is `looked` up, and if found, only the codepoint is stored in the lexer - **I think**! Of couse, if it is `numeric`, either as a decimal, or hex value, then again the codepoint is stored...\n\nThen we have quite a set of `entity` options, [MarkupEntitiesReference](http://api.html-tidy.org/tidy/quickref_next.html#MarkupEntitiesReference). Namely, with their default - `ascii-chars` **no**, `ncr` **yes**, `numeric-entities` **no**, `preserve-entities` **no**, `quote-ampersand` **yes**, `quote-marks` **no**, `quote-nbsp` **yes**, and hopefully **no** others...\n\nSo I am still to explore how each of these options effect, either the **input and decode**, `or` the **output**. I certainly feel some of the `descriptions` leave a lot to be desired...\n\nBut the extension of this `entities` list does effect two **regression** tests, namely 412 and 437468, that you mentioned... \n\nWas really puzzled by 412 until I dumped it and find the `-` in the title is `E2 80 93`. Current libtidy converts that to `E2 26 23 38 33 36 34 3B 26 23 38 32 32 30 3B`, ie `0xE2&#8364;&#8220;`, which seems **meaningless**!?!?. \n\nAnd the **new** tidy I643 finds the value `8220` matches `&OpenCurlyDoubleQuote;` so substitues that... If it searched more it would find 8220 also matches `&ldquo;`, but the reverse `lookup` will always return just the first found...\n\n**Still trying to get my head around what is happening here???** \n\nThe document/doctype is html 5, so utf-8 assumed. `E2 80 93` seems a **valid** utf-8 sequence, at least my chkutf8 app says so... \n\nWhy do **both** current and new tidy decide to output numeric entities, especially after leaving the `E2` there??? **This is CRAZY**!!! This seems a **bug**, but maybe unrelated to this `entities` issue...\n\nThe test 437468 seems simpler, but maybe **not**\n\nInputs of `&ldquo;` and `&rdquo;` were output in **new** tidy as `&#8220;` and `&#8221;`, in a HTML 4.01 document/doctype...\n\nHmmm, not particularly **wrong**, but why, why, why??? And why were not `&OpenCurlyDoubleQuote;` and `&CloseCurlyDoubleQuote;` found? Some questions here...\n\nWhile I am **not** particularly sure either of these **regression** test changes neccessarily call into question the PR #644, there does seem some questions to answer...\n\nWhat are your further thoughts, or the comments of others... thanks...\n. Ok, had the thought after I posted the above **regression** test questions - maybe the default config sets the character encoding, and **yes**, there it is in `config_default.conf`, **`char-encoding: latin1`**!\n\nSo now, for case 412 it becomes - What is, I think, utf-8, `E2 80 93`, for a dash, `-`, doing in a supposed `latin1` encoded file? That should be **removed**!\n\nBut still, even though that should **not** be there, and should be **removed**, that still does **not** answer **why** libtidy, **old** and **new**, converts the `80 93` to `&#8364`, which is a Euro sign, and `&#8221`, which is a Close-Curly-Double-Quote sign, or `&rdquo;`?\n\nTracing through the code, I can see, if in `latin1` encoding, the `80` falls into an `if ( 127 < c && c < 160 )` block, then the service `DecodeWin1252` returns the Unicode `0x20AC`, ie decimal 8364, which is the Unicode for a Euro sign, and reports an `INVALID_SGML_CHARS`, and of course that is converted to utf-8, `E2 82 AC`, and that is what is stored in the `lexer`.\n\nLikewise, the `93` is converted to Unicode `201C`, 8221, warning reported, and stored in `lexer` as utf-8 `E2 80 9C`, so no mystery here... This action all seems correct...\n\n**Solution:** Propose removing the utf-8 from a supposed to be `latin1` encoded file, and adjust the test  `expects` accordingly. Seems not necessary to have these additional encoding warnings in a test that is **not** related to encoding...\n\nAs usual, headed out for a while, but on return, will look deeper into the 437468...\n. But before checking 437468 got curious about the `output` side of all this... and think I have discovered two **problems** now that we have this extended entity table...\n\nBut first, I had **not** noted, that under `latin1` decode the first character of the utf-8 sequence, namely `E2` got stored in the `lexer` as 2-byte utf-8 `c3 a2`... \n\nIn **output** `PPrintText`, on encountering a char above 0x7f, it uses `TY_(GetUTF8)`, which then uses `TY_(DecodeUTF8BytesToChar)` to get the codepoint...\n\nSo encountering `c3` signals it is a 2 byte sequence, so decodes this back to codepoint `e2`, which is just sent to `AddChar`...\n\nThe next `E2 82 AC`, where the `E2` signals a 3 byte sequence, so decodes this back to codepoint `20ac`, 8364, and `PPrintChar` find this a multi-byte char, ie `(c > 255)`, so gets the `TY_(HTMLVersion)`, at this time is `0x00020000`, which is `HT50`, 131072u, and does a `TY_(EntityName)(code,vers)` lookup...\n\n**BUT** it encounters the code 8364, and this does **not** have `HT50`, so does **not** return the name `euro`, and breaks from the search loop, with the comment `break; /* Found code. Stop search. */`...\n\nThis shows the first problem. The expanded entity list can have many codes **more than once**, so should this `break;` be there?\n\nYou can `see` the output [tempallents1.html](http://geoffair.org/tmp/tempallents1.html), which is listed in **numeric** order, shows 2030 unique entity names, but only 1444 values, and that table is **missing** 2 entities. So quite a number of entities share the **same** value...\n\nThe second is that in the table the `euro` has a version `VERS_FROM40`. One would think that idea **from-40** would include `HT50`, so this brings into question the define `#define VERS_FROM40 (VERS_HTML40|VERS_XHTML11|VERS_BASIC)`! \n\nShould not `VERS_FROM40` include `VERS_HTML5`? And maybe also `VERS_FROM32`, but it seems it is **not** used anywhere, so not a problem...\n\nAnd although not yet fully traced case 437468 can see these 2 apparent **problems** might effect it also...\n\nLogically, the two entities output in **new** tidy, `&#8220;` and `&#8221;` are values that are in the table more than once, so the `lookup` would find `&OpenCurlyDoubleQuote;` and `&CloseCurlyDoubleQuote;` first, and these are marked `VERS_CHECK` == `VERS_HTML5`, so would **not** find `VERS_HTML40`, the doctype, and exit the find loop, with no `name`, thus outputs the numeric entity...\n\n**Proposed:**\n\n 1. Version `VERS_FROM40` have `VERS_HTML5` added, which includes `HT50` and `XH50`.\n 2. That `break;` be removed, to continue to search for other matching entities.\n 3. Version `HT50` be added to `VERS_FROM32`, but not important as not yet used.\n\nThe 2. could still break if a `version` **and** `name` found. Or at the time cost of always searching the **full** 2032 list, not break, to always return the lowercase form, which will always occur after the uppercase item in the current alphabetic list. \n\nThink I would opt for the former, but can see slight reasons for the latter...\n\nSo it is sort of **lucky** that test case 412 included some utf-8, as this helped isolate this problem, but of course it should be removed from a `latin1` document...\n\nRunning out of time today to effect these changes, and do a new round of tests, but will get to it soonest... others should feel free to jump in and test also... thanks...\n\nWho would have thought that a simple table extension could lead to so much, but that's the way it goes, especially with tidy, where one action can have all sorts of unenvisaged consequences... but tidy will be better with this extended table I think...\n\nPS: After effecting changes, found time to run a quick **regression** test, with diff below, but...\n\n```diff\ndiff --git a/src/entities.c b/src/entities.c\nindex abba708..c1b4453 100644\n--- a/src/entities.c\n+++ b/src/entities.c\n@@ -2175,9 +2175,11 @@ ctmbstr TY_(EntityName)( uint ch, uint versions )\n     {\n         if ( ep->code == ch )\n         {\n-            if ( ep->versions & versions )\n+            if (ep->versions & versions)\n+            {\n                 entnam = ep->name;\n-            break; /* Found code. Stop search. */\n+                break; /* Issue #643 - Found code and version. Stop search? */\n+            }\n         }\n     }\n     return entnam;\ndiff --git a/src/lexer.h b/src/lexer.h\nindex 1049c48..50fa2cd 100644\n--- a/src/lexer.h\n+++ b/src/lexer.h\n@@ -207,8 +207,8 @@ typedef enum\n #define VERS_IFRAME        (VERS_HTML40_LOOSE|VERS_FRAMESET)\n #define VERS_LOOSE         (VERS_HTML20|VERS_HTML32|VERS_IFRAME)\n #define VERS_EVENTS        (VERS_HTML40|VERS_XHTML11)\n-#define VERS_FROM32        (VERS_HTML32|VERS_HTML40)\n-#define VERS_FROM40        (VERS_HTML40|VERS_XHTML11|VERS_BASIC)\n+#define VERS_FROM32        (VERS_HTML32|VERS_HTML40|HT50)\n+#define VERS_FROM40        (VERS_HTML40|VERS_XHTML11|VERS_BASIC|VERS_HTML5)\n #define VERS_XHTML         (X10S|X10T|X10F|XH11|XB10|XH50)\n\n /* strict */\n```\n\nNow have two more to check - \n\n 1. 378b, a `--fix-uri no` case, now adds warning, but looks correct?\n 2. 445557, comment says original `-`, to `&ndash;`, to `&#150;`?, but to me output looks better!\n\nBut now 437468 has dropped off - phew! Of course 412, with `utf-8`, remains... be back soonest...\n. Have now pushed the above changes to the `issue-643`, including a small debug only trap change... and tested the best I can...\n\n**Regression test differences**\n\n**378b**\n\nReally puzzled about the `warning` change in the **378b** output... this needs to be investigated fully...\n\nIn general however, the text output does point the user to a maybe **outdated** [International](https://www.w3.org/International/O-URL-and-ident.html) link... given that I can read considerable effort to support `international` URIs elsewhere, but this could/should be a separate issue...\n\nAfter further investigation, if nothing is found **wrong** maybe the **tests** should be updated...\n\n**445557**\n\nConcerning test 445557, the `&#150` is now output as `&ndash;`, which seems **correct** given the test is run with the `default` config...\n\nBut am a little confused by the **comment** that it seems the original did use a dash, `-`. Why was this changed to `&#150`? But that seems to have happened **long** ago, in that my copy of `in_445557.html` also has this comment, and uses `&#150`...\n\nAlthough there does appear a beginning blank line difference in a browser view test, the remainder is the **same** view. That is the **purpose** of the test seems to be met, although I seem unable to find the original 445557 in SF, to check exactly what was the problem addressed...\n\nCertainly think the tests should be updated to match...\n\n**412**\n\nAs already stated, think the tests should be updated removing this **utf-8** from a `latin1` test file...\n\n**Conclusion**\n\nIn general, think PR #644 can now be merged to `next`, including an update of `tests`... baring any other comments to the contrary, will do this shortly... thanks...\n. @balthisar as usual about this time was preparing the following ;=)) So not quite ready to **go for it** yet, but thanks for the encouragement...\n\n**Question:** Why has test **378b** changed? It does **not** involve any entities...\n\nThis is a simple test, to test that `--fix-uri no` squelches the warning for HTML5 documents, so the test now **FAILS**! Why?\n\nWell, it stems from **adding** `VERS_HTML5` into `VERS_FROM40`, and that the `TY_(HTMLVersion)(doc)` function, uses this MACRO...\n\nMany times in the past I have tried very hard to fully **understand** this `HTMLVersion` function, and have never completely succeeded... but maybe I am getting there...\n\nNow, in simple terms, in this case, on this document, this function **now** returns 0x100, which is `X10S`, when called from `TY_(CheckUrl)`! Since this does **not** include `VERS_HTML5`, the `ILLEGAL_URI_REFERENCE` warning will be issued.\n\nThat function will again be called in `SetXHTMLDocType`, and `ReportMarkupVersion`, which will give us `Info: Document content looks like XHTML 1.0 Strict`... corresponding to the `X10S`... but is it `XHTML 1.0 Strict`?\n\nPreviously, that function would return 0x40000, which is `XH50`, and since that is included in `VERS_HTML5`, the `ILLEGAL_URI_REFERENCE` will **not** be issued, as part of issue #378, and the reported markup will be `Info: Document content looks like XHTML5`...\n\nSo, in essence, the `HTMLVersion` function has to be modified back to what it was!\n\nIt uses `VERS_FROM40` to set a `Bool html4`, when what it really means, needs, is something like a `VERS_HTML40+XH11+XB10`, which is more or less what `VERS_FROM40` **was** before this latest change...\n\n**How to fix this?**\n\n`VERS_FROM40` is used some 155 times in the `entities.c` table, where I think its **new** value is very correct, and only twice in `lexer.c`.\n\nHow about the `lexer.c` uses say its own new `VERS_HTML40PX`, meaning HTML4 in all its forms, plus X, like -\n\n```\n#define VERS_HMTL40PX        (VERS_HTML40|VERS_XHTML11|VERS_BASIC)\nor perhaps\n#define VERS_HMTL40PX        (VERS_FROM40&~VERS_HTML5)\n```\n\nApplied a patch -\n\n```diff\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 56795cf..857017b 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -236,6 +236,14 @@ static struct _doctypes\n   {  0,    0, 0,  no,  NULL,                     NULL,                                     NULL                                                        }\n };\n\n+/* \n+ * Issue #643 - Since VERS_FROM40 was extended to include VERS_HTML5\n+ * to be used in the expanded entity table some 155 times,\n+ * need a special macro here to denote just HTML 4 plus XHTML,\n+ * which is actually the former define of VERS_FROM40\n+ */\n+#define VERS_HMTL40PX        (VERS_HTML40|VERS_XHTML11|VERS_BASIC)\n+\n int TY_(HTMLVersion)(TidyDocImpl* doc)\n {\n     uint i;\n@@ -247,7 +255,7 @@ int TY_(HTMLVersion)(TidyDocImpl* doc)\n     Bool xhtml = (cfgBool(doc, TidyXmlOut) || doc->lexer->isvoyager) &&\n                  !cfgBool(doc, TidyHtmlOut);\n     Bool html4 = ((dtmode == TidyDoctypeStrict) || (dtmode == TidyDoctypeLoose) ||\n-                  (VERS_FROM40 & dtver) ? yes : no);\n+                  (VERS_HMTL40PX & dtver) ? yes : no);\n     Bool html5 = (!html4 && ((dtmode == TidyDoctypeAuto) ||\n                   (dtmode == TidyDoctypeHtml5)) ? yes : no);\n\n@@ -262,7 +270,7 @@ int TY_(HTMLVersion)(TidyDocImpl* doc)\n     for (i = 0; W3C_Doctypes[i].name; ++i)\n     {\n         if ((xhtml && !(VERS_XHTML & W3C_Doctypes[i].vers)) ||\n-            (html4 && !(VERS_FROM40 & W3C_Doctypes[i].vers)))\n+            (html4 && !(VERS_HMTL40PX & W3C_Doctypes[i].vers)))\n             continue;\n\n         if (vers & W3C_Doctypes[i].vers &&\n```\n\nNow this test **378b** PASSES, with flying colors... will push this change...\n\nMoving onto test **445557**, which still intrigues me... something is **not** right here... be back soonest...\n. **Question:** What exactly is the problem with test **445557**?\n\nFirst looking at the `case-445557.html` input. There is a confusing comment at the top of this file -\n\n```\n<!-- the original document had \u2013 - I changed that to &ndash; - then &#150; -->\n```\n\nThat first `dash` is actually `0x96`, decimal 150, which is an `EN DASH` in the 1252 Windows Latin 1 (ANSI) code page. \n\nNow that might be ok, in that in the tests, that input uses the default config, which contains `char-encoding: latin1`...\n\nWhen tidy encounters that `0x96`, it uses `DecodeWin1252` to get the unicode 0x2013, 8211, to store in the lexer, and output a warning, `INVALID_SGML_CHARS`, `line 2 column 32 - Warning: replacing invalid character code 150`... But as you can read later still concerned how this is **output** to the html file...\n\nNow later in the document it will encounter `&#150;`, in `ParseEntity`, and pass to `EntityInfo` to get back `0x96`, but since this is in the range of `(ch >= 128 && ch <= 159)`, ie `/* invalid numeric character reference */`, again use `DecodeWin1252`, get the unicode 0x2013, 8211, and will output an `INVALID_NCR` warning `line 8 column 12 - Warning: replacing invalid numeric character reference 150`... Note, this is a **different** warning to the first, in the comment...\n\nSo is that what this test is about? Replacing invalid numeric character references? Me thinks **not**! And the `<title>` suggests otherwise - `Convert Symbol font chars to Unicode` - and then contains `&#34;`, `&#36;`, `&#174;`, `&#217;` and `&#218;`... \n\nSooooo, why all this kerfuffle about 150 and a `dash`? And is it coincidental that the replacement character for 150 is 8211, or `&ndash;`... This seems to distract from the real purpose... all of which seems to work fine...\n\nOf course, the situation is not helped by the fact that there is no `doctype` given, so current tidy assumes html 5, while back when the test was added, tidy would be defaulting to a legacy type document...\n\nAnd until this issue **change**, the `&ndash;` entity did not have a version that included `VERS_HTML5`, so tidy could only output the numeric entity `&#8211;`. Now that bit has been added to the table tidy 5.5.77.I643 does find and outputs the `&ndash;`. \n\nThis new action could be overridden by adding `numeric-entities: yes` to the config...\n\nThus the **445557** test can be fixed by -\n\n 1. Add a config file which includes `numeric-entities: yes`\n 2. Accepting the new `&ndash;`, and update the expects accordingly\n\nDecided on 1., and adding a config of `case-445557.conf`, containing -\n\n```\n// HTML Tidy configuration - 20171117\nindent: auto\nchar-encoding: latin1\ntidy-mark: no\nclean: yes\nlogical-emphasis: yes\nindent-attributes: yes\nnumeric-entities: yes\n```\n\nand this test **PASSES**!\n\nBut I am still concerned about 1 small thing in the html output... That is in the html output, the first substitution character in the **comment** is output as `0x13`... that does **not** feel right? So want to explore why?\n\nBut this is not really related to this issue, since that is the value also added by the current tidy... maybe should raise it as a separate issue... left as is for the moment...\n\nAnyway, have pushed an `issue-643` branch to the test repo, with changes -\n\n 1. testbase/case-412.html - removed utf-8, and put a `-`\n 2. testbase-expects/case-412.html - new html output for the above\n 3. testbase-expects/case-412.txt - new text output for the above\n 4. testbase/case-445557.conf - added the above new config for this test\n 5. cases/_version.txt - bump version to 5.5.78\n\nThus checking out `issue-643` here and build, and `issue-643` in tests should give a **clean** regression test run... hope other get a chance to confirm... thanks...\n. @balthisar my turn to ask **which testbase are you using?** ;=))\n\nI did say \"have pushed an `issue-643` branch to the **test** repo, with changes -\", and \"checking out `issue-643` **here** and build, and `issue-643` in **tests** ...\", so **both** must be on the **same** branch... not **next**...\n\nAnd also see [PR 25](https://github.com/htacg/tidy-html5-tests/pull/25) in the **test** repo...\n\nHappy re-testing, hopefully with success... thanks...\n. Together with  [PR 25](https://github.com/htacg/tidy-html5-tests/pull/25), merged, in the **test** repo, seems version 5.5.85, which includes this issue, passes **all** tests, so think **this** can be closed...\n\nAny future problems with entities should be a **new** issue... thanks...\n. Branch `issue-643` now rebases to `next` to add the **fixed** header install location, see issue #646, PR #647 ... \n\nTesters **must** do a pull to update their local repo. `issue-643` branch, for further testing, **and** should make sure any installs to `include/tidy` are deleted... thanks...\n. This merge should be simultaneous with [PR 25](https://github.com/htacg/tidy-html5-tests/pull/25) in the tests repo...\n. @balthisar see **more** discussion in #437...\n. @balthisar another plea #437 for just a **yes** or **no** reply...\n. @balthisar, thanks for your comment, arrived while preparing this addition, but seems nothing at odds here...\n\nOk, back after dinner, and found the commit 3333ca7d694, that added this change to the `INCLUDE_INSTALL_DIR`, but can **not** exactly find the reason...\n\nCan understand that maybe `tidy.pc` needs to be installed there, although **not** exactly, but why should this alter where the tidy API headers are installed?\n\nAnd in fact, in Windows, the `tidy.pc` is installed in `lib\\pkgconfig\\tidy.pc`, and I can see others there like `libcurl.pc`, `openal.pc`, ... while I can see others, like `freeglut.pc`, and `zlib.pc` are installed in `share\\pkgconfig`... \n\nDo **not** know which is **correct**, the **right** location for a `package config` file... **not** ever used in Windows...\n\nBut, again in Windows, that `tidy.pc` contains an entry `includedir=${prefix}/include/tidy` which seems **wrong**...\n\nAnd it seems I inadvertently signed off on this, as a `*nix` issue, in PR #534, by @spk... I concede I should have paid more attention... sorry...\n\nWhile I am still **not** adverse to generating and installing a `tidy.pc` file, where ever, this should **not** alter the install location of the tidy header files...\n\nThey should be in simply `include`, exactly like the last `release` 5.4, in the `master` branch...\n\nSo do **not** suggest a `roll back` of the PR, just some adjustments...\n\nLook forward to a patch, or PR, or feedback, to **fix** this, quickly... thanks...\n. @balthisar, @spk, as far as I can see, this is just a CMakeLists.txt one line change...\n\n```diff\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\nindex edd6439..20939f3 100644\n--- a/CMakeLists.txt\n+++ b/CMakeLists.txt\n@@ -373,7 +373,7 @@ if (NOT BIN_INSTALL_DIR)\n endif ()\n\n if (NOT INCLUDE_INSTALL_DIR)\n-    set(INCLUDE_INSTALL_DIR include/${LIB_NAME})\n+    set(INCLUDE_INSTALL_DIR include)\n endif ()\n\n\n```\n\nHave pushed the change to an `issue-646` branch.\n\nCan this PR #647 be merged to `next`? Thanks...\n. @spk thanks for the quick response... now merged PR #647, and version bumped to 5.5.77...\n. @jonnybarnes thanks for the issue... \n\nIt is usually better, and certainly faster testing, if you supply a minimal sample html, which should pass the W3C validator... but I was able to construct one quite quickly using the sample code given [here](https://html.spec.whatwg.org/#the-data-element)...\n\n> Why is libtidy complaining `<data>` ...\n\nIn a quick read of the [TR](https://www.w3.org/TR/html5/text-level-semantics.html#the-data-element) given, and others found, can only say just an **oversight**! \n\nIt seems that element should be supported... but there is presently **no** `TidyTag_DATA` enumerated, and defined in `tags.c`... so libtidy will **bark** loudly ;=))\n\nWill get to it, if no one beats me to it, but meantime look forward to a `patch`, or `PR`... thanks...\n. @balthisar not sure I understand your comment... maybe you can clarify...\n\nIf you run default tidy, my 5.5.84, on my sample, [in_649.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_649.html), you will get -\n\n```\nline 12 column 23 - Error: <data> is not recognized!\nline 12 column 23 - Warning: discarding unexpected <data>\nline 12 column 44 - Warning: discarding unexpected </data>\netc\n```\n\nIf you run that tidy adding `--new-blocklevel-tags data` you will get -\n\n```\nline 12 column 23 - Warning: <data> is not approved by W3C\n...repeated...\n```\n\nI **assumed** @jonnybarnes was referring to the **second** message... if **not**, hope he too will clarify... and supply some **sample** code...\n\nWhich message do you refer to in `I wonder if we should update that message per se`? Update it to **what** exactly...\n\nAnd then why do you add `leaving things alone` as an option? \n\nThat sample `in_649.html` validates without a problem, and per the `TR` and `WHATWG` pages, `<data value=\"123\">` is **valid** HTML 5... How can we `leave things alone`?\n\nAnyway, given that nothing has been done on this yet, that I know of, am moving the milestone out to the next release... \n\nBut certainly feel tidy should support this `<data value=\"123\">` element... thanks...\n. @AntoniosHadji thanks for looking at this...\n\nA brief look at the 3 lines of code added, these are good but some **more** things are required... \n\nThe README [TAGS](https://github.com/htacg/tidy-html5/blob/next/README/TAGS.md) may help a bit, but it too could/should be expanded... I will think about doc additions, but maybe there are not too many more to add...\n\nAs it suggests, the **first** thing to create a **new** HTML tag, is to add an item to `tidyenum.h`, in the following enumeration -\n\n```C\n/** Known HTML element types\n */\ntypedef enum\n{\n  TidyTag_UNKNOWN,       /**< Unknown tag! Must be first */\n  TidyTag_A,             /**< A */\n  /* skip to bottom */\n  TidyTag_DATA,          /**< DATA */\n\n  N_TIDY_TAGS            /**< Must be last */\n} TidyTagId;\n```\n\nNote, I do not think this list need be kept in alphabetical order... it is a unseen enumeration value...\n\nThen your addition to `tag_defs[]` table in `tags.c` will be ok, nearly...\n\nYou will also need to define a set of attributes allowed on the **NEW** element, in `attrdict.h/c`, namely a `const AttrVersion TY_(W3CAttrsFor_DATA)[] = { };` array of attributes, which **must** be terminated with `{ TidyAttr_UNKNOWN, 0 }`... the [Content Attributes:](https://www.w3.org/TR/html5/text-level-semantics.html#the-data-element) gives a clue to what must be added... \n\nMaybe see [W3CAttrsFor_DATALIST](https://github.com/htacg/tidy-html5/blob/next/src/attrdict.c#L884), and all the others as examples...\n\nThen it should compile... you have made a good start... but there may be some question about the `tag_defs` entries... hope this helps in the continuation... thanks...\n. @AntoniosHadji sorry for the delay in attending to this... and thanks for PR #769...\n\nIn a quick re-read of the patch, it certainly **looks** good... has anyone, else, pulled, built, and tested this?\n\nAm catching up on outstanding PR's, and now considering #769, and would appreciate any comments, feedback, updates, testing, ... etc, of this issue... thanks..\n. @AntoniosHadji  Added a `lang` attribute to my test sample [in_649.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_649.html), and now it **fully** passes the `nu` W3C validator...\n\nNow to patch tidy per #769, and it too should issue a **clean report**, ie exit 0... onwards in testing...\n\nAlso need to run the [regression](https://github.com/htacg/tidy-html5-tests), to check for any **change**... any help appreciated... thanks...\n. @kennyhendrick really sorry to hear about your **unTidy** problem...\n\nThis is **Tidy**!\n\nOr are you talking about some other **stupid `untidy` program**?\n\nWith **Tidy**, unless you use the option `--tidy-mark no` tidy **will** add a **meta** tag in the head, of the form -\n\n```html\n<meta name=\"generator\" content=\"HTML Tidy for HTML5 for Windows version 5.5.76\">\n```\n\nwhere `Windows` and `Version` will change appropriately...\n\nThis is certainly **not** `a link ... to its site`, and definitely **no** strange code... so do not think you can be talking about this **Tidy**...\n\nWhile you give yourself an answer, **backup**, also it would always be prudent to try a **new** program, presumably downloaded from the web, on one or two documents **first**, before you unleash it on thousands...\n\nAs I say, sorry about your problem, and really hope it was not our **Tidy** you are talking about...\n. @balthisar thank you for the feedback... \n\nI have now read #339, and surprised it seems I did not comment at the time, but it certainly seems to sort of touch the same issue... maybe I was asleep, or on holiday, or something...\n\nI have now pushed a simple sample [in_651.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_651.html), and a config [cfg_651.txt](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/cfg_651.txt) to my repo for testing... This sample contains 2 0x96 characters, one in a comment, and the other in a paragraph...\n\nFirst aside from the warning that the document uses `legacy` encoding, which can be filtered, it **passes** the validator... that raises some **interesting** questions...\n\nHowever, running current tidy, raises some **more** interesting questions... the output -\n\n```\nF:\\Projects\\tidy-test\\test>tidy5 -config input5\\cfg_651.txt -o temp-651.html input5\\in_651.html\nline 8 column 16 - Warning: replacing invalid character code 150\nline 9 column 14 - Warning: replacing invalid character code 150\nline 4 column 1 - Info: <meta> attribute \"charset\", incorrect value \"windows-1252\" replaced\nTidy found 2 warnings and 0 errors!\n\nCharacter codes 128 to 159 (U+0080 to U+009F) are not allowed in HTML;\neven if they were, they would likely be unprintable control characters.\nTidy assumed you wanted to refer to a character with the same byte value in the\nspecified encoding and replaced that reference with the Unicode\nequivalent.\n\n...\n```\n\nFirst Tidy rejects both 0x96 characters, with a replacement warning, but outputs them **differently**! In the comment it is 0x13, **UGH!**,and in the paragraph is `&#8211;`. This is Tidy 5.5.76. In the tidy generated from `issue-643` that paragraph output would be `&ndash;`...\n\nSo one question raised by the fact that the file **passess** the validator, \"Is Tidy wrong to reject characters in the range 128 to 159?\". Is that big info blurb it outputs **wrong** in principle?\n\n**That becomes very important to this issue.**\n\nIf tidy accepted this `0x96`, and others in this range, as a **valid** `latin1`, or `windows-1252`, or `iso-8859-1`, which ever is the **best** name for this character set, which in itself is another **interesting** question, then it would **not** be doing this **substitution** to 0x2013, or others, and we would **not** get 0x13, or something else bad, output to the document. Part of the problem solved...\n\nAnd concerning the `name` of the character set, when I used the `iso-8859-1` in the document, the validator suggested `windows-1252` as a **better** name. Sort of totally at odds with tidy... but maybe that could be a new separate issue...\n\nBut if tidy is to **continue** to consider 128 to 159 as **invalid** then it seems the **same** substitution encoding should be done in the `comment`, as is done in the `paragraph`... that is, should at least be consistent... will try to do that meantime...\n\nTried `--input-encoding latin1`, `--output-encoding utf-8`. In a quick test, it was output as `E2 80 93` in **both** cases... Of course, this still shows up as `rubbish` in my console, but any reasonable editor, even simple notepad, shows this as a `dash`... so maybe this is ok? \n\nStill to do some **more** testing, poking and **pondering**...\n\nHope you, especially in the macOS, and others, anywhere, get a chance to try my sample, and provide more feedback... thanks...\n. @balthisar really thanks for the additional feedback, and links. This was very useful, and in some cases educational...\n\nI now see this as a simple problem that tidy does **not** encode the text output in a html comment. This leads to very **bad** value being added to the html output file, and should be **addressed**, and hopefully **fixed**. Will work on that, but first some other peripheral issues raised...\n\n> ... Tidy is doing the right thing in indicating the invalid character.\n\nNot **so** sure about this! Yes, I get that maybe we **all** should be using `utf-8`, but it seems that the validity of [windows-1252](https://en.wikipedia.org/wiki/Windows-1252) is being **over-looked**.\n\nSo to me the `Info` output by tidy namely - **Character codes 128 to 159 (U+0080 to U+009F) are not allowed in HTML** - is **NOT** exactly true! \n\nI have **not** found a browser yet - tried chrome, IE, Firefox, Opera, Safari, in Windows - and **ALL** correctly display this table [temptable.html](http://geoffair.org/tmp/temptable.html)...\n\nYes, there are about 5 values that do not compute, 0x81, 0x8D, etc, marked with 'Name' `N/A`...\n\nOf course if you pass this to the validator, then it will abort on detecting the raw 0x81...\n\nIf you remove these 5 or so, as in [temptable2.html](http://geoffair.org/tmp/temptable2.html) the validator will run, and even though the document clearly indicates it is `windows-1252` charset, flags an error on many of the numeric character references, saying like `A numeric character reference expanded to the C1 controls range.`. \n\nBut this is `windows-1252`, so they are **not** `ISO 8859-1` **C1** controls! This is **not** strictly an **error**...\n\nAnd if you **remove** those numeric character references it is **offended** by, [temptable3.html](http://geoffair.org/tmp/temptable3.html), and uncheck the `Legacy encoding` warning, will report `Document checking completed. No errors or warnings to show.`...\n\nThis is all on a HTML 5 document, and as you suggest am sure will have similar results using a HTML 4 doctype, with the appropriate meta change...\n\nAll I am trying hard to suggest here, is to **not** go overboard on a `windows-1252` charset ;=))\n\n> ... we might argue that Tidy should also recognize all of the other labels for this encoding ...\n\nAgreed, but see that as a separate, different issue...\n\nTidy has a **much** improved `validator` and even **change**, or **add** the appropriate meta charset - see #456, PR #565, and maybe others - of course this could all be improved, enhanced,... especially to recognize **all** labels... but again perhaps this is a separate issue...\n\n> Tidy should be successfully forcing your console to UTF8 these days.\n\nAs reported several times now, **no** this does **not** work in my console, **nor** in the `Power Shell`...\n\nSee this small image [utf-8.jpg](http://geoffair.org/tmp/utf-8.jpg). The top blue is `PS`, and the bottom black is standard `cmd`... In both cases I see what some would call `rubbish`! \n\nAs mentioned before, I have tried many modifications of the `cmd` prompt, and have **never** seen utf-8 correctly displayed...\n\nOf course it is valid utf-8 `E2 80 93`... That valid utf-8 sequence will show as a dash, `-`, in **most** editors... just **not** in my console...\n\nIn fact I would suggest removing this so called utf-8 `enabling` code from `tidy.c`. It does nothing, and would allow us to remove the `<windows.h>` include, and the setting up of an `atexit` service...\n\nBut is **not** that important, and is a separate issue anyway...\n\n**Main Issue Here**\n\nSo back to the **main** issue addressed here, Tidy should **not** output 0x13 in a comment string. Such control values have **no place** in a html text file... and in my book is a **BUG**!\n\nI am more or less satisfied, **at least for now**, that tidy does its current substitution of these values, and flags a `warning`, right or wrong!, and from my `temptable*.html` samples, the substituted entity **looks** correct... and this is what is output in all other html text...\n\nSo as stated, the only issue here is to avoid the real problem in html **comment** output... will try to work on that only... any further feedback appreciated... thanks...\n. @balthisar see **more** discussion in #439... not sure this is needed.... Created PR #662 for testing and review... thanks...\n. @yngwei thank you for the issue... and certainly agree with you, the loop logic is **flawed**... after modification in the loop `currentNode->next` could be **invalid**, and lead to a **segfault**...\n\nAs @balthisar points out we will look at it soonest... and **fix** it... maybe a simple `currentNode = (currentNode ? currentNode->next : NULL)`, or `if (!currentNode) break;` before each `continue;`, or something like that...\n\nThat is with or without a sample PoC, but having one certainly aids quick testing, and provides a later  **regression** test sample... thanks...\n. @yngwei I have experimented with the following `patch`, and seems to work for me...\n\n```diff\ndiff --git a/src/clean.c b/src/clean.c\nindex de4caf5..e96dd3f 100644\n--- a/src/clean.c\n+++ b/src/clean.c\n@@ -2211,8 +2211,10 @@ Bool TY_(TidyMetaCharset)(TidyDocImpl* doc)\n     tidyBufAppend(&charsetString, \"charset=\", 8);\n     tidyBufAppend(&charsetString, (char*)enc, TY_(tmbstrlen)(enc));\n     tidyBufAppend(&charsetString, \"\\0\", 1); /* zero terminate the buffer */\n-                                            /* process the children of the head */\n-    for (currentNode = head->content; currentNode; currentNode = currentNode->next)\n+    /* process the children of the head */\n+    /* Issue #656 - guard against 'currentNode' being set NULL in loop */\n+    for (currentNode = head->content; currentNode; \n+        currentNode = (currentNode ? currentNode->next : NULL))\n     {\n         if (!nodeIsMETA(currentNode))\n             continue;   /* not a meta node */\n```\n\nAppreciated if you, or others, could give it a try... and/or comments... thanks...\n\nAnd on a PoC sample html, I now too would certainly appreciate that... \n\nI tried several ways to construct my own, but could **not** produce a simple sample where `currentNode->prev` was **`NULL`**, but still see it as a **theoretic** possibility, hence the suggested added loop guard...\n\nAs @balthisar asked, \"Can you post your Poc file here? Add it as an attachment to a message.\"... thanks...\n. @yngwei thank you for the PoC file... it is the **bad** line 10, `<meta charset<\"utf-8\">` that causes the problem to show up...\n\nFrom that I was able to construct a minimal test sample, which I would never have been able to **guess**,  which exposes the problem -\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset<\"utf-8\">\n    <title>Issue #656-1</title>\n  </head>\n  <body>\n    <h1>Issue #656-1</h1>\n  </body>\n</html>\n```\n\nCertainly applying my patch fixes the problem.\n\nOf course the tidy generated html, after finding that extra `<` is **not** very pretty, and including a `<meta...` with no value is **not** good, but will leave those as separate issues to maybe be raised. Seems the `Segmentation Fault` is fixed...\n\nHope you can get a chance to try it and confirm... thanks...\n. Create PR #661 for testing and review... thanks...\n. @dechamps thanks for the issue... as #377 and @balthisar point out, tidy's **guess** of the type of document is exactly that, a **guess**, and is done by eliminating `bits` as certain features are found...\n\nThere is a cmake option, `-DENABLE_DEBUG_LOG:BOOL=ON`, which will add a lot of **debug** output. It is automatically enabled for a Windows MSVC Debug configuration build, but was recently added to the linux build... \n\nAnd one of these outputs, also written to a log file for later review, is showing how certain `features` elimitate bits, leading to the final choice in the `TY_(HTMLVersion)(doc)` function...\n\nIt will show, a diminishing bit list, as each feature is found, like -\n\n```\nBefore: HT20|HT32|H40S|H40T|H40F|H41S|H41T|H41F|X10S|X10T|X10F|XH11|XB10|----|HT50|XH50\nAfter : HT20|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nAfter : ----|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\nAfter : ----|----|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|----|----|HT50|XH50\nAfter : ----|----|----|----|----|----|----|----|X10S|X10T|----|XH11|----|----|----|XH50\nAfter : ----|----|----|----|----|----|----|----|X10S|X10T|----|----|----|----|----|XH50\nAfter : ----|----|----|----|----|----|----|----|----|----|----|----|----|----|----|XH50\n```\n\nNow using your sample, and running my Debug `tidy5d.exe`, copy the log `temptidy.txt` to `temptidy1,txt`, then adding the `<meta charset=\"utf-8\" />` to the sample, run again, and doing a diff between the two debug logs shows -\n\n```\n After : ----|----|----|----|----|----|----|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\n+After : ----|----|----|----|----|----|----|----|----|----|----|----|----|----|HT50|XH50\n```\n\nNote the addition of the `meta` tag eliminated lots more bits, and that effectively changed the `Info:` output -\n\n```\nInfo: Document content looks like XHTML 1.0 Strict\n-- to --\nInfo: Document content looks like XHTML5\n```\n\nAnd this can then **change** the warnings, and/or errors, found and reported, as you have discovered...\n\nNow that `TY_(HTMLVersion)` function already has a **lot** of changes added, it is quite a **mess**! already...\n\nBut more or less as you suggest, it could be **improved** to take account of the `xml` preamble, and especially the `xmlns` attribute, which could be used to eliminate the pure `XML` bits, and even the `HT50` bit, leaving XHTML5 as the **only** choice...\n\nLook forward to further feedback, patches, or a PR to achieve this... thanks...\n. @dechamps thanks for the further feedback on this... did some more testing...\n\n> ... if tidy sees `<!DOCTYPE html>` ...\n\nSome of this makes good sense, and going back into the past legacy `DOCTYPES`, that is what tidy used to do... but maybe it is **not** a question of eliminating bits...\n\nThe following is the results of running tidy on a simple document as follows -\n\n```html\n<!DOCTYPE \"various\">\n<html>\n<head>\n<title>Issue #657-6</title>\n</head>\n<body>\n<p>HTML 5</p>\n</body>\n</html>\n```\n\nEach with the doctype header shown, the `Info:` output, and the last debug bits output -\n\nInput: input5\\in_657-2.html\n\n```html\nInfo: Doctype given is \"-//W3C//DTD XHTML Basic 1.0//EN\"\nInfo: Document content looks like XHTML Basic 1.0\nNo warnings or errors were found.\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML Basic 1.0//EN\"\n  \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\">\nAfter : HT20|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\n```\n\nInput: input5\\in_657-3.html\n\n```html\nInfo: Doctype given is \"-//W3C//DTD HTML 3.2//EN\"\nInfo: Document content looks like HTML 3.2\nNo warnings or errors were found.\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2//EN\">\nAfter : HT20|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\n```\n\nInput: input5\\in_657-4.html\n\n```\nInfo: Doctype given is \"-//W3C//DTD HTML 4.01//EN\"\nInfo: Document content looks like HTML 4.01 Strict\nNo warnings or errors were found.\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\">\nAfter : HT20|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\n```\n\nInput: input5\\in_657-5.html\n\n```\nInfo: Doctype given is \"-//W3C//DTD XHTML 1.0 Strict//EN\"\nInfo: Document content looks like XHTML 1.0 Strict\nNo warnings or errors were found.\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\nAfter : HT20|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50    \n```\n\nSo we can see in **every** case, tidy used to `show` the **given** doctype, and baring no contra features found in the document, would output the `Info: ...looks like...` of that doctype... **and** there has been very little elimination of the **bits**...\n\nWhen it came to using `<!DOCTYPE html>` tidy **stopped** doing one of the `Info:` messages???\n\nInput: input5\\in_657-6.html\n\n```\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\n<!DOCTYPE html>\nAfter : HT20|HT32|H40S|H40T|----|H41S|H41T|----|X10S|X10T|----|XH11|XB10|----|HT50|XH50\n```\n\nNote each of those input test files are in my [test](https://github.com/geoffmcl/tidy-test/tree/master/test) repo...\n\nNow what this shows is that the choice of the `looks like` info is **not** solely based on the **bits** remaining, and then choosing among those... so some of my earlier comments are quite **misleading** in this regard...\n\nRight now I am way back at I do **not** fully understand `TY_(HTMLVersion)(doc)`! It is called **many** times, but it seems the **most** important call is from `TY_(ReportMarkupVersion)(doc)`, which is where the `looks like` info message is generated...\n\nOne of the most frequent calls is from `GetTokenFromStream`, just to set `fixComments = (TY_(HTMLVersion)(doc) & HT50) == 0;`...\n\nFirst the `Doctype given is ...` message is **only** emitted IFF `doc->givenDoctype` is set. So then why is this **not** set for `<!DOCTYPE html>`? It seems it should be set even in this case - a doctype **has** been given...\n\nThen it calls `TY_(ApparentVersion)( doc );`, but **only** `if ( ! cfgBool(doc, TidyXmlTags) )`. This can be user set by `--input-xml`, and there are a few places in the code where it can be set... that needs to be explored... but leaving `xml` parsing out of this for the moment...\n\nBut the results of `TY_(ApparentVersion)( doc );` are passed to `TY_(HTMLVersionNameFromCode)(...)`, and if this results in a `string` then that is output... if **not** then `tidyLocalizedString(STRING_HTML_PROPRIETARY);` string is output...\n\nAs indicated I have tried many times in the past to get my head around all this, and am still coming up short...\n\nSo I am **not** sure it is as **simple** as using the existence of `<!DOCTYPE html>` to eliminate all bits except `HT50|XH50`, while as you state \"that should do the trick\"! You will note in the 5 examples, essentially all **bits** remain...\n\nBut I am sure `doc->givenDoctype` should be set, even for `<!DOCTYPE html>`, but that too is **not** the whole story... \n\nBut do **agree** with the presence of `<!DOCTYPE html>` is \"a dead giveaway that the document is either HTML5 or XHTML5\"...\n\nSorry I seem to be raising more questions than answers here! Even bringing into question exactly what does this `Info: ... looks like ...` really mean... but agree in this simple sample given case tidy should **not** wrongly report `XHTML 1.0`... just how to solve it, without breaking backward legacy docs...\n\nWill continue to look at this, explore, experiment, but meantime seek further feedback, ideas, comments, even test patches or PR... thanks...\n. @dechamps thanks for the issue...\n\nIn simple terms, if `tidy` thinks, or is **told** to output `HTML5`, then maybe it should **not** add the `xml` preamble... it seems it has no place on a pure HTML5 document...\n\nPerhaps it should warning something like - \"outputing HTML5 so deleting the xml preamble\" - or something like that... if one is found on the input...\n\nAnd still thinking about how `--add-xml-decl yes|no(default)`, `TidyXmlDecl`, should or should **not** influence this... \n\nAlso the `-asxml`, `-asxhtml` and `-ashtml` options interact... need to explore those...\n\nLook forward to further feedback, patches, or a PR to achieve this... thanks...\n. @dechamps thank you for the issue, but am unsure exactly what you are pointing out here... that is what change are you suggesting...\n\nI am **not** sure I fully understand `CDATA Sections`, but searching around, it seems mainly related to `XML`, the simplest definition I found was \"CDATA marked sections are the preferred method for entering `verbatim text` in an SGML document.\"\n\nUsing the option `--show-body-only yes` on the following input -\n\n```\n<body>\n<![CDATA[\n    <a href=\"#foo\">bar</a>\n]]>\n```\n\nwill give a virtually unchanged output of -\n\n```\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\n\n<![CDATA[\n        <a href=\"#foo\">bar</a>\n]]>\n```\n\nNow adding the option `--escape-cdata yes` will change that output to -\n\n```\n   &lt;a href=\"#foo\"&gt;bar&lt;/a&gt;\n```\n\nThat is more or less as the docs stated. The `<![CDATA[ ... ]]>` block has been removed, and the markup text `escaped`... i.e. the idea of `escaped cdata`...\n\nOf course I **agree** the current docs description leaves something to be desired... could/should be **expanded** to explain this more **clearly**... welcome ideas, patches, PR to do that... thanks...\n\nNow, if as you have done, you put the `<![CDATA[ ... ]]>` block inside a `<script> ... </script>` block, then tidy does **not** see this as a `CDATA Section`... it is a script tag, with more or less `preformatted` text...\n\nScript, and style tags, and maybe some others, already tell tidy to **not** mess too much with the `text` content of these blocks... and the option `--escape-cdata` just does **not** apply to these blocks...\n\nThen in your sample, you add the complication of adding an `xml 1.0` header, followed by a html5 doctype, followed by an html tag with `xmlns` attribute of xhtml... but maybe this is covered in your previous #657 and #658 issues, so will try to address that there...\n\nAnd then I see your next #660 also deals with tidy adding `CDATA` around `<script>` text if tidy is outputting `XHTML5`, but as you point out, this can be overcome by `-ashtml`... but again will try to deal with that there...\n\nAnyway, does this answer why \"escape-cdata doesn't seem to work\"? It does change `CDATA` sections, but **not** script, style, etc text... Or have I missed the point somewhere...\n\nPlease explain more if so... thanks...\n. @Begasus well reading around it seems Haiku gcc2 2.95 was released circa 2001, now **16** years old, but really that does not seem to explain the unbalanced `#endif` in the `language_*` header files, that later compilers do **not** find...\n\nThe earliest I have for testing is `gcc-4.8` and it compiles without **errors**, or `warnings`, as do a few other later versions I have...\n\nIt is almost as if the 2.95 compiler **skips** the `first` line in each of these files... \n\nThey **all** start with an `#ifndef ...`, as the very **first** line... so you could try adding a newline, or comment like `/* nl */`, at the beginning of each... test and report...\n\nBut then I note you show another **error** in `tidylib.c`, namely `bomEnc` is **undefined**. I have found at least one **old** compiler, MSVC10, that likewise flags this error. But it is fixed by moving its declaration up one line, to before the `doc->pConfigChangeCallback = NULL`...\n\nWhile we may consider the second change for `bomEnc`, I do not know what we can do about the first errors... it may be a case where you **must** apply your own local patches to use this old 2.95 compiler...\n\nAnd some of the `warnings` are **strange**, like `messageobj.h:66: warning: parameter has incomplete type`, repeated several times, but as usual they may not actually be a **problem**...\n\nHTH... and look forward to your further feedback... thanks...\n. @Begasus since `tidy` is intended as a **simple** pure `C` project, in essence it should be **compilable** by **all** versions of **gcc**...\n\nAnd would welcome any **PR** to make it so...\n\nLook forward to your further feedback... thanks...\n. @Begasus ah, ha, thanks for the further feedback...\n\nOn more carefully checking I find 6 source files have a **UTF-8 BOM** - `language_en_gb.h, language_es.h, language_es_mx.h, language_fr.h, language_pt_br.h, language_zh_cn.h` - that is they start with hex `ef bb bf`, and I guess that is what you are referring to as `whitespace` in front of the first line... \n\nAnd I guess that is what gcc 2.95 trips on...\n\nReading around it seems adding a UTF-8 BOM is **not** necessary, and see some suggestions that it should **not** be added, as it can cause problems with older software...\n\nThese language files were added by @balthisar, and maybe he could comment on its possible removal... I think it is being added by a generation tool he uses... thanks...\n\nI will try to get around to removing it just to check my windows compilers will have not problems with utf-8 without it...\n\nLook forward to further feedback on the other errors... thanks...\n. @Begasus, @balthisar, just a quick follow-up...\n\nI made the small change for `bomEnc`, and removed the **BOM** from those 6 files, and everything built fine using MSVC10 and MSVC14, in **both** 32-bits and 64-bits...\n\nHave pushed this to the `issue-663` branch for testing in **all** environments... Note this `issue-663` is based on `next`, version 5.7.0, but at this time this is the **same** as release 5.6.0 aside from this version number...\n\nLook forward to further feedback... thanks...\n. Have now had a chance to build `issue-663` branch in -\n\n 1. Ubuntu 14.04 64-bit, gcc 4.8.4, no errors or warnings - clean build\n 2. Raspbian 8, 32-bit, gcc 4.9.2, no errors or warnings - clean build\n 3. Ubuntu 16.04, 32-bit, gcc 5.4.0, no errors or warnings - clean build\n\nStill to light up my **OLD** Windows XP system, and try with MSVC8 2005 - will get to that - but expect no errors, but a `language*.h` warning about the `#pragma execution_character_set(\"utf-8\")`, which it seems was not added until a **later** MSVC version...\n\nAll this seems to suggest the **UTF-8 BOM** can be safely **removed**...\n\n@Begasus hope you have good luck with gcc 2.95, or any other compilers you have... please advise when you have time...\n. @Begasus re `tidylib.c:1138: parse error before 'struct'`...\n\nWell, it seems the **same** issue, namely compile with **OLD** gcc 2.95... so think we can stay here...\n\nThat usually indicates `<sys/types.h> and <sys/stat.h>` have **not** been included... but they should be included through the chain `#include \"tidy-int.h\" -> #include \"tidy.h\" -> #include \"tidyplatform.h`... you need to check that they **are** indeed included... but they should be...\n\nAlternatively, `struct stat` is defined somewhere else in Haiku... but it is weird in that you advise gcc5* works...\n\nAHHH, HAAA!, but you had already given a **BIG** clue when you had a problem with `bomEnc`... seems gcc 2.95 strictly enforces the `K&R` rule that in any given `context` **all** variables **must** be declared **before** any code...\n\nThe following code **breaks** that rule...\n\n```\n    fin = fopen( filnam, \"rb\" );    /* this is CODE */\n\n#if PRESERVE_FILE_TIMES\n    struct stat sbuf = {0};         /* new VARIABLES can **NOT** be declared here */\n    /* get last modified time */\n    TidyClearMemory( &doc->filetimes, sizeof(doc->filetimes) );\n    ...\n```\n\nYou can probably overcome it by openning a **new** context, like -\n\n```\n    fin = fopen( filnam, \"rb\" );\n\n#if PRESERVE_FILE_TIMES\n    {   /* open new context for K&R */\n        struct stat sbuf = {0};\n        /* get last modified time */\n        TidyClearMemory( &doc->filetimes, sizeof(doc->filetimes) );\n        ...\n        ...\n    }   /* close new context */\n#endif\n```\n\nOr move the `struct stat sbuf;` declaration to the **top** of the function... leaving only `sbuf = {0};` here...\n\nMost, if not all!, **later** versions of gcc allow this `K&R` rule to be broken **all** the time... much to my **chagrin**, since this `K&R` rule is also enforced by MSVC10, and earlier...\n\nThere may be other places where this happens in **unix only** code, since todate I have found no way to `instruct` later gcc versions to **flag** this error... \n\nThey have **all** been **fixed** in `windows only`, or `shared code`, since my MSVC10 will **bark** if this is done wrong order - that is `NOT` **all variable before code**, in any given context...\n\nLet us know if this `K&R` change works for you... thanks...\n\nStill to look at src/language.c:44: invalid initializer... but that will probably be tomorrow now...\n. @Begasus re: src/language.c:44: invalid initializer\n\nTook a quick look... but does not seem **bad** initialization code for a complex structure, and assume you see no problems with `gcc5*` builds...\n\nOne immediate question - is this **only** line 44, or is it flagging **all** of them, including the last `NULL` entry, line 54?\n\nYou will need to **mess** with it a little, and try to find what gcc 2.95 **likes**! There must be a way to get this structure `statically` setup... but can't think of anything at the moment...\n\nAnyway, off for dinner... be back soonest...\n. @Begasus thank you for pushing forward on this... it seems we are adding a **new** port, namely `Haiku`, which I must admit, I had never heard of before this post... using their gcc 2.95, 32-bit... this is a **good** thing...\n\nHave looked at your `patchset.txt` and feel that **all** in here can be added to my `issue-663` branch, which will eventually be merged to `next`, and **maybe** backported to the `5.6.0` release... namely -\n\n 1. tidylib.c - add a `context` around the `#if PRESERVE_FILE_TIMES`\n 2. tidyplatform.h - these changes all look good, to show it as an `Haiku` build... `#if defined(__HAIKU__)`\n 3. language.c - you mean the compiler has no problem if we add a `[256]` to the structure?\n\nWhile I am not particularly in love with the arbitrary 256 limit on `languages`, think I can wear this... unless someone suggests another solution, like say a supported `language` **enum** which sets a value for this... \n\nI do understand, back 20 years ago, a compiler **hating** an `open` memory allocation like `[]`... it was not so long ago the MSVC compilers would also **bark** at this...\n\nAre you saying, adding these to the other **fixes**, gives you a **clean** build in `Haiku`, using gcc 2.95?\n\nThat is have we addressed **all** the changes required? ... thanks...\n. @Begasus thank you for the report...\n\nHave pushed **all** the changes to the `issue-663` branch... \n\nBut had to do it manually since could **not** get your patch to work with my windows port of `patch`, but have had this problem before, so would appreciate you **pulling** that branch again, and **test** compile again to make sure I did not make some **silly** mistake... thanks...\n. @Begasus thank you for testing the `issue-663` branch...\n\nAs @fbrosson noted, have reduced the 256 to 8 in the above push... and adjusted the comment accordingly... absolutely no need to over-allocate the static memory for this structure...\n\nBut your results still shows **many** warnings -\n\n 1. .../src/messageobj.h:66: warning: parameter has incomplete type - many of these\n 2. .../src/config.c:1427: warning: 'ParseName' defined but not used - is marked `FUNC_UNUSED`, so ok...\n 3. .../src/tidylib.c:969: warning: integer overflow in expression - a few of these\n 4. .../console/tidy.c:859: warning: field width is not type int (arg 3)\n\nI think the multiple 1. warning are due to a dereferenced pointer being placed on the stack. It allows the structure members to be addressed using the dot, `a.b` notation, rather than passing a pointer which must be referenced as `a->b`... \n\nMaybe older compilers have no way to do this, since this is a relatively **new** `C++` like feature that has crept into some `C`... and maybe those tidy API functions would be broken in the `Haiku` port. Do not know...\n\nBut they are all relatively **new** API functions, dealing only with heavy message filtering, and are probably **not** so important in that they would be quite unlikely to be used in any `older` application linking with **`libtidy`**... They are **not** used by the console app, `tidy`, so should cause no trouble for it...\n\nIf I am right, the **only** solution would be to re-write those functions using a `pointer`, and the normal `a->b` notation... or cut those API's from the `Haiku` port... but maybe not required...\n\nThe number 2. is indeed an **unused** function, and is marked with a `FUNC_UNUSED` macro, which is defined as an `attribute` in `__GNUC__`, of `#define FUNC_UNUSED __attribute__((unused))`, which probably also would not be available in gcc2 2.95... But it can be ignored without consequence... just some unused dead code, which someday should in fact be **removed**.\n\nAs to 3., can **not** see why `return ( impl->errout ? 0 : -ENOMEM );` on functions that returns an `int` is a problem... does it not like `-ENOMEM`... or what? Maybe could be fixed with an `return (int)(...)` cast... Anyway seems it can be ignored...\n\nAnd 4. is the line `printf( \"%*.*s\\n\\n\", width, width, ul);`, which just prints the `underline` in the `--help` output. Does 2.95 not understand the format `%*.*s`? Or what? You should do `$ tidy --help` and see what you get? The `ul` should be a pointer to the string `static const char ul[] = \"====etc\";`, and certainly **not** an `int`! But if the `--help` output is ok, then it can be ignored, else may need some **fix** for `#ifdef __HAIKU__` or something...\n\nAnd another **warning** noted is that from cmake - \n\n```\n-- *** NOTE: xsltproc NOT FOUND! Can NOT generate man page.\n-- *** You need to install xsltproc in your system.\n```\n\nThis app is used to generate the `tidy.1` man page, which should be part of the distribution package, if `Haiku` supports `$ man tidy`...\n\nOther than that, all looks good... thanks...\n. @Begasus just glad I could help with a **new** `Haiku` port of tidy... will create a PR for the branch, and in due course it will be merged to `next`... \n\nAnd will give thought to back porting it, together with some others, into `5.6`, potentially creating a `5.6.1` release...\n\nStill curious how the `--help` **looks**... but no problem...\n\nAs suggested, will close this... thanks...\n. @dconnet thank you for pointing this out...\n\nHowever this **fix** is already included in PR #664, Issue #663... commit 7f9e02b2fbf ... seems the old `Haiku` gcc2 2.95 compiler has the same problem as MSVC10...\n\nSo this will be done as soon as that PR is merged... and hopefully will soon get around to that... thanks...\n. @jgmanning certainly agree the Windows `/MD` builds by various versions of MSVC have a dependency on MSVC runtime DLL's being installed in the system...\n\nI just re-read [Understanding Dependency](https://msdn.microsoft.com/en-us/library/ms235265.aspx?f=255&MSPPError=-2147217396), and tried the suggested [dependencywalker](http://www.dependencywalker.com/), with **not** much success... then read some related links, but it is hard to find **simple** answers... But yes, MS offers `redistribution` packages, but you must choose and install the correct one... all quite a **mess**...\n\nI have just added `tidy-5.6.0-vc14-mt-32b.zip` and `tidy-5.6.0-vc14-mt-64b.zip` to the [5.6.0](https://github.com/htacg/tidy-html5/releases/tag/5.6.0) release, but not yet added them to the [binaries](http://binaries.html-tidy.org/)...\n\nThese are using the `static` runtimes, `/MT`, and may run in an old Windows server. It would be **much** appreciated if you could give them a try, and report... thanks...\n\nAnd in general will try to look for a place where this dependancy could be more clearly documented than in #515... **ideas welcome**, like where would you expect to find this information? Maybe a `README/DEPENDENCY.md` document, or something... thanks...\n. @jgmanning glad the `mt` **static** version worked...\n\nStill deciding where to put this dependency information, but the first thing I suppose is to collect the info. I have a `pedump2.exe` which gives me a good list of **imports**, as follows, for each version -\n\n 1. msvc140-64\\tidy-5.6.0-vc14-64b\\bin\\tidy.exe  \napi-ms-win-crt-convert-l1-1-0.dll api-ms-win-crt-environment-l1-1-0.dll api-ms-win-crt-heap-l1-1-0.dll\napi-ms-win-crt-locale-l1-1-0.dll api-ms-win-crt-math-l1-1-0.dll api-ms-win-crt-runtime-l1-1-0.dll\napi-ms-win-crt-stdio-l1-1-0.dll api-ms-win-crt-string-l1-1-0.dll api-ms-win-crt-time-l1-1-0.dll\napi-ms-win-crt-utility-l1-1-0.dll KERNEL32.dll VCRUNTIME140.dll  \nPE/OBJ: Machine Type: 8664 (AMD64-K8)\n\n 2. msvc140-32\\tidy-5.6.0-vc14-32b\\bin\\tidy.exe  \n api-ms-win-crt-convert-l1-1-0.dll api-ms-win-crt-environment-l1-1-0.dll api-ms-win-crt-heap-l1-1-0.dll\napi-ms-win-crt-locale-l1-1-0.dll api-ms-win-crt-math-l1-1-0.dll api-ms-win-crt-runtime-l1-1-0.dll\napi-ms-win-crt-stdio-l1-1-0.dll api-ms-win-crt-string-l1-1-0.dll api-ms-win-crt-time-l1-1-0.dll\napi-ms-win-crt-utility-l1-1-0.dll KERNEL32.dll VCRUNTIME140.dll  \nPE/OBJ: Machine Type: 014c (Intel 386)\n\n 3. msvc100-64\\tidy-5.6.0-vc10-64b\\bin\\tidy.exe  \nKERNEL32.dll MSVCR100.dll  \nPE/OBJ: Machine Type: 8664 (AMD64-K8) \n\n 4. msvc100-32\\tidy-5.6.0-vc10-32b\\bin\\tidy.exe  \nKERNEL32.dll MSVCR100.dll  \nPE/OBJ: Machine Type: 014c (Intel 386)\n\n 5. msvc140-64\\tidy-5.6.0-vc14-mt-64b\\bin\\tidy.exe  \nKERNEL32.dll  \nPE/OBJ: Machine Type: 8664 (AMD64-K8)\n\n 6. msvc140-32\\tidy-5.6.0-vc14-mt-32b\\bin\\tidy.exe\nKERNEL32.dll  \nPE/OBJ: Machine Type: 014c (Intel 386)\n\n 7. MinGW-64/tidy-5.6.0-MinGW-64b/bin/tidy.exe  \nKERNEL32.dll msvcrt.dll  \nPE/OBJ: Machine Type: 8664 (AMD64-K8) \n\nThe last, MinGW-64, is not yet part of our distribution, and I built it just to see the difference... it is interesting in that it has one more dll dependency than the `/MT` msvc static builds, namely the `msvcrt.dll`.\n\nAnd now that I look at this listing it does **not** seem very helpful to a **user**. First they would **not** necessarily be aware of all these DLL's, especially the long list of the msvc140 `/MD` default build. Why MS makes this so **difficult** is unknown...\n\nMaybe there should be a **strong** note somewhere that if the **user** gets an error like you point out - \"The application was unable to start correctly (0xc000003b)\", or some other similar error noting missing DLL's, the **user** may need to install the appropriate `runtime` DLL's, and give a pointer to various MS sites for such a download and install....\n\nThe problem is that **tidy.exe** is a console app, and it is **not** common to include it in say a Windows **installer** package. \n\nWe did try that initially, but is has other problems for the **user**. The main one being that the default install is usually to places like `C:\\Program Files\\Tidy`, which then requires say `C:\\Program Files\\Tidy\\bin` to be added to the `PATH` environment variable to use `tidy.exe` globaly...\n\nBy default we do link the `tidy.exe` to the static tidy library, to make it easy to use `tidy.exe` from anywhere, simply by copying the exe into an existing `path` already in the `PATH` variable. Or indeed run it from exactly where it was built, or unzipped... \n\nThere are cmake options to link it with the DLL, if someone really wants that additional complexity...\n\nAnd then there are the **users** of library tidy, linked to their own app. Installing tidy-dev, headers and tidy.dll/lib into `C:\\Program Files\\Tidy` is again **not** easy to use...\n\nIn general, **tidy** is such a small `package`, and it does **not** seem worth the effort to try to provide such a full Windows **package** install, which could then include the required `runtime` redistributables from MS...\n\nIn fact we encourage that **users** build from source, and thus will have installed all the `runtime` stuff as part of the building of **Tidy**... although we do also provide some `binary` downloads, but they have the `runtime` dependencies mentioned here...\n\nAnd @majkinetor I do **not** think it is possible to create a `tidy.exe` with 0 deps! Would like to learn how, other than the present `/MT` build, which does have very minimal DLL dependency... thanks...\n\nIn fact I just tested built the simplest source possible, `main() { return 0; }`, switching to `/MT` static runtimes, with both MSVC 14 and 10, and that `test_null.exe` **still** had a dependency on `KERNEL32.dll`, and you would be surprized at the number of entries, some 67, in the `import` table... As stated, any ideas **welcome**...\n\nI think this has been discussed a few times in the past, like #515, but are always willing to listen to further **feedback**, ideas, suggestions, etc... thanks..\n. @ppKrauss, as @balthisar advised, you need to `know` the full path to the **tidy** you want to run and test...\n\nSince you seem to have just typed `$ tidy -v`, then this seems to be a **tidy** available in your `PATH`, so you should be able to get its full path by `$ whereis tidy`...\n\nIf you want to **test** a `tidy` **not** installed, and/or **not** in your `PATH` then you need to supply the relative, or fully qualified path to the **tidy** you want to use... that can be where ever you built tidy...\n\nNow once you have the `path` to the **tidy** to be used, you can either modify the `run-tests.sh`, putting your path in `TMPTIDY=\"/path/to/tidy\"`, or directly run `$ ./testall.sh /path/to/tidy`, but then you need to run the second `diff ...` part manually...\n\nNote **all** testing must be run in the `tools-sh` folder... all the setup is relative to that...\n\nFurther you are indicating you want to test tidy version `5.4.0`, so to get the correct test cases for that version, you will need to backup the repo to **around** that version...\n\nTo get a suitable commit hash to back up to you can run `$ git log -p cases/_version.txt > ../tempv.log`... doing that it seems you will need commit 3123900, that is `$ git checkout 3123900`\n\nI just did that in windows, `git status = HEAD detached at 3123900`, running `Tidy Version: HTML Tidy for Windows version 5.4.0`, and got a **clean** run... \n\nHope you can do the same in Ubuntu...\n\nYes, the process is a bit **complicated**!, and we hope someone can find the time to improve the testing documentation, and the runtime testing situation...\n\nIt will always be a little difficult to test older tidy versions, in that you must know how to find a suitable commit to back up the repo, which requires git knowledge, **and** until PR #662 is merged, there is a known test case failure for current 5.7.0 tidy in `next`...\n\nHTH...\n. @ppKrauss using my explanation here add a [README/RUNTESTS.md](https://github.com/htacg/tidy-html5-tests/blob/next/README/RUNTESTS.md) document which may be helpful...\n. @ppKrauss and as an idea of how to make it more **easy** to back-up the repo to test a specific **older** version of `tidy`, created a [test 5.4.0](https://github.com/htacg/tidy-html5-tests/tree/tests/5.4.0) branch...\n\n```\n$ git checkout tests/5.4.0\n```\n\nMaybe this could be done on each needed/required `tests` change... this is for sure better than finding a suitable commit in a git log... but we will see if that takes on...\n\nThat would allow the `test` scripts to be modified to **test** for a specific branch before running the tests... say adding a `[-v 5.4.0]`, default `next`, to the `alltest.bat` or unix script... but again **work** to be done...\n\nAnd because the tidy source `versions`, and test repo `versions` do **not** run in sync, and usually do **not** need to!, in that there can be **many** source changes that do **not** require a `tests` repo change, this would still be a `user` choice, with that full understanding in mind... \n\nIt remains, there is some **heavy** work to be done in the `tests` repo to make is **easy** to run the tests, anytime, with any version... **help** needed... thanks...\n. @ppKrauss have just done several merges, including PR #662, and just done running `HTML Tidy for Linux version 5.7.3`, in Ubuntu, built from the `next` branch, using the `next` **tests** branch, testbase version `5.5.84` and it **PASSES** both phases of the tests...\n\nHope you, and others, have the same good results, in this **new** year, 2018...\n. @Kristinita you are correct console `tidy` does **not** support glob patterns, but as `tidy -h` points out `tidy` does support **multiple** input html files on the command line -\n\n```\ntidy [options...] [file...] [options...] [file...]\n```\n\nBut that would be a **very long** command line if you have more than 100 files... and in Windows there may be some limit of the maximum command line... but should work...\n\nAlternatively, since you appear to be in windows, why not write a **batch** file, using `for %%i in (*.html) do tidy -mq %%i`. Running `for /?` will show the syntax...\n\nOr you could make a list file of **all** html files, like `dir /s /b output\\*.html > templist.txt`... \n\nThen again use a batch file with like `for /F %%i in (templist.txt) do tidy -mq %%i`... \n\nMay need to add double quotes if the file path or names includes spaces...\n\nThere are just so many options using batch files...\n\nAnd a word of warning, while I have considerable confidence in `tidy`, be aware the `-m`, modify option will **overwrite** the existing file with the **tidied** version and there is **no** going back if `tidy` changes something you do not want changed, or makes a change you **do not like**... you should make a **backup** of **ALL** files first...\n\nAnd such a **batch** file system could even copy the original to a safe place first...\n\nAlso note you can `set HTML_TIDY=d:\\path\\tidy-def.conf` in the environment, and `tidy` will use this `config` file for each file processed...\n\nHTH...\n. @Kristinita yes, my answer suggested using batch files since the example you gave `D:\\SashaPelicanTest>tidy -mq *.html` indicated windows usage...\n\nHad it been in unix, the normal unix shell will already expand a command like `$ tidy -mq *.html` to a list of files matching the `glob`, if any exist in the current directory... and/or using shell scripting...\n\nThe important issue is that console `tidy` has **no** built-in ability to expand globs, and as @balthisar points out would be \"inappropriate for Tidy to support `globs` directly\"... that **must** be done outside `tidy`...\n\nAs mentioned it does accept **multiple** files on its command line... `$ tidy [options] path/file1.html path/file2.html another/path/file3.html ...` and so on...\n\nHTH...\n. @Jeremiah-B, yes, that is the **default** action of `tidy`...\n\nSee [drop-empty-elements](http://api.html-tidy.org/tidy/quickref_5.6.0.html#drop-empty-elements)... the **default** is `yes`... and that is the same in release `5.4.0` that you show you are using...\n\nTry adding a config `--drop-empty-elements no` on the command line, or add `drop-empty-elements: no` to a config file, then add `-config /path/to/tidy.conf`... and advise... thanks...\n\nIt is normal to set up a default config file, like say `$HOME/tidy-def.conf`, with the options you like, and add, `export HTML_TIDY=$HOME/tidy-def.conf` before running `tidy`... and there are other ways to do this... we all have very different preferences when running `tidy`...\n. @Jeremiah-B since there has been no further feedback in months, assume this is question asked and answered, so closing this...\n\nFeel free to re-open, or post a **new** issue... thanks...\n. @jidanni thanks for the issue...\n\nYes, it certainly seems, without the `multiple` option, there should only be one **selected** `option`... and this problem persists with the latest `5.7.3` Tidy version...\n\nAny help finding a **fix** for this would be much appreciated... comments, patch, PR welcome... thanks...\n. @GyanP as far as I am aware HTML Tidy has no problem with this option...\n\nPlease file the problem with the `pytidylib` maintainers, lists... thanks...\n\nMeantime closing this here...\n. @TysonAndre unfortunately I do **not** have PHP tidy wrapper (PHP 7.1.14) installed so I can not specifically test there...\n\nBut testing with command line tidy I can get the same `wrapped-to-multiple-lines`, as you show by using `-w 1` or `-w 2`... \n\nBut when I use `-w 0` I get **no** wrapping as expected, and this is true for any version of tidy I tried, `5.4`, `5.6`, or current `5.7.3`...\n\nSo it seems the PHP Wrapper code that handles `'wrap' >= 0` is **wrong**. Rather than setting the wrap to `zero` it is setting it to `1`... or something...\n\nTo check the `wrap` option is otherwise ok, you could try `'wrap' >= 14`, that is `-w 14` and you should get two lines, like -\n\n```html\n<p>this is a\nstring</p>\n```\n\nI do not think this is anything to do with the option [add-xml-space](http://api.html-tidy.org/tidy/quickref_next.html#add-xml-space). This only adds an  `xml:space=\"preserve\"` attribute to certain elements, when generating `XML`...\n\nAnd that PR #645 is only concerning wrapping `<? ... ?>` elements... nothing to do with wrapping text...\n\nIf I wanted to install and try the PHP 7.1.14 Tidy wrapper, can you give some pointers where I can download this from... especially in Windows... maybe I will get a chance to try it... and if there is a repo for the tidy wrapper code, maybe I could check the handling of that option...\n\nSo at the moment this seems like a **bug** in the `PHP tidy wrapper` code, and this should be filed there... thanks...\n. @TysonAndre I had written the following before you added more about the `tidySaveBuffer`, but it still seems relevant...\n\n@TysonAndre as you point out, **internally** tidy changes wrap length **zero** to `0x7fffffff`... but that should **not** concern an external library user, like PHP is, through its `tidy.c`... it is done automatically... \n\nReading say the `_php_tidy_set_tidy_opt` it **looks** correct for the integer wrap value... it does the API call `tidyOptSetInt(doc, tidyOptGetId(opt), Z_LVAL(conv))`... so given that the macro `Z_LVAL` does what I expect and converts the string to a `uint` 0, for `'wrap' => 0` then **all** is well...\n\nNow when PHP `tidy.c` calls `libtidy` with a stream, probably through `php_tidy_quick_repair` or the like, then the Tidy API `tidyParseBuffer` will be called, and it you trace that into `libtidy` that will get to the internal tidy `TY_(DocParseStream)( doc, in );`, which **all** tidying gets to, and there you will note one of the things it does is `TY_(AdjustConfig)( doc ); /* ensure config consistency */`...\n\nSo while it looks like Commit 86e62dbb70, which removed some redundent calls to AdjustConfig in `TakeConfigSnapshot` and other places, at this moment, I do not see it as the cause... but we can always be wrong! Will try to work out some way to **test** that assumption...\n\nIt seems I would need to build PHP from source in my native Windows 10 to be able to fully trace what is happening... I did start to setup php-7.1.14 from binaries, I can see even if I got this working, it would **not** show why if I get the same result as you... which would be frustrating, to say the least... will work on this...\n\nI am closing tonight, until tomorrow... Meantime, maybe you will spot something more... thanks...\n. @TysonAndre ok, I setup a binary install of PHP 7.1.14 in C:\\php... created a `php.ini` enabling `extension=php_tidy.dll`... copied in a 5.6.0 `tidy.dll`, that are available in the [releases](https://github.com/htacg/tidy-html5/releases/tag/5.6.0)... for no particular reason I chose to using the `tidy-5.6.0-vc14-mt-64b.zip` DLL...\n\nSet up a `test.php` file -\n\n```\n<?php\n $x = new Tidy();\n $x->parseString('<p>this is a string</p>', ['show-body-only' => true, 'wrap' => 0], 'utf8');\n echo (string)$x;\n?>\n```\n\nAdded `c:\\php` to my **PATH** and ran -\n\n```html\n>php test.php # and got output -\n<p>this is a string</p>\n```\n\nSo no problem! I did try adding `'add-xml-space' => true` but as suggested this has **no effect** on the clean results... Am I doing something wrong?\n\nOf course if I add `'wrap' => 1` I will get the multi-lined results that you show...\n\nI forked the github PHP repo, and cloned my fork intending to build in Windows 10, x64, using MSVC 14 2015, but **wow** that source does **not** make it easy to build in native Windows... will leave that for another day...\n\nOf course now I have a PHP **binary** setup could now use ealier, different or later `tidy` DLL's for testing... if need be...\n\nMy **binary** version -\n\n```\nC:\\Users\\user>php --version\nPHP 7.1.14 (cli) (built: Jan 31 2018 00:15:15) ( ZTS MSVC14 (Visual C++ 2015) x64 )\nCopyright (c) 1997-2018 The PHP Group\nZend Engine v3.1.0, Copyright (c) 1998-2018 Zend Technologies\n```\n\nBut unfortunately, can **not** duplicate the problem...\n. @TysonAndre I have now connected my PHP 7.1.14 binary installation, from a `php-7.1.14-Win32-VC14-x64.zip`, to Internet Information Services (IIS) 10, running on my Windows 10, through `FastCGI`, and have come up with a small problem, that maybe you or others can help me with... it seems a small thing, but...\n\nCreated a `test2.php` file in my local web pages, `htdocs` folder -\n\n```html\n<?php\n $x = new Tidy();\n $x->parseString('<p>this is a string</p>', ['tidy-mark' => true, 'indent' => true, 'wrap' => 0], 'utf8');\n echo (string)$x;\n?>\n```\n\nNow browsing that file, through `localhost/test2.php` correctly shows only `this is a string` - **that's good** - but when I view the source I only get -\n\n```html\n<html>\n  <head>\n    <title></title>\n  </head>\n  <body>\n    <p>\n      this is a string\n    </p>\n  </body>\n</html>\n```\n\nWhich is also **beautiful**, __BUT__ where is the `'tidy-mark' => true`? I expect -\n\n```\n<meta name=\"generator\" content=\"HTML Tidy for HTML5 for Windows version 5.6.0\">\n```\n\nNow in reading the repo `tidy.c` PHP source, I can see in several places `tidyOptSetBool(doc, TidyMark, no);`, and have **no** problem with PHP Tidy using its own **default** config choices, but that should be done **before** establishing, adding, any **user's** config... \n\nSo I think it is just a question of the **order** in which they are applied to the `tidy` document...\n\nAny PHP chosen defaults should be **first**, so then that can be overridden by any later **user** config choices...\n\nAny ideas on this? Thanks...\n. @TysonAndre yes I got **suspicious** right after I sent the above...\n\nIn Windows, I can **now** see, `php_tidy.dll` is **linked** with **static** `libtidy` - ARGH!!! ZUTE!!! - Thus the output of `echo (new Tidy())->getRelease();` is 2017/03/01 - that is `libtidy` 5.4.0...\n\nThat means, as you point out, adding a `tidy.dll` anywhere does **nothing**!\n\nIf ever there was a case for using the **shared** library, this would be one. Due to where and how Windows searches for a DLL, using the shared library would only need copying the `tidy.dll` to the `./ext/` directory... which is what I had assumed, and done... now deleted... oh well...\n\nAnd now that I look further I can see the same **sad** news using `phpinfo();`\n\n```\nTidy support => enabled\nlibTidy Version => 5.4.0\nlibTidy Release => 2017/03/01\nExtension Version => 7.1.14 ($Id: c6d6b80d55c5d351deaa745c3c540971e5583c24 $)\n```\n\nSo asside from a full compile of PHP, and the `tidy` extension, using a later version of `libtidy` I have no way to test tidy 5.6, or later... and as stated this build does not seem an easy task in native Windows... \n\nMaybe I would consider it in Ubuntu linux, but given that the repo is nearly 500MB on disk, I presently do not have the space in `$HOME/projects`... I would certainly hope `php_tidy` is built there using the shared lib tidy...\n\nAnyway, for the moment I am back in the **dark**\n. @TysonAndre, well some **good** news and some **bad**\n\nI found the space in my Ubuntu linux to build PHP 7.3 from the latest repo...\n\nAnd successfully got the `php` app built. It successfully found and linked with my latest `tidy` shared library...\n\nI installed it in `/media/Disk2/projects/install/php/bin`, so was able to **see** its dependencies...\n\n```\n$ readelf -d php\nDynamic section at offset 0xb04b80 contains 30 entries:\n  Tag        Type                         Name/Value\n 0x0000000000000001 (NEEDED)             Shared library: [libtidy.so.5]\n...\n```\n\nAnd running `<?php phpinfo(); ?>` I get, in part -\n\n```\nTidy support => enabled\nlibTidy Version => 5.7.3\nlibTidy Release => 2018/01/01\nExtension Version => 7.3.0-dev ($Id: 2a0ed7b6e3816d9e5ef7efce5b6156132477f79e $)\n```\n\nSo this is for sure using the **latest** shared library tidy...\n\nThe **bad** news is that I can now see this problem -\n\n```\n$ cat test.php\n<?php\n $x = new Tidy();\n $x->parseString('<p>this is a string</p>', ['wrap' => 0], 'utf8');\n echo (string)$x;\n?>\n$ ./php test.php\n*** skipping some output ***\n<p>\nthis\nis\na\nstring</p>\n```\n\nSo the problem is **there** in this latest PHP repo source...\n\nAs stressed I do **not** think this is a **problem** in `tidy` library... but maybe...\n\nBut something in how the library is **used**... maybe something about `tidySaveBuffer` that you mentioned, or whatever...\n\nAnd to repeat I do **not** think it is anything to do with `--add-xml-space yes`...\n\nI did struggle to setup a Windows/MSVC14 build using `php-sdk` but this is a **long** haul... may keep working on that...\n\nHTH...\n. @TysonAndre just because it is now easy, I checked out tidy `release/5.4` built and installed it...\n\nNow `echo (new Tidy())->getRelease();` yielded '2017/03/01'...\n\nAnd `phpinfo()` agrees -\n\n```\nTidy support => enabled\nlibTidy Version => 5.4.0\nlibTidy Release => 2017/03/01\nExtension Version => 7.3.0-dev ($Id: 2a0ed7b6e3816d9e5ef7efce5b6156132477f79e $)\n```\n\nAnd `$ ./php test.php` **correctly** yields `<p>this is a string</p>`\n\nThis puts the problem definitely **back** in `libtidy`....\n\nAnd going back to `5.7.3` I now note several other changes -\n\n```html\n<html>\n\n<head>\n\n<title>\n</title>\n</head>\n<body>\n\n<p>\nthis\nis\na\nstring</p>\n</body>\n</html>\n```\n\nSo not only the multi-lined text output, **but** also several additional `newlines` that should **not** be there...\n\nLooking at the commits it seems this not only involved 86e62db, but 350f7b4... \n\nI can **NOT** find special comments, other than the commit messages by @balthisar, why these were done... If he gets a chance maybe he could comment now...\n\nSo I could just try `reverting` these two commits, but this already involves creating a **new** commit, so in a branch `issue-673` I have removed these two to do some more testing...\n\nI pulled, checked out branch `issue-673`, built and installed a **new** tidy, with a RC number, `-DTIDY_RC_NUMBER=I673` -\n\nNow `phpinfo()` shows -\n\n```\nTidy support => enabled\nlibTidy Version => 5.7.3.I673\nlibTidy Release => 2018/01/01\nExtension Version => 7.3.0-dev ($Id: 2a0ed7b6e3816d9e5ef7efce5b6156132477f79e $)\n```\n\nAnd now the output of `$ ./php test.php` appears correct -\n\n```html\n<html>\n<head>\n<title></title>\n</head>\n<body>\n<p>this is a string</p>\n</body>\n</html>\n```\n\nAnd to be sure `test.php` just contains -\n\n```html\n<?php\n $x = new Tidy();\n $x->parseString('<p>this is a string</p>', ['wrap' => 0], 'utf8');\n echo (string)$x;\n?>\n```\n\nThis does **not** explain why the seemingly innocuous changes in `AdjustConfig` logic causes this change, but it is clear that it does...\n\nUnless a **better** fix is found will consider merging `issue-673` to `next`...\n\nAnd maybe back porting it, perhaps together with a few other subsequent commits, into release `5.6`, creating a `5.6.1` release... will see...\n\nLook forward to further testing and comments... thanks...\n. @TysonAndre have now merged PR #705 and hope that closes this... and #704\n\nIf I missed something please feel free to re-open, or a **new** issue... thanks. @jidanni certainly agree `tidy` could do better in this regard...\n\nPatch or PR very welcome... thanks...\n. @jidanni if you refer to the **warning**, then then I think from about `tidy` version **5.5.23**, circa May 13, 2017, with a `--fix-uri no` config, it is no longer issued...\n\nSee issue #378 for the discussion and PR #556 for the merge... \n\nUpgrade to **any** later tidy version, if it is the **warning** you refer to... if not please explain more... thanks...\n. @hannob thanks for your questions...\n\nPlease read [VERSION.md](https://github.com/htacg/tidy-html5/blob/next/README/VERSION.md), for a full explanation... and maybe [BRANCHES.md](https://github.com/htacg/tidy-html5/blob/next/README/BRANCHES.md) for more...\n\nNo, there is **no** release later than `5.6.0`... and that is the code in the current `master` branch... the **next** release would be `5.8.0`, although as you may read elsewhere there may be consideration of a `5.6.1` release...\n\nBut having said that, we do try to keep the `next` branch, that is the **development** branch very **STABLE**, and some choose to always update to it... and we bump the `version.txt` value for each commit... the **latest** is `5.7.3`...\n\nAnd that vunerablity mention in the CVE for `5.7.0` has been addressed in `5.7.3`... See #655 and PR #662...\n\nThat is the **only** way to get the **latest** code... and github offers a `ZIP` download if you do not want to get into `git clone ...`...\n\nHope this answers your question... thanks...\n. @hannob seems question asked and answered, so closing this... thanks...\n. @saulzini unfortunately I know of no way to \"tell tidy to ignore custom attributes on custom components\"...\n\nHTML Tidy is a **HTML/XHTML** parser, certainly **not** a `json` parser. \n\nGiven the current tidy html `attribute=\"value\"` parsing, things like you suggest `:element=\" {\"test\":\"test\"} \"`, **escaped** or **not**, will always be **invalid**...\n\nIn other words there are some things HTML Tidy can **not** do, and is unlikely to ever do... sorry...\n. @zneak thanks for your issue, and the W3C **REC** reference - this is good...\n\nAs always it would be very much appreciated if you advised the tidy **version** you are using, and provided a simple, small sample html **input**, the output **received**, and the output **expected**... thanks...\n\nAt this moment I can **not** duplicate the problem with tidy versions including and after release `5.4.0`...\n\nEven `5.2.0` removed the spaces, but output a warning... version `5.0.0` did escape leading spaces, but removed trailing... but maybe I misunderstand the problem...\n. @zneak for sure what **browsers** do, or do **not** do, is up to them **and** does **not** neccessarily make **VALID**, or **even** correct HTML...\n\nThrow your `sample` at the W3C [validator](https://validator.w3.org/#validate_by_upload), and I think you will see what I mean -\n\n```\nError: Bad value \u21a9  ./\u21a9 AAA\u21a9    .html\u21a9 for attribute href on element a: Tab, new line or carriage return found.\nFrom line 8, column 1; to line 12, column 2\nd>\u21a9<body>\u21a9<a href=\"\u21a9    ./\u21a9 AAA\u21a9    .html\u21a9\">AAA</a\n```\n\nThe purpose of `tidy` is to try to **fix** this... but of course it can only **guess** at what the html author **intended**... It is **good** at some, and really **sucks** on others...\n\nWhat is a **valid** `href` is certainly one of the **more** difficult ones... \n\nAnd there have been quite a number of issues on this... we do have the option `--fix-uri no` to stop the `escaping`, but there seems no way to just strip **all** spacey chars, given that there are valid URI's with `spaces`, just like you can have a `path` and/or `filename` that does include spaces...\n\nI do not think `tidy` can do more at this time... but always open to suggestions, patches, PR for review... thanks...\n\nAnd yes, thanks for the github `template` pointer... this is possible, but most of the time commenters do remember to add sufficient information, so probably will not implement this at this time... thanks...\n. @AnrDaemon thanks for this issue...\n\nIn a quick test using multiple values like `--new-blocklevel-tags \"b1 b2\"`, with latest `5.7.3`, the output service `printOptionExportValues` will **incorrectly** output `two` lines -\n\n```\nnew-blocklevel-tags: b2\n: b1\n```\n\nThis is a **bug**!\n\nThe code -\n\n```\n            TidyIterator pos = tidyOptGetDeclTagList( tdoc );\n            while ( pos )\n            {\n                d->def = tidyOptGetNextDeclTag(tdoc, optId, &pos);\n                if ( pos )\n                {\n                    printf( \"%s: %s\\n\", d->name, d->def );\n                    d->name = \"\";\n                    d->type = \"\";\n                }\n            }\n```\n\nwill output the first line above, obviously with a `newline`... and as you can see the `d->name` is cleared... the next call to `tidyOptGetNextDeclTag` will get the 2nd value, `b1` in this case, but will clear `pos`...\n\nThe code will fall down to -\n\n```\n    /* fix for http://tidy.sf.net/bug/873921 */\n    if ( *d->name || *d->type || (d->def && *d->def) )\n    {\n        if ( ! d->def )\n            d->def = \"\";\n        printf( \"%s: %s\\n\", d->name, d->def );\n    }\n```\n\nwhich will now generate the 2nd line with **no** name, so we get just `: d1\\n`... it seems in this case the `d->name` should **not** be cleared... or something...\n\nIf you add 3 values ``--new-blocklevel-tags \"b1 b2 b3\"`, then you will get 3 lines, etc...\n\n```\nnew-blocklevel-tags: b3\n: b2\n: b1\n```\n\nI would **expect** `new-blocklevel-tags: b3 b2 b1\\n`, or **maybe** at least -\n\n```\nnew-blocklevel-tags: b3\nnew-blocklevel-tags: b2\nnew-blocklevel-tags: b1\n```\n\nSo we are definitely in need of a **fix** for this service...\n\nComments, patches, PR very welcome... thanks...\n. @AnrDaemon yes, thanks for pointing out the **additional** items...\n\nThe `css-prefix` is **strange**, in that the option `setter`, namely `ParseCSS1Selector`, **deliberately** adds, appends that `-`, with the code and comment - `buf[i++] = '-';  /* Make sure any escaped Unicode is terminated */`...\n\nActually the **full** code and comment is -\n\n```C\n    buf[i++] = '-';  /* Make sure any escaped Unicode is terminated */\n    buf[i] = 0;      /* so valid class names are generated after */\n                     /* Tidy appends last digits. */\n\n    SetOptionValue( doc, option->id, buf );\n```    \n\nOne **wonders** about the need for this **addition**... there is already a value **validator**, `IsCSS1Selector`, which tests the string input, and has a big clear comment over it, which makes it clear things like `/* ab\\555\\444 is 4 chars {'a', 'b', \\555, \\444} */` is allowed and validated... \n\nBut this setter would **automatically** add a 5th `-` character! **ALWAYS**!! **WHY**???\n\nEither the `setter` should **not** do this, or when `getting` the value it is removed... probably need to look closely at where tidy **fetches** this value, and uses it to generate `CSS`... Lots to ponder here...\n\nAlso why is there no **value** output for `--priority-attributes \"id name\"`? On reading that config, the value **is** definitely set to \"id, name\", but in output `printOptionExportValues` the `d->def` is **never** set!\n\nIt seems there must be another `switch` case added, `case TidyPriorityAttributes:` to **fetch** the value! Like there is in the `ParseList()` service, `DeclareListItem`. It uses its own `DefinePriorityAttribute` service...\n\nThere exists a `tidyOptGetPriorityAttrList/getPriorityAttrList` service **but** it seems it is **never** called...\n\nFinally there may be another `bug`, and that is the **order** of such multiple string items...\n\nA config of `--new-blocklevel-tags \"b1 b2 b3\"` will output them as `b3 b2 b1`, **and** this was **true** even back at the last `cvs` tidy release 2009... all those years ago... we did **not** have `-export-config` then but we did have `--show-config` so, for example ...\n\n```\n$ tidy-cvs -v\nHTML Tidy for Windows released on 25 March 2009\n$ tidy-cvs --new-blocklevel-tags \"b1 b2 b3\" -show-config\n[skipped]\nnew-blocklevel-tags         Tag names  b3\n                                       b2\n                                       b1\n```\n\nSo unless that **order** is corrected the following will **fail**\n\n```\n$ tidy --new-blocklevel-tags \"b1 b2 b3\" -export-config > tempcfg1.txt\n$ tidy -config tempcfg1.txt -export-config > tempcfg2.txt\n$ diff -u tempcfg1.txt tempcfg2.txt\n```\n\nThis would show up this **different order bug**, that would remain even when the output is **fixed**, unless something is done about reversing the output order at the same time...\n\nSo there are certainly a number of **bugs** here in this `-export-config` option... hopefully **all** solvable...\n\nAs stated comments, patches, PR very welcome... I too will experiment... thanks...\n. @AnrDaemon this intrigued me, so I went on to create an `issue-679` branch... and coded some changes...\n\nThe **full** diff is commit ea4ae0dd1\n\nSo I built a `HTML Tidy for Windows version 5.7.3.I679` and ran some tests...\n\nFirst there was **no** change in the [Regression](https://github.com/htacg/tidy-html5-tests) tests, but this just means maybe there is **no** tests that tests this output, but it is still a **good** thing...\n\nThen I ran -\n\n```\n$ tidy --new-blocklevel-tags \"b1 b2 b3\" --css-prefix d --priority-attributes \"id name\" -export-config 1>tempcfg1.txt\n$ tidy -config tempcfg1.txt -export-config  1>tempcfg2.txt\n$ diff -u tempcfg1.txt tempcfg2.txt\n```\n\nand there were **no** differences...\n\nSome relevant output in the `tempcfg1.txt` -\n\n```\ncss-prefix: d\nnew-blocklevel-tags: b1 b2 b3\npriority-attributes: id name\n```\n\nThis is a **first cut** `fix`, and **more** testing **must** be done...\n\nIt would be appreciated if users could checkout the `issue-679` branch, build, test and report... thanks...\n. Commit bb7c494 adds display of `--priority-attributes \"id name\"` to the `-show-config` output, but the order of the `--new-*-tags` has been left inverted. The order does not seem so important to this simple `-show-config` output... eg...\n\n```\n$ tidy --new-blocklevel-tags \"b1 b2 b3\" --css-prefix d --priority-attributes \"id name\" -show-config\n...\ncss-prefix                  String     d\nnew-blocklevel-tags         Tag Names  b3                                      \n                                       b2                                      \n                                       b1\npriority-attributes         Attribute  id                                      \n                                       name\n```\n\nAs indicated, this does **not** seem a problem...\n\nAlso it is noted `-xml-config` does **not**, in fact has **never**, shown the `current` values - it will **always** just show `<default />` - but will leave this is a separate issue, if it is one...\n\nThe only test remaining is to setup and try say `--css-prefix \"ab\\555\\444\"` and see what is done...\n\nLook forward to any other user tests of this `issue-679` branch... thanks...\n. Concerning `css-prefix`, first the **default** value is just the letter `c`, and when generating CSS, due to the `-clean` option, on the sample [in_679.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_679.html) tidy will generate the likes of -\n\n```\n span.c3 {color: blue; background: yellow}\n span.c2 {color: green; background: yellow}\n span.c1 {font-size: 120%}\n```\n\nNow when you set the prefix like `--css-prefix d`, in 2009 `tidy-cvs` you would get -\n\n```\n span.d-3 {color: blue; background: yellow}\n span.d-2 {color: green; background: yellow}\n span.d-1 {font-size: 120%}\n```\n\nMaybe this **looks** better, but now that I have removed this auto addition of the `-` in the option `setter` it will be back to like the default case -\n\n```\n span.d3 {color: blue; background: yellow}\n span.d2 {color: green; background: yellow}\n span.d1 {font-size: 120%}\n```\n\nSo what about the strange case mention in the source code comment, namely `--css-prefix \"ab\\555\\444\"`. Again 2009 `tidy-cvs` perhaps **looks** better with -\n\n```\n span.ab\\555\\444-3 {color: blue; background: yellow}\n span.ab\\555\\444-2 {color: green; background: yellow}\n span.ab\\555\\444-1 {font-size: 120%}\n```\n\nBut on the other hand this modified tidy 5.7.3.I679 is **not** wrong with -\n\n```\n span.ab\\555\\4443 {color: blue; background: yellow}\n span.ab\\555\\4442 {color: green; background: yellow}\n span.ab\\555\\4441 {font-size: 120%}\n```\n\n**AND** the HTML generated with the likes of `<li><span class=\"ab\\555\\4441\">y2</span></li>` passes the W3C validation, so it seems the `ab\\555\\4441` string is a **valid** class name...\n\nPassing the output through the validator pointed out another small thing, that tidy generates a `style` element with an attribute, `<style type=\"text/css\">`, to which the validator issues a warning -\n\n```\nWarning: The type attribute for the style element is not needed and should be omitted.\n```\n\nBut will leave that as a separate issue...\n\nIn summary, as far as I can tell the **removal** of the auto addition of a `-` character is **cosmetic** only. If a user really wants it back then they can add it to the `css-prefix \"d-\"` option...\n\nAt the moment, unless I think of something else to try, or others have a suggestion, this concludes my testing of this `issue-679` branch, and will get around to setting up a PR to merge it...\n\nAs stated, look forward to any other user tests of this `issue-679` branch... thanks...\n. PR #695 created.... @AnrDaemon this fix is now in `next`... thanks.... @AnrDaemon thanks for your comment. I am **well** aware of **Cygwin**, and have built projects in the past using it...\n\nI am not sure I fully understand what you are suggesting here... as far as I am aware current `tidy`, that is a **console** app `tidy.exe`, and **libtidy**, static and shared, can be built using **Cygwin**... \n\nHave you, or others, tried it? What results? I am sure we can address any problems, if there are any...\n\nI am **not** personally interested in **adopting** a `Cygwin` HTML Tidy package, but **may** consider adding it to our **binary** distributions if someone else supplied and looked after it, solidly and regularly... \n\nAnd naturally such a package could be added to the `Cygwin` **packages**, but I am **not** familiar with what that entails, or exactly what that offers...\n\nSo who is the **champion** that's going to stand up, and own this? Suggestions are fine, but who will do the **work**?\n. @AnrDaemon well that is what these `issues` are about... If there is a `cygwin` build issue, then I am **sure** it can be addressed here...\n\nIn general `Tidy` is a **simple** C project, and tends towards the original K&R C... It does nothing particularly special in this regard, so should be easily built by a `gcc` windows port... I have for instance successfuly built `tidy` using `MinGW` and `MinGW-w64` which also has a windows `gcc` port...\n\nAs stated, I personally am very unlikely to setup the `cygwin` environment, but am sure there may be others interested... \n\nSo **go for it**, rabbits and all... ;=))\n\nI am sure we can find a place like [get-tidy](http://www.html-tidy.org/#homepage19700601get_tidy) to mention it on our web site... keep us informed... thanks...\n. @AnrDaemon so is anything happening on this? It has been several months...\n\nI just noticed there was a previous closed #362 on this topic...\n\nSearching around noted http://cygwin.1069669.n5.nabble.com/State-of-HTML-Tidy-package-td134148.html where this was discussed... \n\nBut searching say https://cygwin.com/packages/package_list.html, I could only find the 2009 `libtidy0_99_0`, which is very **sad**...\n\nAnyway, due to the fact that this is **not** really a `tidy` issue, but a `cygwin` issue, and no further comments, closing this... \n\nBut would still like to know if there is any `cygwin` update to add to our web site...\n\nFeel free to reopen, or post a new issue... thanks...\n. @AnrDaemon thanks for the further feedback...\n\n> there's no active tidy package maintaner (sic) for Cygwin.\n\nThat I understood, and thought that was what **you** were going to do... oh, well...\n\nAs advised, I am personally **not** interested, and more or less left this open a while hoping **someone** would step up...\n\n> And #362 is not related in any way, so to say.\n\nThat was about building `tidy` from source, with-in the `cygwin` quasi unix environment, which I took the time to do, test and report, and can **not** see how it is **unrelated**. \n\nThat seems what a `tidy package maintainer for Cygwin` would have to do, to have the binaries to upload, but **no** problem... Maybe I am wrong...\n\nWhat more do you want from `tidy`? Thanks...\n. @thvv **wow** what an interesting discovery...\n\nIt seems it is **not** only on the MAC, but is the **same** in `unix/linux`, and `Windows`, using current tidy 5.7.3...\n\nI just set a file to 444 - `$ chmod 0444 temp.html`, and then `$ tidy temp.html` and I get `Document: \"temp.html\" is not a file!` - Zute, or as `Snagglepuss` would say `Heavens to Murgatroyd`!!!\n\nIt certainly seems at least one `write` bit must be set, like `$ chmod 0644`, and `tidy` will be ok...\n\nOn the face of it this does **not** seem right. Provided you are **not** using the `-modify` option, which **will** try to overwite the file, it seems only **read** permission should be required...\n\n**AH HA**! The answer is **simple**. The `tidyDocParseFile` service has the following code -\n\n```\n    int status = -ENOENT;\n    FILE* fin = fopen( filnam, \"r+\" );\n\n    if ( !fin )\n    {\n        TY_(ReportFileError)( doc, filnam, FILE_NOT_FILE );\n        return status;\n    }\n\n    fclose( fin );\n```\n\nNow reading some `fopen` references that access string `\"r+\"` means `**read/update**: Open a file for update (both for input and output). The file must exist.`\n\nAnd **note** that if I set the file **read only** in Windows, `> attrib +R temp.html`, tidy will **fail** at the **same** place...\n\nNow after that code block, WIN32 and UNIX separate... \n\n`UNIX` continues with `fin = fopen( filnam, \"rb\" );`... you will **note** the `+` has been removed...\n\nWindows goes another code path, using in essence -\n\n```\n    HANDLE fp = CreateFileA( filnam, GENERIC_READ, FILE_SHARE_READ, NULL,\n                              OPEN_EXISTING, 0, NULL );\n    ...\n    fin->map = CreateFileMapping( fp, NULL, PAGE_READONLY, 0, 0, NULL );\n    ...\n    data->view = MapViewOfFile( data->map, FILE_MAP_READ,\n                                (DWORD)( data->pos >> 32 ),\n                                (DWORD)data->pos, numb );\n```\n\nSo we note also in Windows, that the concept of `+` is **not** required, with `GENERIC_READ`, `PAGE_READONLY`, and `FILE_MAP_READ`... this of course needs to be verified...\n\nReading this far, maybe, just maybe! there is  a **good** case for removing that initial `+` also... but as I review the **history**, maybe **NOT**...\n\nIt should be noted that the above `fopen( filnam, \"r+\" );` block was added relatively recently.. I trace it back to commit ce105dcf09, May 7, 2017... It was to address #391 - the fact that a directory would be treated as a file in unix/MAC... \n\nAnd IIRC a `fopen( dirname, \"r\" );` will **succeed** in unix - need to check this...\n\nMaybe the whole **block** could be replaced with a crossported `stat` check, which would **also** yield the `size` and `time`, which would make some of the subsequent code **both** in windows **and** unix redundant...\n\nI have been using the following, well tested, crossported service, in **many** projects, for a **long** time -\n\n```C\n#ifdef WIN32\n#define M_IS_DIR _S_IFDIR\n#else // !WIN32\n#define M_IS_DIR S_IFDIR\n#endif\nstatic struct stat buf;\nenum DiskType {\n    MDT_NONE,\n    MDT_FILE,\n    MDT_DIR\n};\n\nstatic DiskType is_file_or_directory(const char * path)\n{\n    if (!path)\n        return MDT_NONE;\n    if (stat(path, &buf) == 0)\n    {\n        if (buf.st_mode & M_IS_DIR)\n            return MDT_DIR;\n        else\n            return MDT_FILE;\n    }\n    return MDT_NONE;\n}\nstatic size_t get_last_file_size() { return buf.st_size; }\nstatic time_t get_last_file_time() { return buf.st_mtime; }\n```\n\nIt seems this is a **bug**. Tidy should **NOT** have a problem with a **read only** files. \n\nIf the `-modify` option **is** used, then this problem should be handled at the **output** stage...\n\nIn any case tidy should **not** report `is not a file!` when it **is** a file...\n\nWhat do others think... thanks...\n. @thvv, just to confirm one small test done of `fopen( filnam, \"r\" );`, that is without the `+`, **succeeds** in **unix**, and probably in `OSX`, even if the input is a **directory**, so can **not** just remove it...\n\nAm tending toward using a 'stat' test and **also** fail if a **directory**, but would need another message like say `FILE_IS_DIRECTORY`, `\"%s is a directory!\"` so `tidy` can correctly report the problem...\n\nAs stated look forward to further **feedback**... thanks...\n. @hosiet repeated this bug in #789 ... any help appreciated... thanks.... @codeniko re-read this several times, and still a little unsure exactly what you are asking...\n\nGiven that the purpose of `tidy` is to **tidy**, and where it can **fix** a document, there is no **option** to sort of prevent that from happening...\n\nIn this specific given case, as you point out, `Knowingly against spec`, you want to add a `<div>` inside a `<label>` element, and there is no way to configure `tidy` to **ignore** this... so it does its best to **fix** the problem it sees... to try to only output **valid** html...\n\nPassing a small sample to the W3C validator gives an **Error:** output -\n\n```\nError: Element div not allowed as child of element label in this context.\nFrom line 9, column 25; to line 9, column 41\n<label for=\"markuplang\"><div class=\"lab\">HTML</div></label>\n```\n\nAnd yes, with the option `--drop-empty-elements no` tidy will output **two** labels... not particularly good, but it is the consequence of forcing that option to **no**... \n\nSo sorry, at the moment can **not** see any problem with `tidy`...\n\nLook forward to further feedback... thanks...\n. @codeniko was hoping others would chime in on this question...\n\nCertainly, you should **not** use `tidy` if you do **not** \"have confidence in that it won't break your code.\" ... sorry you feel that...\n\nIf you have a **specific** case where `tidy` outputs **invalid** html, then please raise it as an issue, with small sample... thanks...\n\nIf your pipeline includes an **invalid** html generator, then I would get that **fixed**, before passing it to `tidy`... like putting a `<div>` in a `<label>` is out, etc... the code should pass the W3C validator... use the [nu api](https://validator.w3.org/docs/api.html) as part of your pipeline... generate clean html...\n\nIf you want tidy html, **nothing** changed, except output formatting, then this could be written in minutes, in say perl... and maybe there are other linters that do this for html...\n\nWe have other web developers who use `tidy`, with `-q -e` options, to signal that some html needs fixing, and go back to the editing, generation stage to make the html **fix** permanent... then using `tidy` a 2nd time, to only **format** an output...\n\nBut an option to **disable `tidy` from fixing html errors** could be difficult implement... \n\nMany html errors are detected and fixed in the phase 1 parsing of the user input, and more in the phase 2 clean up... how to disable **all** these, sort of built-in html rules and regs, may **not** be easy... but you never know, until you get into the coding...\n\nSo yes, maybe a **new** option, of say `--disable-tidy yes`, could be considered... but I think there should be a discussion on this... before any work, patches, PR...\n\nMarking this `Feature Request` with indefinite milestone... until someone steps up...\n\nLook forward to more feedback, patches, ideas on this... thanks\n. @rjkg thanks for the issue...\n\nIn reading around it does seem a `<script>` element can **now** be included in a `<table>` in HTML5...\n\nPassing suitable samples, given below, to the W3C validator seems to **agree** with this... That is in a HTML5 document type there is **no** error shown, while there is if it is a HTML4 legacy document...\n\nOf course, in a simple test, in both cases it seems `browser` will ignore this, and correctly **run** the script... if enabled... regardless of doctype...\n\nSo what is your document type? \n\nYou seem to be indication HTML4 with `<table width=700 cellspacing=0 cellpadding=0 border=0>`, in which case the tidy warning is correct... In HTML5 it is recommended that those `table` attributes be replaced with `css`...\n\nBut yes, this seems another case where tidy should be `enhanced` to accept this if in HTML5 mode...\n\n2 tests, HTML5 [in_683.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_683.html), and HTML4 [in_683-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_683-1.html) pushed to my `test` repo...\n\nComments, patches, PR very welcome... thanks...\n. @jidanni thanks for this PR... we like those... ;=))\n\nThis **reversal** of the text sense of this option looks **correct** to me...\n\nSubject to any further comments, will merge this shortly... thanks...\n. @jidanni as you can see now merged, thanks...\n\nIt was not until after pushing the `merge` did I note this was to the `master` branch... EEEK!\n\nOk, have now `cherry-picked` the commit into `next`, so this docs the fix will march forward towards the next release... just hope this does not come back to bite me at that time...\n\nNormally PR should **always** be to the `next` branch, and if thought fit we may choose to `cherry-pick` it back into a previous release, and make a **new** release... which we are **not** doing in this case...\n\nBut anyway, it is done... thanks...\n. @cztchoice thanks for the issue...\n\nYou seem to be using a quite **old** `version` of tidy - The commit c63cc39 shown is around Jul 21, 2012 - but that is not so important since current tidy `5.7.3` will do the **same** thing...\n\nI am not fully sure what that `white-space:pre` style is actually supposed to do... but in reading around, testing and experimenting, it certainly has an **effect** in a browser...\n\nThe **problem** is that tidy will add a newline after the `<li...>` tag, before the `<p>` tag... remove that newline and the browser display is correct...\n\nYou can try this by adding the **special** option `--vertical-space auto` which effectively removes **all/most** newline characters... \n\nNormally this `newline` in the `<li>` element is **ignored** but you seem to be telling the browser to **not** ignore the newline with `<li style=\"white-space:pre\">`, so you get the newline you requested...\n\nTry this sample in a browser -\n\n```html\n<ol>\n<li style=\"white-space:pre\">\n<p>Since 2003</p>\n</li>\n</ol>\n<ol>\n<li>\n<p>Since 2003</p>\n</li>\n</ol>\n```\n\nIn the first you should see the `1.` with the text on a new line, and **not** in the second... a question of style...\n\nNow `tidy` does **not** read, interpret, understand css style elements in a document - it is **not** a browser! - and its output will **not** be influenced, changed whatever css is given...\n\nThere is a small case for say a **new** option to force output of an `<li>`, and probably some others, as sort of always inline only... that is under no circumstances put the `<p>`, in this case, on a new line... but can not think of even a suitable name at this time to cover all possible cases...\n\nOf course, take away the `<p>` and maybe the `<span...>`, and tidy will output the `<li>` fully inline in most cases...\n\nSo to mount this as a `Feature Request` someone has to suggest a suitable option name, and clearly specify in which cases, to which tags, it should apply, etc... that is provide a full specification, use case and justification...\n\nLook forward to further feedback on this issue... thanks...\n. @Kristinita thanks for the issue...\n\nHave **not** read any W3C documentation on this, but like the `nu` validator, @sideshowbarker, have added `TidyAttr_COLOR` to the `W3CAttrsFor_LINK` that governs attributes allowed for `TidyTag_LINK`... and pushed the change db02d45 to the `issue-686` branch... this seems to remove the **warning**...\n\nHave run our [Regression Tests](https://github.com/htacg/tidy-html5-tests) and no problem, but this may just mean there is no existing test for this...\n\nLook forward to futher feedback on whether this should be merged to `next`... thanks...\n. Now PR #701 merged so closing this... thanks @Kristinita ...\n. @Kristinita there will be **no** `5.7` release. Read the [VERSION.md](https://github.com/htacg/tidy-html5/blob/next/README/VERSION.md)... especially the **Minor** `odd/even` numbering...\n\nThe next `5.8` **release** is presently arbitrarily targeted for `May 24, 2018`, but we will see what happens as that draws near... \n\nAgree it is a bit odd that the milestone is called `5.7`, when it should be `5.8`... and will shortly create a `5.10` milestone, so I can begin to move issues not likely to be closed in `5.8` to that...\n\nIn the past this has usually slipped somewhat for various reasons... but we will see... thanks...\n. @i-give-up thank you for the issue...\n\nResearching this and it does seem a **strange** combination... \n\nAs the documentation states, setting `strict-tags-attributes` will report **bad** attributes of an element as an **error**... Well maybe that should be a **warning**?\n\nAnd then it goes on to say \"Additionally if drop-proprietary-attributes is enabled, then not applicable attributes will be dropped, too.\", but it does **not** make it clear that since they will be marked as an **error** you will get **no** output without `--force-output yes`...\n\nAnd likewise the documentation of `drop-proprietary-attributes`, where it says \"Additionally attributes that aren't permitted in the output version of HTML will be dropped if used with strict-tags-attributes.\"! And yes that's sort of true, but if it then reports an **error** then all output is **dropped**, so again you need `--force-output yes`...\n\nAnd then there is the default config, which will only **warn** about the `align` attribute, and **not** the `valign`... Why? But it is using a **warning**... perhaps a bit harshly worded `Warning: <td> attribute \"align\" not allowed for HTML5`... hmmm...\n\nI would prefer a wording like the `nu` validator - `Error: The align attribute on the td element is obsolete. Use CSS instead.`, but that is just a semantic preference... \n\nAnd in this case `drop-proprietary-attributes` will do **nothing**. I guess because they are not **strictly** `proprietary`! Maybe this should be stretched to include such **bad** attributes, and/or maybe there is a need for a **new** option like say `drop-invalid-attributes` or something...\n\nSo I can not yet see a solution for this, except perhaps downgrading `strict-tags-attributes` to a **warning**...\n\nLook forward to further feedback, comments, patches, PR on this... thanks...\n. @i-give-up thought about this but certainly at the moment there is no `option` to just delete **style**, as you are requesting...\n\nWhile one of tidy's actions is to **clean** a document, but in doing so considerable care has been taken to try to keep the rendering in a browser unchanged. \n\nSuch an option is asking `tidy` to deliberately mess up the rendering...\n\nSo at this moment do not see this as a suitable option for `tidy`, but would try to listen to other feedback and ideas... thanks...\n. @i-give-up for the reasons mentioned marking this `Won't Fix`, and closing it... thanks...\n. @ogolovanov I have **big** trouble with utf-8 in my windows machine... but was able to test in linux... and I do not see any problem...\n\nThe input file has the hex sequence `D0 A0 D0 B5 D0 B7 D1 83 D0 BB D1 8C D1 82 D0 B0 D1 82`, which is valid utf-8...\n\nAfter running it though `tidy` the ouput remains exactly `D0 A0 D0 B5 D0 B7 D1 83 D0 BB D1 8C D1 82 D0 B0 D1 82`... no change...\n\nNothing is changed if I add `--input-encoding utf8 --output-encoding utf8`, since these are the defaults... so can not duplicate the problem... \n\nOf course I was testing with the latest `5.7.3` tidy, but there have been **no** encoding, decoding changes inbetween..\n\nAnd regrettably, we do not add a `*.deb` packages any more, since 2016. It is usually easy for unix/linux users to build and install from the git source... sorry...\n\nAnd sorry unable to **duplicate** the problem, so can do **nothing** at this time... maybe if you explain more, other samples, etc... thanks...\n. @ogolovanov as stated **unable to duplicate**, and no further feedback in over a month... closing this...\n\nPlease feel free to re-open, or file a **new** issue... thank...\n. @maxnordlund this seems a repeat of **closed** #310, Nov, 2015, but maybe it is time to look again...\n\nFirst `tidy` is a **HTML** linter, fixer, tidier, and **not** a `template` tool! It should **only** parse, fix, format `[x]html`...\n\nHaving said that, `tidy` does already handle things like `<?`, `<%`, `<#`, and **more**, ..., more or less as transparent text, so maybe there **is** a case for `others` to be handled `better`... perhaps under a **new** suitable option...\n\nIt has to be repeated with a config of `--show-body-only yes --fix-uri no` tidy already does quite well with the above sample input, added as [in_691.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_691.html) to my test repo...\n\nAll I can say at this point is that comments, patches, PR's would certainly be reviewed, and provided there were no adverse consequences to tidy's **html** parsing, considered for inclusion...\n\nLook forward to further feedback... thanks...\n. @petdance thank you for the issue... good to have you back...\n\nYes, that is indeed a message **bug**. \n\nThe following patch **fixes** it, but still testing, checking if there is an alternative, and if what I have done will not lead to other problems, like is the node and element **always** valid for this message... it seems so, but...\n\n```diff\ndiff --git a/src/message.c b/src/message.c\nindex eb097de..0c1ff4c 100644\n--- a/src/message.c\n+++ b/src/message.c\n@@ -851,8 +851,10 @@ TidyMessageImpl *formatStandard(TidyDocImpl* doc, Node *element, Node *node, uin\n\n         case COERCE_TO_ENDTAG:\n         case NON_MATCHING_ENDTAG:\n-        case TOO_MANY_ELEMENTS_IN:\n             return TY_(tidyMessageCreateWithNode)(doc, rpt, code, level, node->element, node->element );\n+        case TOO_MANY_ELEMENTS_IN:\n+            return TY_(tidyMessageCreateWithNode)(doc, rpt, code, level, node->element, element->element);\n+\n     }\n\n     return NULL;\n```\n\nNow the `warning` is correct -\n\n```\nline 2 column 5 - Warning: too many title elements in <head>\n```\n\nBut `tidy` does nothing about **fixing** the problem, like dropping any 2nd or subsequent `<title>` and thus the output xhtml, will **not** pass the W3C validator... \n\nOr maybe `tidy` should only keep the last, which is probably what a browser would show...\n\nI think it should do a **fix**... it does for many other warnings...\n\n`tidy` also has a changed doctype to `strict`, not sure why! But that does **not** effect the validator results...\n\nAnd without the added option `--add-meta-charset yes`, will get a validator note about no `meta charset` declaration in the document...\n\nSo there seems more to do here... perhaps as separate issues...\n\nFurther feedback, testing, welcome, or an alternate patch or PR... thanks...\n. @petdance Pushed the above simple message fix to `branch` **issue-692** for consideration...\n\nBut seek further feedback on whether this should also include deleting such multiple `<title>` elements, and as suggested maybe trying to keep the last, if possible, but at least all after the first... to ensure tidy outputs valid html... thanks...\n. @petdance Have done further testing on this, and in the case of multiple `<title>` elements it seems in the 4 browsers I tested, I was surprised to find that they only showed the **first**. Others seem to just be dropped...\n\nThat makes deleting subsequent `<title>` elements relatively easy in `tidy`...\n\nSo will work on extending the `issue-692` branch to do this...\n\nAs always further feedback very welcome... thanks...\n. @petdance have now pushed a further fix to the `issue-692` branch to delete any subsequent `<title>` tags...\n\nIn this case it was not so `easy`. It was not possible to delete the additional `<title>` node in the `parser.c` module where the first message comes from. So I created a new service `TY_(CleanHead)(doc)` in `clean.c`, called during the post parsing, in `tidyDocCleanAndRepair` phase.\n\nAt this moment now we get two warnings, the original, during the parsing phase, and the second during the post clean-up phase, and on your sample get -\n\n```html\nline 2 column 5 - Warning: too many title elements in <head>\nline 2 column 5 - Info: <head> previously mentioned\nline 4 column 9 - Warning: discarding unexpected <title>\n```\n\nMaybe we could delete the warning during the parsing, and only leave the clean-up phase. Or leave them both? What do you or others think? Thanks...\n\nAnd this seems to show up another possible item, and that is the line numbers. \n\nIn the actual document the second `<title>` is actually on `line 4 column 9`, as the second warning correctly states. The first warning shows the location of the `<head>` tag, which is technically **correct** in that the message mentions the `<head>`, but now seems less informative. \n\nMaybe this is an additional reason to to drop the first warning...\n\nAlso, I used a message that already existed. Maybe we need to have a more specific message like say `discard duplicate <title> tag`, or something, but that could be a separate issue...\n\nLook forward to further feedback and testing on this `issue-692` branch... thanks...\n. @sjeeva thank you for your issue...\n\nFirst, what **version** of `tidy` are you using? That `sourceforge` reference suggests a version back at 2009, or before!, nearly 10 years ago! Current tidy source is at https://github.com/htacg/tidy-html5, and the current `master` branch version is `5.6.0`, the `next` version is `5.7.3`\n\nAnd you do **not** show the input that caused the **error** and/or **warning** messages...\n\nYou seem to be asking two questions - \n\n 1. How to disable an error message - `document has errors that must be fixed ...`\n 2. How to disable the info message - `To learn more about HTML Tidy see http://tidy.sourceforge.net...`\n\nAs to the first question you can **not** disable `error` messages. In current `tidy`, you can use `--force-output yes` to push tidy to do an output even if there are errors, and you can use `--show-info no` or `--quiet`, `-q` to suppress most `info` type messages...\n\nBut please show the `tidy` version, run `tidy -v`, and give a minimal sample html input, configuration used, current output, and expected output to clearly show what you are talking about, asking... thanks...\n. @TELunus thank you for your issue...\n\nAs you point out, `libtidy`, and thus the console app, `tidy` \"universally adhere to the following convention\" - see [libtidy_03](http://api.html-tidy.org/tidy/tidylib_api_next/libtidy_03.html) -\n\n 1. 0 == Success, good to go.\n 2. 1 == Warnings, but no errors.\n 3. 2 == Errors (and maybe warnings).\n 4. <0 == Severe error. Usually the value equals -errno. See errno.h.\n\nSo I am afraid I do **not** understand your `it's useless`! Please explain more...\n\nSee the very simple [sample](http://api.html-tidy.org/tidy/tidylib_api_next/libtidy_04.html) program on how this can be used...\n\nIf you are using `libtidy` in your own app, then the API includes setting `callback` functions to **filter** the message output - see [I/O and Messages](http://api.html-tidy.org/tidy/tidylib_api_next/group__IO.html) - scroll down to the `TidyMessageCallback API`...\n\nDoes this answer your question? Thanks...\n. @TELunus I certainly agree the documentation can **always** be improved... and sorry I misread this a little... and glad you got a program working...\n\nAs you indicate, in the next section after [Diagnostics and Repair](http://api.html-tidy.org/tidy/tidylib_api_next/group__Clean.html), namely [Document Parse](http://api.html-tidy.org/tidy/tidylib_api_next/group__Parse.html), which technically should be read **before** getting to `Diagnostics and Repair` - How to re-order that? - each API has a **verbose** -\n\n```\n**Returns**\n Returns the highest of 2 indicating that errors were present in the document, \n1 indicating warnings, and 0 in the case of everything being okay.\n```\n\nBut still does **not** mention that they can also return a negative `errno` in case of a severe error, like if passed a `NULL` instead of a `TidyDoc`, and other cases, like file does not exist, etc, etc...\n\nAnd the next section [Document Save Functions](http://api.html-tidy.org/tidy/tidylib_api_next/group__Save.html) returns to the same unhelpful `An integer representing the status.`...\n\nI too guess the creators of the doxygen generated api docs, thus the comments, particularly in `tidy.h`, where most of this comes from, tried to strike a balance between lengthy, perhaps redundant information and sufficient information, and failed in this case...\n\nMaybe at least the message could be extended to say `An integer status - 0, 1, 2, or less than zero. See LibTidy -> Implement LibTidy section for meaning.`... \n\nAnd I do not know enough about doxygen comments to be able to make that a cross document html **link**, but maybe that would be possible...\n\nWhat do you think? \n\nAnd would particularly like help from someone understanding more of `doxygen` comments concerning creating such a **link**, and maybe re-ordering the sections... Help needed... thanks...\n. @TELunus thank you for the feedback, much appreciated, but I do **not** think we have quite **cracked** this yet...\n\nWhat do we have **now** in the documentation?\n\nWe have six(6) cases of -\n\n```\n ** @result Returns the highest of `2` indicating that errors were present in\n **         the document, `1` indicating warnings, and `0` in the case of\n **         everything being okay.\n```\n\nOnce in section `Basic Operations`, for `tidyStatus`, and 5 times in `Document Parse`. But this is incomplete in that it does **not** mention the possible less than zero error result...\n\nThen we have ten(10) cases of -\n\n```\n ** @result An integer representing the status.\n```\n\nThis is in 2 sections: `Diagnostics and Repair` - 3 times, and `Document Save Functions` - 7 times.\n\nNow, as you suggest, we could replace all **sixteen** cases with a full message -\n\n```\n ** @result Returns the highest of 2 indicating that errors were present in the document, \n **         1 indicating warnings, and 0 in the case of everything being okay, or a negative  \n **         number for a severe error (often taken from errno.h)\n```\n\nBut somehow, to me that seems far **too** much repetition - looks ugly... but is fully correct...\n\nAnd remember this is all C comments in the **main** tidy.h, adding to its size - a file included in **every** module... and shipped as part of the distribution...\n\nYes I know this is **less** important today with ever bigger hard-disks, and fast file I/O, file caching... but `tidy.h` is already over 100KB... 102,511 bytes in windows... and just FWIIW it is already 75% **comments**... do we need to add **more** is all I am saying...\n\nThat is why I chose a shorter sentence, plus a pointing to somewhere else...\n\nAnd since these are separate section **pages** in the api docs, maybe the full `paragraph` you suggest be put at the top of **3** relevant page, like `Diagnostics and Repair`, `Document Parse` and `Document Save Functions`, with a wording like -\n\n```\n ** Functions that return 'an integer status' will return the highest of 2 indicating that errors \n ** were present in the document, 1 indicating warnings, and 0 in the case of everything being \n ** okay, or a negative number for a severe error (often taken from errno.h)\n```\n\nThen each **individual** API function, well 15 of the 16 - can have say a simple, short -\n\n```\n ** @result An integer status. See top.\n```\n\nWould exclude the **one** in `Basic Operations` ie. `tidyStatus(doc)` since this is the only 1 in that section, but with the message expanded to the **full** message...\n\nTesting it **all** out - \n\n 1. Changing all 16 places to the **full** correct message adds 2KB to the size of `tidy.h`. Just aout 2% - quite small really - but an **addition** none the less, to an already large file... 104,952 bytes...\n\n 2. Changing one to be the full message, adding that full integer status message at the top of 3 sections, and changing 15 to the above `See top.` short message kept `tidy.h` at about the same 100KB... 102,592 bytes\n\nSo what do you and others think? Please give some feedback... I am really only 49:51 on this... thanks...\n. @petdance thank you for the issue...\n\nYes, **warnings** and **errors** are emitted, by default to `stderr`, when they are found... \n\nI think the first 3 are during the document `parsing` phase, and the last during the `tidyDocCleanAndRepair` phase...\n\nThere are many other **warnings** that can be issued during this clean and repair phase, so they too would appear `out-of-document-order`... even out of order with each other...\n\nNot that it is important, `tidy` has been doing this since some time before the last cvs source release in 2009... thus this `feature!` was inherited in the src move to **github**... \n\nIt may have been brought up previously in these issues, like #561, but maybe others...\n\nAs indicated there, if we wanted the messages in strict document order, the initial parsing phase messages would need to be buffered, and the later items added and then sorted before any output... could be done, not so difficult... \n\nAnd since apps using `libTidy` could get all the such messages in a buffer, and they could apply their own sorting, before showing the messages... \n\nIs this worth the effort? Maybe... as indicated it would mean delaying all message output until the library is finished with all phases of the document...\n\nLook forward to further feedback to determine is this a `Feature Request` that **should** be added to `tidy.c`, the console app... thanks...\n. Strange, I though this would be easy... just prevent the indent spaces to be ouput before the `x`...\n\nBut it turns out quite involved... You can have a really long single line of text in a `<pre>` and tidy knows to **not** allow it to be wrapped, but when it actually comes to output the line, it **will** add the indent spaces before...\n\nThe problem happens in `WrapLine( doc )`, which calls `WantIndent(doc)`, and if that returns `yes` then tidy will ouput the indent spaces before the `x`... which in this `<pre>` case, we do **not** want...\n\nBut to back up a little. We are in `PPrintTree` and we eventually reach the `<pre>` node, which is handled in the `else /* some kind of container element */` part of the code... and enters the following code block (some newlines, spaces deleted for brevity, and some extra comment added) -\n\n```\n    if ( node->tag && (node->tag->parser == TY_(ParsePre) || nodeIsTEXTAREA(node)) ) {\n        Bool classic  = TidyClassicVS; /* #228 - cfgBool( doc, TidyVertSpace ); */\n        uint indprev = indent;\n        PCondFlushLineSmart( doc, indent ); /* about to add <pre> tag - clear any previous */\n        /* insert extra newline for classic formatting */\n        if (classic && node->parent && node->parent->content != node)\n            TY_(PFlushLineSmart)( doc, indent );\n        PPrintTag( doc, mode, indent, node );   /* add <pre> or <textarea> tag */\n        indent = 0; // NOTE: indent is zeroed here\n        /* @camoy Fix #158 - remove inserted newlines in pre - TY_(PFlushLineSmart)( doc, indent ); */\n        for ( content = node->content; content; content = content->next )\n            TY_(PPrintTree)( doc, (mode | PREFORMATTED | NOWRAP), indent, content ); // NOTE: PREFORMATTED and NOWRAP bits added\n        /* @camoy Fix #158 - remove inserted newlines in pre - PCondFlushLineSmart( doc, indent ); */\n        indent = indprev;\n        PPrintEndTag( doc, mode, indent, node );\n        if ( cfgAutoBool(doc, TidyIndentContent) == TidyNoState && node->next != NULL )\n            TY_(PFlushLineSmart)( doc, indent );\n    }\n```\n\nNow note a few important things. After the `<pre...attr>` is added to the print buffer, any indent is zeroed, and when printing the contents `PREFORMATTED` and `NOWRAP` bits are added. So we **should** know this throughout the printing of a `<pre>` and `<textarea>` elements, and their text children. \n\nYou would think the `PREFORMATTED` bit would also indicate that tidy should **not** add its own `indent`, which was also deliberately set zero before start this output... sort of two reason why to **not** add an `indent`... **but** somehow this is **forgotten**... \n\nFor sure, no matter how long the `<pre>` text is, here I am talking about many words with spaces, tidy does remember `NOWRAP`...\n\nSo as indicated this starts with `WantIndent( doc )` return `yes`, and its code is -\n```\n    TidyPrintImpl* pprint = &doc->pprint;\n    Bool wantIt = GetSpaces(pprint) > 0;\n    if ( wantIt ) {\n        Bool indentAttrs = cfgBool( doc, TidyIndentAttributes );\n        wantIt = ( ( !IsWrapInAttrVal(pprint) || indentAttrs ) && !IsWrapInString(pprint) );\n    }\n    return wantIt;\n```\n\nNow `GetSpaces(pprint)` will return `pprint->indent[ 0 ].spaces`, and in this case will be 8. This can not be zeroed, since we do need to remember where we are after the ` ` to continue onto the next element... and likewise we will not be `IsWrapInAttrVal` and not `IsWrapInString` so will return `yes` and the indent will be added and the damage done...\n\nNow after this, we are in `PFlushLine`, the `pprint->indent[ 0 ].spaces = indent;` which is zero at the time... So does this bad indent only happen on the first line of a `<pre>`? **YES**! Subsequent lines are **not** indented!!!\n\n**Yowee**, is this due to not setting the indent zero early enough? See issue #158 above. There used to be a call to `PFlushLineSmart` **after** setting the indent to zero, which got removed, but one of the effect of such a flush is to set `pprint->indent[ 0 ].spaces` to the indent, now zero... Try a small fix -\n\n```diff\ndiff --git a/src/pprint.c b/src/pprint.c\nindex 57cd7b1..61845ee 100644\n--- a/src/pprint.c\n+++ b/src/pprint.c\n@@ -2135,6 +2135,8 @@ void TY_(PPrintTree)( TidyDocImpl* doc, uint mode, uint indent, Node *node )\n             Bool classic  = TidyClassicVS; /* #228 - cfgBool( doc, TidyVertSpace ); */\n             uint indprev = indent;\n\n+            indent = 0; /* Issue #697 - set this before the flush */\n+\n             PCondFlushLineSmart( doc, indent ); /* about to add <pre> tag - clear any previous */\n\n             /* insert extra newline for classic formatting */\n@@ -2145,7 +2147,6 @@ void TY_(PPrintTree)( TidyDocImpl* doc, uint mode, uint indent, Node *node )\n\n             PPrintTag( doc, mode, indent, node );   /* add <pre> or <textarea> tag */\n\n-            indent = 0;\n             /* @camoy Fix #158 - remove inserted newlines in pre - TY_(PFlushLineSmart)( doc, indent ); */\n\n             for ( content = node->content; content; content = content->next )\n```\n\nStill testing this seemingly small fix, but as we have learned over the years, sometimes very small changes have profound consequences, especially in `tidy`... but so far this seems to work...\n\nStill not sure this first `x` line should be wrapped to a newline, but browsers seem to ignore this leading newline, and at least it is now flushed left...\n\nNow this newline is introduced due to the wrap condition, but as #158 discusses maybe the should be **no** wrap applied... do **not** mess with `<pre>` formatting... and this is reinforced by the fact that the `NOWRAP` bit is set...\n\nSo more thought needed here. Meantime hope someone gets a chance to test this patch, and advise...\n\nAnd if anyone has some more ideas on this would love to hear from you... thanks...\n. Have pushed this small patch to an `issue-697` branch for consideration and discussion...\n\nThis patch has several other consequences!\n\nYes, it does **avoid** adding any indent to the first text line of the `<pre>`, which is good...\n\nBut it also **removes** the indent from the previously indented `<pre>` tag, **and** `<textarea>` tags. Now this **may** be acceptable, **but** it does mean adjusting about 10 of our [regression](https://github.com/htacg/tidy-html5-tests) tests expects output. Again this **may** be acceptable...\n\nAnd it does **not** remove a newline added after the `<pre>` if the line length is greater than the current wrap value, as discussed in #158...\n\nSo at best this is a partial **fix**, with other consequences... so as mentioned maybe there is a better way to address this, and its consequences...\n\nLook forward to further feedback... thanks...\n. As stated was **not** happy with the fix in the `issue-697` branch... it had too many other consequences...\n\nSo went back to the drawing board! Started with `next` again...\n\nHave have now created an `issue-697-1` branch, and this is **looking good**! See commit e36df3b for the small diff...\n\nAdded 4 test files to my test repo... each should be run with the `-i` indent option. The lines are already greater than the default wrap width of `68`...\n\n 1. The original test [in_697.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_697.html) now keeps the long line on the same line as the indented `<pre ...>` tag. The `class` attribute is wrapped, but this is **not** a problem.\n\n 2. Test [in_697-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_697-1.html) has the closing `</pre>` on the same line, and this is kept in the output. And it has a really really **long** line of words in a ` ` and this is kept in the output.\n\n 3. Test [in_697-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_697-2.html) has 3 long lines, and no indent is added to any of them.\n\n 4. Test [in_697-3.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_697-3.html) has a paragraph `<p>` before and after the inline `<pre>` and they are all indented correctly.\n\nAnd the **best** news of all, this `697-1` version of tidy breaks **nothing** in the [regression](https://github.com/htacg/tidy-html5-tests) tests... passes `100%`...\n\nWill continue testing, and will get around to **deleting** the first `issue-697` branch, and creating a PR for this new `issue-697-1` branch...\n\nWould ask others to checkout and test this `issue-697-1` branch and report... thanks...\n\nBut presently think, **hope**, this pretty print **bug** is solved...\n. @ler762 thanks for testing this in the `issue-697-1` branch, and reporting...\n\nHave now added PR #708 to merge and hopefully close this sometime soon...\n\nAs to your `preference` to add a `newline` after the indented `<pre>`, please note, previously, back in tidy circa 2000, when this **was** being done, it also **removed** the indent from the `<pre>`, as in -\n\n```html\n  <body>\n    <div>\n      <div>\n        <div>\n<pre class=\"SCREEN\">\nx1234567890123456789012345678901234567890123456789\n</pre>\n        </div>\n      </div>\n    </div>\n  </body>\n```  \n\nJust saying that it may not be possible to get **both**... but maybe someone can find a way to have **both** ;=))\n\nAnyway if you feel **strongly** about this then please consider opening a **new** separate `Feature Request` for this... thanks...\n. @ler762 have now merged #708, so closing this... thanks...\n. @doronbehar thank you for the issue...\n\nWhile I agree it is not **specifically** mentioned in those lines 75-78 that one has to use a `:` in order to assign a value, there are many, **MANY** `samples` given, a little further down, even a sample config file... \n\nDown a few lines at 91 is says \"as they would appear in a configuration file\" and the example `(\\fIquiet: yes\\fR)`... with a colon...\n\nAnd each option given in the `man tidy` pages that has a configuration file equivalent it is list with the colon, like the first `-output <file>, -o <file> (output-file: <file>)`, and so on for **each** option, with an equivalent...\n\nThen down at line 114 it say \"each option is listed on a separate line in the form\" and two examples are given showing `option: value`... with a colon...\n\nAnd down at line 141 a `sample` configuration file is given with each of the five types, each option followed by a colon...\n\nAnd then there is the `config.c` source in function [ParseConfigFileEnc](https://github.com/htacg/tidy-html5/blob/next/src/config.c#L975)... \n\nHowever if you have a suggested addition, improvement, to the wording of that template file, give it and it will certainly be considered... as a comment, a patch, here, or a PR...\n\nWe certainly **agree** the documentation can **always** be enhanced... thanks...\n. @doronbehar well I **asked** for a suggestion... oh, well...\n\nHow about?\n\n```diff\ndiff --git a/man/tidy1.xsl.in b/man/tidy1.xsl.in\nindex 0fbae79..3efc31d 100644\n--- a/man/tidy1.xsl.in\n+++ b/man/tidy1.xsl.in\n@@ -75,8 +75,8 @@ They are listed in the first part of this section.\n \\fIConfiguration\\fR options, on the other hand, can either be passed\n on the command line, starting with two dashes \\fB--\\fR,\n or specified in a configuration file,\n-using the option name without the starting dashes.  \n-They are listed in the second part of this section.\n+using the option name, followed by a colon \\fB:\\fR, plus the value, without \n+the starting dashes. They are listed in the second part of this section.\n .LP\n For \\fIcommand-line\\fR options that expect a numerical argument,\n a default is assumed if no meaningful value can be found.  \n```\n\nOr do you have an alternative, perhaps better suggestion... thanks...\n. @doronbehar thank for the feedback, but now you have introduced some redundancy, and a small spelling mistake `quite` vs. `quiet`. \n\nThe file already contains a full `sample`, with a **comment** example, and each of the **five** types - see [L141-L153](https://github.com/htacg/tidy-html5/blob/next/man/tidy1.xsl.in#L141-L153). \n\nSo maybe we mention that, with -\n\n```diff\ndiff --git a/man/tidy1.xsl.in b/man/tidy1.xsl.in\nindex 0fbae79..a1d9cfd 100644\n--- a/man/tidy1.xsl.in\n+++ b/man/tidy1.xsl.in\n@@ -75,8 +75,9 @@ They are listed in the first part of this section.\n \\fIConfiguration\\fR options, on the other hand, can either be passed\n on the command line, starting with two dashes \\fB--\\fR,\n or specified in a configuration file,\n-using the option name without the starting dashes.  \n-They are listed in the second part of this section.\n+using the option name, followed by a colon \\fB:\\fR, plus the value, without \n+the starting dashes. They are listed in the second part of this section,\n+with a sample config file.\n .LP\n For \\fIcommand-line\\fR options that expect a numerical argument,\n a default is assumed if no meaningful value can be found.  \n```\n\nWhat do you think? Are we good to go? Thanks...\n. @doronbehar not sure what you mean by \"not present in the stable version\"? I checked and the `sample` config file **is** present in the `master` ie. `release/5.6`, and in `release/5.4`, `release/5.2`, and maybe earlier than that...\n\nBut no matter, we **agree**, and have created an `issue-698` branch with this **doc** fix...\n\nWill get around to creating a PR to pull this into `next`...\n\nYes, thanks for your `collaboration`... \n\nHope you find more places where the **docs** can be improved, as they always can be... thanks...\n. Now PR #702 now merged, so closing this... thanks @doronbehar ...\n. @displayadrian glad you asked this question. It gives me a chance to describe some **new** options, introduced from version `5.6.0`... I know nothing about `SublimeLinter`, but in this case I do not think it is needed...\n\nSee [mute-id](http://api.html-tidy.org/tidy/quickref_next.html#mute-id). This takes a comma, `,`, separated list of `IDs` to `mute`...\n\nUse `--mute yes` to show the `IDs` to add to the comma separated list...\n\nExample: Input of just \"Hello world\" and just using `-q --mute yes` by default you will get, excluding the `html` -\n\n```\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration (MISSING_DOCTYPE)\nline 1 column 1 - Warning: plain text isn't allowed in <head> elements (TAG_NOT_ALLOWED_IN)\nline 1 column 1 - Warning: inserting implicit <body> (INSERTING_TAG)\nline 1 column 1 - Warning: inserting missing 'title' element (MISSING_TITLE_ELEMENT)\n```\n\nThen running tidy with `-q --mute \"MISSING_DOCTYPE,TAG_NOT_ALLOWED_IN,INSERTING_TAG,MISSING_TITLE_ELEMENT\"` on the same input you will get **nothing** but the html...\n\nRemove the `-q` will show you several `Config:` and `Info:` type messages, showing what will be `muted`...\n\n```\nConfig: messages of type \"MISSING_DOCTYPE\" will not be output\nConfig: messages of type \"TAG_NOT_ALLOWED_IN\" will not be output\nConfig: messages of type \"INSERTING_TAG\" will not be output\nConfig: messages of type \"MISSING_TITLE_ELEMENT\" will not be output\nline 1 column 1 - Info: <head> previously mentioned\nInfo: Document content looks like HTML5\nTidy found 4 warnings and 0 errors!\n then the html, \n plus the usual \"About HTML Tidy: ...\" info messages...\n```\n\nHope this answers your question... thanks...\n. @displayadrian as indicated, know nothing about `SublimeLinter` so can not answer that... only you can try...\n\nBut this now seems to be a repeat of #691, #310, and maybe several others...\n\nAs stated there, and now again, `tidy` is primarily for `[x]html`, and can **not** be expected to do a good job on `templates` which are not yet valid `html`... sorry...\n\nTidy, more or less by accident, can get past some `template` structures, where they conform close enough to **html**, but it can not ignore what it sees as an invalid URI in a href... you can use `--fix-uri no` to tell it to leave it alone, but it **has** to warn that it is **not** yet valid...\n\nAnd simularly `entities`. Tidy recently had many new valid `entities` added, now over 2000, and again due to the nature and purpose of `tidy` it has to warn about others found not in the list... These can **not** just be ignored...\n\nSo we seem to come back to the **purpose** of `tidy`!\n\nUnless I am really misunderstanding something here, you seem to be asking tidy to be something it is clearly **not**...\n\nHave provided some way tidy can be configured. Within the constraints given advise what more tidy should do... thanks...\n. @ler762 seems I missed this comment...\n\nWell we already have `-q`, `-e`, and `--show-info no`, as already described... what more can I add...\n\n@displayadrian, since this seems a repeat of others, and feel question asked and answered, closing this... thanks...\n. @petdance thank you for the issue.\n\nRather than `confused` I think this is yet another case where `tidy` has yet to fully catch up to **HTML5**!\n\nTry passing the following to the [validator](https://validator.w3.org/), and you may see what I mean -\n\n```html\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n           \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n        <title>Is #700-1</title>\n    </head>\n    <body>\n<script type=\"text/javascript\"><!--\nstr = '</p>';\n--></script>\n    </body>\n</html>\n```\n\nSo yes, it seems a tidy **bug** in a `html5` document, but fully correct in legacy `html4` documents...\n\nAs stated seems yet another case where the tidy behaviour should be modified, depending on the current document mode, established by the `doctype`...\n\nI am sure there are probably more of these html4 vs html5 parsing as tidy tries to catch up and deal with **both** fully correctly in **one** library...\n\nLook forward to further feedback, a patch or a PR... should not be too difficult to fix... thanks...\n. @petdance in essence, **yes**...\n\nAnd internally in the library we have many cases of this behavior changing, depending whether tidy detects a legacy html4 or earlier `doctype`, vs. a html5 or no `doctype`, which defaults to html5 mode...\n\nSee `ResetTags` which resets to the default html5 mode, but if a legacy doctype is found see `AdjustTags`, but that is mainly only for main **tag** table values... \n\nBut there are other places where `IsHTML5Mode` is called, but that was only added relatively recently, and in other places things like `if (TY_(HTMLVersion)(doc) == HT50)` or `Bool htmlIs5 = (doc->lexer->doctype & VERS_HTML5) > 0;`, and probably some other `indicators` as well... \n\nUnfortunatley, this html4 vs. html5 `mode` has **not** been standardized in the code! Maybe it should be `IsHTML5Mode` in all case, but is presently quite a **can of worms**! Sorry about that...\n\nYou may remember back in the history there was a discussion if we should have **two** separate libraries, `legacy` vs. `html5`, like the `legacy` validator, vs. `nu`, but still feel it was the right choice to try to put it all in **one**... \n\nBut still some obvious work to do on this... thanks...\n. @petdance started looking at this, and noted we already have an option, `--escape-script no`, `TidyEscapeScripts`, to avoid this...\n\nThe code is in lexer.c, in the service `GetCDATA`, which is obviously used for other than just gathering a `CDATA` node text for the `<script>` tag -\n\n```C\n    /*\\ if javascript insert backslash before / \n     *  Issue #348 - Add option, escape-scripts, to skip\n    \\*/\n    if ((TY_(IsJavaScript)(container)) && cfgBool(doc, TidyEscapeScripts))\n    {\n        /* Issue #281 - only warn if adding the escape! */\n        TY_(Report)(doc, NULL, NULL, BAD_CDATA_CONTENT);\n```\n\nThus extending that code a little, with -\n\n```diff\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 3d6a489..ca66aee 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -2384,7 +2384,8 @@ static Node *GetCDATA( TidyDocImpl* doc, Node *container )\n                 /*\\ if javascript insert backslash before / \n                  *  Issue #348 - Add option, escape-scripts, to skip\n                 \\*/\n-                if ((TY_(IsJavaScript)(container)) && cfgBool(doc, TidyEscapeScripts))\n+                if ((TY_(IsJavaScript)(container)) && cfgBool(doc, TidyEscapeScripts) &&\n+                    !TY_(IsHTML5Mode)(doc) )    /* Is #700 - This only applies to legacy html4 mode */\n                 {\n                     /* Issue #281 - only warn if adding the escape! */\n                     TY_(Report)(doc, NULL, NULL, BAD_CDATA_CONTENT);\n```\n\nStill testing this, but **looks good**... Will get to pushing it to an `issue-700` branch, and setting up a PR...\n\nMeantime, appreciate it if others could apply the patch, build, test and report... thanks\n. @petdance have pushed this fix to an `issue-700` branch...\n\nHave also now run our [regression](https://github.com/htacg/tidy-html5-tests) tests, and find a **difference** in one(1) test, case 443576...\n\nIt is a test where the script element contains `document.write('<script></script>');` which used to trick tidy into thinking it had found the `</script>` close tag with very bad consequences. It has its own config file with `skip-nested: no`...\n\nBut the input does **not** have a `doctype` so `tidy-5.7.3.I700` stays in html5 mode, thus the html output is no longer escaped, and there is no warning about the `'<' + '/' + letter not allowed here`... so both the html output and error files are changed...\n\nThe W3C validator chooses to default to `HTML 4.01 Transitional` in this case, thus as well as other things, finds a 2nd end tag `</script>` when it thinks none are open... so it is also fooled by this unescaped end tag within the script...\n\nAdding a `<!DOCTYPE html>` doctype pushes it to `nu` that does not have any problem, except with `<script language=\"JavaScript1.1\">`, but reducing that to just `<script>` gives the document a green light...\n\nSo I see no problem adjusting our test 443576, to either - \n\n 1. add a html 4.01 doctype, or \n 2. accepting this patched `tidy` output as the new expected output. \n\nGiven the legacy nature of our tests I think adding a doctype is best...\n\nLook forward to further feedback on this and testing of the `issue-700` branch... thanks...\n. @petdance it certainly is... in a way the **same**, but there the use of `--escape-scripts no` was accepted as a solution, although the difference between legacy html4 and html5 mode was mentioned...\n\nHere this patch completely drops the warning and the escaping if still in html5 mode, where it is not needed... but keeps it if in legacy html4 mode, as indicated by the `doctype`, unless the option given... remembering that in `tidy` **no** `doctype` assumes **html5**...\n\nHave create PR #703, to merge this `issue-700` branch to `next`, and created [PR 27](https://github.com/htacg/tidy-html5-tests/pull/27) in the regression tests that needs to be done at the **same time**... in the regression tests added a html 4.01 `doctype` to the case-443576 `input`, and adjusted the `expects` accordingly..\n\nAs always, look forward to further feedback on this and testing of the `issue-700` branch, including the `regression` tests... thanks...\n. @petdance the `regression` tests are in a separate repo - https://github.com/htacg/tidy-html5-tests\n\nIn re-reading the README.md there I am **not** sure we have kept the `master` branch, ie. the last **release**, completely in sync with the latest `master` release branch in the tidy **source**. I should check this, and maybe add an issue to update it, if not...\n\nBut it should be true if you set both to the **default** `next` branches... \n\nThen as the README.md states, there is a directory `tools-cmd` for Windows, and a `tools-sh` for unix, each with their own README.md, which further describes the testing process... \n\nOf course the `tools` for windows are `*.bat` files, and for unix `*.sh` scripts, but both use **environment** variables to set up what to do, the most important is `TY_TIDY_PATH`. This is the full path to the `tidy` to use, and **must be set by you**...\n\nThis is another reason why by default the console app `tidy` is linked with the `static` library, so you can test with various version of `tidy` without concern about what `shared` library is installed.\n\nAnd in this `issue-700` case, first a tidy-700 needs to be built using that branch in the source. And that version of tidy run on the `issue-700` branch of the regression tests to get a successful result...\n\nThe tests are in sort of **two phases**. The first is to run tidy on a test case input, with a config in some cases, and write an ouput html and error file, and the tidy exit is checked, but this is only the first part of the test. Then the `current` output is compared to an `expects` output, and there must be no differences in either phase for a SUCCESSFUL test run...\n\nThere are also several sets of tests, but only the `testbase` cases have been fully checked. \n\nThere are also `xml`, `access`, and `special` cases but these probably need some work. See even [issue 20 ](https://github.com/htacg/tidy-html5-tests/issues/20), for `xml`, which has been open for many months...\n\nBut we do encourage devs to run the `testbase` cases for each source fix, as they are a good test for backward compatibility, ie. `regression` testing... Advise if you need further help... thanks...\n. @petdance have now merged PR #703, and in the `regression` test, merged [PR 27](https://github.com/htacg/tidy-html5-tests/pull/27) to match... \n\nHave re-run the `regression` tests `next` branch, version **5.7.8**, using the now `next` branch here **5.7.8** and **all** passes...\n\nAcordingly closing this, but if I **missed** something, please feel free to re-open, or open a **new** issue... thanks...\n. @TysonAndre thank you for your issue, but I am sorry, I am a little confused as to what the actual `tidy` issue is here, as opposed to a possible PHP binding issue...\n\nAs you point out passing the simple string `hello & bye` to `tidy`, it yields exactly that in default html5 mode, and if you add `-asxhtml` then it will output `hello &amp; bye`...\n\nAnd if I pass the following to current tidy, with or without `-asxhtml` -\n\n```html\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta charset=\"utf-8\" />\n<title>Is #704-1</title>\n</head>\n<body>\nhello & bye\n</body>\n</html>\n```\n\nI get back `hello &amp; bye`, with the `unescaped & ...` warning...\n\nAlthough I have not yet checked any references about `&` escaping in `XHTML`, but passing the above file to the W3C validator will **not** flag any warning or errors. This tends to indicate that `tidy` is being over **agressive** in always escaping the ampersand if doing `xhtml` output... \n\nThis suggests the commit 3a524f17, made for #207, should have also extended to `XH50` but that seems a **new** issue...\n\nBut that seems the opposite of what you are seeing in the PHP binding `7.1.14 (Tidy 5.6)`. It is outputting just `hello & bye`, which from the above seems **correct**, but you seem to want it to be like `7.1.9 (Tidy 5.4)`...\n\nNow I can see some reasons for this, maybe? You are parsing a `fragment` so without a `doctype` and a `<html xmlns=...>` declaration, libtidy will assume default `HTML5`, not `XHTML5`... \n\nWhat do you get if you pass my above sample to the PHP bindings?\n\nI am guessing you should get `hello &amp; bye`. That is without extending the fix for #207, tidy will choose to add the escaping you want... but as indicated, I now do **not** see that as correct... it is not an `ambiguous ampersand` so can stay unescaped...\n\nAnd I just **remembered** I have built a unix php 7.3.0-dev on 20180212, installed in `/media/Disk2/projects/install/php/bin`, my hphpi, which uses my 5.7.3.I673 libtidy, 2018/01/01, when dealing with issue #673, and it still runs... \n\nSo I put your above sample `<?php ...` code into an `is704.php` file, and ran `./php is704.php`, and I get `XHTML5` output, which includes `hello &amp; bye`, so it seems I can not even duplicate the problem... I get what I expect, although as stated now **not** sure that is correct...\n\nAnd that further reminded me that I also built it in Windows, using MSVC, installed in `C:\\php`, hphpi.bat, and again setting up an `is704.php` file, and get -\n\n```\nC:\\php>type is704.php\n<?php\n// Related to https://github.com/htacg/tidy-html5/issues/526 ?\nconst CONFIG = [\n  'output-xhtml' => true,\n  'show-errors' => false,\n];\n\nfunction print_tidy(string $html, array $config) {\n        $tidy = new tidy();\n        $tidy->parseString($html, $config, 'utf8');\n        $tidy->cleanRepair();\n        // errors are in $tidy->errorBuffer)\n        $errors = [];\n        if (!empty($tidy->errorBuffer)) {\n            $errors = array_merge($errors, explode(\"\\n\",$tidy->errorBuffer));\n        }\n        $clean = (string)$tidy;\n        printf(\"In %s: %s (errors %s)\\nconfig: %s\\n\", PHP_VERSION, $clean, json_encode($errors), json_encode($config));\n}\nprint_tidy('hello & bye', CONFIG);\n?>\n\nC:\\php>php is704.php\nIn 7.1.14: <!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<title></title>\n</head>\n<body>\nhello &amp; bye\n</body>\n (errors [])\nconfig: {\"output-xhtml\":true,\"show-errors\":false}\n```\n\nSame result as in unix!\n\nBut maybe I do not quite understand the issue... please provide more feedback... thanks...\n. @TysonAndre thank you for the further feedback...\n\nLet me deal with the validator first. As I am sure you are aware there are **two** validators, run by **different** technologies. There is the `legacy` html4 validator, https://validator.w3.org/, and the later `nu`, https://validator.w3.org/nu/, for `html5` documents.\n\nSo if you pass just your fragment, `hello & bye`, to the legacy validator, and select XHTML 1.0, it is parsed per HTML4 rules, and like tidy, in html4 mode, will warning about the ampersand, `&`, and escape it... agreed, and understood...\n\nAnd if you pass just the fragment to `nu`, you will get errors, since `nu` has no option to treat the input as an xhtml fragment... but...\n\nIf you check the default, `Validate Full Document`, in the `legacy` validator, and you pass the **full** sample I gave above, because it has a HTML5 doctype, `<!DOCTYPE html>`, it will be passed to `nu` to parse, as HTML5/XHTML5, with no errors or warnings...\n\nAs stated, this **implies** that ampersand is valid in HTML5, **and** XHTML5... \n\nNow I can **not** locate specific W3C that documents what we could call an `unambiguous ampersands`, but there is an [ambiguous ampersand](https://www.w3.org/TR/html/syntax.html#ambiguous-ampersand), and since in this case it is **not** followed by an ASCII letter or digit we can only imply it is **not** `ambiguous`...\n\nAnd as you pointed out in the `EDIT` even the validator error uses the phrase **may be valid in some contexts**!\n\nNow I have pushed 3 tests to my repo [in_704.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_704.html) - your initial fragment, [in_704-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_704-1.html) - the above full xhtml5 doc, and [in_704-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_704-2.html) - full html5 document.\n\nThese files can be validated using a URL like - https://rawgit.com/geoffmcl/tidy-test/master/test/input5/in_704-1.html, or in_704-2.html, both of which **PASS**.\n\nAnd this leads me to the suggestion that the fix for #207 is incomplete, in that at present tidy will warn and escape `in_704-1.html`, but like I say that can be a separate issue...\n\nSo your further feedback leaves 2 things -\n\n 1. Why does your build of using the `master` branch not escape the ampersand?\n 2. When/If tidy is **fixed** to not escape `&` in xhtml5, a **new** option to add the escape.\n\nThe first is simple. As discussed in #673, and have now added PR #705, the `master`, ie. `release/5.6` branch, the AdjustConfig logic got **changed**, and this causes you to see `hello & bye`, not sure why...\n\nAnd if I checkout the `next` 5.7.3 version of tidy and install it I will get the **same** as you!\n\nIt is **only** if I checkout, build and install the 'issue-673' branch will I get `hello &amp; bye`... simple...\n\nNow concerning the building of tidy, and php, first you show the tidy build as `cmake ../../; make clean install`???\n\nWell first the `cmake ../..`, trailing `/` not required, since you do not offer an **install** directory, cmake will choose `/usr/local`, I think, and if you offer no **build type** again think cmake defaults to `debug`... \n\nI use `cmake ../.. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr` to ensure both of these are set to what I want.\n\nThen I am not sure what `make clean install` does? What is the `clean` for? **And** unless you do all the compiling in `root` mode, I have to use `sudo make install`...\n\nThat gets me `$ whereis libtidy` output of `libtidy: /usr/lib/libtidy.so`. \n\nAnd it is worth doing something like `$ find /usr -name \"libtidy*\"` to see what has been installed, and maybe do some **clean up**... You may have several version of tidy installed, like me, but...\n\nYou should only have a current active link `libtidy.so -> libtidy.so.5 -> libtidy.so.5.6.0` in your case. In my case the last is `libtidy.so.5.7.3`, built using the 'issue-673` branch...\n\nNow concerning the building of php I used `$ ./configure --prefix=/media/Disk2/projects/install/php --with-tidy=/usr`, then `$ make install`. Note no `sudo` required here since I am installing it locally only. This installed a `php` executable in the above `<prefix>/bin`.\n\nAnd in that bin dir, if I run `$ readelf -d php`, to dump the dynamic section, I get an entry `Shared library: [libtidy.so.5]`. \n\nAnd as stated this php gives me `hello &amp; bye` output with the `'output-xhtml' -> true` config. **BUT** that is because I used the `issue-673` branch... Of course if I remove that config entry I **will** get `hello & bye`...\n\nSo this clearly explains why we are seeing something different. That is commit 67eaeb6 is **not** in release `5.6`, **only** in the `issue-673` branch...\n\nAnd as indicated, only `if-and-when` tidy is patched to give the same output for XHTML5 as HTML5 would we potentially need 2., a `Feature Request` for a **new** option to **always** escape every `&`, if it is **not** a valid `entity`. \n\nWould need to think about this **option** a little, and consequences, but it should be possible... if there is a **need**, a strong **use** case...\n\nYou suggest **because php's libxml doesn't accept that**, but is that not a case to **fix** libxml, not **add** an option to tidy...\n\nDoes this add anything? thanks...\n. @TysonAndre have now merged PR #705 and hope that closes this... and #673 \n\nIf I missed something please feel free to re-open, or a **new** issue... thanks. This seems related to #780 - looks like a prob. with `wrap => 0`, which seemed broken in `5.6`, fixed in `5.7.9`, and so is in current `next`...\n\nIf someone had the time to cherry pick this fix back into the `5.6`, and issue a **5.6.1** release, that would be great...\n\nBut given that we have some difficulty in making a **new** release `5.8`, or `6.0`, given #743, that does not seem likely to happen... I don't know how to fix that... see stalled #741...\n. @petdance thanks for a very interesting, **debug** type option, like say `--show-context yes`... like the `nu` validator seems to be able to do, i.e. shows some source context for some warnings...\n\nI would not be too concerned about the line length - it is an opt-in **debug** option after all - but how to get the context for output, assuming of course we want the actual file contents, rather than the already **massaged** stored node input... \n\nTidy uses memory mapped I/O, so the whole file contents is there, but how to sort backup and pull the source... at least when the input is a file... \n\nHmmm, maybe possible with some additional I/O services... At the time that first warning is output the I/O input is positioned after the last `>` in `...value=\"1\">` but how to get and keep pointers to the beginning `<input type= ... value=\"1\">`... and output it... seems quite difficult...\n\nThen there is the handling of html fragments, and piped, or stdin input...\n\nOn the other hand it **may** be easier in the Perl wrapper, since IIRC, the source string is already in a perl variable, and on reading back the tidy warnings, use the line/column to extract appropriately from the available source... \n\nI just experimented using my working [HTML::Tidy](https://github.com/geoffmcl/html-tidy), but even there, there are problems. I just fed a doc fragment -\n\n```perl\nmy $doc = <<\"EOF;\";\n <table><tr><input type=\"hidden\" name=\"showbooks\" value=\"1\"></tr></table>\n <b><p>Hello Tidy!</p></b>\nEOF;\n```\n\nAnd showing the messages got -\n```\nHave 9 messages...\n (1:2) Warning: missing <!DOCTYPE> declaration\n (1:2) Warning: inserting implicit <body>\n (1:13) Warning: <input> isn't allowed in <tr> elements\n (1:61) Warning: missing <td>\n (2:2) Warning: missing </b> before <p>\n (2:8) Warning: inserting implicit <b>\n (2:23) Warning: discarding unexpected </b>\n (1:2) Warning: inserting missing 'title' element\n (2:2) Warning: trimming empty <b>\n```\n\nWe can see the first two are because there is **no** source, so no context is possible... What to do, show in that case?\n\nAnd while you have the beginning of the `context` for the 3rd, `(1:13)`, but then you do not have where it ends, but could probably guess at the next `>`, or something...\n\nAnd the last, and some of the others, also do **not** really have a source. It is because tidy propagated the `<b>` and found no text so later discarded it...\n\n**AND** FWIIW there is a special `compile` time **DEBUG** option, `-DENABLE_DEBUG_LOG:BOOL=YES`, which already sort of does this... \n\nLike again for that first warning I see the following in my console, and is written to a log file, but this is the **massaged** reconstructed input only -\n\n```\nR=12 C=1: Returning endtag node <tr> stream\nR=13 C=1: Returning starttag node <input type=\"hidden\" name=\"showbooks\" value=\"1\"> stream\nline 13 column 1 - Warning: <input> isn't allowed in <table> elements\n```\n\nFor testing this I constructed a simple html sample -  [in_706.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_706.html) - test file, and my full debug log output is here [temptidy.txt](http://geoffair.org/tmp/temptidy.txt), but as stated this is the **massaged** input, **not** the actual file context... and would appreciate further minimal samples...\n\nSo after studying and experimenting a `little`, while this seemed like a **good idea**!, it seems it may be quite **difficult**, either in `libtidy`, or in the `perl wrapper`, to implement -\n\n 1. what particular warnings would have a `context`. Some would really have **none**...\n 2. in either case getting the beginning and end of the relevant `context`, if there is one...\n 3. and there is already a `compile` time **debug** `libtidy` option that sort of does this...\n\nI hope you can see I am always interested in **debug** options, to help the user **more**, and would help where I can... \n\nSo certainly look forward to further feedback on this one, at least from the `libtidy` perspective... thanks...\n. @petdance to briefly answer your last 3 comments - ok, ok, and ok ;=))\n\nA more complete answer might be, as generally indicated, while I might want to do it at the library level, so far my initial research indicates this would **not** be easy... if possible at all...\n\n`libtidy` already has a quite complicated `warning/error/...` system, to support multiple languages for one... \n\nThis has been cleaned up a lot recently so **many** reports go through a single `void TY_(Report)( doc, element, node, code, ...);` function, so far called some **240** plus times... but there are about **10** other `specialised` functions, like `TY_(ReportAttrError)`, etc, etc...\n\nAs to just displaying line 1 for `missing <!DOCTYPE> declaration`, well maybe, but that does not seem **helpful**... and then **repeating** the same thing for the next `inserting implicit <body>`, etc... all possible I suppose, but... \n\nAnd certainly agree displaying a 100k-long line for `(1:40293) Warning: <input> isn't allowed in <tr> elements` does not make sense at all... really stupid in fact... again just **not** helpful... \n\nSo if implementing it at the library level, I would want some of these conditions, specifications, ideas, considered, discussed, and resolved... \n\nSo I do **not** see a `libtidy` way forward on adding a **helpful** `context` output **yet**... but maybe you or others have some more feedback, comments, ideas, patches, PR... thanks...\n\nWhat you choose in `Perl` is your **baby**, so of course it is as you see fit...\n. @bandito40 thank you for your issue...\n\nHowever, I just compiled and ran your sample and have **no** problems... \n\nAnd of course I should **not** have problems because it is basically **exactly** per our [sample](http://api.html-tidy.org/tidy/tidylib_api_next/libtidy_04.html) code...\n\nFull output:\n\n```html\nF:\\Projects\\tidy-test\\build.x64>release\\issue-707.exe\nTidying:        <title>Foo</title><p>Foo!\n1\n2\n3\n4\n6\n\nDiagnostics:\n\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nline 1 column 19 - Warning: inserting implicit <body>\nInfo: Document content looks like XHTML5\nTidy found 2 warnings and 0 errors!\n\n\nAnd here is the result:\n\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.7.3\" />\n<title>Foo</title>\n</head>\n<body>\n<p>Foo!</p>\n</body>\n</html>\n```\n\nNow I did this build in Windows, and I linked with the **static** lib tidys.lib, but this should make no difference... unless your strange use of `extern \"C\" { .... }` declaration fooled, messed up, `g++`, or something... \n\nThat declaration around `int tidyHtml()` is just **not** needed. libTidy can be used inside a C++ program without any changes... Both `tidy.h`, and `tidybuffio.h` already have `extern \"C\" { .... }` declarations...\n\nBut I just copied my [issue-707.cxx](http://geoffair.org/tmp/issue-707.cxx) sample - note that file has window line endings - into Ubuntu 16.04 64-bit linux, and ran `$ dos2unix issue-707.cxx; g++ -o issue-707 issue-707.cxx -ltidy`, and thus built `issue-707` app, with no errors, and it runs fine, with **exactly** the same output as the above in Windows... the `1` is output, and no segfault...\n\nAnd just to be **sure** I removed your `extern \"C\" { .... }` around `tidyHtml()`, and it still compiled, and ran fine...\n\nSo at this point I can **not** duplicate your problem... sorry... \n\nBTW what version of `libtidy` are you using? Where did you get and install it from? Do you have more than one install of `libtidy`, and its `headers`? Just trying to search for what can be wrong... that sample code works for me... in 2 OS'es...\n\nMaybe give more feedback, or something... thanks...\n. @bandito40 sorry to hear you still have a **problem**, and from what you showed, it seems this may be due to confusion over **multiple** versions installed...\n\nAnd **regretably** this is also a **big** problem in the Ubuntu distribution. It seems they are way, **WAY** out of date only offering it seems a **2009** version, called `libtidy-0.99-0`, and that would include an **out of date** `buffio.h`... and this should be **removed**!\n\nNow I am **not** a linux expert, and hope others will help in this... In just googling around I found -\n\n```\n$ dpkg --list | grep tidy\n$ sudo apt-get remove package_name\n$ sudo apt-get purge package_name\n$ sudo apt-get autoremove\n$ sudo apt-get clean\n```\n\nOr you can use the Synaptic Package Manager - search libtidy, uncheck, and apply...\n\nThen do the `$ dpkg --list` again to make sure it has been removed... But as stated, hope others will step in and help here if there is a better way...\n\nBut your `locate tidy` listing **also** indicates you have installed `libtidy.so.5.6.0` at some time **not** using the package manager, so the above will **not** remove it. That must be done manually I think...\n\nAnd I think I would also remove **all** tidy headers. The list would be `tidy.h`, `tidyplatform.h`, `tidyenum.h`, `tidybuffio.h`. And that would include any **old** names `platform.h` and `buffio.h`. And that would be from directories like `/usr/include` and `/usr/local/include`... And remove any `/usr/include/tidy` or `/usr/local/include/tidy` should they exist.\n\nYou must get to a position where you sample code will **not** compile... should fail on missing headers, and missing library...\n\nThen get the current source -\n\n```\n$ cd some-project-root-dir\n$ git clone https://github.com/htacg/tidy-html5.git tidy-html5\n$ cd tidy-html5/build/cmake # do not build in the source\n$ cmake ../.. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr # do not forget these two options\n$ make\n$ sudo make install\n```\n\nNote the addition of the cmake options is **important** so you do **not** get the cmake default for these...\n\nAlternatively, you can download a ZIP file of the source, and unzip it into a folder of your choice, then do the above  **out-of-source** build... But a ZIP is limited to one specific version at a time, while with `git` **all** versions are available, and you can even update later to keep with the latest, the **best**...\n\nFor sure with **mixed up** headers, and/or **mixed up** libraries, while the code can appear to compile, it can also crash!\n\nLook forward to further feedback... thanks...\n\nOT: Note you should use 3 back-checks to quote a block of text. One back-check is only for inline quoting. See [mastering-markdown](https://guides.github.com/features/mastering-markdown/) or the specific [github help](https://help.github.com/articles/basic-writing-and-formatting-syntax/)...\n. @bandito40 not sure you followed **all** my suggestions...\n\nRemember I suggested you delete **all** installed `tidy`, **all**... that is libs, links, and headers... when done your source compile should **fail**... That execution error indicates the compiler/linker found some residual lib pieces... and maybe some older tidy headers...\n\nSpecifically neither `$ locate tidy`, nor `$ dpkg --list` must have any entries for `libtidy-0.99`, especially in the /usr/ folders... and especially **not** `libtidy-0.99.so`, `libtidy-0.99.so.0`, nor `libtidy-0.99.so.0.0.0`...\n\nYou **must** get to an absolutely clean **no tidy** state, specifically in the `/usr/` folders...\n\nNow to get back a working tidy, you must compile source `tidy-html5`, and indicate that the install prefix is to be `/usr`, **not** some other place...\n\nI do **not** understand that it is in an `install folder`! What install folder??? It should **only** be **installed** to `/usr`, nowhere else... \n\nAnd because this is a `root` folder you have to be either operating as `root`, or use `sudo make install` otherwise...\n\nYou should end up with just -\n\n```\n/usr/lib/libtidy.so # this should be a link to\n/usr/lib/libtidy.so.5 # this should be a link to\n/usr/lib/libtidy.so.5.7.3 # this is the actual lib file\n```\n\nOf course, **before** the install those 3 entries will also be in the folder where you built tidy, like `<some-path>/tidy-html5/build/cmake/`, if you built it as suggested...\n\nAnd likewise **after** install the 4 tidy headers should be in `/usr/include/`... only 4, no others... exactly `tidy.h`, `tidyenum.h`, `tidyplatform.h`, `tidybuffio.h`... they should come from `<some-path>/tidy-html5/include/`... check their date, size...\n\n**AND** after install your should be able to type `$ tidy -v` **anywhere** in your system, because there should be an installed `/usr/bin/tidy` executable, and it should report the **same** version as the above library... \n\n**AND** type `$ man tidy` **anywhere** , and see the **same** version number in the top line... from the installed  `/usr/share/man/man1/tidy.1`\n\nSo is this clear? Do I need to add anything? Any deviation from the above suggests something wrong, and could potentially lead to problems...\n\nSo I ask again \"what `install folder`\" are you referring to?\n\nNow with `tidy` installed, as above, back to your sample source... now it should compile and run fine...\n\nLook forward to your report of success! Thanks...\n. @bandito40 well glad you got some form of success from creating a link but I would like to understand more so if you could bear with me a little longer...\n\nWhat does it show when you do `$ readelf -d your-exe`, which I called `issue-707`... I get -\n\n```\n$ readelf -d issue-707\n\nDynamic section at offset 0x1e18 contains 25 entries:\n  Tag        Type                Name/Value\n 0X0000000000000001 (NEEDED)    Shared library: [libtidy.so.5]\n 0X0000000000000001 (NEEDED)    Shared library: [libc.so.6]\n  skip the rest...\n```\n\nI guess you are going to see `[libtidy-0.99.so.0]`, which is why you then need the link `libtidy-0.99.so.0 => libtidy.so`. If I am wrong then forget it... on the wrong track...\n\nIf I am right the question becomes **WHY**??? \n\nIs there some `cache` that needs to be corrected? And that led me to `ldconfig`... \n\nWhat do you get from `$ ldconfig -p | grep tidy`? I get only my current links `libtidy.so` and `libtidy.so.5` in `/usr/lib/`. What do you get?\n\nAnd if you see `libtidy-0.99.so.0` how to **fix**, **remove** that...\n\nYour `locate tidy` looks great, so why are you having this problem?\n\nI really seek to **understand** so I can help better should someone else run into this **problem**, especially while some distros continue to have that ugly **old** `libtidy-0.99.so`... I downright do **not** like your link **bandaid** approach...\n\nWhile that has worked, and **good job** finding it, it is not really a **solution**... \n\nCan someone with more linux experience weight in here? We **need** help! Thanks...\n. @bandito40 AH! HA! rebooting clears some `cache`...\n\nYou know, I should have **thought** of this! As a developer working on a lot of projects, I have certainly run into this **secret** `cache` in linux before...\n\nI have had cases where my just compiled project **fails**, missing something... I **immediately** see the problem and **fix** it, re-compile, but have seen the project continue to **fail**. Sometimes it was only necessary to close the terminal session I was in, and start a new one, but other times I needed to **reboot** the machine... **very strange**...\n\nI am now happy your `main` works using the installed `libtidy`, **without** that very iffy `symbolic link` **bandaid** ;=)) Now if we can just get to the **real** explanation... \n\nMaybe someone with unix/linux experience can **explain** this to us... or at least provide some pointer where to look, read...\n\nBut thanks for your feedback... \n. @petdance this is the result of `tidy` trying to **fix** the **bad** document...\n\nIt **correctly** closes the span before the `<h1>`, and then, since some time before the last 2009 csv source release, propagates it, together with the `id=\"bongo\"`, to inside the `<h1> ... </h1>`... and advises `inserting implicit <span>`... \n\nSee the `tidy` output...\n\n```html\n<body>\n  <span id=\"bongo\"></span>\n  <h2><span id=\"bongo\">heading</span></h2>\n</body>\n```\n\nAnd the W3C validator also reports this error in your sample -\n\n```\nError: Element h2 not allowed as child of element span in this context. (Suppressing further errors from this subtree.)\nFrom line 8, column 11; to line 8, column 14\n          <h2>headin\nContent model for element span:\nPhrasing content.\n```\n\nI guess if anything is to be done to improve this, the warning message in this case could be expanded to `implicit <span> anchor \"bongo\" already defined`, indicated that `tidy` **added** this, or something...\n\nGiven the nearly `10+` year history of this particular `tidy` action, this is verging on **Won't fix**, except for perhaps the slightly `improved` message text... \n\nWhat else can `tidy` do? Ideas, comments, patches, PR very welcome...\n\nLook forward to further feedback on this... thanks...\n. @petdance thanks for the further feedback...\n\n> Or have tidy not report on actions that it has taken itself?\n\nWell I **now** think `tidy` has an obligation to report on **all** changes it makes, as a sort of ever helpful, educational tool, so the user can avoid these in their own html creation....\n\nIn fact I think there are already other issues where `tidy` makes **silent** fixes, that others see **should** be reported, or at least reported much **more** clearly...\n\nSee [Issue 21](https://github.com/htacg/tidy-html5/issues/21#issuecomment-4658281) for the first mention I can find on `silent` fixes. And again [Issue 88](https://github.com/htacg/tidy-html5/issues/21#issuecomment-4658281); and #132, #412, and you can see my opinion on these `silent` fixes has fluctuated... probably several other issues as well...\n\nI **agree** that is the case here. `Tidy` has applied a **fix**, and then has to `warn` about that **fix** duplicating an `id`, but can not see any other choice yet, aside from adding the `implicit` to the message, clearly indicating that it is now in html that `tidy` had to add, as part of the **fix**, and **not** in the original user html...\n\nWill certainly consider a patch or PR making this additional statement, or some other way to make the message emitted **clearer**... but do not see it should be suppressed... thanks...\n\n. @petdance I am afraid I do **not** understand! You **agree** `report all`, then **not** report a warning???\n\nIt seems you want it reported, but **not** as a **warning**. Is that it?\n\nIf you read back into some of the comments on the `silent` changes you will see there was a suggestion at one time that perhaps there should be some other category of messages for these. This was discussed but eventually agreed a `warning` is a `warning`...\n\nThe html is `faulty`, be that what the user wrote, or as generated by tidy as part of a **fix**, and needs to be further **fixed**, which tidy can **not** do...\n\nI have agreed the warning message should be improved, and have experimented. Using my [in_709.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_709.html) sample the present output is -\n\n```\nline 7 column 7 - Warning: missing </span> before <h2>\nline 8 column 14 - Warning: inserting implicit <span>\nline 9 column 7 - Warning: discarding unexpected </span>\nline 8 column 14 - Warning: <span> anchor \"bongo\" already defined\n```\n\nIn an `issue-709` branch have experimented with -\n\n```\nline 7 column 7 - Warning: missing </span> before <h2>\nline 8 column 14 - Warning: inserting implicit <span>\nline 9 column 7 - Warning: discarding unexpected </span>\nline 8 column 14 - Warning: Implicit <span> anchor \"bongo\" duplicated.\n```\n\nThat much more accurately describes the problem. In creating an `implicit` span tidy was forced to `duplicate` the anchor... an implied sorry about that but had no other choice... and maybe you, or others, have further suggestions on improving the message...\n\nAnd if you still think this should **not** be a `warning`, then the same logic could be applied to the second message - warning tidy inserted a `<span>` - **not** in the original user html to try to **fix** the document... and so on to any and probably every `implicit` action of tidy, including for instance `Warning: inserting missing 'title' element`...\n\nI think these have to stay as `warnings`, until a **better** idea is proposed, fully spec'ed, agreed, coded, and tested...\n\nStill to fully test and push my `issue-709` branch, but this is the patch to date -\n\n```diff\ndiff --git a/include/tidyenum.h b/include/tidyenum.h\nindex 949d464..97131dc 100644\n--- a/include/tidyenum.h\n+++ b/include/tidyenum.h\n@@ -171,6 +171,7 @@ extern \"C\" {\n #define FOREACH_REPORT_MSG(FN)        \\\n     FN(ADDED_MISSING_CHARSET)         \\\n     FN(ANCHOR_NOT_UNIQUE)             \\\n+    FN(ANCHOR_DUPLICATED)             \\\n     FN(APOS_UNDEFINED)                \\\n     FN(ATTR_VALUE_NOT_LCASE)          \\\n     FN(ATTRIBUTE_IS_NOT_ALLOWED)      \\\ndiff --git a/src/attrs.c b/src/attrs.c\nindex 2aaf638..9d634ed 100644\n--- a/src/attrs.c\n+++ b/src/attrs.c\n@@ -1659,7 +1659,10 @@ void CheckName( TidyDocImpl* doc, Node *node, AttVal *attval)\n\n         if ((old = GetNodeByAnchor(doc, attval->value)) &&  old != node)\n         {\n-            TY_(ReportAttrError)( doc, node, attval, ANCHOR_NOT_UNIQUE);\n+            if (node->implicit) /* Is #709 - improve warning text */\n+                TY_(ReportAttrError)(doc, node, attval, ANCHOR_DUPLICATED);\n+            else\n+                TY_(ReportAttrError)( doc, node, attval, ANCHOR_NOT_UNIQUE);\n         }\n         else\n             AddAnchor( doc, attval->value, node );\n@@ -1687,7 +1690,10 @@ void CheckId( TidyDocImpl* doc, Node *node, AttVal *attval )\n\n     if ((old = GetNodeByAnchor(doc, attval->value)) &&  old != node)\n     {\n-        TY_(ReportAttrError)( doc, node, attval, ANCHOR_NOT_UNIQUE);\n+        if (node->implicit) /* Is #709 - improve warning text */\n+            TY_(ReportAttrError)(doc, node, attval, ANCHOR_DUPLICATED);\n+        else\n+            TY_(ReportAttrError)( doc, node, attval, ANCHOR_NOT_UNIQUE);\n     }\n     else\n         AddAnchor( doc, attval->value, node );\ndiff --git a/src/language_en.h b/src/language_en.h\nindex c84a7d8..e09b62b 100644\n--- a/src/language_en.h\n+++ b/src/language_en.h\n@@ -1924,6 +1924,7 @@ static languageDefinition language_en = { whichPluralForm_en, {\n      ********************************************/    \n     { ADDED_MISSING_CHARSET,        0,   \"Added appropriate missing <meta charset=...> to %s\"                      },\n     { ANCHOR_NOT_UNIQUE,            0,   \"%s anchor \\\"%s\\\" already defined\"                                        },\n+    { ANCHOR_DUPLICATED,            0,   \"Implicit %s anchor \\\"%s\\\" duplicated.\"                                   },\n     { APOS_UNDEFINED,               0,   \"named entity &apos; only defined in XML/XHTML\"                           },\n     { ATTR_VALUE_NOT_LCASE,         0,   \"%s attribute value \\\"%s\\\" must be lower case for XHTML\"                  },\n     { ATTRIBUTE_IS_NOT_ALLOWED,     0,   \"%s attribute \\\"is\\\" not allowed for autonomous custom tags.\"             },\ndiff --git a/src/message.c b/src/message.c\nindex eb097de..37aacb2 100644\n--- a/src/message.c\n+++ b/src/message.c\n@@ -261,6 +261,7 @@ static struct _dispatchTable {\n } dispatchTable[] = {\n     { ADDED_MISSING_CHARSET,        TidyInfo,        formatStandard          },\n     { ANCHOR_NOT_UNIQUE,            TidyWarning,     formatAttributeReport   },\n+    { ANCHOR_DUPLICATED,            TidyWarning,     formatAttributeReport   },\n     { APOS_UNDEFINED,               TidyWarning,     formatStandard          },\n     { ATTR_VALUE_NOT_LCASE,         TidyWarning,     formatAttributeReport   },\n     { ATTRIBUTE_VALUE_REPLACED,     TidyInfo,        formatAttributeReport   },\n@@ -583,6 +584,7 @@ TidyMessageImpl *formatAttributeReport(TidyDocImpl* doc, Node *element, Node *no\n             return TY_(tidyMessageCreateWithNode)(doc, node, code, level, tagdesc, name, HTMLVersion(doc));\n\n         case ANCHOR_NOT_UNIQUE:\n+        case ANCHOR_DUPLICATED:\n         case ATTR_VALUE_NOT_LCASE:\n         case PROPRIETARY_ATTR_VALUE:\n         case XML_ID_SYNTAX:\n```\n\nAnyway, what do you, and others, think of the amended message? Is it worth the effort? Any other suggestions? Thanks...\n. @petdance thanks for the idea... always for more clarity...\n\nHow about -\n\n```\nline 8 column 14 - Warning: Implicit <span> anchor \"bongo\" duplicated by Tidy.\n```\n\nThe `Implicit <span>` already indicates `added by tidy`, and now it is clear the `anchor` was `duplicated by Tidy` at the same time, since it has no way to choose anything else... needs human intervention...\n\nOT: Interestingly, like you, when I used to work on my site, do not do that so much these days, my MO was to usually manually fix warnings/errors tidy showed, and then accept its clean `Pretty Printer` indented output...\n\nHave now pushed this to the `issue-709` branch, and will get around to setting up a PR... are we good to go? thanks...\n. @petdance oops, you lost me... how can the addition of bracket improve it?\n\nNot sure how that makes it any more a \"normal error message\", whatever that is, and it already indicates it was by `tidy`... but maybe just a question of different `styles`... hope you can accept mine in this case...\n\nAnd could you please use triple back-ticks, \\`\\`\\`, to quote a block that has html. Seems the single block-quote, `>`, will lose the display of the `<span>`, quite **important** to this message...\n\nHave now created PR #714 to eventually merge this to `next`... thanks for the collaboration on this...\n. @petdance have merged PR #714, so guess this can be closed...\n\nIf I missed something, please feel free to re-open, or file a **new** issue... thanks. @JESii I do **not** think there is a `tidy` option to turn this off...\n\nWe do have an option `--fix-uri no`, but this **only** effects the escaping of `illegal` characters, and does **not** effect an ampersand...\n\nBut why would you want it turned off?\n\nIf you view the link as tidy has escaped it, in a browser, it should appear without the `&amp;`, just with the `&`, so the link will function correctly...\n\nMaybe I misunderstand the case... need further feedback... thanks...\n. @petdance thank you for the issue...\n\nAgree absolutely `tidy` running in html5 should for sure **bleat** about these **obsolete** attributes. And of course **not** if a legacy html4 doctype found... controlled by `TY_(IsHTML5Mode)(doc)`...\n\nAnd as far as I understand it there are quite a number of table element attributes declared **obsolete** in html5, not just the `valign` shown, but step by step...\n\nWould really appreciate some **W3C** references on this issue, rather than `w3schools`, but thanks for these...\n\nTo take it a **step** further, would be really nice if given the `-clean` option, `tidy` convert them to CSS, but that could be a **separate** issue...\n\nLook forward to comments, patches, PR's to **correct** this situation... thanks...\n. @ler762 thank you for the beautiful HTML5 **obsolete** attributes references... and this got me to dig **deeper** into this... Wow, this literally opens up a **can-of-worms** ;=)) In more ways than one...\n\nI started to build a HTML5 document, adding some of these `obsolete` attributes, just to begin to see what tidy does, and more importantly does **not** do, and struck a snag on even the first `rev and charset attributes on link and a`.\n\nFirst it seems the `rev` is also **not** flagged by the `nu` validator... ok, maybe needs time to catch up...\n\nAnd then started to find **inconsistencies** in the W3C documentation in that `rev` is still listed for a [link](https://www.w3.org/TR/html5/single-page.html#the-link-element) and an [a](https://www.w3.org/TR/html5/single-page.html#the-a-element) element, at least in the big single page `HTML 5.2` 14 December 2017 document... ok, they too can take time to catch up... \n\nThankfully it seems `charset` has been removed, and is flagged by `nu`, but not by tidy, **unless** - see below...\n\nSo with ongoing **inconsistencies** like this maybe we should concentrate on those where it **is** clear... but this should probably be a **separate** issue...\n\nBut back to this **specific** `valign` case...\n\nI started to look at how tidy **verifies** an attribute. Part of the giant `element` table in tidy, `Dict tag_defs[]`, is a list of `attributes` allowed on that element, and each those attributes each have a list of `allowed` versions, but by default, that check is **not** done, and maybe the attribute table, for each element is **not** entirely up-to-date... but...\n\nBut, for example, processing the above sample input, my [in_711.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_711.html), with the option `--strict-tags-attributes yes` will yield a **very** different output -\n\n```\nF:\\Projects\\tidy-test\\test\\input5>tidy5 -v\nHTML Tidy for Windows version 5.7.3\nF:\\Projects\\tidy-test\\test>tidy5 --strict-tags-attributes yes input5\\in_711.html\nline 8 column 13 - Error: <tr> attribute \"valign\" not allowed for HTML5\nline 9 column 17 - Error: <th> attribute \"valign\" not allowed for HTML5\nline 12 column 17 - Error: <td> attribute \"valign\" not allowed for HTML5\nInfo: Document content looks like HTML5\nTidy found 0 warnings and 3 errors!\n\nThis document has errors that must be fixed before\nusing HTML Tidy to generate a tidied up version.\n```\n\nThat's right, tidy **will** flag these as **errors** if `--strict-tags-attributes yes` option is used. Sorry I did not think of this **option** earlier, but it is there, and has been there since circa Jan 2016 - since about version 5.1.33, so is in the 5.2, 5.4, and 5.6 releases... see #346 PR #350\n\nIn essence this particular issue seems closed - just use the `--strict-tags-attributes yes` option.\n\nTidy more than `complains about valign`, it flags it as an **ERROR**! Now there could be discussion about whether it should be an `error` or a `warning`, and whether this option should be changed to default to **yes**. but maybe that should be **separate** issue, discussion...\n\nNote if you add a legacy doctype, like my [in_711-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_711-1.html), and still use the strict option, tidy will pass it - no warnings or errors - as will the **legacy** W3C validator...\n\nAnd this is not to say that there maybe other **obsolete** attributes that tidy may miss, but that must be a **separate** issue...\n\nSo @petdance can this be closed? Thanks...\n. @doronbehar thank you for this PR... we like those...\n\nBut maybe this **fix** does **not** go far enough? Or maybe **too** far, depending on your perspective...\n\nAs far as I can quickly read in W3C documentation - note we do not normally accept `w3schools`, which as far as I know has no affiliation with the W3C - this `auto` value for the `dir` attribute was only introduced in HTML5... \n\nSee [attribute-auto](https://www.w3.org/International/tests/repo/results/the-dir-attribute-auto), [dir-attribute](https://dev.w3.org/html5/spec-preview/global-attributes.html#the-dir-attribute), [dirauto](https://www.w3.org/International/questions/qa-html-dir#dirauto), and probably others references...\n\nSince `tidy` works in legacy html4 **or** html5 mode depending on the `doctype` found, and none defaults to html5, maybe the `CheckTextDir` service should reflect this?\n\nMaybe we could have something like (code **not** tested) -\n\n```\n/* checks dir attribute */\nvoid CheckTextDir( TidyDocImpl* doc, Node *node, AttVal *attval)\n{\n    ctmbstr const values4[] = {\"rtl\", \"ltr\", NULL};\n    /* Is #712 - add 'auto' for HTML5 */\n    ctmbstr const values5[] = {\"rtl\", \"ltr\", \"auto\", NULL};\n    CheckAttrValidity( doc, node, attval, \n       (TY_(IsHTML5Mode)(doc) ? values5 : values4) );\n}\n```\n\nOr maybe there is a better way to do this **switching**...\n\nWhat do you, or others, think? Thanks...\n. @doronbehar I have cycled around to shortly merging this PR, but still think the above patch is **required**...\n\nIt is only in a **HTML5** document that `auto` is valid...\n\nYes I could add this **after** the merge, but it seems better if this was part of your **fix**... thanks...\n. @doronbehar  now merged, and then patched as indicated... thanks...\n. @doronbehar no problem...\n\nHave added 2 tests to **my** `tests` repo, **with** `dir=\"auto\"` -\n\n 1. [in_712.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_712.html) - a **HTML5** doc, that now passes `tidy` 5.7.11 plus, with no warnings. And also passes the W3C `nu` validator.\n 2. [in_712-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_712-1.html) - a **HTML4** doc, which `tidy` 5.7.11, and most other versions, earlier or later, will still flag as a warning, as does the W3C `legacy` validator.\n\nAs a note to myself, I guess I should also add these to the **official** [regression](https://github.com/htacg/tidy-html5-tests) tests, as a continual reminder of the addition of `dir=\"auto\"` in HTML5, unless someone beats me to it...\n\nAnother little step forward... thanks...\n. @petdance this request has come up **several** times. The earliest I found was #53, in which you participated... is a repeat of #178, and mentioned in #241, and maybe others...\n\n#### So the first **answer** is try the `--gnu-emacs yes` option.\n\n@ler762 as to adding it to the `Tidy found ...` message... well maybe, but...\n\nFirst there are three of these. The one you showed, then with `Not all warnings/errors were shown.` added, and of course `No warnings or errors were found.` if none. So yes it could be added to all 3, but then there is the problem of what about if the input is from `stdin`?\n\nThe real problem with this is that at the time that message is constructed in the library, in the active language, the library does not know, or keep a copy of the input file, if there was one. \n\nThe `--gnu-emacs yes` overcomes this by setting the file name in the library, on a special service just for this, so that mechanism could probably be re-used, and adding say \"stdin\" if no file...\n\nBut then you want this message excepted from the `-quiet` option. Wow, I can already hear other users **yelling** no way ;=)) `quiet` means only **warnings** or **errors**, not `summaries`...\n\nAn alternative would be to output it at the beginning, like you will see from `$ tidy non-existing.html` will output `Document: \"non-existing.html\" is not a file!`, so could output say `Document: Processing \"existing.html\".`, or something like that...\n\nBut feel this would have to be under an **option**, like `--show-filename yes`... that is you have to opt-in, configure for this **additional** message...\n\nAnd if something is decided, need to have some thought about the impact on our `regression` tests... path names always have the unix/windows separator difference, and part of the test is a `diff`...\n\nGiven that there is the `--gnu-emacs yes` option, and various ways to script this, I do not see this **new** option having much traction...\n\nLook forward to further feedback, on this **old** topic... thanks...\n. @ler762 thank you for the feedback, and getting involved... we welcome that...\n\nWell I too am certainly all for having a `gnu-emacs` alias, or synonym, like `show-filename`. There would be many windows users who would not get `gnu`, nor `emacs` without looking them up! \n\n`gnu-emacs` What is that? A `wildebeast` eating an `electronic mac`? ;=))\n\nAnd this is not **only** for the `man tidy` page - which again does **not** exist in Windows - but for the online [quickref.html](http://api.html-tidy.org/tidy/quickref_next.html)...\n\nAnd I would not skimp on the definition, description, like maybe -\n\n```\n--show-filename, --gnu-emacs Boolean (no if unset)\n       This option specifies if Tidy should change the format for reporting errors and\n       warnings to a format that is more easily parsed by GNU Emacs, and possibly \n       other editors.\n       It changes them from the default form -\n         line <number> column <number> - (Error|Warning): <message>\n       to a form which includes the input filename -\n         <filename>:<line>:<column>: (Error|Warning): <message>\n```\n\nOr something like that...\n\nWhy do you not present a PR?\n\n 1. Fork tidy to your own github spaces\n 2. Generate a SSH Key, and add it to your https://github.com/ler762 settings SSH and GPG keys\n 3. Clone your own fork - git clone git@github.com:ler762/tidy-fork.git tidy-fork\n 4. Create a branch - cd tidy-fork; git checkout -b filename\n 5. Edit, and commit your changes to this branch of your fork\n 6. Publish the branch - git push -u origin filename\n 7. Create the PR here...\n\nYou could even go the whole hog, and fork https://github.com/htacg/html-tidy.org, clone this and generate the API docs locally to see how your changes look there as well...\n\nAnd likewise would welcome the addition of say an `EXAMPLES` section, like the `ENVIRONMENT` section in `man tidy`, which also makes it into the API docs somehow... \n\nI presently do not fully understand how these are generate using `xsltproc` on `tidy1.xsl`, and other cmake tidy generated output, etc, but would help where I can, as I am sure others will step in where needed...\n\nSo yes, maybe this is more a documentation issue, and look forward to your further help... thanks...\n. @balthisar what is so **wrong** with having `synonyms`, especially in this case. I can see `gnu-emacs` being liked and used by unix people, it has inherent meaning, and should **not** be `depreciated`, and `show-filename` by the rest of us...\n\nI see it now and again in unix `--help` commands, although as usual can **not** immediately find one... will try to remember to report the next... git has them... I use `synonyms` all the time in my file systems, as a navigation, and memory aid... \n\nI use a system of `h*.bat` files to get me to that source, and so I can type `htidy-html5` to get there, and in that case, because it is something I do every day I have an **alias** `ht`... and so on in hundreds of cases... similarly in linux that becomes `$ . ht` and I am at tidy source... \n\nAnd as you know I am **not** big on your `deprecation mechanism`, still to be fully described, disucussed and agreed...\n\nWhile `synonyms` do \"nothing for functionality\" they can do a **lot** for usabilty! While I would agree **too many** would also be a **bad thing**, this case seems to **scream** out for it...\n\n@ler762 thanks for the further feedback...\n\nFirst improving the description for the `gnu-emacs`, in general I am fine with the wording proposed, but wonder about `lineNumber` and `columnNumber`, repeated... \n\nWho would not undestand, or missunderstand `line <number>` was the `number of the line`...? And then in the second form `:<line>:<column>` would be numbers... what other interpretation could be placed on these?\n\nAnd then there is the use of **non-words**, or `made up` words, `word combinations`, which makes translation to other languages **difficult** if not **impossible**...\n\nIf you really feel strongly about this then at least go back to your original `<line number>`, but recognize that would say be translated to a French `<num\u00e9ro de ligne>`... and then `ligne <num\u00e9ro de ligne>` etc seems very redundant... and I think the same in other languages...\n\nConcerning a PR, as mentioned the first step is to `fork` the repo - click on the upper right **Fork** icon, and github will ask you to where - unless you have already done this under a difference pseudonym...\n\nAnd `localize/README.md` is if you are creating a **new** language translation, or improving an existing one. As it states in the introduction the primary file is `language_en.h`. \n\nWhile others have presented PR's with other languages **also** changed, and re-generated `po` files, etc, this really complicates the **review** process, and should be **avoided** - left as a later step, after the english is in place.\n\nFor creating a new option like `show-filename` then `README/OPTIONS.md` is the place to look. And do a source search for `gnu-emacs`, and especially its enumerated unique id `TidyEmacs`, or the same for any other option for that matter, to see all the places used...\n\nLook forward to your help... thanks...\n. @balthisar, @ler762 hmmm, adding a `-show-filename` - note the **single** hythen - to the console app is maybe a **good idea**!\n\nAnd FWIIW, is **already** there if you use the special **DEBUG** build mode, `-DENABLE_DEBUG_LOG:BOOL=YES`... long, **LONG** ago I wanted to **see** the filename of the file being processed... see  [tidy.c:2408:0](https://github.com/htacg/tidy-html5/blob/next/console/tidy.c#L2408)\n\nIf this option is detected, and is **not** the special **debug** build, send the filename to `errout`... simple...\n\nThe only drawback here is that it can **not** be enabled in a config file... becomes one of the options that does **not** have a `config` equivalent, but we have several others... and library users can only continue to use `gnu-emacs`...\n\nAs to using `TidyConfigCallback` in the console app, what folly is this? ;=)) \n\nWhat? Add such a callback to console `tidy.c`, which it does not presently have, just to catch `show_filename: yes` in a config file, or on the command line, and convert it to `gnu-emacs: yes` **somehow**? And not yet clear what to do if the input is `stdin` since we will not have reached the input filename in the command yet... but all probably workable...\n\nTalk about `polluting` the console app with totally unecessary **junk**, really **complicating** the console app codebase... just does **not** seem worth it, but ideas differ...\n\nAlternatively, as suggested here in my first comment, and mentioned by @ler762, a **new** option `--show-filename yes` to output the filename **once**. Nothing to do with `gnu-emacs`. And maybe that could be on the 3 summary outputs, or separately, but that should remain an `Info:` type, which can be suppressed with `-q`, `-quiet` or `--quiet yes`...\n\nAnd @ler762, as stated not too concerned about the new wording for the `gnu-emacs` option... just about anything would add some **clarity** to this help... look forward to this...\n\nAs sometimes happens, **lots** of differing ideas here... I think I would be swayed towards the first **single** hythen `-show-filename` and will look at this as an extension of my existing **debug** output... Other developers may be willing to put time and effort into other solutions...\n\nLook forward to further comments... thanks...\n. @balthisar even after googling it, not really sure what a **monkey** patch is, or at least how it **applies** here, nor what is the **lot of monkey patches** you refer to, especially the idea of a **lot**, but no problem ;=))\n\nCertainly see `TidyConfigCallback` infrastructure service as a way of **monkeying** with a config type switch to make it what it isn't, if you ever **needed** or **wanted** to do that... thankfully seems **none** at present in `tidy.c`... hope we can keep it that way...\n\nEither such a configuration item is part of the `libtidy` API, or it is **not**. Why would you want to `sneakily` do otherwise? In some readings of the references explored, this `service` is itself a **monkey patch** enabler, or something... but ok, each to their own...\n\n@ler762 thank you for PR #715... This looks fine. I have a small **backlog** of PR's that I need to get too first, but will get to it, eventually...\n\nOne small note is that you seem to have done this in `next` in your fork. That may or may not cause you some **pain** down the line... as my item 4. above suggested, this is usually better done in a `branch`... this makes it easier to later keep your `next` up-to-date, without conflicts, with -\n\n```\n$ git checkout next\n$ git remote add upstream git@github.com:htacg/tidy-html5.git # only done once\n$ git fetch upstream # get any updates from htacg\n$ git rebase upstream/next # update your next\n# deal with any conflicts, if any\n$ git push # update your remote fork\n# and if you have a branch not merged yet\n$ git checkout my-branch\n$ git rebase next\n# deal with conficts, if any\n$ git push\n```\n\nBut like I say, may **not** be a problem...\n\nI have experimented with implementing a simple `-show-filename` option in an `issue-713` branch. If acceptable, would create a PR, and eventually merge this to `next`...\n\nHave found one interesting thing. If this output is put to a error file, with say `-f temp.txt`, that file is opened in binary mode, thus the output of `fprintf(errout, \"\\n\");` is just `0A`, thus in say windows I do not get `0D 0A`, which messes up some old dumb editors... still looking for a way around this... but small...\n\nWould be appreciated if you, and others, could pull this `branch` and give it a try... thanks\n. @ler762 thank you for the **extension** of PR #715. An entirely **new** config type option `--show_filename yes|no`. Nothing to do with `gnu-emacs`. It looks good...\n\nThis makes my `tidy.c` patch in the `issue-713` branch entirely redundant... **or does it?**\n\nWhat about the case where there are **no** error or warnings? Now we would be back to **no** filename shown anywhere, and I think there should be, even in this **happy** case, if I asked for `show-filename`...\n\nThat could be done in `tidy.c` using `tidyOptGetBool(tdoc, TidyShowFilename)`, as per my `issue-713` branch, just changing the `if` condition, or moved into the library, where the translation of the line ending `\"\\n\"` would be better handled in error file output...\n\nAnd a mention in the documentation of slightly different options - one where `gnu-emacs` would win if both specified under the current coding... Both `gnu-emacs` and `show-filename` descriptions could mention the other alternative, or something... and in the `man tidy` output there is a `See also: ...` component on some, which seems to make sense here...\n\nWhat do you think? Thanks...\n. @ler762 thanks for the addition of the `See also:` cross references to the PR... just built your fork in linux, and love what I see with `$ man -l tidy.1`...\n\nStill to check a docs gen to see what I get. @balthisar can't remember are the `cross references` picked up, and how are they shown... Certainly strongly feel if a user is reading say `gnu-emacs`, it would be great if they are reminded of the `show-filename` format **alternative**, and vice versa...\n\nAnd not so certain we need to say anything about `which wins`, but clarity, at least on `show-filename` description could not hurt...\n\nSince we seem to **all** agree that it would be a **good thing** to also show the filename even when there are **no** warnings or errors... more or less extracted from my now **dead** `issue-713` branch, which will get around to **deleting** - how about adding this patch -\n\n```diff\ndiff --git a/console/tidy.c b/console/tidy.c\nindex 4afbc04..928630e 100644\n--- a/console/tidy.c\n+++ b/console/tidy.c\n@@ -2405,7 +2405,15 @@ int main( int argc, char** argv )\n         if ( argc > 1 )\n         {\n             htmlfil = argv[1];\n-            DEBUG_LOG( SPRTF(\"Tidying '%s'\\n\", htmlfil) );\n+#ifdef ENABLE_DEBUG_LOG\n+            SPRTF(\"Tidy: '%s'\\n\", htmlfil);\n+#else\n+            if ( tidyOptGetBool(tdoc, TidyShowFilename) )\n+            {\n+                fprintf(errout, \"Tidy: '%s'\", htmlfil);\n+                fprintf(errout, \"\\n\");\n+            }\n+#endif\n             if ( tidyOptGetBool(tdoc, TidyEmacs) || tidyOptGetBool(tdoc, TidyShowFilename) )\n                 tidySetEmacsFile( tdoc, htmlfil );\n             status = tidyParseFile( tdoc, htmlfil );\n```\n\nNote I have reduced to the product name `Tidy:` which I understand is exempt from translations anyway... and since this is a **new** opt-in option, do not feel it necessary to be in the library where it can be silenced by other options... apps using `libtidy` can look after this on their own... and can wear the untranslated `\"\\n\"` in windows... but open to further discussion on this...\n\nHave not yet done our [regression](https://github.com/htacg/tidy-html5-tests) tests, but again since it is an `opt-in` option do not expect any problems...\n\nAs stated, I have a backlog of PR's to get to, and prefer to do them in order, so the `automatic` merge of #715 might break, but no problem, it can still be manually merged, if this happens... \n\nThis is of course another reason why such changes are done in a fork `branch` so you are able to keep the underlying `next` branch in sync, and continually layer your changes on top, keeping the `auto` merge valid... but as I say should be no problem...\n\nAnd @petdance, as the openner of this issue, do you have any further comments? thanks...\n. Love the **new** `--show-filename yes` option -\n\n```\nF:\\Projects\\tidy-test\\test\\input5>tidy --show-filename yes -e -q in_704.html\nTidy: 'in_704.html'\nin_704.html: line 1 column 7 - Warning: missing <!DOCTYPE> declaration\nin_704.html: line 1 column 7 - Warning: plain text isn't allowed in <head> elements\nin_704.html: line 1 column 7 - Warning: inserting implicit <body>\nin_704.html: line 1 column 7 - Warning: inserting missing 'title' element\n```\n\nEven tried a `$ tidy --show-filename yes -e -q *.html` in my `input5` folder, but aborted this since there are over 700 test files in there, some of them **very** nasty, but always saw the **filename**, even on docs that show \"This document has errors ...\"...\n\n@ler762 thank you for PR #717... this **worked** fine, even though it showed `from unknown repository`?... then I added my `tidy.c` patch and we were on our way... and also thanks for the `gnu-emacs` documentation improvements, and the spelling fix... all now in `next` from version `5.7.13` onwards... And simply closed PR #715 as now redundant...\n\n@petdance assume we can close this... feel free to re-open if I missed something, or add a **new** issue... thanks...\n. @ler762 yup, I thought about mentioning that separation, but this being your **first** PR, which we are **always** thankful for, decided to let it go in this case... will accept it as you like... \n\nHope you offer many more PR's, but watch-out **next** time ;=))\n\nAnd due to my workflow, prefer comments in the issue #713 this started from, but again no problem really... \n\nAnywhere is better than none ;=))\n. @ler762 have now merged #717 which I think contains all the same patches - I hope - so closing this...\n. @MaxLanar thanks for the `Feature Request`...\n\nRead through the links, and see you caught the attention of @balthisar... \n\nInteresting use of the `tidy` console app... and glad you found the `-lang en` option...\n\nHmmm, `produce JSON output`? While I am somewhat familiar with `json`, can you give an **example** of what you expect? \n\nTake for example `$ echo \"hello world\" | tidy -lang en`, you get the `stderr` output of -\n\n```\nline 2 column 1 - Warning: missing <!DOCTYPE> declaration\nline 2 column 1 - Warning: plain text isn't allowed in <head> elements\nline 2 column 1 - Info: <head> previously mentioned\nline 2 column 1 - Warning: inserting implicit <body>\nline 2 column 1 - Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\nTidy found 4 warnings and 0 errors!\n\nAbout HTML Tidy: https://github.com/htacg/tidy-html5\nBug reports and comments: https://github.com/htacg/tidy-html5/issues\nOfficial mailing list: https://lists.w3.org/Archives/Public/public-htacg/\nLatest HTML specification: http://dev.w3.org/html5/spec-author-view/\nValidate your HTML documents: http://validator.w3.org/nu/\nLobby your company to join the W3C: http://www.w3.org/Consortium\n\nDo you speak a language other than English, or a different variant of \nEnglish? Consider helping us to localize HTML Tidy. For details please see \nhttps://github.com/htacg/tidy-html5/blob/master/README/LOCALIZE.md\n```\n\nWhat would that look like in `json`, just to understand more?\n\nOr perhaps more importantly what would be the `json` if you add say `-lang fr`... thanks...\n. @balthisar thanks for the feedback, especially the `sample` json output... that really helped...\n\nQuite some time ago I experimented with a [tidy-json](https://github.com/geoffmcl/tidy-test/blob/master/src/tidy-json.cxx) app, rendering the tidy DOM like html tree as `json`... This is the output using my test input [in_704.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_704.html), which as can be seen is just one line `hello & bye`...\n\n```json\n{\n  \"in_file\" : \"F:\\\\Projects\\\\tidy-test\\\\test\\\\input5\\\\in_704.html\",\n  \"out_file\" : \"temp.json\",\n  \"name\" : \"#Root\",\n  \"content\" : [\n    {\n      \"name\" : \"#DOCTYPE\",\n      \"attributes\" : [\n        {\n        \"name\" : \"PUBLIC\"\n        }\n      ],\n      \"name\" : \"html\",\n      \"content\" : [\n        {\n          \"name\" : \"head\",\n          \"content\" : [\n            {\n              \"name\" : \"meta\",\n              \"attributes\" : [\n                {\n                \"name\" : \"name\",\n                \"value\" : \"generator\"\n                },\n                {\n                \"name\" : \"content\",\n                \"value\" : \"HTML Tidy for HTML5 for Windows version 5.7.3\"\n                }\n              ],\n              \"name\" : \"title\"\n            }\n          ],\n          \"name\" : \"body\",\n          \"content\" : [\n            {\n              \"name\" : \"#Text\",\n              \"value\" : \"hello & bye\\r\\n\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n\nIt was not too difficult to do the same for the messages, using the `TidyMessageCallback` API you mentioned - This is what I got after the first cut, and it pointed out some interesting issues -\n\n```json\n{\n \"filename\": \"F:\\\\Projects\\\\tidy-test\\\\test\\\\input5\\\\in_704.html\",\n \"messages\": [\n    \"message\": {\n      \"messageLine\": 1,\n      \"messageColumn\": 7,\n      \"messageLevel\": 351,\n      \"messageIsMuted\": true,\n      \"messageDefault\": \"missing <!DOCTYPE> declaration\",\n      \"message\": \"dclaration <!DOCTYPE> manquante\"\n    },\n    \"message\": {\n      \"messageLine\": 1,\n      \"messageColumn\": 7,\n      \"messageLevel\": 351,\n      \"messageIsMuted\": true,\n      \"messageDefault\": \"texte brut isn't allowed in <head> elements\",\n      \"message\": \"texte brut n'est pas permis dans les lments <head>\"\n    },\n    \"message\": {\n      \"messageLine\": 1,\n      \"messageColumn\": 7,\n      \"messageLevel\": 350,\n      \"messageIsMuted\": true,\n      \"messageDefault\": \"<head> previously mentioned\",\n      \"message\": \"<head> prcdemment mentionns\"\n    },\n    \"message\": {\n      \"messageLine\": 1,\n      \"messageColumn\": 7,\n      \"messageLevel\": 351,\n      \"messageIsMuted\": true,\n      \"messageDefault\": \"inserting implicit <body>\",\n      \"message\": \"insertion implicite de <body>\"\n    },\n    \"message\": {\n      \"messageLine\": 1,\n      \"messageColumn\": 7,\n      \"messageLevel\": 351,\n      \"messageIsMuted\": true,\n      \"messageDefault\": \"inserting missing 'title' element\",\n      \"message\": \"ajout d'un lment 'title' manquant\"\n    },\n    \"message\": {\n      \"messageLine\": 0,\n      \"messageColumn\": 0,\n      \"messageLevel\": 350,\n      \"messageIsMuted\": true,\n      \"messageDefault\": \"Document content looks like HTML5\",\n      \"message\": \"Le contenu du document ressemble  HTML5\"\n    },\n    \"message\": {\n      \"messageLine\": 0,\n      \"messageColumn\": 0,\n      \"messageLevel\": 357,\n      \"messageIsMuted\": true,\n      \"messageDefault\": \"Tidy found 4 avertissements and 0 erreur!\\n\",\n      \"message\": \"Tidy a trouv 4 avertissements et 0 erreur!\\n\"\n    }\n ]\n}\n```\n\nFirst it does **not** pass some json checking s/w I have... bombs at about line 3... can **not** yet see the problem, and appreciate someone pointing out the missing `,` or `]`... But that led to other things -\n\n 1. As someone else pointed out, why is there no **config** option `language: <lang>`? It is mentioned in the `man tidy` page. Yes, there is a `-language <lang>` option in console tidy... strange... do not quite understand...\n\n 2. As can be see in every case the `\"messageIsMuted\": true`. This is because the `message.muted` member is **always** non-zero. I was running in debug mode, and MSVC fills stack memory with `0xcdcdcdcd`, so this member is just not initialized. Small **bug**...\n\n 3. Since I ran in `-lang fr` mode, while most `messageDefault` is English, some are in French, or partial French? Do not know, but that **feels** like a **bug**... \n\nHave not had a chance to look at 3. and understand why... but maybe this is same as a previous **bug** where an ouput buffer was used as part of the input... especially given that some do seem a **mixture** of languages... so has maybe been fixed by a PR not yet merged... not sure...\n\nGiven that they can all be addressed, this brings up the possibility of why is this not done in such a separate, `tidy-json` app, built and shipped with `tidy`, rather than yet **again** adding it to console `tidy.c`...\n\nAnyway out of time today, but look forward to some **interesting** feedback... thanks...\n. @balthisar `missing letters`, yeah, my json **escaping** service omitted all utf-8 chars, now fixed... quick and crudely...\n\nOf course I am extract all the items into a `std::string` **before** the callback returns...\n\nAnd now see the `results->muted` member is only set **after** this callback - [messageobj.c](https://github.com/htacg/tidy-html5/blob/next/src/messageobj.c#L198) - setting this needs to be moved to **before** the callback, or something...\n\nI converted the `messageLevel` from a rather meaningless number to a `string`, and added a few more outputs... Still open to discussion what should and should **not** be included...\n\nWill try to attach the file output, since I am always unsure what `copy & paste` does to utf-8... of course had to add the `.txt` extent to get it accepted -\n\n[tempmsg.json.txt](https://github.com/htacg/tidy-html5/files/1916815/tempmsg.json.txt)\n\nThere are several points about making this a separate distributed app -\n\n 1. There is no **fuss** with install... just a few cmake lines and it is done... that seems to be spreading **FUD**\n 2. As a separated app it can have its own config options, like `indenting` and `newlines`. Unless the output is being read by a human, seems no need to `pretty print` it.\n 3. Like say `git`, and **many** other unix apps, it should be broken into several apps, and to me that could include the current `xml` config outputs. \n 4. Like my `tidy-json` there is no need to stick to `K&R` C... makes it easier to write, maintain, understand, etc using say C++ stl...\n 5. Helps promote by example apps to show the **power** of the `libtidy`...\n\nThere seems no need to have an ever growing single `tidy` console app, that tries to do everything, every format... a single mega app... even seems contrary to some unix philosophy of many small tools...\n\nI am **still** having a **problem** with the output passing my json checking s/w. It **fails** within the first 3 or 4 lines... **Any** help on that appreciated...\n\nAnd now I have added the `summary` messages as well, but exactly what to include in the `json` could be subject to `tidy-json` specific config switches, in addition to the mentioned `indenting` and `newlines` options... so the user could select just as much as they need...\n\nBut whatever is eventually decided I am still seeing **mixed** language messages... Need to get to the bottom of this... ideas welcome... thanks...\n. Seemed to have solved the valid `json` problem, and have added some other `members` - as usual renamed it `.txt` to allow uploading - [msg-fr.json.txt](https://github.com/htacg/tidy-html5/files/1921285/msg-fr.json.txt)\n\nAnd have opened a #719 issue to address the **bug** in the `callback` API...\n\nThis is the current [tidy-json](https://github.com/geoffmcl/tidy-test/blob/master/src/tidy-json.cxx) app... appreciated if others could clone, build, and test this...\n\nLook forward to further feedback... thanks...\n. Ok, my [tidy-json](https://github.com/geoffmcl/tidy-test/blob/master/src/tidy-json.cxx) app is getting stable and mature...\n\nHave now added **everthing** available from the `TidyMessageCallback` API - sample -\n\n[msg-fr2.json.txt](https://github.com/htacg/tidy-html5/files/1948426/msg-fr2.json.txt)\n\nOne of the last things is a sort of `verbosity` option, or more an `information selection` option, since it is probable that a user may **not** need all this information in `json`... need to think about this...\n\nAnd as noted in issue #719, have solved one of the problems, the `messageIsMuted` value, there is still the problem of `mixed` languages in certain messages to be solved...\n\nOne interesting thing about the output of the `nodes` in json is that there is not an API to get whether a node is `implicit`, that is **added by tidy**, and **not** in the original input html... will try to find the time to add a `Feature Request` for this...\n\nLook forward to others building and testing this, and further feedback... thanks...\n. @ler762 certainly agree `CONTRIBUTING.md` could use some updating...\n\nAs the document more or less says, to me the first step, before a PR, is to create an `issue`, like you have done here, so the problem being addressed can be discussed a little, and agreed somewhat... although I suppose some simple things, like a spelling mistake does **not** really need that...\n\nYes, that `Optionally` should be removed... and yes, while the `branch` name can be long and descriptive, i.e. **topical**, but it does not have to be... \n\nYour `doc-nits` is fine... and you will note I often use the `issue-<NUM>`. But the actual `name` is more **style** than **substance**... it is a temporary git lightweight marker that typically can/will be **deleted** after the `merge`...\n\nThen as you no doubt realise, everything you push to that `branch` will be combined together in the **single** PR by github, so it is important to have **multiple** `branches` for **multiple** `issues`...\n\nLike your #717 is **multiple**, `gnu-emacs` and `show-filename`, but it can just be tolerated under the **same** issue `show filename on messages`... so **no** problem...\n\nAnd the jump to fixing a spelling mistake in `CONTRIBUTING.md` is again a **stretch**, but ok, it is so small... so again, no particular problem... but...\n\nBut the **bigger** changes needed in `CONTRIBUTING.md` should be **separate**... they could be in say a `doc-nits2` branch or something...\n\nIt seems PR #717 makes PR #715 redundant, so it can be closed... can you do that, or should I?\n\nSo back to `CONTRIBUTING.md` enhancement... \n\nWhy not start with what I wrote in #713, here repeated and `enhanced` some more...\n\n 1. Fork tidy to your own github account. Use top right `Fork` icon.\n 2. Generate a SSH Key, and add it to your `https://github.com/<name>` settings, SSH and GPG keys\n 3. Clone your own fork - `$ git clone git@github.com:<name>/tidy-fork.git tidy-fork`\n 4. Create a branch - `$ cd tidy-fork; $ git checkout -b <branch-name>`\n 5. Edit, and commit your changes to this `branch` of your fork.\n 6. Test your changes, and if appropriate run [regression](https://github.com/htacg/tidy-html5-tests/blob/next/README/RUNTESTS.md) tests.\n 7. Publish the branch - `$ git push -u origin <branch-name.` - to your remote fork.\n 8. Create a [Pull Request](https://help.github.com/articles/about-pull-requests/), a **PR**, here.\n 9. Watch for comments, acceptance.\n\nAnd then a general description on step 5., like -\n\nConcerning editing and committing your changes, **generally** it is better to `commit` changes often, adding an appropriate commit message to each. This also aids in the PR review. But the situation varies. Like adding say an option, which can mean several files have to be edited, where it is likely appropriate to combine a considerable number of edits into one commit. There can be no hard and fast rules on this.\n\nPlease note - if you want to change **multiple** things that don't depend on each other, use different `branches`, and make sure you check the `next` branch back out before making more changes - that way we can take in each change separately, otherwise Github will combine all your branch commits into one PR. And see below on keeping your `next` fully in sync with here - this is **important**.\n\nAnd could maybe add more words about `branch` naming, but may not required...\n\nAnyway, just my initial thoughts... certainly look forward to more feedback... this is important... thanks...\n. @ler762 I'll certainly agree `git` can present quite a steep learning curve, and I am **still** learning ;=))\n\nI do not know exactly why you got an accumulation of commits across branches, but I guess you may have missed the words \"make sure you check the `next` branch back out before making more changes\"... and here `more changes` would include creating a **new** branch...\n\nThat is if you were still in the `doc_gnu-emacs` when you created the `show-filename` branch, then of course **all** commits will accumulate. Likewise, when you created the `doc-nits` it seems you accumulated **all** the previous commits... but I am guessing...\n\nWhen in any particular `branch` a `$ git log > ../temp.log` will show you what commits are included in it... you can reduce what is shown by add say `-5` to the command and you will only be shown the last 5, etc... and there are lots of other options to change the format, etc... \n\nAnd since I have done some merges and commits since you started your forked `next` should show something like `This branch is 6 commits behind htacg:next.`, like my tidy **fork** does at present... \n\nAnd as the last paragraphs of `CONTRIBUTING.md` state \"you will need to `rebase` your fork, to htacg `next`, **before** doing any more work, and likewise **branches**...\" - my emphasis added. That is each branch in turn must be checked out and **rebased** to `next`, after a `$ git fetch upstream`... and conflicts cleaned up if **any**.\n\nSometimes `git` is great, but other time seemingly really **dumb** in a `merge`, which `rebase` is, and will add `<<<<<<` ... `>>>>>>` markers around things it can't merge. But usually I have found it **easy** to fix... usually deleting one of the 2 blocks, and possibly a minor change, and end up wondering what `git` exactly had the problem with... \n\nI can reveal to you that I have two copies of my `fork`. One is **just** for `experimentation`, and am prepared to blow it away, clone it again, and try **again** and **AGAIN**... At that time I think `git` **sucks**, but know it as presently the **best** available... you need to try some others like `CVS`, `Subversion svn`, `Mercurial hg`, etc, to appreciate that...\n\nI certainly think #715 has to be closed. It shows `ler762 wants to merge 3 commits into htacg:next from **unknown repository**` - **unknown**??? What does that signify? Not sure, but does not look good...\n\nAnd as **stated**, no real problem with your #717, with all 3 commits...\n\n> What does ssh get you?\n\nWell I assume with `https` you are asked each time for your password when pushing? If you create a SSH, without a `passphrase`, then `$ git push` just works... So it is mainly for convenience... nothing else... You just register the contents of the `$HOME/.ssh/*.pub file you generate...\n\nYes, that would be `$ git clone git@github.com:<name>/tidy-html5.git tidy-fork`... stupid mistake... unless in forking, or later, you **re-named** the repo, but agreed we should **not** assume that...\n\nBeing a mainly windows person **not** fully familiar with `tools-sh`, I use `tools-cmd`, but you seemed correct... and I think there is a `run-tests.sh` that does **both** steps for you... \n\nAs mentioned do not see a problem with the commits so far seen, but it is good to get familiar, since we do expect the **regression** tests to be run some time before the final merge...\n\nHTH... thanks...\n. @ler762 have just pushed some updates to [CONTRIBUTING.md](https://github.com/htacg/tidy-html5/blob/next/README/CONTRIBUTING.md)... commit b952e65...\n\nAppreciated if you would check it over, and advise any errors, or other suggestions, or can this be closed... thanks...\n. @ler762 wow, **thanks** for the additional suggestions. Will certainly consider this, but first some questions...\n\nItem 2. Clone you own fork. As you now no doubt know by now `git clone git@github.com:<name>/tidy-html5.git` will clone into the `tidy-html5` directory. And will refuse to do anything if a `tidy-html5` non empty directory already exists... \n\nThat is why I had added the `tidy-fork` directory at the end, sort of assuming they would have already cloned this repo, and need to use another directory name...\n\nAnd when I was just a `contributor` to `tidy`, my MO was to have both. In the `tidy-html5`, where I never made any changes, I could do a `git pull`, and its results would sort of **warn** me that maybe I need to `rebase` my `tidy-fork`, and catch up with any `upstream` changes...\n\nOf course it has the slight disadvantage that some of the scripts in say the `regression` tests **default** to `../../tidy-html5/build/cmake/tidy`. But as I later learned, I should **never** rely on such `defaults`, and even now, where my `tidy-html5` can have 10 or 20 testing branches, some not even pushed to the remote, each separately built in a `build/temp-NNN` folder, in `tests` I will have a `t-NNN.bat` which uses the correct `tidy`, so not really a problem...\n\nItem 3. Set your user name and email address. Yes, maybe we should treat the user as a complete `newbie`, `ab initio` user, and no problem with this, but we should be careful how deep `tidy` should go into `git` teaching...\n\nBut you seemed to have missed the `--global` switch. I think what you have shown will only set it for that repo... was that your intention?\n\nWhat about `git config --global user.name <name>`, etc? And I do not think you need to be in any particular repo for this, but no problem if you are...\n\nItem 5. Edit, and commit - You later suggest maybe we should separate the `edit` from the `commit`, but I do not think this is necessary. Until you have done 8. `git push ...`, local commits can be easily undone, changed, or deleted, as you will learn. This is **not** so easy once `pushed` to the remote, i.e. published...\n\nAs indicated, in general I do think it is better to `commit` often, and almost **never** use `git commit -a`...\n\nIn general I prefer `git commit -m \"Is #NNN - what this change is about\" src/<file-name> or <names>`, but as also indicated this is **not** a hard and fast rule. And after a `commit` will often do `git commit --amend` just to read, and sometimes correct the message, or extend the message into multiple paragraphs...\n\nBut this is just my chosen preference, my `style`, and for sure each is free to choose their own... \n\nAnd remember, before pushing, you can later `squash` some of the commits together, and even after the PR is created, the person doing the final merge can choose to `squash` all into one if there appears just too many commits, but that seldom happens...\n\nItem 7. Test ... run the regression tests. As indicated, I mostly work in windows, but recently started running the `tests` in linux. I like you, had shown 2 steps, `testall.sh <tidy>` and `diff ...`. No problem...\n\nBut there is also `run-tests.sh` which combines the 2 steps, but it sets a **default** `tidy`, which is **BAD**, but maybe that could be **fixed** to accept say `run-tests.sh <tidy>`... and even accept other parameter, like the `tools-cmd\\alltest.bat` in windows, even a `--help`... \n\nBut that is an issue in `tests`... will try to remember to set that up unless someone beats me to it...\n\nSo subject to the above, as stated in general accept your expanded docs, but then probably need to change or remove some of the paragraphs following... we need to **fix** the whole document... any ideas on that welcome... thanks...\n\nPS: You can change the extent to `*.md.txt` and upload the whole file, rather than pasting it into this issue... just an idea... I have further modified a `CONTIBUTING.md.txt` according to the above, attached below -\n\n[CONTRIBUTING.md.txt](https://github.com/htacg/tidy-html5/files/1958008/CONTRIBUTING.md.txt)\n\nWhat do you think... thanks...\n. @ler762 yes, who is the target audience is an **important** question... the simple answer is **anybody** who want to `contribute` to tidy development...\n\nYou, with **no** github account, **no** previous forks, are quite an **unusual** case. Looking back **briefly** at the history of PR's, it seems **most** contributors I looked at had come to tidy sometime after sometimes **many** others...\n\nThat is not to say we should **not** offer `some` help to `ab initio` **newbie**, but there should be a compromise, and not add **too** much information that is **boring** to many...\n\nEven as I started to adopt some of your ideas to build a new file, I thought of leaving something like the original, brief, succinct list with say a sub-title like say `In brief:`, and then follow with your `In detail:` much expanded list, with multiple sub-levels, fuller explanations...\n\nSo that agrees with the idea for the document structure - start with the basics, and if the person needs more information they should read on down to the intermediate, even advanced...\n\nBy `basic` that means offering **sound** guidance, like adding the target `[directory]` on a forked clone, since as stated would assume they have already cloned, and built, `tidy-html5`... and suggest you fix/rename your 2 roots solution... but all configurations are workable...\n\nConcerning adding the `git config ...`, IIRC git offers that help... insists even... and still think it should be `--global`... local just puts off the pain until later...\n\nDo not quite understand your copy/paste problem with the `$` shown... so again think this should stay as is... It is quite common to see, even for `windows` users...\n\nAnd do **not** think we should add the `windows` regression test stuff... we should just point them to `RUNTESTS.md`... and **improve** that, and the **tools** there... \n\nHow to actually do the `regression` tests seems quite outside this file, and its purpose - an **introduction** to contributing... but for sure it should be mentioned...\n\nSo now I have talked myself out of your **full** `expansion` of the list ;=))\n\nI am quite happy with the current **improvement**, and would thank you for pushing for this, and some of your suggestions... \n\nBut except perhaps for some small wording changes, even additions, I think it already goes far enough...\n\nUploaded is a CONTRIBUTING.md.2.txt with some further changes, best diff'ed to the current CONTRIBUTING.md, which I will shortly add -\n\n[CONTRIBUTING.md.2.txt](https://github.com/htacg/tidy-html5/files/1959020/CONTRIBUTING.md.2.txt)\n\nBut as always will try to listen to further feedback... thanks...\n. @ler762 thanks for the further feedback...\n\nHave merged **part** of your #727 - Thanks... Still disagree with some other changes...\n\nTo answer some of your comments, yes I do think we should have some \"_really basic_ instructions\", and that's what I think we have now... but **no** that does not include the `git config [--global]`...\n\nHave added back the `regression` **in brief**, but not as part of the list...\n\nDo not particularly want to encourage multi-line copying of instructions so the `$` stays... At best it should be one by one, but with the understanding that what is shown is more a `template` and should not be blindly used... especially by real `newbies`... it should be a learning process...\n\nAnyway, think we have a **much** improved CONTRIBUTING.md... thanks...\n\nOT: Note you have moved to use email replies. No particular problem, but understand some of the `markdown` is not recognized in that case, and this is a issue comment, following a comment, and is **not** email, so do not particularly like such `inline` comments, but again no particular problem...\n. @ler762 yes, there are times I get sort of **fed up** with `github`, but as stated elsewhere, at this time it seems the **best** there is... so I live with it...\n\nAnd I do not know which `browser` you are using, but `github` **keeps** me logged in... which is good since I use a text editor, [Notepad++](https://notepad-plus-plus.org/) in this case, to prepare **all** my replies, often after research and testing, and **always** try to remember use the `Preview` button to see what `github` does with my `pasted` text...\n\nConcerning **testing `markdown`**, in the past, now and then I used my forked [cpp-markdown](https://github.com/geoffmcl/cpp-markdown), just to **see** what it is `likely` to look like, but it too has its **problems**... read **not** exactly the **same** as `github` in all cases... would appreciate `patches`, or `PR's` there to make it `better`...\n\nWould also appreciate if you, or others, have a **better** way for such `markdown` testing... seems this `conversion` and `viewing` would be a good target for an editor/browser `plugin`, or something...\n\nAnyway, assume this can now be closed... thanks for contributing...\n. @ler762 ever looking for doc **improvements**, came accros this link - https://github.com/boostorg/boost/wiki/Getting-Started - and thought it contained some good `git` **newbie** usage points, which you had pushed for...\n\nWhile I **rejected** further expanding the `CONTRIBUTING.md` document to include more in the `Using Git appropriately` section brief basic list, maybe we could have a separate `USING_GIT.md`, or ... file, which contained something like the above `boost` wiki page... and be referred to in the `CONTRIBUTING.md`, and maybe others...\n\nSpecifically you will **note** it includes several important `$ git config --global <name>/<email>`, and `line-ending` items... which I too think are important... \n\nIt does **miss** mentioning the small advantage of SSH if generated **without** a `passphrase`...\n\nAnyway, will try to get around to doing something like this, unless you, or others, beat me to it... thanks...\n\nAnd on the question of **markdown** testing, have made some **big** improvement in my [cpp-markdown](https://github.com/geoffmcl/cpp-markdown) **fork**, perhaps the most important was that it now builds fine in `linux` systems, and I have setup some `enhancement` issues... \n\nI too still seek an **easy** way to **view** markdown **before** I have pushed it to a repo... and that might include fixing any **bugs** in my `cpp-markdown` fork...\n. As indicated the first problem was easily **solved**. Move the setting of `result->muted` up to the `top` of `tidyMessageCreateInitV`... done and fixed... diff given below...\n\n```diff\ndiff --git a/src/messageobj.c b/src/messageobj.c\nindex e6aee29..cfc6ddc 100644\n--- a/src/messageobj.c\n+++ b/src/messageobj.c\n@@ -96,6 +96,19 @@ static TidyMessageImpl *tidyMessageCreateInitV( TidyDocImpl *doc,\n     result->line = line;\n     result->column = column;\n     result->level = level;\n+    /* check the document's configuration to determine whether\n+    this message is muted. */\n+    result->muted = no;\n+    i = 0;\n+    while ((doc->muted.list) && (doc->muted.list[i] != 0))\n+    {\n+        if (doc->muted.list[i] == code)\n+        {\n+            result->muted = yes;\n+            break;\n+        }\n+        i++;\n+    }\n\n     /* Things we create... */\n\n@@ -208,19 +221,6 @@ static TidyMessageImpl *tidyMessageCreateInitV( TidyDocImpl *doc,\n         result->allowMessage = result->allowMessage & doc->messageCallback( tidyImplToMessage(result) );\n     }\n\n-    /* finally, check the document's configuration to determine whether\n-       this message is muted. */\n-    result->muted = no;\n-    while ( ( doc->muted.list ) && ( doc->muted.list[i] != 0 ) )\n-    {\n-        if ( doc->muted.list[i] == code )\n-        {\n-            result->muted = yes;\n-            break;\n-        }\n-        i++;\n-    }\n-\n     return result;\n }\n\n```\n\nThe **mixed** language results are more difficult, but where they happen is clear... I have shown 2 samples, so deal with them separately...\n\n**1st `mixed` message shown**\n\nThe 1st `mixed` message shown is due to the `formatStandard` service using `TagToString` to format the `nodedesc`, and `elemdesc`, and for a `text` node, that uses `tidyLocalizedString(STRING_PLAIN_TEXT)`, which will return `texte brut` in French for a **text** node, and that string will be passed on the stack as one of the `va_args`...\n\nThat means the `tidyMessageCreateInitV` only has access to the `localized` string in these cases...\n\nAnd since this `TagToString` is called by **each** of the `formatters`, non-named nodes, such as `text` and `XmlDecl` use a **localized** string using `STRING_PLAIN_TEXT` and `STRING_XML_DECLARATION` respectively, then potentially all messages with nodes of these 2 types risk having a `mixed` message strings.\n\nThis can presently be seen in 2 languages, but could be potentially a lot more if `localization` ramps up -\n\n - En \"plain text\" and \"XML declaration\"\n - Fr \"texte brut\" and \"d@C@)claration XML\"\n - Pt \"texto simples\" and \"declara@C@'@C@#o XML\"\n\nWow, how to address this?\n\nOne wild thought, that I use in my `tidy-json`, is to give these no-name nodes a `pseudo` name like `#Text` and `#XMLDecl`, like we already sort of have for one, namely a `TidyNode_DocType` node, is `\"<!DOCTYPE>\"`... I use `#DOCTYPE` for this... \n\nAnd using `tidyNodeGetType(node)` I also have `#Comment`, `#ASP`, `#JSTE`, etc...\n\nThat is give these nodes a formal non-translatable `name` that is passed on the stack as the `va_args`...\n\nIf we **truely** want `tidyMessageCreateInitV` to construct **two** messages, one being the default English, then the `va_args` would need to include the `tidyDefaultString(code)`. Or it is passed a structure containing both the default, and the localized string, or something...\n\n**2nd `mixed` message shown**\n\nBelow is where the 2nd message with format `Tidy found %d %s and %d %s` is created, and note the `localized` string, in this case the French string for `warnings` and `errors` is passed on the stack, as the va_args, so that will be `avertissements` and `erreur`, so both the **default** `and` the **language** message strings will contain only the French - some reformatting of the code done to fit here - \n\n```\n    case STRING_ERROR_COUNT:\n    case STRING_NOT_ALL_SHOWN:\n        return TY_(tidyMessageCreate)( doc, code, level,\n                doc->warnings, tidyLocalizedStringN( STRING_ERROR_COUNT_WARNING, doc->warnings ),\n                doc->errors, tidyLocalizedStringN( STRING_ERROR_COUNT_ERROR, doc->errors ) );\n```\n\nHow to get over this is more difficult... We would sort of need say a `tidyMessageCreateDefault` **and** a `tidyMessageCreateLanguage`, passing the appropriate string pointers on the stack... or something...\n\nAs always any help, feedback, patches, or PR very welcome on this **mixed** language issue... thanks...\n. @petdance thank you for the `Feature Request`, but...\n\nIf I read this correctly, through some `switch` embeded in a html `comment`, or some other **dynamic** configuration option, you want `tidy` to sort of **not** be `tidy`, at least to **not** report `warnings/errors`, and unsure if that also means not **fix** the html, if that is what would normally happen... maybe I misunderstand something...\n\nEven if that was technically possible, it presently does not feel like a **good idea**! \n\nWhile we can and do have some options that effect parsing, they are for the whole file... \n\nAnd tidy should **not** get into parsing a `comment`, other than seeking its `-->` close... to sort of seek some **secret** @petdance switch, **not** part of W3C html...\n\nAs mentioned elsewhere, Tidy has at least 3 levels of parsing - 1. read user input, and parse, possibly some fixing, and warnings; 2. clean and repair the nodes collected, again possibly some fixing, and warnings; and 3. Pretty print the output, where some entity encoding is done... \n\nSo it seems **all** phases would be effected, and that seems a **tough** problem... even if the concept is accepted... but...\n\nIn some other issues, I have suggested `tidy` can **not** just ignore some html problems...\n\nYou are a `perl` wizard. If you are going to the trouble of adding some `switch` in a comment, why not use perl to extract the lines you do not want `tidy` to see under the current config, set a different config and pass them separately to new tidy, and re-embed them, or something...\n\nFor sure at this moment, in `tidy`, this verges on **`Won't fix`**... sorry... maybe I am way off base...\n\nBut as usual, appreciate further feedback, even patches, PR showing it is even possible, but would still need a **stronger** use case to be considered... thanks...\n. @Kristinita thanks for the issue...\n\nYes, **some** distros can sometimes be very **slow** to catch up to the latest release. That is particularly true for Ubuntu! The last time I checked, even with my 16.04.4 LTS, which you should upgrade to, it is still a tidy 2009 version, `libtidy-0.99-0`... **UGH** ... \n\nEven the [Jonathon F](https://launchpad.net/~jonathonf/+archive/ubuntu/backports/+index?batch=75&memo=75&start=75) launchpad backport is still on tidy `5.2.0`... \n\nAnything you could do about that like filing an update **bug** with them would be most appreciated...\n\nAnd likewise we stopped shipping a [binary](http://binaries.html-tidy.org/) **.deb** around the same time...\n\nThankfully cloning and building tidy from source is usually very simple in linux. So you can benefit from the very latest `tidy`, and be able to test `branches` before they are merged...\n\nWe have our own [BUILD.md](https://github.com/htacg/tidy-html5/blob/next/README/BUILD.md). And **note** the `xsltproc` tool is required to build and install the tidy.1 man page. `$ sudo apt-get install xsltproc` should do it...\n\nNote, it appears you did not add `-DCMAKE_INSTALL_PREFIX[:PATH]=/usr` to the cmake configuration and generation stage, which allows `cmake` to choose its **default**, which is usually `/usr/local`, which is not particularly a problem... \n\nBut I consider `granddaddy` tidy a **system** app, not just a user local addition... but as I say no real problem...\n\nAnd I would add `-DCMAKE_BUILD_TYPE=Release` to that. Yes, it got added to the cmake build line, but in linux you can use just `$ make` instead... given the standard UNIX makefiles generation, usually the unix default, was used...\n\nAnd yes, we have allowed two warnings to creep into the compile of `tidy.c`. Checking them carefully, they are quite  **benign**, and can be ignored... certainly **not** a `bug`... But I will try to remember to fix them when I get a chance... always better to have a clean build...\n\nWill leave this open to remind me to do that small fix, probably with a `cast`... thanks...\n. @Kristinita happened to be working in linux, and experimented with a quick **fix** for these gcc warnings...\n\nHave pushed the results to the `issue-721` branch, and created PR #722...\n\nAppreciate any testing and reporting ... thanks.... @Kristinita well the `recommended` way depends on what you are going to do, what you want to do...\n\nIf you are **just** going to use the console app `tidy`, which by **default** is linked with the `static` library **libtidys.a**, then not building and installing the **shared** library, `libtidy.so`, that is `-DBUILD_SHARED_LIB:BOOL=OFF`, is fine, but this is unusual in unix/linux...\n\nIt also means you have no other applications in your system that depend on `libtidy.so`, like say PHP with `tidy`, see #673, and perhaps a Perl wrapper that uses `libtidy`, see #562, etc, but it is **true** there are not too many of these...\n\nAnd it also means you do not want or need to write your own applications, like our [sample](http://api.html-tidy.org/tidy/tidylib_api_next/libtidy_04.html) app, or like some other samples in my [test-tidy](https://github.com/geoffmcl/tidy-test) repository, **or** you absolutely **prefer** to only link with the **static** `libtidys.a`...\n\nThere are even some in the unix/linux community that **prefer** to build the console app `tidy` linking **only** with the **shared** library. See the cmake `-DTIDY_CONSOLE_SHARED:BOOL=ON` option, and see issue #326...\n\nAnd further concerning the **shared** library, and tidy headers, you have to make sure **older** version are still not installed...\n\nSee #707, and several others, especially where version `0.99`, circa 2009, is still around. Run something like `$ locate tidy`, and make sure **all** older versions have been purged...\n\nAnd that also means to try to be **consistent** with the install location, like using `-DCMAKE_INSTALL_PREFIX[:PATH]=/usr`, but as stated in most cases the cmake default is also fine... and usually does not represent a problem...\n\nIn building in Windows, there are other good reason why the **shared** library, there called a DLL, is **less** important, but that is because a DLL there takes more effort to get it setup correctly... but not impossible...\n\nSo you can see giving a **recommendation** depends on many other things...\n\nHTH.\n. @Kristinita warning **fix** PR #722 now merged, and got a clean build for version 5.7.14... thanks...\n. @petdance yes, this is one of the **silent** fixes `tidy` has virtually **always** done... no missing config option that I can think of... \n\nThere are several previous issues talking about these `silent` fixes... and while, in general, I too feel tidy should `warn`, at least as a user education tool, of such fixes, **several** have been allowed to stand over time...\n\nAs mentioned elsewhere, basically tidy has at least 3 phases - 1. parse input, 2. clean nodes, and 3. pretty print nodes... \n\nWhile there can be fixes/changes made in **each** stage, at present only 1 and 2 issue warnings. That is call `TY_(Report)(doc,...)`, some 240+ times, **or** one of the other `specialized` report functions, like `TY_(ReportAccessError)`, `TY_(ReportAttrError)` etc, etc... \n\nAlthough there may still be some `silent` fixes here also - need to somehow check that...\n\nThus, at present, fixes done in stage 3, output, all in the `pprint.c` module, which is where this particular `fix` is done, are **silent**. That is there are **no** `report` functions called from this module that I can see... \n\nCertainly `TY_(Report)(doc,...)` is **not** called... Need to check and verify that **no** other `specialized` report functions are called... \n\nWas this a `deliberate` idea of the **founders**?\n\n**Is it time to change this?**\n\nLook forward to further feedback, particularly patches or PR, to show how this would look, if **yes** is the answer to that question... thanks...\n. @petdance thanks for the additional information...\n\nThe fact that in your use case, of not using the tidied html, that is using the `-errors`, `-e`, `markup: no` option, means moving the detection, and fixing of these brackets, and thus issuing of a warning, up into stages 1 or 2, which in turn adds to the difficulty of implementing this `Feature Request`... not impossible, but certainly more work...\n\nGiven the added complexity, especially to **not** break anything, and the fact that no coding has been started yet, am adding an indefinite milestone... this can change if and when things progress...\n\nLook forward to furher feedback, patches or PR... thanks...\n. @petdance have not had time to fully research this, but try the following input -\n\n```html\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n           \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>Is #724-1</title>\n</head>\n<body>\nThis & that.\n</body>\n</html>\n```\n\nHTML5 allow a single `&` to stand, while **not** if it is a legacy document... And you should find that `--quote-ampersand no` makes a difference if HTML4...\n\nAt this time this looks more like a **documentation** issue, rather than a **bug**...\n\nOr are you suggesting a `Feature Request` that it be `escaped` in HTML5, even though it is **not** necessary...\n\nSeek further clarification... thanks...\n. @k-kyuno thank you for the issue...\n\nYes, it seems this is a **BBB** - `Big Bad Bug` - introduced sometime after the release of `5.2`, and only manifests itself in HTM5 documents... **UGH**!\n\nAnd thanks for the related links #525, #396, #572, and maybe #428 and others...\n\nStill researching, and tracking this down... feedback, patches, PR very welcome... thanks...\n. @petdance thank for the issue... yes, this is a **bug**...\n\nIt turns out an `incomplete` **fix** was applied in #185... \n\nWhen creating the `NewAnchor` structure, had left converting the name to lowercase, so the `if ( TY_(tmbstrcmp)(found->name, lname) == 0 )` failed, so **no** show of the uppercased **duplicates**...\n\nHave pushed a **fix** to the `issue-726` branch... \n\nMy new v.5.7.14.I726 now shows 14 warnings, as opposed to the 7 you show...\n\n```\nline 8 column 9 - Warning: <div> anchor \"foo\" already defined\nline 9 column 9 - Warning: <span> anchor \"foo\" already defined\nline 12 column 9 - Warning: <div> anchor \"foo99\" already defined\nline 13 column 9 - Warning: <span> anchor \"foo99\" already defined\nline 16 column 9 - Warning: <div> anchor \"Foo\" already defined - NEW\nline 17 column 9 - Warning: <span> anchor \"Foo\" already defined - NEW\nline 20 column 9 - Warning: <div> anchor \"FOO\" already defined - NEW\nline 21 column 9 - Warning: <span> anchor \"FOO\" already defined - NEW\nline 23 column 9 - Warning: <a> anchor \"foo\" already defined\nline 24 column 9 - Warning: <a> anchor \"foo\" already defined\nline 25 column 9 - Warning: <a> anchor \"foo\" already defined\nline 27 column 9 - Warning: <a> anchor \"FOO\" already defined - NEW\nline 28 column 9 - Warning: <a> anchor \"FOO\" already defined - NEW\nline 29 column 9 - Warning: <a> anchor \"FOO\" already defined - NEW\nTidy found 14 warnings and 0 errors!\n```\n\nAnd using the sample below, this new version will still show no warning, as expected, as would previous versions -\n\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Is #726-2</title>\n    </head>\n    <body>\n        <p    id=\"foo\">1</p>\n        <div  id=\"Foo\">2</div>\n        <span id=\"FOO\">3</span>\n    </body>\n</html>\n```\n\nBut add a HTML4 doctype will still show 2 warnings, as expected, as did earlier versions... \n\nIn [regression](https://github.com/htacg/tidy-html5-tests) testing, with this new version, case **588061** now shows multiple **additional** warnings, for a duplicated anchor of \"MAP details\", which previous versions **missed**... looks like the `expects` output needs to be adjusted...\n\nSo this looks like there should be simultanious PR's, `here` and in `tests`, not done yet... still testing, checking, etc... \n\nAppreciated if you, or others, could checkout the `issue-726` branch, test and report... thanks...\n. @petdance the first step is to clone the [test-suite](https://github.com/htacg/tidy-html5-tests) repo, and it is best if it is cloned in a parallel directory to your `tidy-html5` clone, but this is not essential...\n\nThen `cd tidy-html5-tests`, then `cd tools-sh` or `cd tools-cmd`, depending if unix or windows... run `testall.sh` or `alltest.bat` respectively...\n\nThere is a [RUNTESTS.md](https://github.com/htacg/tidy-html5-tests/blob/next/README/RUNTESTS.md) hopefully explaining it all...\n\nAnd it has been discussed **lots** of time in these issues, the last being https://github.com/htacg/tidy-html5/issues/718#issuecomment-381306111, near bottom...\n\nAdvise if you have any trouble... thanks...\n. @petdance have just pushed some updates to [CONTRIBUTING.md](https://github.com/htacg/tidy-html5/blob/next/README/CONTRIBUTING.md)... commit b952e65... and certainly mentioned the [regression](https://github.com/htacg/tidy-html5-tests) tests, in a separate repo...\n\nAppreciated if you would check it over, and advise any errors, or other suggestions... thanks...\n. Have now created PR #731, but as mentioned, `regression` test case **588061** expects needs to be adjusted at the same time... still to do a PR for that.... @petdance - Now both PRs merged... bump to version 5.7.17,  both `here`, and in `tests`... **closing** this... thanks...\n. @ler762 accepted only the first commit... thanks.... @justinhartman thank you for the issue...\n\n> I'm very confused how the file below can create this perception that the content is `html5` content.\n\nWell do not be **confused**! You `created` this by **passing** the file to `tidy`. `Tidy` treats every and any file passed to it as `html`, or `xhtml`, and looks at the content as that markup type code... will try to **fix** it if it can, and report warnings and errors...\n\nAnd if `tidy` does **not** find a `DOCTYPE` it will **assume** `html5`...\n\nNow it seems you passed an **unclosed** processing instruction block, `<?php ... `, so tidy just threw that away. If you had added the `close` it was looking for `... ?>`, it would have kept it as part of the **html** document... Try the following `php` and you should see what I mean -\n\n```php\n<?php\nfunction foo()\n{\n   return 1;\n} // end foo()\n?>\n```\n\nBut as I am sure you know, in a `xhtml` document, such `processing instruction` are usually within the document body, like -\n\n```html\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n     \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n<title>#782-3</title>\n</head>\n<body>\n<?php\nfunction foo()\n{\n   return 1;\n} // end foo()\n?>\n</body>\n</html>\n```\n\nThat file will pass `tidy` with no errors or warnings, as with the W3C [validator](https://validator.w3.org/)...\n\nSo far I can **not** see any `tidy` **bug** here, except maybe, but only **maybe**, it could report something like an `line 1 column 1 - Warning: unclosed processing block discarded` on the above `php` sample, but that should be a **separate** issue. If someone was interested enough to look into this and raise an issue, that would be appreciated, and dealt with separately...\n\nNow I know **nothing** about `SublimeLinter`, or `Sublime Text` editor, but it seems you should explore the **multiple** options for `tidy` - see [QuickRef.html](http://api.html-tidy.org/tidy/quickref_5.6.0.html)\n\n**But** this is only if you are passing a `[x]html` document to `tidy`. Certainly **not** a pure `php` file, that is with **no** `html` markup...\n\nFor example, if you have no interest in the `head` part of the `html`, then `--show-body-only yes` might be what you need... That does avoid some `head` warnings...\n\nIf you do **not** want to see specific `warnings`, then discover their `ID` with `--mute-id yes`, and then supply a `--mute <ID>` option, one for each message you want to suppress...\n\nOr even `--show-warnings no` to even suppress **all** warnings, show only `errors`, if any. And/or `--show-info no`... And/or `--quiet yes`... \n\nHave **not** explored **all** the options available, but it seems there should be one or more to get the `tidy` ouput you want...\n\nDoes this answer your question, or have I missed something? Thanks...\n. @justinhartman glad to hear you seem to have found your problem... do **not** pass pure `php` only files to `tidy`... it will treat them as html **markup** code...\n\nThe command `$ tidy original-index.php -o index.md --show-warnings false` may be a problem. If the intended **input** file is `original-index.php`, then it seems to be in the **WRONG** order...\n\nFrom the [API](http://api.html-tidy.org/tidy/tidylib_api_5.6.0/tidy_console.html) docs you can see the command is `tidy [[options] filename]`\n\n**Note** the input html filename comes `last`, and if **none** given `tidy` will read `stdin`...\n\nThe reading of `stdin` allows for `$ echo \"Hello World\" | tidy -q --show-warnings no` usage... try it...\n\nChange that to `$ tidy -o index.md --show-warnings false original-index.php`, and you should get what you want...\n\nAnd note that in fact you can have **multiple** `input` files, and **multiple** sets of `options`, like -\n\n```\n$ tidy [options1] [file1 [file2 ...] [options2] [file3...]]\n```\n\nThis will process `file1 ...` with the first set of `options1`, then `file3` with added `options2`, and so on...\n\nNow in your case you have given `$ tidy file1 options`, which means `tidy` will process `file1`, then read the `options`, then use `stdin` for the final **input** file...\n\nHTH...\n\nAnyway, glad you closed this... thanks...\n. @petdance thank you for the issue...\n\nAs partially discussed in #688, I see this as a **deeper** problem, but **need** feedback to decide...\n\nSimply, in a HTML5 document, I think the output with `--strict-tags-attributes yes` is **ok**, but with the current default of **no**, I think the **same** 3 messages should still be output as **warnings**, just **not** as errors... \n\nThe reasoning is, if the user does **not** request **strict** tag-attribute compliance, then they should be just **warnings**. Most browsers will still honor them, regardless of `doctype`... \n\nBut in **all** cases they should be warned to **fix** it... this output is done in the phase 2, `tidyDocCleanAndRepair` section of the code...\n\nThe W3C `nu` validator will report, `Error: The **valign/width/align** attribute on the **tr/td** element is obsolete. Use CSS instead.`... i.e in all **three** cases...\n\nOf course, change the `doctype` to say legacy 4.01, and both `tidy` and the W3C legacy validator will pass it with **no** problems... where the phase 2 `CheckHTML5` service is **not** run...\n\n> I'm expecting that tidy will not complain about `<td align>` in the bottom two cases.\n\nSo, to be clear, I think this **expectation** is `wrong`. The user should be **warned** to **not** use these 3 attributes in a HTML5 document **full stop**! \n\nThe request for `strict-tags-attributes` should only change from a **warning** to an **error**, but the 3 messages should stay... unless specifically `muted`...\n\nNow that is the coding I would look at, but **not** in a vacuum, i.e. no feedback, and what I would expect from a PR by others... thanks...\n. @petdance yes, in your advised use case of only wanting the warnings/error reported, like with `-e -q`, then it is the **same**, unless you also monitor, and have use for, the exit value of `tidy`... \n\nWith only **warnings** it will be `1`, with **errors** it will be `2`, else `0`, unless some **major** error, like can't read file, etc..., when it will be `<0`... and with `2` there will be no `html` output unless you add `--force-output yes`...\n\nThis option `strict-tags-attributes` came about in commit 2ade335, Feb 2016, maybe #350, #346, #372, #370, #711, and/or others, and reading back throught **most** of them now, while I tried to participate in some of the discussion back then, I guess I did not understand, or appreciate, **all** the changes made, and the consequences...\n\nHave created an `issue-729` branch with a **fix** as I see it... essentially, as indicated above...\n\nNow running this new `tidy` in default mode, which is `--strict-tags-attributes no`, using my [in_729.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_729.html), based on your sample, I will get, with `-q -e` -\n\n```\nline 10 column 1 - Warning: <td> attribute \"align\" not allowed for HTML5\nline 9 column 1 - Warning: <tr> attribute \"valign\" not allowed for HTML5\nline 10 column 1 - Warning: <td> attribute \"width\" not allowed for HTML5\nline 10 column 1 - Warning: <td> attribute \"align\" not allowed for HTML5\n```\n\nNow this has the small **problem** that the `align` warning is **repeated** twice, so must try to **fix** that...\n\nThen adding `--strict-tags-attributes yes` will get, as before -\n\n```\nline 9 column 1 - Error: <tr> attribute \"valign\" not allowed for HTML5\nline 10 column 1 - Error: <td> attribute \"width\" not allowed for HTML5\nline 10 column 1 - Error: <td> attribute \"align\" not allowed for HTML5\nThis document has errors that must be fixed before\nusing HTML Tidy to generate a tidied up version.\n```\n\nThen changing to `doctype` to `4.01 transitional`, [in_729-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_729-1.html), and `4.01 strict`, [in_729-2.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_729-2.html), get **no** warnings, errors, even with `--strict-tags-attributes yes`, and `--doctype strict`, as **expected**...\n\nAnd no problems using this **new** tidy on the `regression` tests, although there are some tests that include these attributes - 433021, 433666, 441508, 588061 - and maybe others...\n\nI tried one **fix** to get rid of the duplication, which is first output in `CheckHTML5`, but this then caused `regressions` on the above 4 tests, so must look harder for this...\n\nAnyway, my `issue-729` branch seems a step in the right direction... feedback, patches, PR welcome... thanks...\n. @petdance yes, I think this is a **bug**, and needs to be **fixed**\n\nThis seems **yet another case** where `tidy` needs to support the current HTML5 spec...\n\nI can read in [style](https://www.w3.org/TR/html52/document-metadata.html#the-style-element) docs `<style>` can be used `In the body, where flow content is expected.`... although there are some warning type notes about it...\n\nOne **quick** patch I **experimented** with was -\n\n```diff\ndiff --git a/src/clean.c b/src/clean.c\nindex e96dd3f..8023616 100644\n--- a/src/clean.c\n+++ b/src/clean.c\n@@ -2747,7 +2747,7 @@ static void StyleToHead(TidyDocImpl* doc, Node *head, Node *node, Bool fix, int\n                TY_(InsertNodeAtEnd)(head, node);   /* add to end of head */\n                TY_(Report)(doc, node, head, MOVED_STYLE_TO_HEAD); /* report move */\n            }\n-           else\n+           else if (!TY_(IsHTML5Mode)(doc)) /* Is. #730 - style allowed in body */\n            {\n                TY_(Report)(doc, node, head, FOUND_STYLE_IN_BODY);\n            }\n```\n\nBut maybe this is **not** the complete story... because this would allow it to be the `child` of **anything**... maybe there needs to be more checking... although, with `--fix-style-tags no` it does fix the sample given...\n\nNote such a **fix** may also mean adjusting, changing the `fix-style-tags` documentation, or its `yes` default, and/or the `MOVED_STYLE_TO_HEAD` and the `FOUND_STYLE_IN_BODY` messages...\n\nLook forward to feedback, patches, or PR... thanks...\n. @ler762 created a [PR 29](https://github.com/htacg/tidy-html5-tests/pull/29) for the `test` fix, some time ago...\n\nBaring any last minute hiccups plan to merge this, and that PR over the next few days... thanks for any feedback...\n. Oops, the PR 29 mentioned is related to another issue... sorry...\n\nSo must get around to creating a PR just for this **fix**.... Have now created [PR 31](https://github.com/htacg/tidy-html5-tests/pull/31) which should be merged simultaneously with this one... . @Kristinita thank you for the issue...\n\nIf I understand it all correctly, this is a `request` just to change the **default** `preserve-entities` option to **yes**? Have I got that right?\n\nI read the most of the arguments, I think... \n\nAt least one was from about 7 years ago, when perhaps the W3C validator commented on an unescaped ampersand, using **probably**, but as of now it will validate `<title>Sasha & title</title>` **without** a problem, so at least that argument falls down...\n\nAnd another, `htmllint` seems a `javascript` implementation, and if it has a problem with an **unambiguous** ampersand, then maybe it needs to catch up with the times ;=))\n\nPersonally, having to write `<title>Black &amp; White</title>` always seemed stupid to me, so I was happy when `&` was eventually accepted... browsers never seemed to have a problem...\n\nSo at this moment, defaulting to **no** seems the right choice. And if someone really wants otherwise, then the option is there...\n\nWhat do other think? Look forward to further feedback on this... thanks...\n. @sampablokuper thanks for the issue, I think...\n\nNow maybe this is a **good** `Feature Request`, but the first thing is to supply some small **sample** html... using `name` and `id`, to show what `tidy` presently does, with this or that config... that is `--anchor-as-name yes|no`...\n\nThen you would need to show what you expect from `--anchor-as-name auto`... i.e. how that should change the above sample outputs... \n\nThat is move this from **theory**, based on current documentations, which may or may not be the **whole** story, to simple **practical** examples... tidy currently does this... with config `????` it should do that...\n\nI have tried to read and understand the current `FixAnchors` code, which seems the only place `TidyAnchorAsName` in `tidyDocCleanAndRepair` is used, but without **samples**, and then what difference is **expected**, it is quite difficult, and time consuming...\n\nIn essence the samples only need to be one line, and we can use `--show-body-only yes` to test... although later may need some legacy doctypes to ensure everything continues to work as expected there...\n\nAt this time marking this as `Technical Support`, until it becomes **clearer** what actual `Feature` is being requested... and that can only be determined by having some **sample** html to test... thanks...\n. @sampablokuper thanks for the `samples`... quite interesting that you seem to be talking about legacy `doctypes`, i.e. `--doctype strict`, but will come back to that...\n\nSort of OT, but you are another person to comment on `Technical Support`. I have always seen this more as a **dicussion** label, and **not** as a `query`. Or at least a 2-way `query`. One where I too am trying to learn and understand **exactly** what the issue addresses, requests... sometimes so I can attach a more accurate `label`...\n\nAccordingly will try changing this to a clearer, simple idea of a `Technical Discussion`...\n\nAm doing some testing on your samples, especially `html5` versus legacy `html4` and earlier doctypes... and how `anchor-as-name` influences that... then what would say a `preserve` addition do, or aim to do... exactly what is the use case of the `preserve`, or a `no-op` as you have termed it...\n\nAlso searching and reading W3C docs on this, and running tests on the W3C validator, both `legacy` and `nu` to see its results... any W3C links welcome, more samples, etc...\n\nOne of the important considerations is that any type of `preserve` option does not restrict `tidy` from doing the **right thing**, what ever that may be in each specific case, and doctype... \n\nTidy's general aim should be to produce a valid W3C document. I know this is not always the case at present, but it tries, and can be improved... Such an option should not **force** tidy to produce invalid html... Not that anything you have suggested so far is an error, but I hope you get the idea...\n\nAt present this seems all in the `TY_(FixAnchors)(doc, ...)` service, run from the phase 2 `tidyCleanAndRepair` API, in the internal `tidyDocCleanAndRepair` service... there is already a lot of logic to be studied and understood there...\n\nThis may take some time to put together a `technical` specification on what `tidy` should try to do... specifically regarding `anchors` and the `id` and `name` attributes... and already your samples help in that, thanks, and am adding the `FR` label...\n\nSeek further feedback, discussion, examples, even patches, or a PR, etc... would be most appreciated... thanks...\n. @sampablokuper looked more at this, but still **blocked** on what is the **purpose** of this `preserve` anchor-as-name option... how does it help...\n\nIn the main will leave aside the philosophic discussion on what is, or should be, tidy's goal, but stick with help produce valid html for the user... I am sure we could just go back and forth on this forever... will try to concentrate on any pratical use, and need, of this feature request...\n\nI agree the current documentation is **not** sufficient, nor very helpful... That certainly needs to be improved... suggestions very welcome...\n\nNext it seems this option means slightly different things in html5 vs legacy html4 documents...\n\n### HTML4\n\nIn html4 W3C specs, like [links html4](https://www.w3.org/TR/html4/struct/links.html), you can find things like `name shares the same name space as the id`. I am not sure I fully understand what that means, but for sure I can set up an internal link to either a `name`, **or** an `id`... but the **preference** at the time seemed to be `name`... and certainly seek more references on this\n\nHence, I think, this option came about to ensure if the user had added an `id`, then this option, with a default of `yes`, ensured a `name` attribute would be added. And you would set this option to `no` to avoid this, if that was what you wanted...\n\nSo here you need to show a **use** case where `preserve` is **needed** in this html4 mode. \n\nEither you let tidy **fix** the document, adding `name` if missing, or you set it to `no`... \n\nWhere then is `preserve` needed? What would it do differently to `no`? html4 document samples please...\n\n### HTML5\n\nThen html5 was born, and this sort of flipped this option on it head! \n\nThe `id` was the dominent, and `name` was depreciated... see say [a-element](https://dev.w3.org/html5/spec-preview/the-a-element.html), where `name` has been omitted... and again seek more references on this...\n\nBut `tidy` has still to catch up with this html5 change... It should warn about `name`, if used, and if you swing this option as `no`,  it will silently remove it...\n\nThankfully if only `id` given in a html5 document, it seems `tidy` will not add `name`, in any circumstances...\n\nSo while this indicates some work needed for html5, and some document updates, I can **not** see the usefulness of adding a `preserve` choice... \n\nIf you disagree, what should it do in this html5 case? Again html5 document samples please...\n\n### Testing\n\nNow, to begin testing and understanding this, I have add 7 test files to my site, and could add more -\n\n 1. [in_733.html][0] - html5 - warn id name no match\n 2. [in_733-1.html][1] - html5 - only id\n 3. [in_733-2.html][2] - html4 - warn id and name no math\n 4. [in_733-3.html][3] - html4 - link targs id and name\n 5. [in_733-4.html][4] - html5 - only id and name same\n 6. [in_733-5.html][5] - html5 - only id - same as 2.\n 7. [in_733-6.html][6] - html5 - link targs id and name\n\nThese files can be viewed as html, by adding `http://htmlpreview.github.com/?` to the url.\n\n[0]: https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_733.html \n[1]: https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_733-1.html \n[2]: https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_733-2.html \n[3]: https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_733-3.html \n[4]: https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_733-4.html \n[5]: https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_733-5.html \n[6]: https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_733-6.html \n\nI am really trying to find a **valid use case** for this `request`, for the addition of a sort of `no-op` option...\n\nHope you, or others, can assist... thanks...\n. @sampablokuper what `application`, consumer of `html`, are you talking about?\n\nOk, at least you are starting to narrow it down, and that is for HTML4...\n\nAnd have you tested XHTML? Give an example where `tidy` is in error. In most cases XHTML is handled differently in `tidy`...\n\nWhile I have no problem reading `mozilla`, and/or `w3schools` docs, `tidy` tries to apply W3C recomendations...\n\nThis issue is about an `anchor`, `<a ...>` tag, not about other tags. If tidy is in error on **any** of these others, then please open a **separate** issue, and provide **sample** html that you think `tidy` handles incorrectly... thanks...\n\nAnd just to be clear, adding a `preserve` would be more difficult. Read would need a new `PickListItems` table. A simpler change from a `Boolean` option to an `AutoBool`, which allows a 3rd option, `auto`, would be much easier. The `auto` could signal a sort of `no-op` in this case, and be more backward compatible...\n\nSo really no **new** information added... and I am not yet convinced that such a `change` is required... but I am just **one** voice... and I could be wrong...\n\nNow all that means is that I am not personally interested in coding such a change... so left to me this would presently be a `Won't Fix` label... but...\n\nIf you, or others, want to present a PR, or further **feedback**, I will **try** to listen for a stronger **use** case... thanks...\n. @sampablokuper thanks for the issue...\n\nIf I am reading this correctly, you are asking for an option to **allow** repeated attributes. Have I got this right? \n\nIf an attribute is repeated, either with the same value, or a different value, why would you want to `preserve` this **invalid** html? What **use** case is there for this?\n\nI can see from your comments in #733, `user should be able to selectively turn those filters on or off`, thus avoiding `tidy` **fixing** the document. \n\nThat idea, taken to its extreem, suggests you want to be able to configure `tidy` to effectively **do nothing**. Why use `tidy` if you want that?\n\nIt is simply **not** sufficient to theorize that in any, and every `yes/no` otpion should have a 3rd, sort of `no-op` choice... at least I am not seeing that yet... maybe I misunderstand something...\n\nSo again I would ask for sample **use** cases... thanks...\n. @sampablokuper thanks for the issue...\n\nI looked at this, and while everything is possible, this would be **quite** difficult...\n\nThe main thing is that `tidy` presently collects `tags` from the stream in **lowercase**, and the **original** case of the tag is **lost** forever...\n\nThere are just so many code paths where `tidy` does a case compare of tags, like once in a `<html>` tag it is seeking a `</html>` tag, and so on, and on, and on, using a simple, fast, case compare, like `strcmp`, although it uses its own internal `TY_(tmbstrcmp)`...\n\nYes, all those checks could be made without case, it does have its own `TY_(tmbstrcasecmp)`, **or** tidy could **also** collect and keep the **actual** user tags, by expanding its `node` structure, but either way this would be quite a **big** job...\n\nSo yes, this seems a reasonable, valid enhancement, although, as mentioned elsewhere, would suggest using the `AutoBool` 3rd option of `auto` for this, rather than a **new** option type, which could then use say `no-op`, or `preserve`...\n\nIs the **use** case worth this effort... thanks...\n. @Kristinita thank you for the issue, but this is **not** an encoding **bug**, but a `tidy` **feature** ;=))\n\nI know it because I read code - see [config.c:945](https://github.com/htacg/tidy-html5/blob/next/src/config.c#L945)... `TY_(ParseConfigFileEnc)( doc, file, \"ascii\" );`...\n\nThen I remembered I had seen this in the `tidy` docs... took some time to find it... but see [tidyLoadConfig](http://api.html-tidy.org/tidy/tidylib_api_next/group__Basic.html#ga2dec710c0d4927e76a7b0d338b11693a)... and I hope maybe it is mentioned elsewhere...\n\nAmd this has been brought up at least once before... see #201 ... and maybe others... as mentioned there, `It has always been this way in Tidy!`...\n\nNow since all the internal `options` are **ASCII** encoded, it does not make sense to support other than **ASCII**, even in what is just a **comment** line...\n\n`Tidy` does support a good number of `input` and `output` character encodings, but **not** for it's config file contents... sorry...\n. pushed in `issue-738` branch for testing...\n\nFeedback welcome... thanks.... For testing, have added [in_738.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_738.html), and [in_738-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_738-1.html) test files... the first passes W3C `nu`, the second fails legacy validator...\n\nA Tidy-5.7.16I738.exe build will do almost nothing to `in_738.html` in html5 mode, and flags errors in `in_738-1.html`... \n\nIn [reg.tests](https://github.com/htacg/tidy-html5-tests) shows two diffs on case [505770](https://github.com/htacg/tidy-html5-tests/blob/next/cases/testbase/case-505770.html) & [656889](https://github.com/htacg/tidy-html5-tests/blob/next/cases/testbase/case-656889.html) ...\n\nBoth now have `indented` `<textarea>` text... do browser strip leading line space... or else this needs to be **fixed**... i.e. no indent, treat CDATA ish... thought this had been **fixed**... TODO: \n\nBut seems a big improvement in handling the `<textarea>` quite loosely in html5, virtually what is there, and keeping the `ParseText` for html4, which baulks at most html tag intrusions, as does the legacy validator...\n\nAppreciate checkout `issue-738` branch, and test, report... thanks...\n. @jengelh thank you for the issue, and the code to duplicate... and the debugging... \n\nThis issue was addressed in #656, and closed in PR #661... upgrade to at least version 5.7.1 plus...\n\nCan you confirm it has been fixed... thanks...\n. @ogolovanov thanks for the issue...\n\nThat `tidy_test.html` has **errors** so no html will be output... so your result is expected...\n\nAdd `--force-output yes` to your config, and you should get the something...\n\nAnd hope the web site adopts a better generator of html web pages... It has no `DOCTYPE`, so tidy will choose html5... has lots of tivial warnings... still using legacy `<table>` elments, to get format... should use css... tidy does its best to render a clean document... only if you add `--force-output yes`...\n\nHTH\n\nRegards, Geoff.\n. @ler762, thanks for the +1, and to `all`, but I am not getting any 'younger!' and spend a **lot** less time with my computer, so sadly no longer have the time for `tidy`, that I used to... so this, and other `tidy` matters/things are unlikely to be actioned by me anytime soon... sorry..\n\nSo unless this work is undertaken by the other 'admins', I suppose `tidy` should look for **new** `maintainers`... any offers, suggestions, ... ?\n\nI may be able to supply a win64 binary release, after the release is all setup...\n. @balthisar, I do not know if we **need** a 5.8 release... a quick review shows some 65 commits since the last, so this is positive... but there are outstanding PRs, some new, which I have not reviewed, but there also remains 70 plus issues, unresolved... so I do not know if it is **ready**... but would support one, with help...\n\n@ler762, yes, the release process is mainly git/github, and it takes time to understand all that is involved... mainly a number of little steps, some of which need to be done in a timely manner, to set the version, the tag, and the branches...\n\nBut ok, if we are to proceed with **The Release 5.8.0**, as usual I have prepared a rough list...\n\n#### Preparation:\n\n - Create 5.10 milestone - **Done**\n - Decision on PR's to include, bumping version.txt, accordingly...\n - Change milestone of all excluded this time issues to 5.10, or indefinite...\n\n#### The Release:\n\n 1. Update version.txt to 5.8.0, and date...\n 2. Create git TAG 5.8.0, create branch release/5.8, and push\n 3. Update README/vershist.log\n 4. Generate release 5.8.0.html\n - Generate release binaries\n - Add binaries\n - Add api docs\n - Update web pages \n - Other things?\n\n#### Post:\n\n - Update master branch to release\n - Update next version.txt to 5.9.0\n - Add more binaries...\n\nMaybe the list needs to be filled out... I have some scripts for the updating of vershist.log, and gen. of 5.8.0.html release notes, see [rel.sample](http://geoffair.org/tmp/5.8.0.html), as advised... see #334, #394, #471, maybe others..., so could do 1 thru 4, as usual... when/if the release date is definitively decided, and agreed... most dates are ok with me, except tomorrow, 30/8/2018 - will be out all day...\n\n. Have arbitrarily set this weekend... Sept 1-2, 2018..... @ler762 **no**, no decision on PRs, and outstanding issues done by me... that is what I expect feedback on... some sort of review, as a yes/no list...\n\nIt is that decision which will begin to decide and agree a **release date**, if there is to be one...\n\nSorry, if the resetting of the 5.7 milestone confused the issue... forget that...\n\nIn my view of the past, the only PR I would include at this time is #731, #726, and note it includes regression test matching merge... but thank you @ler762 for conducting the tests with `next`... good to have confirmation of what I see in Windows for 5.7.16, since April...\n\nI do **not** have time to review the 2 other recent PRs ... extra const #746 PR #747 and snap packaging #748 PR #749... \n\nAnd since no current agreed **fixes** are available for many of the issues, in my view they would all be assigned another milestone... that is the release would almost be the current `next`... but I am just one voice... so for me it is just a case of choosing a suitable date...\n\nThis weekend turned out bad for me anyway... having a RAM upgrade problems in one of my main machines, which will reach into tomorrow now... so I am for later days/weeks/mth target date suggestions...\n. Merged the #753 Fix type in the **new** `RELEASE.md`, but accidentally added with an Is #752 commit message...\n\nAs to a target release date, now I would suggest that be after the **interesting** `can of worms` exposed in exploring issue #752 - the `mute` option, and more... full satisfactory solution seems near, else move it to next release...\n. @blacktrash sorry for the delay, but was hoping someone else would pick this up...\n\nThe only way I can duplicate your `unexpected` output, is to add `--vertical-space yes` to the `tidy` configuration... tested with `5.6.0` release, through to **next** `5.7.16`...\n\nThere **must** be some default configuration in play, otherwise there should be a `<meta name=\"generator\" content=\"<tidy-version>\">` in both the expected, and unexpected outputs you have shown...\n\nI do agree there is a `strangeness` about why that `vertical-space: yes` option only effects when the paragraph content is solely a `anchor`, a `link`... and **not** if mixed with other text content...\n\nJust an extra note about the [vertical-space](http://api.html-tidy.org/tidy/quickref_next.html#vertical-space) option... original `tidy`, sometimes referred to as `classic` mode in the code, had lots, and **lots** of vertical space... too much for many... later developers sort to **reduce** these, hence the current default of `vertical-space: no`... and where `vertical-space: auto` became almost **no** vertical space at all - a sort of single line compressed html stream...\n\nAnyway, appreciate patches, PR to make this **consistent** in each type of paragraph case... thanks...\n. @oerdnj, @hosiet, all, sorry for the delay... I was hoping a unix person, with more understanding of unix shared libraries, and their .so version, would pick this up...\n\nAs suggested, the so called **missing** `tidyAttrIs[name]`, `tidyAttrGet[name]`, and `tidyNodeIs[element]` functions were marked as **deprecated** as far back as about 2008, or before, and alternative API functions given... any package still using them abt 10 years later has to be redone... quite unlikely there would be any package breakage otherwise...\n\nSince its beginning `libTidy` has used a MACRO, `TY_(name)(...)` to `hide` non-public functions... just internally used across objects of the library... these are prefixed with `prvTidy`, making it clear they are not public functions... they, and the macro, are **not** included in the published `tidy.h` header... any package using `libTidy` should **not** contain these functions, and deserves to break if they do...\n\nAs you may know, the MS Windows compiler/linker handles this `hiding` by not including them in the important **import** library, `.lib`, that accompanies the `.dll` shared library, through the `__declspec(dllimport|dllexport)` macro, that is `TIDY_EXPORT`... \n\nSo maybe someone with unix understanding should/could do something similar for a `gcc` compile/link... they are **all** declared as `TY_(name)`...\n\nGiven this explanation, is it really necessary to bump the `SOVERSION` to `6`?\n\nAnyway, look forward to more feedback...\n. @hosiet WOW, I am not really the person to be discussing this... The process of creating a `libtidy.so` link to a `libtidy.so.$SOVERSION`, which then links to a `libtidy.so.${LIBTIDY_VERSION}`, which is the actual shared library code, does **not** apply to Windows native, and while I understand some the history of this, it is just **not** my cup of tea ;=))\n\nIt also seem quite **normal** for the `SOVERSION` to be the **same** as the `${TIDY_MAJOR_VERSION}`... yes I can see decoupling them is possible, and experimented with something like -\n\n```diff\ndiff --git a/CMakeLists.txt b/CMakeLists.txt\nindex 631f0fd..227e1ea 100644\n--- a/CMakeLists.txt\n+++ b/CMakeLists.txt\n@@ -405,12 +405,15 @@ if (BUILD_SHARED_LIB)\n     if (UNIX AND APPLE)\n         set(CMAKE_MACOSX_RPATH 1)\n     endif ()\n+    if (NOT TIDY_SO_VERSION)\n+        set(TIDY_SO_VERSION ${TIDY_MAJOR_VERSION})\n+    endif ()\n     add_library ( ${name} SHARED ${CFILES} ${HFILES} ${LIBHFILES} )\n     set_target_properties( ${name} PROPERTIES \n                                    OUTPUT_NAME ${LIB_NAME} )\n     set_target_properties( ${name} PROPERTIES\n                                    VERSION   ${LIBTIDY_VERSION}\n-                                   SOVERSION ${TIDY_MAJOR_VERSION} )\n+                                   SOVERSION ${TIDY_SO_VERSION} )\n     set_target_properties( ${name} PROPERTIES \n                                    COMPILE_FLAGS \"-DBUILD_SHARED_LIB\" )\n     set_target_properties( ${name} PROPERTIES \ndiff --git a/build/cmake/build-me.sh b/build/cmake/build-me.sh\nindex 61bdbdd..a3d7317 100755\n--- a/build/cmake/build-me.sh\n+++ b/build/cmake/build-me.sh\n@@ -35,8 +35,9 @@ TMPOPTS=\"\"\n ##############################################\n ### ***** NOTE THIS INSTALL LOCATION ***** ###\n ### Change to suit your taste, environment ###\n-TMPINST=\"/usr\"\n+TMPINST=\"$HOME/projects/html_tidy\"\n TMPOPTS=\"$TMPOPTS -DCMAKE_INSTALL_PREFIX=$TMPINST\"\n+TMPOPTS=\"$TMPOPTS -DTIDY_SO_VERSION=6\"\n ##############################################\n\n ### Accept user argument\n```\n\nThis makes it user settable, but is that what we want... some distributions deciding to, and some more carefully weighing this up, and leaving it as we chose, the **default** `${TIDY_MAJOR_VERSION}`... it is compatible to the previous release...\n\nUsed this would result in an install as follows, perhaps a little confusing to some -\n\n```\nlrwxrwxrwx 1 geoff geoff      12 Oct 22 20:17 libtidy.so -> libtidy.so.6\nlrwxrwxrwx 1 geoff geoff      17 Oct 22 20:17 libtidy.so.6 -> libtidy.so.5.7.16\n-rwxrwxr-x 1 geoff geoff 1078624 Oct 22 20:17 libtidy.so.5.7.16\n```\n\nUnfortunately, I do not feel it is the time to bump the `${TIDY_MAJOR_VERSION}` to `6`... this seems to promise, suggest, some **big** changes, which are not present in this release... and thus subsequent up to the current `next` branch... but could be persuaded...\n\nWhat do others think? I need more **feedback**... thanks...\n\nBut this does **not** yet address the `privTidy` functions... changes in the internal arrangement and use of library only functions must **not** cause this `SOVERSION` change... ever... so still need a solution to that... maybe we can default to hiding **all** functions externally, and use the `TIDY_EXPORT` to make the public API visible... as done in the Windows import library, so this only applies to UNIX, so need so **help** to do this... patches, PR, etc appreciated...\n. @ler762, as @cmb69 points out, changes to console tidy.c **sample** code have nothing to do with `libtidy`, **SOVERSION**, and do not appreciate hijacking threads to push/discuss/comment **unrelated** matters...\n\n@cmb69 thanks for the `libgd` link... yes I have **several** examples of sort of how to `hide` in gcc, but would really appreciate if someone with more feeling for unix offered tested patches, or even a PR... I sort of need to see how big a deal this is...\n\nLike the import library, in Windows, of the `.lib/.dll` **pair**, already does, only public API functions should show externally in a shared `.so` library... who can help with this... thanks...\n. @cmb69, thank you for pointing this out... yes the internal `strlen` service will stop at the first 0 `byte`, so can fail with a utf16 string... \n\nMaybe this is suggested by the [tidyParseString(TidyDoc,ctmbstr)](http://api.html-tidy.org/tidy/tidylib_api_next/group__Parse.html#ga50c02fa244dcd120ae339719c2132ff9) uses a string **type** `ctmbstr`, which is based on a `char`, but could certainly be documented better...\n\n@ekalchev as pointed out, PHP uses `tidyParseBuffer()`, with a `TidyBuffer`, which supplies **length**, is used, and provide the desired character encoding is specified should work as expected with all supported char encoding...\n\nCertainly look forward to feedback on documentation improvements... that is in the `tidy.h` doxygen comments... suggestions, patches, PR, comments very welcome... thanks...\n. @geoffleach1 output shown does not look like `tidy`... please explain...\n. @geoffleach1 well, if you can not now duplicate the problem, then there can be no fix for `tidy` ;=)) no need to be sorry...\n\nClosing this until then... or open a new issue, with full details, sample input, tidy version, config, setup, output, etc... thanks...\n. @drizt while I do not get this warning, **agree** it does appear an accidental duplication of the `const` qualifier... `ctmbstr` is already type-defined with a `const`...\n\nWas just about to merge #767, but noted this should be repeated in `libtidy.c`, **and** the matching by name internal `TY_()` calls in `language.c|h`...\n\nThis gives a full fix as follows - have I missed any other cases?\n\n```diff\ndiff --git a/include/tidy.h b/include/tidy.h\nindex c701890..7e30216 100644\n--- a/include/tidy.h\n+++ b/include/tidy.h\n@@ -2092,13 +2092,13 @@ TIDY_EXPORT const tidyLocaleMapItem* TIDY_CALL getNextWindowsLanguage( TidyItera\n  ** @param item An instance of tidyLocalMapItem to query.\n  ** @result Returns a string with the Windows name of the mapping.\n  */\n-TIDY_EXPORT const ctmbstr TIDY_CALL TidyLangWindowsName( const tidyLocaleMapItem *item );\n+TIDY_EXPORT ctmbstr TIDY_CALL TidyLangWindowsName( const tidyLocaleMapItem *item );\n\n /** Given a `tidyLocalMapItem`, return the POSIX name.\n  ** @param item An instance of tidyLocalMapItem to query.\n  ** @result Returns a string with the POSIX name of the mapping.\n  */\n-TIDY_EXPORT const ctmbstr TIDY_CALL TidyLangPosixName( const tidyLocaleMapItem *item );\n+TIDY_EXPORT ctmbstr TIDY_CALL TidyLangPosixName( const tidyLocaleMapItem *item );\n\n /** @}\n  ** @name Getting Localized Strings\ndiff --git a/src/language.c b/src/language.c\nindex fd89730..3907d9e 100644\n--- a/src/language.c\n+++ b/src/language.c\n@@ -593,7 +593,7 @@ const tidyLocaleMapItemImpl *TY_(getNextWindowsLanguage)( TidyIterator *iter )\n /**\n  *  Given a `tidyLocalMapItemImpl, return the Windows name.\n  */\n-const ctmbstr TY_(TidyLangWindowsName)( const tidyLocaleMapItemImpl *item )\n+ctmbstr TY_(TidyLangWindowsName)( const tidyLocaleMapItemImpl *item )\n {\n     return item->winName;\n }\n@@ -602,7 +602,7 @@ const ctmbstr TY_(TidyLangWindowsName)( const tidyLocaleMapItemImpl *item )\n /**\n  *  Given a `tidyLocalMapItemImpl, return the POSIX name.\n  */\n-const ctmbstr TY_(TidyLangPosixName)( const tidyLocaleMapItemImpl *item )\n+ctmbstr TY_(TidyLangPosixName)( const tidyLocaleMapItemImpl *item )\n {\n     return item->POSIXName;\n }\ndiff --git a/src/language.h b/src/language.h\nindex c8542b5..7ff4d18 100644\n--- a/src/language.h\n+++ b/src/language.h\n@@ -191,12 +191,12 @@ const tidyLocaleMapItemImpl *TY_(getNextWindowsLanguage)( TidyIterator* iter );\n /**\n  *  Given a `tidyLocalMapItemImpl, return the Windows name.\n  */\n-const ctmbstr TY_(TidyLangWindowsName)( const tidyLocaleMapItemImpl *item );\n+ctmbstr TY_(TidyLangWindowsName)( const tidyLocaleMapItemImpl *item );\n\n /**\n  *  Given a `tidyLocalMapItemImpl, return the POSIX name.\n  */\n-const ctmbstr TY_(TidyLangPosixName)( const tidyLocaleMapItemImpl *item );\n+ctmbstr TY_(TidyLangPosixName)( const tidyLocaleMapItemImpl *item );\n\n /**\n  *  Initializes the TidyIterator to point to the first item\ndiff --git a/src/tidylib.c b/src/tidylib.c\nindex 31754ab..823ec3b 100644\n--- a/src/tidylib.c\n+++ b/src/tidylib.c\n@@ -2644,13 +2644,13 @@ const tidyLocaleMapItem* TIDY_CALL getNextWindowsLanguage( TidyIterator* iter )\n }\n\n\n-const ctmbstr TIDY_CALL TidyLangWindowsName( const tidyLocaleMapItem *item )\n+ctmbstr TIDY_CALL TidyLangWindowsName( const tidyLocaleMapItem *item )\n {\n     return TY_(TidyLangWindowsName)( (tidyLocaleMapItemImpl*)(item) );\n }\n\n\n-const ctmbstr TIDY_CALL TidyLangPosixName( const tidyLocaleMapItem *item )\n+ctmbstr TIDY_CALL TidyLangPosixName( const tidyLocaleMapItem *item )\n {\n     return TY_(TidyLangPosixName)( (tidyLocaleMapItemImpl*)(item) );\n }\n```\n\nHopefully someone will patch and test, and report - it compiles fine in WIN32.X64 - but need others to **confirm**...\n\nThen maybe the additional fixes could be added to the PR, or a separate simultaneous PR... thanks...\n. @drizt WOW. adding `-Wextra`, like `$ cmake -DCMAKE_C_FLAGS=-Wextra ...` increased the **WARNING** lines to nearly 2,000! YUK! of course many are repeated...\n\nAnd there are about 160 lines in my log, with the `warning: type qualifiers ignored ...`, that you are reporting... and includes the above 8 cases in the patch...\n\nThe question becomes should we be **worried** about most of these?\n\nOne very common, is like `warning: missing initializer for the field 'pdflt'...` - yes, we do have some structures, where not all initializes have been given, and have always understood the value used would be `null`, but I do not think that is important, since we do not depend on its init value anywhere in the code... but maybe???\n\nOn the other hand, in the **specific** case you mention, it does seem wrong to repeat the `const` like that... I think that is just an honest typo type error... and should be **fixed**... in all 8 cases...\n\nLook forward to further feedback on all the other warnings that the `-Wextra` gcc flag exposes... maybe as separate issues...\n\nNow, the above patch could be included in your PR #747, if you get the chance, and really appreciate the help, especially with `Clang` testing...\n\n**or** I could merge, and **add** the others later... \n\nNow that I have seen more on this issue, will try to get to at least this `const` fix soonest... thanks...\n. @drizt while there still remains some warnings with `-DCMAKE_C_FLAGS=-Wextra`, this problem has certainly been **fixed** in the public `tidy.h` header...\n\nHad to also make some fixes in the matching `*.c` declarations, since MSVC140 flags this as an **error**...\n\nThanks for the issue and PR...\n . This looks fine to me... will merge shortly...\n\nAny last minute feedback... thanks.... As commented in #746, maybe this PR should be extended to another 6 cases of the repeated `const`...\n\nHope you get the chance to add these... thanks.... @dse had to build a special Windows tidy, add `-DENABLE_CONFIG_FILES:BOOL=YES`, and then enhance the `ExpandTilde(...)` service to see this... \n\nThat problem is that the service used to read the config file, in `TY_(DefineMutedMessage(...)` calls **Report**\n\n```\n    /* Must come *after* adding to the list, in case it's muted, too. */\n    TY_(Report)( doc, NULL, NULL, STRING_MUTING_TYPE, name );\n```\n\nThis will bump the `case TidyConfig: doc->optionErrors++; break;` and will output the `Loading config file \"~/.tidyrc\" failed, err = 1`...\n\nThis it the patch to begin the **fix** in Windows -\n\n```diff\ndiff --git a/src/config.c b/src/config.c\nindex f5e8379..085f4b6 100644\n--- a/src/config.c\n+++ b/src/config.c\n@@ -877,8 +877,26 @@ static ctmbstr ExpandTilde( TidyDocImpl* doc, ctmbstr filename )\n     if (filename[1] == '/')\n     {\n         home_dir = getenv(\"HOME\");\n-        if ( home_dir )\n+        if (home_dir) {\n             ++filename;\n+        }\n+#ifdef _MSC_VER \n+        else if (strlen(filename) >= 3) {   /* at least '~/+1' */\n+            /* no HOME env in Windows - got for HOMEDRIVE=C: HOMEPATH=\\Users\\user */\n+            char * hd = getenv(\"HOMEDRIVE\");\n+            char * hp = getenv(\"HOMEPATH\");\n+            if (hd && hp) {\n+                ctmbstr s = TidyDocAlloc(doc, _MAX_PATH);\n+                strcpy(s, hd);\n+                strcat(s, hp);\n+                strcat(s, \"\\\\\");\n+                strcat(s, &filename[2]);\n+                return s;\n+            }\n+\n+        }\n+#endif /* _MSC_VER */\n+\n     }\n #ifdef SUPPORT_GETPWNAM\n     else\n```\n\nBut that does nothing about the error output `Loading config file \"~/.tidyrc\" failed, err = 1`... just lets me see it, debug it, in Windows...\n\nNeed to understand more... this happens in `TY_(DeclareListItem)( doc, option, buf );`... how is this by passed if the parameter is on the command line... anyway, beginning to look... any help, pointers, feedback would be great...\n. @ler762 thanks for looking at the patch... in this case that could probably be `_WIN32` or `WIN32`, prefer the latter, since expanding a tilde might be needed... but if you in a bash type cygwin/msys2 prompt, this may aready being done... but that is way off this topic...\n\nOk, this is **NOT** just the `.tidyrc` parsing problem... but is there also in a few other config file loads... which monitor the return code...\n\n```\n    /*\n     * Look for default configuration files using any of\n     * the following possibilities:\n     *  - TIDY_CONFIG_FILE - from tidyplatform.h, typically /etc/tidy.conf\n     *  - HTML_TIDY        - environment variable\n     *  - TIDY_USER_CONFIG_FILE - from tidyplatform.h, typically ~/tidy.conf\n     */\n\n#ifdef TIDY_CONFIG_FILE\n    if ( tidyFileExists( tdoc, TIDY_CONFIG_FILE) )\n    {\n        status = tidyLoadConfig( tdoc, TIDY_CONFIG_FILE );\n        if ( status != 0 ) {\n            fprintf(errout, tidyLocalizedString( TC_MAIN_ERROR_LOAD_CONFIG ), TIDY_CONFIG_FILE, status);\n            fprintf(errout, \"\\n\");\n        }\n    }\n#endif /* TIDY_CONFIG_FILE */\n\n    if ( (cfgfil = getenv(\"HTML_TIDY\")) != NULL )\n    {\n        status = tidyLoadConfig( tdoc, cfgfil );\n        if ( status != 0 ) {\n            fprintf(errout, tidyLocalizedString( TC_MAIN_ERROR_LOAD_CONFIG ), cfgfil, status);\n            fprintf(errout, \"\\n\");\n        }\n    }\n#ifdef TIDY_USER_CONFIG_FILE\n    else if ( tidyFileExists( tdoc, TIDY_USER_CONFIG_FILE) )\n    {\n        status = tidyLoadConfig( tdoc, TIDY_USER_CONFIG_FILE );\n        if ( status != 0 ) {\n            fprintf(errout, tidyLocalizedString( TC_MAIN_ERROR_LOAD_CONFIG ), TIDY_USER_CONFIG_FILE, status);\n            fprintf(errout, \"\\n\");\n        }\n    }\n#endif /* TIDY_USER_CONFIG_FILE */\n\n\n    /*\n     * Read command line\n     */\n\n    while ( argc > 0 )\n```\n\nIf using `int TY_(ParseConfigFileEnc)( TidyDocImpl* doc, ctmbstr file, ctmbstr charenc )`, it exits with a compare of the `uint opterrs = doc->optionErrors;` at the start to the end of the parse ... oops, triggers bad config file parse, because of a `Config: msg` output, in `case TidyConfig:` bumps `doc->optionErrors++;` -\n\n```\n /* any new config errors? If so, return warning status. */\n    return (doc->optionErrors > opterrs ? 1 : 0);\n```\n\nCommand line option uses `tidyOptParseValue(tdoc, argv[1]+2, argv[2])`, to `return TY_(ParseConfigOption)( impl, optnam, val );`, ` status = TY_(ParseConfigValue)( doc, option->id, optval );`, and command line `-config tidy.conf` uses the same parser but **ignores** the return from `tidyLoadConfig( tdoc, argv[2] );`, so avoid the problem...\n\nStill digging... any pointers very welcome...\n. @ler762 thanks for the feedback... \n\nI do not understand `the config file checking leaves much to be desired`! You need to express more on what you **desire** it to do differently ;=)) ... that is, point out the code error you see, if any... it's quite complicated to follow in parts, but does its job, generally...\n\nYes, we are talking about an API service, [tidyLoadConfig](http://api.html-tidy.org/tidy/tidylib_api_next/group__Basic.html#ga2dec710c0d4927e76a7b0d338b11693a), which advertises `Returns 0 upon success, or any other value if there was an error.`, but **no** it does not, if the config file contains `mute: MISSING_DOCTYPE`, ... \n\nSo agree there maybe a logic question here...\n\nChain: `tidyLoadConfig` - `ParseConfigFile` - `ParseConfigFileEnc)( doc, file, \"ascii\" )` - `uint opterrs = doc->optionErrors;`, and then returns any new `optionErrors`. \n\nWhy does output of a `Config: information message...` bump this `optionErrors`? It does not seem like an **error**... just advice `got your message` successfully...\n\nBut as you point out, if the config file contains a **bad** option, like `badopt: val`, again `optionErrors` gets bumped... as it should... I must check lines that do not have a colon... maybe they are silently skipped...\n\nSo this points to at least, an adjustment/enhancement in the `{ TC_MAIN_ERROR_LOAD_CONFIG, 0, \"Loading config file \\\"%s\\\" failed, err = %d\" },`... and maybe the API docs...\n\nMaybe something like `\"Loading config file \\\"%s\\\" failed, or had option parsing errors as indicated. err = %d\"`, or the like... \n\nIn the 3 cases shown in the above code, the **failed** to open the file, would already be reported, so could be just `\"Config: file \\\"%s\\\" had option parsing errors as indicated, if not muted. err = %d\"`...\n\nBut the problem I see is that the `mute` is more an informative message, and maybe should be excluded from bumping `optionErrors`...\n\nAlternatively, these 3 additional error message outputs could be removed from `tidy.c`... we have already checked the file exists, and the return of the `tidyLoadConfig` be **ignored**, ie not checked... like it is in another case... `-config tidyrc` command line, uses just `tidyLoadConfig( tdoc, argv[2] );`, no **return** check...\n\nFor the API docs, suggest at least -\n\n```diff\ndiff --git a/include/tidy.h b/include/tidy.h\nindex c701890..c1bbd41 100644\n--- a/include/tidy.h\n+++ b/include/tidy.h\n@@ -481,16 +481,16 @@ TIDY_EXPORT void TIDY_CALL        tidyGeneralInfo( TidyDoc tdoc );\n\n\n /** Load an ASCII Tidy configuration file and set the configuration per its\n- ** contents.\n- ** @result Returns 0 upon success, or any other value if there was an error.\n+ ** contents. Reports config option errors, which can be filtered.\n+ ** @result Returns 0 upon success, or any other value if there was an option error.\n  */\n TIDY_EXPORT int TIDY_CALL         tidyLoadConfig(TidyDoc tdoc,      /**< The TidyDoc to which to apply the configuration. */\n                                                  ctmbstr configFile /**< The complete path to the file to load. */\n                                                  );\n\n /** Load a Tidy configuration file with the specified character encoding, and\n- ** set the configuration per its contents. \n- ** @result Returns 0 upon success, or any other value if there was an error.\n+ ** set the configuration per its contents.  Reports config option errors, which can be filtered.\n+ ** @result Returns 0 upon success, or any other value if there was an option error.\n  */\n TIDY_EXPORT int TIDY_CALL         tidyLoadConfigEnc(TidyDoc tdoc,       /**< The TidyDoc to which to apply the configuration. */\n                                                     ctmbstr configFile, /**< The complete path to the file to load. */\n```\n\nIdeas, feedback welcome...\n\nOT: Just checked in my msys2 bash prompt and 1. HOME is defined, so the WIN32 code would not be required, and 2. the tilde has already been expanded, so the WIN32 code would not be required. But maybe there is a case for a native mingw-x64 build, like `__MINGW32__`... Will try to check that... Meantime, is `WIN32` also defined?\n. PS: Actually the 3 cases in `tidy.c` already checks for the files existance, and ignores an `access` failure, so we are not dealing with a missing file case... I am starting to feel that ignoring the return code in this `sample` code is the best option... but feedback welcome...\n. @ler762 - Thanks for looking deeper into the code... the best **clue** was to look at `message->level`... \n\nAgree 100% with `having  `TY_(ParseConfigFileEnc)` always return 0 isn't the way to go`. That is, **no change** in the API, except perhaps some improvements in the documentation... maybe should say clearly valid config lines, except `mute`, are silently marked in the active config related to the document created... no success message output... or something... but have pushed a small change...\n\nUsing a html input, `echo \"hello world\" > hw.html`... then `tidy hw.html`... and a valid config file contents of -\n\n```\nC:\\Users\\user>type .tidyrc\nmute: MISSING_DOCTYPE\nmute: TAG_NOT_ALLOWED_IN\nmute: PREVIOUS_LOCATION\nmute: INSERTING_TAG\nmute: MISSING_TITLE_ELEMENT\nmute: STRING_CONTENT_LOOKS\nshow-info: no\n```\n\nNow `mute: <valid id>` is presently reported as `TY_(Report)( doc, NULL, NULL, STRING_MUTING_TYPE, name );`... that is controlled in the `static struct _dispatchTable[]`... presently set at `TidyConfig` level... consider making that `TidyDialogueInfo`, or even `TidyInfo`...\n\n```\nF:\\Projects\\tidy-html5\\build\\temp-752>Release\\tidy.exe C:\\Users\\user\\hw.html\nmessages of type \"MISSING_DOCTYPE\" will not be output\nmessages of type \"TAG_NOT_ALLOWED_IN\" will not be output\nmessages of type \"PREVIOUS_LOCATION\" will not be output\nmessages of type \"INSERTING_TAG\" will not be output\nmessages of type \"MISSING_TITLE_ELEMENT\" will not be output\nmessages of type \"STRING_CONTENT_LOOKS\" will not be output\nTidy found 4 warnings and 0 errors!\n\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Windows version 5.7.16.I752\">\n<title></title>\n</head>\n<body>\nhello world\n</body>\n</html>\n```\n\nMaybe that is ok... then trying `TidyInfo` gets `Info: messages of type \"MISSING_DOCTYPE\" will not be output`... so this is ok too... \n\nIs this message a `Dialogue: Non-document related information`, or `Report: Information about markup usage`... seems in this case prefer the latter, but not sure why...\n\nBut this does not address the config error cases... like `noopt: val`, but have slightly improved removing `failed`, replacing it with `problems`... but still see ignoring this return, like we presently do more 1 in 4 cases in `tidy.c`... I do not see this being extended to the potential 3 config file reads done **before** the command line as a problem... but there is an argument for keeping it, but better documenting that potentially many options could have been silently successfully parsed from the config file...\n\nI can now see if the line does **not** contain a colon, `:`, it is quietly discarded... should such a line be flagged as a `TidyConfig` error? half anf half - do not like silently accepting, since we do have a comment line indicators, `#` or `//`... user should be warned that a certain line failed, so they can fix it...\n\nHave pushed some of these fixes to the `issue-752` branch, so others can try, and advise preference... \n\nStill exploring more here... feedback very welcome...\n\nOT: hope closed ;=))\n. @ler762 again thanks for checking out `issue752` branch, building and testing...\n\n> question: how to supress the Info: message?\n\nA quick answer is, put as the first line, in the config file, `~/.tidyrc`, the option `show-info: no`. In fact I have moved it to the top in the above sample config...\n\nRemember these, potentially 3 config files, are read **BEFORE** the command line is parsed, so nothing on it, like `-q`, `--show-info no`, ... will have any effect on these already issued messages, like `Info: blah blah ...`, for `mute`, and errors like `rubber: duck` shows `Config:unknown option: rubber`, ...\n\nIt seems an error like `tidy-mark: duck` will show `Config: missing or malformed argument for option: tidy-mark`, which seems repeated twice???\n\nAt present, an option **error** will cause `Loading config file \"~/.tidyrc\" problems, err = 1` to also be emitted. I am suggesting this particular message be deleted/removed/suppressed in `tidy.c`... messages about problems in the config file parsing have already be `reported` by the library, through the proper channels... \n\nAnd if you are directly using `libtidy` then you can setup a callback, and choose to output some other message, or suppress these, as desired... \n\nSo I am suggesting `tidy.c`, the console app issue none, or the minimum of direct message...\n\nAnd no one reponded on whether the line like `malformered input`, like any line lacking a colon, should be silently accepted...\n\nLooks like we already have a typo correction, PR #753... thanks...\n\nWaiting for further feedback...\n. @ler762 sometimes, perhaps, you need to think a little more before you leap... but thank you for your feedback ... here and [there](https://github.com/htacg/tidy-html5/issues/741#issuecomment-419270890) ;=))\n\n> The more I think about it the less I like tidy not processing command line options first.\n\nI am mainly a Windows person, but in the unix app world that seems one thing clear... if there exists a `~/.<proj>rc`, or the like, then this is processed before the command line... sets up a default environment... a good thing... I think... you oppose this? wow, ok... tell me more... where did you get this command line first idea? ... Would you describe yourself as a Unix, or Windows person?... just interested...\n\nIn running the regression tests, at least in windows, there is a test for ENV `HTML_TIDY` to make sure you are not overriding the tests with a config file, like `~/tidyrc`, or any **other** config file... there should **also** be a test for `~/tidyrc`, and **abort** if found...\n\nSo agree 100%, before running the regression tests, check for such a config files existance, otherwise all bets are off on the tests succeeding... many of which depend on a very specific config environment of their own being established... simply, must be **no** pre-command line configuration file loaded, silently, mostly... unless there are errors, some of which are also silent...\n\nThis suggests a PR in [tests](https://github.com/htacg/tidy-html5-tests)... in `tools-sh`, and `tools-cmd`... look forward to suggestions, patch, PR...\n\nJust saying, maybe **not** time to adjust the tests just yet... but thanks for testing and running... and the results...\n\nSo working on regression test changes before this **bug** is solved seems time not well spent... but agree it is important... to see, to know, the impact on this or that change... as it evolves... so, thanks...\n\nWe need to finalize this issue... get it accepted... discussed/agreed.. merged into `next`, then, ...\n\nIf there are some tests update required, then that is the time for a PR's on that...\n\nNeed more feedback on this **can of worms** issue...\n. @ler762 well this issue seems to have morphed into a **Feature Request** to alter the pre-command line config file reading, present since the birth of tidy, or at least the 2000 source I have, seemingly just because of your **don't like ... file that can't be over-ridden** ;=))\n\nWhile some unix apps do have an over-ride option, many do **not**. I know at least one app that will create such a file, even if one does not exist... so it does seem a choice, which `tidy` has made... a long time ago...\n\nBut for starters, with `tidy`, you can over-ride it now, several ways... one of which is to set the environment `HTML_TIDY=.somenulrc`... then tidy will **not** read the default `~/.tidyrc`... What is wrong with this? Except I seem to remembering reading something like you also **don't like** using the environment? ... oh, well... can not please everyone I suppose...\n\nAlso, except for some new options, like `mute`, you can also over-ride any options given in such a pre-command config file by the contents, and setting of a `-config tidy.conf`, read later... this opens the idea that **all** options should be reversable, like say a `--nomute XXXX`, but that is getting way off topic...\n\nAnd I have no problem informing a tidy **regression tester** that they should carefully check before running the tests... they are **not** strictly casual user tests... such `testers` are already building `tidy` from source, preaumably for testing a fix, feature, etc, so would be familiar to ensuring the right test environment exists, or all bets are off... \n\nSo I for one, am against PR #754 altering this part of `tidy` history...  love how sort of modular the source is, in that it can be done with one variable and bit of cut and paste... but as always may be swayed by feedback...\n\nLook forward to further comments on the `issue-752` branch... thanks...\n. @ler762 sorry if I found the reasoning of **don't like** just a little amusing... while **don't like** is probably the first driver that causes me too to look for change, I will try to back it up with valid facts, reasoning, ... and present those, leaving out the purely emotive **don't like** argument as implicit, implied... but maybe just me...\n\nI am all for **change** if it **improves** `tidy`... that is **makes if better**, in every OS, or at least in the OS where the change applies, if specific... I try my best to have `tidy's` well being at heart...\n\nAnd in open source, where there are **choices**, sometimes what one person **likes** can be **disliked** by others... even used as a loving, expected, features of the app by some, or ignored, or worked around by others... sometimes generating `noise`...\n\nSo it seems here the question is something like `What is the correct order for reading, dealing with config files?`, or `change the processing of init files`, or... and more... A quite difficult and involved choice...\n\nThe creators, and all maintainers since then, chose to read certain config files before processing the command line, as the norm... as [m]any good apps do... And in all that I can read around, that seems a valid choice still for today, for an 18+ year old, `The granddaddy of HTML tools, with support for modern standards` app... seek references that show this or otherwise...\n\nNow @ler762 suggests we change that... maybe he makes some points... but none that sway me that it is a **clear improvement** to `tidy`... maybe... but...\n\nI could argue that if I take the steps to create a `~/.tidyrc`, add env `HTML_TIDY=something` or an `/etc/tidy.conf` file, an active, positive step - no such thing is created by a `tidy` install - then I **expect** that/those to be read **before** the command line...\n\nBut that I can also add one, or more, `-config xxxx.conf` in the command line that does not effect the above reading, but does modify, over-rides, the final config used for the following docs... repeated... \n\nThat is what `tidy` presently does, as documented in say `man tidy`...\n\nLook forward to some comments from others... **time to change**, or not?\n. Still waiting for feedback on my PR #764 which addresses several issues brought up... namely add windows tilde expansion 94e62b2, plus 8c3ef4b, 4ba6106, ... etc...\n\n@ler762, these seem valid regardless of the of the `Feature Request` to change the load order, and add a new option, `no-config`, is accepted or not... \n\nI think for the `regression` tests case, being able to **disable** such `default` configs **is** important... but that is a discussion to be had in its own issue... will try to get around to adding that, if someone does not beat me to it...\n\nHope to get around to merging PR #764, and some others, soon... still marching towards maybe a 6.0.0 release, maybe for new year...\n. @Lin-Buo-Ren now merged, and thanks.... See issue #752 for a comment on this PR... in general I do **not** see the need for this...\n\nOr at least needs a hefty discussion.... @ler762 sorry, but think we have to close this PR...\n\nThere are several reasons for this, but the main one is **technical**. Somehow `github` has got it **wrong**... \n\nGithub shows `ler762 wants to merge 1 commit into htacg:next from unknown repository`... what is this **unknown repository**? not a lot of confidence in that...\n\nAnd when I tried to use the command line to make a merge into a branch to do testing, it **failed**... saying some patch, or something, is missing... **huh**? \n\nUsually works, and is one way admin has to merge a PR into a branch, build, and test, **before** the final merge to stable `next`... that is without cloning the full `fork`...\n\nIt does still show `This branch has no conflicts with the base branch`, thus the **Merge Button** is enabled... but does **not** feel safe... so it should be closed...\n\nI am not sure it is your fault, but did you do something drastic to your `fork` after setting up the PR? Or something else... \n\nOr is is that PR #755 was **closed**, and it contains the same commit 84b3e80 as here... good to know if **true**, but do not know...\n\nBut aside from that it is **quite** incomplete, even if eventually conceptually accepted...\n\n  1. It introduces a new **undocumented** option, `-no-config` - this needs to be added, and documented...\n  2. The `man tidy` help text, in `man/tidy1.xsl.in` - would need to be adjusted...\n  3. May conflict with PR #764, which more exactly addresses #752, and contains several other **needed** fixes...\n  4. Is moved into the loop and seems to ignore the fact that `tidy` supports multiple `options1 input1.html option2 input2.html ...` on the command line...\n\nThe 4th may not be a problem, but needs to be thought through, tested, discussed, etc...\n\nFinally, if you want to pursue this **Feature Request** then open an issue for it **first**, to discuss it, although various comments are scattered in other issues - maybe bring them together - \n\nAt this time I am **not** convinced it is needed or desired, except by you of course, and perhaps @blacktrash, not sure... sorry...\n\nAm really **puzzled** why github shows **unknown repository**, and fails an `admin` test merge... any thoughts on why very much appreciated... just to be able to help, report, understand, advise in future... thanks...\n. @ler762 well if github maintained some type of check-sum for a fork, then I guess deleting & recreating that fork might put it in a tizzy fit ;=))\n\nOne pet dislike I have about such sort of hidden config files is that `-h`, and specially the new `-help-env`, do not spell it out clear enough... could do more...\n\nIt does mention `/etc/tidy.conf`, and `~/.tidyrc`, which is good, but does not mention if one or either exists... like it does mention that `$HTML_TIDY` is set or not, but then not whether the file exists, if set...\n\nWhile this does not directly relate to the **order** in which these are processed, for issues like #742, asking the user to show an enhanced output of `-help-env` would go a long way to clearing this up... \n\nAnd that help text would need to also be adjusted if the order of processing is changed...\n\nLook forward to any new `feature request`... thanks...\n. @ler762 yes, seems you created the `aslr` branch from the `processrc` branch, so naturally will contain all... to keep them separate you must start with `next` when creating a new branch...\n\n```\n$ git checkout next\n$ git checkout -b newbranch\n```\n\nAssuming you can separate these two issues... meantime this dual PR should be closed, since the `processrc` #754 is not yet agreed... see comments in #752, specifically [PR](https://github.com/htacg/tidy-html5/issues/752#issuecomment-421813350)\n\nConcerning just commit 66b7ed544 not sure these should be added for every non-win os, and every version of `gcc` out there... \n\nSeems there should be a way to do this externally, without forcing everyone down the same road... deciding for them...\n\nMaybe if you opened an separate issue to discuss this... and first to see and understand what cmake uses by default... if not already included, why cmake chooses otherwise... what advantages... etc, etc, etc, ...\n\nI would certainly need much more feedback on what is proposed... and prefer an issue to discuss... thanks...\n\n. @jidanni our documentation can always be improved... **always** ;=))\n\nI guess the specific answer is 3 is higher than 1... with the default 0, being minimal accessibility checks, and I guess 3 would include 1, 2, etc... at least that is the way it looks in reading some of the code... \n\nSee [access.h](https://github.com/htacg/tidy-html5/blob/next/src/access.h#L18)... with -\n\n```C\n * The accessibility checks to perform depending on user's desire:\n *   1. priority 1\n *   2. priority 1 & 2\n *   3. priority 1, 2, & 3\n```\n\nAnd see `TY_(AccessibilityChecks)( doc )`, called at the end of `ParseDocument`... \n\nMaybe someone who understands this better could test and advise more...\n\nI do not think there have been accessibility code since release `5.2`, Apr 7, 2016, in later releases, to current `next` branch, `5.7.16`. It remain unchanged... Back in 2015, I did lament in issue #388 that this code needed some TLC...\n\nLook forward to doc improvements, patches, or PR... thanks...\n. @jidanni not a difficult feature request... \n\nThere is already a `CheckIMG(doc,node)` function, which performs the `alt` attribute check you mentioned, and the `src`... \n\nIt would be easy to add no `width` or `height` to output a message... need an option name, message, etc, etc - see adding [OPTIONS](https://github.com/htacg/tidy-html5/blob/next/README/OPTIONS.md) for help doing this...\n\nBut really wonder about the `use` case... is there one?\n\nThere was a time, not so long ago, that **good** web content developers would take the trouble to provide a correctly sized source, maybe with a link to the full for separate viewing/download... and would guess that would still apply if faster page loading was the important criteria... where such a warning would **not** be needed... even be wrong, or at least very annoying...\n\nNow you are suggesting they have become so lazy, time stressed, whatever... that they would `forget` to add size constraints to a **large** image... something they would see when **testing** before deployment, if they bother to do that anymore... so they would like to ask `tidy` to provide a **reminder** service... maybe, but seems a **big** stretch...\n\nAnd I do not think adding size attributes, that adds an additional transformation to the process, would actually make the page load faster, but maybe, if say the video card/driver/display handling is a **big** component of the load time... but such a machine would certainly be better helped by supplying sized images...\n\nBut if someone were to take the trouble to code this, add patches, PR, then I suppose it could be considered... given a `use` case...\n\nWhat do others think... thanks...\n. @jidanni thanks for the feedback, but it seems you have not yet fully **specified** this `feature request`... exactly what is it supposed to do? Its purpose? What do you want it to do? Show?\n\n> Readers need to know there was a big image there vs. a tiny 1x1 image there.\n\nWhile that might be accepted as true, and tidy **does** try to be `helpful`, `informational`, even `educational`, how does this FR to `Optionally warn about missing <img width= height=>` help in this? \n\nOr are you **adding** that even if present, this option would `warn`, showing the values of these attributes... but that still offers no clue about the actual image size... do not understand... confused...\n\nSome pseudo code, untested, just thoughts, on how it might look -\n\n```C\nvoid CheckIMG( TidyDocImpl* doc, Node *node ) {\n    /* some new option, like 'check-img-sizes', 'show-img-sizes', or ... */\n    if (nodeIsIMG(node) && cfg(doc, TidyChkImgSizes))\n    {\n        AttVal *ph = TY_(AttrGetById)(node, TidyAttr_HEIGHT);\n        AttVal *pw = TY_(AttrGetById)(node, TidyAttr_WIDTH);\n        if (!ph || !pw)\n        {\n            /* Is #757 - img: report a missing size attrib - \n               could separate to which one, or both... \n               details missing in 'spec' */\n            printf(\"Info:Warning:Error: img tag missing height and/or width attribute...\\n\");\n        }\n        else\n        {\n            /* is anything to be done in this case? */\n            printf(\"[type?]: img tag has width=%s, and height=%s...\\n\", pw, ph );\n        }\n    }\n```\n\nHave marked it a `Feature Request`. \n\nNeed someone to document the full option specs, discuss, agree, code it, and present patches, PR, and then, as stated, hopefully with more `use` case support, it will be considered... \n\nLook forward to more... thanks...\n. @AlexHolly there is presently no option to add a newline after a specific inline tag... sorry...\n\nCausing the pretty printer, via a new option, to add a newline after an inline tag might be possible... not tried...\n\nAt present the idea is a little hazy, and would need to be fully specified, an option chosen, a use case given, coded, tested, patches, PR, etc... \n\nLook forward to further feedback... thanks.... @jcubic I am afraid I do not understand the issue... sorry...\n\nWhile I do think the API docs [tidy-mark](http://api.html-tidy.org/tidy/quickref_next.html#tidy-mark) leaves a lot to be desired by way of explanation of exactly what will happen in various cases, nowhere can I read it is an option `to remove meta tag generator`... \n\nThat is, it will `never` **remove** a meta tag... \n\nIn a specific circumstance, that it can find an existing meta tag of the exact form `<meta name=\"generator\" content=\"HTML Tidy[ $version]\">` it can **modify** the specific `[$version]`... but **never** remove the tag...\n\nThe option `--tidy-mark no` means `libtidy`, in the API `tidyCleanAndRepair( TidyDoc )`, in `tidyDocCleanAndRepair(doc)`, does **not** run the internal service `TY_(AddGenerator)(doc);`... so nothing is added, modified, or removed...\n\nShow the version of tidy in use, provide sample html input, and config used, showing current tidy output, and then the expected output... showing say the `blank line` you mention... thanks...\n. @destroyhimmyrobots wow, playing with HTML files in the 2.8 gigabyte plus range, certainly points out a `design` **limit** of libtidy... thanks for this...\n\nAt present all `text` kept by libtidy is in an allocated for **each** document, `lexer` byte buffer, and thus nodes holding this `text` are maintained just by keeping the `start` and `end` offset into this buffer of the text... a `uint`, all presently 32-bit in most systems...\n\nThe present method of just **doubling** the last allocation value, only allows for some 20 reallocation, up to a maximum of 2,147,483,648 byte, 0x80000000, and as you point out the next **double** gives us ZERO, 0, leading to a loop forever lock **bug**...\n\nYes, one thought would be to use 64-bit offsets, but that would involve changing quite a lot of code... each time and place where the `start` and `end` offsets are stored and used... it is certainly possible... but first to explore other alternatives as well...\n\nChanging that to an `additive` method would theoretically get us closer to the maximum of a 32-bit `uint`, 4,294,967,295, 0xFFFFFFFF... or at least 4,294,959,104, 0xFFFFE000, if an additive value of 8,192, 0x2000, was used, which nearly doubles the potential HTML file handled... but still has an ultimate limit...\n\nOf course the **loop forever bug** must be detected, and if seen, reached, the only thing libtidy can do is call `panic`... which, unless taken over by the libtidy user app, will abort with a message... just like the `default` TidyRealloc would do if it gets a NULL...\n\nA suggested, tested, patch -\n\n```diff\ndiff --git a/src/lexer.c b/src/lexer.c\nindex ca66aee..1962c4d 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -940,19 +940,31 @@ void TY_(FreeLexer)( TidyDocImpl* doc )\n /* Lexer uses bigger memory chunks than pprint as\n ** it must hold the entire input document. not just\n ** the last line or three.\n+**\n+** The buffer starts with an allocated 8192 bytes,\n+** and is increased, as needed, by the same 8192 bytes,\n+** each time, and calls 'TidyPanic' if the 32-bit uint\n+** size overflows at about 4GB...\n+**\n+** 'TidyPanic' must/will never return.\n */\n+static ctmbstr overflow = \"\\nPanic: 4GB lexer text buffer overrun! Aborting...\\n\";\n static void AddByte( Lexer *lexer, tmbchar ch )\n {\n     if ( lexer->lexsize + 2 >= lexer->lexlength )\n     {\n         tmbstr buf = NULL;\n-        uint allocAmt = lexer->lexlength;\n+        uint prev, allocAmt = lexer->lexlength;\n         while ( lexer->lexsize + 2 >= allocAmt )\n         {\n-            if ( allocAmt == 0 )\n-                allocAmt = 8192;\n-            else\n-                allocAmt *= 2;\n+            /* Issue #761 - change to additive method, replacing the \n+               doubling, and deal with buffer overflow at abt 4GB of text */\n+            prev = allocAmt;\n+            allocAmt += 8192;\n+            if (allocAmt < prev) {\n+                /* YEEK - size wrapped - need bigger buffer! */\n+                TidyPanic(lexer->allocator, overflow);\n+            }\n         }\n         buf = (tmbstr) TidyRealloc( lexer->allocator, lexer->lexbuf, allocAmt );\n         if ( buf )\n```\n\nEffectively almost doubling the text input capability of `libtidy`!\n\nIs this enough for now? \n. Although no comment from @destroyhimmyrobots, or others, I think this `fix` is a **good thing** ;=))\n\nIt does **not** remove the use of a uint, usually 32-bits in most systems, but it raises the maximum lexer stored text to just under 4GB, double what it has been, **forever**...\n\nAnd it removes the loop lock, and dies gracefully, with message... well like any other **out of memory** situation... \n\nRemember users of `libtidy` can provide their own `TidyPanic` callback, and stop `libtidy` without **damage** to the using app...\n\nAnyway, have pushed an `issue-761` branch for testing... appreciate building, testing, comments,... \n\nCreated PR #784, if all agreed...\n\nLook forward to any feedback... thanks...\n. This doc change looks fine ... will merge shortly... thanks...\n. @cmb69 done, and thanks...\n. @phonedog365 maybe I completely misunderstand the problem... sorry...\n\nIf you use `-e`, or `-errors`, or `--markup no` on the command line, or add `markup: no` to a config file, then there should be **no** `stdout`, that is **no** pretty printed html output, thus **nothing** would be passed to `| more`... \n\nSo given say `tidy -e in_file.html[ | more]`, with or without the `| more`, the **only** output should be warnings, errors, and info, all sent to `stderr`, as documented...\n\nWhat is the problem you see?\n\nPlease clarify... thanks...\n. Just a note, this PR needs [tests PR 29](https://github.com/htacg/tidy-html5-tests/pull/29) to be done at the **same** time...\n\nWill try to attend to both shortly, baring any contrary comments... thanks.... @hosiet thanks for these corrections...\n\nI think we only need correct `src/language_en.h`, and other languages flow from that, but need to check...\n\nAnyway, thanks... always good to attempt to have correct spelling at least...\n. @jidanni sorry, is this a **repeat** of #675? \n\nWhat version of `tidy` are we talking about? It seems the warning can be suppressed from about **release 5.6.0**, with `--fix-uri no`... \n\nMaybe see issue #352, #378, PR #547, PR #556, and maybe others... in addition to #675... for discussion, merges, etc... \n\nIs there something more to do? ... if so, please explain... thanks...\n. @jidanni yes, I now see this is a **bug** - sort of, in `HTML5`, valid utf-8 URIs are **valid**, and `libtidy` **fails** in this regard...\n\nQuickly looking at the code in `void TY_(CheckUrl)( doc, node, attval)`, attempts have been made to accomodate `HTML5` **and** `HTML4` but is certainly **not** enough... thus agree the `fix-uri` option should **not** even apply in this case... there should be nothing found to **fix**... no URI error message output...\n\nIn one part it uses `static Bool IsURLCodePoint( ctmbstr p, uint *increment )`, but at the moment this part `looks` ok... but there are other **suspicious** parts of the service...\n\nThis `CheckUrl` service needs to be redone... re-thought for `html5`... reworked... enhanced, or replaced... fixed... etc...\n\nFor a start, at one point, it walks the URI text, **byte-by-byte**, and  bumps `escape_count` for each `(c > 0x7e)`, which is maybe ok for `HTML4`, but is totally **incorrect** for `HTML5`, and utf-8 text... so this sets up the `escape` message output problem... in valid utf-8 text there should be **nothing** to escape!\n\nHave added [in_766.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_766.html), a copy of the full file mentioned in  [T207963](https://phabricator.wikimedia.org/T207963), and [in_766-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_766-1.html), a short version with more or less just the two URI marked **bad** by tidy, for consistent testing... hope this is ok...\n\nIt should be noted **both** these files **pass** W3C `nu` validation... and in this case, likewise should **pass** `libtidy`... at least for the URI...\n\nIn the full file, tidy also reports there are two empty `<ul>`, which can be removed with `--drop-empty-elements no`, but that is a separate issue... if it is an issue...\n\nLook forward to comments, feedback, patches, PR, ... to address this utf-8 in html5 URI issue finally... thanks...\n. @hosiet thanks for re-opening this long time **bug**... hopefully it will get some attention here...\n\nAside from **not** removing the `<?xml ...?>` header, `tidy` also **messes** with the DOCTYPE, on repeated invocation...  a **big** NO NO ;=))\n\nGiven a full DOCTYPE, `<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">` it will choose to only output `<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\">`... why clip this? ... seems wrong... not required, desired... or some other reasoning...\n\nAnd then if you run `tidy` on this result, it chooses to drop it altogether!!! No doctype... **ugh** Why? And, of course running tidy on **this** result, will only add a HTML5 DOCTYPE - `<!DOCTYPE html>`... so the damage has been done, and needs correction...\n\nAdded the embedded sample given... thanks for that... to my collection [in_767.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_767.html) - seems the same as that in `tidy.crashtest.zip` - and a 2nd [in_767-1.html](https://github.com/geoffmcl/tidy-test/blob/master/test/input5/in_767-1.html) to better illustrate the DOCTYPE problem(s)...\n\nLook forward to further feedback, comments, patches, PR, to fix this **BIG BAD BUG**, a situation that has been around since at least 2004... thanks...\n. @hosiet thank you for cross posting this here... and the sample xhtml...\n\nI can confirm that even current `tidy` 5.7.16, will drop the empty `<li>`, as does that **old** `20091223cvs-1` version...\n\nIn the current version you can add `--drop-empty-elements no` option to the config to avoid this... \n\nBut this ref - https://www.w3.org/2010/04/xhtml10-strict.html#elem_ul - says `At least one of li`, thus as you suggest, an empty list is invalid in `XHTML` - need more W3C references - and `libtidy` needs a **fix**... should not be difficult...\n\nAppreciate further feedback, patches or PR... thanks...\n. @hosiet looking further into this... at first I though it might be a HTML4/one or more li, versus HTML5/0 or more li, something addressed in #396... but now think this is maybe a configuration issue...\n\nIf you tell tidy the input is to be treated as well formed XML, with either `-xml`, or `--input-xml yes`, then the `TY_(ParseXMLDocument)(TidyDocImpl* doc)` would be used, which does **not** end the parsing with `TY_(DropEmptyElements)(doc, &doc->root);` and I think you will get the desired output... \n\n```html\nF:\\Projects\\tidy-test\\test>tidy5 -v\nHTML Tidy for Windows version 5.7.16\nF:\\Projects\\tidy-test\\test>tidy5 -xml input5\\in_768.html\nNo warnings or errors were found.\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<!-- $Id: tidy-empty-list.html 43963 2011-05-26 12:08:28Z vinc17/ypig $ -->\n<head>\n<title>Test of tidy on an empty list</title>\n</head>\n<body>\n<p>Debian's\n<cite>Tidy</cite>20091223cvs-1 transforms this valid XHTML file\ninto an invalid one: it removes the empty\n<samp>li</samp>but keeps the\n<samp>ul</samp>element due to its\n<samp>class</samp>attribute!</p>\n<ul class=\"ul\">\n<li class=\"li\"></li>\n</ul>\n</body>\n</html>\nF:\\Projects\\tidy-test\\test>tidy-2009 -v\nHTML Tidy for Windows released on 25 March 2009\n**same output**\n```\n\nAs can be seen, this also works for the `tidy-2009` release...\n\nTo repeat, this only happens if `tidy` is allowed to **default** to using its `HTML` parser... where, at least in HTML5, such a deletion is **not** a problem... and can be overridden with the option `--drop-empty-elements no`, as a user choice...\n\nThe `static Bool CanPrune(...)` service could be enhanced to do some check on the tidy mode, if this problem needs to be addressed in HTML4 documents... but maybe that could be addressed as a separate new issue... thanks...\n\nDoes this **solve** the problem of deleting the empty `<li>`... in valid xhtml... thanks...\n. @AntoniosHadji under review... sorry for the delay...\n\nAs stated, **looks** good... please add any comments, updates, feedback, etc to #649... thanks...\n. @dinghram yes, `libtidy` does indeed use `setlocale(LC_ALL, \"\")`, essentially to query, and set the **library** `language`... sorry if this seems to cause you a problem...\n\nUnfortunately, the `setlocale(LC_ALL, NULL)` you suggest does **not** yield the actual `language` in use, it returns `C`, so is not helpful in this regard... \n\nIs there another way to get/query the system default `language`, compatible to WIN32 and UNIX?\n\nBut this `code` can be **avoided** by apps using `libtidy`, by one of 2 ways -\n\nEither **successfully** using the [tidySetLanguage](http://api.html-tidy.org/tidy/tidylib_api_next/group__Localization.html#gace6675cb163944bde81c4deaa5b55cbe) API, called from their own app **before** the call to `tidyCreate()`... this action will set `TY_(tidyGetLanguageSetByUser)() == yes`...\n\n**Or** compiling a `libtidy` **without** `localization` support, using like `cmake ../.. -DSUPPORT_LOCALIZATIONS:BOOL=OFF [other options]`... this will completely remove that code from `libtidy`... and remove all the language headers leaving **only** `language_en.h` as the single message file...\n\nMaybe we need to improve the documentation in this regard? Suggestions appreciated... thanks...\n\nDoes this help?\n. I certainly agree with @langemeijer -\n\n> It is unacceptable for any library function to have changing the locale as side-effect. At least change the locale back to what is was!\n\n@Lin-Buo-Ren maybe the above `save and restore` patch could be added to PR #785 ...\n\nlibTidy **only** wants a way to auto-detect the users `preferred` language for `LC_MESSAGES` output... not in any way effect numeric or date output of the system...\n\nIt certainly does **not** want the `change` anything... just detect... \n\nIn unix, at least, the `env` vars  `LC_MESSAGES`, or `LANGUAGE`, may means `libTidy` does **not** need, use `setlocale( LC_ALL, \"\" )`, so seems the way to go, with or without the patch to `save and restore`...\n\nLook forward to further feedback on this, and related #783 ... looking positive... thanks...\n. @ler762, @Lin-Buo-Ren, @russianfool, @langemeijer, all, thank you for the helpful comments...\n\nI too have **tried** lots of things... see `setlocale` in [tidy-test](https://github.com/geoffmcl/tidy-test) and [test-locale](https://github.com/geoffmcl/test-locale) for some of these efforts...\n\nWhile #783 is more about `i18n` console `tidy` support through environment variable, they certainly share the **same** `libTidy` code... and may have a common solution...\n\nSince this is like `libTidy's` **gettext** function, I was looking at - [2.3.2 Locale Environment Variables](https://www.gnu.org/software/gettext/manual/html_node/Locale-Environment-Variables.html), quoted, in part -\n\n```\nA locale is composed of several locale categories, see Aspects. When a program looks up locale dependent values, \nit does this according to the following environment variables, in priority order:\n\nLANGUAGE\nLC_ALL\nLC_xxx, according to selected locale category: LC_CTYPE, LC_NUMERIC, LC_TIME, LC_COLLATE, LC_MONETARY, LC_MESSAGES, ...\nLANG\n```\n\nGiven that a `libTidy` user already has the choices of (a) excluding `SUPPORT_LOCALIZATIONS` in the build, **or** (b) by pre-setting the `tidySetLanguage`, before creating a document...\n\nThe following suggested pseudo-code seems to **add** to that, in that the user's app can further ensure `LANGUAGE`, ..., `LANG`, are set in the environment before calling `tidyCreate`... thus no `setlocale( LC_ALL, \"\" )` is needed...\n\n```\n#if SUPPORT_LOCALIZATIONS\n    if ( TY_(tidyGetLanguageSetByUser)() == no ) {\n        /*\\\n         *  Is. #770 #783 - this should be 'last' choice, if at all?\n         *  TY_(tidySetLanguage)( setlocale( LC_ALL, \"\") );\n         *  That is take every other opportunity to set the 'language'\n        \\*/\n        if( ! TY_(tidySetLanguage)( getenv( \"LANGUAGE\" ) ) ) {\n            if( ! TY_(tidySetLanguage)( getenv( \"LC_MESSAGES\" ) ) ) {\n                if( ! TY_(tidySetLanguage)( getenv( \"LANG\" ) ) ) {\n                    char *current = setlocal( LC_ALL, NULL );\n                    if( ! TY_(tidySetLanguage)( current ) ) {\n#ifndef NO_LIBTIDY_SETLOCALE    /* optional, maybe overkill, ... */\n                        /* no choice but to briefly disturb things */\n                        TY_(tidySetLanguage)( setlocale( LC_ALL, \"\" ) );\n                        current = setlocal( LC_ALL, current );\n#endif /* NO_LIBTIDY_SETLOCALE */\n                    }\n                }\n            }\n        }\n    }\n#endif /* SUPPORT_LOCALIZATIONS */\n```\n\nThis does not address any threading issue, but if neccessary the `tidyCreate()` could be run in a critical section... or something...\n\nI am **not** sure the new suggested compile flag, like `NO_LIBTIDY_SETLOCALE`, is necessary, or would ever have a `use` case... so not keen on this...\n\nAlso this does not yet address any tidy **doc** changes... nor maybe any potential cross-platform issues...\n\nTo repeat, just looking for a non-invasive way to setup the `libTidy` **gettext** language to use...\n\nFurther feedback very welcome to reach the best solution... thanks...\n. No time tonight, but it seems we are mostly agreed... and now there is #780 as further proof... thanks...\n\nI will try to work on this with my ideas, discoveries... in the coming days...\n\nFeel PR #785 is little step in the right direction... but needs more...\n\nAnd then there is **doc** changes to match...\n\nLook forward to more patch/code suggestions... thanks...\n. While it seems all fully agreed that a library should **not** do `setlocale( LC_ALL, \"\" )`, without a proper `reset`, are we also abandoning the library **auto-detecting** of the language? Why?\n\nYes, `libTidy` language selection can be made the sole responsibility of the `program` using `libTidy`... an additional API burden...\n\nIn our case the console app `tidy.c` could have this added, re-added... but there is potentially many other `libTidy` users...\n\nBut it seems the following non-invasive library pseudo-code would **keep** auto-detection -\n\n```\n#if SUPPORT_LOCALIZATIONS\n    if ( TY_(tidyGetLanguageSetByUser)() == no ) {\n        /*\\\n         *  Using app has 'not' selected a language\n         *  Is. #770 #783 #780 - this should be 'last' choice, if at all?\n         *  TY_(tidySetLanguage)( setlocale( LC_ALL, \"\") );\n         *  That is take every other opportunity to set the 'language'\n        \\*/\n        if( ! TY_(tidySetLanguage)( getenv( \"LANGUAGE\" ) ) ) {\n            if( ! TY_(tidySetLanguage)( getenv( \"LC_MESSAGES\" ) ) ) {\n                if( ! TY_(tidySetLanguage)( getenv( \"LANG\" ) ) ) {\n                    char *current = setlocal( LC_ALL, NULL );\n                    if( ! TY_(tidySetLanguage)( current ) ) {\n#ifdef _WIN32    /* perhaps there is some other way for windows... */\n                        /* no choice but to briefly disturb things */\n                        char *previous =  0;\n                        if (current)\n                            previous = strdup(current);\n                        TY_(tidySetLanguage)( setlocale( LC_ALL, \"\" ) );\n                        if (prevous) {\n                            current = setlocal( LC_ALL, previous );\n                            free(previous);\n                        }\n#endif /* _WIN32 */\n                    }\n                }\n            }\n        }\n    }\n#endif /* SUPPORT_LOCALIZATIONS */\n```\n\nNote this is guarded by `if ( TY_(tidyGetLanguageSetByUser)() == no )`... has the user done `tidySetLanguage`?\n\nStill doing research on the Windows `_WIN32`, code... note, have found that the `current` pointer can become invalid, hence the copy... but would certainly appreciate feedback on this... it seems there are other problems in the Windows language selection... see `TY_(tidyNormalizedLocaleName)`... etc...\n\nAnyway, just a suggestion for discussion... Look forward to further feedback... thanks...\n. @cmb69 thank you for your feedback...\n\nAgree to keep things simple ;=))\n\nBut as you point out, not **all** `setlocale()` affects the process... `setlocal(LC_ALL, NULL)` only queries... \n\nIn all that I can read, in the UNIX environment, the environment variables `LANGUAGE`, ..., `LANG` **are** used to establish, and **enable**, [gettext](https://www.gnu.org/software/libc/manual/html_node/Translation-with-gettext.html), which `libTidy` sort of emulates, so it seems to make a lot of sense to use them to establish a default `libTidy` language... harmlessly...\n\nIn Windows, those environment variables do **not** normally exist, and `setlocal(LC_ALL, NULL)` only return `C`, so is useless. Only `setlocale(LC_ALL, \"\")` returns a language string... if there is some concern about threading in this environment, then the set and reset could be in a `Critical Section` wrapper - no big deal... \n\n```\nStartCriticalSection();\n    DoSomethingImportant();\nEndCriticalSection();\n```\n\nOr even some other native Windows API, like `GetUserDefaultUILanguage()`, or maybe others... as mentioned still exploring these...\n\n\n> I don't think that auto-detecting the language is really important for the library\n\nOk, if **ALL** fears of `affecting the process`, and `threading` are **removed**, that is all fears and FUD, then _WHY NOT_?\n\nI personally have several apps using `libTidy`, and I expect the library to auto-select the language, else forget `localization`... \n\nAnd are we to now **force** an additional burden on the likes of PHP, Perl, Edbrowse, Notepad++, etc, etc... to name a few... to modify their interface with the `libTidy`... add an additional API call, if they want any language support `libTidy` has... which I agree at this stage is very minimal... to some for sure it would not matter...\n\nThat's my thoughts on `auto-detection`... so, **why not**?\n\nLook forward to further feedback... thanks...\n. Thanks to the comments here, though not all!, others, refs and testing, am now convinced `setlocale( LC_ALL, \"\" )` should **not** presently be in `libTidy`... phew...\n\nAccordingly propose the following patch to fix this **bug** -\n\n```\n#if SUPPORT_LOCALIZATIONS\n    if ( TY_(tidyGetLanguageSetByUser)() == no ) {\n        /*\\\n         *  Is. #770 #783 #780 and maybe others - \n         *  using 'setlocale(LC_ALL, \"\")' is a 'bad' choice!\n        \\*/\n    }\n#endif /* SUPPORT_LOCALIZATIONS */\n```\n\nWill get to it shortly, probably in conjuction with PR #785... maybe the weekend... hopefully...\n\n. @dinghram have **eventually** removed `setlocal(LC_ALL, \"\")` from **`libTidy`**... thanks for this issue...\n\nHope you, and/or others, get the chance to pull, build, and test from version `5.7.18` on, so we can **close** this... thanks..\n. @cmb69 thank you for the testing and report on 5.7.18... good news...\n\n@AnrDaemon agree with you, one can **not** `expect two different runtimes, ..., to have a common unambiguous behavior...`... that would be `code heaven` ;=))\n\nYour MSDN link suggests, clearly, you have to understand `the distinction between \"locale\" and \"language\"`. \n\nIt is my understanding, **`Tidy`**, in general, has no interest in what `locale` it is run in, and does **NOT** want to `SET` any particular `locale` at all... **FULL STOP**... \n\nTidy did, for a time, **incorrectly** used `setlocal(LC_ALL, \"\")`, now **REMOVED**, thinking of it as a benign way to detect the `\"language\"`... sorry... IMO, a mistake, now corrected...\n\n@ler762, maybe I do not understand correctly! Why do you want to `set the locale`? Tidy is not the correct place for a tutorial on **setting the locale**. Tidy 100% accepts the user's environment - as stated, `has no interest`...\n\nAnd the API docs already document how to `set the language` if you **really** need to...\n\nHave now also done lots more testing, and while there may be other issues, to be addressed **separately**, in their own issue, this seems closed... thanks for all the participation...\n. @ler762 seem we cross posted...\n\nAgreed, `I'd rather not have the library change anything;` - now it does not - issue closed...\n\nIf you have another issue please open it as a **new** issue... thanks...\n. @ler762 that's the code... what is the issue?\n\nDo I have to **REPEAT**? If you have another issue please open it as a new issue... thanks.... @alexeygon thanks for the issue... \n\nBut at this moment this looks more like a PHP implementation problem, rather than anything to do with `libtidy`...\n\nYes, the `tidy_repair_string('some string...');` code will run `libtidy`... \n\nBut how can this effect the PHP `DateTime` function?\n\nMaybe with more information, feedback, comments,... this will become clear... thanks...\n. @ler762 this seems to be an ever **changing** landscape ;=))\n\nI had warmed to adding a **new** options, something like `-no-config`, or whatever... see [Issue 30](https://github.com/htacg/tidy-html5-tests/issues/30), to prevent these potentially 3 config files being loaded, but now you seem to have dropped this... have I got it wrong?\n\nSuch a non-invasive **new** option could certainly help with the `regression` test case... you have added a pre scan of the command line, which I think would be necessary for such a **new** option to work... although we could make it just if this is the `first` command line option, and only check one item...\n\nI could see -\n\n```\n  if not -no-config option in command line...\n    if defined and exists TIDY_CONFIG_FILE\n       read TIDY_CONFIG_FILE\n    if env HTML_TIDY exists\n       read that file\n    else if defined and exists TIDY_USER_CONFIG_FILE\n       read TIDY_USER_CONFIG_FILE\n  process command line...\n    ...\n      if arg == config\n         read config\n    ...\n```\n\nBut it is a **very** minimal use case - such `regression` testers should be able to handle it... so can be skipped... minor...\n\nNow, if I read this and the code you suggest - which could have been an embedded or attached diff/patch, rather than a PR, but - you seem to want to **change** the meaning of the `-config <file>` option, and use this as a `configSpecified`, ie no config signal...\n\n**And** in addition, change the order of the files... put `TIDY_USER_CONFIG_FILE` first, then an `else` for ENV `HTML_TIDY`, then `else` for `TIDY_CONFIG_FILE`... Why?\n\nI am not sure I understand why you want/need to potentially **break** many user configs that could be out there... `tidy` has been that way for more than 10 years... in fact the ENV `HTML_TIDY` and/or `~/.tidyrc` since original `tidy` in 2000... nearly 20 years...\n\nTo **change** from the ordered **additive** config way it is now, to an `else` config case, different order! Why? What reason?\n\nCan you give a use case? thanks...\n. @ler762 maybe a **new** option could be say `-no-env-config`, given that `-help-env` shows these files... do **not** think `-no-env-config -config <file>` is an **ugly kludge** ;=))\n\nBut agree, such a **new** option is not really necessary... has a minor `use` case... so can be dropped, if no one is interested in coding it... and it should probably be a separate issue anyway...\n\nIt seems the #752 `mis-behaviors` are related the **mute** option, which was only introduced about a year ago... agree that aggressive use of this option would have lead to these wrinkles being smoothed out earlier, as with any **new** option... as I am trying to do in PR #764...\n\nThat gives us no indication of the usage of `~/.tidyrc`, over nearly **20** years, nor of `/etc/tidy.conf`, over more than **10** years... \n\nBut why **guess** at the potential breakage when it can be avoided?\n\nThe current **additive** order of config files is **not** wrong! \n\nIt is as intended... Why change it? What perceived **bug** is being addressed?\n\nNo **use** case is offered for this `order` change... Without that, this issue wavers on a **Won't Fix** label...\n\nLook forward to further feedback... thanks...\n. @ler762 seems two separate things... see if I can deal with each...\n\n> The regression tests fail if I have a ~/.tidyrc\n\nThis is a **BUG** and should be **fixed**!\n\nIt includes `TIDY_CONFIG_FILE` and/or `TIDY_USER_CONFIG_FILE`, what ever their value, and maybe ENV `HTML_TIDY`... in Windows and UNIX at least... this should probably be a **separate** issue... will try to get around to doing that, if no one beats me to it...\n\nI am **not** talking about any `valid`, `invalid` or `comment` lines they may contain. The **bug** is triggered by the files presence, even as a null file... \n\nTry `$ sudo touch /etc/tidy.conf`, if that is the compiled in file name for `TIDY_CONFIG_FILE`, then run tests 1003361, 1004051, 1004512, 1014993, ... and probably others...\n\nFWIIW I use `cmake ..\\.. -DENABLE_CONFIG_FILES:BOOL=ON -DTIDY_CONFIG_FILE=\"C:/Users/user/AppData/Local/tidy.conf\" -DTIDY_RC_NUMBER=Icfg-1 [others]` in Windows, for testing, since the unix default of `/etc/tidy.conf` is not very applicable to a Windows file system...\n\nWould **never** want to add a `no config option` just to **paper** over this problem! So this is certainly **not** a `use` case to add such an option...\n\n> \"don't read the default init files\" option\n\nWhile the above **bug** is **not** a valid reason for this **new** option, it is also **true** that even `valid` options can upset, change `tidy's` output when conducting the **regression** tests, which require a **strict**, `clean` environment be used...\n\nAs suggested, the tools to run the tests, like your `build-and-test.sh`, could be adjusted to check more, and **warn** if there appears something `unclean` in the runtime environment, ...\n\nLike using `-help-env` - sorry for my **bad** scripting, just an experiment -\n\n```bash\n#!/bin/sh\n#< tidy-env.sh\n\nTMPVAL=`tidy -help-env`\nif [ ! \"$?\" = \"0\" ]; then\n    echo \"Running 'tidy -help-env' FAILED\"\n    exit 1\nfi\n\necho \"Value in TMPVAL\"\necho \"$TMPVAL\"\necho \"process it...\"\nTMPLINE=0\nTMPEXIT=0\necho \"$TMPVAL\" | while read -r a; do\n    TMPLINE=`expr $TMPLINE + 1`;\n    if [ ! -z \"$a\" ]; then\n        TMPCNT=`echo \"$a\" | wc -w`;\n        if [ \"$TMPCNT\" = \"1\" ]; then\n            if [ -f \"$a\" ]; then\n                echo \"$TMPLINE: WARNING: File '$a' FOUND!\";\n                TMPEXIT=1;\n            else\n                echo \"$TMPLINE: File '$a' - NOT FOUND!\";\n            fi\n        fi\n    fi\ndone\nexit $TMPEXIT\n# eof\n```\n\nSo that could be done for the `test` tools...\n\nI repeat, given the quite weak `use` case, I was warming say `-no-env-config`, or even `-no-def-config` option...\n\n> do **not** think `-no-env-config -config <file>` is an **ugly kludge** ;=))\n\nBut **do** think your `-no-config -config <file>` could be read that you will also exclude the `-config <file>`... needs something extra...\n\nMaybe even `-no-pre-configs-please`... but agree it should be anywhere on the command line... \n\nAnd just so we are clear, would **not** particularly change the `tests` tools to include this option... but could see adding something like the above script, probably better written, to **check** and **warn**...\n\nSuch a `tester` is entirely responsible for his/her `tidy` setup... and at least in the Windows `cmd` tools, such an additional option can be added easily, if the user, for some reason of their own, does not want to, at least temporarily, remove, rename, ... offending files...\n\nSo once the `name` is chosen, and agreed, would at least consider some patches and/or PR to implement this... suggest patches, or pseudo code, since have some ideas about this... including docs... thanks...\n. @ler762 no I do **not** think this is a `design flaw`... it was by design... a choice... an option...\n\nAnd `omitting an option to skip the processing of the default init files` is **not** a fault... and a request to add it now needs a `use` case...\n\nWhile I was beginning to think there was a very minor `regression` test `use` case for such an option, I have now decided that is **not** so true...\n\nIf a `regression` tester can not look after the systems runtime environment, I certainly do not want to give them a handy out... run them in a clean VM... add the above script to warn, if they can't remember... be aware... does not seem too much to ask if they really need to run the `tests`, which are quite inadequate, as tests go...\n\nAs a sysadmin I might not want to allow any `tidy` user in my system to be able to avoid my `/etc/tidy.conf`... they would have sudo permission if trusted anyway...\n\nSo it seems this issue dies for want of a `use` case... Simply, to start again, Why is this needed?\n\nAny last comments... thanks...\n. @ler762 if used in a script, why not `ren/mv ~/.tidyrc xxxx`, temporarily... and restore... seems easy...\n\nWhile easy to achieve, like PR #774, it seems much more difficult to change `tidy` **traditional** order of parsing... but thanks for the thoughts...\n\nNo feedback in months...\n\nCan we close this/these? thanks...\n. @aureliojargas wow, that sounds **fun** - compile `tidy` in an Android phone, using the Termux app... must see if I can find the time to do that... but would need **lots** of help...\n\nAs @ler762 points out, if you can find what `gcc` defines we can add it to the list in `tidyplatform.h`, and make it permanent for future users...\n\nTo find the list of gcc `predefines` you should be able to run `$ gcc -dM -E - < /dev/null`... \n\nUnfortunately, this can be a long list, and it is hard to choose the correct define...\n\nThe closest I can come to such a restricted environment is my [RPI2](http://geoffair.org/tmp/tests/temp1.txt) list... \n\nThere `tidy` compiles, no problem, so it defines something agreeable in `tidyplatform.h` ...\n\nI could guess at `#elif defined(linux) || defined(__linux__)` failing, since I hope `Termux` at least defines `linux`, else all bets are off...\n\nThis could be a difficult search, but hope some feedback can provide permanent resolution... thanks...\n. @davidgumberg as the code `TY_(PFlushLine)( doc, 0 );` indicates, it will append a `TidyNewline` to the buffer...\n\nYes, this could be avoided by an `option`, but what option? Current, or **new**...\n\nConversely, an app, using this API, could easily remove such a trailing `TidyNewline` from the buffer... if need be...\n\nMaybe the docs on [TidyNodeGetText](http://api.html-tidy.org/tidy/tidylib_api_next/group__Tree.html#ga174176952045d3a79500451eae0322d6) could be enhanced with ...\n\n```\nGets the text of a node and places it into the given TidyBuffer.\n\nThe text will be terminated with a `TidyNewline`.\n\nIf you want the raw utf-8 stream see `tidyNodeGetValue`.\n```\n\nOr do you think there should be an option controlling this pretty print output? What?\n\nLook forward to further feedback... thanks...\n. @petdance we do add a [Release Notes 5.6](http://binaries.html-tidy.org/release_notes/5.6.0.html) for each release...\n\nBut that is just a **massage** of what is available from the git repo, by `$ git log -p`, for all to see, at any time...\n\nAt this time, `tidy` does **not** maintain a `changelog`, in the traditional sense...\n\nIf someone want to step up and say manually manage a **better** `changelog`, then look forward to ideas on that... thanks...\n\n\n. @petdance it is intentional I guess... it got change in #679, part of commit ea4ae0dd1, where I wrote -\n\n```\nIn summary, as far as I can tell the removal of the auto addition of a - character is cosmetic only. \nIf a user really wants it back then they can add it to the css-prefix \"d-\" option...\n```\n\nIf it is in a test, then I guess the results must be adjusted according to the version, or the difference accounted for in some other way... sorry...\n\n\n\n\n\n. @ler762 thank you for adding this issue... this takes over from [Tests Issue 30](https://github.com/htacg/tidy-html5-tests/issues/30)...\n\nAnd showing an easy way to `see` some of what config has changed, just by calling `AdjustConfig( doc );`... this goes a long way to explain the `test` anomalies, like missing `indent`... thanks...\n\nBut it is **not** just an issue of our `regression` tests! As expressed elsewhere, they are code `testers` after all, and should ensure **all** environment and runtime configs are **removed**... They should **never** see the problem... but...\n\nThis could yield **strange** results for `any` tidy user, anytime... and needs to be addressed. It is a **BUG**!\n\nDo **not** see the removal of `AdjustConfig( doc );` as the obvious answer... \n\nI have not yet had a chance to study it in **detail**, but there could be important issues with config consistency that are addressed by this function... that, in itself, needs to be checked, understood, and reported...\n\nSo I completely agree `fix AdjustConfig to not bork the config` could be the best, first attack...\n\nLook forward to further feedback... thanks...\n. @ler762 this is the problem I faced when I opened [Tests 30](https://github.com/htacg/tidy-html5-tests/issues/30) - It is the **SAME** problem!\n\nAnd as expressed at length, would never paper over the problem by adding say a `-no-def-configs` option, which I am now getting very **cold** about, but that's about issue #772, which I have yet to respond on...\n\nIf you can not understand the need for the `AdjustConfig` call, then I can only suggest try reading the code... and you need to explore that, at length, **before** suggesting to **delete** it... \n\nThat is, try again `to figure out exactly what **correct behavior** would be for **AdjustConfig**` ... and this is **NOT** about running our `regression` tests... forget them for this issue... please...\n\nMy method, is to sort of write research notes, as reading the code, and this is some of my thoughts... I hope they help...\n\nThe **default** state of `TidyIndentContent` is `TidyNoState` so the code that does this in `AdjustConfig` is -\n\n```\n    if ( cfgAutoBool(doc, TidyIndentContent) == TidyNoState )\n        TY_(SetOptionInt)( doc, TidyIndentSpaces, 0 );\n```\n\nIn `tidy.c`, if the config later contains an `indent` option, then if `TidyIndentSpaces` is 0, it is `reset` to the `default` 2...\n\n```\n    else if ( strcasecmp(arg, \"indent\") == 0 ) or\n    case 'i':\n        tidyOptSetInt( tdoc, TidyIndentContent, TidyAutoState );\n        if ( tidyOptGetInt(tdoc, TidyIndentSpaces) == 0 )\n            tidyOptResetToDefault( tdoc, TidyIndentSpaces );\n        break;\n```\n\nHowever, if the option `indent: auto` is found in a config file, then `AdjustConfig` will not pick this change up, and potentially `reset` **indent-spaces**, if it is zero... so it can remain zero even though `indent` is now required, been requested...\n\nThis suggests the `AdjustConfig` be expanded a **little**, to perform the reset, like -\n\n```\n    if ( cfgAutoBool(doc, TidyIndentContent) == TidyNoState )\n    {\n        TY_(SetOptionInt)( doc, TidyIndentSpaces, 0 ); /* why this is required! does `pprint` expect, use it...*/\n    } \n    else if ( tidyOptGetInt(tdoc, TidyIndentSpaces) == 0 )\n    {\n        /* indent is 'on', or 'auto' so reset the 'spaces', as `tidy.c` does with\n         * tidyOptResetToDefault( tdoc, TidyIndentSpaces ); but we are in-lib, so -\n         */\n        TY_(ResetOptionToDefault)( doc, TidyIndentSpaces ); /* Is #778 - loss of indent */\n    }\n```\n\nI would really appreciate it if someone could test, try, improve this code, maybe in an `issue-778` branch... \n\nThe simple `test` setup is -\n\n```\n$ rm -f ~/.tidyrc # clean runtimes\n$ sudo rm -f /etc/tidy.conf # clean\n$ echo \"indent: auto\" > test.conf # setup a local config\n$ echo \"hullo world\" | tidy -config test.conf # html output should be indented\n$ sudo touch /etc/tidy.conf # create null\n$ echo \"hullo world\" | tidy -config test.conf # output indent lost\n$ sudo rm -f /etc/tidy.conf # clean up\n```\n\nLook forward to further feedback... thanks...\n. @ler762 we seem to have a **big** problem in communication... ;=))\n\nHave I not tried to imply just deleting `AdjustConfig` would cause all sorts of problems... maybe there is no present `regression` test to show this... that would be a good exercise, to write, add one... can you? But that is beside the point...\n\nAnd `AdjustConfig` must be run exactly after each config file read... \n\nTake a chained command like `tidy -config test1.conf test1.html -config test2.conf test2.html ... adinfinitum...`, well until the command line length becomes a factor, so is **correctly** built into the config file read... this can **not** be easily changed...\n\nIn other words, there is **no** moment when tidy has the **complete** config... \n\nConfiguration is an **additive** process, and at the end of each config file read, but we do not know yet if there will be more, that complete config must be checked for consistency... to be used on the next html input... and so on...\n\nIf you still do not get it, what else can I explain? But please do **not** repeat things over, and over...\n\nHave suggested a **fix**, on which I need help... I will get to this soonest... \n\nLook forward to further constructive feedback... thanks...\n. @ler762 now it **becomes** move `AdjustConfig` to a different place in the library ;=))\n\nWhy, I do not exactly know... some discussion about `complete`... inconclusive, especially if there is only one, probably the majority `use` case... brief simple test says this could work... one test! ... LOL\n\nI do not have time to build, and debug now... not against **maybe** better logic here, but at what `cost`, `gain`, or `losses`? Needs to be explored... \n\nIs after `TakeConfigSnapshot` the best place, an order change? Why?... Other issues that it may raise... possibly lots of questions, or it works perfectly, and is great... don't yet know...\n\nBut this should be a **separate** issue, if you want to pursue it... `Want to move AdjustConfig to a better place`, or something...\n\nMoving it may or may not solve the problem addressed here... I don't think it will... maybe harder to setup...\n\nThat is, in one special case where the `indent` is off, the indent-spaces is zeroed, there is no **library** code to restore this, if `indent` is later **enabled**... \n\nSuch code presently resides only in `tidy.c`, where it monitors the `i` options... suggested a simple **fix** to `AdjustConfig`... in the library...\n\nIt has an action to be performed, however it finds the `indent` - looks good, but also still to be tested... maybe I am wrong? Hope not!\n\nHope I can get some help in this... thanks...\n\nPS: Have you tried `-DENABLE_DEBUG_LOG:BOOL=ON` in your `tidy` build... it provided a very good trace of the order of the library code? enters, exits, etc... It may beat adding a bunch of printf, but that is certainly the traditional unix trace method... I have it enabled for my MSVC Debug build, so can watch, while debug source tracing... it helps a lot... and the output is to a log file...\n. Ok, found another way to show this \"loss of indent\" **bug**... \n\nIt is really nothing to do with `regression tests`, nor the existence of `/etc/tidy.conf` and/or `~/.tidyrc`, so in effect the title of this issue is real **wrong**!\n\nThe title should be something like \"indent is not restored if it gets zeroed\", or something...\n\nBut to test, first make sure runtime init config files are **all** removed... \n\n```\n$ tidy -help-env\n$ sudo rm -f /etc/tidy.conf\n$ rm -f ~/.tidyrc\n```\n\nSetup, and run the following...\n\n```\n$ echo \"hullo world\" > hw.html\n$ echo \"indent: no\" > c1.conf\n$ tidy -config c1.conf hw.html\n# This output has no indent as expected\n$ echo \"indent: yes\" > c2.conf\n$ tidy -config c2.conf hw.html\n# this output has current default indent 2\n# now combine them together, in one command\n$ tidy -config c1.conf hw.html -config c2.conf hw.html\n# == big bad bug == the 2nd output contains no indent!\n```\n\nNow, I hope it can be clearly seen moving `AdjustConfig` to a different place in the library will **not** fix this! As stated, this move may have logical merit, but it is **not** a fix for this **bug**... its current location is **not** the problem, so why change... but has to be a **new** issue, if someone thinks it is important...\n\nSorry about allowing the misleading current title to stand... but it was through the `regression` tests, and existence of a `/etc/tidy.conf`, put there by a debian tidy install, and I did not notice, that I first discovered it, so **left** that in the title... probably a very **bad** idea... sorry...\n\nI certainly seek some help in solving this \"loss of indent\" bug... thanks...\n\n\n. @ler762 closing this... do not agree with the need to **wait** - Why? nor with **can break things** - What things? \n\nPlease explain if you think this should go further, hopefully in an **issue** that addresses **these things** ;=)) and not in a PR!\n\nBut also assume you only used it to show some code, but would always prefer that be attached, or inline patches, in the comment... thanks\n. @thelounge-zz thank you for raising the issue here...\n\nIt looks like the bug 1537853 may be related to a `wrap => 0` problem in `5.6`... see #673, #705, ..., fixed by `5.7.9`, but not in any `tidy` release yet...\n\nI will try to re-setup a windows testing, to be able to repeat this test... maybe the `wrap` is not the problem... further tests, and feedback by others would be most  appreciated... especially those who can test with `next`... thanks...\n\nChanging some html text `4` to a decimal `3.33333` as shown in 1471305 does **not** seem like an action of `tidy`... attributes are maintained as strings in `libtidy`...\n\n. @thelounge-zz as stated, can not see how tidy could input `4`, and output `3.33333`... does not handle text that way... but the impossible can happen ;=)). @thelounge-zz I 100% agree `this smells like some float conversion deep insinde the code`, but which code? ... I try to understand...\n\nIIRC, `tidy` stores a node input of `<a href=\"/autotest.php?sid=0&amp;yi_id=1&amp;yi_page=4\">` as a `string`... how can `float conversion` be the problem here? ... will try to test, debug, ... more...\n\nThere is **no** conversion possible... I think... **but** you have a `diff`, so just try to understand... and agree with -\n\n```\ncms-autotest diff\n...\nsee attached diff - i won't care that much about whitespaces and rewrite test-hashes but \ndetsroy a simple url-param 4 by spit out 3.3333333 in teh cleand HTML is unacceptable\n```\n\nSo also seek a **SOLUTION**...\n\nYou `store` the tidy output as `base64`... sounds like some encode/decode, internal to PHP, and should be **no** problem... but...\n\nDid this just `show up` in release `5.6`... or did it exist before... does it still exist in `next`...\n\nLots of questions here, which I shall try to explore...\n\nFurther feedback really appreciated... thanks...\n. @thelounge-zz thanks for trying to help look into this... do not exactly understand your `provide 2 rpms`... 28, 27... but...\n\nI explored using a debug version of tidy on a html snippet `<a href=\"/autotest.php?sid=0&amp;yi_id=1&amp;yi_page=4\">autotest</a>`... with a config `-w 0 --show-body-only yes --show-info no` and get the partial log output as -\n\n```\nAll nodes BEFORE clean and repair\nRoot  \n StartTag html implicit \n  StartTag head implicit \n   StartTag title implicit \n  StartTag body implicit \n   StartTag a   href=\"/autotest.php?sid=0&yi_id=1&yi_page=4\"\n    Text   (8) 'autotest'\nAll nodes AFTER clean and repair\nRoot  \n DocType   PUBLIC\n StartTag html implicit \n  StartTag head implicit \n   StartTag title implicit \n  StartTag body implicit \n   StartTag a   href=\"/autotest.php?sid=0&yi_id=1&yi_page=4\"\n    Text   (8) 'autotest'\n<a href=\"/autotest.php?sid=0&amp;yi_id=1&amp;yi_page=4\">autotest</a>\n```\n\nJust can not `see` how `4` could morph to `3.33333`... tag text is kept as a string... so look forward to further information on this...\n\nI agree that certain types of `tests`, involving a known input, and an expected output, fixed config, and a `diff`, **may** need to be changed according to the library version - hopefully the library improves - and this is **work**... and our own [regression](https://github.com/htacg/tidy-html5-tests) tests are no exception... every effort to keep this stable is taken, but some changes take place... `whitespaces`, or more... but maybe I also do not quite understand your `BTW:` comment...\n\nIf you have specific examples, then for sure open an issue, and we can explore... thanks...\n. @thelounge-zz thank you for the `test.php`... but when I try to run it in my `..\\apache\\htdocs` I get -\n\n```\nWarning: file_put_contents(/tmp/tidy-test-expected.htm): failed to open stream: No such file or directory in C:\\OSGeo4W\\apache\\htdocs\\test.php on line 44\nWarning: file_put_contents(/tmp/tidy-test-current.htm): failed to open stream: No such file or directory in C:\\OSGeo4W\\apache\\htdocs\\test.php on line 45\nWarning: unlink(/tmp/tidy-test-expected.htm): No such file or directory in C:\\OSGeo4W\\apache\\htdocs\\test.php on line 47\nWarning: unlink(/tmp/tidy-test-current.htm): No such file or directory in C:\\OSGeo4W\\apache\\htdocs\\test.php on line 48\n```\n\nI would guess this is because directory `<current_disk:>/tmp` does **not** exist... certainly do not have any `C:\\tmp` in that **Windows** system...\n\nIn brief, my `<?php phpinfo(); ?>` gives -\n\n```\nPHP Version 7.1.14\nSystem  Windows NT WIN7-PC 10.0 build 17134 (Windows 10) AMD64\nBuild Date  Jan 31 2018 00:10:01\nCompiler    MSVC14 (Visual C++ 2015)\nArchitecture    x64\n...\ntidy\nTidy support    enabled\nlibTidy Version 5.4.0\nlibTidy Release 2017/03/01\nExtension Version   7.1.14 ($Id: c6d6b80d55c5d351deaa745c3c540971e5583c24 $)\n...\n```\n\nSo I still have `test setup problems` in Windows, to be able to switch and test various libTidy versions... will try to work on that... but...\n\nBut this seems to be two (2) problems, probably unrelated...\n\n### Problem 1 - 5.6 has a wrap problem - regression - fixed in 5.7.9, onwards\n\nI think I can see that problem in comparing `libtidy-5.4.htm` and `libtidy-5.6.htm`... in 5.6 all lines are wrapped, massively...\n\nBut that is **not** particularly clear in reading `libtidy-54-56.diff`... but thanks for including it...\n\nThis wrapping seems to be part of issue #673, mentioned in others, solved in PR #705, where I [commented](https://github.com/htacg/tidy-html5/pull/705#issuecomment-442577839)  that maybe this is a problem with `wrap => 0`, now repeated here -\n\n> This seems related to #780 - looks like a prob. with `wrap => 0`, which seemed broken in `5.6`, fixed in `5.7.9`, and so is in current `next`...\n> If someone had the time to cherry pick this fix back into the `5.6`, and issue a **5.6.1** release, that would be great...\n> But given that we have some difficulty in making a **new** release `5.8`, or `6.0`, given #743, that does not seem likely to happen... \n> I don't know how to fix that... see stalled #741...\n\nNeed someone to run `test.php`, using `next`, `5.7.17` plus, to at least **prove** this point...\n\nThat would demonstrate that this can be **solved** in `5.6` by commit 67eaeb6d1, then maybe the discussion on `5.6.1`, `5.8`, `6.0` releases can continue...\n\n### Problem 2 - tidy morphs attribute text `4` to `3.33333`\n\nCertainly presently can only agree with `maybe ... changed output ... within the php application` as the only explanation... especially since you advise it can not be **reproduced** easily, for testing...\n\nLook forward to further feedback on this issue... we want `libTidy` to be compatible with `php-tidy`... thanks...\n. > libtidy 5.6 is touching LOCALE somewhere without a proper reset - period\n> look at the comma instad dot after typecasting a float value\n\n@thelounge-zz yes, I **too** had noted the `comma`, and wondered... you may have found it - see #770... and maybe #783, #785, ...\n\nAgree the `lib` should **not** do `setlocale(LC_ALL,\"\")`, at very least not without a proper **reset**... but think it can be **avoided** probably... ongoing...\n. @Lin-Buo-Ren this is certainly your preference, but I wonder whether it is universal... maybe...\n\nWandering back in history, the original tidy creators certainly **liked** `redundant` blank lines... and I sort of got used to them, even liked them... over the years `some` have been eliminated in the `pretty print` output, but can sometimes be restored by `--vertical-space yes`, referred to as `classic` mode in the code, but not all... but maybe not at all relevant here...\n\nYou are just referring to `-h` text... \n\nBack at `5.2.0`, `5.4.0` there was only 1... and maybe more important, back in `tidy-2000` and `tidy-2009` there were none... \n\nSo this does feel like `redundant` blank line **creep** in `help`... nothing to do with `classic` mode...\n\nSo, in general, could go for PR #782, a very limited change...\n\nWhat do others think? Look forward to further feedback... thank...\n. @Lin-Buo-Ren looks good to me... let's see if we get anymore feedback in #781 .... @Lin-Buo-Ren thanks for the issue... but I am still trying to understand the problem here...\n\nI agree the [docs](https://github.com/htacg/tidy-html5/tree/next/localize#testing) could maybe add say `language of your choice, if installed, of course.` in reply to your last point... you can't select a temporary language change if it does not exist... docs can always be improved... but...\n\nAs part of `TY_(tidySetLanguage)`, the setting of the two dictionaries, the call to `TY_(tidyNormalizedLocaleName)( ctmbstr locale )` makes for hard reading... but then goes on to `dict1 = TY_(tidyTestLanguage( wantCode ));  /* WANTED language */` - yikes, lots to understand here... but it works to select the language... most of the time, if setup properly, maybe...\n\nBut, as several of your tests point out, like `$ env LC_ALL=fr_FR ./test_setlocale` returns NULL, so tidy defaults to english... What is the problem here?\n\nHow can this be fixed? That is, if `setlocale( LC_ALL, \"\")` is **fried**, and returns `NULL`... where else to look?\n\nMaybe, at least in UNIX, `libtidy` could search for say ENV `LANG[UAGE]=xx_yy` as the selector? Don't know...\n\nSeek further feedback here, even to help understand the problem... thanks...\n. @Lin-Buo-Ren thanks for all this, and the PR #785 ... all looking good...\n\nIn some ways there is an overlap with issue #770, and please see my comment there on the PR... thanks. @petdance thanks for the issue... quite interesting... sort of exposed `conflict`...\n\nIn researching this, I can see one of the actions of `libTidy` is to **clean and repare**, `C&R`, a document, and one of those actions is to examine each `anchor` node, in  `TY_(FixAnchors)(doc, &doc->root, wantNameAttr, yes);`,  which specifically checks for `name` **and** `id`, and if it finds just `name`, adds `id` as well... \n\nSetting the option `anchor-as-name: no` will drop the `name`, but leave the potentially `libTidy` created `id`... \n\nHence the exposed **created** conflict... which `libTidy` reports... with minimal info... docs improvement?\n\nAnd it has been doing this since some time **before** the last `cvs` release in 2009... but, as always, a **long** history does not make the action **right**... has it been discussed before... can't find ATM...\n\nIf this is considered an ongoing **problem**, it would seem the only answer would be to **add** an option, to specifically inhibit, or modify, this particular `C&R` action... is there a `use` case...\n\nLooking forward to further feedback... thanks...\n. @petdance sorry, what exactly is the `tidy` bug?\n\nOf course `nu` will only mention the use of `name` if given the input... so...\n\nThere is no `conflation` of anything...\n\nAs stated, `tidy` chooses to **fix** the problems it sees in the anchor? Is that the bug you see? Tidy should **not** fix things, or something...\n\nGiven your input, at present the default tidy output, with `-w 0` is, in part is -\n\n```\n<a name=\"content\" id=\"content\"></a> This &lt;a&gt; tag is for bookmarking.\n```\n\nIf you add `--anchor-as-name no` it will be -\n\n```\n<a id=\"content\"></a> This &lt;a&gt; tag is for bookmarking.\n```\n\nIs there some **error** you see in this `output`?\n\nDo you want to instruct tidy to inhibit, modify its fix, of the anchor? If `inhibit` why? If `modify`, to what?\n\nBecause, if left unchanged, **and** the document also then contains say `<div id=\"content\">`, then tidy will report `Warning: <div> anchor \"content\" already defined`... \n\nMaybe could do better with the docs/description here, like `explicit`, or even `created in c&r`, or something... somehow making it clear somehow this is a `created` situation... only in existing in the output...\n\nAs will the `nu` validator, if run on the tidy results...\n\nAm I misunderstanding something here? Please explain... thanks...\n. @petdance ah, your use of `tidy`... `I am only using the errors & warnings.`... so...\n\n> line 10 column 9 - Warning: &lt;div&gt; anchor \"content\" already defined\n\nHere, in reading the input, and studying the output, this warning warns you of **TWO** potential problems... but the second only exists after a fix has been applied to the first...\n\nThe first, use of `name` in an anchor. \n\nTidy found `<a name=\"content\">`, so added `id=\"content\"`, as a fix, it has done for ages, and could drop the `name` with `--anchor-as-name no`... \n\nThis is a so called **silent** fix... I am also somewhat ambivalent on these... in general, always feel `tidy` should spell out what it is doing...\n\nSo yes, tidy could **add** a warning something like - `In anchor, found obsolete \"name\", and added \"id\". See option \"anchor-as-name\"` - \n\nIs that what you are suggesting? That would certainly help in understanding what follows in this case...\n\nThen the second **potential** problem. Oops, you already have `<div id=\"content\">`... so this clashes with the `tidy` anchor fix... Need author to choose, and fix input document...\n\nI do not think some argument like - I want to use obsolete `name=\"content\"` on an anchor so it does not clash with `<div id=\"content\">` - is a valid html request... one or the other has to be changed... IMO...\n\nReally, I am just trying to find what `tidy` change you want... thanks...\n. @petdance we seem to be spinning our wheels... stuck in the verbal `mud` ;=))\n\nYou keep repeating, in several different ways, about an error `that does not exist` in the input...\n\nWrong! I can only respectfully suggest that it **does** exist `implicitly`, at least - that is `suggested though not directly expressed` - in the input... \n\nWhen you wrote `<a name=\"x\">`, tidy silently **helps** by creating `id=\"x\"`, that you **meant** to write, hopefully ;=))\n\nBut semantics aside...\n\nCan only repeat **what `tidy` change do you want**?\n\n  * Not change `<a name=\"x\">`? ie leave an `obsolete` attribute... seems a bad idea...\n  * Add a warning about this? ie the creation of an implicit `id=\"x\"`...\n  * Add some more explanation to the line 10 error, but what? and how? difficult...\n  * More docs info that line numbers are only an indication, and the actual problem may be elsewhere, even in something implicitly added by tidy?\n  * Something else?\n\nAs this demonstrates, tidy does not only report on the **input**, during the reading of the stream **stage**, but it also reports on what is, will be, the output nodes, during its `C&R` **stage**... that is on the final complete package...\n\nThese **two** stages are separate `libTidy` API calls - Stage 1: `tidyParseXXXX` and then Stage 2: `tidyCleanAndRepair`...\n\nTheoretically you could build your own app, say `Tidy-parse-only`, that only had the first API call, stage 1, and exit. That way you would only get any errors found in the input... \n\nAnd in this case `<div id=\"x\"><a name=\"x\">` would probably yield none... but quite unsure of the usefulness of such an app... it would **miss** so much...\n\nThe current console `tidy.c` always does both, and much more - **as it should** - will not change, but as always output improvements welcome...\n\nThis seems to be going nowhere... hope others will chime in... thanks...\n. @ler762, @petdance now we seem to be getting somewhere... maybe several `Feature Requests`, **FR**, are needed... \n\n### Concerning `<a name>` **and** HTML4 vs HTML5\n\nI noted this at the beginning of my code search. It seems the maintainers, before my time, who I understand were quite close to the W3C itself, chose for _libTidy_ to say, in either H4 or H5 case - `screw it & convert to html5 valid syntax` - without a warning... so `<a name=\"x\">` is converted to `<a name=\"x\" id=\"x\">` **silently**... been like this for maybe more than 10 years...\n\nI have already lamented that this fix is **silent**... maybe **FR 1**: add a warning for this change...\n\nThen there is sort of **FR 2**: like don't do this if H4 doctype... leave `<a name=\"x\">` alone...\n\nThey did added an option `--anchor-as-name no` to drop the name... presently defaults to `yes`... maybe **FR 3**: change default...\n\nNote, if you add a HTML4 header, then `<a name=\"x\" id=\"x\">` will **not** flag an error in the W3C validator... quite telling... and may influence the above **FR** decisions...\n\nAnyone interested to pursue one or all these **FR**, or even **bugs**, please open a **new** issue!\n\nComments, patches, PR very welcome... thanks...\n\n### Improve the line 10 warning\n\nYes, one idea is your general statement - `the actual problem may be elsewhere, even in something implicitly added by tidy.` ... that needs to be added to the general tidy docs, one or more times... where?\n\nI have already explored this a little, but could **not** see an easy solution...\n\nIn this created `id` case, there presently seems no flag to say this attribute is `implicit`, like there is when tidy creates a node, see [node](https://github.com/htacg/tidy-html5/blob/next/src/lexer.h#L318), so there is no way, when the conflict is later discovered, to do something like -\n\n```\nline 10 column 9 - Warning: &lt;div&gt; anchor \"content\" already [implicitly] defined \n```\n\nSo another idea would be to add a `Bool implicit;` flag to `struct _AttVal`, if it is thought important enough...\n\nMaybe this could also be a separate **new** issue...\n\nComments, patches, PR very welcome... thanks...\n\n### User expectations of tidy\n\nYes, in general `tidy` tries to meet **everyone** reasonable expectations... sometimes the big problem is **everyone** is different...\n\nIn this case, I have tried to show, at length, as best I can, that expecting `I just want to know about the errors that are in my original document.` is **not** really possible... not reasonable even, given that tidy reports on the total package...\n\nYes, I suppose there could be a **new** option like `check-input-only`, and `tidy.c` would skip the `tidyCleanAndRepair`, but... \n\nReally... that sort of **breaks** tidy's purpose - to fix a document... and as suggested do not think this would give you anything... but...\n\nComments, patches, PR very welcome... thanks...\n. @ler762 thank you for the quick reply... sorry that I can **not** always oblige...\n\nThis seems a test implementation of **FR 1** ... \n\nYEAH! Thank you! Been long in coming... tidy must **not** be silent, at least for its educational aims... which are strong...\n\nBut you know me, the real test is in the **exact** implementation... not just the **idea** agreed...\n\nLike do you really mean `Error`, ie return/exit 2, with all that means... maybe ok... especially if in H5 mode... help user correct a document, before output...\n\nBut is it a minor glitch? Why not just a `warning`? doc fixed...\n\nAre you too accepting H4 **and** H5, **what the hell** policy? like W3C?... or should that be a later **new** issue...\n\n@petdance seems this **middle ground** is a **good** step in the **right** direction... \n\nLooking forward to more improvements... thanks...\n. @ler762 I am sorry you think I **get annoyed** over criticism of tidy... I don't think I do, but... oh, well...\n\nI certainly will **call out** what I think is an **incorrect** assertion... **off** in some way... or even **incomplete**, lacking some qualification... even typos, slips, like say `forgetting to add something`, etc, etc... \n\nAnd really try to be helpful about **why** I think it is `wrong`... add references, etc, etc... that is **not** `getting annoyed`, in my book...\n\nExactly like someone saying tidy is `taking a valid html4 doc and creating an invalid doc` **and** then `it breaks an html4 doc`... IMO that does **not** seem exactly correct... \n\nI assume you refer to `<a name=\"x\" id=\"x\">` as invalid... how do you read say [anchors-with-id](https://www.w3.org/TR/html4/struct/links.html#anchors-with-id)... this clearly points out `id` can be part of an `a` element, in html4... also the validator seems to accept it...\n\nOr am I misunderstand something... then what is the `invalid` part you suggest? Just trying to exactly understand what you think is **broken**... Please clarify what you mean... thanks...\n\nAnd when **called out**, of course it can be annoying if a commenter just repeats the assertion, without any further clarification... that is, adds nothing but repeated **noise**... but with that I tend to go into quiet mode, and try to gently ignore...\n\nAnd to be clear, you do remember that flagging an `error` means tidy will not attempt output unless `forced`. It is **not** a question of what `I like`... \n\nMore a question of what you, and/or others, want this **new** message to do... (a) stop output until changed, or (b) just **warn** of the change... at this stage, I certainly would tend towards the latter... but maybe could be convinced otherwise... and may depend on, and be different for, html4 or html5 modes...\n\nLook forward to further feedback, pseudo-code, patches, PR to try to move this foward... thanks...\n. @ler762 I do lots of tests... have now push these 5 issue 786 tests to my https://github.com/geoffmcl/tidy-test/tree/master/test/input5 repo... hundreds of other test files...\n\nFollows a brief summary of the tests done, and brief results, validator and tidy -\n\n  - in_786.html - original html5 case - val: 'name' obsolete - tidy: 'content' dup\n  - in_786-1.html - just `<div id=\"x\"><a id=\"x\">` to learn line no. is anchor, not div - val: dup show both - tidy: dup show anchor\n  - in_786-2.html - original with html4 header - val: ok - tidy: 'content' dup\n  - in_786-3.html - as html4 with `id` added, div as 'content2' - val: ok - tidy: ok\n  - in_786-4.html - as html5 with just 'id' - val: dup shows both - tidy: dup show div - repeat of 1, order inverted\n\nSo yes, that html4 test was my in_786-2.html, created, tested, thought about, a few days ago... yes, tidy warns `content` duplicate... that was the beginning discussion...\n\nI divided this up into several different, separate issues - see [comment](https://github.com/htacg/tidy-html5/issues/786#issuecomment-447675216)\n\n  1. Concerning `<a name>` **and** HTML4 vs HTML5\n  2. Improve the line 10 warning\n  3. User expectations of tidy\n\nWe were [talking](https://github.com/htacg/tidy-html5/issues/786#issuecomment-447700125) about **FR 1**, maybe more on H4 vs H5... issue 1 - what to do about `<a name=\"x\">`, if anything? and had **asked** this be a **new** issue... oh, well...\n\nNow you seem back on about `<div id=\"content\">`... you seem to have fallen backwards... back up the tree... \n\nHey, **catch up mate**, as we would say in Oz ;=))\n\nYes, it **often** falls to me, on reading, seeing some pseudo-code, or comments, to remind people of the actual tidy code... as best I can... sometimes on minimal information...  \n\nOf course if they took the time to actually try out their code, before commenting, present git patches, I am sure this would be less frequent... they would learn by the implementation, what is what... hopefully...\n\nAnd to be very clear. I am **not** about to code any of this! It is just not that important to me... many other things take priority... but patches or PR will be considered, at least on that indicated, discussed and agreed, to some degree...\n\nProgress would be much appreciated... thanks...\n. @FredThompsonII well this is really a request for `NppTidy`, and **not** this `HTACG/tidy-html5`...\n\nBut to quickly answer you, while I have experimented with my own fork `NppTidy2`, I am not actively maintaining it... so there is unlikely to be any other releases from there... \n\nIn any case that bad URL is only if `plugins\\\\doc\\\\Tidy2\\\\quickref.html` does not exist, so obviously that zip `quickref.html` needs to be copied to `[NPP_INSTALL_DIR\\\\]plugins\\\\doc\\\\Tidy2\\` and then `Show Config Help` should load that local file... \n\nSee the [code](https://github.com/geoffmcl/NppTidy2/blob/next/Tidy2/PluginMain.cpp#L396) ... I guess a **better** fallback URL would be something like `http://api.html-tidy.org/tidy/quickref_next.html`... but even that is not permanent...\n\nSo closing this here, as not relevant the HTML Tidy... thanks...\n. @stefanbucur thank you for the comments, and information...\n\nI am **NOT** interested in setting up `automated` or `continuous` fuzzing, in this repo, so in general, simply `no thanks`!\n\nBut I am **very** interested in any `tidy` **crashes** found. Where do I look? links?\n\nAny that are valid, repeatable **bugs** should be added to these [issues](https://github.com/htacg/tidy-html5/issues), together with a minimal sample html, setup, and configuration used... thanks...\n\nIt goes without saying, code fixes, patches or PR's are **always** welcome...\n. @stefanbucur thanks for the comment... and the CC-ed emails... which I have started to look at... will continue that...\n\nRegarding using the `sanitizer` please note we already have open #791 - the fix for this is only presently in the `issue-791` for testing, prior to merging to `next`... appreciate any testing on this... thanks...\n\nAlso see like #588, #622, which got solved, and closed... there are probably like issues open/closed... still checking... any pointers would help...\n\nBefore we get to `... producing some fixes, ...`, we need to be able to **reproduce** the **bug**!\n\nI built an `issue-791` tidy `5.7.18.sani`, and downloaded/*85920, copied the test to `cases/testcase-12111.html`, but get no **Sanitizer** errors... what am I doing wrong?\n\nOf course, running tidy on that almost random set of bytes yields some 9067 warnings and 149 errors... but no problem...\n\nSo the most important thing here is to produce a repeatable test... where debuggers can help isolate the precise problem... etc... can do nothing without a test...\n\nAny help really appreciated... thanks...\n. @stefanbucur went through the emails.. seems there are 3 issues - please confirm?\n\n```\nfrom: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12111\n Issue 12111: tidy-html5/tidy_fuzzer: Heap-buffer-overflow in prvTidyEncodeCharToUTF8Bytes\n Reproducer Testcase: https://oss-fuzz.com/download?testcase_id=5639351547985920\n\nfrom: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12074\n Issue 12074: tidy-html5/tidy_fuzzer: Use-of-uninitialized-value in prvTidyIsHighSurrogate\n Reproducer Testcase: https://oss-fuzz.com/download?testcase_id=5697834188275712\n\nfrom: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12309\n Issue 12309: tidy-html5/tidy_fuzzer: Crash in GetSurrogatePair\n Reproducer Testcase: https://oss-fuzz.com/download?testcase_id=5123069669015552\n```\n\nThis is my 3 downloads... copied to respective `cases`...\n\n ```\n-rw-rw-r--  1 geoff geoff     15794 Jan 15 15:26  clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920 cases/testcase-12111.html\n-rw-rw-r--  1 geoff geoff      4264 Jan 16 02:29  clusterfuzz-testcase-minimized-tidy_fuzzer-5123069669015552 cases/testcase-12309.html\n-rw-rw-r--  1 geoff geoff         9 Jan 16 02:45  clusterfuzz-testcase-minimized-tidy_fuzzer-5697834188275712 cases/testcase-12074.html\n```\n\nTo do a bit of testing... quick and dirty... but should do it...\n\n```\n#!/bin/sh\n#< test-cases.sh\nBN=`basename $0`\n\nTMPTIDY=\"./tidy\"\nTMPCASES=\"12111 12309 12074\"\nTMPCFG=\"--force-output yes\"\n# show tidy version\n$TMPTIDY -v\nif [ ! \"$?\" = \"0\" ]; then\n    echo \"$BN: Unable to run '$TMPTIDY' - FIX ME \"\n    exit 1\nfi\n\nfor arg in $TMPCASES; do\n    #echo \"$BN: $arg\"\n    TMPHTML=\"cases/testcase-$arg.html\"\n    TMPOUT=\"cases/tempout-$arg.html\"\n    TMPERR=\"cases/temperr-$arg.txt\"\n    echo \"$BN: '$TMPTIDY $TMPCFG -o $TMPOUT -f $TMPERR $TMPHTML'\"\n    $TMPTIDY $TMPCFG -o $TMPOUT -f $TMPERR $TMPHTML\ndone\n\n# eof\n```\n\nIs there any specific `tidy` config being used? Didn't see any, but... need to be sure...\n\nCertainly need help to reproduce the `sanitizer` errors... thanks...\n. Oops, there seems a 4th...\n\n```\nfrom: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=12411\n Issue 12411: tidy-html5/tidy_fuzzer: Use-of-uninitialized-value in PPrintText\n Reproducer Testcase: https://oss-fuzz.com/download?testcase_id=5705060225384448\n copy to: cases/testcase-12411\n``` \n\n@stefanbucur thanks for the information... ok, you run the tests, using your own module... interesting... and exports `int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)`, and use a `TidyBuffer` ... all great...\n\nJust reading the source, a little suspect of the `attach_string_to_buffer` service... can see it uses `strlen`, in `tidyBufAttach(buffer, (byte*)data_string, strlen(data_string) + 1);`, which would fail with binary data, which is what is in the inputs I downloaded... but need to look at that...\n\nWill try certainly the steps you outlined soonest... looks easy as pie... a python builder, looks interesting for Windows build, but... every fix begins by repeating the bug... somehow... but that will probably be tomorrow now...\n\nAgree 100%, `libTidy` should **not** fail, even on binary data input...\n\nBe back soonest...\n. file: tidy-sanitize-04.txt\n\n@stefanbucur when it is **interesting** code/coding, I can come back to my computers after dinner... to play a little more...\n\nNo particular problem following your setup, except some steps required `sudo`, ... but all seemed to `download/build` fine...\n\nAnd running `tidy_fuzzer` on a previous download did indeed produce a `sanitizer` error - but what error? \n\n```\n-rwxr-xr-x 1 root root 16275248 Jan 16 23:35 tidy_fuzzer\n~/projects/oss-fuzz$ build/out/tidy-html5/tidy_fuzzer ~/downloads/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920\nINFO: Seed: 4061903721\nINFO: Loaded 1 modules   (9150 inline 8-bit counters): 9150 [0xac1028, 0xac33e6), \nINFO: Loaded 1 PC tables (9150 PCs): 9150 [0x7cbbc0,0x7ef7a0), \nbuild/out/tidy-html5/tidy_fuzzer: Running 1 inputs 1 time(s) each.\nRunning: /home/geoff/downloads/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920\n=================================================================\n==5645==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x625000002100 at pc 0x000000636d07 bp 0x7ffff791de90 sp 0x7ffff791de88\nWRITE of size 1 at 0x625000002100 thread T0\n    #0 0x636d06  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x636d06)\n    #1 0x637197  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x637197)\n    #2 0x617684  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x617684)\n    #3 0x6174b6  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x6174b6)\n    #4 0x61bae0  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x61bae0)\n    #5 0x61ba75  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x61ba75)\n    #6 0x61ba75  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x61ba75)\n    #7 0x61ba75  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x61ba75)\n    #8 0x5c1332  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5c1332)\n    #9 0x5bd7ed  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5bd7ed)\n    #10 0x5344eb  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5344eb)\n    #11 0x5346ca  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5346ca)\n    #12 0x55f205  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x55f205)\n    #13 0x535206  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x535206)\n    #14 0x540ac6  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x540ac6)\n    #15 0x53487c  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x53487c)\n    #16 0x7fc3a57a3b96  (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)\n    #17 0x41d288  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x41d288)\n\n0x625000002100 is located 0 bytes to the right of 8192-byte region [0x625000000100,0x625000002100)\nallocated by thread T0 here:\n    #0 0x4ef32f  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x4ef32f)\n    #1 0x62f638  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x62f638)\n    #2 0x5f6061  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5f6061)\n    #3 0x5f5d91  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5f5d91)\n    #4 0x5fbae8  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5fbae8)\n    #5 0x5e8dd5  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5e8dd5)\n    #6 0x5be8ab  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5be8ab)\n    #7 0x5bce50  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5bce50)\n    #8 0x534493  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x534493)\n    #9 0x5346ca  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x5346ca)\n    #10 0x55f205  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x55f205)\n    #11 0x535206  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x535206)\n    #12 0x540ac6  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x540ac6)\n    #13 0x53487c  (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x53487c)\n    #14 0x7fc3a57a3b96  (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow (/home/geoff/projects/oss-fuzz/build/out/tidy-html5/tidy_fuzzer+0x636d06) \nShadow bytes around the buggy address:\n  0x0c4a7fff83d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c4a7fff83e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c4a7fff83f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c4a7fff8400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c4a7fff8410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c4a7fff8420:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c4a7fff8430: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c4a7fff8440: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c4a7fff8450: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c4a7fff8460: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c4a7fff8470: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==5645==ABORTING\n~/projects/oss-fuzz$ \n\n```\n\nWow, that looks **interesting**... but what am I to make of this?\n\nIn say, a current `next` memory leak case, I get a very clear report -\n\n```\n==6782==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 298 byte(s) in 18 object(s) allocated from:\n    #0 0x7fce12b49b50 in __interceptor_malloc (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xdeb50)\n    #1 0x562f006631f3 in stringWithFormat (/home/geoff/projects/html_tidy/tidy-html5/build/temp-sanit/tidy+0x991f3)\n    #2 0x562f00663bbf in localize_option_names (/home/geoff/projects/html_tidy/tidy-html5/build/temp-sanit/tidy+0x99bbf)\n    #3 0x562f0066a6cf in xml_help (/home/geoff/projects/html_tidy/tidy-html5/build/temp-sanit/tidy+0xa06cf)\n    #4 0x562f0066b99d in main (/home/geoff/projects/html_tidy/tidy-html5/build/temp-sanit/tidy+0xa199d)\n    #5 0x7fce1269bb96 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)\n\nSUMMARY: AddressSanitizer: 298 byte(s) leaked in 18 allocation(s).\n```\n\nYou filed this issue as `Issue 12111: tidy-html5/tidy_fuzzer: Heap-buffer-overflow in prvTidyEncodeCharToUTF8Bytes`... Where/how did you get that information? ... \n\nIt seems a good lead... getting closer... I hope...\n. @stefanbucur thank you for the additional clues, help...\n\nI think what you propose for `build.sh` is very valid, even workable, but why not use the `native` cmake... like -\n\n```\ndiff --git a/projects/tidy-html5/build.sh b/projects/tidy-html5/build.sh\nindex 840e9a50..522713de 100644\n--- a/projects/tidy-html5/build.sh\n+++ b/projects/tidy-html5/build.sh\n@@ -18,8 +18,9 @@\n\n mkdir -p ${WORK}/tidy-html5\n cd ${WORK}/tidy-html5\n+CMAKE_FLAGS=\"-DCMAKE_C_FLAGS=-fsanitize=address -DTIDY_RC_NUMBER=SN01 -DCMAKE_BUILD_TYPE=Debug\"\n\n-cmake -GNinja ${SRC}/tidy-html5/\n+cmake -GNinja ${SRC}/tidy-html5/ $CMAKE_FLAGS\n ninja\n\n for fuzzer in tidy_config_fuzzer tidy_fuzzer; do\n```\n\nAssuming that `Ninja` supports this/these... but I think it will...\n\nIt ensures the generated static `libtidys.a` which also has the `sanitizer` code, and the build type, debug, ensures `-g` is added to the mix...\n\nWill try to test, try, this... soonest... \n\nIncluding a `tidy_fuzzer.c` suggested code change... use of `TidyBuffer`, which has a `length` attribute...\n\n```\ndiff --git a/projects/tidy-html5/tidy_fuzzer.c b/projects/tidy-html5/tidy_fuzzer.c\nindex 3cf2732d..23e1de39 100644\n--- a/projects/tidy-html5/tidy_fuzzer.c\n+++ b/projects/tidy-html5/tidy_fuzzer.c\n@@ -38,6 +38,7 @@ void run_tidy_parser(TidyBuffer* data_buffer,\n     tidyRelease(tdoc);\n }\n\n+#if 0 /* 00000000000000000000000000000000000 */\n void attach_string_to_buffer(const uint8_t* data,\n                              size_t size,\n                              TidyBuffer* buffer) {\n@@ -50,6 +51,7 @@ void attach_string_to_buffer(const uint8_t* data,\n     }\n     tidyBufAttach(buffer, (byte*)data_string, strlen(data_string) + 1);\n }\n+#endif /* #if 0 - 00000000000000000000000000000000000 */\n\n int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n     TidyBuffer data_buffer;\n@@ -59,7 +61,9 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n     tidyBufInit(&output_buffer);\n     tidyBufInit(&error_buffer);\n\n-    attach_string_to_buffer(data, size, &data_buffer);\n+    /* attach_string_to_buffer(data, size, &data_buffer); can be binary data!!! ie has null's */\n+    tidyBufAppend( &data_buffer, (void *)data, (uint)size ); /* move data into buffer */\n+    \n     run_tidy_parser(&data_buffer, &output_buffer, &error_buffer);\n\n     tidyBufFree(&error_buffer);\n```\n\nSeems no reason to `strndup` the input, when a `TidyBuffer` offers that same **safe**, complete (8-bit-binary) length copy... \n\nYou could even append a `\"\\0\"`, if you think that would help... but input length is input length in tidy,,,\n\nStill to test out the results... \n\nSome initial trouble, that maybe `sudo python infra/helper.py build_fuzzers --sanitizer=address tidy-html5 --clean` might remove...\n\nThanks for the help, feedback... look forward to more... thanks...\n. @stefanbucur - suggested changes push to my fork, `test-tidy` branch...\n\n  * Add cmake flags to build.sh - https://github.com/geoffmcl/oss-fuzz/commit/3078d1c6918ea90a3eefdfd42f7d139fa997f592\n  * Suggested TidyBuffer change - https://github.com/geoffmcl/oss-fuzz/commit/89f6dfc86cc80c86e92dd0cd999a0b4d8981bbce\n\nBut still some troubles in testing... any help appreciated... thanks...\n. tidy-sanitize-05.txt\n\n@stefanbucur some steps forward, but some failures...\n\nWas unable to get the error output, to show the addresses... do not know why... need more help... but...\n\nUsing the 4 samples - 12111 12309 12074 12411 - only 1 and 4 showed an error, but it looks like the same error! a 1 byte overrun...\n\nUsing my fork amended `tidy_fuzzer.c` got **no errors**...\n\nJust to hopefully prove the point, made another **test** fix of `tidy_fuzzer.c` - removing `strndup` and `strlen` - \n\n```\ndiff --git a/projects/tidy-html5/tidy_fuzzer.c b/projects/tidy-html5/tidy_fuzzer.c\nindex 3cf2732d..5c582b4b 100644\n--- a/projects/tidy-html5/tidy_fuzzer.c\n+++ b/projects/tidy-html5/tidy_fuzzer.c\n@@ -42,13 +42,16 @@ void attach_string_to_buffer(const uint8_t* data,\n                              size_t size,\n                              TidyBuffer* buffer) {\n     // Use a NULL-terminated copy to make it more likely to expose\n-    // buffer overflows.\n-    char *data_string = strndup((const char*)data, size);\n+    // buffer overflows. Where is this documented?\n+    /* char *data_string = strndup((const char*)data, size); */\n+    char *data_string = (char *)malloc( size + 1 ); /* allocate desired buffer + 1 */\n     if (data_string == NULL) {\n         perror(\"Could not allocate string buffer.\");\n         abort();\n     }\n-    tidyBufAttach(buffer, (byte*)data_string, strlen(data_string) + 1);\n+    memcpy( data_string, data, size ); /* copy in the data */\n+    data_string[size] = 0; /* ensure zero term., not really required, but no harm... */\n+    tidyBufAttach(buffer, (byte*)data_string, size + 1); /* attach buffer */\n }\n\n int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n@@ -64,6 +67,8 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n     tidyBufFree(&error_buffer);\n     tidyBufFree(&output_buffer);\n+    /* API NOTE: If user supplied the buffer, should call tidyBufDetach()\n+       so caller must free... but if default malloc/free use, then no prob. with */\n     tidyBufFree(&data_buffer);\n     return 0;\n }\n ```\n\n Note I respect your desire to add a null byte to the input stream... but do not think this adds anything...\n\n And please see API NOTE: using `tidyBufAttach` should be paired with `tidyBufDetach` - that is the caller deals with allocating and freeing, if need be... but...\n\n Prefer the direct data transfer to the `TidyBuffer` as suggested in the previous patch...\n\n Starting to conclude there may be a **bug** in the `fuzzer` code... what do you think...\n . @stefanbucur thanks for the feedback... yes, definitely, using a `TidyBuffer`, you do not have to be concerned about a `\\0`, or 2, or **many** - it works on byte `size` only...\n\nReviewing your patch, using `tidyBufAttach/tidyBufDetach` looks **great**... \n\nBut where is the code? Has it been pushed to the [oss-fuzz](https://github.com/google/oss-fuzz) repo, or **somewhere else**... can not seem to get the code...\n\nWill try to find time to patch my fork accordingly... and test again... including running your `python` filter on `*testcase*85920` - issue 12111... \n\nYou will note issue #798 ... is maybe related to issue 12074 - `*testcase*75712` - an `IsHighSurrogate` indication... but we will have to see after that is fixed... shortly, I hope...\n\nAs indicated, the **important** issue here is to be able to `replicate` the bug(s)... find the code problem... then we can do something about them... thanks...\n. @stefanbucur thanks for the merged PR... updated my `oss-fuzz` clone, **and** my `oss-fuzz-fork`... rebuilt the `fuzzer` exe, x 2... docker is quite slow at re-creating the `/usr/lib/libFuzzingEngine.a` each time, but not a problem...\n\nGot no error in the `oss-fuzz` re-tests... yuk!\n\nIn my `oss-fuzz-fork`, added your `python` rewrite of `*testcase*85920`, issue 12111... the file **is** reduced from 15794 to 15159 bytes... \n\nBut, sorry, still **no** errors...\n\nSeem out of options... What to try next? \n\nAny help appreciated... Thanks...\n. @stefanbucur oops, belay that...\n\nNow that I look at the test log, there is an error on the modified `*testcase*85920.nt`... null terminated copy... don't know how I missed it...\n\nBut it is the **same** as previous... `heap-buffer-overflow`... 1 byte... and like before, **all** function references are missing...\n\nNow if we could get address references into that, we **may** be on the way to somewhere...\n\nAs stated, any help appreciated... thanks...\n. 20190203:oss-fuzz-02.txt\n\nYikes, \n\nHad done, as mentioned -\n\n```\n$ cat ~/downloads/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920 \\\n  | python -c 'import sys; input = sys.stdin.read(); print input[:input.find(\"\\0\")+1]' \\\n  >~/downloads/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920.nt\n$ sudo cp ~/downloads/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920.nt \\\n  build/out/tidy-html5/\n```\n\nGot -\n\n```\n-rw-rw-r--  1 geoff geoff     15794 Jan 15 15:26  clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920\n-rw-r--r--  1 geoff geoff     15159 Feb  2 03:45  clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920.nt\n```\n\nDocker rebuilt all -\n\n```\n~/projects/oss-fuzz-fork$ ./build/work/tidy-html5/tidy-html5/tidy -v\nHTML Tidy for Linux version 5.7.22.SN01\n~/projects/oss-fuzz-fork$ dir ./build/work/tidy-html5/tidy-html5/tidy\n-rwxr-xr-x 1 root root 13949312 Feb  3 19:46 ./build/work/tidy-html5/tidy-html5/tidy\n```\n\nRunning -\n\n```\n$ sudo python infra/helper.py shell base-runner-debug\n```\n\nthen -\n\n```\nroot@4d33795a92ff:/# gdb --args /out/tidy-html5/tidy_fuzzer /out/tidy-html5/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920.nt\nGNU gdb (Ubuntu 7.11.1-0ubuntu1~16.5) 7.11.1\nCopyright (C) 2016 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from /out/tidy-html5/tidy_fuzzer...done.\n(gdb) run\nStarting program: /out/tidy-html5/tidy_fuzzer /out/tidy-html5/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920.nt\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library \"/lib/x86_64-linux-gnu/libthread_db.so.1\".\nINFO: Seed: 1258204244\nINFO: Loaded 1 modules   (6 inline 8-bit counters): 6 [0xad66a8, 0xad66ae), \nINFO: Loaded 1 PC tables (6 PCs): 6 [0x806e80,0x806ee0), \n[New Thread 0x7ffff2679700 (LWP 23)]\n/out/tidy-html5/tidy_fuzzer: Running 1 inputs 1 time(s) each.\nRunning: /out/tidy-html5/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920.nt\n=================================================================\n==19==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x625000002100 at pc 0x00000066be59 bp 0x7fffffffd450 sp 0x7fffffffd448\nWRITE of size 1 at 0x625000002100 thread T0\nSCARINESS: 31 (1-byte-write-heap-buffer-overflow)\n    #0 0x66be58 in prvTidyEncodeCharToUTF8Bytes /src/tidy-html5/src/utf8.c:357:16\n    #1 0x66cd46 in prvTidyPutUTF8 /src/tidy-html5/src/utf8.c:454:11\n    #2 0x63e3f7 in prvTidyNormalizeSpaces /src/tidy-html5/src/clean.c:1816:21\n    #3 0x63dfe3 in prvTidyNormalizeSpaces /src/tidy-html5/src/clean.c:1798:13\n    #4 0x6449ae in prvTidyReplacePreformattedSpaces /src/tidy-html5/src/clean.c:2540:13\n    #5 0x644a33 in prvTidyReplacePreformattedSpaces /src/tidy-html5/src/clean.c:2546:13\n    #6 0x644a33 in prvTidyReplacePreformattedSpaces /src/tidy-html5/src/clean.c:2546:13\n    #7 0x644a33 in prvTidyReplacePreformattedSpaces /src/tidy-html5/src/clean.c:2546:13\n    #8 0x5c3345 in tidyDocSaveStream /src/tidy-html5/src/tidylib.c:2240:9\n    #9 0x5bdb8c in tidyDocSaveBuffer /src/tidy-html5/src/tidylib.c:1383:18\n    #10 0x5bdac4 in tidySaveBuffer /src/tidy-html5/src/tidylib.c:1249:12\n    #11 0x5351bb in run_tidy_parser /src/tidy_fuzzer.c:36:9\n    #12 0x53532a in LLVMFuzzerTestOneInput /src/tidy_fuzzer.c:50:5\n    #13 0x55fba6 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:526:15\n    #14 0x535e66 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:283:6\n    #15 0x541706 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:684:9\n    #16 0x5354dc in main /src/libfuzzer/FuzzerMain.cpp:19:10\n    #17 0x7ffff6ee582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n    #18 0x41d158 in _start (/out/tidy-html5/tidy_fuzzer+0x41d158)\n\n0x625000002100 is located 0 bytes to the right of 8192-byte region [0x625000000100,0x625000002100)\nallocated by thread T0 here:\n    #0 0x4ef97f in malloc /src/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:145\n    #1 0x661f1e in defaultAlloc /src/tidy-html5/src/alloc.c:64:45\n    #2 0x661f8b in defaultRealloc /src/tidy-html5/src/alloc.c:81:16\n    #3 0x60bd1d in AddByte /src/tidy-html5/src/lexer.c:957:24\n    #4 0x60b9e2 in prvTidyAddCharToLexer /src/tidy-html5/src/lexer.c:996:9\n    #5 0x614ad7 in GetTokenFromStream /src/tidy-html5/src/lexer.c:2561:9\n    #6 0x6128ec in prvTidyGetToken /src/tidy-html5/src/lexer.c:2507:12\n    #7 0x5fe711 in prvTidyParseDocument /src/tidy-html5/src/parser.c:4606:20\n    #8 0x5bf653 in prvTidyDocParseStream /src/tidy-html5/src/tidylib.c:1500:9\n    #9 0x5bcd97 in tidyDocParseBuffer /src/tidy-html5/src/tidylib.c:1195:18\n    #10 0x5bcd04 in tidyParseBuffer /src/tidy-html5/src/tidylib.c:1120:12\n    #11 0x535163 in run_tidy_parser /src/tidy_fuzzer.c:33:9\n    #12 0x53532a in LLVMFuzzerTestOneInput /src/tidy_fuzzer.c:50:5\n    #13 0x55fba6 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/libfuzzer/FuzzerLoop.cpp:526:15\n    #14 0x535e66 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/libfuzzer/FuzzerDriver.cpp:283:6\n    #15 0x541706 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/libfuzzer/FuzzerDriver.cpp:684:9\n    #16 0x5354dc in main /src/libfuzzer/FuzzerMain.cpp:19:10\n    #17 0x7ffff6ee582f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /src/tidy-html5/src/utf8.c:357:16 in prvTidyEncodeCharToUTF8Bytes\nShadow bytes around the buggy address:\n  0x0c4a7fff83d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c4a7fff83e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c4a7fff83f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c4a7fff8400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c4a7fff8410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c4a7fff8420:[fa]fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c4a7fff8430: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c4a7fff8440: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c4a7fff8450: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c4a7fff8460: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c4a7fff8470: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==19==ABORTING\n[Thread 0x7ffff2679700 (LWP 23) exited]\n[Inferior 1 (process 19) exited with code 01]\n(gdb) \n```\n\nStill digesting **all** that... \n\nSeems a good lead, in that it happens in `tidySaveBuffer`, after the parse, and now a repeatable input `*testcase*85920.nt`... \n\nInvestigating, as time permits...\n. Windows: Tried Dr. Memory - [undated](https://github.com/DynamoRIO/drmemory/releases) to DrMemory-Windows-1.11.17918-1 - using the tidy `RelWithDebInfo` build, on the `*testcase*85920.nt`, but, alas, no mem. errors detected...\n\n```\nBegin 2019-02-04  3:16:46.12 \nHTML Tidy for Windows version 5.7.22\n2019-02-02  03:45            15,159 clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920.nt\n         Dr. Memory version 1.11.17918\n         Running \"F:\\Projects\\tidy-html5\\build\\Win64\\RelWithDebInfo\\tidy.exe -f temperr64.txt C:\\Users\\user\\Documents\\Tidy\\temp-788\\clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920.nt\"\n\n         NO ERRORS FOUND:\n               0 unique,     0 total unaddressable access(es)\n               0 unique,     0 total invalid heap argument(s)\n               0 unique,     0 total GDI usage error(s)\n               0 unique,     0 total handle leak(s)\n               0 unique,     0 total warning(s)\n               0 unique,     0 total,      0 byte(s) of leak(s)\n               0 unique,     0 total,      0 byte(s) of possible leak(s)\n         Details: D:\\DrMemory\\DrMemory-Windows-1.11.17918-1\\drmemory\\logs\\DrMemory-tidy.exe.860.000\\results.txt\n         WARNING: application exited with abnormal code 0x2\n```\n\nBut this does **not** involve printing to a `TidyBuffer`, where I think the overrun may have occured... do not know yet... just onwards...\n. @stefanbucur yes, a week or so back, I did run my [tidy-by-buf](https://github.com/geoffmcl/tidy-test/blob/master/src/tidy-by-buf.c) app, sort of a special version of tidy, only using `TidyBuffer`, with Dr. Memory, in Windows, and got `sort of` a **hit**???\n\n```\nBegin 2019-02-05 21:28:38.96 \ntidy-by-buf version 5.7.22, circa 2019-02-05\ntidy-by-buf: Using library HTML Tidy for Windows, circa 2019/01/31, version 5.7.22\n2019-02-02  03:45            15,159 clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920.nt\n         Dr. Memory version 1.11.17918\n         Running \"F:\\Projects\\tidy-test\\build.x64\\relwithdebinfo\\tidy-by-buf.exe C:\\Users\\user\\Documents\\Tidy\\temp-788\\clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920.nt\"\n\n         Error #1: UNADDRESSABLE ACCESS beyond heap bounds: writing 1 byte(s)\n         prvTidyEncodeCharToUTF8Bytes\n             ??:0\n         prvTidyPutUTF8 \n             ??:0\n         prvTidyNormalizeSpaces\n             ??:0\n         prvTidyReplacePreformattedSpaces\n             ??:0\n         prvTidyReplacePreformattedSpaces\n             ??:0\n         prvTidyReplacePreformattedSpaces\n             ??:0\n         prvTidyReplacePreformattedSpaces\n             ??:0\n         tidyDiscardElement\n             ??:0\n         prvTidyReportMarkupVersion\n             ??:0\n         tidySaveBuffer \n             ??:0\n         run_tidy_parser\n             f:\\projects\\tidy-test\\src\\tidy-by-buf.c(139):\n         LLVMFuzzerTestOneInput\n             f:\\projects\\tidy-test\\src\\tidy-by-buf.c(159):\n         tidy_by_buffer \n             f:\\projects\\tidy-test\\src\\tidy-by-buf.c(279):\n         main           \n             f:\\projects\\tidy-test\\src\\tidy-by-buf.c(298):\n         Note: refers to 0 byte(s) beyond last valid byte in prior malloc\n\n         ERRORS FOUND:\n               1 unique,     1 total unaddressable access(es)\n               0 unique,     0 total invalid heap argument(s)\n               0 unique,     0 total GDI usage error(s)\n               0 unique,     0 total handle leak(s)\n               0 unique,     0 total warning(s)\n               0 unique,     0 total,      0 byte(s) of leak(s)\n               0 unique,     0 total,      0 byte(s) of possible leak(s)\n         Details: D:\\DrMemory\\DrMemory-Windows-1.11.17918-1\\drmemory\\logs\\DrMemory-tidy-by-buf.exe.12316.000\\results.txt\n         WARNING: application exited with abnormal code 0x2\n```\n\nBut in quite a number of MSVC Debug sessions, on this, have been unable to get to the actual **overrun**... so no `fix` yet... sadly...\n\nYou a very correct, `the parser creates some structure that keeps around pointers to the input,...`, it is called the `lexer`... all `text` parsed by tidy during input phase, is moved to and **stored** in this buffer, expanding it, as required... and nodes that contain text, store a `start` and `end` offset into this `lexer` buffer...\n\nThe input stream is then closed. After this, there is the `Clean & Repair` phase...\n\nThen in the **output** phase, `tidySaveBuffer`, the node's text is accessed using these `start`/`end` offsets... I suspect, practically the last node output, in this case, is somehow overrunning this buffer... maybe, or maybe something else... very difficult to trap, since `prvTidyPutUTF8/prvTidyEncodeCharToUTF8Bytes` is called **many** times for this sample file...\n\nWaiting until I can get up steam to **attack** this again... it is quite **frustrating** ...\n\nAs to whether I want to be listed, in the `oss-fuzz` repo, as the **primary maintainer**, I am not too sure...\n\nAlready this issue of `fuzz` testing has cost a lot of time - even to the extent of writing the above `tidy-by-buf`, to try to **imitate** the `fuzzer's` use of `libTidy` - has not yielded a great deal... \n\nOut of the 4 items raised - 12111/~85920/UTF8Bytes, 12309/~15552/GetSurrogate, 12074/~75712/IsHighSurr, 12411/~84448/pprinttext - only in the first were we able to maybe **repeat** the results, and even then, not until you worked on it, modified it... including the `fuzzer` module itself...\n\nI certainly do not want to be **overloaded** with so called `fuzz` failures/reports... there has to be a **repeatable** scenario... without that, they are just an unconfirmed report, of something!... that may in fact be a **false** positives...\n\nBut will always do my best to investigate if/when raised, as an **issue**, here, with a **repeatable** sample... \n\nSo we really need to do some sort of **triage** of `oss-fuzz` reports, and copy only the tested, repeatable ones here... if there are more... \n\nIs that person you? or others? Certainly **need** help testing, finding, fixing... etc... \n\nLook forward to further feedback... thanks...\n\n. @hosiet thank you for the issue, but this is really a **repeat** of #681...\n\nIt is true in Windows and MAC, as well as unix/linux... and yes, I think is a regression from 5.6 onwards...\n\nSome solutions have been discussed there... but no one has got around to coding it yet... any help appreciated... thanks...\n\nMeantime closing this... in deference to open #681 ...\n. @longcdf thank you for the issue... but at this time do not understand...\n\nUsing your input, and a config of `-w 0`, on current 5.7.17, I **repeat** the output of 1., given an obvious different **name** `<h3>Ledige stillinger</h3>`... but that error aside...\n\nWhat version of **`libTidy`**? Hopefully https://github.com/htacg/tidy-html5 `next` source...\n\nHow are you using `libTidy`? In what container, app, lib, whatever... src...\n\nA random happening can only be explained as due to configuration, at the **moment** `libTidy` runs... care with multiple threads...\n\nA library, like `libtidy.a`, has to produce the **same** output, given a config, and an input, a **gzillion** times over... forever... no random change... not possible... code paths can not change, without change...\n\nSo, at this moment, I really do not see how `libTidy` could **very randomly** output 2...\n\nEven the sense is changed - the `<h3>` header is also a link to the URL... another anchor `<a ...>name</a>` added... the input **must** have changed...\n\nAt this time do **not** understand the problem... more information needed... thanks...\n. Or you could pull the `issue-791` branch, test and report... thanks...\n. Have now created PR #809 to free an allocation used in `-xml-help` generation.... @davidmichaelkarr thanks for the issue... but not sure what you are doing... I guess it seems something like `convert html to xml`?\n\nIf that is it, I am not sure such `conversion` is a primary purpose of `tidy`...\n\nJust I **know** there have been no code changes, fixes, or improvements in the `--output-xml yes` [option](http://api.html-tidy.org/tidy/quickref_next.html#output-xml) code in many, **MANY**, years... and maybe there are other existing `xml` issues/bugs... need to check...\n\nBut maybe something can be done... when we know what to fix, improve, etc... \n\nFirst let's try to understand your **exact** configuration options tried - please be precise -\n\n  * --html - What option is this?\n  * --xmlout - What option is this?\n\nThen a **small** sample of the problem(s)... and what version of `tidy` are you using?\n\nCan you construct a minimum input case, show what config you set, what output you get, and what output you expect... thanks...\n. @davidmichaelkarr assuming you meant option `-asxml`, or `-asxhtml` - please take care...\n\nThat is `--output-xml yes`, or in a cfg file, `output-xml: yes`, and glad to hear you found the output **consistent**... from what ever **version** of tidy you are using...\n\nJust searching around, and there may be other related issues, found open #767, but that is with `-ashtml`... still searching...\n\nSo maybe `-asxml` could also have problems... but would appreciate a **new** issue on this/these... \n\nMeantime closing this... thanks...\n. @SConaway thanks for the `typo` fix... will merge this soonest... **doc** enhancements always welcome...\n. @yaccz thanks for the issue...\n\nIt is also good to give a minimum html example input, tidy version, config used, output, and expected output, just to make quick testing easier... \n\nHere I built some of my own, 4 `in_794(0-3).html` files, and used current `next`, `5.7.20`, but also the following `I752-1*` build... \n\nMy first sample -\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Is. #754</title>\n</head>\n<body>\n<p>Drop empty element</p>\n<p></p>\n<p>--mute TRIM_EMPTY_ELEMENT should drop warning</p>\n</body>\n</html>\n```\n\nAt first I thought this might be `related` to issue #752, PR #764, branch `issue-752`, build `I752-1`, but it seems not directly...\n\nThere are several precedents where an option avoids a `warning` message, and thus also does not bump the doc warning count...that is does not contribute to `a non-zero exit`...\n\nOff the top of my head is say, a `missing DOCTYPE!` warning is avoided if you configure `--show-body-only yes`... and not only is the warning message dropped, but the `tidyWarningCount( tdoc )`, ie the internal `doc->warnings`, is **not** incremented...\n\nBut there are other examples of where the users input changes the `doc->warnings` count... still checking... examples appreciated... thanks...\n\nSo if the user configures `--mute TRIM_EMPTY_ELEMENT`, which says be quiet about dropping empty elements, don't want to hear about it... ok... maybe `tidy` should **not** bump the `doc->warnings` count?\n\nAt present, on sample 1, with `I762-1`, you get output like -\n\n```\nInfo: messages of type \"TRIM_EMPTY_ELEMENT\" will not be output\nInfo: Document content looks like HTML5\nTidy found 1 warning and 0 errors!\n```\n\nIt says `found 1`, but showed **none**... and Tidy exit level is 1...\n\nAlthough, in this case, there is a `--drop-empty-element no` option also... but maybe not important...\n\nSeems `mute/drop the warning` is the users request...for all `--mute XXXX` options, ... equals no msg, no bump...\n\nLook forward to comments, patches, PR to change this behavior, if all agreed this is a valid Feature Request... \n\nThinking, testing, trying... thanks...\n. @yaccz have started to look a little deeper... thanks for the feedback...\n\nThe classification is **not** important... if the maintainer, who introduced this `mute` option, **intended** this behavior, then is not yet a **bug**... and while I can not read minds, studying the `internals` is the only clue available... but let's not get hung up about semantics... so on with the issue...\n\nWhich is `--mute should suppress non-zero exit code`, at least **not contribute to a non-zero exit**...\n\nMaybe my too quick choice of `missing DOCTYPE!` and `--show-body-only yes` as an example is **not** a good one... I did ask for others... \n\nIn further testing, find there are others cases, where the `message` would be suppressed, but the `doc->warnings` would remain incremented, giving a non-zero exit... so maybe this is the **normal** behavior... could say `intuitive` even...\n\nA quick example -\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Is. #754-4</title>\n</head>\n<body>\n<p>Open div warning, suppressed</p>\n<div id=\"open\">\n<p>'--show-warnings no' drops msg but not exit-level</p>\n</body>\n</html>\n```\n\nThe test output - \n\n```\n2019-01-21  19:19           767,488 tidy.exe\nF:\\Projects\\tidy-test\\test>F:\\Projects\\tidy-html5\\build\\temp-794\\Release\\tidy.exe -v\nHTML Tidy for Windows version 5.7.20.I794\nF:\\Projects\\tidy-test\\test>F:\\Projects\\tidy-html5\\build\\temp-794\\Release\\tidy.exe  --show-warnings no input5\\in_794-4.html\nInfo: Document content looks like HTML5\nTidy found 1 warning and 0 errors! Not all warnings/errors were shown.\n...\nt-794: Tidy exit level 1\n```\n\nAgain `tidy` says `found 1`, but showed **none**... and Tidy exit level is 1... like the `-mute XXXX` case... but ...\n\nBut does have the addition `Not all warnings/errors were shown.`... hmmm, how was that triggered? ... \n\nMaybe that could also be triggered by a `--mute XXXX` option... More research, help, examples, etc needed... \n\nSo we can see `examples` **are** always **very important**, to at least show, expose, the **current** behavior... and sometimes version counts... then decide **bug**, **design**, **change**, **right**, **wrong**, **better**, **worse**, whatever...\n\nIn this case `tidy` **altered** the document - TRUE... while there are options which omit the msg output, they should **not** alter the exit value! Maybe exceptions...\n\nStill digging... comments, feedback welcome... thanks...\n. @ler762 thanks for the additional testing... but not sure what has been added...\n\n> does have the addition ``Not all warnings/errors were shown.`` ... hmmm, how was that triggered?\n\nThe answer to this is current **simple** code choice - some spaces removed for compactness -\n\n```\nvoid TY_(ReportNumWarnings)( TidyDocImpl* doc ) {\n    if ( doc->warnings > 0 || doc->errors > 0 )     {\n        if ( doc->errors > cfg(doc, TidyShowErrors) || !cfgBool(doc, TidyShowWarnings) ) {\n            TY_(Dialogue)( doc, STRING_NOT_ALL_SHOWN );\n        } else {\n            TY_(Dialogue)( doc, STRING_ERROR_COUNT );\n        }\n    } else {\n        TY_(Dialogue)( doc, STRING_NO_ERRORS );\n    }\n}\n```\n\nNot very exact, but sort of does the job... and `--mute XXXX` could be included in the 3rd line, if condition, probably by, adding say ` || doc->muted.list`, or something... not tested yet... making `mute` conform... that is show the extra info...\n\nReading the API docs on [mute](http://api.html-tidy.org/tidy/quickref_next.html#mute)... it seems clear... it has the words `prevent Tidy from **displaying** certain types of report output`... my emphasis on **show**... \n\nIt says nothing about also preventing Tidy bumping doc warnings... that is the exit code... and thinking about it more, why should it... the exit code is the true state, and **must** be kept/maintained, IMO...\n\nWhile it seems/is ok to suppress console message output... we **all** want that!... \n\nI implemented `--show-info no`, just because, in repeated testing, I wanted **less** console output... at least of a particular type/category... `mute` was a great, and extension of that, offering fine control over output... i.e. what is **shown**...\n\nBut never changing the `exit code` policy - see [implement libTidy](http://api.html-tidy.org/tidy/tidylib_api_next/libtidy_03.html) - paraphrased, 0, all is well, no doc change, good doc, 1, oops, found warnings, some of which hope are fixed in the output, 2, errors, that can **not** be fixed... and of course some negative exits, like could not find the file...\n\nAlso `libTidy` supports an API to be called back before each output, see say [tidySetReportCallback](http://api.html-tidy.org/tidy/tidylib_api_next/libtidy_03.html), and you can `filter` the output, but that too does **not** influence the `exit` code...\n\nSee the code order of [messageOut](https://github.com/htacg/tidy-html5/blob/next/src/message.c#L104)... note the `switch ( message->level )`, which sets these doc values, before any of the many `go` filters... which can then inhibit output...\n\nAll in all, it seems it is **not** ok to change the `exit code`... `tidy` made a doc change... it **must** reflect that... at least in exit, if not visually to the console, if requested **not** to... by many things...\n\nThe question becomes, should `tidy` **break** that existing policy? \n\nIf yes, give the **use** case... and for **all**, or some... be specific, as best you can... \n\nThis does **not** seem like one of them... at least at the moment... and maybe should be a **new** separate issue anyway...\n\n@yaccz, as suggested earlier, you could add `--drop-empty-element no` to your config, and this whole issue becomes **mute**... ;=))\n\nThe default `tidy` behavior does **not** suit everybody... so we have `configs`, to suit the current use...\n\nWe should support the `extra` message, ie `STRING_NOT_ALL_SHOWN`, for `mute`, like the **others**, and will work towards this, conformity...\n\nAppreciate further comments, feedback, patches, even tested PR, to implement, at least this step... thanks...\n. @yaccz - Testing patch to add `not all shown`, making `--mute XXXX` conform to say the `--show-warning no` option...\n\n```diff\ndiff --git a/src/message.c b/src/message.c\nindex 0900407..198ca2e 100644\n--- a/src/message.c\n+++ b/src/message.c\n@@ -1291,12 +1291,19 @@ void TY_(ReportMarkupVersion)( TidyDocImpl* doc )\n\n /* Reports the number of warnings and errors found in the document. \n ** Called by tidyRunDiagnostics(), from console.\n+** \n+** If there are 'warnings' or 'errors', then add 'not all shown'\n+** msg, if the are any options that 'limit' message output. Not \n+** intended to be accurate or exact, just an indication that\n+** some message(s) **may** have been suppressed, for some reason.\n */\n void TY_(ReportNumWarnings)( TidyDocImpl* doc )\n {\n     if ( doc->warnings > 0 || doc->errors > 0 )\n     {\n-        if ( doc->errors > cfg(doc, TidyShowErrors) || !cfgBool(doc, TidyShowWarnings) )\n+        if ( doc->errors > cfg(doc, TidyShowErrors) || !cfgBool(doc, TidyShowWarnings) ||\n+             doc->muted.list) /* Is. #794 - add '--mute XXXX' option \n+                                 to other options which limit messages */\n         {\n             TY_(Dialogue)( doc, STRING_NOT_ALL_SHOWN );\n         }\n```\n\nSeems to work... \n\nAppreciate if others could test, confirm this **fixes** the conformity **bug**... thanks...\n. To make it easy for testing, have pushed this patch to the `issue-794` branch... and the test cases to my [tidy-test](https://github.com/geoffmcl/tidy-test) repo ...\n\n```\n$ cd tidy-html5 # get to tidy cloned source\n$ git pull # update src\n$ git checkout issue-794\n$ cd build/cmake\n$ cmake ../.. [other options] [-DTIDY_RC_NUMBER=I794] # add identifying version\n$ make # build tidy...\n$ ./tidy [-v] or [test_input] like [--mute TRIM_EMPTY_ELEMENT ../../../tidy-test/test/input5/in_794.html]\n```\n\nThis change may effect the [tidy-html4-tests](https://github.com/htacg/tidy-html5-tests) **regression** tests... still to test this... any help appreciated...\n\nAs stated, be great if others could **test**, and **confirm** this patch/fix... and will get to a PR... thanks...\n. In a quick `regression` test, yes tidy v.5.7.20.I794, as expected, **fails** on `case-629.txt`... will work towards a PR for this also, unless someone beats me to it... thanks...\n. @yaccz thank you for testing `issue-794`, but do not understand `Not working as expected.`?\n\nI assume you `expected` the option `--mute TRIM_EMPTY_ELEMENT` to **not** bump the exit code. Not true... it does...\n\nPlease re-read **all** the comments, except my **first**! ;=))\n\nAt first I thought it a reasonable request, but on exploring, testing more, I rejected this... reversed my initial thoughts... sorry...\n\nCiting that there were already some options to **suppress** message output, including `-quiet`, but **none** that changed the `exitcode`... and `--mute XXXX` should conform to these... ie **not** be a **special** no exit code case...\n\nThus the **only** difference between current `tidy`, and `tidy-I794` is the message output, if allowed by removing `-q` from the config will be -\n\n```\nTidy 5.7.22\n...\nTidy found 1 warning and 0 errors!\n...\n```\n\nto\n\n```\nTidy 5.7.20.I794\n...\nTidy found 1 warning and 0 errors! Not all warnings/errors were shown.\n...\n```\n\nBut **both** will exit with 1... this has not changed...\n\nThe document **has** been modified by `tidy`... accordingly `tidy` can **not** exit 0... which indicates `Success, good to go.`... \n\nIt is **not** `good to go`... it has an error, which you should fix, if you want the default config `--drop-empty-element yes`... you can change that config, and get 0, if that is what you want...\n\nNote to self, `issue-794`, version 5.7.20, needs to be rebased to `next`, version 5.7.22, which has another `--mute XXXX` option change... namely `Config:` to `Info:`...\n\nLook forward to further feedback... thanks...\n. @brennanyoung just a quick read... but have you tried [show-body-only](http://api.html-tidy.org/tidy/quickref_next.html#show-body-only) in your config?... will try to read again later.... @brennanyoung this seems a laudable aim - in brief - `to warn/fix on boolean attributes`... thanks for the issue... and W3C ref. link...\n\nWhile you have given a snippet example, `hidden=\"false\"`, thanks, can you please put it in context...\n\nThat is, supply one, or **more**, minimum html input examples, tidy version under test, config used, current output, and **expected** output...\n\nI quickly wrote one, `input5\\in_796.html` -\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Is. #796</title>\n</head>\n<body>\n<div hidden=\"false\">\n<p>Bad boolean attribute</p>\n</div>\n</body>\n</html>\n```\n\nTidy `next` **5.7.20** outputs - `No warnings or errors were found.`... Hmmmm... **not** good...\n\nThe Nu Html Checker flags it -\n\n```\nError: Bad value false for attribute hidden on element div.\nFrom line 8, column 1; to line 8, column 20\nd>\u21a9<body>\u21a9<div hidden=\"false\">\u21a9<p>Ba\n```\n\nBut need **more** test inputs, minimum, examples... thanks...\n\nConcerning your list of `boolean attributes in html5`, that would need to be compared to the internal `libTidy` [attr.c](https://github.com/htacg/tidy-html5/blob/next/src/attrs.c#L99) ... look for `CH_BOOL`, in the static table... saw some matches...\n\nExplored with `--strict-tags-attributes yes` and `--literal-attributes yes`, but no effect... maybe there are other options to try... need testing...\n\nSearched issues for `boolean attribute`, and found #58, #69, #142, #395, #436, ... particularly, open #439, #654, ... others?... which need to be explored, reread, for any overlap/pending...\n\nOtherwise, looks a valid tidy `enhancement`, but do not have such a label, so using FR...\n\nFeedback, comments, patches, and eventually agreed PR, very welcome... thanks...\n. @brennanyoung thank you for the examples... but...\n\nBut it seems the 2nd example `<p visible=\"hidden\">` is **not** valid html... or have I got something wrong?\n\nTesting it with tidy `5.7.21` get `Warning: <p> proprietary attribute \"visible\"`, with [nu](https://validator.w3.org/nu/#file), get `Error: Attribute visible not allowed on element p at this point.`...\n\nHowever, the first sample I chose had `<div hidden=\"false\">`, which seems valid html otherwise...\n\nSo we have two samples... with otherwise valid html... that seems enough, to **start**... others could be snippets, when needed...\n\nNow down to the code... still testing, searching, understanding... \n\nIt seems **all** in `AttributeChecks`, called at the end of `ParseDocument`... for every node, starting at `root`... \n\nAnd in both sample cases, the attributes `hidden` and `control` are marked as `CH_PCDATA`, which is a `NULL`, in the `attribute_defs` table, ... so tidy does no check!\n\nHave yet to test marking them as `CH_BOOL`, ie `CheckBool`... but a quick read of the code says it will still do nothing... but seems could easily be added...\n\nSo, still digging into this **feature**... \n\nAny comments, feedback, comparing lists/tables, code, patches, etc, etc... very welcome... thanks...\n. @brennanyoung thanks for the clarification... but I think we should, initially at least, stick with samples that demonstrate just **this** issue... \n\nContinuing the code research...\n\nI added a sample with `<input ... Checked=\"True\">`, since `checked` is already marked as `CH_BOOL`, thus will go through `CheckBool`... to see what happens...\n\nAs suspected, although, while in `CheckLowerCaseAttrValue`, the `T` is **silently** changed to `t`, ie lowercase - why? - it makes no check that the `value` **matches** the attribute `name`... \n\nNote, in `CheckBool`, `Checked` had already been converted to `checked`? Need to check, understand, where that happens... why... etc...\n\nThen the code to **match** would be simple to **add**...\n\nLike the `tidy` equivalent of `if (strcmp(attval->attribute,attval->value)) { printf(\"TODO: Msg, we have a BA prob.\\n\"); }`... need to add the correct report/message/enum... \n\nAnd then to decide what, if anything, to do about it... ie any fix? and adjusting the chosen warning `message` to this...\n\nYour initial comment showed some 44 boolean attributes... is that **all**? ... need to check, verify W3C references... but that aside...\n\nHowever `attrs.c` has only some 21 marked as `CH_BOOL`... \n\nSo even if the above pseudo code addition were implemented, only some 50% of the attributes, the `BA`, would pass through it... this needs to be corrected, changed, modified....\n\nIf, like `hidden` and `control`, changing them from a `NULL` to `CH_BOOL` seems an easy ok, but each of the other changes needs to be checked... verified... understood... one by one...\n\nSo seem to have identified some **step** to achieving this goal... which I will work towards...\n\nAny comments, feedback, comparing lists/tables, code, patches, etc, etc... very welcome... thanks...\n. @dd8 thanks for catching this `not very obvious` **bug**... but easy to see, when you know what to look for...\n\nGiven that `libTidy` has a memory [TidyAllocator](http://api.html-tidy.org/tidy/tidylib_api_next/group__Memory.html#struct__TidyAllocator), that users can set to what they want, `realloc()` should **not** be used in the **raw**, in those 2 cases...\n\n```\nF:\\Projects\\tidy-html5>find /N \">list\" src\\*.c\n---------- SRC\\ATTRS.C\n[801]        priorities->list = realloc( priorities->list, sizeof(tmbstr) * priorities->capacity + 1 );\nand\n---------- SRC\\MESSAGE.C\n[1353]        list->list = realloc( list->list, sizeof(tidyStrings) * list->capacity + 1 );\n```\n\nWill try to include this easy fix somewhere... unless someone beats me to it, with say a `patch`, or `PR`... thanks...\n. @dd8 that would be appreciated... maybe I can then include it in the next `merge` I do... thanks...\n. @dd8 now applied, version **5.7.22**... thanks...\n. @dd8 thank for the issue and the patch... will try to include it soon... maybe remind me if too long...\n\nIt is interesting, one of the issues mentioned in #788, 12074 I think, mentioned `IsHighSurrogate`, but was **unable** to repeat the bug... as usual, without being able to **replicate**, is very difficult to **investigate**... but maybe this is it? ...\n\nBut regardless of that, agree with your assessment, we ignore the `scanf` return, to our peril, thus the patch looks, logic-wise, **good**... \n\nAs stated, baring any negative comments, will try to include it soonest... thanks...\n. @sonyps5201314 thank you for the issue, through a suggested patch fix no less...\n\nAfter testing, and some debugging, I agree, but the issue is more something like `messageobj API can return a non null terminated string!`, or something... more descriptive... but a **bug**... but you have found it...\n\n#### Research\n\nYes, it does look like the MSVC docs [strncpy](https://msdn.microsoft.com/query/dev14.query?appId=Dev14IDEF1&l=EN-US&k=k%28STRING%2Fstrncpy%29%3Bk%28strncpy%29%3Bk%28DevLang-C%2B%2B%29%3Bk%28TargetOS-Windows%29&rd=true&f=255&MSPPError=-2147217396), which documents, in part, `If count is less than or equal to the length of strSource, a null character is not appended ...`... AWK!\n\nAnd in unix docs, like [strncpy](http://man7.org/linux/man-pages/man3/strcpy.3.html), says, in part `If there is no null byte among the first n bytes of src ...`, no null termination... AWK!\n\nYikes, `unix` and `windows` docs agree... sort of... ;=))\n\n#### Test Case\n\nAny clean html... any tidy version, probably since the `messageobj` first appeared...\n\nNow, one of the most commonly seen outputs is `Info: Document content looks like %s`... in this case `fmt + nas[cn].formatStart` sets `source` as `%s`, length 2, being near end of the string...\n\nAnd the `count`, `nas[cn].formatLength`, would also be 2... \n\nIpso facto, only `%s` would be copied to the destination, `nas[cn].format`... **no null added** ...\n\nThis dst (fixed buf len 21) can be seen in MSVC as `%s!!!!...`, where the `!` character represents the debug fill done... D.AWK!\n\n#### The Fix\n\nApplying your patch, and adding a comment, suggest -\n\n```diff\n+            nas[cn].format[nas[cn].formatLength] = 0; /* Is. #800 - If count <= srcLen, no 0 added! */\n```\n\nNote, `nas[cn].formatLength` count has already been checked with `if ( nas[cn].formatLength >= FORMAT_LENGTH )`, so no possibility of buffer overrun...\n\nWhile this copied message format is **not** presently later used in `libTidy`, so maybe this **bug** has remained quietly hidden... \n\nHowever, its contents are available, to `libTidy` users, as a C-string, a tidy `ctmbstr`, through API [tidyGetArgFormat](http://api.html-tidy.org/tidy/tidylib_api_next/group__IO.html#gaa4c5005346d2fefb002f76c0ae81ecc6), so **must** be null termainated...\n\nThank you for finding this... are you using this API in your project?\n\nWill apply this patch, baring any negative comments, soonest... remind me if I am too long... thanks...\n. @da2x thank you for the issue... and samples to easily reproduce, with v.5.6.0, even with `tidy` **next**... v.5.7.22... so is still there...\n\nYes, it is related to #760, but only where we maybe should have seen this **extra** newline in the output... but seem to have missed it...\n\nPutting a script block `<script>();</script>` in the **head**, with a config `--tidy-mark 0`, adds an **additional** newline in the output... easily repeatable...\n\nI am sure this can be corrected in the `pretty print` module... and will investigate... as time permits...\n\nMeantime, look forward to feedback, patches, PR, etc... thanks...\n. @da2x in quick testing, it seems maybe you add the **newline**, in echo `\\n`... \n\nThat is, `echo -e \"<body>inline<script>();</script></body>\" | tidy -q` produces **none**, I think...\n\nBut the input interpretation does seem to vary on the `parent` node... `text` or `body` in this case... need to debug... understand...\n\nAnd could be related to #801... not sure... will try to investigate...\n\nMeantime, look forward to feedback, comments, patches, PR, etc... thanks...\n. @da2x it is **not** the exact string `inline`, but that you have created, in `libTidy`, a `text` node, parent `body`, for this `<script...>` block... and as agreed do not yet understand the different input string interpretations... before we get to output...\n\nWell I do understand `libTidy` collection of bytes, from the stream, depends on the `mode`... and this can change, like when the `node` accepts preformated text, so `\\n` becomes **significant**... ie is faithfully stored for output... so still could be related to #801... not sure...\n\nAs stated, need to explore, in debug mode, etc... to understand, or **fix** something... we agree there is a different output... why?\n\nLook forward to feedback, comments, patches, PR, etc... thanks...\n. @da2x done a little bit of debugging... now agree **not** related to #801... \n\nBut probably **is** related to the **mode** active during input streams `token` collection... \n\nCan see what seems to be the problem in the debug output... some lines deleted...\n\n```\nCase 1:in_802.html, with \"<body>any <script>\\n();</script></body>\", get\nEnter ParseBody...\nR=1 C=7: Returning text_node TextNode [any ]4 stream # can be ANY text, w/wout space\nR=1 C=11: Returning starttag node <script> stream\nR=1 C=19: Returning lex-cdata TextNode [\\n();]4 lexer\n...\nCase 2:in_802-1.html, with \"<body><script>\\n();</script></body>\", get\nEnter ParseBody...\nR=1 C=7: Returning starttag node <script> stream\nR=2 C=1: Returning lex-cdata TextNode [();]3 lexer\n...\n```\n\nNote in case 1, the text stored, correctly, includes the newline `[\\n();]4`, and it will be added to the output... while in case 2, the newline has been **lost**! `[();]3` - UGH! Why?\n\nMaybe it is a little **misleading** to say `extra newline inserted ...`, as in this title... but it looks a little like that in output... but...\n\nThe first newline in a script tag's CDATA like text is **lost** in case 2:... **BUG**\n\nIt is preserved in case 1:, and faithfully added to the output... \n\nStill to completely understand why... am on its tail...\n\nLook forward to feedback, comments, patches, PR, etc, etc... thanks...\n. @haraldschilly, thank you for the feature request... I think ;=))\n\nWow, while this **sounds** like a `simple` feature request, I started to look how **easy** this would be... theoretically...\n\nRunning your snippet sample, tidy has already built a `node` tree, seen best in the debug output - see `ENABLE_DEBUG_LOG` cmake build option -\n\n```\nAll nodes AFTER clean and repair\nRoot\n Comment # this is your `<!-- foo -->`\n DocType   PUBLIC\n StartTag html implicit\n  StartTag head implicit\n   StartTag meta implicit  name=\"generator\" content=\"HTML Tidy for HTML5 for Windows version 5.7.22\"\n   StartTag title implicit\n  StartTag body implicit\n   StartTag div\n    Text   (3) 'bar'\n```\n\nNotice it has already `built` nodes, before `<body>`, most marked as **implicit**... regardless of the `TidyBodyOnly` state... your comment is stored **first** in this node list/tree...\n\nThen, only at output, is this simple [what to print](https://github.com/htacg/tidy-html5/blob/next/src/tidylib.c#L2258) logic applied -\n\n```C\n        if ( xmlOut && !xhtmlOut )\n            TY_(PPrintXMLTree)( doc, NORMAL, 0, &doc->root );\n        else if ( showBodyOnly( doc, bodyOnly ) )\n            TY_(PrintBody)( doc );\n        else\n            TY_(PPrintTree)( doc, NORMAL, 0, &doc->root );\n```\n\nAnd, of course, in [PrintBody](https://github.com/htacg/tidy-html5/blob/next/src/pprint.c#L2016), it just finds the `body`, and **pprints** that... all done...\n\nSo what this request sort of asks is that the `PrintBody` service, search back to the `root`, checking that all nodes are `implicit`... but seems this **not** presently added to the `DocType` node?! ... to check for any `comment` at the root... or something... \n\nThis is due to the basic way `libTidy` is structured... and since a comment is seemingly allowed **anywhere** - my in_803-3.html passes `nu`... need ref on that?\n\nBut maybe others can **see** a `code` way forward, making it **easy**... I stress **code way**...\n\nAnd then there is the `use` case? Except for a `snippet` case, like you have shown, are there others who think this **valid** feature?\n\nLook forward to feedback, comments, patches, PR, etc, etc... thanks...\n\n. @recepogras, note `nuget/TidyHTML5Managed...` is **not** directly related to this [site](http://www.html-tidy.org/)... \n\nWhile the `*.nupkg` package zip I [downloaded](https://www.nuget.org/packages/TidyHtml5ManagedRepack/), and explored, does contain a **renamed** `tidy.dll`, in 32 and 64 bit forms, which depend directly only on `KERNEL32.dll` and `MSVCR100.dll` is obviously built from the tidy source in this repo, not sure which version... interesting... but it is not maintained by anyone here, that I know of... and are **not** from our [binaries](http://binaries.html-tidy.org/)...\n\nIf you, or someone, has **published** a .NET tidy source, using the above `tidy.dll`, I may find the time to explore this framework more... \n\nBut maybe you have found the solution...\n\nAnyway, closing this here... thanks...\n. @jidanni can only **agree** tidy's handling of `xml/xhtml` leaves a **lot** to be desired, as indicated here, in #658, #767, and maybe others... \n\nThere have been **no** code/docs changes, fixes, enhancements, etc, etc..., in this `xhtml` area, since `forever`... needs some TLC...\n\nAlso agree the [doctype](http://api.html-tidy.org/tidy/quickref_next.html#doctype) ref. does **not** make it very clear that is does virtually **nothing** to the document! Except change the **output** `DOCTYPE`... It does say `This option does not offer a validation of document conformance.`... \n\nLook forward to specific code/doc change suggestions... comments, patches, PRs, ... all very welcome... thanks...\n. @DaveJarvis thank you for the feature request... to reduce output spaces, more... \n\nSince this is already a quite very **special** config case, namely `--vertical-space auto`, maybe we do not need an additional `option` for this...\n\nI think I would be ok with an output change to further compress the stream, in this specific case... \n\nAnd maybe there is not a big **use** case for it otherwise... that is, create a **new** option... but...\n\nLook forward to feedback, patches, PR... to explore this... maybe simple... thanks...\n. @DaveJarvis on commencing some research into this, note I may have overlooked a **second**, quite unique, option, `-asxml`, syn. `asxhtml`, you have used...\n\nIn my tests, if this option is removed, there is no `\" />\"` in the output... hmmmm...\n\nSo ask, is this a difference between `html/html5` and `xhtml` specs... in which case the `space` may be needed, to conform?\n\nNeed to explore that... any references, pointers, ... very welcome... thanks...\n. @DaveJarvis, thank you for the references, particularly the W3C, since that is our affiliation, where it is **optional**... and `libTidy` chose to add it, if `xhtml` output...\n\nSo I am back to maybe suppressing it, IIF options `-asxhtml` **AND** `--vertical-space auto` are active... should be simple pprint patch...\n\nOr does it need an additional **new** option? Then it could be applied to **all** `xhtml` output... regardless of the `vertical-space` option... then what name? specs? docs? etc...\n\nLook forward to further feedback, comments, patches, even PR, to test it... thanks...\n. @simonmeaden sorry, can not seem to duplicate... just did a clean build in Ubuntu 18.04... cmake 3.10.2, and the `cmake_install.cmake` file generated shows it will use `\"/usr/local\"`, for the install...\n\nWhat does your `cmake_install.cmake` show? \n\nGive your full build commands, script contents, etc... need more information, to try to repeat, understand... thanks...\n\n. Ok, assume we can close this, at least until you can repeat, what could only be a `cmake` error, or something... thanks.... @pdurbin thanks for the comment...\n\nWhile it is not **strictly** correct to say `the comment \"<!-- for mobile -->\" is moved by Tidy`, I sort of understand what you mean... a newline in the input, is not in the output... but...\n\nWhile you may have just **noticed** it - welcome to `tidy` - this output has been like that since the earliest release, Raggett's 4th August 2000, ie `tidy-2000` - nearly 20 years ago...\n\nSo I would suggest, this is a - **well established feature of `tidy`** - TM like - continued in `next`, 5.7.22, so...\n\nWhat is the `use` case for trying to bring back this meaningless, to html, `newline`? Is it important?\n\nIs the case strong enough to create a **new** `Pretty Print` output option? Called what? To do what, exactly? Full specs...\n\nAt present this looks like `Won't Fix`... but look forward to further feedback, comments, etc, etc, - thanks\n. @pdurbin thank you for the compliment... I do try hard to understand issues presented... \n\nBut I do not yet understand why `metrics.dataverse.org` features in this...\n\nCurrent `libTidy` does **not** move comments around... in general it will output them in the order they occurred in the input... for instance running the sample input in the `stackoverflow` post, using current `tidy`, will **not** yield the results shown... \n\nIn general I would reply to anyone that asks `\"Why does tidy move my comments around?\"`, answer, oops, `libTidy` does **not** do this... FULL STOP!\n\nA broader response would be that the purpose of `tidy`, from [tidy](http://www.html-tidy.org/), is to `... corrects and cleans up HTML and XML documents by fixing markup errors and upgrading legacy code to modern standards.`... a simple promise, but **very** difficult, in an ever advancing html world... but at a very minimum, you can expect some **relining** of your input...\n\nA sort of technical response would be `libTidy` is like a browser, it inputs the stream to a tree, only keeping **important** nodes, and text, **attached** to those nodes, discarding others, non-attached, spacey only, stuff... and outputs that `tree` to an output file... that means things like -\n\n```html\n<meta charset=\"UTF-8\">\n<!-- for mobile -->\n<meta name=\"viewport\" content=\n\"width=device-width, initial-scale=1\">\n```\n\nare stored in the `libTidy` tree, and sent to the output, as -\n\n```\n   StartTag meta   charset=\"UTF-8\"\n   Comment  \n   StartTag meta   name=\"viewport\" content=\"width=device-width, initial-scale=1\"\n```\n\nA simple answer might be that `tidy` is **not** a tool that **maintains** your input lines... it might in general appear to do so, but that is **far** from the case... \n\nIt inputs your stream, tidies it, and outputs a completely **relined** product, which we **hope** you like... there are quite a number of options modifying that output...\n\nTry an extreme example, `--vertical-space auto`, to see how input `newlines` can be totally ignored in the output...\n\nI do **not** ask you to **ramble on**... sorry...\n\nI go back to my first comment, **is this an issue**? Can this be closed?\n\nSeek meaningful feedback, comments... thanks...\n. @pdurbin have you checked comments, other than in the `<head>`? Maybe you'll be in for another surprise...\n\nDon't `object` to you saying that `Tidy moves my comments around`... as you say, it is a free country... ;=))\n\nI took pains to try to explain that **technically** that is **not** what happens... but I seem to have failed... oh, well...\n\nNot sure I understand the simple statement `... Tidy is not a tool for maintaining input files...`, which you imply I suggested... This makes me sad... \n\nI quoted from the aims of tidy... see http://www.html-tidy.org/ ...\n\nWhen I was very active in web content creation, I used it on nearly every one of some 2,500 files... I hope others still do today... because they see some benefit...\n\nBut does it `maintain input` files? Well, sort of, no! Or **yes**... depends what you mean...\n\nIt generally `tidy` ignores most space in the input, except where such space is significant... like `<pre>`, `<script>`, etc, etc... It generates, hopefully, publishable, fixed, valid, ... output files, with a **consistent** `relining`, and `spacing` of the results... there are some options that influence this...\n\nCertainly, if you are **not** happy with the final results, then maybe `tidy` is not what you need, want, ...\n\nOr you can advocate for a **new** option, like `--comments-for-following-line`... need a full spec for this... `<head>`, `<body>`, cases, docs... etc... give a `use` case... \n\nI do not think the one sample/output shown is sufficient -\n\n```html\n<meta charset=\"UTF-8\"><!-- for mobile -->\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n```\n\nQuestion: What to do about the following? Same? Or different option(s)... \n\n```html\n<body>\n<!-- begin header -->\n<h1>Header</h1>\n<!-- begin content -->\n<p>Content</p><!-- end content -->\n<!-- begin tail -->\n<p>tail</p><!-- end \ntail -->\n<!-- other variations -->\n</body>\n```\n\nAnd see how this changes, if say the `-i` option is added... lots to explore, understand, decide... `tidy moves comments` is **too** broad...\n\nSeek feedback, comments, even patches, PRs, etc... thanks...\n. In my folder, `build/temp-791`, just did a build of the `issue-791` branch, using `-DCMAKE_C_FLAGS=-fsanitize=address`, and Debug build type, and the leak problem appears **fixed**, for this version `5.7.18.SN02`...\n\nWill merge this shortly, unless there are any objections... thanks....",
    "chrislovecnm": "Can upvote this :)\n. ",
    "mindnektar": "I compared the output of tidy -show-config with the options reference and found no differences, so it appears that no non-default options are set. Here is the output if you'd like to check:\n```\ntidy -show-config\nConfiguration File Settings:\nName                        Type       Current Value                         \n=========================== =========  ========================================\naccessibility-check         enum       0 (Tidy Classic)                     \nadd-xml-decl                Boolean    no                                   \nadd-xml-space               Boolean    no                                   \nalt-text                    String                                          \nanchor-as-name              Boolean    yes                                  \nascii-chars                 Boolean    no                                   \nassume-xml-procins          Boolean    no                                   \nbare                        Boolean    no                                   \nbreak-before-br             Boolean    no                                   \nchar-encoding               Encoding   utf8                                 \nclean                       Boolean    no                                   \ncoerce-endtags              Boolean    yes                                  \ncss-prefix                  String                                          \ndecorate-inferred-ul        Boolean    no                                   \ndoctype                     DocType    auto                                 \ndoctype-mode                Integer   *2                                    \ndrop-empty-elements         Boolean    yes                                  \ndrop-empty-paras            Boolean    yes                                  \ndrop-font-tags              Boolean    no                                   \ndrop-proprietary-attributes Boolean    no                                   \nenclose-block-text          Boolean    no                                   \nenclose-text                Boolean    no                                   \nerror-file                  String                                          \nescape-cdata                Boolean    no                                   \nfix-backslash               Boolean    yes                                  \nfix-bad-comments            Boolean    yes                                  \nfix-uri                     Boolean    yes                                  \nforce-output                Boolean    no                                   \ngnu-emacs                   Boolean    no                                   \ngnu-emacs-file              String                                          \nhide-comments               Boolean    no                                   \nhide-endtags                Boolean    no                                   \nindent                      AutoBool   no                                   \nindent-attributes           Boolean    no                                   \nindent-cdata                Boolean    no                                   \nindent-spaces               Integer    2                                    \ninput-encoding              Encoding   utf8                                 \ninput-xml                   Boolean    no                                   \njoin-classes                Boolean    no                                   \njoin-styles                 Boolean    yes                                  \nkeep-time                   Boolean    no                                   \nlanguage                    String                                          \nliteral-attributes          Boolean    no                                   \nlogical-emphasis            Boolean    no                                   \nlower-literals              Boolean    yes                                  \nmarkup                      Boolean    yes                                  \nmerge-divs                  AutoBool   auto                                 \nmerge-emphasis              Boolean    yes                                  \nmerge-spans                 AutoBool   auto                                 \nncr                         Boolean    yes                                  \nnew-blocklevel-tags         Tag names                                       \nnew-empty-tags              Tag names                                       \nnew-inline-tags             Tag names                                       \nnew-pre-tags                Tag names                                       \nnewline                     enum       LF                                   \nnumeric-entities            Boolean    no                                   \noutput-bom                  AutoBool   auto                                 \noutput-encoding             Encoding   utf8                                 \noutput-file                 String                                          \noutput-html                 Boolean    no                                   \noutput-xhtml                Boolean    no                                   \noutput-xml                  Boolean    no                                   \npreserve-entities           Boolean    no                                   \npunctuation-wrap            Boolean    no                                   \nquiet                       Boolean    no                                   \nquote-ampersand             Boolean    yes                                  \nquote-marks                 Boolean    no                                   \nquote-nbsp                  Boolean    yes                                  \nrepeated-attributes         enum       keep-last                            \nreplace-color               Boolean    no                                   \nshow-body-only              AutoBool   no                                   \nshow-errors                 Integer    6                                    \nshow-warnings               Boolean    yes                                  \nslide-style                 String                                          \nsort-attributes             enum       none                                 \nsplit                       Boolean    no                                   \ntab-size                    Integer    8                                    \ntidy-mark                   Boolean    yes                                  \nuppercase-attributes        Boolean    no                                   \nuppercase-tags              Boolean    no                                   \nvertical-space              Boolean    no                                   \nword-2000                   Boolean    no                                   \nwrap                        Integer    68                                   \nwrap-asp                    Boolean    yes                                  \nwrap-attributes             Boolean    no                                   \nwrap-jste                   Boolean    yes                                  \nwrap-php                    Boolean    yes                                  \nwrap-script-literals        Boolean    no                                   \nwrap-sections               Boolean    yes                                  \nwrite-back                  Boolean    no                                     \nValues marked with an *asterisk are calculated \ninternally by HTML Tidy\n```\nFor reference, this is the complete output I get:\n```\ncat test.html\nTest\ntidy test.html\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nline 1 column 1 - Warning: inserting implicit \nline 1 column 19 - Warning: inserting implicit \nline 1 column 19 - Warning: missing  before \nline 1 column 1 - Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n5 warnings, 0 errors were found!\nhtml\n\n\n\n\n\n\nTest\n\n\nAbout this fork of Tidy: http://w3c.github.com/tidy-html5/\nBug reports and comments: https://github.com/w3c/tidy-html5/issues/\nOr send questions and comments to html-tidy@w3.org\nLatest HTML specification: http://dev.w3.org/html5/spec-author-view/\nHTML language reference: http://dev.w3.org/html5/markup/\nValidate your HTML5 documents: http://validator.w3.org/nu/\nLobby your company to join the W3C: http://www.w3.org/Consortium\n```\nI didn't properly look at the warnings before, as I should have. The \"inserting implicit <span>\" obviously is the key, but why is it doing that?\n. ",
    "jznf": "@sideshowbarker \nI guess this issue should be reopened since it's not fixed yet even after years.\nI've tried version 5.2.0 from http://binaries.html-tidy.org/ on OSX and latest Debian, the behaviour is the same:\n<!DOCTYPE html>\n<html>\n    <head>\n        <title></title>\n    </head>\n    <body>\n        <span><button>OK</button></span>\n    </body>\n</html>\nresults in \n<!DOCTYPE html>\n<html>\n    <head>\n        <meta content=\"HTML Tidy for HTML5 for Mac OS X version 5.2.0\" name=\"generator\">\n        <title></title>\n    </head>\n    <body>\n        <span><button><span>OK</span></button></span>\n    </body>\n</html>\noptions set are:\nindent-attributes: 0,\nwrap-attributes: 0,\ntidy-mark: 1,\ndrop-empty-elements: 0,\npreserve-entities: 1,\nindent: 1,\nindent-spaces: 4,\nhide-comments: 1,\ndoctype: 'html5',\nsort-attributes: 'alpha',\nsplit: 1,\nmerge-divs: 0,\nmerge-spans: 0,`\nused via pytidylib6==0.2.2 but behaves the same when used directly with default settings.\nEdit: correction of markdown.\n. Ok, thanks. I've opened #461 \n. THANK YOU!!!. ",
    "contrib-xx": "HTML5 Tidy is taking the above HTML which is clearly declared as DOCTYPE HTML 4.01 and HTML5 Tidy is outputting this as <!DOCTYPE html> (HTML5). HTML5 Tidy makes no other modifications to the HTML to make it a valid HTML5 document so we end up with something worse.\nThe above HTML 4.01 source I provided above has only one error which is background=\"images/header-back-blue.png\" in the <td>. But because HTML5 Tidy \"upgrades\" the DOCTYPE to HTML5, the original document that had only one error is now converted to a HTML5 document with about 13 errors. This is because HTML5 Tidy made no changes except for the DOCTYPE to HTML5. When you re-validate the new HTML5 Tidy output at the W3C you will end up with 13 errors most of which are because the table elements are obsolete in HTML5 and you need to use CSS instead.\nSo basically HTML5 Tidy is taking valid HTML 4.01 and \"upgrading\" the DOCTYPE to HTML5, but this ends up producing more errors than it had. This is why I also said I recommend a feature that provides an option to prevent this upgrade from taking place.\nI hope I was clear. If not, I would recommend you copy the HTML source I provided above and try HTML5 Tidy and see what it does to the HTML. First use the W3 Validator and see what it says about the original HTML. Then use HTML5 Tidy and then take those results to the W3 Validator and see what it says about the HTML5 output. That should help you to understand the problem I'm reporting.\n. I downloaded and compiled your most recent version yesterday (Linux w3c-tidy-html5-82bada2.tar.gz). I can take the above HTML source and save it in a file named \"test.html\" and then start tidy with this:\n/usr/local/bin/tidy ./test.html | less\nHTML5 Tidy will spit the first line out as:\n<!DOCTYPE html>\nAt least that is how it works for me. I am not specifying any options as you can see.\n. This is totally my mistake and I'm very sorry for opening this ticket. I did download the latest, but when I copied it over to decompress the source and install it, I copied the older version. I knew to get the latest version before reporting any issues, but I totally screwed up here. You are correct, this latest version works as expected.\n. ",
    "ashkrosh": "sorry for not posting back here. Your suggested --drop-empty-elements=no did the job. Now it doesn't remove empty tags.\nThanks a lot :) \n. ",
    "mikekay01": "I know this is closed, but I'm having the same problem.  Can you explain exactly how I run Tidy with the option mentioned above?  I've tried putting it in the configuration file and that doesn't work.  I suspect I'm doing it wrong.  Any guidance would be greatly appreciated...\n. Actually that brings up a good question.  I'm not sure where the plugin installed to, and I'm trying to use the \"Custom\" config file inside the plugin.  Not sure how to create a new one or where they're at.  Any clues \n. ",
    "craigbarnes": "On the command-line it's:\ntidy --drop-empty-elements no\n(not this).\nIn a configuration file it would be:\ndrop-empty-elements: no\nBut you may need to specify the config file to use with:\ntidy -config /path/to/your/config\n. I'm not sure I understand what you mean by \"plugin\", but I'll try to help if you give a little more context.\n. I also get a similar error when building on Fedora 17 with GCC 4.7:\nlibtool: link: gcc -O2 -Wall -O2 -o .libs/tidy tidy.o  ../src/.libs/libtidy.so -Wl,-rpath -Wl,/usr/local/lib\n../src/.libs/libtidy.so: undefined reference to `prvTidyCleanGoogleDocument'\ncollect2: error: ld returned 1 exit status\n. Either (or both) of those options would be nice.\nJust to clarify what I meant:\n$ tidy -errors -quiet *.html\nline 69 column 9 - Warning: missing </address> before <ul>\nline 76 column 9 - Warning: discarding unexpected </address>\nline 37 column 13 - Warning: <img> lacks \"alt\" attribute\nline 44 column 9 - Warning: <form> id and name attribute value mismatch\nline 49 column 17 - Warning: <a> attribute \"href\" lacks value\nline 53 column 17 - Warning: <img> lacks \"alt\" attribute\nline 53 column 17 - Warning: <img> lacks \"src\" attribute\nline 123 column 21 - Warning: <img> lacks \"src\" attribute\nline 37 column 13 - Warning: <img> lacks \"alt\" attribute\nline 45 column 25 - Warning: <img> lacks \"alt\" attribute\nline 102 column 25 - Warning: <img> lacks \"alt\" attribute\nline 115 column 25 - Warning: <img> lacks \"alt\" attribute\nIf, for example, I wanted to fix the \"missing </address>\" warning, I have no idea which file to edit.\n. @sideshowbarker Thanks, that works great. I actually read about that option in the docs, but skimmed over it in my haste, thinking it was something different.\n. Hitting hundreds of unrelated lines like this makes it much harder to review and messes up git blame later. Why do people insist on doing this?\n. I don't have commit access, so it's not up to me. I just like making grumpy comments ;)\n. > Whitespace issues aside, are there any issues with the attr I'm adding?\nI just did a quick test and it works fine for me. I tried to rebase your commits and keep you as author, but ended up just rewriting it for simplicity.\n. Hmm on second thoughts, it only works for <div> elements.\nThe latest draft says:\n\nEvery HTML element may have an itemscope attribute specified. The itemscope attribute is a boolean attribute.\n\nIt says the same for itemprop, which tidy allows through but warns about being a \"proprietary attribute\". The other item* attributes aren't implemented in Tidy at all.\n. That's not an escape sequence, it's a multi-byte UTF-8 character getting mangled by a single byte locale. Tidy now uses UTF-8 by default unless you tell it otherwise.\nYou can use tidy -latin1 to output the literal cent sign in ISO-8859-1 or you can use tidy -ascii to retain the &cent; entity as-is.\nA more 21st century idea would be to just use UTF-8 and set your locale accordingly.\n```\nchar-encoding\n      Type:    Encoding\n      Default: utf8\n      Example: raw, ascii, latin0, latin1, utf8, iso2022, mac,\n      win1252, ibm858, utf16le, utf16be, utf16, big5, shiftjis\n\n      This option specifies the character encoding Tidy uses for both\n      the input and output. For ascii, Tidy will accept Latin-1\n      (ISO-8859-1) character values, but will use entities for all\n      characters whose value > 127. For raw, Tidy will output values\n      above 127 without translating them into entities. For latin1,\n      characters above 255 will be written as entities. For utf8, Tidy\n      assumes that both input and output is encoded as UTF-8. You can\n      use iso2022 for files encoded using the ISO-2022 family of\n      encodings e.g. ISO-2022-JP. For mac and win1252, Tidy will\n      accept vendor specific character values, but will use entities\n      for all characters whose value > 127. For unsupported encodings,\n      use an external utility to convert to and from UTF-8.\n\n``\n. You can usetidy --show-body-only 1 file.html` to disable the full document outline but there seems to be a bug at the moment causing it to show the warnings even when they're not relevant.\n. I just tried both of the following and they seem to work fine for me (using commit 1b4dcd0):\nshell\ntidy --drop-empty-elements no <<< '<a></a>'\ntidy -config <(echo \"drop-empty-elements: no\") <<< '<a></a>'\nWhich build method did you use? Are you invoking tidy from an installation or from within the build directory?\n. Yep, that'll be it. That happens to me all the time. If you invoke it as tidy you'll always run from the location given by which tidy. Your shell just uses the first program it finds by searching the directories in echo $PATH (ordered left to right).\nIf you try this from the tidy source directory, it should work as expected:\nshell\nmake clean -C build/gmake\nmake -C build/gmake\nbin/tidy --drop-empty-elements no <<< '<a></a>'\nbin/tidy -config <(echo \"drop-empty-elements: no\") <<< '<a></a>'\nTo fix your installation, you can do one of these:\n- Install the new build over the top of /usr/local/bin/tidy using sudo make install -C build/gmake\n- Delete the old build with sudo rm -f /usr/local/bin/tidy\n- Set your PATH so that your \"programs build directory\" comes before /usr/local/bin\n- Invoke the tidy that you want to use with the absolute path, e.g. /home/$USER/bin/tidy --drop-empty-elements no <<< '<a></a>'\n. You only need sudo for make install, never with make. How does it not work? It doesn't build? It doesn't run? It gives an error message?\n. What do you mean by \"various text encoding\"? Could you upload the document (or a test case) somewhere?\nAlso, you don't need to set input-encoding and output-encoding if they're the same -- char-encoding already sets both of these implicitly.\n. There's 3 things going on there.\n1. The first 3 entities are being reduced to UTF-8 encoded characters, which are equivalent (and consume less bytes),  because you've allowed tidy to make use of UTF-8 by setting the encoding.\n2. The &amp; is being left alone, because it's a special character and needs to be escaped.\n3. The &dash; is being mangled because as far as I can tell, it's not a valid named entity.\nSolutions:\n1. Use tidy --preserve-entities yes (although this isn't strictly necessary).\n2. None -- this should always be &amp; (or the numeric equivalent) in any encoding.\n3. Use &mdash;, &ndash;, ASCII hyphen (-) or any appropriate UTF-8 character.\nSo to answer your question, I don't think there's an actual issue, aside from the invalid &dash;.\n. Tidy normally uses UTF-8 as the default encoding but you could try @acdha's suggestion above or adding char-encoding: utf8 to your config file. If that doesn't work, it'd be easier to figure out the problem if you told us what platform you're using and posted a small sample of input and the output you get for it, maybe as a gist.\n. ",
    "balthisar": "Fixed and in develop-500. I'll close this, but feel free to re-open if there continues to be an issue.\n. Working in develop-500. Will close.\n. Updated the milestone.\nFor release I agree that we should still use \"tidy\" -- it has a heritage to live up to, after all.\nI'll leave this issue open for discussion, however.\n. @ermshiperete, correct. No changes. If you're willing to build it, you can test it now.\n. Agreed. I'm mostly here to organize the milestones. Probably not on track for 5.0.0, but don't want to leave this empty.\n. Added placeholder to /htacg/community. I will close this. Don't hesitate to work on the draft documents. :-)\n. I will close this. There are development documents in /htacg/community, and we will touch upon it there. Please feel free to contribute to them.\n. Closed in favor of current milestones.\n. Done. \n. Fixed in develop-500. Please feel free to re-open this if you still have a problem. Thanks!\n. Windows binaries are on http://binaries.html-tidy.org.\nYou'll have to contact the author of the Notepad++ plugin for that plugin support, I'm afraid.\n. @stevenle, I'm going to close this PR. Current develop-500 branch includes this change, but merged in @craigbarnes rewrite of your original work. Thanks for the contribution that ultimately ended up here!\n. I'm in favor of biting the bullet and fixing this as our last operation before merging into Master. Future PRs will be affected, so a code freeze is a pretty going point to do this, too. \n. @peterkelly, I will close this PR, as it's rolled into the develop-500 branch currently.\nUnfortunately due to the complexity of all of the neglected PR's over the years, the PR history is a bit fractured. This means that your name won't be shown in the commit history, but the links for the commits will still link back to this PR so that you will still be acknowledged for your contributions.\n. I vote for on, and the name sounds better than skip-quotes.\n. Closed due to new build system. @brief, if you still have problems please feel free to open a new issue.\n. Confirmed working fix in develop-500. Please feel free to reopen this if you disagree.\n. @daurnimator, sorry for the very late response. Can you be more specific? Or better yet, can you create a PR against the develop-500 branch? We wouldn't want to modify existing API, but are open to new API if it provides features you require.\nI will close this due to age, but you are free to reopen this if you're still around and still interested in applying Tidy.\n. @daurnimator, you can still reopen this ticket, but I don't understand exactly what functionality you want from the library. Can you provide an example?\nYou're right, Tidy hasn't been maintained in a long time. It's been three weeks since HTACG got involved, and I think things are changing. :)\n. > You can use tidy --show-body-only 1 file.html to disable the full document outline but there seems to be a bug at the moment causing it to show the warnings even when they're not relevant.\nConfirmed. Will have a look.\n. Fixed in develop-500.\nAlthough I'm closing the issue, I would appreciate someone more familiar with Tidy's guts to review the implementation of the bug fix. \n. As is, this causes meta tags to run into each other on a single line without line breaks.\n. @hdrlab, I'm going to close this because of the behavior described in the previous comment. Please feel free to resubmit it if you can prevent the missing line break issue. Your pr will not be ignored for 2.5 years this time.\n. Confirmed, although the issue is block level elements and not inline. For example, substituting <span> for <p> works correctly.\nWe'll have a look.\n. Fixed in latest (did not bump build number).\nGiven:\n```\n\n\n\n\n\n\n\n\nPlaceholder copy goes here\n\n\nPlaceholder copy goes here\n\n\nPlaceholder copy goes here\n\n\n\n\n```\nResults in:\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\"HTML Tidy for HTML5 for Mac OS X version 4.9.3\">\n<meta charset=\"utf-8\">\n<title></title>\n</head>\n<body>\n<canvas id=\"mycanvas\" width=\"300\" height=\"300\"><span>Placeholder copy goes here</span></canvas>\n<canvas id=\"mycanvas2\" width=\"300\" height=\"300\"><span>Placeholder copy goes here</span></canvas>\n<canvas id=\"mycanvas3\" width=\"300\" height=\"300\">\n<p>Placeholder copy goes here</p>\n</canvas>\n<canvas></canvas>\n</body>\n</html>\nNote the different treatment when the canvas contains a block level tag versus an inline tag. Also handles empty canvas content.\nI will close this issue. Please feel free to re-open it if it didn't address your concerns.\n. I will close due to age, and new cmake build system means that any fixes are no longer relevant. Sorry no one attended to this in a timely manner.\nIn general, though, the only traces should be the tidy command and tidy.1 man page, plus whatever crud is left over in your build directory.\n. Closed due to @jrissler having deleted his post.\n. Probably not posted to the right repository, so will close.\n. I'll leave this open as it's not in master yet, but will be available soon, we believe.\n. It's in develop-500, so will close.\n. This is on the roadmap so I will close it as an issue.\n. @thekvs, I will close this PR. As you may or may not know all current development is now in the develop-500 branch, and you'll be happy to know that it's completely cmake based. We hope to bring the development branch into master very soon.\n. Fixed in current readme.\n. I will close this due to age. I don't see evidence of an issue, but please feel free to open this again, @angryfishcake, if the problem persists.\n. Current behavior is as expected. Will close.\n. @marcoscaceres, both of these issues are covered in existing (but newer) issues, so I'll close this one combined issue.\n. Confirmed fixed.\n. That's invalid HTML, and looks like the old IE xml data islands except for the use of feed instead of xml tag.\nIf instead you're trying to display the content of the code block (rather than trying to have the browser render that code), then that's not the purpose of a code block; it doesn't just display code literally. You'll have to turn it into HTML.\nI'll close this. Feel free to reopen this if you have an explanation that we're failing to understand.\n. Oops. Meant to close this 9 days ago, but didn't receive any feedback from @imaginator and so will close it now. Please feel free to reopen the issue if you come back. Thanks.\n. Develop-500 is giving me the following out for case 3 with default options:\n<body>\n<a href=\"#ref\">text here</a> <a href=\"#abc\">footnote here</a> more\ntext here\n</body>\nI'm guessing you fixed it and I missed it in the change logs. I think this is proper behavior, especially with the warnings generated. \nI'll close this.\n. @andrewle , I will close this PR, as it's rolled into the develop-500 branch currently.\nUnfortunately due to the complexity of all of the neglected PR's over the years, the PR history is a bit fractured. This means that your name won't be shown in the commit history, but the links for the commits will still link back to this PR so that you will still be acknowledged for your contributions.\n. It looks like we merged this into develop-500 branch with another PR. Thanks for the contribution!\nI will close this as complete.\n. I will close this as cmake definitely isn't using xsltproc, although I still wonder how the man pages are being generated....\n. And it will probably go back into cmake, too. We'll look at a solution that allows it to work (without the xslt) if xsltproc isn't found.\nI'll re-open this and tag it.\n. Will close. Fixed on current develop-500.\n. @nickbuddendotcom, it looks like the develop-500 branch has solved this issue. If that's not the case, would you please open a separate issue?\n@andersk, I'll tag this for 5.0.0 and see if I can't get to the bottom of it in time for release.\n. Fixed in develop-500. I will close this. Please re-open it if troubles persist.\n. I agree that the warning is enough. Since no one else agreed to take it, I'll close this issue now.\n. I will close this. I know that my #148 duped it, but there's some other discussion there.\n. @clarkewd, I will close this PR. Thanks for the contribution. It's been applied indirectly to address #56, but because of the state the repository was in, we couldn't pull it in directly.\n. It's a common enough request. I'll keep this open as a feature request for a future milestone.\n. @ermshiperete, I'm going to close this PR. At least one of these PR's is pulled into the current development branch develop-500. Because of accumulation of so many unfulfilled PR's, can I ask that you evaluate these against the develop-500 branch?\nAs you can see there is a lot of activity going on right now, and I can promise that if you submit a PR to the develop-500 branch, you're not going to be ignored for a year again.\n. Looks like a duplicate of #111. Will close, as it looks like you addressed it.\n. It works, and no response from @ermshiperete. I will close this, but @ermshiperete please feel free to open it again if the problem isn't solved.\n. @ermshiperete, I will close this PR, as it's rolled into the develop-500 branch currently.\nUnfortunately due to the complexity of all of the neglected PR's over the years, the PR history is a bit fractured. This means that your name won't be shown in the commit history, but the links for the commits will still link back to this PR so that you will still be acknowledged for your contributions.\n. Closing as everyone seems satisfied that configuration will prevent undesired behavior.\n. @saadatm, this has been pulled into develop-500 branch, and so I will close this PR.\nUnfortunately due to the complexity of all of the neglected PR's over the years, the PR history is a bit fractured. This means that your name won't be shown in the commit history, but the links for the commits will still link back to this PR so that you will still have acknowledgements for your contributions.\n. @jay, Sorry for the very long lack of a response. As you can see now, there's a lot of activity.\nI wonder if you'd willing to turn this into a PR against the develop-500 branch? It's a bit incomplete now as this would be a new tidy option, and requires documentation, integration with the rest of the library, but if there's a valid use case an we're not breaking any standards, it's something we can consider.\nI'll keep this open in the meantime without a commitment date.\n. Looks like this was pulled into develop-500, so I will close this.\n. > Abstract\n\nThis is a work in progress! This specification is for review and not for implementation! For the latest updates, including important bug fixes, please look at the draft on GitHub instead.\nThis specification describes the method for enabling the author to define and use new types of DOM elements in a document.\n\nAs such, this should on the back burner for the time being.\n. Some of the questions, referring to the working draft:\n\nIf we see a flag-icon element, what's the proper Tidy behavior? Do we have to be able to load and execute the customElements.define(\"flag-icon\", FlagIcon); is present before accepting it?\nIf no for the answer above, should Tidy accept the typo flga-icon?\nWhat about the case of plastic-button? In the example this is a customized built-in element, meaning that the user is using it incorrectly if used as an element; instead it should be used as the value of an is attribute. If we allow anything with a hyphen, then we won't catch such errors.\n\n. @geoffmcl, you've answered questions, specifically that the validator accepts them. That's good enough for me. The questions were meant to be a bit broader and not specifically at you. I think we both agree that if it's good enough for the validator, it's good enough for Tidy. I don't want to look at an issue in a year where someone opens a ticket because flga-icon wasn't properly defined somewhere, due to improper expectations. I would be good to hear others' feedback, too.\n. It's not so much a matter of how to code it, but how it should be handled.\nAnother wrinkle is that without understanding the document (meaning we'd have to load an parse the javascript), do we treat custom elements as block, inline, or pre? This is a critical distinction because Tidy doesn't merely say yes or no to an element; it pretty prints HTML, and if we don't know whether or not an element is inline or not can affect whitespace in the rendered document.\n. > I think defaulting to inline with an option for block would be pretty good.\nIt would then be all or nothing.\nI suppose a strategy to get this to work would be to dynamically assign a new tag (containing the right naming requirements) to new-inline-tags, and possibly issue a warning that it's being treated as inline? Users would then have to review the output messages, and manually add things to new-blocklevel-tags that they don't want considered inline?\nThe only other way is to turn Tidy into a Javascript engine, I think.\n. If any of you compile your own, then try checking out the branch in PR #513 to give me your thoughts. In particular, try the custom-tags option -- see documentation for options.\n513 is dependent upon an earlier PR that needs careful review in its own right, so this one is probably at least a week away (maybe more) from hitting. Don't use it for production, but I'd love to hear feedback on how it handles custom tags and how it handles the is element.\nSome notes:\n\nthe default for custom-tags is no, just as it is today.\nis should work properly regardless of the custom-tags setting.\nYou get to choose how Tidy treats custom tags detected in the document, e.g., inline, blocklevel, etc. See the documentation for custom-tags for all values.\nIf you have a mix of tags, then you can still declare them using new-xxx-tags config options. Say that 90% of your tags are inline. Set custom-tags to inline, and they'll be detected and treated as inline. You'll have to manually put your blocklevel tags (the other 10% in this example) into the configuration option new-blocklevel-tags. \n\nI'd like to further invite everyone to extend the conversation by arguing about what the future default should be. Right now it's currently no, but perhaps inline makes some sense so that Tidy by default does something with custom elements. Maybe something else makes sense. Please discuss.\n. @maxnordlund, yup, when set to inline, a sample output is\n~~~\nline 15 column 1 - Info: detected autonomous custom tag ; will treat as inline\n~~~\nThat's another good point. Right now, this particular message is emitted as TidyInfo, which is probably what we want. In the case of is, though, some sample output:\n~~~\nline 8 column 1 - Warning:  attribute \"is\" lacks value\nline 9 column 1 - Warning:  attribute \"is\" has invalid value \"invalid-because space\"\nline 15 column 1 - Warning:  attribute \"is\" not allowed for autonomous custom tags.\nline 15 column 1 - Warning:  attribute \"is\" has invalid value \"not valid\"\nline 16 column 1 - Warning:  attribute \"is\" not allowed for autonomous custom tags.\nline 18 column 1 - Warning:  attribute \"is\" not allowed for autonomous custom tags.\nline 19 column 1 - Warning:  attribute \"is\" not allowed for autonomous custom tags.\nline 19 column 1 - Warning:  attribute \"is\" has invalid value \"not valid\"\nline 10 column 1 - Warning:  is not approved by W3C\n~~~~\nRight now these are all configured as TidyWarning, meaning that Tidy will still render the document without using force-output; If we make them TidyError instead, then the document will not render (unless using force-output). @geoffmcl, any thoughts on correct error level here?\nAlso there's some question about how noisy the output is, too. It's easy to control, but I've left it noisy so far. For example, in the m-custom example, the higher priority warning means hey, you can't use is for this tag, but then the next warning says that the value is invalid for is (because of the space; a properly formatted value would have squelched this warning).\nFinally, the pizzeria tag was defined with new-inline-tags (so, missing the hyphen), but the warning would be emitted for an autonomous custom tag, too. This warning message now brings up another good point: the pizzeria tag is not a valid custom tag, so probably it's okay for this warning to be applied, but what about for valid custom tags? A specific custom tag is not approved, but is this warning output really necessary? LibTidy users can easily mute them, but as in the console application will always show them.\nLet me ping everyone who's been in this conversation: @geoffmcl, @maxnordlund, @morewry, @tobie, @gautaz, @jrunning, @bendavis78 @yoshuawuyts.. Hmmm... I should also point out that this feature works regardless of the the doctype. Maybe this is an argument to leave the default to no, otherwise Tidy would be generating bad HTML4 code. If the config turned the feature on, then it would be up to the user to know that, given the warnings, his code isn't HTML4 compliant. On the other hand, there are probably polyfills/shims for HTML4.\n. Updated to PR #514.. @geoffmcl, #514 is the same; I simply squashed it as it had all of the same commit history as the messages branch.\nThe discussion you raise above is exactly what I hope to see in this issue thread!\n. @geoffmcl,\n\nAs usual, would prefer tidy keeps html4 compatibility, and certainly not generate bad html4, even with warnings, or errors. But since we do maintain an internal mode would it not be possible to check this?\n\nAgreed. From strict-tags-attributes I seem to recall that the internal mode isn't really known until the end of the process, after we've built whatever backs apparentVersion, unless we're given a doctype. If given <HTML5, then I agree, these should be errors. If we don't know the doctype, we're assuming HTML5, despite what we accumulate in the doctype bitfield. Correct me if I'm wrong about this!\n\nSo I ran a test on the following, which passes the W3C validator. Used config --custom-tags yes\n\nThat reminds me; maybe we shouldn't support yes. I wrote the parse so that yes would be accepted (meaning blocklevel), but it's actually not a valid value. I wonder if we should eliminate it, or if we keep it, default it to inline per everyone else's suggestion. I would support dropping yes, but a lot of other parses support it, too.\nAs for why it's not rendering properly, I'll have to look into that. Once it's added to the list, it's exactly like adding it to new-blocklevel-tags (etc.), so unless that's broken, too, it should just work!\n\nWell, if the document passes W3C, and we want tidy to agree, why that warning?. Either it is approved, per the validator, or, if not then why is tidy supporting it? Sort of a mixed message...\n\nI could suppress this warning, as your logic is correct. I left it in because it's the existing behavior for new-xxx-tags; I wonder if we should suppress this warning for those options, too, since presumably if the user is adding them to options, he shouldn't be bothered with a warning about them.\n\nLikewise, why the Info: message? The user has said support custom tags in the config! Are we going to tell him/her about every custom tag in the document? Why?\n\nThis is why I made them info level, so that hide info would suppress them. It lets user (or LibTidy user) get a list of all custom tags actually used in an auto-generated document, and they're easy to hide. This message only appears once for each tag, the first time it's discovered.\n\nI could see the opposite. If --custom-tags no, I could see a helpful warning like Warning: detected autonomous custom tag ; use --custom-tags yes to remove warning, or something like that...\n\nAh, yes, excellent idea!\n. Let me try to formalize the above, just a little bit so that I can introduce any changes logically rather than putting little bandages all over the place:\nIn this brave, new world of autonomous custom elements, we need to have Tidy distinguish between unknown tags and two types of custom tags: new tags, and autonomous custom tags (which I'll type as ACTs from now on).\n\nunknown\nNot part of Tidy, not defined using new-xxx-tags, and does not appear to be an autonomous custom tag.\nautonomous\nTags detected in the document that looks like ACTs.\nTags declared in new-xxx-tags that look like ACTs.\nThis only applies if custom-tags is enabled, otherwise they're unknown/new respectively.\nnew\nTags declared using new-xxx-tags, but not classified as ACT.\nRemember, classification as autonomous custom tags only occurs with custom-tags being something other than no. This allows mixing of models, e.g., custom-tags could be set to inline, but someone may want to have a few ACTs declared with new-blocklevel-tags so that they're rendered as blocklevel.\n\nWe can make the following assumptions:\nUnknown tags will always cause an error \"xxx not recognized\" and if force-output, additionally generate the message \"discarding unexpected xxx.\" This is current behavior. HTML version and custom-tags are both not applicable in this situation. Things that look like ACT are not.\nNew tags (not ACT) will always generate a warning. HTML version is N/A. The message will be \"xxx is not approved by the W3C.\" This is current behavior. However if a tag looks like a custom tag (but isn't, because custom-tags is no), the message changes to \"xxx is not approved by the W3C; did you mean to set custom-tags to a different value?\"\nACTs (whether detected inline or defined with new_xxx_tags, custom-tags is not no) will change based on HTML level:\n- If <HTML5 and custom-tags is on, then generate \"xxx is not approved by the W3C.\", which is identical to current behavior of New tags. This makes it obvious that custom-tags doesn't really apply for HTML4.\n- If HTML5 and custom-tags is on, then emit a TidyInfo once each time a tag is detected in the document. This can be squelched with show-info no, but otherwise provides users (and LibTidy apps) the ability to catalogue the ACTs in their documents. No other output.\nThoughts?. @geoffmcl, thanks. I'll add the tests immediately. I've updated a 5.5.6 branch in -tests, and the good news is that it's identical to the 5.5.0. I know I tested 5.5.6 with all of the messages changes, but I'm impressed that my major tinkering didn't screw this up.\nI'll add the news tests and push to custom_tags in -tests, too, using the recommended case numbers as above.\n. @geoff, no recovery from git clean -Xdf before commit! Will repeat tomorrow. :-(. I pushed some tests into custom_tags today. I added six because I tend to be overly verbose, but they also explain all of the current output.\nI've not replicated the issue where inline and blocklevel aren't working, though. They seem to work fine, and I've not made any changes to that part of the code.\n. > Get a diff on 431716\nI thought I corrected that, because I removed all of the \"deprecated\" stuff a few commits ago in next... I'll have to take a look if you don't find it first.\nshow-info should be covered in some of the existing test cases, and were already covered in the messaging system refactoring. I didn't do anything new with show-info, except categorize some of the new output as TidyInfo. show-info has been there as long as I can remember... If there are existing cases, then anything categorized as TidyInfo will be hidden. In fact, if you're adding exceptions, then that will be tricky to do!. > But you did not address the diff question... why not set/update the expected to the facts? Seems no problem...\nWhen I run the tests in the custom-tags branch, there are no diffs. All of the expected is there!\nRe: show-info, there's also a message generated most of the time bearing TidyInfo: something like \"Document content looks like HTML5\". I'm not sure when it started getting reported, but it's always been reported in the error message table. Usually that plus the extra info at the end is what show-info hid. And, yes, in many cases the document content type is also reported in the verbose output, not just the message table.\nIt would be trivial to add show info: no to any of the tests. Let me take a look, though, because we want that info present in some of them in order to prove that Tidy is detecting the tags.\nMaybe this is the wrong thread to discuss it, but with the new callback, a longer-term thing I had in mind was filtering in the console application. Not via configuration options, but in the console application proper. Using the new callback, it would be simple to sort messages based on line number, or filter against things users aren't interested in, such as message level.\nI won't touch them, but conceptually, these kinds of controls really are CLI switches and not Tidy config options, i.e., right now the library supports --show-info, whereas it should be CLI's responsibility to act on -show-info.\nI bridged this divide by having the new message filter report every message and ignoring these \"CLI-type\" options. This avoids breaking too many existing applications, while ensuring that CLI-type options don't get in the way of library users.\nOh, I went too far off on a tangent, but yes, I'll look at the test cases. Looking the new ones, you have a good idea that I tend to get overly verbose at times, so I guess I'll stop typing now ;-)\n. I had thought I'd cleaned those all up! Yet sometimes I see them in Github's diff. I need to check my environment and see why they're not being applied.... Note, I just made a very small, corrective push. It doesn't address the above issue.\n. > Can I push the above diff change? To tidy custom_tags of course...\nBy all means!\nUpdate expected for both of those, and then it looks like we are good to go.\n. Awesome work.\nI'm not sure I understand where the variable declared comes from. In any case, the VERS_HTML5 is a compound type, made up of both HTML5 and XHTML5 (which I've never seen in the field).\nBut if we're good to go for now, then awesome! Let's roll it in.\n. > On y va! \nWell, I'll do this thing, then!\n. Given that the last commit to the official repo on SF is more than five years old, I think that the original maintainers have let the project wither. This repo, despite the 'experimental' monicker is released under the auspices of the W3C, so it's probably about as official as it will get.\nI would suggest that we remove the \"experimental\" description from this repo.\nClearly this repo would benefit from having a more closely tied maintainer, but (a) I'm not sure if w3c is looking for one, and (b) no one seems to have volunteered.\nThere are several useful pending pull requests that I've merged into my own fork (not sure if I've pushed them up yet), but I'm not sure that we're enough of a community to vet the contributions at a level that the original devs would. I guess time will tell (current Balthisar Tidy uses most of the non-merged PR's currently, and I'm not getting bug reports related to Tidy).\nAs for *nix distros, taking Ubuntu for example, it sounds like you'd like to see newer Tidy in, say, Main or Universe, but that's a decision someone at Canonical makes. Of course you can can always maintain your own distribution and even set up your own repo, but that's not much of an advantage. I don't see that w3c has it's own Ubuntu repo, and I don't know remember enough about other Linux distros these days to recall their own particular distribution mechanisms.\nI don't immediately see a Tidy for Mac Homebrew -- maybe I could contribute there, or feel free to contribute! It looks like there's a maintainer for Macports, but stable is at least a couple of years old. \nUbuntu 14.04 (Main or Universe, didn't check) installs \"HTML Tidy for Linux released on 25 March 2009\"\nAnd Mac OS X Mavericks is even worse: \"HTML Tidy for Mac OS X released on 31 October 2006 - Apple Inc. build 15.12\"\nAny of use could distribute an updated binary, but we're not the WC3, we're just some guys on the internet.\n. As soon as we have roadmap we can make plans for a stable release. Hopefully package managers will be able to update their distributions then.\n. Reference material.\nThis is definitely a goal of the project and I'll look into it a lot closer once 5.0.0 releases.\n. @deviantintegral, homebrew would be great for us Mac users.\n@pedromorgan, yes, cpack.\n. > Do I need to do more?\n@geoffmcl, Nope, but I did. Added new Mac binary installer to http://binaries.html-tidy.org/.\n. Pinging everyone here: @mcandre, @sierkb, @jyasskin, @deviantintegral, @pedromorgan, @thierry-FreeBSD, @strider72, @Ionic, @ryandesign, @arthru \nWe've had luck so far getting update in some repositories, and not others, and I'd like to take an inventory of where we have still not been successful.\nThis single bug \"Publish tidy-html5 to package managers\" is overwhelming and not convenient to manage, and leaves no possibility for closure.\nInstead, may I ask that any of you that have an interest in a particular package manager open an issue for that package manager specifically? It will be much more convenient to manage them one-by-one than try to keep up with a large, mixed thread such as this.\nI'll close this issue and I look forward to seeing many issues replace it!\n. @sebgod, I feel bad asking you to close another PR. As Tidy has moved to cmake exclusively in the develop-500 branch this PR will no longer be relevant. Would you mind closing the PR if that explanation is satisfactory?\n. @geoffmcl, I can't do a PR to your fork, but perhaps you'll take a look at this:\n- https://github.com/balthisar/tidy-html5/tree/geoffmcl-restart\nIt's your fork as ca. November, with several of the PR's in this branch manually merged in, primarily support for all of the vast array of attributes (plus my own PR for a secondary messages callback filter that I need for language localization).\nBecause so many of the existing PRs are based on the master branch, there were tons and tons of conflicts I had to handle manually.\nIt's a shame this branch isn't maintained, but as far as I can tell from activity, your fork is a lot more canonical than mine, and it would be good to have many of these PR's merged into a fork with visibility.\n. Geoff, we all understand time commitments! I'm hopeful that we won't let get things to backlogged anymore. We're still trying to figure out a proper strategy for the outstanding PRs.\nHave you run through the regression tests with my fork? It's on my very long to-do list. Given that it includes a good number of the PR's, it would be convenient if we could verify its trustworthiness. (Note, have to remove my private project branding, though!).\n. @geoffmcl, direction should be coming soon. Don't despair again.\n. I will close this issue as \"overly broad.\" :-)\n. What is your environment? Tidy has no macro features. What is your OS and what are you using for macros?\n. Closed as duplicate of #108.\n. Same as #127, it seems. When setting indent to auto, result is:\n```\n<!DOCTYPE html>\n\n\n\np { font-size: 12pt; }\n  \nTest\n\ndiv.c2 {text-align: center}\n  p.c1 {color: red}\n  \n\n\nHello, world.\n\n    I'm in the middle\n  \n\n\n```\nGiven the input #27:\n<!DOCTYPE html>\n<html>\n<head>\n<style type=\"text/css\">\np { font-size: 12pt; }\n</style>\n<title>Test</title>\n</head>\n<body>\n<p style=\"color: red\">Hello, world.</p>\n<center>I'm in the middle</center>\n</body>\n</html>\n. Since you say it's an improvement but aren't entirely satisfied I'll leave this open as a feature request for the future.\n. Given the input\n<!DOCTYPE html>\n<html>\n<head>\n<style type=\"text/css\">\np { font-size: 12pt; }\n</style>\n<title>Test</title>\n</head>\n<body>\n<p style=\"color: red\">Hello, world.</p>\n<center>I'm in the middle</center>\n</body>\n</html>\nI get the output\n```\n<!DOCTYPE html>\n\n\n\np { font-size: 12pt; }\n\nTest\n\n div.c2 {text-align: center}\n p.c1 {color: red}\n\n\n\nHello, world.\nI'm in the middle\n\n\n```\nI think what @Acecool is suggesting is that he would prefer to see the styles added to the existing style block in the head. I hope he comes back to confirm. In the meantime I will change this to a feature request and possible future milestone.\n. @kissferenc , I'm going to close this because we don't understand the issue. If you ever come back, you can certainly re-open this issue and we'll take a look at it.\n. Will close. Support can open another issue if still not resolved.\n. @bbatsche, thanks for the effort. Before HTACG took over Tidy management, a lot of us did the same thing in our repositories.\nWe have all of these changes successfully rolled into the develop-500 branch now, and the plan is merge it all into Master, hopefully within the next week. Please feel free to use that branch in the meantime, as it covers a lot of other PR's and improvements.\nI'm going to close this PR.\n. @ezequiel-garzon, what types of build errors and what's your build environment? We can help you in this thread if it's your error ;-)  Or if it's a reproducible build problem then we'd like to address that with another bug report.\n. @nkmathew, can you confirm that this fix meets your requirements?\n. @nkmathew, does this latest fix meet your expectation? Would like to get a chance to hear from you before closing this issue.\n. Close, now using cmake in develop-500.\n. @lovasoa, this is an excellent piece of work. As you may or may not know, we've abandoned all of the old build systems in favor of cmake and all of the current work is taking place in the develop-500 branch.\nCould I ask you to close this PR with no further action? If you can work this into cmake and post another PR, you won't be ignored for so long again (as they say, we're under new management).\n. As soon as they release it from quarantine, I'll post it back on this thread.\nIn the meantime you can follow one of the links and register an account.\nHey, don't wish me luck. Wish us luck, because it seems we all have to do this together.\n. It looks like the proposed group is out of moderation and people can vote to approve the new group.\n- http://www.w3.org/community/groups/proposed/#htacg\nYou don't have to understand W3C ins and outs; simply create a user account at W3C and then vote.\n@petdance, I don't understand the ins and outs either, and it took quite a bit of research to discover and propose this (potential) solution. Luckily as a \"community group\" we'll be insulated from most of the internal workings of the W3C aside from the exposure and affiliation. There's still a lot to read up on, and I'm hoping there are enough of us (and attract more) so that we can gain some traction.\nI want to reiterate that my objective is that this is not my project but becomes our project. If you want to read between the lines, I mean that I hope that I don't have to run the whole show, although I'm willing to commit extra-ordinary effort at the beginning (full time extra-ordinary effort isn't sustainable, I'm afraid).\n. Update:\n- I've reached out to @sideshowbarker via email in order to get his support.\n- I've reached out Dave Raggett in an attempt to get his endorsement.\n@skynet, even if we don't get this repo, I seem to think that we can get another repo in /w3c. We might start considering names. What happens if html6 ever reaches a draft stage? :-)\n. @sideshowbarker, did you receive an email from me today at your @w3.org address?\n. @sideshowbarker, thanks @skynet beat me to it, but I'm okay with that.\nhttps://github.com/tidy-html\n. Oh, yeah, that's a better idea (you're fast). It will fit in better with our W3C project. Let's use that one, especially in case we add side projects or something.\n@sideshowbarker, I suggest that if you're available tomorrow night at this time, we can execute a transfer of ownership then. I'd rather not assume any type of control until someone has a chance to object.\nEdit: sorry for the confusion. It's night time where I'm at currently. I think it also is for @sideshowbarker.\n. @sideshowbarker, well, it's been about 24 hours and no one has objected. If you want to transfer ownership to me, I think it's fine. No hurry, it's about bedtime in these parts.\n. Done, and at the correct repo. Thanks.\n. It shows as your invitation still pending -- did you accept it? You're assigned to the Owners group once accepted.\n. @sideshowbarker, I renamed it -- maybe that's enough.\nYou can either try to transfer it to me again or see if the htacg invitation worked.\n. I don't think anyone would mind you staying on. You're a link in Tidy's history, after all.\nThanks for all your help, @sideshowbarker.\n. everyone and @sideshowbarker (by name), thank you all so much for your support in this.\nThere's still a lot to do. Even though this change brings us commit access, we still need one more vote to legitimize the project with the W3C. Please register (quick, free, and no spam) and then vote for the W3C project.\n. I should create a wiki or something, but this thread still has a lot of attention, so I'll use it for now. If we get the HTACG W3C group approved, that will offer tools for discussion, too.\n\nAs for the PR requests we should ensure that we use the regression testing scheme that's already in the library, or improve it before we willy-nilly begin accepting PRs. We don't have to be in a hurry, and it's still possible to clone the project as-is and merge in individual PRs.\nIn fact, I've done this for a lot of the PR's already: https://github.com/balthisar/tidy-html5/tree/geoffmcl-restart\nThis actually involved a lot of manual work, so some of the PR commit history is lost, although I did specify the issue numbers in each commit. The problem is that so many people have issued PR's against the current base, the diffs keep accumulating making it impossible to auto-merge without all of the manual work.\nMy branch is @geoffmcl's as of November, with several PRs already merged in and commented. @geoffmcl made several changes without posting a PR, which is why I based off of his fork.\nAfter testing the current master versus my fork, my I suggest rebasing the current master to my fork? This will make future PRs much more successful. (I'll also clean up some of the output strings that are specific to my use before adding).\nI would also like to eliminate all of those trailing spaces. There are a few PRs where someone's editor stripped them all away making the diff absolutely huge. If we're going to rebase, now's a good time to nip that in the bud.\n. > I just did (send a support request). Thank you.\n@skynet, if that doesn't work, we could very kindly ask @sideshowbarker to re-create an empty project with that name, and a simple HTML meta redirect in the gh-pages. More ambitiously I suppose I could use the current gh-pages and generate a meta redirect from ALL of the old pages, but only 200 instead of 301.\n. @petdance, did you get anywhere on those? And how's your access?\nI've created a /community repo. If you're willing to commit any in-progress docs there, myself and others are certainly willing to help out. I created it for that purpose and W3C HTAGC, too.\nIt might serve the secondary purpose of letting others know that the community is making some sort of progress.\n. I think we might not start accepting pull requests willy-nilly without some internal alignment, but in the spirit of the \u201cnew\u201d Tidy (and given the harmlessness of this PR), let it be known that the first accepted PR under the new regime is the insertion of backticks into the documentation. This ushers in a new era for Tidy.\n. Given that we've moved to cmake can you confirm that we can close this PR with no further action? Note that we plan to merge current working develop-500 branch to master within the next week.\n. We're working on commit strategy. Both Iionel (@skynet) and I have been\ndiscussing some strategies, granting limited commit access, and so on.\nThe backlog of PR's will be addressed, but we have to be careful about\nsuddenly, blindly accepting the backlog without proper testing. I'm hopeful\nthat by the end of the week we will have a published strategy in place.\nI recently accepted a token PR that couldn't have broken anything, at least\nsymbolically ending the PR drought.\nThe fork Geoff mentions does contain a significant portion of the PR\nbacklog. Any type of testing that you do in the meantime would make it that\nmuch easier to commit back to the main repo.\nOn Tue, Jan 20, 2015 at 9:06 AM, Geoff McLane notifications@github.com\nwrote:\n\nHi Jeffrey (alias=jyasskin),\nYes, you are right...\nThis was a 'bug' introduced when adding\nhtml5 support... it can be fixed by\nchanging one value in the source...\nBut I do not /YET/ have commit permission\non this repo, so can only fix it in my\nown 'fork'... and in the past PRs have\nbeen ignored... there are at least 14\noutstanding... so have not done this...\nSo clone -\nhttps://github.com/geoffmcl/tidy-fork\nAnd then change to branch geoffmcl-restart...\n$ git checkout geoffmcl-restart\nAnd you should find it 'fixed'... and a LOT\nof other features added, AND many other bug\nfixes... I hope we soon get all this\ntogether, for Tidy's sake... but it takes\ntime...\nBe aware, my 'fork' only uses the cmake\ngenerator build system... all others have\nbeen removed...\nRegard,\nGeoff.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/142#issuecomment-70588226.\n\n\n\nJim Derry\nClinton Township, MI, USA\nNanjing, Jiangsu, China PRC\n. Geoff, I'll try to pull yours in the next couple of days. It's the most\nlogical approach. We're still labelled \"experimental\" and so Ionel has\nconvinced me that the risk is low.\nI'm a little worried about the other build systems that were removed. This\ncould be good, much needed pruning (especially if they didn't work), or it\ncould break someone's build process (probably unlikely given how static\nTidy has been).\nNot sure if you had a chance to clean up my customized version strings. I\ndon't mean to be assigning tasks, and I can clean them up before merging.\nOn the issue of merging, what I'll probably do is just replace the entire\nexisting repo. I think this gives us the best chance of avoiding conflicts.\nThe new commit will properly show all of the diffs from file to file,\nHOWEVER --- we're going to lose some of the PR history. This has the\npotential to hurt a lot of contributors' feelings. Their names and PR\nnumbers will still show up in the commit history (I added these to the\ncommits), but they won't show up in git's magic who-contributed-what\nhistory.\nIt sounds like you've mastered how to merge all of the changes without the\nconflicts I kept getting. If I give you commit access, would you be willing\nto merge in the current -restart branch into master? Maybe give it a trial\nrun in /htacg in a test branch that can be deleted later.\nIf not, I'll try to do it before the weekend.\nAs a contributor with a demonstrated commitment to Tidy I'll be happy to\nlet you keep the commit access, but this initial merge and commit should be\na one-time deal only, until we've decided on proper change control process.\nedit: [removed email auto-quote]\n. @geoffmcl I've given commit access and created a repo at /htacg/geoff-test. If you would like to do some merge testing there, we can talk about bringing /htacg/tidy-html5 up to date.\nThanks for your support.\n. @geoffmcl \n\n\npush\n\nI really do not understand what you are\ndoing concerning permissions???\n...\nWhat does giving me access to an empty\nhtacq/geoff-test repo do?\nI had already agreed that the merge\nwould be done in a branch... so master\nwould be UNTOUCHED... and if you did not\nike the resulting branch, it could be\ntrashed.\n\nI missed that part of the discussion while I was sleeping in my timezone. I thought that a trash repo would be a convenience to you.\nHowever I did give you commit access, and although I didn't say outright that it includes access to the tidy-html5 repo, it includes access to the tidy-html5 repo.\n. @geoffmcl said:\n\nAnd is this not a new generation of tidy,\nso why not simplify life for everyone,\nand settle on ONLY cmake?\n...\nPlease, let's go 100% cmake...\n\nI'm willing to support that, but I'm only one person; can we try an experiment so: post this suggestion to mailto:public-htacg@w3.org (https://lists.w3.org/Archives/Public/public-htacg/)?\nI know the list hasn't seen any activity yet, but if we're going to be a serious organization I suggest that this type of debate be open to everyone at HTACG who doesn't necessarily check out these issues threads. Since literally anyone in the public can join HTACG, it's not exclusionary and offers full transparency.\nI could post to the list, but I don't want to steal your thunder...\n. Confirmed fixed in develop-500. I will close this. Thanks, Geoff.\n. Closing. Moving to mailing list at https://lists.w3.org/Archives/Public/public-htacg/.\n. Oh, any comments or complaints about this request should be addressed to the mailing list. :-)\nI will close this issue later, but not yet becaue it will disappear from the main issues page.\n. Closed as inappropriate issue for this list.\n. I'll close this. @techresources, feel free to re-open this issue if it's still unresolved.\n. I made the changes and pushed this. tidyReleaseDate() is marked in comments as deprecated which should be picked up by doxygen. I didn't include a compiler attribute to flag warnings in the interests of compatibility with non-GCC-style compilers.\nAlso reverted CMakeLists.txt and removed the date macro. version.h still supports the macro in case we want to revert this behavior, but I've set the default date to Unix epoch for lack of a better idea. People that are counting on tidyReleaseDate() should be able to see that something is wrong when they see the date.\nAn alternative would be to use tidyReleaseDate() as an alias for tidyLibraryVersion() but I don't know if any current users have a use case for parsing dates that might be broken by returning a version string instead of a formatted date.\nForgot to mention in the comments that I cleaned up some strings while I was at it to avoid mentions of \"experimental\" and \"this fork\", etc., as we near 5.0.0.\nI'll leave this issue open for discussion re: what to return from tidyReleaseDate().\n. If no one cares what tidyReleaseDate() returns (currently Unix epoch), then I will assume everyone is satisfied and close this issue.\nI'll leave it open for a few more days and cross-post to the three lists...\nOh, I suggest that we add a deprecated flag to tidyReleaseDate(). This is simple for GCC-like compilers, but I'm unfamiliar with other compilers -- is there a generally recognized, cross-compiler flag available for this?\n. Uh, oh, we'll have to use 4.9.9.1, 4.9.9.2, etc.\n. It looks interesting, but without having to become a PageSpeed expert, what is it you're proposing here? Use Tidy as an output filter in order to pretty print?\n. That's actually an excellent point. A lot of people have a lot of different use cases. In my case, for example, I use TidyLib in a GUI application that that adds a lot of use cases beyond what Tidy was intended for.\nWe can start a use cases document in the community/ repo. I can probably roll it into the new webpage when it's ready.\n. @dkebler, can you point out the gist to us? I will notify the gist owner that the instruction is soon to be invalid. He or she can change it, I hope.\nEdit: committed a large notice to the README in Master.\n. @dkebler, our plan is to release to all of those repos. Hopefully in Universe, so no having to add custom ppa's, etc.\n. Fixed link. Agreed.\n. @michaeljwilliams, I apologize for the inconvenience. You're using the \"master\" branch, whereas the \"develop-500\" branch should be working. We'll resolve this shortly, as it's confusing.\nWould you please confirm that the develop-500 branch works for you properly?\n. I've made develop-500 the default branch now, temporarily, until it's rolled into master again.\nActually I was afraid of cmake at first, but I've come around to it. It is exceptionally flexible. Just today I learned how easy it is to create Mac OS X disk images with signed installer packages in them.\nIn any case, for 5.0.0 we do plan to offer binaries because we certainly don't expect end users to build all of their own software.\nWhat version of Mac OS X are you on? For the initial install did you try running the bootstrap script for the initial install? It's also possible that you'll have to use sudo make install, although cmake's documentation doesn't mention it.\nI didn't know cmake had a GUI, but like I mentioned, I'm still getting used to it.\nLet me update my personal website with a current build, and I'll report back to this thread when it's up. It's something I do anyway, but it's still using an old build from a private fork, so time to update it.\n. @michaeljwilliams, try this. It's a disk image containing a developer-ID-signed installer with today's most up to date develop-500 build for Mac OS X 10.8 and above. Maybe works on earlier 10.8, but I don't have the ability to test earlier than that.\nEdit: the disk image should clearly show today's date. It's on a CDN; if you get an older version you may have to wait 30 minutes or so and try again.\n. I used the version from their website. Because you don't have cmake already installed, the bootstrap script is the only way to install cmake the first time. That's for the command line version, though. I don't know the requirements for the GUI version.\n. @michaeljwilliams, would you kindly file a new issue? Just plainly state that the current build allows two main elements when it shouldn't. If I don't see it in the couple of days, I'll add it myself.\nI'll close this issue for now, though.\n. Hi @michaeljwilliams, if possible uninstall the cmake GUI, and try to follow these steps in Terminal. I'm going through them a step at a time on a virgin copy of Mac OS X 10.9.5 with all software updates applied.\nCMake\ncd ~/Downloads\ncurl -O http://www.cmake.org/files/v3.2/cmake-3.2.0-rc2.tar.gz\ngunzip -c cmake-3.2.0-rc2.tar.gz | tar xopf -\ncd cmake-3.2.0-rc2\n./bootstrap\nAt this point Mac OS X may ask you to install the command line developer tools, if they're not already installed. Go ahead and do it. If you had to install these tools, then try again:\n./bootstrap\nContinuing...\nmake\nsudo make install\nNow you have a working CMake.\nTidy\ncd ~/Downloads\ngit clone https://github.com/htacg/tidy-html5.git\ncd tidy-html5/build/cmake\ncmake ../.. -DCMAKE_INSTALL_PREFIX=~/Downloads\nmake\nmake install\nWhen make is done, you will find all of the build files in your Downloads folder. The actual binary will be in ~/Downloads/bin/. If you prefer to install Tidy \"properly\" then instead of the last two lines above, do this:\ncmake ../..\nmake\nsudo make install\nAgain, apologies for the inconvenience. The idea is that for 5.0.0 (i.e, when we release) we will have binaries for all of the major platforms. \n. @ralfjunker, When 5.0.0 is official, one of the next big pushes will be for the testing system, including establishing a new baseline. If we're okay with the altered results today then I don't see a reason to honor the past 100%.\nEdit: what @geoffmcl said.\n. This invites very serious discussion.\nAccording to the HTML5 reference the only permitted doctype declarations for HTML5 are\n- <!DOCTYPE html>\n- <!DOCTYPE html SYSTEM \"about:legacy-compat\">\nOne might argue (and I'm necessarily arguing it, but only pointing it out) that today in 2015 with nearly everyone and every vendor on-board, we should expect that \"html5 mode\" is only ever triggered when Tidy detects these doctypes, otherwise fall back to legacy detection. It would certainly make Tidy a lot more efficient if it could count on detecting this.\nA big counterpoint, however, is that one of Tidy's key use cases is finding errors in HTML. One might argue that it's reasonable to assume that correcting a missing doctype (upon detecting the type of HTML) is a key function of Tidy.\nIf we were to decide that we needed two Tidy libraries - tidy4 and tidy5 - then we still have an issue wherein we expect the user to choose which library/executable to use in order to clean a document. If we have to default to forcing the user to make a choice, this choice already exists with --doctype.\n(Geoff, correct me if I'm wrong: what would having two libraries gain us if still forcing the user to make a choice?)\nAnother possibility is to generate an warning: \"Document content is ambiguous. Sorry. Please use a --doctype or specify a doctype in the source. Some changes in the output may not be desired.\" \nThis is a tough call, and Geoff has raised this issue a few times in the past and never gotten the responses he's been seeking.\nI wonder if we should take this to the mailing list?\n. @geoffmcl, I brought it to the mailing lists. Let's see if we have any responses.\nI favor the solution you introduced.\n. I'm considering accepting this, as it offers a lot of good, extra features. I have a couple of concerns, though.\n- The tabs' text are unreadable on my 5K display with the color changes that you made.\n- Are all of the documentation styles necessary? We still have to address coding style, and that should include documentation style for the source code. For example the auto-briefs.\n- Example.1.c is showing up as a source file.\n- I think the headers are the only thing that should be documented. If there's something important to the API that's buried in source code, then let us know so that we can move it into a header. We can leave this as is for now, but non-header files are meant to be private.\n- The quickref link in the tabs section is broken.\nDon't let my nit-picking get you down. This is a definite improvement. I'll leave the PR open for the next 24 or 25 hours in case you want to push any more tweaks, and then I'll accept it unless anyone voices any objections.\n. @pedromorgan,\nWell, obviously my merge strategy wasn't perfect -- I thought it would show up here, but it's merged into Master now.\n. The first thing I did was git pull git://github.com/pedromorgan/tidy-html5.git\nWhat's missing? Looking at the diffs seems to capture all of your changes as of about an hour ago or so.\n. The current documentation is at http://www.html-tidy.org/tidylib_api/ and includes the build number when it was built.\nYour current open PR offers a lot of additional information, though, and it's definitely a step in the right direction.\nAlthough the generators for making the docs will continue to be in the repo (the shell scripts will be replaced by cmake as the universal build-everything tool), we've decided not to include the generated documentation in the repo. There are several reasons:\n- The docs are a build product, and anyone can build them locally.\n- We don't distribute binaries of Tidy in the repo.\n- It means having to remember to rebuild the docs for every push.\n- No ability to accept PR's that affect the docs without regenerating them manually and doing another push.\n- The real documentation is the header files.\n- In short, they're always most up to date when we don't include them, but provide instructions.\nPersonally I appreciate good, online documentation as a quick reference rather than switching my editor view to the header. Not everyone agrees with me, but even so we'll continue to support Doxygen. Its generated output is on our website now, in fact.\nYou bring up a good point about letting it age, though. After 5.0.0 goes official, we'll make sure that the source is updated with every tagged release. Also it's on our gh-pages, and so PR's can be made against it, too. \n. Add indefinite future because there has been talk about refactoring the testing.\n. @pedromorgan, can you open issue for this? I'm not certain what this site does, and their own description is pretty threadbare. Wikipedia says they do online continuous integration. What problem does this solve for Tidy? Don't answer here, let's take it to issues, but those are the types of questions some of us will ask. It looks harmless enough until you say enable hooks (which is probably harmless).\nIf this affects everyone's workflow in some way, it's especially important to understand what you're asking us here.\nThanks!\n. @pedromorgan, What's the difference between Travis IC and Jenkins? Can you give us some very brief pros and cons for both of them? Do you have a preference, and why?\nI'd like to avoid losing cohesiveness of the project, and would like to point people at a single CI solution rather than 20.\nI was about the pull the Travis changes and enable it, but I'll wait for your feedback. We will defer to your expertise, but your decision will be final ;-)\n. Since it seems so easy for developers to use any CI service of their choice, I wonder if it's best just to follow your lead and let developers use any CI service of their choice.\n. Working with them. At least, trying to, anyway.\n. Seem confirmed on multiple versions of Cmake, and I can confirm Mac OS X. Will close.\n. @pedromorgan said:\n\nWould make sense to move\n\nSoon. I'm planning to remove the build_docs script and add its functions to cmake as another target, which will allow some cleanup and moving out of build.\n. I'm trying to troubleshoot this PR... CMAkesLists.txt specifies cmake_minimum_required (VERSION 2.8), but it breaks with 3.1.1 because of the deprecated use of SOURCE in the add_custom_command.\nSince you know a lot more about Cmake than I do, can you suggest a workaround?\nI'm hacking at it now, but I might take all day...\n. That's okay, I keep learning a lot about cmake little by little. I'll merge this once I can get it working on 3.1.1. I see the other PR for dox, and I'll get to it in a bit, too.\n. @geoffmcl said:\n\nAnd that would be true for any added cmake docs generation, so it also does NOT become part of the source. Preferrably into a sub-directory, like say ${CMAKE_BINARY_DIR}/docs so it can all be ignored by one entry to .gitignore.\n\nWhat a timely simultaneous posting. I requested a PR on the cmake_documentation branch for your code review. It moves documentation out of build, and only builds into a temp directory, and cleans up its temporary files.\nIf you pull it, I can clean it up tomorrow and redirect the build to build/temp in instead of documentation/temp, as you're right: that makes a lot more sense.\nAlso I wasn't able to test on Windows... I have a feeling it might break because some DOS commands aren't the same as Unix.\n. @geoffmcl, I'm fine with all of the suggestions. It was mostly an effort to get the documentation out of build/, and the learn a lot more about CMake. It quite literally took my entire day to make those changes. Overall it was worth it as it will never take that long again.\nWe can avoid all of the xsltproc dependencies by reverting some of the changes that @pedromorgan introduced. There's no absolute need to include quickref.html in developer documentation, for example.\nFor Unixes xsltproc is standard, or at least very easily installable. The typical user expects a man page, whereas on Windows a typical user has no such expectation for command line applications. I don't see a need to generate a Windows help file, either, because those are most often associated with GUI applications.\nFrom the strategy standpoint, is there any value in installing the quickref.html document at all? tidy -help Works on all platform, Unices will have man pages, We can still make sure it's on the website. I don't see that it has value as part of the distribution and it frees us from xsltproc dependency on non-Unix platforms.\n. Looks excellent!\n. You're still using the Master branch, right? The new cmake_documentation branch is broken.\nUsing Master I just got a perfect build, and tidy5 ends up where it's supposed to be.\n. Apparently Github automatically closes issued when it detects \"Fixed\" in a commit message. That wasn't my intention. Would you try it now?\n. Actually that should be http://binaries.html-tidy.org/ now.\n. Given we added the Tidy + section on the main page, and the /plus portion of the website, I'll close this issue for now.\nPlease do feel free to open it again if there are any new suggestions. Especially if (as @skynet indicated) you know of any specific articles worth mentioning about tidy code.\n. With the addition of api.html-tidy.org, can we close this issue?\n. Fixed.\n. I've fixed all the links.\nPlease note that I created a new repo for documentation. This serves as a point for both the developers as well as the tidy-html-org website.\nMy suggestion is to remove everything having to do with documentation (except the files needed to build it) from future releases (I'll eventually look into this myself if no one else does). currently there are redundant scripts that aren't needed with cmake, too.\nAlso note that rather than a subdirectory as indicated, these are now on the api.html-tidy.org subdomain. This made it easy to segregate, and will keep the main repo from exploding in size every time we add a new version.\nI'll leave the open for now so that everyone can comment about current design. Specifically @geoffmcl wanted to see some notes or whatnot that are not included with the current release. This should be simple to add.\n. > So from my perspective this can be closed...\nOkay, then!\n. http://www.html-tidy.org/#get_tidy\nMacPorts instruction added.\n. @vielmetti, I couldn't install fink behind my picky proxy (the last time I used fink it came on a disk image). Thus I'll ask for your support on this:\nQ: assuming fink is already running and installed, what's the terminal command for installing tidy-html5? Include sudo if necessary.\nI've made changes to the \"Get Tidy\" section of the website; fink is now listed as coming soon. As soon as I have an install instruction here I'll add it to the web page. I'm GMT+8 so allow for the chance I'll be asleep.\n. @vielmetti, I managed to get fink installed on an El Capit\u00e1n install at home. When I fink install libtidy5 it seems to install the libraries but I can't find the executable anywhere in /sw/. Because the documentation was built it's pretty obvious the binary was built, but seems like it wasn't installed.\nAre you getting different results? I hate to add documentation to the site that doesn't work for others.\n. I'll have another go at it tonight. \n. I've tried to reach out to the package maintainer; I'll see if we get anywhere. I see that he maintains 1600 packages, so he may not even notice my email.\n. @danielj7, awesome! Thank for so much for coming through! I also received your email response and I will try to answer as soon as my VPN starts working again or I get back to work (gmail not so welcome where I'm at).\nBecause this issue reflects documentation (and the documentation still says \"coming soon\" for fink), I'll leave this open until I update our website (will install fink in VM and verify installation method).\n. Documentation now live on http://www.html-tidy.org, and so closing.\n. Two confirmations of a fix, and a check of the cases using master branch incline me toward closing this issue. Thanks, everyone.\n. @joeheyming indicates the issue is resolved, and testing master on my system indicates that too, so I'll close the issue.\n. @mikemcquaid, clearly @geoffmcl meant your stats are awesome. Is there anything I can do to help ensure we keep up to date with homebrew? I'm not the package manager for homebrew's tidy package, but as one of the Tidy team and a Mac user myself, I'll do what I can when I can.\n. Confirmed fixed on my machine in current master. Since @chg365 indicates it works for him, I'll close this.\n. @chg365, can you post the text here? I can't type Hanzi for troubleshooting.\nAlso which version of Tidy is this?\n. I have a special interest in the internal documentation (which I want to cleanup in general anyway), so let me take a stab at this.\nThings are a bit complicated because clean is affected by drop-font-tags but drop-font-tags has some behavior if clean isn't used. This gives us the following interactions:\n- clean == YES && drop-font-tags == YES moves certain tags to css, excluding <font> tags, which are simply removed.\n- clean == YES && drop-font-tags == NO moves certain tags to css, including <font> tags.\n- clean == NO && drop-font-tags == YES moves certain tags to style attributes, excluding <font> tags which are simply removed.\n- clean == NO && drop-font-tags == Leaves all of this alone.\nSo I can kind of see how the name drop-font-tags was chosen; it simply doesn't describe that it also cleans (to style attribute instead of <style> tag) some tags, and there's not a way to drop <font> tags without also performing minimal cleaning.\nI think there's is an inconsistency here, whether or not it's the same inconsistency that @claviska mentioned. One could argue that the removing drop-font-tags' \"cleaning\" behavior is the most consistent thing, and leave it to mean only that <font> will be dropped. However this would upset current workflows that implement the current behavior. It's not API-breaking, but it's behavior-breaking and so might be suitable for a minor point release.\nDiscussion for possible future point release:\n- Remove the cleaning behavior from drop-font-tags.\n- Add new clean-legacy-tags with a picklist: no, yes, css\n  - no makes no cleanup at all (like today's drop-font-tags NO and clean NO)\n  - yes cleans up to style attributes (similar to today's drop-font-tags)\n  - css does what clean does today.\n- Because we can't break an API in a minor point release, we still have to do something with clean. We can just say it has no effect, as it won't break an API, and marked for removal in the next major release.\nDiscussion about what we can do today:\n- Add a synonym to drop-end-tags and call it clean-legacy-tags, which kind of opens the door to a possible future as described above. There are a couple of synonyms already (e.g., hide-endtags and omit-optional-tags). drop-end-tags to be limted as above at next point release.\n- Justification: although it doesn't clean all legacy tags, it is clearly cleaning some legacy tags. If we encompass more legacy tags in the future then there's no need for a name change. What it does exactly would then be clarified in the new description.\n- New Description: This option determines if Tidy should perform cleaning of certain legacy presentational tags (currently <i>, <b>, <center> when enclosed within appropriate inline tags) and also determine if Tidy should drop occurrences of the <font> tag. If this option is YES, the <font> tag will be dropped completely regardless of the value of clean. Additionally if this value is YES then legacy tags will be replaced with a style attribute on the enclosing tag. However if clean is also set to yes, it will override the cleaning behavior of clean-legacy-tags and use CSS <style> tags instead of style attributes. This option is a synonym for drop-font-tags which has deprecated behavior.\n- New description for clean: This option determines if Tidy should perform cleaning of some legacy presentational tags (currently <i>, <b>, <center> when enclosed within appropriate inline tags, and <font>). If this value is YES then legacy tags will be replaced with CSS <style> tags and structural markup as appropriate. However if drop-font-tags is set to YES, then <font> tags will simply be dropped and the style will not be preserved in CSS.\nIt appears that only <b>, <>, and <center> are supported. It seems no one has opened an issue for tt, big, small, sup, or sub, so I won't bother opening one now.\n. That simplifies things a bit... both clean and drop-font-tags do the same thing, except the former puts them into a class, and the latter into inline styles. I updated my lengthy comment above to fix my logical matrix (I used < instead of <, obscuring the behavior differences). Actually there's still a major difference: drop-font-tags just ignores the <font> if set to YES. Given the name alone this makes sense. It's the additional things it does that makes it evil!\nI'll take a stab at adjusting the documentation tomorrow. Forget everything about future point releases; inline styles aren't really best practices anyway, so I don't think there's a need to add new options to support only this. Given clean, I would instead recommend that we simply deprecate drop-font-tags, note it in the documentation, and add the nags. It doesn't really do anything useful. Future clean without drop-font-tags would act is if drop-font-tags were in its default NO.\nCurrent proposed doc change:\n\nDeprecated; do not use. It will be removed from future versions of Tidy. Use clean instead. If you do set this option to YES it will perform as clean except styles will be inline instead of put into a CSS class. <font> tags will be dropped completely and their styles will not be preserved. If both clean and this option are set to YES, <font> tags will still be dropped completely, and other styles will be preserved in a CSS class instead of inline. See clean for more information.\n\nI would still use most of the new, proposed description for clean as stated above.\nThoughts?\n. I've created branch tidy_doc_cleanup. @geoffmcl if you want to pull in 2d0f971 for next release, then it should address this issue. I don't want to merge into master and bump the release number over a documentation change.\nI'll do some other cleanup in the docs in general, but specifically commit 2d0f971 in the new branch will close this issue. I'll keep this open until the next merge into master, though.\n. The documentation fix is in master, so I will close this.\n. Pushed as-is and bumped version and date.\nOn Tue, Nov 3, 2015 at 2:08 AM, Geoff McLane notifications@github.com\nwrote:\n\n@balthisar https://github.com/balthisar yes, there are a lot of\nexciting changes... thanks...\nI have review all changes, but only looked mainly for code changes. In\nother words I did not fully check all the new decsriptions, words, syntax,\netc, ... but all that I did read made sense... and of course it still\ncompiles without a problem...\nAlso have not yet got around to trying an API documentation build, since I\nmay need a change to the script I use, but I will get around to that... I\nam sure you have done this several times...\nSo I think this should be merged to master, and the version bumped to\n5.1.18, with a correspond date change. I know most of these are not code\nchanges, but if someone now reports an error in a description we need to\nknow they are reading the new descriptions...\nOf course, as expected, the removal of the dead bobby link, which is\ngood, does cause about a dozen message files, generated from ./testall.sh,\nto be different from those in testbase... but it is only message file\nchanges... so after this merge, we also need to update testbase with the\nnew messages...\nThere are 2 other message file differences NOT related to your changes -\ntest 431895 (./ diff), and test 443678 (3 to 2 warnings) that I have been\ntrying to solve. In 431895 I think the leading ./ difference comes from\nthe different scripts, but still to track down which and change it, then\ndecide which should be in testbase, and 443678 seems a good desired\nchange, but again still to explore it exactly... and see some other\ndiscussion on changes in #266\nhttps://github.com/htacg/tidy-html5/issues/266...\nBut these other changes are not related to your pushes, so, as stated I\nthink it should be merged... again, thanks... lots of work went into this...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/pull/289#issuecomment-153104699.\n\n\n\nJim Derry\nClinton Township, MI, USA\nNanjing, Jiangsu, China PRC\n. I used to prefer the K&R way of doing things, but as I said I'm still\ntrying to shake my modern habits. :-)\nI was having trouble getting indent-with-tabs to work using libtidy and\ntidyOptSetBool directly so I posted a PR for review.\nhttps://github.com/htacg/tidy-html5/tree/fix_indent_with_tabs_for_libtidy\nI will answer email shortly!\nOn Wed, Nov 4, 2015 at 9:55 AM, Geoff McLane notifications@github.com\nwrote:\n\n@balthisar https://github.com/balthisar thanks muchly...\nPushed a small C/C++ crossover problems, that gcc has been allowing for\nFOREVER!, but fails with compilers that still honor this K&R (pure) C\nrule... nothing really...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/pull/289#issuecomment-153546332.\n\n\n\nJim Derry\nClinton Township, MI, USA\nNanjing, Jiangsu, China PRC\n. I'll add, we should bump the version with this because it affects API behavior and libtidy users might want to check against it.\n. Merged and version bumped.\n. I can almost see a use case for this, but it wouldn't be very high on the radar. Stripping <script.> and <style/> tags when used with show-body-only has a potential case in document migration, for example. \nIf you manage to post a PR I'd be happy to consider it.\n. Thanks for the fixes. I'm not sure how that got corrupted in the first place. It was a copy and paste job from the old site at http://tidy.sourceforge.net/libintro.html.\n. @Janghou, I came across this. I know I'm late to the party, but does this help:\nhttp://askubuntu.com/questions/441879/why-do-some-packages-have-extra-numbers-on-the-front-of-their-version-string\nAdding an epoch to the deb should override the old date-based version, which has implied epoch 0.\nI'm not sure how we generate deb packages in CMake yet. I'll add this to my to-do list. It may be as simple as set(CPACK_PACKAGE_VERSION \"$1:{LIBTIDY_VERSION}\"), but seeing that CMake doesn't seem to directly support a CPACK_PACKAGE_VERSION_EPOCH or similar, I'm not sure. I'll have to try to come up with something this weekend.\n. Per our FAQ, can you provide the following:\n- A description of what you think went wrong.\n- The HTML Tidy version (find it out by running tidy -v), and operating system you are running.\n- The input that exposes the bug. A small HTML document that reproduces the problem is best.\n- The configuration options you\u2019ve used. Command line options like -asxml, configuration files, etc. - - You may use tidy -show-config to get an overview of the active Tidy settings.\nEven if we try to figure out what a Jinja template is, there's no guarantee that we'll have anything go wrong, so a short, failing example posted here would be useful.\n. I see. I'll make the change to the contributing file, too.\nDo you get results expected when you try the show-body-only option?\nIf Tidy understood {% %} tags there would still remain the problem that Tidy doesn't understand the content of the tags.\n. I'll close this at it looks like the show-body-only option was successful. If anyone disagrees, please feel free to re-open with new information.\n. Ok, I'll keep it open with an indefinite future milestone. PR's are welcome.\n. @benkasminbullock, FYI tidy can generate similar output directly: tidy -xml-config. It successfully doesn't include doctype-mode. Granted you get XML output, but a simple XSL transformation with xsltproc can format it any way you want. Check out the /documentation in the source for examples (it's how we generate our documentation).\n. Hmmm.... that's interesting and should provoke a discussion about expected behavior. That's classic Tidy behavior, and is probably the result of accessibility-check being in its default state of 0 (Tidy Classic, where the missing alt is reported as a TidyWarning. As soon as I change accessibility-check to something else (e.g., 1 (Priority 1 Checks)), the TidyWarning message goes away and I get a TidyAccess message instead: \"[1.1.1.1] <img> missing 'alt' text.\"\nHowever, it's still not squelched when I add quiet, and in fact I'm getting the remaining accessibility errors along with it.\nI would suggest that the wording is right when using the default accessibility-check, but could be clarified to point out that accessibility warnings only apply when accessibility checking is specifically turned on.\nHowever it's certainly inaccurate in cases where accessibility checking is enabled.\n. @geoffmcl, that was me. The previous wording seemed a bit hyperbolic. I'll find a happy medium and post a PR.\n. Potential fix in 933fc3d2. \nNew wording for option description:\n\nThis option specifies the default alt= text Tidy uses for <img> attributes when the alt= attribute is missing.\nUse with care, as it is your responsibility to make your documents accessible to people who cannot see the images.\n\nOutput 1:\n./tidy --alt-text \"moo\" --show-body-only yes --quiet yes foo.html\nline 1 column 1 - Warning: <img> inserting \"alt\" attribute using value \"moo\"\n<img src='http://example.com/example.png' alt=\"moo\">\nOutput 2:\n./tidy --show-body-only yes --quiet yes foo.html\nline 1 column 1 - Warning: <img> lacks \"alt\" attribute\n<img src='http://example.com/example.png'>\nI'll issue a PR against its branch pending review.\n. When I saw the long list of defines my gut wrenched a little and my instinct was to rework it into an enum or a lot of exported constants (probably the enum). But like so many things, expediency often wins the day!\nThe string assignment's fine; I shouldn't assume that every compiler will optimize such function calls.\nI'll pull the fixes a little later and bump the version up a bit, unless you've beat me to it.\nAdding on to this, and it's a broader topic for another day, I've always been a bit dissatisfied on how localize.c works in the first place. Unlike modern applications tidy doesn't adapt to its locale. While we don't currently have any language localizations, the only possible way to localize is to build a language specific version of Tidy.\nThere are a couple of different options, but they either involve increasing the libtidy size (strictly speaking, only if we add localizations), or they break the simplicity of having a single library, or they break cross-platform compatibility. It's something I keep telling myself I'll have a look at. Right now my current thought is to move all the strings into exported constants, perhaps wrapped with a macro indicating the ISO language code, e.g.,\n#def lang_es_mx(INSERTING_AUTO_ATTRIBUTE) \"%s insertando\\\"%s\\\" atributo usando el valor \\\"%s\\\"\"\nThat's probably one justification for keeping GetFormatFromCode and not using the macro directly.\nAnd of course we have a language option that's been in the API for who knows how long, but still remains without function.\n. I'll close this as it's in master, although @geoffmcl points out there's a different bug exposed with show-body-only.\n. I'll try to give it a spin this weekend (Qt, etc.).\nMy plan won't be to use blank lines to line them up and synchronize them but to find the container coordinate of the middle line of the container being scrolled, and telling the other contain to scroll into view using the coordinate of the related line. I'll be using Cocoa, and although I don't know anything about Qt yet, I'm certain that it must provide similar functions.\nI've been working on the localization project for Tidy so I've not actually built a Cocoa app to demonstrate this yet!\n. I've been experimenting with localization and this seems like a good idea as binary size grows significantly with added languages. This would help mitigate that. \n. It would be preferable but compiling them in maintains universal architecture support without having to consider the platform specifics of every operating system in existence. \n. With the Cmake fix and the discussion going off topic, I'll tidy up and close this issue.\n. @benkasminbullock, thanks for the report. Would you check to see if 5.1.28 provides the expected behavior?\n. Sorry, I guess editing my comment wasn't fast enough. Actually look at master, which should be at 5.1.28 now.\n. We can, but no computer for me until Sunday night. You can find the commit?\nSent from a mobile device. \n\nOn Dec 5, 2015, at 2:03 AM, Geoff McLane notifications@github.com wrote:\n@balthisar it is your commit... can we revert it?\n\u2014\nReply to this email directly or view it on GitHub.\n. As of right now, there are no more loose strings at all in messages.c (n\u00e9 localize.c). I've yet to scour the entire library for stray strings that might be output, but there's the obvious console application that I might get around to tackling if we decide to move forward.\n\nAlso I hope some of our international users take an interest in helping us localize, since this will make it really very easy to do so.\nStill have to make the library actually switch languages, though, when used with --language. Autodetecting the locale is best suited for the console application; the library should only be told what to do.\nThe sample en_gb is low-hanging fruit. I can go through and change all occurrences of \"color\" to \"colour\" for example, and there may be some -izes to -ises changes available.\n. > Possibly worth noting that \"tidy_out\" can be made static. This might help to \"localize\" the strings.\nIt's declared static in the forward declaration, so that should make it static in the actual implementation.\nI'm actually a little bit more worried about all of my string pointers, particularly in the console application. Clang's analyzer says I'm okay, but I don't trust myself, as strings in pure C without a library used to cause me a great deal of headaches!\nAnyway I've taken a cursory glance at all of the remaining source code. It seems that other than debug strings and strings that can't/shouldn't be localized, right now the task of getting all of the strings into the 'en' localization is complete. There's still a strategy issue I'll add to the next comment (just to keep things separate).\n. So my original idea was to tie into setting the language option, but a more careful look at the source code makes me think (1) this is a stupid idea, and (2) we should delete the language option entirely.\nAddressing point (2) first, I can't think of a single use case for its existence. It's tied to SUPPORT_ASIAN_ENCODINGS but actually has no function, and for point (1) we obviously can't tie the output language to a compiler conditional. It also seems like a bad idea to specify a program's language as being an \"option.\"\nThis leaves us with a couple of options, but I'm not sure what expectations that libtidy users have over libtidy's behavior. On systems I develop on (Mac OS X) frameworks automatically support the user's locale if the framework includes that localization, regardless of the application using the framework (a framework is an abstraction for a set of libraries).\n\u2022 Should libtidy, then, try to determine its current locale and set the output language accordingly? Or,\n\u2022 Should libtidy use the default en and only switch output languages when told to by an implementing application?\nI kind of favor the second option is it gives the application developer a choice.\nThen what about the console application? I think it should automatically adapt to the locale, perhaps with an option to force the default English.\nPerhaps this whole thing is short sighted in that we don't actually have any localizations available yet, but I'm hopeful we can attract international volunteers when it becomes essentially effortless to implement a localization (which the current state of this experimental branch manages quite effectively).\nAnyway, this is a pretty significant change to some of Tidy's architecture, so some feedback is welcome.\n. @geoffmcl,\nThe last thing I'm still investigating is how to determine locale. Platform-specific implementations are just an #ifdef away, but every platform approaches it differently. The design question then becomes do we do this in the library, or have library users implement it in their application and simply tell libtidy which language to use?\nThe way I implemented the languages uses an integer key to retrieve a string, and I've also made sure that a lot of old #defines are now enums (where possible), and changed some enum starting values where not accessible outside the library. Unfortunately some of them are exposed and rather than break things, I've done workarounds (like mirroring the existing enum).\nAdding a language is merely a header file, and adding the structure defined in the header file to a languages array in language.c. Nothing at all has to be done to CMakeLists.txt, unless we want to export the individual language headers in the lib.\nThis does mean that every language becomes part of the binary. Right now the English header file is 2K, so each language would add less than 2K to the library. This was a deliberate choice to avoid having to build language libraries and installing them, too.\n. Current state:\nTidy will set the locale automatically assuming that it's set in your OS. In English my default local is en_US, but when I switch to Spanish my default locale is C. When setting my OS to English UK it switches back to en_US, but this is easy to change for testing on Linux/Unix (export LC_ALL, export LANGUAGE). Not sure about Windows.\nWhatever language the library is set to Tidy will try to fallback intelligently. Supposing both es and es_mx are available, if a string is unavailable in es_mx it will be sought in es, and if unavailable there the always present en \"master\" string will be retrieved.\nOn Mac OS X Tidy 5.1.24 as installed by our HTACG installer is 549K. Adding en_gb (mostly) and the sample from es increase it to 751k, but this is using XCode instead of CMake, so I may have left on debugging symbols or something. (Actually I may not have specified \"release\" in the latest HTACG installer).\nAssuming there are no glaring bugs, about the only thing I would do is add a bunch headers for common languages, and \"localize\" the non-quiet output with an additional message at the end asking for users to help contribute a translation!\n. Current state is looking pretty good. I eliminated all of the memory leaks related to my previously poor string management, and greatly improved the --help-option output. I suppose --help-option could be decoupled from the localization support effort, but it seemed worth it to get it in now as it was a great way to experiment with long, localized strings.\nIt had to get into a lot of Tidy's source files to be all encompassing, and so it would be great it library and command line users could start testing this branch. I'll keep it current with master so that bug fixes are included in this branch.\n. @gagern said:\n\nIf you want to use .h files instead of the gettext library and format, that's fine since it should be easy to cook up some tool to convert between these formats.\n\nAh, this isn't a bad idea at all. I'd looked at GNU's library's and thought that they were overweight for Tidy's meager needs, but a quick and dirty conversion script between PO files and headers is simple enough to do.\nI especially like the PO file because it's so very easy to turn them into .strings files that I use on Mac OS X.\nI'm working on regression testing scheme right now during the holiday downtime, so I'll look at adding PO support after a week or two. Of course PRs are welcome in the meantime.\n. I'll modify the struct to K&R.\nI share a lot of the same concerns. My thought was to use the PO files only, and write a shell script to convert them back and forth to the header format, not in an automated fashion and not as part of the build process. This would provide a familiar format for the people willing to translate, while keeping things simple and as cross-platform as today.\n. @geoffmcl, looks okay to push the change.\nI'll try to remember to stick to K&R... I'm mostly following the existing style. I wonder, though, MSVC doesn't support C99?\nI'm using Clang, so I know there's an option somewhere to prevent C99 and newer; I'll make sure I set that in my environment. It largely implements GCC's front end, but it wouldn't be a different compiler if it weren't different. ;-)\n. The  PO<->HEADER back and forth converter is working pretty well. I really like the tools that are available for PO files, and I thank @gagern for really making the point stick that it's a format with wide support.\nStrategically speaking I don't see the value in using gettext directly, and the current proposed solution works well across platforms and keeps the file size small, and most importantly, portable!\nI'm certain that we could make the effort to automate the PO file conversion as part of the build process, but I'm going to vote against that, too. It doesn't take a huge effort to generate the header using the converter tool, and I don't predict that it will be a major time sink.\nOn a side note, as part of testing I've been using a program called \"POEdit\" that is really, really just awesome and provides really good suggestions in Spanish. I think I can offer a full Spanish localization in the next week or two. I'm not a native speaker, but I'm good enough that the machine translation makes me really, really fast. I may look for a simple way to convert Mac .strings files so I can use this tool to localize my pet Mac application, too.\n. @gagern, this is really like going down a rabbit hole! I didn't intend to become gettext guru, especially given that we're against actually using gettext, but I'll look into the items you mention.\nI'm not keen on re-writing all of gettext's functionality (for determining plural forms, etc.). It looks like most of gettext is LGPL, so maybe there's a case for bringing the code in directly if it's not too large. Tidy is portable first, and we're not likely going to release anything that we can't compile and distribute ourselves. Dependency hell sucks!\n. > The functionality for determining the appropriate plural form is a single C expression which is part of the PO file itself. So as long as you provide the flexibility of choosing among a varying number of plural forms, picking the right one would be fairly easy.\nOh, that will be easy for the translator, certainly, but then Tidy has to implement a C expression parser to figure out which of the strings to pick. I'm looking through msgmerge.c to figure out how to use plural-exp.c from the gettext package to see if there's a simple way to re-use that code without reinventing the wheel.\nThe only other thing that could present an issue is the portability of POSIX format string reordering.\n\nBy the way, properly using gnulib should be enough to provide argument reordering support on pretty much any platform.\n\nI'm looking to pick through the code and re-use a (s)printf implementation directly rather than count on submodules. Unfortunately the code is littered with so many configure-time macros I'm having trouble grokking out what specifically is providing the sprintf. It looks like maybe printf.c or vasnprintf.c, but again all of the configuration macros are making it a bit unclear.\nCurrently Tidy has dependencies on only the standard C Lib and we hope to keep it that way. If it means bringing in LGPL source here and there I think the rest of the team can support that, but introducing a huge dependency is a non-starter for the time being.\nWe haven't really conducted an inventory on what we consider a \"supported platform.\" Other than Classic Mac OS (long deprecated) and Windows, a cursory glance at platforms.h tends to make me think that the only non-POSIX platform is Windows, and certain versions of Windows do seem to have sprintf-like functions that support positional specifiers (I just don't know how far back that goes).\n@geoffmcl, MSDN only goes back as far as MSVC 2005... does the sprintf family on Windows support positional parameters universally as far as you know? It looks like every other Tidy platform is safe in this regard.\nReally, the only two challenges to offering gettext-like functionality (using tokens instead of strings) are:\n- Parsing the C expression within Tidy\n- Implementing POSIX-style positional parameters in sprintf.\n. Tidy uses UTF internally, exclusively. I have no problems forcing all output to be UTF-8 rather than having to encode to 100 different formats. Output HTML still has legacy use cases for non-UTF-8, otherwise I'd be happy to eliminate everything else from the world.\nAh, yes, mssgFilt2 should definitely only return the native English string, which can be used for localization by library users (which is why I added it a year or two ago). LibTidy users can use the format string as a key for their own applications' gettext or NSLocalizedString or other schemes.\nThere's not currently a convenient, single opaque error type available, otherwise this would be especially handy to have. Maybe it's something that can be added in the longer term.\nEvery major compiler supports UTF-8 and most of them default to UTF-8 (probably with the exception of MSVC, but I don't know this), and I'm certain we can ensure that cmake will ensure the headers are used as such during build.\nI think this is all reasonably do-able.\n. # Current status\nGiven that all current platforms except Windows support POSIX locational parameters, I've managed to get Windows builds to support these, too, with very few code changes. A review of these specific changes is appreciated, as I have very little historical experience with Tidy's coding style. The Windows changes are pragmatic and work.\nIn this branch all of the strings are now using positional parameters. Running the tests in the regression branch on Windows, Linux, and Mac are giving identical error output, so this is a good indication that this is working.\nThis puts Tidy in an excellent position to work with gettext po files for providing localizations. I'll reiterate these points, though:\n- We will not use gettext, but the wide toolset available for gettext po files will be available.\n- We will not automate the inclusion of po files as part of the build. Conversion of po files to header files will still have to be performed, and this should be a simple, easy task.\n- We/I will provide a Ruby script to translate between po files and header files. If I do this in Bash it will leave Windows without a solution, and at least Ruby can run everywhere if installed.\n- Tidy with localization (this branch) now supports plurals in a gettext friendly manner. This means our po files will support plurals properly.\n- Tidy with localization now supports positional parameters (e.g., %2u$) on all tested platforms (*nix, Windows), and all strings have been updated to positional format and tested. This means our translators can localize without regard to format string parameter input position.\nAs of right now the Ruby tool is not at all complete, but expect it to work in a day or two for testing the ability to add localizations. In the meantime the existing Tidy code really, really needs to intensively tested! We pass all tests (except string where we changed strings) in testing branch, and my own testing seems okay.\nSpecial thanks to @gagern for not letting me get lazy ;-)  -- Tidy will have proper localization support!\n. Oh, wow, thanks! I thought I was keeping an eye out for those, and I built on Windows both with Cmake and Visual Studio 2013 to be even more sure.\nTime for me to look for a linter, I suppose!\nFor things to look at I mostly want to be sure that I\u2019ve not broken anything. All of the current regression tests comparing error output pass (except in cases where I changed the string), so that\u2019s a very good sign. I\u2019m pretty sure my memory management is okay and I\u2019m not finding any leaks where I create new strings. My C style is very much out of date due to Objective-C, etc., meaning I bring a lot of baggage and techniques from other languages (this isn\u2019t a good thing in many cases!). Is there anything in the code that I should be embarrassed about??\n\nOn Jan 12, 2016, at 2:40 AM, Geoff McLane notifications@github.com wrote:\n@balthisar just push small K&R like change to compile with MSVC10...\nNow over the coming days hope to get into some Windows testing... anything special to look at?\n\u2014\nReply to this email directly or view it on GitHub.\n. I'll move discussion over to #347...\n. This is a huge engineering task in its own right. We could start by defining some specific, stated goals for testing. It's overly broad to state the result is that Tidy works properly.\n\nTidy was written was long before unit testing was popular and proper unit testing would require refactoring a lot of Tidy code. Some simple test cases could be made for the major services without too much refactoring, though.\nI'm not certain that unit testing will tell us enough about Tidy as whole, though, and so some type of integration or functional testing is the real requirement. Integration testing is hard without being able to trust that the individual units are always working, and so we're back to unit testing.\nRegression testing is the only type of testing that's performed now, but as @geoffmcl mentioned the inputs are often decoupled from the option settings and so if we can take those into account we could turn this into a kind of functional test.\nThe output compare should consist of two things: does the tidy'd output match the expected output? I think we have most of that in testbase. Capturing the message output with text as-is could be dangerous because we're also looking at localization and/or English messages could change. We could use the raw data from one of the message callback filters, though, and record just the error code and location data.\nDo we all want to learn Python? Ruby? Make it non-portable and require bash? Or maintain something in Tidy's native C?\nThe issue of configuration differences isn't small, either. Given what I think are 96 different options with possible option values, do we run each test with all possible combination of options? Or do we introduce the possibility of human error and try to figure out the best options on a case-by-case basis? show-body-only is an obvious one. We can probably ignore tidy-mark, but there are several that can have unexpected interactions with each other unless we test for them. But it's chicken and egg, because right now we don't know how they interact without manually reviewing them.\nI supposed we could build an program to build the tests. Given each test case we'll programmatically adjust every option, capture the output, and compare everything against everything for differences, but this may still give us a hundred or more variations of the same test depending on options interacting.\nMy head hurts thinking about it.\n. I've weeded down the possible formatting options very, very loosely and without too much thinking to 62. Most of these are binary, but some aren't, but even if they were all simple yes/no, that's still 4.6x10^18 possible output variations for a single document. Granted a lot of them won't be different because a lot of test cases don't include (e.g.) repeated attributes or php tags or things like that.\nThat 62 discounts things like file encoding, verifying the correct number of tabs/spaces are used, etc., making sure wrap works at 80 vs 68, etc.\n. Well, I've posted a testing branch with my take on it. Everything is completely self-contained in testing/benchmarks/, and there's a pretty comprehensive Ruby script regression_test.rb that performs the testing.\nIn this case I'm not looking at any of the exit codes; I'm only comparing the error output and the generated HTML. There are still some files that don't pass; I've not root caused them completely but probably relate to the comments @geoff made above.\nTo have a try, check out the testing branch, make sure you have Ruby installed, and cd into the testing/benchmarks/ directory. Although it's not a Ruby gem, using bundler will ensure that the dependencies are met. If necessary on your system, gem install bundler, and then in the benchmarks/ dir, bundle install.\nRunning the script without arguments will provide all of the instructions needed to get started.\nAs of right now, generating new test result files isn't implemented, but I'll work on that as time permits. However all of the regression testing functions, and I think the report that it prints out (and saves) is full of useful information.\nI've duped the test cases into benchmarks/cases/ and renamed some of them to conform with the testing applications file naming conventions. A look in the cases dir should make it pretty apparent what's required.\nIn addition to @geoffmcl's standard test cases, I've also moved in all of the other test cases, and where required, generated config files for each of them (I've still not added the expectations files, though).\nI think it should be trivial to code around some of the platform differences, or at least provide an explanation for those specific cases.\nWhy Ruby? Because it will run on any OS unlike bash or cmd. Ruby also has a lot of power for a scripting language, meaning I could deliver something a little better than \"bare bones\" in a limited amount of time. Ruby's fairly easy to read, and I used my overly-verbose commenting style throughout, so there should be few surprises.\nThings to consider in the testing so far:\n- It's comparing the error output.\n- It's comparing the tidied HTML.\n- It's NOT looking at Tidy's exit code.\n- I'd like to consider using the --quiet output, which provides all of the error messages without the extra text at the bottom. I think this should be sufficient, but opinions are wanted. It would simplify testing and be more solid against future strings changes.\nAlso to-do is implement all of the expect files for the other, non-core tests. I'll update the testing branch as I get around to it.\nAdding additional test cases is very easy by following the naming conventions. Just drop the files into cases.\nFinally I think I've made it as cross-compatible as possible. I'll install dev environments into my Windows and Linux VMs just to double-check, but I'm pretty sure I covered all the bases.\n. Now the canonize command works, but I've NOT run it on the current cases/. I'll troubleshoot the current failing cases, first.\nI may look at some convention to fix path issues and look at processor-specific things, too, although I think #266 is a bug, not a processor feature.\nI'm definitely getting some type of encoding issue on case-427664 that I have to troubleshoot.\n\nRight now the testing should be 100% backwards compatible barring differences in string output. String output kind of sucks.\nIf we're willing to abandon backwards compatibility, it would be much nicer to add a new flag to tidy to present only raw data for error output, such as error code, line, column, instead of the English text.\nAlso similar my earlier comment about standardizing on --quiet.\nIt depends on what we risk losing by dropping this.\n. Case in point re: the above. Some of the sample tests are failing because I changed some non-standard English to more standard English, and the literal string comparisons are failing.\nI won't reverse the string changes just to get it to pass a test, but this is a good argument for eliminating the English output altogether with a (e.g.) --diagnostic switch on the command line whereby only error codes are reported instead of strings.\nI'm just thinking aloud as I encounter the issues...\n. Final report of the night. There's a huge encoding difference, but I'm not sure if it's due to Ruby, or a Mac OS/Windows difference.\nOn my Mac running all of the tests these are the failed cases with explanations:\ncase-1062511.html   Fails ERRORS because I changed the English string.\ncase-1410061b.html  Fails ERRORS because I changed the English string.\ncase-1410061c.html  Fails ERRORS because I changed the English string.\ncase-1426419.html   Fails ERRORS because I changed the English string.\ncase-1632218.html   Source indicates Euro Symbol &#128; expect indicates URL encoded version %E2%82%AC, my system generates %C3%84 .\ncase-427664.html    Text editor complains that -expect.txt is bad UTF, indicates line 5 column 1 - Warning: <body> attribute name \"  1/2\" (value=\"xx\") is invalid (inverted question marks). My system generates line 5 column 1 - Warning: <body> attribute name \"\u00c31/2\" (value=\"xx\") is invalid. Source file is <body \u221a1/2=\"xx\" width= align=\"\">\ncase-427672.html    Identical to above.\ncase-427823.html    Fails ERRORS because I changed the English string.\ncase-431721.html    Fails ERRORS because I changed the English string.\ncase-445557.html    Uses default config. Expects uses &# entities. My system generates the \u00d2 unicode character.\ncase-588061.html    Fails ERRORS because I changed the English string.\ncase-661606.html    Fails, but they LOOK identical in a text editor, and RENDER identically in a browser. I've not done a binary compare yet.\nI've still not installed a dev environment on Windows or Linux, and haven't begun to dig into Tidy's internals or Ruby's, and I've not yet begun to dig into the source file formats (for example, case-661606 is Western Mac OS Roman, a really old legacy format).\n. Hmmm... thanks for trying it out. I've got a working Ruby on Windows now... let me see what's not working.\nFirst off, apparently Windows doesn't know what to do with shebang lines, so it's necessary to run ruby regression_test.rb. It looks like it's still hanging up on popen, which is supposed to be supported in Windows. Let me try to troubleshoot that.\nI'll move to Linux next. I think, though, that the command line interpreter wants to see the command \"rtest\" before the options. I'll clarify that in the help. \n. Latest commit now verified to work on Windows. I still have to spool up a Linux VM to find out what the issue is there.\nruby regression_test.rb help -t ..\\..\\build\\cmake\\tidy.exe\nruby regression_test.rb help\nShow the correct paths and version strings on my system (the first from Tidy in $PATH, the second in the build directory). It also runs through the regression test and canonization process without issues.\nWindows test failures (5.1.25)\ncase-427664.html              config_default.conf             PASSED   FAILED\ncase-427672.html              config_default.conf             PASSED   FAILED\ncase-431889.html              case-431889.conf                PASSED   FAILED\ncase-433012.html              case-433012.conf                PASSED   FAILED\ncase-588061.html              config_default.conf             PASSED   FAILED\ncase-649812.html              case-649812.conf                FAILED   PASSED\nMac failures (5.1.24)\ncase-1632218.html             config_default.conf             FAILED   PASSED   \ncase-427664.html              config_default.conf             PASSED   FAILED   \ncase-427672.html              config_default.conf             PASSED   FAILED   \ncase-427827.html              config_default.conf             FAILED   FAILED   \ncase-431874.html              config_default.conf             FAILED   FAILED   \ncase-431889.html              case-431889.conf                PASSED   FAILED   \ncase-445557.html              config_default.conf             FAILED   PASSED   \ncase-661606.html              case-661606.conf                FAILED   PASSED\nI'll have to dig into the differences between the failures after performing a Linux test. I'm guessing these are related to character encoding, though.\n. > Why not to make Travis-CI working?\nBecause I know Linux quite well, and don't know a thing about Travis-CI. For my own projects' CI needs, Mac OS X Server has a perfectly capable CI solution that works with github, so I've never bothered to look at third parties. Still, we don't know my experimental solution will be adopted, and so one step at a time. ;-)\n. Test cases are present, but there's nothing to test them against -- yet. Aside from the standard test cases, there are all of the accessibility tests, and the old html4 and html5 tests. They all used to use their own testing scripts and test output separately.\nI've generated config files for all of them based on the old test scripts, but I've not yet generated the files to compare the output against. I'll have to go through all of that manually to ensure that they work as expected.\nFor now the output warns you that, hey, these files can't be tested because of the missing files.\n. @geoffmcl, I'm not home and thus spent much of yesterday trying to download an Ubuntu image and getting the VM to work through a proxy. Linux will be fixed soon!\nI would argue that the HTML4/5 files are regression tests. While it would take a pretty major effort to cause a regression in Tidy, it's something that's possible. Maybe you hey could be condensed into a single file, though. \nI can write a new method for the access tests, but my thought was to treat them identically to the other regressions. Matching a single string is already encompassed by the regression test, so it can be convenient just to issue rtest and be done with it. \nA simple tweak can introduce traversing directories, so maybe I can at least break up the cases into categories by directory. \nRight now the report generates a lot of noise due to the missing comparison files. The html4/5 tests and access tests all pass 5.1.24, and so I think it's safe to use canonize on them  that will squelch the missing file warnings and they'll be tested. \nI'll make sure to capture non-forced output. I thought I already handled that case but will have another look. \nOh, and the XML is already included, testing, and working!\n. The option canonize will generate the -expects files. \nFor example the access tests currently pass the current testing script. Therefore their current output is acceptable to use for future comparisons, and so canonize would generate those files. \nThe current strings are what complicate the testing procedure. Either they never change, or we stop counting on them. \nA hacky workaround: I restore the old strings, call the old version of English en_legacy, and use that as our test language.  It guarantees backwards compatibility, and because of string inheritance making new en strings won't add much to tidy. This addresses access test concerns, too. \nThe ruby script doesn't have to check the config. There is at least one zero byte file. I'll confirm it's from non-forced output (mobile phone now). When the script generates zero bytes and compares it to a zero byte file, it matches. \n. I've gotten my VM to match my home VM: Ubuntu 14.04 LTS, all updates applied, Ruby 2.2.1p85 installed. If you used apt-get you probably got an older version of Ruby (1.9 or so), whereas RVM nicely gave me modern Ruby. Upon cloning the rest repo and building and installing Tidy, the regression test ran perfectly!\nI'll have RVM install an older version just to see what happens. In the meantime I pushed what I think is a fix for older Ruby, which doesn't include the date dependency by default.\nLet me know if anything else seems broken on Linux!\n. Well, I hate to be spamming the list, but it's the strangest thing... Ruby 1.9.3p551 has no problem with the DateTime, either, even when not explicitly requiring the library.\n@geoffmcl, can you give me a ruby --version for your system? Can you also try ruby regression_test.rb to see if that makes a difference?\n. I'll try to have a look tomorrow, or during the weekend (hopefully some unblocked time available!).\n. Test suite reporting and test case organization is coming along nicely. It's a slow process, but I've encountered a frustrating Windows issue (I've not looked into it yet; I don't have a Windows C dev system installed; suggestions appreciated).\nIn Windows Tidy is writing -- sometimes, but not always -- the error output to stdout with extra newlines. If you run the current batch of tests, you see it in some -- but not all! -- of the -fails.txt messages.\nIt's not a ruby issue. If I use tidy -f errors.txt cases\\case-1002509.html then Tidy writes the errors properly. If I redirect STDOUT like tidy cases\\case-1002509.html then I get a file with garbage newline characters: $0D$0D$0A instead of two newlines. It looks like Ruby is fixing the missing $0A and giving two Windows newlines, so that's nice, except why is Tidy on Windows.\nInterestingly redirecting stderr on Mac OS and Linux give Windows CRLF pairs, while -f uses the $20 on Mac and $0A on Linux. For current Mac OS I'd regard that as a bug, as it should use the standard Unix LF.\nThis is the latest release 5.1.25. I've not browsed the diffs on newer versions, and I'm not filing this as a bug report yet, as I plan to have a look at it first.\nAs for the testing suite I was hoping to avoid file access and do everything in memory (capturing stderr) for speed, but I'll simply use a file, then we'll be assured that the test is still backwards-compatible with any potential bug fix.\n. Current status: after refactoring quite a bit, file comparison is much more sane, and pretty much every tests passes. I've still got to fix the few that aren't tested (should be easy to manually canonize them and verify). There are (so far) some platform issues mostly due to encoding, as well as a string that changed not too long ago.\nI can get all of the current tests to pass, it will give us some pointers for issues on Win/Linux/Mac, but string testing isn't the way forward.\nMore discussion later; I'm being told I've played too much today!\n. #### Today's report\nregression_test.rb is really becoming quite stable, and now handles special cases like --write-back and --gnu-emacs in ways that I think are acceptable. Because of issues trying to capture SDTOUT on Windows, all of the testing has to be disk-based instead of memory-based, especially if we want to remain backwards compatible with previous versions of Tidy (it works -- with lots of errors -- on Apple's built-in 2006 version of Tidy!). However disk-based testing is pretty slow, especially on Windows. On the other hand, what's a few more seconds of our lives?\nThe whole thing is organized enough, easy enough to use, and thorough that I'm considering a merge in time for Tidy 5.2.0 release. However it's a good idea to rebase the current branch into a new, fresh branch before merging, because all of the non-released development cruft can be left behind.\nThis leaves a question about the existing scripts and test files and so on. They're now redundant, and I'd love to get redundancies out of the system. Mostly I'm referring to the input and testbase files, because maintaining multiple copies as things change can be a PITA. I'll see about migrating the existing testing scripts into \"benchmarks\" using the new file organization, that way at least we still have the choice of which actual testing scripts to run. I might need help with the Windows scripts, but the sh scripts should be no problem.\n\nGoing Forward\nCurrently for comparing the error output we're completely limited by strings, and this is going to hurt us for checking backwards compatibility. For example I corrected several strings in the localize branch, and this will cause a lot of tests to fail. While we can regenerate the regression test expectations files for the future, this means that testing older versions of Tidy will fail due to language changes. This isn't something that we had to worry about when we only cared about the exit status.\nHow we deal with this in the future is really the subject of some intense discussion. Here are a few thoughts I had while just brainstorming:\n- Create a custom testing localization\n  - Starting with Tidy 5.2.0 we can include en_TY which includes all of the static errors strings that we will never, ever change. Never. Ever. Except to add new strings, but then they'll never change, either.\n  - Old versions of Tidy accept but don't use the --language option, and so specifying --language en_TY with older Tidy won't do anything, and using it with localized-capable Tidy will force it to use the never-changing legacy strings.\n  - Because of how the localization inherits from a base-language, the impact to the executable size can be really quite small.\n  - Thus we're assured that if we change warning and error strings in the default English, it won't affect the results of regression testing.\n- Create a --test-output option\n  - This will force Tidy to prepend all warning/error output with a header line, e.g., TY_DIAGNOSTIC_OUTPUT.\n  - Prepend each line with something like TY_MESSAGE=[ {line}, {col}, {type}, {msg_num}] # regular output\n  - And TY_STATUS=[ {warnings}, {errors}, {exit status} ] # regular output\n  - However this would forever break our ability to test with older versions of Tidy to check, e.g., what happened in the past.\n  - We would never have to worry about exact strings.\n  - Writing testing scripts becomes a bit more difficult (most ofregression_test.rb` is user-friendliness; it's not really a complex script in the core).\nI'm strongly favoring the first option.\n. I've determined that Tidy's error outputs are unique numbers. Once localization is merged, I think I'll revisit this. In order to accommodate extra localization features (such as mssgreportfilter3 using opaque types) I might export the two enums.\nThen we might capture tidy's error output opaquely, but only going forward. We won't be able to run regression tests with older versions of Tidy.\n. > This option specifies if Tidy should pretty print output, writing it\n\nas well-formed XML.                                                 \n\nWhy are you using output-xml for HTML content? That's not meant to be a flippant question, but trying to understand your use case.\n. @geoffmcl, confirmed working on Mac OS X and Ubuntu. I didn't run through the regression tests, but this is probably a new case for testbase.\n. Given that this is merged, I will close this issue. Feel free to reopen if we missed something.. @geoffmcl, I think we flubbed it with 5.1.0 and failed to formally release it. Currently whatever's in master is usually regarded as stable, but not necessarily released until given a strong tag. The package managers that are following our releases are using the tagged versions.\nThis means the current Tidy release generation isn't 5.0.0 at all; we've already released 5.1.x branch. The most recently release is 5.1.25, that is, 25 patches have been applied.\n\nMinor version Y (x.Y.z | x > 0) MUST be incremented if new, backwards compatible functionality is introduced to the public API.\n\nWe probably should have bumped to 5.2 when we added --skip-nested and --indent-with-tabs, based on the above.\n\nIt MUST be incremented if any public API functionality is marked as deprecated.\n\nSimilarly when we marked --drop-font-tags with a warning.\n\nIt MAY be incremented if substantial new functionality or improvements are introduced within the private code. It MAY include patch level changes. Patch version MUST be reset to 0 when minor version is incremented.\n\nThere have been a lot of patch level improvements. Maybe it's time to bump to 5.2.0, and clarify the options we added and dropped?\nThen going forward we stick to 5.2.x until we add or deprecate things.\nAny thoughts?\n. It looks like (B) doesn't do very much. @geoffmcl, thanks so much for everything you do!\nI wonder if 5.2 is a good place to also start removing a lot of the conditional stuff that's just part of Tidy now. For example at some point accessibility checking was added but to be cautious the build option was left in. Similar for Asian encodings. I think this is all just part of Tidy now, and I'd be happy to comb through the source and scrub out these leftovers.\nI'd love to do that same for all of the deprecated stuff, but I think sticking by semantic versions that's just going to have to wait until Tidy 6.0. Seeing --slide-style show up for 10 years, it can finally die.\n. Because issue-333 was merged, and upon testing, I will close this.\n. Moved the PR to #347.\nIf anyone is willing to offer a translation, our POT template is located in the #347 repository.\n. Oh! Tidy supports localizations now. Please post new issues for language-specific problems, or language requests.\n. Hi @gagern, good luck with the project! \n. Confirming that case 1632218 is also corrected on Mac OS X by not using MacRoman character substitution.\nI'm tentatively thinking that the whole ReplacementCharEncoding mechanism isn't necessary. The appropriate substitutions are made if in->encoding is set, otherwise we're second-guessing the file format on different systems, even for the very same file.\nThe only other place I see ReplacementCharEncoding used is in lexer.c:1040, where again the WIN1252 replacement is used in all cases except for Mac OS.\nThis means that without understanding the reason for the original distinction, the whole mechanism isn't needed; invalid entities should always be treated as CP1252 unless we want to introduce an entirely new configuration option (which would parallel the input-encoding option, and be largely redundant).\nLet me throw together a PR; the change should be simple, and I think my reasoning is correct.\n. Merged.\n. Addresses #339. \n. @serjepatoff, I'll track it down when I can. Thanks for the report.\n. @serjepatoff, did you mean to close this? This means you agree Tidy is behaving correctly?\n. Would the static counter be configurable? Or we need to have a really good sample from different processors, as this would certainly give different results on x86 versus 68020 (assuming we could compile it).\n. @goeff, you're at the top of the scale in our small organization.\nDo we have any other attributes that are universal? They might be candidates for moving to a \"universal\" structure, too. Maybe attrdict.c could actually shrink in size.\nI can try to look into this during the weekend, unless someone else beats me to it.\nI suppose the only real question is whether or not it's agreed that these attributes are meant to be universal.\n. The current code is highly readable, and once compiled the structs are fairly efficient. And because they're defined at compile time we avoid all sorts of potential memory issues. Generally, I like things pretty much as they are if there aren't enough universal attributes.\nIf we're worried about the source file size, though, a pragmatic approach would be to define a lot of the common stuff in macros, and let them be expanded into the structs. If the itemprop stuff is truly universal, it's simpler to add that macro to every item than to add all of the itemprop family. Given your analysis above, there are probably whole families of properties that we can treat this way.\nDecreasing the file size isn't a high priority, obviously, but what sense of priority do we have over all of the itemprop? If it's agreed that they are universal, I can at least do that much.\n. I'll take a look at some of your analysis again, @geoffmcl. In the meantime I implemented a couple of macros in attrdict.c: INCLUDE_MICRODATA and INCLUDE_ARIA, and this knocked a third off the file size and eliminated 4258 lines. I went ahead and added INCLUDE_MICRODATA to every element that should address this bug report (still not sure if it's the \"correct\" choice or not).\nNot issuing a PR as it's based on the localize_flat branch, but it's pushed here to ensmallen_attrdict.\n. A little bit more searching provides some additional source code optimization opportunities that don't change program structure:\nhttps://www.w3.org/TR/html-markup/global-attributes.html\nIt would be trivial add create another pair of macros -- say, INCLUDE_CORE_ATTRIBS and INCLUDE_CORE_EVENTS -- and include these in every element that we have defined. However this obviously doesn't necessary apply to pre-HTML5, so we would have to do one of two things:\n- Assume that if an attribute isn't currently in an AttrVersion structure for a particular tag, then it only applies for (X)HTML5, or\n- Try to find legacy documentation to see if Tidy's been missing something forever.\nWhichever the case is, it's probably a much more manual editing process than the simple regex substitutions I used for the current push.\n. accesskey is a good example of the above. It's valid on every element for HTML5, but only certain elements of HTML4.\nPerhaps Tidy's attribute lookup logic will allow us to specify overrides. Supposing we have an attribute defined twice in the struct, does Tidy guarantee that the first instance will be found and used? This would allow us to define the \"correct\" accesskey, while also including it as part of the macro-expanded definition without hurting anything. For example INCLUDE_CORE_ATTRIBS would mark it as not available for HTML4 and older, but we would manually allow it for the form-related items.\nSeeing that each element's attribute list ends with TidyAttr_UNKNOWN, I'm guessing we stop at the first hit... let's have a look. attrs.c:483 and nearby indicate that we seem to stop at the first hit. I guess I will put that to a test.\n. Hmmm... it seems as if Tidy is ignoring attributes and HTML version for some reason. Given\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<head>\n<title>Test</title>\n</head>\n<body>\n<p accesskey=\"JEHLL\" align=\"left\" contextmenu=\"hello\">hello world\n</body>\n</html>\nand\n./tidy --doctype transitional /Users/jderry/Desktop/test.html\nI'm given no warnings about the invalid tags. Going back to 5.1.29 results in the same behavior. I would expect a warning if I'm using attributes that aren't part of the HTML version being Tidy'd.\n. I know I'm highjacking this issue a bit -- it's still open but should be fixed in ensmallen_attrdict -- but the attrdict is now a comfortable 428K/4559 lines versus the start at 1.5Mb/13926 ,all just by moving all of the common stuff into macros (which actually isn't complete yet).\nI'm not posting as a PR because I based off the wrong branch. The only changed file is attrdict.c which can be cherry picked. I'll put up a master-based branch before issuing a PR.\n. I've deleted the working branch and posted a clean attrdict_346 that solves this issue, but exposes another proprietary attribute related issue.\nWhen run with the output-based regression test, we fail case-1055398 because Tidy recognizes the attribute onload (which is a result of the refactoring I did), but doesn't honor the value in versions in the structure.\nSimilarly the issue I reported above wherein a 4.01 Transitional document is okay with HTML5-only attributes is caused by the same check.\nSome discussion is appreciated, because I definitely think Tidy should report as proprietary attributes that don't belong in the version of HTML that it is tidying.\nWhat I'll do is add another commit to attrdict_346 with a fix using the current mechanism as reporting them as proprietary. I think in the longer run, though, we should report them as unsupported by the current document standard. I will add @todo in the code, but not implement a new warning message until we've wrapped up the localize issues.\n. Moving most of the conversation to #350.\n@zanona, we're really looking at solving the issue, and sorry to sidetrack the conversation. This issue presents a good opportunity to improve Tidy's infrastructure, but it's raising additional questions that pop up as a result.\n. @zanona, it took a while, but the fix is in master now. You'll have to pull and build yourself until we get around to posting binaries.\n. I rebased my development branch and issued a PR on this one, and closed the first PR. No sense in adding a bunch of development crud to our master branch.\nFeature Complete\nI'm judging the current PR as \"feature complete.\" There may be some bugs and hiccups in the PO<->H conversion process, but that cannot in any way affect the Tidy code.\nI've been testing the changes to Tidy's core. In the end they're not all that complex at all and doesn't gut Tidy. I've not found any incompatibilities, leaks, poor output, or other bad behavior at all. Aside from the strings I changed, it's virtually a transparent replacement for current master branch.\nUnfortunately there are also several changes to tidy.c that I took the opportunity to make that I wasn't able to add to a feature-specific branch. Mostly developer documentation and some tweaks to the output, especially the -h output. I've also introduced help for the new language features, and added a couple of new XML output features related to language.\nSpecial thanks to @geoffmcl for making sure I stick to K&R!\ngettext Support\nSpecial thanks to @gagern for the gettext suggestions. While it complicated things just a bit, it really does give Tidy the opportunity to offer world-class language support. Using the Ruby potool.rb we can convert between standard PO files and Tidy's language header files.\nWhile gettext's tools won't work directly with Tidy, we can officially support PO files, and this opens us to a large world of potential translators to use their favorite tools. Tidy will support PO files even if they use positional format parameters, and will support the various plural forms of different languages. I never realized, for example, that French used different plural forms (does @geoffmcl know enough French to give us a French translation?)\nIf anyone wants to get started on a translation, then tidy.pot is now officially available in the localize\\translations directory!\nI look forward to merging this branch in a few days unless someone discovers some last-minute showstoppers.\n. Hi @gagern, I considered adding the reference comment. I may do that yet, as I know it can be helpful. It's just that because we can't use xgettext directly it's going to be a manual effort unless I write my own xgettext to parse all of Tidy's source code. This means updating the reference information when we make code changes.\nAs for the developer comment I will try to make it more clear, such as \"Translator, please ignore this comment.\" Because the PO format doesn't allow any metadata to be stored with the strings, I'm using those developer comments to store metadata myself. Hopefully the comments won't frustrate the translators. The particular metadata in your example categories that particular string as being part of a #if SUPPORT_ACCESSIBILITY_CHECKS ... #endif block, which is required information when building the H from the PO.\nNow that I think about it, I can probably change this. I have to parse the built-in language_en.h anyway in order to translate the PO to H, so I can just get the if-group assignments then without cluttering the PO/POT. You keep making me rethink things and making them better.\nI'll keep the PR as is, and implement the enhancement after merging. I've been ignoring too many of the other issues lately.\n. I'll try to look into MinGW32 -- it doesn't define _WIN32? Or maybe it does, but doesn't export MS' _vscprintf_p? Maybe I need to capture MSVC instead of MinGW32 -- I don't know enough about MinGW32 yet.\n\nFor the POT, apparently it's a \"standard\" format for Unix translations (really gettext). A lot of the tools I see support POT and .strings (a Mac OS X and iOS format). It seems like a reasonable format, and as it's text based, I guess it's easier than editing the header files directly for people that offer translations. There also appear to be a lot of online services that offer support for the format.\nThe \"tool chain\" is gettext specific, something that we're avoiding. The poconvert.rb kind of attempts to replicate some of it specific to Tidy, hopefully in a way that's familiar to gettext users. This is untested because I'm not a gettext user. In any case, the POT file should be familiar to translators, and they use this to generate a PO file that is the actual translation. \"Favorite editor\" I suppose is up to each translator. There are online tools (including Google) that use the format and provide machine translations. I've been playing around with something called \"POEdit\" that makes it very easy to translate.\nSimilar to you, I can speak and write Mexican Spanish quite fluently, but I'm a non-native speaker. I think I'm good enough to edit the machine translations and deliver an acceptable Spanish localization, then await the bug reports or PR's for corrections.\nYour understanding is correct about the msgid and the msgstr. The only thing to note for French, anyway, is the plurals. The msgid will also have an msgid_plural in English, but the translation, instead of msgstr will have an array-type format: msgstr[0], etc., denoting the \"case.\" The case is selected by the language's Plural-Forms, which for French is different than English: nplurals=2; plural=n>1 means there are two forms (subscripts 0 and 1), and the plural will be applied if the case > 1 (e.g., in French, zero is singular vs plural in English). In the end, for French, it doesn't really matter: if you use [0] singular, [1] plural, Tidy will automatically choose the correct one if the PO (and header) includes the C pieces above (check out the sample langugage_xx.h header files to see how this is achieved).\nActually, French is easy. Some languages, it seems, have up to six plural forms!!!!\nSee also https://www.gnu.org/software/gettext/manual/html_node/Plural-forms.html#Plural-forms\n\nFor the poconvert.rb (oops, docs are wrong; I must have changed the name at some point), sorry about the Ruby. I know Bash, but haven't worked with DOS scripts in ages and ages and ages and ages, and I really want to provide something that works everywhere (assuming one installs Ruby). It's just a scripting language like Perl, and has a dependency manager like Perl.\nI think your issue is that some of the dependencies aren't being met. The file Gemfile is the manifest for the non-built-in dependencies. The Gemfile.lock I should add to .gitignore. The Gemfile makes it simple to ensure dependencies are installed, but it's not required.\nHard way: install dependencies manually with gem install some_dependency\nEasy way: bundle install\nOf course, bundle is non-built-in, so you can gem install bundler, then bundle install in the localize directory. That should take care of the dependencies issue.\nIn Windows cmd it's necessary to run Ruby scripts using ruby poconvert.rb. If you're using bash provided by git or some other bash, then the standard ./poconvert.rb will be fine.\nOn a side note, Ruby is pretty nice and very easy to get used to. I've only dabbled in it before, and recently only became familiar with it due to trying to work on the testing branch and as a conversion tool for this branch. I guess long time Rubyists might have a lot of criticism, but it seems to get the job done.\n. I'll update the .gitignore today.\n\nBut to start say a french translation I assume I just copy either tidy.pot to say language_fr.po and set to work adding french msgstr strings... or maybe copy language_en_gb.po to language_fr.po, or is that the same thing? This seems not exactly clear in the current README.md!\n\nI'll update the readme, too to try to make it more clear. Given that I didn't know a thing about POT files a couple of weeks ago, I shouldn't expect potential translators to know a thing about them, either!\nIn the case of French (because it shares the same number of plurals as English), then all of those actions amount to the same thing. You'll have to set the correct plural form manually in the \"header\" section of your PO, and set the language code:\n\"Language: fr\\n\"\n\"Plural-Forms: nplurals=2; plural=n > 1;\\n\"\nOr you can:\n./poconvert.rb msginit --locale fr\n...and that will produce a nice language_fr.po file for your with the correct header information!\n. @geoff, which specific MinGW are you using? I see MinGW (which is 32 bit only), MinGW-32 (a different project, also 32-bit only), and MinGW-64.\nIs the idea to target any distribution of MinGW, or one in particular? Looking at bug reports, stackoverflow articles, etc., tends to make me think they're not all really in sync with each other.\nI still don't have a working implementation to test, but I've run into this: __mingw_printf(); Assuming a vsn exists, it should be a simple patch. But now with the different versions of MinGW I wonder if they all define the same __MINGW32__ macro (why would the 64 bit versions report this?)?\nIt may be easier to convince the whole world to speak English (negating the need for localization) than to implement a standard POSIX printf on Windows!\n. From @gagern:\n\nRunning script on Gentoo was a pain, since Ruby 2.3 doesn't have bundler available, and most gems are already installed but for other versions of Ruby. Running the script with Ruby 2.0 worked, though.\n\nThere are only a few dependencies, so it should work if you manually gem install xxx in Ruby 2.3.\n\nClosely related strings, like STRING_DISCARDED and STRING_REPLACED are not grouped together in the PO file.\n\nI'll have a look at that. Most of them are grouped by where they are in the source code, and then sorted alphabetically.\n\nThe were in STRING_ERROR_COUNT works for German, but I imagine French or others might have problems there if there is just one error and zero warnings. Not sure how do plural forms here. Translators may have to fall back to a message which is not a complete sentence.\n\nI will look at changing the way this works in the source, e.g., \"Tidy detected x error(s) and y warning(s).\" Actually this probably works without changing the source code, but only the English string. The errors(s) and warning(s) have proper plural support.\n\nIf there are formatting characters inside a text which is expected to be wrapped to 78 characters, it would be nice to know what replacements to expect for these.\n\nAh, yes, I can improve the developer comments with examples.\n\nAnd her a list of messages which I could not translate without looking up context first. Perhaps you can add comments to these.\n\nI will do so, with some examples.\n\nSTRING_HELLO_ACCESS. I wonder why the version number is included in this constant here, and not an argument.\n\nThe accessibility checking feature isn't really a \"module\" per se, and we're not currently versioning it. I suppose the original contributor(s) might have had the idea of treating the accessibility feature as a modular piece of Tidy, but it never seemed to pan out. I would suggest there's no reason to have a version number at all.\n\nSTRING_HTML_PROPRIETARY. This gets pasted into STRING_CONTENT_LOOKS which is unclear. Important to get the grammar right! The English term looks trange here, too: why looks like HTML Proprietary and not looks like proprietary HTML? If HTML Proprietary is intended as a fixed term, should it be translated at all?\n\nThe origin goes back before me. In English this word order is used to emphasize the adjective, and gives a meaning similar to proprietary HTML (including the emphasis). It also follows the word order pattern of \"HTML 2.0,\" \"HTML4,\" \"HTML5\", \"HTML Proprietary.\" I'm guessing this is the reason, but not necessarily justifying it. We could change the English string, and I believe that this is a string that should definitely be translated.\n\nSTRING_SPECIFIED. This gets pasted into TEXT_VENDOR_CHARS or TEXT_SGML_CHARS\u2026\n\nLet me see how these are used in the source. If it's logical to add another string, then I can add another string.\n\nOne more note: the following comment at the end of the PO file might be useful for Emacs users, since it establishes the 78 column rule in the message edit window:\n\nIt should be a simple matter to have the parser ignore those. However many strings aren't limited to 78 characters; will this have an undesired effect for emacs users?\nFrom @geoffmcl:\n\nI assume I must not alter the 'Source Text', the English, although POEdit lets you do that... My single purpose is to give a msgstr in French language_fr.po... Or else I would have to push my new english changed msgid back upstream to say tidy.pot. Is this the right idea? But in thinking about a translation, did see some better english phraseology...\n\nSource text doesn't matter, and it's strange the POEdit lets you change it; the Mac version doesn't allow editing that field.\nFor English I've been holding off on changes due to the regression testing scripts, at least for things that are output as errors and warnings (I did make some changes, now they cause regression test failures, naturally!). The only place to change these is in language_en.h, and that's by design. It's akin to changing the source code in a normal gettext application.\nYou can change the English text in the POT/PO if you like, but it won't take effect anywhere. The only thing that matters is msgctxt, which is the key that holds everything together. This avoids all of the \"fuzzy\" stuff, too, because we can change English strings at will without affecting the PO files translators use (old PO will see old English strings, so what?).\n\nAnd POEdit also output a binary language_fr.mo, which I have still to explore...\n\nYeah, not needed. POEdit lets you turn that auto-generation off.\n\nHave not yet got into running the poconvert.rb script, but assume it can only work properly if the original english msgid base is not change... but maybe it does not care? And works on the msgctxt sort of identifier. Please advise.\n\nYup, as above, only need to leave the msgctxt alone.\n\nAnd finally, isn't 78 a bit narrow for today's world? Yes, back in the small screen days, not so long ago, 78 was probably a good choice, but now I could see that being say 100, or even 110... I now never work in a console of less than about 120 characters wide... in linux and windows...\n\nI agree! I'm not sure if the current strings were designed for old consoles (back in the 640x480 days!), or if the original writers simply wanted to avoid going past 80 characters in the their source code editors. I'm comfortable with longer strings.\n\nBut maybe poconvert.rb could do that? Adding a column width option, and it relines the text... remove the trailing \\n, and joins following lines... but again how would it know the approximate size of the potential substitutions?\n\nActually given that it's console output, the right thing to do would be to remove all of the newlines completely, and let the console application handle line wrapping. The console application already does some of that (see print2columns, etc.), but it also limits the output to about 78 columns, too.\nMy pragmatic suggestion is to leave things as they are now, and I can work on that as a future enhancement, i.e., sniff out the console size and handle word-wrapping and the column routines that way, and modify the POTs to eliminate the hard-coded newlines.\n\nAnd concerning MinGW #349, so far found no cases, but only at 10%, where I would need to mess with the order of parameters... so at this time feel they could be dropped, and left as a future enhancement, if the need arises... What about in German? Have you needed to change any parameter order?\n\nBeing pragmatic, I'm starting to agree with this. If I find a promising solution today, I will try to implement it, otherwise leave it as a future enhancement.\n@gagern again:\n\nI must confess that with tidy.pot, language_en.h and language_en.po I'm not sure which of them is generated from which. I also just noticed that the paths are a bit confusing: the repo contains src/language_en.h and localize/translations/language_en_gb.po while the steps above (running poconvert.rb msginit) caused the creation of localize/language_de.po.\n\nThere should be no language_en.po! There's a language_en_gb.po for UK localization, though.\nThe paths are hard-coded that way right now so that we don't screw up and overwrite files, so generate files always end up in the CWD, and existing files are renamed with a number. If we're satisfied with the resulting file, we'll have to manually move them into the correct directory. It's trivial to change the script, but for now I'm excercising an overabundance of caution!\nI will update the documentation with workflows and descriptions. As per the normal gettext workflow, English the default, authoritative, canonical language as it exists in the source code, and that's the file language_en.h. Everything is generated based on this file. When PO or POTs are generated by poconvert, they all reference this file (although if you prefer to translate from a different language, you can generate PO files from other header files -- see poconvert.rb --help).\nSome other things to keep in mind:\n- Instead of generating binary MO files, poconvert generates language_xx.h files. \n- This is why changing the msgid in PO files doesn't matter; they're not used when building the language header.\n- This allows generating PO with msgid in a different language, e.g., to translate from es to es_mx in an easier fashion. Normal gettext frowns on this, but msgid is disposable so it seems like a handy feature.\n\nI'm interested in this point myself. Canonical gettext requires an exact match to apply a translation. If you change one character, you invalidate all existing translations. Which makes sense since that character you changed might have changed the meaning. Translators can run msgmerge to combine a new template with an existing set of translations. Lacking a perfect match, a fuzzy match can be added which will be marked using the fuzzy flag. Usually fuzzy translations are omitted from the installed *.mo files (unles overridden with the --use-fuzzy argument to msgfmt). So the idea is that translators check these fuzzy translations and remove the flag once they are satisfied.\n\nFuzzy translations aren't currently supported. I think I can support #| msgid previous-untranslated-string as flag that the English string changed in the event that a meaning changed. However our real key isn't msgid but msgctxt, which is inviolable and should not change. This means that the purpose of strings won't change, and so if we update the English string in source, it really shouldn't have an effect on the translation. There should be no cases of us changing the meaning of string STRING_MISSING_MALFORMED, for example.\n\nThe documentation probably should also advise people on how to test their newly added language. Which in my understanding involves a suitable poconvert.rb msgfmt invocation, combined with two additional lines in language.c (one for the #include and the other for the languages array element). Right?\n\nYup, and I'm sure that it's in the readme. \n. I did it! It's not the prettiest solution, but we can build with MingW and keep the positional format specifiers!\nIt's kind of tricky to convince MingGW to perform the build -- I'll figure out how to issue to PR to the MingGW guys so we don't have to do this, but here's the copy-paste from the readme in the new /build/mingw folder.\nBuilding with MinGW\nCurrently building with MinGW on Windows is a bit complicated, and these\nassumptions are made:\n1. Using MinGW as distributed from http://mingw.org.\n2. Using default install path (C:\\MinGW)\nPre-Build Instructions\nCopy the file specs into C:\\MinGW\\lib\\gcc\\<version>\\specs\nThis file was generated with gcc-dumpspecs > specs, and then modified to add\n-lmsvcrt_tidy to the *libgcc: linking section.\nCopy the file libmsvcrt.a into C:\\MinGW\\lib\\ (or someplace else you know\nis included in gcc's library search path).\nThis file is the import library for msvcrt.dll that includes the missing\ndefinitions not included in MinGW's own import library. It was generated via\ndlltool -v -d msvcrt.def -l libmsvcrt_tidy.a --dllname %windir%\\System32\\msvcrt.dll.\nThe msvcrt.def file is available in the mingw directory, too.\nYou can inspect MS' msvcrt.dll with dumpbin /exports C:\\Windows\\System32\\msvcrt.dll\nin the Visual Studio Command Prompt (not CMD).\nBuild\ncmake ..\\.. -G \"MinGW Makefiles\"\nmingw32-make\nTodo\nObviously this isn't a fun solution. Some help configuring CMake to include the\nimport library would be appreciated.\nAlso I'm not certain we should be distributing the import library as part of the\nsource. Would it be better to distribute the msvcrt.def as part of the source\nand build the import library with dlltool as part of the build process?\n. > I'm of two minds about this. On the one hand you're perfectly right, that would be the decent thing to do to adjust to arbitrary terminal widths. On the other hand, getting this right might be very tricky. You can't simply count bytes and look for the last space no later than column 78. You might have UTF sequences using multiple bytes per codepoint. You might have combining marks so you have multiple codepoints per grapheme. You might have double-width symbols in some ideographic language. You might have a language which doesn't use spaces between words.\nYes, I think we should continue to leave this is the translators' hands for the time being. It looks like ICU has the most industry-standard implementation for determining word boundaries, but that's all C++ code, so for now, humans can determine the word boundaries!\n. I've had a little bit of Chinese help, so I've added Chinese for testing.\nI'm now successfully building with both MSVC13 and MinGW, and Clang on Mac OS X, and gcc on Ubuntu.\nThere's an issue with Windows building using MSVC. It appears the MSVC compiler doesn't understand the UTF8 source code (affecting Spanish and Chinese), and so garbage is output. MinGW uses gcc and has no issues with the UTF8.\nI'm using the following to force UTF8, and it's supposed to work:\n```\nifdef _MSC_VER\npragma execution_character_set(\"utf-8\")\nendif\n```\nInternational output (including Chinese) works perfectly on Mac OS X and Linux. On Windows compiled with MinGW, output is perfect except for Chinese -- I don't know if Consolas font in my terminal has Chinese characters or not (in Notepad++ the Consolas font has Chinese).\nEdit: I should add that Windows console is set to CP 65001 Unicode.\n. I can't help but laugh at this situation. If I change the files to UTF-16 BE:\n- MSVC13 will compile them just fine and provide correct output (except Chinese, see below).\n- MinGW now chokes with a cc1.exe out of memory error during compilation!\n- Xcode (which uses Clang) and Cmake (Clang) on Mac OS X complain about UTF-16 not being supported.\n- Cmake/Make on Ubuntu has more errors than my scroll buffer allows, but seems to be suffering from UTF-16 coding, too.\nThis is interesting: UTF-8 does not require a BOM, but this experiment delivers interesting results. If I set all of the language .h files to UTF-8 with a BOM:\n- Windows/MinGW (gcc) works properly.\n- Windows/MSVC2013 (msvc) works properly.\n- Mac OS X/Code (clang) works properly.\n- Mac OS X/make (clang) works properly.\n- Ubunutu/make (gcc) works properly.\nCan anyone perform tests with other versions of MSVC? It seems to be the weakest link here.\n\nFWIW, the Chinese language in my Windows 10 CMD seems to be writing the correct characters if I C&P into Notepad++. I'll assume (lacking evidence) that Consolas in CMD is lacking the Chinese characters despite Consolas (in Notepad++) having them.\n. @gagern:\n\nWrite the H files using hexadecimal escapes. That way you know what bytes you'll have in the executable, no matter the compiler, its configuration or the build environment. \n\nThere's a lot to be said for this approach, and the script can be very easily changed to allow this. I may add it as a command line switch simply as a preventive measure. I'm really hoping to avoid this, though, because legible source code is valuable (although the PO file is fairly legible, so there's that).\n\nI don't think there is anything in any of the C specifications which says anything about a BOM at the beginning of an UTF-8 encoded file.\n\nThe UTF specification requires that BOMs be allowed, but also recommends against their use. I also recommend against their use as they serve no purpose. Well, except to tell MSVC not to treat a UTF file as the local code page! I'm mostly upset at MSVC for this. I should generate two sets of headers, and use the ugly escaped ones for MSVC builds only!\n\nI found this question on Stack Overflow which also mentions a difference between cmd and Notepad++. \n\nOh, thanks for that! I could conditionally use WriteConsoleW in the console app if it becomes necessary. Right now Tidy console sets the UTF CP if the user choose a language (this is temporary as it doesn't set the CP if the locale is already set), and I'm getting good UTF8 output with Spanish. I'll see if I can coax some Chinese out of it.\nYet another Windows-only workaround.\n. > > I should generate two sets of headers, and use the ugly escaped ones for MSVC builds only!\n\nThat just adds to the confusion, since now you have three files defining each language, which might get out of sync in even more bizarre ways.\n\nYes, I know; I was just being sarcastic. Not sarcasm aimed towards you, but towards Microsoft.\nAs @geoff says, I'll continue to look into it.\n. @geoffmcl, @gagern:\nI've been experimenting with using unicode escape sequences instead of forcing the headers to be UTF8+BOM, and these are the results:\n- UCS are only recognized as a C99 feature, and Tidy isn't a C99 program. Because MSVC never adopted C99 features this isn't going to change.\n- Although I can generate UCS sequences for only \"required\" characters, Clang is complaining if I encode common characters as UCS.\n- Using hexadecimal escapes doesn't work cross platform given the same source code. Clang on Mac OS X complains about invalid characters. GCC on Windows and Linux produce different results. It's as if each platform is interpreting the hex as its current locale, and that's a non-starter. There's no reason for Tidy to be converting character sets given a perfectly good UTF8 source.\n- Whereas keeping the language_xx.h files as UTF-8 with a BOM has a 100% success rate with every platform and compiler that I've tested, even pre-C99, with zero effort.\n. Current status: ready to merge.\nFor the time being we're not going to support positional parameters. If we get translator feedback we can possibly add that to a future to-do. However for the time being this is holding us back.\nAlthough we have full support for hex-coded source files, for the time being we're going to support full UTF8 source instead. If this becomes unmanageable we can always change course in the future.\nAlso, Chinese output works, and it has been working for quite a while, and no special tricks are necessary on the part of Tidy. One only must set the Windows locale to a language that supports Chinese, and Chinese output works in Console as expected. I've also learned that PowerShell ISE offers full UTF8 support, so at least we can preview East Asian languages without setting our Windows locale. Note that setting Windows locale does not change your interface language.\nI'll leave this in the current state for a couple of days in case anyone sees an showstoppers, and then I'll rebase this as a single commit against master (probably) before merging. Or maybe not, since @gagern's commits would be lost.\n. Closing in favor of #359, which I will merge presently.\n. @geoffmcl, thanks for looking into this. You can see I haven't been too available over the weekend, so I've not install MinGW in my Windows environment yet.\nAs I browse around I see some indication that MinGW's implementation is supposed to be POSIX compliant (i.e., work with the locational parameters). I found this bit:\n\nYou can still use #define __USE_MINGW_ANSI_STDIO 1 to get the posix variant instead of the MS one.\n\nBut obviously until I install MinGW I can't test this, but I do see that macro used in several GitHub results that turn up on Google.\n. Thanks, @geoffmcl. I'll try to look into it when I get near a Windows machine or VM again. For the time being (probably until the weekend) my only dev system is my Mac. \n. Oops, I was in the wrong thread. I see you've already stumbled upon _mingw_printf family, and it's not working. Will continue to look for a solution.\n. > If we could get rid of those, then this problem goes away ;=)) Are they really worth the pain and effort???\nA damned good question!\nI've been looking at the minGW standard branch. I've simplified the current branch for testing:\n```\nif !defined(MINGW32)\n    return _vscprintf_p(fmt, ap);\n\nelse\n    return __mingw_vsnprintf(s, 0, fmt, ap);\n\nendif\n```\n...just to deal with a single file. Obviously looking for a substitution to the __mingw_vsnprintf bit. Trying custom spec files and using newer Windows C runtime DLLs and so on an so forth, just to include what's already native in Windows! I don't know if this is a MinGW flaw or a feature.\nI've also look at implementations of C99 printf family, but they don't seem to implement POSIX strings either.\nI'm going to give it one last go, and then just eliminate the positional parameters if I don't find an expeditious solution. At least we can push localize, and make the positional parameters a future enhancement if someone with some strange language requests them. Can you tell I'm tired? ;-)\n. @gagern, I looked at these yesterday, specifically pformat.c and I'm not seeing that there's support for positional parameters.\n. I'm too inconsistent with where I keep putting the discussion. Head to #347: We can build with WinGW now, including positional parameter support. I think it still needs some help for a \"friendly\" build solution, but it's working now both with MSVC and MingW.\n. @geoff, I know we didn't want to add things to /build but it seemed like the most expedient thing to do for now. I'm hopeful we can get the MinGW people to update the repo so this can be a completely native build without the kludges. It looks like the last commits were in 2013, though, and so I wonder if the project is withering from lack of interest, too.\nA lot of my research tried to give me answers from MinGW-64, which does appear to still be active and fully supported. Apparently it was forked from MinGW some years ago, and there seems to be some hard feelings between the groups that don't bespeak a unification, but maybe I'll give it a tryout, too, anyway.\nAs for CMake, yeah, I agree, no need to add blank objects. I'm not the CMake guru you are. Assuming we don't get the MinGW source fixed, I imagine that CMake would require special detection of MinGW, such as when the -G option is used.\nI don't know if these are possible:\n- Add a processing step to build the libmsvcrt_tidy.dll from the def automatically.\n- Provide the additional gcc linking parameter to libmsvcrt_tidy.dll.\nAccomplishing the first one would avoid distributing a binary as part of the source, and accomplishing the second one would avoid having to install a custom gcc specs file just to build tidy.\nObviously would be best if we can have MinGW update their import libraries instead!\n. > And to then know to add a specs file to automate that linkage... If we can find the msvcrt.def they use to create the existing distributed libmsvcrt.a, maybe we would not need to add a libmsvcrt_tidy.a... That old, circa 2011 msvcrt.dll exports what?, over a thousand functions... what else did they not add to theirs?\nThe patch looks relatively simple. I've not experimented, but it seems that adding the required functions to mingw/lib/lib32/msvcrt.def.in and adding them to stdio.h is all it would take to make this happen. The Makefile looks like it builds the actual import library DLLs.\nI posted a ticket on their SF bug tracker asking for guidance on submitting the patch. I know they probably tend to get a lot of dumb questions giving them the appearance of being temperamental, so I took a cautious approach with their possible acceptance of a patch. Looking at the DEF file there are some conditionals that are handled in the Makefile, and since I don't know exactly at what point these required functions were added to msvcrt.dll we may have to curtain them off -- if the MinGW folks are okay with this.\n. Since MinGW is currently able to build in the master branch, I'll just close this.\n. I think this is a strategy:\n- Merge in localize, can continue to fix the MinGW issues in master.\n- Also merge in this branch without the last two commits. It only causes a single regression, but only in emitted warnings and not HTML or exit status.\nThis will enable development of the configuration options and additional warning output with minimum of hassle due to all of the strings, option descriptions, etc.\nMuch easier to add strings and not work with DEFINEs in localize! :-)\n. @geoffmcl \n\nBut have I answered your questions?\n\nYes, I think it's clear how to move forward. This will cause a lot of regressions, but that may be perfectly acceptable if it's the right thing for Tidy to do.\nOn the other hand we could \"leave well enough alone\" and introduce new options.\nRight now the state of the current branch attempts to delete them based on TidyDropPropAttrs.\n. @geoffmcl,\nThis latest push adds a check in lexer.c:GetTokenFromStream to additionally check if an element is not used in the current version of HTML. It's added as an else so that that if an element is already reported as proprietary, it won't also be be reported as not applicable for this version.\nThis limited HTML5 test works as expected:\n<!DOCTYPE html>\n<html>\n<head>\n<title></title>\n</head>\n<body>\n<marquee>Hello</marquee>\n<font>Hello</font>\n</body>\n</html>\nI'm worried that I'm still using ApparentVersion() to make the check, as I'm still uncertain where this become definitive.\nIt's also revealed an inconsistency/bug?\nIn tidylib.c:tidyDocCleanAndRepair() we're doing a CheckHTML5(), but only if the doctype option is set to html5; this doesn't occur in auto, even if the input document is HTML5. This gives us different warning output:\nline 9 column 1 - Warning: <marquee> is not approved by W3C due to the check in lexer.c (it's proprietary), but not line 9 column 1 - Warning: <marquee> element removed from HTML5 unless we set the doctype option.\nNow if I run case 1004512 (as discussed in offline email), the actual doctype is strict, but ApparentVersion() is transitional, so we don't flag the use of font as we should.\nNow I'm wondering if the lexer is even the appropriate place to be making these checks; at the point of lexing we seem to have indeterminate knowledge of the real HTML version. in tidyDocCleanAndRepair the CheckHTML5() seems to be doing the checks as a post-processing step, and so I'm wondering if we should refactor the proprietary and mismatched-version checks in the same fashion as CheckHTML5. I think that by time we reach this point, we know the version of HTML that we're going to treat the input file as.\nAny feedback?\n. Well, the nice thing about having rolled in localize is that it's trivial to play with strings now. Anyway...\nCurrent status (needs more testing, especially the HTML version detection!):\n- We're now post-processing the tags to see if they're legal for the current version of HTML. This is new behavior.\n- Detecting proprietary HTML is moved into the same post-process function as the above to help avoid duplicates.\n- We're still detecting attributes that don't belong to the current HTML version, but also printing out the expected HTML version as part of the warning.\n- REMOVED several of the HTML5 replacement warnings, which would be redundant now.\nI didn't test on MSVC; I left several modern C comments in the code just to block them out; hopefully MSVC won't choke on them. These would be cleaned up.\nThis is a can of worms like so many things I try to improve, i.e., just fix #346, but I think that if version detection is correct, then this is really makes Tidy do the right thing.\n. As of 8c6c0e4, I like where this is going. I've not reworked the attributes yet (the cause of this whole thing), but the proprietary elements and not-in-this-version is working well with this commit. I'm using this logic as documented:\n* Check and report HTML tags that are:\n *  - Proprietary\n *  - Not supported in the current version of HTML, defined as the version\n *    of HTML that we are emitting.\n * Proprietary elements are reported as WARNINGS, and version mismatches will\n * be reported as WARNING or ERROR in the following conditions:\n *  - ERROR if the emitted doctype is a strict doctype.\n *  - WARNING if the emitted doctype is a non-strict doctype.\n * The propriety checks are *always* run as they have always been an integral\n * part of Tidy. The version checks are controlled by option `to-be-determined`.\nCurrently not using the non-existent to-be-determined option.\nJust for testing I'm using this html, which seems to let me use all of the doctypes. I've also been alternating between doctype auto and doctype html5 configuration options.\n<!DOCTYPE html>\n<!-- <html xmlns=\"http://www.w3.org/1999/xhtml\"> -->\n<!-- <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"> -->\n<!-- <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\"> -->\n<!-- no doctype declaration, too -->\n<!-- <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"> -->\n<!-- <html xmlns=\"http://www.w3.org/1999/xhtml\"> -->\n<!-- <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"> -->\n<!-- <html xmlns=\"http://www.w3.org/1999/xhtml\"> -->\n<!-- <!DOCTYPE html PUBLIC \"-//IETF//DTD HTML 2.0//EN\"> -->\n<!-- <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\"> -->\n<!-- <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML Basic 1.0//EN\" \"http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd\"> -->\n<html>\n<!--\n     Depending on whether Tidy is treating this document as proprietary or\n     strict, we should generate warnings or errors for the attributes and\n     elements that are not allowed.\n-->\n<head>\n<title>Test</title>\n</head>\n<body>\n<marquee fake_attribute=\"I'm a proprietary attribute\">Marquee is proprietary.</marquee>\n<font size=\"+1\">Font isn't allowed in strict documents.</font>\n<acronym>Acronym is deprecated, too.</acronym>\n<p jose=\"joseph\">\nThis is a valid paragraph but contains a proprietary attribute.\n</p>\n</body>\n</html>\nThe lexer's versionEmitted seems a bit wonky. I would expect it to tell me what the final output document type is. But between versionEmitted and docType I think I'm detecting what's actually being output by Tidy -- this is critical to knowing whether an element is permitted or not. The quick check above, though, gives me 100% success for each HTML version.\nNow in order to get back to the initial issue, I will see if it's practical to check the attributes in post instead of during ParseDocument. What worries me about the check in ParseDocument is that we've not really settled into our final output HTML version, so it will be difficult to determine whether an attribute applies within the current document or not.\n. > I will see if it's practical to check the attributes in post instead of during ParseDocument. \nIt was practical, and is in current commit. Next up is to implement an option to control this behavior.\n@geoffmcl, as the real Tidy expert, a sanity check is appreciated!\n. @geoffmcl, thanks for having a look.  I've added strict-tags-attributes to control the new behavior.\nThanks to the language changes and this change, I definitely want to go back and have a look at the testing suite! Now I'm off to start versioning the testing suite for output-based comparisons. I guess some of the tests will have a pre-localize, post-localize, and then whatever we end up pulling due to these changes.\n. Quick observance of the items that failed the exit status:\n1183751: this happens because we're now doing tidyDocCleanAndRepair() in tidylib.c:1810, but having added auto; i.e., we're treating auto as HTML5 for TidyDoctypeMode. I'm a bit dubious about this treatment; what's the difference between auto and html5, then? In any case, this test result is correct if we're looking at HTML5; but the output is correct transitional; I think this reveals an additional bug; we can't TY_(CheckHTML5)() based on the doctype mode; I think we have to tie this to versionEmitted, too. What are your thoughts?\n- 1207443: Same as above.\n- 1282835: Same as above.\n- 438954: Same as above.\n- 661606: Same as above.\nIf I revert tidylib.c:1810 to ignore the auto mode, we get 100% pass rate on the exit status for all five of the reversions. There are still some markup and errors reversions (the Ruby script is convenient!), but at least the exit status is consistent.\nI seem to recall your mentioning that doctype-mode set to auto equates to HTML5; but I'm thinking this only applies if no doctype is specified in the document; in these five cases a doctype is in the document, and so 1810 needs to consider not just the TidyDoctypeMode, but our versionEmitted, I think.\nIt's late and I've been force-fed too much red wine by my in-laws (XinNianKuaiLe, or Happy [Chinese] New Year) to do too much digging now, but at least there's an easy explanation for those five.\nIt's interesting how every step closer we get to solving the original issue, more and more complicated this becomes!\n. > What do you, others think?\nThat seemed to do the trick. I'd suggest that we'd also check for XH50 as well, but I'll dig into it to see what that might be wrong. I seem to recall that sometimes emittedVersion is set to VERS_HTML5 for some reason, which is a bit field for both HT50 & XH50.\n. Just an FYI, my compiled notes about the remaining test failures, where I'm comparing the error output and the generated HTML, too (my comments added to the test report):\n```\nHTML Tidy Regression Testing Exception Log\n==========================================\nTest conducted using /Users/jderry/Development/tidy-xcode/tidy-html5/build/cmake/tidy, version 5.1.36attr_dict\nResults generated on 2016-02-11T09:56:44+08:00.\nSummary:\n Number of case files: 228\n\nTotal test configurations: 228\n    Case files tested: 228\nConfigurations tested: 228\n\nConfigurations aborted: 0\n    Configurations passed: 198 of 228\n    Configurations failed: 30 of 228\nAbout this test suite:\nThese test files represent that standard regression testing that must be\nperformed prior to committing changes to Tidy's code. In some circumstances\nresults are platform specific and these notices will be displayed in the\ntesting results.\nFailed Tests:\nCase File            For Configuration     Markup   Errors   Exit Status \n---------            -----------------     ------   -------  ----------- \ncase-1004051.html    config_default.conf   PASSED   FAILED   PASSED   \ncase-1015959.html    config_default.conf   PASSED   FAILED   PASSED      \ncase-1241723.html    case-1241723.conf     PASSED   FAILED   PASSED      \ncase-1410061c.html   case-1410061c.conf    PASSED   FAILED   PASSED      \ncase-441568.html     config_default.conf   PASSED   FAILED   PASSED      \n  New: Info: Document content looks like HTML 4.01 Transitional\n  Old: Info: Document content looks like HTML 3.2\ncase-1014993.html    config_default.conf   PASSED   FAILED   PASSED  \n  Actually this looks like an improvement, but is magic. The expected output\n  was line 8 column 5 - Warning:  proprietary attribute \"NULL\", but this\n  is confusing because there are no attributes on the  tag.\ncase-1053626.html    config_default.conf   PASSED   FAILED   PASSED  \ncase-1063256.html    config_default.conf   PASSED   FAILED   PASSED \ncase-1316307b.html   config_default.conf   PASSED   FAILED   PASSED      \ncase-1326520.html    config_default.conf   PASSED   FAILED   PASSED      \ncase-426885.html     config_default.conf   PASSED   FAILED   PASSED      \ncase-504206.html     config_default.conf   PASSED   FAILED   PASSED      \n  This looks okay. The order of the warning outputs is different, but output\n  is the same.\ncase-1055398.html    case-1055398.conf     FAILED   FAILED   PASSED \n  This is an interesting behavioral thing that merits discussion. The \nonLoad used to be categorized as proprietary, even though it wasn't, so\n  now the output comparison fails because onLoad isn't proprietary; it's simply\n  not supposed to be used pre-HTML5.\n  More worrisome, though, is we're changing the doctype to transitional, whereas\n  the test case maintains the original, document-declared strict doctype.\ncase-1062511.html    config_default.conf   PASSED   FAILED   PASSED      \n  Missing line 3 column 1 - Warning:  is not approved by W3C\n  For some reason it looks like these messages aren't getting out?\ncase-1098012.html    config_default.conf   PASSED   FAILED   PASSED      \n  Missing line 6 column 1 - Warning:  lacks \"summary\" attribute\ncase-1198501.html    config_default.conf   PASSED   FAILED   PASSED  \n  New: Info: Document content looks like HTML 4.01 Strict\n  Old: Info: Document content looks like HTML 4.01 Transitional\ncase-1207443.html    case-1207443.conf     FAILED   PASSED   PASSED      \ncase-427826.html     case-427826.conf      FAILED   PASSED   PASSED      \n  This is interesting; we're changing the doctype to strict!\ncase-1359292.html    case-1359292.conf     PASSED   FAILED   PASSED      \n  Well, this looks like -quiet output, so I'll have to re-run this without\n  -quiet. The expected number of warnings was three, versus one in the new\n  behaviour.\ncase-431721.html     case-431721.conf      PASSED   FAILED   PASSED      \n  Missing reports for proprietary and not approved by W3C items.\ncase-431964.html     config_default.conf   PASSED   FAILED   PASSED      \n  New: Info: No system identifier in emitted doctype\n  I've seen this here and now; need to investigate further.\ncase-433021.html     config_default.conf   PASSED   FAILED   PASSED      \n  New:\n    line 6 column 1 - Warning: The align attribute on the  element is obsolete. Use CSS\n    line 9 column 1 - Warning: The align attribute on the  element is obsolete. Use CSS\n    line 11 column 1 - Warning: The align attribute on the  element is obsolete. Use CSS\n    line 13 column 1 - Warning: The align attribute on the  element is obsolete. Use CSS\n  Actually, this looks like a correct warning. Unexpected, so need to figure out why!\ncase-433666.html     config_default.conf   PASSED   FAILED   PASSED      \n  Added line 4 column 1 - Warning: The align attribute on the  element is obsolete. Use CSS\ncase-433856.html     case-433856.conf      PASSED   FAILED   PASSED      \n  Added line 8 column 1 - Warning: Found attribute on body that is obsolete in HTML5. Use CSS\n  I've never come across this before. It will be interesting to track down.\ncase-441508.html     config_default.conf   PASSED   FAILED   PASSED      \n  Added line 4 column 1 - Warning: The align attribute on the  element is obsolete. Use CSS\ncase-443678.html     config_default.conf   FAILED   PASSED   PASSED      \n  This is strange and makes no sense! The only difference is the case of the hex string!\ncase-470663.html     case-470663.conf      PASSED   FAILED   PASSED      \n  Not getting the proprietary attribute warnings.\ncase-540571.html     case-540571.conf      PASSED   FAILED   PASSED      \n  Missing line 10 column 1 - Warning:  proprietary attribute \"color\"\n  This is interesting because we are getting the same warning for 10:23!\ncase-588061.html     config_default.conf   FAILED   FAILED   PASSED      \n  A difference of four errors, and this is affecting generation of CSS replacements.\ncase-655338.html     config_default.conf   FAILED   FAILED   PASSED      \n  Old: Info: Document content looks like XHTML 1.0 Strict\n  New: Info: Document content looks like HTML 4.01 Strict\n       Info: No system identifier in emitted doctype\n  We're also changing the doctype and not using the old HTML attributes\n       for an XML file.\n```\nI'm confident that most of these are a result of not doing ConstrainVersion properly -- I'll have to dig back into that. Several of them can be attributed to changing the order of operations, i.e., certain checks are now not in the same order as they were originally.\n. > Just tried to run ruby regression_test.rb rtest -r=f:\\path\\to\\tidy.exe but it always exits with an error...\nOh,I fixed that, but I've not been pushing the testing branch. I've been promised some time today, so I'll look at the issues above, and defer testing maintenance until later.\nYou've got a lot of willpower... with a new toy I would be tempted to disappear for a few days!\n. ~~Actually, discount the test report above. It was based on an older binary. Actually things have regressed quite a bit more substantially than I imagined. Back to the drawing board...~~\nEdit: Nevermind... out of my mind. Please ignore this.\n. Closing in favor of #370. \n. Thanks!\n. No problem with reverting the commit. Like @geoffmcl said, in my mind it was only a style change. If it's a workflow issue for him, though, there's no harm in leaving it in and definite harm in leaving it out.\n. I'm finally looking into this, but...\n\nTidy has a CheckUrl (CH_URI) service, but is does not yet seem called on your sample, but even if it was, I can not see where it would flag those characters as bad?\n\n@geoffmcl, have you done any work in here recently? When testing this, I'm getting sent into CheckUrl ultimately via AttributeChecks.\nJust trying to make sure I'm not misinterpreting too much of the above before trying to implement the desired checking.\n. I've added an issue_352 branch that does fairly well in adding a warning when illegal characters are detected. Some testing would be nice, as I foresee some possibility of issues with complicated URL's. Have a look at the fd773121752 commit message for possible additional help needed.\n. Oops, meant to ping @zcorpan, @zmwangx, @ncouture, testing this branch with complicated URL's would be appreciated, folks.\n. I should also add, after significant testing, I might consider making this an error (instead of a warning), or add a new option to mute/warning/error, because in principle, Tidy shouldn't generate invalid code.. @geoffmcl, thanks for taking a look. Yeah, the Euro symbol is a problem with different code pages. I should have pointed out that my source it UTF-8, and I chose that symbol just so that I'd definitely have a three byte character for testing. Strictly speaking, I should probably add a two-byte character, too.\nOne thing that I hesitated about for this fix was definitely the character encoding, which a library usually handles for me. I know that at some point in Tidy, we're 100% UTF-8 internally, so I think that if the file is read with the correct encoding, then my logic works universally. Please correct me if I'm wrong (and where, exactly, is our document text stabilized in any case?).\nYeah, I'm glad you noticed the <a href=\"%E2%82%AC\">, which is what I originally used.\nIn any case, all of the UTF stuff is in the sample case because I obviously can't count on a char being a whole character, and so maybe they distract from the case that we're correcting. If I'd not put any multi-byte UTF in there, I would have naively thought everything was okay with just the samples in this issue! They're also tangentially related to #378, which we might address at the same time as this issue.\nI'm fine with the macro, or else we can drop ISALNUM completely and just use the comparisons from the macro. It might be convenient to have the macro in tidyplatform.h so that it's available elsewhere should we need it, too.\nThe img thing was copied from one of initially failing test cases (because of the #, which strictly speaking isn't a legal code point, but a delimiter). Anything with a # should be okay.\n\nAs stated, would love that the message <a> illegal characters found in URI actually showed, at least the first, illegal character, but could not see an easy solution yet...\n\nAgreed. There's no simple solution. Maybe in the short term leave it. As a continuation of my previous work on the messaging system, I plan to eventually make things more flexible, such as being able to pass arbitrary information to the message routines. I thought I'd try to get to some of our oldest bugs, first!\n. Thanks, I'll try to merge it tonight, possibly add a test case with some more meaningful tests to testbase.\n. Oops, should have closed this after merging #547.. @mcandre, can you provide a little help here? I see that we're available in Fedora, so presumably this request is satisfied?\nOtherwise, is there a particular YUM repository we should be looking into?\n. Given lack of feedback, I'll close this. @mcandre, if you find your way back, we'll be happy to reopen this.\n. jderry-vmbp:~ jderry$ brew info tidy-html5\ntidy-html5: stable 5.1.25 (bottled)\nGranddaddy of HTML tools, with support for modern standards\nhttp://www.html-tidy.org/\n/usr/local/Cellar/tidy-html5/5.0.0 (9 files, 1.6M)\n  Poured from bottle\nFrom: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/tidy-html5.rb\n@mcandre, this is that latest tagged release, and appears to be in Homebrew. Is there something not working?\n. Very nice! I was continuing to do some experimenting on another branch, but yours is much more elegant. I may still bring over a command line switch.\n. I wish I'd found that Stack Overflow thread yesterday!\nThe msgunfmt tool is broken with this merged changed, but it should be simple to repair, just undoing your transformation. It's not an every day tool, but is useful when the main .h is updated with comments and such.\n. According to The W3C:\n\nIf an HTML document does not start with a BOM, and its encoding is not explicitly given by Content-Type metadata, and the document is not an iframe srcdoc document, then the character encoding used must be an ASCII-compatible character encoding, and the encoding must be specified using a meta element with a charset attribute or a meta element with an http-equiv attribute in the encoding declaration state.\n\nSo first I don't see that this is a bug, but a feature request, because Tidy can't determine whether or not the page is delivered without the proper content type.\nThis leaves two points for discussion:\n- Do we check for the existence of a UTF8 BOM before adding this metadata? BOMS are actually not recommended for UTF8, but if the BOM is present then the user agent should know that the file is UTF8, thus no metadata is required. What should Tidy do? (And what do we do if the options specifically state that a file is a different character encoding?)\n- Next, do we use meta charset as requested, or use the also-allowed <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>?\nThat would address just this request, but opens up a larger can of worms that we would have to address (I'm not saying \"no\", just pointing out that it's not as simple as limiting ourselves to the above). Right now Tidy doesn't try to interpret http-equiv or meta charset; instead we count on the -encoding options, both of which default to UTF8. This brings us the questions:\n- What do we do if we detect UTF8 via the BOM or an attribute, but the input-encoding and/or output-encoding contradict this?\nIn general we defer to the user's options; but\n- What happens if we can't output Kannada or another script in the user's options? Should we force everything to UTF8? (YES!, but my opinion doesn't make for a friendly program). \n- Should Tidy generate an attribute for every conceivable output-encoding?\nI think the specific request is fairly simple, but if we're going to start getting involved with character sets, it shouldn't be piecemeal; we really need to have a very good specification for desired behavior given multiple conditions, including how we deal with meta charset vs http-equiv in the input stream, how to handle conflicts, etc.\n. Oh, I get that. If our output-encoding is UTF8, we could simply add a meta charset, or ensure there's one already there, just like we ensure that <head> is always there, regardless of whether we detect any characters that require UTF8.\nBut thinking of the bigger picture, Tidy is still HTML<5 compatible, and it supports a large number of character sets. I personally believe in an all-UTF world, but I can't force that on all users of Tidy, and I'm not certain if we want Tidy to treat UTF8 as a special, privileged child. Or maybe we do.\nMostly my point is that this certainly merits a larger discussion than exceeds my own personal whims (which we be to support nothing but UTF8 output and force the world to modernize -- see why my own personal whims aren't good enough?).\nTo provoke more discussion (don't worry, others will be by), I might suggest we pair this behavior with a new option: add-charset with an enum, \"no, http-equiv, charset\", with a default dependent on the doctype, i.e., either http-equiv or charset. I don't like these multiple defaults, but we have them with, e.g., indent-with-tabs. This would provide new behavior while preserving old behavior for people that have the use case (begging the question, does anyone have a use case for the old behavior?).\nStill, though, do we do this for UTF8 only, or try to adopt something that will work for all supported character encodings?\n. @sria91,\n\nIsn't detecting the encoding from the content a versatile option? We are all using tidy to tidy up the document. Shouldn't it report when there are conflicts in encoding used and declared?\n\nAh, you've stumbled into the can of worms! This is why would require a carefully written specification (or write one ourselves): expectations have to be formalized, and done so in a way that applies to Tidy in general (not just UTF8).\nWe have all of the possible sources of data:\n- Tidy's input-encoding\n- Tidy's output-encoding\n- Bytes used in the actual file, which may or may not be UTF8.\n- The presence or non-presence of a UTF8 or UTF16 BOM.\n- The presence or non-presence of meta charset.\n- The presence or non-presence of content-type.\nThe \"simplest\" thing to do would be to trust the user and simply ensure that a meta charset or content-type is present, and is appropriate to the output-encoding. But even this isn't so simple. What if the file already contains a conflicting meta charset?\nHere's a beginning draft specification:\nFor versions of Tidy greater than 5.x.y, Tidy will enforce the use of charsets in its output.\n- HTML<5 will use the meta content-type attribute.\n- HTML5 and newer will use the meta charset attribute.\nThis new feature is enabled with the enforce-charset-attribute configuration option, which defaults to YES. Setting this option to NO shall restore previous behavior.\nWhen enforce-charset-attribute is YES, then Tidy shall report warnings/errors in the following circumstances:\n- A UTF BOM is detected when input-encoding does not specify a character encoding for which a BOM is expected (error).\n- A UTF BOM is detected when a charset attribute is detected that does not specify that a BOM is expected (error).\n- A charset attribute is missing (warning, will be added)\n- meta charset is used HTML<5 (warning, will be changed to content-type)\n- Attribute does not match the declared output-encoding (warning, will be changed to indicate output-encoding)\n- Both meta charset and content-type are found (warning, will drop one depending on HTML level).\n- Edit: content-type is found on HTML5 (info, recommend changing to meta charset).\nCertainly I\u2019m missing something above, but it\u2019s a start. Specifically it makes no mention of \"detecting\" UTF8. Absent a BOM, any bytes outside of the ASCII character range are just bytes; they can be anything. The input-encoding gives good hints, though, and so I suspect that we'll have to trust the user on that one. Absent a BOM or this guidance, there's no way to know that a particular byte stream represents UTF, iso2020, MacRoman, whatever.\n. @geoff,\n\nBut concerning 1 & 2, there is some wording I do not understand. Sort of \"found BOM ... a BOM not expected (error)\". What spec are you using to decide a BOM is not expected? While I can read here and there that a BOM is not needed, but I can not see this as an error if added! Maybe we could warn with say a BOM found, but it is not needed, but why? I read a BOM may be added for UTF8... Am I reading something wrong here?\n\nNope, you covered my meaning of the first bullet point with the clarification that Tidy already does BOM detection.\nThe second bullet point has similar meaning. If a BOM is detected but there's a meta charset indicating a non-UTF document, then that's an issue. It's also a valid possibility if someone opens, say, a legacy iso2022-jp file in their text edit, and \"converts\" it to UTF but neglects to remove the now-incorrect meta element.\n. @jamesla, you will require Cmake to build it, and there's no reason it shouldn't compile. Instructions are in the readme. If it doesn't work, please let us know!\nOf course the [binaries][http://binaries.html-tidy.org] will run on Windows with Cygwin. There's no installer; you simply put it where ever you want to on your %PATH% or $PATH.\n. Will input-xml or output-xml work for your use case? They both preserve attribute case.\n. I see your points. Due to the followup questions you raised, I won't tag this as a bug or feature request, but I'll leave it open for discussion.\n. > Would tidy be willing to consider having a \"match\" setting for case sensitivity in HTML, so that the output matches whatever the input used?\nFor all tags? Or only for SVG? Style is a valid use case; Tidy is also a pretty printer, after all. \n. As I go through these old issues, I'd still like to clarify some things, and possibly close this issue. I'll explain my current understanding below, and so I expect to be corrected when I'm wrong.\nFirst, the svg tag is an HTML tag, not an XML tag. Presumably the actual XML document is the content between the &lt;svg> and &lt;/svg tags, right? Meaning that the case of the attribute should not be important because it's not part of the XML; it only brackets it. If this is the case, I don't see a reason to treat svg as special, or to introduce a new option to pass-through attribute names as given.\nNow, I don't know what happens to the content of svg tags; should we branch processing to Tidy's XML processor? There might be a case for this; I'd have to investigate all the ramifications/possibilities. Are there other tags (such as math) that have XML content?\nSo, @geoffmcl and @mojavelinux, I'm sorry we've not acted on this, but is any action required? If not, we can close this. If there's a case for using the XML parser instead of the HTML parser for the content of certain tags, then perhaps we can look into it.\nSome additional guidance is appreciated.\n. @mojavelinux, I understand that. I'm trying to get clarity on whether you would expect the new behavior on the svg tag itself (which is an HTML tag, not XML), or only on the XML elements contained within the bounds of the svg tag.\nIf the former, then the question really becomes -- because we prefer not to have a new option applicable to only a single tag -- do we want to add an option such as preserve to the uppercase-tags configuration option, to enable this desired behavior for all HTML tags? Implementation would be simple, but is there a valid use case for it? I would suggest that enabling someone's preference is a good use case, but is it good enough? \n. @mojavelinux, if you have a chance, have a look at #554, which potentially solves this issue.. Great. Merged!. It looks reasonable, but I don't have a Fedora system spun up to test this.\nDoes anyone else want to comment so that I can merge this?\n. Can do... do you want issue-329 as-is, right now to be rebased against master, or a particular commit in issue-329 rebased against master?\n. @geoffmcl, this was weird and tricky, and I'm not really satisfied with the\nresults. To be pragmatic, it's working, but I completely lost your commit\nhistory. On the other hand despite the fact that it took longer than simply\ndoing it manually would have, it was a learning experience, and I seldom\nshy away from those!\nWhen I tried a standard rebase there were a few other merges present, from\nbranches that no longer exist (apparently). Thus a true rebase failed for me.\nThis is what I tried (and should work for you in the future barring missing branches):\n\nFirst create a new branch. We shouldn\u2019t push a rebased branch back to a public\nrepository. Assuming we're already in issue_329:\n$git checkout -b issue-329_rebase\nJust to be sure where we diverged, get SHA of that point:\n$git merge-base master issue-329_rebase\n8c13d270ede8d47b74b2373d818b2841f799ee23\nTo flatten this branch, I should be able to go back to this point. I like to\ndo this, interactively:\n$git rebase -i 8c13d2\nWhen you editor opens (mine is nano) leave the first line alone, then change\nthe remaining pick's to s (meaning squash). You can read the other options.\nNote that if you use reword don't reword now; the editor will open up again\nfor later rewording.\nThat failed, so I \ngit rebase --abort\n\nThe issue I found during the rebasing session was that there were SHA's present\nthat I couldn't find anywhere, presumably from deleted branches. And so git \nwasn't able to replay these changes.\nWhat I did, though, was\ngit reset --soft 8c13d2\nWhich kept the current changes, staged, but reset us to the diverging point.\nCommitted that and them pushed to Github.\n\nThere are still merge conflicts vs master, so let me see if this is easier now.\ngit merge master\nFix version.txt and push to 329_rebased_merged\nI'll leave all three branches as they are. Given that this delete the commit\nhistory, I suggest you pull issue-329, use the reset soft trick, yourself,\nand if you're ready to put it into master, simply merge it. Feel free to delete\nthe _rebased branches; if you don't delete them I'll do it in a couple of days.\n. I wonder if suppressing faults via a myriad of configuration options would be the best approach. This adds additional complexity to Tidy, of course, but it also seems that Tidy already provides a facility to filter unwanted messages: TidyReportFilter.\nThere's probably a way to take advantage of this in the console application without having to build this into the library per se. (Actually it's not in the latest API documentation, but currently in master there's a better TidyReportFilter3.)\nEven in console this opens up a bigger question. Do we allow any error to be suppressed? Is this dangerous? Do we have a new command line switch for every possible error? Do we force it into another config file? Add it to the current config file?\nRight now there are 231 possible warnings/errors/info that can be output.\n. I'm in alignment with @geoffmcl's comments. If no further discussion on the matter then we'll close this issue in the near future.\n. > I understand that the reason is that the document is mistakenly interpreted as XHTML 1.0 where it might make sense to advise in favor of that attribute. Nevertheless I think it is a bug that tidy emits a warning on a document if the document is valid when interpreted as HTML5.\nHmm... maybe this is a valid point if we use --doctype=html5 instead of the default auto, i.e., Tidy probably should respect a specifically declared doctype. In your original bug you're not specifying a doctype. Would your application allow you to specify the doctype? In any case, right now, specifying the doctype won't achieve the behavior you want, but it's still something to consider.\nWith auto I think that the explanation @geoffmcl provided is still the correct behavior for determining the doctype.\nPinging @geoffmcl: what's your opinion on this? Respect the chosen doctype or not? There's likely to be other output affected...\nIn any case I probably won't be able to have a close look at it until this weekend. And @a3nm, you're welcome to submit a patch!\n. I'll reopen this pending further investigation.\n. > Now, maybe there is a small case here for, if the user adds the option --fix-uri no, then maybe tidy should not emit the warning, since it has been instructed to not change the document. This is a possibility...\nI don't really see the issue with warnings; they're not errors. Perhaps we can classify them as info instead of warnings when --fix-uri is no. Otherwise, I'm not against simply eliminating the warning when no; after all, the default is yes, and so it takes knowledge of the consequences to set this option, so there's a case for suppressing them when no.\nLet me know, as this is an easy fix.\n. @geoffmcl, this would be super simple to roll into #352. Either squelch them when --fix-uri no, or assign them to the underused TidyInfo, which the user can choose to squelch with show-info. Of course the default would remain a proper warning along with escaping them.\n. @a3nm, @zmwangx, @deathbaba, have a look at #556, which simply squelches the warning for HTML5 documents, and preserves existing behavior for legacy documents. If it satisfies everyone, there should be no issue rolling it in.\n. Oops. This should have auto closed.. My expectation is that the output-encoding only effect the actual HTML output; it never occurred to me that it affect the reporting. I would argue the following:\n- HTML output still has its use cases for different encoding formats.\n- For reporting this is the 20th century and perhaps we should encourage the adoption of UTF universally, other than for HTML output.\nI.e., I'm fine with your suggestion.\n. Can you push the French script so I can take a look at it? Or email it to me.\nThe Ruby script should be stable now, so if the POT you're using is from the stable version, then there should be no issues with quotes and comments and so on. When strings and such are added, this work magically, too.\nSay that you're working with a POT, but master English changes in the meantime. If you generate a header with the tool, it will be based completely on the English header file using the French from the POT; the French header will be \"clean.\" If you want your French POT to be clean, too, then reverse the process: make a \"clean\" header, then use the tool to generate a new POT. It will be based on the English, but carry the French translation.\nThe comments are VERY verbose, and very repetitive! This is a consequence of the PO/POT format, which wants a comment for every translated string. That is, translators can pick any arbitrary string to translate and have the special instructions there.\nWhat I might do is keep this in the English header only, i.e., any time we generate a header file from a POT, I'll just leave off the comments. As noted above, when a header is converted to a POT, all of the comments come from the English header anyway.\nNo ETA I'm afraid; I'll try to review it this week.\n. Hi Geoff,\nWhat Linux are you using?\nWith a quick test in Ubuntu 14.04:\n\njderry@UbuntuBox:~/Development/tidy-html5/localize$ ./poconvert.rb\nmsginit ../src/language_en.h\nWrote a new file to\n/home/jderry/Development/tidy-html5/localize/language_en.po\nmsginit exited without errors.\n\nWould you zip and send me the language_en.h file you're using? I doubt\nthey're different, but something is different!\nAlso in Ubuntu using your POT:\n\njderry@UbuntuBox:~/Development/tidy-html5/localize$ ./poconvert.rb msgfmt\ntranslations/language_fr.po\nWrote a new header file to\n/home/jderry/Development/tidy-html5/localize/language_fr.h\nmsgfmt exited without errors.\n\nThere error you're getting in the first one looks like some value is NULL,\nbut I can't track down the issue if I can't replicate it on my system! I'm\nusing the current, fresh-pulled-just-now master branch.\nAnd just to test turning the H back into a PO:\n\njderry@UbuntuBox:~/Development/tidy-html5/localize$ ./poconvert.rb\nmsgunfmt language_fr.h\nWrote a new file to\n/home/jderry/Development/tidy-html5/localize/language_fr.po\nmsgunfmt exited without errors.\n\nAnd now looking at the diffs, I see the issue with the quotes. I'll have to\ntrack down if this is an H->PO issue, or if the PO->H didn't work.\nHmm... is this a locale thing? Let me try:\n\njderry@UbuntuBox:~/Development/tidy-html5/localize$ export\nLANGUAGE=fr_FR.utf8\njderry@UbuntuBox:~/Development/tidy-html5/localize$ ./poconvert.rb\nmsginit ../src/language_en.h\nWrote a new file to\n/home/jderry/Development/tidy-html5/localize/language_en.po\nmsginit exited without errors.\n\nWell, that's an error; it should have generated a French PO instead of an\nEnglish one, but that's because \"known locales\" is lifted directly from\nGNU, and it only recognizes two digit codes. I can use the l parameter to\nforce French, though:\n\njderry@UbuntuBox:~/Development/tidy-html5/localize$ ./poconvert.rb\nmsginit ../src/language_en.h -l fr\nWrote a new file to\n/home/jderry/Development/tidy-html5/localize/language_fr.po\nmsginit exited without errors.\n\nMy next steps:\n- I'll see what's going in with the quotes.\n- I'll eliminate the comments in non-English Headers.\n- I'll try to figure out what the NULL failure is if you give me the header\n  causing it, and/or tell me which Linux you're using. If it's on the Pi,\n  though, I don't think I can virtualize that!\nHmmm... another thought, what's your Ruby version? Looks like I have\n2.2.1p85 on my Ubuntu.\nOverall working on the localization has been a fun learning experience for\nme, too. I had no idea this big, formal ecosystem existed out there, but as\nI look around it's not just a GNU or Unix thing. I see PO's used in\nservers, PHP, Ruby, professional translation services, and more. I hope by\nsomewhat supporting this, someone will come along and offer a translation\nfor us! I'll keep working on the Spanish as I have time, but it's probably\nabout the same quality as your French!\nOn Tue, Mar 22, 2016 at 8:40 AM, Geoff McLane notifications@github.com\nwrote:\n\nIt's is amazing what you discover by taking the effort of a perl decoding\nthe language_en.h file, and outputting a language_en.po file. You learn a\nlot!\nAnd then loading my language_fr.po and merging that into the output,\nand also comparing the respective msgid text, for a given msgctxt, you\nlearn even more ;=))\nFrom my msgid diff I can see you made quite a number of good msgid\nchanges between version 2016-01-23 and 2016-02-17. Thanks... Some minimal,\nbut important additions of the ending ; char on some entities, for\ninstance, but many others, what all seem like, changes-for-the-better...\nIt took a bit to get the output all accepted by POEdit, firstly correctly\ndealing with the plurals, but mainly due to perl does not input/output\nutf-8 by default, but that can be fixed/forced. But there still seem some\nencoding problems in the results, as indicated in the POEdit display!\nOne particular one is the replacement of double inverted commas in English\nby the French guillemet characters \u00ab \u00bb... probably U+00AB and U+00BB,\n\u00ab and \u00bb... these still shows up wrong in the perl output in\nPOEdit??? And a few others, to be explored...\nStill to publicly publish my poconvert.pl... it is still a WIP...\nBut as I say... lots of fun moving forward...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/385#issuecomment-199562790\n\n\n\nJim Derry\nClinton Township, MI, USA\nNanjing, Jiangsu, China PRC\n. Have a look at branch localize_tuneup which should address the quotes issue (which was definitely a bug!), and generates headers without the POT comments (unless you add switch --force-comments).\nI'm still running successfully on Mac OS X, Ubuntu 14.04, and Windows 7, though, with no strange errors.\n. By the way your French text for TEXT_HTML_T_ALGORITHM has really strange wrapping in your PO file. I wonder if this is from your PO editor?\nAnd for the record, unlike \"real\" PO workflow, our msgid is a throwaway; it's safe to ignore changes in DIFF. If your PO it out of date, a round trip conversion to H and back to PO will update all of the msgid strings, which are simply reference for the translators. As in Tidy, the real key is the msgctxt field.\n. I'll see if I can replicate the problem with older Ruby and make a fix.\nThe way that changes are made in the \"real\" GNU gettext system is the original, English string serves as the master key. If you make a change to the English string, it gets flagged as a new string in the PO/POT. There are modifiers for \"fuzzy\" strings that may or may not be the same. The gettext utilities will try to match existing translations to the new English string based on how closely the old and new strings match, and assign fuzzy automatically.\nIs there a chance that we will completely change the meaning of a string? We might update wording, etc., but we'll never change something's fundamental meeting, I would think.\nIn any case, I'll consider a strategy for adopting \"fuzzy\"; I suppose we could embed extra metadata in the comments or something. I don't want to get TOO crazy with this, but when we modify the language_en.h file, one of us should regenerate all of the language-specific POT's. We should already be doing this today.\nFor the \"we should already be doing this today\" thing I could write a quick shell script or add a new command to the Ruby application to perform this updating automatically.\nThen a new step would be to DIFF the new language_en.h with the previous one, and mark all of updated strings as \"fuzzy\" in the updated-POTs.\nThey'll then stay fuzzy until a translator clears them.\nFor the purposes of diffing I would use git's diff, and take an sha as a parameter. So we would compare the current file system language_en.h with a version from a specific commit.\n. In localize_tuneup branch, poconvert.rb should work on Ruby 1.9.3 now, tested in Ubuntu. I'm having difficulty installing old Ruby on Mac OS X for some reason.\nOn the Pi, did you gem install bundler? And then gem install from within the localize/ directory? As the tool isn't using any strange gems that might end up in off-the-wall locations, it's probably safe to delete line 8 from poconvert.rb; if installing the dependencies doesn't fix it, try deleting this line; if it works, feel free to push it (I don't want to push it untested, as I have no Pi!).\n. > I am afraid I did not exactly understand \"should regenerate all of the language-specific POT's\"! Surely, at this stage we only have tidy.pot, the english base file, generated from extracting text from our code base of language_en.h. And then from that tidy.pot base we could have many language PO files... including one exactly equivalent, language_en.po\nMy bad typo. I meant the PO's. If we change language_en.h, then we should make the new POT, and also update the existing PO's. This is fairly easy; I just did it ./poconvert.rb xgettext which uses the English file by default, and ./poconvert.rb msgunfmt file1 file2... (I regen'd these to add translator documentation to your new option).\nWhat I'll do, though, is add a new command to poconvert (something like newbase) to do all of this automatically, but more importantly to FLAG the fuzzy stuff. Then anything that's changed in language_en will be marked as fuzzy in all of the PO's.\nNew strings will simply be blank in the PO's. POEdit and the PO online editors I've looked at will highlight these cases. And of course Tidy will fall back to English for these missing strings.\n\nAh, yes, on the RPI you need admin for Ruby gem stuff. I'll recommend you install RVM; it can manage multiple Ruby versions and multiple sets of Gems all in a user account. It made it really easy to figure out what was wrong in 1.9.3, for example, without causing a world of hurt from dependency conflicts!\n\n\nOf course, the windows console output does not correctly support utf-8\n\nAny particular characters causing you grief? I've been testing with Spanish which shares some of the accented Characters with French, and they've been rendering properly. Of course there's the nuclear option of setting your system's locale to French; we know from getting Chinese working that even Chinese works in the Windows console with that option!\n. I'll have a look at it this weekend, I hope, @geoffmcl. It's working now (I regen'd all the POs and pushed them) with no issue. I could remove the @@header_digest; it's mostly meant to keep people from breaking the template. Since it's working for me now, I'm guessing that Windows line breaks are probably causing the issue for you.\n. @geoffmcl, I'd suggest the expedient fix would be the console application... should be an easy check. A more robust solution would be to implement this is the library and add a new message, because TY_(FileError) is used all over the place. . I ended up with a simple fix in the library, including a new message. Tested on macOS and Windows.\n. Thanks for the fix, @geoffmcl. I've merged it, so will close this. . @geoffmcl, the fix is working for me. Go ahead and merge it at your leisure.\n. @rstrauss, latest signed Mac binary for 5.2.0 is out, too: http://binaries.html-tidy.org\n. @geoffmcl, sorry I've been MIA lately, but I had a flurry of activity today!\n- You got to the web page already.\n- Binaries updated using the bins already in the github release page.\n- API site updated.\n- Mac installer built, signed, and deployed on the release.\n- Mac installer materials pushed.\n. The issue-395 branch is working just fine for me, @geoffmcl, so feel free to merge this fix.\n. @rtack, just start a normal PR.\n. Did you get this from the binaries website, or from Github directly?\n. Awesome. Thanks!\nI'll try to give it a test in the next day or two, and then add it to the how to get Tidy section.\n. README/LICENSE.md, or tidy.h.\n. @TomTrottier, since no feedback I will close this. Please feel free to re-open the issue if you're still around.\n. I'm willing to attempt to tackle this, but what's the approach we want to take? There are two routes here:\n\n\n@jacksonp indicates in the issue title that he would preserve tabs in pre blocks, whereas Tidy changes them to spaces. The question is, is replacing tabs with spaces in a pre block correct/expected behavior? I think there's a strong argument for leaving things that the user indicates are preformatted alone.\n\n\nOn the other hand, possibly the user expects that tabs will be converted to spaces, and maybe this is why he is using Tidy?\n\n\n. @geoffmcl, on quick testing, it certainly seems to work! On quick testing, though, it doesn't seem to do exactly what you describe (or what's written in the new description). I think it does address this feature request, though.\nI see what you're doing in streamio.c, but somewhere, somehow (during lexing? during parsing? during pretty printing?) the tabs are being replaced with spaces, except in pre tags, and so I think the behavior is correct, just not the description.\nFor example, if I --indent yes --indent-spaces 3 --keeptabs yes, and my source file is tab indented, it will (properly) indent with spaces, replacing the source tabs. Tabs in, say, li elements are replaced with spaces. Multiple subsequent tabs are coalesced to a single space. Attribute values with tabs are changed to spaces (and coalesced if multiple, but literal-attributes still works properly).\nSo, basically, it's working as @jacksonp requested, and not as described, which I think is actually the correct behavior.\nI support the PR, with an improved description, and maybe an understanding of why it works even though there should be tabs everywhere (I'll dig into it if I have time; probably pretty print is making sure we don't output tabs).\n. @geoffmcl, by \"current line offset,\" do you mean indentation level?\nIn any case, it looks good.. This is merged and alive! Thanks for all the hard work.\n. Does show-body-only not work for you?\n. Will close due to age and lack of feedback from the poster.\n. Closing due to age and non-relevance.\n. > My main motivation for this question is because I'd like to add another opaque type, to represent errors (with code, arguments, the possibility of querying argument types, string representations, position information and so on), so that a fourth message filter could hopefully be the last since all future extensions could be extensions to the error object without touching the signature of the callback function.\n@gagern, I realize that this particular issue hasn't advanced, but I plan to tackle messaging in 5.5, and of the things I've been considering is \"one filter to rule them all.\" There's considerable additional information passing that I would need to accommodate, and so I wonder what you have in mind. All of the filter additions have been to tailored to my needs as a library user, and I'm glad to see other library users out there, so I'd love to arrive at a \"forever\" solution.. @gagern, thanks for the above. It inspired me a lot to fix up a lot of the junk I've added to the library before tackling this, but I think have a good start: check out the more_messages branch for a VERY early preview. Note that this builds on a couple of earlier PR's that I have active awaiting review (including the aforementioned junk cleanup), so don't be alarmed at the diff.\nRight now the only \"API\" replicates what LibTidy already does, and it's implemented in the console application as a demonstration.\nI might add some more bits and pieces before you pull it, so the previous sentence might be inaccurate. I'm kind of liking where this is going, and the flexibility in error reporting it might offer in the future.\nI like your proposed API. I've started trying to steer away from \"error\" to \"message,\" and classify the messages as \"reports\" and \"dialogue,\" the latter of which will also encompass anything that LibTidy outputs. So the result is a TidyMessage object, and tidyMessageGetLocalizedMessage instead of referring specifically to errors.\nIn the longer term, having an internal message type that's extensible can probably go a long way towards simplifying Tidy's plethora of output routines, and maybe make some of the message reporting more inclusive of available data.\nRight now that's a chicken and egg problem: I could fully flesh out a public API, or I could generalize the current internals. In the interest of backwards compatibility, I might prefer the latter. I'm thinking that at points in Tidy where errors are currently raised a TidyMessage is created instead of calling any one of the numerous functions with different signatures. Let me try my hand at that.... @gagern, when you have a chance please have a look at #507. It adds a new API in addition to the cleanup I mentioned upthread. It's highly inspired by your sample API above, other than indexing not being used in favor of the \"Tidy way\" of using a TidyIterator. This is a lot more safe in that we can only return values with meaning, and not values with no meaning, such as if your index were out of bounds. Using TidyIterator avoids that danger.\n. Well, this major gutting of Tidy's messaging system and addition of an API per the request is merged and now in next, so I'll close this.\n@gagern, please file a new bug if something doesn't work as expected. I plan to trial it in a live application myself, soon.\n. I could step up to this, as I've been doing a lot of work with the message system in general lately, and looking to do more work with the message system. Before going willy-nilly and making changes, I wonder if we should re-ground ourselves on the existing messages, their meanings, and what we want Tidy to do.\nHave a look at new #561 for a broader scope to this topic.. I've added #612 which address this, but I'm questioning whether or not this is correct. According to the specification:\n\nUnquoted attribute value syntax\nThe attribute name, followed by zero or more space characters, followed by a single U+003D EQUALS SIGN character, followed by zero or more space characters, followed by the attribute value, which, in addition to the requirements given above for attribute values, must not contain any literal space characters, any U+0022 QUOTATION MARK characters (\"), U+0027 APOSTROPHE characters ('), \"=\" (U+003D) characters, \"<\" (U+003C) characters, \">\" (U+003E) characters, or U+0060 GRAVE ACCENT characters (`), and must not be the empty string.\n\nAlthough nearly everyone agrees that using quotes is a best practice, and Tidy's been adding quotes for @geoffmcl knows how long, isn't this something that we should allow the user to decide?\nPerhaps we need a new option, e.g., quote-attributes with the default value double-quote, which would preserve Tidy's current behavior.\nProposed complete values would be:\nvalue | result\n--- | ---\ndouble-quote | always ensures all attributes are double quoted, unless single quoted in the original.\nsingle-quote | always ensures all attributes are single quoted, unless double quoted in the original.\nnone | will fix quote problems, but otherwise won't add quotes that aren't present in the original.\nIn any case, the current PR generates a lot of diffs, because there are a lot of missing quotes in some of the testbase cases.\nIf we're happy with the PR for the interim, feel free to merge it; we can add a new option later. I'm also going to float up some of the existing attribute errors so that they can be more descriptive, but I can do that later, too.\n. > So the question is how concerned should we be about changes in the output message text?\nMinimally concerned. One of the goals of Tidy is to warn the user about stuff. This particular item is TidyInfo, so it can be turned off with show-tidy-info to no. Unfortunately that turns off some of the dialogue messages, which is why there's a separate proposal to tune them (deferred until 5.7, as 5.6 is really the 5.5 stable release).\n\nAs expressed elsewhere I just wish this type of change was at the beginning of a new release cycle, giving us time to deal with feedback, if any... and not just be dumped in a new release in Nov... maybe I am being over cautious...\n\nThis is an outstanding bug report from the year and half ago that we never closed! In any case, this is the next branch; when we adopted the quasi-semantic numbering, change is exactly what it's for. Version 5.6 is different than 5.4; stay on 5.4 if something breaks in 5.6. And any changes made to 5.6 will be limited to bug fixes only. All of the version 5.5 changes are meant to be stable in 5.6, but 5.5 is not intended to be 100% compatible with 5.4, and 5.7 offers no guarantees that it will be identical to 5.6.\n@geoffmcl, we shouldn't be too concerned about changing the output text, especially in a next branch; scripts should be able to deal with them, because scripts never have any idea what the output text is going to be, other than test cases. Broken scripts can turn off show-tidy-info if needed.\nAPI users, of course, can choose to filter against any messages they want, but Tidy CLI can't do that unless we want to support a switch for literally every possibility that exists, and I don't think anyone wants to go there -- that's much too granular.\nLonger term thinking, we can certainly consider additional warning categories. Maybe TidyInfo isn't appropriate for this replacement, but TidyWarning is too severe. If users want notice of other \"silent fixes\" (or decide they don't need to see them), then perhaps a new category is in order.\nAn additional complication is that current show-tidy-info still controls some of the dialogue messages, which is why there's a separate feature request for message granularity. Essentially, an option to affect the error table, and another option to affect all of the other stuff Tidy puts out. Put the user in control instead of Tidy developers.\nI don't like the idea of --strict; what does that me? Strict what? Adding quotes isn't \"strict\" behavior in cases where quotes aren't needed. Does it mean strict reporting? Why do we want to add another option to control report output when there's already another proposal to make this simple (i.e., show me errors, warnings, info)? This is kind of pointing towards another message category, in that case.\n\nI am not sure I understood your question about Unquoted attribute value syntax? As you further point out tidy has been double-quoting forever, so does not seem a problem.\n\nIt's not a problem per se, as quotes are always allowed. The question is, should we allow users an option that tells Tidy to leave their missing quotes alone? In the scenario I proposed, choosing \"none\" shouldn't cause new problems; Tidy would still use quotes if they're already in the document; it simply wouldn't add quotes if they're not already present in the input document. In this case, though, Tidy would still do what it does today, e.g., title=my page becomes title=my page=\"\".\nIn any case, I'm willing to leave well enough alone on that last point; quotes never hurt anything, but I wanted to invite conversation because, hey!, missing quotes isn't an error condition.\n. Glad you came around! I bet that if we merge the later one, it closes the prior one. Or... maybe not.. @zanona, it took a while, but I think that this change addresses your feature request, so I will close this issue. Feel free to work with the latest next branch.\n. Nope, +x would have been a mistake. Probably a result of my recent experience with VSVC 10 and manually copying files. Good catch, and sorry 'bout that.\n. It wasn't MSVC's fault; it was not having access to git; zipping them in Windows and Unzipping on macOS was what did them in. I'll remember to double check these next time.\n. You're assuming that we use CPG keys.\nGiven that this is a source code repository, what's your specific case for \"verify that it is coming from the same source\"? Verify that WHAT is coming from WHAT same source? To verify that forks or clones on other repositories match what we have here?\nFor binaries, we probably should provide a hash, but if anyone usurps our control over the site, they could publish fake hashes pretty easily, too.\nI would suggest that you only use https or ssh to clone the repository from this site directly. Or I'm completely misunderstanding the nature of your request.\n. @kmaradona, did you get this resolved? I know it's now half a year later, but if you're still having trouble getting the newer version of Tidy running on your Mac, then please feel free to re-open this issue.\n. Copyright is hard. Also, it's now 2016.\nThe license is the original W3C license (I believe), and any contributions always continue to belong to the original contributor (barring a contributor agreement that Tidy has never had and that I would not support, e.g., an agreement assigning copyright to the W3C or HTACG).\nTherefore the University of Toronto copyright doesn't poison anything per se; they contributed to an open source project under that open source license, and that open source licence still applies to us today. Not even we can change the licence, as all of the existing copyright holders (i.e., everyone who has ever contributed to Tidy) would have a valid legal complaint against us. (Well, we could change the license for future code contributions, but that's not really useful, and would only apply to future code).\nGiven that the license applies to the original W3C code, I would suggest we leave the original W3C copyright intact, including the 2003 date (unless there have been official W3C contributions since 2003, and of course, HTACG is a W3C community group).\nHowever there have been innumerable contributors since then. Many we know about, many have been lost in the mists of time. I would add another line to the licence file giving us something like this in the end:\nCopyright (c) 1998-2003 World Wide Web Consortium (Massachusetts Institute of Technology, European Research Consortium for Informatics and Mathematics, Keio University). All Rights Reserved.\nAdditional contributions (c) 2003-2016 University of Toronto, @geoffmcl, HTACG, and others.\n. It's trivial to add a new attribute globally in attrdict.h which was reorganized last year to massively reduce the file size (and allowed the strict-tags-attributes option). However there's no metadata assigned to attributes other than the tags that they apply to, meaning that implementing such sorting would be non-trivial.. If we decide to tackle something like this, I'd suggest that a more feasible/useful approach would be simply to specify a new configuration option that takes a list of attributes, in the order specified, and outputs them that way, i.e., \"custom\" as described in the original feature request. \"Custom\" would satisfy all of the other cases.\nThe only other alternative is to massively refactor Tidy internally, so that it has knowledge of which attributes are global vs. tag specific, and although PR's are welcome, I don't think it's something that's high on our own development radar right now.\nThis approach would also leave it to individual users to do all of the sampling work indicating what gives them the best compression ratio, as it should.. Created #613 which doesn't really do everything that @PING asked for, but gives everyone the opportunity to do their own thing. When not used, current Tidy behavior is not affected, however when priority-attributes is populated with a list of attributes, then those attributes will be printed before any other attributes, in the order that they are specified. Any other attributes are written afterward according to the normal sort-attributes setting.\nThis is kind of a cool change, and I welcome the opportunity to always ensure that my id attributes are first, for example.\n. @PING, @da2x, the new priority-attributes can be leveraged to address the original feature request. Sorry it took so long. Granted, it doesn't provide all of the auto-magic features asked, but priority-attributes does let you figure out on your own which attributes you wish to prioritize.\nFuture contributions might be able to enable the auto-magic via the use of the comparator mechanism, and expand the use of the sort-attributes configuration option, but a well-crafted config file should make all of this possible now, so I will close this issue.\n. Added #614 PR to address the documentation issue.\n. Documentation now live as requested, so I will clear this from the queue.\n. The intention was to make strict-tags-attributes the default, which is probably how it got into the documentation that way. We wanted to clean up all of the output tests, first, based on the new default behavior, but then I got sidetracked into a transpacific move, so... thanks for the catch!\nThere are several documentation issues on the tracker now. I'll try to take a stab at them as I migrate back to the online world.. @geoffmcl, this works for me as described, but...\nI poked through the source code and ran many tests prior to testing this PR, and for the life of me, there's nothing that indicated what wrap-php was supposed to have done! I scoured through the old mailing list, but did not look at archived source code for changes, and this is completely strange.\nI\u2019ve also done some testing with wrap-jste, wrap-asp, and wrap-sections, and I can\u2019t seem to get them to affect any of my tests at all!! A brief look at their code indicates that they always PPrintText() in mode CDATA or COMMENT, which the pretty printer is treating identically anyway!\nSo now I wonder this:\n\nShould we perform greater due diligence to find out if these ever did anything?\nWere these meant as \u201cto do\u201d options but never followed up to completion?\nShould we also change their behavior to match your new proposed behavior for wrap-php?\nShould we just deprecate all of them and forget this mess? (there is a nice deprecation mechanism I\u2019m willing to try out)\nShould we deprecate all of them, but implement your new behavior with a new option name (to prevent user confusion)? wrap-php-blocks or wrap-php-elements?\n\nFWIW, the new behavior is desired and I support the PR, possibly as-is if we answer the questions above, possibly with a different option name.\n. I support the change, and being under the weather is making you a bit grumpy, it seems! The reason I wanted discussion was to, you know, discuss. This now puts us in a place where Tidy does something with wrap-php, but does nothing with the other options, meaning that from a user's perspective, there are inconsistencies.\n\"What to do\" hinges on what we might want to do in the future. Do we want to deprecate the other options? That means wrap-php will stand on its own, thus avoiding any inconsistencies. Do we want the other wrap- options to do the same thing as wrap-php does, someday? Then we leave it alone. Should they be called wrap-xxx-blocks if we ever implement them? Then why not make this wrap-php-blocks?, etc.\nIf the vision is limited to one change, then that's not a vision and everything becomes ad hoc. \ntl;dr: I'm just trying ask, where do you see the other options going?. @geoffmcl, this is a perfectly reasonable change.. @geoffmcl, @marcoscaceres, I've added PR #654 that address this, as it was quick and dirty. Instead of hijacking literal-attributes, though, it was simple to add boolean-attributes instead, so this does this.\nBut, I don't like this (or @geoffmcl's original proposal). It limits you to an all-or-nothing approach for attributes without values, and there's a big difference between a boolean attribute, and an attribute without a value.\nAs-is (and in the heart of it, I only implemented @geoffmcl's patch), if I specify in the source document a null attribute, it's still turned into a boolean attribute, and so I regard this new option as destructive.\nAs we're getting close to a planned 5.6.0 release, I wonder if we can simply close the PR, and leave this issue open. I would propose doing this, instead, although additional recommendations would be welcome:\n\nNew option boolean-attributes with the choices \"naked\", \"null\", or \"attribute name\", causing Tidy to print know boolean attributes in any of the valid forms:  hidden, hidden=\"\", or hidden=\"hidden\".\nNew option new-boolean-attributes which takes a list of attributes to be treated as boolean. Using known attributes that are not boolean is undefined.\nResearch additional, known boolean attributes. I'm not sure if our list is comprehensive or not.\nFix how Tidy deals with boolean attributes with illegal values. Right now, hidden=\"false\" is not flagged as an error, and it most definitely is not a valid value!\n\nRight now, today, Tidy already is compliant with the second form, i.e., booleans are given the valid null string value. Browsers and other user agents should not break on this, because it's a correct use of boolean attributes. Thus leaving them naked is only a pretty printing preference. If other scripts or tools break when a null string is found, then that script/tool is not compliant with the standard.\nEdit: And we have to be mindful of XHTML, by the way.. @geoffmcl, you're right, a lot of those new issues, but they're raised by looking at how the patch works. With your patch:\n<mytag id=\"\" name=\"\" gh> becomes <mytag id name gh>, which addresses the feature request, but is destructive to the id and name attribute, which are supposed to be attributes with no values, and we've turned them into boolean attributes, which are not the same thing. It's also not honoring \"literal-attributes\" because now they're not literal; we've dropped the empty values.\nIf want to engineer this in a logical manner, then we do have to consider how we handle boolean attributes overall, thus the related bug being mention, and the overall expanded scope. Like so many things with Tidy, a seemingly simple change has unintended consequences.\n. I'll close this as it's not actually a bug and no support is needed. If it's submitted in a PR, will he happy to accept. Thanks for reporting.\n. Pinging @alexneblett, as some simple source demonstrating the issue would still be appreciated.\n. @alexneblett never came back, but what I think he's asking for is for Tidy to recognize display: inline-block and treat span (and presumably other elements) as such during pretty printing.\nThat would open us up to having to interpret CSS, and possibly Javascript, and not just for this particular issue, but for a plethora of new issues. We kind of arrived at the conclusion that Tidy shouldn't bite off more than it can chew while discussing custom-elements, so I vote for closing this. I won't hit the close button just yet in case I'm misunderstanding something, or in case anyone else has additional thoughts.\n. @maxfancourt, sorry, I've been away and missed this. The issue is still present in 5.3.14, which Balthisar Tidy was just updated to use.\nLet me consider taking @geoffmcl's patch into an option, as I gently return to the coding world.\n. I will also close this in favor of #486. Don't worry, these close issues will still be referred to from the other issue, but this will help me consolidate a lot of these types of issues into a single issue, since they're related.\n. Made the API documentation more explicit for the first item, and the second concern as already addressed during a documentation spree a bit earlier this year.\n@AthanasiusOfAlex, thanks for the report.\n. @geoffmcl, I think those are legacy files, given that he based off of master instead of next. I think they were all deprecations early on.\n. @geoffmcl, I'll be happy to look at it, too. I'm working through our outstanding issues by oldest first, so I think this one will come up in the queue soon. If you beat me to, then you're welcome to implement the fixes, otherwise I'm hoping I'll be allowed some time this weekend.\n. @geoffmcl, afraid I won't get to it for a few days, unfortunately, in all likelihood. Will try to sneak a peak.... @geoffmcl, I've still not reviewed this, but this sounds familiar with #554, where I'm playing with the case of attributes selectively... maybe have a look.. @geoffmcl, sorry, I've been incommunicado in the great forests of Canada. I'll try to have a look over the weekend.. It's working quite nicely for me. I pushed back changes to address some merge conflicts in light of other PR's that were merged. If no objections or you don't beat me to it, this is a nice fix.\n. @marcoscaceres,\nCheck out the new README/MESSAGES.md in master to get started on where to add the strings.\nAlso take a look at message.c/h to try to use an existing output routine, which will ensure the message gets output to whereever CLI and LibTidy users expect them. If none of the existing output functions, e.g. TY_(ReportNotice) are suitable, feel free to write your own using one of the existing ones as a base. Don't be tempted to use message or messageNode or any of the non-namespaced functions directly.\nYou'll probably want to use TY_(ReportWarning).. Let's move the conversation back to the issue. If you'd like to pull it and push it as a branch here, we can continue working on it without requiring rights on @marcoscaceres repository.\n. Should I merge everything we've both okayed? I'm still GMT-5, so might be able to get to it tonight.\n. Since the actual issue raised has been addressed, I will close this.\n. Given that this is in master now, I'll close this issue. Feel free to reopen this is I've missed something.\n. Let's move further discussion of this to #486 (I will also rename that thread), and I'll close this, because they are really quite related in terms of a fix/refactoring.\n. Given that this is released and distros should be picking this up now, I don't think there's much call for backporting to 5.2.n.\nWe'll be happy to consider back pointing future bug fixes to 5.4.n.. Please test #509 so we can close.\n. @ralfjunker, that's actually how I'd prefer to do it, but I see that Tidy's existing code uses the enum pretty pervasively elsewhere. And we still support K&R as far as I can tell (or at the latest, C90), and I always have a hard time remembering where I can declare new variables without breaking other people's compilers.\nRefresh my memory, and I'll clean it up ;-)\n. Reminder to self: C89, so no issues with context. Updated per @ralfjunker's suggestion, merged, and closed.\n. @geoffmcl, this is an interesting one. Can you shed some light?\nThis is an easy fix, but I'm not sure what's going on here. If fix-bad-comments is yes (the default), then -- becomes == and --- becomes ===, but if set to no, -- becomes -= and --- becomes --=. \nIs Tidy behaving properly here? Is the intention when no not to touch the bad comments? Even when no, it still prints a double-hyphen followed by an equals sign.\n. Some more: given the source:\n~~~\n This comment - this one, here - has some embedded hyphens that\n     Tidy will change to equals signs = \n This comment -- this one, here -- has some embedded double hyphens that\n     Tidy will change to double equals signs == \n This comment --- this one, here --- has some embedded triple hyphens that\n     Tidy will change to triple equals signs === \n~~~\nAnd fix-bad-comments no :\n~~~\n This comment - this one, here - has some embedded hyphens that\n     Tidy will change to equals signs = \n This comment -= this one, here -= has some embedded double hyphens that\n     Tidy will change to double equals signs == \n This comment --= this one, here --= has some embedded triple hyphens that\n     Tidy will change to triple equals signs === \n~~~\nWith fix-bad-comments yes it works as we would expect:\n~~~\n This comment - this one, here - has some embedded hyphens that\n     Tidy will change to equals signs = \n This comment == this one, here == has some embedded double hyphens that\n     Tidy will change to double equals signs == \n This comment === this one, here === has some embedded triple hyphens that\n     Tidy will change to triple equals signs === \n~~~\nWithno, Tidy is trying to fix bad comments just enough that no invalid output is occurring, rather than prettying-up the output as with no. However it's failing in the case of greater than two hyphens, so I think I've converted this feature request into a bug report.\nMoving forward, I see two options here:\n\nI could ensure that two hyphens are never printed, so that --- becomes -==, etc., but then the fact is, we're always preserving one of the hyphens, which seems kind of silly.\nIn order to simplify things, I suggest we simply eliminate fix-bad-comments, and always simply fix the bad comments as if it were yes; and, of course, indicate in output (per the feature request) that this is happening.\n\nAny thoughts?\n. Okay, a few more notes while researching this. ColdFusion (which is still a current application) uses <!--- ---> for comments, and the only way to ensure that Tidy does not interfere with them is to ensure that fix-bad-comments is no; so strike the idea about eliminating fix-bad-comments.\nHowever we still have an issue: when yes, ColdFusion comments won't work, and when no, bad comments still slip through (i.e., Tidy generates bad code).\nHowever... double hyphens are only bad when HTML supports SGML, and it appears that HTML comments are no longer required to be SGML comments, for all versions of HTML. \n. Continuing on, it looks like the working group is dropping the requirement for SGML compatibility for comments, i.e., we don't have to touch consecutive hyphens for HTML. However the old-style validator still balks at the hyphens, but the nu validator gives all of the extra hyphens a pass, with a warning that they're not valid in XHTML (and by extension, we can assume XML).\nSince we support XHTML as well as XML, we still have to behave differently.\n@geoffmcl, yup, looks like we're active at the same time. I'm not sure if the no behavior is correct, either, because it still changes the trailing hyphen to an equals sign, i.e., it's trying to make a fix, but isn't successful if there are three hyphens in  row.\n. @geoffmcl, still cross-posting...\n\nDefault to no, and tidy does nothing. No fix or warning\n\nI agree to this, but it's still broken, and I'd want to fix this, i.e., ensure that Tidy really does nothing, because right now it's doing something.\nIf set to yes, this breaks ColdFusion, and I'm okay with that. Can we agree that given this input, we should get the following output for each case?\nInput\n~~~\n This comment - this one, here - has some embedded hyphens that\n     Tidy will change to equals signs = \n This comment -- this one, here -- has some embedded double hyphens that\n     Tidy will change to double equals signs == \n This comment --- this one, here --- has some embedded triple hyphens that\n     Tidy will change to triple equals signs === \n- Cold Fusion uses this syntax for comments. -\n~~~\nno (touches nothing)\n~~~\n This comment - this one, here - has some embedded hyphens that\n     Tidy will change to equals signs = \n This comment -- this one, here -- has some embedded double hyphens that\n     Tidy will change to double equals signs == \n This comment --- this one, here --- has some embedded triple hyphens that\n     Tidy will change to triple equals signs === \n- Cold Fusion uses this syntax for comments. -\n~~~\nThis example touches nothing, and I agree no warning for HTML. But what about XML or XHTML? These are error conditions preventing validation. I think we should issue at least a warning (probably error) for these.\nyes (breaks ColdFusion)\n~~~\n This comment - this one, here - has some embedded hyphens that\n     Tidy will change to equals signs = \n This comment == this one, here == has some embedded double hyphens that\n     Tidy will change to double equals signs == \n This comment === this one, here === has some embedded triple hyphens that\n     Tidy will change to triple equals signs === \n= Cold Fusion uses this syntax for comments. =\n~~~\nFor XHTML and XML, yes would mean no change, since we're fixing things. We'd issue TidyInfo for each of these changes.\n. > But do not understand exactly why you say yes breaks CodeFusion. I thought yes was to provide a fix for ColdFusion\nYeah, I was confused by this, too. But yes turns ColdFusion comments into standard comments, and leaves them broken in ColdFusion. ColdFusion users will put source code to Tidy, then back to ColdFusion, so this fix breaks their comments in CF. CF on its own will never output a CF comment, because that would be broken; they're already stripped away for final use. I can't imagine that the intention was to make a CF source document ready for the web, because it would contain all of CF's code. It'd be like outputting a .php document without processing it via PHP first.\nEnjoy dinner! I'll work on this.\n. @geoffmcl, the thing I don't like about the proposed patch is that it forces the fix for non-HTML5 documents. Thus it would break, say, ColdFusion for HTML4 or XHTML users, with no workaround, i.e., there's no option for no, and I really mean it.\nHowever! It would be trivial to make the option an enum without breaking config files: auto, no, and yes, where auto acts like no for HTML5, and acts like yes for everything else.\n. I've updated the PR with the new auto option, which is now the default and behaves appropriately acting as no for HTML5 documents, and yes for everything else. \nThis broken one existing test case; see the commit notes on that separate PR over in the test repository.\nIncidentally this fixes a TidyAutoState bug that's been in the source for a while! Luckily no test cases were affected by the fix.\n. Continuing...\n\nPrincipal: Where possible tidy should output fully valid HTML, and not just almost tell me what else I could do... that is, not output invalid html, in any circumstances... and if tidy is not going to fix the problem, or can't decide, then should flag an error and not output anything, unless forced...\nDo we all agree with that principal?\n\nYup, which is why I considered leaving the default as yes; I think the auto I just added is a better solution.\n\nwhich make me wonder why tidy ever attacked the <--- as well... and did not try to get into why <!-- a -- b --> is an error, in legacy docs -\n\nFor the <!--- case, I just added this as part of the fix, per the specification: \n\nwith the additional restriction that the text must not start with a single U+003E GREATER-THAN SIGN character (>), nor start with a U+002D HYPHEN-MINUS character (-)\n\nAnd the second case causes issues because\n\nnor contain two consecutive U+002D HYPHEN-MINUS characters (--)\n\nWe could have changed just the correct number of hyphens to bring us into compliance, but it looks like Tidy has always changed all of them as it looks more pretty.\nThe warning from the nu validator is saying that the double hyphen is okay in HTML, but it's not mappable to XML because it doesn't comply with the SGML comment format.\n\nI have adopted the idea to add Issue #XXX to all new comments, in the code...\n\nI can follow suit. Some of my PR's are major infrastructure where it wouldn't be practical, but for something on this scale, I'll remember to do that.\n. @jidanni, thanks for checking back in, and sorry this is taking so long, but we've got it almost ironed out. With the new setting, if the PR is accepted, Tidy will report an Info: message each time a change it made, but if this is too noisy, you can set show-info to no, and the change will still be made.\nNote that because of the large possibilities, Tidy won't say \"---\" becomes \"===\", because each of these strings can be infinite length. Instead, it will simply indicate that adjacent hyphens were changed to equals signs.\n. Okay, it's active in next.. I regard Mozilla MDN as a reliable source in addition to WHATWG and W3C, and they say only phrasing content is allowed inside a pre element, and this does not include div.\nTidy isn't just a linter; it's meant to prevent bad HTML, including that generated by non-conforming tools.\n. Closed by request of @MaVo159.. I'd recommend marking them as warnings, because Tidy is generating valid HTML with the U+FFFD character.. > Started a README/MESSAGE.md, and understood some things, but then saw new stuff that do not yet understand.\nI'll have a look at fleshing it out. \n\nDon't worry about the code to do the actual message formatting yet. I will handle that...\n\nI may pull your branch and add something anyway, just to be sure that my instructions work! I'm assuming you're going to use of the existing message output functions.\n. @geoffmcl, go ahead and add another ReportXXXX if you like. I actually have hopes of completely overhauling the messaging system in 5.5.x (more discussion on that later) in order to address the current inflexibility of having to write a new output function, and to address some of the feature requests like #476 and #477 in a flexible way, and especially to address the horrible kludge that's tidyErrorFilterKeysStruct (my kludge, so I take responsibility for it).\n. Testing on macOS was perfectly fine, so I've merge your PR, and will be happy to close this one!\n. A PR would be welcome!. Since we're awaiting a PR, and there's no actual bug or support request here, I'll clear this from the stack.\n. Could you provide some sample HTML for context?\n. I'll have a look.... I'll take this up, but only if we start a 5.5 release (5.4 should be released soon, and there are some smaller issues that can still be addressed in order to release a 5.4). I would propose breaking past behavior and redefining what TidyIndent and what TidyVertSpace do, and probably roll TidyBreakBeforePR into a new set of configuration options that give better granularity over vertical space.\n\nRight now TidyIndent (indent) controls a lot of vertical space on its own, and it's not possible to only indent without inducing extra wrapping. This should change.\nTidyVertSpace is a mess. The current choice of AutoBool was probably chosen because it already existed. I'd change it back to a plain bool:\nNO gives the current behavior of AUTO, except INDENT no longer affects output in this mode. Right now AUTO will keep everything on a single line (wrapping if WRAP is on), but still adds random tabs or spaces if INDENT is on. That's not logical.\nYES enables fine grained control will additional configuration options, but will always give space to logical things like non-empty SCRIPT, to DIV, tags defined in NEW_BLOCKLEVEL_TAGS, HR, and most other block elements. The new configuration options simply won't work unless this option is YES.\nVERTICAL-SPACE-HX, defaults to YES. If not, then headlines will be put onto one line (subject to wrapping).\nVERTICAL-SPACE-LI, defaults to YES, applies to LI.\nVERTICAL-SPACE-TR, defaults to YES\nVERTICAL-SPACE-P, defaults to YES. Some people, like @LWillms, would like to set this to NO.\nVERTICAL-SPACE-BR, is the renamed version of TidyBreakBeforeBR.\nVERTICAL-SPACE-CUSTOM, defaults to NO, because HTML5 custom elements are inline by default, but this would give users the ability to treat them like blocks for pretty-printing purposes (this is in relation to another feature request, and we don't have custom element support currently).\nAny others? It would be impractical to offer this for EVERY element. If the can be some logical grouping of tags, then we could do that instead, e.g., the way I've grouped all headlines together.\n\nFeedback is appreciated, especially from people who depend on current behavior, because this is a current behavior breaker.. @LWillms, your understanding is correct.\n. @rkopaliani, are you trying to suggest that Tidy should catch instances of em-dash where hyphens are supposed to be used? Are you using some non-ASCII text editor that's converting -- to an em-dash character? Your sample code includes em-dashes for some reason...\nI agree that Tidy should report some type of error when encountering what is actually garbage, though.\n. I kept it as is; I plan to re-work the whole pretty printing soon.. Test and working on macOS, so merged.. @eric-brechemier, conceptually they are different.\nStrings generated by -xml-help are necessarily CLI switches, and CLI switches always take a leading hyphen (although on Windows, I\u2019d argue that they should accept a forward slash as well). CLI switches are part of the HTML Tidy console application, and not part of LibTidy.\nStrings generated by -xml-config are not CLI switches; they\u2019re configuration options used by LibTidy internally. These can be specified in a configuration file, and/or can be set by name when writing your own programs linked to LibTidy. Their names don\u2019t include the double hyphen. However the double hyphen is a signal to the console program that a configuration option is being specified on the command line.\nSo, there\u2019s not really command line arguments, although they can be used as command line arguments.\nFor the man page (which looks awesome, by the way) or CLI help, showing the double hyphen is appropriate, but the -xml-config output can be used by LibTidy users, for example, to generate their own documentation where the double hyphen makes no sense, because their LibTidy-using program isn\u2019t a CLI program.\nIt\u2019s not too much of a bother to make the change; it would be rather easy, but conceptually they\u2019re not the same, so I will close this.\n. Hmmm.... I'll have to look into this, too. I've just realized that the man page, for example, indicates this:\n~~~\n       -output <%s>, -o <%s> (output-file: <%s>)\n              write output to the specified \n~~~\nThat's pretty ugly, and I don't remember it always being that way... yet looking back at 5.2, yup, ugly as heck.\nAppreciate a PR if you want to work on it, @eric-brechemier, otherwise I can take a look at it.\n. @eric-brechemier, take a look at the issue492 branch that's in the repo. It fixes this issue entirely. However, I'll leave this open because the XSLT still shows the ugly (output-file: <%s>) in the man page, and I don't have time to look at it right now. If you can improve the man, we can merge this in.\n. Yes, not quite ready for a PR yet, but that should be easy to fit in.\n. Actually, @geoffmcl's pointing out the eqconfig issue fixed the man issue, so there's nothing else to review. Merged, and closed.\n. Kind of the same thing as I mentioned in #491 is going on here, too. -xml-config isn't intended solely for console argument use, but for LibTidy users, too, where CLI switches don't even exist.\nMaybe it could work with a new key instead of <seealso> (e.g., <console_arg>) so that LibTidy users doing their own transformations can safely ignore these XML elements. However, implementing this isn\u2019t a simple task. Take a look at the docs_xrefs[] structure in message.c, as well as the arrays defined just above it. These are all related to the tidyOptGetDocLinksList() family, which work with known, valid, LibTidy types, and CLI switches aren\u2019t valid types. (If you look in tidy.c, you\u2019ll notice that all of the CLI switches are converted to options during execution.)\nTo do it the right, \u201cTidy\u201d way you\u2019d want to define another structure with string values for the CLI switches, and write new iterators and accessors, and finally call them from the console application. I\u2019d welcome a PR, and either @geoffmcl  or I could coach you along the way.\n. There's nothing currently in cmdopt_defs that relates it to a config option, though. But you're right: a structure can be avoided easily by adding a new field to the CmdOptDesc type and adding the related Tidy option ID to the structure in tidy.c.\n. I guess if @eric-brechemier is motivated enough, that could work.\nIf we were outputting TidyOutFile, we'd have to get its name (output-file) and then look in every array in cmdops_defs hoping to find a eqconfig starting with output-file+ :, and then we know name1..3 as cross references. Definitely want the colon in the test so you don't match on substrings...\n. I thought I did make it sound easy!\n\"That's the cat's\"? Probably gateau's not a cognate of the Spanish gato.... @eric-brechemier, have a look at #510.\nIf it's okay, I'll merge it and then close this issue.\n. Merged, and closed.. Actually I have an open PR that surfaces gnu-emacs-file as a first class configuration option. Why anyone would want to use it is up to them, but in theory you can now specify it in your config, and there's a proper description for it.\nIt's a fairly large PR #504 and so some review is appreciated before I merge it.\n. As this is merged, I'll close this issue. However this was simply an expedient fix. Maybe we should open a new issue to expand the _tidy_option struct to include an internal flag. This would really only hide the option, though, meaning that it would be a so-called \"undocumented API,\" but maybe it's better than what we have now.\n. Actually, I'm going to remove it from the configuration entirely, and append it to #507. I'll replace it as a configuration option with an accessor function. It will still be publicly available for API users, but no longer available as a configuration option.\nAlthough I don't like the current fix, it was morally the right thing to do, as the console application uses the config option directly, and we shouldn't have \"secret\" API's. . And... done and pushed to next. I'll leave this open pending comment, but feel free to close.\n. I'll close this one in order to PR against next.\n. @marcoscaceres, typically they follow \"releases\"; we're getting ready to pull the trigger on 5.4 in the next few days, and they usually jump on releases.\nAny reason you don't want to build your own in the mean time? Homebrew has a cmake formula, and as long as Xcode is installed, that's all you need.\n. Ok, got it. 5.4 will be released soon, but in the future if you need a developer-signed macOS installer for non-release versions, I can periodically post them. Usually I only go through that trouble for official releases, though, because no one bothers to ask. ;-)\n. Can you use LibTidy directly? There area couple of callbacks that will provide just the warnings and errors, and you can capture them into your own structures without having to parse anything.\n. If you can relate the file name in your script to the tidied file, then I think @geoffmcl's solution to use --gnu-emacs yes will make parsing so much easier.\nBarring that, it would be fairly trivial to add something like --delimit-reports or something to Tidy. This could fence off the error report table with <<<<<<<<<<<< and >>>>>>>>> or ++++++ and ===== or something. Actually, this would probably be better as a CLI switch than a Tidy config option proper.\n. This will break LibTidy users who have ignored the deprecation notices for the last 10 years. If this affects you badly enough that patching your own code isn't feasible, please continue to use master until you can update your applications.\n. Actually, I'd like to have figured out a solution to this. I'll leave it closed for tidiness, but might consider adding it to a personal to-do list, given that we support other types like this. Like so many things, this would raise a lot of questions related to behavior that I don't quite have time to discuss right now.\n. @bdubbs, those are generated automatically by Github, I'm afraid. Without re-writing all of our tags, do you have a suggestion on how to accomplish this?\n. Got it. Done.\n. I simply downloaded the files that Github provided. For some reason when downloaded, they has the names that @bdubbs wanted automatically, so I simply dragged them into the releases.\nI guess I'm saying, Github managed the line endings that way for some reason.\nFWIW, the ZIP format is also the default archive format on Mac OS X, and it uses Unix line endings, so I guess the only assumption I would make is that the unarchiver should change line endings itself!\n. @geoffmcl, have you had a chance to test this? I'm making great progress on our oldest issue, but unfortunately it's intertwined deeply with the changes this PR makes.\nI've been running it stably, but mostly on macOS and Ubuntu... thanks!. Hi @geoffmcl,\nThanks for having a look. I completely understand \"other projects,\" and I get your point about small commits, which just wasn't possible in this case. For white space, I configure diff to ignore it. In a lot of cases, the white space changes were simply made to match the style of the rest of Tidy's code.\nI really hated to include WCHAR support, and so this is one of the chief reasons I like to have a Windows developer take a look. I do have gcc and MSVC on a Win10 installation at home (my preference, however, is influence by being forced to use Windows all day at work). Having those does not make me a Windows developer with specialized knowledge about the Windows operating system, thus your comments on the Windows platform are especially important.\nLikewise supporting larger ints and much of the rest of the printf formats was a big internal debate. Add them later? Keep them now? Personally I favor dropping them, but I left them in because these decisions can't be mine alone. It sounds like you concur with the lack of need, and so it's absolutely no skin off my back to simplify these. By way of example, you can see that I didn't even bother to specify an API for doubles and pointers!\nRather than your patch above to accommodate WCHAR, I'd propose simply cutting it out. If you, as a Windows dev say that it's not needed in Windows, then by all means, I'm ready to yank out platform specifics in a heartbeat!\nThanks for the feedback.\n. @geoffmcl, thanks for the continued feedback. I am very happy with the cleanup by eliminating all of the types. The internal debate was mostly centred about people adding strings and using new types for whatever reason. The current code is much cleaner.\nStill...\n\nAnd given that we deal with html, I can not see us even needing int and uint.\n\nThere are exactly four uses of %d in the strings, and I know for a fact that they predate my involvement! ;-)\nI went ahead and left doubles in there, as they're not causing any harm. Maybe we'll add benchmarking or something in the future, and want to report that Tidy took 0.0025 seconds to complete (although I'd use milliseconds myself...).\nAlso I spent a couple of hours cleaning up my Windows environment, and things look good on Windows now, too.. Hmmm... not sure why my command line merge didn't close this automatically, so I guess I'll close it myself.\nThanks for the check, @geoffmcl.\n. @tuanmh, I've added 5.1.4 as a pre-release under Github releases, and updated the binaries site with them again.\n. See #514 instead.. It builds and runs, but all of my Windows installations have the runtimes installed, so I can't actually test that the libraries are truly statically linked, so I'm okay with this PR.\nMy only question is why the ugly license from the tidy.h header with the stupid Doxygen comments? The older .md file was a lot more readable. \n. > Maybe it could be a straight copy of LICENSE.md, or maybe delete what I hastily added, and rename that to .txt?\nEither or. I've been spending a lot of time with Doxygen lately, and the ugly syntax is driving me crazy. I've got to say, though, that it generates pretty websites.. Hmmm... I thought I commented on this as tested a few days ago. Works for me.. > But as usual it is quite difficult to review a 230K diff file... As suggested previously, it would be much better if done in increments, and keep issues separate... new feature vs formats vs ... but ok, understand when you are on a roll, you are on a roll... ;=))\nYeah, sorry about that. When I was looking through the code to figure out where to wrap text in the console, it seemed like a good opportunity to document it, too. The actual functional changes are pretty small. I'll resist that urge to document in the future (i.e., change existing documentation in a separate step).\n\nWhat exactly is word wrapping? Is this addressing a bug, or a specific Feature Request. Simply, why do we need a new configuration, --console-width?\n\nFeature request. One that I've had for a while. \n\nlanguage-en.h I can see you sometimes removed the newline, \\n, but in other case kept, or added them... And I can still read output to 78 characters per line here and there... Quite confusing, sort of contrary...\n\nI kept the newlines where paragraph breaks should occur, or when wanting to force a line wrap, like in the help text. In some cases it was grouping the newlines, e.g., \"\\n\\n\" just to make it easier to manage the paragraph text. Ah, yes, that note about 78 characters per line is still important for East Asian languages, because they very often don't have spaces! Strictly speaking I could borrow code from Unicode people that implements rules for East Asian line breaks, but I think most of that is C++ code. If anyone ever bothers to translate into Chinese and they raise a fuss, I can revisit this issue.\n\nAFAIK the console will wrap a string anyway...\n\nIf the console is fewer than 80 characters, it won't wrap at work breaks; it just wraps wherever. But mostly I like to work with wider terminals, and this allows wrapping much longer.\n\nif I have redirection in place, such wrapping will now not take place\n\nNope. If you have redirection in place, then wrapping will be per the console-width setting, which defaults to 80. We could change this to 78 if desired. In effect, with redirection Tidy behaves like it always has done (other than 80 vs 78 columns).\n\nJust a small coloring changed noted in the API docs since 5.4.0... while I consider myself a poor judge of style, I do not like the red on green... seems to lack sufficient contrast, but perhaps that is just my failing sight...\n\nYeah, that does look hideous, both with the color theme but also in its own right! I'll make that change in the word_wrap branch.\n. I'll open an issue tomorrow, but the biggest argument is, if you pretend it doesn't exist, then there's zero difference in how Tidy behaves. If you know that it exists, you can use the full width of your console, or when redirecting, eliminate carriage returns from the file output. Perhaps the biggest gain is for message API users; they gain complete strings for UI applications without spurious newlines that upset formatting with proportional fonts or different sized text containers.\n. > So why should libtidy, get involved in this? Simply, IMO, tidy should not be involved in this... for many reasons...\nActually, that's an excellent point! There are several more so called \"configuration options\" that I'd like to gut from LibTidy completely.\nFrom the pure library standpoint, Tidy should be delivering strings, unbroken, without any assumptions about formatting. The console application -- as a LibTidy client -- should be responsible for all output, including wrapping the text, but other things such as displaying messages and errors. The Library shouldn't be doing any of this.\nSimple task to move the word-wrapping from LibTidy into the console, leave the strings in LibTidy without stupid newlines, and purify the library a little bit.\nOther things that should be removed are things like show-info, show-errors, etc., that are very definitely client-related and not library related, but they're on my longer-term to-do list. The new message callback API will make this a LOT easier by not counting on an output sink that thinks it know better about the environment than the user.\nIn any case, moving the functionality to client is something I'm willing to do, but we absolutely cannot have hard breaks in the language strings. That's just stupid: it's bad data management; they're not needed; and it's committing the cardinal sin of mixing presentation and content, something that Tidy itself tries to prevent by, for example, creating CSS classes where necessary.\nBut, yeah, this change would definitely permit removing the console-width option. This is a good change. Thanks for setting me straight.\n. Do you have a valid argument against removing new lines? You're seem to be rejecting change without a valid reason why it's a bad thing. . Closed as stale, and not directly related to Tidy. Hopefully @clandmeter or @jirutka accept the PR.\n. @thorade, @geoffmcl, I've added candidate #619 that will add a mutable (via show-info) message when a closing tag is missing and omit-optional-tags is not yes.\n. Merged, and closed.\n. Agreed. And conditional in source. . @geoffmcl, yes, eliminate it from tidyenum.h, and make sure it's not present in the base English header. Then all you have to do is ./poconvert.rb rebase, and you will have fresh POT, PO's, and headers in the other languages without the extra string.\nI'm not sure if it's in the present code, but for future reference, we can probably start using the option rebase {git_hash} which will mark things as fuzzy in the PO's, meaning that if we change a string in English, the other languages will have that string marked as \"fuzzy\" so that translators know that something changed. Not needed for string deletes and new strings, though.\n. This was merged, so closing.\n. Test successful on macOS.. Confirmed as working on macOS.\n. Works for me. Nice addition. . Unless there are more comments in the next few days, I suggest closing this as unrelated to HTML Tidy.\n. Seems okay by me.. @geoffmcl, @spk, from the Mac perspective but not as a pkg-config user, I'm okay with this. The default make install isn't broken, and the only difference is the include headers are now in a subdirectory (but still within the default header search path).\nHowever, when attempting to make package I encounter this error on macOS:\nCPack Error: Cannot initialize CPack generator: PackageMaker.\nThis makes sense. PackageMaker on macOS is long-deprecated. Let me see if I can find out how to tell CMake to use the current tools, or at least put in a guard for macOS prior to merging this.\n . Okay, I found the macOS issue, so I'll merge this and then apply the macOS fix.\n. I'll close this, as it's not a Tidy issue. We're happy to keep support threads open if there's active participation, but this has gone stale.\n. Is there a bug in Tidy that prevents the PHP maintainers from including us? I'm not sure this should be an HTML Tidy open issue, but rather on PHP's tracker?. Looks like it was solved. If anyone comes back, feel free to re\u00f6pen this issue.\n. @geoffmcl, there are no regressions in the next testing branch, but there are no test cases using gdoc. However when used with gdoc, it works as advertised.\nI suggest that we can accept this PR as is, however, I wonder if we should also check HTML version level, @deathbaba. For example, in HTML5 documents, name is conforming but deprecated:\n\nAuthors should not specify the name attribute on a elements.\n\nThis PR correctly allows id to be used, as is current standard for HTML5, but I wonder if we should flag a warning if name is found (in HTML5).\nFor HTML<5, I don't see an issue.\nWe could accept this as it fixes gdoc, then open another issue to consider the deprecation of name.\nThoughts?\n. Fair enough. If no one objects to merging this, let's plan on rolling it at the same time as 461 and 338.. #461 merged, so closing this.\n. @geoff, confirmed working in both HTML4 mode (i.e., current behavior) and HTML5 mode (desired behavior) on macOS.\nNice fix on the HTML detection; this is definitely preferable to adding a new option.\n. > How do you want to handle this?\nThanks for having a look, @geoffmcl. Go ahead and add the patch, and understand that the patch will become effective with #540. I'll try to have a look at issue-461 today.. PR #617 fixes this; no regression test failures, and sample output looks acceptable. Still need to use literal-attributes to avoid entity substitution, though.\nThis is a minor change; I will merge PR if no objections in next day or so.\n. Merged and closed.\n. Thanks. I'll leave it for tonight unless you get to it first -- It looks like I'm about to support the better half for most of the rest of the day ;-)\n. Not sure why this was closed. The Bash scripts did not include this topic. Re-opening. Sorry for any confusion delivered via email.\n. This will be a longer, more in depth discussion. Here are some back references: #330, #269, #261, and #175.\nSo far, there's not been any real interest. Complicating things, in some cases we expect (or get!) different results on different platforms, meaning Travis good 99% of the time, but not 100% of the time.\nI'm open to it, but there's generally never been much of a case for it.\n. I'll leave it open for discussion. Like I said, I'm not against it. It would save me from spinning up a Linux VM for testing, for example. Or a Windows VM for that matter.\nThe Holy Grail would be something that can test Raspberry Pi, Windows, some variation of Linux, and macOS. As you can see, we often delay commits because we like to have confirmation from different environments. Sometimes, though, it's obvious that a change is not platform specific, and so those are usually merged without too much formality.\nEven with this, we still miss things on older platforms. I know @geoffmcl tests on Raspberry Pi and Windows, but I don't know which version of Windows. I only test current macOS and latest LTS Ubuntu, and up-to-date Windows 10 (but only if I expect platform differences). Windows also has API differences, e.g., we don't use positional printf arguments because there's no early Windows support. Now this is reminding me to check if there are any differences between Windows MSVC and Windows using the neat Ubuntu subsystem.\nMaybe there's a case for Travis/Linux just for PR's, and then whoever merges the code still checks the different environments.\nLike I said, I'm open to the conversation.\n. I'll add, it's always the developers' responsibility to check things before posting a PR, but in the end a CI solution could save the maintainers some time by having Github automatically reject things that don't pass the minimum level of regression testing.\n. I recommend changing this to Won't Fix, but I'll leave it open for additional comment. No updates from the OP since May, and no vociferous support, and Tidy isn't a security appliance, so unless someone objects, I'll close this in a few days.\n. Looks like a reasonable patch. I'm probably the guilty party; I do try to keep declarations at the top of contexts, but sometimes they slip by as I'm experimenting. Still, this particular case goes back more than a year.\nI have Clang set up for C89, and it, too, fails to warn when declarations fall below execution in the context. given how closely Clang maintains gcc compatibility, I'm not sure if there's a flag available.\nI've been compiling in Windows a bit lately, and I've got to say, I've not noticed that particular warning mentioned. However on Windows, I usually build \"release\" per the project README, as the default cmake ..\\.. and make don't work for me.\nGiven that I don't debug but only test on Windows, should I be using a different cmake configuration on the CLI to see additional warnings pop up?\n. Hmmm... not seeing that warning in Ubuntu myself with gcc, but odd that Clang isn't giving me that warning either, since it's obviously missing the default case, and Clang is always shouting at me about those.. @geoffmcl, I usually look out for those on Ubuntu, too, because I tend to catch and patch things that crop up when it happens. Since we were talking about MinGW in another thread, I might throw that back into the testing mix, too, now that you have me thinking about it.\n. @geoffmcl, not at my Linux machine right now, so no version. \nI wouldn't bother to publish MinGW bins, only to ensure we don't lose build compatibility. Some FOSS purists might not want to use MSVC.\nEnjoy your dinner!\n. @geoffmcl, I can agree to the patch. I've had not much time on a development machine. If you're available, feel free to push it. Something like this doesn't need a PR, even.. Builds and tests cleanly on Windows 10 and Ubuntu 16.04.\n. Yup, I see it. I'm using MSVC 17, and for some reason the _DEBUG macro isn't enabled for me, thus the function to the non-existent ParseAutoBool isn't being flagged for me.\nI've just pushed a fix. I'm not sure how to enable _DEBUG when building for Windows. For that matter, I should figure out why Clang isn't defining that macro, too.\n. I usually build on Windows using --config Release because that's in the build instructions. I'll just remember to use Debug in the future.\n. Thanks for having a look, @geoffmcl. This was a pre-requisite for #365 and #378 -- infrastructure -- so a feature request really wasn't appropriate. A PR gives everyone a chance to say yay or nay, otherwise it would have been included in one of the bug fixes anyway.\nOops... meant to add, sorry about the commit notes. They were nicely typed up in the PR, and then an extra commit erased them.. If I'm understanding the issue clearly, @AnrDaemon expects specifying a --config on the command line to override the rc file (which by default isn't supported without a build switch) and to override any config file pointed to by $HTML_TIDY in the environment.\nIf that's my understanding, then this seems reasonable. In fact, I'll have to jump through the code to see what happens here. If there's a config file (from any source), are -- parameters honored? I think they should be, to supplement/override the config file. If there's an rc or $HTML_TIDY path set, then I agree that specifying a config file should override the pre-set file.\nIf, though, you do specify $HTML_TIDY without a --config file, then I agree that Tidy should complain loudly.\nI don't plan any action yet, but would like to understand if I understand the issue correctly, and then collect consensus of whether Tidy should behave differently or not. What would a reasonable man on the street expect?\n. @AnrDaemon, we're trying to understand it, but can you please leave more than one-sentence replies? Can you give a very specific example? We think things are working properly, and you're not helping us understand what, exactly, the issue is. Pretend we're stupid, write more than one sentence, and help us understand, m'kay?\n. @AnrDaemon, I see your point, but Tidy is acting as designed. If we changed Tidy's behavior such that it ignored $HTML_TIDY when specifying a -config or using configuration options, it would break other people's existing workflows that depend on this behavior.\nConceivably we could add a new switch -ignore-env and/or -ignore-rc to prevent Tidy from processing these files before handling -config or --options, but then you'd still be specifying something on the command line, and so I'd suggest always using a -config file.\nIf you'd like to open another issue request for that particular behavior, we can move the discussion there.\nIf you'd simply like to achieve the behavior that you want (understanding that we can't achieve it without breaking things for current users), it's trivial to fork the project and make the change in the console application tidy.c right around line 1946.\nIn the mean time, I'll close this issue, and if you think -ignore-env or some other switch is something that you want, please don't hesitate to open a feature request issue for that.\nThanks.\n. @geoffmcl, isn't it about 3 in the morning for you? ;-) I'll merge it, then I'm off to bed!\n. @sballeste, this looks fantastic. Thank you! I'll try to merge it in sometime today.\n. @sballeste, thanks for the contribution. It's now merged, and should be active when you build.\n. @chomse, what do you mean by the \"provided\" DLL's? Are you building from source? Or taking the DLL's directly from a pre-built package? \nAccording to MSDN:\n\ndllexport of a function exposes the function with its decorated name. For C++ functions, this includes name mangling. For C functions or functions that are declared as extern \"C\", this includes platform-specific decoration that's based on the calling convention. For information on name decoration in C/C++ code, see Decorated Names. No name decoration is applied to exported C functions or C++ extern \"C\" functions using the __cdecl calling convention.\n\nI think, though, that you probably want to leave the decorated name intact. You should be able to activate the dllimport in our header file, I would think. Unfortunately I'm not sure how Lazarus links to C code, and if I did figure it out, it would apply to macOS, I'm sure.\n. @chomse, I recommend that you simply build the DLL to your requirements. MSVC is free of charge, and MinGW (uses gcc) is free open source, and is a nice alternative to MSVC if avoiding proprietary software.\n. @geoffmcl, thanks for the many walls of text. I won't address all of them right now, as I'm back from camping. The main point of the feature request is to start a public discussion, and you've provided a lot, which complements my huge wall of text.\n\nDoes it come down to a Feature Request to add an new enumeration option show-other-messages?\n\nPossibly, but only considering the overall messages and deprecating the redundant options.\n\nbuffer all of the document message output\n\nComment made in passing. I have no intention of doing this, but it would be user-friendly.\n\nIt works great for debug mode, where I even output more messages...\n\nWindows only, unfortunately. I made a commitment to you to make this cross platform, and I'll do that eventually, as it's clearly useful. However that's invisible to most users.\n\nWhere is the gain for HTML Tidy? More maintenance...\n\nGenerally, I'm not afraid of maintenance, as that's the commitment that we made for Tidy. I'm referring to maintenance in general, not in sorting output (as I said, not on the radar for me right now). It also means that I'm not afraid of things the potentially reduce future maintenance, even if they're large merges that fundamentally change internals. External API stability is important, but as we're working with next I see things like removing deprecations, adjusting options, etc., as simply par for the course.\n\nand does not mean revamping the message system itself...\n\nActually the message system was massively revamped when we added the new extensible callback API. What I failed to do then was categorize every message, and determine the reason for its output. Most of the errors/warnings are obvious, but there's other seemingly random output that's beyond the users' control. When I say \"revamp\" now, I mean inventory every bit of output, categorize it, and allow the user to control what he or she sees, while at the same time, improving the flexibility of what we can output, without being so rigid. The messaging system is an example of something that's been patched and patched and patched over and over again, and rather than adding another patch, I'm trying to understand how it can be generalized, what's involved, and even if it's possible.\n\nmost of which have been there since the beginning, for 17 years plus\n\nIf something's been around for 17 means means that it's good enough, then we should simply stop maintaining Tidy! It's obviously good enough!\n\nTo me, everywhere, and anywhere, tidy wants to Report, bad html, a problem fixed, a minor change, a big bad problem, etc, etc, ... it should call Report, and then we can 100% control, in the single service, Report, how that is handled... What it sets...\n\nYes! That's the ultimate goal. This branch was pushed here instead of my repo. It's not a proposed PR, and it's mostly a learning exercise to see what's possible. It's definitely a WIP, and probably out of place for discussion in this issue thread. However, what I'm trying to do is:\n\nEach string is associated with a single error level. Right now, some strings have duplicates, and some strings can be used for multiple error levels. The maintenance advantage is predictability of what a string will produce, but also flexibility if we want to change wording.\nThe ability to pass arbitrary, extra information for format strings.\nA single \"Report\" type function that can be used anywhere. This appears possible, but not convenient. Right now during my little exercise, there are some helper functions that take only the required parameters instead of every parameter (e.g., we don't always need an element or a node). I prefer functions to macros, but it would be easy to define convenience macros instead of functions to use the one-Report-to-rule-them-all function.\nInventory all of the output. There are several strings that never have the potential to be called.\nAssigned meaningful metadata to each piece of output, so that later changes can suppress them if wanted, in a generalized way.\n\nI keep using the word \"generalized.\" As a concept, it's not even that modern, but generalization is an important model that, while sometimes tough to implement, makes future maintenance simpler, reduces future API churn, and makes implementation of new or updated features that much easier. Infrastructure is a pain in the ass, but sometimes it's good for the long-term health of a project.\nFor the most part, ignore this branch for now. It's completely experimental while I continue to learn why and when Tidy spouts what it does, and develop a possibly generic approach to handling messages. I'll get there, or fail. Localization started off as an experiment, and the new callback API started as an experiment, and they were both huge changes that helped Tidy rather than hurting it. Have some confidence that I won't propose something that hurts Tidy.\n. I'll close this in favor of individual feature requests.. Great! Anything we need to do to make Tidy more compatible?. Any reason to keep this open here? Is there something that we can do to help enable the Perl module?\n. It looks good. There were some merge conflicts because of previous PR's that I fixed and pushed back. I also changed some of the wording in the new descriptions. In testing, this works fine for me.\n. Windows XP is officially out of support, so I'd have no problem dropping Tidy support for it. It's highly likely that Tidy doesn't work on Mac System 7 anymore, either!\nOn the other hand, @geoffmcl, you were pretty vociferous about continuing Win XP support last time, I seem to recall.. @suchafreak, is there still an issue, or can we close this out?\n. Merged. Thanks, @geoffmcl.. No feedback, and not related to Tidy issue per se, so will close.\n. Solution posted, so will close.\n. Given that the user is warned when elements are dropped, I think we should preserve the existing behavior. Perhaps we can improve the documentation to something like Warning: trimming empty <span> (drop-empty-elements is yes). Or an explanation can be added during TY_(ErrorSummary)().\n. Created #618 that doesn't change the default, but clearly tells the user what to do if he or she doesn't want to drop empty elements.\n. Now that the new message is included, I will close this issue.\n. @svinkle, is there a language that you _are experienced with? I could refactor it into C, as coding is the easy part and the engineering is the time consuming part.\nThere's some precedent in Tidy for emitting messages for valid HTML, namely, the accessibility module. It's a post-processing process to look at the document structure for guideline published by the Web Accessibility Initiative.\nFollowing the design of the current access.c/.h would make such an initiative fairly self-contained without requiring as much fiddling with Tidy's current internals, and without accumulating too many extra duties to Tidy proper.\nI could tackle this in the long term, but would be willing to port if there were an existing design or even just a specification.\n. I'm going to close this as no response from @ogolovanov. Back in the early Netscape/Mosaic days, there may have been a case for this, but comments in scripts are a bad idea, and not even allowing in XHTML documents. For consistency, Tidy's behavior should not parse comments within scripts.\n. @shentino, it would be a simple fix to roll this out for Unixes by default, although as @geoffmcl pointed out, you can build it yourself with a -DTIDY_CONFIG_FILE, but I think this wouldn't address your real issue: this doesn't address the lack of a default /etc/tidy.conf file.\nWhat would you want to see in such a file? The default is blank. I suppose we could provide a config file with every option commented out, but I'd have no idea how to package this for any of the Unixes besides macOS, and I wouldn't want to overwrite existing files during an apt-get install or whatnot. Controlling this in CMake if you build it yourself, though, should be fairly easy.\nAlso, as build this tidy.conf would only apply to console tidy; LibTidy doesn't check for this file itself, and so LibTidy-using applications wouldn't normally pick up these settings.\n. > Probably something as simple as a default definition\nBut that's already implemented! Look at CMakeLists.txt:\n~~~\nif (TIDY_CONFIG_FILE)\n    add_definitions( -DTIDY_CONFIG_FILE=\"${TIDY_CONFIG_FILE}\" )\nendif ()\nif (TIDY_USER_CONFIG_FILE)\n    add_definitions( -DTIDY_USER_CONFIG_FILE=\"${TIDY_USER_CONFIG_FILE}\" )\nendif ()\n~~~\nFor example:\ncmake ../.. -DTIDY_CONFIG_FILE=\"/etc/tidy.conf\"\nOr:\ncmake ../.. -DTIDY_USER_CONFIG_FILE=\"~/.tidyrc\"\nYou're right: if this is enabled, the man page should reflect this. I'll see if there's a way to add this to the dox build phase based on one of these values being set. I added #603 to capture this issue.\nI'm not sure what more you're asking for. Do you simply want to avoid typing the extra -D flag?\n. Got it. I don't have a problem with that. Windows users probably won't care. Let's keep this open a bit to see if there's any reason any *nix users would complain. Given that default installations currently don't build it out of the box, I can't imagine a scenario where some pre-existing files would suddenly cause unexpected issues.\n. next addresses this now, and Unix systems will support runtime config files directly by default, so I will close this. I'll leave #603 open, though, which discusses documentation.\n. @shentino, although this issue is already closed, I'll add some more comments.\nBy default on Unix-like systems, tidy will now look in /etc/ and ~/ for some rc files. Because you're not building your own, though, you'll have to wait for a distro to pick it up (we don't control the distros), or for us to provide a binary (the next release is IIRC Nov. 23d).\nNo sample rc files will be provided, but I added new -export-config and -export-default-config that can be piped anywhere on your system for use as an rc file. If someone who is a CMake packaging expert wants to take advantage of these to provide default config files during install, I'll leave that to them, and happily accept a PR.\nBecause it's obvious that we poorly communicate how HTML_TIDY and all of these rc files are added, I've also added -help-env that clarifies things, and prints out current values, if any, for the env variable and the expected rc files.\nFinally, man will reflect whether or not rc support is included, as well as rc file paths.\nI hope you can build it and give it a try.. @GauthamBanasandra, did you try the custom-tags configuration option?. No response, and Tidy clearly has the ability to support custom tags via multiple options, so I will close this.\n. There are a lot of targets, so building all of them every week would be quite time consuming. I can build you something for macOS if you like.\n. We could go back to one of the continuous integration solutions; I don't really like these, but something like Travis can be configured to automatically post builds to one of our gh_pages. The issue with this, though, is that it can only generate bins for macOS and for Ubuntu. If someone wants to develop a cross-compilation technique via macOS or Linux that includes Windows (required) and other platforms (would be nice), then maybe we could reconsider Travis-CI or something similar.\nI will not consider an automated solution that leaves out a huge, huge Tidy-using population, though, and so Windows cross-compilation would be an un-negotiable requirement.\n. I wonder what is a population of users that want to use next that are not able to build it themselves? End users aren't what they once were; installing a compiler and CMake can be quite scary to someone who's a humble HTML developer, and in workplaces group policy may even make this impossible. I have no data, but can only suspect that there's probably a valid case for providing next binaries from time to time.\nBut... do we want to do this for every single commit? If not, then I don't mind building and posting manually from time to time. If we want to do it for every single commit, then this really has be to automated.\n\nSo the single main problem for me is the target deployment site... can someone add some thought, details on that... thanks...\n\nIt looks like these both CI solutions can dump bins into a gh-pages repository, but I've only looked at it on the surface. We could set up a repo just for \"daily builds,\" but Github doesn't really like us distributing binaries from gh-pages, thus why we re-worked our binaries page recently to link to releases rather than a directory in gh-pages.\nI would only want to link to the current next; there's no good reason to keep a binary for every commit; people who need a specific commit can build that commit by themselves. Maybe github wouldn't be upset if we hosted only a single binary, except, of course, every binary ultimately would still take space as once they're in the repo, they're permanently in the repo's history.\nI'm not going to invest any real time in looking at this and getting it to work unless there's some real interest in this, though.\n. @MayfeelYang, can you provide an input file that causes this?. @MayfeelYang, which platform are you running on? With ASan enabled on macOS (64-bit), the sample file isn't generating any runtime faults for me. I am using current next branch, but I don't see any commits going back to 5.5.30 that would have addressed this.\npoc-tidy.zip\n. Added #622 with @geoffmcl's patch, which works nicely.. Merged, so closing.. @mthorpe7, it's a good fix, but could you eliminate the .gitignore changes so that I can merge it? Feel free to submit a separate PR if you think we should change the .gitignore file.. Thanks for taking this on, @mthorpe7!\n\nHow would you like these fixes to be upstreamed? A single PR with a single commit, a single PR with many commits or many PRs with single commits?\n\nIt would be best to tie commits to specific, fixed test cases. If you have one large test case, then a single commit might be okay, but it depends on how \"invasive\" the fixes become. A single PR is okay, and commits that each resolve a specific issue are appreciated. If you prefer separate PR's, then that's fine, too.\n@geoffmcl generally likes smaller PR's, and although he's on holiday now, he's generally much more consistent in attending PR's than I am (I often disappear for months at a time due to other commitments).\n. Added #622 with @geoffmcl's patch, which works nicely.. Merged. @mthorpe7, since no support is required for your original request, I will close this. Certainly you are free to submit any type of PR's, and those will open new message threads as they happen. Thanks!. @dry11orange, that's not valid HTML, but since Microsoft insists on exporting files containing that kind of junk, you can activate the word-2000 option so that Tidy will recognize them.\nFeel free to re-open this if that doesn't work for you.\n. This was merged, and should have been closed! Doing so.... Builds, tests, and works for me. Feel free to merge. Thanks, @ablackton!. Closing due to merge.... Added candidate #621, which now allows the download attribute to the anchor tag.. Fixed and live. @ReubenM, thanks for the report.. Nice fix. Works on macOS; I need to get SPRTF working on macOS and Linux so that we have the same tools available.\nFeel free to merge.\nYou don't mind if I start poking around SPRTF to make it cross-platform? Then I'd probably take a look at all of the macros that invoke it, too.. @geoffmcl, no problems holding off. It would have been nice to have an autumn solstice release, but maybe we can make Canada happy by honoring their Thanksgiving tradition for a release?\nIt looks like there's some low-hanging fruit that can be cleaned up. I'm not sure how much I can commit to them, but I'll check in and can definitely support macOS binaries, doc updates, gh-pages, etc. . Sounds great, @geoffmcl.\n. We're up to .70! This is going to be our most improved release yet.. @geoffmcl, this list looks complete to me, other than api.html-tidy.org, which I can take care of.\nI might take a look at some of the readme's to make sure that they're up to date, first, as they're easy to overlook. That would be prior to the 5.6 tag/push.\nAs far as order, feel free to merge to master if not all of the binaries are present. I can add the macOS binaries after the fact.\nIf you want to merge #645 before the push, I'm okay with that, despite wanting to know your vision of the future. \nYou're working +5 hours or so, so from my perspective, Friday, Saturday, or Sunday are all good, as long as my dear wife is tolerant.\nI really think that this is going to be our biggest update yet, and I'm looking forward to it. I wish we had more help, but for two guys separated by an ocean and having vastly different views on some things, I think we manage to do pretty damned good!\nAnd... I hope you're feeling better.. @geoffmcl, Sure, I can look into modifying the binaries to do just that.\nOne question about all those versions, though: are they all needed? I suppose the vc10's are, because I think I remember reports that some older OS didn't have the required Windows libraries? And I suppose there are still 32-bit Windows, and Linuxes. But considering what the typical user* who's looking for binaries (rather than building for himself) wants, why would he ever care about a MinGW build, or static versus dynamic builds?\nIn any case, I'll make sure the binaries system works with whatever you throw at it, and you're the one generating the Windows builds, but I just wonder if you're overworking yourself with all those builds!\n. @geoffmcl, I've updated binaries.html-tidy.org to include SSH256 hashes, and I've added hashes for all of the existing binaries. Decided not to use SHA1 as it\u2019s insecure.. @geoffmcl, sorry about that. I assumed OpenSSL was installed by default on Windows. It's on my Windows 10 setup, and works in cmd; no Powershell required.\n. @geoffmcl, I'll work on macOS binaries presently. As you mention, the hash files in the current \"releases\" are tests, and I'm not going to link to them.\nOn Windows 10 (updated from Windows 7 Pro clean install just a month ago), the program I use is openssl, which was either installed by default, or installed via one of the Windows options. There's nothing else installed on this machine except for Chrome, Notepad ++, and Visual Studio 2017.\nopenssl is also in my default Ubuntu, and on my default macOS, although I may have been installed as a dependency to something else, because it's ubiquitous and the defacto tool for everything, including sha1. I'm really sorry I didn't think to ask that it would be a problem. \nI'll merge to master, too, since you're sleeping now, and update the binaries site.\n. Update: www.html-tidy.org updated, binaries. updated with your .zip and my .dmg, sha256 added for both, api. updated for 5.6.0 and next, next merged to master, next bumped to 5.7.0, and I think we're good.\nI didn't generate RPM's or binaries for other versions of Windows simply because I don't use them. It's good that they're there until the distros catch up, though. If you have time for a quick lesson, I can take the load off next time.\n. @geoffmcl, is there some checksum verification process that's automatic that I don't know about? I'm a bit slower as I age... I think I understand that you can download two files --  and .sha256, run a simple command, and get an okay. Then people don't have to verify character by character the actual checksum? Which is great, considering I only look at the first few and last few characters when doing it manually!\nIs this a common practice that I'm just not aware of, or is this just a thing that only one or two people know about? Either way, there's no work; we can upload anything we want to github and the binaries page; I'm just curious if this is a workflow I'm ignorant of.\n. Sorry I've been unresponsive, @geoffmcl; I've been out of town learning my competitors' secrets (actually it was an open conference). I can't promise to respond much tonight, maybe by the weekend...\nThanks for the MSVC 10 check. I'd thought I'd taught Clang to find all of those for me, and of course I build release and test on Windows, but, sigh, with MSVC 17!\nWhat's the normal workflow for people to check hashes? I've never checked with anything online. In the past, and sometimes today when things aren't signed, I'd just visually compare the hash. I never realized there was a workflow for checking a resource online. My instinct would be not to trust a specialized tool to check online (Trojan horse), but if it's built into, say, openssl, then trust would be high. These days almost everything is signed, and I usually check with spctl (which is probably Mac only).\nThe macOS installer I build is signed with an official Apple developer ID, for example. I suppose I could sign the .dmg package container, but I'd not thought of that. The hash works for now, though.\nWe could consider signing as an alternative to hashes (future thinking, not right now), but this gives us issues with archiving private keys and the like. Actually we kind of have similar issues with our domains, which are renewing shortly. If I get whacked by a robot really good, I'd hate to see the domains lost because of the lack of Jim.\nI'm not sure why we kept those intermediate releases. There was a compelling reason at the time; but I'd agree to removing them from both binaries.* and releases. I think we have to delete the tags. I'll look into it by the weekend at the latest, unless you beat me to it.\n. Proposal #624 available.. Just back here to remind myself not to provide a default file for this, but I will add a new console function to generate a tidy.conf.default file upon demand. It won't require tracking new/deleted options because the API can be polled automatically.. @shentino, really, it becomes a packaging issue. If you know how to work with CPack, then you're certainly welcome to issue a PR against our CMakeLists.txt, once I've added the generator to console.c.\nI package macOS without CPack, so I can ensure there's a default config there.. #623 addresses this, and other related documentation issues, too.\n. Man page work is live, so I will close this.\n. Candidate #626.. Another one closed! On a roll.... @geoffmcl, good point. It wasn't an issue on Ubuntu, but that's admittedly a small sample size. Perhaps a new define controlled in tidyplatform and cmakelists?\n. I usually test with release, and given our build instructions don't mention that, I think you're right!\nLet me push a hot fix in the next 45 minutes or so, since I screwed it up.\n\nwith say #if defined(DEBUG_TIDY)\n\nYup, this is what I'm going to do.\n. The \"hot fix\" was fairly easy, in that I simply tweak NDEBUG manually. This fixes code; will go back with more time and implement DEBUG_TIDY or similar.\n. Okay, I've added ENABLE_DEBUG_LOG as a substitute, and it's live. Preserves behavior on Windows, and no nasty surprises when others are following our build instructions.\n. @geoffmcl, huh? Does if (MSVC AND NOT CMAKE_BUILD_TYPE MATCHES Release) not catch it? That is, I thought your preferred behavior was debug out by default, which is why I added that line for Windows. If I build Release specifically, then there's no debug output.\nRight now it's a Windows-specific behavior; it would be trivial to make it so that all platforms require -DENABLE_DEBUG_LOG.\nSorry, thought I was trying to preserve your preference...\n. Oh! I see! cmake --build is doing something different on Windows than make does on Unix, or I'm using cmake wrong. I always cmake my configuration with CMAKE_BUILD_TYPE prior to making, but you're suggesting that you only cmake, and then cmake --build different configurations.\nI consider myself \"schooled\" on this point.\nAlthough I'm fine with cmake ../.. -DENABLE_DEBUG_LOG prior to make, I think that's not your workflow. I'll add a hotfix to force it this way for an immediate fix, but what's your workflow, so that I can try to accommodate it? Is this correct?\n\ncmake ..\\..\ncmake --build . --config debug -- you want ENABLE_DEBUG_LOG by default, or not?\ncmake --build . --config release, obviously no ENABLE_DEBUG_LOG.\n\nGiven that I config, then make, I'm not sure where cmake --build on Windows gets the configuration differences for the --config argument. I'm guessing they may be present on Unix, too, and that this is a missing piece of knowledge to me.\n. > Now you have defaulted the cmake option ENABLE_DEBUG_LOG to ON for all platforms??? Why would you do that? Is that what you intended? I think this should default to OFF for all...\nWait, WTF???? Yes, it should be OFF; did I screw up a local merge???\n\nSo back here, late at night, pondering this... the single important issue seems to be to default that option OFF... have pushed this... and bumped to 5.5.63...\n\nYes, thank you!!!\nI will digest everything else.... @geoffmcl, thanks for the in-depth explanation of the Windows build process. When I'm in the Windows world, I've actually built .sln files just so that I could build in Visual Studio 2010; I had no idea that this was essentially the default.\nOur README indicates this:\n~~~\ncmake ../.. -DCMAKE_BUILD_TYPE=Release [-DCMAKE_INSTALL_PREFIX=/path/for/install]\n~~~\n... which really mislead me into thinking it was similar to the Unix way. I actually kind of like the fact that you can configure once, and build multiple targets (actually, I get that in Xcode, but not when building with make).\nI will study this issue in-depth before making any more changes; it's a lot more complex than it seemed at first.\n. @geoffmcl, oh, what a can of worms I opened!\nI agree, let's take this to another branch.\nIn the CMakeLists.txt, I think we can set it up so that if the other debug options are enabled, we can infer that ENABLE_DEBUG_LOG is implied. So that's one chink out of the way.\nAs for convenience, here's what I do on macOS: I cmake with the desired flags before every build. Typically I only do this when running the regression suite. Otherwise for debugging, I use a self-generated project rather than the rather dirty project that CMake generates for XCode. I have multiple targets for whatever options I'm building in, such as logs. It's trivial to use one or the other for me; I just choose one.\nGiven that we're really the only two active developers, I would tend to err on the side of \"least surprise,\" i.e., if someone follows our build instructions, they get a working Tidy without debug messages. I'm certain that you agree. So, then, how to we simply enable debug output for people who make a deliberate choice to contribute code, while at the same time not handicapping our own workflows (which is what I'm afraid I did to you)?\nIf someone goes to great pains to enable debug output in a Release build, I don't see the point of stopping them; it's a deliberate act. It would be nice to prevent it, but I don't see it as a priority.\nDefault name, we could get from the version number; might be convenient to you if you add the RC_NUMBER field. Otherwise, I'm ambivalent. \nFor me, the runtime directory works great for make or Xcode. With make, it's in the build directory, and with Xcode it's in the out-of-source-build directory, exactly where I expect it.\nI'll try to deep dive this on the Mac/Linux front!\n. @geoffmcl, the sprtf.h/c references are still in the CMakeLists.txt file, and I don't need them to be there (they just cause a notice for me when I build). I don't want to remove them until you have a chance to check them on Windows. I added them myself earlier if this request, but with build systems, better safe than sorry.\n. > What are you suggesting? Thanks...\nNothing, at this point. Given that everything works on multiple platforms, and it looks like everyone finds the behavior acceptable, I'd vote for closing this.\n. > Looks like I messed a bit this PR. The localize/README.md says I should make a PR against \"master\" branch, but I seems I based my translation in the default branch \"next\". Which branch should I use?\n@rffontenelle, thanks. Yup, good catch. It should be based on next. Sorry about that. Can you rebase based on next? That should clean up this PR greatly, and a Portuguese translation would be simply awesome!\n. @rffontenelle, thanks, it's merged. You might have a new look at it with the current PO or POT, just to make sure a translation didn't go missing. I had to rebase it because there was a previous merge that should have only affected string order, but better safe than sorry.\n. @rffontenelle, also it just occurred to me (and I should comment the POT) that TEXT_GENERAL_INFO_PLEA would probably read better if it referred to Brazilian Portuguese instead of English, because presumably someone in Brazil would be reading the message in Brazilian Portuguese.\n\n\"Voc\u00ea fala um idioma diferente do ingl\u00eas, ou uma variante diferente do\\n\"\n\"ingl\u00eas? Considere nos ajudar a traduzir HTML Tidy. Para detalhes, consulte\\n\"\n\"https://github.com/htacg/tidy-html5/blob/master/README/LOCALIZE.md\"\n\nObviously this isn't a demand, but if you should happen to issue another PR, it would be accepted!\nBy the way, I can't understand spoken Brazilian, but can somewhat understand Portuguese people when I run into them. How different is the written language? I can understand most of what you wrote... would this be appropriate to use as the Portuguese base language, too? Or is it really, really specific to Brazil?\n. > I don't mind translating TEXT_GENERAL_INFO_PLEA back to English, but would it be possible to mark this string as not translatable? This would be safer and easier for both translation and maintenance of the translations.\nOh, my meaning was, leave the string in Portuguese, but change to it to something like:\n\n\"Voc\u00ea fala um idioma diferente do Portugues Brasile\u00f1o, ou uma variante diferente do\\n\"\n\"Portugues Brasile\u00f1o? Considere nos ajudar a traduzir HTML Tidy. Para detalhes, consulte\\n\"\n\"https://github.com/htacg/tidy-html5/blob/master/README/LOCALIZE.md\"\n\nMy substitution is Spanish because I can't write Portuguese!\nThis way, Tidy users in Brazil who speak another language might want to offer another translation, too.\nI'll leave it in pt_br.\n. @geoffmcl, I'll whip up a quick PR if I have time this weekend. It actually wouldn't break backwards compatibility the way I'd make it work, though. And, no raining on my parade, as I've been working on some bug fixes. Unfortunately I'm stuck with MSVC 10 for the time being, and the unfamiliarity with it makes things tedious. So, no fun PR's until I have my Xcode back.. Proposal #627 implements the categories. None of the option names have changed; no new options. This simply takes care of the category aspects of this request in line with table above.\n. #629 would allow the \"retirement\" behavior with a config option (squelch). \n. Awesome! Thanks!. > To make tidy-html more usable, we may expect some flags like --component to do a contextless analysis to turn off the rules like missing title, not approve by w3c etc.\nThis is a toughie. Which rules to ignore, and which to enforce? Or don't enforce anything and become a pretty-printer only if told to? But we can't do that without catching things like missing end tags, etc.\nWe do have a \"community\" repository to capture things like specifications for Tidy. It's pretty bare right now. A great contribution to open source doesn't have to be writing C code, but can be helping us write specifications for how Tidy should behave. The current maintainers do a lot of things based on history and haven't paid a lot of attention to specifications, and given our manpower, I'm not pointing fingers given I'm one of these. Yet, it's a good thing to be specification driven.\nCan you help? Do you have people that can help? We might not be able to adopt everything right away, but we can work towards it.\nHow, specifically, should a --component option affect Tidy's behavior? I'm not asking this out of frustration, and I want Tidy to be useful in most contexts. It's just that it's really hard for us to write complete specifications, and that type of help would probably just as valuable as source contributions!\n. Post a PR to https://github.com/htacg/community. Refer to #412 for additional discussion...\n. There are a couple of obvious conflicts in the testbase, but reviewing them seems reasonable. I'll update testbase, and add a couple of test cases for this fix as a PR in the test branch.\n. Actually, don't merge this yes; small bug found in testing.. Okay, small issue fixed. Ready for review.\n. Confirmed.. Added candidate #620. This is a simple change, and so will merge in a day or so unless objections are raised.. @behnam, confirming that this is merged and live now, so closing this issue.\n. @behnam, there's not really a master list; it's all based on convention, and with HTML5 in particular it's expressly not defined in the specification. Content versus appearance, and all of that. In general, we try to keep consistent with browsers' default stylesheets' display property for each element. These days, all of the browsers tend to agree. Of course you'll notice that a lot of our elements are mixed, and so it becomes a judgment call.\n. Passing all tests in Windows, Ubuntu, and macOS, so I will merge this. Binary output should be nearly identical, but will bump version anyway.. @jidanni, just following up to acknowledge the problem.. Doesn't break Windows, and works a treat on macOS, so in it goes.\n. Here's an example of the new, proposed quickref with the new categories.\nquickref_next.html.zip\n. There's nothing specific for minifying HTML in tidy, although a combination of vertical-space: auto, wrap: 0 and indent: 0 will get you close to what you want. If you're using UTF8, then take a look at all of the entities options to make sure that Tidy's not converting things to entities.\nTidy isn't a Javascript interpreter, so it won't do anything to minify that.\n. Oh, yup, consider hide-comments: yes in addition to the list above.\n. @sharpaper, did you mean to re-open this, perhaps as a feature request?\nI would hesitate to recommend a new option that automatically enables all of the other options because it would lead to inconsistency if the other options are used. If I minify and it enables option-1, then I also use option-1: no, then what's the correct behavior? Is the order we specify the option important? If set option-1: no, and then minify, do I honor the no or overwrite it?\nDo you know about configuration files? You can invoke tidy with the -config <file> argument, and specify a file with all of your desired options, e.g., tidy -config minify.config ~/html/myfile.html, thus saving you the trouble of using all of the options individually.\n. You could just use -minify as a short-hand for --option1 --option2\nThat's a good point. -minify as a CLI option rather than a LibTidy option, and there's precedent for that. It's something I think we might consider. Pinging @geoffmcl.... I'll fork the test repo to add a #629 test case, too, which will provide an example.. \"squelch,\" not \"squelsh,\" and as an electrical engineer, yeah, it means to silence (specifically it's to allow a certain signal threshold). Hmmm... maybe doesn't sound as good to non-American ears, but trivial to change to \"mute\" or \"silence\" or whatever. In our lingo, one might say \"squelch that idea,\" but also in our lingo to \"be pissed\" is \"be upset,\" so it's no surprise that it doesn't resonate in other regions.\nConsole users don't use the library, so they have no ability to filter. This offers a nice compromise between \"I don't want to see that warning!\" and \"Show me everything!\"\nYes, the idea is to eliminate TidyShowMetaChange and TidyWarnPropAttrs, but more importantly, to prevent new options like them from ever having to appear again. These two new options avoid all of that nonsense in the future. Even if we don't retire those two options (a different conversation!), this gives users flexibility without breaking anything. Breaking things is a different conversation.\nOh, two new options. Try running the PR with the quelch-id option. No studying the source code is necessary. :-)\nAnd, not really a new feature request, but kind of the backbone to #607 and #609. . # Nomenclature\nI've managed to push updates naming the options mute (for muting) and mute-id (for discovery).\nUse Cases\nMaintenance\nThis PR avoids a lot of future maintenance by avoiding the need to add new configuration options every time we want to add a new warning, but are afraid people won't like new warnings.\nPrecedent\nFor example TidyShowMetaChange was added, for what purpose? It doesn't protect against regressions for what Tidy produces; it only protects for regressions on the error output. Why do we care about error output, as long as it's not erroneous? If there's a case for hiding this particular message, then there's a case for the user to want to hide any message. Similar for TidyWarnPropAttrs; why do we feel that it's valid to accept that option but not offer silencing any option?\nOther Feature Requests\n477, potentially generates changed output user might not want to see.\n505, potentially generates changed output user might not want to see.\nAny other future feature requests that affect output...\nInfrastructure\nInfrastructure makes things more manageable for future maintenance, and eliminating options (either now or in the future) makes things more maintainable in the long run. This is primarily an infrastructure addition, while giving users a nice new feature.\nUser acceptance\nGives console application users something new, out of the box, without having to build their own libtidy applications. Tidy needs to be flexible for users, and we want people to want to use Tidy rather than have to use Tidy. That's means we sometimes do more than fix existing bugs.\nImpact\nIt does not remove any additional options, or change any output (HTML or messages) any way on its own, unless activated knowingly.\n. @geoffmcl, good catch with STRING_CONTENT_LOOKS; it falls outside of the range of REPORT_MESSAGE_FIRST and REPORT_MESSAGE_LAST, so it's being rejected, even though we've assigned TidyInfo to that. I've just pushed a quick fix.\nI'll look at the -q option. I think this option -- even without this PR -- doesn't silence config category messages, but until now they've been uncommon and you've simply not noticed.\nRecently I've made some meticulous, in-depth study into all of the conditions that cause all message output, and made several internal code changes to manage these conditions centrally, rather than spreading conditions all over code. I'm pretty sure that all LibTidy output decisions (not console output) are managed completely in messageOut() now. All that remains is actually quite simple!\n\nAccept some slight changes to regression error output.\nDecide what categories of messages we want -q to silence.\nEnsure that messages are in the correct category.\n\nBasically I think -q should turn off everything except for TidyWarning/TidyError/TidyInfo level messages. This is a trivial fix, but I didn't roll it into this PR because it does break some existing cases on errout.\n. I'll merge this base on comments above, and will update the -q option separately. Right now, can't test the #604 fix, because it's already based on this branch!\n. :+1: . Passes regressions, and fixes a leak. Merging. Thanks!. @geoffmcl, it looks good by me. I did not test in macOS (I'm on the road and only have my Windows laptop). Given that we're not checking anything platform related, and it works for me in MSVC 2010, I'm good with this. Thanks for fixing it up.\nIf you have a chance to verify with Ubuntu, feel free to merge; otherwise I'll provide macOS and Ubuntu verification on Thursday most likely.. Duplicate of #343 and others. I'll leave this one open this time in case someone want to contribute a max stack depth option; otherwise refactoring the recursive process isn't really in the cards right now.. Looks I beat you to it! Thanks for checking it out.\n. Can you do it without changing the compiler to c11, though? Tidy is meant to be buildable with c89, although I personally seem to require c89gnu.. There's not a formal known-work list, but I used Clang with gnu89 and GCC with gnu89 (straight C89 fails; I'll have to investigate this further), and MSVC 10 on Windows, where I usually catch my errors from not following strict C89 (e.g., for ( int i = ... ) not opening new context in older C.\nLooks like there are still a lot of definitions in platform.c for lots of compilers, but that doesn't indicate their flavor of C, of course.. @jokester, it looks good and builds fine for me on macOS.\nIn the future, you might want to consider the macros TidyAlloc and TidyFree, defined in forward.h; they'll make your life a little easier:\n~~~\ndefine TidyAlloc(allocator, size) ((allocator)->vtbl->alloc((allocator), (size)))\n~~~\n. @jokester, @geoffmcl, that function signature is a monstrosity of bad design decisions, and perhaps its functionality should be moved to the console application.\nAs for the signature, we should supply a buffer and size from the console:\nvoid TY_(tidySystemLocale)(tmbstr buf, uint bufsize)\nThis breaks current API, though, but since no one uses it except the console application, I'd say bite the bullet, pull the trigger, and make the change.\nNow the question as to why this exists:\n\nTidy does some sorting internally, e.g., eventually using TY_(tmbstrcmp). This is probably a good thing, because it avoids any locale-related sorting that a standard library might introduce.\nWhen I added localization, I did not want to affect how Tidy sorts things (i.e., there was no audit on standard library sorting versus the use of Tidy's own sorting). The \"safe\" thing was to ensure that Tidy internally, always used the \"C\" locale despite the user locale, in order to work predictably.\nTY_(tidySystemLocale) therefore checks the user's locale without affecting the executable's locale, i.e., the console (and therefore the library) will always run with the C locale. This doesn't apply to LibTidy users, though, because LibTidy will run in its executable's locale.\n\nOf course, Tidy needs to know the user's locale in order to set the language automatically.\nAs to whether or not we need to preserve the C locale in console Tidy... maybe not! But it was the \"conservative\" (safe) choice at the time.\n. @geoffmcl, @jokester, you guys are misunderstanding what setlocale does and doesn't do:\nWhat setlocale does\n\nIt doesn't configure a user's environment or do anything at all to affect the user's environment. Like @geoffmcl, says, the user already has that setup.\nIt's used to get access to the user's environment:\nC programs are required to start in the C locale.\nsetlocale is how you sniff out the user's environment and...\nsetlocale is also how you configure standard library behavior for the executable (it does not change the user's environment). There's no library function getlocale\nNo warning is needed, because setlocale is not affecting anything on a user's system, and Tidy is not itself multithreaded.\nTidy has always used the C locale (Tidy predates a lot of modern efforts at being multilingual).\nYet to set the user's language automatically, we need to use setlocale to sniff it out.\n\nHow Tidy uses it\nHere's how TY_(tidySystemLocale) works. Its documentation is perfectly fine if you understand how setlocale works, which is the issue here.\n\nsetlocale( LC_ALL, \"\" ); \u2014 this configures the standard library to inherit the user's environment. If we were using standard library sorting routines, for example, they would now sort by the correct means for a particular language. It may or may not return a string indicating the user's locale.\ntemp = setlocale( LC_ALL, NULL); \u2014 definitely returns a string indicating the now set locale. This is why we know to set French if you're in French environment.\nsetlocale( LC_ALL, \"C\" ); \u2014 Restores the standard library behavior for the executable (not OS) back to the C locale for the reasons stated above.\n\nAre we square on how setlocale works now, and how it does not affect the user's environment, and how it only affects the runtime environment?\nTidy's stdlib use\nThat last point should be a bit unclear. What is Tidy using in the standard library that's internationalization sensitive? Is it even necessary to force Tidy to use the C locale as it's always done? Can we simply set the runtime locale to the user's locale?\nI think the answer is yes. Tidy is using its own sorting comparitors, and nothing from the standard library. It's only sorting English strings at that (attributes), any they're not affected by different locale sorting mechanisms (which we're not using anyway). If we were to offer internationalized sorting, then abandoning the C locale would indeed be the right thing to do. Unless anyone finds a reason to object, then I suggest we abandon the C locale.\nLibrary rationalization\nIf we're not abandoning the C locale, then this functionality (but not necessarily this function) definitely belongs in LibTidy, because we need to offer a service to set Tidy's language without affecting the C locale. However this function:\n- Doesn't do that; you still have to set Tidy's language after sussing out the locale.\n- Has a sloppy signature that, while convenient, is confusing.\nSuggestion\nDelete the Library routine completely, and do this in tidy.c:\n~~~\n    tidySetLanguage( setlocale( LC_ALL, NULL ) )\n~~~\nThis, of course, will set the executable to use the environment's locale, as well as configure Tidy to use that locale's language. This all assumes, of course, that we're not concerned with Tidy not using C locale.\nNow I know I could have written the PR in about 25% of the time it took to write this explanation, but I think a correct understanding of what was being accomplished and what setlocale does is an important learning exercise.\nI think that we should follow the suggestion, and let Tidy run in the environment's locale. Alternatively, @jokester's diff does improve the function signature while preserving the C locale, except, the warnings are completely inappropriate and thread safety is not compromised at all.\n. #640 created.\n. > Can this auto selection of the language, based on setlocale(LC_ALL, NULL), be done in say tidyCreate()?\nThat would have been nice, but the language is set in the global tidyLanguages structure, and the localized strings don't depend on a TidyDoc instance to provide context. This allows LibTidy to respond to string requests without the need to create a TidyDoc. This is probably better in the long run, because a lot of the console application strings are part of LibTidy, so are really strings that are global in context and not tied to a document instance.\n. We could do it in tidyCreate(), and I'm not going to get into a war over it, but it concerns me because LibTidy clients aren't likely going to expect it. Say, someone running PHP-Tidy in French, and I'm not certain that PHP gives anyone the option to change the language in their API. On the other hand, they need to grow with the times, and someone running French should expect to see French results. Usually you're the one averse to change!\nSemantically I don't really like it, because all of the language strings are really library-level strings, and so set language becomes a library-level kind of setting. Tying it to the document really means I should be able to change the language on a TidyDoc level, meaning that as an API user I could tell one instance to be French, another instance to be Chinese, etc., but it doesn't really work that way. It could work that way. Maybe it should work that way? It would mean a lot of API changes to preserve the semantics of a document-level function, though.\nThe original Tidy writers did several things to preserve semantics where not needed. tidyGetOption() is defined as TidyOption tidyGetOption( TidyDoc ARG_UNUSED(tdoc), TidyOptionId optId ) in order to preserve the semantics that an opaque TidyOption instance is actually bound to a particular TidyDoc, whereas when you poke into things, it's not related at all.\nI suppose I could overcome my sincere belief in proper semantics with a very carefully worded indication in the documentation indicating that tidyCreate() both creates a document instance as well as initializes the library for use, including initial setup of locale (and other things that might accumulate over the years).\n. I was actually throwing together a quickie update to the PR for this, but now we get undefined behavior when setting the language in tidyDocCreate because even if using tidySetLanguage as an API user, that choice is overridden next time we create a TidyDocument, which resets it to the locale language every time.\nI'll need a bit more time, rather than a quickie fix.\n. Okay, dirty fix is quickie fix. Have a look at the updated PR.\n. @geoffmcl, I think we're good to go. Only read on if you want to!\nI'm using \"\" instead of NULL precisely to ensure that the execution environment locale is set during tidyCreate; there's not really any sense in querying it only, unless we wanted to ensure that the stdlib stays in C locale. Since we're not really using any internationalization from the C locale (sorting, calanders, etc.), we might as well set LC_ALL, and if we ever implement something locale-related, we need to honor it. One possibility I'm not worried about right now might be if that standards start allowing non-ASCII attribute names; users might then want non-C sorting.\nThe defense flag is absolutely required. If the environment is French, tidyCreate will set French. The library user (say, running tests in the default English locale but using a French environment) sets tidySetLanguage, and then next time he uses tidyCreate his preference would be wiped out!\nComparing the user's environment again as a guard (rather than an internal flag) is fragile because the user's environment can conceivably change. Yes, it's an edge case, but this hardens against it.\n. @geoffmcl, yup, that's a confusing topic. NULL is the only case where something isn't set. C programs per specification always start with the C locale, which is why your test returns C. This is the execution locale that Tidy uses today, right now, whether we set a language or not. That will change with this PR, though.\nWhen using \"\", you are doing two things: \n- Setting the execution environment to use the user environment's current locale.\n- And returning what that user environment is currently configured to.\nNow if you really want to confuse things, LC_ALL might not be the best choice. Users can (but don't often) use LC_ALL, but it's perfectly possible to mix and match. I prefer LC_TIME and LC_MEASUREMENT set to en_GB.UTF-8 so that I get sensible ordering of dates and sensible units of measurement.\nI'll merge that, and close this. Thanks.\n. @geoffmcl, sorry I'd not reviewed this update earlier. Other than a typo -- \"elments\" -- I suggest that you merge this.. @geoffmcl, nice work. I've added some comments over in the PR.. Wow, @geoffmcl, this has been a lot of work. \nIn cases where they aren't acting in concert with each other, or maybe in all cases, I'd suggest the values from (the W3 reference)[https://dev.w3.org/html5/html-author/charref], at least where they look identical. \nAs for how they should be internally represented, I'm not certain how Tidy handles this internally. If it encounters a named entity, is it converted to a byte? Or is it just passed through as text? I suppose that might be dependent upon output-encoding and numeric-entities, and maybe ncr, although in the latter case going from NCR to entity should be easy.\nIn any case, I'm in favor of the merge as-is, deferring the answers until later.\n. @geoffmcl, go for it!. @geoffmcl, which testbase are you using? When I run the tests on macOS using branch issue-643 for the executable, and using the next branch for testing, I only see two regressions:\n~~~\ndiff -ua ../cases/testbase-expects/case-412.html ../cases/testbase-results/case-412.html\n--- ../cases/testbase-expects/case-412.html 2017-10-20 08:51:51.000000000 -0400\n+++ ../cases/testbase-results/case-412.html 2017-11-17 14:11:05.000000000 -0500\n@@ -1,7 +1,8 @@\n <!DOCTYPE html>\n \n\n-  Issue 412 \u201a\u20ac\u201c Warnings for Quotes\n+  Issue 412 \u201a\u20ac&OpenCurlyDoubleQuote Warnings for\n+  Quotes\n\n   a.c1 {generic_style}\n   \ndiff -ua ../cases/testbase-expects/case-445557.html ../cases/testbase-results/case-445557.html\n--- ../cases/testbase-expects/case-445557.html  2017-10-20 08:51:46.000000000 -0400\n+++ ../cases/testbase-results/case-445557.html  2017-11-17 14:11:01.000000000 -0500\n@@ -11,18 +11,18 @@\n   The predicate calculus has a number of theorems and axioms for\n   proving logical statements. Here are the main symbols used in\n   predicate calculus:\n-  P(x)  \u2013 proposition \u2013 a logical statement in the\n+  P(x)  \u2013 proposition \u2013 a logical statement in the\n   condition x.\n-  x \u2013 any condition in the set of possible\n+  x \u2013 any condition in the set of possible\n   conditions.\n-  c \u2013 a particular condition in the set of\n+  c \u2013 a particular condition in the set of\n   possible conditions.\n-  \"     \u2013 \"For every\"\n-  $     \u2013 \"Exists\"\n-  \u00c6     \u2013 Implication\n-  \u0178     \u2013 Conjunction (logical\n+  \"     \u2013 \"For every\"\n+  $     \u2013 \"Exists\"\n+  \u00c6     \u2013 Implication\n+  \u0178     \u2013 Conjunction (logical\n   and)\n-  \u2044     \u2013 Disjunction (logical\n+  \u2044     \u2013 Disjunction (logical\n   or)\n\n\n~~~ \nAnd in every case, the only change is the use of the entity references instead of the numeric references.\n. I saw that, but my meaning is, with all of the changes, in existing testbase, the only changes are as expected. The additional test cases in a PR, of course, should all test fine, too.. @geoffmcl, okay, tested, and the issues are resolved, and I completely agree with the changes! This is a well-liked contribution.\n. Beautiful! There are a couple of obvious regressions in 412 and 437468, but regenerating the testbase-expects seems acceptable in this case.\nFor VERS_CHECK, though, I would assume that anything that's not part of the original set is HTML5 only (citation).\nIf I used (this document)[https://dev.w3.org/html5/html-author/charref] and change the doctype to an HTML4 doctype, they still render in my modern browsers, but is this behavior we can count on across the board?\n. @geoffmcl, testing is okay, but see followup discussion in #437.\n. @geoffmcl, I merged the others, but didn't merge this one in case you want to change the scope based on #437 additional discussion.\n. @geoffmcl, go for it. We can open inconsistencies as future issues. Yes, this is ad hoc, but let it happen. We can do logical engineering later.\n. Looks like @spk made that change about six months ago or so, and I merged it after minimal discussion. Given the standard header search paths, it didn't affect me, although I pointed out the issue. It doesn't affect Unix builds, so I'm ambivalent, willing to roll it back.\n@spk, is there a reason in your issue that the headers must be in a subdirectory? Can we roll this back, or will something else break?\n. Great! Thanks, @aureliojargas.. On that note, I wonder if we should update that message per se, given that the WHATWG essentially define what HTML5 (and beyond) is. Not long ago, I was trying to understand, \"why 'voyager'?\" (our XHTML flag), and it took me down a rabbit hole of who defines the specification these days.\nWHATWG is affiliated with the W3C (currently), and they only apply to HTML5, so leaving things alone is certainly the easiest.... I meant, leave my additional suggestions alone, i.e., not change the message.. @kennyhendrick, if there's a link that something is inserting into your HTML, where does that link lead to? You might want to take up the issue with them.\n. Thanks for getting back @kennyhendrick. Yeah, that's definitely not HTML Tidy doing that. You might want to report the incident to whomever provided that tool to you.. @geoffmcl, this is send alarm bells ringing, because I remember encountering an issue similar to this, maybe last year, and for the life of me I can't find my notes on the matter.\nOkay, after meticulously combing the commit history, I found it: #339. And do you want to guess about which test case it addresses? Yeah, 445557.html.\nMy memory is shaky here, but I seem to recall that that old, ancient, fix produced identical output on macOS as Windows and Linux (which was the goal), but that when looking at this case in the Windows console, there was an extra linefeed that Unixes ignored. Given that I didn't want to fiddle with anything else, I never followed up on why this extra character was present. I do remember seeing the extra byte in a binary editor, though.\n. I've always hated dealing with character sets when the operating system doesn't handle the details itself! In my own LibTidy client, I keep LibTidy in pure UTF8, and let the OS handle all these nasty details. Clearly, though, there's a lot of value in LibTidy being able to do this.\nSome highlights from this W3C/WHATWG page, which is pertinent to HTML5 (which is what your samples are):\n\n\n\"Authors must use the UTF-8 encoding and must use the ASCII case-insensitive \"utf-8\" label to identify it.\" It seems right away that for HTML5, the sample document is possibly not valid because it's not UTF-8. This raises a good question: should be drop support for non-UTF8 output of HTML5 documents? We could accept non-UTF8 as input, but output could be forced to UTF8. Personally, I prefer giving users control of their output encoding, and not going this route.\n\n\n\"The table below lists all encodings and their labels user agents must support. User agents must not support any other encodings or labels.\" This means browsers, but clearly Tidy is a user agent, too. What I gather from the table is, \"encodings\" are \"encodings,\" and \"labels\" are synonyms that cause the UA to use the encoding. So, in the case of \"latin1\", Tidy should recognize that \"windows-1252\" is what should be processed. Of course, now we might argue that Tidy should also recognize all of the other labels for this encoding, too, as meta charset strings.\n\n\nOf course, HTML4 doesn't use meta charset, so the sample file, if were were checking encoding labels, would have to use a different meta declaration.\n\n\nIn this document W3C strongly indicates that a lot of the encodings we support shouldn't be used, particularly the east Asian languages.\n\n\nNow, I'm wondering why your console is showing rubbish? Tidy should be successfully forcing your console to UTF8 these days. Do you still get rubbish in the Power Shell? As far as I know, the only rubbish in the standard CMD these days should be with Asian languages.\nWhen I check your sample document as-is, nothing is wrong with the character set, only the warning that UTF8 should be used. When I change it to HTML4 (including the meta), it validates perfectly, even with the out of range characters.\nThe aha moment! That link indicates that \"For any other encoding, visual checking is necessary.\" The validator, it seems, is not a charset validator. I think that Tidy has to obey the specifications of the charset, and not depend on the validator for charset validity.\ntl;dr: @geoffmcl, I think Tidy is doing the right thing in indicating the invalid character.. Not a bad idea. I'll leave this open for comments, and in the meantime I'll assign it to 5.7, which we should start working on at the end of December. As we're getting ready for an official release next week, I don't think this will make it in.\n. @funkyfuture, can you try this with a current version? And post a complete, working sample file and configuration that reproduces the problem. Thanks!\n. @funkyfuture, thanks for getting back.\nTidy doesn't warn on \"optional\" end tags, and that's considered optional (see omit-optional-tags).\nAnd when Tidy finds the closing tag, later, it does two things: adds the \"missing\" opening tag (and warns), and then realizes that it's an empty tag, so deletes it (and warns). Perhaps there's some logic that can detect and avoid this in the future, but for now, that's the explanation of how Tidy works!\n. @geoffmcl, sorry about the RL conflicts! It hurts more that I see the issues come in the inbox, but don't have an opportunity to provide feedback. This patch looks good. The guards look good, although it's probably not needed. I know starting in C11 a zero size in standard snprintf is okay, but I can't find any references in previous versions, to leave it in.\nI'm still a bit overcommitted until this weekend. Feel free to merge this patch and bump the version at your convenience.. @yngwei, \u8c22\u8c22, we'll have a look at it. Can you post your Poc file here? Add it as an attachment to a message.. Yeah, that looks true. Tidy didn't detect any features specific to XHTML5, so it defaults to the lowest possible version. We should look at the missing DTD and realize that it can't be less than XHTML5. When the meta is added, as you indicate, a flag is set indicating (X)HTML5, and so the lowest possible version becomes HTML5 and reports correctly.\nOn the other hand, that message is an \"informational message\" (--show-info no can hide them), and doesn't affect processing of the document.\nPR's to fix are welcome.\n. @ppKrauss, you can clone to testing repository: https://github.com/htacg/tidy-html5-tests\nYou can use run-tests.sh on Ubuntu. Check your environment so the script knows where to find your Tidy.. Like I said, check your environment so the script knows where to find your Tidy. Or you can modify run-tests.sh so that TMPTIDY points to the Tidy you want to test.\n. This isn't really a Unix or DOS support site, but try man for in Unix to learn how to do things multiple times in POSIX environments. The Unix philosophy favors composability as opposed to monolithic design, meaning that your shell provides tools such as for, xargs, and others that can address these needs. It would be highly inappropriate for Tidy to support \"globs\" directly.\n. See the option warn-proprietary-attributes for instant resolution.\n. @petdance, it should be fairly trivial, but memory consumption could skyrocket. Not sure that that's important in this day and age, but libtidy can run currently on some pretty minimal systems.\nRight now each message is dealloc'd after emission, but keeping them around until tidyFree() is doable, and a simple structure to hold references could be added to tidyDocImpl. Then the existing message API can fetch the messages. A quick sort on the line and column numbers, output the messages, and it's done.\n@geoffmcl is on record elsewhere that this doesn't belong in Tidy, although it seems maybe he's coming around.\n. @petdance, are you using LibTidy, or the CLI for HTML::Tidy5? Using the library directly is the way to go, so that you can use the TidyMessageCallback API, which is future proof. If we ever decide on a way to provide an HTML extract as part of the TidyMessage, then it will be queryable with the TidyMessage API. You never, ever have to worry about what the CLI client does.\nFor your two questions in particular, though:\n\nYes, if we figure out a way, then the extract would be part of the TidyMessage object.\nThis is tricky, because right now the CLI doesn't display text; the library does this directly for legacy reasons. Ideally we'd partition these roles, and let the client take over responsibility for this display. The neat thing, it enables sorting, if desired, as well as a few other nifty things. Tidy console really should just be another client.. @petdance, I know about the module, I was simply wondering if you wrapped the console application, or the library directly. There are a lot of tools out there that wrap the console application and try to scrape STDOUT and STDERR instead of using the library.\n\nActually, some of the library users may be using the output sinks directly and scaping them for information, too. If you're doing this, or using one of the older message/filter callbacks, take a look at the newer API in TidyMessageCallback.\nIt was inspired by @gagern if I recall correctly, and really is the future-proof way to collect all message output that LibTidy will ever create. And if we ever add an extract, it's a simple, new accessor that we add to the API that you can pick up, too.\n. Yeah, I got that. My previous message wasn't asking for clarification from you; I was clarifying why I had asked! And because  you're using the library, I went on to explain why you should be using the message API. . I'm not knowledgeable about Perl modules, but in your XS file, I see that you're using output buffers to capture Tidy's standard and error output. If you can configure a callback of type TidyMessageCallback, you can collect each of Tidy's messages constituent parts as they are generated. The callback will provide a TidyMessage object, which you can interrogate with the TidyMessageCallback API.\nThis decouples you completely from any dependency on how and what stderr and stdout have in their buffers, because you now have access to all of the data that were used to generate the messages.\nA quick Google check seems to indicate that XS supports callbacks, so this may be an extensible avenue for you, especially if you want to be able to sort output rather than waiting for the Tidy CLI to offer that as a feature.\nIf you look at tidy.c:1919, you can see an example implementation. It's ifdef'd out, but is a fairly complete implementation.\n. Guys, no synonyms, please. Either change the option name, or leave it alone. We've worked hard to eliminate synonyms in the past, and to remove deprecated options, and to organize them them a bit better. Adding synonyms does nothing for functionality.\nI'm fine with changing the name, but please use the deprecation mechanism to support the old name short term. I can help with this, since no one has used the new mechanism yet.\nAdditional documentation is always welcome, and that goes for any of the other options, too.\n. I don't object to synonyms using the CLI app; I'm simply asking that no one consider polluting the library with non-core junk. \nThe request is for user interface enhancement, which belongs in the CLI app. Use the TidyConfigCallback in the CLI app to implement it in the client, and it will work with config files, etc., without complicating the library codebase. This is also an excellent mechanism for implementing other user interface changes without having to code them into the core library. \n. @ler762, there's actually a mechanism to accept deprecated names as a means to transition users to use the new names of options, but I agree, there's no reason to rename something that works.\nDo you want the proposed show-filename to output on every line, like gnu-emacs, or simply one time, somewhere in the output?\nIn the former case, given the existence of gnu-emacs this doesn't really anything. If you want a single line somewhere in the output, such as the first line, then this is an ideal candidate for a Tidy CLI application option. Application options are single hyphen (-) switches, although if you want to support configuration files, we can fake LibTidy configuration options (-- switch) using the callback I mentioned above.\n. > Talk about polluting the console app with totally unecessary junk, really complicating the console app codebase... just does not seem worth it, but ideas differ...\nIt's an infrastructure service that could potentially be used for allowing other console switches to work in configuration files, e.g., language. There's been a lot of monkey patching over the years, and a sensible architecture can help prevent monkey patches.\n. I'm for the ability to emit the filename. There's a demonstrated use case. But this is a client feature, not a library feature. If we want to support -- for config files, then the callback is a valid mechanism. If we're happy with - switches, then the callback isn't necessary. If we want to support-- without the callback, then you're looking at a monkey patch. Overall, this is a client-UI decision, and not a library decision. \nThat callback has been there since the dawn of time. Actually, the one I mentioned is a bit newer; it corrects the faulty design of the original by providing a reference to the Tidy document in question. This wasn't a monkey patch. It's proper design for a client-server (client-library) model, and is part of the original, intended design.\n@geoffmcl, you tend to overlook the fact that LibTidy is a library, and the console application is a consumer of the library, and you tend to want to give special privileges to console. In modern terms, they're very tightly coupled, and there's no reason to be. For example, there's no reason on Earth that LibTidy needs the ability to report the input filename to an output buffer. That onus falls completely on the client program. And the same really goes for other things like gnu-emacs and quiet and other things that the client should be responsible for, and not the library servicing it. And you know how you can support the config file mechanism for these client-only options? Use the callback that's been there since the beginning.\nThe right thing to do would be to remove all of the option names from the library completely, and let the client deal with them. This would contribute significantly towards the ability to internationalize the option names without spoiling the integrity of the library. The library shouldn't care about gnu-emacs; the client should look for gnu-emacs or the French version thereof, and request TidyEmacs. \nDespite all of these flaws, I have no intention of fixing them. There are other priorities. But at the same time, I will crusade against adding crap to the library when it can be handled perfectly well in the client, and that goes for synonyms that have no place in a library, and for adding additional output that doesn't involve the library at all.\nI'll reiterate: I'm for the ability to emit the filename. There's a demonstrated use case. But this is a client feature, not a library feature. If we want to support -- for config files, then the callback is a valid mechanism. If we're happy with - switches, then the callback isn't necessary. If we want to support-- without the callback, then you're looking at a monkey patch. Overall, this is a client-UI decision, and not a library decision. \n. Given that this is not a synonym, then +1 for support.\nAlso support @geoffmcl's proposal to output the filename in tidy.c to cover cases with no message output, although I might suggest that it be placed in tidyDocRunDiagnostics() instead. Despite this being in the library, it's only emitted when requested by the client, and so follows the server-client model very nicely, and it would be silenced upon request in the same manner that other stuff already is. \n(Plus, @geoffmcl, it might be simpler to localize. Right now your issue-713 branch is adding the non-localized string \"Tidying.\")\nI don't think that cross-referencing is important in this case because these options are not synonyms, and are in no way related to each other other than that the both (coincidentally) indicate the filename of the input file.\n@ler762, if you want to \"complete\" your PR with the cross-references, have a look at message.c:1516 and below. You'll want to add two new static const arrays, one for TidyEmacs and one for TidyShowFilename, each referencing the other. Don't forget to terminate with TidyUnknownOption. \nThen add them each to docs_xrefs[] below. Please note the alphabetical order.\nThe man page will automatically include the xrefs next time the project is built on Unix, and the documentation sets will automatically pick them up next time they're built against this executable.\n. @ler762, you don't really need a \"see also\"; the xrefs will take care of that, but maybe just a quick note on TidyShowFilename saying that gnu-emacs overrides it.\nJust a quick note on formatting: there's no need for trailing backslashes on interrupted lines. C only cares about whitespace in certain, limited circumstances. It doesn't hurt; you're effectively escaping the carriage return, but just weird to look at outside of a Unix shell.\n. @geoffmcl, I encouraged them to file this feature request after a question to the W3C mailing list.\nIf you take a look at the XML output routines for documentation, this would look a lot like that, except dump JSON instead of XML, using the filter callback. In English/French/whatever, it would return all of the data from the TidyMessageCallback API, which includes both the built in strings (always) as well as the localized strings for the current language.\nI'm actually surprised no one has asked for this facility before, because it almost eliminates the need for interfacing to the C library from non-C languages, as almost all of these scripting languages support some type of system() call and the ability to parse JSON. \nIt would probably look something like:\n~~~\n{\n  \"filename\": \"tidyme.html\",\n  \"messages: [\n    \"message\": {\n      \"messageLine\": 1, \n      \"messageColumn\": 22, \n      \"messageLevel\": 1, \n      \"messageIsMuted\": false, \n      \"messageDefault\": \"inserting missing 'title' element\",\n      \"message\": \"poniendo elemento 'title' que hace falta\",\n      {etc}\n    },\n  ]\n}\n~~~\nThis could be extended to include the actual document output, although I recommend still using STDOUT or a file for that (escaping a huge HTML document properly for JSON isn't pretty), include an array for \"configuration\", etc. \nActually, separately, I might enter a feature request that allows tidycfg files to written in JSON in the future, too. This potentially lessens the burden on many, many tools that work with the console application instead of using LibTidy directly.\n. It looks correct on the surface, and everything that should be escaped looks escaped. I agree, there's a pointer somewhere screwed up; it works okay in LibTidy; you're not trying to hold anything after the callback returns, are you? Every is dealloced after returning, so maybe that's it. Why does the French look like it's missing a lot of letters?\nThe sample is also exposing the messageLevel value. We can't let that happen. I'd skip emitting it completely, and use one of the other API accessors, like tidyGetMessagePrefixDefault, or one of the message keys.\nHmmm, I'll have to look into the messageIsMuted for the bug; I know that this was tested at one point. Just for the sake of caffeine management, you're not treating it as a string, right? It's a bool that needs to be printed into JSON as a string.\nI suppose the advantage of putting it into tidy.c is because everything is in tidy.c, including all of the documentation generation stuff, and everyone has tidy.c by default, without having to fuss with installer options, cmake options, etc. It's just another alternative output format, and there's not really a disadvantage.\nI'll dig into it more, too, when I have some time. As you know, I've been swamped.\n. I can supply binaries as well. I've got a six-month old, so similar time restraints as @geoffmcl, unfortunately.\nMy style is to attack something, and spend all of my time on it, which I'm unable to do right now. I can pitch in for smaller maintenance things and releases for now, and see how it works out in the future.\nWe've always looked for other maintainers, and that invitation is still out there!\n@geoffmcl, what help do you need for a 5.8 release, if you think it's ready?\n. I'll try to support this weekend. It's a long holiday weekend for us on this side of the pond.. @Lin-Buo-Ren, I'd rather give you access to another repository under htacg, if you're willing to maintain this. Tidy does not distribute on any platform, and we can't take responsibility for every different distribution means that is out there. For example, you'll see that someone else maintains the Linux distros, Chocolately, homebrew, etc.\nWe do have build options in our CMakeLists.txt file that helps with various distros, however, and if you can come up with a pure cmake solution for snap, or want to add something to the CMakeLists.txt that makes it easier to distribute to snap from another repo, then that would be much, much more appropriate.\n. I use this template for working with Tidy. I see that you're trying to link to a homebrew installed Tidy, but the linked Xcode project will statically link. Given Tidy's small size, I think it's worth it to keep up with the latest source.\nIn any case, is there a request to the devs here?\n. The wrong linker flag is where, though? Tidy builds using CMake, and it builds just fine on macOS, using the standard install locations. The Xcode project I provided builds just fine, too. Homebrew seems to be the outlier here.\nI'm happy to help, but where, specifically in the setup section would you want this? Since it seems like you're only talking about documentation, a PR would be welcome, so that I understand you completely.\n. This used to be in the console application. A change early this year moved it to the library. I would suggest moving it back to the console application. . This is the actual fix.\n. None of these are needed as no provision anywhere in the code makes for other allowances once we treat Mac OS X the same.\n. Assuming cp1252 has always been the case, except in the broken Mac implementation.\n. Still require this logic if the actual input encoding is set to MacRoman, though, otherwise there can be no other assumption than cp1252.\n. Not needed.\n. Not needed.\n. ",
    "johnweldon": "It doesn't look like the code changes did get merged in.\n. Awesome, thanks!\n. ",
    "ermshiperete": "Is the new tidy backwards-compatible, i.e. do we still use the same command line parameters? Or in other words, will a script that uses the old tidy still work with the new tidy without requiring any modifications? If this is not the case then it might be better to use tidy5 as the name.\n. Superseded by PR #113 \n. @skynet As you might have noticed, my repo hasn't been updated in a long time and is more or less in the state of this repo in 2012 with a few fixes applied (that I believe have been applied to this repo also in the meantime). I wouldn't recommend to use my fork nowadays if you want to benefit from the new features for HTML5.\nI had created the fork because we needed a working version of tidy that works with HTML5, and the official repo wasn't maintained anymore for a while. Now that this official repo gets patches applied again I would recommend using it instead.\nThe only other difference (other than it's terribly outdated) of my fork is that it contains a debian branch that contains the necessary files for packaging for Debian/Ubuntu.\n. @geoffmcl No I didn't try. But as I said, my repo hasn't been updated in a long time...\n. ",
    "petdance": "Understood entirely about the filenames.  In ack, I have files grouped like so by default:\n```\n$ ack image\nattrs.c\n241:  { TidyAttr_USEMAP,            \"usemap\",                CH_URL       }, / things with images /\n1837:        \"hidden\", \"image\", \"button\", \"color\", \"date\", \"datetime\",\nclean.c\n406: background=\"foo\" ->  body { background-image: url(foo) }\n447:            TY_(AddStringLiteral)(lexer, \"  background-image: url(\");\nentities.c\n208:    { \"image\",    VERS_FROM40,  8465 },\n```\nBut if you call it with --nogroup, it looks like this\nattrs.c:241:  { TidyAttr_USEMAP,            \"usemap\",                CH_URL       }, /* things with images */\nattrs.c:1837:        \"hidden\", \"image\", \"button\", \"color\", \"date\", \"datetime\",\nclean.c:406: background=\"foo\" ->  body { background-image: url(foo) }\nclean.c:447:            TY_(AddStringLiteral)(lexer, \"  background-image: url(\");\nentities.c:208:    { \"image\",    VERS_FROM40,  8465 },\nAnd that --nogroup is something you can throw in your .ackrc file, too.\nSo maybe that's something we could do?\n. What I'd really like to see is a mass cleanup of the source code.  We're basically working with a fresh import of the CVS code, as I understand, and so now is the time to clean up the whitespace/indentation mess.\n. At this point, git annotate shows only one or two commits, at least on src/attrdict.c.  Nothing is getting messed up.\n. CVS blocks have been removed as of 76c2b57fa6775032a65a99ebd77a6dfaced17c0d\nhttps://github.com/w3c/tidy-html5/pull/60\n. Thanks for this!\n. On Sep 4, 2014, at 2:00 PM, Ionel Roiban notifications@github.com wrote:\n\nAt this point there are two options: re-engage developers with commit access, or fork the repo and continue development. What do you, or others, think?\n\nWho would be doing the \"continue development\"?  It seems to me that the problem isn't the repo or the project but that we don't have developers with the time/motivation/etc to work on it.\nIf there are developers who are ready to do development on the project, then I wonder what they think next steps should be.  You say \"re-engage developers with commit access\", which sounds like you're saying that more people would work on the project if they had commit access.  Is that the case?  Who are these developers that are being stymied by lack of commit access?\n\nAndy Lester => www.petdance.com\n. Do you actually have \"developers who are willing to maintain the project\"?  I don't think forking the project is going to make developers appear.\nDon't get me wrong: I'd LOVE to have some forward direction on the project, and I'd contribute, but mostly it needs strong direction.\n. I'm interested in helping out, but don't understand the W3C ins & outs.  I'm glad to contribute time & code as soon as there's some direction.\n. 1) Where is the new repo?  I can't tell from the thread where it is now.\n2) Perhaps an overview of what needs to be done, other than \"fix bugs\", would be helpful to people who want to get involved.\n. I converted from RT to GitHub a few years ago: http://perlbuzz.com/2012/01/parrot-tickets-now-converted-to-github.html  Transfering from one bug tracker to another is not just a simple \"convert this to that\".  There are undoubtedly impedance mismatches between SourceForge's data points and GitHub's.\n. Seems that when the repo got moved, my push rights went away.  Don't know if this was intentional or not.\n. I'm still not able to push: \n```\nERROR: Permission to htacg/tidy-html5.git denied to petdance.\nfatal: Could not read from remote repository.\n$ git info\norigin  git@github.com:htacg/tidy-html5.git (fetch)\norigin  git@github.com:htacg/tidy-html5.git (push)\n``\n. I'll check later.  I'm starting a combination design doc and FAQ.\n. Agreed: There needs to be a dev branch.  People coming in to look at the project will expect that master is deployable.\n. Hi, I maintainHTML::Tidy`.  I'm very interested in using the new tidy-html5.. Note that my goal is to do away with tidyp and Alien::Tidyp.. I will try to take a look at the new tidy in the next couple of days.  Right now I have a bunch of work with Perl::Critic and ack to deal with first.. I don't understand why you're posting all this over here on tidy-html5, when it's html-tidy that is the Perl around it.. I welcome the help.  Thank you.\nI'll let you know as soon as I get something working for this new tidy-html5.. @benkasminbullock That's fantastic.  I didn't know that that had been released.  How does it compare to HTML::Tidy?  Should I abandon HTML::Tidy and switch to HTML::Valid?. I see it as just a marker to the work that needs to be done on the Perl side. . In src/message.c, at line 852, this seems to be the problem:\ncase COERCE_TO_ENDTAG:\n        case NON_MATCHING_ENDTAG:\n        case TOO_MANY_ELEMENTS_IN:\n            return TY_(tidyMessageCreateWithNode)(doc, rpt, code, level, node->element, node->element );\nI would think that the second node->element should be something else.  But I don't know enough about tidy internals to say for sure.. Is there something specific you want me to look at?  My time right now is being spent on the HTML::Tidy5 Perl wrapper around it.\n. If you want to call it a feature request, go ahead.  It's not that big a deal to me, other than I was surprised.  I'd push harder for it if it were trivial, but clearly it is not.. There are really two questions here:  \n\nshould libtidy optionally allow returning the text of the HTML as part of the warning?\nshould the CLI tool optionally display the text of the HTML that caused the warning?\n. I don't have any strong feelings about whether the message stuff should be in libtidy.  I just need a yes/no on whether it will, so I can act accordingly on HTML::Tidy5 in Perl.. >>  just need a yes/no on whether it will, so I can act accordingly on HTML::Tidy5 in Perl.\n\n\nare you using LibTidy, or the CLI for HTML::Tidy5?\n\nI think you may be confused by what I meant by HTML::Tidy5.  HTML::Tidy5 is the Perl module that I created that wraps libtidy.  https://search.cpan.org/dist/HTML-Tidy5. >  HTML::Tidy5 is the Perl module that I created that wraps libtidy.. > I went on to explain why you should be using the message API.\nThen I'm not understanding what you're talking about.  Please say more.. Thanks.  I'll try to make some time to look into this.. I'm not sure what you're saying here.  Are you saying that the behavior should change if it's HTML 4 vs. HTML 5?. This seems related to #475.\n. I don't know what I would be doing to test the branch's regression tests.  Point me in the right direction and I'll see what I can do.. >  (1:2) Warning: missing <!DOCTYPE> declaration\nStill show line 1.  If you report it as line 1, then display line 1.. > I would not be too concerned about the line length\nThe problem with line length is that sometimes machine-generated HTML will have very long lines with no line breaks.  The other day I got errors like this:\n\n(1:40293) Warning:  isn't allowed in  elements\n(1:57619) Warning: discarding unexpected \n\nThe entire HTML output was one 100k-long line.  It doesn't make sense to print \"line 1\" as the context.\n. > On the other hand it may be easier in the Perl wrapper, since IIRC, the source string is already in a perl variable, and on reading back the tidy warnings, use the line/column to extract appropriately from the available source...\nThat's exactly what I was doing before I stopped.  I started working on the context branch in https://github.com/petdance/html-tidy5 and stopped when I realized you might want to do it at the lib level.\nI could still do it in Perl.. > I guess if anything is to be done to improve this, the warning message in this case could be expanded to implicit  anchor \"bongo\" already defined, indicated that tidy added this, or something...\nOr have tidy not report on actions that it has taken itself?\nIt makes sense to fix the bad tag, but it's confusing for tidy to report on something that is not in the original source HTML.. > Well I now think tidy has an obligation to report on all changes it makes,\nYes, I agree.  It should report all the changes it makes.  I just don't think it should report warnings on the changes it makes.. > line 8 column 14 - Warning: Implicit  anchor \"bongo\" duplicated.\nSounds good.  Even better, something like\n\nline 8 column 14 - Warning: Implicit  anchor \"bongo\" duplicated (added by tidy)\n\nJust so the user knows why the error appears.  The problem is that tidy complains about something that's not in the original source, so the user is confused.  At least I was.\nAlso, note that I'm talking about this strictly from the point of error detection.  I have never used tidy's cleaned-up code.  I just want to know about the errors so I can fix them.. line 8 column 14 - Warning: Implicit <span> anchor \"bongo\" duplicated by Tidy.\nSure.  That makes it clear that it wasn't in my original source code.  I might even do it as\nline 8 column 14 - Warning: Implicit <span> anchor \"bongo\" (duplicated by Tidy)\nto make it clear that it's a normal error message, but that Tidy was the cause.. > Would really appreciate some W3C references on this issue, rather than w3schools, but thanks for these...\nSorry about that.  I didn't know where to find them.  If you could find a corresponding link that would have been better and paste it here, I'll have a starting point for next time.. Sure, if --strict-tags-attributes yes works, then I'm happy.. > I too feel tidy should warn, at least as a user education tool, of such fixes, several have been allowed to stand over time...\nFor me and my use case, I don't ever use the tidied HTML.  I only use Tidy to find problems that I then clean up myself, or to show errors in our CI test suite.. How do I run the test suite?  I can't figure it out.. Perhaps we need something in the tidy-html5 repo that explains to go look in the test-suite repo.  I didn't realize it was a second repo.. Looks good.  Thanks.. Excellent, thank you.  I'll try to work with it tomorrow.\n. I don't see a tag or release for 5.7.17.  Am I missing something?\n$ git tag\n5.0.0\n5.1.14\n5.1.24\n5.1.25\n5.1.8\n5.2.0\n5.4.0\n5.6.0. > The request for strict-tags-attributes should only change from a warning to an error\nI guess that's OK with me, although I'm not sure I understand the difference between a warning an error if it's strictly diagnostic.. I don't have any feedback one way or the other.  I would just expect that if you turn on one flag, it wouldn't suggest you turn on a different one.. I'm not complaining, and I know how to fix my tests.  I just wanted to bring it to your attention because I couldn't tell if it was an intentional, since I don't have a list of changes between 5.6.0 and now, and I didn't see any GH issues when searching for \"css-prefix\".. I don't know that there's a \"use case\".  I just see a bug.\nI think that it's incorrect to conflate <a name> and <div id>.  In the example above, tidy tells me that I have a duplicated ID, but there is no duplicated ID.   https://validator.w3.org/nu/ does not complain about a duplicated ID.\nI don't know what else there is to say about it.. I am not using tidy to modify HTML.  I am only using it to validate existing HTML.  I am only using the errors & warnings.\nThe problem is that when I run\n$ tidy -q -e foo.html\n\nI get this warning:\nline 10 column 9 - Warning: <div> anchor \"content\" already defined\n\nTidy is telling me that there is already an ID called \"content\", but that's incorrect.   There is only one ID called \"content\".\nThe results are the same if I add --anchor-as-name yes or --anchor-as-name no.. Tidy should not give me warnings about anything other than the file that I've given Tidy to check.  If there's not a problem in the original file, then Tidy should not give me a warning.\nWhat I understand is that tidy takes this:\n<div id=\"x\"><a name=\"x\">\n\nand turns it into this\n<div id=\"x\"><a id=\"x\">\n\nand then gives me a warning based on the transformed HTML that I as a user did not give to tidy.\nWhen I see an error message saying \"There is something wrong with line 10\", I as a user assume that it's talking about the line 10 of the file that I gave it.\nTidy should not give me a warning about the HTML that it generated itself.  Tidy created that error.  The error is not in the HTML that I gave to tidy to check.\nEven if Tidy said \"I have changed <a name> to <a id>\", it's still giving me an error about something that does not exist in the file I gave to Tidy.. > is html5 - correct? In which case <a name=xxx isn't allowed\nYes, that's correct, <a name> isn't allowed in HTML5 and that would be a good error to have, too.\n. I think the miscommunication is because @geoffmcl is talking about the internals of Tidy, and I'm talking about what the end user sees.\nI'm a user who is asking for Tidy to tell me how my HTML looks.  Tidy tells me Warning: <div> anchor \"content\" already defined, but that is not correct, because that error does not apply to the file I gave to Tidy.  It applies to the file that Tidy has modified internally.\nIf the warnings said something like this, that would at least tell the user that the error is not in the original document.\nThe warnings that follow apply to Tidy's internal modification of your document.\nline 10 column 9 - Warning: <div> anchor \"content\" already defined\n\nAdd a warning about this? ie the creation of an implicit id=\"x\"...\nMore docs info that ... the actual problem may be elsewhere, even in something implicitly added by tidy?\n\nEither of those would give me a clue, yes.\nWhat would be most useful, I think, is if there was a way to tell Tidy \"I just want to know about the errors that are in my original document.\"  That's what my expectation is when I run tidy foo.html, but if we need to make it explicit and have a \"check-only\" mode, that would be fine, too.. Ideally, I'd like to be able to say \"Don't do any modification and just tell me what is wrong with what I gave you\".  What you've proposed is a good middle ground.. ",
    "burtonsys": "Any idea where to find a windows binary for this?  Or, better yet, a DLL build, for Notepad++?\nC:\\Program Files (x86)\\Notepad++\\plugins\\Tidy2.dll\n. Thank you!\nI tried replacing the Tidy2.dll with a renamed Tidy.dll from the 32-bit Windows binary, tidy-5.1.25-win32.zip. But when I started Notepad++ it reported:\n\n---------------------------\nC:\\Program Files (x86)\\Notepad++\\plugins\\Tidy2.dll\n---------------------------\nThis ANSI plugin is not compatible with your Unicode Notepad++.\nThis plugin is not compatible with current version of Notepad++.\nDo you want to remove this plugin from plugins directory to prevent this message from the next launch time?\n---------------------------\nYes   No   \n---------------------------`\n\nOh, well. The command-line version works, and it is much improved over the version which is integrated into the Notepad++ Tidy2 PlugIn.\nThe command-line version is still not perfect, IMO, because it always puts the </script> tag on a line by itself, even when it immediately follows a <script...> tag that pulls in javascript from a separate file. But it ii certainly much better than the version which is integrated into the NPP Tidy2 PlugIn.\n. ",
    "jh2858": "Thank you, that explains it.  The version of tidy available at tidy.sourceforge.net uses ascii as the default for char-encoding (http://tidy.sourceforge.net/docs/quickref.html#char-encoding).  It appears the default behavior is different with this fork.\n. ",
    "peterkelly": "Found a way to apply the same optimisation to RemoveAnchorByNode... will submit another patch soon\n. Just updated with another patch which applies the optimisation to RemoveAnchorByNode (which now takes the name as a parameter, so it can look in to the correct hash bin).\nThis is my first time I've worked with the HTML Tidy code so please take a look at this and let me know if there's any problems with the way I've done it.\n. ",
    "HoffmannP": "Doesn't http://www.w3.org/TR/2014/REC-html5-20141028/scripting-1.html#restrictions-for-contents-of-script-elements say, that you must not use the string '<script\u2026' inside the script-element?\n. I absolutely agree, that what tidy currently outputs is unacceptable.\nI also think, that tidy should not include an javascript-parser (which wouldn't even solve the problem as the script tag can theoretically contain anything else as well, e.g. JS-Fragments).\nNow you might want to simulate what the human eye recognizes at once:\n\u2026\n<script>\nvar a = '<script';\n</script>\n\u2026\nis legit JS inside a script tag. But what happens if the JS is invalid (or it's not JS but whatever else, e.g. JS-fragment or gibber-script):\n\u2026\n<script>\nvar a = '\n</script data=''</script>\n\u2026\nis that still as obviouse? And even valid JS code can be a problem:\n\u2026\n<script>\nvar a = '\n</script data=\"</script>\"';'</script>\n\u2026\nI really see no way to know what the user intends. The best\u2122 behaviour would be to flag the content of a script tag if it does not match the ABNF. But how to know the correct intended script-tag content? The snake is biting itself in the tail\u2026\n. So I read the specification about five times and seem to have some kind of temporaral thinking barrier. I pseudocoded the ABNF:\n\"not (<!--)\"  *(  <!--          \"not (-->|<script>)\"  -->            \"not (<!--)\" )\nouter         *(  comment-open  inner                 comment-close  outer        )\nYou are allowed to use as many times </script> inside the script-tab, just <script> is only allowed if enclosed in HTML-comments?!\nSo it seems that @NoNoNo 's example is perfectly valid HTML5\n. I absolutely see your point. It can be considered out of tidy's scope to \"know\" (other) (templating) languages, so a probably better option would be to use some kind of preprocessor that 1. removes code blocks and 2. replaces variable output blocks with some innocente content. That way tidy would never be in the position to have to discuss the addition of another \"templating symbol\".\nJust throwing as many switches as needed on your html template file doesn't seem to do the trick. Should such a preprocessor be part of tidy or should one use well known tools as sed or should languages deliver such filter. Mengeling languages is always making a mess\u2026. ",
    "vielmetti": "I'll note that this test case is not in the tidy test corpus yet.\n. The test case in_1642186.html is on Sourceforge at http://sourceforge.net/p/tidy/patches/63/ with a proposed patch. Since 1642186 is not in our set of test cases yet, I'll submit a PR.\n. I need to test every single test case on every single platform, because I'm making a change, and I don't know where I are going to have regressions. Ideally this universal test case coverage covers everything, even the ones I don't expect to fail, and ideally it runs silently and unobtrusively and in the background every time anyone makes a change, and it alerts right in the PR if something is amiss. And it doesn't cost anything except the continuous upkeep of test cases once it's set up.\n. Here's the corresponding pull request within my fork (just these changes). \nhttps://github.com/vielmetti/tidy-html5/pull/8\nI'll work on a proper pull request.\n. Can we reopen this? Now that we have a release, it would be useful to make sure that there's some way to ensure that subsequent changes don't cause regressions.\n. Thanks to @pedromorgan 's excellent start, I now have something running using Travis in my development version. You can see that file at https://github.com/vielmetti/tidy-html5/blob/master/.travis.yml\nI converted the installation so that it runs in one of Travis's containers and thus the whole thing builds in about 90 seconds.\nOf note for the next person to come around to this is that the version of cmake on Travis is too old to build tidy-html5, and thus this dependency is brought in via the kalakris-cmake apt source.\n. @pedromorgan thanks. I don't fully understand Travis yet & would be happy to work with someone familiar with the system.\nYes, building the docs automatically so that they track changes is important. There's a page full of doxygen errors and warnings at https://travis-ci.org/vielmetti/tidy-html5/jobs/80146632 that are all probably easy to fix. \nThe other first next thing I want to try to tackle is to update the test infrastructure, so that I can catch regressions and (especially) differences in the build between x86 and ARM architectures. My try on the Raspberry Pi 2 came up with about 100 lines of diff output (cf https://gist.github.com/vielmetti/2f50364c103919f59ae9) . Refactoring that so that tests either pass or fail and don't all have to be looked at by eyeballs every time. The testing README at https://github.com/htacg/tidy-html5/blob/master/test/README.md scares me just a little bit.\n. @pedromorgan embrace, delegate, or do the work in a fork; the main thing I want to work on is not the code itself (which seems in good hands) but the build/test/deploy infrastructure so that eventually it's dirt-easy to make apt-get install tidy or its equivalent do exactly the right thing for all of the systems I have to deal with and not have to fiddle with things by hand and not have to worry that the next release has broken something.\n. @pedromorgan - regarding Jenkins -\nI have a Pi that I can throw into the Jenkins mix as a remote, I think, but the last time I looked at setting it up for myself the complexity was too enormous. (Or more to the point, I wasn't working with someone who knew it cold.)\nMy last go at Travis for building docs using a modern-ish version of doxygen looks like it also did work, at least for the trivial case of not generating errors and only a few warnings. I picked up on what Travis was all about through the Node-RED project, those IBM guys know their build tools cold and it's a pleasure to work with them.\n. More notes on travis + doxygen for what it's worth: https://github.com/travis-ci/apt-source-whitelist/issues/40 we'd like a newish doxygen made available inside a supported Travis container so that the build is as efficient as possible.\n. I now have a Travis config at https://github.com/vielmetti/tidy-html5/blob/master/.travis.yml which successfully builds tidy and its documentation on both Mac and Linux, with both clang and gcc, with dependencies installed on both systems.\nIt doesn't do any make test, but that's a next step. I don't yet know the right test harness, but that would be a good separate issue.\n. A note that this is CVE-2015-5522 and CVE-2015-5523 and that Ubuntu has fixed this particular bug in their version https://launchpad.net/ubuntu/+source/tidy/20091223cvs-1.5 in 'wily'. \n(Adding the CVE numbers here to make it clear when searching for that CVE that the bug has been fixed.)\n. I wrote up how I use tidy here:\nhttp://vielmetti.github.io/post/2015/2015-09-10-xml2json/\nas a part of a web parsing pipeline.\n. The obvious place @skynet  would be a link somewhere from http://www.html-tidy.org/ but it's not clear where on those pages.\n. I have to say that doxygen is a big system and pulls in a lot of dependencies. I'm building the whole shebang on a Raspberry Pi 2 and it's pulling in most of a gigabyte of code just to build the docs (and all I really need is a little man page to build correctly).\n. Not important enough to keep on the issues list, so closing.\n. Making progress - the only unexpected dependency was xsltproc to build the man pages - and some questions of how the releases are tagged so that I can pick up the desired one. When I get something workable I'll send in a PR.\n. Yup! https://github.com/htacg/tidy-html5/pull/255 is a pull request. I had to pull in the rpm package because the build depends also on rpmbuild. Other than that, this does everything...tested on amd64...next to test is on ARM (Raspberry Pi and Pi 2, which will need a slightly different base image).\n. I closed the pull request because it was rejected. I'll look at putting together a new one if it makes sense.\nI see getting a Dockerfile into the distribution as part of the sign of project maturity that will help Debian, Ubuntu, etc. decide to pick up the project as \"official\", since it greatly eases the automated build-test cycle. (Similarly, automating builds with Travis seems to be equally important, to make sure that as many automated tests run as possible on every single code change.)\nThat said, this particular first pass was proper to reject because it had some flaws that were evident. I will maintain it on my project fork and come back to it when the time is right.\n. I'll note an additional versioning dependency:\ndoxygen wants to be a recent version, e.g. version 1.8.9.1. If it's an earlier release, e.g. the Doxygen version 1.7.6.1 that Travis CI provides, then it will generate a whole raft of errors. \nOn my Raspberry Pi 2, doxygen is running at Doxygen version 1.8.1.2. I don't know yet if that will work, have to check my build logs, and I don't know yet if there's a more recent build available.\n. PR was rejected, so closing. Someone else who comes along can ask to bring it back up to life.\n. Noted in this bug on Ubuntu for tidy:\nhttps://bugs.launchpad.net/ubuntu/+source/tidy/+bug/1029209?comments=all\n. And also noted in the tidy-html5 page for Debian, which is I think where we need to go next:\nhttps://bugs.debian.org/cgi-bin/bugreport.cgi?bug=770129\n. Issue has been raised with the Debian community, and it's not a bug in tidy, so this can close.\n. 5.0.0 is installed in Homebrew (and it already had been; a brew update pulled it in). Closing.\n. ah, my fault, I was running 5.0.0. Updated my build...closing.\n. Closing this pull request as it was rejected by the package maintainer.\n. Thanks Geoff. I updated the Ubuntu bug to mark as \"fixed in tidy-html5 5.0.0\" - not a waste of time, I hope, because it's useful to have a stable URL to reference when marking a bug as closed.\n. This issue is closed when Macports releases 5.0.0 (or later). It hasn't done that yet, cf:\nEdwards-MacBook-Air:~ emv$ /opt/local/bin/tidy -v\nHTML Tidy for Mac OS X version 4.9.36\nAnd it should stay open with the \"Build/Install/Distribute\" label until that task is complete, or until Macports closes their ticket one way or another.\n. The response from MacPorts, picked up by @ryandesign\n```\n48838: tidy: update to 5.0.0\n---------------------------------+--------------------------\n  Reporter:  edward.vielmetti@\u2026  |      Owner:  ryandesign@\u2026\n      Type:  update              |     Status:  assigned\n  Priority:  Normal              |  Milestone:\n Component:  ports               |    Version:\nResolution:                      |   Keywords:\n      Port:  tidy                |\n---------------------------------+--------------------------\nChanges (by ryandesign@\u2026):\n\nkeywords:  tidy =>\nowner:  macports-tickets@\u2026 => ryandesign@\u2026\nversion:  2.3.3 =>\nstatus:  new => assigned\n\nComment:\nYes, I will do this. Because the library version changes, I will need to\n also identify all ports linking with libtidy and cause them to rebuild.\n```\n. Closing now, thanks @ryandesign - let us know if any of the ports linking with libtidy run into issues.\n. It looks like the \"Make package\" issue is at\nhttps://github.com/htacg/tidy-html5/blob/master/CMakeLists.txt#L357\nwhere it will need some special treatment for ARM to get the names right. It looks like \"armhf\" is one safe target to get right.\n. This Stack Overflow post has a little bit of logic to pick up an ARM system\nhttp://stackoverflow.com/questions/29247132/cmake-top-level-project-with-multiple-child-projects-creating-packages\nhowever it is missing the logic to distinguish among ARM6, ARM7, and ARM8 (64 bit) architectures. That only matters a little right now, but if tidy-html5 is eventually going to be packaged for all systems, we need an automated and repeatable and testable build on all systems.\n@somian, I am not finding easily a full-featured autotools for a win32 or win64 environment, and since this package builds under Windows, it's important to keep it building under Windows.\n. @somian - I would love an autotools solution integrated with CMake if it addressed the ability to make the project more portable and to have automated builds with automated testing for more systems.  It might be necessary to pursue the first part of that effort in a fork since @geoffmcl has rejected several PRs for build automation.\nThe goal to focus on I think is #222 (\"Popularize Tidy\") and to that end the challenge is to make this version of tidy-html5 the default tidy that you get on new systems, rather than the dead-end 2009 codebase that's widely deployed. That's an uphill battle until you can crank out a build and test it and have some substantial amount of confidence that it will work as expected.\n. I pointed the Chocolatey people at\nhttp://www.htacg.org/binaries/\nand they noted that this is marked \"experimental\"\n\nNote! This is an experimentatl binaries release! This is a WIP.\n. Rather than close this issue, it would make sense (if this doesn't belong in the main repo) to build another repo to host these files, e.g. the way https://github.com/atom/chocolatey or https://github.com/chevdor/ethereum-chocolatey .\n\nIt is, however, necessary to keep these files under revision control, so that if there are changes that they can be tracked.\n. Just to be very clear -\nI'm not saying that the current test infrastructure for win64, win32, Ubutnu 64 bit is broken. It seems to fit @geoffmcl 's needs very well. Take that as given.\nWhat I'm missing is test infrastructure for Raspberry Pi 2: ARM7 (not Intel x86), running on 32 bits (not 64 bits), and Raspbian  (not Ubuntu). It's a test of the whole system on a completely new chip, and thus it requires some care and scrutiny because none of those tests have been run by the lead developer or really by much of anyone. And thus any difference even tiny between the output of a test and its expected output might yield some insight about a portability problem.\nHappy to do all of the test tooling myself in a fork, to make sure that I understand how all the pieces parts fit together. I do guarantee that it's going to generate some results where an Intel-only developer test will not find the same problems.\n. I have no intention of suggesting that the tests be peculiar to myself. The ARM platform is on millions of Raspbery Pi's, and I want to get that platform adequately tested so that the people who are packaging tidy-html5 for Debian and Raspbian can have some confidence that it's working.\ni'm not ready to send in a PR yet, because too many of those have been rejected. You can look at\nhttps://github.com/vielmetti/tidy-html5/blob/bats-firsttest/test/firsttest.bats\nfor the test rig I'm putting together with bats, and \nhttps://travis-ci.org/vielmetti/tidy-html5/jobs/80416894\nfor a travis run that passed with a small set of tests. I'm purposefully skipping a set of test cases where the testbase output differs from the tidy output on Intel systems (Mac and Linux, clang and gcc) because those are all the same. \nI had hoped that the Raspberry Pi (ARM) passes all of the tests that aren't skipped, but it doesn't, so investigating. I'll open an issue if I find something concrete.\n. Thanks for making your intentions clear, @geoffmcl . I wish you luck in your project.\n. The link to \"API Documentation\" immediately below it is broken as well, http://www.html-tidy.org/tidy-html5/tidylib_api/\n. Also on\nhttp://www.html-tidy.org/\n\nCurrently the HTACG team is working hard putting the finishing touches on the new, stable version of Tidy, but you can be sure that we are developing solutions to provide binaries for your operating system as well as distribution through all of the common Linux/Mac software repositories.\n\nIt would be good to update this text to reflect current progress including distribution through homebrew and port on the Mac. I'm not sure where that web site lives or what controls it.\n. A snapshot of my work to date is here:\nhttps://gist.github.com/283310f5d9ae5b8335b2\nand here\nhttps://gist.github.com/f46d7f6db4afead6c170\nfor the next person who comes along.\n. Ticket opened at https://sourceforge.net/p/fink/package-requests/1044/ , so I think this issue can close.\n. I'll open a new ticket (as a documentation issue) when this package shows up in Fink.\n. tidy-html5 is now available via Fink.\n. @balthisar - I do not alas have a primary computer running fink to know how it should happen. However, the suggestion I'd have is to do fink install tidy and see if it brings in the executable.\nThe commentary on the above Fink project from the maintainer reads:\n\"I just added libtidy5/libtidy5-shlibs to cvs. The binary is still called 'tidy'.\"\n. ",
    "CMB": "Found another page that has issues\nwith SkipQuotes.\nBasically any wikipedia article has a script that causes trouble,\nso I isolated it into a test case:\nhttp://the-brannons.com/test2.html.\nThe result of running it through tidy-html5 with SkipQuotes enabled\nis here: http://the-brannons.com/result2.html.\nThere are no tags in the script.\n. Hi Geoff,\nThanks for the patch.  Works for me.\n. Hi again Geoff,\nLatest bug seems to be:\nhttp://the-brannons.com/test3.html\nwith result http://the-brannons.com/result3.html\nThis testcase is fine without SkipQuotes, but it derails the parser when\nSkipQuotes is enabled.  It's a style tag though, and not a script tag.\n. Geoff McLane notifications@github.com writes:\n\nHi Chris,\nHope you can keep at it, testing, until this new feature, skip-quotes,\nis as close to 100% perfect as code can ever be ;=))\n\nHi Geoff,\nYou bet!  We have a couple of people running the latest every day.\nThanks for the latest fixes, and I have a new testcase:\nhttp://the-brannons.com/test4.html and\nhttp://the-brannons.com/result4.html\nOnce this is completely hammered out, should any of these make their way\ninto the test/ subdirectory of the tidy5 repo?\n. Hi Geoff,\nI found a buffer overrun in the latest change for cdata, so I'm sending\nalong a pull request that (hopefully) fixes it.\nAlso looking at another instance of issue 65, and I'll try and send\nalong a fresh test case later today.\n. Greetings,\nI found another recurrence:\nhttp://the-brannons.com/test5.html\nThe parser has trouble with a solitary ' in a comment.\n. I haven't seen any recurrences of this issue in any of its forms for\nthe last couple of weeks.\nThank you.\n. This seems to be fixed for me.\n. So the real issue with the original page is that the parser gets\nconfused.  Sometimes the author used <path> </path>,\nsometimes they used <path />, and\nin some instances, they closed the tag twice, like so:\n<path /> </path>\nHere's another small representative sample:\nhttp://the-brannons.com/issue308html.html\n. @geoffmcl Works well for me, thank you.\n. @geoffmcl Thanks Geoff.  You can wget the page from here as well:\nhttp://the-brannons.com/broken.html\nSorry I wasn't able to pair this down to something smaller.  In this\ncase, it was easier to just find and fix the bug.\n. @geoffmcl Something like the following should work to pull and apply\nthe patch.  Current directory assumed to be the tidy-html5 source:\nwget -O commit.patch https://github.com/benkasminbullock/tidy-html5/commit/71d963844897a6864097d4bc36501a97ff314e40.patch\ngit am commit.patch\nAnd voila, patch applied, with proper credit.\nI can also confirm that the patch from @benkasminbullock fixes this.\n. @geoffmcl It's a hard call.  I don't see why you'd ever want leading\nspace in an href value, so stripping it sounds good.  But on the other\nhand, aren't values of attributes generally supposed to be treated as\nopaque?  I.E., pass them through without modification?  Both approaches\nsound fine, but I'm not sure which is the correct one.\n. @geoffmcl Pulled and tested.  This looks good to me.  I'm fine with\nclosing this issue if you like.\nThank you!\n. @geoffmcl,\nWe also believe this discussion applies to style and textarea\nas well as script.\nThe definition of style and script say that the allowed content is\nnon-replaceable character data.  The definition of textarea says that\nthe allowed content is replaceable character data.\nhttps://www.w3.org/TR/html-markup/script.html (definition of script element)\nhttps://www.w3.org/TR/html-markup/style.html (definition of style element)\nhttps://www.w3.org/TR/html-markup/textarea.html (definition of textarea element)\nDefinitions for replaceable and non-replaceable character data are given\nin the HTML 5 spec section 4.5:\nhttps://www.w3.org/TR/html-markup/syntax.html#text-syntax\nAs far as I can tell, the big difference between nonreplaceable\nand replaceable character data is that non-replaceable may contain\nambiguous ampersands and may not contain character references.\nAfter all, it's used for things like JavaScript source, where\nampersand is an operator.\nIn all of these cases, it appears that less-than slash inside of the\n(replaceable or non-replaceable) character data should be left unescaped.\nRegards,\n. Geoff McLane notifications@github.com writes:\n\nOnce the new option is added, say --escape-scripts yes, to tidyenum.h,\nconfig.c, and language_en.h, then the if becomes say -\nif ((TY_(IsJavaScript)(container)) && cfgBool(doc, TidyEscapeScripts))\n\n@geoffmcl Yes, sounds good, except that we will also need to worry about\n",
    "KevinCarhart": "Moving my comment to a new issue\n. Thank you @geoffmcl, yes, I concur about reluctance to change something that is established.\nnot really related to 65 - oh, okay.\nThank you @CMB.  Those are extremely salient to the problem and I sure wasn't familiar with the replaceable/nonreplaceable distinction.\nHonestly I don't know.  It is a good question.  Why now?  Why has it been escaping for many years?\nIs the description of replaceable and nonreplaceable as part of the HTML5 spec sufficent rationale for doing the change?\nMaybe there's something to be gleaned about this in old tidy listserv archives.\n. Thank you @zcorpan @CMB @geoffmcl\nI also found this list thread between Bj\u00f6rn and Denver in 2007.\nhttps://sourceforge.net/p/tidy/mailman/message/6803282/\nThe subject is \"JavaScript regular expression (regexp) parsed incorrectly\"\nI think what Denver is reporting here has a similar cause to the example problems that we have hit recently.\nIs it persuasive?  I'm not sure, but it seems to be one of the most relevant moments in old traffic, in addition to the one from Klaus.\n. All right!  Thank you @geoffmcl.  I will try this now.\n. @geoffmcl @CMB Thank you for coding this and making the readme.md, Geoff.  I compiled libtidy with the new option set to true.  Then I tried (in edbrowse with libtidy) a test page like what I posted on 1/15.  And, it does the trick.  Then I tested on a complex case.  We've been working with a couple of complex examples recently such as https://www.oakgov.com/sheriff/Pages/Inmates-Current.aspx (raised by @eklhad) and https://groups.google.com/forum/#!topic/boost-compute/xJS05dkQEJk (raised by Sebastian.)  I'm investigating the Google example and it appears that having the new parse option set to true means that the page can proceed instead of getting out of sync, which means the run of the page then exposes the next bottleneck, some other unrelated problem.  So this is progress!  If something improved on a Google page, that may be about as tricky as it gets and we may have improvements in a variety of pages that users want.\nChris, what do you think about closing this now?  I am not clear on whether <style> and <textarea> are outstanding, because Chris said, I think we will also need to worry about <style> and <textarea> which have a similar issue, but then Geoff said a few days ago that he doesnt think thats the case.  If there was more to do, we could start a new issue.  If youre ready, I will press the button.\n. Thanks!  Ok, I will bring the suggested code tidyOptSetBool( tdoc, TidyEscapeScripts, no ); back to the edbrowse list and likely do a patch with that.  Closing 348 here!\n. ",
    "justin808": "+1 for this!\n. ",
    "PierBover": "I'm using 5.6.0 and SVG still isn't recognized...\nline 20 column 17 - Error: <svg> is not recognized!\nline 20 column 17 - Warning: discarding unexpected <svg>\nline 19 column 9 - Warning: missing </a> before <style>\nline 19 column 9 - Warning: <style> isn't allowed in <a> elements\nline 20 column 154 - Error: <path> is not recognized!\nline 20 column 154 - Warning: discarding unexpected <path>\nline 20 column 5011 - Error: <path> is not recognized!\nline 20 column 5011 - Warning: discarding unexpected <path>\nline 20 column 7439 - Error: <g> is not recognized!\nline 20 column 7439 - Warning: discarding unexpected <g>\nline 20 column 7444 - Error: <path> is not recognized!\nline 20 column 7444 - Warning: discarding unexpected <path>\nline 20 column 13722 - Warning: discarding unexpected </g>\nline 20 column 13727 - Warning: discarding unexpected </svg>. ",
    "daurnimator": "I still believe this fix needs to happen.\nbut the next time I go near my html tidy-ing code I imagine I might just port over to gumbo instead... tidy doesn't seem to be maintained :(\n. > I don't understand exactly what functionality you want from the library. Can you provide an example?\nI am using tidy to (in realtime) transform mildly malformed HTML to valid XHTML. From there, I traverse the XML tree and use fields inside my application.\nThe issue is, tidyNodeGetText returns text that is xml escaped: I have to manually unescape it to get the actual text content.\nReading the source, tidyNodeGetText only does the escaping on output, so my request is that an alternative is added that does not escape on output, only for me to unescape again....\n. ``` C\ninclude \"buffio.h\"\ninclude \"tidy.h\"\ninclude \nint main() {\n    TidyDoc tdoc = tidyCreate();\n    TidyBuffer buff;\n    tidyBufInit(&buff);\n    tidyBufAppend(&buff, \"something & escaped\", 36);\n    tidyParseBuffer(tdoc, &buff);\n    TidyNode body = tidyGetBody(tdoc);\n    TidyNode text_node = tidyGetChild(body);\n    TidyBuffer buff2;\n    tidyBufInit(&buff2);\n    tidyNodeGetText(tdoc, text_node, &buff2);\n    fwrite(buff2.bp, buff2.size, 1, stdout);\n    return 0;\n}\n```\noutput is:\nsomething &amp; escaped\nI expect:\nsomething & escaped\n. I have no problem processing the entities myself.\nBut the thing is, tidy stores them unencoded internally, and only creates them on output (i.e. the tidyNodeGetText call).\nTo encode and then decode immediately after is a silly API.\n. > need an API extension, something like tidyNodeGetRawText or something\nYes, a new function will probably need to be added.\nUnless no one was using the old API.... It was quite unexpected when I ran into this.\n\nsince the current API is intended that the text be placed in a html file,\n\nIs it? the C API doesn't seem to be: see GetName, GetAttr, etc.\n\nthus needs to be encoded... will get around to checking further...\n\n\nHerp..... half way through typing this email I was reading the source and ran into tidyNodeGetValue.\nThis seems to be what I need.\nSorry for the noise!\n. ",
    "robrecord": "Is there any progress on this bug?\n. ",
    "marcoscaceres": "@robrecord, this project is no longer being maintained, unfortunately :( If you know any C, then a PR would be welcome. \n. It would be nice to have instructions of how to build on Windows. \n. I'm pretty sure this also applies to del elements. \n. Does IE11 still support those things? \n. I guess they are useful for a few more years then... problem is that @sideshowbarker is currently focused on other stuff, so we are not seeing much movement on the bugs. We should rewrite tidy in Node so more people can send PRs to it (few web devs know c, I think). \n. I would strongly suggest that people who are willing to work on this fork this repo into a HTML5Tidy organization here on GitHub - or that @sideshowbarker donate the project to such an organization. Then, developers who are willing to maintain the project can better organize, review code, etc. \n. @skynet, that's a good point - but I don't think we can depend on the W3C on its own here. This is really just @sideshowbarker's pet project and not a W3C thing (i.e., they don't provide funding or support in any way). Clearly, @sideshowbarker doesn't have time to do any work on this (as he has stated in other bugs). \nI'll wait for him to decide what to do. I've spoken to him in the past about opening it up, but he hasn't yet found anyone that he trusts in the community to take the project over. I don't see what option there is but to open it up to a few people who have shown, through PRs, capable of reviewing and maintaining the code. \nMaybe we can get a show of interest from people who could commit time to this? \n. > But would ask you, or others, to comment on the use case for this...\nI'm trying to use tidy with a HTML-like markup language that we use to produce specs at the W3C (using a tool called BikeShed). \nBikeShed allows unquoted proprietary attributes to appear in markup (e.g., <pre idl>, where idl means the contents of the pre is to be treated as \"WebIDL\" - which is a W3C thing for describing JavaScript bindings). There are several of these little attributes, and more could be added to BikeShed over time. \nAnyway, our primary use case is for tidy to leave those attributes alone and not quote them - so that when we git diff after Tidy, those attributes won't have changed. We are primarily interested in tidying the content of elements. \nUse case/problem is described in a bit more detail here:\nhttps://github.com/tabatkins/bikeshed/issues/662\n. yeah, essentially. If there was a way of saying, \"these attributes are boolean attributes\" in the config, that would be great. Don't consider this high priority, however.  . I'm ok with leaving this open and taking a different approach after 5.6. I'm not sure what the right approach is, but I'm liking a combination of what you are proposing above, particularly points 1 and 3 somehow being merged together. . Note that it could be possible to simply support any string the value of as, as the interface for it is defined as returning a DOMString instead of an enum. \n. > And then there is the question, should we support the value enumeration, or as suggested here - accept any string?\nI think we've done ok without this, but this would be nice to enable as a flag, as some attributes can have negative/unexpected effects when incorrectly set (e.g., if one makes a typo in iframe sandboxing attribute, that could be bad... potentially the same with the crossorigin attribute that can be used on various elements).  \n\nShould Tidy try to follow draft W3C specifications, like it seems the validator has done? \n\nTl;dr: maybe it should be that if it's in two browsers, HTML validator supports it, and has positive signals from browser vendors, it qualifies. \nI'm of the opinion that we should support things that browsers implement. The as attribute is supported in both Chrome and Opera. \nIt is also in active development in Firefox:\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1222633\nLast patch was submitted for review a few days ago.\n\nOr should Tidy wait until the spec moves up the acceptance ladder?\n\nThis is tricky, as it depends on what level we would want to use (e.g., some specs never reach REC, but are widely implemented - like WebIDL). And some standards bodies now completely avoid using an \"acceptance ladder\" (e.g., WHATWG) and even the W3C has started to move in that direction (e.g., with the WICG, which is the group I chair).  \nAnother option is to put things into an \"experimental\" or \"stage\" bucket, similarly to projects like Babble do: where you can enable certain features with a flag, but not require the flag at compile time. \nSo, it would be nice to have something like:\n``` bash\n\"experimental\" is a misnomer... I'm sure we can think of something nicer\ntidy --experimental -o output.html input.html\n```\n. Excellent, thank you @geoffmcl! \n. I'm currently learning c, so I wouldn't mind taking this on (as it seems like a simple enough feature request).\n@geoffmcl, could you mentor me on it? (i.e., give me some pointers as to where it might be good place to insert this in the code tree, etc.). \n. @geoffmcl thanks for all the pointers, this is super helpful! \nOnly additional requirement is to make sure that the meta charset appears in the first 512 bytes, as per HTML5. I'll try to send this in parts over the next week. \n. Regarding \n1. TidyMetaCharset, SGTM. \n2. add-meta-charset, SGTM. \n3. Description: /**< Adds/checks/fixes meta charset in the head, based on document type */\nLet's see how I go with 4 now :)\n. Thanks @geoffmcl - doing my best to find time. If anyone wants to jump in and do a bit more hacking on it, I would certainly be supportive. It's nearly there! . Actually, ignore this question:\n\nI'm getting null pointers when trying to match charsetAttr and httpEquivAttr in lexer.c, but can't work out why? Line 1691, 1692 below.\n\nIt started working. No idea \ud83d\udc4d \n. Ok, this is a rough version... let me know what you think about the general direction. \nI still need to look up how to emit the warnings properly.\n. @garvankeeley, stupid noob question:... but debugging in lldb seems to only show me assembler :( I've tried to get this to work with XCode, so I can debug a little bit more sanely... I can get xcode to build (as an external source), but getting it to debug would be awesome. \nAny suggestions or will it just be a world of hurt? \n. (I'm ok to just use lldb, but debugging assembler is no fun)\n. This is great feedback, @geoffmcl! Thanks so much. I'll try to tackle everything over the weekend. \n. Just quick update: started making the requested changes. \n1. Hoisted variable declarations to top of function. \n2. now using TidyBuffer. \n3. move the using c89 style comments - will hopefully not need those in the end. Just for my own sanity right now. \n4. removed strcmp(), using tmbstrcmp\nI have a question about this code, on line 1757... it is ok to do that dereference and cast?:\nc\n            if(TY_(tmbsubstr)(lcontent, (ctmbstr) &charsetString)){\n                printf(\"WARN ABOUT CLASH: %s \\n\", contentAttr->value);\n            }\n. @geoffmcl also, when I target c89, I get a linker error (but seems unrelated to my code). The compiler flags a bunch of issues in the existing code base about incorrect comments (again, not my code) and strings longer than 512bytes (also not my code). \n. I'll hopefully get rid of the few remaining printfs soon too :)\n. (doing a c++ course ATM... hoping to come back at this soon - excited to finish it)\n. @geoffmcl, this was getting close... just needed to replace the printf() with actual tidy warnings. I was unsure how to add test cases for this also. I could use some help with both of those things. . Sadly, I have to concede defeat on this one :( I'm not finding enough time to work on it. \nSomeone could take it over, as it was nearly there.  . @geoffmcl, thanks! I hope so too. We (folks working on web standards) are highly dependent on tidy and really appreciate the work you and @balthisar have been doing in maintaining tidy. . Is there equivalent for windows? \n. So, naive question: if c11 is backwards compatible with c89, and c99, and msvc140 fully supports c11, why not just target c11? Are there older systems that we need to support that can't handle c11 as a compile target? \n. Still getting noise from:\nbash\ntidy-html5/src/message.c:233:9: warning: implicit declaration of function 'va_copy'\n      [-Wimplicit-function-declaration]\n        va_copy(args_copy, args);\n        ^\n1 warning generated.\nA lot of noise from ones like this:\nbash\ntidy-html5/src/language_en.h:109:9: warning: string literal of length 847 exceeds\n      maximum length 509 that C90 compilers are required to support [-Woverlength-strings]\nAnd this one is interesting too, as it uses a modern C99 feature?:\ntidy-html5/src/language.c:30:25: warning: flexible array members are a C99 feature\n      [-Wc99-extensions]\n    languageDefinition *languages[];\n(see also tidy-html5/src/language.c:30:25)\n. I don't mind so much, but the problem is when building the first time with \"-ansi -pedantic\" it generates a lot of noise because of the comments and string literals that exceed 509 bytes (related to #460). \nAlso note that languageDefinition *languages[]; is already in violation of c89 (and tidy has been shipping that for a while, I assume) - so trying to compile with c89 breaks the linker. \nSo, this again raises the question about which c standard version to use (#460). Again, I'm really new to c, but It appears there is enough code currently in the project to say that this is a \"c99\"-conforming project. \nAs someone who knows the code really well, could you maybe evaluate what is the right standard to use? \n. @geoffmcl rebased. Thank you for the review. . Should be all good to merge. . Exciting stuff @balthisar! Thanks for doing all this. . ah, sorry @geoffmcl - I'm on 5.2.0. I guess as a different issue, any idea when the OS X brew formula for this will get updated?  . I can send a PR there, btw: https://github.com/Homebrew/homebrew-core/blob/master/Formula/tidy-html5.rb. Problem is that I work as part of a distributed team, and we all rely on latest stable. I couldn't ask everyone who contributes to our project to build tidy from scratch (sometimes we also get random contributions, so it would be a hurdle for those folks too). We ask everyone to tidy before they send pull requests. \nHappy and really excited to wait for 5.4!!! . thanks @garvankeeley! Integrating now. \n. ",
    "netpoetica": "Running your second command, I still receive the same error. I used the instructions from the main page here, \"1) make -C build/gmake/, 2) make install -C build/gmake/\". I am invoking the tidy program from the command line, which I copied out of the /bin directory after using steps 1 & 2 to make the build, and then I moved it to my programs build directory.\nIs the one in the /bin folder not the correct one? I didn't find the tidy program in any other directory.\n. I did some investigation, and, it looks like I have tidy in my /usr/local/bin/ folder  - maybe it's an older install or something, and I am always invoking the wrong one? Not sure exactly how to clear that up, if that even is the issue.\n. Thanks! That surely did it! I should have guessed that, because I initially installed tidy from source forge and realized it was missing the features I wanted. Gonna close this issue - thanks for the super helpful response!\n. Hey Craig, it's actually not \"various\" - it's just UTF8. I wasn't sure of the terminology to say that I'm using various HTML escape characters like for ampersands and dashes. Anyhow, they're okay going in to tidy, but they come out with Latin encoding. I will try to get some time to put together a test doc later and upload. Thanks for your response\n. So, I'm not sure what I was doing incorrectly, but it was definitely me. I did remove the input-encoding and output-encoding, which seemed to work, and then I put it back to test to see if it was truly that, and it still worked. I am not sure exactly what was causing this, but, I assure you I did consistently get the said error for a couple of days, and only after I removed input-encoding and output-decoding did it start to work. Again, though, by putting them back, it still seemed to work. I'm going to close this issue because I can no longer provide an example of this issue (issue disappeared). If I ever figure it out, I will post a solution. Thanks for your help!\n. Epic, yes thanks for the info. I actually hadn't been aware of &mdash and &ndash - I always thought it was just &dash. Very excited to get this back into my workflow!\n. ",
    "IschaGast": "That works thanks!\nDon't get my SublimeLinter working but that's another issue.\n. ",
    "franciscolourenco": "+1\n. @almadsen how do you install tidyhtml5 with homebrew?\n. +1\n. +1\n. +1\n. https://github.com/Homebrew/homebrew/pull/17082\n. ",
    "gordio": "Now I find - http://www.broerse.net/wordpress/2012/04/28/tidy-html5/\n. ",
    "hardcover": "See:\nhttp://tidybatchfiles.info/\n. ",
    "angryfishcake": "fixed. set wrap to 0.\n. '''\nhide-comments: true\ntidy-mark: false\nindent: true\nindent-spaces: 4\nnew-blocklevel-tags: articleheaderfootersectionnav\nnew-inline-tags: videoaudiocanvasrubyrtrp\ndoctype: <!DOCTYPE HTML>\nsort-attributes: alpha\nvertical-space: false\noutput-xhtml: true\nwrap: 0\nwrap-attributes: false\nbreak-before-br: false\nnumeric-entities: yes\n'''\nthose are my settings. the files encoding type is set to utf8 without bom. default input/ output encoding set to utf8 am i missing something?\n. hmm didnt seem to make a difference. its just a normal .html file. im using notepad plusplus with the plugin tidy2 which is using tidyhtml5.\n. ",
    "acdha": "This works if you specify the input/output encoding (e.g. tidy -utf8) and provide correctly encoded input. If you're having problems, you should post a sample file and the exact command-line options used.\n. @jonapgar UTF-8 does not have big or little endian modes and the use of a BOM is not recommended with UTF-8. If you have text which is UTF-8 without a BOM and using either -utf8 or char-encoding: utf8 it works as expected \u2013 perhaps the problem is that notepad++, which appears to be the common factor, is either not setting the encoding or is injecting an unnecessary BOM?\n. ",
    "ghost": "I have come across this issue as well, but only on files which are big-endian UTF-8 without a BOM. \nThis is occurring on a Windows install of notepad++. \n. Paul, THANK YOU.\nI particularly like your config file. I'm going to adopt two lines from it into mine.\n. @geoffmcl no problem:\nsample: https://gist.github.com/andya9/1730af246fa764da7fd6\noutput in browser: He said: \u201cYou know, they told me: \u2018Hey!\u2019; and they ran away\u201d. \ntidy output (tidy5 sample.html): line 8 column 10 - Warning: nested q elements, possible typo.\nno particular config used, just default\n. @geoffmcl Thank\u2019you for looking into this!\n. @geoffmcl\nJust tried it, it works perfectly! Thank\u2019you very much for fixing this!\n. ",
    "yuanchuan": "Have you tried to set the 'merge-divs' option to false value? \n. ",
    "docum3nt": "Yuan Chuan notifications@github.com wrote:\n\nHave you tried to set the\n'merge-divs'\noption to false value? \n\nReply to this email directly or view it on GitHub:\nhttps://github.com/w3c/tidy-html5/issues/89#issuecomment-19159976\n\nOops.  Thanks... Memo to self: RTFM :-)\nSent from my Android phone with K-9 Mail. Please excuse my brevity.\n. ",
    "mcroiban": "Turns out that missed the second part (Building the libtidy shared library) and I installed only the command-line tool.\nsh build/gnuauto/setup.sh\n./configure\nmake\nSo, not a problem anymore. Just in case, closing and keeping this issue here for other folks to find when searching for it.\n. ",
    "mysterycommand": "+1\n. Just ran into this. +1\n. ",
    "duvallg": "+1. Would greatly appreciate tidy not throwing warnings on roles, aria-*, and other accessibility attrs as 'proprietary attributes'.\n. ",
    "andrewle": "No worries. Thanks!!\nOn Saturday, January 31, 2015, Jim Derry notifications@github.com wrote:\n\nClosed #96 https://github.com/htacg/tidy-html5/pull/96.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/pull/96#event-228003662.\n. \n",
    "nokome": "+1\n. So, I did some more trawling around through the issues and see that this is probably a duplicate of both #158 and #163 (and my misunderstanding of what vertical-space is intended for). Sorry for adding more clamour.\n. @geoffmcl I'll try to have another look at the code to see if I've got any chances of doing something constructive. If not, I would consider offering a bounty for one or both of these issues on Bountysource - would that be acceptable to HTACG?\n. My vote for vertical-space options is:\n- no : no vertical spaces except explicit newlines in <pre>,<script>,<style> (and possibly some others?)\n- yes: Tidy adds new lines between elements (the current no , current and new default)\n- extra: Tidy adds extra new lines for readability (the current yes)\nThis would obviously break backward compatibility for what no and yes mean for this option but is more reflective of the actual output.\nRegarding, #158 newlines inserted in <pre>. I agree with the suggestion that this should not be an option and those extra newlines should not go in there. @camoy has given use PR #229 but that only addresses <pre> (?) and not <script> and <style>. Furthermore, I have noticed that with this PR and vetical-space no, if you want your <pre> tag to start with a newline (I often do) and put an explicit newline at the start of it, Tidy is stripping it out (in parsing somewhere?) - so you don't get out what went in. In short, probably needs more work than is in #229.\n. @geoffmcl , I am happy to defer to you, and backward compatibility, on this. I'll perhaps wait a few days in the hope of others chiming in, then take it forward.\n. This looks good to me. Thanks. \nThe only only issue I can see is the extra new lines in the pre, style and script. For example, now that the first newline is not getting eaten the above <style> starts with two blank lines in the second example.\nI'm getting a bit confused as to what patches are in and what is out. My suggestion for how to proceed would be to merge this PR into master without the \"newline eating patch\" . Then open a new issue that address the starting (and ending) newlines in pre, style and script elements which would encompass:\n- Your \"User leading newline text content of pre is eaten!\" #230\n- My remove extra newlines at start of script and style stencila/tidy-html5@0bf0d85\n. Thanks @geoffmcl for your efforts on this one, I'll try to find the time to do some testing on the issue-228 branch and continue this discussion over at #231\n. @geoffmcl , I had a look at #238 but can't offer any immediate insights sorry\n. Thanks @geoffmcl for all your work on Tidy. Pleasure to be able to help out a little. Sorry I have been quiet on this of late...a few too many other things keeping me occupied.\n. Great to see this addressed. I for one would like to see it extended to <style> and <script>.\n. My test file test-newline-eaten.html:\nhtml\n<!DOCTYPE html>\n<html>\n    <head>\n        <title></title>\n    </head>\n    <body>\n        <pre>\nStarts with newline</pre>\n        <style>\nStarts with newline</style>\n        <script>\nStarts with newline</script>\n    </body>\n</html>\nWhat I get with my \"no vertical space\" fork rebased to upstream 33494a4aea444df56857513e17ee34fe92f678b9 (so including PR #229):\nsh\ntidy --vertical-space no --wrap 0 test/test-newline-eaten.html\n<!DOCTYPE html><html><head><meta name=\"generator\" content=\"HTML Tidy for HTML5 for Linux version 5.1.2\"><title></title></head><body><pre>Starts with newline</pre><style>Starts with newline</style><script>Starts with newline</script></body></html>\nWhen I add @geoffmcl's patch and extend it to <style> and <script> (stencila/tidy-html5@a69ddfeec92cd4df27c161e0163629fd228cfbbe)\nsh\ntidy --vertical-space no --wrap 0 test/test-newline-eaten.html\nhtml\n<!DOCTYPE html><html><head><meta name=\"generator\" content=\"HTML Tidy for HTML5 for Linux version 5.1.2\"><title></title></head><body><pre>\nStarts with newline</pre><style>\nStarts with newline</style><script>\nStarts with newline</script></body></html>\nThe latter is the expected output. :tada: \nUnfortunately, with vertical spacing on, you still get the extra newline in the  <style> and <script> elements.\nsh\ntidy test/test-newline-eaten.html\n``` html\n<!DOCTYPE html>\n\n\n\n\n\n\n\n\nStarts with newline\n</p>\n<p>Starts with newline\n\n</p>\n<p>Starts with newline\n\n\n\n```\nThat is because PR #229 only addressed <pre> element. So, stencila/tidy-html5@0bf0d85 does the analagous fix for script and style and then you get the expected,\nsh\ntidy test/test-newline-eaten.html\nhtml\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Linux version 5.1.2\">\n<title>\n</title>\n</head>\n<body>\n<pre>\nStarts with newline</pre>\n<style>\nStarts with newline</style>\n<script>\nStarts with newline</script>\n</body>\n</html>\nNote that there is code in void PPrintScriptStyle( TidyDocImpl* doc, uint mode, uint indent, Node *node ) that provides for indenting. With indenting on style and script get indenting but pre doesn't. Not sure if that inconsistency matters. I personally would prefer style and script to be treated just like pre, but others may prefer them pretty printed.\n. ",
    "forthrin": "Compiles quickly and perfectly. Ticket may be closed. PS! A Homebrew formula would be appreciated!\n. ",
    "LudovicRousseau": "Any volunteer to convert the manually written Makefile files to using autoconf + automake?\n. develop-500: The build works for me on Mac OS X 10.9.\n. Hi @AdamMajer, I have not tried to contact the tidy maintainer Jason Thomas. His latest tidy upload was in Dec 2009. I guess his PGP key has been removed long after that date.\ntidy looked abandoned. I am sorry if I made a mistake.\nI am not sure it is a good idea to upload now a new version of tidy5. I would wait until the NEW package is handled.\nJason could join the effort and work on http://anonscm.debian.org/cgit/collab-maint/tidy.git/\nI am happy to sponsor a new version from him (until he gets a new key in the keyring).\n. tidy5 has been accepted in Debian with one comment:\n\"Please clarify the University of Toronto copyrights.\"\n. Hello @jasonethomas. Welcome back.\nI think I/we made (a) mistake(s) with the upload of tidy. See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=828097 \nI don't think we have something to do to help the library migration now.\n. @jasonethomas do you want to review+upload the new tidy version?\nWhat is your plan regarding tidy packaging?\n. Ond\u0159ej Sur\u00fd already uploaded a new version of the package to fix  #827716 and #827891.\nSee https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=827716\n@danielhjames can you integrate the changes from 1:5.2.0-1.1 in the collab-maint project?\n. Ond\u0159ej created a NEW git repository at http://anonscm.debian.org/cgit/collab-maint/tidy-html5.git/ :-(\nWe need to add the git repository in debian/control to avoid the same problem next time.\n```\n--- /tmp/FJjith_control 2016-06-28 21:29:00.951677084 +0200\n+++ debian/control  2016-06-28 21:23:05.593448475 +0200\n@@ -4,6 +4,8 @@ Priority: optional\n Maintainer: Daniel James daniel@64studio.com\n Build-Depends: debhelper (>= 9), libtool, xsltproc, dh-autoreconf, cmake\n Standards-Version: 3.9.8\n+Vcs-Git: git://anonscm.debian.org/collab-maint/tidy.git\n+Vcs-Browser: https://anonscm.debian.org/git/collab-maint/tidy.git\n Homepage: http://www.html-tidy.org/\nPackage: tidy\n```\nI have not made the change to not add more complexity to the merge of Ond\u0159ej changes.\n. You should upgrade your system to Debian stretch or Ubuntu 18.04LTS\nhttps://packages.debian.org/search?keywords=tidy\nhttps://packages.ubuntu.com/search?keywords=tidy. ",
    "eric-brechemier": "+1\nFor reference:\nCan I do \"make uninstall\" with CMake?\nhttp://www.cmake.org/Wiki/CMake_FAQ#Can_I_do_.22make_uninstall.22_with_CMake.3F\nThere is a step by step explanation on how to include the uninstall target in the project, and a turnaround for users when the uninstall target is not provided:\nxargs rm < install_manifest.txt\n. xsltproc is used in the script build/documentation/build_docs.sh to generate quickref.html and tidy.1 (man) from the XML output of tidy5 -xml-config and tidy5 -xml-help.\n. For comparison, the issue is not present in the Mac version of tidy:\n```\n$ tidy --version\nHTML Tidy for Mac OS X released on 31 October 2006 - Apple Inc. build 15.17\n$ man tidy | grep '^[A-Z]'\nTIDY(1)                                                                TIDY(1)\nNAME\nSYNOPSIS\nDESCRIPTION\nOPTIONS\nUSAGE\nENVIRONMENT\nEXIT STATUS\nSEE ALSO\nAUTHORS\n```. @jidanni That's not what I meant. Apple has forked the legacy version of Tidy. And the issue is not present in their version.\nReference:\nhttps://www.apple.com/opensource/\nNow, I wonder what causes this behavior.\nHere is the tidy1.xsl file in the Apple version that I ran:\nhttps://opensource.apple.com/source/tidy/tidy-15.17/tidy/htmldoc/tidy1.xsl\nThe version of tidy1.xsl in this project:\nhttps://raw.githubusercontent.com/htacg/tidy-html5/master/man/tidy1.xsl.in. The end of the man page of the Mac version (SEE ALSO and AUTHORS) does not match the source code in the style sheet. It must have been post-processed, removing the extra sections (DETAILED CONFIGURATION OPTIONS, SYNOPSIS, WARNING, DESCRIPTION).\nAs seen in this HTML version of the legacy documentation the extra sections were already present.. > And if I read @eric-brechemier correctly, and he has found a tidy.1 doc without duplicates may mean that particular tidy.1 doc only gives information about one or the other type of options, which would also be very bad...\nCorrect. Only the single - options are described, not the -- dash options, in the version advertised as:\n$ tidy --version\nHTML Tidy for Mac OS X released on 31 October 2006 - Apple Inc. build 15.17\n\nSo we need help from someone who understands the tidy.1 doc generation from the .xsl file, using tidy's own xml outputs, and xsltproc, to potentially fix the situation, and still keep all the information...\n\n@geoffmcl I can help with that. Merging the description of both types of options seems the way to go. I'll make a first pass by the end of the week with some kind of diff to visualize the changes in generated man pages.. @geoffmcl I have opened a pull request for preliminary review: https://github.com/htacg/tidy-html5/pull/473.\nCan you take a look and confirm whether I am headed in the right direction?. SYNOPSIS\n\nBut maybe the additional square braces are too much, too pedantic... what do you think?\n\nMaybe not pedantic, but definitely confusing in a lispy way. I'll think about it.\n\nAnd in fact maybe it could be reduced to just tidy [options] [file1[ file2[ ...]]], and the fact that this [options] [file(s)] can be repeated be only mentioned say in the description. Or not at all...\n\nThis is the option taken by man curl:\ncurl [options] [URL...]\nbut then they have a special parameter to separate options that are related to one URL from the next:\n-:, --next\n              Tells curl to use a separate operation for the following URL and\n              associated  options.  This  allows  you  to  send  several   URL\n              requests,  each  with  their  own specific options, for example,\n              such as different user names or custom requests for each. (Added\n              in 7.36.0)\nwhile in the case of tidy, an option applies to all the following files.\n\nIn any batch, or scripted processing, I can understand having one set of options applied to a big list of files, although again, you do not know which actual file caused the exit value... but to then change the options for another file, or files, does not seem to make much sense...\n\nIt may be useful when using a wildcard from the shell: *.html is expanded to the list of files that matches the pattern. Also, I remember a particular time when we had different files with different encodings, and used to include a hint for the encoding of the file in the file name, such as .utf8.html or .latin1.html. We could apply tidy to all these files in a single run with -latin1 *.latin1.html -utf8 *.utf8.html.. OPTIONS\n\nAnd maybe it would be too much if each double -- option mentioned a - option, where it exists... like say clean with a See also: -c... that is each is fully crossed referenced... but as I say, maybe too much?\n\nAh, good point. Some options are available in both flavors. That deserves at least a mention when it is the case. I will look into it.. Temporary Files\n\nYes, thanks for making this effort, to be able to read them in a non-nix system...\nBut in *nix I found I could just compile tidy in say build/cmake, and view the results with man -l tidy.1, without doing any install...\n\nI looked long and large for this option, which is simply not available in macOS's man :( I am glad to know that it exists though.\nMultiple, multiple commits\n\nWhile I have no real problem with this as you were developing the change, but hopefully the final PR is essentially only one commit, since as far as I can see it only effects one file, man/tidy.xsl.in...\n\nSure, I will squash the commits into one, leaving no trace of the temporary files. Apparently, it is also possible to do it directly from GitHub interface when you merge the branch.\n. Other possible changes\n\n\nYes, we are always looking for better, more concise, suscinct descriptions, but these each can be raised as separate issues...\n\n\nIt is not so much about the text that describes each option as the verbose format used to describe configuration options:\n```\n       add-xml-decl\n          Type:    Boolean\n          Default: no\n          Example: y/n, yes/no, t/f, true/false, 1/0\n\n          This option specifies if Tidy should add the XML declaration\n          when outputting XML or XHTML.\n\n          Note that if the input already includes an <?xml ... ?>\n          declaration then this option will be ignored.\n\n          If the encoding for the output is different from ascii, one of\n          the utf* encodings, or raw, then the declaration is always added\n          as required by the XML standard.\n\n                                  See also: char-encoding, output-encoding\n\n```\nvs (for example)\n```\n       --add-xml-decl \n              This option specifies if Tidy should add the XML declaration\n              when outputting XML or XHTML.\n          Note that if the input already includes an <?xml ... ?>\n          declaration then this option will be ignored.\n\n          If the encoding for the output is different from ascii, one of\n          the utf* encodings, or raw, then the declaration is always added\n          as required by the XML standard.\n\n          See also: char-encoding, output-encoding\n\n```\n\n\nI wish we could remove internal only option, like gnu-emacs-file. Maybe these should not appear in any docs, even with a comment Used internally.. See #472 for some discussion on others like this... But again these could be dealt with as separate issues.\n\n\nI could test whether the <description> matches Used internally. but a better way would be to remove the option from the output of ./tidy -xml-config (which is used to generate the file tidy-config.xml that is fed to the XSLT transformation).. @geoffmcl I will move forward with three points in mind:\n\nfurther enhancing the SYNOPSIS if possible\nlooking into cross-referencing of options available in both single and double dash flavors\ncompacting the configuration options. @geoffmcl All clear. Thank you for the feedback.\n\n\nnot sure what you mean in a lispy way...\n\nI am currently reading the original paper on Lisp and the mental gymnastics involved in tracking opening and closing brackets in tidy [options] [file[ ...]] [[options] [file[ ...] ...] reminded me of the similar effort required to understand an expression such as apply[(LAMBDA,(X,Y),(CONS,(CAR,X),Y)); ((A,B),(C,D))].. > (...) I suppose some might argue that in *nix systems two dashes, --, is more the 'regular', or 'standard', but we can wear that semantic difference... and your description makes the intention clear...\nI revisited this issue and enhanced the wording in 29215e3. The terms are now in line with the descriptions of -xml-help and -xml-config: (purely) command-line options (single dash) and configuration options (double dash).. > And maybe it would be too much if each double -- option mentioned a - option, where it exists... like say clean with a See also: -c... that is each is fully crossed referenced... but as I say, maybe too much?\nI gave more thought to this. I noticed that the documentation of some command-line options includes an equivalent configuration option and value, in the <eqconfig> element.\nFor example:\n<option class=\"process-directives\">\n  <name>-clean</name>\n  <name>-c</name>\n  <description>replace FONT, NOBR and CENTER tags by CSS</description>\n  <eqconfig>clean: yes</eqconfig>\n </option>\nTherefore, a configuration option alone is not equivalent to using a command-line option: it is a pair option+value that must be used.\nThis could justify having references only in one direction from command-line options to configuration options, and no references back.\nIf we do want to include the references from configuration options back to command-line options, mixing both kinds of options in the 'See also' section, we should use the same mechanism currently used to refer only to the double dash options, using <seealso> elements. Each <seealso> element includes the name of a single option, without the dashes:\n<seealso>input-encoding</seealso>\n  <seealso>output-encoding</seealso>\nWe could change the format of <seealso> elements in the output of tidy -xml-config, adding the dashes to the option names:\n<seealso>--input-encoding</seealso>\n  <seealso>--output-encoding</seealso>\nThis would allow to mix references to both kinds of options:\n<option class=\"print\">\n  <name>indent</name>\n  <type>AutoBool</type>\n  <default>no</default>\n  <example>auto, y/n, yes/no, t/f, true/false, 1/0</example>\n  <description>This option specifies if Tidy should indent block-level tags. If set to \"auto\", this option causes Tidy to decide whether or not to indent the content of tags such as TITLE, H1-H6, LI, TD, TD, or P depending on whether or not the content includes a block-level element. You are advised to avoid setting indent to yes as this can expose layout bugs in some browsers. </description>\n   <seealso>-indent</seealso>\n   <seealso>--indent-spaces</seealso>\n </option>\nWhich would result in:\nSee also: -indent, --indent-spaces. @geoffmcl the PR is ready for review.. Note: I still need to delete the temporary tidy.1 and tidy.1.txt at the root before the merging.. @geoffmcl Agreed. It's a wrap!\nI noticed a few other things that I would like to improve; let's open separate issues for further enhancements.\nI have removed the temporary files from the branch.. @geoffmcl \nI finished opening new issues for the improvements that I wanted to suggest:\n\nGeneration of the man page should be done in two phases #484\nFormat  values of -xml-config in the same way as those of -xml-help #491\nIndicate type of value instead of <%s> in  values #492\nFormat  values of -xml-config in the same way as  values of -xml-help #493\nDo not include options 'Used internally' in -xml-config output #494. @balthisar that's the plan ;). I am not actually sure about the usefulness of the value format, which is always %s even for integer values. The name of the type may actually be more useful; I opened a separate issue for that: https://github.com/htacg/tidy-html5/issues/492. @geoffmcl Thank you for your analysis. The goal of the change is only to make the format more consistent. The same <name element, with the same purpose, has a different format for command-line and configuration options.\n\nThis is not a big deal, so feel free to close this issue if it is too much trouble to change.. @balthisar Thank you for the context.\n\nIt\u2019s not too much of a bother to make the change; it would be rather easy, but conceptually they\u2019re not the same, so I will close this.\n\nThat makes sense.. @geoffmcl the idea was to allow referring to both kinds of options in <seealso> sections. The suggestion is to use single and double dashes to differentiate command-line options from configuration options.\nThe general idea between this issue and #491 was to introduce a new convention to refer to command-line options (prefixed by a single dash) and configuration options (prefixed by a double dash), notwithstanding the fact that configuration options can also be used without the double dashes, in configuration files.. > I guess if @eric-brechemier is motivated enough, that could work.\n:) I don't have much time to dive into C code (my C skills are a bit rusty), but I can make any changes required in the XSLT for the man page, no problem.. ",
    "baptistelabat": "I had to install xsltproc, but there is probably others\n. ",
    "netAction": "Same with empty SPAN elements that are neccessary for some CSS stuff.\n. ",
    "nickbuddendotcom": "It would be nice to remove warning for any empty tag that has a class applied to it.\nhtml\n<div class='clear'></div>\nFor example...a clearfix is going to be empty, on purpose. It shouldn't raise an error. Many empty tags with classes applied to them are left empty on purpose.\n. ",
    "simonwiles": "I think they're being dropped in IE10 -- see http://www.sitepoint.com/microsoft-drop-ie10-conditional-comments/\n. right...  (if it was in python I'd have issued a pull request by now, but after a brief scan through the source tree, it would probably take me a weekend!).  well, if would be a nice addition if it were possible, in any event!\n. no worries -- this is really a feature request anyway, not a bug as such.  in my particular use case it's straight-forward (and inexpensive) enough to post-process the output from tidy anyway.\n. @pwang2 forgive me if I've misunderstood, but isn't this the original (incorrect) behaviour?  The <template/> context makes the orphaned <tr/> legitimate, legal, and (presumably) intended -- the <table/> tags should not be interpolated...?. I've just built from a clone of this repo taken a few minutes ago, and I'm still seeing the old, incorrect behaviour...\n```\n$ tidy --help\ntidy [options...] [file...] [options...] [file...]\nUtility to clean up and pretty print HTML/XHTML/XML.\nThis is modern HTML Tidy version 5.7.16.\n```\n```\n$ echo '1' | tidy --show-body-only 1 --show-info 0 --indent 1\nline 1 column 1 - Warning: missing  before \nline 1 column 11 - Warning: inserting implicit \nline 1 column 30 - Warning: discarding unexpected \nline 1 column 11 - Warning: missing \nline 1 column 1 - Warning: missing \nTidy found 5 warnings and 0 errors!\n\n\n\n\n        1\n      \n\n\n\n```\nIs there something I've missed?. any chance this issue could be reopened, then?  I notice it's notionally on the 5.7 milestone list, due tomorrow... :). ",
    "75lb": "this patch only works for me with <script> tags in the <head>.. my <script> tags at the bottom of the <body> get pulled into a single line.. \n. ",
    "wraybowling": "+1\n. ",
    "CTimmerman": "I use 1 tab per level, and set my editor to make that 4 spaces wide.\nindent-with-tabs: yes|no (default no) simply changing the spaces to tabs would work for me, as i change indent-spaces anyway. The new situation would be that i add indent-with-tabs: yes and indent-spaces: 1 instead of only indent-spaces: 4.\n. ",
    "paultreny": "This is the tidy file I use, it avoids stripping out the <i></i> tags, in addition to a few other things...\ndrop-empty-elements: no is what preserves the <i></i> tags\nYou can specify it like so on the command line:\ntidy -config <path/to/tidy.conf> input.html > output.html\n```\n// tidy-html5 config file (mine's named \"tidy.conf\")\n// tidy documentation is here: http://tidy.sourceforge.net/#docs\n// tidy-html5 documentation here: http://w3c.github.io/tidy-html5/quickref.html#drop-empty-elements\njoin-classes: no\nlogical-emphasis: no\ndrop-empty-elements: no\nanchor-as-name: no\ndoctype: auto\ndrop-empty-paras: no\nfix-uri: no\nliteral-attributes: yes\nmerge-divs: no\nmerge-spans: no\nnumeric-entities: no\npreserve-entities: yes\nquote-ampersand: no\nquote-marks: no\nshow-body-only: no\nindent: auto\nindent-spaces: 2\ntab-size: 2\nwrap: 0\nwrap-asp: no\nwrap-jste: no\nwrap-php: no\nwrap-sections: no\ntidy-mark: no\nnew-blocklevel-tags: article,aside,command,canvas,dialog,details,figcaption,figure,footer,header,hgroup,menu,nav,section,summary,meter\nnew-inline-tags: video,audio,canvas,ruby,rt,rp,time,meter,progress,datalist,keygen,mark,output,source,wbr\n// Change these only if you need to debug a problem with Tidy\nforce-output: yes\nquiet: yes\nshow-warnings: yes\n```\n. https://gist.github.com/paultreny/9822049\n. ",
    "sbounmy": ":+1: \n. ",
    "masochist": "The build now uses the POSIX standard cc, thank you!\n. Can we please not use @ to hide the build commands? It makes it really difficult to understand what's going on when the build fails, which is the only time you're going to be paying attention anyway.\n. ",
    "yoshuawuyts": "I'm using custom-element now (easily enabled through webcomponents.js, and it throws a proprietary attribute error when I'm using custom elements. E.g. I'm trying to do this:\nhtml\n<button is=\"custom-button\"></button>\nAnd the error is:\ntxt\n<button> proprietary attribute \"is\"\nI understand that having full custom-element support might take quite some work, but maybe a good first step would be allowing is=\"\" properties to be set on all elements? Thanks!\n. ",
    "bendavis78": "Tidy still needs an option to disable checking for invalid tags and attributes, instead of having to pass every possible custom tag as an argument. When working on projects that involve a lot of custom elements (eg, Polymer), it becomes very difficult to construct the command line to check your file.\n. Sorry, I missed notifications on this and am just now back on a project where I needed this. Adding elements to a config file isn't really a viable solution. That means I'd have to update my tidy config every time I create a new custom element, which in any webcomponents library can be in the hundreds.\nRegarding \"contrary to what tidy is all about\", can you expand on that? Is tidy only for validation, or is it also for formatting? I see both use cases as separate (but not exclusive). Sometimes I just want to format some HTML and don't care whether or not the tags are part of the W3 spec. Tidy is immensly useful for formatting, and it should be up to the user whether or not they are concerned about validation.\n. ",
    "jrunning": "Just to add some data points to this discussion, the project I'm currently working on has 215 custom elements. A new feature can add between 0 and 10 custom elements (and sometimes remove them). The team generates between 3 and 10 new features every week. In order to use Tidy we would have to update its configuration every day, which is untenable.\nTidy is not a validator, but the nevertheless it refuses to run on documents it considers invalid. Very soon the Custom Elements spec will pass from Working Draft to Recommendation and it will be the unfortunate case that Tidy will refuse to run on documents that are completely valid per the W3C.\n. ",
    "maxnordlund": "It should also be noted that the big JS frameworks out there, Angular, Emeber, React and Polymer, all add custom elements. This is also the preferred way of organizing your code, so it easily becomes hundreds of elements which you can't be expected to keep in an config file.\nOn my work we have, as of writing this, 74 with more added every day.\n. Well, I would have made a PR if I could, but I don't code in C and even if I did this is not exactly an trivial project which makes it that much harder. I know it's a lot to ask for, but please do consider implementing this as I'm sure you can do it without too much trouble.. I also think that would be good enough, if you really want that level of warnings you can always maintain a list of allowed elements. However, if it could detect matching tag tyops, that would be great.. After reading through https://github.com/w3c/webcomponents/issues/224, https://github.com/w3c/webcomponents/issues/426 and https://github.com/w3c/webcomponents/issues/468, the consensus is that the default style for custom elements is inline.\nHowever there were a fair amount of developers that wanted it changed to block, but that would probably break existing sites and because of that it was decided against. I think defaulting to inline with an option for block would be pretty good.. > I suppose a strategy to get this to work would be to dynamically assign a new tag (containing the right naming requirements) to new-inline-tags, and possibly issue a warning that it's being treated as inline? Users would then have to review the output messages, and manually add things to new-blocklevel-tags that they don't want considered inline?\nThis type of manual work is what we are trying to avoid, but I think it's possible today to add arbitrary inline/block level elements. It's just too tedious when you have ~100 custom elements.\nWhile the all or nothing is not perfect, I would argue it's more then good enough. Especially since this is currently blocking, at least my, usage of Tidy.\n\nThe only other way is to turn Tidy into a Javascript engine, I think.\n\nYeah, that and CSS, because you need that to deduce the display property. I think we can agree that is way to much work.\nIf there's a possibility to have a JSON-based format for specifying tag metadata, the further down the road you could write a tool for your favorite framework to generate this from your existing definition. Using something like https://github.com/electron/electron to load your app and the dump the custom elements registry should be an decent cross-framework way of doing this.. Inline seems most inline with the spec (pun intended), and perhaps a message telling the user about the option. \"Hey, I saw you are using custom elements, interpreting them as inline elements. If that's not the case see xxx option or yyy config.\". Yeah, that's a valid concern. I do think it should be on by default, but a safety check for a missing doctype seems prudent. Though, I have a bunch of partials, which don't have a doctype at all, so the option for ignoring doctype/html/head/body should also turn on custom elements.. Not quite, it's about the general case and as such I do believe it should be in tidy. You're right that tidy mostly ignores templating languages, but there are places where it doesn't which generates false positives.\nThose are when free text is not allowed, like table > tr > td and ul > li relationships. Unfortunately those are also the ones that commonly have loops, which means they generate a lot of noise when checked with tidy.\nI agree that you should need the --show-body-only yes option, but URI that contain templating tags should be ignored as you can only know at runtime if the resulting URI is valid or not. For stuff like: <a href=\"{{ url_for 'index' }}\">Home</a>.\nIn order to do this in a sane way, I suggest adding some sort of config for templating start/end tags that tidy matches, and completely ignores, --templating-tag-start \"{\" --templating-tag-end \"}\" maybe.\nDoes this make it clearer? What do you think about that type of option? (Name up to debate of course.). ",
    "tobie": "Custom elements are required to have an \"-\" in their tagName.\nThat might be an easy way to single them out and have an opt-in mechanism to allow-custom elements in Tidy.\n. Pinging both @sideshowbarker (which fixed the Nu HTML Checker), and @dontcallmedom (who maintains the W3C htmldiff service which relies on tidy).. ",
    "morewry": "The relevant Custom Element standard (which, although still a working draft at the W3C, should soon be eligible for recommendation status) has, in the 2 years since this issue was opened, been revised to v1 with broad agreement, been integrated into the WHATWG living standards, become available in stable releases of both WebKit and Blink, and should soon be available in a stable release of Gecko. Polyfills enable use in IE and Edge, MS being the remaining major vendor where implementation is still only \"under consideration,\" although the status page notes, \"development is likely for a future release.\"\nNecessary changes would be treating the is attribute with a value that contains a hyphen - as globally valid and treating tag names with hyphens - as valid, such that tidy is able to run on documents built with custom elements without requiring a user to maintain a configuration that includes each utilized element, which is not tenable (as previously noted). Ignoring all invalid tags, while it would address tidy's refusal to run, is a less desirable solution from my perspective, although separately a valuable option for other use cases.\nOtherwise, tidy will, within the next year or two--some might say sooner, but that's my estimate--be outdated to the point that it's unusable on modern and entirety valid HTML.\nI respect that maintainers of open source projects prioritize requests as appropriate and may strongly encourage PRs, but I suspect most people impacted by this issue won't be C programmers. While presence on the roadmap is reassuring so far as it goes, many users will need something that works \"now\" (ish) and if they don't find it here, they'll go elsewhere. That would be sad given tidy's history and preeminence. Closing this issue would send perhaps a stronger and more negative message than intended.. As a user, I agree that I wouldn't expect Tidy to execute or parse JavaScript or compute CSS styles, but rather to make a \"good faith effort\" to warn about possible issues and to format the markup. \nThe reason I'd prefer Tidy be able to generically recognize a custom element is so that Tidy can continue to make that good faith effort to warn about the kinds of potential issues it warns about today. For example, one of the major reasons I utilize a tool like Tidy is to help find mistakes that can negatively impact the user's experience, such as unclosed tags.\nSo, the point made about a document where there is an unmatched opening and closing tag due to a typo such as <flag-icon></flga-icon>--it would be great if Tidy can feasibly warn about that kind of case. If the typo occurs in both the opening and closing tag, e.g. <fgla-icon></flga-icon>, I think it's reasonable for Tidy to assume it's as the author intended. Although it suggests to me that it'd be a nice-to-have enhancement at some point if Tidy could log everything it assumed was an author defined custom element.\nI think of the is attribute as global, like class, although it's not quite as it has a caveat that it \"must not\" be used on autonomous custom elements (those with a custom tag name). But if there is a whitelist or blacklist of standardized tags specified, I can't find it. So general seems the closest existing fit.\nI'd note here in respect to too-many-hyphens that while the custom element spec requires a custom element name to have at least one hyphen -, it isn't limited to one hyphen (you can have two or three or four hyphens). My understanding of the requirement for a hyphen is that it's intended to strongly suggest that developers utilize a name-spacing-esque prefix to reduce the risk of name collisions.\nI concur with treating custom elements as inline by default. I'm definitely in the camp of wishing the standard had been block--at least for markup formatting purposes. (For styling purposes, I've felt inline as default has decided benefits.) I would like having an option to format all elements identified as autonomous custom elements as block, paired with the existing new-inline-tags option to customize. However, for a first pass, using inline, paired with the existing new-blocklevel-tags option, is sufficient.\n@geoffmcl The new docs look great, thanks for them!\n. ",
    "gautaz": "For the record, Nu HTML Checker (which is a HTML validator available from W3C developer tools) has recently added support for HTML custom elements.\nPerhaps the way its maintainer has used to add custom elements support might be a source of inspiration.. ",
    "fyiman": "Is --custom-tags option supported in any release versions of Tidy-html? If so, which versions?\nI am currently using HTML Tidy version 5.5.6 (on Windows), and the --custom-tags option is not supported in that version, I get an error:\nC:\\Temp\\tidy\\test>type \"Somefile\" | tidy --custom-tags yes -i -o outfile.htm\nConfig: unknown option: custom-tags\nError: Can't open \"yes\"\n\n. @geoffmcl Thanks for looking into that. Is the version you linked (http://geoffair.org/tmp/tidy-5.5.31.I567-3-w64-vc14-md.zip) something I should try (I have AMD x64 CPU on Windows 7 x64) ?\nIs there a new Official release on the horizon?\n. One way to tackle it would be to treat <pre> as having 0-length.. @marcoscaceres - It sounds like you want a way to classify your attribute such as \"idl\" as a boolean type. I don't know if that's already possible, but it seems to me to be a way to do what you want.\n. ",
    "sierkb": "\nIt looks like there's a maintainer for Macports, but stable is at least a couple of years old. \n\nSee https://trac.macports.org/changeset/96009\n\nAnd Mac OS X Mavericks is even worse: \"HTML Tidy for Mac OS X released on 31 October 2006 - Apple Inc. build 15.12\"\n\nSee     Apple Radar ticket: rdar://6376494 resp. Open Radar ticket 6376494: http://openradar.appspot.com/6376494\n. ",
    "jyasskin": "Homebrew is waiting for a \"stable\" release: https://github.com/Homebrew/homebrew/pull/17082\n. Thanks for all the interest. :)\n@geoffmcl Re \"Sorry do not know how to create a PR just for that particular single issue\", see https://help.github.com/articles/creating-a-pull-request/. You have to create a separate branch containing only the one change that fixes this issue.\n. ",
    "mcandre": "Windows packages go on Chocolatey!\nhttps://chocolatey.org/\nOn Sat, Jan 24, 2015 at 11:21 AM, Geoff McLane notifications@github.com\nwrote:\n\nWith develop-500 branch available for testing I hope we can consider a\nrelease in short order, perhaps 1-2 weeks...\nWhen we reach that point, I know very little about how to encourage\npackage manager to post the latest, so need help, pointers on this...\nAnd I know less about where, how to setup a MAC OS X release... where,\nwhat, etc...\nAnd then there is a question of where to put Windows binaries? And what\nbinaries to put there, aside from the obvious 32-bit and 64-bit favours?\nBut...\nSo again would appreciate discussion on this, but perhaps all this should\nbe moved to the public-htacg list, or all lists?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/120#issuecomment-71327885.\n\n\nCheers,\nAndrew Pennebaker\nwww.yellosoft.us\n. Yes, preferably git tags!\nFor each version:\n$ git checkout \n$ git tag -a  -m \nThen:\n$ git push --tags\nOn Wed, Apr 8, 2015 at 8:27 PM, Stephen Rider notifications@github.com\nwrote:\n\nFYI, Ionic is one of the MacPorts folks. :-) ^^\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/120#issuecomment-91085047.\n\n\nCheers,\nAndrew Pennebaker\nwww.yellosoft.us\n. @geoffmcl\nTagging release versions is generally a good idea (see semver).\nIn addition, I have hopes of Homebrew and other package managers making this project easy to install for non-developers. Package managers like Homebrew prefer to point to tagged versions so that users get more control over which specific versions of software they want to install.\n. #354, #355, #356, #357\n. ",
    "deviantintegral": "Once we have a stable release I'll be glad to redo my Homebrew PR so we can get it in there.\n. I see develop-500 was merged to master, and version.txt has been updated since. Should we consider any commit with a version bump to be a stable release?\nCan we start getting git tags here, so github will generate a tarball? That will simplify inclusion in homebrew.\n. Here's a Homebrew formula that works against the git repo - I'm waiting to submit it based on my question above.\nhttps://github.com/Homebrew/homebrew/compare/master...deviantintegral:tidy-html5?expand=1\n. ",
    "pedromorgan": "Is this project intending to use cpack ?\n. A quick cpack patch for linux\nhttps://github.com/htacg/tidy-html5/pull/174\n. And jenkins build linux\nhttp://jenkins.freeflightsim.org/view/tidy5/job/tidy5-linux-32/\nhttp://jenkins.freeflightsim.org/view/tidy5/job/tidy5-linux-64/\nIf anyones got a Mac that can be used as slave,, let me know\n. thanks for the comments and nit picking is good ;-)\ntabs - I have no comment on this, I just made the colors greyscale so its neutral. Maybe it need more staturation/gamma whatever its called..\ndoc styles - I've switched more stuff on to see what \"comments\" are there and work, and still trying to figure out whether its a doxygen setting or a comment style problem. But indeed they an be silenced down to the \"public api\"\nexample = an oops, need to move examples to a new directory as build/documentation/ is added as INPUT, will fix this tonite by creating build/documentation/examples/. But is there anything in testing we can include as examples ?\nquickref = Probably xsltproc is not installed.. ? the script has been modified so that qucikref is generated, and then \"copied\" added to the site as a static document..\nhttps://github.com/pedromorgan/tidy-html5/blob/pedro/build/documentation/build_docs.sh#L117\n. Got nothing much more to add to this atmo..\nUnless.... \n- we move some of this stuff  - http://www.html-tidy.org/documentation/\n  into doxygen also ??\nAlso maybe we can build a zip file of the completed temp/html adn a \"downlaod the manual\" ?\n. OK... Tweaked it until all issues I had are done...\nPlease review !!!\n. Err.. U havent updated your local branch to match pedro..\nYour missing a few of the final commits...\n. I think your at \"merge with head\" in the bottom block above\"..1d56d54\nSo the pages are split, and examples/ subdir etc\n. Yes, generated docs should NEVER be in the source..\nAm closing this issue as this is more of a forum message, and questions have been asnwered... Ta ;-)\n. Here's the idea..\nhttps://github.com/pedromorgan/html5-crash-tests\nEven down to snippets\neg\nhead.title-strange.html\nhead.title-silly.html\np.style.silly1.html\nand have everyone make their own snippet...\neg\nthis iZ&SillY\n. Maybe this answers your question.\nhttp://stackoverflow.com/questions/22587148/trying-to-understand-what-travis-ci-does-and-when-it-should-be-used\nRe \"hooks\"... don't panic, its just a switch that makes github trigger a build on travis \nTravis should not mess things up as is only appears in the \"repos\" as\n- a .travis.yml = travis config file\n- a link/image in readme to the \"build banner\"\neg\nREADME = https://github.com/fgx/fgx/tree/next \ndoxygen = http://fgx.freeflightsim.org/developer.html\n. Moot,,, nobody want it !\n. @vielmetti Halleluiah..\nSome olde style devs around here are nervous about config of travis + build etc..\nThere was a Jenkins instance also to build a project.. but no fluff there..\nWe need to automate this process though, so that any changes to master build the docs,.. whoever is doing it in future moving forward.. automajically...\nI got the stuff here.. am familiar with this.. only problem is upstream devs need to either embrace, or delegate.. \n. Ok @vielmetti were in..\nI got a few RPI here,, and we make a build farm for fun..\nWhat travis does, I suppose is compile and make sure it compiles..\nThats why I had a jenkins instance.. So i could create my slaves..\n32bit+ububtu = local\n64bit+debian = remote\nrpi-arm6 = a job..\nSo this is all in the front end.. and I am ready.. and waiting..\nSnag is that upstream.. them dev's are harcore c coders and dont understand et all..\nSo I am definately not wasting my time again.. for it to be kicked out..\nYou can't teach an olde horse to suck gravel\nI have a clean vision on how it goes, but upstream/masters have different debates and plans more concered witht the binary.. the docs is a second thought..\nSo thats why I almost give up.. pain in the ass init..\nKinda unserstand why Dianna Ross left Motown.. \nI give them the patches, setup a website, and later its kinda..\nhow do I do this ??\nSo am not wasting ma enengy anymore..\nWill submit patch,, Jenkins it tehre and all setup..\nWhat more can I do.. ?????????????????????\npissed of pedro who's submitted all thsi stuff already.. !!!\nNow go figure it out yourselfves.. I cant be bothered anymoere.. to turn an olde goat around.... quite frankly.....!\"!!\n. Releated Issues\n- #148 Remove build date support in favor of semantic versioning\n- #120 Publish tidy-html5 to package managers \n- #101 Build and install depency list \n- #100 Makefile missing uninstall\n. So it looks like I managed to get 64 bit deb/rpm packages on jenkins ;-)\nhttps://jenkins-htacg.rhcloud.com/job/tidy-html5-linux-64/\n. So this is an experimental build in my branch with the docs\nhttps://jenkins-htacg.rhcloud.com/job/tidy-html5-linux-64-pedro-test/\n. This sums up so diffs\nhttp://thoughts.wallproductions.com/2014/01/jenkins-vs-travis/\nboth can compile and verify... it build\n- travis is only 64 bit and linux (osx is expermental)\n- Travis, integrates with gitgub seamlesly, eg tags can be releases\n- jenkins need to be hosted, instance https://jenkins-htacg.rhcloud.com is on openshift free quota\n- jenkisn does not compile on server, instead need slaves(nodes) and confis(sshkeys etc)\n- jenkins can have windows, linux32, linux 64, osz slaves etc\n- jenkisn is highly customisable and very flexible and can do most things in an aoutomated fashion\nUsing both is not considered harmful\na lot of foss project use travis just to check code\nwe can add jenkins to make the dist packages/ documentation, update website et all\n. @balthisar maybe I send u jenkins login so u can play ? (gmail address right)\n. With osx slaves, linux32 and linux64 all running...\nany developer who pushes a change would have it checked on all\npossibilities..\nThe only reason I disovered a but with the man recently, is because I cos\nan email from jenkins telling me build fail..\nI missed it before, and so did jim, but a fresh checkout and a make\ndetected a culprit and was fixed...\nUs developers miss things all the time..\nOn 8 March 2015 at 12:07, Geoff McLane notifications@github.com wrote:\n\n@balthisar https://github.com/balthisar, @pedromorgan\nhttps://github.com/pedromorgan, as expressed to Pete directly I am\nagainst this... just do NOT see the need!\nAnd to add to BOTH would be a complete folly. And it is not enough to\nreason that it does no harm.\nA developer adding a fix has a responsibility to check for 'breakages'\nBEFORE commiting and pushing a change, and not depend on some remote build\nto show up an error, and thus require yet another fix.\nYes, we must do more work to make re-running the tests easier, and add\nmore tests, but again it is the developer that should re-run such tests\nbefore commiting...\nBut as always, just a personal opinion.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/175#issuecomment-77745412.\n. FOr fun I got the docs to autocompile on each push as proof of concept\nhttp://tidy5docs-htacg.rhcloud.com/\neg mapped as\ndocs.html-tidy.org\n. I think you have completely miseed the point.. !! sign..\n\nGonna abandon this CO, most other projects have it or  want it big time, and this project is back to olde style.\nAnd all it is a simple configuratin and a free server...\nI give up.. jenkins instance deleted...\n. An observation re packaging\nThis is what cpack currently includes in the deb, missing is the man file tidy.1\n./usr/bin/tidy5\n./usr/include/buffio.h\n./usr/include/platform.h\n./usr/include/tidy.h\n./usr/include/tidyenum.h\n./usr/lib/libtidy5.a\nSo the snag is that tidy.1 needs to be included \ntidy.1 is created with the build_docs.sh and requires  xsltproc\n$TIDY_PATH -xml-help > \"tidy-help.xml\"\nxsltproc \"tidy1.xsl\" \"$tidy-help.xml\" > \"$OUTP_DIR/tidy.1\"\nSo this is a bit chicken and egg in that..\n1. tidy needs to be compiled, to output the tidy-help.xml\n2. xml is then processed into man page\nSo the sequence needs to be..\n1. build tidy\n2. generate man page\n3. run cpack and include man page for install\n. http://stackoverflow.com/questions/3375341/man-page-generation-packaging-installation-with-cmake\n. Would make sense to move \nbuild/documentation/\nto\ndocs/\nand something I considered but didnt to as not to upset apples in cart\n. This can be closed as its fixed here..\nhttps://github.com/htacg/tidy-html5/commit/08d037b6af630b40c4c9df7569a9a30a56d7c332\n. > > Since you know a lot more about Cmake than I do, can you suggest a workaround?\nerr no, am a complete muppet and copied the guru's (geoff) snippets in #177 and modified...\nGeoff wrote the code essentially, I only tweaks it.. ;-)\n. Re the destination\nhttps://github.com/htacg/tidy-html5/blob/master/CMakeLists.txt#L179\nmanpath on my machine = ubuntu\nbash\n$  manpath\n/usr/local/man:/usr/local/share/man:/usr/share/man\nSo /usr/local/man is where the custom compiled stuff seems to go with the directories man1, man2 etc (no langs)\n/usr/share/man seems to be kinda \"different\" as its full of directories, eg en, es, ch, and man1, man2, and tar.gz files.. containing the man file itself..\nWhen I installed the deb here, the destination local/man/man1 worked, main/man1 didnt and could figure out where it ended up\nMaybe we an use manpath output and split it, same style as the version.txt\n. Maybe be should be doing this in develop branch, so as not to break for users,, until we got it figured out\n. xsltproc is required to create the man page, \nand the quick ref is very useful, so I don't want that to go if possible\nso no xsltproc == no man or quickfref\n. enter build/cmake\nand rm tidy5 binary\nand rm ../documentation/tidy5\nso it clean..\nthen run \nmake clean\nand build again..\n- If I remove the \"man page part\" from cmakelists, then it build the binary\n- if I reinstate the \"man page part\", it uses the tidy5 created above..\nIts a chicken and egg, where the \"man page\" part is execuring, before tidy5 exists imho !\n[ 96%] Building C object CMakeFiles/lib-tidy.dir/src/gdoc.c.o\nLinking C static library libtidy5.a\n[ 96%] Built target lib-tidy\nScanning dependencies of target man\nGenerate /home/foss/tidy-frash/build/cmake/tidy-help.xml\n/bin/sh: 1: ./tidy5: not found\nmake[2]: *** [man] Error 127\nmake[1]: *** [CMakeFiles/man.dir/all] Error 2\nmake: *** [all] Error 2\n. Fixed.. ta @balthisar \n. readthedocs wont work imho, cos it uses sphinx and geared to python and if we want to document the \"code\", then really its doxygen.. \nI've got a site up and running previous with the api docs, and the idea of automating it..\nhttp://tidy5docs-htacg.rhcloud.com/\nHowever I do not think there is value in maintains more then one version.. instead I suggest to use terms such as \n\"Introduced in version x.y\" or \"depreciated iny.x \" and alike...\nAlso i dont think there is a lot of value in the \"webiste\" and would rooll the \"website\" into docygen and one repos and onne plase for the whole lot... imho\n. What's you \"openshift.com\" login (email) so I can add u to openshift\nproject...\nRe updating, I;ll make a pull request to update..\nIt will user fabric, which is a python lib and makes scripting a doddle..\nU can (or i can) then setup this up on a cron somewhere to autoupdate (same\nas FG docs)\nPete\nOn 12 September 2015 at 19:27, Geoff McLane notifications@github.com\nwrote:\n\n@pedromorgan https://github.com/pedromorgan thanks for the comment on\nreadthedocs... it seems ok with me that we stick to doxygen... which is\nalready setup...\nIf the version feature changes were as simple as just two ideas - (a)\nintroduced in v.x.y and (b) deprecated in v.y.z - then maybe it could\nall be covered in terms... could still try that...\nAnd yes, http://tidy5docs-htacg.rhcloud.com/ looks good. I note it is\npresently 4.9.20... How can I download those site files? I do not see any\nlogin, admin, etc... but maybe I have forgotten...\nAnd then how do I go about updating that to say the 5.0.0 release\nhttps://github.com/htacg/tidy-html5/releases/tag/5.0.0? And again\ngetting all the site files...\nThis seems like a good start ;=))\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/248#issuecomment-139808355.\n. Ohh, and can u sent me a couple of new/depreceated functions so I can show\nthe markup??\n\npete\nOn 12 September 2015 at 19:45, Peter Morgan pedromorgan@gmail.com wrote:\n\nWhat's you \"openshift.com\" login (email) so I can add u to openshift\nproject...\nRe updating, I;ll make a pull request to update..\nIt will user fabric, which is a python lib and makes scripting a doddle..\nU can (or i can) then setup this up on a cron somewhere to autoupdate\n(same as FG docs)\nPete\nOn 12 September 2015 at 19:27, Geoff McLane notifications@github.com\nwrote:\n\n@pedromorgan https://github.com/pedromorgan thanks for the comment on\nreadthedocs... it seems ok with me that we stick to doxygen... which is\nalready setup...\nIf the version feature changes were as simple as just two ideas - (a)\nintroduced in v.x.y and (b) deprecated in v.y.z - then maybe it could\nall be covered in terms... could still try that...\nAnd yes, http://tidy5docs-htacg.rhcloud.com/ looks good. I note it is\npresently 4.9.20... How can I download those site files? I do not see\nany login, admin, etc... but maybe I have forgotten...\nAnd then how do I go about updating that to say the 5.0.0 release\nhttps://github.com/htacg/tidy-html5/releases/tag/5.0.0? And again\ngetting all the site files...\nThis seems like a good start ;=))\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/248#issuecomment-139808355.\n. Hi Denis...\nThe snag is that doxygen created the \"C api docs\"... and sphinx dont so\nthat,, well it does.. but c coders hate it.. so not an option... basically..\n\n\nI use readthedocs a lot, so understand, but for this project.. its doxygen..\nIf there was a \"readthedocX\".. then i would be pig in shit.. would run down\nthe street naked to the pub.... ;-))\nOn 12 September 2015 at 20:14, Denis Denisov notifications@github.com\nwrote:\n\nreadthedocs for me easier to make changes will be harder to anyone, but\nit's up to you guys.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/248#issuecomment-139810398.\n. @vielmetti Yep doxgen does...\n\nIts wicked.. and can eat c++, md, rst et all..\nits mature and .. ahem.. am a dox.dev.tester .. \nsee http://api-docs.freeflightsim.org/\nWhicih is doxygen of doxyies.. .,. or pixies.. must be stoened !! ??????\nThe Doxygen docs are creates by \"doxxygen parsing the files\", and not compiling..\nSimilar in php where comments required..\nCompiling the FG docs .. particular the OSG part takes around 20 mins,,\nand had to be compiled twice in a chicken and egg situation.., \nhence first run is placing eggs\nwhen next run is identical, but can sit on first egg.. \nso indeed for our purpose.. we crate the egg first, and then the chicken..\nAnyway.. we want some one stop cool resourse to eat the html5 api, and how to use it ;-)))\n. Working on a Patch..Now\nDo I do this aginst \"master\"..\nWhat happened to develop....\n. So @geoffmcl  I think u realise like I just done that its a cmake build.. (doh! brain cells)...\nAnd can see it here ;-))))))))))))\nhttp://www.htacg.org/tidy-html5/tidylib_api/\nI want that site to be here..\nhttp://www.html-tidy.org/\nAnd to roll the copy and \"fluff\" into an into to docs..\nAt the moment.. its really f*(&^%& confusing what is what..\nI suggest end target for docs and Api docs and \"@new features\" and \"@dereciated\"\nis autogen from doxygen and end up here\nhttp://www.html-tidy.org/\nSo the others will need to redirect.. ..\nThis way its all in the \"tidy-html5\" repos with minimal overhead.. and bound together using doxygens features such as TODO, etc etc etc \nimho and highly recommended for u young c hackers...\nTrust me I deal with php and java coders, but doxygen is it.. and even @geoffmcl  can change a home page..\n. Infact @geoffmcl \nWe can include the \"CODESTLYE\" and other files on the site here.. \nhttp://www.html-tidy.org/\n. ",
    "thierry-FreeBSD": "Port (and package) for FreeBSD: http://www.freshports.org/www/tidy-html5/\n. ",
    "strider72": "Just had a conversation with MacPorts over IRC regarding their very old version (c 2012) of Tidy.  Showed them this project.  They replied that they can update it, but it's easier from their end if releases are tagged in GitHub, because: \"a tarball can be easily fetched for every tag and our mechanism for detecting new version basically consists of looking at 'release' tarballs or tags. so one tag per new release would be immensely helpful.\"\nMaybe you already know all this -- just adding my two bits.  Please add tags so that I can use MacPorts to manage Tidy for me.  Thank you.\nNote: I added a ticket to MacPorts' Trac system, so they should be keeping an eye on this project going forward: https://trac.macports.org/ticket/47387\n. FYI, Ionic is one of the MacPorts folks. :-)  ^^\n. Not sure if this should be re-opened or a new thread, but Tidy is still not updating at MacPorts. Currently at 5.0.0.\nWould appreciate if tagging was fixed so that package managers could notice the updates properly.\n. It's still not updating on MacPorts.  I don't know what precisely needs to happen here, (I use MacPorts so I don't have to deal with this stuff! ;-) ), but as a reminder, here is the original ticket I added on that site, which I believe does have info as to what their app expects in terms of releases; https://trac.macports.org/ticket/47387\n. ",
    "Ionic": "N.B.: if you don't want to create git tags or 'releases' but prefer to release binaries and source on www.htacg.org, that's fine. But PLEASE stabilize one of those methods, so that version checker scripts can utilize this information (and packagers don't need to use date-versions due to no source tarballs or git tags for specific versions being available.)\n. Looks okay.\nI'd advise to keep the scheme stable, i.e., stay with just version.\nOther than that, I recommend tagging a \"release commit\" instead of a \"random commit\". For example, increment the version in for instance version.txt and commit that with a message like \"Release <version>\". Tag this commit explicitly as <version>.\nIn the project I maintain, I usually do something else. I still create a release commit and tag that, but do not increment the version in that commit. Instead, I increment the version afterwards with the next commit entitled \"Continue development\". This is mostly due to using debian/changelog as the main changelog, which is manually edited (i.e., not generated from git history.)\nIt's really just a deviation, though, so do whatever suits your needs best. I'd side with the original recommendation.\n. ",
    "ryandesign": "MacPorts has 5.0.0, which is the latest release listed on the releases page of this github project.\n. I saw the output *** SIZEOF void * != 8, so not 64-bit in my 64-bit/32-bit universal build, assumed this would be a problem, and worked around it. I did not attempt to look at your code to see where that determination was used. If it is only used on Windows, then I'll add a patch to MacPorts to not run that check, so that the *** SIZEOF void * != 8, so not 64-bit output doesn't appear and doesn't confuse anyone else.\n. Great! Thank you.\n. Yes, change man/man1 to share/man/man1 in CMakeLists.txt. That is what I'm doing in MacPorts.\nDon't try to install into /usr when /usr is not the prefix the user requested.\n. Yes, thanks!\n. Thanks.\n\nI tested it in linux, and using the commands -\n$ cd build/cmake\n$ cmake ../.. -DMAN_INSTALL_DIR=man -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release\nThen the cmake_install.cmake shows that the tidy5.1 man file would now be installed to `/usr/man', so it seems this would now accomodate Slackware, BSD, and other man install locations...\n\nNote that man will not look for tidy5.1 in /usr/man; it will look for it in /usr/man/man1. What you've done is fine, but will start to be inconvenient for you if you ever install manpages in categories other than man1.\n. You can conditionalize the use of DYLD_LIBRARY_PATH if you like, but only OS X uses it, so there would be no harm in setting it on other systems. Similarly there is no harm to setting LD_LIBRARY_PATH on OS X since it does not use it.\nAttempting to build without building manpages, then installing the program and library, then building and installing the manpages isn't going to be workable in a package management system like MacPorts. MacPorts will build the entire software, then install the entire software. There is no opportunity to do any additional building after installation.\nShared libraries are preferable on OS X. Use of static libraries is discouraged on OS X.\nI am already working around this problem in MacPorts by having MacPorts set DYLD_LIBRARY_PATH as an environment variable before calling make, but you should set it yourself in your build system so that this is not necessary.\n. > @ryandesign now building BOTH static and shared libraries... version 4.9.30 onward...\nOk. We were already enabling both static and shared libraries in the MacPorts build of tidy, and this seems like a reasonable default.\n\nDue to the fact windows uses the same archive library name, have appended and 's' to the static library,\n\nThat's weird. I do see a two other MacPorts ports I have installed that use a \"_s\" suffix on static libraries, but it is definitely not the norm to suffix static libraries on UNIX. But I have no experience with Windows.\n\nand the tidy console app will link with this library...\n\nThat's weird, in that it's an unnecessary waste of disk space. (Now there's two installed copies of the static library\u2014one in libtidy5s.a and one in the tidy executable.)\n\nShould now no longer be required to set the DYNA_LIBRARY_PATH... but will do no harm ;=))\n\nCorrect, 4.9.35 builds fine without DYLD_LIBRARY_PATH set.\n. > I guess there is no standard for the static library suffix, but I too have seen some that use s, so chose that. And some that really spell it out like _static, for freeglut, libpng, and zlib with static. Some go the other way and rename the DLL import library, adding _imp to the shared lib like libcurl. Assimp even adds the bitness with _static32...\n\nAnd boost goes absolutely MAD with the name, like libboost_system-vc100-mt-1_53.lib. This is version 1.53 created using MSVC10. Here the mt denotes the use of the static runtimes, and would be md for the dynamic runtimes! Not quite the same, but similar idea.\n\nAccording to the documentation, \"-mt\" means multithreaded (it means that on UNIX too). Static libraries are indicated with the \"lib\" prefix while import libraries do not use a prefix.\n\nThe important issue is that they can NOT have the same name in Windows, since they both have the same .lib extension. This is not a problem in unix since one is .a (or .la), and the other is .so, with soft links to the SO version, like .so.4 and .so.4.9.35, etc...\n\nThat's the relevant point: you're describing the situation on Windows, and are applying it to UNIX, where it isn't applicable.\nNote that the static library is .a, the shared library is .dylib on OS X and .so on other UNIX systems, and .la is the libtool control file which describes the shared library.\n\nBut changing the static library name also seems good for unix, in that probably most prefer to use the shared. The developer has to really know about the static library name convention, and make a specific provision to use that if desired.\n\nMy point is that it is extremely uncommon for static and shared library names to differ on UNIX. (Out of almost 1000 static libraries installed on my system by MacPorts, I only spotted 2 using a \"_s\" suffix.) Your examples libpng, zlib and boost all use the same library names on UNIX, with the only difference being the extension. (On my Mac, as installed by MacPorts, I have libpng.a and libpng.dylib; libz.a and libz.dylib; libboost_system-mt.a and libboost_system-mt.dylib.) If you want your software to be different, ok, but if you want to do what people expect, then the way you had it before was better.\n\nAnd NO, there are NOT two installed copies of the static library! One of the good things about a static library is that the linker only extracts the services needed when building tidy5.exe. I do NOT think is just embeds the whole library in the binary.\nSo while tidy5s.lib weighs in at (a meagre!) 1.5 MB, tidy5.exe is only 410 KB ;=)). This seems the same in unix, with the static library libtidy5s.a is 836 KB, and again tidy5 is 575 KB.\n\nI agree that the size of the tidy executable is smaller than the size of the static library, so presumably only the parts of the static library that are used are embedded into the executable. But that's still wasted space that would not be wasted if you used the shared library, like you did before.\n\nBut anyway, in todays market of massive cheap HDD space, tidy is tiny, very light weight in total compared to many other packages ;=)).\n\nWhich is still not a good reason to waste space.\nIf you don't want to change it again, it's fine; it does work the way it is now. I'm just saying I disagree with your reasons for having made the changes.\n. > Yes, this may require projects linking with libtidy to be rebuilt. This will be the first release of tidy in about 6 years...\nBut remember that the version of tidy from 6 years ago (20090325 is what we had in MacPorts before we switched to your fork) installed a library with a Mac OS X install_name of /opt/local/lib/libtidy-0.99.0.dylib with a compatibility and current version of 1.0.0. That already differs from what your version of tidy installs today, which has an install_name of /opt/local/lib/libtidy5.4.dylib with a compatibility version of 4.0.0 and a current version 4.9.36. So there's no need to further increase the library major version (e.g. from 4 to 5) to differentiate yourself from that old version.\nIn MacPorts, we have already dropped the \"5\" suffix from the library name, so our tidy install_name is /opt/local/lib/libtidy.4.dylib. We did not want to modify all ports that use tidy to teach them about the \"5\" suffix, only to have to modify them again later to remove that again.\nSemver is good, but it still sounds like you're planning on keeping the library version tied to the project's release version, which isn't recommended, as I've said. There is no reason why the library's major version should increase from 4 to 5 with the release of tidy 5.0.0 if the library does not change in a backward-incompatible way between now and then\u00b9. The library major version and the project's release version should be treated as two distinct concepts, for example by maintaining two separate variables within your build system that can be independently increased as needed.\nConsider also that your project contains not only the libtidy library but also the tidy program. Consider that you might some day want to release a completely rewritten version of the tidy program with much new functionality. That might warrant a significant increase of the project's release version, but if the library has not changed in a backward-incompatible way, then it would not warrant an increase in the library's major version.\n__\n1. An exception would be if there has been a point during libtidy5.4's development where it did already change in a backward-incompatible way but the library's major version was not increased at that time.\n. There's no reason to open a ticket in tidy's issue tracker if you want a port in MacPorts updated. Instead, you file a ticket in the MacPorts issue tracker.\n. If you like, you could give short installation instructions using each package manager, perhaps grouped by OS. For example, you might start with this:\n\nOS X\n\nMacPorts: sudo port install tidy\nHomebrew: brew install tidy-html5\n\n\nI'm omitting Fink because I couldn't find a modern version of tidy there yet.\n. ",
    "arthru": "Just to let you know that I subscribed to the tag feed of the project (https://github.com/htacg/tidy-html5/tags.atom), and I try to package new versions for ArchLinux as soon as I can.\n. ",
    "sebgod": "Ok! Good to reduce the number of build systems.\n. ",
    "steakknife": "If using Homebrew, just run this:\nbrew install https://gist.github.com/steakknife/7f6dc60b1a4b4e9d12c6/raw/tidy-html5.rb\nIt will install the tidy executable as tidy-html5 since regular tidy comes with either the base OS X or CLT.\n. :+1:   Adding -j1 on my box works (which does parallel by default), but defeats the purpose of correctly specified dependencies.  Furthermore, mkdir -p would be far simpler and succinct.  Finally, putting an @  to silence noisy/ugly commands makes for easier comprehension of what's happening.\n. ",
    "Acecool": "Notepad++ has macro features to combine common patterns into one tool / button which is what I used to \"record the macro\" and \"play the macro\" of me clicking tidy config 1.\nWindows 7 64, 8gb, 3TB\n. ",
    "fred-wang": "cc'ing @physikerwelt as he has done the work for MediaWiki.\nYou can check the MDN pages for documentation: https://developer.mozilla.org/en-US/docs/Web/MathML\nMathML has two forms: \"presentation\" (http://www.w3.org/TR/MathML3/chapter3.html) and \"content\" (http://www.w3.org/TR/MathML3/chapter4.html). Note that the former is the most important for a browser context and is the one described on MDN.\nThe RelaxNG schema (http://www.w3.org/Math/RelaxNG/) provides a formal syntax for MathML and is used by the HTML5 validator (with some modifications to allow mixing HTML5 & MathML: https://github.com/validator/validator/tree/master/schema/mml3).\n. Thank you very much for this initial implementation. https://github.com/htacg/tidy-html5/issues/130#issue-41044973 seems to validate, now!\nCould you say more about what is supported exactly... In the commit I only see the declaration for the math element, so I'm assuming tidy will accept arbitrary MathML content for now? Please let me know if you need help to set up the element/attribute tables (and where they are in the source).\nI just gave a try with the torture tests (https://mdn.mozillademos.org/en-US/docs/Mozilla/MathML_Project/MathML_Torture_Test$samples/MathML_Torture_Test) and I get these errors:\n1) <math> proprietary attribute \"display\" Strangely, this error does not happen for other attributes like \"stretchy\" so I suppose this has something to do with the fact that it concerns attributes on the root element.\n2) <mspace> attribute \"width\" has invalid value ... Here I assume that width is already known by tidy for HTML elements, but the syntax is different for MathML.\n3) unescaped & or unknown entity The official list of entities used by the HTML5 validator is http://www.w3.org/TR/xml-entity-names/#htmlmathml\n. Thanks, I'll take a look to this next Friday.\nFor entities.c, it seems that only those of HTML4 are defined, so I guess a VERSION_FROM50 should be added for the missing entity names. The list will become much bigger, so entitiesLookup should probably do a binary search.\nAlso, lang/rang use the HTML4 mapping, while modern browsers have all switched to the HTML5 one, so that should probably be fixed too (http://www.w3.org/TR/xml-entity-names/#diff-xhtml1).\n. So some analysis on entities:\n1) General remark: MathML/SVG are generated from converters, editors etc so the most important point preventing tidy from rejecting valid HTML5 code... code formatting is less important. At least for Wikipedia's purpose only validation is important.\n2) The only mapping change is rang/lang. Since modern browsers have moved to the HTML5 version, I think tidy should do that too.\n3) Indeed looking a the number of lines in a file, there are 2125 entities in HTML5. A binary search will give a complexity of log(2125)/log(2) = 11 so it should be quite fast.\n4) One complication is that they are two functions:\nctmbstr TY_(EntityName)( uint charCode, uint versions );\n  Bool    TY_(EntityInfo)( ctmbstr name, Bool isXml, uint* code, uint* versions );\nwhich would mean two tables (one ordered by char code, the other by entity name) to be able to perform a binary search. However, IIUC the first one is only used by pprint.c to produce entity names in the output source code. Per comment 1), I believe we don't care about that for now.\n6) Another complication is that some entity name generates several characters, for example \"vsupne\" is \"&#x0228B;&#x0FE00;\". These entities will need more work since the callers should be adapted too...\nFor now, I'll just submit a pull request for 2) which is easy.\n. @geoffmcl @physikerwelt \nSo I just gave a try with the develop-500 branch and https://en.wikipedia.org/wiki/Help:Displaying_a_formula (with MathML enabled in the preferences) and I don't see any MathML errors. The major problem seems to be a warning with the invalid use of the \"meta\" tag in the body, but that's an issue with MediaWiki (due to a bug in Chrome IIRC). Moritz, are you able to launch a test instance with tidy develop-500 on all MediaWiki math pages?\n. ",
    "physikerwelt": "I did not fix the problem as such. MediaWiki currently does not check the MathML at all, and trust that the MathML generated by Mathoid is correct. See https://gerrit.wikimedia.org/r/#/c/154083/15\n. I'm able to launch a test instance but I don't know how to switch the tidy version\n. ",
    "LeleDev": "Hi Ben,\nSorry, I can't find another way to contact you on this topic (no issue section on your great fork).\nI've this little issue that prevents me and many other users from using html5tidy on Sublime Text with angularjs: it processes any template code as it would be javascript. This is OK for \"text/javascript\" type ones, or when the type attribute is missing, but not with template like this:\n<script id=\"page.html\" type=\"text/ng-template\">\n    // html content\n<script>\nTidy processes the html content as if it would be javascript code instead of html (angular template), throwing a lot of erros... could you please fix this somehow in your fork? For example discriminating between \"text/ng-template\" and \"text/javascript\" strings...\nThank you in advance!\n. ",
    "ezequiel-garzon": "Thanks for the reply, Geoff! I can't verify this, as I'm getting errors when I try to build it. I'm not an advanced user, so please handle this issue however you see fit. Thanks for your work! Edit: If I'm the only one who can close this issue I will gladly close it! Cheers.\n. @balthisar Thanks for your interest, Jim. Let me first say that I don't (yet!) know how to use git... so I just downloaded the new zip at github. Here is what I get as root:\n```\nmake -C build/gmake\nmake: Entering directory /home/eze/sb/tidy-html5-master/build/gmake'\nmake: Nothing to be done forall'.\nmake: Leaving directory `/home/eze/sb/tidy-html5-master/build/gmake'\nls build/gmake/\nMakefile  obj  readme.txt\n```\nAny thoughts will be appreciated. Thanks!\nEdit: Some information about my machine:\n```\nlsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 14.04.1 LTS\nRelease:    14.04\nCodename:   trusty\nuname -a\nLinux emach 3.13.0-24-generic #47-Ubuntu SMP Fri May 2 23:30:00 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux\n```\n. Thanks for your help and patience, Geoff: that was a very detailed post. I'm now able to run the latest version of tidy5! I will try git as you mentioned. I assume I must follow the three steps you provided above each time I run git pull, right?\nWhile the example I gave now runs successfully, a minor modification gives warnings (and \"info\"):\n$ cat sample.html \n<!doctype html>\n<meta charset=utf-8>\n<title>Sample</title>\nSample\n$ tidy5 -qe sample.html \nline 4 column 1 - Warning: plain text isn't allowed in <head> elements\nline 2 column 1 - Info: <head> previously mentioned\nHere again the W3 validator is OK with the file. Should I open new issues? Should I close this one? I know best practices indicate to explicitly include all tags, be they optional or not, but I guess that's the main distinction from XHTML, which makes validation much more predictable. As an aside I wonder (if you are willing to digress) why this project doesn't use \"the same technology\" used by the W3 validator. Aren't the two teams duplicating efforts? (I clearly like having a CLI tool!) Thanks once more!\n. Thanks once more for your feedback, Geoff! I'll close this issue as I knew nothing about the option --omit-optional-tags, which is clearly what I was looking for.\nAs a last issue for now, how do you feel about ambiguous ampersands and such? E.g., <p>A&E & this && even this does not contain ambiguous ampersands, but it does yield a warning. In this case so does the W3 validator. Should I open a different issue or just let it be? I'm sorry to bring up so many edge cases! Once more, thanks wholeheartedly for your help. Cheers!\n. Ambiguity when referring to ambiguous ampersands is a nice touch! I agree with the fact that a finer distinction would be a great addition. For instance, writing a&b,c, which is valid markup, should not issue the same level of warning as a&b;c, which is not. Also, I must admit I like running tidy5 -qe more than using it to tidy my documents...\n. ",
    "nkmathew": "Works ok\n\nnkmathew\n. Sorry about that. I'm okay with this\nOn 2/23/15, Jim Derry notifications@github.com wrote:\n\n@nkmathew, does this latest fix meet your expectation? Would like to get a\nchance to hear from you before closing this issue.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/htacg/tidy-html5/issues/133#issuecomment-75490739\n\n\nnkmathew\n. I've been running the version from 2009 all this time without even realizing. I was formatting the file from with SciTE which happens to ship with one of the first versions of tidy which gets picked up first instead of the one in my PATH.\nHad to delete it for it to work\n. The installers are made by Troy(of ebswift), not Neil.\nHe has updated it for the current version, v3.6.0, so it's all good\nhttp://opensource.ebswift.com/SciTEInstaller/\n\nnkmathew\n. Don't think he wanted or had the time to build it himself. The exe(with dll) was obtained from the binaries site:\n$ \"C:\\Program Files (x86)\\SciTE\\tidy5.exe\" -v\nHTML Tidy for Windows version 4.9.35\nCan't say I follow the project closely, I just needed to get rid of a minor annoyance. I'll build the latest version from the repo when the need arises ;)\n. Not sure why you're not getting any properties files. The files should be in C:\\ProgramData\\SciTE after installation.\nHe must've forgotten to update the installers in the download page or something, idk. The updated ones can be found here:\nwww.ebswift.com/temp/scite-3.6.0.msi\nhttp://www.ebswift.com/temp/scite-3.6.0x64.msi\nHe thought it would be a good idea to rename the binaries so that they don't shadow any other(newer) versions you may have in your path when running tidy on a file from within SciTE.\nNPP is not really my cup of tea, it  doesn't have an output pane as good as SciTE's and is less tweak-able as far as I know. The \"great features\" offered by npp can be replicated in a text editor like Vim with a couple of plugins thrown in.\n. ",
    "jay": "I voted for this as well. sideshowbarker seems like the right guy to reach out to. Good luck guys.\n. ",
    "techresources": "Hi Geoff,\nThanks a lot for prompt response.\nKindly provide downloadable link of Tidy v4.0.0.0  Dll and source code if possible.\nSo, we can try it on latest dll version.\nregards,\ntechresources \n. ",
    "AlbertWiersch": "Thanks! A quick test seems to indicate this issue is no more.\n. Thanks! A quick test seems to indicate this issue is no more.\n. Can you build the EXE so that it does not require that DLL? I don't recall ever having any missing DLL issues with the 5.2.0 build. For example, build the exe without linking dynamically to Visual C++ libraries?. It seems really strange that an statically linked tidy.exe file can't be made with a compiler/linker setting adjustment to eliminate the dependencies on DLLs. Is this possible? Are you sure it can't be linked statically? If not then I may just go back to distributing 5.2.0 if not, at least for the time being.\nOr maybe redistribute the needed DLLs if I have to... it seems it is allowed:\nhttp://stackoverflow.com/questions/35097193/can-i-bundle-the-visual-studio-2015-c-redistributable-dlls-with-my-applicatio\nBut I'd much rather have a simple statically linked EXE file and not have to worry about DLLs.\n. Thank you. I hope you are able to get everything statically linked so I can just distribute tidy.exe like I could with 5.2.0. I'm distributing the 32-bit version, by the way... because that runs on more systems.. Thank you. I will test tomorrow. Are you still experimenting with a static link to avoid the need for any and all DLLs?. OK. I tried it on the computer that it didn't work on and it came up with a massage about another missing DLL. I think the only way to make this work well is to statically link everything. I don't want to distribute a bunch of extra DLL's with tidy.exe and I didn't have to with the 5.2.0 binary... so there must be way to get this to work without extra DLLs. I think I will go back to 5.2.0 until this is resolved.\nUPDATE: 5.2.0 (32-bit) didn't work on my old Windows 7 notebook either - MSVCR100.dll missing. Ug.... but I never received any complaints about it.... perhaps because more people already have this DLL on their systems and/or most people don't use the HTML Tidy functionality.. Yes, DLL hell for sure.\nI want something I can distribute with my app that just works and doesn't require users to download a bunch of extra DLLs or do any extra \"work\".\nThe DLL reported missing by 5.5.10 (the first ZIP) was api-ms-win-crt-runtime-l1-1-0.dll.\nI tried the *-win32-2.zip and got the same message about api-ms-win-crt-runtime-l1-1-0.dll missing.\nYES!!! Please make an all static version of tidy.exe. Can you do this? I don't have a build environment setup on my system to do it and I'm sure it would take me a lot longer to figure it all out than it would take you. :)\nThe increase in size is well worth the \"price\" for not having to deal with DLL hell if you ask me.\n. Great! Unfortunately the link doesn't work so I can't try it but will try it as soon as I can get it. Assuming it works with some simple tests, then do you think it will be suitable and stable enough to distribute with my application?\nI don't need a backport to 5.4. The latest stable version should be fine.. Thanks. Got it and will try it soon.. Yes! Looks like it works:\nQ:\\temp\\tidy-5.5.10-win32-mt\\bin>tidy.exe -v\nHTML Tidy for Windows version 5.5.10.cpack-test2\nIs the tidy.exe file safe to distribute with my application?\nThank you!\nNOTE: virustotal.com says that Qihoo-360 finds malware in the file, but I highly suspect it's a false positive. No other checker is detecting any problems.. Thanks! I'll just distribute the statically linked tidy.exe file that you provided.\nI'm going to stick with the EXE instead of the LIB because I don't think too many users use it and because of the advantages of keeping them as separate/independent programs.\nI'll go ahead and close this issue.\nUPDATE: I just rechecked the tidy.exe file with virustotal.com and this time it didn't come up with any positives.. If you test a build with virustotal.com and go to the 'File detail' tab, it will show the 'PE imports'. The one that is statically linked only shows 'KERNEL32.dll' whereas the others show a lot of other required DLLs.. Sorry, I'm not a member there. I would just ignore it... with all those virus checkers and constant changes and updates, false positives happen rather often it seems. If you still want to contact someone then I think you need to contact Qihoo directly. Most anti-malware companies should have a way to submit false positives.. ",
    "foxinushka": "Thanks!\nI will post smaller example later.\n. I was going to write an example like you wrote above.\nThe fix helps. Thanks!\n. I've checked the fix. The behaviour is the same as I described in #283.\n. Sorry, I've forgotten to enable TidySkipQuotes option. Now it works. Thanks!\n. I've just tested 4.9.11 (the old version, which we were using before 5.3.16).\nIt worked better. It had leaved content inside \nhtml\n<a href=...> ... </a>\nblock. But It had duplicated link.\nCleaned html in 4.9.11:\nhttps://gist.github.com/foxinushka/79da3052490539a2fcbda4727a02ee23\n. This behavior was changed in 86f626cd674d09c9215c59c4cdad1d4e7887e00b.. So, I've debuged, that problem with tags adjustments, because this content is HTML 4.01. Where can I read about tag a, if it can't be a block in HTML 4.01?\nC\n            if (lexer->doctype != VERS_HTML5)\n                    {\n                        /*\\\n                         *  Back to legacy HTML4 mode for -\n                         *  Issue #167 & #169 - TidyTag_A\n                         *  Issue #196        - TidyTag_CAPTION\n                         *  others?\n                        \\*/ \n                        TY_(AdjustTags)(doc); /* Dynamically modify the tags table  */\n                    }. @geoffmcl thanks for explanation.\n\nIf you change the doctype to <!DOCTYPE html>, the transparent block nature of the anchor will produce what you want... I think... try it...\n\nI can't change doctype to HTML5, because it change content representation in some cases.\nI use TidyHtml lib in Spark email client to prepare content for XML parser. (I parse e-mails content to better presentation in Spark).\nSo I use it to fix HTML and convert it to XHTML.\nBut in output of my parser I can get HTML content, if it decides that the content should be represented as HTML.\nI think about some option, which disables some fixes for a-tags in Tidy. I understand, that the HTML is wrong, but it is part of real e-mail from Facebook, and most browsers work well with it. \nAlso I have other issue with this e-mail which follows me to disable this fix:\nparser.c:1343\n /*\\\n         *  Issue #307 - an <A> tag to ends any open <A> element\n         *  Like #427827 - fixed by Randy Waki and Bjoern Hoehrmann 23 Aug 00\n         *  in ParseInline(), fix copied HERE to ParseBlock()\n         *  href: http://www.w3.org/TR/html-markup/a.html\n         *  The interactive element a must not appear as a descendant of the a element.\n        \\*/\n        if ( nodeIsA(node) && !node->implicit && \n             (nodeIsA(element) || DescendantOf(element, TidyTag_A)) )\n        {\nWhat can you suggest me to solve this problem?\nI can pull request some new options for Tidy process, or make branch in my fork with this 'hacky' options.\n. Thanks, it helped me : )\nSo, I will make fork of TidyHtml and will use it with my custom options for this cases.\nI understand that \"most browsers work well with it\" it isn't a point for the library, because its purpose to fix HTMLs. I told about this only to explain my situation.\nThanks for great library : )\nIt helps me a lot in Spark.\n. ",
    "bobbens": "This can be, but on my set up this does introduce a large white-space below and above which makes it very visually unappealing. In fact, for my particular application this is the only show stopper I have found that prevents me from using tidy in my production environment. I look forward to it being fixed someday.\n. ",
    "camoy": "Stumbled over this bug today and was very frustrating (I had no idea where the extra newline was coming from). The newline before the ending </pre> is rendered in my version of FF and Chrome. I hope this is fixed soon!\n. ",
    "dkebler": "https://gist.github.com/tacone/6082520\nNice thing about the script is it makes a deb package that can be put in a\nppa or other repo so others like me can just grab the latest.\nBest would be your repo to maintain this gist and point to such in the\nreadme.md file.\nOn Thu, Feb 12, 2015 at 4:08 AM, Jim Derry notifications@github.com wrote:\n\n@dkebler https://github.com/dkebler, can you point out the gist to us?\nI will notify the gist owner that the instruction is soon to be invalid. He\nor she can change it, I hope.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/159#issuecomment-74060934.\n\n\nCheers, Cuidate, TTFN http://www.youtube.com/watch?v=5Gu50vq5ux4\nDavid\n. ",
    "blishen": "Ah - effectively a duplicate of #117\n. ",
    "mjbshaw": "Looks good. Output is now:\nhtml\n<!DOCTYPE html>\n<html>\n<head>\n<title>Hello</title>\n</head>\n<body>\n<p>Hello world!</p>\n<p>How are you?</p>\n<p>Good! <img alt=\"baz\" src=\"baz.png\"> <img alt=\"foo\" src=\"foo.png\"><br>\n<br>\nfoo:bar&gt;asdf/foo:bar&gt;</p>\n</body>\n</html>\n. While I agree it would be nice to attempt to gracefully handle invalid characters, I think it might be ideal in this situation to solve this issue with an abort, and then open a new issue as a feature request to remove the abort and gracefully handle the invalid characters.\nI think that would be the best of both worlds: a quick (and perfectly acceptable, in my opinion) solution and (eventually) a better long term solution.\n. ",
    "michaeljwilliams": "@geoffmcl, you might be right, but as far as I saw in the file I mentioned previously, there was no main element present. I don't really know anything about Tidy's structure so that probably has nothing to do with this, but anyway something is wrong. I made an example html file and took a screenshot of the tidy output. FYI I compiled Tidy from the source in the master branch just a few days ago.\nAs you can see tidy says main is not recognized, and also makes no comment on there being two main elements.\nexample.html: https://github.com/michaeljwilliams/michaeljwilliams.github.io/blob/master/example.html\n\n. @balthisar ah, yes, confusing. I would think the stable branch to be the one that works. Another thing that is confusing is the need for CMake to compile and install the develop-500 branch. I'd like to confirm that the develop branch supports the main element, but I haven't been able to compile and install it. I suppose CMake is to add Windows compatibility? But it seems to me to be at the expense of Unix (or at least OS X) users.\nFirstly, Tidy's instructions do not say that this program is required prior to compilation. After getting CLI errors when trying to follow the instructions, I found and installed CMake and tried to get it working. I was unable to compile Tidy using the CMake GUI and the program refused to install the CLI tools, throwing errors at me at every turn for both attempts. What happened to the good ol' makefile?\nAssuming you've got a working dev branch install, please feel free to use my example.html for a quick test yourself. \nexample.html: https://github.com/michaeljwilliams/michaeljwilliams.github.io/blob/master/example.html\n. You must have installed CMake some other way than I. Perhaps through Homebrew? I got it through their website. I'm sure the CLI tools, once installed, function respectably. I'm on Mavericks (10.9.5).\nI did not try running the bootstrap script and I don't know what that means. I just tried to follow the instructions haha. I appreciate the attention you've given this matter.\n. Thanks @balthisar. I installed from that dmg and ran the example.html again and Tidy gave no errors. That's good in that the main element is recognized, and also bad in that Tidy does not care that there are two main elements. I don't know if you're going that deep into semantics, but it would be a nice feature.\nConsider the bug closed, but please leave open under feature label if you plan on implementing that.\n. I'd like to, but I can't get CMake to work and thus can't compile.\n. I'm on OS X Mavericks. I've never (successfully) used CMake before. I simply tried to follow the instructions in the tidy readme. After I figured out that I needed to install CMake in order to follow the instructions (that wasn't clear), I found it online and installed it. I tried to compile tidy in the GUI and that threw errors at me, then I tried to install the CLI tools from CMake and that threw errors at me as well.\n. Thanks @balthisar I finally got it working, although I had to sh bootstrap rather than just trying to run it with ./bootstrap. And the bug is now fixed. Nice work guys.\n\n. Updating was a pain last time. I'll take your word for it and wait for the 5.0 binaries.\n. The trouble I had was with cmake. It doesn't want to install.\n. Thanks for your help, but to be honest I just don't want to deal with this right now. I have finals coming up...\n. ",
    "jacksonp": "@geoffmcl Thanks, that does stop the duplication issue, I now get this output:\n``` html\n<!DOCTYPE html>\n\n\n\nTest\n\n\nSection\n\n\n```\nBut anchor tags can go around block-level elements in html5, so I guess I should have said I was expecting the output to be the same as the input, so:\nhtml\n<a id=\"Section\" href=\"#Section\"><h1>Section</h1></a>\n. @geoffmcl With that fix I get this output:\nhtml\n<body>\n  <a id=\"Section\" href=\"#Section\" name=\"Section\">\n  <h1>Section</h1></a>\n</body>\nIt seems to now add a name attribute, which isn't supported in html5.\n. @geoffmcl That's great, the tags are now perfect. The indentation seems a bit off tho, here's the output I get with\ntidy5 -indent -wrap 400 test.html:\nhtml\n<body>\n  <a id=\"Section\" href=\"#Section\">\n  <h1>Section</h1></a>\n</body>\nI think the anchor block should all be one line in this case (same as the input)?\n. @geoffmcl I've added a new issue for the pprint output (#179).\nI hit this issue straight away when trying tidy-html5 for the first time, haven't have a chance to see what it can do yet!\n. Thanks @geoffmcl, I still get the same issue as originally reported (I don't see that there's a way for me to re-open this tho).\nBtw, with --vertical-space auto, unwanted white-space is added before <h1>. Output:\nhtml\n... <a id=\"Section\" href=\"#Section\">  <h1>Section</h1></a> ...\n. tidy -v\nHTML Tidy for Linux version 5.1.8\nI get the same output as you if I remove the -indent option, so it's probably that?\n. I do want indentation in the output... I also want to use -omit and it looks like the two don't work well together. Input:\n``` html\n<!DOCTYPE html>\n\n\nTest\n\nSection\n\n```\nOutput with -omit -indent (everything after the first meta tag in the implicit head and everything after the opening  div in the implicit body are off):\n``` html\n<!DOCTYPE html>\n\n\nTest\n\n\nSection\n\n```\nOutput with just -indent looks good:\n``` html\n<!DOCTYPE html>\n\n\n\n\nTest\n\n\n\n\nSection\n\n\n\n```\n. Problem persists in master as of latest commit (5ede47f). I see one difference: there is less vertical spacing than previously, but don't think that's important here. Input:\n``` html\n<!DOCTYPE html>\n\n\nTest\n\nSection\n\n```\nOutput:\nhtml\n<!DOCTYPE html>\n<meta something=\"\">\n  <meta another=\"\">\n  <title>Test</title>\n<div>\n    <a id=\"Section\" href=\"#Section\">\n    <h1>Section</h1></a>\n  </div>\n. Yes, this bug is just about the indentation being off with -omit.\n--vertical-space auto was just an aside as far as I can see.\n. Thanks @geoffmcl. As far as I'm concerned: I agree the doctype shouldn't alter the indentation, and don't think the extra layer of indentation for tags that aren't there is a good idea (Output 3). Output 2 is the closest, this is the output I'd expect from running tidy -omit -indent:\nhtml\n<!DOCTYPE html>\n<meta something=\"\">\n<meta another=\"\">\n<title>Test</title>\n<div>\n  <a id=\"Section\" href=\"#Section\"><h1>Section</h1></a>\n</div>\n. Thanks @geoffmcl, sounds epic... That patch does the trick!\n. @geoffmcl I can confirm 5.1.9 fixes it, thanks again!\n. ",
    "subhaze": "I was on the edge of pushing for 2 versions, but I do see where this has many problems of it's own. To avoid solving problems with problems, I'm moving over to the side of defaulting to HTML 5 as @geoffmcl stated:\n\nAnd after your comments I am beginning to think the other way around on the html5 mode. It IS 2015, and html5 is getting lots of support, so tidy should default to html5 mode. That is if it finds NO doctype, like when given just a snippet of html, or finds one of the 2 declaration you mentioned, it STAYS in html5 mode.\n. \n",
    "skeet70": "Just thought I'd chime in that I agree with this statement:\n\nIt IS 2015, and html5 is getting lots of support, so tidy should default to html5 mode. That is if it finds NO doctype, like when given just a snippet of html, or finds one of the 2 declaration you mentioned, it STAYS in html5 mode.\n\nI don't see any reason that a current and maintained library should default to what is no longer the industry standard. Providing the functionality to choose if necessary to set tidy to html4 mode, or switch if the DOCTYPE informs it, seems like the correct way to go.\n. ",
    "anEffingChamp": "You are right, it does. Documentation for that option is just missing\nfrom the tidy -h help screen, and there is no explanation of the option in the tidy -help-config screen beyonds its availability.\n. On my system I made a soft link from tidy to tidy5. That is not a repo \nbased solution, but it works.\n. Based on the thread it sounds like we may just be looking for the compiled binary under the wrong name. sudo ln -s tidy5 tidy should link the names such that invoking tidy will call the binary under its current name. If we are looking for ltidy then you do the same thing wherever ltidy should reside. Just remember to execute this command in your /etc, or wherever you keep your binaries.\n. ",
    "Pajamaman": "I don't think this is strictly related to anchor tags but to all block level tags. This markup:\n```\n\nNotes on the Sessions\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\n```\nGets turned into this:\n<div style=\"text-align: center\">\n    <a name=\"Notes\" id=\"Notes\">\n    <h3>\n        Notes on the Sessions\n    </h3></a>\n</div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nWe're missing line breaks after both the closing h3 tag and the closing div tag.\nConfig:\n```\n// html options\ndrop-font-tags: true\nhide-comments: true\nshow-body-only: true\n// diagnostics\nshow-errors: 0\nshow-info: false\nshow-warnings: false\n// pretty print\nindent: true\nindent-spaces: 4\nwrap: 120\n// misc\nquiet: true\n```\n. You're right, I didn't realize @jacksonp wanted the output on one line.\nWhile I understand your frustrations with pretty print issues, I think the \"correct\" behavior in this case is to add line breaks around open and close tags for all block level elements. So this:\n``` html\n\nNotes on the Sessions\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\n```\nShould become this:\nhtml\n<div style=\"text-align: center\">\n    <a name=\"Notes\" id=\"Notes\">\n        <h3>Notes on the Sessions</h3>\n    </a>\n</div>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\nThe code in the OP should become this:\nhtml\n<a id=\"Section\" href=\"#Section\">\n    <h1>Section</h1>\n</a>\n\"Correct\" in the sense that it would at least be consistent. If the user doesn't want the line breaks around the tags for a certain element, they should add the element name to the new-inline-tags option or disable pretty print altogether.\n. Cool, thanks for looking into this. I will try using the config argument via the command line when I get a chance.\n(btw I'm on Ubuntu 14.04)\n. Oops, didn't mean to close.\n. Okay, using the config argument works but the environment variable still doesn't. Do I need to enable environment variable config when I make tidy or something?\n. ehhhhh I figured it out but it's really embarassing. I forgot to put export in front of HTML_TIDY=~/.tidyconfig in my .bashrc.\n. ",
    "eksperimental": "thanks for the heads-up @geoffmcl \n. ",
    "Zackio": "I'm just going to stick to the older version as that's doing what I need. I'm on a mac BTW, I think I read something about someone testing on a mac. \n. ",
    "denji": "@geoffmcl Better small percentage of false positive (free opensource): https://scan.coverity.com/\nActually the idea is not to change the name of the library and transparently replaced for distributions (libtidy5.X.so -> libtidy.so and remove old version libtidy) of course resolves API/ABI compatible.\n. @skynet ls -l /usr/local/include /usr/include | grep tidy\n```\n$TIDY_SEARCH_DIRS = [/usr/local /usr $PHP_TIDY]\nfor i in $TIDY_SEARCH_DIRS; do\n    if test -f $i/include/tidy/tidy.h; then\n      TIDY_DIR=$i\n      TIDY_INCDIR=$i/include/tidy\n    elif test -f $i/include/tidy.h; then\n      TIDY_DIR=$i\n      TIDY_INCDIR=$i/include\n    fi\n  done\n```\n. > How did we end up with libtidy5s.a ? Used to be libtidy5.a\nThis should create additional difficulties\u2026\n``` diff\n-  PHP_ADD_LIBRARY_WITH_PATH(tidy5, $TIDY_LIBDIR, TIDY_SHARED_LIBADD)\n+  PHP_ADD_LIBRARY_WITH_PATH(tidy5s, $TIDY_LIBDIR)\n- PHP_SUBST(TIDY_SHARED_LIBADD)\n\nPHP_CHECK_LIBRARY(tidy5,tidyOptGetDoc,\nPHP_CHECK_LIBRARY(tidy5s,tidyOptGetDoc,\n```\n\nTidy5-php56-ext\n``` diff\ndiff --git a/ext/tidy/config.m4 b/ext/tidy/config.m4\nindex 102f6a8..d4982e9 100644\n--- a/ext/tidy/config.m4\n+++ b/ext/tidy/config.m4\n@@ -4,9 +4,11 @@ dnl\nPHP_ARG_WITH(tidy,for TIDY support,\n [  --with-tidy[=DIR]         Include TIDY support])\n+PHP_ARG_WITH(tidy5,for TIDY5 support,\n+[  --with-tidy5[=DIR]         Include TIDY5 support])\n+# Tidy\n if test \"$PHP_TIDY\" != \"no\"; then\n-\n   if test \"$PHP_TIDY\" != \"yes\"; then\n     TIDY_SEARCH_DIRS=$PHP_TIDY\n   else\n@@ -42,3 +44,42 @@ if test \"$PHP_TIDY\" != \"no\"; then\n   PHP_SUBST(TIDY_SHARED_LIBADD)\n   AC_DEFINE(HAVE_TIDY,1,[ ])\n fi\n+\n+# Tidy5\n+if test \"$PHP_TIDY5\" != \"no\"; then\n+\n+  if test \"$PHP_TIDY5\" != \"yes\"; then\n+    TIDY_SEARCH_DIRS=$PHP_TIDY5\n+  else\n+    TIDY_SEARCH_DIRS=\"/usr/local /usr\"\n+  fi\n+\n+  for i in $TIDY_SEARCH_DIRS; do\n+    if test -f $i/include/tidy/tidy.h; then\n+      TIDY_DIR=$i\n+      TIDY_INCDIR=$i/include/tidy\n+    elif test -f $i/include/tidy.h; then\n+      TIDY_DIR=$i\n+      TIDY_INCDIR=$i/include\n+    fi\n+  done\n+\n+  if test -z \"$TIDY_DIR\"; then\n+    AC_MSG_ERROR(Cannot find libtidy5)\n+  fi\n+\n+  TIDY_LIBDIR=$TIDY_DIR/$PHP_LIBDIR\n+\n+  PHP_ADD_LIBRARY_WITH_PATH(tidy5, $TIDY_LIBDIR, TIDY_SHARED_LIBADD)\n+  PHP_ADD_INCLUDE($TIDY_INCDIR)\n+\n+  PHP_CHECK_LIBRARY(tidy5,tidyOptGetDoc,\n+  [\n+  AC_DEFINE(HAVE_TIDYOPTGETDOC,1,[ ])\n+  ],[],[])\n+\n+\n+  PHP_NEW_EXTENSION(tidy, tidy.c, $ext_shared)\n+  PHP_SUBST(TIDY_SHARED_LIBADD)\n+  AC_DEFINE(HAVE_TIDY,1,[ ])\n+fi\n```\nHad to raise the priority in the config.m4 for tidy5 as a more recent replacement tidy.\nPHP_ADD_LIBRARY(library[, append[, shared-libadd]])\nBy default builds shared, you need to explicitly specify the static linking.\n. >  Get release date (version) for current library @deprecated tidyReleaseDate() is deprecated in favor of semantic versioning and should be replaced with tidyLibraryVersion().\n- htacg/tidy-html5@6d84c5a6/include/tidy.h#L332\n- https://github.com/php/php-src/blob/master/ext/tidy/tidy.c#L1077\n- https://github.com/php/php-src/blob/master/ext/tidy/tidy.c#L1323-L1333\n- htacg/tidy-html5#43\ntidyReleaseDate -> tidyLibraryVersion\nRel: https://github.com/htacg/tidy-html5/blob/master/src/version.h\n. http://nixos.org/patchelf.html\n\n/usr/lib/libtidy5.so.4.9.30\n\nbash\nldd php-5.6.9/sapi/cli/php\npatchelf --set-rpath /opt/my-libs/lib:/foo/lib program\n. @skynet patchelf works differently it changes the path to the library inside the binary (for example as install_name_tool). ld.so.conf & ldconfig just adds priority preload library-path cache.\n. ldconfig should always be enough for correct operation.\n. > -rpath=dir\n\nAdd a directory to the runtime library search path. This is used when linking an ELF executable with shared objects. All -rpath arguments are concatenated and passed to the runtime linker, which uses them to locate shared objects at runtime. The -rpath option is also used when locating shared objects which are needed by shared objects explicitly included in the link;\n\nYou can implement the ways inside the ELF file, then no need to ldconfig:\ngcc .. -Wl,-rpath=/usr/lib -ltidy5\n (Will search paths \"rpath\", if you do not find uses paths from cache file \"/etc/ld.so.cache\")/libtidy5.so\n $(rpath)=/usr/lib\n. @skynet All Unix executable files, php build preload flag LDFLAGS=\"-Wl,-rpath=/usr/lib\"\nAt construction it will add to the inside of the finished file path /usr/lib and we don't have to rebuild cache /etc/ld.so.cache.\n. You got the above error because the system only searches in /lib (he was trying to look for the file /lib/libtidy5.so.4), as in ELF no relative path inside php-5.6.9/sapi/cli/php userspace /usr/lib.\n. LDFLAGS=\"-Wl,-rpath=/usr/lib\" should solve the problem in php (it injects at runtime gcc/cc inside a binary file path /usr/lib). tidy5 does require dependencies from /usr/lib, I think this problem only when building php and run on another machine.\n. @mreiden This breaks backward compatibility need switcher non-tidyLibraryVersion.\n. > The important thing is to generate the API docs for each version, like -\nActually the readthedocs implementation is based on the ability:\nhttp://tidy-html5.readthedocs.org/en/latest/\nhttp://tidy-html5.readthedocs.org/en/stable/\nhttp://tidy-html5.readthedocs.org/en/dev/\nhttp://tidy-html5.readthedocs.org/en/4.9.35/\nhttp://tidy-html5.readthedocs.org/en/5.0.0/\nhttp://tidy-html5.readthedocs.org/de/5.1.9/\nDownloads support: PDF, ePub, HTML\nQuick open Github editor\nRefs:\n- Single Version Docs | Status Badges | Localization of Documentation\n- Alternate Domains | Webhooks | Build Environments\n. ",
    "mreiden": "Here is a patch for php to use tidyLibraryVersion instead of tidyReleaseDate.  Not sure how to make this work with both old and new tidy libraries in php.  Reporting the unix epoch or the hard-coded 2015/01/22 is confusing and less than ideal.\n``` c\n--- ext/tidy/tidy.c-tidy5   2015-05-13 19:02:08.000000000 -0500\n+++ ext/tidy/tidy.c 2015-06-08 23:10:03.456421751 -0500\n@@ -1102,7 +1102,7 @@\n {\n    php_info_print_table_start();\n    php_info_print_table_header(2, \"Tidy support\", \"enabled\");\n-   php_info_print_table_row(2, \"libTidy Release\", (char )tidyReleaseDate());\n+   php_info_print_table_row(2, \"libTidy5 Version\", (char )tidyLibraryVersion());\n    php_info_print_table_row(2, \"Extension Version\", PHP_TIDY_MODULE_VERSION \" ($Id: e066a98a414c7f79f89f697c19c4336c61bc617b $)\");\n    php_info_print_table_end();\n@@ -1357,7 +1357,7 @@\n        return;\n    }\n\nRETURN_STRING((char *)tidyReleaseDate(), 1);\nRETURN_STRING((char )tidyLibraryVersion(), 1);\n }\n / }}} */\n\n```\n. ",
    "conraid": "why not add the variable MAN_INSTALL_DIR as in most software configured with cmake?\nSlackware or BSD, for example, use /usr/man\n. Yes, with \n-DMAN_INSTALL_DIR=man/man1\nman is installed in \nusr/man/man1/tidy5.1.gz\nit's ok\np.s.\nI don't know if it's a problem in my configuration or another, maybe I open another ticket, but I have to change \"../documentation\" with \"documentation\" in TIDY1XSL variable in CMakeLists.txt, otherwise I get an error\nwarning: failed to load external entity \"../documentation/tidy1.xsl\"\n. In Slackware man pages are gzipeed. In script build there is\nbash\nif [ -d ${PKG}/usr/man ]; then\n    find ${PKG}/usr/man -type f -exec gzip -9 {} \\;\nfi\nfor document I used build dir, this is a build script section\nbash\nmkdir -p build\ncd build\ncmake \\\n[options] \\\n..\nNow it's ok.\nThanks\n. ",
    "dwlamb": "Could someone advise where things stand with the man pages bug?  I just completed upgrade to Tidy HTML5 and found there were no man pages.  I found this thread on google.  I followed the commands of  geoffmcl above and took note of the comments from ryandesign.\nAt a bash shell prompt, I did a find find / -name \\*tidy\\*gz.  That yielded:\n/usr/share/man/man1/csstidy.1.gz\n/usr/share/man/man1/perltidy.1p.gz\nI have tried man tidy  and man tidy5 and received as messages that there are no man pages for those topics.\n. ",
    "willydee": "Sorry, duplicated accidentally. See #196 \n. Probably related to https://github.com/htacg/tidy-html5/issues/169\n. @geoffmcl, thanks for integrating my patch. Works like a charm.\nBest regards, willydee\n. ",
    "InconceivableVizzini": "When using pytidylib and the master branch of tidy-html5 I receive \"unknown option: drop-empty-elements\" if I attempt to use the option at all. However, building tidy-html5 using the commit I linked to works.\nIt's odd, as the option is clearly still around -- https://github.com/htacg/tidy-html5/blob/master/src/config.c#L250\nThey are marked as \"obsolete\", though\n. ",
    "0-F": "Thanks for reply.\nThis apostrophe came from http://tidy.sourceforge.net/docs/tidy_man.html (\u2019 is replaced by &rsquo; in html code).\nI copy-pasted tidy-mark's comments in my config file. In these comments there is a &rsquo; 0x92 apostrophe.\n// [...] to indicate that the document has been tidied. Tidy won\u2019t add a meta element if [...]\ntidy-mark: yes\nBy replacing it this solve the problem but the not allowed in HTML is a little confusing. ^^\n. ",
    "dregad": "Hi Geoff,\n\njust tried all the links I could find, and found nothing broken\n\nI don't know what links you tried, but for sure the problem persists... As per my original report\n\nFor example, in the FAQ at http://www.htacg.org/tidy-html5/#freq, both links lead to 404 errors.\n\nIf you follow that URL, you'll see 2 links in the section, both are broken...\n- \"issues tracker\" http://www.htacg.org/tidy-html5/3\n- \"in our github repo\" http://www.htacg.org/tidy-html5/4\n. It works now. Cheers !\n. ",
    "mtangoo": "adding this to docs will be good than digging up in issues\n. You got it correct! @geoffmcl \nThank you for that!\n. If no one fixes it until I have time I will do that!\nThanks for good work\n. ",
    "d1vanov": "@geoffmcl yeah, this version of MSVC is indeed OLD :) I just didn't want to come with breaking changes so I decided to make no harm in the pull request. Perhaps these macros can be removed right before releasing 5.0 or when you see fit. \n. ",
    "pjuhasz": "The example, corrected:\nhtml\n<html><body>\na & b\n</body></html>\n. Is a naked ampersand a valid entity?\nAFAIK in HTML 4.x and below, naked ampersands are not allowed, they have to be escaped as &amp;, while in HTML 5 they are allowed if they are not ambiguous.\nAn ambiguous ampersand is a U+0026 AMPERSAND (&) character\n that is not the last character in the file, that is not followed by a space character, \nthat is not followed by a start tag that has not been omitted, \nand that is not followed by another U+0026 AMPERSAND (&) character.\nSo there is also the question of differentiating between ambiguous and unambiguous ampersands, and perhaps treating them differently.\n. The source of my quote:\nhttps://mathiasbynens.be/notes/ambiguous-ampersands\nThe author makes other observations about entities without trailing semicolons, encoded urls and ampersands inside attribures that make me want to curl up in a corner.\nI've tried to look at the code to try to fix the issue here, but apparently it's more complicated than a five minute touch-and-go, and unfortunately I won't have time for more next week.\n. ",
    "girishsubramanyam": "Hi Geoff,\nDefinitely this isn't a typo :)\nThis has been a long time problem, i can name a few website which use attribute name with colon. After tidying these html files when passed to xalan to extract information it fails with an error.  Can we provide user an option to replace a character in attribute name, in our case colon with underscore.\nExamples:\nhttp://tv.ibtimes.com/entrepreneur-maneesh-goyal-how-he-made-it-big-and-continues-succeed-2679\nfb:like:layout=\"button_count\" class=\"addthis_button_facebook_like at300b\ng:plusone:size=\"medium\" class=\"addthis_button_google_plusone at300b\nhttp://www.dailymotion.com/video/xolgjo_21221222396_lifestyle\naddthis:url\nhttp://www.buzzfeed.com/summeranne/the-25-most-epic-cat-beards-of-all-time#.pnBkp6NXZ\nscript src=\"http://s3-ak.buzzfed.com/static/js/General_concat_header.js?v=201504281400\" type=\"text/javascript\" ref:jsconf=\"true\"\n. Geoff,\n--drop-proprietary-attributes yes drops most of the custom attributes and we wont be able to extract required  information  from html pages. \nPre/Post processing cannot be achieved. As the docs are passed through a series of pipelines and the number of docs parsed are in billions.\n--change-attribute-char :2_ is a better solution. \n. ",
    "da2x": "Just posting an example with OpenGraph Protocol data so others searching for this more easily can find it in the future. It\u2019s a very common example because Facebook.\n<!DOCTYPE html>\n<html prefix=\"og: http://ogp.me/ns#\"\n    vocab=\"http://ogp.me/ns\" lang=\"en\">\n    <head>\n        <meta content=\"Some kind of title\" property=\"og:title\" />\n\u2026\nline 2 column 1 - Warning: <html> proprietary attribute \"prefix\"\nline 3 column 1 - Warning: <html> proprietary attribute \"vocab\"\nline 5 column 1 - Warning: <meta> proprietary attribute \"property\"\n. Before spending any time on this, someone needs to spend time crawling the web to build a large sample site of documents to test which attribute sorting strategy would yield the best compression ratio with both brotli and gzip.\nIf you really want to improve compression, you\u2019d also need to look at the attribute contents. If two attributes contain similar contents, like the same value for id and class then those should be sorted together.\nHowever, simply changing from alphanumerical sorting to to frequency sorting should yield good results. Whichever attributes is used on the most number of elements should be listed first followed by decreasingly frequently occurring attributions. This should produce patterns that compressors can do great things with.. @balthisar, php 7.1, libtidy 5.4.0, and php-tidy in Fedora 25 work just fine. Fedora doesn\u2019t apply any patches to either libtidy nor php to build it. \n@Daijobou you need to update to libtidy 5.4.0. The version you have installed, 0.99, is ancient.  Contact your distribution, CentOS, and request that they update the package to the latest version. Keep in mind that CentOS has a very conservative package update policy. It\u2019s likely to take years. You can install an updated package yourself, if you\u2019re comfortable doing such tasks. If you want a similar distribution that ships up to date packages, consider Fedora. It has a similar software and security stack to CentOS but ships newer packages every six months.\n. I'm indeed adding one newline. However, note that the only difference in the two example documents is the exact string inline. There isn't any change in the number of newlines input yet the output differ in that regard.. ",
    "halindrome": "First a general comment - @geoffmcl was looking at the wrong resource for the definition of RDFa.  RDFa is an approved W3C extension to HTML5.  So yeah, it would be great if this tool supports it.  You can see the core definition of RDFa at http://www.w3.org/TR/rdfa-core.  The (X)HTML version of it is at http://www.w3.org/TR/html-rdfa.   I will note that microdata is NOT an approved W3C Recommendation, but it is supported by the validator so...\nAs to how to support RDFa in tidy - yeah, this could be tricky.  RDFa attributes are technically legal on ALL elements.  So given the way tidy defines what attributes are legal on what elements, the easiest thing would be to add vocab, typeof, property, resource, prefix, content, about, rel, rev, datatype, and inlist to every element.  Note that technically these are even legal in HTML4 context, but that is sort of debatable.  \nI will see if I can put together a pull request that supports this in its simplest form.\n. I actually finished the implementation.  I didn't make it an option, since\nit is a part of the HTML5 recommendation and support for it is required in\nuser agents.\nOn Fri, Nov 6, 2015 at 9:16 AM, Geoff McLane notifications@github.com\nwrote:\n\n@halindrome https://github.com/halindrome just wondering how this is\ngoing?\nCan I do anything to help?\nCan anyone else help with this?\nI am seeing more and more sites using these RDFa attributes, so it becomes\nimportant Tidy begins to have some support...\nWe should be able to start small, avoid the PROPRIETARY_ATTRIBUTE\nwarning... It is only used once - LN1343\nhttps://github.com/htacg/tidy-html5/blob/master/src/attrs.c#L1343 ...\nafter a AttributeIsProprietary(node, attval) returns yes.\nIt could have an additional condition to return no, like maybe -\nif (isRDFa_Enabled() && matchesRDFa(attval) && inHTML5Mode())\n    return no;\nThe first checks the user option is on, the second that is matches a RDFa\nglobal list, and the 3rd that we are still in HTM5 mode...\n* HELP NEEDED *\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/209#issuecomment-154434937.\n\n\nShane McCarron\nhalindrome@gmail.com\n. I had intended to create a pull request.  I got sucked into W3C meetings in\nTokyo last week, and this week I have been trying to catch up!\nOn Fri, Nov 6, 2015 at 11:28 AM, Geoff McLane notifications@github.com\nwrote:\n\n@halindrome https://github.com/halindrome that is great news... are you\ngoing to share this code with granddaddy tidy?\nI note your current fork is quite a number of commits behind\nhtacg:master... You probably already know this, but this is my little update\na fork mantra -\n$ git remote add upstream git@github.com:htacg/tidy-html5.git # once only\n$ git checkout master\n$ git status\n$ git stash    # if not clean\n$ git fetch upstream\n$ git rebase upstream/master\n$ git stash pop # if reuired, and fix conflicts\n$ git push      # update the fork\nThen you could create a PR for us to look at...\nMaybe you are right about not needing an option, which it would seem we\nwould want to default to on anyway...\nIf the above fork/PR is too much trouble, then you could just post, or\nsend me a patch from $ git diff -u > ../RDFa.patch...\nMaybe this has already been solved ;=))\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/209#issuecomment-154479216.\n\n\nShane McCarron\nhalindrome@gmail.com\n. I will dig into it.  That part of the patch is just broken.\n. Okay - I sorted it out. But I have no idea how to generate a new pull request.  Thoughts?\n. You know what - rather than screw everything up I will just create a new\npull request.\nOn Sun, Nov 8, 2015 at 3:56 PM, Geoff McLane notifications@github.com\nwrote:\n\n@halindrome https://github.com/halindrome ok your new changes look\ngood. Need to test them, but again it reads well - with no version\nconstraints created for those additional attributes that are shared\nhtml5/html4...\nI guess to get a PR back, you now need to revert the revert...\nOn reverting a revert, found a few links which I hope help -\nhttp://stackoverflow.com/questions/1078146/re-doing-a-reverted-merge-in-git\nWhich even mentions a 2008 Linus Torvalds post -\nhttps://www.kernel.org/pub/software/scm/git/docs/howto/revert-a-faulty-merge.txt\n1. I should have tested the merge before merging it. I usually do, but\n   at that moment I was also in the process of updating some testbase\n   files, and it all looked so good...\n2. Reverting a merge created 2 more unnecessary commits - ugh!\n3. Reverting a reverted merge creates more, but that is where we are\n   now.\nBut once you stash and bring your fork back even to htacg, revert the\nrevert, and re-apply your stashed changes on top, I think you should be\nable to present a new complete PR. I hope!\nAdvise if you run into git problems... I am sure there is a way... After\nthe revert, I was able to cherry pick your commit c572e3e\nhttps://github.com/htacg/tidy-html5/commit/c572e3e3c846c1181a72660b9ec6dceb27c15e6a\nback, just for more testing, but it was a messy process...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/pull/292#issuecomment-154878864.\n\n\nShane McCarron\nhalindrome@gmail.com\n. I am having trouble actually creating a new request.  github really\nirritates me sometimes...  working on it.\nOn Mon, Nov 9, 2015 at 8:27 AM, Shane McCarron halindrome@gmail.com wrote:\n\nYou know what - rather than screw everything up I will just create a new\npull request.\nOn Sun, Nov 8, 2015 at 3:56 PM, Geoff McLane notifications@github.com\nwrote:\n\n@halindrome https://github.com/halindrome ok your new changes look\ngood. Need to test them, but again it reads well - with no version\nconstraints created for those additional attributes that are shared\nhtml5/html4...\nI guess to get a PR back, you now need to revert the revert...\nOn reverting a revert, found a few links which I hope help -\nhttp://stackoverflow.com/questions/1078146/re-doing-a-reverted-merge-in-git\nWhich even mentions a 2008 Linus Torvalds post -\nhttps://www.kernel.org/pub/software/scm/git/docs/howto/revert-a-faulty-merge.txt\n1. I should have tested the merge before merging it. I usually do,\n   but at that moment I was also in the process of updating some testbase\n   files, and it all looked so good...\n2. Reverting a merge created 2 more unnecessary commits - ugh!\n3. Reverting a reverted merge creates more, but that is where we are\n   now.\nBut once you stash and bring your fork back even to htacg, revert the\nrevert, and re-apply your stashed changes on top, I think you should be\nable to present a new complete PR. I hope!\nAdvise if you run into git problems... I am sure there is a way... After\nthe revert, I was able to cherry pick your commit c572e3e\nhttps://github.com/htacg/tidy-html5/commit/c572e3e3c846c1181a72660b9ec6dceb27c15e6a\nback, just for more testing, but it was a messy process...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/pull/292#issuecomment-154878864.\n\n\nShane McCarron\nhalindrome@gmail.com\n\n\nShane McCarron\nhalindrome@gmail.com\n. Sorry for all the confusion and delay!\nOn Mon, Nov 16, 2015 at 11:48 AM, Geoff McLane notifications@github.com\nwrote:\n\n@halindrome https://github.com/halindrome thanks...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/pull/303#issuecomment-157117460.\n\n\nShane McCarron\nhalindrome@gmail.com\n. Are you saying this error was introduced with the addition of RDFa support, or that you would like microdata support to be extended to include this?  Trying to understand.\nEDIT: I did a quick look.  I don't think the RDFa edits touched this.  When I looked at the code, it seems as it there is some special casing for itemprop on the link element, but nothing for meta.  And the various item attributes do not seem to be permitted on the meta element in attrdict.c.  I can attempt to implement full microdata support in tidy.  But I confess that I don't actually use it myself. \n. Understood.  I can look at it.  Personally not a fan of microdata, and it\nis not part of W3C HTML5 at all - it was formally dropped by the W3C.  But\nI know WHATWG still is hanging onto it and Schema.org has not abandoned it\nyet so...\nOn Thu, Dec 10, 2015 at 7:28 AM, Geoff McLane notifications@github.com\nwrote:\n\n@thlinard https://github.com/thlinard sorry if I confused the\nsituation. As per #209 https://github.com/htacg/tidy-html5/issues/209,\n@halindrome https://github.com/halindrome added our initial RDFa\nsupport, and at the moment I see this an extension of that support.\nLooking at the code - tags.c#L232\nhttps://github.com/htacg/tidy-html5/blob/master/src/tags.c#L232 - we\ncan see that the tag TidyTag_META is marked with a CM_HEAD bit. That\ntells tidy, in legacy html4-- mode, this can only exist in the head. So it\npolitely moved them...\nSo perhaps one part of this, if I read the spec correctly, and as per your\nsample, it seems meta can be used anywhere. That means, in the above\ntable entry, it probably should have the CM_HEAD bit removed, and then be\nadded to AdjustTags(), to set HTML4-- mode, and ResetTags(), to reset\nHTML5++ mode, the default... something like -\nnp = (Dict *)TY_(LookupTagDef)( TidyTag_META );\n// AdjustTags to html4-- mode add `CM_HEAD`\n// ResetTags  to html5++ mode, remove `CM_HEAD`, the default in the table\nIt also looks like, that if these two services continue to grow, the\nchanges could be put in a table, or something... rather than just linear\ngrowth as at present... but that is secondary here...\nAnd perhaps you are right, that the attrdict.c, const AttrVersion\nTY_(W3CAttrsFor_META)[] = needs to be extended for more attributes for\nthe HT50|XH50 pages? Like TidyAttr_ITEMPROP and maybe others...\nI do not have time right now to experiment with these fixes, but will get\nto it! Maybe it needs more than these adjustments?\nBut, to be clear, what we want is to implement full microdata support in\ntidy, RDFa! Anything you, @halindrome https://github.com/halindrome or\nothers can do towards this would be very much appreciated, like patches, or\na PR from a fork, in say an issue-333 branch... thanks.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/333#issuecomment-163615025.\n\n\nShane McCarron\nhalindrome@gmail.com\n. Yeah - validator.nu supports microdata.  I don't remember if it supports\nRDFa.  I sure hope so!\nOn Thu, Dec 10, 2015 at 8:53 AM, Geoff McLane notifications@github.com\nwrote:\n\n@halindrome https://github.com/halindrome your comments are well\nnoted...\nIt also does not help that the W3C validator passes the following, while\ntidy barks and mangles dropping the span -\n<!DOCTYPE html>\n\n\n\nIssue #333 - RFDa support - 2\n\n\n\n\n\nThe Castle (1986)\n\n\n\nAs stated, any help appreciated... thanks...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/333#issuecomment-163648655.\n\n\nShane McCarron\nhalindrome@gmail.com\n. ",
    "DanSmall": "Thanks for fixing the bug so quickly and for the great description of the problem. I can confirm that my tests show that now it is fixed, as you said it would be, with the output:\n<a href=\"#1\">A</a> <a href=\"#2\">B</a>\n. @geoffmcl You were right to be \"suspicious of simple fixes\".\nI'm re-opening the issue as I have found another similar case where the space is lost. If the markup used previously is enclosed in a div tag the space is lost\n<div><a href=\"#1\">A</a><a href=\"#2\"> B</a></div>\nIt gives:\n<div>\n  <a href=\"#1\">A</a><a href=\"#2\">B</a>\n</div>\nThe html renders differently before and after running tidy_document in the browsers that I have tested it in. Using HTML Tidy for HTML5 for Linux version 4.9.30. Unfortunately my C skill-set is non-existent so I am unable to contribute to a fix. \n. @geoffmcl Many thanks for fixing this.\nI have tested with a number of test cases and can confirm that it behaves exactly as you said it would, even when the markup is enclosed within div tags. \n. ",
    "EvansMike": "Hi Geoff\nI've just run into this bug and it seems you've fixed it for html input however, it seems to still exist for xml input.\n. In a test file, text is:\n<h2>The Things</h2>\n<p>The required things are readily available from online sellers. Refer to <a href=\"https://some.random.com\">free things</a> at random site, then:</p>\n```\ntidy  test\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nline 1 column 1 - Warning: inserting implicit \nline 1 column 1 - Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n3 warnings, 0 errors were found!\nhtml\n\n\n\n\n\n\nThe Things\nThe required things are readily available from online sellers.\nRefer to free things at\nrandom site, then:\n\n\n```\n\nSpaces are preserved but I don't want the header footer parts, so using -xml \n```\ntidy -xml  test\nNo warnings or errors were found.\nThe Things\nThe required things are readily available from online sellers.\nRefer to \nfree thingsat random site,\nthen:\n```\nNote the missing space after the  tag. Expected output is to preserve the space.\nUsing HTML Tidy for Linux/x86 version 5.1.21 compiled form GitHub on Fedora18.\n. I missed \"--show-body-only yes\" in the man page, that works just fine.\nI'm actually doing all this Python, to build a website from asciidocs, using pytidylib so I'm not seeing errors anyway.  Yes I know I should pipe them somewhere for checking but...\nMany thanks.\n. ",
    "RalfRoemling": "Hi Geoff, thx for the update and I\u2019m looking forward to RC1. Have a great time! Ralf :-)\n. Worx :-)\n. ",
    "vladimir-kovalenko": "I have found the problem. I have specified command line incorrectly. Input file must follow all options. And it looks like the following:\nC:\\Users\\vlk\\Desktop\\Tidy\\tidy5\\bin>tidy5.exe -config config.txt source.html\n. I figured it out. Below is information for someone who will have the same problem. \nTidy HTML5 implementation added more items to certain enums. Specifically to TidyDoctypeModes and TidyOptionId. This made all enum values shifted and as a result setting one property resulted in setting property that follows the one in question. After syncing the specified enums, it all seems to work fine.\nI am not sure if I will be able to make a patch to TidyManaged repository, but I will try.\n. Hi Mark,\nI am afraid I will not have time to duly maintain it either. I am new to GitHub. So if it is possible to make me a contributor or co-owner of the project so that you still be the owner of the project, I will try to make necessary updates from time to time.\nAs of now I made minimum needed changes to make it compatible with tidy5 and pushed.\n. ",
    "markbeaton": "Hi all - I'm the author of the TidyManaged code - unfortunately I don't have the time (or a Windows machine) to maintain (or update for tidy5) the TinyManaged project any more - @vladimir-kovalenko, would you be interested in taking it over?\n. ",
    "zmwangx": "Please excuse me, but I'm kind of confused by the tagging here. So, the 5.0.0 tag really means 5.0.0rc1, which should in principle be a strictly smaller version number than 5.0.0? And does that mean 5.0.0 will be retagged if the current release candidate turns out to be somewhat problematic (I'd say retagging is a horrible idea)? \nI just want to make sure the release is final before pushing to downstream packages, e.g., the one in Homebrew; we have to be extra careful since the 5 suffix has been dropped, potentially breaking all dependents (thankfully there are none in Homebrew) and user scripts, plus upstream retagging will result in a terrible mess for downstream users.\n. > But I do NOT know what is in std_cmake_args?\nThat's an array of standard CMake flags defined by Homebrew, including all of what you have described :) (The point is the flags are almost the same for every project, so why not abstract them away instead of dropping them in every build script.)\nHomebrew installs tidy-html5 to locations like $(brew --prefix)/Cellar/tidy-html5/5.0.0 (where $(brew --prefix) is usually /usr/local), then symlinks to $(brew --prefix)/bin, $(brew --prefix)/include, $(brew --prefix)/lib, $(brew --prefix)/share, etc.\n\nit would be a good idea if all previous versions of libtidy be uninstalled first.\n\nYes, Homebrew keeps track of all the symlinks. The nice thing about Homebrew is that it installs each package to its separate \"Cellar\", as I've mentioned above, so there's no need for uninstall target \u2014 in fact Makefile is not used at all for uninstallation, and no way to miss anything (unless the install scripts do not respect the specified prefix, I guess). So all symlinks will be removed when one upgrades to a new version. One can keep the old cellar, say $(brew --prefix)/Cellar/tidy-html5/4.9.35, if one'd like to, and that won't interfere with anything.\n\nsorry about the tag mess up...\n\nNo problem at all, thanks for the clarification.\n. Hi, again I'm somewhat confused by tagging...\nWould you be kind enough to explain why we are having 5.1.7 right after 5.0.0RC1? Is 5.1.7 a stable version, i.e., can downstream packagers update to this version?\n. > You can even back-date a tag by saying which specific commit you want the tag attached to\n\nSo in a sense it was just a marker added to the repo for my benefit... \n\nYes, you certainly can tag at any moment, to any commit. However \u2014\n\nMaybe you could describe its meaning to you, maybe point to some reading, and I will try to use the tagging that suits you, and other downstream package managers...\n\nI'm not sure if it's documented anywhere, but for most projects (or so I believe) it is a convention that tags are used to indicate releases. And once a tag is made it should never change, because people will use the tag to check out the specific release (say git checkout v5.0.0), or download the tarball at the specific tag and verify that its checksum is the same as documented somewhere. See https://github.com/Homebrew/homebrew/blob/master/Library/Formula/tidy-html5.rb#L4-L5, for instance, where the 4.9.35 tag is used in Homebrew as the latest release, and we have a checksum for the tarball.\nYou may have a look at https://github.com/git/git/releases or https://github.com/torvalds/linux/releases. They use v-prefixed tags; some projects prefer that, some projects don't.\n\nAs indicated here and in other comments actual releases are already stored in a branch, like release/5.0.0. Using a branch seems the only way to fully isolate a specific block of code...\n\nYes, but I wonder if it is really necessary that 5.0.0 be completely isolated? I think for most projects all releases are first cut at some point of the master branch (as you have seen in git.git and linux.git), and then some may also maintain some older stable branches for backporting bug fixes (take linux-stable.git as an example: https://git.kernel.org/cgit/linux/kernel/git/stable/linux-stable.git/). But since 5.0.0 isn't even released yet \u2014 certainly no backporting talk yet (I suppose?), so maybe it's enough to keep things on master?\nAnyway, I think it's okay to have a release/5.0.0 branch, but most projects just cut releases on master, and a tag with a version number is certainly suspicious to at least some of us...\n\nSo, to me, 'tags' are more just like a time and place marker... they just mark at a specific commit point, and do not take account of the branches... but maybe I do not understand something here...\nAnd to repeat, the aim it to always make sure the master branch is stable...\n\nmaster being stable is great, but I think it's still good to have release tags, otherwise packaging will be a nightmare, because we can't update a downstream package with every commit.\n\nAnd each version increment, in version.txt, represents a bug or feature fix, improvement, whether I remember or not to add a tag as well...\n\nAm I right in thinking (according to https://github.com/htacg/tidy-html5/blob/release/5.0.0/verhist.log), that 1e70fc6f15 is version 5.0.0? However, the release tag says 5.0.0.RC1, so it's still very confusing... Version 5.0.0 is certainly to be packaged, but 5.0.0.RC1 is certainly not...\n. Actually I found a GitHub blog post that vaguely points to the convention I was talking about. From https://github.com/blog/1547-release-your-software:\n\nFollowing the conventions of many Git projects, releases are tied to Git tags. You can use an existing tag, or let releases create the tag when it's published.\nWe recommend projects use Semantic Versioning, but it is not required.\n\nMaybe there are more elaborate writings on the convention I described, but I can't find them at the moment.\n. > But you can see the important tags are marked with a colored left label, while others are just listed bare...\nIn fact, tags marked with a colored left label are those for which you bother to write release notes and/or add artifacts on the GitHub end. Those are not part of the repo \u2014\u00a0they just make distribution on GitHub easier.\n\nRemove the .RC1 from the 5.0.0 and declare it an official release\n\nI think it might be better to tag the same commit as 5.0.0 (you are certainly allowed to do that), if you decide that there's no problem with that commit? Because I believe the consensus is that deleting an already pushed tag could cause similar trouble to people who have cloned the repo as force updating history (RC releases are less important in the long run and it's unlikely that people will check them out after stable, but anyway, git is supposed to keep the entire history of projects).\nAnyway, you're the maintainer so you'll get to decide whether you want to follow community wisdoms or not; but can we just establish a policy that makes downstream packaging easier? Say, can we agree that you'll use GitHub's \"Draft a new release\" feature for \"important tags\", so that when we see a non-pre-release tag with colored left label, we are confident that we can update the downstream package?\nBy the way, this is not only for packaging's sake: I personally use the project in some CI's \u2014\u00a0very helpful by the way, thanks a million \u2014 and while you try to make master stable all the time, occasionally it does suffer some backwards incompatible changes (e.g., the 5 suffix being removed), so I'm much more confident about checking out a release tag (and knowing that it'll never change or vanish).\n. Oh, I just saw 5.0.0 with its green label. Nice!\n. Happy to oblige, submitted https://github.com/Homebrew/homebrew/pull/46874.\n\nBut why use homebrew?\n\nIt's awesome. You'll know if you've used it.\n\nI note they have a backlog of some 250 PR, and a similar number of issues, so it looks like the homebrew maintainers have some catching up to do...\n\nYou'll know they're doing a good job if you also look at the number of issues/PRs closed... PR: 242 open, 30253 closed. Issues: 254 open, 16084 closed.\n. Chiming in late: | (pipe) isn't a valid URI character per RFC 3986. Just read the ABNF (I quote the ones related to the path segment):\n```\n   path          = path-abempty    ; begins with \"/\" or is empty\n                 / path-absolute   ; begins with \"/\" but not \"//\"\n                 / path-noscheme   ; begins with a non-colon segment\n                 / path-rootless   ; begins with a segment\n                 / path-empty      ; zero characters\npath-abempty  = ( \"/\" segment )\n   path-absolute = \"/\" [ segment-nz ( \"/\" segment ) ]\n   path-noscheme = segment-nz-nc ( \"/\" segment )\n   path-rootless = segment-nz ( \"/\" segment )\n   path-empty    = 0\nsegment       = pchar\n   segment-nz    = 1pchar\n   segment-nz-nc = 1*( unreserved / pct-encoded / sub-delims / \"@\" )\n                 ; non-zero-length segment without any colon \":\"\npchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\nquery         = *( pchar / \"/\" / \"?\" )\nfragment      = *( pchar / \"/\" / \"?\" )\npct-encoded   = \"%\" HEXDIG HEXDIG\nunreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   reserved      = gen-delims / sub-delims\n   gen-delims    = \":\" / \"/\" / \"?\" / \"#\" / \"[\" / \"]\" / \"@\"\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                 / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n```\nRFC 3987 extends unreserved to iunreserved:\n```\niunreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / ucschar\nucschar        = %xA0-D7FF / %xF900-FDCF / %xFDF0-FFEF\n                  / %x10000-1FFFD / %x20000-2FFFD / %x30000-3FFFD\n                  / %x40000-4FFFD / %x50000-5FFFD / %x60000-6FFFD\n                  / %x70000-7FFFD / %x80000-8FFFD / %x90000-9FFFD\n                  / %xA0000-AFFFD / %xB0000-BFFFD / %xC0000-CFFFD\n                  / %xD0000-DFFFD / %xE1000-EFFFD\n```\nbut | is still invalid.\n\nI also looked into the source code of the W3 validator: https://github.com/validator/validator. The URI validation is done by https://github.com/validator/galimatias. In particular, the validity of code points is checked by isURLCodePoint, which I quote in full below:\njava\n    public static boolean isURLCodePoint(final int c) {\n        return\n                isASCIIAlphanumeric(c) ||\n                        c == '!' ||\n                        c == '$' ||\n                        c == '&' ||\n                        c == '\\'' ||\n                        c == '(' ||\n                        c == ')' ||\n                        c == '*' ||\n                        c == '+' ||\n                        c == ',' ||\n                        c == '-' ||\n                        c == '.' ||\n                        c == '/' ||\n                        c == ':' ||\n                        c == ';' ||\n                        c == '=' ||\n                        c == '?' ||\n                        c == '@' ||\n                        c == '_' ||\n                        c == '~' ||\n                        (c >= 0x00A0 && c <= 0xD7FF) ||\n                        (c >= 0xE000 && c <= 0xFDCF) ||\n                        (c >= 0xFDF0 && c <= 0xFFEF) ||\n                        (c >= 0x10000 && c <= 0x1FFFD) ||\n                        (c >= 0x20000 && c <= 0x2FFFD) ||\n                        (c >= 0x30000 && c <= 0x3FFFD) ||\n                        (c >= 0x40000 && c <= 0x4FFFD) ||\n                        (c >= 0x50000 && c <= 0x5FFFD) ||\n                        (c >= 0x60000 && c <= 0x6FFFD) ||\n                        (c >= 0x70000 && c <= 0x7FFFD) ||\n                        (c >= 0x80000 && c <= 0x8FFFD) ||\n                        (c >= 0x90000 && c <= 0x9FFFD) ||\n                        (c >= 0xA0000 && c <= 0xAFFFD) ||\n                        (c >= 0xB0000 && c <= 0xBFFFD) ||\n                        (c >= 0xC0000 && c <= 0xCFFFD) ||\n                        (c >= 0xD0000 && c <= 0xDFFFD) ||\n                        (c >= 0xE0000 && c <= 0xEFFFD) ||\n                        (c >= 0xF0000 && c <= 0xFFFFD) ||\n                        (c >= 0x100000 && c <= 0x10FFFD);\n    }. I realize this issue is kind of stale and hasn't generated a lot of interest, but I do want to contribute a new perspective. While it is true and unfortunate that the currently published version (October 2014) of the HTML5 standard waves its hands when it comes to the definition of URLs, the current working spec gives a very clear definition. To quote https://dev.w3.org/html5/spec-LC/urls.html:\n\nA URL is a string used to identify a resource.\nA URL is a valid URL if at least one of the following conditions holds:\n\n\nThe URL is a valid URI reference [RFC3986].\n\n\nThe URL is a valid IRI reference and it has no query component. [RFC3987]\n\n\nThe URL is a valid IRI reference and its query component contains no unescaped non-ASCII characters. [RFC3987]\n\n\nThe URL is a valid IRI reference and the character encoding of the URL's Document is UTF-8 or UTF-16. [RFC3987]\n\n\n\nThe message and trend here is very clear: IRIs as defined by RFC3987 are being promoted to first class citizens, especially in UTF-8/UTF-16 encoded documents.\n@geoffmcl Omitting the warning when --fix-uri no is definitely a welcome change in the short term. (FYI, I also only use tidy-html5 to validate my documents, and I'm currently developing a website with non-ASCII paths.)\nIn the long term, I think there will come a day when --fix-uri should no longer default to yes, and I don't think it will be too far into the future.. Sorry for the late reply on a closed issue. But I don't think this is a duplicate of #352.\n352 is about truly invalid characters in hrefs, e.g. |, which isn't a valid URI character per either RFC 3986 or RFC 3987. The problem in the case is that tidy isn't spotting the invalid character, and isn't doing anything, not even emitting an error.\nThe issue here is different. http://example.com/\u00e9 is a valid IRI per RFC 3987, and tidy is (arguably wrongly, by some evolving standards) flagging it as malformed.. >  I'm not against simply eliminating the warning when no; after all, the default is yes, and so it takes knowledge of the consequences to set this option, so there's a case for suppressing them when no.\n+1 to no warnings at all when --fix-uri no. They only add to noises when I know what I'm doing.. @geoffmcl I just ran into this issue with 5.2.0 on macOS 10.12.2 (with UTF8-encoded Chinese characters in filenames), and I can confirm that the issue-468 branch fixed it for me.. @geoffmcl Yes, I can confirm that master (d071341) works.. LGTM.. ",
    "flok99": "With all pleasure!\nAnd thanks for including it.\nIt will be very useful for me.\nWhen will, by the way, http://tidy.sourceforge.net/ point to the new\nlocations? (website, github)\nOn Mon, Jul 13, 2015 at 3:29 PM, Geoff McLane notifications@github.com\nwrote:\n\n@flok99 https://github.com/flok99 thanks for this PR... now merge to\nmaster, and the version bumped...\nI added a test226 app to https://github.com/geoffmcl/tidy-test and both\nthe node deletion, and attrib deletion seem to work just fine...\nThis may not be a problem you face, but in linux had to delete some old\ntidy,h (+buffio.h, platform.h and tidyenum.h) from /usr/local/includes, and\nsome old tidy5 libraries... but that's probably residual in my system where\nI have done lots of earlier development especially BEFORE 5.0 release...\nAnyway, thanks again for this simple API extension...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/pull/226#issuecomment-120926338.\n\n\nwww.vanheusden.com  www.slimwinnen.nl | www.smartwinning.info\n. ",
    "emerick": "@geoffmcl Thanks very much for the feedback. The main reason I think that this could be a compelling addition is that HTML5 no longer accepts <object> tags inside <head>. This means that going forward, placing <object> in <body> is a much more sensible default, but there will still be a need for flexibility for older documents.\nI do agree that it's a niche case, I'm just not convinced that <head> is the best possible guess with such limited context.\n. @geoffmcl Thanks for the fast turnaround on this patch, I really appreciate it! I tested it this morning and it works great for my use case and the changes make sense to me.\nRegarding your question about where this is called out in the spec, this section of the spec shows what links qualify as \"metadata content\" (which is all that's allowed in head, as of HTML5):\nhttp://www.w3.org/TR/html5/dom.html#metadata-content-0\nYou'll see that object is not listed under \"3.2.4.1.1 METADATA CONTENT\", but is listed under \"3.2.4.1.2 FLOW CONTENT\". In addition, a document with an object in head doesn't validate via the W3C validator when \"HTML5 Experimental\" is selected.\n. @geoffmcl Your patch works great on the issue-228 branch, thanks for getting it in there.\nRegarding adding support for template: I can't say that I'm too familiar with it myself, but anything we can do to increase compliance seems good (although you may want to err on the side of caution until someone specifically calls it out as an issue).\n. Thanks @geoffmcl!\n. ",
    "nuxwin": "@geoffmcl \n``` diff\nDescription: ftbfs - buffio.h renamed to tinybuffio.h in tidy-html5\nAuthor: Laurent Declercq l.declercq@nuxwin.com\n\nThis patch header follows DEP-3: http://dep.debian.net/deps/dep3/\n--- a/ext/tidy/config.m4\n+++ b/ext/tidy/config.m4\n@@ -27,6 +27,12 @@ if test \"$PHP_TIDY\" != \"no\"; then\n     AC_MSG_ERROR(Cannot find libtidy)\n   fi\n\nif test -r \"$TIDY_INCDIR/tidybuffio.h\"; then\nPHP_TIDY_BUFFIO_H_PATH=\"$TIDY_INCDIR/tidybuffio.h\"\nelse\nPHP_TIDY_BUFFIO_H_PATH=\"$TIDY_INCDIR/buffio.h\"\nfi\n+\n   TIDY_LIBDIR=$TIDY_DIR/$PHP_LIBDIR\n\nPHP_ADD_LIBRARY_WITH_PATH(tidy, $TIDY_LIBDIR, TIDY_SHARED_LIBADD)\n@@ -37,8 +43,20 @@ if test \"$PHP_TIDY\" != \"no\"; then\n   AC_DEFINE(HAVE_TIDYOPTGETDOC,1,[ ])\n   ],[],[])\n\nAC_MSG_CHECKING([if your cpp allows macro usage in include lines])\nAC_TRY_COMPILE([\n+#define FOO <$PHP_TIDY_BUFFIO_H_PATH>\n+#include FOO\n], [], [\nAC_MSG_RESULT([yes])\nPHP_DEFINE([PHP_TIDY_BUFFIO_H_PATH], [<$PHP_TIDY_BUFFIO_H_PATH>],[ext/tidy])\nAC_DEFINE_UNQUOTED([PHP_TIDY_BUFFIO_H_PATH], [<$PHP_TIDY_BUFFIO_H_PATH>], [Path to buffio.h])\n], [\nAC_MSG_RESULT([no])\n])\n\nPHP_NEW_EXTENSION(tidy, tidy.c, $ext_shared)\n   PHP_SUBST(TIDY_SHARED_LIBADD)\n+  PHP_INSTALL_HEADERS([ext/tidy/])\n   AC_DEFINE(HAVE_TIDY,1,[ ])\n fi\n--- a/ext/tidy/tidy.c\n+++ b/ext/tidy/tidy.c\n@@ -31,7 +31,12 @@\n #include \"ext/standard/info.h\"\n#include \"tidy.h\"\n-#include \"buffio.h\"\n+\n+#ifdef PHP_TIDY_BUFFIO_H_PATH\n+#include PHP_TIDY_BUFFIO_H_PATH\n+#else\n+#include \n+#endif\n/ compatibility with older versions of libtidy /\n #ifndef TIDY_CALL\n```\nmade against PHP 5.6.23 ;)\n. @geoffmcl \nShould I forward to upstream?\n. ",
    "mperham": "Thank you @geoffmcl, I had no idea about those options or help screens.  I'm used to curl, which prints out all zillion options on its help screen.\n. ",
    "Justin-Maxwell": "Hi Geoff.\nFound it...   See:\nhttp://www.w3.org/TR/html5/\n8 The HTML syntax\n8.5 Named character references\nhttp://www.w3.org/TR/html5/syntax.html#named-character-references\naopf;\nU+1D552\ud835\udd52ap;\nU+02248\u2248apacir;\nU+02A6F\u2a6fapE;\nU+02A70\u2a70ape;\nU+0224A\u224aapid;\nU+0224B\u224b\n_apos;U+00027'_ApplyFunction;\nU+02061\u2061approx;\nU+02248\u2248approxeq;\nU+0224A\u224aAring;\nU+000C5\u00c5\nAs an aside, this list looks like it might be somewhat bigger than the old\nXML and HTML versions.  So there might be a few more that need to be\nincluded.  Fortunately there's http://www.w3.org/TR/html5/entities.json\nCheers\n[image: tibdit icon] http://www.tibdit.com/ tibdit\nhttp://www.tibdit.com/\n@tibdit on twitter http://www.twitter.com/tibdit\nFacebook page https://www.facebook.com/pages/tibdit/470144859751000\nGoogle+ page https://plus.google.com/+tibditMicropayments/posts\njustin maxwell ceo & founder\n@Justin_Maxwell_ http://twitter.com/Justin_Maxwell_\nlinkedin.com/in/tibditJustin\nOn Mon, Aug 17, 2015 at 1:25 PM, Geoff McLane notifications@github.com\nwrote:\n\n@Justin-Maxwell https://github.com/Justin-Maxwell thanks for checking\nand reporting...\nI do not know sublimelinter except what I just read on the web here and\nthere... and now some donwloaded bits... did not insstall it...\nI was pleased to see that it seems to use a separately installed version\nof Tidy!, but the plugin\nhttps://github.com/SublimeLinter/SublimeLinter-html-tidy README.md has\nsome quite old links... and seems to first search for tidy5, then tidy\nexecutables... which is ok I guess...\nHistory\nIn brief when we, HTACG http://www.htacg.org/, revived the development\nof Tidy! we asked to also take over the sourceforege site and repo, to\nupdate them, but todate this has not happened. Sorry about that!\nFor now we have :-\n- site: http://www.html-tidy.org/\n- source: https://github.com/htacg/tidy-html5\n- binaries: http://www.htacg.org/binaries/\n- bugs: https://github.com/htacg/tidy-html5/issues\n- list: https://lists.w3.org/Archives/Public/html-tidy/\n- api: http://www.htacg.org/tidy-html5/tidylib_api/\n- quickref: http://www.htacg.org/tidy-html5/quickref.html\nAnd of course urging system maitainers to add the current HTML Tidy!\n5.0.0 as an auto-install, or at least a package installer...\nBut back to your report...\n' wasn't technically valid in HTML4 but is AFAICT under HTML5.\nI searched around, but could not find a specific W3C reference that\ndefinitively stated an &apos entity is ok under html5... Do you know\nsome? Can you give me some pointers?\nIf it is allowed then the fix is one line... modern Tidy! has sort of\ntwo modes. It defaults, starts in, HTML5++ mode, and only if it finds a\ndoctype of an earlier version, it switches back to HTML4-- mode.\nThis patch would suppress that warning if still in HTML5++ mode...\ndiff --git a/src/lexer.c b/src/lexer.c\nindex 07b5274..d4fa9e1 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -983,7 +983,8 @@ static void ParseEntity( TidyDocImpl* doc, GetTokenMode mode )\n     if ( TY_(tmbstrcmp)(lexer->lexbuf+start, \"&apos\") == 0\n          && !cfgBool(doc, TidyXmlOut)\n          && !lexer->isvoyager\n-         && !cfgBool(doc, TidyXhtmlOut) )\n-         && !cfgBool(doc, TidyXhtmlOut)\n- && !(TY_(HTMLVersion)(doc) == HT50) ) /* Issue #239 - no warning if in HTML5++ mode */\n   TY_(ReportEntityError)( doc, APOS_UNDEFINED, lexer->lexbuf+start, 39 );\nif (( mode == OtherNamespace ) && ( c == ';' ))\nIf you, or others could verify the W3C references, then this could be\nadded...\nInitially, it may be added to the issue-228 branch, which will in due\ncourse be merged with master... and thus be in the next release... and\nmaybe pushed back into 5.0.0?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/239#issuecomment-131798822.\n. Hi.\n\ntested and all good :+1: \n. ",
    "mbmasuda": "Hello @geoffmcl, thank you for the suggestions of things to check.  Since this problem is happening on my work computer, I will get back to you next week with the results of some tests.\n. Hi @geoffmcl, I have done some tests and have the results.\nI have confirmed that \n$ which tidy\nand\n$ tidy -v\nat the shell return the same values as \n%x(which tidy)\nand\n%x(tidy -v)\nin my Ruby script.\nI also printed out the value of #{File.join(dir, \"*.html\")} in my Ruby script.\nI created a new Markdown test file with this content:\n```\nPandoc-Generated HTML from Markdown Source\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis eros risus, suscipit eu finibus quis, posuere et tellus. Sed sed risus sit amet quam scelerisque condimentum. Nam iaculis urna ut tellus gravida lacinia. Fusce id tincidunt elit, vitae dapibus metus. Mauris in nisi eget lectus rhoncus feugiat. Donec consequat sapien quis condimentum eleifend. Phasellus sodales purus fermentum tellus egestas, non auctor magna condimentum. Pellentesque vehicula imperdiet dui vel sollicitudin. \nNullam vel urna sed tellus vulputate luctus ac et ante. Sed et ipsum felis. Nunc semper lorem non turpis mollis volutpat. Vivamus elementum felis at mauris tempus, id pellentesque elit commodo. Fusce iaculis quam dui. Ut sit amet varius velit. Quisque hendrerit eros a suscipit pulvinar. Ut nec est id leo consectetur euismod. Sed eget porttitor arcu. Nunc vel pretium sapien.\nFusce ut mauris vel ex viverra vehicula. Sed tincidunt elit ut lacus maximus accumsan. Quisque molestie pretium massa, sed sollicitudin eros cursus vitae. Integer imperdiet eros nec aliquam facilisis. Vestibulum elementum velit quis neque laoreet egestas. Cras sodales mattis scelerisque. Nullam ante nulla, cursus at congue vel, condimentum nec dui. Aenean porta id neque quis iaculis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vivamus lacinia sit amet urna eu gravida. Proin maximus sodales erat, non pretium dui molestie vel. Donec quis congue lorem. Ut tempus libero metus. Pellentesque gravida massa quis urna blandit, nec facilisis magna malesuada.\nAliquam pretium, nisl pellentesque interdum malesuada, nibh urna sagittis nisi, sed rhoncus orci odio quis odio. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut dignissim elit volutpat massa ultrices eleifend. In nec quam et nibh scelerisque facilisis. Duis congue orci eget aliquam tincidunt. Nam laoreet sagittis dui quis ultricies. Duis et lacus aliquet, elementum justo sit amet, maximus eros. Vestibulum tincidunt lacinia magna ac consequat. Maecenas convallis, augue pharetra tempus condimentum, orci libero feugiat lorem, eu laoreet enim erat ut eros. Duis egestas, mauris in sodales faucibus, tellus lectus elementum nulla, nec ullamcorper felis nisi a neque.\nIn vulputate ipsum sit amet odio iaculis condimentum. Donec lacinia sapien ut dolor eleifend scelerisque. Nam egestas aliquam arcu a ullamcorper. Aenean eget diam eu leo tristique tempus. Pellentesque bibendum odio ipsum. Morbi vitae diam ligula. Integer finibus ultricies pharetra. Donec aliquet, tellus ut ornare pharetra, turpis ante consequat velit, sed dapibus justo augue vel est. Nunc mollis semper erat vitae dictum. Nunc volutpat, ligula nec mollis tristique, nulla tellus sollicitudin diam, ut congue nibh dolor ut erat. Suspendisse feugiat, orci sit amet convallis posuere, ipsum lacus ullamcorper tortor, et faucibus nisl mi ac metus. Vivamus rutrum orci eget eros sollicitudin, a aliquet ipsum lobortis. Integer placerat augue eu nibh euismod auctor. \n```\nand I copied it three times into 1.md, 2.md, and 3.md just to see if I would get different results.\nNext, I used a Ruby script to run Pandoc on the Markdown files to translate them to HTML.  The purpose of using the Ruby script is so that it will convert a whole folder of Markdown instead of me having to run Pandoc on each file separately.  Anyways, the result is that there is a folder of HTML files.\nThen I ran the other Ruby script that includes the call to Tidy.  The result was that I got the warning about a missing \"title\" element but nothing happened to the file despite there already being a \"title\" element in the Pandoc-generated HTML.\nNext, I ran Tidy directly from the shell on my HTML files and it correctly reported no warnings.\nThen I re-ran my Ruby script that includes the call to Tidy and still got the warning about missing \"title\"s.  A transcript of the interaction is below:\n```\n[utilities Mon Aug 24 10:53:41]$ which tidy\n/usr/local/bin/tidy\n[utilities Mon Aug 24 11:18:11]$ tidy -v\nHTML Tidy for Mac OS X version 5.1.2\n[utilities Mon Aug 24 11:18:14]$ ruby pandoc.rb ~/Desktop/tidy-example/ html\n[utilities Mon Aug 24 11:18:29]$ ruby pandoc-to-hippo.rb ~/Desktop/tidy-example/20150824T111829-0700-html/\n/usr/local/bin/tidy\nHTML Tidy for Mac OS X version 5.1.2\n/Users/masudamm/Desktop/tidy-example/20150824T111829-0700-html/*.html\n/Users/masudamm/Desktop/tidy-example/20150824T111829-0700-html/1.html:1:1: Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n1 warning, 0 errors were found!\n/Users/masudamm/Desktop/tidy-example/20150824T111829-0700-html/2.html:1:1: Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n1 warning, 0 errors were found!\n/Users/masudamm/Desktop/tidy-example/20150824T111829-0700-html/3.html:1:1: Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n1 warning, 0 errors were found!\nAbout HTML Tidy: https://github.com/htacg/tidy-html5\nBug reports and comments: https://github.com/htacg/tidy-html5/issues\nOr send questions and comments to: https://lists.w3.org/Archives/Public/public-htacg/\nLatest HTML specification: http://dev.w3.org/html5/spec-author-view/\nValidate your HTML documents: http://validator.w3.org/nu/\nLobby your company to join the W3C: http://www.w3.org/Consortium\n[utilities Mon Aug 24 11:18:51]$ \n[utilities Mon Aug 24 11:19:05]$ \n[utilities Mon Aug 24 11:19:05]$ \n[utilities Mon Aug 24 11:19:05]$ tidy -m -i -w 0 -utf8 /Users/masudamm/Desktop/tidy-example/20150824T111829-0700-html/*.html\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\nAbout HTML Tidy: https://github.com/htacg/tidy-html5\nBug reports and comments: https://github.com/htacg/tidy-html5/issues\nOr send questions and comments to: https://lists.w3.org/Archives/Public/public-htacg/\nLatest HTML specification: http://dev.w3.org/html5/spec-author-view/\nValidate your HTML documents: http://validator.w3.org/nu/\nLobby your company to join the W3C: http://www.w3.org/Consortium\n[utilities Mon Aug 24 11:19:42]$ \n[utilities Mon Aug 24 11:19:56]$ \n[utilities Mon Aug 24 11:19:57]$ ruby pandoc-to-hippo.rb ~/Desktop/tidy-example/20150824T111829-0700-html/\n/usr/local/bin/tidy\nHTML Tidy for Mac OS X version 5.1.2\n/Users/masudamm/Desktop/tidy-example/20150824T111829-0700-html/*.html\n/Users/masudamm/Desktop/tidy-example/20150824T111829-0700-html/1.html:1:1: Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n1 warning, 0 errors were found!\n/Users/masudamm/Desktop/tidy-example/20150824T111829-0700-html/2.html:1:1: Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n1 warning, 0 errors were found!\n/Users/masudamm/Desktop/tidy-example/20150824T111829-0700-html/3.html:1:1: Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n1 warning, 0 errors were found!\nAbout HTML Tidy: https://github.com/htacg/tidy-html5\nBug reports and comments: https://github.com/htacg/tidy-html5/issues\nOr send questions and comments to: https://lists.w3.org/Archives/Public/public-htacg/\nLatest HTML specification: http://dev.w3.org/html5/spec-author-view/\nValidate your HTML documents: http://validator.w3.org/nu/\nLobby your company to join the W3C: http://www.w3.org/Consortium\n[utilities Mon Aug 24 11:19:59]$ \n```\nThis is the content of the Ruby script pandoc-to-hippo.rb:\n```\nif ARGV.length != 1\n  puts \"This command takes one argument:\"\n  puts \"1. Path to a folder containing Pandoc-converted HTML documents\"\n  puts \"example: ruby pandoc-to-hippo.rb ~/Desktop/input\"\n  exit\nend\npath = ARGV[0]\ndir = Dir.new(path)\ndir.each do |filename|\n  if File.extname(filename) == \".html\"\n    string = File.open(File.join(dir, filename)).read\n    pandoc_to_hippo = {\"actionscript\" => \"as3\",\n                       \"cs\" => \"c#\",\n                       \"html\" => \"xml\",\n                       \"xml\" => \"xml\",\n                       \"javascript\" => \"js\",\n                       \"json\" => \"js\",\n                       \"java\" => \"java\"}\n    string.gsub!('', '')\n    string.gsub!('', '')\n    string.gsub!(//) do |match|\n      value = pandoc_to_hippo.fetch($1, false)\n      if value\n        \"\"\n      else\n        ''\n      end\n    end\n    string.gsub!(/.*?<\\/colgroup>/,'')\n    string.gsub!('','')\n    File.open(File.join(dir, filename), \"w\").write(string)\n  end\nend\nputs %x(which tidy)\nputs %x(tidy -v)\nputs File.join(dir, \".html\")\n%x(tidy -m -i -w 0 -utf8 --gnu-emacs yes #{File.join(dir, \".html\")})\n``\n. Hi @geoffmcl, thanks for taking the time to investigate.  The-soption in the Pandoc call makes the file standalone, and is what causes the emptyelement to get added.  In the below transcript, I have a single Markdown document that I translate to HTML, then call mypandoc-to-hippo.rbscript on.  I show the content of the HTML file before I run the script and it has ain it.  Then I run the script and Tidy says there is a missingbut does not appear to actually do anything since I show the content of the HTML file again and it is exactly the same.  Next, I run Tidy from the shell and it reports no warnings and the Tidytag gets added to the HTML.  Finally, I runpandoc-to-hippo.rbagain and still get missing` warnings, even though Tidy just ran successfully from the shell.\n```\n[utilities Tue Aug 25 10:06:32]$ ls ~/Desktop/tidy-example/\ntidy-example.md\n[utilities Tue Aug 25 10:14:42]$ cat ~/Desktop/tidy-example/tidy-example.md \nTidy example\nLorem ipsum dolor sit amet, consectetur adipiscing elit.[utilities Tue Aug 25 10:14:53]$ \n[utilities Tue Aug 25 10:14:55]$ \n[utilities Tue Aug 25 10:14:56]$ ruby pandoc.rb ~/Desktop/tidy-example/ html\n[utilities Tue Aug 25 10:15:18]$ ls ~/Desktop/tidy-example/\n20150825T101517-0700-html   tidy-example.md\n[utilities Tue Aug 25 10:15:22]$ ls ~/Desktop/tidy-example/20150825T101517-0700-html/\ntidy-example.html\n[utilities Tue Aug 25 10:15:30]$ cat ~/Desktop/tidy-example/20150825T101517-0700-html/tidy-example.html \n<!DOCTYPE html>\n\n\n\n\n\n\ncode{white-space: pre;}\n[if lt IE 9]>\n    <script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script>\n  <![endif]\n\n\nTidy exampleLorem ipsum dolor sit amet, consectetur adipiscing elit.\n\n\n[utilities Tue Aug 25 10:15:45]$ ruby pandoc-to-hippo.rb ~/Desktop/tidy-example/20150825T101517-0700-html/\n/usr/local/bin/tidy\nHTML Tidy for Mac OS X version 5.1.2\n/Users/masudamm/Desktop/tidy-example/20150825T101517-0700-html/*.html\n/Users/masudamm/Desktop/tidy-example/20150825T101517-0700-html/tidy-example.html:1:1: Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n1 warning, 0 errors were found!\nAbout HTML Tidy: https://github.com/htacg/tidy-html5\nBug reports and comments: https://github.com/htacg/tidy-html5/issues\nOr send questions and comments to: https://lists.w3.org/Archives/Public/public-htacg/\nLatest HTML specification: http://dev.w3.org/html5/spec-author-view/\nValidate your HTML documents: http://validator.w3.org/nu/\nLobby your company to join the W3C: http://www.w3.org/Consortium\n[utilities Tue Aug 25 10:16:09]$ \n[utilities Tue Aug 25 10:16:14]$ cat ~/Desktop/tidy-example/20150825T101517-0700-html/tidy-example.html \n<!DOCTYPE html>\n\n\n\n\n\n\ncode{white-space: pre;}\n[if lt IE 9]>\n    <script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script>\n  <![endif]\n\n\nTidy exampleLorem ipsum dolor sit amet, consectetur adipiscing elit.\n\n\n[utilities Tue Aug 25 10:16:19]$ \n[utilities Tue Aug 25 10:16:25]$ tidy -m -i -w 0 -utf8 ~/Desktop/tidy-example/20150825T101517-0700-html/tidy-example.html \nInfo: Document content looks like HTML5\nNo warnings or errors were found.\nAbout HTML Tidy: https://github.com/htacg/tidy-html5\nBug reports and comments: https://github.com/htacg/tidy-html5/issues\nOr send questions and comments to: https://lists.w3.org/Archives/Public/public-htacg/\nLatest HTML specification: http://dev.w3.org/html5/spec-author-view/\nValidate your HTML documents: http://validator.w3.org/nu/\nLobby your company to join the W3C: http://www.w3.org/Consortium\n[utilities Tue Aug 25 10:16:57]$ \n[utilities Tue Aug 25 10:17:00]$ cat ~/Desktop/tidy-example/20150825T101517-0700-html/tidy-example.html \n<!DOCTYPE html>\n\n\n\n\n\n\n\n\n  code{white-space: pre;}\n  [if lt IE 9]>\n    <script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script>\n  <![endif]\n\n\nTidy example\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n\n\n[utilities Tue Aug 25 10:17:03]$ \n[utilities Tue Aug 25 10:17:12]$ ruby pandoc-to-hippo.rb ~/Desktop/tidy-example/20150825T101517-0700-html/\n/usr/local/bin/tidy\nHTML Tidy for Mac OS X version 5.1.2\n/Users/masudamm/Desktop/tidy-example/20150825T101517-0700-html/*.html\n/Users/masudamm/Desktop/tidy-example/20150825T101517-0700-html/tidy-example.html:1:1: Warning: inserting missing 'title' element\nInfo: Document content looks like HTML5\n1 warning, 0 errors were found!\nAbout HTML Tidy: https://github.com/htacg/tidy-html5\nBug reports and comments: https://github.com/htacg/tidy-html5/issues\nOr send questions and comments to: https://lists.w3.org/Archives/Public/public-htacg/\nLatest HTML specification: http://dev.w3.org/html5/spec-author-view/\nValidate your HTML documents: http://validator.w3.org/nu/\nLobby your company to join the W3C: http://www.w3.org/Consortium\n[utilities Tue Aug 25 10:17:17]$ \n[utilities Tue Aug 25 10:17:20]$ \n```\n. ",
    "b4hand": "As requested, it now says #include <tidybuffio.h>.\n. ",
    "BMOv2600": "Yeah, sorry about that link.  \"Tidy Documentation\" in my OP should have been http://www.htacg.org/tidy-html5/documentation/. Clipboard malfunction, I guess.\nAnyway, http://www.htacg.org/tidy-html5/quickref.html works for me now.\nAnd I think I missed #213 because I didn't see it in my search for \"404,\" or maybe I missed it because it was marked closed. \nI think you can consider the issue resolved now though.\nThanks.\n. ",
    "bizharvest": "Thanks for your time. Upon further review I realized that when I translated my php array into commandline I was not properly passing in \"false\" as a parameter. It was simply passing an empty string which of course is not the same thing. \nI changed my logic to detect false and translate it into \"false\" as a string and everything now works as expected.\n. ",
    "sria91": "Thank you @geoffmcl. I've modified the code as you have suggested and tested the same using the scripts under the test directory. Following are the outputs.\nOutput of test\\alltest.cmd\n...\nTidying 'input\\in_837023.html'\nR=1 C=1: Returning starttag node <html> stream\nline 1 column 1 - line 1 column 1 - Warning: missing <!DOCTYPE> declaration\nEntering ParseHTML...\nR=2 C=1: Returning starttag node <head> stream\nEnter ParseHead...\nR=3 C=1: Returning starttag node <title> stream\nR=3 C=8: Returning text TextNode [[ 837...]43 stream\nR=3 C=51: Returning endtag node <title> stream\nR=4 C=1: Returning endtag node <head> stream\nExit ParseHead 1...\nR=5 C=1: Returning starttag node <body> stream\nEnter ParseBody...\nR=9 C=1: Returning text_node TextNode [Just ...]11 stream\nline 9 column 7 - line 9 column 7 - Warning: discarding malformed <!DOCTYPE>\n...\nTidying 'input\\in_1072528.html'\nline 1 column 1 - line 1 column 1 - Warning: discarding malformed <!DOCTYPE>\n...\nERROR TESTS [ 837023 1072528] ...\nOutput of test\\acctest.cmd\n``` ...\nFAILED --- test '13.10.1.1' not detected in file 'accessTest\\13-10-1-1.html'\nAccessibility Checks: Version 0.1\naccessTest\\13-10-1-1.html:1:1: accessTest\\13-10-1-1.html:3:1: accessTest\\13-10-1-1.html:7:1: accessTest\\13-10-1-1.html:7:1: No warnings or errors were found.\nAbout HTML Tidy: https://github.com/htacg/tidy-html5\nBug reports and comments: https://github.com/htacg/tidy-html5/issues\nOr send questions and comments to: https://lists.w3.org/Archives/Public/public-htacg/\nLatest HTML specification: http://dev.w3.org/html5/spec-author-view/\nValidate your HTML documents: http://validator.w3.org/nu/\nLobby your company to join the W3C: http://www.w3.org/Consortium\nFAILED --- test '13.10.1.1' not detected in above\nAppears ALL tests ran fine ...\n```\nOutput of test\\alltestc.bat\n...\nTidying 'input\\in_837023.html'\nR=1 C=1: Returning starttag node <html> stream\nline 1 column 1 - line 1 column 1 - Warning: missing <!DOCTYPE> declaration\nEntering ParseHTML...\nR=2 C=1: Returning starttag node <head> stream\nEnter ParseHead...\nR=3 C=1: Returning starttag node <title> stream\nR=3 C=8: Returning text TextNode [[ 837...]43 stream\nR=3 C=51: Returning endtag node <title> stream\nR=4 C=1: Returning endtag node <head> stream\nExit ParseHead 1...\nR=5 C=1: Returning starttag node <body> stream\nEnter ParseBody...\nR=9 C=1: Returning text_node TextNode [Just ...]11 stream\nline 9 column 7 - line 9 column 7 - Warning: discarding malformed <!DOCTYPE>\nR=9 C=7:\n...\nTesting 1069553, expect 0, got 0\nTidying 'input\\in_1072528.html'\nline 1 column 1 - line 1 column 1 - Warning: discarding malformed <!DOCTYPE>\nR=1 C=1:\n...\nCompleted all test... full output written to temptest.txt\nOutput of test\\html5\\testhtml5.cmd\n...\nDone 30 files. See tidied output in tempout...\nWith NO WARNINGS or ERRORS! This is a *** SUCCESS ***.\nAdditional issue\n\nExecuting test\\html5\\cleanup.dat erroneously deletes test\\html5\\template.org.html. It looks like the problem is in line 15 @del temp* >nul\n. Thanks @geoffmcl, I had made a second commit only to preserve the history. Though, as you have suggested, a rebase along with a single commit appears to be more appealing.\n\nAccording to https://git-scm.com/docs/git-revert, using a git revert <commit> would revert the changes but register an additional commit. Then I would have to apply the _fileno() fix after doing a git rebase upstream/master and make one more commit. So, in effect I will be recording five commits which is not desired.\nHence, I presume you asked me to do a git reset <commit> before doing a rebase and applying the fix. This will record a single commit which is desired. The steps used are as follows.\n1. git reset 50e69dbcb1bfdb9b68a6b1e8dfe9a1552c6b0556 reset to commit just before I made the changes\n2. git reset --hard discard the changes\n3. rm test/report-5-1-8.txt this file was added to tracking after my first commit. So had to be removed manually before rebase\n4. git rebase upstream/master\n5. apply the _fileno() fix and commit\n6. git push -f force push (generally this seems to be partially discouraged)\nalltest.cmd & acctest.cmd\nIt appears that the two errors w.r.t. files 837023, 1072528 and one error w.r.t accessTest\\13-10-1-1.html occur only with the Debug build. The Release build indicates no error. I'm wondering why is it so?\nalltestc.bat\nIn my system, running alltestc.bat gives the following output\n...\nGot a DIFFERENCE between testbase\\out_500236.html and temp-5\\out_500236.html\n...\nGot a DIFFERENCE between testbase\\out_661606.html and temp-5\\out_661606.html\n...\nAnd yeah both the files are the same when viewed in a text editor, except that the files in testbase (on the left) have different line endings CR+LF than the files in temp-5 (on the right) LF.\n\nUsing  diff -ua --strip-trailing-cr %TIDYBASE% %TIDYFILE% seems to solves the problem. (the -s option just prints when both the files are identical)\n\nThe --strip-trailing-cr option is available in diffutils 3.3 bundled with Git 2.5.0 for Windows :-). But it isn't avalable in diffutils 2.7 bundled with GitHub Desktop 3.0.5.2 :-(.\nAdditionally test/html5/testhtml5.cmd line number 5 is @set TMPEXE=..\\..\\build\\cmake\\Release\\tidy5.exe. Shouldn't it be tidy.exe\nAnyways, heads up for cleanup to the test scripts. The output is now pretty and readable. \nNow we have a single line, single commit PR ;-)\nHope you could merge the pull request now.\nThanks :-))\n. @geoffmcl thanks for replying and of course merging the request.\nIt's odd that on my system diff -ua still indicates the two files are not identical, so I had to use --strip-trailing-cr.\nI can understand that it is not of much concern. Still I couldn't help but fix the code causing the problem with 837023 and 1072528. My recent commit on the forked repo 2ed0f6555c6972f82aff763675855e9cedcb5e98 makes it possible for the Debug build to work with the test cases without crashing :smile:. If you deem it as required now, it could be merged.\nIt was some great learning experience for me though. This being the first time me using GitHub, and Markdown. :smiley: :smiley:\nThank you again. :smiley:\n. @geoffmcl Thanks...\n. @balthisar This affects not just Kannada but any input content encoded using 'utf-8' (in this case). Please note the -utf8  switch in command line.\n- BOM is hardly used nowadays. In case of old html documents, when the UA sees the BOM\n  - The metadata and -encoding also supports the claim, the UA has to properly decode the content. Tidy need not touch the encoding.\n  - If there exists a conflict between metadata, -encoding and BOM, Tidy then has 4 options:\n    1. Strip the BOM and add metadata (which recommended by W3C, but risky)\n    2. Retain the BOM and remove metadata (which is not recommended by W3C)\n    3. Retain the BOM and add metadata (most compatible)\n    4. It could raise an error/warning and quit gracefully (safe).\n- When there are no conflicts whatsoever and the input stream is missing the metadata tidy will add the metadata.\nRegarding meta charset vs http-equiv, content W3Schools says\n\nUsing http-equiv is no longer the only way to specify the character set of an HTML document:\nHTML4.01: <meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\">\nHTML5: <meta charset=\"UTF-8\">\n\nWhen compatibility with old browsers is desired we could use both  meta charset and http-equiv, content. When backwards compatibility is not an issue it is good to use meta charset alone.\nOne thing that must be noted is that \n\nThe element containing the character encoding declaration must be serialized completely within the first 1024 bytes of the document. - W3C\n. I've suitably renamed the issue.\n. @geoffmcl When I said \"BOM is hardly used nowadays\" I meant presently available document authoring tools which usually default to 'no BOM'.\n\nWhen I add --output-bom yes to the commandline the browser displays correctly. Thanks :smile:.\nWhat should be the default behaviour of tidy so that a readily usable document is generated as output (in cases like this)? i.e. when there is no conflict and meta charset is missing.\nShould it add the meta charset? Yes.\nJust FYI: Opera displays a document 'without BOM and without meta charset' correctly. What could it be doing?\nCould it be detecting the encoding from the content? Yes.\nOr could it be defaulting to use utf-8? No.\nIsn't detecting the encoding from the content a versatile option? We are all using tidy to tidy up the document. Shouldn't it report when there are conflicts in encoding used and declared?\n. @balthisar The issue that has been raized, formalized in the above 7 points is a good starting point. Relying on the user to select the proper input encoding format and specify a proper output encoding format.\n. ",
    "somian": "Hello. OK, I am a user who just built this software for the first time. I know about builds. I am a bit of a toolsmith.  Just to make that clear that you are not take my input as canonical truth about Tidy-HTML5 ...so to your issue. Autotools are the build config system that identify any architecture. CMake is nowhere near that degree of sophistication despite being a preferable system for portability in many other ways.  Just so you know, and thereby realize that the kludge in CMakeLists at line 357 is going to be harder to overcome because some people who might do it, will experience reluctance to reinvent wheels.\n. Back to you, wrt:\n\nI am not finding easily a full-featured autotools for a win32 or win64 environment, and since this package > builds under Windows, it's important to keep it building under Windows.\n\nThis is a false premise; in another case it would not be. But in this case it is. CMake is a portable-izing build system. Look into it a bit more.  The native tools will vary by platform: that's why it is a false premise. using (somepart of) autotools is specifically mentioned in CMake documentation.\nRejecting autotools solutions integrated with CMake (I neither implied not explicitly proposed dumping CMake in my earlier post) can be done based on several arguments; but that it impacts Win32 is not a valid one.\nJust another note, OT: no amount of work will find you a GNU Autotools that is ported to Win32. It is inherently a unix system.\n. To lead such an effort, you'd need to really get familiar with CMake and Autotools. I know what I am talking about (I sometimes ...erm ...perceive an assumption that if someone is honest about not knowing the particular project well ...it indicates weakness of knowledge in other areas too ...that is not the case here.).\nI don't think you have sufficient accuracy of grasping what Autotools does to be able to get even an approximate shape of the way it could be used to improve on the build-scaffolding code in question. In the meantime, all that is really happening is misnamed binaries ...that's practically trivial / cosmetic.  They can always be manually renamed.\nTidy-HTML5 is building fine on Gnu/Linux.\n. Let's start again. And again, if necessary.\nTry running the following command\ngcc -dumpmachine\nWithout even having Autotools involved, there's a safe assumption that the cc for ARM builds is gcc, neh? A CMake thingy could be built around that.\n. ",
    "StefanScherer": "No problem ;-)\n. ",
    "ppKrauss": "Sorry, I lost the link here... \n- \"libTidy API could be used quite easily to create such a tool\": yes, I think also. Well, I think libTidy can be \"the tool\" also, not only \"used to\". Perhaps some parts of the TR/html-polyglot can be translated directly into XSLT (I can help to create at Github such generic-use XSLT), but others will be easy to implement here with a libTidy.\n- the main use is to represent \"only content\" (no JS or CSS interface-oriented) for scientific articles, books, technical norms, etc.  in a neutral and interchangeable way.\n... If you show how to start the task, I can help... I know XHTML, some C, DOM, XSLT, ... And undertand how to \"translate\" the W3C TR into algorithms,  but I am not a good C programmer.\n. Hi @balthisar, thanks!\n\ngit clone https://github.com/htacg/tidy-html5-tests.git ok\ncd tidy-html5-tests.git  ok\nsh tools-sh/run-tests.sh ERROR: run-tests.sh: Can NOT locate ../../tidy-html5/build/cmake/tidy! *** FIX ME ***.\n\nI also tryed cd tools-sh  and sh run-tests.sh  but same error...\nBut checking more run-tests.sh I not see what I need. Need to test  my tidy, not to install a new tidy neither to check compiler, directives, etc.\ntidy --version\nHTML Tidy for Linux version 5.4.0\n. ",
    "mcepl": "Also, it would neat if we could get some kind of simple command (make check?) to run the tests.\n. Also, even though I have -DBUILD_TAB2SPACE:BOOL=ON I don\u2019t see tab2space installed in /usr/bin/.\n. > As you have found, and as your build log shows, lines 47-55, none of your magical Cmake variables do anything about this ;=()\nOh well, c\u2019est la vie\n\nThe install sub-directory is controlled around Lines 168+. You would need to change the DESTINATION to lib64 if that is where you want it installed...\n\nSomething like:\n``` diff\n--- a/build/documentation/build_docs.sh\n+++ b/build/documentation/build_docs.sh\n@@ -7,7 +7,7 @@\n # documentation. Relative path is okay. You shouldn't have to change this\n # too often if your compiler always puts tidy in the same place.\n-TIDY_PATH=\"../cmake/tidy5\"         # Current directory.\n+TIDY_PATH=\"../cmake/tidy\"         # Current directory.\nTIDY_VERSION=cat ../../version.txt\n--- a/test/testone.sh\n+++ b/test/testone.sh\n@@ -19,7 +19,7 @@ set +f\n TESTNO=$1\n EXPECTED=$2\n #TIDY=../bin/tidy\n-TIDY=../build/cmake/tidy5\n+TIDY=../build/cmake/tidy\n if [ ! -f \"$TIDY\" ]; then\n    echo \"$BN: Can NOT locate binary '$TIDY'!\"\n    echo \"$BN: Fix me with the correct location of the binary to run.\"\n--- a/CMakeLists.txt\n+++ b/CMakeLists.txt\n@@ -154,6 +154,15 @@ install( FILES ${HFILES} DESTINATION inc\n ########################################\n # if user option still on\n if (BUILD_SHARED_LIB)\n+\n+    if (NOT LIB_INSTALL_DIR)\n+        set(LIB_INSTALL_DIR lib)\n+    endif ()\n+\n+    if (NOT BIN_INSTALL_DIR)\n+        set(BIN_INSTALL_DIR bin)\n+    endif ()\n+\n     set(name tidy-share)\n     add_library ( ${name} SHARED ${CFILES} ${HFILES} ${LIBHFILES} )\n     set_target_properties( ${name} PROPERTIES\n@@ -166,11 +175,11 @@ if (BUILD_SHARED_LIB)\n     set_target_properties( ${name} PROPERTIES\n                                    COMPILE_FLAGS \"-DBUILDING_SHARED_LIB\" )\n     install(TARGETS ${name}\n-        RUNTIME DESTINATION bin\n-        ARCHIVE DESTINATION lib\n-        LIBRARY DESTINATION lib\n-        )\n-endif ()\n+        RUNTIME DESTINATION ${BIN_INSTALL_DIR}\n+        ARCHIVE DESTINATION ${LIB_INSTALL_DIR}\n+        LIBRARY DESTINATION ${LIB_INSTALL_DIR}\n+    )\n+endif ()\n##########################################################\n ### main executable - linked with STATIC library\n```\n\nNow this would then be relative to a -DCMAKE_INSTALL_PREFIX=/usr, which I note you do add...\nAnd IIRC if the user gives absolute paths here, like -DLIB_INSTALL_DIR=/usr/lib64, then cmake will use that absolute path... need to experiment with that...\n\nrpm automatically defines macro:\n%__cmake \\\n        -DCMAKE_C_FLAGS_RELEASE:STRING=\"-DNDEBUG\" \\\n        -DCMAKE_CXX_FLAGS_RELEASE:STRING=\"-DNDEBUG\" \\\n        -DCMAKE_Fortran_FLAGS_RELEASE:STRING=\"-DNDEBUG\" \\\n        -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \\\n        -DCMAKE_INSTALL_PREFIX:PATH=%{_prefix} \\\n        -DINCLUDE_INSTALL_DIR:PATH=%{_includedir} \\\n        -DLIB_INSTALL_DIR:PATH=%{_libdir} \\\n        -DSYSCONF_INSTALL_DIR:PATH=%{_sysconfdir} \\\n        -DSHARE_INSTALL_PREFIX:PATH=%{_datadir} \\\n%if \"%{?_lib}\" == \"lib64\"\n        %{?_cmake_lib_suffix64} \\\n%endif\n\nSo this could be fixed, but we would be unlikely to push such a small cmake only fix back into release/5.0.0, making it release/5.0.1, especially since I hope we will have another release within a few months...\n\nNo problem, I can happily have this as a distro-specific patch for some time.\n\nOops, but then I note you already have -DCMAKE_BUILD_TYPE:STRING=Debug! Why would you want any Debug code in a distribution package? Specifically in tidy the only unix debug code is quite a number of asserts, which compile to nothing is -DNDEBUG is added...\n\nThat\u2019s probably a mistake. With some other CMake build package, I had problems to get debugging symbols (to be later extracted into -debuginfo package).\n\nI like your -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON option. This adds a lot of important information to the build log... I also use this all the time...\n\nWhen building in the dedicated building server (e.g., http://koji.fedoraproject.org/koji/taskinfo?taskID=11822320) you have just limited means how to investigate problems so verbose logs are often all you have.\n\nSo, for 5.0.0 building you will have to manually adjust that, and for the future, I will certainly look at adding the above install path user variables, like I have seen in several other cmake projects...\n\nWould the above patch had a chance of being accepted as a pull request?\n. > Concerning gcc debug symbols, IIRC -DENABLE_DEBUG_SYMBOLS:BOOL=TRUE will also add the -g option, need to check, but why add debug symbols only to strip them later? This is done very differently in WIN32.\nThat's the way it is done for all Linuxes \u2026 you build with the debugging symbols and then strip them and save to the separate file (packages -debuginfo in Fedora/RHEL case; see for example what's build for the older version of tidy in http://koji.fedoraproject.org/koji/buildinfo?buildID=662744 ). Normal user installs only small packages without symbols, but if the crash happens and they are needed for debugging, the -debuginfo package can be always installed (-debuginfo package for large packages like kernel or LibreOffice can have hundreds of megabytes). gdb and other debugging tools know how to use the information from the separately stored debugging files.\n. > On the other hand, you could add that last diff to your build log just to make sure the 3 or 4 presently expected difference are on our radar. See #266 - thanks...\nOK, I can see that tests are not done yet (OTOH, don't underestimate niceness of running tests on weird architectures ... how many s390 with 31bit CPU you have?). :)\n. > Maybe we should consider that for Ubuntu and Windows... bump the binary packages offered...\nThis is not anything new. Enterprise distros (i.e., SUSE and Red Hat Linuxes) have done this for years. The idea is that you install clean packages on the production systems and only when crash happens, you can install -debuginfo packages and get clean tracebacks. Debian/Ubuntu has a bit different system (special -dbg packages), but that's not that flexible, IMHO.\n. > But what has this to do with your subject?\nAbsolutely nothing. We got on a pretty nice tangent. I think merging #300 would fix this issue. The rest (documentation stuff) could and should be resolved else, and debug stuff is just a wish for Windows to be a better operating system than it is.\n. OK, feel free to close this. I get this warning even with -DCMAKE_BUILD_TYPE:STRING=Release, but you are right, it might be that malloc.\n. I am a Pythonista in my heart so I consider tabs to be a tool of devil, however it seems to me that carrying a special tool just for the conversion (when sed -e 's/\\t/    /g' works just as well) is a bit excessive. However, I didn\u2019t want to leave any patches in Fedora repo which couldn\u2019t be considered upstream (see also #298).\n. So, isn't The Right Thing\u2122 to get rid off tabspace utility itself, when you don't want ti?\n. This is RHEL-7 (I work for Red Hat) and I have to admit I just cheated \u2026 copy and pasted the Chinese characters via clipboard. And of course I have UTF8 locale (LANG=en_US.utf8 to be exact).\n. > @mcepl what do you think of this?\nCertainly @rdieter knows (comparing to me) what he is talking about with regards to CMake. \n. > @mcepl suggests another neat target, see 266 of $ make check. Maybe he will come back with a patch or PR... thanks...\nHe will not. Sorry. Too much on my plate already.\n. > I still have to spool up a Linux VM to find out what the issue is there.\nWhy not to make Travis-CI working?\n. Not sure what to think about all those missing test files (that's 868c80c on this repo, branch testing) ... typescript.txt\n. > @mcepl do you have something running in Travis CI?\nPlenty, but I am a Python guy, so not sure how helpful to a Rubyist. https://travis-ci.org/mcepl/\n. > But forget 'testing' for now... can you setup your fork to just build on Travis CI... that is clone the repo, cd build/cmake; cmake ../..; make;... that would be a great start... thanks...\nmcepl/tidy-html5@2d04638f40 seems to work, but for problems with Travis CI having too old cmake, which is something you can fix better than myself. See the results on https://travis-ci.org/mcepl/tidy-html5/builds/98394012\nOf course, all that install: (with gem --version) is just an example where would installation of gems go, if you need it. If not, than just both these lines can go.\n. My branch testing is as far as I am able (and willing) to go given my non-knowledge of Ruby.\nIt breaks in some weird Ruby problems (see https://travis-ci.org/mcepl/tidy-html5/builds/98488955).\nI guess @balthisar should now take it and run with it.\n. I don't know ... https://travis-ci.org/mcepl/tidy-html5/builds/98488955 claims it took 28 sec. If it is too long for you, you have really trouble with patience (yes, I know it is more than that).\n. ",
    "martinthomson": "Hmm, I tried this many time with the following config:\nchar-encoding: utf8\nindent: yes\nwrap: 100\ntidy-mark: no\nYou can see this in action here: https://github.com/w3c/mediacapture-fromelement/tree/tidy\nRun make tidy a few times.  n.b., If you run this without a tidy installation on your path, it will build and install tidy from trunk; the intent is to use this with C-I.\n. Oh, whoops, you might have to modify some files there; I built in a hack that works around this specific issue already.  If you delete the contents of fixup.sed, you should be able to reproduce the problem.\n. I'm sorry, I didn't want to make this harder for you.  Here's what I've got.  I've built this directly from a github clone:\n$ which tidy\n/usr/local/bin/tidy\n$ tidy -version\nHTML Tidy for Linux version 5.1.9\n$ tidy -q --show-info no -modify index.html \n$ head -1 index.html \n<html lang=\"en-us\" xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\n$ tidy -q --show-info no -modify index.html \nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\n$ head -1 index.html \n<!DOCTYPE html>\nThe same happens on my Mac, so it's reproducible.  And you will note that there is no config file, and none in my home directory either.  The HTML is the one that you see in the repo I linked to.  And you are right, the test file you created doesn't do the same thing.  I can't explain it.  I was really hoping it would be something trivial.\n. Thanks for digging in and persisting.  The fix works for me.\n. ",
    "keithmendozasr": "@geoffmcl I think you're tagging the wrong person for this issue. I didn't file this issue; in fact, I've only started using tidy last week. The one issue I filed, I closed because I couldn't replicate it anymore.\n. Unfortunately, I'm unable to replicate the initial issue myself. I'll go ahead and close this out.\n. ",
    "danielj7": "Hi! I'm the tidy maintainer for Fink. I just updated it to 5.1.25. Now that I know it's being updated frequently I'll be sure to check more often. :) If you find it's not up-to-date again, please don't hesitate to email me about it. Contact information is shown with fink info tidy.\nAs you've discovered, there are 3 related packages: tidy (actually binary), libtidy5 (headers and lib symlinks) and libtidy5-shlibs (shared library). You should only every need to install tidy unless you want to manually build something that links to the lib. The lib packages are really just to be dependencies for other packages.\n. ",
    "hexmode": "In MW's bugs, this effort is tracked under https://phabricator.wikimedia.org/T113976\n. Geoff McLane writes:\n\n@hexmode I read through the links you provided, and some deeper links,\nbut still not sure what is required? Exactly what are you/they looking\nfor???\n\nThey (WMF developers) are looking for a way to get a DOM tree that they\ncan query and then produce HTML from.  They're looking for a complete\nHTML5 parser for this.\nI am looking for a way to get this without introducing Yet Another\nService.  They already have a service in development, but I hope that we\ncan make this available to people using MW without requiring YAS be\ndeployed.\nIf Tidy could expose a \"true\" DOM, I think that would get us a long way\nthere.\n\nSo the first thing would be to update to using only\nhttp://www.html-tidy.org/, and source\nhttps://github.com/htacg/tidy-html5, and re-test all to see if\ntidy still sucks ;=()\n\nEven if tidy doesn't suck anymore, the needs have grown to include HTML5\nparsing and reserialization.\n\nBut, yes, given a stream or buffer to parse tidy produces an internal\nDOM tree. As the tidy.h sample code dumpNode() shows, you can\niterate through all the nodes... if this is what you want... and build\nyour own tree from that...\n\nMaybe this would be enough.\n\nAnyway, maybe I do not understand the question... hope this helps...\n\nThanks for your response.\n. @tstarling thanks for weighing in and helping to clarify the issue.  I think a big part of my confusion comes from this comment:\n\nGiven a string, you need a HTML5 parser to parse it into a DOM -- that and nothing less and nothing more. HTML5depurate is one such solution.\n\nThat seems to contradict your statement:\n\nMediaWiki does not need a DOM, it needs HTML, which is what Tidy already provides. But MediaWiki does not need anything else that Tidy does -- we only need a precisely HTML 5 compliant parser and a slightly customised serializer.\n\nI will defer to your statement and I apologize by muddying the issue by asking for a DOM.\n(For what its worth, my clients wouldn't have a problem using HTML5depurate.  it isn't their needs I'm concerned about here.)\n. @geoffmcl, given the above and the investment tidy-html5 has already made without, I guess, aiming for precise HTML5 compliance, is this (\"a precisely HTML 5 compliant parser and slightly customized serializer\") something you have any interest in making possible?\n. I think the particular issues were\n- <table> in fosterable position in another <table> - tidy (html4) vs html5 treebuilding differences\n- Parsoid and Tidy differ in how they deal with misnested tags\n- Empty elements in DOM: PHP parser+tidy strips them; Parsoid doesn't\nAt least, those were the ones mentioned at the top of the bug.\nI also found a link to this w3c draft which, afaict, is what people are talking about when the mention \"precise html 5 compliance\".\nFeel free to close this if you still don't understand the request and/or don't have any interest.\n. ",
    "tstarling": "MediaWiki does not need Tidy to expose its DOM. MediaWiki does not need a DOM, it needs HTML, which is what Tidy already provides. But MediaWiki does not need anything else that Tidy does -- we only need a precisely HTML 5 compliant parser and a slightly customised serializer. That's why we are going to use an HTML 5 parser library instead of Tidy.\nSince 2004, MediaWiki has been using Tidy as the final stage in its wikitext to HTML translator, to convert user-input tag soup into XHTML. But Wikipedia's wikitext markup has a lot of reusers and independent parser implementations, and it is archived forever, so what we really needed was a stable tag soup specification which would allow anyone to understand how wikitext is converted into XHTML. In 2004, there was no such specification, so we used Tidy because it was the best, most mature tool to do roughly what we wanted. But now we have a tag soup specification in the form of the HTML 5 parsing algorithm, so we are migrating to it.\nIt's a sad day to leave behind a project we've depended on for so many years, but we are leaving it behind. I say this as the lead developer of this migration project. We will continue to provide a configuration option which allows Tidy to be used, so hexmode can keep using it on the wikis he supports. And the new HTACG Tidy can probably be used with this configuration by just changing the binary location. \n. ",
    "KingDuckZ": "If it's ok with you, for me it's easier to drop trailing whitespaces in one commit and re-apply my patch on that. Conflicts should be resolved automatically that way, and you should see more clearly what the real patch is about.\n. I see github picked up the new pull request by itself after I did a forced push, so you should see the two separate commits now.\nI don't know what build/documentation/tidy1.xsl is, but it was causing the warning I fixed.\nCMakeLists.txt references it from line 216 (before and after my patch) so that bit hasn't changed. The difference is that before you were using the .xsl from your working copy, now cmake generates it in the build dir after replacing the right path in it. The warning I was getting was \"../cmake/tidy-config.xml\" not found, which is because tidy-config.xml is a generated file afaict.\nI'm not sure if before my patch it would find ../cmake/tidy-config.xml for some specific use cases, or if it was just always broken, but this fixes the warning and I think it does whatever the original code was trying to achieve.\n. Is this ok? There are no more whitespace changes and the fix for the warning is also gone. Either way as long as commits have a logical meaning I don't think having multiple commits each doing its thing in a single pull request is a big deal.\nAlso, git can easily handle millions of commits, so don't worry too much about the number of commits growing.\nAs an example on how you can use tidy-html5 as a submodule in another project, have a look at my project here https://bitbucket.org/King_DuckZ/duckscraper/src I think I'm doing exactly what you are describing in your post. I hope you find it interesting :)\n. Thanks for accepting it. CMAKE_CURRENT_*DIR are relative to the CMakeLists of the current project, whereas the non-CURRENT version are relative to the top-level cmake project. When you build tidy-html5 as a standalone, it is the top level project _and the current project all the time, so these variables are equivalent. Refer to this for details: https://cmake.org/Wiki/CMake_Useful_Variables\nAs for adding submodules you guessed right, you create that git file by doing git submodule add. You can start a dummy project to try it out:\ngit init dummy\ncd dummy\ngit submodule add https://github.com/htacg/tidy-html5.git #this can also be a relative address\ngit submodule update --init --recursive\ngit status\nI think you are being confused about the update mechanics though. Submodules don't update automatically. That makes perfect sense, because say I write my code to use a library the whose public interface changes at some point. I don't want to pull in the latest version automatically, or my code will break. Git instead ties your main repo to a particular commit of the submodules. That means that if you clone my duckscraper project and init the tidy-html5 submodule, you will always end up at the commit before my pull request until I update it. How do I update it? There may be better ways, but here is what I do:\ncd duckscraper/lib/tidy\ngit fetch origin #origin in this subdir is github/htacg, not bitbucket\ngit reset --hard origin/master #again, we're not affecting duckscraper's working copy\ncd ../..\ngit add lib/tidy\ngit commit -m \"Update tidy-html5\"\ngit push --all\nPractically speaking, git stores the sha1 of the commit of the submodules. When you checkout a specific version of your code, you also check out that file with the sha1, and then git checks out the submodules at the sha1 written in that file. You can see that eveen from here you can go to a specific commit of tidy-html5.\nAlso, if you are actively working in your submodules you can create branches, add remotes, rebase, do all the normal stuff.\n. This is an issue for me too! is there an ETA at all? or any possible workaround?. ",
    "joeheyming": "I just tested this out, thanks so much for looking at this.\nI still am having the issue with my freshly built issue-65 branch.  I ran your instructions and am pointing to my local ./tidy5 under build/cmake:\nline 383 column 97 - Warning: '<' + '/' + letter not allowed here\nline 384 column 37 - Warning: '<' + '/' + letter not allowed here\nHere is the offending html:\n<script type=\"text/html\" id=\"some-template\">\n  <i class=\"tiny some-icon\" data-bind=\"css: 'some-css-class' + value.toLowerCase()\"></i>\n  <span data-bind=\"text: label\"></span>\n</script>\nIt doesn't like the closing </i> tag and the closing </span> tag.\n. ahah, that was it.  Thanks, I've been using tidy5 since I wrote my html lint test back in June! :-P\nLooks like it works!\n. If I install tidy with homebrew, will I be getting tidy with this issue resolved?\nThis is my version:\n$$ tidy -v\nHTML Tidy for Mac OS X version 5.0.0\n. Ok Ok. Thanks @all for all your help.  I really appreciate it.  @zmwangx Those stats are awesome, I wish I was able to make that big of an impact with open source. @geoffmcl Be careful what you wish for, maybe you'll get a pull request from me someday :-)\n. @geoffmcl The reason I hesitate to build directly from the source is that I work with a team of other developers and they understand homebrew.  The barrier to entry increases as you require manual steps.  Basically I'm using tidy to block git pushes to my team's repository if any html is malformed.\n. Looking at what is currently in the test/ directory.  I think that MS bat files are not a good idea since that is not portable.  Any other cross platform scripting language would be better than this (and may encourage others to write more tests)\nI think the only option we have at the moment is to write black box tests.  I propose that we first get continuous integration running (Travis CI) so that for any merge to master, tests get run.  This will force us to start thinking in a cross platform way.  Then start converting the existing tests to run in the CI suite.  Then we can start talking about unit tests.\n. If I have any time to look at this, I would probably investigate using python (or maybe perl since it has good text manipulation abilities).  I think python is safer/hip'er, but may have more leg work to get the right set of test utilities.  \nThe easiest way to write a python test would be to use the unittest module.  That framework provides a junit style way of test setup/teardown.  Given that the test that are written adheres to that framework, you can then build test tools that are common to setup/teardown.  Think a test/lib/ (or tools) directory.\nI agree with the horse before the cart thing.  I was actually thinking that exact phrase after I sent my earlier comment :-p\nTravis.yml is simple.  Given that you can run any test from the command line, you can make travis invoke those tests (glob invoke) and succeed/pass if their return codes are sane (nonzero).  I wrote some unit tests even for lisp with travis.  Here is an example in one of my python projects: https://github.com/joeheyming/redef/blob/master/.travis.yml\n. ",
    "MikeMcQuaid": "\nBut why use homebrew? I note they have a backlog of some 250 PR, and a similar number of issues, so it looks like the homebrew maintainers have some catching up to do...\n\nI think it's a bit rude to ping me by name and then say that, @geoffmcl. The reason we have a large backlog is because e.g. we had 26 pull requests opened yesterday.\n. > @mikemcquaid, clearly @geoffmcl meant your stats are awesome. Is there anything I can do to help ensure we keep up to date with homebrew? I'm not the package manager for homebrew's tidy package, but as one of the Tidy team and a Mac user myself, I'll do what I can when I can.\n@balthisar We sorted it out but thanks for clarifying. You could just submit new releases as formulae updates to Homebrew (if your buildsystem is the same it's just a URL and checksum change). Thanks!\n. ",
    "chg365": "Thank you. It works for me too.\n. ",
    "logistiker": "The idea was to not have to parse the document again after tidy parsed the document in order to remove tags.  I figured that since tidy already has the ability to remove certain tags, it should be trivial to allow it to remove any tag.  I'm also parsing with tidy within php so I wouldn't want to affect the default behavior of tidy by changing tidy.c because the filtering of those tags may not always be desired (hence the configuration option).\n. In my case, I'm trying to adhere to requirements for an xml feed that cannot contain script or style tags so I have to strip them out even if it means the document doesn't render the same anymore.  I guess whoever is digesting it doesn't care if that's the case.  I can also imagine cases where you'd want to accept html in a form field but disallow script tags in them so malicious script cannot be posted.  \nAnyway, in my xml feed case, I'm using tidy to clean up the html and then DOMDocument (via libxml2) to parse the html and create a dom tree for the simple purpose of stripping tags like script and style .  I tried using DOMDocument alone to parse the tree (it trips up a lot more with <script> or malformed html) but it didn't fair as well as parsing with tidy, fixing the tree and then parsing again with DOMDocument to remove nodes.\n. ",
    "rdieter": "I'll submit a pull request shortly\n. indeed, I can add support for INCLUDE_INSTALL_DIR too\n. ",
    "Beep6581": "Thank you.\nI'm using the latest git version but --drop-empty-elements does not appear in -help, I think it should be added there.\nSpeaking of which, it would also be good if \"--help\" worked, with the two dashes, as that is more common than the single-dash version, at least in Linux.\n. It didn't cross my mind that \"config options\" are what I want. My thinking went like this: if -help shows me the options I can use with tidy (I assumed those were all the options, because \"Options for HTML Tidy for Linux\" implies the list is complete), then \"config options\" must be some other things which are irrelevant to me, so I didn't even look. If you intend to keep -help brief, then it would be good to make it very clear that these are the \"most popular options\" or whatever the reason is you chose to show those particular ones, and that the user can \"Refer to http://www.html-tidy.org/documentation/ for a complete list of options\".\nAs for the question of whether -(-)help should be brief or complete, I think it would be easier for you to format text elsewhere instead of in the stdout --help response, and then just have -(-)help point the user to it, making it clear that the things they see in -(-)help are just a small subset.\ntidy-html5 worked great for me, thank you for keeping it alive :)\n. Thank you Geoff :) Yes I will report if I find anything.\nKind regards.\n. ",
    "benkasminbullock": "@geoffmcl Do you want me to close this myself? Assuming so.\n. @geoffmcl Just to be clear I don't have gnuk/freebsd either, I got these reports from CPAN testers. I am just passing along the information. I don't want to use the file operations from tidy-html5 so I have switched that off, as you correctly noticed. The tests above are for this version of the source code:\nhttps://metacpan.org/source/BKB/HTML-Valid-0.00_01\nThe results look like this:\nhttp://matrix.cpantesters.org/?dist=HTML-Valid+0.00_01\nThe currently testing source code is as follows:\nhttps://metacpan.org/source/BKB/HTML-Valid-0.00_02\nI don't have gnukfreebsd results yet:\nhttp://matrix.cpantesters.org/?dist=HTML-Valid+0.00_02\nAs it says in the comments of make-c-file.pl, I don't expect to use any of the file operations in tidy-html5, but only use it to operate on in-memory buffers, so for my own purposes I am just switching PRESERVE_FILE_TIMES off wholesale. However I reported this in case the tidy-html5 project wanted to support the gnukfreebsd platform for the standalone program or for other languages or projects.\nI'll continue to report issues as I find them. I hope it helps.\n. > Some of the results seem inconsistent. HTML-Valid+0.00_01 reports darwin as green, gnukfreedsb orange, and HTML-Valid 0.00_02 the reverse, albeit different versions?\nFor the gnukfreebsd I think that the fix applied by setting PRESERVE_FILE_TIMES to 0 seems to have worked. For the Darwin results the tested system is slightly different between the two tests. All of the failed tests for 0.00_02 are with a threaded system and the successful tests for 0.00_01 are with a slightly different unthreaded system. The fix I applied for the darwin system is to simply remove every \"uint\" and \"ulong\" from tidy-html5. That resolved the compiler errors. These solve my particular problems.\n\nSo this HTML Tidy issues does not seem like the right place for these reports.\n\nI will respect your decision. Note that if you have ideas which you want me to apply to test the system I can change the version of HTML Tidy I've used, and try testing them against CPAN testers. I can also contact the testers and ask them for assistance if there is a problem. \n\nCould be open for a long time, until the above mentioned developer with that particular setup comes forward, thus pollutes the list.\n\nIf there is anything further I can do to help, please don't hesitate to ask.\n. Possibly it might make things easier to use the C99 feature\n```\ninclude \n```\nand replace all the uints with uint32_t? It's implicitly assumed that uint is at least 32 bits in the code. This should be recognized by most compilers except the Microsoft Windows one which is not updated to C99, so for Microsoft Windows the uint32_t would need to be a macro or something. Just a suggestion.\n. I have tested against 496c81c48d540f7f9ddf485cceef9443c8c7ad08 with the following:\nhttps://gist.github.com/benkasminbullock/a57de76e7a294371afd6\nPlease feel free to incorporate this if you want to. I confirmed that it is working. I note that the default strings for options may be NULL according to these results.\nThe above file's output is in the TAP format.\n. > but will hold off pushing a few more days in case someone can cite W3C documentation that specifically allows nested anchors.\nWell it says right at the bottom of the link you've given here:\nhttp://sourceforge.net/p/tidy/bugs/53/\n\nDave Raggett responded on 03 Jan 2001 :\nI need to ensure that nested anchors are detected as \nthese aren't legal in HTML or XHTML. This involves a \nspecial check which I suspect is missing. I will add \nthis to the list of things to look at for the next \nrelease.\n\nSince Dave Raggett actually wrote one of the HTML specifications, I don't think this is really worth worrying about.\n. Just to generalise this, I think having a way to operate on HTML fragments would be a good addition to tidy. In other words, for example if a user has a table and they just want to check if the table has errors or problems like unclosed tags, or an inconsistent number of columns, or something, without worrying about the entire document, it would be a good idea to be able to check just the table. A lot of people are using some form or another of HTML generators. For example a --fragment option, which would bypass the checks for the <head> element, doctype, etc.\n. > While it is appreciated you combing through the source for errors, I hope you are beginning to learn that without digging deeper, like where is it used? how is it described, or not described? are all clues as to its nature, and a simple overview can lead to false positives.\nWhat? I'm not combing through the source for errors. I'm generating the documentation of the options from the source code automatically and noticed that this was undocumented.\nhttps://github.com/benkasminbullock/html-valid/blob/eb6f0f47fb9c27468f07a657069ec91b56c427aa/tools/get-option-doc.c\n. Since this \"option\" causes a segmentation fault, the safe thing to do is not to document it at all, and actively prevent anyone from setting the option.\n. The reason to delete this is to make the source code easier for other people to read, not to save four bytes.\n. We're supposed to comment repeatedly on unclosed bugs?\n. Commits prior to 2388fb017565bf09b65a400175de800154909955 don't have this problem, so the issue was introduced in that commit.\n. I think this fixes the problem:\nhttps://github.com/benkasminbullock/tidy-html5/commit/71d963844897a6864097d4bc36501a97ff314e40\nCan someone check that and pull if it is OK?\n. You can also pull the patch into a local repository using\ngit pull git@github.com:benkasminbullock/tidy-html5.git\nthen push it to the github repository using\ngit push\nor whatever command you usually use to update the github repository from your local copy.\n. The branch seems to have been deleted.\n. Thanks @geoffmcl and @balthisar. Since you've gone to the trouble of making this, it would be a nice if there was a test confirming both the insertion of  and the production of the error message, so the work doesn't get undone later. I would provide one, but I am currently struggling to understand the testing scripts.\n. I'm not sure what you're thinking about in terms of tests but just to get the ball rolling I've gathered a few github issues into a simple set of tests here:\nhttps://github.com/benkasminbullock/tidy-html5/tree/bkbtest\nYou need to run the tests like this:\n$ prove bkbtest/test.t\n. > Further, in the following sample tidy does not report a missing </body>, nor a missing </html>, nor the missing </p>!\nShouldn't it do that though?\n\nBTW that above sample passes the W3C validator!\n\nI cannot reach the W3C validator at the moment to check this, but I don't think it should do that. A typical error in generated HTML files from templates is producing an error during the file generation and leaving off the </body> tag and possibly other parts of the content. Not warning about this kind of thing makes it less valuable as a check of the HTML.\n\nSo why should tidy now start reporting a missing </head>?\n\ntidy usually warns on insertion of other missing tags like </p>. It seems this behaviour is not very consistent.\n. Thanks for the insight @geoffmcl. The validator started working right after I wrote the above. I can confirm that it does not report errors, and neither does Tidy usually report about closing </p> tags, so you are correct in saying that the warning on addition of </head> elements is inconsistent.\n. Possibly worth noting that \"tidy_out\" can be made static. This might help to \"localize\" the strings.\n. How can this be a \"Feature\"?\n. This bug has nothing to do with tidy-html5, it is something to do with node.js (JavaScript), whereas tidy-html5 is written in C.\n. Those compiler options are specific to GCC (and Clang), so could cause errors when using Microsoft compilers.\n. HTML::Valid was released using tidy-html5 in 2015:\nhttps://metacpan.org/release/HTML-Valid\nI've discussed this with @geoffmcl in the issues list several times.\nHTML::Tidy seems to not be passing tests very successfully:\nhttp://matrix.cpantesters.org/?dist=HTML-Tidy+1.58\n. @petdance The main use of the module at the moment is to get a hashset of HTML 5 tags, which is HTML::Valid::Tagset in the distribution. This is used by my other module HTML::Make as well as by some scripts I use to validate HTML. The HTML::Valid part of the distribution is not extensively tested at the moment so I don't recommend discarding anything. If you have some evaluations of the module then please do let me know, and I will try to improve it. It incorporates most of the code of this project except for some encoding related things.\n. ",
    "Janghou": "Probably: (20091223 > 5.1.14)\nName the version 20151116 and the problem is gone IMHO\nI fixed it locally. I did build a deb myself locally, after downloading source, etc. \n...\n- cmake ../.. -DCMAKE_INSTALL_PREFIX=/usr/\n- make\n- (sudo) checkinstall \nIn the last step I bumped the version number to 20151118.\nThat way a deb package is created that I installed after removing the old one. Now update warnings are gone.\nDunno why old package in debian repository has a date version number, but that seems to be the issue here.\nOr simply call the package tidy-html5 instead of tidy, the binary to execute will still be tidy.\n. At the moment I think tidy-html5 should be considered a fork, so naming it tidy-html5 would make sense.\nAnd it will solve the package issue immediately, the deb has nearly no use now.\nOnce tidy-html5 is recognized as an official update for tidy, the branches can be merged. \nRemember naming the package tidy-html5 has no influence on the binary, to execute it's still: tidy \nI named my local build package tidy-html5, and it works fine. \nAlso the original tidy (some libraries), could be compiled into PHP, is that possible with the new updated one?\nMaybe this can help:\nhttps://www.debian.org/doc/manuals/distribute-deb/distribute-deb.html\nand this bug-report:\nhttps://bugs.debian.org/cgi-bin/bugreport.cgi?bug=655200\nThere someone says the new package is canonical, is that right?\nAnd I mentioned the (version numbering) issue to Ubuntu::\nhttps://answers.launchpad.net/ubuntu/+question/274893\n. No I don't have a future proof solution, Ubuntu is Debian based so the point is to get this package into Debian. I have no idea how to quicken that procedure, so I just asked around.\nThe only thing I solved was creating a deb package that is not immediately overwritten, like the package that is now offered for download: either  the version number has to be bumped or the package has to be forked for now.\n. They're probably several ways to generate a deb package. I used checkinstall somewhere in the past, so I used it this time again. Just to try out, I did not change anything.\nLike written above, I ran checkinstall after make. \nAnd created a default, ./doc-pak directory. Then I filled out some fields, to circumvent the `overwrite issue I renamed the package to tidy-html5 and the version to the date 20151116, one of the former should be enough, though\n```\napt-cache show tidy-html5\nPackage: tidy-html5\nStatus: install ok installed\nPriority: extra\nSection: tidy-html5\nInstalled-Size: 2168\nMaintainer: xxx@xxxx\nArchitecture: amd64\nVersion: 20151119-1\nProvides: tidy-html5\nDescription: tidy-HTML5\nDescription-md5: xxxxxxxxxxxxxxxxxxxxxx\n```\nBe aware that although the package is called tidy-html5, the binary is tidy:\ntidy --version\nHTML Tidy for Linux version 5.1.24\nI'm not sure that checkinstall  is the way to go.\n\njust to avoid a warning about a very old distribution.\n\nMaybe old, but I'm afraid the original tidy is still the actual distribution of tidy. \nProbably changing first line of  version.txt to 20151118 will help to. Have'n tried that.\n. ",
    "behnam": "Epoc is the right way of handling this in this case, as @balthisar pointed out. Could you please just set that and build a new package?\n. I'm wondering what's the best way to double-check all the items in the list here. Many of the element display type lists that I check miss many of the tags, like bdi, and there's no clear property defined for this in newer specs.\nAm I missing something in the specs? Or maybe there's a list maintained somewhere out of the HTML spec?. ",
    "bergwerf": "Ok, sorry, I like brief descriptions myself and I thought Jinja was kind of common knowledge (Jinja is the backbone of Sphinx, Jekyll, etc.). Also, could you put the contributing guidelines in CONTRIBUTING.md (https://github.com/blog/1184-contributing-guidelines) Jinja is a template engine written in Python. See http://jinja.pocoo.org/.\nWhat went wrong\nSphinx (and Jekyll) templates are written using Jinja. A template might look something like this:\nhtml\n{% extends \"layout.html\" %}\n{% block body %}\n  <ul>\n  {% for user in users %}\n    <li><a href=\"{{ user.url }}\">{{ user.username }}</a></li>\n  {% endfor %}\n  </ul>\n{% endblock %}\nI created an auto-formatter for my project to prevent messed up indents etc. I picked tidy-html5 as HTML formatter. When I formatted a repository that contained Sphinx templates (http://sphinx-doc.org/, this is a documentation generator written in Python that uses Jinja as template backend), it went wrong.\nTidy version\n5.0.0\nReproduce\nhtml\n{% extends \"layout.html\" %}\n{% block body %}\n  <ul>\n  {% for user in users %}\n    <li><a href=\"{{ user.url }}\">{{ user.username }}</a></li>\n  {% endfor %}\n  </ul>\n{% endblock %}\nOutput from tidy -indent\nhtml\n<!DOCTYPE html>\n<html>\n<head>\n  <meta name=\"generator\" content=\n  \"HTML Tidy for HTML5 for Linux version 5.0.0\">\n  <title></title>\n</head>\n<body>\n  {% extends \"layout.html\" %} {% block body %}\n  <ul>\n    <li style=\"list-style: none\">{% for user in users %}</li>\n    <li>\n      <a href=\"{{%20user.url%20}}\">{{ user.username }}</a>\n    </li>\n    <li style=\"list-style: none\">{% endfor %}</li>\n  </ul>{% endblock %}\n</body>\n</html>\nObviously, the template itself is not valid HTML. And often, the template file only describes a fragment of the page like in this example. Note that this is also the case for web components (used by Polymer and very popular right now, you can find more about this by Googling it). Do you think you could add options to tidy-html5 that allows me to format a Jinja template? (and html imports, which will have similar problems).\n. The show-body-only option generates the following output for the same HTML fragment.\nhtml\n{% extends \"layout.html\" %} {% block body %}\n<ul>\n  <li style=\"list-style: none\">{% for user in users %}</li>\n  <li>\n    <a href=\"{{%20user.url%20}}\">{{ user.username }}</a>\n  </li>\n  <li style=\"list-style: none\">{% endfor %}</li>\n</ul>{% endblock %}\nThis is still not entirely correct though although it seems sufficient for html imports (!, it would be great if tidy could auto detect this, I can also try to build that into my auto formatter, e.g. only if the document contains an <html> tag show-body-only is false)\nJinja syntax: http://jinja.pocoo.org/docs/dev/templates/\nI think it would be a huge improvement if {% %}, {{ }}, {# #} got it's own line like html tags when they are not used as attributes (like {{ }} in the example, which should also not be URI encoded). I think it's too hard to support the # ## line statements (http://jinja.pocoo.org/docs/dev/templates/#line-statements). There are also some more complex multi-line cases (http://jinja.pocoo.org/docs/dev/templates/#comments).\n. I thing the show-body-only is sufficient, at least it worked for me. I think the question if Jinja syntax support is relevant depends on the target audience. If you want tidy to be a universal html formatter you should add optional Jinja support IMHO, if you want it to be a formatter for real html only, you should not add support for this.\nThe case is that in the end I want a formatter for my html files that contain Jinja syntax. As for Jekyll and Sphinx doc, the templates are processed to valid html but that's not where a formatter is relevant (I would rather compact the production version as much as possible using vulcanize, a tool that mangles all your resources into one file until HTTP 2.0 can 'stream' all resources). I want a formatter because I want the files in my repository to be consistent. So if we decide tidy can't do this, I would go looking for another formatter that can. This is because I was recently completely convinced that auto-formatters are THE way out of religious wars and uncountable pull requests about inconsistent code formatting.\n. Not really. I added an exclude flag to my formatting program so I can\nignore jinja templates. Anyway, it's up to you guys to add jinja\ncompability or stick with pure html.\nOn Fri, Jan 15, 2016, 09:55 Jim Derry notifications@github.com wrote:\n\nI'll close this at it looks like the show-body-only option was successful.\nIf anyone disagrees, please feel free to re-open with new information.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/310#issuecomment-171904949.\n. \n",
    "zanona": "Hey guys, \nIn terms of validation, not only for Jinja but many other template engines where it's common to have an example like:\nhtml\n<ul>\n  {{~it.array :value}}\n    <li>{{=value}}</li>\n  {{~}}\n</ul>\nThis would, of course, cause tidy to warn about the line after and before the opening and closing <ul> tags of not being an <li> tag. So I was wondering that it would be quite handy to have an option to perhaps ignore validation on lines by providing a string or regex? So when that regular expression matches, it would skip that line?\nOr perhaps there's already a solution for that which I am not aware of at the moment?\nthanks\n. Hi @geoffmcl, thanks a lot for your reply on this.\nI'm afraid I perhaps didn't explain my case very well, but my concern is only regarding validation where by adding:\nhtml\n<ul>\n  {{~it.array :value}}\n  <li>{{=value}}</li>{{~}}\n</ul>\nand then tidy template.html present a few validation errors such as:\nline 19 column 9 - Warning: missing <li>\nSo my intent was to ignore lines that match a specific pattern so the validation still passes under those lines as if they didn't exist.\nI have tried with all options you suggested such as tidy --show-body-only yes template.html and tidy --fix-uri no template.html but I do still receive the warnings about those lines which are not really html?\nThanks again and have a great weekend. \n. Thanks a lot @rtack @geoffmcl,\nI will test it and let you know in case something unexpected happens.\nIt looks great though.\nOne alternative way I found to play nicely with template engines is changing their markers to HTML comments for these sections instead so the below would also be valid without conflicting with the markup:\nhtml\n<ul>\n  <!--{{~it.array :value}}-->\n  <li>{{=value}}</li>\n  <!--{{~}}-->\n</ul>\n. Thanks @geoffmcl,\nI have done some really light research here and found the following:\nFrom W3C I could spot this in regards the itemprop attribute\n\nEvery HTML element may have an itemprop attribute specified, if doing so adds one or more properties to one or more items \n\nAs well as for itemscope and, I presume, the remaining itemxxx attributes:\n\nEvery HTML element may have an itemscope attribute specified. \n\nUnder MDN itemprop is also listed as a Global attribute with the observation:\n\nGlobal attributes are attributes common to all HTML elements; they can be used on all elements, though the attributes may have no effect on some elements.\n\nPlease let me know if these observations are valid.\nThanks again for your help.\n. @balthisar That's not a problem at all. I would like to thank you for the great work you and @geoffmcl  are doing. I completely agree that the measures being taken to fix this issue will not only fix this particular case but also bring many other benefits to the codebase.\nI am sorry I couldn't be of any more help to help while solving the issue or contributing to the code.\nAll the best.\n. Any suggestions on how to upgrade if my system has the 2009 version?\nbash\nsudo apt-get remove tidy\nsudo apt-cache autoclean\nsudo apt-get install tidy\nstill gives me the same outdated version :/. @LudovicRousseau thanks, I will try that instead.. thanks for your reply @geoffmcl,\nthe problem here is with:\nhtml\n<div class=bar />\n<script src=baz.js />\nThat apparently are not allowed on HTML 5?\nIn fact if I try to do this, browser will in fact interpret in crazy ways like:\nhtml\n<div class=bar>\n   <script src=baz.js></script>\n</div>\nor even worse if something like this is presented:\nhtml\n<script src=baz.js/>\n<div>hello</div>\nwould be rendered in the browser as:\nhtml\n<script src=baz.js>\n   <div>hello</div>\n</script>\nSo in this case there's no expected output since it's basically an error?\nI believe they refer to self closing elements, as just the ones listed below?\nPerhaps we can manage to find an official list of those?\nhtml\n<area />\n<base />\n<br />\n<col />\n<command />\n<embed />\n<hr />\n<img />\n<input />\n<keygen />\n<link />\n<meta />\n<param />\n<source />\n<track />\n<wbr />\nIf you check the output on W3C Validator you can see it's printed out as error since it's not valid HTML5 as per the spec apparently?\n. Sorry Geoff, perhaps I wasn't too clear before.\nI believe the current output is pro-actively correct already, so I don't expect anything on the output generation to change.\nHowever, tidy should point it as an error in the source (not warning), considering that at the moment it just passes through it as valid markup.\nSo:\nI expect tidy to output the same document as it is a the moment, but alerting of an error in the markup.\nDoes this clarify you question?\nAlso, self closing is completely valid in HTML5 on void elements, however optional. So both <br/> and <br> are valid as well as <img> or <img/>.\nThe error here is when there's an attempt to self closing non-void elements (the ones that require content) such as div, p, section, article, script or any other that's not in the list I mentioned before.\nFor more info please see: http://www.w3.org/TR/html5/syntax.html#void-elements\n. @geoffmcl Thanks so much, that was exactly what I meant.\nThanks for the explanation about tidy as well, hopefully next time I will get it right when opening a new issue.\n. Thanks @geoffmcl.\nWell, I believe you guys can be very proud nowadays because tidy is the most (if not the only) reliable CLI HTML linter out there. This is my main usage of it actually.\nI do really like the pro-activeness of tidy on making things right outputting documents as they should be. It already does a great job on this.\nIn regards the warnings, I believe this can simply be put behind a flag what do you think? I believe it may be something that would benefit many that want to know about their document status before any processing is done. So if we could add --verbose for example, Tidy could simply warn about all the issues (good for lint in and improving best practices). without this flag, things are just done silently as you mentioned.\nIt would be interesting to know what others think as well.\nAll the best\n. That's a really good @geoffmcl. I was thinking about -V instead of -v just like curl but that could be error prone and besides, --strict is much more semantic.\nSince the main object of tidy is to tidy up html files, it would look weird that  people should opt-in to format their files like tidy --strict --format index.html. This is a case where it's clear that strict will also display warning happened during the formatting process.\nBut since this is not ideal I believe that by default when implementing --strict it should also communicate about the fixes, but with an option to disable formatting  warnings since, as you mentioned, it would become quite verbose.\nperhaps something like:  tidy --strict --noformat index.html or  tidy --strict --lint-only index.html?\nor even setting a level for --strict like tidy index.html --strict 1|2|3?\n(1: errors only, 2: errors and local warnings, 3: errors, local and formatting warnings) \nAnyway, I believe strict justifies the action pretty well.\nThank you for your help.\n. Drum roll!\n\n. Thanks so much guys.. ",
    "rtack": "@geoffmcl pull request is already there https://github.com/htacg/tidy-html5/pull/398\n. After some more digging found out what the difference is\nThe following will validate fine..\n<label><input type=checkbox checked name=cheese disabled> Cheese</label>\nIf the input tag is self closing and there is NO space before '/' the attribute is wrongly parsed as \"disabled/\" instead of \"disabled\" which leads to the warning.\n<label><input type=checkbox checked name=cheese disabled/> Cheese</label>\nWarning: attribute \"disabled/\" lacks value\nIf the input tag is self closing and there IS a space before '/' the attribute is correctly parsed as \"disabled\" and no warning is given.\n<label><input type=checkbox checked name=cheese disabled/> Cheese</label>\nhttps://www.w3.org/TR/html5/syntax.html#void-elements\nsays that void elements are allowed to be self closing and \n<label><input type=checkbox checked name=cheese disabled/> Cheese</label>\nvalidates fine in the w3c validator.\n. http://stackoverflow.com/a/707702/1275767 has a list of boolean attributes and the tags they can be used.\n. yes I believe that in html4 it was 1 or more li.\nin html5 it's 0 or more.\nI plan looking into what's going sometime if nobody beats me to it.\nconverting ul to div is possibly (most likely?) a different issue.\n. It seems to be the case that with html4 at least one li element was required and with html5 it's 0 or more.\nhtml4 spec for ul tag: https://www.w3.org/TR/html401/struct/lists.html#h-10.2\n<!ELEMENT UL - - (LI)+                 -- unordered list -->\nhtml5 spec for ul tag: https://www.w3.org/TR/html-markup/spec.html#ul\nPermitted content:\nZero or more li elements\nwith tidy version 5.1.51\n<!DOCTYPE html>\n<html>\n<head>\n  <title>any</title>\n</head>\n<body>\n  <ul>\n    <a href=\"#submenu\"></a>\n  </ul>\n</body>\n</html>\nand no config will result in the following\n```\nline 10 column 5 - Warning: missing \nInfo: Document content looks like HTML5\nTidy found 1 warning and 0 errors!\nhtml\n\n\n\nany\n\n\n\n\n\n```\n. I'll create an issue-396 branch for testing #396 and #310 \n. I've created a new branch on my fork. https://github.com/rtack/tidy-html5/tree/issue-396\ndo I need to do a normal pull request? or will you create a new branch from my branch?\n.",
    "slavafomin": "Hello!\nThank you for this great library!\nI'm using gulp-tidy in order to tidy my HTML templates written in Twig (Jinja2).\nHowever, it messes up URLs with placeholders: <a href=\"{{%20confirmationUrl%20}}\">.\nThe fixUri: false options helps.\nI'm using htmltidy 5.2.0.. ",
    "guzur": "Thank you very much geoffmcl for your answer. \n. A:\nI try compile with this line #if (defined(_MSC_VER) && (_MSC_VER < 1300)) || (defined(MINGW32)) but it didn't work. The error output is this one.\nC:\\tidy\\src\\mappedio.c: In function 'initMappedFileSource':\nC:\\tidy\\src\\mappedio.c:199:29: error: lvalue required as left operand of assignm\nent\n(DWORD)pli->LowPart = GetFileSize( fp, (DWORD *)&pli->HighPart );\nCMakeFiles\\tidy-static.dir\\build.make:637: recipe for target 'CMakeFiles/tidy-st\natic.dir/src/mappedio.c.obj' failed\nmingw32-make.exe[2]: *** [CMakeFiles/tidy-static.dir/src/mappedio.c.obj] Error 1\nB:\nYes that's what I installed in a Windows 7 64-bits.\nC: Cmake and Eclipse\n\"I try to compile with Eclipse or Cmake\" => \"I try to compile with Eclipse and Cmake\" \nI want to type \"and\" not \"or\". I already edited.\nThis is what I used to compile with MinGW:\n1. cd build/cmake\n2. cmake -G \"MinGW Makefiles\" -DCMAKE_INSTALL_PREFIX=c:/tidy\n3. cmake --build . --config Release\nAnd for eclipse I compiled with the IDE.\nThank you very much for your help.\nA final question this tidy library it's only for windows or unix SO? I came from trying to use gumbo but gumbo library don't work with xhtml only html5 so I was trying to use tidy. I want to export it after make it work to iOS and android. Any problem with this?\n. I downloaded a compiled exe for windows from here: \nhttp://www.paehl.com/open_source/?HTML_Tidy_for_Windows\nand didnt work. So maybe something about Windows? I tried in other computers and the same happends.\n. Hi geoffmcl thank you for your time. \nI executed that binarys with this line:\ntidy index.html > output.html\nIs it right?\nThe output.html file was created but is empty and the exe keeps running 5 minutes later so... Something is wrong isn't it?\n. @geoffmcl\nI tryied tidy -o output.htm index.html but nothing happened.\nThe tidy -v didn't print anything and the echo %ERRORLEVEL% shows 0\n. @geoffmcl Thank you for your work, I will try it as soon as possible and I will tell you the result.\nThank you.\n. @geoffmcl I compiled with your branch \"minGW-build\" and the result is the same the exe didn't work. I uploaded to dropbox and here you have a link to download it.\nhttps://www.dropbox.com/s/nvc5zn5cohxbdq9/tidy.exe?dl=0\nIs necessary something external?\n. Hi @geoffmcl !! I found the problem it was avast the Antivirus, I disconnected and it works!!! \nThank you so much for all your work and fantastic staff. \nCheers.\n. ",
    "vcunat": "Ah, we already have a 4.9 package in there, separately from the old html-tidy. I assume this project is (also) meant as a drop-in replacement for the old html-tidy, including libtidy, right? From a quick skim I only see missing bin/tab2space, but perhaps that was rarely used.\n. Oh, is there no option to link bin/tidy dynamically? https://github.com/htacg/tidy-html5/blob/master/CMakeLists.txt#L189 We and most other Linux distributions tend to prefer dynamic linking. The old version is fine in this respect.\nI plan to replace both versions by unified 5.*. It seems that reverse dependencies build fine, except for prayer-1.3.5 which gets broken: html_secure_tidy.c:15:20: fatal error: buffio.h: No such file or directory.\nBTW, nix is specifically designed to be able to keep any number of versions and configurations around, even with all its dependency closures (dynamically linked and other references).\n. I see; if the headers only got renamed, the breakages will be fixed easily and safely.\n. Looks good, except that during build it tries to run the executable and fails to find the library. I worked around that easily, though. The binary is tiny now.\n. I thought it standard to have the translated texts stored in separate per-language files.\n. I wouldn't expect such a small project to program this from scratch. There are standard frameworks for handling translations in a cross-platform way.\n. ",
    "yapper-git": "@geoffmcl : Thanks for the ticket \"garbage collector\" on sourceforge. It didn't know you migrate to GitHub.\nSo I created a new issue on GitHub for the corresponding issue, see #329.\n. > You might want to update your tidy output to show this problem still exists in current htacg tidy, current master branch, version 5.1.28 plus. Showing a 2009 output does not help the case.\nI updated the output above (with 5.1.25 version installed on ArchLinux).\n. @geoffmcl : I get tidy 5.1.25 from AUR.\n. Sorry I never entered in tidy code and I have no time for that currently\u2026\nThx for your work!\n. ",
    "gagern": "\nNaturally I do agree Tidy should be international, and it depends on finding people to do each of the translations... and making that easy for them to contribute...\n\nThat might be helped by using some well-established message file format, like e.g. GNU gettext PO files. That way, experienced translators could stick to the tools they know to write their translations.\nIf you want to use .h files instead of the gettext library and format, that's fine since it should be easy to cook up some tool to convert between these formats. Essentially all you have to do is switch between enum constant and english string as the key for a message, and perform some slight changes to escaping and surrounding boilerplate.\nOne thing e.g. gettext handles that the current implementation with its simple lookup table would have problems with is plural forms from different languages. It is quite surprising how much these vary!\n. > I really like the tools that are available for PO files, and I thank @gagern for really making the point stick that it's a format with wide support.\nI'm glad my comment turned out to be this useful.\n\nOne thing e.g. gettext handles that the current implementation with its simple lookup table would have problems with is plural forms from different languages. It is quite surprising how much these vary!\n\nOne possible approach to that is the following: for every string with a plural distinction, reserve a range of consecutive enum constants. E.g. STRING_ERROR, STRING_ERROR_PLURAL1 = STRING_ERROR + 1 and so on. There doesn't seem to be a reasonably common language with more than 6 different plural forms, so STRING_ERROR_PLURAL5 = STRING_ERROR + 5 could be the last. That way, you can build something that works essentially like ngettext in that it selects the appropriate plural form for the current language. In the PO file, the plural forms should of course be represented using the appropriate PO format.\nYou might want to be specific up front whether you support argument reordering for printf-style format strings. Not doing so may force translators to choose clumsy formulations in order to stick to the english order of substitutions.\nI think you should make the .pot file (translation template) readily available to likely contributors, e.g. by committing them to git. You should also avoid absolute paths in there. I'm not yet decided whether it would be wise to add the c-format flag to strings containing % as part of the automatic conversion. Doing so might be a useful hint to translators, and may enable additional helpful features in some tools. Getting this wrong would be rather confusing, though, so you should only do this if you are sure the heuristics are correct.\n. > I'm not keen on re-writing all of gettext's functionality (for determining plural forms, etc.).\nThe functionality for determining the appropriate plural form is a single C expression which is part of the PO file itself. So as long as you provide the flexibility of choosing among a varying number of plural forms, picking the right one would be fairly easy.\n\nIt looks like most of gettext is LGPL, so maybe there's a case for bringing the code in directly if it's not too large.\n\nIf you can use the gettext sources unmodified, you could include them as a git submodule. See here for its git repository. Note that it in turn uses gnulib, a sourcecode-only compatibility library, as a submodule, so you may need to operate on git submodules recursively. By the way, properly using gnulib should be enough to provide argument reordering support on pretty much any platform.\nThe gettext build system is designed around the GNU autotools. This (particularly in combination with gnulib) will provide a lot of portability for *nix systems. But building things on Windows will likely require Cygwin or similar. I'd consider that a reasonable requirement, but it's up to you whether you are willing to accept that. I'd be slightly worried that path name conventions on Windows differ radically from those on *nix. But the --enable-relocatable switch to configure may help there.\nI also think that gettext is designed around the LC_MESSAGES facet of the current locale. Switching language per document or per thread is likely not well supported. If you want to offer such functionality, you might have to mix gettext with your own code. Since its implementation has essentially one file per function, that might still be feasible without modifying the sources, by selectively including files instead. It looks as though substituting localename.c might be enough to use a different locale. Perhaps there even is some machinery in there to set the locale per thread; I haven't really read all of that file yet.\n. > then Tidy has to implement a C expression parser to figure out which of the strings to pick.\nI don't see why. You are creating header files, which already may contain C code. So how about this in language.h:\nc\ntypedef struct {\n  int (*pluralForm)(int n),\n  languageDictionary messages\n} languageDefinition;\nThen in e.g. language_en.h you could write:\n``` c\nstatic int pluralForm_en(int n) {\n  return n != 1;\n}\nstatic languageDefinition language_en = { pluralForm_en, {\n  { TIDY_LANGUAGE, \"en\" },\n  \u2026\n  { TIDY_MESSAGE_TYPE_LAST, NULL }\n}};\n```\nThe n != 1 comes directly from the PO file header. The same pattern could be used for other languages as well.\nIf, for some reason, you feel that you have to parse these strings instead of copying their code, then I suggest you look at this parser which apparently is part of the gettext runtime library. But I can't think of a reasony why you'd have to use this.\n\nUnfortunately the code is littered with so many configure-time macros I'm having trouble grokking out what specifically is providing the sprintf.\n\nLooking at the sprintf-posix module, sprintf.c is the file for this. It calls vasnprintf which indeed appears to contain the core logic here. But I concur: that file contains so many case distinctions that maintaining them manually may become really painful.\n\na cursory glance at platforms.h tends to make me think that the only non-POSIX platform is Windows\n\nIn that case, you could probably set up some toy project with gnulib, make sure that builds on Windows, and use its preprocessor output to obtain an implementation of sprintf without having to resolve all the macros manually. Unless you can get that functionality out of Windows itself.\n\ncertain versions of Windows do seem to have sprintf-like functions that support positional specifiers\n\nJust for reference: the relevant MSDN article here appears to be printf_p Positional Parameters, right?\n. One other thing: what about character encoding?\nThe header files currently seem to use UTF-8 encoded string literals. Perhaps the PO-to-H step should replace these by hexadecimal escape sequences, so that you don't depend on the C compiler accepting UTF-8 literals. This reference suggests that there is indeed a translation between source character set and execution character set, so assuming that arbitrary bytes in string literals will get passed on unmodified may be incorrect, as far as I can tell. With escape sequences, we'd have full control over the binary representation. (Note that C11 has support for UTF-8 string literals, but using that would severely restrict portability).\nI guess people may expect the setting of char-encoding to affect error messages as well. Particularly if these error messages are written to a file. Are all the occurrences of message strings in locations where they will pass through a character re-encoding step before being sent to the output? Would it make sense to add error-encoding (or diagnostics-encoding) in addition to input-encoding and output-encoding, so that people could control the character set of diagnostic messages independently?\nYou might also want to check what kinds of hoops you'll have to jump through in order to make the command line tool tidy.exe use Unicode output on Windows. Unless that's already implemented somewhere, or not considered relevant enough for the first implementation of this feature.\nPerhaps you should also clarify the semantics around the message filters. As far as I can tell, mssgFilt currently receives the localized message, and mssgFilt2 the localized message format (and arguments). So the message filters don't have access to the unlocalized message, and therefore may have a hard time making reasonable decisions about any given message if they don't know all the translations. I'm not sure about the best solution here, but it might be worthwhile to introduce a mssgFilt3 which receives some opaque type, and which may call a bunch of functions using which it can extract various things from that opaque type:\n- English and the translated message format string\n- English and the translated formatted message\n- Positional arguments as va_list\n- Message ID as well if that can be made available easily\n. @balthisar Thanks, for the merge and the good luck wish.\n. I'm looking at the POT.\nNot a showstopper for this PR, but it would be nice if the pot could contain #: source reference comments, indicating where in the sources the enum constant is being referenced. In some cases this could help clarify the meaning of a short string.\n```\n. Translator, please ignore following: ##SUPPORT_ACCESSIBILITY_CHECKS\n```\nHere it's unclear to me whether the comment refers to the ##SUPPORT_ACCESSIBILITY_CHECKS## or to the message as a whole. In the latter case, why are they in here in the first case?\n. Some notes while translating to German.\n- Running script on Gentoo was a pain, since Ruby 2.3 doesn't have bundler available, and most gems are already installed but for other versions of Ruby. Running the script with Ruby 2.0 worked, though.\n- Closely related strings, like STRING_DISCARDED and STRING_REPLACED are not grouped together in the PO file.\n- The were in STRING_ERROR_COUNT works for German, but I imagine French or others might have problems there if there is just one error and zero warnings. Not sure how do plural forms here. Translators may have to fall back to a message which is not a complete sentence.\n- If there are formatting characters inside a text which is expected to be wrapped to 78 characters, it would be nice to know what replacements to expect for these.\nAnd her a list of messages which I could not translate without looking up context first. Perhaps you can add comments to these.\n- STRING_DISCARDING. What exactly gets discarded? Which of the related words skipping, removing, deleting, ignoring would match? Come to think of it, the same holds for the formatted message: you don't know what exactly it applies to.\n- STRING_HELLO_ACCESS. I wonder why the version number is included in this constant here, and not an argument.\n- STRING_HTML_PROPRIETARY. This gets pasted into STRING_CONTENT_LOOKS which is unclear. Important to get the grammar right! The English term looks trange here, too: why looks like HTML Proprietary and not looks like proprietary HTML? If HTML Proprietary is intended as a fixed term, should it be translated at all?\n- STRING_SPECIFIED. This gets pasted into TEXT_VENDOR_CHARS or TEXT_SGML_CHARS. On the one hand it would make sense to make the term \u201ccharacter encoding\u201d part of the string, since for German it would be better to translate \u201cspecified character encoding\u201d as \u201cangegebene Zeichenkodierung\u201d, but \u201cMacRoman character encoding\u201d as \u201cMacRoman-Zeichenkodierung\u201d (with a hyphen) or \u201cZeichenkodierung MacRoman\u201d (with a different word order). On the other hand, the two texts use the term differently, leading to different cases in the translation: \u201cSie sollten die angegebene Zeichenkodierung vermeiden\u201d in TEXT_VENDOR_CHARS but \u201c\u2026 mit dem gleichen Byte-Wert in der angegebenen Zeichenkodierung\u201d in TEXT_SGML_CHARS. I don't have a clean solution here.\nI'm running out of time now, so I'm posting my notes so far even though I'm far from done with the translation.\nOne more note: the following comment at the end of the PO file might be useful for Emacs users, since it establishes the 78 column rule in the message edit window:\n```\nLocal Variables:\nmode: po\neval: (add-hook 'po-subedit-mode-hook '(lambda () (setq fill-column 78)))\nEnd:\n```\n. > I assume I must not alter the 'Source Text', the English [\u2026]. Is this the right idea?\nI'd agree. I'm surprised POEdit lets you do that; Emacs will by default prevent you from doing that. I must confess that with tidy.pot, language_en.h and language_en.po I'm not sure which of them is generated from which. I also just noticed that the paths are a bit confusing: the repo contains src/language_en.h and localize/translations/language_en_gb.po while the steps above (running poconvert.rb msginit) caused the creation of localize/language_de.po.\n\nPOEdit also output a binary language_fr.mo\n\nThat would be relevant if tidy were using the gettext library, which it is not. Just ignore it.\n\nHave not yet got into running the poconvert.rb script, but assume it can only work properly if the original english msgid base is not change... but maybe it does not care? And works on the msgctxt sort of identifier. Please advise.\n\nI'm interested in this point myself. Canonical gettext requires an exact match to apply a translation. If you change one character, you invalidate all existing translations. Which makes sense since that character you changed might have changed the meaning. Translators can run msgmerge to combine a new template with an existing set of translations. Lacking a perfect match, a fuzzy match can be added which will be marked using the fuzzy flag. Usually fuzzy translations are omitted from the installed *.mo files (unles overridden with the --use-fuzzy argument to msgfmt). So the idea is that translators check these fuzzy translations and remove the flag once they are satisfied.\nTo mimic this, poconvert.rb should ensure a perfect match, and should ignore translations marked as fuzzy. I haven't checked whether it does so already. In either case this kind of workflow should be documented.\nThe documentation probably should also advise people on how to test their newly added language. Which in my understanding involves a suitable poconvert.rb msgfmt invocation, combined with two additional lines in language.c (one for the #include and the other for the languages array element). Right?\n\nBut now with the different versions of MinGW I wonder if they all define the same __MINGW32__ macro (why would the 64 bit versions report this?)\n\nBecause it's not a 16-bit version of Windows (like Windows 3.11) but a 32-bit capable version of Windows which comes with a different API. I'd assume you can rely on it, but I'm no expert. Looking at the source, I see that in this 2007 gcc commit, __MINGW64__ was introduced in addition to the existing __MINGW32__. The latter is from 1997. So I'd say that's a pretty reliable macro. I'm less certain about the __mingw_printf symbol, which presumably comes from the MinGW runtime library.\n\nIt may be easier to convince the whole world to speak English (negating the need for localization) than to implement a standard POSIX printf on Windows!\n\nExactly this kind of trouble is the reason gnulib tries to solve.\n. > Actually given that it's console output, the right thing to do would be to remove all of the newlines completely, and let the console application handle line wrapping.\nI'm of two minds about this. On the one hand you're perfectly right, that would be the decent thing to do to adjust to arbitrary terminal widths. On the other hand, getting this right might be very tricky. You can't simply count bytes and look for the last space no later than column 78. You might have UTF sequences using multiple bytes per codepoint. You might have combining marks so you have multiple codepoints per grapheme. You might have double-width symbols in some ideographic language. You might have a language which doesn't use spaces between words. And you might have to use libraries like curses to correctly talk to the terminal to query its size. So while this would be nice to have, I'd definitely postpone it till the main feature has landed. Personally, I'm using my large screen for multiple terminal windows of 80 columns each, so I'm particularly happy with the current constraints.\n\nHowever many strings aren't limited to 78 characters; will this have an undesired effect for emacs users?\n\nNo, (re)wrapping the text is a manual operation (pressing Alt+Q), which can simply be omitted for texts which don't have to be wrapped.\n. Yes, ICU would be my bet as well for a library handling this. It can detect grapheme boundaries as well, which should help measure the width of the text. Keep in mind for later reference.\n. I don't think there is anything in any of the C specifications which says anything about a BOM at the beginning of an UTF-8 encoded file. Since you already have the translation between PO and H files, I repeat my suggestion from https://github.com/htacg/tidy-html5/pull/328#issuecomment-168986240: Write the H files using hexadecimal escapes. That way you know what bytes you'll have in the executable, no matter the compiler, its configuration or the build environment. Though other approaches may work, I doubt you'll find any guarantees, so you'd end up with a positive list of supported compilers, with everything else unsupported unless proven otherwise.\n. In the has-unicode package for node, I recently read this:\n\nRecent Win32 platforms (>XP) CAN support unicode in the console but don't have to, and in non-english locales often use traditional local code pages. There's no way, short of windows system calls or execing the chcp command line program to figure this out.\n\nDo you want to support Windows XP? Do you want to work out the required system calls and perform the code page switch?\nLooking around a bit further related to this, I found this question on Stack Overflow which also mentions a difference between cmd and Notepad++. One answer there says:\n\nUTF-8 should be achievable with chcp 65001, but there are some nasty low-level bugs in the Microsoft C Runtime for this code page, which makes some apps unreliable and some not run at all.\nSo yeah, I'm sorry, but UTF-8 is a second-class citizen under Windows. Anything that uses the 'ANSI' interfaces for IO, including anything that uses the C standard IO library, including the Command Prompt, won't be able to cope with it properly.\nThe only reliable way to get Unicode output in Command Prompt is to use the Windows-specific WriteConsoleW interface to push Unicode strings directly.\n\nThis answer to a similar question takes the same stance: UTF-8 and stdio on windows is broken; use WriteConsoleW if you know output is not redirected.\n. > legible source code is valuable (although the PO file is fairly legible, so there's that).\nI'd not see the headers as source, just as generated files which are committed to repo for convenience. Much like configure scripts, config.h.in and all that stuff in an autotooled package. You could even drop them from the repo and just include them in release tarballs. The PO files are the actual sources, imho.\n\nI should generate two sets of headers, and use the ugly escaped ones for MSVC builds only!\n\nThat just adds to the confusion, since now you have three files defining each language, which might get out of sync in even more bizarre ways.\n. I could conditionally use WriteConsoleW in the console app if it becomes necessary.\nThis answer quoting this blog post suggests\nc\n_setmode(_fileno(stdout), _O_U16TEXT);\nfollowed by UTF-16 output via std::wcout or wprintf. There should be a matching _O_U8TEXT, but that might be just as broken as CP 65001 handling reportedly is. So I'd suggest trying _O_U8TEXT first. If it works, we can probably use the same code for both output to console and output to file. If not, we may have to distinguish between output to file and output to console, and use UTF-16 for the latter. The blog referenced above quotes a description for detecting redirected stdout using GetStdHandle, GetFileType and GetConsoleMode. If that fails as well, WriteConsoleW might still be used in the console branch of this.\n. > - Using hexadecimal escapes doesn't work cross platform given the same source code. Clang on Mac OS X complains about invalid characters. GCC on Windows and Linux produce different results. It's as if each platform is interpreting the hex as its current locale, and that's a non-starter. There's no reason for Tidy to be converting character sets given a perfectly good UTF8 source.\nI very much doubt it's interpreted according to current locale. It's more likely that compilers have different ideas about how many consecutive hex digits belong to the escape sequence. While things like \\xabc might be seen as byte 0xAB followed by character 'c' on some systems, others might interpret this as 0xABC which is out of range for char. Clang on OS X will give me an error: hex escape sequence out of range message for that. If that's what you got, then #358 should take care of this.\n. See http://sourceforge.net/p/mingw/mingw-org-wsl/ci/master/tree/src/libcrt/stdio/ and http://sourceforge.net/p/mingw/mingw-org-wsl/ci/master/tree/src/libcrt/include/pformat.h for the MinGW runtime implementation of these functions. These files seem to be in place since 2012.\n. Thanks for the detailed explanation, @geoffmcl. If I find the time, I'll suggest some changes to wording to the VERSIONS.md and website repo. In particular I'd put more emphasis on the even/odd numbering style, since that concept is rather common but not self-evident. It's not consistent with the website naming 5.1.25 as latest release, either.\nIf you wanted to, you could let git do the incemental version numbering on development versions. Do a git tag -a 5.3 at the beginning of the 5.3 series and then you can use git describe --always | sed 's/-\\(.*\\)-g.*/.\\1/' to generate a version number and date -r $(git cat-file -p HEAD | awk '/^committer/{print $5; exit}') +%Y/%m/%d to generate a date for it. This would avoid one commit per merge. Not sure whether that's desirable for you. The patch level increments might be by more than 1, though, since describe counts commits, not merges.\nYou could generate Linux binaries using Docker. Despite the fact that it's using complicated virtualization machinery in the background, setting up and accessing Docker from Mac (and presumably Windows as well) isn't too difficult.\n. > I still do not really see any additional benefit?\nThe main benefit of an annotated tag is that you not only know that a given name refers to a given commit, but also who established that relationship, and when. All the best practice guides I read suggest using lightweight tags for personal bookmarks, and annotated tags for anything you'd want to share.\nPersonally, I also try to use the annotation text to summarize the changes since the last release, so that the annotation texts can serve as a change log that is easier and faster to read than a full history of commits. But that's a matter of taste, and you don't have to provide any description with your tag annotations if you don't want to. Just say \u201cRelease x.y.z\u201d as the message and that's fine.\nSee also Stack Overflow: Why should I care about lightweight vs. annotated tags?\n\nAnd I do not see the use of $ git describe ... for anything...\n\nWorkflow I used today: go to my node-libtidy source directory. Go to the tidy-html5 subdirectory thereof, which is a git submodule. Do a git fetch origin to get the latest commits. Do a git decribe and read the output as 4.9.28-236-gf567088. Start scratching my head: why the hell did I pick that particular commit when I started the project? Have there really been 236 commits without a release? Doing the same in my libxmljs fork would give me the libxml version, as a plain version number.\nAnother use case is as the version field reported by some library. I'm using it like this in a project called CindyJS. That's essentially what I suggested for automatic version numbering here as well. There I also have a flag indicating that the source tree has been modified since the commit. So I know that if the commit is from my repo and doesn't carry that flag, then it's equivalent to an official snapshot. Otherwise the user is tinkering with stuff, and I might take that into account when analysing problems.\n\nFirst I have two linux boxes...\n\nI had assumed that to be the main problem here, thanks for the clarification.\nStill, Docker allows you to quickly switch between different versions and distributions of Linux, or more specifically, of the Linux user land. (Linux the kernel is always that of the host system.) That way, you can build and test your package on different versions of Ubuntu, Debian, Fedora, CentOS and whatever else you can think of, and even run distribution-provided testing tools on them to check for possible complaints.\nYou'd probably still run CMake/CPack, but you'd be doing so inside Docker, in an environment which resembles what the package will finally get installed into. That makes sure that it's linking against the right version of all the libraries. It will also check you're only using those libraries installed inside the docker, not anything you might have lying around on your dev machine and forget to declare as a dependency.\n. VERSION.md currently writes\n\nThe actual versioning of the library more or less follows the Semantic Versioning style.\n\nI don't see how that would fit in with the even/odd versioning scheme. The way I see it, once you have 5.2.0 released, semver would mandate subsequent development to be published as 5.3.0-pre.1 then 5.3.0-pre.2 and so on. (You may use and other prerelease identifier instead of pre.) That way, your non-release versions would be identified as such, and your API changes would fall under the semver item 9:\n\nA pre-release version indicates that the version is unstable and might not satisfy the intended compatibility requirements as denoted by its associated normal version.\n\nSo you wouldn't have to worry about whether a change during development broke API; it would be enough to make sure to bump the correct amount once it's time for a release. So which shall it be, even/odd versioning or semantic versioning? Given the choice, I'd opt for the latter, but it's your call.\n. > Why does tidy use an opaque structure? It does stop libtidy users messing with that structure... But is that needed?\nI'd say yes. It's easy to choose new function names for the public API by appending some number, but changing the representation of data structures is much harder unless you can control all access to said data structures.\n\nAnd then you have to also ask about the TY_(function)( params ) macro. Why \u2018hide\u2019 these functions? Some are static, but some are public\u2026\n\nNot including the functions in the public header would be enough to prevent people from messing with them. But there might still be unintentional function name conflics with other libraries. As the header comment says. In C++ this would be solved using namespaces, in C you have to do namespaces yourself, and the TY_ macro makes the sources somewhat shorter than spelling out all those names. This should not be needed for static functions. And in general it would be a good idea to at some point introduce a linker script to hide all those symbols from the dynamic library on *nix systems, just the way they are hidden on Windows by default. But that's a different issue.\n\nAs you point out, a few minor changes could expose everything, but do we want that? At this time? To what gain?\n\nNo, I'd definitely not expose any additional internals unless there is good reason to. And even then I'd rather add new methods than exposing the structures themselves. So this question is really just about the internal representation, and would not touch the public API. It wouldn't even require a version bump.\nMy main motivation for this question is because I'd like to add another opaque type, to represent errors (with code, arguments, the possibility of querying argument types, string representations, position information and so on), so that a fourth message filter could hopefully be the last since all future extensions could be extensions to the error object without touching the signature of the callback function. And I'd like to write this without unneccessary type casting overhead. (The va_list argument is nice for vprintf-style C functions, but ill suited when presenting the arguments to e.g. JavaScript as I'd like to do in node-libtidy. And conversion needs more information than any single error handler can currently provide.)\n\nBut I suppose, at present a documented API that gives you, to varying degrees, access to the structure, through API functions is what tidy presently does, in a C++ way, and that works too...\n\nI don't see anything C++ about this, unless you refer to the general concept of encapsulation. But yes, what tidy does works well, my point is just that it could be written more easily in the internal code without affecting behavior.\n. @balthisar: The API I had in mind was something like this:\n```c\n// Callback interface, similar to existing filters\nstruct _TidyErrorImpl; // incomplete type\ntypedef struct _TidyErrorImpl TidyError; // opaque pointer\ntypedef Bool (TIDY_CALL TidyReportFilter4)( TidyError error ); // callback function\nBool TIDY_CALL tidySetReportFilter4( TidyDoc tdoc, TidyReportFilter4 filt ); // registration\n// Query interface, based on TidyError and therefore extensible\nTidyDoc tidyErrorGetDoc( TidyError error );\nTidyReportLevel tidyErrorGetLevel( TidyError error );\nuint tidyErrorGetLine( TidyError error );\nuint tidyErrorGetColumn( TidyError error );\nctmbstr tidyErrorGetCode( TidyError error );\nuint tidyErrorGetArgumentCount( TidyError error );\nTidyOptionType tidyErrorGetArgumentType( TidyError error, uint index ); // or other type\nctmbstr tidyErrorGetStringArgument( TidyError error, uint index ); // auto-coerces other types\nulong tidyErrorGetUintArgument( TidyError error, uint index ); // or signed?\nctmbstr tidyErrorGetMessageTemplateEnglish( TidyError error );\nctmbstr tidyErrorGetMessageTemplateLocal( TidyError error );\nctmbstr tidyErrorFormatMessage( TidyError error, ctmbstr format );\n```\nThe idea is that you would have that single opaque error object, and then an extensible bunch of API functions to query its data. If we add more data, we add more functions, but don't touch existing code. It would be important to communicate that all the query functions are only valid when called from the TidyReportFilter4 callback. Storing a TidyError for later processing is invalid. We might want to enforce this by clearing the data structure after the callback returned.\nWhile the va_list concept is nice in the C world of things, it is poorly suited to other languages, e.g. the JavaScript I'm dealing with. With the API outlined above, I could iterate over the arguments one at a time, without having to parse the template string myself. I could extract all arguments of known types and translate them into their JavaScript equivalent, and I could fall back to string representation for unknown types to future-proof my code. Then the user of my JavaScript library could use these arguments to do whatever they like.\nActually you could use the type casts used by libtidy instead of the incomplete type I was requesting here. So the two concepts do not strongly depend on one another. While I still maintain that doing opaque types my way would be preferable, feel free to use a Tidy-like renamed type instead of my incomplete type when implementing something like the above.. In #409 I suggested what I did here, and your reply didn't indicate any pressing reason against this, so I went forward and coded the changes to make further discussion more specific.\nThis does not address an existing bug. It does not add a new feature. It is about maintainability. In my opinion, the change addresses the following issues:\n1. Converting between external and internal types adds noise: additional function calls, additional variables, for what's essentially a no-op at the level of compiled code. 194 lines less code means 194 lines less to understand and maintain, so things become simpler.\n2. Having different names for external and internal types can make you forget how they relate, while having the same names throughout helps users who know the public API to become contributors who enhance the internal API.\n3. The type conversion macros did cast to the target type, without verifying the source type. Therefore, the compiler wouldn't issue a warning if you happened to pass in an inappropriate pointer into one of these conversion macros. (The conversion functions don't have this problem, but those were NEVER used.)\n4. ~~I'm no expert on this, but the fact that the opaque structures had some dummy definition might make them run afoul of some strict pointer aliasing rules. While I can't think of a piece of code where actual aliasing would occur, the compiler makes no guarantees so we might end up with undefined behavior. This would be a real bug, so perhaps there is a bug to be fixed after all.~~\n5. Many other projects use pointers to incomplete structures in their public API. The fact that Tidy does something more elaborate made me (and may make others) wonder as to the reason for that added complexity, while apparently there is none.\n6. Having equal types means that it's easier to promote a previously internal function to public API without having to change its signature.\nI did write this in a separate branch. Namely the one from which I'm proposing the merge. Feel free to test it from there. Feel free to discuss it here. If you need help setting up an additional git remote, I'll be glad to provide details. If you want things in the htacg repository, you'll have to duplicate the branch there, since I can only issue pull requests for existing branches.\nI don't want you to merge this branch just because you trust me. Test and discuss as you see fit, ask questions, suggest changes. When you are satisfied, and convinced that this adds value, then merge this pull request. Since the change touches large portions of the code, I'll likely have to rebase it before you can merge it. But I'd like to do so only once, when you think it's ready for merging. I won't track every master commit here.\nMost of the changes are indeed search and replace. And search and delete in the case of the conversion macro invocations. So let me direct your attention to the less trivial aspects.\n1. The opaque_type macro in tidyplatform.h is now without definition, leading to an incomplete declaration. You can have pointers of those, but no other access to the structures.\n2. The corresponding definitions in lexer.h and tidy-int.h now add a definition to the structure already declared in tidy.h.\n3. In forward.h the declarations for the internal structures TidyDocImpl, AttVal and Node are gone.\n4. The conversion macros in tidy-int.h and conversion functions in tidylib.c are gone.\nThat's the actual core of the change, the rest is just a consequence of that.\n. I found some useful information on the strict aliasing rules. According to that, neither the old nor the new style of handling opaque types should be a problem, as long as noone attempts to access the (dummy) contents of the opaque type (i.e. dereferences the pointer). The only possible problem might come from alignment constraints.\nOn the other hand, some of the TidyIterator handling is likely relying on undefined behavior because conversion between integers and pointers isn't officially supported. But my change here doesn't improve that aspect; that would be a different issue.\n. > [\u2026] which I versioned 5.3.1-exposed\nI'd consider that a misnomer, since it's not exposing any more than before.\n\nWhile this PR has the diffs, a total diff I am reviewing is here - http:/geoffair.org/tmp/gagern.diff\n\nThat diff appears to be equivalent to what we have here in the \u201cFiles changed\u201d tab, apart from end-of-line convention and path separator character following Windows. So I don't see the point of the distinction.\n\nJust to make sure we are on the same page, what I see is essentially what you have done is made a TidyDoc doc usable in external and internal code!\n\nYes.\n\nThat seems to defeat some of the idea of a tidy defined opaque type, but ok, I understand you are offering an alternative, that also works somewhat simularly?\n\nThe data structures are opaque to the outside and transparent to the inside, both before and after my change. Previous code achieves the distinction by type casts, my code by incomplete types.\n\nJust to put it in, hopefully, simple terms [\u2026]. So if we agree that is the discussion here [\u2026]\n\nI think we agree.\n1. > > Converting between external and internal types adds noise: additional function calls, additional variables, for what's essentially a no-op at the level of compiled code. 194 lines less code means 194 lines less to understand and maintain, so things become simpler.\n\nYes, if your calculations are correct we could save a few hundred instructions, which are just stack a = b;... But I do not think it really effects readbility to an exterienced programmer, or code maintainability overall... No.\n\nI agree that performance is not an issue at this stage. Perhaps even the assignment you mention could be optimized away by compilers.\nThings might be a bit different if we use this simplification to remove redundant code in a future commit. For example, the public tidySaveFile is now (with the casts gone away) a simple forwarding to the private tidyDocSaveFile. We could just use the name of the former and the code of the latter to get rid of one function to maintain, and one function call on the call stack and performance bill. And there are several such forwarding functions. If you consider these savings relevant, I can add a commit to get rid of these as well.\n2. > > Having different names for external and internal types can make you forget how they relate, while having the same names throughout helps users who know the public API to become contributors who enhance the internal API.\n\nIt could help new programmers, in that it is a tiny tidy code learning step. But once known, understood, is no problem... Yes.\n3. > > The type conversion macros did cast to the target type, without verifying the source type. Therefore, the compiler wouldn't issue a warning if you happened to pass in an inappropriate pointer into one of these conversion macros. (The conversion functions don't have this problem, but those were NEVER used.)\nIf a coder happened to pass in an inappropriate pointer into the API, they should suffer the consequence of that error, which will not always be flagged by every compiler/linker, what ever we do, so can not see how this improves that... No.\n\nIt's not an external user passing code to our API, but more about internal code. You are of course right that using wrong pointers should lead to broken runtime behavior, and that properly tested code should catch those in time. But personally I like the fact that a C compiler can detect many trivial mistakes before I even start testing code. Perhaps a matter of taste. Although seeing the state of affairs with respect to the tidyhtml test suite, I'd consider any help we can get pointing out mistakes to be a valuable one.\n4. Strict aliasing should not be an issue, as I wrote.\n5. > > Many other projects use pointers to incomplete structures in their public API. The fact that Tidy does something more elaborate made me (and may make others) wonder as to the reason for that added complexity, while apparently there is none.\n\nHow other projects do this is their business... the tidy creators constructed their own maco... why are we now choosing to abandon this? for simplicity? If it is wrong fix it, otherwise leave it alone... open\n\nFor simplicity, yes. To lower the burden for potential contributors. With my strict aliasing concerns dispelled, the existing code is not wrong, just not very idiomatic either.\n6. > > Having equal types means that it's easier to promote a previously internal function to public API without having to change its signature.\n\n... easier to promote an internal service to the API? Yes, since with this change all internal library functions become very close to public, just not yet in tidy.h, ie not published... open...\n\nRight. Which doesn't mean one should make functions public without due consideration, but after that consideration things become easier.\n\nI [\u2026] wonder why we should change something that was put there by the tidy founders, that works...\n\nI wonder why the founders wrote it that way in the first place. It seems as though they didn't like to declare structures without defining them. Even the dummy structures used for the current opaque types come with a bogus definition. Perhaps there were some compilers not capable of properly handling such constructs back when the project started? I don't know, but I'm rather sure that these concepts are well-supported these days, and have been for quite some time.\n\nI hope you will apply the same enthusiam and efforts to fixing some other tidy issues...\n\nI tend to address issues that affect me. I wanted to tidy HTML in Node, so I started the node-libtidy project. I see that it has some problems with how arguments are handled in error reporting, and would like to address those concerns by introducing a new opaque type. And I'd have preferred to do so my way, i.e. using an incomplete type in the public API. But I guess I'll rather stay with the style currently in use, and not wait on this issue here since I don't see this here getting accepted any time soon.\n. How about backporting the bug fixes (as opposed to new features) from the current master to some 4.2 branch in order to create a 4.2.1?. ",
    "alvestrand": "Pardon, but I have a hard time following ... where are the tests that one can run at the moment?\nI wish to contribute some bug reports, but first I'd like to test that my setup passes the current set of tests, whatever they are.....\n. ",
    "extractachris": "Sorry, this is not a result of Tidy HTML, but another script.\n. ",
    "thlinard": "Option output-xml enabled:\n<!DOCTYPE html>\n<html>\n<head>\n  <title></title>\n</head>\n<body>\n  <p>It'<a href=\"\">(<span>s</span>)</a></p>\n</body>\n</html>\nOutput (2 spaces added in the rendered text):\n<!DOCTYPE html>\n<html>\n  <head>\n    <title></title>\n  </head>\n  <body>\n    <p>It'\n    <a href=\"\">(\n    <span>s</span>)</a></p>\n  </body>\n</html>\n. Output-xml: yes\nTidy version: v5.1.25\n. In fact, I don't remember why I use this particular option, but it has never caused any problem with former Tidy. I realized the issue using an old set of options with the new Tidy.\nBut if this is the true intended behavior, you can close this issue.\n. It outputs the same? Strange... not in my memory, but I could be wrong.\n. <!DOCTYPE html>\n<html>\n<head>\n  <title></title>\n</head>\n<body>\n  <table>\n    <tbody>\n      <tr>\n        <td><meta itemprop=\"startDate\" content=\"2015-12-21T15:00\" /> <meta itemprop=\"endDate\" content=\"2015-12-23T17:00\" /></td>\n      </tr>\n    </tbody>\n  </table>\n</body>\n</html>\nOutput:\n```\n<!DOCTYPE html>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n```\n. ",
    "spookyahell": "All I can say,  is that I experience the same problem. And I can give you a good reason for using output-xml. I use tidy to convert HTML to XML , so it can be properly processed by MSXML / an XML parser.\n. I would also think that  \"--markup no\" option would solve that, but tidy won't accept it.\n. Okay, here's what I do as an example:\nI take a source code like this one\nHTML-Source on Pastebin\nThen call tidy -asxml UptoboxFolder.html > UptoboxFolder.xml, which basicly is tidy -asxml UptoboxFolder.html printed to a file.\nAs a result I get this: XML-Source on Pastebin\nWhat particularly bothers me is:\n<td><a href=\"http://uptobox.com/1u5lawwjiai1\" class=\"grey_link\">The\nBig Bang Theory - The Platonic Permutation (Clips).zip</a></td> (Lines 448 and 449). The Text \n\"The\nBig Bang Theory - The Platonic Permutation (Clips).zip\" is on multiple lines.\nIf that wouldn't happen, I wouldn't be complaining.\nI can't devote all my time into this, so it could be that I am misunderstanding the way tidy works somewhere and just haven't found out jet.\nI hope this helps understanding the problem I'm having better now.\nBTW, I use the latest tidy (5.1.25).\n. ",
    "AnWeber": "@geoffmcl my prefered solution is using 1 tab = indent-spaces\nfollowing use cases are possible\n- always 1 tab\n```\n\n\n<longtagname aaa=\"foo2\"\n    bbb=\"bar\"></longtagname>\n\n<div aaa=\"foo3\"\n    bbb=\"bar\">\n    <longtagname aaa=\"foo4\"\n        bbb=\"bar\">\n        <div aaa=\"foo5\"\n            bbb=\"bar\">\n    </longtagname>\n</div>\n\n\n```\nthe indention of attributes of foo3 and tag foo4 are the same. not nice, but acceptable.\n- dynamic tab by using getSpaces() / magic value (in example 2).\n```\n\n\n<longtagname aaa=\"foo2\"\n                            bbb=\"bar\"></longtagname>\n\n<div aaa=\"foo3\"\n            bbb=\"bar\">\n    <longtagname aaa=\"foo4\"\n                                bbb=\"bar\">\n        <div aaa=\"foo5\"\n            bbb=\"bar\">\n    </longtagname>\n</div>\n\n\n```\non long tag names getSpaces() results with more spaces. the attributes of foo1 and foo2 will get not the same indention level. not nice.\nthe attribute of foo4 gets a more indented than the next tag foo5. the indent of foo5 could be corrected to use the same count like attributes of foo4, but a complete document will look really choppy.\nin my opinion the cleanest solution is using only 1 tab.\n. Thanks for the information. It is fine for me. I switched from using tabs\nto spaces. So this feature has no top priority from my side.\nGeoff McLane notifications@github.com schrieb am Do., 24. M\u00e4rz 2016 19:26:\n\n@AnWeber https://github.com/AnWeber I have no particular problem with\nthe stop-gap method of always just using 1 tab, but nobody has stepped\nforward to make this change, so am moving the milestone to 5.3.\nWe are considering a release 5.2 shortly, and it is unlikely to be\naddressed and tested before then...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/335#issuecomment-200960249\n. \n",
    "gaa-cifasis": "\n@gaa-cifasis, Gustavo, thank you for the detailed reports, with version, ASAN, gdb, and the sample page... this is great...\n\nYou are welcome!\n\nBut unfortunately I can NOT reproduce the problem, using the use-after-free.html page, in Ubuntu 14.04 linux, nor in Windows 7, both 64-bits...\nAnd that github attachment seems a very messed up page?? Did something happen with the cut/paste/drop???\n\nIf you want a quick check of this issue without recompiling with ASAN support, compile a tidy binary (disable the debug flag just in case) and use valgrind to run the test case:\n$ valgrind tidy use-after-free.html\nI'm using a 32-bit version of Ubuntu 14.04, but this is unlikely related with this issue. Btw, i had to upload the html webpage to a private Gist, otherwise Github won't let me attach it here. It should be fine, despite it looks corrupted (it was discovered by afl)\n\nBut I found perhaps the original page here, but still no problem found running either Tidy version 5.1.25, nor later versions, so can do nothing... I will keep trying this... experimenting...\n\nLet me know you can see some invalid memory read, and we can try more complicated stuff later..\n. My thoughts on this issue: tidy should handle any type of input without unsafe memory operations (even broken/binary files) and it's ok to abort in any case to avoid this type of bugs.\nBtw, in order to re-compile with ASAN support, you can check this tutorial. Since tidy is using cmake to compile, you should check the cmake manual to add gcc/g++ flags to a build.\nLet me know if you need anything else.\n. Great work!, it is nice to see that this nasty bug can be isolated.\n. Also, another test case but with a different callstack is available here. In the unlikely case of a different bug, let me know, and i will create another bug report.\n. Hi,\nI can confirm that the branch issue-341 is not failing in any way with the files generated with AFL. I haven't re-tested from the beginning looking for new bugs but this issue seems to be fixed afaik. Great work @geoffmcl !\n. Hi,\nYou can find a test case of an infinite loop to reproduce in the last revision here. \n. ",
    "monsieurp": "Hi gents, Gentoo dev chiming in. We filed a report due to this issue in our bug tracking system: https://bugs.gentoo.org/show_bug.cgi?id=571872. Is there an ETA as to when this is meant to be solved? Just asking, if it takes ages, no worries. Cheers.\n. ",
    "lifeforms": "I agree with @mjbshaw. This library parses potentially untrusted (and subversive) inputs, a use-after-free might lead to remote code execution and is a high priority issue.\nIt's not a shame to abort on unreasonable inputs if the condition can be detected.\n. ",
    "serjepatoff": "Thank you very much Geoff. And sorry for absence. We had no time to test the fixes because of tight schedule of our product release, so we lived with stable 4.9.10 until now. Now we have a little time and I'm starting to test new Tidy.\n. I've just integrated 5.1.36issue-373(9cf97d5), checked up many samples and everything became OK, except for one html where tidying breaks table layout. \nreport2.zip\n. Geoff, there is no mistake in doc1_before.html\nIt is real-world case found \"in the wild\".\nUnfortunately some content makers (especially e-mail html template designers) do not respect rules and standards, abusing web-engines as much as they can.\nAs far as I can guess, it is 1x1 pseudo image used to track html email opening.\n. #And yes something is wrong with the second?\nYes, bottom part of table falls out of bounds.\n\n\n. ",
    "sataris": "@geoffmcl  I believe the md5sum error is fixed from CMake 3.3+\n. ",
    "zcorpan": "Leading and trailing space characters are allowed around URLs and will be trimmed by the browser. So leaving it alone is OK. But trimming in Tidy seems OK also.\n. Commented on the diff at https://github.com/htacg/tidy-html5/commit/7d0d8a853a01004572d27e47b5c1146361816271#commitcomment-15815434\n. > https://www.w3.org/TR/html-markup/script.html (definition of script element)\nThis is not the HTML spec. Don't read this.\nSee https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements\n\nWhat about a simple document.write('<p>para</p>');?\n\nTidy does this because it was invalid SGML back in the pre-HTML5 days when the people writing HTML specs pretended that HTML was an application of SGML. But that is not relevant anymore, and there's no point in escaping the above.\nIt is relevant to escape <!--, </script, etc., but since browsers parse scripts exactly the same now, it seems to me it's not really necessary for Tidy to change the contents of scripts at all. Without knowledge of the JS syntax, it seems to me it can't do a good job of escaping the problematic strings.\n. I thought this was tidy-html5, not tidy-html4? Also see my earlier comment above...\n. I would recommend implementing, or using an implementation of, https://url.spec.whatwg.org/ to fix this properly, since characters need different treatment in different parts of a URL. And some strings don't resolve at all, like e.g. http://[, where it's unclear what Tidy should do with (maybe just leave it alone and log an error).\n. That code you quoted is an implementation of https://url.spec.whatwg.org/#url-code-points\nMy recommendation above still stands. :-). https://github.com/w3c/web-platform-tests/blob/master/url/urltestdata.json has some good tests. The ones with \"failure\": true means they should fail to parse as a URL (so should all have a warning or error, but might not be possible to do any fixup).. The tests without \"failure\": true may or may not be valid; these tests are intended to test conformance for parsers, not for validators or fixup-ers. (But it would be possible to add a new field to carry data on validation error positions.)\nTechnically it's not necessary to parse a URL into a URL record to determine if it's valid. https://url.spec.whatwg.org/#url-writing has rules for what constitutes a valid URL -- \"URL code points\", which the above PR kinda follows, is but one part of it.. ",
    "josephgrossberg": "(I know it means \"End of File\".) \n. Oh no worries. To be honest, that was as much a matter of me being uptight, as solving a real problem! :smile:  Thanks for bringing HTML Tidy back; when I read that, first thing I wanted to do was hop on over to github and find some piece of code I could contribute, to keep the momentum going. :+1: \n. Same; revert if you want. I'm just happy that HTML tidy is back!\nI saw this today:\n\nThere are websites that need saving! :smile: \n. @BrisingrAerowing OMG that nesting haha! Not my project, thankfully -- a screenshot of a political site's HTML source. :relaxed: phew\n. ",
    "BrisingrAerowing": "@josephgrossberg Your 'code' reminds me of this gem.\n. ",
    "ncouture": "To answer your question I have two comments and one question:\n- URLs are clearer when they do NOT contain encoded characters\n- Valid HTML is better than non-valid HTML\nWhy are characters like \"pipe\" classified as invalid for use in HREF elements???\n. The problem seems to be in a modification I have brought to the code -- I am unable to reproduce with the master branch.\n``` diff\ndiff --git a/console/tidy.c b/console/tidy.c\nindex bb9e823..038eb9a 100644\n--- a/console/tidy.c\n+++ b/console/tidy.c\n@@ -964,8 +964,7 @@ static void optionvalues( TidyDoc tdoc )\n static void version( void )\n {\n #ifdef PLATFORM_NAME\n-    printf( \"HTML Tidy for %s version %s\\n\",\n-             PLATFORM_NAME, tidyLibraryVersion() );\n+    printf( \"My generator name\\n\");\n #else\n     printf( \"HTML Tidy version %s\\n\", tidyLibraryVersion() );\n #endif\ndiff --git a/src/lexer.c b/src/lexer.c\nindex ace9452..3bab81d 100644\n--- a/src/lexer.c\n+++ b/src/lexer.c\n@@ -1544,12 +1544,7 @@ Bool TY_(AddGenerator)( TidyDocImpl* doc )\n if (head)\n {\n\n-#ifdef PLATFORM_NAME\n-        TY_(tmbsnprintf)(buf, sizeof(buf), \"HTML Tidy for HTML5 for \"PLATFORM_NAME\" version %s\",\n-                         tidyLibraryVersion());\n-#else\n-        TY_(tmbsnprintf)(buf, sizeof(buf), \"HTML Tidy for HTML5 version %s\", tidyLibraryVersion());\n-#endif\n+        TY_(tmbsnprintf)(buf, sizeof(buf), \"My generator name\");\n     for ( node = head->content; node; node = node->next )\n     {\n\n```\n. ",
    "danielhjames": "Hi @geoffmcl @mcandre \npbuilder-dist takes quite a lot of setup and you may not need it. It is only necessary to use pbuilder-dist for a clean chroot build, like when making packages for distribution.\nAll you really need for a local test is the orig.tar.gz and the debian directory from the above git repo.\nYou can omit the -S option on dpkg-buildpackage (which means create a source package only) and you will get installable .deb packages built for the host distro.\n. tidy-html5 is now in the New queue for acceptance into Debian: https://ftp-master.debian.org/new.html\n. Hi Adam, this is an update of the current tidy package. The reason that the source package name changed is because it changed upstream, so it has to go into Debian's New queue. Also, the name of the libtidy package changed because the shared object filename now has a 5.x suffix, currently /usr/lib/libtidy.so.5.2.0. In the libtidy5 debian/control file we have...\nReplaces: libtidy-0.99-0, libtidy0\n. Hi Adam, thanks for the offer of help, do you use collab-maint?\nI removed README.source as you are right, it is from the old package. Please see the last commit on http://anonscm.debian.org/cgit/collab-maint/tidy.git/\nlibtidy-0.99-0 had a Conflicts: on libtidy0 and I don't think libytidy0 has been in Debian since the year 2005 (according to the changelog) so I guess there is not much chance of libtidy5 and libtidy0 co-existing. Supposing we had libtidy5 co-existing with the also very old libtidy-0.99-0 (from the year 2009), wouldn't that mean having two versions of the same library, but only one supported upstream?\nAlso, I recall the libtidy-dev package provides a symlink for the library, wouldn't that conflict?\nCheers!\nDaniel\n. Hi @AdamMajer, hi @geoffmcl, the official Debian tidy maintainer has not been active with this package for some years, which is why I offered to help prepare this new set of packages.\nThe symlink:\nlibtidy.so -> libtidy.so.5\nis provided only in the new libtidy-dev package, for people building their own apps against Debian's package of libtidy5. This is because regular Debian packages should get rebuilt against the libtidy5 package, against the symlink libtidy.so.5\nThis symlink points to the actual installed library, which is libtidy.so.5.2.0 for this particular release.\nThe next step is that when the new package gets checked in Debian's NEW queue, it will either be accepted, or we will fix it up until it is accepted. This can take a while, but new uploads should be quicker after that.\nCheers!\nDaniel\n. Hi Adam, that's a good result, thanks. Will collab-maint be used in future?\n. Hi @AdamMajer, we have been aware of https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=655200 since at least 2013. I emailed Jason via this bug report in March 2015 offering help, and he was emailed again by Geoff in January 2016, with no response. As a volunteer, I do appreciate that time is not always available to respond, so that's not a criticism.\nYour assistance with compat headers would be very welcome, please take a look at http://anonscm.debian.org/cgit/collab-maint/tidy.git/\nIn my version of the package, the tidy binary is dynamically linked to libtidy.so.5 but the static version is also included for users that need it.\nI dropped the tidy-doc package as the upstream source no longer seems to build any docs other than the man page, although there are some Markdown files in the README directory of the upstream source which could potentially be included in a new tidy-doc package. The man page was included in the new tidy package, of course.\n. Hi @AdamMajer, thanks for the patch! I'll wait to hear if Jason is pushing his package update, or is willing to work with collab-maint, before pushing further changes. Thanks also for the explanation about what happened to the docs.\n. Thanks @LudovicRousseau I hope that the upstream developers could explain further about the copyright.\nWe have one serious bug https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=827716 which I somehow overlooked. I am away from my development machine this week but could fix it after that, it's a one-liner.\nAlso there are some bug tickets against the old package which could be tested and closed if someone would like to take a look at them: https://bugs.debian.org/cgi-bin/pkgreport.cgi?archive=0;ordering=normal;repeatmerged=0;src=tidy-html5\n. Hi @jasonethomas good to see you on here! I would strongly recommend that you take a look at https://anonscm.debian.org/cgit/collab-maint/tidy.git/ as a lot of work has been done there already.\n@LudovicRousseau there are of course some bugs flushed out by the new upload but the fixes seem straightforward. We can help with the library migration by fixing https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=827891 which I am working on today.\n. Hi @LudovicRousseau I have pushed a bunch of fixes to collab-maint today which fix the serious bugs on my test system. Please roll a 1:5.2.0-2 package when you are ready.\n. Hi @LudovicRousseau that seems like a reasonable solution since the git repo name now matches the source package. It's a pity that no-one emailed me before setting up a duplicate repo, but the important thing is that the new version of tidy is now in Debian and several people wish to help maintain it.\n. Thanks @jasonethomas ! I had wanted to use the version of the man page built from the source, but could not figure out the path to it.\nOther Debian Developers have set up a separate collab-maint project at http://anonscm.debian.org/cgit/collab-maint/tidy-html5.git/ which I'm also using now, so I will sync your changes there. Then to avoid confusion I think we should take the original project down.\nWould you like to be listed as the Maintainer: in debian/control again?\n. Hi @jasonethomas I have prepared a 1:5.2.0-2 release in http://anonscm.debian.org/cgit/collab-maint/tidy-html5.git and changed the maintainer name/email back to yours in debian/control and debian/changelog. I'm happy to help with packaging via this collab-maint repo in future, should you need it.\n. Hi @jasonethomas I think it's better if an official Debian Developer is listed as Maintainer, as I'm unable to release updates without sponsorship. I can still contribute (like others) via collab-maint.\nAs for credits for packaging, one way to do this is to list maintainers in the debian/copyright file for Files: debian/*\nThe docs were moved to a separate git repo upstream, therefore if we wish to reinstate the tidy-doc package we might need a separate source package for it. This might be a good opportunity to rename it, as there is a name clash with a different project: http://savannah.nongnu.org/projects/tidydoc/\nhttps://github.com/htacg/tidy-html5/pull/420 was already included in the package as a patch: http://anonscm.debian.org/cgit/collab-maint/tidy-html5.git/commit/?id=fa10ee7c30474ce103ccb23d7c327509dc121cea\nI don't think https://github.com/htacg/tidy-html5/pull/421 is so relevant for packaging because we currently build tidy with the shared library anyway (I tested the /usr/bin/tidy binary to make sure), and we only provide the static library for special use cases.\nIn general, as upstream is very responsive, I would like to suggest all known fixes go there, and that we only patch while awaiting an upstream release. Otherwise we have the situation of long-term patches where Debian's tidy is diverging from the upstream release, which can make QA more difficult.\nCheers!\nDaniel\n. Hi @geoffmcl I think this ticket could be closed now, we have a new official Debian package of 5.2.0 with lots of improvements from different people: http://metadata.ftp-master.debian.org/changelogs//main/t/tidy-html5/tidy-html5_5.2.0-2_changelog\nThanks to @jasonethomas, @AdamMajer, @LudovicRousseau, Steve Langasek, Pino Toscano, Mattia Rizzolo, Gianfranco Costamagna and Ond\u0159ej Sur\u00fd!\n. Hi Geoff, \nThere are two different issues here. First is that the whole of the debian directory needs to be copied into the source intact, not just the files from that directory. So in the tidy-5.2.0 directory you would end up with:\nbuild\ndebian\nlocalize\nREADME\nversion.txt\nCMakeLists.txt\nexperimental\nman\nREADME.md\nconsole\ninclude\nobj-x86_64-linux-gnu\nsrc\nSecond issue is that the 'unmet build dependencies' error means your test machine is not set up for building this package. If you look at the debian/control file you'll see a list of packages that you would need to install:\nBuild-Depends: debhelper (>= 9), libtool, perl, xsltproc, dh-autoreconf, cmake\n. Please see http://stackoverflow.com/questions/13812185/how-to-recompile-with-fpic#13812368\nfor a possible fix to the original issue.\n. Hi Geoff, there are a bunch of issues here :-)\n1. To make a signed package, you need to put your own identity into the debian/control file on the Maintainer: line. Otherwise you'd have to make an unsigned package, which would be a bad idea for a public release.\n2. The secret key is like an SSH private key, but it might be from a particular key pair that you reserve for signing packages. See https://wiki.debian.org/Keysigning\n3. The -0.99 on the library packages is an indicator for ABI compatibility. I don't know why -0.99 was chosen previously, but the implication is that any package built against libtidy-0.99 will carry on working as long as that suffix doesn't change.\n4. Nothing gets installed to debian/tmp on the target system, this is just a convenience for package building. If you want to check where stuff gets installed, open up the .deb package as a file archive. For this purpose you can ignore the DEBIAN directory as that contains files used by the package installation tool.\n5. Libraries should not be missing, they should be in the libtidy-0.99* package. Imagine you had an application linked against libtidy which did not require /usr/bin/tidy to be present. Splitting the packages this way allows for smaller target systems.\n6. The .dsc file is a checklist for the source package. It only mentions -0.99 because that is the current library suffix. It will say the version is 1:5.2.0 when we move to a new epoch.\n7. The binary debs are built explicity for an arch, in this case amd64, but the source package is meant to be arch neutral. If it fails to build on any particular arch supported by Debian, we will need to fix whatever is causing that.\nCheers!\nDaniel\n. Hi Geoff, you are right, in my test package the libtidy.so.5 is missing, I'll look into the cause of that.\n. Please also suggest any updates you would like in the Description or other fields in https://github.com/danielhjames/tidy-packaging/blob/master/debian/control\n. Hi Geoff, I found two issues here...\n1. The libtidy package did not mention the shared library in its install file, so it was not getting copied in. That's easily fixed.\n2. The /usr/bin/tidy binary was being built standalone so it did not make use of the shared library. I'll have to find out how to enable that.\n. Hi Geoff, shared library is now properly installed in the libtidy5 package. Please take a look at https://github.com/danielhjames/tidy-packaging/blob/master/debs/sid/libtidy5_5.2.0-1_amd64.deb\n. Hi Geoff, the name libtidy5 is suggested by the lintian output that the library name should match the SONAME, so I'm fine with that. I've updated https://github.com/danielhjames/tidy-packaging/tree/master/debs/ to suit this.\nAs for the /usr/bin/tidy binary building in the library, if that is what the upstream project prefers I am also fine with that, personally speaking. The practical difference is that the tidy package would no longer have a dependency on the libtidy* package. This would only cause bloat on the target system in the scenario where the user wishes to have both /usr/bin/tidy and another program which relies on libtidy installed.\n. Hi Geoff, According to https://www.debian.org/doc/debian-policy/ch-sharedlibs.html section 8.3, the static library should be in the development package. I'll look into how that is enabled.\nDebian is concerned with small target systems, so for example an embedded system which never builds from source does not need headers or static libraries from the -dev packages.\nCheers!\nDaniel\n. Hi Geoff, the libtidy-dev package now contains the static libtidys.a file for people that need it.\nI used the cmake option you suggested and the tidy package is now much smaller, from 176KB down to 41KB on Debian jessie.\nNew test packages in https://github.com/danielhjames/tidy-packaging/tree/master/debs/jessie\nwork for me, please ask the tidy community to give them a try. The libtidy5 package will need to be installed before the tidy package on the target system.\n. Arch Linux is working around this with symlinks: https://git.archlinux.org/svntogit/packages.git/commit/trunk?h=packages/tidy&id=482ab3f78fcd66828214eafeb6b2d66c11306e1c\nI've had a request to do the same for the Debian package of version 5.2.0, does that seem like a reasonable short-term solution?\n. Hi @geoffmcl could you review this please? Seems like the best solution for fixing https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=828632 Thanks! Daniel\n. Files src/access* and parts of src/message.c are Copyright University of Toronto so you may wish to update this file for that also.\n. Hi @geoffmcl, hi @balthisar,\nI agree with Jim, as the HTACG is affiliated with the W3C there is no need to transfer any copyrights, and this transfer is not even possible in some countries. Therefore I see no need to put an 'end date' on the original copyright any earlier than 2016.\nThe reason that this issue came up was because in Debian, they noticed that there are copyrighted files (specifically the University of Toronto files) which are not mentioned in the main copyright notice.\nLooking at the src/access* files, these say:\nCopyright University of Toronto\n  Portions (c) 1998-2006 (W3C) MIT, ERCIM, Keio University\nIt seems that W3C were involved until at least 2006, and http://tidy.sourceforge.net/ shows changes up to 2008. As these files say 'Modifications by : Terry Teague (TRT)' I think that dates them to between 2001 when Terry became a co-maintainer, and 2005, when Terry died. So it looks like the University of Toronto work was concurrent with the W3C work, but that this university was not part of the W3C.\nAnyway, the two license files have some other discrepancies, like the Markdown version not crediting Dave Raggett, so I'll merge the two files and update the pull request.\n. ",
    "AdamMajer": "\ntidy-html5 is now in the New queue for acceptance into Debian:\nhttps://ftp-master.debian.org/new.html\n\nWhy not update current tidy? Why have new package?\nAlso, your binary package already exists in Sid, which means this\ncannot be accepted. If you wish to use libtidy-dev, then that has to be\nvia current tidy package, not new one.\n. On Thu, 09 Jun 2016 03:06:48 -0700\nDaniel James notifications@github.com wrote:\n\nHi Adam, this is an update of the current tidy package. The reason\nthat the source package name changed is because it changed upstream,\nso it has to go into Debian's New queue. Also, the name of the\n\nIt still would end up in New because you have different soname, so new\nbinaries. With package name conflict (libtidy-dev), I'm not sure how\nthis is going to go through the NEW queue.\nI don't see request to remove old tidy.\nNew upstream is fine, but package is continuing. This is not a rewrite.\nSo I think that it should stay with the old package.\nAlso, tidy needs compatibility headers since they were renamed. So\ncurrently stuff building with old tidy doesn't build with new tidy.\nI'll provide a pull request for that soon.\n\nlibtidy package changed because the shared object filename now has a\n5.x suffix, currently /usr/lib/libtidy.so.5.2.0. In the libtidy5\ndebian/control file we have...\nReplaces: libtidy-0.99-0, libtidy0\n\nThat is wrong.\nYour libtidy5 should not be replacing libtidy0. It should co-exist.\nThey have different sonames.\nAlso, that README.source is from old CVS? Shouldn't exist there (even\nif you just update old package)\nPS. I didn't look at the Debian package, just looking at what is\ndisplayed in the New queue.\n. > Hi Adam, thanks for the offer of help, do you use collab-maint?\nYes, I do have access to collab-maint, but not from here. I can look at\nthe package this weekend (maybe?), but definitely this month.\nFYI, currently tidy is in process of getting updated at SUSE. It's just\ngoing through integration testing. I will send you some patches Soon :D\n\nlibtidy-0.99-0 had a Conflicts: on libtidy0 and I don't think\nlibytidy0 has been in Debian since the year 2005 (according to the\nchangelog) so I guess there is not much chance of libtidy5 and\nlibtidy0 co-existing. Supposing we had libtidy5 co-existing with the\nalso very old libtidy-0.99-0 (from the year 2009), wouldn't that mean\nhaving two versions of the same library, but only one supported\nupstream?\nAlso, I recall the libtidy-dev package provides a symlink for the\nlibrary, wouldn't that conflict?\n\nNo, devel provides symlink to the package it depends on, so something\nlike,\nlibtidy.so -> libtidy.so.5\nhence no problems having libtidy-0.99-0 and libtidy5 installed at same\ntime. They should provide different files.\nSometimes users have very old software that they can't\nrebuild for whatever reason that uses old library. Hence why Conflicts:\nfor lib* packages are generally bad.\n. On Sat, 11 Jun 2016 17:07:07 -0700 Geoff McLane\nnotifications@github.com wrote:\n\nI have not asked my friends, the original SF maintainers, exactly why\nthat last release 2009, was named: 0.99, but when the baton was\npassed on, to us, HTACG, we chose the first release name to be Tidy\n5.0.0... but no API change! ... lots and lots of history in that...\n\nGood, because OpenSUSE has tidy5 as new tidy. Uploaded it last week. So\neverything that currently builds with 0.99, is rebuilt with 5.\nhttps://build.opensuse.org/package/show/openSUSE:Factory/tidy\nThe only thing is, that you do have an ABI change hence you would have\nhad to bump the soname anyway. Now, let's hope you do not change the\nABI for a while!\nhttp://stackoverflow.com/questions/3784389/difference-between-api-and-abi\nFor example, when you added new enums, that is ABI change since you've\nkept them alphabetical, which caused all the folloup enums to be\nrenumbered. Hence software is no longer compatible if linked with older\nversion.\nABI change require soname to be changed because software has to be\nrecompiled against new version of library to continue to function.\nAnyway, this is probably old news to you.\n\nNow, in building the Debian package, somewhere along the line I might\nhave thought changing the base name would be ok for a Debian\nrelease... but fully agree, if it is possible, install and do the\nabove link update... all is done...\nAlso agreed... no delete of the last... if an app has the direct link\nto libtidy-0.99-0.so then it will still run... but not sure when,\nhow, ... to delete those???\n\nIt just means user can install libtidy-0.99-0.so from archive\nconcurrently with the new tidy and everyone is happy.\nWhen base tidy is updated, then this automatically triggers rebuilt\nwith new tidy (because of new soname). And old libpackage is\nautomatically dropped as it no longer builds from source.\n\nThe sample console app, tidy, as opposed to libtidy, is meant to\nalways fully replace the old, and chooses to be linked to the\nmatching static library... this should be a 100% overwrite...\n\nThat is fine. The binary can change to have new features and all that.\n\nSo where does this go next?\nDo we, as Tidy, wait for the new Debian name approval? I am sort\nof ok with that, if this gets tidy into distribution, after a much\ntoo long delay... 6-7 plus years...\nOr, are there some simple debian build steps which will keep the\npreferred single name of tidy... ie no new approval is\nrequired...\nAny help, ideas, you can provide would be much appreciated...\nthanks for the comments, and to @danielhjames for big efforts to get\nthis moving... on a very important issue to us... getting the tidy\nupdate into distribution...\n\nHave you contacted current Debian tidy maintainer?\n- Adam\n. Well, I've just contacted the Debian maintainer and he said he'll like to keep maintaining tidy and has updated the package to tidy5. He just can't upload it because his GPG key was removed (long story, but Debian had lots of GPG keys removed in the 1k to 2+k RSA keylength transition). I've told him I can upload his package on the weekend. And then Debian will have tidy5 too :+1: \n. On Tue, 14 Jun 2016 04:54:36 -0700\nLudovic Rousseau notifications@github.com wrote:\n\nHi @AdamMajer, I have not tried to contact the tidy maintainer Jason\nThomas. His latest tidy upload was in Dec 2009. I guess his PGP key\nhas been removed long after that date.\n\nTidy didn't have upstream for a while too. There was little to upload.\nBut Jason is quite responsive via email. I've directed him to this\nthread on GitHub. Hopefully you two can agree and co-maintain this\npackage in Debian.\nBut just to re-iterate,\n1. you need compat headers to keep current software compiling with\n   new tidy\n2. tidy binary cannot be statically linked in Debian\n3. distributing documentation for tidy is also a good idea\n\ntidy looked abandoned. I am sorry if I made a mistake.\n\nAlways a good idea to email the current maintainer. It probably would\nmake tidy update much quicker :D\n. On Wed, 15 Jun 2016 02:25:25 -0700\nDaniel James notifications@github.com wrote:\n\nYour assistance with compat headers would be very welcome, please\ntake a look at http://anonscm.debian.org/cgit/collab-maint/tidy.git/\n\nThere is a pull request that adds these to tidy. Just include that\npatch and install headers to /usr/include/tidy not /usr/include (like\nold package) and it will work.\nhttps://github.com/htacg/tidy-html5/pull/420\n\nI dropped the tidy-doc package as the upstream source no longer seems\nto build any docs other than the man page, although there are some\nMarkdown files in the README directory of the upstream source which\ncould potentially be included in a new tidy-doc package. The man page\nwas included in the new tidy package, of course.  \n\nYou have to basically merge subdirectory of tidy api in there as well,\nhttps://github.com/htacg/html-tidy.org.api\nspecifically, the tidy-html5-doxygen directory. Then you can build API\nwith Doxygen again via build_docs.sh - that may need to be slightly\nmodified for Debian too.\nPersonally, I think it was a mistake to move documentation generation\nout of tidy source code and into documentation repository.\n. On 07/07/2016 11:34 AM, Daniel James wrote:\n\nHi @jasonethomas https://github.com/jasonethomas I think it's better\nif an official Debian Developer is listed as Maintainer, as I'm unable\nto release updates without sponsorship. I can still contribute (like\nothers) via collab-maint.\n\nThere is an Uploaders entry for more than one person.\nhttps://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Uploaders\nTypically for group maintenance, you have a common mailing address, like \na mailing list, for Maintainer: and maintainers for the package listed \nare listed in the Uploaders: field.\n- Adam\n. The point of signing your work is to verify that the release is indeed you doing the release. Consider this scenario,\n1. Bob gets access to this source code repository\n2. You go on vacation, etc.\n3. Bob adds some \"evil code\" to tidy and does a release.\n4. Users download it, assuming it's still official.\n5. Few days/weeks/months later you want to make a change and notice that someone else did something bad. In meantime, \"evil code\" could be running for hundreds of people.\nNow, if you have signed release tags,\n1. Users download release, audit code, verify key, assume you are \"trustworthy\"\n2. Bob gets access to this source code repository\n3. You go on vacation, etc.\n4. Bob adds some \"evil code\" to tidy and does a release.\n5. Users download it, notice that it isn't signed or signed with different key.\nUnless you, or someone that does releases, signs them (which includes hashes), then as you say, it's pretty easy to fake them. But if you sign them (ie. releases or hashes), then it becomes quite difficult to fake these things. And by difficult, I mean currently infeasible.\nHere's some explanations of why signing tags is a good thing,\n   http://stackoverflow.com/questions/5663733/signing-tags-in-git\n   https://mikegerwitz.com/papers/git-horror-story.html\n. I didn't ask you to sign every commit. I only ask to sign your releases. So you just sign the tag when you release. You can also sign hashes of tarballs too - lots of projects do that too. Just as an example,\nhttp://www.squid-cache.org/Versions/v3/3.5/squid-3.5.19.tar.gz.asc\nProviding unsigned hashes in addition to signed doesn't really make sense. Anyway, if you want examples, it's right there, in my \"horror story\" link,\n\nIt was not too long ago (March 4th, 2012) that a public key security vulnerability at GitHub was exploited by a Russian man named Egor Homakov, allowing him to successfully commit to the master branch of the Ruby on Rails framework repository hosted on GitHub. Oops. \n\nReferences right in there.\nJust to be clear, I did not ask you to sign commits. I think that is excessive. But, considering only 1 or 2 people will release tidy, doing\ngit tag -s release_tag_here\nvs.\ngit tag release_tag_here\nis hopefully not too much to ask. Put your public key in README.md and done.\nSigned tags allow people like myself to instantly verify that the source come from the same source as previous releases.\n. Opps, sorry, somehow I didn't see this other repository. Thank you!\nClosing it, since clearly invalid bug report on my part.\n. On Wed, 15 Jun 2016 18:08:10 -0700\nGeoff McLane notifications@github.com wrote:\n\nSo while there will remains a possible conflict with other generic\nheader names, if installed in /usr/include or /usr/local/include,\nit seems a benign cmake option... It defaults to OFF, and only\nusers with the knowledge, and should know what they are doing, would\nset it ON...\nBut after 7+ years I doubt there would be much current software\nout there using those old headers... but maybe...\n\nI think apache2 tidy mod broke along with others that now build\nwith old tidy. Maybe because I've installed headers\nunder /usr/include/tidy not /usr/include? Would have to check on that.\n\nAll known windows apps that use lib tidy DLL never depend on a\nglobally installed Tidy DLL! It does not exist, yet! Most have\nupdated from source, so this is not needed in windows... And that\nis good because the #warning \"ABC\" gcc macro used is not MSVC\ncompatible... it is an error!\n\nThat pragma could be commented with a #ifdef GNUC for example. And\nhave special one for MSVC so it doesn't break :) I think MSC_VER\nshould work.\nWhen I still ship programs for Windows, I always use DLLs, although\nlocally installed ones (in program's install directory, not some\nglobal directory or as SxS). For Linux distributions, globally\ninstalled libtidy is very important for various reasons, but security\nupdates is most important. This is why static linking for Linux distros\nis generally not allowed.\n. On 06/18/2016 07:19 PM, Geoff McLane wrote:\n\nlinux, and windows, had embedded an old tidy source, with the old\nheaders, so does not use any installed tidy-dev headers... and in fact\neffectively uses tidy in a static like form, ie not using a shared\nlibrary...\n\nJust to be clear 100%,\nNONE of Linux distributions would use static linking (maybe except\n   the one that rebuilds everything anyway :)\nALL Linux distributions use dynamic linking.\nIt's been like that since the beginning. There are major problems with \nthings like Go (programming language) that does not support dynamic linking.\n- Adam\n. Updated header patch so that it will not cause errors on non-gnu (and non-clang) compilers, which basically means MSVC and niche compilers.\n. I guess I missed your comments. My comments are that it is policy of every distribution (maybe except Gentoo that rebuilds everything anyway, not sure) that static libraries are not only discouraged and shared libraries must be provided and preferred (Debian), they are not to be distributed at all (SUSE). There are some exceptions with some software, but none of these apply here.\nThe reason has nothing to do with bloat of one executable. The reasons are,\n1. security\n2. bloat of archive\n3. security\nAnd yes, security. If there is a bug that needs to be fixed in tidy, this only has to be done in one place not in 10 packages that use tidy.\nYour comment about total executable size doesn't hold water when it comes to distributions. If I have 5 or 10 programs that link with tidy API, the size of one library is somewhat smaller than 5 or 10 copies of it inside executables. Furthermore, if these programs run concurrently, the size in the memory space is smaller too with dynamic linking (code segments are common to all programs).\nEven when I wrote software for Windows, I always distributed DLLs for another reason - it's easier to track down bugs when your executable only contains your code, not 3rd party. It is much easier to follow executable code path in case of crash.\nThere are many more reasons for using dynamic libraries, but policies for all software distributions are quite clear that dynamic linking is to be used. The only case for static linking that I can think of you've brought out already - smaller total executable for one-of libraries.\nAs to cmake, using standard macros allows code to be build in a standard way, which is always nice for maintainers.\n. There should be a better way of doing this than what is currently done. \nhttps://cmake.org/Wiki/CMake:How_To_Write_Platform_Checks\n. @marcograss Can you provide input file that triggers this bug?\n. maybe it is redundant but search can get overwritten by a lookup table and I didn't check if that lookup table is always lower case. I only removed crazy things like strncpy 1 char. :)\n. There should be no problem with this change for any Linux distribution. If they don't need it, they will just not distribute the .pc file.\n. ",
    "jasonethomas": "Hi all, I am the missing Debian Developer, I've been busy for the last few years, working, getting married having kids. But things are getting less busy now and I'd like to continue maintaining tidy. I've already packages the current version and shared it with @AdamMajer, the link to my diff file is below.\nI'll take a look at your packaging and see if I missed anything. My package is already lintian clean. We need to look at package names and versions.\nhttps://www.dropbox.com/s/32lzjd8fqd8fo97/tidy_5.2.0-1.diff.gz?dl=0\n. Hi @danielhjames I just committed a couple of changes, to clean up and fix a bug.\n. Hi @danieljames I believe a bunch of debian package use a collaborative\ntype address for the maintainer, I'd be happy to do the same and have them\ngo to anyone who wants in.  I really appreciate having all your help.\ngrep Maintainer /var/lib/dpkg/available | grep Team | sort -u\ngrep Maintainer /var/lib/dpkg/available | grep Maintainers | sort -u\nIt might also be nice to have a \"Debian.CREDITS\" or similiar for\nrecognition of those that help package tidy.\nCouple of other things:\n- Do we want to look at including the docs again, or even packaging\n  separately, which from memory it use to be done this way.\n- Do we want to include these suggested by @adammajer,\n  https://github.com/htacg/tidy-html5/pull/420,\n  https://github.com/htacg/tidy-html5/pull/421\nWhat do you all think?\nOn Wed, Jul 6, 2016 at 11:54 PM, Daniel James notifications@github.com\nwrote:\n\nHi @jasonethomas https://github.com/jasonethomas I have prepared a\n1:5.2.0-2 release in\nhttp://anonscm.debian.org/cgit/collab-maint/tidy-html5.git and changed\nthe maintainer name/email back to yours in debian/control and\ndebian/changelog. I'm happy to help with packaging via this collab-maint\nrepo in future, should you need it.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/354#issuecomment-230778156,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ATNFzw_sa5C9dtevoB69YHUGI8VgYtSwks5qS7OmgaJpZM4HLULp\n.\n. \n",
    "jamesla": "Ok thanks guys\n. ",
    "hguemar": "It's a problem w/ CMake/CPack. I verified the package metadata, and it owns directories from base system package filesystem.\nFixed by the PR #366\nbash\nrpm -qp --fileclass tidy-5.1.25-64bit.rpm  \n/usr/bin/tidy   ELF 64-bit LSB  executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.24, BuildID[sha1]=a47d915eb211a8509ffefb1221d3425efc3db960, not stripped\n/usr/include/tidy.h C source, ASCII text\n/usr/include/tidybuffio.h   C source, ASCII text\n/usr/include/tidyenum.h C source, ASCII text\n/usr/include/tidyplatform.h C source, ASCII text\n/usr/lib/libtidy.so symbolic link to `libtidy.so.5'\n/usr/lib/libtidy.so.5   symbolic link to `libtidy.so.5.1.25'\n/usr/lib/libtidy.so.5.1.25  ELF 64-bit LSB  shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=9703d64a92d489f39bb85e80a68eb5bb59098d43, not stripped\n/usr/lib/libtidys.a current ar archive\n/usr/share/man  directory\n/usr/share/man/man1 directory\n/usr/share/man/man1/tidy.1.gz   troff or preprocessor input, ASCII text, with very long lines (gzip compressed data, from Unix, max compression)\n``\n. Comparison with package generated using the fixed CMake file.\nbash\nrpm -qp --fileclass tidy-5.1.*-64bit.rpm \n/usr/bin/tidy   ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=d23281d0e318573a1abb800ebc5ca2b3825b4b76, not stripped\n/usr/include/tidy.h C source, ASCII text\n/usr/include/tidybuffio.h   C source, ASCII text\n/usr/include/tidyenum.h C source, ASCII text\n/usr/include/tidyplatform.h C source, ASCII text\n/usr/lib/libtidy.so symbolic link to `libtidy.so.5'\n/usr/lib/libtidy.so.5   symbolic link to `libtidy.so.5.1.36'\n/usr/lib/libtidy.so.5.1.36  ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, BuildID[sha1]=073c484854f5dc6f347db0d04dc55fd909c5de24, not stripped\n/usr/lib/libtidys.a current ar archive\n/usr/share/man/man1/tidy.1.gz   troff or preprocessor input, ASCII text, with very long lines (gzip compressed data, max compression, from Unix)\nInstalls fine now\n. The variable you used override default paths from CPack, CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION can be used to easily add more paths without this side effect\n. ",
    "mojavelinux": "Excellent!\nWhen I tried it, I had to exclude many more folders:\nSET(CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST \"/usr;/usr/bin;/usr/share;/usr/share/man;/usr/share/man/man1*;/usr/include;/usr/lib\")\nHowever, I might need to do a clean. Verifying.\n. Yep, your patch works perfectly for me. The relevant bit from the generate spec file is as follows.\n%files\n%defattr(-,root,root,-)\n\"/usr/share/man/man1/tidy.1*\"\n\"/usr/bin/tidy\"\n\"/usr/include/tidy.h\"\n\"/usr/include/tidyenum.h\"\n\"/usr/include/tidyplatform.h\"\n\"/usr/include/tidybuffio.h\"\n\"/usr/lib/libtidys.a\"\n\"/usr/lib/libtidy.so\"\n\"/usr/lib/libtidy.so.5\"\n\"/usr/lib/libtidy.so.5.1.36\"\nNotice it includes no paths owned by the system.\nGreat work @hguemar!\n. It looks like this eliminates the need for an upstream patch in Fedora.\nhttps://pkgs.fedoraproject.org/cgit/rpms/tidy.git/tree/0001-allow-modified-install-paths.patch\nSo it should be possible now for Fedora to package this without modification.\nHere's the upstream (downstream?) package:\nhttps://apps.fedoraproject.org/packages/tidy\n. @hguemar Now I understand. Excellent!\n. It's true that there are certain HTML documents that are able to masquerade as XML going in, which does result in the element/attribute case being preserved (regardless of output setting). However, the first time the parser his a perfectly valid short element (e.g., <img src=\"...\" alt=\"...\">), it blows up. I also notice that by enabling input-xml, there are other side effects. For instance, the newlines around content in a <pre> element show up again (fixed earlier in 5.1 for HTML).\nBut I think we're missing the point. An inline SVG is an XML document inside of an HTML document. Therefore, it should be handled as XML, and that, in part, means preserving the case of elements and attributes.\nThe way I've been able to workaround this is to wrap the SVG in CDATA before tidy touches it, then unwrap it afterwards. That seems to keep tidy from touching the SVG data. Not pretty, but it gets the job done.\n. Interesting to note that there is a related discussion in Jsoup.\nhttps://github.com/jhy/jsoup/issues/272\n. It seems like this behavior might actually be desired. In a reply on Twitter to $subject, Sara Soueidan said:\n\nI always lowercase [because] some attributes had problems w/ uppercase in IE a while back.\n\nThe concern I had, as well as others, was that by changing the case, it would break SVG rendering. However, it seems like that might not be true (and in the case of older IEs, it might actually help the situation).\nI'm curious to hear what others think.\n. :+1: I agree we're definitely at the discussion phase. I'll try to collect feedback using various channels.\n. So here's the official word from the W3C, courtesy of Romain Deltour.\n\nIn the HTML syntax, tag names, even those for foreign elements, may be written with any mix of lower- and uppercase letters that, when converted to all-lowercase, matches the element's tag name; tag names are case-insensitive.\n\u2014 https://www.w3.org/TR/html51/syntax.html#syntax-tag-name\n\nIt's the \"even those for foreign elements\" that confirms it does not matter that the elements and attributes in SVG are lowercased.\nWhat that leaves us with is a style preference. Would tidy be willing to consider having a \"match\" setting for case sensitivity in HTML, so that the output matches whatever the input used? (basically the same as what input-xml does).\n. In my mind, this is about reproducibility. The use case many parsers miss is to open a document, make a correction and get out without causing the whole document to be rewritten. I call it the polite factor. When the parser rewrites stuff unrelated to the operation (or unrelated to what you want to style, in this case), it introduces side effects. There are very good reasons why you sometimes have to modify a document without making unrelated changes...even when tidying it. It would be nice if tidy could be polite in this regard. Just because a renderer doesn't care about casing doesn't mean that it isn't important to the humans reading it.. ...and it could very well be that something downstream from tidy is dependent on the tag case (software that simply cannot be changed), and tidy inadvertently breaks such a toolchain with the current behavior.. I wouldn't make a special exception. I think my point holds regardless of what part of the document we're talking about. In additional to SVG attributes, certain web frameworks rely on custom attributes in the HTML that leverage mixed casing.. ",
    "mistyhacks": "By the way, we can work around this with a scary but effective sed command, right after running the tidy. The following sed looks for lines that end with = and join them to the following line:\nsed -i ':a;/=$/{N;s/\\n//;ba}'\n. Thanks so much for the explanation, @geoffmcl. Since I found a workaround and obviously my request is not common, I'm not going to do this. It did strike me that the least invasive solution might be to just disallow = from being a wrappable character. But I understand that spacing in that context is not significant in XML so it's probably out of the scope of HTML Tidy to address it.\nRegardless, I think your explanation will be a great resource when some hapless person in the future searches for something like this. Thanks again for taking the time.\n. ",
    "jcubic": "I also have this problem but in my case I had whitespace after newline (the quote was indented) so I've added -e ':a;/=$/{N;s/\\n\\s*//;ba}' instead to my sed command.\nIt's really stupid that I need to use sed to fix tidy, no offence.. Sorry, it was my mistake the attribute was in other place.. I've narrowed the issue to this xml (two different cdata):\nxml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n  <tag><![CDATA[\n    Lorem Ipsum Dolor Sit Amet Lorem Ipsum Dolor Sit Amet Lorem Ipsum Dolor Sit Amet Lorem Ipsum Dolor Sit Amet Lorem Ipsum Dolor Sit Amet\n       ]]></tag>\n  <tag>\n  <![CDATA[\n    Hello from CDATA\n  ]]>\n  </tag>\n</root>\nusing command tidy -xml -utf8 -indent -wrap 200 -modify -quiet test.xml I've got this:\nxml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root>\n  <tag>\n<![CDATA[\n    Lorem Ipsum Dolor Sit Amet Lorem Ipsum Dolor Sit Amet Lorem Ipsum Dolor Sit Amet Lorem Ipsum Dolor Sit Amet Lorem Ipsum Dolor Sit Amet\n       ]]>\n  </tag>\n  <tag>\n<![CDATA[\n    Hello from CDATA\n  ]]>\n  </tag>\n</root>\nit simply remove indent from before <![CDATA[ (it keep it in newline) and everything after it is left intact and indent tag after  ]]> normally.. It would be great if it don't indent ]]> I've got this when I call on my feed.xml file (Wrapping is great):\n```xml\n      \n        <![CDATA[\n                <p>Jest to pierwszy post na blogu G\u0142\u00f3wnie JavaScript. Od czasu do czasu\n        b\u0119d\u0119 zamieszcza\u0142 wpisy na tematy zwi\u0105zane g\u0142\u00f3wnie z Front-Endem, czyli CSS, HTML i\n        JavaScript, ale mog\u0105 pojawi\u0107\u00a0si\u0119\u00a0tak\u017ce posty na inne tematy. Tre\u015bci\u0105 bloga b\u0119dzie g\u0142\u00f3wnie\n        JavaScript i na nim postarm si\u0119 skupi\u0107. B\u0119d\u0119 omawia\u0142 podstawowe jak i zaawansowane\n        aspekty tworzenia aplikacji internetowych, skupiaj\u0105c si\u0119\u00a0na warstwie Front-End.</p>\n            &lt;br/&gt;\n            *** To tylko fragment wpisu! Kliknij na tytu\u0142 aby przeczyta\u0107 ca\u0142o\u015b\u0107.\n            ]]>\n  </description>\n\n```\nAlso is indent of first line of the paragraph a feature? Shouldn't it be the same as next line?\nit would be nice if the result was:\n```xml\n      \n        <![CDATA[\n        <p>Jest to pierwszy post na blogu G\u0142\u00f3wnie JavaScript. Od czasu do czasu\n        b\u0119d\u0119 zamieszcza\u0142 wpisy na tematy zwi\u0105zane g\u0142\u00f3wnie z Front-Endem, czyli CSS, HTML i\n        JavaScript, ale mog\u0105 pojawi\u0107\u00a0si\u0119\u00a0tak\u017ce posty na inne tematy. Tre\u015bci\u0105 bloga b\u0119dzie g\u0142\u00f3wnie\n        JavaScript i na nim postarm si\u0119 skupi\u0107. B\u0119d\u0119 omawia\u0142 podstawowe jak i zaawansowane\n        aspekty tworzenia aplikacji internetowych, skupiaj\u0105c si\u0119\u00a0na warstwie Front-End.</p>\n    &lt;br/&gt;\n    *** To tylko fragment wpisu! Kliknij na tytu\u0142 aby przeczyta\u0107 ca\u0142o\u015b\u0107.\n    ]]>\n  </description>\n\n. OK, I know the reason if indentation, the input had one (and it was also already wrapped):xml\n        <![CDATA[\n        <p>Jest to pierwszy post na blogu G\u0142\u00f3wnie JavaScript. Od czasu do czasu\nb\u0119d\u0119 zamieszcza\u0142 wpisy na tematy zwi\u0105zane g\u0142\u00f3wnie z Front-Endem, czyli CSS, HTML i\nJavaScript, ale mog\u0105 pojawi\u0107\u00a0si\u0119\u00a0tak\u017ce posty na inne tematy. Tre\u015bci\u0105 bloga b\u0119dzie g\u0142\u00f3wnie\nJavaScript i na nim postarm si\u0119 skupi\u0107. B\u0119d\u0119 omawia\u0142 podstawowe jak i zaawansowane\naspekty tworzenia aplikacji internetowych, skupiaj\u0105c si\u0119\u00a0na warstwie Front-End.</p>\n    &lt;br/&gt;\n    *** To tylko fragment wpisu! Kliknij na tytu\u0142 aby przeczyta\u0107 ca\u0142o\u015b\u0107.\n    ]]></description>\n\n```\nso it already had indent, but tidy is adding indent blindly and don't check if it already have any indent.\nI think it should get current indent and replace it with correct one.. Sorry about that request, I can leave with sed to add space before <![CDATA[ and not use that option.\nShould I add another issue that will allow to format CDATA like normal text (with another option)? Or maybe you don't want you not implement such feature?\nAnd many thanks for tidy it's awesome tool.. @utrenkner With JavaScript it's no problem you just have to use type=\"text/javascript\".\nEDIT:\nThe problem I'm having is JSON-LD\n<script type=\"application/ld+json\">\n  {\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"BlogPosting\",\n  \"headline\": \"15 Pyta\u0144 na rozmow\u0119 rekrutacyjn\u0105 z CSS\",\n  \"image\": {\n    \"@type\": \"ImageObject\",\n    \"url\": \"/img/css-interview.jpg\",\n    \"width\": 800,\n    \"height\": 464\n  }\n  }\n  </script>\nand I want to have xhtml self closing tags on output html, so -ashtml option don't work.. Sorry, I think I use some old version, I've updated the code recently and it now works fine.\nIt leave some blank lines but not in place of generator meta tag.\n. ",
    "JasonWoof": "Ahh, I didn't build the latest and test because you said \"it seems current tidy still exhibits this/these problems\". Glad to hear that was a typo :)\nI am the original reporter :)\nSo glad to hear that tidy is being maintained! I thought it was abandoned long ago. Maybe I'll nudge debian to include something newer than 2009\n. Oh, I don't see what I could add to that thread, glad to see it's\nin progress.\nSorry about losing your debian maintainer. That's rough. A game I\nco-authored was in debian for a while until the maintainer\ndisappeared for a few years.\n\nJason\n. ",
    "a3nm": "Thanks for your answer!\nI confirm that with just <html> no warning is emitted. I also checked that lang and xml:lang are valid in HTML 5 https://www.w3.org/TR/html5/dom.html#the-lang-and-xml:lang-attributes and dir also is https://www.w3.org/TR/html5/dom.html#the-dir-attribute. So I think no warning should be emitted.\nThanks if you can fix this! :)\n. I tried to pull and re-build, and I'm getting exactly the same error as before with the example document in my initial bug report. Is it working for you?\n. I confirm that I am running version 5.1.44:\nroot@7d1010c25c24:~# /usr/local/bin/tidy --version                           \nHTML Tidy for Linux version 5.1.44\nWith the document in your message, I do not get any error, but note that it is not the same as my original document as you added a meta tag. When I remove the meta tag from the document that you posted in your last message, I get the spurious warning.\nMy understanding is that the warning should not be emitted, even without the meta tag.\n. From the XHTML 1.0 Strict DTD https://www.w3.org/TR/xhtml1/dtds.html#a_dtd_XHTML-1.0-Strict which appears to be what defines conformity to XHTML https://www.w3.org/TR/xhtml1/#docconf I observe that the \"summary\" attriibute of the \"table\" element is not mandatory (it is IMPLIED, not REQUIRED), so I don't think that a warning should be emitted for XHTML 1.0 Strict either.\nAs for the question of the meta charset tag, I do not see anything suggesting that the tag is required with HTML5 (see e.g. http://stackoverflow.com/a/14669441/) so I do not see why omitting the tag should cause anything specific to happen (in particular, I don't see why it should mean that the document should be understood as XHTML 1.0 Strict).\n. If the presence of an HTML5-specific element is good reason for tidy to consider the document as HTML5 (and emit HTML5-specific warnings), I wouldn't say that the absence of such elements should be legitimate cause for not considering as HTML5. I don't think tidy should emit warnings that would not be reasonable in HTML5 if the document can be seen as a valid HTML5 document. So I don't think the warning should be emitted on my original document, which reads fine as valid HTML5.\nAs for the omission of the meta-element, as the Content-Encoding HTTP header is a legitimate mechanism, I think it is totally legitimate to omit it and tidy is right not to warn about it.\nThat said, as a general comment, it would be nice to have a mechanism to toggle individual warnings from the command-line. If there were a clean way to ignore warnings that I dislike or don't care about, I would care less about tidy's default behavior.\n. The discussion has drifted, but I think the original bug that I was reporting has not yet been satisfactorily fixed: the document in my original report is, as far as I can tell, perfectly valid HTML5, and it still triggers a spurious warning when fed to tidy, even with the latest fix.\nI understand that the reason is that the document is mistakenly interpreted as XHTML 1.0 where it might make sense to advise in favor of that attribute. Nevertheless I think it is a bug that tidy emits a warning on a document if the document is valid when interpreted as HTML5.\n(As for the more general question of disabling warnings via command-line flags, as I user I think it would be useful, and not unreasonable, following gcc's example. Using flags from the shell is more convenient and modular than having to write code. But I agree that this is a more general question, certainly a feature request rather than a bug, and not related to my original issue.)\n. I agree that at least the behavior should be fixed for --doctype=html5 (which, for my use case, I could specify).\nFor automatic detection, I'm not sure I follow the explanation of @geoffmcl. Again, I find it weird that tidy would choose a doctype, think that it found a warning, and blame the user, whereas it should have given the user the benefit of doubt: tidy should not complain about an input document if there is some doctype for which the document is valid, in my opinion.\nI won't have time to submit a patch myself, I just want to point out the existence of the bug.\n. Thanks a lot for your clarifications.\n\nassume for example your  kicks off all the non-xhtml bits\n\nI think this would be a problem. As discussed earlier, this form of the HTML tag is perfectly valid in an HTML 5 document. \n\nBut without that meta tag, or some other HTML5 only element, I guess XHTML 1.0 strict is also still in the bits remaining, and tidy chooses this, over XHTML5, which I think would also be there. While this choice could be altered I can hear others users suggesting I prefer strict, if it is available...\n\nOK, I understand. Intuitively I would have expected that tidy by default would choose whatever doctype (if any) causes it to report no warning or errors. I would say that people who want to validate against a specific doctype to get more warnings could specify it with --doctype.\nThat said, this problem of which doctype to prefer is fuzzier. In any case, the warning in question should not be triggered with --doctype html5. I just checked and it is indeed triggered even with that option.\nThanks again for clarifying.\n. Thanks! I just tested it out, and it doesn't work, sorry (the warning\nstill occurs on the document that I provided in my original report).\nHowever I tested that adding \"return HT50;\" just before the patch\nsilences the warning, so indeed it seems that the warning could be\nsilenced by editing this function.\n\nAntoine Amarilli\n. Indeed, with \"--doctype html5\" the warning is suppressed with the patch,\nwhereas it occurs without the patch. Thanks!\nI still stand by my opinion in the previous comments that the warning\nshouldn't be emitted even without \"--doctype html5\", but it's already\nmuch better to be able to silence the warning with this option.\nThanks again!\n\nAntoine Amarilli\n. Hi,\nI can confirm that this patch makes the warning disappear both with and\nwithout \"--doctype html5\". Thanks!\n\nAntoine Amarilli\n. The latest master works for me, so as far as I'm concerned the issue can\nbe closed. Thanks for fixing!\n\nAntoine Amarilli\n. The current master is still OK for me w.r.t. this issue. Thanks again!\n\nAntoine Amarilli\n. Thanks a lot for the clarification!\nFor HTML 4 and earlier, I don't know. For HTML 5, however, the current draft defines the contents of the href attribute as a \"valid URL potentially surrounded by spaces.\" https://www.w3.org/TR/html5/links.html#attr-hyperlink-href which is defined from \"valid URL\" https://www.w3.org/TR/html5/infrastructure.html#valid-url defined as \"[conforming] to the authoring conformance requirements in the URL standard\", which points to https://www.w3.org/TR/html5/references.html#refsURL. Discarding the note I get to the URL standard https://www.w3.org/TR/url/ whose latest version is https://url.spec.whatwg.org/.\nIt is hard to see but I think the intent of this spec is to allow Unicode URLs. Specifically, it defines the https://url.spec.whatwg.org/#url-code-points as including large Unicode ranges and the note afterwards clarifies the intended meaning: the URL parser https://url.spec.whatwg.org/#concept-url-parser indeed runs on UTF-8 encoded data (see step 4 of the basic URL parser). It percent-encodes any extended characters it finds, which is why in the definition of URLs https://url.spec.whatwg.org/#urls it only allows ASCII strings (those are the result of applying the parser).\nSo my understanding is that, in HTML 5, URLs may include Unicode characters pursuant to the URL standard, and should not raise an error with tidy. (Of course it's still perfectly fine to percent-encode them.)\nDoes this sound reasonable to you?\n. Thanks for your explanations!\nI should be clear that, in my use case, I am using tidy only to validate HTML documents, not to rewrite them to anything. In light of this:\n\nCode points higher than U+009F will be converted to percent-encoded bytes by the URL parse\n\nThis is what the spec says that software reading URLs (for example in href) should be doing when processing the documents. It means tidy should be parsing URLs by accepting UTF-8 input, converting it to percent-encoding internally, and then do whatever it wants to do with it. So I'm not saying that tidy should not be rewriting these URLs to percent-encoded versions in the output. In fact, I think ideally you should be able to do one or the other depending on user preference, which is what your flag --fix-uri apparently permits.\nMy only concern is about the warning. My understanding of the WhatWG URL spec is that UTF-8 characters in URLs are perfectly fine and anything reading URLs in HTML 5 documents should be able to process them (doing as if they had read the percent-encoding). So I don't thing that tidy should be emitting a warning against them.\nDoes this clarify what I had in mind? :-)\n. @balthisar: My use case is that I use tidy to validate HTML documents that I produce. In this context, I try to fix warnings when they are relevant. Given that the warning about UTF-8 characters in URLs appears to be bogus based on my understanding of the HTML5 spec, I'd like to be able to suppress it with --fix-uri no (or some other command-line parameter), rather than having to write my own custom logic around tidy to silence that specific warning.. ",
    "biodranik": "What about using --fix-uri no for any valid UTF-8/16 HTML5 document by default?\nAnd of course the warning is not needed for valid HTML5 IRIs.. Regression tests are all passing.\nI suppose the warning about deprecated name is not related to -gdoc option at all. -gdoc should only clean html exported from Google Docs and it does it well with this fix. Interestingly enough, html exported from gdoc does not have DOCTYPE at all.. LGTM. ",
    "wizvoz": "Hah .. botched install, my apologies.\n. ",
    "seaburg": "Bug 762102 is solution of special case of the problem (& after <).\nAfter an unsuccessful attempt to parse a symbol in LEX_GT state we should try to parse current symbol in LEX_CONTENT state (instead of parse a next symbol in LEX_CONTENT)\nExample:\n1. Parse first < in LEX_CONTENT state. Put first < to lexer buffer and switch to LEX_GT state\n2. Read from stream a next symbol (second <)\n3. Unsuccessful parsing second < in LEX_GT state. Switch to LEX_CONTENT state.\n4. Put second < to lexer buffer and parse next a symbol (a) in LEX_CONTENT state. (Bad. We should not put a current symbol (second <) into lexer buffer. We should try to parse a current symbol (second <) in LEX_CONTENT state)\n. > So, at this point I am leaning towards a simpler fix of the current if (c == '&') being expanded to if ((c == '&') || (c == '<')).\nNo, this is not enough. In this case necessary if ((c == '&') || (c == '<') || TY_(IsWhite)(c)) (\"<  \"(< and two spaces) parsed as \"<  \" (two spaces after <) instead \"< \"(one space after <) when mode != Preformatted && mode != IgnoreMarkup)\nBut a excess condition complicate the logic. Therefore it is better to put any non-letter character back to buffer?\n. ",
    "smirn0v": "Proposed solution seems to be more general fix for aforementioned https://sourceforge.net/p/tidy/bugs/486/\n@geoffmcl do you have plans to merge it ?\n. ",
    "tyson-nw": "That did it.  I was outputting html not xml.  Thanks!\n. ",
    "ScottBeeson": "Nevermind, setting -w 0 seemed to fix the issue.  I missed that it defaults to 68.\n. ",
    "OlafvdSpek": "Thx for fixing this!\n. ",
    "rstrauss": "I had to download cmake for the mac\nand it gives a gui instead of installing it in /usr/local, so the command-line you gave didn\u2019t work,\nbut it only took a couple of tries to work.\nThanks much!\n-r\nPS:  Please add your email to our announcement list:\nhttp://PeopleCount.org/tohelp.htm\nFor more info:  http://PeopleCount.org/how.htm\n\nOn Apr 3, 2016, at 5:17 AM, Geoff McLane notifications@github.com wrote:\n@rstrauss https://github.com/rstrauss yes, this is a repeat of issue #321 https://github.com/htacg/tidy-html5/issues/321, and is a known problem with version 5.1.25, but has been fixed by version 5.1.27, and later...\nNow I looked at the homebrew/Library/Formula/tidy-html5.rb, and unfortunately it downloads and uses the 5.1.25.tar.gz source, so can do nothing about that... This shows the same at http://braumeister.org/search/tidy http://braumeister.org/search/tidy...\nIt would be good if homebrew offered a formula to use the latest master git source, but note that site has over 200 pull requests, so even if I, or someone, offered say a tidy-latest.rb it might be a long time before it got into distribution for you to use...\nBut building and installing the latest 5.1.51 plus tidy is not difficult... I do not use a MAC, but open a terminal and enter the following commands should do it, assuming you have git, cmake and build-essentials installed -\n$ git clone --depth 1 https://github.com/htacg/tidy-html5.git\n$ cd tidy-html5/build/cmake\n$ cmake ../.. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr\n$ make\n$ sudo make install\nThis will install tidy in /usr/bin, so you should be able to run $ tidy -v, and see version 5.1.51...\nWe are in the process of considering a tidy 5.2.0 release shortly, but again it might be some time before that would be available in homebrew...\nReally, the best solution seems to be build it yourself... just follow the above steps... maybe other MAC OX X users can offer more...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub https://github.com/htacg/tidy-html5/issues/393#issuecomment-204957774\n. Sorry, I just saw this- it\u2019s been a hell of a week.\n\nYes, this worked.\nThen moments after cmake was installed, \nI got an email that someone else created 5.2.0 for the mac.\nSo I installed that.\nBoth 5.1.25 and 5.2.0 have one weirdness, FYI\nOn the attached file, they produce:\nline 71 column 7 - Warning: missing \nThis seems to be an error to me...\n63      <header id=\"myCarousel\" class=\"carousel slide\">\n64        <!-- Indicators -->\n65        <ol class=\"carousel-indicators\">\n66          <li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>\n67          <li data-target=\"#myCarousel\" data-slide-to=\"1\"></li>\n68          <li data-target=\"#myCarousel\" data-slide-to=\"2\"></li>\n69        </ol>\n70        <!-- Wrapper for slides -->\n71        <div class=\"carousel-inner\">\n72          <div class=\"item active\">\n73            <div class=\"fill\" style=\"background-image:url('img/header-img.jpg');\">\nWeird: I tried adding the  that it said was missing and I get:\nline 71 column 7 - Warning: discarding unexpected \nline 71 column 13 - Warning: missing \nIf you\u2019d prefer that I log it, I can.\nThanks,\n-Rand\n\nOn Apr 5, 2016, at 5:50 AM, Geoff McLane notifications@github.com wrote:\n@rstrauss https://github.com/rstrauss hmmmm, reading around I think you could install the cmake command line tool using your homebrew\n$ brew install cmake\nBut using the cmake-gui is also quite easy. It would just replace the 3rd line with some GUI steps, and generate the makefile system of your choice, on configure...\nI wonder whether it was the simple curses gui, ccmake, or the full Qt based cmake-gui? Just curious...\nAnyway, glad you got current tidy built and installed... You can now always keep up with the latest by -\n$ cd tidy-html5\n$ git pull\n$ then cmake configure and build\nHave you had a chance to test out the latest tidy on your sample html?\nIf the problem is fixed appreciate you closing this issue... thanks...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub https://github.com/htacg/tidy-html5/issues/393#issuecomment-205784982\n. \n",
    "NaziaMuhaimuna": "Thank you for detailed explanation of the current behavior of tidy !!!\nI have a few queries:\n- We have a large amount of legacy HTML that we would like to run HTML Tidy against to identify examples that fit similar patterns.Can you assist us in modifying tidy to generate an error when this pattern is found? \n- Do you have any test automation used to validate the HTML and the rendering of the HTML?\n- Is there any plug-in or extension architectures in HTML Tidy that we could leverage to address this issue ?\n- I have looked through all the config options provided @ http://tidy.sourceforge.net/docs/quickref.html. Is there any other specific documentation on the HTML Tidy implementation so that we can better understand how it works?\nThank you for your support and waiting for reply. \n. ",
    "markstinson": "I downloaded the release binaries right here on Github ( in a nearly fresh & naked updated FIrefoxPortable) and immediately turned around & uploaded them to VirusTotal - No unzips or re-handling.\n. Sure. Here's how I did it.\n1. go to https://github.com/htacg/tidy-html5/releases\n2. download https://github.com/htacg/tidy-html5/releases/download/5.2.0/tidy-5.2.0-win64.zip and https://github.com/htacg/tidy-html5/releases/download/5.2.0/tidy-5.2.0-win32.zip\n3. go to https://virustotal.com ( VirusTotal is owned by Google for around 5+ years and has been in operation for seams nearly like a decade. )\n4. Select and \"upload\" the file. IIRC, it performs an in-browser sha256 of the file it's about to upload. If the sha256 matches a previous binary blob upload, it redirects you to the last set of results. Otherwise, it will then genuinely upload the file.\nThis can be done with any modern browser. I'm running with an updated FirefoxPortable edition when I made the first discovery. Since your findings are different or inconclusive, I just replicated them using my Android Phone and Firefox for Android using the steps above - to rule out my rig being infected (which it shouldn't be).\nSure enough, VirusTotal.com provided me the result set from my previous upload of the zip files last night.\n- tidy-5.2.0-win64.zip = https://virustotal.com/en/file/dd9fd814cc44bc2ffa9b9e547b1a6cbb42b6be7b9358542d3ee7f6e10b676423/analysis/\n- tidy-5.2.0-win32.zip = https://virustotal.com/en/file/94d653498b4f93b14f12a55ca06154e19c540c9b276e5d163f1cf84fa078f97a/analysis/\nI hope this helps. Cheers, Mark S.\n. ",
    "Shanmuganandh": "Thanks @geoffmcl \n. ",
    "majkinetor": "You \u0430re welcome. \nWindows developers still don't have that in the culture - to push to repositories. \nBTW, the source code for the package is here if you ever want to integrate this into your build procedure. \nWindows installation is as simple as: cinst html-tidy. \nThanks.\n. I don't see a license anywhere here ? Can I embed zip archives for x32 and x64 versions in the package (unchanged). Currently the package downloads archives from here.\nThis will reduce eventual network problems on install.\nIf there is a license anywhere that allows redistribution, please point me to it.. Thanks, I must be blind. ;). Can we have a completely statically compiled binary with 0 deps ?. ",
    "TomTrottier": "Hmmm the second apostrophe should  be, spaces omitted, & # 3 9 ;\n. ",
    "GingkoFr": "Hello. Sorry for forgetting to answer.\n\u201c--show-body-only\u201d  does what I wanted.\nThe only improvement I could suggest to add to it is about its eventual ability to keep previously existing indentation, for example relatively to the initial indentation of the first opening tag.\nGingko. ",
    "xktproject": "@geoffmcl  Thanks for your reply! Actually i am now out the company, so i can just describe the problem, sorry for making you confused.\nThe parsed url is http://proxylist.hidemyass.com/, there are some tags <style> like below, when parse the html, below tag <style>.xnyt{display:none}.I76W{display:inline}.iwkZ{display:none}.Z4Ol{display:inline}.T7gL{display:none}.zDtB{display:inline}.B2Xc{display:none}.UeLJ{display:inline}</style> will be removed from the html <body>.\n<span><style>.xnyt{display:none}.I76W{display:inline}.iwkZ{display:none}.Z4Ol{display:inline}.T7gL{display:none}.zDtB{display:inline}.B2Xc{display:none}.UeLJ{display:inline}</style><span class=\"T7gL\">92</span><div style=\"display:none\">92</div>101<span class=\"T7gL\">156</span><span class=\"129\">.</span><span style=\"display:none\">27</span><span class=\"iwkZ\">27</span><div style=\"display:none\">27</div><span style=\"display:none\">51</span><div style=\"display:none\">51</div><span style=\"display: inline\">96</span><div style=\"display:none\">115</div><span style=\"display: inline\">.</span><span></span><span style=\"display:none\">7</span><div style=\"display:none\">7</div><span style=\"display:none\">8</span><span class=\"T7gL\">8</span><span></span><span class=\"UeLJ\">11</span><span style=\"display:none\">175</span><span class=\"B2Xc\">175</span><span></span><span style=\"display:none\">181</span><div style=\"display:none\">181</div><span style=\"display:none\">202</span><div style=\"display:none\">202</div><span style=\"display: inline\">.</span><span class=\"212\">30</span></span>\n I tried with version \"5.2.0\", but i think it is not related to version,I did not use function like \"tidyOptSetBool\", actualy i tried to set some configuration, but can not fix it. Usually before html5, tag <style> appearing in <body> tag will be considered as error, because it usually appear in <head> tag, maybe is it the reason? \n. @geoffmcl  Thanks very much for your patience!\nI use tidyParseString in place of tidyParseBuffer, and test the site: http://proxylist.hidemyass.com/ , and in the codes when debug to thetidyNodeGetText(tdoc, node_tbody, &tmpbuf);, you will see that the <style> </style> in the initial strings have been removed, i can't figure out the reason.\ncodes:\n```\nTidyNode FindNodeByName(TidyDoc &doc, TidyNode tnod, string & strNodeName)\n{\n    TidyNode child;\n    for (child = tidyGetChild(tnod); child; child = tidyGetNext(child))\n    {\n        ctmbstr name = tidyNodeGetName(child);\n        if (name && strNodeName == name)\n                return child;\n    TidyNode tmp = FindNodeByName(doc, child, strNodeName); /* recursive */\n    if (tmp != 0)\n        return tmp;\n}\nreturn 0;\n\n}\nvoid parseSite(string &strResp)\n{\n    ///initialize\n    TidyDoc tdoc;\n    TidyBuffer docbuf = { 0 };\n    TidyBuffer tmpbuf = { 0 };\n    int err;\ntdoc = tidyCreate();\ntidyOptSetBool(tdoc, TidyBodyOnly, yes); \ntidyOptSetBool(tdoc, TidyForceOutput, yes);\n\ntidyBufInit(&tmpbuf);\n\nerr = tidyParseString(tdoc,  strResp.c_str()); \nif (err >= 0)\n{\n    string strName(\"tbody\");\n    TidyNode node_tbody = FindNodeByName(tdoc, tidyGetBody(tdoc), strName);\n    tidyNodeGetText(tdoc, node_tbody, &tmpbuf);\n}\n\n}\n```\nfor instance the initial string is:\n```\n \n                    <tr class=\"\"  rel=\"28555078\">\n<td class=\"leftborder timestamp\" rel=\"1464578342\">\n    <span class=\"updatets \">\n        22secs        </span>\n</td>\n<td>\n    <span>\n      <style>\n\n.sXNP{display:none}\n.gLTS{display:inline}\n.uWY_{display:none}\n.Htm4{display:inline}\n101.4896150.1027278888118118198223.303939116116159180180180243243 \n \n```\nwill change to below and the<style>\n.sXNP{display:none}\n.gLTS{display:inline}\n.uWY_{display:none}\n.Htm4{display:inline}\n</style> tag is removed.\n<tbody>\n<tr class=\"\" rel=\"28555078\">\n<td class=\"leftborder timestamp\" rel=\"1464578342\"><span class=\n\"updatets\">22secs</span></td>\n<td><span class=\"gLTS\">101</span>.<span class=\n\"uWY_\">48</span>96<span class=\"sXNP\">150</span><span class=\n\"gLTS\">.</span><span style=\"display: inline\">10</span><span style=\n\"display:none\">27</span>\n<div style=\"display:none\">27</div>\n<span class=\"uWY_\">88</span>\n<div style=\"display:none\">88</div>\n<span style=\"display:none\">118</span>\n<div style=\"display:none\">118</div>\n<span class=\"uWY_\">198</span>\n<div style=\"display:none\">223</div>\n.30<span style=\"display:none\">39</span>\n<div style=\"display:none\">39</div>\n<span class=\"sXNP\">116</span>\n<div style=\"display:none\">116</div>\n<div style=\"display:none\">159</div>\n<span style=\"display:none\">180</span><span class=\"uWY_\">180</span>\n<div style=\"display:none\">180</div>\n<span class=\"uWY_\">243</span>\n<div style=\"display:none\">243</div>\n</td>\n. Hi @geoffmcl , i think i also find a bug, you can try to parse below html \n```\n\n\n\n            14secs        \n\n\n\n\n.Yl7C{display:none}\n.LeKC{display:inline}\n.f8kl{display:none}\n.ODLH{display:inline}\n.Y_zF{display:none}\n.zXVA{display:inline}\n30101150150187193245.1856565696.103737149149254.293838414343818787107107107131131146148208214214217217217241241241244 \n \n\n        96    \n\n\n\n            Viet Nam        \n\n\n\n\n\n\n\n\n\n   </div>\n</td>\n<td>\n    HTTP    </td>\n<td nowrap>\n    High +KA    </td>\n\n\n```\nand the result will be like below which has error.\n```\n\n30\n101150\n150\n187\n193\n245.185656\n56\n96.1037\n37\n149149254.2938\n38\n4143\n43\n81\n87\n87\n107107\n107\n131\n131\n146\n148\n208\n214\n214\n217217\n217\n241241\n241\n244\n```\n. ",
    "kmaradona": "@geoffmcl \nThank you for replying , i upgraded my tidy-html5 in my mac and it fixed the problem.\nthe other problem um having hear is that on any .php page um still seeing html warnings like missing  , inserting missing 'title' \nI added the ignore_match below , but without any luck , if u can help in that , it will be great \nThanks\n\"ignore_match\": [\n        \"missing <!DOCTYPE> declaration\",\n        \"inserting implicit \",\n        \"inserting missing 'title' element\"\n    ]\n. php sample \nhttps://monosnap.com/file/JtegWoSiQM8PTXhE13kIP2wt2xA3da\ntidy version\nHTML Tidy for Mac OS X released on 25 March 2009\nConfig file \nhttps://monosnap.com/file/cMYVcym8x5fgeT0a8D21yOtBc4KVr5\nthe output expected is to not have html warnings on a php file \n. @geoffmcl  Thanks for ur replay , i installed the tidy 5 but when i go to terminal to see tidy -v i still see the same version .. i don`t know how to upgrade that \n. ",
    "danodan": "I had the same issue.. I'am on a Mac me too, when I ran tidy -v the older version was still there even after the download and installation of the new one.\nFor me the solution was rename the old tidy executable on bin folders and put a symbolic link in place to redirect to the newer version installation folder:\nsudo ln -s /usr/local/Cellar/tidy-html5/5.4.0/bin/tidy /usr/local/bin/tidy\nand\nsudo ln -s /usr/local/Cellar/tidy-html5/5.4.0/bin/tidy /usr/bin/tidy\nhope this helps. ",
    "bdesham": "Actually, this can be used with the \"img\", \"script\", and \"video\" elements too. I'll modify my branch.\n. Great! Here are links to the W3C\u2019s latest documentation on HTML5, all of which mention the \u201ccrossorigin\u201d attribute:\n- img\n- link\n- script\n- video\n. I added support for audio. This time I checked the index and verified that \"crossorigin\" is only used on those five tags.\n. Any objection to getting this merged? \ud83d\ude03\n. ",
    "maxstarkenburg": "\nI have added a binary to the repo Tidy2.dll, if that helps...\n\nImmensely! I have no experience building .dll files, so I would have been lost. Followed your instructions and it worked (I also looked at the online editor I was using -- https://infohound.net/tidy/ -- and since it's pointing to SourceForge, which I understand to be the old home, I'm assuming it's out of date too). \nI will answer my own StackOverflow question in case people find the same issue there. I don't know where else to point people to your new Tiny2.dll (and don't know anything about Notepad++ dev, or if a pull request at bruderstein/NppTidy2 is appropriate in these cases), but I will link to your fork/dll from S.O. Thanks again!\n. S.O. answer updated and site owner e-mailed. Thanks!\n. ",
    "oerdnj": "\nBut after 7+ years I doubt there would be much current software out there using those old headers\n\nOut of this list (using codesearch.debian.org to lookup usages of buffio.h and filtered whether they build-depend on libtidy-dev):\nlibhtml-tidy-perl\npsi-plus\nedbrowse\nxqilla\nphp5\nkde-baseapps\nelementtidy\nlibextractor\nkdewebdev\nabiword\npumpa\nprayer\nlibopkele\nphp7.0\nonly edbrowse also has tidybuffio.h referenced in the source code.\nSo you broke 14 of packages that build-depend on libtidy-dev in Debian. That's 50%. Arch Linux already have compatibility symlinks in place. And Debian will have to follow just to avoid the headache of patching all those packages.\n. I am fine with #420 as an alternative solution. Closing for now.\n. Since the issue is apparently being ignored here, I am just announcing that the package in Debian will bump the SONAME to libtidy.so.6.. Specifically, this is wrong:\nset_target_properties( ${name} PROPERTIES\n                                   VERSION   ${LIBTIDY_VERSION}\n                                   SOVERSION ${TIDY_MAJOR_VERSION} )\nThe VERSION and SOVERSION of the library needs to be independent to the version of the sources.. @geoffmcl Unfortunately, yes, it is needed to bump to SOVERSION and decouple the source version with library version.  You cannot rely on marking functions as deprecated as people might still be using them.\nI am not well accustomed with cmake, but I can probably make PR to do the library versioning properly if you want.  And it should be fairly easy to tweak TIDY_EXPORT for GCC/GNU ld, so it declares the requested symbol visibility also on Linux/Unix.. > and deserves to break if they do...\nWhile the developer in me agrees with you, the package maintainer screams in horror :). That\u2019s not entirely true, the Debian now has libtidy.so.5deb1 to make room for upstream to use 6 as next. Nevertheless the library soname has to be decoupled from source version. There\u2019s no reason to keep them same.. @geoffmcl Ping me in two weeks (5. November) and I might have some time during next IETF, and I'll prepare MR for this.. ",
    "nijel": "It's uTidyLib which is doing this call even when file loading fails. It worked just fine with original Tidy and now leads to segfault.\nTo reproduce just invoke tidyParseFile on nonexisting file and then tidyCleanAndRepair.\n. With your patch I still get a crash:\n```\n0  0x00007ffff507829c in prvTidyCheckHTMLTagsAttribsVersions (doc=0x273f560, node=0x273f560) at /home/nijel/work/tidy-html5/src/tidylib.c:1587\n1  0x00007ffff5078a37 in tidyDocCleanAndRepair (doc=0x273f560) at /home/nijel/work/tidy-html5/src/tidylib.c:1913\n2  0x00007ffff5077805 in tidyCleanAndRepair (tdoc=0x273f560) at /home/nijel/work/tidy-html5/src/tidylib.c:1179\n```\n. Thanks, this works fine! The PR with your patch is here: https://github.com/htacg/tidy-html5/pull/433\n. ",
    "vargenau": "Thank you for merging.\nYes, some translations did not mean anything.\n. ",
    "TPS": "Since #433 supersedes this & is already merged, shouldn't this be closed?\n. ",
    "chowbok": "Aha, I forgot I had doctype set to strict in my tidyrc. Sorry about that. Looks good now.\n. ",
    "tewe": "The file is gzip'ed. I didn't notice because the .gz extensions was missing and my text editor decompressed it automatically. Which tidy doesn't (not that it should). Run through gunzip everything works. Sorry.\n. ",
    "jidanni": "OK maybe --doctype auto doesn't in fact change the doctype found. But at least the man page should say that it is guaranteed not to.\nAlso the way the man page is written, the user might really try \"--doctype user\".\n. P.S.,\n```\ntidy --doctype '\"-//ACME//DTD HTML 3.14159//EN\"' didn't do anything, and\ntidy --doctype: '\"-//ACME//DTD HTML 3.14159//EN\"'made an error.\n``````\n. Add a switch to make tidy promise not to change the doctype when in auto\nmode. One likes how tidy detects doctypes, but doesn't like it changing\nthem. Here's my workaround:\n$ cat dantidy\n!/bin/sh\nCopyright       : http://www.gnu.org/licenses/gpl.html\nAuthor          : http://jidanni.org/\nLast Modified On: Thu Dec  8 20:07:16 2016\nUpdate Count    : 33\nset -eu\nf=/tmp/dantidytmp_$USER\ncat > $f\nEnsure tidy won't change the DOCTYPE it finds:\ncase $(sed 2q $f) in\n    strict) DT=strict;;\n    loose)  DT=loose;;\n    '<!DOCTYPE html>') DT=html5;;\n    ) exit 99;;\nesac\nperl -C -pwe 's/[^[:ascii:]]/sprintf \"\\x{%04x}\",ord $&/ge' $f| #my uni2ascii(1)\n    tidy --doctype $DT --gnu-emacs yes --indent-spaces 1 --indent auto -utf8 \\\n     --tidy-mark no -quiet --fix-backslash no --enclose-block-text yes \\\n     --vertical-space yes \"$@\" |\n    perl -C -pwe 's/\\x{([[:xdigit:]]{4})}/chr eval \"0x$1\"/eg' #my ascii2uni(1)\n(not sure if I still need all the uni2ascii stuff.)\n```. There should be a way for the user to indicate to tidy,\nvia the command line switches, that under no circumstances it is allowed\nto change the doctype found in the document. And it should use the\ndoctype found when deciding what content is valid or not.\nSometimes it is great that tidy decides a different doctype would be more\nsuitable. But sometimes it is not always great.\n. Fine. Then just add on the man page \"The only circumstances tidy will\nchange the doctype found in the document are if ... \".\n. By the way,\n$ tidy --drop-proprietary-attributes yes --strict-tags-attributes yes file.html\nline 17 column 7 - Warning: <a> proprietary attribute \"ajaxify\"\nWhy not also mention \"stripped\", e.g.,\nline 17 column 7 - Warning: <a> proprietary attribute \"ajaxify\"...stripped\nor\nline 17 column 7 - Stripping: <a> proprietary attribute \"ajaxify\"\nElse the user wonders why the same message appears when you do, or\ndon't do, anything about it.\nHTML Tidy for Linux/x86 version 5.2.0. I thought the Warning: discarding invalid character code 143 stuff was\ncoming from the file, so I snipped the rest. As I didn't send a file,\nthey must instead be coming from the filename. Perhaps the warnings\nshould mention on each line that they are coming from the filename...\n. (I only test .debs... when they reach Debian sid.)\nAnyways if you don't output Filename Problem: ... ... ...\nthey nobody will guess the messages are not about HTML,\nas 99.999% of them usually are.\n. Sorry I cannot help, because I am busy.. Sorry I cannot help, because I am busy.. Find me one other man page in the world with repeated sections.\nAnd how, when they are converted to HTML, are they supposed to link\nto a unique href=\"#synopsis\" ?\nAnd if your professor asks you for a synopsis, do you give him two?\nHe asked you for a synopsis, i.e., nutshell.. OK must be a Debian bug.\nCreated http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=847439 .\n. OK I'll let you guys take care of it.. Yes, the worst thing is if tidy fixed something for me with just a\nwarning if any, buried way down among other warnings.\n. 5.2 is the newest here on Debian.. OK I will tell http://bugs.debian.org/888839 .. Just like when we are browsing with images purposely turned off,\nor ad blockers are removing images, readers still would like to know\nhow the page was structured. So height and width are as important as\n\"alt=\". Readers need to know there was a big image there vs. a tiny\n1x1 image there.\n. @geoffmcl I don't think tidy is a dead link checker, or should look for image files and tell the user the size to put in. I just want in to tell me, in addition that I should add an \"alt=\", I would optionally usually want to know that I forgot width= and/or height=. (And no, no AI needed to tell me what the alt= should say :-) )\nAnd yes saying \"missing ... and/or ...\" is good enough, as if the user just forgot one of width or height, he already needs more help than tidy can provide :-). Yes, with 5.6.0\n1. The user should not have to use --fix-uri no. Why?\nbecause he has fed in HTML5 where such URIs are perfectly valid.\nHe fed in HTML5, not HTML4.\n\n(By the way, even if he does use --fix-uri no,\nin the \"Tidy found n warnings\" n is reduced, but the\nURIs must be properly escaped, they must not contain unescaped\nmessage remains!). I think you mean: '''--drop-empty-elements yes''' .. \n",
    "Lin-Buo-Ren": "Provide my case: \nI'm working on a few mixed doctype webpages using legacy attributes, and this particular XHTML 1.0 Transitional webpage:\nline 23 column 5 - Warning: <table> proprietary attribute \"bordercolor\"\n(..stripped...)\nline 339 column 5 - Warning: <table> proprietary attribute \"bordercolor\"\nInfo: Doctype given is \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\nInfo: Document content looks like HTML Proprietary\nthe doctype: auto option causes the XHTML 1.0 Transitional DTD being removed and on the second call it adds a XHTML5 DTD, claiming the page looks like XHTML5, and output a bunch of compliance warning since the page is in fact, not XHTML5:\nline 2 column 1 - Warning: missing <!DOCTYPE> declaration\n(... a bunch of these, stripped)\nline 1127 column 5 - Warning: The summary attribute on the <table> element is obsolete in HTML5\nline 20 column 3 - Warning: <div> attribute \"align\" not allowed for XHTML5\n(... a bunch of these, stripped)\nline 1169 column 13 - Warning: <div> attribute \"align\" not allowed for XHTML5\nline 21 column 5 - Warning: <table> proprietary attribute \"bordercolor\"\n(..stripped...)\nline 337 column 5 - Warning: <table> proprietary attribute \"bordercolor\"\nInfo: Document content looks like XHTML5\nTidy found 197 warnings and 0 errors!\n. Apologies for the delay.  \nAlthough it is definitely possible to publish the snap in a separate repository I would like to ask for a reconsideration of taking over the maintenance of the snap package.\nIn contrast to traditional packaging systems packages, snap packages can be installed on a broad range of Linux distributions that can run snapd, this makes it a suitable release target to be featured in the HTML Tidy Binary Releases page and provides an up-to-date and aligned experience to the users.  With the continuous integration and delivery setup it is also easier to let the user test changes in the latest development snapshots by simply telling them to install the package via the automatic publishing edge channel with a simple command:\nsudo snap refresh --channel=edge tidy\n\nThe snap technology is built for the upstream, in addition to the release channels, it provides tracks that enable developers to publish multiple supported releases of their application under the same name.  By using this feature you can provide releases of both master and next branch as a track simultaneously with 4 independent release channels for QA purposes.\nLast but not least the packaging of this snap is, in fact, the simplest one I have ever done and only took me less than one day to set it up into a usable state.  It would really be a pity if you don't take over the maintenance.\nI appreciate your offer of providing the separate GitHub repository under the HTACG organization, but currently due to the limitation of the build infrastructure on build.snapcraft.io the automatic build and publish of edge channel snaps is only possible when the packaging files and the snapped app's source are in the same repository AND the snap publisher has the write access to the repository.\n. I'm currently proposing of acquiring a webhook that can be set in the upstream's repository for triggering automatic third party snap build on every push and would like to ask if you're willing to set up one if it's available.. I believe the setlocale call is proper, we should fix whatever problems that the user's locale cause after adopting it instead of keep it C or C.UTF-8. > At least change the locale back to what is was!\n~~Good point, this should be as easy as a setlocale(LC_ALL, \"C\") call.~~. > Also, you should use LC_MESSAGES for this, not LC_ALL.\nLC_MESSAGES isn't portable(it isn't in the Standard C, POSIX maybe). What about:\n```c\n/ Backup the previous locale /\nchar *previous_locale = setlocale(LC_ALL, NULL);\n/ Inherit the locale from the environment and use it to set Tidy's language /\nTY_(tidySetLanguage)( setlocale( LC_ALL, \"\" ) );\n/ Restore the previous locale /\nsetlocale(LC_ALL, previous_locale);\n```\nDoes that make sense and solve the OP's problem?\n\nRETURN VALUE\nA successful call to setlocale() returns an opaque string that corresponds to the locale\nset. This string may be allocated in static storage. The string returned is such that a\nsubsequent call with that string and its associated category will restore that part of the\nprocess's locale. The return value is NULL if the request cannot be honored.. I've changed the test code and the speculated results to match what Tidy does.\nin reply to your last point... you can't select a temporary language change if it does not exist\n\nPlease disregard the part I said that the localization works only when the locale is installed, it is merely a speculation due to my unfamiliarity of how the glibc locales work.  \nThe obvious problems to the doc and code are:\n\nThe method to switch the language doesn't apply to at least the GNU+Linux platform(requires at least language_territory.codeset, language_territory is not enough), I would suggest just mention the LANG environment variable(without example values) as readers may be confused.\nThe setlocale(3) call in some circumstances returns the entire list of locale environment variables LC_CTYPE=...;LC_NUMERIC=...;LC_TIME=... but not the locale name, which will be parsed as language lc_ct by Tidy if I understand the code correctly.\n\nChecking LANG (and probably, LC_MESSAGES) works but as you've said it isn't portable.\n(NOTE: LANG and LC_MESSAGES isn't defined in locale.h, probably not in standard C)\nReference: Setting the Locale (The GNU C Library). At least in glibc, the setlocale(LC_ALL, \"\") or setlocale(LC_ALL, NULL) calls will return a regular locale name when:\n\nAll the non LC_ALL locale categories are set with the same locale name\n\nThe calls will return a composite locale name, which is a semi-colon separated list of entries of the form CATEGORY=VALUE, if:\n\nAt least one of the non LC_ALL locale categories are set with a different locale name.\n\nRelated source: https://sourceware.org/git/?p=glibc.git;a=blob;f=locale/setlocale.c;h=e4de907e1f48396f7f505be359b44479bb1a39b8;hb=HEAD#l269\nNot sure for other platforms, though.. I would suggest Tidy determine the language in the following order:\n\nParse the value of LANGUAGE according to https://www.gnu.org/software/gettext/manual/html_node/The-LANGUAGE-variable.html and chooses the first language name which translation is available\nTry LC_MESSAGES\nTry LANG\nFallback to the current setlocale call\n. I implemented a fix that takes care of 2, 3, and 4.. \n",
    "bfrmtx": "Sure, wrap php shall force a new line - that is the exactly the same behavior as we expect with HTML code\n<?php include(\"/a.inc\"); ?>\n<?php include(\"/b.inc\"); ?>\n<?php include(\"c.inc\"); ?>\nThank you for your fast and kind response\n. Ok, that's fine for me.\nI checked out your code, did the mentioned modification - works fine!\nI would also agree to make a new feature out of it in order not to disturb a possible \"diff check\"\nI have added a test case (with fake number) for you - in case it becomes a new feature.\n```\n<!DOCTYPE html>\n\n\n\n[ #123456789 ] Improve support for wrap PHP \n wrap php single to multiple lines properly \n\n\n\nwrap-php-extended\nType: Boolean\nDefault: no\nExample: y/n, yes/no, t/f, true/false, 1/0  \nThis option specifies if Tidy should line wrap text contained within PHP pseudo elements, which look like: <?php ... ?>. \nThe extended option will additionally force newlines for nested php statements.\n\n\ntest with: \n tidy --wrap-php yes --char-encoding utf8 --clean yes -indent --indent-spaces 2 --wrap 90 --input-encoding utf8 --tidy-mark no in.html > out.html\nissue: #329\n <?php mkheader(); ?><?php mkbody(); ?><?php mkfooter(); ?>\n\n\n```\n. ",
    "Claghorn": "Thank you, I guess I couldn't see that option for all the others. (Of course, now there seems to be too much vertical space with two lines between each paragraph, but it is still much more readable, two blank lines is no big deal).\n. ",
    "dengeist": "Hi @geoffmcl!\nThe original problem tag is directly from jQuery's CDN:\n<script src=\"https://code.jquery.com/jquery-3.1.0.min.js\"\n        integrity=\"sha256-cCueBR6CsyA4/9szpPfrX3s49M9vUU5BgtiJj06wt/s=\"\n        crossorigin=\"anonymous\"></script>\nTidy warns 'proprietary' attribute on both crossorigin and integrity. After reading #418, I saw comments about the tags you were explicitly considering while adding crossorigin support, so I tried:\n<img src=\"http://placehold.it/350x150\" alt=\"placeholder\" crossorigin=\"anonymous\">\nand crossorigin is again warned as proprietary. I expected no warnings from the file in either case because there are no other issues. Again, these can be suppressed by changing show-warnings but that is not ideal.\nSome background info:\n```\nOS X 10.11.3\n$ tidy -v\nHTML Tidy for Mac OS X version 5.2.0\n$ which tidy \n/usr/local/bin/tidy \nthis should be the Brew one, right? OSX's default Tidy is in usr/bin\nTidy config: default\n```\nLet me know if you need something else!\n. Okay, so I just realized the problem is that I got Tidy from Brew. I see that the actual current library is newer. Apologies! It looks like Brew needs to be told there is a newer version of Tidy, too. :)\n. I don't know why I didn't think to use Brew to build the latest Tidy! Thanks for the suggestion, and I'm very glad I could help raise the integrity issue. Sorry again for not realizing I was outdated.\n. ",
    "marcograss": "no input at all is required to trigger it, just execute tidy with address sanitizer.\n. thanks, I will test as soon as I return back to work,\nmitre thinks it can be reachable from apps using libtidy, what's your tought about it? they assigned CVE-2016-6583\nbut I don't have my linux box so I cannot actually check this analysis\n. ",
    "dieselmachine": "Script elements only contain those 2 tags. The content model is basically just making it clear that \"flow control\" elements (http://w3c.github.io/html/dom.html#flow-content) are not allowed as children of uls; only li tags, and script tags (which won't modify layout at all) are allowed in the ul. Text nodes are in the 'flow' category, so aren't allowed in a ul. <A> tags are flow, so are also not allowed (despite one of the linked issues showing an A tag in a UL tag and claiming it's valid markup, which it isn't).\nThe spec for the UL element is essentially the same as it was in HTML4, the only difference is that HTML5 allows 0 LI elements, while HTML4 required at least 1 LI (the DTD is here: https://www.w3.org/TR/REC-html40/sgml/dtd.html#block)\nI personally think that conforming to spec would be more important than attempting to preserve templating syntax. The templating syntax seems more of a 'bonus feature', while outputting correct html seems like the main purpose of the library. I don't think added features should weaken or break the main functionality of the library.\nIn addition, we primarily use tidy for cleaning dynamic content submitted by users, while templates are basically static. We've never once needed to run tidy on our jinja templates, because we're in control of them, so we can do it correctly the first time. It's really just the users we're worried about. I imagine there could be a use case when allowing users to upload jinja templates, but that seems like such a bad idea security-wise that I wouldn't ever think of allowing it.\n. ",
    "alexneblett": "so the extra space is caused by an extra space that tidy places between the spans with a display: inline-block. Removing that space cures it.\nI made a small hack to src/tags.c to test my theory:\n{ TidyTag_SPAN,       \"span\",       VERS_ELEM_SPAN,       &TY_(W3CAttrsFor_SPAN)[0],       (CM_INLINE),                                   TY_(ParseInline),   NULL           },\nto\n{ TidyTag_SPAN,       \"span\",       VERS_ELEM_SPAN,       &TY_(W3CAttrsFor_SPAN)[0],       (CM_INLINE|CM_BLOCK|CM_MIXED),                 TY_(ParseBlock),   NULL           },\nand it cured all the other issues. Now, for a proper fix and not a terrible hack...\nI will put together and send over a small table in the A.M.\nThanks,\nAlex\n. ",
    "maxfancourt": "Hi Geoff you are quite right there is nothing wrong with the comment being on the same line.. it was down to visual aesthetics.... so not a big issue  at all... just a little one\nmax\n. ",
    "AthanasiusOfAlex": "\nI certainly agree, the first, tidyOptParseValue should make it clear that the optnam is a string, and not an enumerated TidyOptionId\n\n... and that the string that should go there is to be found in the API. (I thought naively that I was supposed to put in the TidyOptionId as a string.)\n. ",
    "zen0x90": "In tidyplatform.h:\n\n/* hack for gnu sys/types.h file which defines uint and ulong */\nif defined(BE_OS) || defined(SOLARIS_OS) || defined(BSD_BASED_OS) || defined(OSF_OS) || defined(IRIX_OS) || defined(AIX_OS)\ninclude \nendif\nif !defined(HPUX_OS) && !defined(CYGWIN_OS) && !defined(MAC_OS_X) && !defined(BE_OS) && !defined(SOLARIS_OS) && !defined(BSD_BASED_OS) && !defined(OSF_OS) && !defined(IRIX_OS) && !defined(AIX_OS) && !defined(LINUX_OS)\nundef uint\ntypedef unsigned int uint;\nendif\nif defined(HPUX_OS) || defined(CYGWIN_OS) || defined(MAC_OS) || defined(BSD_BASED_OS) || defined(_WIN32)\nundef ulong\ntypedef unsigned long ulong;\nendif\n\nHmm...I'm not sure but did they forget this : \n\ndefined(LINUX_OS)\nOn another topic, but maybe related, why are you using -std=C99? Do you use C99 declarations in >your clean.c? Why do you not name it clean.cxx, then you should not need C99(C11) C extensions, >which by the way are not supported in Windows MSVC compilers until the latest MSVC 2015...\n\nWell actually, I have no code for \"clean.c\" but my project use C99. I'm not concerning by Windows as I'm on GNU/Linux.\n. Still in tidyplatform.h :\n\nelif defined(linux) && (defined(i386) || defined(i486) || defined(i586) || defined(i686))\n/* Linux on x86 - gcc compiler */\ndefine LINUX_OS\nifndef PLATFORM_NAME\ndefine PLATFORM_NAME \"Linux/x86\"\nendif\n\nNothing for GNU/Linux 64 bits...So LINUX_OS macro is not defined.\n. I identified precisely the problem now. This is because \"uint\" type has been removed from c99. In  the macro \"__USE_MISC\" must be defined to use \"uint\" type. And \"__USE_MISC\" macro is defined only if \"_BSD_SOURCE || _SVID_SOURCE\". But both are deprecated.\nBecause of that, just checking sys/types.h is not enough. I think the better solution is to declare (check the types existence first if needed) \"uint\" and \"ulong\" in \"tidyplatform.h\".\nOtherwise, it works fine (with c99) if you compile with \"_GNU_SOURCE\" (this define \"__USE_MISC\").\n\n$  tidy -v\nHTML Tidy for Linux version 5.2.0\n\nConcerning Windows, c99 is not implemented (in Windows compiler). So, I don't want to fight with preprocessor instruction to make it compile on Windows. But in case, I need my project to be able to compiler on Windows I'll do it.\nSo, I solved the issue by compiling with \"-D__GNU_SOURCE\".\n. > glad you found the solution, and as I thought, it is tied to this quasi C99(C11) standard?, absolutely >not yet agreed for massive cross-porting of code...\nGod !! You're right I don't know why I used C99...Well, I'm switching to C11 now.\n\nAnd as you understand, MS Windows compilers have been very late coming to this, what laziness? >party ;=))\nBut very glad you found yet another GNU define, that puts things back to where they were a little, >even when you choose C99... for what ever reason...\nI will try to find a place in our Tidy documentations to add the obscure -D__GNU_SOURCE, if you >want to declare C99, and still use libTidy's C headers...\nAnd certainly hope you will consider a MS Windows port, probably still upwards of 40% plus of the >desktop market share in some stats, for your great app...\nReally, thank you for this issue, time. exploration, solution and close...\n\n\\o/    ;)\n. ",
    "HaleTom": "That solved it! Thanks!\n. ",
    "GavinAlison": "I write it wrongly\uff0cCode review!!!\n. ",
    "MartinPerry": "Thank you for your reply. The \"random\" loss of elements was caused by cURL. It sometimes downloaded the page incorrectly and I did not notice - it was just one missing block from raw downloaded data.\nAs for <script>, I can see it in \"dump\", but  there is no \"close\" node from within IterateNode .... even in your example, there is no output of .... in the second half of text:\nEg., what I expected\nStartTag script   type=\"text/javascript\" src=\"../lib.js\"\n    Text   (20) '<!--some comment -->'\n  <THIS IS MISSING (?) EndTag script .....>\n  StartTag body\n(However, this is not just <script> issue, I don't see \"end tags\" anywhere.)\n. @geoffmcl \nOk.. thank you for your help. I will do the checks manually using recursion depths.\n. ",
    "garvankeeley": "For debugging, i suspect the build does not have -g -O0 (symbols on, zero optimization), each file needs to be compiled with those flags (dash-g is the critical one). \nFound a good explanation (1st answer): https://stackoverflow.com/questions/36968721/lldb-not-showing-source-code\nEdit: this project uses cmake so something like: config --debug, or cmake -DCMAKE_BUILD_TYPE=Debug should work. Ping me if neither of those seem to apply here. \nOr, here is how to change the cmake config for yourself so that it only builds debug http://unix.stackexchange.com/a/188167\n. thanks @geoffmcl! \n@marcoscaceres feel free to ping me (in or off thread) if you want me to look at anything, mainly have to make sure compiler is setup to catch the requirements (easy to miss all the needed changes otherwise). \n. char* charsetString = \"charset=\";\n// Unless *very* perf critical code, you can't go wrong with calloc over malloc if you are new to C, the former guarantees to zero out the memory, latter does not. (non-zero at the end of string makes things go boom)\nchar* expected = calloc(strlen(enc) + strlen(charsetString) + 1 /*1 more for null terminator*/, sizeof(char*));  \nstrcat(expected, enc); // expected now equals enc\nstrcat(expected, charsetString); // expected now has your enc plus the concatenated string\n// do stuff with expected\nfree(expected);\nAside: enc is a ctmbstr  not a char* so if this codebase has a string class (/me friend of patcher, doesn't know this codebase) it might be expected to use that.\nOverall not too shabby for a JS-head \ud83d\udc4d \n. ",
    "fgeek": "My pleasure to help. I do not have the skills to fix this with patch, sorry. For the record we did not find any security issues while fuzzing the binary. Have a nice weekend.\n. Patch seems to fix this issue. Thank you for fast response and work. If I find some additional bugs I will create new issue to GH.\n. Please use CVE-2017-13692 for this issue.. @geoffmcl What do you mean by deal with that? I just linked it here so that upstream is aware of the CVE identifier. I did not request it. Just cross-referencing from the CVE database.. ",
    "lhchavez": "Ah this is just a difference in the HTML5 spec. Previously <button>..</button> was allowed to contain flow as children (which includes blocks and inlines). In HTML 5, that is restricted to phrasing content (only inline elements)\nI'll send a PR for this.. oh, sorry i've been in the critical path. please go ahead and merge that other change since it's clearly better for everyone!\nif i end up seeing other issues, i'll send further PRs. i'll close this one.. (and by \"this one\" i mean the one i sent). After a bit more though, I think I'd rather fix #461 more generally. I still want to submit this, but I'll rename the branch to something more appropriate.. PTAL! I tested this against https://github.com/geoffmcl/tidy-test/commit/4f6089bcb09c087b28a31b1e6353d2d6a9aa3ceb and passes, and against https://github.com/htacg/tidy-html5-tests , where the insert-inline-tags config needs to be added to case-1015959.conf in order to pass completely.\n. hmm interesting. let me try running that again AND sending the patch to the regression tests, which I should have done from the beginning instead of just mentioning it in the PR. Sorry about that.. All right, checking out the next branch plus this PR, building it and running it against https://github.com/htacg/tidy-html5-tests/pull/13 passes everything on my machine. Let me know if there's anything else that's missing and thank you for your time :D. ah! I thought ./runalltests.sh ran everything :P okay, let me go back and investigate the failures. Sorry for any confusion I caused.. All right, inspected a few of the failures and it turns out that having this flag off by default produces HTML that is incorrect in edge cases :( I agree that the default should be yes because it's probably more correct to deal with the edge cases on a case-by-case basis like I did for https://github.com/htacg/tidy-html5/pull/531\nThis now passes with tip-of-tree https://github.com/htacg/tidy-html5-tests (and I made sure to inspect the diffs this time), so PTAAL!. Ah sorry that I hadn't replied. I agree with you in general, but there is one use case I think this still might be useful: templating languages. If we declare a custom tag it has to be either blocklevel or inline, and whichever one you choose will cause Tidy to insert extraneous closing tags in some places.\nThe one I'm interested in is the one from Vue, but since they use <template>...</template>, and (after just going through the spec one more time) IIUC that one's content model includes almost every other tag and can be added mostly anywhere, I might have run into another bug. I'll probably re-try whatever I was doing and document the exact failures instead of adding workarounds.\nHaving said that, I'm fine with either adding this flag with the warnings you suggested, or adding a new kind of custom tag that can be placed anywhere and supports adding any element without Tidy trying to guess whether tags should be closed when the boundary is straddled (which is mostly the same as adding this flag, but containing its effect within a small scope of the file). Regardless, I'll try to send patches to fix any issues I see specifically with Vue :). PTAL! This was tested against https://github.com/geoffmcl/tidy-test/commit/4f6089bcb09c087b28a31b1e6353d2d6a9aa3ceb and passes.. That was probably my fault. I included the string \"fix ${URL}\" in the commit message, and GitHub automatically closed the issue based on that.. Ah I did search the issues for \"Travis\", \"CI\", \"Continuous Integration\", but failed to also look at the closed ones.\nI completely agree that developers should test their changes before sending them over for review and have been heavily pushing pre-upload tests on all the projects I've worked on. They are amazing and do reduce the amount of noise that even gets to the PR stage. Unfortunately, git does not support automatically enforcing these :( So CI is the next-best thing I know of.\nThen again, as you mention, different results on different platforms is a real issue. Not all developers have access to all combinations of OSs, and I believe CI can help here. Throwing a Windows-specific CI like Appveyor into the mix, and you should be able to get 99.5+% since you'll be able to cover the three most popular OSs.\nIn any case, it seems like my case is not any stronger than the previous ones that have already been rejected, so I'm happy that at least the improvement to the scripts was accepted.. Yes, this is not supposed to be an excuse for developers to be lazy, only a safety net so that they can see exactly what is expected to be tested in all platforms. That way you, the maintainers just need to do manual testing once the minimum bar has been met. I know this would have helped save both me and @geoffmcl some time in my previous PRs because even though I did perform due diligence in running the tests, the way I ran the scripts was wrong and did not catch some regressions I introduced :( The documentation has since been updated, so nobody should use this as an excuse for the future.\nRegarding platform coverage, Travis can get you one of {Precise,Trusty} and one of these versions for macOS, Appveyor can get you one of VS {2013,2015,2017} (maybe more, I'm not too familiar with that service). As for the RPi, I can probably help get the needed environment so that GitHub can talk to a device (that somebody else might need to provide and maintain) on every PR.. All right, very last attempt, I promise :)\nThe one thing I personally found difficult about having a separate test repo is the fact that they can not be in sync. The git submodule approach I followed was just the path of least friction to get this working, but I think that's suboptimal in the long run (as I outlined in https://github.com/htacg/tidy-html5/pull/546 ), and the only way to ensure that the code and tests are updated in tandem is for them to be in the same repository (but I didn't want to pitch that idea at first, one change at a time). If this is something that the tidy project does not want to do in the long run (for any reason), then I agree that the maintenance burden is going to be higher and the false positives / negatives will greatly reduce the value of any CI (or even make it negative!).\nLeaving CI aside, I think there's still some merit to having the tests and code being in the same repository: a make/cmake target can be added to run the whole suite of tests (so make && make test or ctest could be a shortcut for contributors). You also get a consistent set of tests for the code at any given point in time, no more branch juggling.. PTAL!\nThis is how it would look like: https://travis-ci.org/lhchavez/tidy-html5/builds/229552310 . Every pull request would also display a small green / red badge with the result of the tests, for immediate feedback to any PR author.\nNote that this requires https://github.com/htacg/tidy-html5-tests/pull/18 in order to work.. Note that this needs to be changed to https://github.com/htacg/tidy-html5-tests , but since I needed to test this out with my own repository I had to hardcode my own fork here.\nIf we ever decide to go forward, I'll change this with the correct URL.. ",
    "still-dreaming-1": "Apparently HTML 4 transitional is no longer a valid doctype accorting to the specification: https://github.com/validator/validator/issues/408\n. I'm pretty sure anything with that DOCTYPE I posted will reproduce this. I also told you what the output I see is that I thought was strange. Originally I thought this was a bug because I thought I was using a valid doctype. My follow up comment shows that I found out it actually is not a valid doctype. I think tidy should report that as an error or a warning since there is no longer a valid doctype for HTML 4 transitional: https://html.spec.whatwg.org/multipage/syntax.html#syntax. I'm not sure what the prettified HTML should be since changing to a different doctype would be a pretty big change. I don't really have an opinion about that part.\n. I guess in my opinion I see tidy as simultaneously being both a validator and pretty printer. The reason I say that is... well... those are the features it offers. It gives you warnings, errors, and info, not just pretty printed HTML. Also I see no reason not to provide both as they are related. If I am going to use a validator and it tells me about some problems and the pretty printed HTML was different from the original, I could diff the changes and consider those as suggestions for how to fix those validation problems.\nThe reason I bring that up is I'm saying I would like to see as many relevant validation warnings and errors as possible. Perhaps I am misunderstanding the difference between https://validator.w3.org/check?uri=http%3A%2F%2Fgeoffair.net%2Ftidy%2Findex.htm and the nu equivalent https://validator.w3.org/nu/?doc=http%3A%2F%2Fgeoffair.net%2Ftidy%2Findex.htm\nI thought the nu one was just more up to date / accurate with the current specification?\nSo specifically here is one question we can discuss. Should any attempt use an HTML 4 transitional doctype cause tidy to display some kind of warning or error? I think it should because as far as I understand it, the use of HTML 4 transitional doctype is no longer valid. Now when I say no longer valid this is a tricky topic. Because it is no longer valid, according to @cvrebert, this means it is spec'd as \"Authors MUST NOT use it\". However, because it used to be valid, it is also spec'd as \"Browsers MUST implement it\". So at the very least, since tidy is partially an HTML validator and authors must not use this, tidy should at least show a warning when you use any doctype other than the ones shown at https://html.spec.whatwg.org/multipage/syntax.html#syntax\nBut you might be right this could be part of a larger change in direction for tidy. If it starts reporting HTML 4 only stuff as warnings, would that be a change in direction? I'm sure you know more about that than I do. I'm just saying tidy is at least partly a validator and is showing an invalid doctype as valid.\nI think mainly what I have learned from all this is I should not try to use tidy as modern validator, I should just use https://github.com/validator/validator instead. I was evaluating both of them and I think I have my answer now.. ",
    "slavatarbinskyi": "Okay,thats my fault,didnt noticed that OutputBodyOnly setted to Yes,when i setted it back to No,it works perfectly,but still when i trying to use it for a full webpage where are some scripts and etc,its giving much of  warning and still output is empty,may i ask what can be wrong for now?http://mta.ua/plansheti?mfp=13113f-bezprov-dn-tehnolog\nThats a page which i wanna check.\ndoc.OutputBodyOnly setted to No;\nGetting much of warnings:\n\nline 6 column 1 - Warning: missing  before \nline 36 column 73 - Warning: unescaped & or unknown entity \"&lang\"\nline 89 column 49 - Warning:  unexpected or duplicate quote mark\nline 89 column 49 - Warning:  unexpected '=', expected attribute name\nline 89 column 49 - Warning:  unexpected or duplicate quote mark\nline 89 column 49 - Warning:  unexpected or duplicate quote mark\nline 96 column 378 - Warning: missing  before \nline 97 column 1 - Warning: inserting implicit \nline 99 column 7 - Warning: discarding unexpected \nline 177 column 95 - Warning: nested emphasis \nline 217 column 11737 - Warning: unescaped & or unknown entity \"&order\"\nline 217 column 11747 - Warning: unescaped & or unknown entity \"&page\"\nline 99 column 45 - Warning: missing \nline 440 column 210 - Warning: missing \nline 919 column 95 - Warning: '<' + '/' + letter not allowed here\nline 919 column 164 - Warning: '<' + '/' + letter not allowed here\nline 919 column 178 - Warning: '<' + '/' + letter not allowed here\nline 919 column 182 - Warning: '<' + '/' + letter not allowed here\nline 919 column 234 - Warning: '<' + '/' + letter not allowed here\nline 919 column 249 - Warning: '<' + '/' + letter not allowed here\nline 919 column 253 - Warning: '<' + '/' + letter not allowed here\nline 929 column 95 - Warning: '<' + '/' + letter not allowed here\nline 929 column 142 - Warning: '<' + '/' + letter not allowed here\nline 929 column 156 - Warning: '<' + '/' + letter not allowed here\nline 929 column 160 - Warning: '<' + '/' + letter not allowed here\nline 929 column 234 - Warning: '<' + '/' + letter not allowed here\nline 929 column 249 - Warning: '<' + '/' + letter not allowed here\nline 929 column 253 - Warning: '<' + '/' + letter not allowed here\nline 2917 column 57 - Error:  is not recognized!\nline 2917 column 57 - Warning: discarding unexpected \nline 2927 column 57 - Warning: discarding unexpected \nline 2994 column 183 - Warning: '<' + '/' + letter not allowed here\nline 3008 column 193 - Warning: '<' + '/' + letter not allowed here\nline 3012 column 196 - Warning: '<' + '/' + letter not allowed here\nline 3033 column 116 - Warning: entity \"&nbsp\" doesn't end in ';'\nline 3046 column 121 - Warning: entity \"&nbsp\" doesn't end in ';'\nline 3060 column 115 - Warning: entity \"&nbsp\" doesn't end in ';'\nline 3120 column 39 - Warning: entity \"&nbsp\" doesn't end in ';'\nline 3122 column 42 - Warning: entity \"&nbsp\" doesn't end in ';'\nline 136 column 716 - Warning:  attribute \"href\" lacks value\nline 138 column 206 - Warning:  escaping malformed URI reference\nline 217 column 64 - Warning:  attribute \"href\" lacks value\nline 217 column 530 - Warning:  escaping malformed URI reference\nline 217 column 1448 - Warning:  escaping malformed URI reference\nline 217 column 3002 - Warning:  attribute \"href\" lacks value\nline 217 column 3486 - Warning:  escaping malformed URI reference\nline 217 column 6481 - Warning:  attribute \"href\" lacks value\nline 217 column 6958 - Warning:  escaping malformed URI reference\nline 217 column 8426 - Warning:  escaping malformed URI reference\nline 217 column 9300 - Warning:  attribute \"href\" lacks value\nline 217 column 11076 - Warning:  attribute \"href\" lacks value\nline 217 column 12637 - Warning:  escaping malformed URI reference\nline 217 column 13216 - Warning:  attribute \"href\" lacks value\nline 291 column 73 - Warning:  attribute \"href\" lacks value\nAnd so on...\n\nWhat can it be for now?. dirty.txt\nThat's exactly html which im trying to fix.Hope it will help.. @geoffmcl Document encoding is 1251,just checked that with File.ReadAllText(\"dirty.txt\",Encoding.GetEncoding(1251));\nOkay,now all that i need to do its just to set Input and Output Encoding of TidyManaged to 1251,but i cant find it in a list of encodings,others giving errors,any ideas?Thanks for helping me.\nRegards,Slava. @geoffmcl Can you try to add 1251 Encoding somehow? The point i wanna use tidy to that moment when website got a not closed end tag and if we will use xpath to get some data,it wont get it correctly.So i dont really cate about that href problems and stuff,all i need its good closed tags.The most important its just to get text as it was to show then on my website as parsed data.Is it possbile at all to add 1251 to tidymanaged?\nRegards,Slava.. @geoffmcl Also i tryed to use most of em,still much of warnings.. @geoffmcl\nJust setted \ndoc.ForceOutput =true;\nand changed utf-8 to raw.There is no more warnings about encoding but still zero output.TidyHtml5Managed version is 1.1.0.Why am i still getting no output,thats why i still cant close an issue,help please.\nRegards,Slava.. @geoffmcl Ok,i got you,thanks for a help,im closign issues.Gonna find other solution.. ",
    "ctjhoa": "@geoffmcl Thanks for your answer.\nTo establish a little bit of context, my company manage a lot of MS Word files turned into HTML by Aspose Word (similar to google docs export). Those documents are often complex and very long. My first goal was to optimize the generated HTML to get a smaller HTML and faster rendering.\nI totally forgot the messy behavior on whitespace in HTML/CSS.\nOut of curiosity how tidy-html handle this case with merge-divs: auto?\n```html\n\nAAAA\n\n```\nIs this not a similar issue? According to the doc If set to \"auto\", the attributes of the inner <div> are moved to the outer one., so EOL are revealed after optimization if I'm right.\nThanks for your time.. ",
    "jry2": "I can reproduce this problem with version 5.3.14. Please notice escaped <\\/div> in Tidy output.\nhtml\n<!DOCTYPE HTML>\n<html>\n<head><title>demo</title></head>\n<body>\n<script type=\"text/javascript\">document.body.innerHTML+='<div>text</div>';</script>\n</body>\ntidy -q tidy_err.html\nline 5 column 70 - Warning: '<' + '/' + letter not allowed here\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Linux version 5.3.14\">\n<title>demo</title>\n</head>\n<body>\n<script type=\"text/javascript\">\ndocument.body.innerHTML+='<div>text<\\/div>';\n</script>\n</body>\n</html>. Thank you, it works fine!. ",
    "pmorch": "I can see that the HTML spec from my link is a little unclear. From my reading it I do conclude that the HTML in my OP is valid, but I would understand if purists were to question my basis for claiming that. W3C's HTML5 Differences from HTML4 document doesn't mention anything about changes to the <script> element which doesn't point in my favour.\nIf we assume that the HTML in the OP is indeed valid, then I argue that the warning and adding of the escape should not take place and is a bug, since there is nothing wrong with the input; the warning message: letter not allowed here is false and misleading.\n@geoffmcl, am I correct in assuming that the \"Feature Request\" tag indicates that you assume the HTML in the OP is invalid? Because if one assumes it is valid HTML, then how can removal of a warning being generated because of valid input be a \"Feature Request\" and not a \"Bug\"?\nSo the fundemental question is whether the HTML in the OP is valid.. I concur - --escape-scripts no works great! Thanks!. ",
    "onnimonni": "Thanks for such an fast answer!\nI Found out these:\nThis is an example that Mozilla is using when they are talking about xml namespaces with SVG elements:\n\n<svg xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n <script xlink:href=\"cool-script.js\" type=\"text/ecmascript\"/>\n</svg>\nSource: https://developer.mozilla.org/en-US/docs/Web/SVG/Namespaces_Crash_Course\n\nThen there's this brief notice how the xmlns:xlinx is optional for inlined <svg> elements.\n\nThe xmlns:xlink=\"http://www.w3.org/1999/xlink\" attribute is:\n Required for image/svg+xml files with xlink: attributes.\n Optional for inlined  with xlink: attributes.\nsource: http://stackoverflow.com/questions/18467982/are-svg-parameters-such-as-xmlns-and-version-needed#answer-34249810\n\nThe latter had links into https://www.w3.org/TR/html5/ but honestly couldn't find any information in the spec how to use xml elements.. I try to get familiar with the codebase and  commit a PR next week. You're welcome :)! I will.. @geoffmcl Are we still good to go with this?. Thanks a lot! . ",
    "blat": "Yes, it's not valid according W3C but it's supported by all browsers, and lot of tools generate <pre> tags which contain <div> and <span> to render colorized code...\nI have found an old report about this: https://sourceforge.net/p/tidy/bugs/805/. ",
    "HarrisonXi": "Tidy 5.6.0 still cannot work for this on Mac.\nTest:\n<pre class=\"a\"><div>b</div></pre>\nResult:\n<pre class=\"a\"></pre>\n<div>\n  b\n</div>. ",
    "FlorianUekermann": "Thanks. Nice to see that this particular case is not an issue anymore. I am using 5.2.0. (debian testing)\nI'll leave this open since I think the proposal may still have merit. Even if you keep fixing issues like this for new templating engines, many users are years behind the current development version, so offering a general solution may be worthwhile.\nI think this is all I can contribute to the discussion, since I don't know the project very well. Feel free to close.. ",
    "lyda": "This is still an issue I think. This snippet generates two warnings:\n\nOn the {{range .}} line: plain text isn't allowed in <tr> elements\nOn the <img line: <img> attribute \"width\" has invalid value \"{{.ThumbX}}\"\n\nA regex to ignore these would just be {{[^}]*}} which would get most of the template cruft and allow the remaining html to be sanity checked.\nhtml\n<table summary=\"Stuff\">\n  <tr>\n  {{range .}}\n    <td valign=\"top\">\n      <img src=\"{{.Thumb}}\" height=\"{{.ThumbY}}\" width=\"{{.ThumbX}}\" alt=\"{{.Alt}}\">\n    </td>\n  {{end}}\n  </tr>\n</table>. ",
    "sherubthakur": "Right now I have a wrapper around tidy-html which post-processes the generated output. Right now the way I am handling it is by converting the generated surrogate pair to unicode code point and then encode it.\nHere is a detailed description.\nUTF-8 description\nI check a given utf-8 (with aforementioned invalidities) byte sequence (generate by tidy and detect if it contains a surrogate pair which by UTF-8 standard makes the byte sequence invalid UTF-8.\nAccording to utf-8\nChar. number range  |        UTF-8 octet sequence\n   (hexadecimal)    |              (binary)\n--------------------+---------------------------------------------\n0000 0000-0000 007F | 0xxxxxxx\n0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\nNOTE: The definition of UTF-8 prohibits encoding character numbers betweenU+D800 and U+DFFF, which are reserved for use with the UTF-16 encoding form (as surrogate pairs) and do not directly represent characters.\nDetecting invalid utf-8 outputs\ngiven that if we encode the code points from U+D800 to U+DFFF with utf-8 encoding scheme (without checking for surrogates) we get.\nU+D800 -> \\xED\\xA0\\x80\nU+DFFF -> \\xED\\xBF\\xBF\ni.e. this regex \\xED[\\xA0-\\xBF][\\x80-\\xBF] should detect invalid utf-8 sequence which contain surrogates.\nFixing the problem\n1. Detect the surrogate pair.\n2. Get the unicode code points (d83d de0d) from invalid utf-8 (ed a0 bd ed b8 8d). Using\n     int(c1&mask3)<<12 | int(c2&maskx)<<6 | int(c3&maskx) \nwhere maskx = 0x3F // 0011 1111 and mask3 = 0x0F // 0000 1111\n3. Convert the unicode surrogate pair to a scalar value\n   N = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000\n   in this case 0x1F60D\n4. Now just encode it using utf-8 scheme. Which turns out to be. F0 9F 98 8D or \ud83d\ude0d.\nHopefully you found this description informative. Here are a few links that I found helpful while I was looking into it.\nhttp://www.russellcottrell.com/greek/utilities/surrogatepaircalculator.htm\nhttps://tools.ietf.org/html/rfc3629\nP.S. I hate Emojis BTW! lol. \n. Where to look for surrogates?\nProbably where we are going through Lexer output.\nAre we always looking for a pair?\nYes. AFAIK.\nWould always be 3, in this surrogate case, right?\nYes. As surrogates are in range U+D800 to U+DBFF (low) and U+DC00 to U+DFFF (high) making it 16 bits and if we look at the number of x below we see there are 16, when encoding it as utf-8\n0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\nEDIT: I have confused low and high so to clarify. \nHigh means first (Leading surrogate) and is in range U+D800 to U+DBFF\nLow means second surrogate (trailing surrogate) and lies in range U+DC00 to U+DFFF.. @geoffmcl Would really love to help on this issue but I haven't done any C for a (long) while now. :(. Would appreciate if you update this issue with more details on what you are working on. I will try help as best as I can and will do some experiments on my end too, but can't promise you anything.. The wiki one is correct. Seems like I confused low and high.  For reference UTF-16 rfc which confirms what wiki says.\n-  Characters with values between 0x10000 and 0x10FFFF are\n      represented by a 16-bit integer with a value between 0xD800 and\n      0xDBFF (within the so-called high-half zone or high surrogate\n      area) followed by a 16-bit integer with a value between 0xDC00 and\n      0xDFFF (within the so-called low-half zone or low surrogate area).\n I like you would prefer leading-trailing over high-low.\nHigh or Leading -> 0xD800 to 0xDBFF\nLow or trailing -> 0xDC00 to 0xDFFF\nP.S. Also updated the comment.\nUTF-16 RFC for reference https://www.ietf.org/rfc/rfc2781.txt. @geoffmcl Awesome. I was doing something similar \n```haskell\nchunks :: Int -> [a] -> [[a]]\nchunks _ [] = []\nchunks n xs = let (ys, zs) = splitAt n xs in  ys : chunks n zs\nallPairs :: [String]\nallPairs =\n  let\n    showOne x = \"&#\" ++ show x ++ \";\"\n  in\n    (\\x y -> showOne x ++ showOne y) <$> [0xd800..0xdbff] <*> [0xdc00..0xdfff]\nmain :: IO ()\nmain = putStr . unlines . map (unwords) . chunks 100 $ allPairs\n```\nBefore this I was trying to input some random values and logging tidy's output and checking the generated utf-8, seemed correct for those cases. Will need to check more. will try to validate output with some other langs.\nP.S. My browser is having a hard time displaying all the pairs. haha..... @geoffmcl Apologies for the late reply. I feel like a lot of systems depend on tidy so directly creating an error would not be ideal in my opinion. Probably creating a warning and ignoring the invalid pair is one approach that can be considered.\nP.S. You are going to try Haskell. Get ready to meet your favourite language.... :). @geoffmcl I completely agree with your approach. I really appreciate that you kept me updated on all the changes.. I tried it with --quote-ampersand no but I am still getting &\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Mac OS X version 5.5.14\">\n<title></title>\n</head>\n<body>\n<img src=\"http://abc.com/?action=a&amp;bction=b\">\n</body>\n</html>. @geoffmcl You are not going mad. It's me. So I had a wrapper around libtidy written in go. Which led to this weird behaviour. \n...\n    tidy := exec.Command(\"/bin/tidy\", <array of tidy options>)\n    tidy.Stdout = &stdOut\n    tidy.Stderr = &stdErr\n    tidy.Stdin = bytes.NewBuffer(input)\n    err := tidy.Run()\n        .... // go's error handling\n    logger.Info(string(stdOut.Bytes()))\n..\nIt looked straightforward to me so I did not bother to remove this layer when doing my test (second time).\nThis outputs (in log) ...<img src=\\\"http://abc.com/?action=a&amp;bction=b\\\">...\nbut running tidy from the terminal results in valid output ...<img src=\"http://abc.com/?action=a&amp;bction=b\">...\nI apologise for wasting your time and thanks for all the help. Feel free to close this issue.\nPS: I hope you you tried your hands on haskell :) .. ",
    "elD1eg0": "@balthisar  here below a snippet of my code\n<form class=\"full-height-container\"\n        flex=\"\"\n        id=\"patient-plan-form\"\n        layout=\"column\"\n        layout-fill=\"\"\n        name=\"planForm\"\n        ng-cloak=\"\"\n        ng-show=\"$ctrl.arePlansLoaded\"\n        novalidate=\"\"\n        rxms-patient-focus-me=\"{{($ctrl.isUpdateView && $ctrl.numOfActivePlans == 0)}}\"\n        tabindex=\"{{(!$ctrl.isUpdateView || $ctrl.patientContext ==2) && $ctrl.numOfActivePlans &gt; 1 ? 0 : -1}}\">\nOriginally I wrote '>' instead of '\\>'. ",
    "vinnydu": "Are there any news about it ?. ",
    "LWillms": "First on my initial post - <h1> thru <h9> are, of course, not real inline elements, but they are mostly one-liner, and do typically not include other elements. So I think they should be treated as <p> or <li> or similar. I did not mention those semantical structuring tags introduced by HTML 5, like <header>, <footer>, <article>, <aside>, <section>, and also the untyped <div> -- with those, I think it would be sensible to have them in a line by itself. \nAs to Geoffmcl's question about the <p>, here is the output of Tidy 5.2 with target HTML5, and vertical-space=no looks like this (lines cut at column 59):\nhtml\n    <h3 name=\"Kap_F\u00dcNFTES\" id=\"Kap_F\u00dcNFTES\">               \n      F\u00dcNFTES KAPITEL: \u00d6konomie in der Anwendung des konsta\n    </h3>                                                  \n    <h4 class=\"c1\" name=\"Kap_5_I\" id=\"Kap_5_I\">            \n      I. Im allgemeinen                                    \n    </h4>                                                  \n    <p>                                                    \n      <a class=\"SeiteZurueck\" href=\"me25_080.htm#S86\">&lt;<\n    </p>                                                   \n    <p>                                                    \n      <a class=\"SeiteZurueck\" href=\"#S87\">&lt;</a><a class=\n    </p>                                                   \n    <p>                                                    \n      Eine ganze Reihe laufender Unkosten bleibt sich beina\n    </p>                                                   \n    <p>                                                    \n      \"Die Betriebskosten einer Fabrik bei zehnst\u00fcndiger Ar\n    </p>                                                   \n    <p>                                                    \n      Staats- und Gemeindesteuern, Feuerversichrung, Lohn v\n    </p>\nI would like to see it this way: \n```html\n    F\u00dcNFTES KAPITEL: \n    I. Im allgemei\n    << \n    <Eine ganze Reihe laufender Unkosten bleibt sich beina \n    \"Die Betriebskosten einer Fabrik bei zehnst\u00fcndiger Ar \n    Staats- und Gemeindesteuern, Feuerversichrung, Lohn v \n```\nThe Tidy configuration is this: \n```\nclean: yes\nindent: yes\nwrap: 0\nbreak-before-br: yes\noutput-html: yes\ndoctype: html5\ninput-encoding: latin1\noutput-encoding: utf8\noutput-bom: yes\nnew-inline-tags: math, mroot, mrow, mi, mn, mo, msqrt, mfrac, \n msubsup, munderover, munder, mover, mmultiscripts, msup, msub, \n mtext, mprescripts, mtable, mtr, mtd, mth\n```\nThe effect of an added vertical-space: yes of the example in the initial post looks like this:\n ```html\n         \n \n            Erster Abschnitt: Ware und Geld                       \n \n      <ol>                                                      \n        <li>                                                    \n          <a href=\"me23_049.htm\">Erstes Kapitel. Die Ware</a>   \n          <ol>                                                  \n            <li>                                                \n              <a href=\"me23_049.htm#Kap_1_1\">Die zwei Faktoren d\n            </li>\n\n            <li>                                                \n              <a href=\"me23_049.htm#Kap_1_2\">Doppelcharakter der\n            </li>\n\n            <li>                                                \n              <a href=\"me23_049.htm#Kap_1_3\">Die Wertform oder d\n              <ol type=\"A\">                                     \n                <li>                                            \n                  <a href=\"me23_049.htm#Kap_1_3_A\">Einfache, ein\n                  <ol>                                          \n                    <li>                                        \n                      <a href=\"me23_049.htm#Kap_1_3_A_1\">Die bei\n                    </li>\n\n                    <li>                                        \n                      <a href=\"me23_049.htm#Kap_1_3_A_2\">Die rel\n                      <ol type=\"a\">                             \n                        <li>                                    \n                          <a href=\"me23_049.htm#Kap_1_3_A_2_a\">G\n                        </li>\n\n                        <li>                                    \n                          <a href=\"me23_049.htm#Kap_1_3_A_2_b\">Q\n                        </li>                                   \n                      </ol>                                     \n                    </li>\n\n                    <li>                                        \n                      <a href=\"me23_049.htm#Kap_1_3_A_3\">Die \u00e4qu\n                    </li>\n\n```                                                                  \nAs one can see, there is a sense of the grouping I would like to see. \n. Balthisar's proposals seem to be sensible for me, although it is not 100% clear what is meant by the \" fine grained control\" - I guess it is meant that eg VERTICAL-SPACE-HX  = YES would mean that after both the <Hx> and the </Hx> would come a line feed, as it is now in 5.2, whereas with VERTICAL-SPACE-HX  = NO the <Hx> and the </Hx> with the actual header in between would appear on one line, with a line feed only after the . Right? Similar with VERTICAL-SPACE-P -- its value being YES would mean that Tidy would work as today, whereas NO would result in the <P>, the </P> and the actual paragraph text in between appear on a single line, i.e. with a line feed only after the </P>. Right? If the default is YES or NO does not matter much to me when I can override the default by a configuration option. \nBTW, with the TidyBreakBeforeBR I had an issue -- I tried it, and got the <BR> in front, but a line break after it -- I guess that Balthisar's proposed replacement VERTICAL-SPACE-BR would enable me to get the <BR> in front (left aligned with the text it breaks) but then followed by the rest of the text instead of a line break. \nAs to geoffmcl requests to upload some actual files instead of just showing the beginning of the lines. \"me23_000.htm\" is to replace http://www.mlwerke.de/me/me23/me23_000.htm but is not yet ready to replace it; I need to work on the CSS in order to differentiate the nesting levels not only by their indentation, but also by font, font size, weight, decoration etc. me23_033.htm is a relatively short ext (forword to the 2nd German edition). I try to upload both the intermediary version which I had produced with VB Script and regular expressions and what Tidy 5.2 made of it. \n\nTried, but it did not work. \n. I'll try again the uploads... \nIt won't let me: \"We don\u2019t support that file type\" -- TXT and ZIP file...\n. Since the upload of files did not work, here some examples from the live Web site: \n\na table of contents with definition list (DL/DT/DD) 7 kB\na text with paragraphs and MathML  24 kB\n\nBoth formatted manually \nI will still try to upload the larger TOC file with nested UL and OL. \n. Here is a file with a nested list of <OL> and <UL> \nproduced by Tidy 5.2, i.e. not really in the form I like. \n. I thought that @balthisar would be the one to do it, after all the valuable propasals he had made, especially since it was marked as scheduled for the 5.5 milestone. \nWell, I could do with some postprocessing using RegExp, like this one for the <p>\n<p>\\r\\n +(.*)\\r\\n\\s+</p>\\r\\n\nreplace with\n<p>\\1</p>\n(The \\1 might be a special Ultraedit syntax). \nWith classes and the like in the p tag, it gets more hairy. \nBut getting it done by Tidy right away would be better. \n. >  it seems for sure you want <li>....</li>, on the same line, but not if it contains other <ol> elements... similarly for many other elements, like <p>, <hN>, etc... but you do seem to want <div> separated by even an extra line...\nOn <li> ... </li> ... well, I want a line break before and after an <ol> or <ul> and the same before and after the closing </ol> or </ul>, because that wrapps a number of 1 to n <li> ... </li> elements, which could contain again <ol> or <ul> groups ... like the a case of nested lists, like the Russian puppet in the puppet. \nLists are by their nature recursive objects. I don't see that for paragraphs enclosed in <p> ... </p> pairs, or for headers h1 to h7. So I would like to see the <li> ... </li>, <p>...</p> and also the <hn>...</hn> tags on one and the same line with the text which they enclose, and a line break before and after.  \nOTOH, <div> ...</div> are block elements and typically recursive, same many of the symantic tags introduced with HTML5. \nOr, what are text structuring tags. \nBTW, for my self-written postprocessing as mentioned above, I found this among other \"famous Python one-liners\": \ntidy.exe | python -c \"import sys,re;[sys.stdout.write(re.sub('PATTERN', 'SUBSTITUTION', line)) for line in sys.stdin]\"\nfor which I still have to work out the actual PATTERN and SUBSTITUTION formulas. I am not really at home with Python and not so fluent in \"Regular Expressions\". \nPS: the \"tidy.exe\" in the above is already my substutution for [another command].\n. > And I do find it strange that just adding the -i, indent option will re-produce the multi-lined Input: version... hmmm...\nYeah, there are lots of unexpected side-effects. \nThe options have grown over the years, and it is quite a tangled shrubbery. \nBTW, I don't know if HTML allows an <ul> or<ol> directly under an <ul> or<ol>, I think that this should rather be flagged as wrong. But I know that for a nested list, It would have to be rather like in my contribution 486#issue-205264448\nWithin the list items, i.e. inside of the <li> ... </li> one can have other lists declared by <ol> ... </ol>. \nBTW, @geoffmcl , in which time zone do you reside? I'm on CET for Central European Time, currently with DST. What I called \"text structuring tags\" may be better called \"content structuring tags\", tags like header, footer, article, section, aside, nav, etc, which were introduced with HTML5. \nAs sample I had proposed in an earlier contribution this TOC page at http://www.mlwerke.de/beb/beaa/beaa_000.htm which I have edited somewhat to make it look more like I want, and also corrected the error in the evocation of the CSS stylesheet. In its present state it has 237 lines of text in 27'989 bytes. \nIt has one <ul> and one top level <ol>, nested 3 levels deep in 30 chapters with several sub-chapters each, grouped in 5 sections in the second level. You may, of course, delete 3 of the 5 5 sections, and in the sections all chapters beyond 2. \nAs to Python vs. Pearl ... \"intuitive\" is what one is accustomed to, and as in the song \"I say tomato, you say tomatoe\" etc. \n. Alors sur le RER B, et pr\u00e8s d'Orly... I thought you were somewhere between California and Hawaii because of the little overlap in our hours of activity. I agree that France and even more Spain should be in Western European Time, but such a change would be highly polticised and today impossible. I wonder why the soo nationalist General de Gaulle did not order a return to the normal time for France right after the previous war. But maybe he wanted to prove his independence from England that time. \nComing back to our business. You wrote: \n\nI think you are correct that say a <ul> can not be the direct descendant of say an <ol>, and vice versa, and etc... these should be an error, at least according to the W3C validator... but they can be descendants of a <li>... ie nested lists...\n\nI also could not find any clear answer at w3schools.com or w3.com to the questions if a list grouping tag (<menu>, <ol>, <ul>) may have another child element other than <li>, but anything else doesn't make sense to me. \nAnd a German book on HTML5 says so in its list of HTML tags: it gives as child elements to the three list grouping tags (<menu>, <ol>, <ul>) only <li>, and for <li> as the only possible parents those three list grouping tags. [Thomas Kobert: HTML 5. bhv, 2013. ISBN 978-3-8266-8187-5]\nConcerning the sample file, I once tried to put somesuch here in this thread on Github, but the system refused. And the one which I pointed to is publicly accessible on the Web, and does work. Anybody can reduce it by deleting lines and leaving only maximal two items in each hierarchical level. \n. OK, I have reduced the file in question, and try to upload it here.  Doesn't work at all. Github refuses anything which only remotely smells like HTML, even as TXT and compressed in a ZIP.  I'll try to paste it here: \n````\n<!DOCTYPE html>\n\n\n\nTest file for nested lists - derived from http://www.mlwerke.de/beb/beaa/beaa_000.htm\n \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../../css/inhalt.css\">\n    \n\n\n\nTesting nested lists\n\nVorrede zur f\u00fcnfundzwanzigsten Auflage\nVorrede zur vierunddrei\u00dfigsten Auflage\n\n\nEinleitung\nErster Abschnitt\n              FIRST SECTION\n\nErstes Kapitel. Die Stellung der Frau in der Urgesellschaft\n\nHauptepochen der Urgeschichte\nFormen der Familie\n\n\nZweites Kapitel. Kampf zwischen Mutterrecht und Vaterrecht\n\nDas Aufkommen des Vaterrechts\nAnkl\u00e4nge an das Mutterrecht in griechischen Mythen und Dramen\n\n\nDrittes Kapitel. Das Christentum\n\n\nZweiter Abschnitt\n          SECOND SECTION\n\nSiebentes Kapitel. Die Frau als Geschlechtswesen\n\nDer Geschlechtstrieb\nEhelosigkeit und Selbstmordh\u00e4ufigkeit\n\n\nAchtes Kapitel. Die moderne Ehe\n\nDie Ehe als Beruf\nDer R\u00fcckgang der Geburten\n\n\n\n\n\n\nFinal remarks, out of list\n\n\n``\nOK, here it goes. \n. Pretty printing is of course only for human consumption and does not (or should not...) modify the syntactical correctness of an HTML document. The best for the Web browser is actually having the HTML document as a single byte stream, not interrupted by line breaks, as currently is produced by Tidy with the option vertical-space: auto. \nThose who edit HTML files not \"by hand\" but by some WYSIWYG HTML editor which works more like a compiler actually hiding what they consider \"machine code\", don't need prettyprinting of HTML files. Example: MS Word for Windows saving a document in HTML instead of Microsoft's current file format for office documents. \nOr think they don't --  but sometime one has to inspect the resulting code, if the suspicion arises that the HTML editor might have produced not what the author intended. \nI for my part like to work directly on the HTML code, helped, if possible by HTML sensitive editors providing syntax highlighting and bracket grouping, possibly automatic syntax completion and drop down menus of possible or allows next items. \nI want my HTML code very compact with <p> and <li>and <Hn> elements being in one line, and indented so that I can see the structure of the document. At the same time, I use editors like Ultraedit or (temporarily) also PSPad, which fold those long lines on the CTRL-W command, so that I have all their text in the window and can easily change also words of the very end of such a long <P> or <li> or any other such element (<td>, <dt>, <dl> come to my mind). \nThe above is not exactly how Tidy did produce it. I have edited the file to reflect my style of an HTML file. \n. This is what Tidy makes out of the above in using this config file: \n```\noutput-html: yes\ndoctype: html5\ninput-encoding: latin1\noutput-encoding: utf8\noutput-bom: yes\nclean: yes\nindent: yes\nwrap: 0\nvertical-space: no\nnew-inline-tags: math, mroot, mrow, mi, mn, mo, msqrt, mfrac, \n msubsup, munderover, munder, mover, mmultiscripts, msup, msub, \n mtext, mprescripts, mtable, mtr, mtd, mth\n```\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta name=\"generator\" content=\"HTML Tidy for HTML5 for Windows version 5.5.31.w32-vc10\">\n    <title>\n      Test file for nested lists - derived from http://www.mlwerke.de/beb/beaa/beaa_000.htm\n    </title><!-- \n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../../css/inhalt.css\">\n    -->\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  </head>\n  <body>\n    <h1 class=\"c3\">\n      Testing nested lists\n    </h1>\n    <ul>\n      <li>\n        <a href=\"test_001.htm\">Vorrede zur f\u00c3\u00bcnfundzwanzigsten Auflage</a>\n      </li>\n      <li>\n        <a href=\"test_019.htm\">Vorrede zur vierunddrei\u00c3\u0178igsten Auflage</a>\n      </li>\n    </ul>\n    <ol class=\"c5\" start=\"0\">\n      <li>\n        <a href=\"test_025.htm\">Einleitung</a>\n      </li>\n      <li>\n        <h3>\n          Erster Abschnitt<br>\n          FIRST SECTION\n        </h3>\n        <ol class=\"c5\" start=\"1\">\n          <li>\n            <a href=\"test_035.htm\">Erstes Kapitel. Die Stellung der Frau in der Urgesellschaft</a>\n            <ol>\n              <li>\n                <a href=\"test_035.htm\">Hauptepochen der Urgeschichte</a>\n              </li>\n              <li>\n                <a href=\"test_035.htm#Kap_1_2\">Formen der Familie</a>\n              </li>\n            </ol>\n          </li>\n          <li>\n            <a href=\"test_054.htm\">Zweites Kapitel. Kampf zwischen Mutterrecht und Vaterrecht</a>\n            <ol>\n              <li>\n                <a href=\"test_054.htm\">Das Aufkommen des Vaterrechts</a>\n              </li>\n              <li>\n                <a href=\"test_054.htm#Kap_2_2\">Ankl\u00c3\u00a4nge an das Mutterrecht in griechischen Mythen und Dramen</a>\n              </li>\n            </ol>\n          </li>\n          <li>\n            <a href=\"test_082.htm\">Drittes Kapitel. Das Christentum</a>\n          </li>\n        </ol>\n      </li>\n      <li>\n        <h3>\n          Zweiter Abschnitt<br>\n          SECOND SECTION\n        </h3>\n        <ol class=\"c5\" start=\"7\">\n          <li>\n            <a href=\"test_125.htm\">Siebentes Kapitel. Die Frau als Geschlechtswesen</a>\n            <ol>\n              <li>\n                <a href=\"test_125.htm\">Der Geschlechtstrieb</a>\n              </li>\n              <li>\n                <a href=\"test_125.htm#Kap_7_2\">Ehelosigkeit und Selbstmordh\u00c3\u00a4ufigkeit</a>\n              </li>\n            </ol>\n          </li>\n          <li>\n            <a href=\"test_134.htm\">Achtes Kapitel. Die moderne Ehe</a>\n            <ol>\n              <li>\n                <a href=\"test_134.htm\">Die Ehe als Beruf</a>\n              </li>\n              <li>\n                <a href=\"test_134.htm#Kap_8_2\">Der R\u00c3\u00bcckgang der Geburten</a>\n              </li>\n            </ol>\n          </li>\n        </ol>\n      </li>\n    </ol>\n    <hr>\n    <p>\n      Final remarks, out of list\n    </p>\n  </body>\n</html>\nThe same identation, but with each <li>...</li> occupying 3 instead of only 1 line, it is not so easy to read. \n. Sorry about your inbox... but this Github system is quite strange. I hit the green \"Comment\" button, and nothing happened. My comment did not appear. So I tried again, and again, until giving up. Later I saw on my tablet that several instances of my comment were actually there, so I went back to my desktop, found this time all those copies, and deleted all of them except the last one. \nWordpress does detect such a problem and warns the user that he/she apparently is sending a duplicate. \nOn the config file: the BOM is needed for the old version of Ultraedit and maybe some other editors so that they recognize the file as being UTF-8 encoded. \nFor the rest, I like to have the options spelled out. Its in the file which is evoked on every instance of Tidy, so does not disturb calling Tidy. I had the new options in there which Balthisar proposed, but Tidy would flag them as unknown options. \nCan I mark lines in the config file as comments? I tried the semicolon \";\", but that was flagged as wrong too. \nIt is a pity that the option \"input-encoding\" is hidden deep in the documentation of the config options, and not shown on the first level of help, since converting non-UTF8 texts to UTF8 does not work correctly if I would simply tell Tidy that we are dealing with UTF-8. Tidy then expects the input being in UTF8, too, and produces wrong output. \n. Thanks for the comment line marker with the double slash.  // is also valid in some programming languages. \nBTW, having config options  in the config file with their default values is also useful for testing the result of different settings. One has to change only the value of the option, not put it in competely. And I have those options permanently in the config file which I might possibly change. \nBeing able to specify the input-encoding is very important when using Tidy to upgrade old HTML documents, as I currently do. In the Tidy versions up to 2009, I could never find that and because of that was hampered in doing the necessary upgrades. \n. Thanks for the reassuring reply from geoffmcl, and thanks to balthisar for his question. \nUltraedit  version 24, to which I just upgraded (because of the promise of 100% UTF-8 support) seems to have integrated LibTidy, but would then apply to individual files, whereas I am doing bulk operations on whole directories, and UltraEdit's LibTidy would be upgraded only with major updates of UltraEdit itself, making me dependent on that. And the UltraEdit upgrade would have to be paid for. So I prefer to use the free and freestanding Tidy 5. \nLet me present the workflow which I am currently developing, to deal with the sheer mass of of HTML files which are still marked as HTML 3.2 (but are actually already more or less HTML 4). Currently I am working on three directories with the HTML representations of a three volume book, with 40, 27 and 57 files respectively. \nThe first step is done by a VBscript programm which applies a series of Regular Expression search-and-replace pairs to all HTML files in a directory, to prepare them for being input to Tidy. Those RegExp search/replace terms are being loaded from a file. Since I know what the orignal HTML encoders have meant, and I have the orginal printed books as reference, I can make knowlegeable changes where Tidy can only guess what is meant. E.g. Chapter, sub-chapter and section headers are not marked up by H1..H6, but are recognizeable by the anchor and the form of the NAME parameter, or other typical forms, and my VBscript adresses that. The files contain hyperlink marks for the page numbers of the printed book, which are enhanced with hyperlinks to the previous and next pages, including those in the previous or next HTML file. The result is then checked with Xenu's Link Sleuth \n, whose diagnostic output is used to correct errors in the orginal file (copies of the orignal files in a separate directory). \nThere are strange things in the old files e.g. the anchor for a page number or a footnote might be spread over a </p> Yesterday, on a test run for the script(s) which prompted me to open this 'Issue', I found a strange sequence:  <SUP><FONT SIZE=\"2\"></P>1</SUP>/2 - Tidy's solution was to finally discard the <SUP>, which is not a good move, since this breaks what is meant as the markup of a fraction (there are lots of fractions in that book, and I have decided to normalize them with my VBscript to the form of n/m, which I can later change to MathML or replacing the slash with the Unicode fraction slash - I leave that to the work to be done after Tidy. There also very strange things like preceding any text in a table cell by a <P> which is not terminated by a </P>. Tidy generates a closing </P> before the </TD>, but that would complicate the cleaning up, so I remove all those<P>. The script also removes all inline formatting as much as possible. \nThe second step is to apply Tidy in a batch run to all results of the first step (this is done by another VBScript). And here comes the Ultraedit Javascript which I am working on currently, and for which I had opened this issue. I let Tidy write the ERROR/WARNINGS list (the -f parameter) as files with the ERR extension into the directory with the files produced by the previous step, since the line/column numbers refer to the input file).  Tidy is instructed by the config file to produce HTML5 with UTF-8 encoding and to write the output with a BOM. \nNow comes the verification of the Tidy output, and possibly changes in the input files. \nTo ease this task, I have written a VBscript which goes thru the directory with the Tidy input and the ERR files and for each ERR file the script starts UltraEdit with the Tidy input, HTML5 output and the ERR file, plus the Javascript which brought me to open this issue, and which is started by Ultraedit on load (preceding the file name of the script with a \"/s=\" causes the immediate execution - Ultraedit has a bult in Javascript engine). This is not yet complete. \nIt already does throw out the \"About Tidy\" paragraph, the option paragraph giving general advice on TABLE formatting, and I have yet to see the paragraph recommenting CSS instead of inline formatting so that I know how to identify its first words (anyway, most inline formatting is already being removed by the script in the first step). Are there more of those general hints? The script also removes lines like these\n\nInfo: Doctype given is \"-//W3C//DTD HTML 3.2//EN\"\nInfo: Document content looks like HTML 4.01 Transitional\nTidy found 8 warnings and 0 errors!\n\nand display this in a message box to the user. \nThen the script should sort the remaining lines beginning with \"line x column y\" by line number (and column), and store them somehow in the nine user clipboards provided by UltraEdit, where they are to be found by another Ultraedit Javascript. Sort, because the same position is often being referenced by Tidy, first by a \"inserting x before z\", and later by a \"removing empy x\". \nThis second script is to be called by the user with a hotkey, and jumps the cursor in the Tidy input file to the line/column position indicated by Tidy and displays Tidy's message concerning that position. \nI can then make changes there so that the next batch run with Tidy produces better results. \nThe third step comes when I have an Tidy output with all errors and warnings resolved. \nThis involves replacing the quotes from classic greek writers like Aristotle by proper Unicode UTF-8 encodings, which in the orignal files had been marked up as <FONT FACE=\"SYMBOL\"> which in the first step has already been replaced by <SPAN LANG=\"GRC\">. I had already done that, but then found problems which caused me to go back to stage one. Then replacing mathematical formulas represented by complicated TABLE constructions or oven just images by proper MathML, and formatting the many tables with proper CSS. Also replacing the inline CSS style sheets created by Tidy and the references to it by references to my own external CSS style sheet(s). BTW, the script in the first step introduces references to a CSS style sheet and a Javascript in the header. \nThis is a lot of tedious work coming up...  But it is made easier by the script which I develop today and the friendly help which you grant me here in this forum and the friendly peers in the UltraEdit forum. I am grateful for all that. Thank you. \n. Thanks to all, all now works fine for me. The outer VBScript gets to load the two HTML files, the ERR file (that's my extension for the file written by the -f option) and the Javascript to decode the ERR file. The Javascript is executed by UltraEdit right away, I am only interested in the list of Tidy's remarks with line and column number. \nFirst the general recommendations at the end beginning with \"About HTML Tidy:\", \"The table summary\" and \"You are recommended to use CSS\" are being deleted. Those messages are hard coded in the Tidy.exe file. As said above, Tidy's summary is displayed to the user and eliminated from the file. \nThe line and column numbers are normalized to 5 digit numbers with leading zeroes, and the whole list is sorted numerically by line and column number. The sort is wanted, because Tidy often refers to the same line and column number twice, and by sorting the script brings them together. \nUnfortunately the sort does not yet work, as seen by this snippet: \n```\n\nline 00227 column 00030 - Warning: missing  before \nline 00228 column 00004 - Warning: inserting implicit \nline 00228 column 00004 - Warning: missing  before \nline 00228 column 00021 - Warning: discarding unexpected \nline 00229 column 00001 - Warning: missing  before \nline 00229 column 00021 - Warning: inserting implicit \nline 00230 column 00001 - Warning: discarding unexpected \nline 00236 column 01369 - Warning: discarding unexpected \nline 00254 column 00008 - Warning: inserting implicit \nline 00144 column 00004 - Warning:  lacks \"summary\" attribute\nline 00195 column 00004 - Warning:  lacks \"summary\" attribute\nline 00228 column 00004 - Warning:  anchor \"S85\" already defined\nline 00013 column 00175 - Warning: trimming empty \n\nAll four remarks regarding the position in line 228 column 4 have to be considered together, and they are caused all by the same problem which is visible in this snippet of lines 227 and the beginning of 228:\n20 Ellen Leinwand = 2 Pfd.St.\n<85> Die Schwierigkeit im Begriff\n`` \nthe anchor named S85 is spanning from one paragraph into the next. The \"St.\" between\"S85\">andbelongs to the \"Pfd.\" as Pfd.St. or \"Pfund Sterling\" in Germany i.e. \"Pound Sterling\" in english, and thebelongs behind the next, or even better behind thesucceding the` . \nTidy made this out of it: \n<p>\n     20 Ellen Leinwand = 2 Pfd.<a name=\"S85\" id=\"S85\">St.</a>\n   </p>\n   <p>\n      <a class=\"c3\" name=\"S85\" id=\"S85\">&lt;85&gt;</a> Die Schwierigkeit im Begriff\n  simply duplicating the anchor for page (\"Seite\" in German) 85 (of the printed book whose text is reproduced here in HTML). Not better, or even worse. \nMaybe I should also load the input to my VBscript with its RegularExpressions, since that one should have expanded this anchor to this for page 94: \n<a class=\"SeiteZurueck\" href=\"#S93\">&lt;</a><a class=\"Seitenzahl\" id=\"S94\">94</a><a class=\"SeiteVor\" href=\"#S95\">&gt;</a>\ni.e. with anchors to jump to the previous or next pages (of the printed book), and adding the CLASS for the CSS.  \nYou see how this workflow could help to inspect and correct the problems and problemitas by relieving the user of the tedious task of loading three or four files, and then searching the locations of those problems, and unloading that onto a robot. \nFor that, the Javascript started by loading the three (or four) corresponding files sets up a sorted table of the line and column numbers which is to be used by another Javascript (still to be written) which moves the cursor in the input file to Tidy to those positions, allowing the user, i.e. me, to look at what Tidy did no like so much, and possibly apply corrections, so that a repetition of the Tidy run creates the proper result (see above in my previous reply). These changes are all done using Regular Expressions -- no problem with the parsing, so no gnu-emacs format, no further changes to Tidy needed. \nThank you very much. \n. To make that clear: this was just a query for information, absolutely no changes requested from my part. \n. I agree with Balthisar to remove all presentation oriented stuff from the library. \nEdit on next day:\nWith \"presentation\" I do not mean the formatting of the HTML document processed by Tidy, but the presentation of messages to the client, be it tidy.exe or some other program (like e.g. UltraEdit). . But how should Tidy decide where to put the <ul> and </ul> tags? \nBefore or after the <br>? Or instead? \nThese are questions of the actual meaning, i.e. semantic questions. Tidy should not try to find out what the original author had meant, should not deal with semantics, only with the syntax. \nMy recommendation is to do the correction to semantic errors by hand, with a sweeping change in some editor, or with a self written script using Regular Expressions. I use as editor UltraEdit, and with that I can do changes in all open files. Or I use the \"Inforapid search and replace\" to make changes in a whole set of files. For the upgrading project (from HTML 3.2 and 4.1 to HTML5) which has be brought here, I have written a VBscript using Regular Expressions which changes e.g. headers marked only by presentation oriented HTML tags as semantically marked headers with <H1>to <H6>. The script recognizes the meaning by elements which Tidy would not detect and should not take into account. Only then I throw this improved HTML on Tidy to correct syntax errors. \n. There are certainly cases where the behaviour against which @jfilter is warning is deliberate and wanted, in a company-internal application for example. \nIt is with the real guns - not the guns do shoot people, but people use guns to shoot other people. The problem is not to own a gun, but he widespread attitude that \"my neighbor is my enemy\", to perceive the stranger as a threat instead of seeing a chance in her or him. \nThis applies mutatis mutandis to computing, too. . More important than build in XP is building for XP etc. \nThis can be done with MS Visual C++ 2015. See https://msdn.microsoft.com/en-us/library/ms235435.aspx and the links to further information on what to do when targeting XP. \n. Yes, I have re-downloaded the archive, I have compared them, compared with the 64 bit version. I also tried it on the laptop with still works with WinXP, with the same negative result. I had also looked at #514 and tried tidy-5.5.10-win32-2.zip and tidy-5.5.10-win32-mt.zip -- negative. \nI just tried the 32 bit version on my  64bit-Win7 machine, and got told that it would not run since a VCruntime140.dll is missing on the PC. \nVCruntime140.dll is included in tidy-5.5.10-win32-2.zip... After copying this dll in the directory where the 32-bit Tidy is residing on the 64bit Win7 machine, this Tidy.exe does start. \nIs that compiled with the library for Win10? I had quite some problems with a Silverfast 8.8 scanning program which did not run on my 64bit-win7 PC because the automatic update machinery of MS had stalled for months. But finally got it. \n. Googling for \"VCruntime140.dll\" I found an exchange on an HP forum (in German language) which said that the VC++ 2015 Studio runtime had a problem, and that one should download and re-install the Visual C++ Redistributable for Visual Studio 2015 from https://www.microsoft.com/en-US/download/details.aspx?id=48145 \nFrom there: \n\nSupported Operating System\nWindows 10 , Windows 7 Service Pack 1, Windows 8, Windows 8.1, Windows Server 2003 Service Pack 2, Windows Server 2008 R2 SP1, Windows Server 2008 Service Pack 2, Windows Server 2012, Windows Vista Service Pack 2, Windows XP Service Pack 3\nFor additional information on Operating System support, see the Visual Studio 2015 Compatibility page. \nHardware Requirements:\n        1.6 GHz or faster processor\n        1 GB of RAM (1.5 GB if running on a virtual machine)\n        50 MB of available hard disk space\n        5400 RPM hard drive\n\nI downloaded, installed, and unfortunately found no change on the Server 2003. \nWell, the 5.2 version still does its work. I just hope that this problem is resolved with Tidy 5.5 release or that I have finally managed to assemble the new 64 bit hardware for the server and upgraded the server software to the 64 bit Server 2008 R2. . After having installed the VC 2105 Runtime in both 64 and 32 (x86) bit versions on my 64 bit Win7 computer, the 32-bit Tidy starts to run there without problems. The VCruntime140.dll is being installed with the x86-version of the runtime. \n. Clarification on my systems: the server is currently 32 bit hardware with the 32 bit server operating system Server 2003. I plan to replace this with a 64 bit machine and run Server 2008 R2 on it -- this OS is available as 64 bit version only. And I have the concrete need to upgrade the server OS because at least one application does no longer run on an XP-level OS. \nBut as long as this is not accomplished, I would like to use the 32 bit version of Tidy on the server. Since Tidy 5.2 is still working in that environment, I can renounce on using 5.4. But others with a similar operating system might want to have it. \nLet's see what comes first: Tidy 5.5 or my server on 64 bit hardware and software? \n. Yes, I have those two PCs, the server and the workstation. Also as third one a laptop which runs under Windows XP (because it has a MS Office 2007/2010 which I have inherited with the laptop itself, and would lose on replacing the OS). \nI ran the 32 bit Tidy on the 64 bit Win 7 system only to test if the problem is specific to the setup to my server. And yes, I installed both the 64 bit and the 32 bit VC 2015 runtime. \nOn the two XP-level 32 bit PCs, I have installed only the 32 bit VC 2015 runtime, not the 64 bit version. \nOn both of these systems, I get \"this is no valid Win32 program\" (or somesuch in German) when I try the 32 bit Tidy 5.4 on them, also with the MT build of Tidy 5.5 which I downloaded from the link in issue #515 \nBut this is no big problem for me, as far as I can see. Tidy 5.2 works fine, and the new line wrap / indentation coming in the next version are very nice to have, but not absolutely necessary. \nBut the problem has to be solved. I'm ready to help with testing. . Success! That version built with VC10 functions on Windows with the XP code base, i.e. Windows XP and Windows Server 2003. \nMy guess: either stick with VC 2010 or give up support for Windows XP, Windows Server 2003 and older operating systems. \n. So, the problem is not, methinks, 32 bit Tidy vs. 64 bit Tidy, but Tidy on Windows XP and its server sister Server 2003 vs. on Windows 7 and its server sister Server 2008 R2, and later Windows versions. A test with a 64 bit Windows XP or Server 2003 should prove that (I do not have the means to test that). Such a test would probably show that the 64 bit Tidy 5.4 released in March would not run on a 64 bit Windows XP or 64 bit Windows Server 2003. And vice versa a 32 bit Tidy 5.4 as the one released in March would run on a 32 bit Windows 7 without any problem. \n(Server 2008 without an R corresponds to Windows Vista, an OS which I have avoided). \n. I tested this Tidy 5.5.31-w32-vc10 with actual HTML files, and decided to keep it as my working Tidy. \nBTW, I tried the new vertical-space/wrap/indent config parameter as discussed in #486 , but these seem not to work yet. I thought they were scheduled for 5.5. . This your latest build does also not run on Server 2003. I didn't try the laptop with XP. \nI don't know in how far XP and 7 differ, but MS does not want to produce any more fixes for XP, and they have obviously removed the support for XP from their newer software development systems. \nBTW, Windows XP is actually Windows 4.0, and Vista 6.0 and Win 7 is 6.1. The big change is from XP to Vista, but they had first to iron out the teething problems in Vista, only the 6.1 i.e. Win7 is usable... \n\"Don't change a running system\" is a rule I learned early in my computing career, but there are applications which force me to move up:  Ultraedit 24 which finally has full support for UTF-8 does not run on XP-level OSes. And my current banking program does not support the other encryption method to which one of my banks switched to some time ago, and the new version does not work on XP \nAnother fundamental rule of computing which I learned long time ago is to select the OS and the hardware according to the application one wants to use, not the other way 'round. \n. @Regarding VC15 runtime -- I just tried to install the 64 bit on my 32 bit Server 2003, and that was rejected with an error message saying that this can only be installed on Windows XP SP1 (X64) and newer platforms. \nAnd yes, I could install the 32 bit version of that runtime without problems. That lets me think that software build with VC2015 should be able to be executed on those systems where the runtime can bei installed. Otherwise it would not make sense to allow its installion on XP-level OSes. \nSee https://msdn.microsoft.com/en-us/library/ms235435.aspx for information which platforms can be targeted with  Visual Studio 2015 -- XP is among them, but with a caveat: \n\nYou can use the Windows XP platform toolset included in Visual Studio 2015, Visual Studio 2013, and Visual Studio 2012 Update 1 or later to build Windows XP and Windows Server 2003 projects. For information on how to use this platform toolset, see Configuring Programs for Windows XP. For additional information on changing the platform toolset, see How to: Modify the Target Framework and Platform Toolset.\n\nThis quote contains links to the relevant articles. To see them, look in the orignal article . This entry on Stackoverflow shows the how to with screenshots, and some additional hints: \nhttps://stackoverflow.com/questions/35664861/how-to-target-windows-xp-in-microsoft-visual-studio-c\nI found all this with a web search for Microsoft Visual Studio C++ building software for XP. Auntie Google is your friend...\n. Success! \ntidy -v produces this: \nHTML Tidy for Windows version 5.5.31.w32-vc14-mt-xp\n. Sorry for re-opening this issue, but only for a moment. I just want to mention that the Windows binaries downloadable from http://binaries.html-tidy.org/ should be replaced by versions compiled with the setup to make them runnable on Windows XP . > tidy -v produces this:\n\nHTML Tidy for Windows version 5.5.31.w32-vc14-mt-xp\n\nNice, but it does not produce any output. \nI go back to the vc10-version . No output means no output. It simply terminated without anything. It just created the error file, when asked for with the -f option, but didn't write anything in it. All this on the same Windows Server 2003 which I do most of my work on. \nAfter rebooting the PC in the morning, Windows told me that TIDY.EXE had had a problem, and if I wanted to send a report to Microsoft. I prefer not to upload the dump etc here because it might contain information which I do not want to be publicly accessible, but I could mail the stuff to you privately. \nThere were many instances of those error messages, but I retained only one. \n. You have no longer the exe which you produced 7 days ago announced in this message\nhttps://github.com/htacg/tidy-html5/issues/566#issuecomment-305566823\n\nSo then I built a tidy 5.5.31 w32-vc14-mt-xp, ie using the `static /MT libraries, and it ran fine in XP, and no doubt would also run in Server 2003...\nIf you want to try it at this time I have only uploaded a http://geoffair.org/tmp/temp2.zip containing just the EXE... running it with -v should yield -\nHTML Tidy for Widnows version 5.5.31.w32-vc14-mt-xp\nSo now it seems we have at least two(2) ways to continue supporting XP... use MSVC10, or MSVC14 using the -T v140_xp toolset... and this can probably be extended to later MSVC versions...\nI hope you get the chance to try and report success with temp2.zip... thanks...\n\nStrange... \nBack then I unfortunately only checked if the program would start in the first place, just using the -v open. But trying to acutally generate an HTML output did not work. It would neither generated messages for the error file configured with the -f option. \nThis Windows has the habit of informing the user about crashes from the previous session on booting into the next session, asks if information about it shoud be sent to Microsoft. This comes with a dialogue which I try to paste here, but as usual that does not work with Github. \nThe text goes (in my translation to English) like this: \"Tidy encountered an error and had to be terminated.\" \nAnd \"Please report this error also to Microsoft\" \nI would very much send the information gathered for informing microsoft, but that requires an eMail mailbox address. \n. I just mailed the same archive back which I had downloaded from your site. I also included a screenshot from the command line window. \nT-Online did not want me to send it, rejected it with a 5.7.0 error message. I asked my ESET virus scanner to check the archive, and it could not find anything. Another server accepted it. . Well, it seems we are getting to nowhere with this. I manged to retain just one of the half a dozen or more error reports which Windows asked me to forward to Microsoft. When that doesn't fit the exe which doesn't produce output, I am at end. \nAnyway, as I wrote before, I am happy with the version which is built with VC10, and then want to leave it here. \nI have just one question -- it seems that the -v or -version command line option gets Tidy.exe to just display the version string, but not processing any given file. Is that right? Isn't there a way to get Tidy.exe to write the version into the err file, as I call that, i.e. the file specified by the -f command line option? \n. HI, @Geoffmcl, your first line was cryptic to me and I did understand its meaning only earlier today, when I opened the mail account, from which I tried to send the ZIP a second time,  for the first time since Friday evening, and more by accident found a non-delivery report where Google wrote that the content was suspicious to them. See your inbox. . As I said earlier, I am happy with the Tidy which you built with Visual Studio 2010, which identifies itself as \"Tidy 5.5.31.w32-vc10\"; this does work. I thought you would be interested in finding out why the one built with VC14 and this XP-option does not, but so be it. I have a working environment, and hope to soon upgrade the server to 2008 R2. Cheers... \nThanks for all your attention! \nBTW, the behaviour of Tidy without giving it a filename to process on the command line is the normal one for any program which expects the input from STDIN, unless a name of a file on mass storage is given on the command line. \nThat enables Tidy to work as a filter, in a queue of filters, like in this imagined example: \nsomeprogram.exe inputfile.txt | tidy -options  |  python one-liner >outputfile.htm. BTW2, the reason why the VC14-xp did not produce any output on my system might be that the TEMP2.ZIP contained only the EXE, but not the corresponding DLL. . OK, let's close it. \n. I just saw that you added a new 32-bit Windows build. Thanks -- adding instead of replacing is OK with me. \nBut I am sure that not only the 32-bit version needs one which runs also on XP-level OSes, but also the 64 bit version. As we established in the other thread, the issue is not 32 bit vs. 64 bit, but Windows XP vs. later Windows versions. OK, I could not test that because I don't have a 64 bit Windows XP or Server 2003. \nI was intitially confused because I had only XP on 32 bit and Win7 on 64 bit, so this led me to the wrong assumption that the issue was 32 bit vs. 64 bit, but it turned out to be Windows XP and Server 2003 vs. Windows 7 and later (I don't know about Vista). \n. OK with me. . ",
    "rkopaliani": "Hi again @geoffmcl \nSorry, looks like I've really wasted your time. Anyway, will try to explain briefly what I've meant, maybe it helps somehow. This issue is not directly related to #153. But for some reason I though they look quite similar \u2013 both spotted when using [if mso] and both lead to some portion of the content being cut out.\nTo answer your questions:\n1. Problem is indeed with [if mso] comments\n2. DOCTYPE html\n3. utf8\nI am totally new to Tidy, so just to clarify. It is expected of Tidy to cut out content in body after tidyCleanAndRepair is called  against something like this\n<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\"\\\"http://www.w3.org/TR/html4/loose.dtd\\\">\n<html>\n<head>\n<title>Some title</title>\n<!\u2014[if mso]>\n<![end if]\u2014>\n</head>\n<body>\n<p>Some text to cut out </p>\n</body>\n</html>\nbecause this html is not valid itself ?\n. @balthisar yep, that's actually what I'm trying to suggest, sorry for being unclear. I try to use tidylib to clean up htmls for my project, I don't have any control of what kind of html I receive, unfortunately. . ",
    "ehlertjd": "@geoffmcl Thanks for the update, your analysis and code change makes sense. I grabbed the issue-498 branch and ran it through a few more test cases around tables and it worked as I expected. I have not had a chance to run it against a larger data set however.\nAs far as the W3 spec goes, all I really got from that is: If there's an open table, treat it as if you had seen a close element, then reprocess the open token (which it looks like your code change does). I'm not sure how one could get into the \"IN TABLE\" insertion mode without having a table element on the stack of open elements, so I'm afraid I'm of no further help there. \n. ",
    "bdubbs": "Yes it is a problem with github not recognizing that not all users fetch source files with a browser.\nMost projects have a link of some kind.  See for instance https://github.com/logrotate/logrotate/releases/. ",
    "allsey87": "Hi @geoffmcl,\nSorry about the commas, I accidentally added them when typing up the issue. Here is a complete example alongside my configuration files:\nUnformatted input\nXML\n<?xml version=\"1.0\" ?>\n<my-example>\n<anode attributea=\"valuea\"\nattributeb=\"valueb\"\nattributec=\"valuec\"\nattributed=\"valued\"/>\n</my-example>\nConfiguration 1\nindent: yes\nindent-attributes: no\nindent-spaces: 4\nwrap: 72\ninput-xml: yes\noutput-xml: yes\nOutput 1\nXML\n<?xml version=\"1.0\"?>\n<my-example>\n    <anode attributea=\"valuea\" attributeb=\"valueb\" attributec=\"valuec\"\n    attributed=\"valued\" />\n</my-example>\nConfiguration 2\nindent: yes\nindent-attributes: yes\nindent-spaces: 4\nwrap: 72\ninput-xml: yes\noutput-xml: yes\nOutput 2\nXML\n<?xml version=\"1.0\"?>\n<my-example>\n    <anode attributea=\"valuea\"\n           attributeb=\"valueb\"\n           attributec=\"valuec\"\n           attributed=\"valued\" />\n</my-example>\nWhat I am after is similar to Output 1, however with the strings attributea and attributed aligned in the output. That is, I would like the output of Configuration 1 to produce this:\nPseudo Output 1\nXML\n<?xml version=\"1.0\"?>\n<my-example>\n    <anode attributea=\"valuea\" attributeb=\"valueb\" attributec=\"valuec\"\n           attributed=\"valued\" />\n</my-example>\nI have the repo checked out and compiling, so if you can give me some hints on how to change this behavior, I can implement and test them as well as submitting patch.. Hi @geoffmcl,\nI will check out the bugs you mentioned and clone / create a branch for this bug. One question though, it seems that the doc structure already has enough information to do the indentation as demonstrated by output 2 in my last message, is this not the case?\nIf I remember correctly, pprint->ident is an array of size 2. I suspected that pprint->ident[1] or pprint->ident[0] would have contained the indentation information that I needed and I could simply use this value in a loop to create the correct amount of indention. However, if I remember correctly, pprint->ident[1] was just set (initialized) to -1.\nIt seems that enabling the option indent-attributes causes the tidy to take different routes through the application (based on my back traces with gdb), so I will need to have a look closer at this.. I spent a couple hours looking at this issue. I should point out that what I am looking for is slightly different to what @geoffmcl wants. That is, I'm looking to indent the second line of attributes so that it is vertically aligned with the first attribute on the first line. In contrast, I think @geoffmcl is looking to indent the second, third line etc constantly by a fixed number of spaces or tabs.\nThe actual amount of identation that I need is easily obtainable by calling AttrIndent( doc, node, attr ) inside PPrintAttribute. This is value is stored in the xtra variable, however, there is some hack at pprint.c on lines 1239-1240 which is setting this value to zero when the ident-attributes is disabled in the config. By commenting out this hack and adding xtra to ident on line 1263, I am able to approximately obtain what I want, however, it fails at times depending seemingly on how long the line is and where the wrapping occurs.. ",
    "yaccz": "I'd like this feature as well.. > It is also good to give a minimum html example input, tidy version, config used, output, and expected output, just to make quick testing easier...\nyeah, sorry about that. I felt like this case is simple enough to skip those.\n\nIt says found 1, but showed none... and Tidy exit level is 1...\nSeems mute/drop the warning is the users request...for all --mute XXXX options, ... equals no msg, no bump...\n\nI am not familiar with the tidy internals but your analysis seems correct to me.\nThough I'd classify this a Bug rather than Feature Request given the inconsistency of reported warning count vs printed warnings.. I am sorry, I am quite busy at the moment and this issue came up on a side project of mine. I should be able to test in a week or two.. Not working as expected.\nReproducer:\n```\n~/git/3rd/tidy-html5/build/cmake git:issue-794 [1]\nyac@remy % cat ~/tidy-in.html\n<!DOCTYPE html>\n \n\n\n \nShell Scripting Survival Guide\n \n\n\n\n## installation targets\n\n\n\n\n~/git/3rd/tidy-html5/build/cmake git:issue-794\nyac@remy % cat ~/tidy-in.html | tidy -i -quiet --mute-id yes -o ~/tidy-out.html                                     \nline 11 column 44 - Warning: trimming empty  (TRIM_EMPTY_ELEMENT)                                               \n\n~/git/3rd/tidy-html5/build/cmake git:issue-794 [1]\nyac@remy % cat ~/tidy-in.html | tidy -i -quiet --mute TRIM_EMPTY_ELEMENT -o ~/tidy-out.html                           \n\n~/git/3rd/tidy-html5/build/cmake git:issue-794 [1]\nyac@remy % cat ~/tidy-in.html | ./tidy -i -quiet --mute TRIM_EMPTY_ELEMENT -o ~/tidy-out.html                         \n\n~/git/3rd/tidy-html5/build/cmake git:issue-794 [1]\n```\nLines like \n~/git/3rd/tidy-html5/build/cmake git:issue-794 [1]\nIndicate that the previous command ended with exit code 1 by the ending on [<exit-code>]. Ok, then it looks like it works as you intended. --drop-empty-elements no is what I need.. ",
    "aidanlane": "Champion, thanks @balthisar!. ",
    "tuanmh": "Thank you greatly @balthisar! . ",
    "carlosflorencio": "Hi,\nI found this wiki:\nhttps://wiki.alpinelinux.org/wiki/Creating_an_Alpine_package\n. ",
    "thorade": "I think not too many people have Alpine installed on their computer, the reason that makes it an interesting distro ist that it is one of the smallest docker base images available:\nhttps://wiki.alpinelinux.org/wiki/Docker\nhttps://blog.bitbucket.org/2017/03/13/bitbucket-pipelines-adds-support-alpine-linux/\nhttps://www.brianchristner.io/docker-is-moving-to-alpine-linux/. Thanks for that note. If that is the inteded behavior, I am fine with it as it is.\nMy opinion is probably not representative here. \nHow do you treat other cases where the output differs from the input? Do you usually give an error/warning?. After thinking about it again, I believe a clean soultion could be to leave the default behavior as it is,\nand add a new config option --warn-optional-tags yes for those who want to see a warning for every fixed optional tag.\nWould that be hard to implement?. One more note: I do not use the cleaned document at all, I just use (via pytidylib) the list of warnings that tidy is returning.. pytidylib is just a thin wrapper that calls the tidy.dll from python\nhttps://github.com/countergram/pytidylib\nhttps://pypi.python.org/pypi/pytidylib. ",
    "Rodeoclash": "Thanks for the response @geoffmcl - I'd hazard it sits somewhere between feature request and bug.. ",
    "BBrey": "Well, to make some more fuss about this issue, we received an update on tidy for php 5.6.31 and this now breaks behaviour. Version 5.6.30 used a very old tidy lib (2009) which surrounded <li> with an <ul>.\nWe are now looking for a workaround.. ",
    "chiccorosso": "Closed. My fault. I apologize.. Then I'm uploading this file. As you can see the code is very malformed.\nThe code: <SCRIPT src=\"glb_LInk.js\"></SCRIPT>\nGets removed by tidy because of the A tag with malformed target and onclick attributes.\nI have this script call in hundreds of files and where there is that malformed \"A\" code  it gets removed.\nI can't understand if it's because of the malformed code of because of the fact that the file is utf-16 with no char code specification.\nIf you can help in this for sure I'll save a lot of time. If this can help you in improving tidy I'll be very happy for this.\nHere's the file:\nmyTEST.zip. Thank you very much for your attention!. ",
    "HasanAmmori": "@geoffmcl Those two are the same project :) Actually, there have been number of different maintainer of JTidy. This one has been the most active:\nhttp://jtidy.sourceforge.net/\nI have no idea why the maintainers have abandoned this project, since there is no real alternative in Java. I ended up running Tidy through command execution, but this is really inefficient way. Surely, one can do a lot with NekoHTML + JSoup, but they have been designed for different tasks, thus not everything is really doable.\nUnfortunately my skills are not up to the level to write a Java port of C++ library. But you guys are doing an extremely amazing job maintaining this project. I bet a lot of people are grateful for what you are doing! I understand that you are probably not very interested in JTidy, that is perfectly understandable, but thank you anyway! You are awesome!. ",
    "spk": "Hi @geoffmcl thanks for the feedback\nThe pkgconfig file is useful for people or tools that need to find information about the libs or headers; like the path of the tidy.h on the system with for example pkg-config --cflags tidy give for me -I/usr/local/include\nI found an issue with the Debian package with your information; currently going to /usr/local where for Debian its a violation of the policy, I will make a fix soon. @geoffmcl @balthisar I found a fix with pkgconfig with packages in 3333ca7 let me know what you think?. Great, thanks !. Hi @geoffmcl @balthisar , sorry about that. I think I did that to do like other *nix distros.\nPR #647 look good to me @geoffmcl thanks for the fix. Look good to me, issue introduced in https://github.com/htacg/tidy-html5/commit/3333ca7d6942b270048d76f9fd8729d4d2f5f21e#diff-af3b638bc2a3e6c650974192a53c7291R208. ",
    "Daijobou": "Thanks for your answer.\nI use plesk onyx which can handle and update multiple versions of php by self. Compile and add a own php version is not a problem (exclude tidy compile), but I must it update each time for every new php5.x/7.x/7.1 release. A in-build release would be much easier. :)\nlibtidy is a great library, I hope a release for HTML5 coming soon, maybe for 10. libtidy bday? :). ",
    "padraic": "You'd probably need someone to bring it up on PHP Internals mailing list and/or propose an RFC: https://wiki.php.net/rfc\nYou can find a list of current maintainers for the PHP extension here with contact details: https://pecl.php.net/package/tidy. @geoffmcl The best target is likely 7.2 as the next version (which I assume is master for now on the php-src repository, with 7.1 on the php-7.1 branch), but I would discuss it at minimum perhaps on the PHP Internals mailing list. Checking again, and my apologies, the PECL website lists the PHP4 extension so I would ignore that. The maintainers may vary. In reality, the tidy extension was bundled with the PHP source from PHP5 - you can find the current source here for the extension: https://github.com/php/php-src/tree/master/ext/tidy. ",
    "cmb69": "JFTR: PECL/tidy has been bundled as ext/tidy looong ago (but has not been marked as such). As of PHP 7.1 it is supposed to build out-of-the-box against libtidy 5; for older PHP versions, the patch described in BUILD.md might solve the build problem (have never tested it, though). Cf. #762.. > Which is also beautiful, BUT where is the 'tidy-mark' => true? I expect -\nPHP's tidy::parseString() does not call tidyCleanAndRepair(). You have to call tidy::cleanRepair() after parsing to get the generator (and also the doctype). Alternatively, you can call tidy::repairString() which returns the parsed and repaired string (but does not modify the tidy object). So the simplest thing to do here is likely:\nphp\necho tidy_repair_string ('<p>this is a string</p>', ['tidy-mark' => true, 'indent' => true, 'wrap' => 0], 'utf8');\n(It seems to me that PHP's Tidy API has quite some glitches, and the documentation needs improvement in this regard.). I see at least two possible solutions:\n use the @snippetdoc command\n do something like typedef tidy_status int, and use the new type as return type for the functions. @vitaly-zdanevich This is not valid according to HTML 5.2.. @oerdnj Would bumping the SONAME to libtidy.so.5.6 be an option? I'm afraid that libtidy.so.6 might cause issues, if there'll ever be an libtidy 6.. @hosiet Thanks for the explanation!. @ler762 Would any of these affect libtidy?\nAnyhow, since tidy 5.6.0 had removed some exported symbols, it's already too late to push to 6.0.0.\n@geoffmcl See how the export stuff is done in libgd, which might give some ideas for libtidy.. Calling tidyParseString() with UTF-16 encoded input does not seem to be supported (under the hood it uses  TY_(tmbstrlen) which does not report the proper byte length for UTF-16). See, for instance, PHP's wrapper on how to set up an appropriate input buffer.. It seems to me that according to the HTML 5.2 specification, this usage of the <meta> element is not allowed.. > This used to be in the console application. A change early this year moved it to the library. I would suggest moving it back to the console application.\nI second that. In my opinion, reverting 57f623eb7c2a8311ce0c11cdfb2641b9e20beead is the most reasonable way forward. Clients of libtidy could still call tidySetLanguage() if they desire.. > While it seems all fully agreed that a library should not do setlocale( LC_ALL, \"\" ), without a proper reset, are we also abandoning the library auto-detecting of the language? Why?\nWell, to keep things simple. setlocale() affects the process, so in a multi-threaded environment there might be issues. For instance, thread A might just have read the locale, then thread B might change the locale, and finally thread A might reset to the old locale. Making sure that this won't happen is certainly possible, but might not be that simple, and I don't think that auto-detecting the language is really important for the library.\nAnyhow, would checking the environment variables be really necessary? Both the POSIX and the MSDN docs say that passing NULL to the locale parameter of setlocale() will query the current locale setting without modifying it.\n. > You can't look at environment variables because they're set for the calling php program, not the logged-in user on the website. And you can't call setlocale( LC_ALL, \"\" ) for the same reason.. The library doesn't know anything about the logged-in user on the website, so there's no way the library can set the locale correctly.\nIs there currently any way to set the desired locale for Tidy in PHP?. @ler762 I'm particularly interested whether it is possible to set tidy's locale from PHP (without relying on any setlocale detection libtidy does or may do in the future). If it is not possible, it would make sense to expose a PHP function/method to allow this.. I have tested PHP 7.3.1 with tidy 5.7.18, and can confirm that #780 is fixed, and I couldn't detect any regressions. Thanks!\nSorry, for the off-topic discussion which I started above.. As I understand it, libtidy still tries to set its internal language from environment variables, but it doesn't change the general locale anymore. While this still might be arguable, this ticket is about the call to setlocale() which has been removed, so this ticket has rightly been closed, in my opinion.. ",
    "cjerdonek": "Here is a simpler example with no left angle brackets:\n<div foo='\n\n\n\n\n>>>>>>'></div>\n\nAnd an even simpler example: <div foo='>>>>>>>>>>>'></div>\n. It looks like this issue has been around for 11 years:\nhttp://html-tidy.w3.narkive.com/KGA5IJNw/missing-quote-mark-for-attribute-value\nMore than 10 characters triggers it. The example in the link above has 12:\n<span id=\"mySpan\" xml=\"<><><><><><>\"></span>\n. Looks like the offending code is here:\nif (quotewarning > 10 && seen_gt && munge)\n{\n    /*\n       there is almost certainly a missing trailing quote mark\n       as we have see too many newlines, < or > characters.\n\n       an exception is made for Javascript attributes and the\n       javascript URL scheme which may legitimately include < and >,\n       and for attributes starting with \"<xml \" as generated by\n       Microsoft Office.\n    */\n    if ( !TY_(IsScript)(doc, name) &&\n         !(TY_(IsUrl)(doc, name) && TY_(tmbstrncmp)(lexer->lexbuf+start, \"javascript:\", 11) == 0) &&\n         !(TY_(tmbstrncmp)(lexer->lexbuf+start, \"<xml \", 5) == 0)\n       )\n        TY_(ReportFatal)( doc, NULL, NULL, SUSPECTED_MISSING_QUOTE ); \n}\n\n. Thanks, @geoffmcl! Reducing to a warning sounds like a good idea. It might also be good to limit it to being emitted at most once per document. (And if it's a warning, I think the hard-coded number 10 doesn't really matter, btw, so a lower number is fine IMO.)\nThanks also for the tip re: --literal-attributes. Are they any down-sides to that option? What is its purpose / what does it do exactly?. ",
    "AnrDaemon": "This is highly subjective request, IMO.\nIt MAY be a security risk, if you open a page belonging to a different domain, BUT normal browser will automatically break all connections between two windows in such case.\nAdding to this, if I'm not mistaken. CSRF control headers are meant to prevent this scenario already.. > If you go to the trouble of setting the unique ENV variable  $HTML_TIDY , do you not want to know that this FAILED?\nOnly if that's the only place it is trying to look for configuration file.\n\nTidy, like several other projects I work with, tests and reads  $HTML_TIDY , or their equivalent ENV  rc  type file, if they have one and if given, before the command line is read\n\nI've never seen such project. Name me a few.\nAll programs I've worked with, if supports configuration file specified in command line, will not try to override it.. > specifying a  --config  on the command line\nIt's -config but othervise correct.\n\nthe rc file (which by default isn't supported without a build switch)\n\nDidn't know there's such a switch. Was always my presumption that it is controlled by $HTML_TIDY env. var.. The exact issue is that tidy reads ALL config files. Which is, for me, unexpected.\nI don't know what \"fgfs\" is, but postfix, nginx, apache, dovecot, mysql - all honor config file given in commandline options and don't try to steer away from it to other places.\nIn case you need to only override SOME of the configuration options, there's f.e. --defaults-extra-file= (for mysql), which explicitly allows for reading of default configuration files before parsing \"extra\" options.. Ok, you don't want to understand. Got it.. Very specific example?\nDefine a server in default nginx config then feed it a different config with a different server definition via commandline option.\nFollowing Tidy logic, both configs have to be merged, exposing both servers.. It doesn't matter if it a server or not. It was just an example.\nIf you want to restrict it to Tidy, I have a preferred set of default options ($HTML_TIDY, yes), but every time I want to use a different set of defaults, I'll have to, either\n1. Unset $HTML_TIDY for a time.\n2. Change $HTML_TIDY to point to a custom set.\n3. Specify all possible options each time and fervently watch if no new options appear in my defaults that would alter the behavior of a custom set.\n4. Always use -config file and forget that $HTML_TIDY exists altogether.. There's two more issues. css-prefix is changed and the priority-attributes (the only other list option) is not saved at all.. According to https://drafts.csswg.org/css-syntax-3/#tokenization (if I read it correctly), the parser is right. So, no surprize here.. I'm aware that it can be built (in fact, I'm working towards setting up build environment for Cygwin to test some stuff I'm interested in).\nBut Cygwin is not a \"build it yourself\" kind of project, it is distributing actual binaries, and you don't have to be a code guru to use it.\nThe proposition is to take the hat of the package maintainer for Cygwin and upload the packages directly to the Cygwin repository.\nAssuming it is building cleanly, I could probably help with initial setup. But I'm not a C/C++ programmer and unable to support the builds if anything goes down the rabbit hole.. This is not a \"cygwin issue\", as there's no active tidy package maintaner for Cygwin.\nCygwin itself provide installer and core library, the rest is provided by maintainers of individual packages.\nAnd #362 is not related in any way, so to say.. I do not want anything specifically, I was suggesting that somebody with skill and knowledge could step up to support one more distribution channel.\nBut if not, then not.. You can't realistically expect two different runtimes, following two different standards, to have a common unambiguous behavior in every specific situation.\nThere's no such thing as \"default language\" other than \"C\" in POSIX, unless you make it to be. I.e. using variables such as LANG, LC_MESSAGES et cetera.\nFor Windows, the situation is much better, as that explicitly defined in the runtime and can be queried using appropriate API calls.\nA good starting point could be https://blogs.msdn.microsoft.com/shawnste/2011/11/09/user-locale-system-locale-ui-language-language-profile-all-that/. It was a reference to the very attempt at using setlocale and expecting it to produce any usable results.\nWhy do you want to change locale of a running program from within a library that is not relevant to locale operations to begin with?. ",
    "mycatnamedweb": "Any help here please? :)\nhttps://stackoverflow.com/questions/50884241/is-noreferrer-enough-to-secure-links. ",
    "bruceburge": "I'm actually using the tidy plugin for notepad++ which I don't believe readily allows for the use of flags. And I the plugin is saying it's the latest version, so that sounds like it could use updating. \nAs for as injecting generator tag. From the HTML5 spec. \ngenerator\nThe value must be a free-form string that identifies one of the software packages used to generate the document. This value must not be used on pages whose markup is not generated by software, e.g. pages whose markup was written by a user in a text editor. https://www.w3.org/TR/html5/document-metadata.html#standard-metadata-names\nSuppose it's debatable if you could consider formatting  preexisting documents, generating them. \nRegardless, it's your application, and a handy one at that. So I'll continue to use it either way, and thanks all the efforts to make it available. \n. Hey thanks for the reply, and yes, adding tidy-mark: no to any of the tidy configs for the plug removes the injection.  So you can close the issue, and appreciate your time on the matter. But...\nI'm not sure if your config file supports comments, but providing one (or all three of the base .config) with all the options available would be helpful. \nSide note: \nmy NPP is up to date, \n\nthough it doesn't see whatever changes you have made have been pushed into the plugin manager info listing. \nThis is a fresh install of npp with tidy2 added from the plugin manager \n\n\nThe update tab in the plugin manager doesn't list there being any available updates.\n\n. ",
    "Kristinita": "1. Summary\nI use --tidy-mark no, because I want, that will display real modified data, no data of new HTML Tidy version:\n2. Environment\nI use plugin filetime_from_git, that generate data of last HTML file modifying.\n3. Expected behavior\nIf --tidy-mark no:\ndata of real changes generate.\n4. Actual behavior\nElse:\ndata of new HTML Tidy version can be generate, example:\n```diff\n \n\n-   \n+   \n\n=======================\n    =          Meta           =\n@@ -126,13 +126,13 @@ <h1 class=\"SashaTopHeader\">4 14 7. 4 \u043a\u043e\u0440\u0432\u0435\u0440\u0430, 14 \u0430\u043a\u0441\u0430\u043a\u0441\u043e\u0432, 7 \u0433\u0430\n                <div class=\"SashaVersion\">\n                    <!-- pubdate attribute is obsolete, use itemprop: datePublished\n                    https://stackoverflow.com/a/24455070/5951529 \n                    Last modified \u2014\n-                   2018-04-21 17:25:19+03:00\n+                   2018-04-22 18:34:27+03:00\n\n\n```\nThanks.. @geoffmcl , thanks for the answer.\nBatch file \u2014 is Windows-specific solution, not compatible for UNIX users.\nIs it cross-platform solution, for Windows and UNIX both?\nThanks.. @geoffmcl , when 5.7 version will released?\nThanks.. 5.6.0 is latest release for February 2019. We wait a new release.\nThanks.. If I agree that -DCMAKE_INSTALL_PREFIX[:PATH] value \u2014 default path:\nIs a way below recommended for Ubuntu?\nbash\n$ sudo apt-get install xsltproc\n$ git clone https://github.com/htacg/tidy-html5.git\n$ cd tidy-html5\n$ cd build/cmake\n$ cmake ../.. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIB:BOOL=OFF\n$ make\n$ sudo make install\nThanks.\n. Status: :heavy_check_mark: Fixed for me.\nNo warnings in console.\nThanks.. ",
    "chomse": "I need  real extern \"C\" which means that the function names are the same as used in the include file, not\nmangled to include the type of parameters as in C++. I can adjust to cdecl, stdcall etc. but I need\nthe pure method names.\nAs you can see in my first message the methodname has been changed with a leading underscore and\na @12 postfix whitch is a code for the number and type of the parameters which indicates a C++ convention.\nI have started the conversion from 32 to 64 bit and I'm able to link to the Win64 dll, but at the moment\nI'm triggering exception due to a wrong translation from the *.h files to Pascal.. sorry, pressed wrong button. yes. I can't use the lib file anyhow. With the above exports I can link to the methods and deal with\nthe other conventions call by call. So If you could send me the DLL I can contine with my FreePascal\nwrapper\nAt the moment I'm using the DLLs downloaded from http://binaries.html-tidy.org/ as part of the\nbinary package.\n. I have no problems in finding missing Windows DLLs.\nThanks for the DLL. It works:\nRelease Date    : 2017/05/13\nLibrary Version : 5.5.24\nTidying         : \"FooFoo!\"\ntidyOptSetBool: TRUE\ntidySetErrorFile: 3328112\ntidyParseString: 1\nNode: html\n    Node: head\n        Node: title\n            Node: Text\n    Node: body\n        Node: p\n            Node: Text\ntidyCleanAndRepair: 1\ntidyRunDiagnostics: 1\nNode: DOCTYPE\nNode: html\n    Node: head\n        Node: meta\n        Node: title\n            Node: Text\n    Node: body\n        Node: p\n            Node: Text\ntidySaveStdOut: -1\nA severe error (-1) occurred.\\n\nPress any key to continue\n. ",
    "suchafreak": "Here a simple test file:\n```\n<!DOCTYPE html>\n\n\n\nTest Page with style in body\n\n\n\n\n</p>\n<p>.content {\n    max-width: inherit;\n  }</p>\n<p>#centerContent {\n    padding: 0;\n  }</p>\n<p>\n\n\n\n  A simple test.\n      \n\n\n\n\n```\n. @geoffmcl \nThank you for your answer.\nAs of now, I consider this to be a bug as well. The W3C validator reports an error  for each style-tag in the body of a page unmistakably .\nPlease let me know, if I can be of any assistance. (Unfortunately, I am versed too well in C as I had to learn the hard way trying to access libtidy via JNA from Java to no avail. )\nThanks for your hard work! . && !TY_(IsHTML5Mode)(doc)\nThe only reason I see for this check is that at some point there were plans to support scoped style elements in HTML5. But as far as I can tell, this seems to be the case no longer, see: http://w3c.github.io/html/document-metadata.html#the-style-element\nhttp://caniuse.com/#search=scoped\nNo current browser supports this anyway.\nHTH\n. Hi \nThanks a lot for the prompt response.\nIs there any way to get hold of a binary of this fixed version for Windows? Unfortunately, I lack the necessary build environment to build tidy.exe from the sources. If not, what is the estimated time frame for the release of this fix?\nMTIA\n-sascha. Hi\nI tested the patched version with this input:\n```\n<!doctype html>\n\n\n\nA title\n\n\n\n  #someId {\n    right: 0;\n  }\n\n\n\n    #top-bar {\n      left: 0;\n    }\n  \n\n\n\n```\nThe good: The style-Tag directly within body gets moved to the head correctly.\nThe bad: The style-Tag nested within the div is not.\nThis is the output:\n```\n<!DOCTYPE html>\n\n\n\nA title\n\n/*<![CDATA[*/\n  #someId {\n    right: 0;\n  }\n/*]]>*/\n\n\n\n\n\n/<em>&lt;![CDATA[</em>/\n    #top-bar {\n      left: 0;\n    }\n/<em>]]&gt;</em>/\n\n\n\n```\nHope this helps to nail down the problem further.\nAnd many thanks for the build steps - worked like a charm.\nPlease let me know if I can be of any assistance.\nCheers,\n-sascha. @geoffmcl \nThank you for your reply.\nUnfortunately, neither me nor anyone on my team is versed enough in C to be of any help here.\nRegards,\n-sascha. Hi @geoffmcl \nThank you for your work.\nWe have a large number of pages we can use to test your changes, some of them contain rather \"nasty\" markup. I will get back to you as soon as I have results.\nAs far as I understand it, the support for scoped style definitions has been dropped from HTML5, probably because web components offer better isolation of CSS. So, from where I stand, the only correct behavior is to move any style tag found in the body to the head. A relaxed implementation could leave scope styles untouched until Mozilla drops style support, see: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style:\n\nThe scoped attribute is non-standard; it was being considered for standardization at one point but was dropped. Firefox and some other browsers still support it but you should avoid using it if at all possible since it could be removed from any or all of the supporting browsers at any time.\n\nHope this helps. I will report my findings asap.\n. Hi\nUnfortunately, the experimental version found at http://geoffair.org/tmp/tidy-5.5.31.I567-2-w64-vc14-md.zip does not move any style tags to the head anymore.\nWhat am I missing?\nRegards\n. Hi @geoffmcl \nSorry for not getting back to you sooner. \nThe experimental version found at http://geoffair.org/tmp/tidy-5.5.31.I567-2-w64-vc14-md.zip does not move any style tags to the head anymore, not even in this simple case:\n<!doctype html>\n<html lang=\"de-CH\">\n<head>\n  <meta charset=\"UTF-8\"/>\n  <title>A title</title>\n</head>\n<body>\n<style type=\"text/css\">\n  #someId {\n    right: 0;\n  }\n</style>\n</body>\n</html>\nCheers,\n-sascha. Hi @geoffmcl \nI will test the new version. Maybe the problem lies in the settings we use:\n```\ndrop-empty-elements: false\ndrop-empty-paras: false\nfix-uri: false\nfix-backslash: false\njoin-styles: false\noutput-html: true\noutput-xhtml: true\noutput-xml: false\nquiet: true\ntidy-mark: false\nwrap-php: false\nwrap-script-literals: false\n```\nI will get back to you asap.\nMany thanks for your ongoing work and support.\n. Good news: the new version works \ud83d\udc4d \n```\n<!doctype html>\n\n\n\nA title\n\n\n\n  #someId {\n    right: 0;\n  }\n\n\n\n    #top-bar {\n      left: 0;\n    }\n  \n\n\n\n```\nNext, I will test more tricky scenarios and report my findings here asap.\n. Me again:\nRun some more tests on files that contain style tags in divs nested up to five levels deep.  Tidy moved all the encountered style tags to the head.\n@geoffmcl : Should we also tests files containing even deeper nested structures?\nMany thanks!\nCheers,\n-sascha. @geoffmcl \nAll tests on our side show success! This is very good news. Many thanks for your work.\n. Thanks, @geoffmcl  for your reply.\nFurther tests with forms show that the name attribute in input and select tags is left alone, which is good, because submitting form data wouldn't work otherwise.\nI will do some further tests with tags that support the name attribute and report my findings here.\n. @balthisar: Sorry for my late answer.\nIn my opinion this behavior is wrong. \nTidy should leave the form-tag alone. It can cause problems with scripts that rely on the name tag to be present. And rewriting scripts is not always an option, as in our case, were users are free to add their own scripts to a web page the create using our tool.\nHTH\nCheers. I apologize for not responding sooner.\nTidy is working just fine, the problem sits in front of the computer: me! \nMy test program did not handle the output and error stream correctly, causing Tidy to hang. I was completely mislead by the symptoms. And against my usual mantra \"It is not the lib, it is you, stupid\", I assumed a problem with Tidy.\nI am very sorry for any stir I may have caused. \nClosing this bug.\nCheers,. ",
    "ferdnyc": "@geoffmcl \n\n@suchafreak thanks for the feedback and links... I understand the scoped attribute is non-standard, and support could be removed at any time from the few browsers that support it at this time...\n\nIf it helps cement this decision any, it's not even \"could be\" anymore: Firefox devs announced plans a month ago to unship <style scoped> support, as they'd like to avoid having to deal with it as they ramp up the \"Quantum CSS\" project to integrate the new Stylo parallelized CSS engine into Gecko. Stylo doesn't support <style scoped>, and now it will never have to. There was much rejoicing.. ",
    "no1xsyzy": "Okay, that makes sense. I just searched issues for keyword component but found no result. Didn't realize that custom tag/element is also a name for it. Thank you.. ",
    "pwang2": "Just share my experience here. I was able to by pass it with some replacement hack in vim script. \n```vim\nfunction! FormatVue()\n   let winview = winsaveview()\nsilent! /",
    "sampablokuper": "@suchafreak, according to the docs for --anchor-as-name,\n\nIf set to no any existing name attribute is removed if an id attribute exists or has been added.\n\n(I added the italics at the end.)\nWe can see from your first post that no id attribute exists on your form element at the moment of being input to tidy, but did you have any options enabled that could have added that id attribute?\nIf so, then this explains the behaviour you observed. If not, then I agree that you have encountered a bug in tidy, in its documentation, or in both.. Perhaps this should be doctype-specific, such that it is on by default for doctypes for which a standalone & would be invalid? That is probably the most intuitive behaviour, but it would be more complicated to implement and document than simply default on or default off.. @geoffmcl, thanks for your reply.\nWith the input <a id=\"foo\" name=\"bar\">baz</a>, the only way to obtain a no-op is to use --anchor-as-name yes:\n$ echo '<a id=\"foo\" name=\"bar\">baz</a>' | tidy --anchor-as-name yes --quiet yes --show-warnings no --show-body-only yes --doctype strict\n<a id=\"foo\" name=\"bar\">baz</a>\n$ echo '<a id=\"foo\" name=\"bar\">baz</a>' | tidy --anchor-as-name no --quiet yes --show-warnings no --show-body-only yes --doctype strict\n<a id=\"foo\">baz</a>\nBy contrast, with the input <a id=\"foo\">baz</a>, the only way to obtain a no-op is to use --anchor-as-name no:\n$ echo '<a id=\"foo\">baz</a>' | tidy --anchor-as-name yes --quiet yes --show-warnings no --show-body-only yes --doctype strict\n<a id=\"foo\" name=\"foo\">baz</a>\n$ echo '<a id=\"foo\">baz</a>' | tidy --anchor-as-name no --quiet yes --show-warnings no --show-body-only yes --doctype strict\n<a id=\"foo\">baz</a>\nTherefore, neither of those two options can be relied upon, in the general case, as a no-op.\nThe proposed --anchor-as-name preserve option would yield a no-op with any relevant input, i.e.:\n$ echo '<a id=\"foo\" name=\"bar\">baz</a>' | tidy --anchor-as-name preserve --quiet yes --show-warnings no --show-body-only yes --doctype strict\n<a id=\"foo\" name=\"bar\">baz</a>\n$ echo '<a id=\"foo\">baz</a>' | tidy --anchor-as-name preserve --quiet yes --show-warnings no --show-body-only yes --doctype strict\n<a id=\"foo\">baz</a>\nI hope this demonstrates the validity of the feature request, and that this is not a technical support query. Thanks again :-). Thanks for your follow-up :-)\n\nAccordingly will try changing this to a clearer, simple [label] of a Technical Discussion...\n\nGood call.\n\nTidy's general aim should be to produce a valid W3C document. [...] Such an option should not force tidy to produce invalid html...\n\nIn the case of an (X)HTML or XML fragment or snippet, the input to Tidy is necessarily not a valid document. Nevertheless, it is reasonable for a user to want Tidy to process that input. To satisfy this reasonable use case, Tidy must necessarily be capable of creating output other than valid documents.\nFortunately, Tidy is already capable of this, as you know :-)\nPersonally, I think it is most useful to think of Tidy's end goal to be to act as a set of filters, each of which is designed to correct or to report on some category of issues likely to be found in (X)HTML or XML documents or fragments. Ideally, the user should be able to selectively turn those filters on or off. (And if on, then to choose between various available applications of those filters, if appropriate - e.g. to choose between yes or no for --anchor-as-name.) This way, Tidy would be capable of achieving all the functionality that a user might desire, without ever forcibly performing any actions that the user does not desire.\nThe power to create valid documents must be part of that. But the power to prevent Tidy from silently semantically altering the input should also be available.\n\nSeek further feedback, discussion, examples, even patches, or a PR, etc... would be most appreciated... thanks...\n\nI'm sorry that I can't offer anything further in that vein right now :-(. @geoffmcl wrote:\n\nHTML4\n[...] I think, this option came about to ensure if the user had added an id, then this option, with a default of yes, ensured a name attribute would be added. And you would set this option to no to avoid this, if that was what you wanted...\nSo here you need to show a use case where preserve is needed in this html4 mode.\n\nAlready provided in my comment above.\n\nEither you let tidy fix the document, adding name if missing, or you set it to no... Where then is preserve needed?\n\nIf an application consuming the HTML applies different semantics to name than to id, then adding and populating a name attribute where one was not previously present could cause unwanted effects in such an application.\nSimilarly, removing a name attribute from an element could cause unwanted effects in such an application (even if an id attribute exists and is retained on that element).\nSo, there needs to be an option besides yes or no, which is where preserve would come in.\n\nWhat would it do differently to no? html4 document samples please...\n\nAgain, already provided in my comment above.. @geoffmcl wrote:\n\nHTML5\n[...] I can not see the usefulness of adding a preserve choice... If you disagree, what should it do in this html5 case?\n\nI do disagree. IMO a preserve option would be useful for HTML5 just it would be useful for HTML 4 and for XHTML: i.e. for the same reasons and behaving much the same way.\nFYI, in HTML5, id is a \"global attribute\", i.e. it can be applied to any element. The name attribute, however, is defined only for certain elements, currently (according to this & this): <button>, <fieldset>, <form>,  <iframe>, <input>,  <map>, <meta>, <object>, <output>, <param>, <select>, <textarea>, and possibly <keygen>.\nAFAICT, it is perfectly valid for such elements to have both the id and the name attribute set, if desired, and indeed for those attributes to have different values to each other. (As usual, each id attribute's value must be unique per-document.)\n\nname was depreciated... see say a-element, where name has been omitted... and again seek more references on this... But tidy has still to catch up with this html5 change... It should warn about name\n\nThis is not quite correct. name was not deprecated entirely in HTML5. Tidy should only warn about  the presence of a name attribute in an HTML5 document if it appears on an element for which name is not a valid attribute in HTML5.\n\nAgain html5 document samples please...\n\nThese would be exactly the same as in my comment above, except that instead of the <a> element, they would use one of the elements listed above for which the name attribute is valid in HTML5.. @geoffmcl wrote:\n\nwhat application, consumer of html, are you talking about?\n\nNo specific one: could be a simple static website, could be a dynamic web application. Could even be a mobile app with a WebView, or whatever.\n\nOk, at least you are starting to narrow it down, and that is for HTML4...\n\nNot just for HTML4. I have addressed XHTML and HTML5 as well, in my comments above.\n\nAnd have you tested XHTML? [...] In most cases XHTML is handled differently in tidy...\n\nI already gave a relevant example of Tidy's behaviour in my comment above.\nQuoting the man page: \"If set to strict, Tidy will set the DOCTYPE to the HTML4 or XHTML1 strict DTD.\"\n\nGive an example where tidy is in error.\n\nI did not say Tidy is \"in error\". I explicitly marked this issue as a feature request.\nIn doing so, I noted a reasonable use case that Tidy currently fails to handle, that it would handle if the requested feature were added.\n\nThis issue is about an anchor,  tag, not about other tags.\n\nThat is incorrect.\nThis issue is a feature request relating to Tidy's --anchor-as-name option.\n\nIf tidy is in error on any of these others, then please open a separate issue, and provide sample html that you think tidy handles incorrectly... thanks...\n\nSee above.\n\nAnd just to be clear, adding a preserve would be more difficult. Read would need a new PickListItems table. A simpler change from a Boolean option to an AutoBool, which allows a 3rd option, auto, would be much easier. The auto could signal a sort of no-op in this case, and be more backward compatible...\n\nAs I mentioned in my first post above, the use of an Autobool as a way to provide a third option seems OK to me.\n\nI am not yet convinced that such a change is required... but I am just one voice... and I could be wrong...\n\nI think you are, in this case.\n\nNow all that means is that I am not personally interested in coding such a change... so left to me this would presently be a Won't Fix label... but...\nIf you, or others, want to present a PR, or further feedback, I will try to listen for a stronger use case... thanks...\n\nThe use case is already strong. If, despite that, you don't want to address the issue, then that will just perpetuate an inconvenience for Tidy's users :-(\nIn any case, rather than closing this issue as WontFix, I would ask that it at least be left open for anyone who does have an interest in submitting a fix and closing via PR to do so. Thanks.. @geoffmcl wrote:\n\nIf I am reading this correctly, you are asking for an option to allow repeated attributes. Have I got this right?\n\nEssentially, yes. Specifically, an option to retain repeated attributes from the input.\n\nIf an attribute is repeated, either with the same value, or a different value, why would you want to preserve this invalid html? What use case is there for this?\nI can see from your comments in #733, user should be able to selectively turn those filters on or off, thus avoiding tidy fixing the document.\nThat idea, taken to its extreem, suggests you want to be able to configure tidy to effectively do nothing. Why use tidy if you want that?\n\nThe general use-case is that the more Tidy options the user can set to no-ops, the better. That way, the user is empowered: they can choose exactly which clean-up operations to perform with each Tidy invocation.\nHere is an example of a specific use-case in which that power could be well-used: if someone cleaning up HTML documents or fragments under version control wanted to make separate commits for separate clean-up stages, and to be able to choose the order in which to run the clean-up operations. They would only be able to achieve this with Tidy if Tidy provided no-op options for every applicable operation. If their HTML had multiple declarations of the same attribute within any given elements, then that would include the --repeated-attributes option.\n\nIt is simply not sufficient to theorize that in any, and every yes/no otpion should have a 3rd, sort of no-op choice... at least I am not seeing that yet... maybe I misunderstand something...\n\nNot every yes/no option; only the ones where neither \"yes\" nor \"no\" results in a no-op. There seem only to be a handful of those, and at this point, I believe I have opened feature requests for all of them.\n\nSo again I would ask for sample use cases... thanks...\n\nAs above :-). @geoffmcl wrote:\n\nI looked at this, and while everything is possible, this would be quite difficult...\n\nThanks for looking :-)\n\nThe main thing is that tidy presently collects tags from the stream in lowercase, and the original case of the tag is lost forever...\nThere are just so many code paths where tidy does a case compare of tags, like once in a  tag it is seeking a  tag, and so on, and on, and on, using a simple, fast, case compare, like strcmp, although it uses its own internal TY_(tmbstrcmp)...\nYes, all those checks could be made without case, it does have its own TY_(tmbstrcasecmp), or tidy could also collect and keep the actual user tags, by expanding its node structure, but either way this would be quite a big job...\n\nSorry to learn that Tidy has been written in such a way as to make this difficult :-(\n\nSo yes, this seems a reasonable, valid enhancement, although, as mentioned elsewhere, would suggest using the AutoBool 3rd option of auto for this, rather than a new option type, which could then use say no-op, or preserve...\n\nSeems fair to me.\n\nIs the use case worth this effort... thanks...\n\nThe general use-case is that the more Tidy options the user can set to no-ops, the better. That way, the user is empowered: they can choose exactly which clean-up operations to perform with each Tidy invocation.\nHere is an example of a specific use-case in which that power could be well-used: if someone cleaning up HTML documents or fragments under version control wanted to make separate commits for separate clean-up stages, and to be able to choose the order in which to run the clean-up operations. They would only be able to achieve this with Tidy if Tidy provided no-op options for every applicable operation. If their HTML had tags in more than one case, then that would include the --uppercase-tags option.. ",
    "emilycrutcher": "Thanks a million! Your work is very appreciated because if  you pass it to prince.xml, it completely screws up, which makes our customers very sad.\nI am also very grateful to you for helping support this project. We have been trying to do the HTML cleaning in-house, so I know exactly how tricky these problems can be and how much high quality work it takes to maintain.. Thank you! :-)\nOn Sun, Jul 2, 2017 at 3:14 PM Geoff McLane notifications@github.com\nwrote:\n\n@emilycrutcher https://github.com/emilycrutcher thank you for your kind\nwords, but have now tracked down the commit b704a4d\nhttps://github.com/htacg/tidy-html5/commit/b704a4d0d4587c1dc428fcfdd01fa337c87cec3e\nthat caused this problem... and while the commit is by @rtack\nhttps://github.com/rtack, through a merge, it was a patch I suggested...\nThis was an attempt to fix issue #396\nhttps://github.com/htacg/tidy-html5/issues/396, but now see it as\nwrong, or at least incomplete, so while the patch to fix this issue\nis to simply remove that fix, that would re-open #396\nhttps://github.com/htacg/tidy-html5/issues/396, so now they must be\nconsidered together...\nTidy is in a service TY_(ParseList)(TidyDocImpl doc, Node list, ...)...\nIn this case we have already had one valid , ie done in ParseBlock...\nNow we have another start list,  in this case...\nThe issue #396 https://github.com/htacg/tidy-html5/issues/396 is that,\nin html5, a list can have zero , but here we have had one, so this\nshould not apply... so have some ideas to add...\ndiff --git a/src/parser.c b/src/parser.c\nindex a037280..be07b29 100644--- a/src/parser.c+++ b/src/parser.c@@ -2435,6 +2435,7 @@ void TY_(ParseList)(TidyDocImpl doc, Node list, GetTokenMode ARG_UNUSED(mode))\n     Lexer lexer = doc->lexer;\n     Node node, parent, lastli;\n     Bool wasblock;+    Bool nodeisOL = nodeIsOL(list);\n#if !defined(NDEBUG) && defined(MSC_VER)\n     in_parse_list++;@@ -2452,6 +2453,7 @@ void TY(ParseList)(TidyDocImpl doc, Node list, GetTokenMode ARG_UNUSED(mode))\n while ((node = TY_(GetToken)( doc, IgnoreWhitespace)) != NULL)\n {+        Bool foundLI = no;\n     if (node->tag == list->tag && node->type == EndTag)\n     {\n         TY_(FreeNode)( doc, node);@@ -2521,10 +2523,16 @@ void TY_(ParseList)(TidyDocImpl* doc, Node *list, GetTokenMode ARG_UNUSED(mode))\n         continue;\n     }\n\n\nif ( nodeIsLI(node) || TY_(IsHTML5Mode)(doc))+        if ( !nodeIsLI(node) && nodeisOL )\n         {-            / node is  -               Issue #396 - A  can have Zero or more li elements+            / Issue #572 - A  can have nested  elements /+            foundLI = FindLastLI(list, &lastli); / find last  /+        }++        if ( nodeIsLI(node) || (TY_(IsHTML5Mode)(doc) && !foundLI) )+        {+            / node is  OR+               Issue #396 - A  can have Zero or more  elements\n              */\n             TY_(InsertNodeAtEnd)(list,node);\n         }\n\nThis seems to fix this issue, but still to re-test #396\nhttps://github.com/htacg/tidy-html5/issues/396... have pushed this\nchange to an Issue-572 branch...\nAnd need to think about this some more, and experiment... and hope others\nget the chance to checkout this branch and test... be back soonest, unless\nsomeone beats me to it... thanks...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/572#issuecomment-312511121,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABPez_lgfj-erIh_KvOQePFUF40wmDQjks5sJ-wtgaJpZM4OJwme\n.\n. Thank you so much!  I had a couple of questions on the patch...\n\nWhitespace question\nFor your whitespace removal, does HTML Tidy deal with Unicode?  As I think\nthere are some more whitespace chars, we recently got bit by this one\nbecause CKEditor can start inserting them if you switch the language .\nAlso, if you only need to deal with ASCII, for completeness you might ad\n'\\f' and '\\v', even though they don't show up much anymore...\nTest Question\nI see the in for 396, but I don't see the corresponding out for it?   Is\nthere another mechanism used to associate inputs and outputs?\n. Thanks a million!\n. ",
    "truongminhlong1988": "Thansk you for your response. \nyes, I 'm building an app using libtidy.\nI will try this option and inform you for the result. Thanks you. That answers my question now. Would you mind if i asked 1 more small question?\nIs there any avaliable lib to validate html ? . Thanks you a lot for your information. That is all i need. Really, thanks\nyou\nOn Jul 25, 2017 9:30 PM, \"Geoff McLane\" notifications@github.com wrote:\n\n@truongminhlong1988 https://github.com/truongminhlong1988 well the W3C\nnu https://validator.w3.org/ java validator source\nhttps://github.com/validator/validator is available... so you can build\nand run the nu.jar locally...\nNot exactly a linkable library... but could maybe be converted...\nAnd it also has a web API... this python3 script html5check.py\nhttps://gist.github.com/akamch/1430166 written a few years ago... makes\nit easy...\nThere are probably others out there, but are not familiar to me... maybe\nothers can help with this question... thanks...\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/htacg/tidy-html5/issues/578#issuecomment-317756157,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AcpQBfyD0oPh1b19tgTXXjHGN8cka6WPks5sRfwSgaJpZM4OfTTN\n.\n. \n",
    "onlyanegg": "Thanks for responding, @geoffmcl! Yeah, I'll have to look into the curl options. . ",
    "svinkle": "Hi @geoffmcl, thanks for getting back to me.\nI understand your reserve of implementing this request; it could prove to be quite an effort and the fact that the inclusion of these attributes result with valid HTML is a reasonable concern.\nThe purpose of this request, and possibly many more, would serve the purpose of aiding developers in understanding when, or when not, to add accessibility related attributes. In some contexts, using aria-* and/or role attributes can cause more harm than good, while remaining as valid HTML.\nFor example, applying role=\"button\" to a <div> element is valid and screen readers will announce the <div> as a \"button.\" For some, this likely seems a reasonable solution. Unfortunately, the reality is this introduces a host of underlying issues when using role in this manner; semantic meaning, lacking proper keyboard support, and screen reader announcement issues to name a few. In this case, I'd recommend issuing a warning and to encourage using an actual <button> element instead.\nFor this issue in particular, the warning would appear if any of the above attributes were applied on any elements not listed above, in addition to checking against if the element featured an appropriate widget role. I understand that this is a large task and might not make it in, but I felt like it was worth reporting and getting a dialog going to help spread awareness.\nMy personal and professional experience with accessibility assessment/testing has shown that developers think they're making sites more accessible by tacking on some of these attributes onto various elements. This often leads to discussions on why these attributes are not ideal and should be removed. I believe if linters made suggestions on proper aria-* and role attribute usage, this would save time and help educate people in the process.\nNormally I'd happily contribute and create a PR to help out, but since this project is C based, which I have zero experience with, I'll leave it up to the experts of this language.\nLet me know what you think.. ",
    "brennanyoung": "I understand that some devs get trigger-happy with tabindex and role, leading to an even worse accessibility implementation, and I think some warnings (such as not using tabindex values greater than 0) would make a lot of sense, but I'm not sure warnings about using role=button instead of plain button will be desirable in every case, as this is a very common and (in the case of retrofitting an existing site, recommended) practice. If it were switchable, it would be ok.\nHowever, some caveats about really screwy accessibility issues could be welcome. \nAs for other 'code policing', I notice that tidy does not complain or 'clean up' if you use \"false\" as a value for a boolean attribute, which is both counterintuitively wrong, and easy to catch. Example:\n<div hidden=\"false\">this won't be hidden because the attribute is always true if present</div>\nMaybe we could compile a list of accessibility 'sins' and 'smells' which we find worth reporting? Shall I begin?\n\nOne very obvious one is: tabindex values greater than 0 - A11y folks know that such values are 'valid' but almost always bad. This should flag a warning, or be 'tidied', I think.\nTabindex of 0 on something which is not interactive (e.g anything but a link, button or input), or does not have an interactive role. Again, this is 'valid' HTML, but almost always bad.\nMissing landmark roles. At least one top-level heading is expected by assistive tech. Something with role=main is also 'expected'.\nPleonasms such as <button role=button> should be tidied or warned about. \nRoles which actively contradict or fuzz the default element semantics (e.g. <footer role=heading> or <h1 aria-level=4>) are a code smell, and deserve a warning, but it will be hard to identify a full set of these,\nSome roles are 'forbidden' or 'known to break' in the context of some other roles. (e.g. putting role=menu inside something which has role=button is probably not going to work with a screenreader). \nSome attributes which are required with certain roles. For example role=progressbar requires aria-valuemin, aria-valuemax to be present.\n\nThese are just off the top of my head. I guess we need to plough through the w3c roles document.... @geoffmcl Thank you! That's exactly the behavior I wanted. \nOK, then I will dial down my feature request to request that show-body-only is easier to find in the docs :D . Good. Here are another couple of example inputs.\nIncorrect boolean attribute value literally \"false\":\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Is. #796</title>\n</head>\n<body>\n<video controls=\"false\" width=\"250\" src=\"/media/examples/flower.mp4\"></video>\n<p>Boolean attribute test</p>\n</body>\n</html>\nIncorrect boolean attribute value implicitly\"false\":\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Is. #796</title>\n</head>\n<body>\n<p visible=\"hidden\">Boolean attribute test</p>\n</body>\n</html>\nRationale for these two examples:\nIt would be difficult to deduce whether a poorly formed attribute value is intended to be 'false'. Example: visible=\"hidden\". I suppose the correct behaviour would be to remove the attribute entirely in the cases where it has the literal value \"false\" (I think that would be a 'fair' intervention), but otherwise to warn if it is anything other than empty string or a case insensitive match for the attribute name. \nThe two examples provided here could be used to distinguish the two possible outputs.. Yes, I should have been clearer about that. <p visible=\"hidden\"> is indeed invalid. I include this example because it 'looks' right (the intended value 'false' is strongly implied, even though the markup is poorly formed). Tidy should (and does) catch this. . ",
    "shentino": "I tried it on my end and it did't insert the blank lines, even with \"--vertical-space=yes\". Weird.\nIf I use option \"--vertical-space=yes\" it ignores it, but if I use \"--vertical-space yes\" it puts two blank lines.. I tested it and it works on my end.  Please merge to mainline ASAP so my distro can pick it up.. Issue 585 might be related.. I would like to convert this issue into a feature request:\n\nAdd /etc/tidy.conf as a default value for TIDY_CONFIG_FILE\nAdd $HOME/.tidyrc as the default value for TIDY_USER_CONFIG_FILE\n\nThe HTML_TIDY thing is getting added to my env vars right now\n. In the case of $HOME, I'm sure that a platform-detecting #ifdef would work around that issue.\nAnd in my opinion, something very obviously named /etc/tidy.conf is very clear on its purpose and hardly silent.  If enabled as the default config file for html tidy, \nQuite frankly to be honest, when I was looking for how to configure tidy myself, I went looking for /etc/tidyrc or /etc/tidy.conf before I even bothered reading the manpage for tidy.  That's mostly because stuffing config files with default options into a file in /etc is a very common convention in unix systems.\nThere is almost zero chance of confusion if one is familiar with unix conventions.  Someone having an issue because they forgot about this file would IMHO be guilty of PEBCAK and need a dose of RTFM.\nIt's possible, true, that this sort of convention only applies in unix and doesn't make much sense in windows, but I don't think that's a good reason to deprive linux users of a convenient way to set up a system-wide default config, and I've seen plenty of packages set up this way to accept default options this way.\nI repeat for emphasis, /etc based config files are so common in unix that I was honestly surprised not to find one for tidy.  It really was the first place I looked.. I'm not asking for a default config file to actually be created, by the way.\nOnly asking that tidy be changed to look for one.  There's a difference.\nYou don't need to do any packaging for the actual file, just set a default location for tidy to look.\nProbably something as simple as a default definition\n```\nifdef ON_LINUX\ndefine TIDY_CONFIG_FILE \"/etc/tidy.conf\"\nendif\n```\nThat's really all you guys would need to do to implement this.  We don't actually need the config file itself.  Naturally tidy should run with or without it.\nNaturally if we add this as a default config location, you'd probably also want to update tidy's manpage to mention the file. Yes, I'm asking for it to be made a default at this level by you guys, so that us downstream users and developers won't have to mess with it.\nBasically I'm asking ~/.tidyrc and /etc/tidy.conf to be set as defaults upstream, which is here on github.. That is indeed my point.  Obviously actually including a config file would change the packaging, but just specifying its default location would be much cleaner.\nThat said, a sensible prewritten tidy.conf would be a good idea in the future IMHO. Getting it upstream (here) was a good first step.  From what I know distros don't tend to like tampering with the packages they distribute to their users unless needed to fix a bug (and usually they prefer to push those patches and/or tickets upstream like here to have the original developers fix them).  A new update will probably migrate downstream from you guys eventually once a release is made.\nI've already pulled from master and plan to test it and use it locally if I get around to it.  I may also submit a request on my distro's bugzilla to ask them to pull your updates to their own repo.\nYou have my thanks for adding this feature, and I'm hoping that many more users will also find use for this feature.. Similiar misformatting observation noted with:\n<p><a href=\"foo.html\">bar</a>\n</p>\nvs\n<p><a href=\"foo.html\">bar</a>baz</p>\n. I wish to add that this apparently only happens when vertical-space = yes\nWithout vertical-space, it formats properly. issue 582 might be related. is there an option I can use to avoid line-splitting an empty tag?. What I would like is both:\n\nEmpty tags don't get split\nBlock level elements at the same depth still get separated by blank lines.\n\nvertical-space yes handled the second one but messed up the first one. Personally I'd be curious why the behavior changed between 2000 and 2009.\nHere's also why the current behavior is weird:\nWe get these:\n```\nblah blah blah\n\n\n```\nBut why on earth are these two considered different:\n<p><span>blah blah blah</span>\n</p>\nvs\n<p>blah blah<span>black sheep</span>have you any wool</p>\nOne would think that it would only treat empty elements differently.  An element with contents ending in plain text should not be treated differently from an element with contents ending in a tag.\n<p><span>blah blah blah</span>\n</p>\nShould not suddenly turn into this just because you add one letter:\n<p><span>blah blah</span>o</p>\n. Indeed.  Took a bit of practice to figure it out.\nAnd now you know why I reported this issue as a bug in the first place.  A single letter having that much of an impact is what led me to believe the behavior in question was not intended.  And an element whose contents end in a nested tag is not \"empty\" and is why\n<p>\n</p>\nShould not be treated the same as\n<p><span>blah blah blah</span></p>. Agreed.\nAnd though I believe that providing a default config file will itself be with merit, it is a separate enhancement and should not be combined with this issue, it should be listed as a separate issue that depends on the other one.. My concern is more about not having two separate modifications combined into the same issue.. Thank for adding this feature :). ",
    "JohnArcher": "Ok, thanks for the info. Well, I would need a version for Windows, though, but thanks for the offer!. (Just want to say, I read you comments and appreciate them a lot! I have no skills in this field, but I try to have a look at other projects how they handle that. But I am aware of the problem you have to deal with as you support so many platforms (which is cool!)).. ",
    "MayfeelYang": "@balthisar I have send an email to you.. @balthisar \nEnvironment:\nOperating System:\nuname -a\nLinux fuzzing-virtual-machine 3.16.0-30-generic #40~14.04.1-Ubuntu SMP Thu Jan 15 17:43:14 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux\nReproducing: gcc\nmkdir build\ncd build\ncmake ../\nmake\nException: gcc\n......\nline 2 column 121 - Warning: replacing invalid UTF-8 bytes (char. code U+00AD)\nline 2 column 122 - Warning: replacing invalid UTF-8 bytes (char. code U+00AD)\nline 2 column 123 - Warning: replacing invalid UTF-8 bytes (char. code U+00AD)\nline 2 column 124 - Warning: replacing invalid UTF-8 bytes (char. code U+00AD)\nline 3 column 12 - Warning: replacing invalid UTF-8 bytes (char. code U+00FF)\nSegmentation fault\nReproducing: clang\nmkdir build\ncd build\nCC=\"clang -g -fsanitize=address -fsanitize-coverage=bb \" CXX=\"clang++ -g -fsanitize=address -fsanitize-coverage=bb\" cmake ../\nmake\nException: clang\n```\n==11842==ERROR: AddressSanitizer: SEGV on unknown address 0x7f630db13c5a (pc 0x000000524eb2 bp 0x7fff15ac0a90 sp 0x7fff15ac0940 T0)\n==11842==The signal is caused by a READ memory access.\n    #0 0x524eb1  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x524eb1)\n    #1 0x51ff8a  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x51ff8a)\n    #2 0x57e2c7  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x57e2c7)\n    #3 0x5744c1  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x5744c1)\n    #4 0x56c4b0  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x56c4b0)\n    #5 0x552b61  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x552b61)\n    #6 0x50e29a  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x50e29a)\n    #7 0x50ad7f  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x50ad7f)\n    #8 0x50a8cc  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x50a8cc)\n    #9 0x4fd270  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x4fd270)\n    #10 0x7f630d871ec4  (/lib/x86_64-linux-gnu/libc.so.6+0x21ec4)\n    #11 0x42301b  (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x42301b)\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV (/home/fuzzing/MyFuzzerTarget/tidy-html5/build/tidy+0x524eb1) \n==11842==ABORTING\n```. @geoffmcl I have tested and confirmed the patch, it's good.. ",
    "mthorpe7": "@balthisar done \ud83d\ude04 . sample crash:\n$ cat out/fuzzer03/crashes/id:000052,sig:11,src:000642,op:havoc,rep:2\n<html xmlns:o=\"urn:schemas-minrosoft-com:office:office\"X<?ody><table><img class=\"\" /></table></body></html>\n$ ./tidy-html5/tidy --force-output yes --show-warnings yes --tidy-mark no --word-2000 yes out/fuzzer03/crashes/id:000052,sig:11,src:000642,op:havoc,rep:2\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nline 2 column 1 - Warning: inserting missing 'title' element\nline 1 column 1 - Warning: <html> proprietary attribute \"xmlns:o\"\nline 1 column 1 - Warning: <html> proprietary attribute \"x\"\n[1]    41695 segmentation fault  ./tidy-html5/tidy --force-output yes --show-warnings yes --tidy-mark no  yes. ",
    "ablackton": "@geoffmcl and @balthisar, thank you!. ",
    "ReubenM": "I run into this when using vim via syntastic. When using tidy directly (no arguments) on the following html page:\n<!DOCTYPE html>\n<html lang=\"en-US\" dir=\"ltr\">\n        <head>\n                <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n                <meta name=\"language\" content=\"English\" />\n                <title>Download attribute demo</title>\n        </head>\n        <body>\n                <a href=\"/path/to/file.ext\" download=\"file.ext\" type=\"application/octet-stream\">Download file here</a>\n        </body>\n</html>\nthe first three lines from tidy is:\nline 9 column 17 - Warning: <a> proprietary attribute \"download\"\nInfo: Document content looks like HTML5\nTidy found 1 warning and 0 errors!\nAs for the w3c documentation, you can reference here:\nhttps://www.w3.org/TR/html5/links.html\nwith specific reference to sections 4.8.1 and 4.8.3\n. ",
    "Matt-Fitzpatrick": "Closed with my apologies - Duplicate of issue #196.. ",
    "jokester": "Didn't know there are options like ENABLE_DEBUG_LOG (#630 was detected by valgrind). They would be extremely useful when debugging a custom allocator. Thanks @geoffmcl !. Sure, I only mean to make it a little more standard complaint.\nThe fix I proposed should not depend on specific version of C, but I may require some help in not breaking things (not much experience in c/portable here).\nBTW tidy may have some unrevealed requirement on C version? I could build last 5.4.0 release with -std=gnu89 but not -std=c89. @geoffmcl thanks for pointing out the direction. Using a (maybe optional) custom allocator seems a more complete fix. I'll see what I can do with it.\nRegarding the c version to use: if possible I would prefer to not break things, i.e. reduce inconsistency with c11, while keep existing versions work (do we have a known-to-work list on this?).. Thanks @geoffmcl . I'm working on a PR about replace ad-hoc (direct or indirect) malloc/frees to TidyAlloc/TidyFree. At least it should settle the initial problem of this issue.\nAs of the uint: I too don't get the intent of existing platform-specific includes: what is the \"hack\", and why a common typedef unsigned int uint is not used. Guess we can leave that to another issue.. Oops, I misunderstood what tidySystemLocale really does. Its comment says result: The buffer to use to return the string. while in the code result passed in is ignored. Also I don't get the latter half: Returns NULL on failure. seems more likely to be part of @return.\nIf we consider the first half comment to be truth, not allocating memory here seems more consistent to me (tidy.c need to allocate it instead).. The change in #637 is based on my incorrect understanding, so personally a big +1 to make it better. I can think of a few issues around the current code:\n\ntidySystemLocale is somehow risky: The comment says without affecting the C locale while I believe it temporally affects. User should be concerned of this, esp. in server or multithreaded environment.\ninconsistencies of comment and actual code: the API is not using result passed in as the comment says.\n(now) caller is burdened to correctly TidyFree with global TidyAllocator.\n\nIf we are to preserve the existence of the API, I propose to mention the risk, and have the caller allocate memory (as comment implies). this diff shows a possible fix.. @balthisar Thanks for your thorough explanation (and patience), I missed some important bits in man setlocale and other locale related background \ud83d\ude13.. Thanks @geoffmcl , I wanted to ask about the public APIs. That answered my question perfectly \ud83d\udc4d .. ",
    "rffontenelle": "Looks like I messed a bit this PR. The localize/README.md says I should make a PR against \"master\" branch, but I seems I based my translation in the default branch \"next\". Which branch should I use?. Actually, I had it based in next thinking it was master and then I created this Pull Request against master. I changed the target branch to next, so it should be good to go. Any problems, please let me know. . I don't mind translating TEXT_GENERAL_INFO_PLEA back to English, but would it be possible to mark this string as not translatable? This would be safer and easier for both translation and maintenance of the translations.\n\nBy the way, I can't understand spoken Brazilian, but can somewhat understand Portuguese people when I run into them. How different is the written language? I can understand most of what you wrote... would this be appropriate to use as the Portuguese base language, too? Or is it really, really specific to Brazil?\n\nIndeed, the accent and slangs are very different between European Portuguese (pt) and Brazilian Portuguese (pt_BR), but the written language is not so different. It has its differences, like \"file\" in pt_br is \"arquivo\" and in pt is \"ficheiro\", but I understand their writing, so they should understand mine.\nBy the way, the Portuguese Language Orthographic Agreement of 1990, to which Portugal changed in 2008 and Brazil changed in 2009, made it easier for understading written Portuguese by lusophones of different countries.\nSo, I don't see as a problem using my translation as \"pt\" for now. When someone who speaks European Portuguese provide translation to pt, just move mine back to pt_br.  How does it sound?\nIf you decide to rename pt_br to pt, let me know and I'll wait before fixing TEXT_GENERAL_INFO_PLEA and fuzzy translations, if any.. Oh, sorry for misreading your previous comment. Consider it done.. ",
    "sharpaper": "\nTidy isn't a Javascript interpreter, so it won't do anything to minify that.\n\nI wasn't thinking of javascript, but about removing all unnecessary characters from a HTML file (eg. white spaces between tags, comments, etc.).. @geoffmcl It seems to work fine, thank you. I think it would be nice to have a single option -minify to group all these options in a single command. Something like -minify is the equivalent of -option1 + -option2 + -option3.. @balthisar yes I closed the issue because I could solve my problem, but then I reopened it because I thought -minify would be a nice addition.\nPersonally I don't think this should cause much trouble. I think you are already dealing with these types of inconsistency, such as if users specify --hide-comments yes --hide-comments no in sequence. How do you deal with this case? I assume the last one is the one that will be used. You could just use -minify as a short-hand for --option1 --option2 ..., and override any option depending if it's specified before or after. This is also the behavior of other *nix tools as well.. Alternatively, if you don't want to add an additional command line option, you could at least add a section in the manual to describe how to minify a file. Since \"minifying\" seems like a rather useful/common application, you could add a section like this:\nMINIFY\n    If you want to minify a file, use the options option1: yes, option2: no, etc...\n\nThis would be a pretty handy reference.. ",
    "usamec": "Agree with the stupid. Problem is that sometimes you hit this page (e.g. when doing some crawl of the web) and you want to parse it and do not get stuck on it. And every tool I have tried gets stuck on it. I can patch many of them to either stop working after some time passes, or when stack is too deep, or whatever, but it would be nice to have something, which works in linear time of webpage size without dirty hacks.. @geoffmcl it was part of the commoncrawl (which includes really crazy pages). Did not tried perl, since I do not use it, but thanks for the idea.. ",
    "bpj": "Sorry for not getting back.  Much happening IRL!\nIt seems --clean is adequate, but its documentation doesn't mention style tags.. ",
    "jonnybarnes": "Yes, I was referring to the second message.. ",
    "AntoniosHadji": "I edited tags.c and tags.h to include the <data> tag but it does not compile on my machine.  I would like to submit a PR if I can get it working.  \nthe changes I made to the code are just three lines.\n```\ndiff --git a/src/tags.c b/src/tags.c\n+#define VERS_ELEM_DATA       (xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|xxxx|HT50|XH50)\n\n{ TidyTag_DATA,        \"data\",         VERS_ELEM_DATA,        &TY_(W3CAttrsFor_DATA)[0],        (CM_INLINE),                   TY_(ParseInline),    NULL           },\n\ndiff --git a/src/tags.h b/src/tags.h\n+#define nodeIsDATA( node )       TagIsId( node, TidyTag_DATA )\n```\nWhen I compile, I'm getting these errors:\n[  8%] Building C object CMakeFiles/tidy-share.dir/src/tags.c.o\n/mnt/projects/oss-contrib/tidy-html5/src/tags.c:306:5: error: \u2018TidyTag_DATA\u2019 undeclared here (not in a function); did you mean \u2018TidyTag_META\u2019?\n   { TidyTag_DATA,        \"data\",         VERS_ELEM_DATA,        &TY_(W3CAttrsFor_DATA)[0],        (CM_INLINE),                   TY_(ParseInline),    NULL           },\n     ^~~~~~~~~~~~\n     TidyTag_META\nIn file included from /mnt/projects/oss-contrib/tidy-html5/src/config.h:35:0,\n                 from /mnt/projects/oss-contrib/tidy-html5/src/tidy-int.h:12,\n                 from /mnt/projects/oss-contrib/tidy-html5/src/tags.c:11:\n/mnt/projects/oss-contrib/tidy-html5/src/forward.h:23:29: error: \u2018prvTidyW3CAttrsFor_DATA\u2019 undeclared here (not in a function); did you mean \u2018prvTidyW3CAttrsFor_META\u2019?\n #define TY_(str) TYDYAPPEND(prvTidy,str)\n                             ^\n/mnt/projects/oss-contrib/tidy-html5/src/forward.h:22:31: note: in definition of macro \u2018TYDYAPPEND\u2019\n #define TYDYAPPEND(str1,str2) str1##str2\n                               ^~~~\n/mnt/projects/oss-contrib/tidy-html5/src/tags.c:306:66: note: in expansion of macro \u2018TY_\u2019\n   { TidyTag_DATA,        \"data\",         VERS_ELEM_DATA,        &TY_(W3CAttrsFor_DATA)[0],        (CM_INLINE),                   TY_(ParseInline),    NULL           },\n                                                                  ^~~\nCMakeFiles/tidy-share.dir/build.make:158: recipe for target 'CMakeFiles/tidy-share.dir/src/tags.c.o' failed\nmake[2]: *** [CMakeFiles/tidy-share.dir/src/tags.c.o] Error 1\nCMakeFiles/Makefile2:67: recipe for target 'CMakeFiles/tidy-share.dir/all' failed\nmake[1]: *** [CMakeFiles/tidy-share.dir/all] Error 2\nMakefile:151: recipe for target 'all' failed\nmake: *** [all] Error 2\nI can't figure out why I'm getting message \u2018TidyTag_DATA\u2019 undeclared here (not in function)\nit seems to be declared the same as the other tags in tags.h.  . Thank you, @geoffmcl Your comments were most helpful.  I have added  the tag and compiled successfully on ubuntu 18.04.  I have tested on an html page with data elements and received no warnings or errors.  I have created a pull request\nI realized that I need to look at the ATTRIBUTES.md as well as TAGS.md for the full picture of what was required.",
    "kennyhendrick": "thanks Jim....my finger has arthritis otherwise I'd write more (issue solved)\u00a0Visit our website at: http://springfield-repair.com\u00a02803 Troy Road in Springfield, Ohio(937) 718-3586\u00a0\u00a0\u00a017.11.2017, 11:00, \"Jim Derry\" notifications@github.com:@kennyhendrick, if there's a link that something is inserting into your HTML, where does that link lead to? You might want to take up the issue with them.\u2014You are receiving this because you were mentioned.Reply to this email directly, view it on GitHub, or mute the thread.\u00a0. ",
    "funkyfuture": "okay, i realised it was caused by flow control elements inside <p>, eg:\n```html\n<!DOCTYPE html>\n\n\nLorem ipsum...\n        \nfoo\n\n\n\n```\ncat test.xml | tidy 1> /dev/null yielding:\nline 8 column 9 - Warning: inserting implicit <p>\nline 8 column 9 - Warning: trimming empty <p>\nInfo: Document content looks like HTML5\nTidy found 2 warnings and 0 errors!\nso, the messages make sense, yet the first message could be clearer why it does so. shouldn't there also be a message regarding the implicit closing of the <p> element in line 4?. ",
    "yngwei": "@geoffmcl  This is the poc file.\npoc.zip\n. ",
    "carnil": "FTR, this issue has been assigned CVE-2017-17497.. ",
    "dechamps": "\nOn the other hand, that message is an \"informational message\" (--show-info no can hide them), and doesn't affect processing of the document.\n\nWell it does affect warnings at the very least, especially when you take #377 into account:\n$ tidy <<EOF\n<?xml version=\"1.0\" ?>\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\"><head><title></title></head><body>\n<table><tr><td></td></tr></table>\n</body></html>\nEOF\nline 9 column 1 - Warning: <table> lacks \"summary\" attribute\nInfo: Document content looks like XHTML 1.0 Transitional\nTidy found 1 warning and 0 errors!\nWhereas:\n$ tidy <<EOF\n<?xml version=\"1.0\" ?>\n<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\"><head>\n<meta charset=\"utf-8\" />\n<title></title>\n</head><body>\n<table><tr><td></td></tr></table>\n</body></html>\nEOF\nInfo: Document content looks like XHTML5\nNo warnings or errors were found.\n(As a matter of fact, I came across this bug while struggling with #377. It took me a while to figure out why the <meta charset=\"utf-8\" /> tag somehow had an effect on the <table> lacks \"summary\" attribute warning - this was a very confusing moment.). Thanks for the explanation. I think what would make the most sense is if tidy sees <!DOCTYPE html> (which is a dead giveaway that the document is either HTML5 or XHTML5), it should drop every bit except for HT50 and XH50. Presumably that should do the trick.. I think we're on the same page. \n\nScript, and style tags, and maybe some others, already tell tidy to not mess too much with the text content of these blocks... and the option --escape-cdata just does not apply to these blocks...\n\nAh, interesting. I only tested CDATA sections in <script> tags. I wasn't aware that --escape-cdata does work on some tags, just not that one. So I guess a more accurate bug summary is \"escape-cdata doesn't seem to work on <script> tags\", which is unfortunate, since that's precisely on that sort of tag that CDATA tends to get used and where that  --escape-cdata option would be most useful!\nIt's a bit unfortunate that tidy tries to not mess with the content of <script> tags in some aspects (like these --escape-cdata sections) but then actively messes with them in other aspects (see #660). It's weirdly inconsistent, and in the present case it means that --escape-cdata cannot be used to \"fix\" the problems introduced by #660.. ",
    "utrenkner": "I would like to confirm: This is a problem also for us. Last week, we switched an old website to the new(er) way of including Google Analytics, which is via Google's tag manager. This is part of the code to include in each web page:\n```\n\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());</p>\n<p>gtag('config', 'UA-12345678-1');\n\n`\nAnd all of the sudden, Google Analytics worked only intermittently. I then noticed that the code between<code>..</code>`` had been escaped with a CDATA section. And both, Chrome and Firefox, reported this is a JavaScript error. It took me quite some time to figure out which tool included this CDATA code: tidy-html5.\nI followed @dechamps suggestion to add -ashtml which effectively solved the problem for us. However, it would be great if tidy could get an option to not add this CDATA code in the first place.. ",
    "Begasus": "https://github.com/haikuports/haikuports/pull/1932. build output: https://pastebin.com/4Zu6tU7U. @geoffmcl thanks for the reply, will check later and report back :+1: . @geoffmcl for the unbalanced #endif it was ok to remove the whitespace in front of the first line, still need to investigate the other errors, thanks for the pointer!. @geoffmcl thanks!, will check with the latest commit :). @geoffmcl this issue can be closed as far for Haiku, no unbalanced #endif's now :+1: \nAnd works ok also for gcc5* here .. \nOnly error I run into now with gcc 2.95 is \n\n/sources/tidy-html5-7af9e1843b0ddcb96d235ee9a2f73eb6630f7227/src/tidylib.c:1138: parse error before `struct'\n/sources/tidy-html5-7af9e1843b0ddcb96d235ee9a2f73eb6630f7227/src/tidylib.c:1142: `sbuf' undeclared (first use in this function)\n\nBut maybe I could add a different issue for that one?. hmm .. maybe wait a bit to close this one ... haven't had any chance to fix the parse error ... . Not sure if it's related ... \n\n/sources/tidy-html5-7af9e1843b0ddcb96d235ee9a2f73eb6630f7227/src/language.c:44: invalid initializer. Putting the {} in worked it seems for the parse error, still stuck with the language.c error ... \nhttps://pastebin.com/7JeU6SmH. @geoffmcl \n\nThat usually indicates  and  have not been included... but they should be included through the chain #include \"tidy-int.h\" -> #include \"tidy.h\" -> #include \"tidyplatform.h... you need to check that they are indeed included... but they should be...\nThere is no: tidy.h nor tidyplatform.h in the source?\nStrike that, found it, but didn't change anything by adding the headers there .... Working with these changes ...\ntidy_git-5.7.0.patchset.txt\n. @geoffmcl I think we can say all is dealt with now, issue could be closed (unless someone else steps up) :+1: \nFor x86_gcc2 (gcc2 compiler)\n~/haikuports> pkg-config tidy --cflags\n  -I/packages/tidy_git-5.7.0-1/.self/develop/headers\n  ~/haikuports> pkg-config tidy --libs\n  -L/packages/tidy_git-5.7.0-1/.self/develop/lib -ltidy\n  ~/haikuports> tidy -v\n  HTML Tidy for Haiku version 5.7.0. For x86 (gcc5) (also working for x86_64, 64bit)\n~/haikuports> pkg-config-x86 tidy --cflags\n  -I/packages/tidy_git_x86-5.7.0-1/.self/develop/headers/x86\n  ~/haikuports> pkg-config-x86 tidy --libs\n  -L/packages/tidy_git_x86-5.7.0-1/.self/develop/lib/x86 -ltidy\n  ~/haikuports> tidy -v\n  HTML Tidy for Haiku version 5.7.0. @geoffmcl Thanks for all the help (and they guys @haiku for their help) to get this fixed! :)\nHappy Hollidays!. @geoffmcl  Thanks for adding this! Builds without patching now! :+1: \nhttps://pastebin.com/hUVwPms6. From one of the developers on Haiku's side: https://github.com/haikuports/haikuports/pull/1932#issuecomment-353850203\nMaybe you can look at it and make sure the patch doesn't break anything for tidy .... xsltproc wasn't included in the recipe yet, it is now and man page is installed, thanks! If there are no problems on your side this one can be closed, thanks for taking the time to investigate into this, really appreciated! :+1: . Per request ;)\nhttps://pastebin.com/zLf5yx3E. ",
    "dconnet": "Ah, Missed that since I didn't look at the pull request queue.... ",
    "jgmanning": "Hi @geoffmcl - I tested tidy-5.6.0-vc14-mt-32b (tidy.exe) on the server and it worked.\nTesting tidy-5.6.0-vc14-32b.zip in the same environment gives the error \"The application was unable to start correctly (0xc000003b)\" so your update definitely resolved this error.\nAs for where to put this dependency information... the first place I checked was the release notes, so maybe at the top of that document would work? Otherwise, any document that mentions \"installation\", \"readme\", \"installation\" or the like should grab people's attention.\nThanks!. ",
    "TysonAndre": "Oh. The PR I linked in tidy-html5's source wasn't even merged yet, as you said.\n\nhttp://windows.php.net/download contains zip files for windows downloads.  Unfortunately, windows PHP builds bundle their own libtidy with the tidy DLLs, so that won't help you reproduce it.. You'd have to build tidy from source\nBuilding packages from source in windows is difficult. It may be significantly easier to perform the installation steps in a Linux VM (e.g. via VirtualBox)\nResources:\n\nhttps://wiki.php.net/internals/windows/stepbystepbuild\nhttp://www.phpinternalsbook.com/php7/build_system/building_php.html#building-php (For linux)\n\n\nExecuting configure --help should now contain an option to enable tidy. That would be --with-tidy=/path/to/tidy-html5 (Or \"C:\\path\\to\\tidy-html5\" on windows? Not that familiar with batch scripting)\n\n\nAlso, I looked at the git history of https://github.com/php/php-src/tree/PHP-7.1/ext/tidy for the PHP 7.1 releases. I don't see any code changes to the tidy extension since much earlier than Jan 1, 2017\n```\n~/path/to/php-src \u00b1PHP-7.1 \u00bb git log -p ext/tidy\ncommit 83a77383b92d8b1b1a5c141c10e9342aa64b1d92\nAuthor: Anatol Belski ab@php.net\nDate:   Thu Jan 11 14:28:09 2018 +0100\nFix test for libtidy 5.6.0\n\nlibtidy 5.6.0 remove the language option from the library, it is only\nsupported on cli. Prior to that, this option was not used in the\nlibrary. Thus, exclude the option presence from test.\n\ndiff --git a/ext/tidy/tests/030.phpt b/ext/tidy/tests/030.phpt\nindex c351f9a..46809a9 100644\n--- a/ext/tidy/tests/030.phpt\n+++ b/ext/tidy/tests/030.phpt\n@@ -12,18 +12,15 @@ $buffer = '';\n $config = array(\n   'indent' => true, // AutoBool\n   'indent-attributes' => true, // Boolean\n-  'indent-spaces' => 3, // Integer\n-  'language' => 'de'); // String\n+  'indent-spaces' => 3); // Integer\n $tidy = new tidy();\n $tidy->parseString($buffer, $config);\n $c = $tidy->getConfig();\n var_dump($c['indent']);\n var_dump($c['indent-attributes']);\n var_dump($c['indent-spaces']);\n-var_dump($c['language']);\n ?>\n --EXPECTF--\n int(1)\n bool(true)\n int(3)\n-%s(2) \"de\"\ncommit ccd4716ec77c60391d63a1a6af72f96a09b1c617\nAuthor: Xinchen Hui laruence@gmail.com\nDate:   Tue Jan 2 12:53:31 2018 +0800\nyear++\n\ndiff --git a/ext/tidy/php_tidy.h b/ext/tidy/php_tidy.h\nindex 26a9d41..0b30a21 100644\n--- a/ext/tidy/php_tidy.h\n+++ b/ext/tidy/php_tidy.h\n@@ -2,7 +2,7 @@\n   +----------------------------------------------------------------------+\n   | PHP Version 7                                                        |\n   +----------------------------------------------------------------------+\n-  | Copyright (c) 1997-2017 The PHP Group                                |\n+  | Copyright (c) 1997-2018 The PHP Group                                |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 3.01 of the PHP license,      |\n   | that is bundled with this package in the file LICENSE, and is        |\ndiff --git a/ext/tidy/tidy.c b/ext/tidy/tidy.c\nindex f764b98..c6d6b80 100644\n--- a/ext/tidy/tidy.c\n+++ b/ext/tidy/tidy.c\n@@ -2,7 +2,7 @@\n   +----------------------------------------------------------------------+\n   | PHP Version 7                                                        |\n   +----------------------------------------------------------------------+\n-  | Copyright (c) 1997-2017 The PHP Group                                |\n+  | Copyright (c) 1997-2018 The PHP Group                                |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 3.01 of the PHP license,      |\n   | that is bundled with this package in the file LICENSE, and is        |\ncommit dac6c639bb54e93fb24b82d25f74daaa12763512\nAuthor: Sammy Kaye Powers sammyk@sammykmedia.com\nDate:   Wed Jan 4 11:23:42 2017 -0600\nUpdate copyright headers to 2017\n\n``. I'm not able to reproduce it via the CLI, when checking out the 5.6.0 release tag, ornext`, or so on.\nSo I'm guessing it's a bug caused when tidy is used as a library in a certain way:\n(The below snippet behaves as expected)\n```bash\n~/programming/tidy-html5 \u00b13a30f6a\u26a1 \u00bb ./tidy --add-xml-space yes --show-body-only yes --wrap 1\nthis is a string\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\n\nthis\nis\na\nstring\n\u00bb echo 'this is a string' | ./tidy --add-xml-space yes --show-body-only yes --wrap 0 --char-encoding utf8\nInfo: Document content looks like HTML5\nNo warnings or errors were found.\nthis is a string\n```. Commit 86e62dbb709b306ec41dc88fd55decfe6893f262 seems like it may be related? It removed multiple calls to AdjustConfig. php-src/ext/tidy/tidy.c might have been relying on AdjustConfig being called automatically?\nThe part that stands out is that the call to AdjustConfig converts wrap=0 to wrap=0x7fffffff, which is the same as how I manually worked around my issue:\nhttps://github.com/htacg/tidy-html5/blob/release/5.6/src/config.c#L1201-L1203\nAlso, in case you wanted to see what php-src is doing: It seems normal. There's no workarounds whatsoever based on option name (and tidy's declarations of option config data types haven't changed between 5.4 and 5.6 for the wrap config), and php-src's tidy extension isn't adding any options automatically\nhttps://github.com/php/php-src/blob/PHP-7.1.14/ext/tidy/tidy.c#L499-L559 (This is run in a loop over the provided $options). \nsaveBuffer looks like it gets called twice. Because it's getting called twice, it's getting the unusual wrapping. This affects 5.6.0 but not 5.4.0\nDetails: The implementation of $tidy->parseString() afterwards calls saveToBuffer(), to set the (undocumented) object property $tidy->value \nhttps://github.com/php/php-src/blob/PHP-7.1.14/ext/tidy/tidy.c#L1035 calls https://github.com/php/php-src/blob/PHP-7.1.14/ext/tidy/tidy.c#L820 \n\nI filed https://bugs.php.net/bug.php?id=75947 to document/deprecate the property Tidy->value (They document errorBuffer but not value at https://secure.php.net/manual/en/class.tidy.php )\n\nhttps://github.com/php/php-src/blob/PHP-7.1.14/ext/tidy/tidy.c#L764-L765 is what happens for (string)$tidy). That would be the second time PHP calls saveToBuffer on the same instance. The second time saveToBuffer is called, it has incorrect wrapping.\nphp\n\u00bb cat test.php \n<?php\n$x = new Tidy();\n$x->parseString('<p>this is a string</p>', ['add-xml-space' => true, 'show-body-only' => true, 'wrap' => 0], 'utf8');\nvar_export($x->value);\necho \"\\n\";\necho (string)$x;\n\u00bb ~/php-7.1.14-tidy-nts-install/bin/php test.php \n'<p>this is a string</p>\n'\n<p>\nthis\nis\na\nstring</p>. And if you plan to test this out in a Linux VM, see https://gist.github.com/TysonAndre/b7be05ab3e10f668b49afdde4a83764e for how I built ~/php-7.1.14-tidy-nts-install . Also, what's your output of echo (new Tidy())->getRelease();? I expect it to say 2017/11/25 if set up properly. (That's what mine says when built from source and pointing to tidy-html5-5.6.0\nThere was no tidy.dll in the zip file distributed by windows.php.net. So I don't expect placing one anywhere to have an effect. (But not that familiar with their setup)\n\u00bb find . -iname '*tidy*'\n./ext/php_tidy.dll. Strange. I was able to reproduce with 3a30f6a4300417674026f6dddea5973debc6b808 (master) cmake ../../; make clean install, then --with-tidy=shared,/path/to/install (Did you have any extra cmake options? Is anything platform dependent?)\nI'm still see hello & bye with 2018/01/01 next. (I checked tidy_get_version())\n\n\nBut that seems the opposite of what you are seeing in the PHP binding 7.1.14 (Tidy 5.6). It is outputting just hello & bye, which from the above seems correct, but you seem to want it to be like 7.1.9 (Tidy 5.4)...\n\nYes. For example, the below script would be rejected by PHP's libxml parsing (If you come across any options to accept unambiguous ampersands, they'd be useful to me)\n\nCould you refer me to the XML spec allowing & followed by space/< characters? My impression was that XHTML5 was HTML5 serialized as valid XML, and a quick google search just revealed stack overflow results without specification links\n\n```\n<?php\n// Related to https://github.com/htacg/tidy-html5/issues/526 ?\n// Using the same as before, but additionally with 'show-body-only' => true,\n// I get '&' instead of '&'\n$fragment_from_tidy = 'hello & bye';\n// This ensures that we log directly instead of through PHP notices\n$oldUseErrors = libxml_use_internal_errors(true);\ntry {\n    $root = new DomDocument();\n    $success = $root->loadXML(\"$fragment_from_tidy\");\n    $xmlErrors = libxml_get_errors();\n    if (count($xmlErrors) > 0) {\n        printf(\"Saw xml errors: %s\\n\", json_encode($xmlErrors));\n    }\n    printf(\"Was successful: %s\\n\", json_encode($success));\n} finally {\n    libxml_clear_errors();\n    libxml_use_internal_errors($oldUseErrors);\n}\n/*\nActual output with PHP's libxml due to the fragment received from tidy in my build:\nIt doesn't accept tidy-html5's \"unambiguous ampersand\" and expects there to always be a name.\nSaw xml errors: [{\"level\":3,\"code\":68,\"column\":14,\"message\":\"xmlParseEntityRef: no name\\n\",\"file\":\"\",\"line\":1}]\nWas successful: false\n*/\n```\n\n\nbut passing the above file to the W3C validator will not flag any warning or errors.\n\nThe default setting for the W3C validator is HTML. Did you select XML fragments?\n\n\nEDIT: I see \"in some contexts\". Is it possible to add a flag to force escaping as &amp; because php's libxml doesn't accept that. > first you show the tidy build as cmake ../../; make clean install???\nSorry. I left out the install prefix assuming it was implied. To be clear, I used an install prefix in all commands. I also checked the tidy version, and I'm also confused about that.\nThere may be something I missed.\nThe linked spec appears to be for html5, and has limited references to XHTML. In any case, the library I'm using works with html fragments.\n\nWhen/If tidy is fixed to not escape & in xhtml5, a new option to add the escape\n\nI would support a new option to do that.\n. ",
    "zneak": "You're right, there is missing information here. If people frequently forget the version, you could use a GitHub issue template.\n$ tidy --version\nHTML Tidy for Apple macOS version 5.6.0\nI incorrectly assessed the issue, as well. I'm trying to clean up documents generated by the (almost certainly ancient) xsltproc distribution for macOS. The XSLT markup looks like this:\nxml\n<a>\n    <xsl:attribute name=\"href\">\n        ./\n        <xsl:for-each select=\"../x86:mnemonic\">\n            <xsl:value-of select=\"@name\"/>\n            <xsl:if test=\"position() != last()\">:</xsl:if>\n        </xsl:for-each>\n        .html\n    </xsl:attribute>\n    <xsl:value-of select=\"@name\"/>\n</a>\nI get links that look like that:\nhtml\n<html>\n<head>\n <title>Foo</title>\n</head>\n<body>\n<a href=\"\n    ./\n    AAA\n    .html\n\">AAA</a>\n</body>\n</html>\nSafari and Firefox (and Chrome, I'm told) all render that as ./AAA.html. Tidy renders it as \"./%20AAA%20.html\", correctly stripping out the whitespace before, and normalizes the whitespace in the middle.\nWith this out, I'm not sure about the part of the spec that governs parsing URLs, unfortunately. It would still be somewhat surprising that all three implemented the same non-standard URL parsing quirk.. ",
    "i-give-up": "Yes, encountered the same \"no file\" error in Windows 8.1 when the html file was opened in gVim (which I suppose locks the file from being written by another program).\nI have no idea about the code but yes it shouldn't fail if the file is read-only. . I see 3 possible solutions\n\nupdate the documentation to say you have to use --force-output yes in combination with --strict-tags-attributes yes --drop-proprietary-attributes yes to get output. This is non-ideal because it generates output regardless of all errors and not just invalid attributes. \nif both --strict-tags-attributes and --drop-proprietary-attributes are used, then generate output without needing --force-output yes. In other words, downgrade --strict-tags-attributes to warning when used in this combination. No changes needed in documentation.\na new option (e.g drop-invalid-attributes as you suggested) which would remove both proprietary and obsolete/invalid (for the HTML version) attributes and output a message when such attributes are removed. The documentation would have to be updated to include this new option and to correct the part about using both --strict-tags-attributes and --drop-proprietary-attributes. I like this solution best because unlike solution 2 it doesn't involve a reinterpretation of the word \"proprietary\" to include obsolete/invalid attributes.\n\nI'm not familiar with HTML validation though so there are probably certain things I failed to consider.. ",
    "codeniko": "Hi @geoffmcl, thanks for getting back to me. I apologize if I wasn't clear in the beginning. I'll give this another shot.\nquote\nGiven that the purpose of tidy is to tidy, and where it can fix a document, there\nis no option to sort of prevent that from happening...\nThe word tidy is ambiguous in its current context. Given how featureful tidy is, I'm sure you're aware that there are many ways to tidy up HTML. I know you know this given the plethora of options that tidy already has. I'm only interested in a subset of those features to \"tidy\" up my files. That said, it may be useful to have one more cli option.\nThis is a feature request. My use case is simple and fairly common, I'm sure of it. I would like to use tidy only to tidy up formatting (proper nesting indentation, trimming excess whitespace, etc..), but not to fix errors (however listing the errors like a linter is still useful). Right now, fixing of errors is baked into tidy, and I cannot do one without the other. I would especially want to disable such a feature if it's not adequately fixing the issue, like in the output I mentioned earlier.\nMy request is to have an cli option to allow me to disable tidy from fixing html errors, but not necessarily to disable notifying that these warnings/errors exist.\nHere is some insight to what I'm doing. I made a build shell script doing the following steps:\n1) Generate HTML files with Jekyll\n2) Minify generated CSS and JS files\n3) Run generated HTML files through tidy, with the intent to just fix formatting \n4) Deploy all files and assets to firebase.\nAs you see, the pipeline is automated and I cannot risk using a tool I don't have confidence in that it won't break my code. . ",
    "ogolovanov": "Also, question please.\nWhy there is no \".deb\" package for tidy 5.6.0?\nThanks.. Heh, thank you.\nI was not expecting that problem because everything is ok with tidy 5.4.x, but not with 5.6.x+.\nDo i need to set any other config options for bad formatted input html?\n. ",
    "JESii": "I think general support for handling templating tags {{handlebars-tags for me}} would make this even more useful/valuable.  As @geoffmcl points out, you already support some templating tags <#such as erb> so why not the others? To my mind, it's no longer a philosophical issue, but an implementation issue. And thanks for for bringing this back to life!. Well... I've never seen it converted to &amp; in the href attribute;  in fact the wikipedia entry on query strings indicates that either '&' or ';' (as mentioned by @mc0e above) is allowed. I'm not worried about viewing the ampersand; I want it to just be the delimiter for and the next key/value pair. it may view better, but from a programming perspective, it makes it harder to see what's going on -- the ';' is easy to miss (I've made that mistake before :=). OK... got it. thanks!. ",
    "TELunus": "Thanks @geoffmcl for your help.  I have managed to write a program using it.\nI don't think I pointed out what you're saying I pointed out.  Particularly I hadn't found any universal information about return values, only information specific to the parsing functions.  The information I pointed to also said nothing about severe errors or negative numbers.\nPerhaps, since that documentation does exist elsewhere, saying that it's useless is a little strong.  But saying merely that it returns \"An integer representing the status\", and forcing you to dig for the documentation about the status convention, still seems less than excellent.  It would be much more helpful to mention in that location what the values mean.  Doing so would also increase consistency in the documentation, since the parsing documentation already says what the values (for the parsing functions) mean.\nI can imagine that there would be an argument that the extra length or redundancy of information is undesirable, but if that's the case it doesn't make sense that the documentation for the parse functions has that information.\nIn the end I still maintain that there is an issue in the documentation that should be resolved.\nI hope that helps you understand what my issue is.  If not, feel free to ask more questions.. I should also point out that although this issue has the label \"Technical support\", what I'm saying is not \"I can't figure out how to do this\", but instead \"The documentation provided does not clearly tell developers how to do this\".. @geoffmcl what you've got there looks to me like it would be good.  Alternately perhaps something like this could be put in the diagnostics and repair section: \n\nReturns\nReturns the highest of 2 indicating that errors were present in the document, \n1 indicating warnings, and 0 in the case of everything being okay, or a negative\nnumber for a severe error (often taken from errno.h)\n\nI would be happy with either of those.. @geoffmcl I think like you I'm also not very sure which of those two options to take.  It sounds like you lean a little toward option 2:\n\nChanging one to be the full message, adding that full integer status message at the top of 3 sections, and changing 15 to the above See top. short message kept tidy.h at about the same 100KB... 102,592 bytes\n\nI think I also lean a little toward that option.  Should we wait for some more input, or should one of us get started making those changes?. ",
    "ler762": "Maybe this is another old issue that could be resolved by adding an EXAMPLES section to the man page?\n$ tidy -q -e bad.html 2>&1 | sort -n -k 2,2 -k 4,4\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nline 7 column 1 - Warning: <a> proprietary attribute \"hrex\"\nline 8 column 1 - Warning: missing </a>\nline 8 column 25 - Warning: discarding unexpected </b>\n\nThree minutes thought would suffice to find this out;\nbut thought is irksome and three minutes is a long time.\n -- A. E. Housman. issue-697-1 branch looks good\n\nI did a quick check & haven't seen any cases where it breaks pre formatting.\nThe bug seems to be solved, so I guess this is a feature request\nwhen indenting, if the <pre> block of text is going to take more than one line, have the tag on one line and the text starting on the next line.\nhttps://www.w3.org/TR/html/grouping-content.html#the-pre-element\nNOTE:\nIn the HTML syntax, a leading newline character immediately following the pre element start tag is stripped. \nso\n <pre>line 1\nline 2</pre>\nis equivalent to\n<pre>\nline 1\nline 2</pre>\nbut much more readable (which is why I'm using indent + wrap)\nIn any case - thanks for fixing this!. @geoffmcl it would be nice if --mute also muted the explanation\nfor example: --mute MISSING_ATTRIBUTE\nwould also suppress the\n  The table summary attribute should be used to describe\nparagraph at the end.\n$ tidy -indent --tidy-mark no --mute MISSING_ATTRIBUTE tidy-stc.html\nConfig: messages of type \"MISSING_ATTRIBUTE\" will not be output\nInfo: Doctype given is \"-//W3C//DTD HTML 4.01 Transitional//EN\"\nInfo: Document content looks like HTML 4.01 Strict\nTidy found 1 warning and 0 errors!\nThe table summary attribute should be used to describe\nthe table structure. It is very helpful for people using\nnon-visual browsers. The scope and headers attributes for\ntable cells are useful for specifying which headers apply\nto each table cell, enabling non-visual browsers to provide\na meaningful context for each cell.\nFor further advice on how to make your pages accessible\n  <.. snip ..>\n. @geoffmcl W3C reference\nhttps://www.w3.org/TR/2014/NOTE-html5-diff-20141209/#obsolete-attributes\n  Some attributes from HTML4 are no longer allowed in HTML.\nor up a level for new/changed/obsolete:\nhttps://www.w3.org/TR/2014/NOTE-html5-diff-20141209/#language\n  This section is split up in several subsections to more clearly illustrate the various differences from HTML4.\n. yes, it would be nice if the ending\nTidy found NNN warnings and NNN errors!\nwas changed to\nTidy found NNN warnings and NNN errors in file FILENAME\nand the -q option was changed to always spit out the warnings & errors summary line\nbut until tidy is changed, a work-around is\nfor FNAME in `find . -name \"*.html\"` ; do\n    echo \" ---- begin processing $FNAME\" >&2\n    tidy -q -e $FNAME\ndone\n. Since this is an old topic, how about treating it as a documentation issue?\n (altho I'm also in favor of making --show-filename a synonym of --gnu-emacs yes :)\nso the man page changes from:\n--gnu-emacs Boolean (no if unset)\n       This option specifies if Tidy should change the format for reporting errors and\n       warnings to a format that is more easily parsed by GNU Emacs.\nto something along the lines of:\n--show-filename, --gnu-emacs Boolean (no if unset)\n       This option specifies if Tidy should change the format for reporting errors and\n       warnings from\n         line <line number> column <column number> - (Error|Warning): <message>\n       to\n         <filename>:<line number>:<column number>: (Error|Warning): <message>\n\nGiven that there is ... and various ways to script this\n\nHave you considered adding an EXAMPLES section to the man page showing some of the various ways to script things?\n. @geoffmcl I can work on creating a PR\nI'll work on adding --show-filename as a synonym for --gnu-emacs yes, but in the mean time, how's this for the language_en.h man page change:\n```\n--gnu-emacs Boolean (no if unset)\n       This option specifies that Tidy should change the format for reporting errors and\n       warnings to a format that is more easily parsed by GNU Emacs or some other\n       program. It changes them from the default\n    line <lineNumber> column <columnNumber> - (Error|Warning): <message>\n\n   to a form which includes the input filename:\n\n    <filename>:<lineNumber>:<columnNumber>: (Error|Warning): <message>\n\n```\nlocalize/README.md seems to assume that you know what you're doing. I don't.  Is there any other documentation for what all needs to be done after changing the documentation in the code\nand how to build the various docs, web pages, localized *.po files, etc?\n. @balthisar changing the option name would be extremely user-hostile.  How about --show-filename does exactly what it says; shows the filename with the standard error/warning message.  Which maybe would be a bit nicer?  and gets away from having two options that do the same thing.\n@geoffmcl I'll go back to <line number> and <column number>.  I don't feel all that strongly about it, but I think documentation should be as clear as possible & line number seems to leave less room for misunderstanding that just line.  \n. I'm a very slow writer, so while I'm working on a reply I'll just just put this out for review\nhttps://github.com/htacg/tidy-html5/pull/715. @balthisar  thanks for the instructions on how to add the cross references\n@geoffmcl  it didn't take me long at all to get to the 'blow everything away and start over' stage :)\nBut on the plus side, now I know to make a separate branch for each change.\n\nThis makes my tidy.c patch in the issue-713 branch entirely redundant... or does it?\n\nNo - I see it as a progress indicator.  If you're running tidy on a lot of files that are mostly correct, I can see how it'd be nice to have each filename listed so you know the process isn't hung.\n\nAnd a mention in the documentation of slightly different options - one where gnu-emacs would win if both specified under the current coding... \n\nI like the See also: ... idea, but I'm not so sure about getting down to the level of documenting which one wins if both are specified.  Both options change the output format, so specifying both options seems wrong.  (but not wrong enough to check for it & warn/die if found)\n. yeah, now I see why I should have made a branch for each change.  If someone really wants two separate patches I can redo it. hopefully the last change for this PR. > Then as you no doubt realise, everything you push to that branch will be combined together in the single PR by github, so it is important to have multiple branches for multiple issues...\nAt this point, it would be a mistake to assume I realize anything about git.  I DID have multiple branches after starting all over again:\n$ git branch\n* doc-nits\n  doc_gnu-emacs\n  next\n  show-filename\nand I did do three separate git push -u origin ... calls.  I thought I was just pushing the typo fix to htacg/tidy-html5 but somehow all three got lumped together.  sigh\nWhich is a long way of saying that if you think PR #715 should be closed it'd be best if you did it and I'll try to figure out how I ended up with\nBranch: doc_gnu-emacs\nThis branch is 1 commit ahead of htacg:next.\nBranch: show-filename\nThis branch is 2 commits ahead of htacg:next. \nBranch: doc-nits\nThis branch is 3 commits ahead of htacg:next.\ninstead of each branch being 1 commit ahead of htacg:next\n\nWhy not start with what I wrote in #713 ...\n\nI'm wondering about step 2\nWhat does ssh get you?  I couldn't get it to work.  dunno if it was because I started off with\ngit clone https://github.com/ler762/tidy-html5.git\nor what, but I finally gave up & left everything using https\n\n\nClone your own fork ...\n\n\nwouldn't it be\n$ git clone git@github.com:<name>/tidy-html5.git tidy-fork\n\n... if appropriate run regression tests.\n\nwhich would mean cloning https://github.com/htacg/tidy-html5-tests and then doing\n$ cd tidy-html5-tests/tools-sh\n$ ./testall.sh ../../tidy-html5/build/cmake/tidy\n$ diff -q ../cases/testbase-expects/ ../cases/testbase-results\nright?\n. @geoffmcl better, but I liked your emailed instructions more.  How about this for the Using Git appropriately section\nUsing Git appropriately\n\nFork tidy to your own github account. Use top right Fork icon at https://github.com/htacg/tidy-html5/\n\nClone your own fork\n\n\nusing ssh\n  Generate a SSH Key, and add it to your SSH and GPG keys (https://github.com/settings/keys)\n  Note that if you generate the ssh key without a passphrase, operations like git push can be done without a password.  Then do\n cd <some_root>   # into some root directory\ngit clone git@github.com:<name>/tidy-html5.git\n\n\nusing https\n cd <some_root>   # into some root directory\ngit clone https://github.com/<name>/tidy-html5.git\n\nSet your user name and email address\nIf you want to keep your email address private, go to https://github.com/settings/emails to find your GitHub provided no-reply email address and use that when setting your email address.\n cd tidy-html5\ngit config user.name  <name>\ngit config user.email <email address>\nCreate a branch\n git checkout -b <branch-name>\nEdit, and commit your changes to this branch of your fork.\nPlease note: if you want to change multiple things that don't depend on each other, use different branches, and make sure you\ngit checkout next\nbefore making another branch.  That way we can take in each change separately, otherwise Github will combine all your branch commits into one PR.\nBuild tidy (see BUILD.md)\n cd build/cmake\ncmake ../.. -DCMAKE_BUILD_TYPE=Debug\nmake\nTest your changes, and if you made any code changes, run the regression tests.  Very briefly, to run the regression tests\n cd <some_root>  # the same root directory that was used for tidy\ngit clone git@github.com:htacg/tidy-html5-tests.git\ncd tidy-html5-tests/tools-sh\n./testall.sh ../../tidy-html5/build/cmake/tidy\ndiff -u ../cases/testbase-expects ../cases/testbase-results\nPush your local changes to your github account.\n git push -u origin <branch-name>\nCreate a PR (Pull Request), here.\nWatch for comments, acceptance.\n\n\n\naltho should\n 5. Edit, and commit your changes to this branch of your fork.\nbe just\n 5. Edit the file(s) in this branch of your fork.\nand then after all the testing\n8. Commit your changes in this branch of your fork.\n git commit -a\n9. Push your local changes\n--etc--\n. > Item 2. Clone you own fork. As you now no doubt know by now git clone git@github.com:/tidy-html5.git will clone into the tidy-html5 directory. And will refuse to do anything if a tidy-html5 non empty directory already exists...\n\nThat is why I had added the tidy-fork directory at the end, sort of assuming they would have already cloned this repo, and need to use another directory name...\n\nWho's the target audience for CONTRIBUTING.md?\nGo back and look at the instructions you gave me via email.  As a total newbie, this is the \nlevel of detail I was hoping to get.  Remember.. I didn't even have a github account, so my background knowledge for using git & github was about zero.\nOn the other hand, showing how to clone something into a non-default directory and explaining why one might want to do that would be nice.  But I'd add it after the numbered list and keep the basic instructions/overview at the cargo-cult level.\n\nAnd when I was just a contributor to tidy, my MO was to have both. In the tidy-html5, where I never made any changes, I could do a git pull, and its results would sort of warn me that maybe I need to rebase my tidy-fork, and catch up with any upstream changes...\n\n:)  I have two separate root directories: git/tidy and git/mytidy which doesn't have\n\n... the slight disadvantage that some of the scripts in say the regression tests default to ../../tidy-html5/build/cmake/tidy.\nBut as I later learned, I should never rely on such defaults\n\nYou maybe, but someone who needs to read CONTRIBUTING.md?  I'd argue that as long as they're in the hand-holding stage it's best if they stay with the defaults.\n\nItem 3. Set your user name and email address. Yes, maybe we should treat the user as a complete newbie, ab initio user, and no problem with this, but we should be careful how deep tidy should go into git teaching...\n\nCan you do a push before setting your user name & email address?  If no, this is required info\n\nBut you seemed to have missed the --global switch.\n\nnope.  If they set it locally they're not going to mess anything else up.  I'm not sure you can say that if the instructions are to use the --global switch.\n\nItem 5. Edit, and commit - You later suggest maybe we should separate the edit from the commit,\n ...\nUntil you have done 8. git push ..., local commits can be easily undone, changed, or deleted, as you will learn.\n\nuhmmm.. the point being that I haven't learned yet, so none of this is easy.  But if you think commit early; commit often is the way to go then keep the instructions the way they are :)\n\nItem 7. Test ... run the regression tests.\n\nIt'd be nice to have a windows and *nix section for how to run the tests, but I don't know what should go in the windows section :(\n\nwe need to fix the whole document... any ideas on that welcome...\n\nStart with who you're writing for.  If you want to make it easy for newbies to contribute, I'd suggest keeping it at the cargo-cult level in the beginning of the doc.\naside- that's why I didn't put a dollar sign in front of command examples.  You can't copy/paste this bit:\n$ git clone git@github.com:htacg/tidy-html5-tests.git\n$ cd tidy-html5-tests/tools-sh\n$ ./testall.sh ../../tidy-fork/build/cmake/tidy\n$ diff -u ../cases/testbase-expects ../cases/testbase-results\nIf you leave the dollar signs off you can.\nSo.. how do you want to structure the doc?  Really basic copy/paste info at the beginning, with the intermediate/advanced info further down or ???\n. test - can I use email or do I have to log into github?\n. > @ler762 yes, who is the target audience is an important question... the\n\nsimple answer is anybody who want to contribute to tidy\ndevelopment...\n\nright :)  but who do you think will actually read it?\nHow often do you look at README files?  How often after the first time\nw/ that particular project or piece of software?\nI'm guessing the only people that will read the how 2 contribute file\nare ones that have never contributed before & those that have\ncontributed to other projects hosted on github will only skim it to\nmake sure you're not asking for anything out of the ordinary.\n\nYou, with no github account, no previous forks, are quite an\nunusual case.\n\nand why do you think that is?\nI know github is where the cool kids hang out, but still... doesn't it\nseem just a bit strange that I'm the first person with no github\nexperience that contributes a patch?\nAt least for me, there's a huge learning curve w/ git, and if you\nwant contributions from people that don't already know git then you\nneed to give them some really basic instructions to get started.\n\nEven as I started to adopt some of your ideas to build a new file, I thought\nof leaving something like the original, brief, succinct list with say a\nsub-title like say In brief:, and then follow with your In detail: much\nexpanded list, with multiple sub-levels, fuller explanations...\nSo that agrees with the idea for the document structure - start with the\nbasics, and if the person needs more information they should read on down to\nthe intermediate, even advanced...\nBy basic that means offering sound guidance, like adding the target\n[directory] on a forked clone, since as stated would assume they have\nalready cloned, and built, tidy-html5...\n\nfor whatever it's worth, I started from http://www.html-tidy.org/,\nfollowed the link to the latest official release & downloaded the\ntarball.\n\nand suggest you fix/rename your 2 roots solution...\n\nWhy?  Your way has a problem with at least the test suite, mine doesn't.\n\nConcerning adding the git config ..., IIRC git offers that help... insists\neven... and still think it should be --global... local just puts off the\npain until later...\n\nWhat pain?  The only reason I can think of for using the same email\naddress for everything git is to collect bonus points on github for\ncontributing.\n\nDo not quite understand your copy/paste problem with the $ shown... so\nagain think this should stay as is... It is quite common to see, even for\nwindows users...\n\nYes, it is very common, and it does make it real clear that it's\ncommand line input.\nOn the other hand, you can't copy from the example and paste into a\ncommand line window; it's copy from the example, paste into notepad,\nremove all the leading dollar signs, A C to copy\neverything in notepad, V paste into the command line window.  Or\ncopy/paste line by line, leaving out the initial $ when copying..\n\nAnd do not think we should add the windows regression test stuff... we\nshould just point them to RUNTESTS.md... and improve that, and the\ntools there...\nHow to actually do the regression tests seems quite outside this file, and\nits purpose - an introduction to contributing... but for sure it should\nbe mentioned...\n\nI was thinking that if you showed how easy it was it might improve the\nchances of a newbie actually going to the bother of downloading the\ntest suite & running it..\n\nSo now I have talked myself out of your full expansion of the list\n;=))\n\nNo problem :)\n\nI am quite happy with the current improvement, and would thank you for\npushing for this, and some of your suggestions...\n\nhttps://github.com/htacg/tidy-html5/pull/727\nbased on your CONTRIBUTING.md.2.txt\n. > Have merged part of your #727 - Thanks... Still disagree with some other changes...\nNo problem.  Take what you like & leave the rest :)\n\nOT: Note you have moved to use email replies.\n\nyeah.  After getting snarky about github I tried to think of why moving to github would be A Good Thing, which got me thinking about Remedy <.. snip derogatory remedy rant ..>  I'm back to being willing to login to github to make a comment even if replying to mail is easier.\nOn a somewhat related note: how do you test markdown in readme files?\n. If you're waiting for a +1, here's mine\nI'd like to have a new release, but dunno what I could do to help out.. @geoffmcl I hope it's something good in your life that's leaving you no time for tidy.\nI'm still very uncomfortable with git; I can help with documentation and testing but I'd probably cause more problems than progress trying to help with anything git related.\n. @geoffmcl if it's this weekend, does that answer your earlier\n\nDecision on PR's to include\nwith 'with whatever is currently in branch next'?\n\nI just did a pull on tidy-html5 & tidy-html5-tests, built tidy & ran the regression tests.\nAll passed :). @geoffmcl  If you pick a date for a release, isn't whatever that's in 'branch next' what goes out in that release?  Or was this weekend supposed to be more of a final push for what all goes in 5.8?\nI did a quick look in the docs & didn't see anything about the release process.  Is that documented somewhere?. @geoffmcl  My definition of 'full satisfactory solution' would include having command line options processed first :)  But 'satisfactory' would be documenting the current behavior (and less risky), so\n- doc update for the man page\n- get rid of the Loading config file \"~/.tidyrc\" problems, err = 1 message\n- matching changes for tidy-html5-tests/\nand what else before a new release?\nI'd leave off improving .tidyrc processing for a later release and continue having stuph like malformered input'' be silently ignored.. @blacktrash if the fine manual says-config /dev/null`` overrides any tidyrc then it's wrong; see PR #754. > Unfortunately, I do not feel it is the time to bump the ${TIDY_MAJOR_VERSION} to 6 ...\nWhat if #752 / #754 is included :)\nIf you need to bump the version to 6 maybe that's enough of an excuse?\nIt'd be nice if the debian people could take a look at that PR and comment.  The interesting bit starts here\nhttps://github.com/htacg/tidy-html5/issues/752#issuecomment-419355357\n\nYes, I oppose having a ${HOME}/.XXXrc file that can't be over-ridden by a command line option. . @geoffmcl I'm sorry if I came across as trying to hijack the thread.  I was responding to your comment about \nUnfortunately, I do not feel it is the time to bump the ${TIDY_MAJOR_VERSION} to 6... this seems to promise, suggest, some big changes, which are not present in this release... \n\nwith a justification for bumping the version.  ... assuming that if you release a new console version of tidy you'd also be releasing a new libtidy version even if nothing in libtidy has changed.\nAs for\n\nAnyhow, since tidy 5.6.0 had removed some exported symbols, it's already too late to push to 6.0.0.\n\nI'm probably missing something, but it looks like debian libtidy is still on 5.2.0\n https://packages.debian.org/stretch/libtidy5\n  * Package: libtidy5 (1:5.2.0-2)\n https://packages.debian.org/buster/libtidy5\n  * Package: libtidy5 (1:5.2.0-2) \n* https://packages.debian.org/sid/libtidy5\n  * Package: libtidy5 (1:5.2.0-2) \n. @tehnick thanks for the link.  In the News section it has\n[2018-10-11] Accepted tidy-html5 1:5.6.0-0.1~exp1 (source amd64) into experimental, experimental (Boyuan Yang) \nSo it looks like the decision to go with 5.6.0 is less than 3 weeks old.  If a new version of tidy is released in the next few weeks can that be changed or is debian set on going with 5.6.0 regardless?\n. @tehnick  Thanks for all the background info - I appreciate it!  And yes\n\nProbably you do not know ... in Debian.\n\nfor anything related to administration is most likely true for me.\n@hosiet  Yes, I am wondering if picking tidy 5.6.0 for unstable now means that version is locked in for the next year or three.\n. @hosiet  thanks for the info!  I'm guessing that any more questions I have for this will be pretty much off-topic for tidy.  After I read a lot more, follow up questions would best be submitted where?. @geoffmcl  I'm having a hard time following the code.  But while I'm working on that could you look into using something other than #ifdef _MSC_VER for building a windows executable?  The mingw gcc doesn't define that:\n```\n$ cat ifdef.c\n/\n * see: https://sourceforge.net/p/predef/wiki/OperatingSystems/\n *      https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/64-bit-compiler\n *        _WIN32 also defined by the 64-bit compiler for backward compatibility.\n /\ninclude \nint main(int argc, char *argv[]) {\n   printf(\"begin\\n\");\nifdef MINGW32\nprintf(\"__MINGW32__ defined\\n\");\n\nendif\nifdef _MSC_VER\nprintf(\"_MSC_VER defined\\n\");\n\nendif\nifdef _WIN32\nprintf(\"_WIN32 defined\\n\");\n\nendif\nifdef _WIN64\nprintf(\"_WIN64 defined\\n\");\n\nendif\nifdef WINNT\nprintf(\"__WINNT__ defined\\n\");\n\nendif\nprintf(\"end\\n\");\n}\n------- cross-compiling under cygwin to create a windows executable\n$ i686-w64-mingw32-gcc  ifdef.c -o ifdef.exe\n$ ./ifdef\nbegin\nMINGW32 defined\n_WIN32 defined\nWINNT defined\nend\n------- compiling in cygwin; executable requires cygwin1.dll\n$ gcc  ifdef.c -o ifdef.exe\n$ ./ifdef\nbegin\nend\n$\n``\n. @geoffmcl   the config file checking leaves much to be desired.  I'm still trying to follow the code to see how hard it would be to fix, but check this out - I added a printf right after thedoc->optionErrors++;` in message.c:\ncase TidyConfig:\n            doc->optionErrors++;\nprintf(\"debug: got a TidyConfig option error\\n\");\n            break;\nI don't get an error for a totally bogus line in ~/.tidyrc:\n```\n$ echo $TIDY\n/git/mytidy/tidy-html5/build/cmake/tidy.exe\n$ cat ~/.tidyrc\nmalformered input\nmute: MISSING_DOCTYPE\nprobablyAnInvalidKeyword: xporto\n$ echo 'foo' | $TIDY\ndebug: got a TidyConfig option error\nConfig: messages of type \"MISSING_DOCTYPE\" will not be output\ndebug: got a TidyConfig option error\nConfig: unknown option: probablyAnInvalidKeyword\nLoading config file \"~/.tidyrc\" failed, err = 1\nInfo: Document content looks like HTML5\nTidy found 1 warning and 0 errors!\nhtml\n   ...\n```\n\nIt doesn't even mention the existence of malformered input in ~/.tidyrc !?  And loading of the config file did not fail since I don't get the\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nmessage.\nI'm not sure where to go with this - just have TY_(ParseConfigFileEnc) always return 0?  Turn this into a design bug and figure out how to properly check a config file, or ???\nwrt the off-topic ifdef comment It'd be nice if a windows build of tidy could be easily done using gcc.\n https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/64-bit-compiler\nsays their 64 bit compiler defines  _WIN64 and _WIN32 so it seems like\n#ifdef _WIN32\nis the way to go, but however you want to doit.\n. @geoffmcl  after looking at the code much more, maybe ignoring the return code or having  TY_(ParseConfigFileEnc) always return 0 isn't the way to go.\nconsider:\n```\n$ cat ~/.tidyrc\nmalformered input\nmute: MISSING_DOCTYPE\nprobablyAnInvalidKeyword: xporto\nindent: yes\ntidy-mark: no\n$ echo 'foo' | $TIDY -q\ndebug: got a TidyConfig option error\nConfig: messages of type \"MISSING_DOCTYPE\" will not be output\ndebug: got a TidyConfig option error\nConfig: unknown option: probablyAnInvalidKeyword\nLoading config file \"~/.tidyrc\" failed, err = 1\n<!DOCTYPE html>\n\n\n\n      foo\n    \n\n\n\n\n$\n```\nindent: yes and tidy-mark: no aren't printed out, so maybe printing\nConfig: messages of type \"MISSING_DOCTYPE\" will not be output\nis the error?  Seems right - take a look at typdef TidyReportLevel in include/tidyenum.h\n/** Message severity level, used throughout LibTidy to indicate the severity\n ** or status of a message\n **\n ** @remark These enum members all have associated localized strings available\n **         via their enum values. These strings are suitable for use as labels.\n */\ntypedef enum\n{\n    TidyInfo = 350,         /**< Report: Information about markup usage */\n    TidyWarning,            /**< Report: Warning message */\n    TidyConfig,             /**< Report: Configuration error */\n    TidyAccess,             /**< Report: Accessibility message */\n    TidyError,              /**< Report: Error message - output suppressed */\n    TidyBadDocument,        /**< Report: I/O or file system error */\n    TidyFatal,              /**< Report: Crash! */\n    TidyDialogueSummary,    /**< Dialogue: Summary-related information */\n    TidyDialogueInfo,       /**< Dialogue: Non-document related information */\n    TidyDialogueFootnote,   /**< Dialogue: Footnote */\n    TidyDialogueDoc = TidyDialogueFootnote, /**< Dialogue: Deprecated (renamed) */\n} TidyReportLevel;\nConsidering the comment that TidyConfig is supposed to be set for a config error, the code that wants to print the Config: messages of type \"MISSING_DOCTYPE\" will not be output message should have set message->level to TidyDialogueInfo\nWhich would leave only the issue of malformered input being silently ignored?\nifdef OT: compiler defines:\n```\n$ touch foo.c; i686-w64-mingw32-gcc -dM -E foo.c | grep -i win\ndefine _WIN32 1\ndefine WINT_MAX 0xffff\ndefine WINT_MIN 0\ndefine __WIN32 1\ndefine __WINNT 1\ndefine WINNT 1\ndefine WIN32 1\ndefine SIZEOF_WINT_T 2\ndefine WIN32 1\ndefine WINT_TYPE short unsigned int\ndefine WINNT 1\n$\n```\n. @geoffmcl  I'm glad you figured it out - I was still struggling.\nI did a build from your issue-752 branch - question: how to supress the Info: message?\n```\n$ cat ~/.tidyrc\nmalformered input\nmute: MISSING_DOCTYPE\nprobablyAnInvalidKeyword: xporto\ntidy-mark: no\n$ echo 'foo' | $TIDY -q\nInfo: messages of type \"MISSING_DOCTYPE\" will not be output\n<!DOCTYPE html>\n\n   -- snip --\n```\n\nOT: hope closed ;=))\n\nYes, looks good.  Thank you :)\n. \n\nRemember these, potentially 3 config files, are read BEFORE the command line is parsed\n\nTo remember, one has to have know at some time in the past :)\nWow!  This bug report has opened a can of worms:\n```\n$ cat ~/.tidyrc\nshow-info: no\ntidy-mark: no\nmute: MISSING_DOCTYPE\ninvalidKeyWord: mu\n$ cat ~/.nullrc\nnullrc: option\n$ echo $TIDY\n/git/tidy/tidy-html5/build/cmake/tidy.exe\n$ echo 'foo' | $TIDY -config ~/.nullrc\nConfig: unknown option: invalidKeyWord\nLoading config file \"~/.tidyrc\" problems, err = 1\nConfig: unknown option: nullrc\nTidy found 1 warning and 0 errors!\nhtml\n\n\nfoo\n\n\n\n\n$\n```\nSo the man page needs clarification that\n-config <file>\n              set configuration options from the specified <file>\nadds the specified config file for options processing and does not replace or prevent processing of  ~/.tidyrc\nI haven't checked the regression test docs, but it probably needs something about having a ~/.tidyrc invalidates the testing\nand the example of running the regression test should check for the existence of a ~/.tidyrc, throw an error and quit if it exists.\n\nAnd no one reponded on whether the line like malformered input, like any line lacking a colon, should be silently accepted...\n\nNo, it should not be silently ignored; it should generate a warning.\n\nSo I am suggesting tidy.c, the console app issue none, or the minimum of direct message...\n\nSounds good, but it kind of makes it harder to debug if there's more than one options config file.\nsee above\nConfig: unknown option: nullrc\nIt'd be nice if tidy told you which config file had the problem.\nI don't have time to work on this today - hopefully tomorrow I'll be able to work on it & submit a matching change to the regression test. \n$ diff -U 3  ../cases/testbase-expects/case-629.txt ../cases/testbase-results/case-629.txt\n--- ../cases/testbase-expects/case-629.txt      2018-08-29 15:42:23.173861400 -0400\n+++ ../cases/testbase-results/case-629.txt      2018-09-05 16:37:25.934450700 -0400\n@@ -1,6 +1,6 @@\n Config: option \"mute\" given bad argument \"FAKE_TAG\" (STRING_ARGUMENT_BAD)\n-Config: messages of type \"MISSING_ENDTAG_OPTIONAL\" will not be output (STRING_MUTING_TYPE)\n-Config: messages of type \"MISSING_ENDTAG_FOR\" will not be output (STRING_MUTING_TYPE)\n+Info: messages of type \"MISSING_ENDTAG_OPTIONAL\" will not be output (STRING_MUTING_TYPE)\n+Info: messages of type \"MISSING_ENDTAG_FOR\" will not be output (STRING_MUTING_TYPE)\n line 18 column 1 - Warning: <p> proprietary attribute \"download\" (PROPRIETARY_ATTRIBUTE)\n Info: Document content looks like HTML5 (STRING_CONTENT_LOOKS)\n Tidy found 2 warnings and 0 errors!\n. @geoffmcl  The more I think about it the less I like tidy not processing command line options first.\nWhat do you/anyone think about having tidy process the command line options first and allowing them to over-ride default behaviors?\nIf nothing else, it'd be nice to be able to run the regression tests without having to make sure ~/.tidyrc doesn't exist\n. @geoffmcl  Yes, I oppose having a ${HOME}/.XXXrc file that can't be over-ridden by a command line option.  For tidy, adding an option like -config-file <filename>  that would tell tidy to read filename instead of .tidyrc and another -no-config-file option that would tell tidy to not process any initialization file would be my preference.  (or pick some other name for the option.  I just want to be able to over-ride reading .tidyrc)\nBUT I think that's too big a change too late in the game.  Something like that should go into the next release.\n\nwhere did you get this command line first idea?\n\nIt seems like most unix utilities allow you to over-ride processing the .XXXrc file.\neg. bash --norc or curl -q.   dig is the only one I've found that doesn't let me over-ride processing the .digrc file\n\nWould you describe yourself as a Unix, or Windows person?\n\nNeither.  Windows used to win on ease of use + software availability & cygwin made it a pretty nice platform, but I just can't accept Windows 10.  The last version of Unix I liked was SunOS, so that should date me pretty well :)  Linux seems to like chasing the latest shiny whatever.. altho Debian stable seems pretty good at long-term support, so that's what I'm trying now\n\nIn running the regression tests, at least in windows, there is a test for ENV HTML_TIDY\n\nenvars always seemed like a better-than-nothing workaround.  I don't much like 'em, but I've used them when there wasn't some other way.\n\nThis suggests a PR in tests... in tools-sh, and tools-cmd... look forward to suggestions, patch, PR...\n\nI really liked Nancy Reagans' \"Just Say NO\" suggestion.  So I said no to building & testing if ~/.tidyrc existed:\n```\n$ cat build-and-test.sh\n!/bin/sh\nmake sure regression tests aren't borked\nif [ -f \"${HOME}/.tidyrc\" ] ; then\n   echo \"Having a ~/.tidyrc tends to break regression testing.\"\n   echo \"Please try again after renaming ~/.tidyrc\"\n   exit 1\nfi\nstarting from my local tidy git repository\ncd tidy-html5/build/cmake\n    ... etc ...\n```\nAt this stage of the game, I'd suggest documenting the issue & leaving a better fix for later.\n\nNeed more feedback on this can of worms issue...\n\nI liked your issue-752 branch; I think that should go into the next release.\nWith the exception of removing the Loading config file \"~/.tidyrc\" problems, err = 1 message, I'm not sure if anything else should go in for the next release except some doc updates.\n- man page needs clarification\n- regression test docs need something about ~/.tidyrc possibly breaking the tests\n- I like the idea of adding an example of building tidy & running the regression test, but that's a \"nice to have\" not a \"should have\"\nI'd leave off fixing the parsing of .tidyrc & changing/adding command line options processing for later.\nAnything I left off?\n. @geoffmcl   take a look at #754.  I think this removes the need for most of the documentation changes.\n\nSo the man page needs clarification that ...\n\nno longer needed.  Tidy processes the -config file command line option first and, if present, doesn't read any other initialization file.\n\nI haven't checked the regression test docs, but it probably needs something about\nhaving a ~/.tidyrc invalidates the testing ...\n  ...\nthe example of running the regression test should check for the existence of a ~/.tidyrc ...\n\nno longer needed.  The regression tests specify a -config file on the command line, so ~/.tidyrc isn't read.  One can run the regression tests with a ~/.tidyrc and/or have HTML_TIDY set and the regression tests still work properly.\nSee why I don't like having a ${HOME}/.XXXrc file that can't be over-ridden? :)\n. @geoffmcl  Isn't that the way open-source works -- don't like ... make better :-)\nConsidering your earlier comment about having to build a special windows tidy & enhance the code, I can sort of see why you wouldn't want to change anything; this doesn't affect you.  But the standard tidy build on *nix defines TIDY_CONFIG_FILE and I don't see a way to prevent tidy from reading /etc/tidy.conf.  Along with no way to tell tidy to be quiet while processing the file other than adding a show-info: no as the first line of the file.\nThat tidy has been doing it this way since forever carries about as much weight with me as mute in ~/.tidyrc runs fine but triggers exit(1) has been the way tidy works for however long.  Tidy can be made better.\n\nI have no problem informing a tidy regression tester that they should carefully check ...\n\nI have a problem with that, because if the order of processing is changed to cli options first, it's not necessary.  No work-arounds needed, no code changes to add a no-$WHATEVER option to undo an option set in a config file you can't prevent tidy from processing, no need for hidden variables (ie. envars), no work-arounds necessary.\nIf tidy is changed to do cli options first & read one init file if the user doesn't give a -config *filename* option seems like a clear improvement.. @geoffmcl  no problem; don't like was what got me here in the first place asking for a change :)  In any case, I've been thinking more about the reasons for why I don't like..\n\nNow @ler762 suggests we change that... maybe he makes some points... but none that sway me\n\nOK - take a look at CMakeLists.txt\nif ( UNIX AND SUPPORT_CONSOLE_APP )\n  option ( ENABLE_CONFIG_FILES \"Set to OFF to disable Tidy runtime configuration file support\" ON )\n  ...\nelse ()\n  option ( ENABLE_CONFIG_FILES \"Set to ON to enable Tidy runtime configuration file support\" OFF )\n*nix users have automatically processed init files by default.  Windows users don't see the problem because there are no automatically processed init files on windows unless you go out of your way to enable them.\nI'm in the *nix user category, so I do have a problem.  For example, the tidy regression tests fail because I have a ~/.tidyrc  (I was both surprised & pleased to discover that #754 fixed that :)\nA bit far-fetched, but consider what happens if someone decides to go along with\n https://wiki.debian.org/XDGBaseDirectorySpecification\nand builds tidy with -DTIDY_CONFIG_FILE=~/.config/tidy (or whatever the correct syntax is)\nWhatever work-arounds are added to the regression tests to check for a tidy init file & exit/warn if one exists fail because tidy has been configured to use something other than ~/.tidyrc as an init file.\nOr what happens to an end-user whose sysadmin decides to create an /etc/tidy.conf\nI help out on a project that uses tidy to clean up docbook generated html.  I can't even remember to do a git checkout next before doing a git checkout -b aslr, so there's no way I'm going to always remember to move my ~/.tidyrc aside before doing a make doc .. which means I'll end up not having a ~/.tidyrc to make sure that I don't screw up a doc build.\nIn short, #754 enables *nix users to have their kate and edith too :)\n  (oops... my wife just read that line)\nechoing Geoff's request:\nLooking forward to comments from others.\n. @geoffmcl no problem - go ahead and close it.\n\n... did you do something drastic to your fork after setting up the PR?\nAm really puzzled why github shows unknown repository ...\n\nI've deleted & recreated my fork on github a couple of times.  I'm treating it as a temporary sandbox vs. something that has to be maintained - which might be a Bad Idea.\nI'll try to pull all the comments together and create a new issue/feature request.\n. https://cygwin.com/acronyms/#PTC\nThe good news is that the next release has stalled, so if you come up with a patch it might make it into the next release.\nThe bad news is that the next release has stalled.  See  https://github.com/htacg/tidy-html5/issues/741\n. > And I do not think adding size attributes, that adds an additional transformation to the process, would actually make the page load faster ...\nI read about that a long time ago; it might even still be relevant/true :)  Specifying the image size allows the page render process to leave a \"hole\" where the image goes.  Then when the image is downloaded the browser just plops it into the correct place & it's done.  If the image tag doesn't have a height/width attribute the browser has to wait until the image is downloaded to figure out how much room the image takes up in the page.  So the browser either stalls until it gets the image or keeps going with displaying the page until the image is downloaded and re-draws the page again (re-flow in firefox?) with the new image size info.\n. > Here in Tidy 5.2 -access says  missing!\nseems to have already been fixed:\n```\n$ echo '<!DOCTYPE html>x'|tidy -q -access 3\nline 1 column 1 - Access: [3.3.1.1]: use style sheets to control presentation.\nline 1 column 16 - Access: [4.3.1.1]: language not identified.\nline 1 column 16 - Access: [13.2.1.1]: Metadata missing.\nline 1 column 38 - Access: [2.1.1.1]: ensure information not conveyed through color alone (image).\nline 1 column 38 - Access: [1.1.2.1]:  missing 'longdesc' and d-link.\n<!DOCTYPE html>\n\n\nx\n\n\n\n\n\n$ tidy --version\nHTML Tidy for Cygwin version 5.7.16.ler762.issue-752\n. @dinghram that setlocale call seems to be required.  Take a look at\nhttps://www.gnu.org/software/libc/manual/html_node/Setting-the-Locale.html\n  ISO C says that all programs start by default in the standard \u2018C\u2019 locale. To use the locales specified by the environment, you must call setlocale. Call it as follows:      setlocale (LC_ALL, \"\");```\nto select a locale based on the user choice of the appropriate environment variables.\nWould it be possible to get the output from locale and examples of the input your customers said were parsed incorrectly?. I agree with the others about library functions shouldn't change the locale.  The calling program should be responsible for setting the locale - as well as calling tidySetLanguage.  \nTake another look at https://github.com/htacg/tidy-html5/issues/770#issuecomment-443657140\n\nIn my case a php thread is setlocale()'d to the locale set for a logged-in user on a website. The user gets correctly formatted dates and such because of this.\n\nUnless the calling program has per-thread environment variables and the calling program sets all the LC_xxx, LANG, whatevers correctly, setlocale( LC_ALL, \"\") is going to do the wrong thing occasionally.\nSo this bit in src/tidylib.c goes:\n```\nif SUPPORT_LOCALIZATIONS\nif ( TY_(tidyGetLanguageSetByUser)() == no )\n{\n    TY_(tidySetLanguage)( setlocale( LC_ALL, \"\") );\n}\n\nendif\n```\nas well as the\n```\nif SUPPORT_LOCALIZATIONS\ninclude \"locale.h\"\nendif\n```\nand add something like\n```\nif SUPPORT_LOCALIZATIONS\nsetlocale(LC_ALL, \"\");\nTY_(tidySetLanguage)( setlocale( LC_MESSAGES, \"\") );\n\nendif\n```\nto console/tidy.c before the call to tidyCreate()\nand update the tidylib docs + examples to show the calling program setting the locale & tidy language.\n. > are we also abandoning the library auto-detecting of the language?\nyes\n\nWhy?\n\nBecause the caller is the only one who knows how it should be set.\n\nI personally have several apps using libTidy, and I expect the library to auto-select the language, else forget localization...\n\nIt's your app, presumably you still have the source code, add this line before calling tidyCreate()\ntidySetLanguage( setlocale( LC_ALL, \"\") );\nand you've got what the library is doing now.\nRecall\n\n\nIn my case a php thread is setlocale()'d to the locale set for a logged-in user on a website. The user gets correctly formatted dates and such because of this.\n\n\nConsider what happens in a German locale with this snippet in the library:\n```\nif SUPPORT_LOCALIZATIONS\nif ( TY_(tidyGetLanguageSetByUser)() == no ) {\n    /*\\\n     *  Using app has 'not' selected a language\n\n```\nTidy doesn't have a German translation, so TY_(tidyGetLanguageSetByUser) will be no.  Or do you get a different result after calling tidySetLanguage(\"de_DE\")?\nYou can't look at environment variables because they're set for the calling php program, not the logged-in user on the website. And you can't call setlocale( LC_ALL, \"\" ) for the same reason..  The library doesn't know anything about the logged-in user on the website, so there's no way the library can set the locale correctly.\nYou have to make the calling program responsible for setting the locale & selecting the language.\n. If the desired locale is one tidy has a translation for - yes, tidySetLanguage(locale)\nThe problem is that tidy doesn't have all that many translations, so something like\nsetlocale( ... );\nif ( ! tidySetLanguage( ... ) ) tidySetLanguage(\"en_US\");\nwould probably be enough to keep tidy from calling setlocale(LC_ALL, \"\") for you.. src/tidylib.c has this bit:\n```\nif SUPPORT_LOCALIZATIONS\nif ( TY_(tidyGetLanguageSetByUser)() == no )\n{\n    TY_(tidySetLanguage)( setlocale( LC_ALL, \"\") );\n}\n\nendif\n```\nAs far as I can tell, TY_(tidyGetLanguageSetByUser)() == yes only if tidySetLanguage() has been called with a locale that tidy knows about.\nI know zip about PHP, so you're going to have to do your own testing, but it sure looks like the calling program doing\nif ( ! tidySetLanguage( ... ) ) tidySetLanguage(\"en_US\");\nbefore calling tidyCreate() would be enough to keep libtidy from messing with the locale.\n. @AnrDaemon if you're responding to my cygwin msg, take a look at http://www.html-tidy.org/developer/\nWhat would you add to the sample program to show how to set the locale & language?\n. > Why do you want to change locale of a running program from within a library that is not relevant to locale operations to begin with?\nI'd rather not have the library change anything; it still might change the language, so like to update the tidylib example program.\n (http://www.html-tidy.org/developer/#developer20000401part_sample_program)\nThe example program doesn't set the locale or tidy language.  Now take a look at  https://github.com/htacg/tidy-html5/blob/next/src/tidylib.c#L104\nIf the calling program doesn't set the language for tidy to use the library will\n1. try to set the language to whatever 'getenv( \"LC_MESSAGES\" )' returns.  In the example, the program hasn't called setlocale(), so getenv(\"LC_MESSAGES\") returns \"C\", which isn't a valid language for tidy, so we do\n\ntry to set the language to whatever 'getenv(\"LANG\")' returns.  Which may or may not be the right thing to do.\n\nNow pretend the example program has this bit before calling tidyCreate\nsetlocale(LC_ALL, \"\");  // get out of C locale\n  ok = tidySetLanguage(setlocale(LC_MESSAGES, NULL)); // set translation for tidy to use\n  if ( ! ok ) tidySetLanguage(\"en_US.utf8\");          // translation doesn't exist, default to English\nSo now when the program does the TidyDoc tdoc = tidyCreate(); call TY_(tidyGetLanguageSetByUser)() will be yes and the library skips the section of code that tries to guess the correct language setting.. > Agreed, I'd rather not have the library change anything; - now it does not\nIs there a change to src/tidylib.c that hasn't been committed yet?  It sure looks like the library code might still change the language:\n  https://github.com/htacg/tidy-html5/blob/next/src/tidylib.c#L120. If no missing commit, there's still code in the library to change the language.  If you want to leave it in, fine, but you just said\n\nAgreed, I'd rather not have the library change anything; - now it does not\n\nso I guess the issue is you said the library doesn't change anything now & it sure looks like it still might.. I find it easier to talk about a change if there's actual code to talk about.\nSee  https://github.com/htacg/tidy-html5/pull/774. @geoffmcl my landscape has stayed the same :)  I don't like tidy reading the default init files no matter what, so I'm coming at it from the viewpoint of -no-config is the shorter, more obvious equivalent of -config /dev/null.  Both have the effect of telling tidy not to read the default init files.\n\nI had warmed to adding a new options, something like -no-config ... but now you seem to have dropped this... have I got it wrong?\n\nWe can make it two separate issues if you like.\n1. add a -no-config option to tell tidy not to read any of the default init files.\n2. modify -config <filename> to also mean tidy doesn't read any of the default init files.\nMy only question for 1 is do you allow `-no-config`` anywhere on the command line or does it have to be the first option?  I don't like positional parameters, so I'd go with anywhere.\nIf you don't do 2 then you have to modify every test script to include -no-config on the command line.\nYou also end up with the ugly kludge of -no-config -config <filename>\n\nSuch a non-invasive new option could certainly help with the regression test case... you have added a pre scan of the command line, which I think would be necessary for such a new option to work... although we could make it just if this is the first command line option, and only check one item...\n\nI don't see any reason -no-config should be required to be the first option.\n\nNow, if I read this and the code you suggest - you seem to want to change the meaning of the -config  option, and use this as a configSpecified, ie no config signal...\n\nYes, I want to change the meaning of -config <file> to also mean don't read the default init files.\n\nAnd in addition, change the order of the files... put TIDY_USER_CONFIG_FILE first, then an else for ENV HTML_TIDY, then else for TIDY_CONFIG_FILE... Why?\n\nBecause I like having just one init file and I don't like hidden variables (ie environment variables).\nIf we're changing the meaning of -config then this is the time to change how the init files are processed.\n\nI am not sure I understand why you want/need to potentially break many user configs that could be out there... tidy has been that way for more than 10 years... in fact the ENV HTML_TIDY and/or ~/.tidyrc since original tidy in 2000... nearly 20 years...\n\nThe various mis-behaviors listed in https://github.com/htacg/tidy-html5/issues/752 have existed for how long?  My feeling is that if people were actually using /etc/tidy.conf and/or ~/.tidyrc these issues would have been raised & fixed long ago.  So I'm guessing the potential breakage is small.\nBut this isn't something I care about all that much, so how about we leave it until -no-config & -config discussions are finished?\n. @geoffmcl ok - what I need is a -no-config option to tell tidy not to read /etc/tidy.conf or ~/.tidyrc.\nThat or to delete my ~/.tidyrc ...\nI have a ~/.tidyrc and the way I build tidy is\n```\n$ cat build-and-test.sh\n!/bin/sh\nstarting from my local tidy git repository\ncd tidy-html5/build/cmake\ncmake ../.. -DCMAKE_BUILD_TYPE=Release \\\n            -DBUILD_SHARED_LIB:BOOL=OFF \\\n            -DCMAKE_INSTALL_PREFIX=/usr/local \\\n            -DTIDY_RC_NUMBER=ler762\nmake && make install\nmake\ngo back up to the git \ncd ../../..\nand down to where the regression test script lives\ncd tidy-html5-tests/tools-sh\nrun the test\n./testall.sh ../../tidy-html5/build/cmake/tidy\nand show which tests returned different results\ndiff -U5 ../cases/testbase-expects/ ../cases/testbase-results\n```\nThe regression tests fail if I have a ~/.tidyrc\nIf I build tidy with a patch that changes the -config <file> option to also mean \"don't read /etc/tidy.conf or ~/.tidyrc\" the regression tests work.\nMy other use case is for tidy used in a docbook => html make file.  If I have a ~/.tidyrc then the tidy'ed result isn't going to match what any other team member gets when they build the documentation.\nAdding a -no-config option fixes both problems.\n\nmaybe a new option could be say -no-env-config, given that -help-env shows these files\n\nThere's already a -config option, so it seems like -no-config is the obvious choice for the \"don't read the default init files\" option.\n\nThe current additive order of config files is not wrong!\n\nThat I can't tell tidy not to read any init file is, at least for me, a failing.  And we touched on this before - you're on windows, so you don't see the problem.  CMakeLists.txt has\n```\n------------------------------------------------------------------------\nRuntime Configuration File Support\nBy default on Unix-like systems when building for the console program,\nsupport runtime configuration files in /etc/ and in ~/. To prevent this,\nset ENABLE_CONFIG_FILES to NO. Specify -DTIDY_CONFIG_FILE and/or\n-DTIDY_USER_CONFIG_FILE to override the default paths in tidyplatform.h.\n@note: this section refactored to support #584.\n------------------------------------------------------------------------\nif ( UNIX AND SUPPORT_CONSOLE_APP )\n  option ( ENABLE_CONFIG_FILES \"Set to OFF to disable Tidy runtime configuration file support\" ON )\n  <.. snip ..>\nelse ()\n  option ( ENABLE_CONFIG_FILES \"Set to ON to enable Tidy runtime configuration file support\" OFF )\n```\nOn the other hand, nobody else has commented on this issue so how about we just add a -no-config option to tell tidy not to read /etc/tidy.conf or ~/.tidyrc and close this out?\n. @geoffmcl  I agree there's two separate issues here:\n- Some of the regression tests fail if you do a touch /etc/tidy.conf\n- The program design flaw of omitting an option to skip the processing of the default init files.\ntouch /etc/tidy.conf breaking some of the regression tests should be a separate bug discussion.\nFor fixing the design flaw, ''-no-env-config'' sounds too much like \"ignore the HTML_TIDY env variable\" so I'd go with ''-no-def-config'' allowed anywhere on the command line.\n\nAnd just so we are clear, would not particularly change the tests tools to include this option...\n\nYup, changing the tests to include this option would be a pain.\n\nSo once the name is chosen, and agreed,\n\nI'm ok with ''-no-def-config''\n\nwould at least consider some patches and/or PR to implement this... suggest patches, or pseudo code, since have some ideas about this... including docs... thanks...\n\nIn console/tidy.c, just before\n/*\n     * Look for default configuration files using any of\nadd\n```\n    for ( int i = 1; i < argc && !skipDefaultInit; i++ )\n    {\n        ctmbstr arg = argv[i] + 1;\n        if ( strcasecmp(arg, \"no-def-config\" )\n        {\n            skipDefaultInit = 1;\n            break;\n        }\n    }\nif ( ! skipDefaultInit )\n{\n\n```\nand add the closing bracket right after\n```\nendif / TIDY_USER_CONFIG_FILE /\n`\n. *drat*if ( strcasecmp(arg, \"no-def-config\" ) == 0 ). The use case is simple: I'd like to have a~/.tidyrc`` and also be able to get reproducible results when tidy is called in a script.\nNote that my definition of reproducible results means that anyone using the same version of tidy as I am, using the same script as I am, gets the same results that I do no matter what's in their/my ~/.tidyrc, /etc/tidy.conf, or HTML_TIDY setting.\nThe regression tests are a good example - it'd be nice if they produced the same results if I have a ~/.tidyrc or not.  It seems to me that the easiest way to do that is to have a -no-config option that says don't read any of the default init files\nSame deal with a project I help out with -- the documentation is created using docbook to generate html files and tidy is used to clean up the generated html files.  It'd be nice if I could do a make doc and get the same results as everybody else on the team even if I have a ~/.tidyrc.  The easiest way to do that is add -no-config to the tidy call in the make file.\nOr I could just delete my ./tidyrc\n. > if used in a script, why not ren/mv ~/.tidyrc xxxx, temporarily... and restore... seems easy...\nBecause it's so much easier to make sure the script invokes tidy as \"tidy -no-config ...\" than it is to temporarily rename ~/.tidyrc, call tidy and then undo the earlier rename.\nIf there is an /etc/tidy.conf you can't move or rename it without affecting everybody else that calls tidy during your\n-  move /etc/tidy.conf aside\n-  call tidy\n-  restore /etc/tidy.conf\nprocessing window.\n. I'd try adding your OS to the list at\n  https://github.com/htacg/tidy-html5/blob/next/include/tidyplatform.h#L572\n```\nif defined(HPUX_OS) || defined(CYGWIN_OS) ..snip..\nundef ulong\ntypedef unsigned long ulong;\nendif\n```\n. @geoffmcl https://github.com/htacg/tidy-html5-tests/issues/30 is a different problem\nThe fix for https://github.com/htacg/tidy-html5-tests/issues/30 is to add a -no-config option that tells tidy not to load any of the default init files.  Then add -no-config to all the regression tests and that issue is resolved.\nAnd adding a -no-config option to tidy also allows me to put tidy -no-config ... in a script or make file and having tidy do the right thing even if the user has a ~/.tidyrc, the sysadmin has created an /etc/tidy.conf or the user set HTML_TIDY=xxx in their startup.\nThis problem is different.  Calling AdjustConfig after reading each config file is wrong - some settings get reset.  For example:\n```\n$ cat /etc/tidy.conf\nindent-spaces: 4\n$ cat ~/.tidyrc\ncat: /home/Lee/.tidyrc: No such file or directory\n$ tidy -q -indent -export-config | grep -i indent\nindent: auto\nindent-attributes: no\nindent-cdata: no\nindent-spaces: 2\nindent-with-tabs: no\n```\nNow try removing the AdjustConfig( doc ); call in TY_(ParseConfigFileEnc):\n$ ./tidy -q -indent -export-config | grep -i indent\nindent: auto\nindent-attributes: no\nindent-cdata: no\nindent-spaces: 4\nindent-with-tabs: no\nI gave up on trying to figure out exactly what correct behavior would be for AdjustConfig & went with the idea that AdjustConfig shouldn't be called until after all the init files & program options have been read. \nTurns out I got lucky & removing the AdjustConfig( doc ); call in TY_(ParseConfigFileEnc) is the fix; you get the desired behavior of calling AdjustConfig after reading all the config files/params and just before reading the html file.\n```\n$ cat /etc/tidy.conf\n$ cat ~/.tidyrc\ncat: /home/Lee/.tidyrc: No such file or directory\n$ ./DOregression-test\n```\nand all the tests pass.\n. @geoffmcl  I see two different problems:\nIssue 1: don't adjust the config until you have the complete config\nIf /etc/tidy.conf and ~/.tidyrc don't exist the regression tests all pass.\ntouch ~/.tidyrc and run the regression tests - some fail.\ndelete the call to AdjustConfig in TY_(ParseConfigFileEnc), rebuild & run the regression tests - all pass\nSo it sure seems like the fix for this problem is not calling AdjustConfig until tidy has the complete config - which means all the init files and command line options.\nIssue 2: need the ability to ignore the default init files when tidy is called in a script\necho \"wrap: 120\" > ~/.tidyrc\nrun the regression tests & some fail\nThe fix for this problem is not reading ~/.tidyrc\nand the only way to tell tidy not read a default init file is to add a new command line option.\n. @geoffmcl yes, we do seem to be doing a bit of talking past each other :(\n\nTake a chained command like ... there is no moment when tidy has the complete config\n\nI'd say that just before tidy starts processing the file to be tidy'ed it has, by definition, the complete config.  It's run out of options, config files to be read, whatever else there is and it's to the point of ok - time to process this file.\nAt that point it's got all the config settings it's going to get for that file, so I'm saying it's got the complete config and it's finally time to call AdjustConfig\nStart tracing the procedure calls beginning at console/tidy.c where it starts processing the file:\n```\nstatus = tidyParseFile( tdoc, htmlfil );\ntidyParseFile ->\n  tidyDocParseFile ->\n    TY_(DocParseStream) ->\n      TY_(TakeConfigSnapshot) ->\n        AdjustConfig ->\n         TY_(ParseDocument)\n```\nAdjustConfig gets called before processing the document.\nLet's add a bunch of print statements to tidy & come up with an extreme example:\n```\n$ cat /tmp/x\n$TIDY -q /tmp/test.html \\\n      -config /tmp/i4 -indent -wrap 40 /tmp/test.html \\\n      -config /tmp/i8 -indent /tmp/test.html \\\n      --indent no --tidy-mark no -wrap 40 /tmp/test.html\n$ cat /tmp/i4\nindent-spaces: 4\n$ cat /tmp/i8\nindent-spaces: 8\n$ sh /tmp/x\ndebug: enter tidyParseFile\ndebug: enter tidyDocParseFile\ndebug: enter TY_(DocParseStream)\ndebug: enter TY_(TakeConfigSnapshot)\ndebug: enter AdjustConfig\ndeubg: enter TY_(ParseDocument)\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n\n\n\nThe Title\n\n\nA paragraph.\n\n\ndebug: enter tidyParseFile\ndebug: enter tidyDocParseFile\ndebug: enter TY_(DocParseStream)\ndebug: enter TY_(TakeConfigSnapshot)\ndebug: enter AdjustConfig\ndeubg: enter TY_(ParseDocument)\n<!DOCTYPE\nHTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n\n\n\nThe Title\n\n\nA paragraph.\n\n\ndebug: enter tidyParseFile\ndebug: enter tidyDocParseFile\ndebug: enter TY_(DocParseStream)\ndebug: enter TY_(TakeConfigSnapshot)\ndebug: enter AdjustConfig\ndeubg: enter TY_(ParseDocument)\n<!DOCTYPE\nHTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n\n\n\nThe Title\n\n\nA paragraph.\n\n\ndebug: enter tidyParseFile\ndebug: enter tidyDocParseFile\ndebug: enter TY_(DocParseStream)\ndebug: enter TY_(TakeConfigSnapshot)\ndebug: enter AdjustConfig\ndeubg: enter TY_(ParseDocument)\n<!DOCTYPE\nHTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\n\n\nThe Title\n\n\nA paragraph.\n\n\ndebug: enter TY_(FreeConfig)\ndebug: enter TY_(TakeConfigSnapshot)\ndebug: enter AdjustConfig\n$\n```\nLooks like tidy did the right thing each time.\n. @petdance I think what you have is an error.  Starting off with\n<!DOCTYPE html>\nis html5 - correct?  In which case <a name=xxx isn't allowed\n@geoffmcl should tidy use html4 rules for docs that start with\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\nhttps://www.w3.org/TR/html4/struct/links.html#anchors\nDestination anchors in HTML documents may be specified either by the A element (naming it with the name attribute), or by any other element (naming with the id attribute).\nso should it leave <a name=\"content\"> alone in that case?  or say screw it & convert to html5 valid syntax? (which doesn't seem to be valid html4 syntax)\n. > Tidy tells me Warning: <div> anchor \"content\" already defined, but that is not correct, because that error does not apply to the file I gave to Tidy.\nYes!  I totally agree.  The whole screw it & convert to html5 valid syntax - without a warning idea is wrong; tidy is supposed to tell you about any errors it finds.  What if tidy did something like\n$ tidy -q foo.html\nline 7 column 9 - Error: 'name' attribute is not allowed in <a>, adding id=\"content\"\nline 10 column 9 - Warning: <div> anchor \"content\" already defined\n<!DOCTYPE html>\n@petdance  would that be good enough for you?\n. @petdance\n\nIdeally, I'd like to be able to say \"Don't do any modification and just tell me what is wrong with what I gave you\".\n\nI agree.  But tidy was written to clean things up, so getting a msg when it changes something might be the best you can hope for.\n@geoffmcl\n\nAre you too accepting H4 and H5, what the hell policy?\n\nNo.  But you seem to get annoyed if I criticize tidy, so I kept my opinion of tidy taking a valid html4 doc and creating an invalid doc to myself.  As well as my opinion of the --anchor-as-name option.\n\nBut is it a minor glitch? Why not just a warning? doc fixed...\n\nIf I'm being pedantic, tidy doesn't actually fix an html5 doc unless anchor-as-name is off & it breaks an html4 doc no matter how anchor-as-name is set.  But whatever.. for html 5, the name attribute in an <a> tag is not allowed, so it seemed reasonable to call it an error.  Call it a warning if you like.. just as long as tidy spits out an error/warning message about what it did as well as giving me the ability to suppress that error/warning message.  Remember - my use case is tidy cleaning up docbook generated html4; I don't want to see all the msgs for tidy adding an id=tag to <a name=tag instances.\n. @geoffmcl\n\nJust trying to exactly understand what you think is broken... \n\nGo back to the initial problem report and replace the first line with\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">\nIs it then a valid html 4.01 doc?  As far as I can tell, yes, it's valid html.  But it's possible I'm missing something, so if it's not valid, what part of the html 4.01 spec is it not complying with?\nNow run the doc through tidy.  Is it still valid?  I think the <a> and <div> having the same id=\"content\" means no.\n\nAnd to be clear, you do remember that flagging an error means tidy will not attempt output unless forced. \n\nNo, I didn't realise that prefacing a msg with \"Error:\" meant tidy will not attempt output unless forced.  So make it \"Warning: ..\" or leave the Error:/Warning: part off altogether.\n. @geoffmcl to close out this issue I'd just add a message saying what tidy did.\nMy apologies for not looking at the code first; I didn't realize that putting \"Error: \" in a message meant tidy would exit with an error status.  So how about\n$ tidy -q foo.html\nline 7 column 9 - Warning: 'name' attribute is not allowed in <a>, adding id=\"content\"\nline 10 column 9 - Warning: <div> anchor \"content\" already defined\n<!DOCTYPE html>\n\nI divided this up into several different, separate issues - see comment\n   Concerning  and HTML4 vs HTML5\n\nIt'd be nice if there was a way to have tidy not add an id=... attribute for every <a name= attribute in an html4 doc but it's not something I'd work on right now.\n\nImprove the line 10 warning\n\ngiven that tidy adds an id= attribute to the <a name=, I don't see anything to improve.\n\nUser expectations of tidy\n\nThat tidy doesn't silently change things.\n@geoffmcl:\n\nyou seem to have fallen backwards...\n\nNot backwards; it's two different things:\n-  What I'd do about this issue (add a msg about tidy adding the id attribute)\n-  My opinion (I don't much like tidy adding the id attribute in html4 docs but I don't dislike it enough to come up with a patch). > does have the addition Not all warnings/errors were shown. ... hmmm, how was that triggered?\n```\n$ tidy  --show-warnings no foo.html\nInfo: Doctype given is \"-//W3C//DTD HTML 4.01 Transitional//EN\"\nInfo: Document content looks like HTML 4.01 Transitional\nTidy found 37 warnings and 0 errors! Not all warnings/errors were shown.\n   ...\n$ echo $?\n1\n$ tidy  --mute TRIM_EMPTY_ELEMENT foo.html\nInfo: messages of type \"TRIM_EMPTY_ELEMENT\" will not be output\nInfo: Doctype given is \"-//W3C//DTD HTML 4.01 Transitional//EN\"\nInfo: Document content looks like HTML 4.01 Transitional\nTidy found 37 warnings and 0 errors!\n   ...\n$ echo $?\n1\n```\n\nwhile there are options which omit the msg output, they should not alter the exit value!\n\nThis might be a good use case for suppressed --mute XXX messages to not increment the warning count since the user is telling tidy that they don't care/don't want to know about that particular issue.. ",
    "doronbehar": "Hmm, I wonder how I missed that.. Although the examples are there I still think it should be stated explicitly.. Hmm sorry for not adding a PR or patch my self, I wasn't around a computer. Your diff looks great but allow me to suggest something similar but with an example as well (I'm not sure about the formatting), here it is:\ndiff --git a/man/tidy1.xsl.in b/man/tidy1.xsl.in\nindex 0fbae79..3efc31d 100644\n--- a/man/tidy1.xsl.in\n+++ b/man/tidy1.xsl.in\n@@ -75,8 +75,8 @@ They are listed in the first part of this section.\n \\fIConfiguration\\fR options, on the other hand, can either be passed\n on the command line, starting with two dashes \\fB--\\fR,\n or specified in a configuration file,\n-using the option name without the starting dashes.  \n-They are listed in the second part of this section.\n+using the option name, followed by a colon \\fB:\\fR, plus the value, without \n+the starting dashes. They are listed in the second part of this section.\n+Here's an example:\n+    quite: yes\n+    indent: yes\n+    output-xhtml: yes\n .LP\n For \\fIcommand-line\\fR options that expect a numerical argument,\n a default is assumed if no meaningful value can be found.. The sample is not present in the stable version, I missed that when I added an example of my own.\nSo I guess yes, we are good to go, thank you for your collaboration!. I guess I missed that as well :/.. Thanks a lot!. Thanks you so much for suggesting making this part of my fix, I just couldn't find the time to test it myself.. ",
    "displayadrian": "Thanks for the response. What I'm hoping to do is permanently suppress false positives which are highlighted throughout our documents.\nTracking codes in URLs is a good example of this:\n\nSublimeLinter's user preferences lets us pass command line options to tidy. Do you think we could use the mute/mute-id functions to suppress these particular phrases?\n. ",
    "bandito40": "I did originally download it but I am not 100% sure from where. I did the  cmake/install/make install in the same folder as my code. For some reason I couldn't get it to work, deleted the folder and installed it using sudo apt-get install libtidy-dev (I am doing this on Ubuntu).  I think the reason I couldn't get it work was because I was including buffio.h instead of tidybuffio.h.  This I found out after I installed libtidy-dev.   \nAnyhow I just purged libytidy-dev.  The code still compiled and ran with the same results as I was having before. After issuing a sudo updatedb and locate tidy I got this.\n/usr/lib/libtidy-0.99.so.0\n/usr/lib/libtidy-0.99.so.0.0.0\n/usr/lib/libtidy.so\n/usr/local/lib/libtidy.so\n/usr/local/lib/libtidy.so.5\n/usr/local/lib/libtidy.so.5.6.0\n/usr/local/lib/libtidys.a\n/usr/share/doc/libtidy-0.99-0\n/usr/share/doc/libtidy-0.99-0/changelog.Debian.gz\n/usr/share/doc/libtidy-0.99-0/copyright\n/var/cache/apt/archives/libtidy-dev_20091223cvs-1.5_amd64.deb\n/var/lib/dpkg/info/libtidy-0.99-0.list\n/var/lib/dpkg/info/libtidy-0.99-0.md5sums\n/var/lib/dpkg/info/libtidy-0.99-0.postinst\n/var/lib/dpkg/info/libtidy-0.99-0.postrm\n/var/lib/dpkg/info/libtidy-0.99-0.shlibs\nSo I guess libtidy is still installed.  Not sure how to remove it though.. Thanks again.  I followed your suggestion. Install worked. All the tidy files are now located in the install folder tidy-html5 and nowhere else. Compiles fine but I get an error when executing error while loading shared libraries: libtidy-0.99.so.0: cannot open shared object file: No such file or directory.  Looks to be Linux specific but I may be wrong.  Googling as we speak.\nP.S. thanks for pointing out the mastering-markdown page.  I was looking on how to format my post correctly.. By install folder I meant /usr. Previously to my last post I had deleted any trace of any file has the word tidy in the file name.  I uninstalled tidy as such sudo apt purge libtidy* followed by sudo apt autoremove and sudo apt autoclean.  I downloaded and installed libtidy following the steps you had suggested which complied fine. The error is not happening while compiling but when I execute it and only and I get the error error while loading shared libraries: libtidy-0.99.so.0: cannot open shared object file: No such file or directory.  \nThis command 'locate tidy' shows the following installed files after installation.\n/usr/bin/tidy\n/usr/include/tidy.h\n/usr/include/tidybuffio.h\n/usr/include/tidyenum.h\n/usr/include/tidyplatform.h\n/usr/lib/libtidy.so\n/usr/lib/libtidy.so.5\n/usr/lib/libtidy.so.5.7.3\n/usr/lib/libtidys.a\n/usr/lib/pkgconfig/tidy.pc\n/usr/local/lib/pkgconfig/tidy.pc\n/usr/local/share/man/man1/tidy.1\n/usr/share/man/man1/tidy.1\nAnd if I use dpkg --list|grep tidy it returns nothing.\nSo it appears to me that there is another file that is calling  libtidy-0.99.so.0. I even tried recursive text searching through every file in /usr to find the file that is calling libtidy-0.99.0.so but that returned with nothing.\n. I fixed it.  Well it's more of a bandage approach. I create the following symbolic link: sudo ln -s  /usr/lib/libtidy.so /usr/lib/libtidy-0.99.so.0. Now when I execute my code it gives the following results:\n```Tidying: FooFoo!\n1\n2\n3\n4\n6\nDiagnostics:\nline 1 column 1 - Warning: missing <!DOCTYPE> declaration\nline 1 column 19 - Warning: inserting implicit \nInfo: Document content looks like XHTML5\nTidy found 2 warnings and 0 errors!\nAnd here is the result:\nhtml\n\n\n\nFoo\n\n\nFoo!\n\n\n```. The results from `readelf -d main|grep tidy` are:\n\n0x0000000000000001 (NEEDED)             Shared library: [libtidy.so.5]\nAnd the results of ldconfig -p | grep tidy are:\n```\n    libtidy.so.5 (libc6,x86-64) => /usr/lib/libtidy.so.5\n    libtidy.so (libc6,x86-64) => /usr/lib/libtidy.so\n```\nI also rebooted my computer and tried the commands again just in case something might be cache.  Same results from both commands however...after rebooting and using the two commands you suggested I then deleted the symbolic link and my code compiles and executes fine so something somewhere was cached.. ",
    "mc0e": "Tidy's behavior here is turning incorrect html into correct html.  I'd have to say though that I've never liked the readability of those &amp; character entities, and I much prefer the use of ;, which is blessed by the CGI spec as an alternative to the ampersand in query strings.. & is correct in the query string, but to represent an & in html, you write it as a character entity.  With html, an unescaped & is usually not the start of something that looks like a defined character entity, and browsers deal with that.  In XHTML though it violates the requirement of being well formed XML, and the browser is required to reject it.. ",
    "vitaly-zdanevich": "Related issue: I cannot disable warning about & in a href='a?b&c'. ",
    "justinhartman": "@geoffmcl thank you so much for (a) your detailed response and (b) being so diligent in helping me understand the underlying issue with this issue report. I completely get what you are saying here and can now see the error of my ways \ud83d\ude04 \nThe main issue is that SublimeLinter executes all installed linters on a file, irrespective of file-type, file structure, etc. This effectively means that no matter what, when applying the lint function in Sublime using SublimeLinter it will process all installed linters available and in turn, each linter will return a set of results, and in this case errors.\n\nNow it seems you passed an unclosed processing instruction block, <?php ..., so tidy just threw that away. If you had added the close it was looking for ... ?>, it would have kept it as part of the html document... Try the following php and you should see what I mean.\n\nYes, running your example gave me the expected results and once my PHP codeblock was closed off the errors were omitted from the block itself and phpcs took over. \nI don't know if SublimeLinter has the ability to turn off certain linters based on the file-type or code-block being checked but what is clear is that this is not an issue with tidy-html5 but rather an issue with either Sublime or SublimeLinter.\nThank you for your patience and detailed response to an issue that clearly wasn't an issue with tidy-html5. I appreciate it immensely and thank you for your time.\nI am satisfied that this isn't an issue that should remain open so please feel free to close this without response.\nRegards,\nJustin\n. @geoffmcl I do want to ask one question though. When I run $ tidy original-index.php -o index.md --show-warnings false why is it that tidy still shows me warning messages (irrespective that the file is pure PHP) when this flag is set? Surely the expected result is that tidy will only output errors and not warnings?. ",
    "jengelh": "I can confirm it has already been fixed with PR 661. It only needs a proper release/tag. :-). ",
    "blacktrash": "@geoffmcl - thanks for getting back.\nI do have vertical-space: yes set, but I would have expected -config /dev/null to override any tidyrc, according to the fine manual?\n. @ler762 - thanks. Indeed with -config /dev/null I believed to have found an obvious way to report a potential bug/glitch which happens also in the default config scenario. I believed wrong ;-)\nOther than that I think that vertical-space should not influence this particular scenario.. ",
    "hosiet": "This issue is being tracked and discussed downstream in Debian right here: https://bugs.debian.org/911130. Deprecating a function is easy, but removing it would be really costly and you have to bump the SONAME when doing removal to prevent any and every user from encountering missing symbols (missing functions) when using a newer version of library (of the same SONAME.\nSo the workflow is clear: feel free to deprecate a function, but whenever you remove one (or change API / break ABI), bump the SONAME immediately.. (BTW: remove function --> soname bump only applies to exported public symbols (functions). If you believe all changes are made on private functions (prvTidy...) then it is not necessary. But you removed tidyAttrIs[name], tidyAttrGet[name], and tidyNodeIs[element] from v5.2 to v5.6 so the soname has to be bumped this time anyway.). In fact SONAME can only be an (rising) integer, from 0 to 1, 2, 3, ... On Unix-like systems, the programs that are looking for dynamic libraries will only search for something like libfoobar.so.SONAME where SONAME is an integer.\nSo your proposal is not valid :-/ It's really okay to make the project version and SONAME different and there's already countless examples all around.. If you are wondering Debian's decision on next stable release: it really depends on to which extent the next tidy-html5 release would break its API.\nWell, at least we Debian developers can cherry-pick commits that are important enough from git trunk.. @ler762 \nThat's related to workflow in Debian. Basically it's like this:\n\nLibrary version in Debian will not change in any already-released Debian version (e.g., Debian 8, Debian 9, etc)\nDebian 10 freeze will happen in January 2019; after that tidy-html5 version in (not-yet-released) Debian 10 will (almost) never be changed\nIf any security problem emerges (e.g., owns a CVE entry), the patch will be cherry-picked and applied to affected libraries in released Debian versions.\n\nSo the sooner a new version of libtidy is released, the more likely it would be included in next Debian release. Of course if the API of new libtidy broke too much we may as well decide not to include it for now (since great breakage will break downstream software). Anyway it depends.. I'm not sure what kind of questions would emerge, but there are some pointers:\n\nAbout issues of tidy-html5 in Debian: submit a bug report as standard Debian bug reports\nPrivate question about tidy-html5 maintenance in Debian: write emails to maintainers publicly listed out. This bug happens for both v5.6.0 and v5.7.17.. \n",
    "tehnick": "@ler762 This page is more informative: https://tracker.debian.org/pkg/tidy-html5. @ler762 \n@oerdnj and @hosiet  are official maintainers of tidy-html5 package in Debian. So almost all decisions will be done by them.\nI am just a side observer here. I found this issue only due to current library transition for package tidy-html5 which is now preventing automatic migration of my package psi-plus from Debian unstable to Debian testing (and as a result it also prevents backporting of psi-plus into Debian stable).\n\n[2018-10-11] Accepted tidy-html5 1:5.6.0-0.1~exp1 (source amd64) into experimental, experimental (Boyuan Yang)\n\nThis is note about uploading package to Debian experimental branch. Probably you do not know, but this is something like a \"play ground\" in Debian. In this branch package maintainers may decide to break any parts of packages for testing and debugging purpose.\nThe most critical part of Debian maintainers work is uploading of packages into Debian unstable branch. Ideally on this step there are no new issues should happen during  upgrade of end-user system. (Many people use Debian unstable branch as a \"true\" rolling release even nowdays.)\nSo when you are looking at debian/changelog pay more attention to timestamps in blocks with uploads to Debian unstable. Uploads to Debian experimental may be interesting as well, but they are not so important.... > Probably you do not know, but this is something like a \"play ground\" in Debian.\nIn more details it is described here:\nhttps://wiki.debian.org/DebianReleases#Workflow\nhttps://www.debian.org/releases/\nhttps://wiki.debian.org/DebianExperimental#Introduction\n(Just in case if you are curious about it.). ",
    "ekalchev": "This works. Thanks!. ",
    "geoffleach1": "Hmmm ... its been a while ...\nThe file that caused the problem is long gone.\nI had a file that contained a non-ASCII byte. Tidy died.\nSorry I can't be more specific.\nOn 10/25/2018 11:51:23 AM, Geoff McLane wrote:\n\n@geoffleach1 output shown does not look like tidy... please\nexplain...\n-- \nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub:\nhttps://github.com/htacg/tidy-html5/issues/745#issuecomment-433164760\n\n. ",
    "drizt": "I use Clang to compile and turn all warnings to errors. Clang has more strict syntax checking than GCC.. Try set( WARNING_FLAGS \"-Wall -Wextra\") with Clang or GCC. I don't know how do the same with MSVC.. -Wextra is important for .h files becouse other soft can use such flag. And other soft will get errors as me. In .c files will good to fix this but not real sense to do this. In most cases these errors not point to real problem.\nOk. I improve my PR when I get enough free time.. ",
    "eduhh94": "Hi balthisar,\nlike I already mentioned the problem was a wrong linker flag.\nIf you install tidy over homebrew you have to do the following to be able to use tidy-html:\nFirst you go to your xcode project and go to \"Build Settings\" there you add following settings:\n- Header Search Paths: \"/usr/local/Cellar/tidy-html5/5.6.0/include\"\n- Library Search Paths: \"/usr/local/Cellar/tidy-html5/5.6.0/lib\"\n- Other Linker Flags: \"-ltidy\"\nThe request would be to add this instruction to the set up section for mac installation.. ",
    "phonedog365": "I just now read this (as if for the first time!): \n\nIf no input file is specified, Tidy reads the standard input.  If no output file is specified, Tidy writes the tidied markup to the standard output.  If no error file is specified, Tidy writes messages to the standard error.\n\nI would have (wrongly?) assumed that any error (stderr) output from Tidy would be a program error and not output matching errors found with the source file. To me that seems... wrong. But I'm not a committer and I truly appreciate your efforts in maintaining the software. Thanks!. ",
    "langemeijer": "It is unacceptable for any library function to have changing the locale as side-effect.\nAt least change the locale back to what is was!. No it isn't! I think you are missing the point on how setlocale() works in the context of an application. setlocale() keeps state for this process. In my case a php thread is setlocale()'d to the locale set for a logged-in user on a website. The user gets correctly formatted dates and such because of this.\nPossibly you should not change the locale if it is set to a non-'C' value. Autodetecting the locale according to the environment variables should only be done if no locale is set.\n. Also, you should use LC_MESSAGES for this, not LC_ALL.\nI really think you should not be doing any initialization. If library code finds an uninitialized locale situation that's just bad luck and the code should fallback to a decent default language. That is wat \"C\" is for.\nsetlocale() documentation http://man7.org/linux/man-pages/man3/setlocale.3.html says:\n\nOn startup of the main program, the portable \"C\" locale is selected\n       as default.  A program may be made portable to all locales by\n       calling: setlocale(LC_ALL, \"\");\n\nEmphasis on program is mine.\n. @geoffmcl wrote\n\nUnfortunately, the setlocale(LC_ALL, NULL) you suggest does not yield the actual language in use, it returns C, so is not helpful in this regard...\n\nIf the application sets a locale, which is should if it is deemed appropriate, that locale is returned. In my opinion 'C' should fallback to 'en_EN'. \n(pseudo-code)\n```\nlocale = setlocale(LC_ALL, NULL);\nif (locale == 'C') {\n   TY_(tidySetLanguage)( 'en_EN' );\n} else {\n   TY_(tidySetLanguage)( locale );\n}\n```\nAs an alternative, (still not very elegant, because I think setlocale( LC_ALL, \"\" ) should not be in a library) I would suggest the following approach: (pseudo-code)\n```\nprevious_locale = setlocale(LC_ALL, NULL);\nif (previous_locale == 'C') {\n   / Inherit the locale from the environment and use it to set Tidy's language /\n   TY_(tidySetLanguage)( setlocale( LC_ALL, \"\" ) );\n   / Restore the previous locale /\n   setlocale(LC_ALL, previous_locale);\n}\n```\n. To add to @ler762: setlocale()'s behaviour to read the environment variables only makes any sense for applications started by a user on the command line. It does not make sense for a daemon (service) running in the background.. ",
    "russianfool": "@Lin-Buo-Ren: The \"check, then change back\" is not great in a library either. For multi-threaded users this all falls apart, since there's no guarantee that you'll cache or restore the locale appropriately (T2 caches T1's modified state, and \"restores\" that modified state when T2 is done; if T1 has finished first, global locale has been reset).\nAlthough maybe Tidy isn't really meant for multi-threaded use; the only spots that I've found so far that break this are the setlocale (which is fine with SUPPORT_LOCALIZATIONS off, or by pre-initializing the language), and the tag_defs set-reset usage (although here due to concurrent table use; easy enough to thread-local the thing).. ",
    "wallstreetonline": "The correct way would have been to use 0 (zero, the round one), as the documentation also says:\n\nIf locale is NULL or the empty string \"\", the locale names will be set from the values of environment variables with the same names as the above categories, or from \"LANG\".\nIf locale is \"0\", the locale setting is not affected, only the current setting is returned.\n\nGood job .... ",
    "aureliojargas": "Hi @geoffmcl and @ler762, thanks for all the information!\nI'm not sure I understood 100%, but here is the command output, run inside Termux:\n```console\n$ gcc -dM -E - < /dev/null\ndefine _LP64 1\ndefine AARCH64EL 1\ndefine ANDROID 1\ndefine __ARM_64BIT_STATE 1\ndefine __ARM_ACLE 200\ndefine __ARM_ALIGN_MAX_STACK_PWR 4\ndefine __ARM_ARCH 8\ndefine __ARM_ARCH_ISA_A64 1\ndefine __ARM_ARCH_PROFILE 'A'\ndefine __ARM_FEATURE_CLZ 1\ndefine __ARM_FEATURE_DIRECTED_ROUNDING 1\ndefine __ARM_FEATURE_DIV 1\ndefine __ARM_FEATURE_FMA 1\ndefine __ARM_FEATURE_IDIV 1\ndefine __ARM_FEATURE_LDREX 0xF\ndefine __ARM_FEATURE_NUMERIC_MAXMIN 1\ndefine __ARM_FEATURE_UNALIGNED 1\ndefine __ARM_FP 0xE\ndefine __ARM_FP16_ARGS 1\ndefine __ARM_FP16_FORMAT_IEEE 1\ndefine __ARM_NEON 1\ndefine __ARM_NEON_FP 0xE\ndefine __ARM_PCS_AAPCS64 1\ndefine __ARM_SIZEOF_MINIMAL_ENUM 4\ndefine __ARM_SIZEOF_WCHAR_T 4\ndefine __ATOMIC_ACQUIRE 2\ndefine __ATOMIC_ACQ_REL 4\ndefine __ATOMIC_CONSUME 1\ndefine __ATOMIC_RELAXED 0\ndefine __ATOMIC_RELEASE 3\ndefine __ATOMIC_SEQ_CST 5\ndefine BIGGEST_ALIGNMENT 16\ndefine BYTE_ORDER ORDER_LITTLE_ENDIAN\ndefine CHAR16_TYPE unsigned short\ndefine CHAR32_TYPE unsigned int\ndefine CHAR_BIT 8\ndefine CHAR_UNSIGNED 1\ndefine __CLANG_ATOMIC_BOOL_LOCK_FREE 2\ndefine __CLANG_ATOMIC_CHAR16_T_LOCK_FREE 2\ndefine __CLANG_ATOMIC_CHAR32_T_LOCK_FREE 2\ndefine __CLANG_ATOMIC_CHAR_LOCK_FREE 2\ndefine __CLANG_ATOMIC_INT_LOCK_FREE 2\ndefine __CLANG_ATOMIC_LLONG_LOCK_FREE 2\ndefine __CLANG_ATOMIC_LONG_LOCK_FREE 2\ndefine __CLANG_ATOMIC_POINTER_LOCK_FREE 2\ndefine __CLANG_ATOMIC_SHORT_LOCK_FREE 2\ndefine __CLANG_ATOMIC_WCHAR_T_LOCK_FREE 2\ndefine CONSTANT_CFSTRINGS 1\ndefine DBL_DECIMAL_DIG 17\ndefine DBL_DENORM_MIN 4.9406564584124654e-324\ndefine DBL_DIG 15\ndefine DBL_EPSILON 2.2204460492503131e-16\ndefine DBL_HAS_DENORM 1\ndefine DBL_HAS_INFINITY 1\ndefine DBL_HAS_QUIET_NAN 1\ndefine DBL_MANT_DIG 53\ndefine DBL_MAX_10_EXP 308\ndefine DBL_MAX_EXP 1024\ndefine DBL_MAX 1.7976931348623157e+308\ndefine DBL_MIN_10_EXP (-307)\ndefine DBL_MIN_EXP (-1021)\ndefine DBL_MIN 2.2250738585072014e-308\ndefine DECIMAL_DIG LDBL_DECIMAL_DIG\ndefine ELF 1\ndefine FINITE_MATH_ONLY 0\ndefine FLT16_DECIMAL_DIG 5\ndefine FLT16_DENORM_MIN 5.9604644775390625e-8F16\ndefine FLT16_DIG 3\ndefine FLT16_EPSILON 9.765625e-4F16\ndefine FLT16_HAS_DENORM 1\ndefine FLT16_HAS_INFINITY 1\ndefine FLT16_HAS_QUIET_NAN 1\ndefine FLT16_MANT_DIG 11\ndefine FLT16_MAX_10_EXP 4\ndefine FLT16_MAX_EXP 15\ndefine FLT16_MAX 6.5504e+4F16\ndefine FLT16_MIN_10_EXP (-13)\ndefine FLT16_MIN_EXP (-14)\ndefine FLT16_MIN 6.103515625e-5F16\ndefine FLT_DECIMAL_DIG 9\ndefine FLT_DENORM_MIN 1.40129846e-45F\ndefine FLT_DIG 6\ndefine FLT_EPSILON 1.19209290e-7F\ndefine FLT_EVAL_METHOD 0\ndefine FLT_HAS_DENORM 1\ndefine FLT_HAS_INFINITY 1\ndefine FLT_HAS_QUIET_NAN 1\ndefine FLT_MANT_DIG 24\ndefine FLT_MAX_10_EXP 38\ndefine FLT_MAX_EXP 128\ndefine FLT_MAX 3.40282347e+38F\ndefine FLT_MIN_10_EXP (-37)\ndefine FLT_MIN_EXP (-125)\ndefine FLT_MIN 1.17549435e-38F\ndefine FLT_RADIX 2\ndefine __GCC_ATOMIC_BOOL_LOCK_FREE 2\ndefine __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2\ndefine __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2\ndefine __GCC_ATOMIC_CHAR_LOCK_FREE 2\ndefine __GCC_ATOMIC_INT_LOCK_FREE 2\ndefine __GCC_ATOMIC_LLONG_LOCK_FREE 2\ndefine __GCC_ATOMIC_LONG_LOCK_FREE 2\ndefine __GCC_ATOMIC_POINTER_LOCK_FREE 2\ndefine __GCC_ATOMIC_SHORT_LOCK_FREE 2\ndefine __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1\ndefine __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2\ndefine __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1\ndefine __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1\ndefine __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1\ndefine __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1\ndefine GNUC_MINOR 2\ndefine GNUC_PATCHLEVEL 1\ndefine GNUC_STDC_INLINE 1\ndefine GNUC 4\ndefine __GXX_ABI_VERSION 1002\ndefine INT16_C_SUFFIX\ndefine INT16_FMTd \"hd\"\ndefine INT16_FMTi \"hi\"\ndefine INT16_MAX 32767\ndefine INT16_TYPE short\ndefine INT32_C_SUFFIX\ndefine INT32_FMTd \"d\"\ndefine INT32_FMTi \"i\"\ndefine INT32_MAX 2147483647\ndefine INT32_TYPE int\ndefine INT64_C_SUFFIX L\ndefine INT64_FMTd \"ld\"\ndefine INT64_FMTi \"li\"\ndefine INT64_MAX 9223372036854775807L\ndefine INT64_TYPE long int\ndefine INT8_C_SUFFIX\ndefine INT8_FMTd \"hhd\"\ndefine INT8_FMTi \"hhi\"\ndefine INT8_MAX 127\ndefine INT8_TYPE signed char\ndefine INTMAX_C_SUFFIX L\ndefine INTMAX_FMTd \"ld\"\ndefine INTMAX_FMTi \"li\"\ndefine INTMAX_MAX 9223372036854775807L\ndefine INTMAX_TYPE long int\ndefine INTMAX_WIDTH 64\ndefine INTPTR_FMTd \"ld\"\ndefine INTPTR_FMTi \"li\"\ndefine INTPTR_MAX 9223372036854775807L\ndefine INTPTR_TYPE long int\ndefine INTPTR_WIDTH 64\ndefine INT_FAST16_FMTd \"hd\"\ndefine INT_FAST16_FMTi \"hi\"\ndefine INT_FAST16_MAX 32767\ndefine INT_FAST16_TYPE short\ndefine INT_FAST32_FMTd \"d\"\ndefine INT_FAST32_FMTi \"i\"\ndefine INT_FAST32_MAX 2147483647\ndefine INT_FAST32_TYPE int\ndefine INT_FAST64_FMTd \"ld\"\ndefine INT_FAST64_FMTi \"li\"\ndefine INT_FAST64_MAX 9223372036854775807L\ndefine INT_FAST64_TYPE long int\ndefine INT_FAST8_FMTd \"hhd\"\ndefine INT_FAST8_FMTi \"hhi\"\ndefine INT_FAST8_MAX 127\ndefine INT_FAST8_TYPE signed char\ndefine INT_LEAST16_FMTd \"hd\"\ndefine INT_LEAST16_FMTi \"hi\"\ndefine INT_LEAST16_MAX 32767\ndefine INT_LEAST16_TYPE short\ndefine INT_LEAST32_FMTd \"d\"\ndefine INT_LEAST32_FMTi \"i\"\ndefine INT_LEAST32_MAX 2147483647\ndefine INT_LEAST32_TYPE int\ndefine INT_LEAST64_FMTd \"ld\"\ndefine INT_LEAST64_FMTi \"li\"\ndefine INT_LEAST64_MAX 9223372036854775807L\ndefine INT_LEAST64_TYPE long int\ndefine INT_LEAST8_FMTd \"hhd\"\ndefine INT_LEAST8_FMTi \"hhi\"\ndefine INT_LEAST8_MAX 127\ndefine INT_LEAST8_TYPE signed char\ndefine INT_MAX 2147483647\ndefine LDBL_DECIMAL_DIG 36\ndefine LDBL_DENORM_MIN 6.47517511943802511092443895822764655e-4966L\ndefine LDBL_DIG 33\ndefine LDBL_EPSILON 1.92592994438723585305597794258492732e-34L\ndefine LDBL_HAS_DENORM 1\ndefine LDBL_HAS_INFINITY 1\ndefine LDBL_HAS_QUIET_NAN 1\ndefine LDBL_MANT_DIG 113\ndefine LDBL_MAX_10_EXP 4932\ndefine LDBL_MAX_EXP 16384\ndefine LDBL_MAX 1.18973149535723176508575932662800702e+4932L\ndefine LDBL_MIN_10_EXP (-4931)\ndefine LDBL_MIN_EXP (-16381)\ndefine LDBL_MIN 3.36210314311209350626267781732175260e-4932L\ndefine LITTLE_ENDIAN 1\ndefine LONG_LONG_MAX 9223372036854775807LL\ndefine LONG_MAX 9223372036854775807L\ndefine LP64 1\ndefine NO_INLINE 1\ndefine __OBJC_BOOL_IS_BOOL 0\ndefine __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES 3\ndefine __OPENCL_MEMORY_SCOPE_DEVICE 2\ndefine __OPENCL_MEMORY_SCOPE_SUB_GROUP 4\ndefine __OPENCL_MEMORY_SCOPE_WORK_GROUP 1\ndefine __OPENCL_MEMORY_SCOPE_WORK_ITEM 0\ndefine ORDER_BIG_ENDIAN 4321\ndefine ORDER_LITTLE_ENDIAN 1234\ndefine ORDER_PDP_ENDIAN 3412\ndefine PIC 2\ndefine PIE 2\ndefine POINTER_WIDTH 64\ndefine __PRAGMA_REDEFINE_EXTNAME 1\ndefine PTRDIFF_FMTd \"ld\"\ndefine PTRDIFF_FMTi \"li\"\ndefine PTRDIFF_MAX 9223372036854775807L\ndefine PTRDIFF_TYPE long int\ndefine PTRDIFF_WIDTH 64\ndefine SCHAR_MAX 127\ndefine SHRT_MAX 32767\ndefine SIG_ATOMIC_MAX 2147483647\ndefine SIG_ATOMIC_WIDTH 32\ndefine SIZEOF_DOUBLE 8\ndefine SIZEOF_FLOAT 4\ndefine SIZEOF_INT128 16\ndefine SIZEOF_INT 4\ndefine SIZEOF_LONG_DOUBLE 16\ndefine SIZEOF_LONG_LONG 8\ndefine SIZEOF_LONG 8\ndefine SIZEOF_POINTER 8\ndefine SIZEOF_PTRDIFF_T 8\ndefine SIZEOF_SHORT 2\ndefine SIZEOF_SIZE_T 8\ndefine SIZEOF_WCHAR_T 4\ndefine SIZEOF_WINT_T 4\ndefine SIZE_FMTX \"lX\"\ndefine SIZE_FMTo \"lo\"\ndefine SIZE_FMTu \"lu\"\ndefine SIZE_FMTx \"lx\"\ndefine SIZE_MAX 18446744073709551615UL\ndefine SIZE_TYPE long unsigned int\ndefine SIZE_WIDTH 64\ndefine STDC_HOSTED 1\ndefine STDC_UTF_16 1\ndefine STDC_UTF_32 1\ndefine STDC_VERSION 201112L\ndefine STDC 1\ndefine UINT16_C_SUFFIX\ndefine UINT16_FMTX \"hX\"\ndefine UINT16_FMTo \"ho\"\ndefine UINT16_FMTu \"hu\"\ndefine UINT16_FMTx \"hx\"\ndefine UINT16_MAX 65535\ndefine UINT16_TYPE unsigned short\ndefine UINT32_C_SUFFIX U\ndefine UINT32_FMTX \"X\"\ndefine UINT32_FMTo \"o\"\ndefine UINT32_FMTu \"u\"\ndefine UINT32_FMTx \"x\"\ndefine UINT32_MAX 4294967295U\ndefine UINT32_TYPE unsigned int\ndefine UINT64_C_SUFFIX UL\ndefine UINT64_FMTX \"lX\"\ndefine UINT64_FMTo \"lo\"\ndefine UINT64_FMTu \"lu\"\ndefine UINT64_FMTx \"lx\"\ndefine UINT64_MAX 18446744073709551615UL\ndefine UINT64_TYPE long unsigned int\ndefine UINT8_C_SUFFIX\ndefine UINT8_FMTX \"hhX\"\ndefine UINT8_FMTo \"hho\"\ndefine UINT8_FMTu \"hhu\"\ndefine UINT8_FMTx \"hhx\"\ndefine UINT8_MAX 255\ndefine UINT8_TYPE unsigned char\ndefine UINTMAX_C_SUFFIX UL\ndefine UINTMAX_FMTX \"lX\"\ndefine UINTMAX_FMTo \"lo\"\ndefine UINTMAX_FMTu \"lu\"\ndefine UINTMAX_FMTx \"lx\"\ndefine UINTMAX_MAX 18446744073709551615UL\ndefine UINTMAX_TYPE long unsigned int\ndefine UINTMAX_WIDTH 64\ndefine UINTPTR_FMTX \"lX\"\ndefine UINTPTR_FMTo \"lo\"\ndefine UINTPTR_FMTu \"lu\"\ndefine UINTPTR_FMTx \"lx\"\ndefine UINTPTR_MAX 18446744073709551615UL\ndefine UINTPTR_TYPE long unsigned int\ndefine UINTPTR_WIDTH 64\ndefine UINT_FAST16_FMTX \"hX\"\ndefine UINT_FAST16_FMTo \"ho\"\ndefine UINT_FAST16_FMTu \"hu\"\ndefine UINT_FAST16_FMTx \"hx\"\ndefine UINT_FAST16_MAX 65535\ndefine UINT_FAST16_TYPE unsigned short\ndefine UINT_FAST32_FMTX \"X\"\ndefine UINT_FAST32_FMTo \"o\"\ndefine UINT_FAST32_FMTu \"u\"\ndefine UINT_FAST32_FMTx \"x\"\ndefine UINT_FAST32_MAX 4294967295U\ndefine UINT_FAST32_TYPE unsigned int\ndefine UINT_FAST64_FMTX \"lX\"\ndefine UINT_FAST64_FMTo \"lo\"\ndefine UINT_FAST64_FMTu \"lu\"\ndefine UINT_FAST64_FMTx \"lx\"\ndefine UINT_FAST64_MAX 18446744073709551615UL\ndefine UINT_FAST64_TYPE long unsigned int\ndefine UINT_FAST8_FMTX \"hhX\"\ndefine UINT_FAST8_FMTo \"hho\"\ndefine UINT_FAST8_FMTu \"hhu\"\ndefine UINT_FAST8_FMTx \"hhx\"\ndefine UINT_FAST8_MAX 255\ndefine UINT_FAST8_TYPE unsigned char\ndefine UINT_LEAST16_FMTX \"hX\"\ndefine UINT_LEAST16_FMTo \"ho\"\ndefine UINT_LEAST16_FMTu \"hu\"\ndefine UINT_LEAST16_FMTx \"hx\"\ndefine UINT_LEAST16_MAX 65535\ndefine UINT_LEAST16_TYPE unsigned short\ndefine UINT_LEAST32_FMTX \"X\"\ndefine UINT_LEAST32_FMTo \"o\"\ndefine UINT_LEAST32_FMTu \"u\"\ndefine UINT_LEAST32_FMTx \"x\"\ndefine UINT_LEAST32_MAX 4294967295U\ndefine UINT_LEAST32_TYPE unsigned int\ndefine UINT_LEAST64_FMTX \"lX\"\ndefine UINT_LEAST64_FMTo \"lo\"\ndefine UINT_LEAST64_FMTu \"lu\"\ndefine UINT_LEAST64_FMTx \"lx\"\ndefine UINT_LEAST64_MAX 18446744073709551615UL\ndefine UINT_LEAST64_TYPE long unsigned int\ndefine UINT_LEAST8_FMTX \"hhX\"\ndefine UINT_LEAST8_FMTo \"hho\"\ndefine UINT_LEAST8_FMTu \"hhu\"\ndefine UINT_LEAST8_FMTx \"hhx\"\ndefine UINT_LEAST8_MAX 255\ndefine UINT_LEAST8_TYPE unsigned char\ndefine USER_LABEL_PREFIX\ndefine VERSION \"4.2.1 Compatible Clang 7.0.0 (tags/RELEASE_700/final)\"\ndefine WCHAR_MAX 4294967295U\ndefine WCHAR_TYPE unsigned int\ndefine WCHAR_UNSIGNED 1\ndefine WCHAR_WIDTH 32\ndefine WINT_MAX 4294967295U\ndefine WINT_TYPE unsigned int\ndefine WINT_UNSIGNED 1\ndefine WINT_WIDTH 32\ndefine aarch64 1\ndefine clang 1\ndefine clang_major 7\ndefine clang_minor 0\ndefine clang_patchlevel 0\ndefine clang_version \"7.0.0 (tags/RELEASE_700/final)\"\ndefine gnu_linux 1\ndefine __linux 1\ndefine linux 1\ndefine llvm 1\ndefine pic 2\ndefine pie 2\ndefine __unix 1\ndefine unix 1\ndefine linux 1\ndefine unix 1\n```\nIf you need me to run more commands, or try code changes, please let me know.. ",
    "davidgumberg": "I agree about the significant difference in work between implementing an option and rewriting TidyNodeGetText, and the user simply removing the character from the buffer.\nI'm not at all qualified to say whether or not this option should be available because I don't have experience with API maintenance and don't know much about the priorities and considerations of library developers. And I'm not sure that I speak for the actual use cases of most people using the library as I'm currently using it to scrape data from webpages not for displaying and correcting errors in a document.\nSo I think for use cases like mine tidyNodeGetValue may be more appropriate, but I do agree that the documentation should be updated as you said.. ",
    "bmix": "It may be sufficient for the developers to mark their contributions with 'i' for 'internal' and 'u' for 'user-facing', or something like that. This way the changelog could be automated: Only changes would be retrieved (not author and git interna) and only those, which have the 'u' flag set, would be printed to a user facing Release-History file, like change of command-line options, behavior, etc.. ",
    "thelounge-zz": "https://bugzilla.redhat.com/attachment.cgi?id=1471305&action=diff. Changing some html text 4 to a decimal 3.33333 is an action of tidy - there is nothing else dealing in that autotest with html content and downgrade libtidy fixes this issue. this smells like some float conversion deep insinde the code, fact is that i wrote PHP code, stored the output as base64 and the autotest is running the same code and making a diff - libtidy version makes the difference\n. i will try to extract the issue with 3.33333 in a single php file containing all functions and the original strings in base64 and when that is possible provide 2 rpms for Fedora 28 (the offical package and my sandybridge optimized rebuild of the F27 package)\nencode/decode can't be a problem since it's pure latin1 HTML code\nBTW: \"i won't care that much about whitespaces and rewrite test-hashes\" is only half the truth, in fact i care because tidy cleanup is an essential part of anything dealing with WYSIWG input and so a ton of tests are failing and need to be reviewed leading to makeing the testsuite depending on a specific library version and from that point on you can no longer sync the whole stuff bewteen different machines with different tidy/php/os versions which defates the purpose\n. > do not exactly understand your provide 2 rpms... 28, 27\nlibtidy-5.4.0-4.fc28.20181003.rh.x86_64 is my rebuild of the Fedora 27 src.rpm which don't have the issue and so you can downgrade / upgrade and seee that only changing libtidy makes the difference\nare you doing your tests with tidy or from PHP because the Fedora maintainer also said that he is unable to reproduce this and din't bother to just run php.tidy linked against the newer version\noriiginally i was at thursday about to extract a isolated reproducer and then daily buisness robbed my time followed by yesterday dealing the whole day with network infractructure issues - i hope people left and right leave me in piece next week at least on tuesday so that i can provide the needed infos and reproducers here :-( \n. Hi\ndaywork or not, because i miss here the option for attachments please look at https://bugzilla.redhat.com/show_bug.cgi?id=1537853#c22 where you can download a ZIP with a simple \"test.php\" and the expected output and what you get with tidy 5.6\nyou simply can't write any useful tests with such huge differences because it's even not possible or at least error prone manually review if it's just a format change or the \"meaning\" of the resulting HTML has changed\nsadly i can't reproduce the 3.3333333 currently in a standalone script and maybe that's a result of the changed output and other processing of it within the php application. belive it or not but depedning on the tidy-package installed the completly to tidy unrellated code comes up with the mysterious  3,3333333333333\nlibtidy-5.4.0-4.fc28.20181003.rh.x86_64.rpm\nlibtidy-5.6.0-2.fc28.x86_64.rpm\n\n[harry@srv-rhsoft:~]$ cms-autotest.sh youtube | grep 3333\n[pages_summary] => 3,3333333333333\n[harry@srv-rhsoft:~]$ cms-autotest.sh youtube | grep 3333\n[harry@srv-rhsoft:~]$\n\n$result2 = mysqli_query($this->db->conn, 'select SQL_NO_CACHE found_rows()');\n$row2 = mysqli_fetch_row($result2);\n$count_summary = $row2[0];\n$pages_summary = (string)($count_summary / $this->per_page);\nif($pages_summary > (int)$pages_summary)\n{\n $pages_summary = (int)$pages_summary + 1;\n}\nreturn\n[\n 'count_summary'  => $count_summary,\n 'count_filtered' => $count_filtered,\n 'pages_summary'  => $pages_summary,\n 'data'           => $arr\n];\n. libtidy 5.6 is touching LOCALE somewhere without a proper reset - period\nlook at the comma instad dot after typecasting a float value\nlibtidy-5.6.0-2.fc28.x86_64.rpm\n[harry@srv-rhsoft:~]$ php /downloads/tidy-debug.php\nPAGES-SUMMARY: 3,3333333333333\nPAGES-SUMMARY: 3,3333333333333\nCORRUPTION!\nlibtidy-5.4.0-4.fc28.20181003.rh.x86_64.rpm\n[harry@srv-rhsoft:~]$ php /downloads/tidy-debug.php\nPAGES-SUMMARY: 3.3333333333333\nPAGES-SUMMARY: 4\nOK\n/* comment out this line and everything is fine with libtidy-5.6.0-2.fc28.x86_64 too /\n$tidy = tidy_parse_string('bla', [], 'latin1');\n/ that code is completly unrelated to tidy and must not change it's behavior */\n$conn = mysqli_init();\nmysqli_real_connect($conn, $host, $user, $pwd, $db);\n$result = mysqli_query($conn, \"select SQL_CALC_FOUND_ROWS * from cl_autotest_youtube_items  where yi_cid='1' and yi_aktiv='1'  order by yi_sort asc limit 0, 3\");\n$count_summary = mysqli_fetch_row(mysqli_query($conn, 'select SQL_NO_CACHE found_rows()'))[0];\n$pages_summary = (string)($count_summary / 3);\necho \"PAGES-SUMMARY: $pages_summary\\n\";\nif($pages_summary > (int)$pages_summary)\n{\n $pages_summary = (int)$pages_summary + 1;\n}\necho \"PAGES-SUMMARY: $pages_summary\\n\";\nif((int)$pages_summary !== 4)\n{\n echo \"CORRUPTION!\\n\";\n}\nelse\n{\n echo \"OK\\n\";\n}. `<?php declare(strict_types=1);\n $host = 'localhost';\n $user = 'autotest';\n $pwd  = '**';\n $db   = 'autotest';\n/* comment out this line and everything is fine with libtidy-5.6.0-2.fc28.x86_64 too /\n $tidy = tidy_parse_string('bla', [], 'latin1');\n/* that code is completly unrelated to tidy and must not change it's behavior /\n $conn = mysqli_init();\n mysqli_real_connect($conn, $host, $user, $pwd, $db);\n mysqli_query($conn, \"DROP TABLE IF EXISTS tidy_test;\");\n mysqli_query($conn, \"CREATE TABLE IF NOT EXISTS tidy_test (tidy_id mediumint(7) UNSIGNED NOT NULL AUTO_INCREMENT, tidy_test char(2), PRIMARY KEY (tidy_id));\");\n for($i=0; $i<=10; $i++)\n {\n  mysqli_query($conn, \"insert into tidy_test (tidy_test) values ('$i');\");\n }\n $result = mysqli_query($conn, \"select SQL_CALC_FOUND_ROWS * from tidy_test\");\n $count_summary = mysqli_fetch_row(mysqli_query($conn, 'select SQL_NO_CACHE found_rows()'))[0];\n $pages_summary = (string)($count_summary / 3);\n echo \"PAGES-SUMMARY: $pages_summary\\n\";\n if($pages_summary > (int)$pages_summary)\n {\n  $pages_summary = (int)$pages_summary + 1;\n }\n echo \"PAGES-SUMMARY: $pages_summary\\n\";\n if((int)$pages_summary !== 4)\n {\n  echo \"CORRUPTION!\\n\";\n }\n else\n {\n  echo \"OK\\n\";\n }\n mysqli_query($conn, \"DROP TABLE IF EXISTS tidy_test;\");\n?>`. PHP upstream since to have some ideas but the root cause is libtidy\nhttps://bugs.php.net/bug.php?id=77278\nwould you mind to do some regular release because 5.6 is unuseable crap given all the wrapping and other issues which in combination making it even impossible to look at test output and make a clear \"only formatting changes with the same technical meaning\" and \"god knows what the result is\" decision. > setlocale( LC_ALL, \"\") changes the locale for the entire application\nhint: it is ALWAYS application wide\nthe wwarning is completly unrelated to PHP at all\nhttp://php.net/manual/en/function.setlocale.php\nWarning\nThe locale information is maintained per process, not per thread. If you are running PHP on a multithreaded server API like IIS, HHVM or Apache on Windows, you may experience sudden changes in locale settings while a script is running, though the script itself never called setlocale(). This happens due to other scripts running in different threads of the same process at the same time, changing the process-wide locale using setlocale().\n. ",
    "stefanbucur": "I just wanted to add that we're starting seeing a number of crashes from fuzzing tidy-html5, and it would be very helpful if someone could take a look at them.. I have just CC-ed your GitHub e-mail address on some of the most important issues (for example, here). Some of the crashes are potentially security vulnerabilities, so by default they are not publicly visible, to reduce the chance of them being exploited while we give maintainers a chance to take a look first.\nRegarding how to report these bugs, I can try filing the existing bugs as issues here on GitHub too (but these will be publicly visible). Let me know if you'd like me to do this for all crashes. I can also try producing some fixes, but unfortunately I'm not familiar with the implementation so I might not be able to fix too many things.. Thanks a lot @geoffmcl for looking into these issues! You are right that the test cases in the bug reports don't seem to reproduce directly with the 'tidy' tool, so I spent some time to understand what's going on. I believe the source of differences is that our fuzzer uses a special driver that relies on in-memory buffers to parse the input HTML file. This differs from what the 'tidy' tool does, which reads the data directly from a file. Perhaps reading from a file would mask any memory issues that the sanitizer would catch?\nIn any case, here is how one can reproduce the crashes using the fuzzer driver:\n```sh\n$ git clone git@github.com:google/oss-fuzz.git && cd oss-fuzz/\n$ python infra/helper.py build_image tidy-html5\n$ python infra/helper.py build_fuzzers --sanitizer=address tidy-html5\nYou should now be able to reproduce the crash.\n$ build/out/tidy-html5/tidy_fuzzer ~/Downloads/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920\n```\nThat being said, it is good to know that the tidy tool itself is not directly vulnerable, but users of the tidy API may be exposed.. @geoffmcl thanks for pointing out this issue! It does look like running the fuzzer binary directly prevents ASAN from resolving symbols and showing them in stack traces. I did a bit of research and realized that there is a better way to debug the issue:\n\n\nIn the projects/tidy-html5/build.sh file, could you add in the beginning flags that cause the build to include debug symbols:\nsh\nexport CFLAGS=\"${CFLAGS} -g\"\nexport CXXFLAGS=\"${CXXFLAGS} -g\"\n2. You can then rebuild the fuzzer and run it inside a debug container, using the infra/helper.py scripts:\n```sh\n$ python infra/helper.py build_image tidy-html5\n$ python infra/helper.py build_fuzzers --sanitizer=address tidy-html5 --clean\nCopy the crashing test case in the debug environment.\n$ cp ~/Downloads/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920 build/out/tidy-html5/\nRun the debug container.\n$ python infra/helper.py shell base-runner-debug\nOnce inside the container, you can reproduce the crash with full debug information.\n$ gdb --args /out/tidy-html5/tidy_fuzzer /out/tidy-html5/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920\n\n\nI hope this setup will be more effective at pointing out how the execution leads to the crash.. @geoffmcl my apologies for the latency (I was away for a while). Thank you for the detailed investigation, let me take a closer look and will get back to you soon!. @geoffmcl you are right that copying the original buffer to a null-terminated string is unnecessary! My original confusion stemmed from an assumption that tidy would not accept \\0 characters in its input, which was not the case.\nSo I ended up simplifying the code even more, and now I made the following changes:\n```diff\ndiff --git a/projects/tidy-html5/tidy_fuzzer.c b/projects/tidy-html5/tidy_fuzzer.c\nindex 3cf2732..3de6854 100644\n--- a/projects/tidy-html5/tidy_fuzzer.c\n+++ b/projects/tidy-html5/tidy_fuzzer.c\n@@ -38,19 +38,6 @@ void run_tidy_parser(TidyBuffer* data_buffer,\n     tidyRelease(tdoc);\n }\n-void attach_string_to_buffer(const uint8_t data,\n-                             size_t size,\n-                             TidyBuffer buffer) {\n-    // Use a NULL-terminated copy to make it more likely to expose\n-    // buffer overflows.\n-    char data_string = strndup((const char)data, size);\n-    if (data_string == NULL) {\n-        perror(\"Could not allocate string buffer.\");\n-        abort();\n-    }\n-    tidyBufAttach(buffer, (byte)data_string, strlen(data_string) + 1);\n-}\n-\n int LLVMFuzzerTestOneInput(const uint8_t data, size_t size) {\n     TidyBuffer data_buffer;\n     TidyBuffer output_buffer;\n@@ -59,11 +46,11 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n     tidyBufInit(&output_buffer);\n     tidyBufInit(&error_buffer);\n\nattach_string_to_buffer(data, size, &data_buffer);\ntidyBufAttach(&data_buffer, (byte*)data, size);\n     run_tidy_parser(&data_buffer, &output_buffer, &error_buffer);\n+\n     tidyBufFree(&error_buffer);\n     tidyBufFree(&output_buffer);\ntidyBufFree(&data_buffer);\ntidyBufDetach(&data_buffer);\n     return 0;\n }\n```\n\nI believe this is in line with what you were suggesting too. Note that I directly attached the original data buffer to the tidy buffer: This is because the original buffer is guaranteed to be allocated in its own block, without any extra padding in memory. This helps ASAN catch any memory operations outside the buffer.\nThe next step was to transform the original crashing input: for some reason, tidy was crashing if that input was considered only until the null terminator, including the null. So I wrote a one liner to copy the test case to a null-terminated string:\n```\n$ cat ~/Downloads/clusterfuzz-testcase-minimized-tidy_fuzzer-5639351547985920 \\\n  | python -c 'import sys; input = sys.stdin.read(); print input[:input.find(\"\\0\")+1]' \\\n\n~/Downloads/clusterfuzz-testcase-minimized-tidy_fuzzer-nullterm\n$ sudo cp ~/Downloads/clusterfuzz-testcase-minimized-tidy_fuzzer-nullterm \\\n  build/out/tidy-html5/\n```\n\nYou can check that the two files are actually different, so the original file had a null character inside. (On a side note, I found it very interesting that the OSS-Fuzz crash minimizer wasn't able to remove everything after the first null character, and we had to do it manually here.)\nNow we can rebuilt the image, rebuild the fuzzer, etc. and run the new clusterfuzz-testcase-minimized-tidy_fuzzer-nullterm test case inside the container, which will cause an ASAN violation.\nLet me know if you are now able to reproduce the issue, and thanks a lot for looking into this thus far!\n. @geoffmcl thanks for the reminder, I had forgotten to submit a PR for the change. This is now done in https://github.com/google/oss-fuzz/pull/2125. Hopefully this time the crash will be reproducible!. @geoffmcl Did you get the chance to look into this issue more closely? It is indeed curious that this happens when saving the buffer (one would usually think such issues appear at parsing time). So it must be that the parser creates some structure that keeps around pointers to the input, but the structure has the sizes of the tokens wrong in some places. However, I can't seem to pin-point the exact moment when this happens, because parsing is already done by the time the buffer is saved...\nIn any case, I also wanted to ask you if you'd like to be notified of any new such findings in the future. I've realized I can configure the project to list you as the primary maintainer, so you also get access to all the issues by default. Let me know.. ",
    "longcdf": "Hi @geoffmcl , thank you for your response.\nI'm using tidys.lib 5.6.0 downloaded from http://binaries.html-tidy.org/\nThis issue happens when I'm using multi-threading.\nI'm having about 20 threads, each thread will parse a different html file.\nI tested by using tidyParseFile followed by a tidySaveFile to make sure I didn't touch the tinyDoc.\nOriginal file: https://drive.google.com/open?id=1Ch8QarwXZfpz_KUBSdoQk2cORWBItmGb\nCorrect output file: https://drive.google.com/open?id=1DxW27av3umJYZjQhFBycQPvgpXm_WGNi\nRandomly wrong output file: https://drive.google.com/open?id=1pwEJMpPlhEG3vZ5g6uS0T_NihV5b3wT4\nOne more note is it's not always failed exactly like the second output file. Maybe less or more differences but always has problem at the <h3> tag.\nSo I wonder maybe the multithreading cause the issue? Cause when I'm using single thread it is fine.\nThanks.. ",
    "davidmichaelkarr": "I eventually found the \"-axsml\" option, and that appears to consistently work, so I think I'm ok for now.. ",
    "dd8": "I do have a patch which has been tested in production, so I can package that up and attach it to this issue. Here's the patch\npatch-realloc.diff.txt\nCompiles in XCode 10 clang on Mac, Visual Studio 2015 on Windows\nTested in production on macOS 10.13, macOS 10.14, Windows 7, Windows 10, Windows Server 2016\nNot tested on Linux/gcc\n. ",
    "sonyps5201314": "sorry,because i have not specify the -asxhtml parameters. I am not use this API in my project,I debug tidy.exe with some test html find this problem.\nI use tidy to fix web html to xhtml, then use tinyxml2 to get the information from the formated xhtml.. ",
    "haraldschilly": "I can't comment on any technical details, but besides the use case of retaining a license/comment message at the top when editing a partial html file, it's also different from formatting a \"whole\" html page. e.g. \nhtml\n<!-- license: MIT -->\n<html>\n<body>\n<div>\nbar\n</div>\nafter tidy -modify <filename>\nends up as this, retaining the comment at the top\nhtml\n<!-- license: MIT -->\n<!DOCTYPE html>\n<html>\n<head>\n<meta name=\"generator\" content=\n\"HTML Tidy for HTML5 for Linux version 5.7.22\">\n<title></title>\n</head>\n<body>\n<div>bar</div>\n</body>\n</html>. ",
    "recepogras": "We discussed this here and found a solution:\nhttps://stackoverflow.com/questions/54804066/dll-not-found-error-after-publishing-in-vs2015-tidy-x64-dll?noredirect=1#comment96385122_54804066. ",
    "DaveJarvis": "See:\n\nhttp://xmlsoft.org/XMLinfo.html\nhttps://www.w3.org/TR/REC-xml/\n\nEmptyElemTag | ::= | '<' Name (S Attribute)* S? '/>'\nThe grammar shows that the white space character (S) before the closing tag token is optional (?).. I'd leave it out by default. If someone needs that particular space, they can pretty-print the XML in any number of ways.. ",
    "simonmeaden": "Weird I can't seem to repeat it either, this time it worked properly and placed stuff in /usr/local/lib. Sorry must have been something I did that has cleared.\nRegards\nSimon Meaden. ",
    "pdurbin": "@geoffmcl hi! Thanks for your thoughtful reply.\nYes, comments are meaningless to browsers but I had people in mind. Over at https://github.com/IQSS/metrics.dataverse.org/pull/5 I added the first HTML page to a project and suggested in CONTRIBUTING.md that we could use tidy to format our code. (I provide a config file.) However, I can anticipate contributors asking me, \"Why does tidy move my comments around?\" So here I am, asking why. To be clear, I'm also fine with any sane workaround. My workaround for now has been to delete all my HTML comments but I think this is sub-optimal. :smile: \nFor what it's worth, while I was researching a solution, I found this question, which seems to be related: https://stackoverflow.com/questions/537112/html-tidy-dont-move-those-comments\nI hope this helps. I'm not sure if I've answered all of your questions but I'm happy to ramble on. Please let me know what you think. Thanks!. You're right. I tried --vertical-space auto and this is definitely not what I want. \ud83d\ude04  It removes newlines, making the HTML unreadable to people. For the project I'm working on (that \"metrics\" page, I mentioned), I am editing HTML directly, and I'm shopping around for a command line tool that can be used to maintain consistency of HTML formatting, especially as other developers jump in.\nMy thought was, \"I'll suggest to other developers that they can use Tidy with a config file I provide them with rules about how many spaces to indent, etc.\"\nBut you are saying that Tidy is not a tool for maintaining input files. This makes me a little sad. \ud83d\ude1e \nPerhaps a better tool for my use case would be html-beautify, which I read about at https://github.com/beautify-web/js-beautify#css--html . I haven't tried it yet because I thought I'd give Tidy a try first. I've known about Tidy for years and this seemed like a good opportunity to use it.\nIt sounds like you object to me saying that Tidy moves my comments around. I'm just trying to imagine how other developers would react to me suggesting that they try Tidy for the project I mentioned where we are editing HTML directly. They would probably say something like, \"Why does Tidy move my comment to the end of the previous line? My comment is about the following line, not the previous line.\"  Can we agree that Tidy moves comments to the very end of the previous line, removing all whitespace? I'm not how to accurately describe what Tidy does, what you say it has been doing for 20 years. From my perspective it's as if Tidy is saying, \"Comments will be associated with the previous line rather than the following line.\" To me this is backward. I was hoping Tidy would have a flag like --comments-for-following-line to override what is, to me, surprising behavior. That is to say, I write comments like this:\n<!-- for mobile -->\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\nI don't write comments like this:\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><!-- for mobile -->\nMaybe some people do. \ud83d\ude04 It's a free country. \ud83d\ude04 \nI really appreciate you reading all this! Tidy seems great and again, my workaround is simply to not include any comments in HTML. To me, this is not a great solution, though, which is why I opened this issue.. "
}