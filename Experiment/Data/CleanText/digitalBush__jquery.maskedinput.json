{
    "digitalBush": "Thanks!  Fixed the description to match the mask.\n. Addressed this in 43739da3f73e5ed3e839110bc9b692be4fa4abc7.\n. I'm not sure what is wrong with the behavior as it is. http://jsfiddle.net/GMvHg/\nIt seems to work as you describe it should.\n. Awesome that you got some neat stuff implemented, but there's no way I can merge this PR into master. I have no intentions of porting masked input to coffeescript.\n. You're only triggering this custom event in the same scenario as we trigger the change event. Why wouldn't you just listen to change?\n. This can be pushed in via an external call $.mask.definitions['h'] = \"[A-Fa-f0-9]\";\n. I just added a note in the README 8aae81ff326d1a1bd6c2c6dd9f0507c96fe821bc with your hex example.\n. Cleaning up some old pull requests. Thank you for taking the time to submit this. This functionality eventually got merged in with #183.\n. Cleaning up some old pull requests. Thank you for taking the time to submit this. This functionality eventually got merged in with #183.\n. Sorry for being so late to comment on this issue. I'm not sure I'm ready to introduce this to the plugin in the state it's currently in. It already supports allowing incomplete inputs by starting your mask with a '?'. \n. Yep, this is a tricky problem. I'm not sure I can break the namespace until a full revision.\n. This is the same as #48 I'll leave that one open and work towards keeping the namespace in line with the jQuery naming conventions.\n. Most of this looks great except for a small error in the backspace delete area. Those specs were broken after I merged in your changes.\n. Tried this out and I still have the lockup-issue in Chrome/win.\n. On focus we try to place the caret at the first position that accepts input. I would prefer not to take over the click event so that inputs behave in the same way they would without input masking applied.\n. Cleaning up some old pull requests. Thank you for taking the time to submit this. This looks similar to the functionality that we merged in with #183.\n. Added bower.json in ed5cae87fe6ed40c462beda63512dccf805af212\n. This should fix #21. I need to see how well this behaves in other browsers.\n. Will also need to see if this can be unit tested.\n. Trying to dig out of the PRs I neglected and noticed that this has been fixed somewhere along the way. Thank you for the fix!\n. @FagnerMartinsBrack is right. keypress,keydown, focus, and blur are all there already.\n. @stimms I'd be happy to take over the nuget package. What all is involved in publishing this to nuget since this is only content script. I don't see anything in the nuspec that says which files get copied to which project directory.\n. @stimms The process of transferring the package looks easy enough: http://blog.nuget.org/20130205/managing-package-owners.html#transfering-package-ownership\nYou can add me as an owner, my name is digitalbush\n. @stimms awesome info! If you don't mind, please squash those two commits and I'll merge this PR in.\n. Thanks, several people caught me on this. Just merged a PR with the fix.\n. 941908c - Not sure on this one. Inputs shift the other content with no masking. It seems like the behavior we have is the least surprising.\na1afe03 - I like the idea of allowing a placeholder to be escaped. Let's say someone wants to have a fixed '9' in their mask definition. I don't want to take on the extra 0-8 though. The user can easily add their own today.\n. The final build outputs (https://github.com/digitalBush/jquery.maskedinput/blob/master/dist/jquery.maskedinput.js and https://github.com/digitalBush/jquery.maskedinput/blob/master/dist/jquery.maskedinput.min.js) are properly wrapped. I removed the wrap function because the source file will eventually be broken up into separate components as I start refactoring. \n. Sorry for the delay responding. I just merged the hanging comma from another PR and the license header is applied as part of the build process form template:  https://github.com/digitalBush/jquery.maskedinput/blob/master/templates/jquery.maskedinput.template\n. Yep, #125 had this fix too. Just merged that in.\n. Sorry I'm late to this issue. Does this fix a problem? Returning a 0x0 as a caret position for an element which either doesn't exist or can't have a caret seems like it might cause more problems. undefined feels like the right decision here.\n. I don't think I'm comfortable changing the element's maxlength attribute out from under the user. The plugin enforces a max length by nature of how it works and it would be best to just not use that attribute at all.\n. This is a neat idea. To be really useful though, I think we might want to expose a bit more context to the callback function. I'm going to look into something like this for 2.0.\n. Just merged in your changes. Looks good on my nexus7\n. Doh! You are right. I'll go ahead and merge this one and close out the other issues. \n. Thank you for the PR with tests. I didn't realize until after I was finished fixing #254 that I had covered the scope of this fix too. :(\n. Merged #256 because it had a test.\n. At some point I'd like to do groups like mm where masks can define validation and control the caret and value. For instance, user types 9, I can set value to 09 and move caret to position after the 9. \nI'm not sure this gets me to that goal.\n. @gburghardt Hoping to sit down with this PR tonight and check things over. Have you had a chance to test this new functionality when used with the '?' marker? What do you think we should do there?\n. @gburghardt BTW, thank you for writing some specs to go along with your commit!\n. @gburghardt My initial reaction is to just ignore the ? marker.\n. Merged. Thanks for work!\n. What's the use case for this? I added the shifting a long time ago because it mimicked how inputs behave without masking.\n. When an input has an initial value, it gets pre-populated into the mask. With the recently merged autoclear option turned off, that input stays even if it doesn't complete the mask definition.\n. Awesome! Thanks for digging up the related issues too!\n. Curious, why are you masking a textarea instead of an regular input?\n. Version number has always been clearly marked in the header. I think that's sufficient.\n. This looks similar to #166. I'm not a fan of the hash object defining the mapping though. I think if we implement this, we'll allow the user to provide a callback. Thank you for the PR though!\n. Thank you for the suggestion! This is why I exposed the hook to allow custom placeholders. Until we have a date specific mask option, I'd like to hold off on adding these as defaults.\n. @simonschaufi I misspoke just a bit. I meant custom mask definitions. I'd like to hold off on the placeholder thing I think until I have a way to do proper date masking.\nThe eyescript sample from the README is good example of adding definitions.\n$.mask.definitions['~']='[+-]';\n $(\"#eyescript\").mask(\"~9.99 ~9.99 999\");\n. Thank you for the PR! Sorry it took so long to get merged in.\n. This looks similar to #166. I would prefer to implement this as a simple function that takes the input char and maybe position. Thank you for the PR though! \n. We pulled in #245 which I think addresses this problem as well.\n. I think I'll stick the user agent sniff for now. Ultimately we'd like to be in a position to only make decisions based on feature detection anyway. Thank you for sharing!\n. It looks like the changes I just merged from #256 also fixed this.\n. This looks good, but it's showing almost the entire file changed. Would you mind reworking the PR so that it only shows the AMD wrapper at the top and the change at the end of the file?\n. Would this be better off as a build step? \n. Agreed on the spacing. I haven't done a good job of keeping things consistent when merging PRs.\n. @AndrewEastwood Rather than merging upstream changes, it's preferable to rebase upstream changes.  Ideally we'll have one commit when all is said and done with the necessary changes. I found a pretty good guide here: https://github.com/edx/edx-platform/wiki/How-to-Rebase-a-Pull-Request\n. @AndrewEastwood I went ahead and added the change since I'm trying to get a few last minute changes in before a 1.4 drop. I have some more PRs to pull in and I can't really adjust the entire file's whitespace right now. :) Thank you for your help!\n. Good idea on the dist folder. I've been rebuilding that thing every push just so people have a version they can test the changes. Hopefully we can get on a more sane release cycle and make this a non-issue.\n. Awesome! Thanks you for the test @akn102!\n. I think this is a good idea. My plan going forward is to raise events instead of having the users explicitly supply callbacks. We'll also need some specs to verify the behavior. \n. Is this for the scenario where you are using no character as a placeholder?\n. @ryan-roemer That sounds good. I'm curious about the use case still. Is this a scenario where you've elected to not have '_' as a placeholder?\n. Okay, we may want to tackle this in a different way to support more use cases.\n$.trim only covers your specific scenario of whitespace literals. \n. @guberta, Something doesn't feel right about this. Your use case is spaces between numbers with no placeholder characters. It feels like we might want a \"no placeholder\" mode that only reveals literals as you type past them? I'm still thinking on this one. \n. So it is, we really need to resolve the duplicates on bower so people aren't confused. @gustavohenke, would you consider transferring that bower package name to us?\n. @gustavohenke Thanks!\n. @salvianoo I just registered our preferred name, jquery.maskedinput thank you for pointing this out!\n. Not sure why you closed this PR?\n. Ahhh, the main field was added after the 1.4.0 drop it seems. I just pushed 1.4.1, please let me know if that looks right.\n. Thanks!\n. Thank you!\n. Thank you!\n. Good use case, thank you for the contribution!\n. Using the Samsung keyboard, this helps out in Chrome on my S4. Still seeing some issues on the stock  browser. Thank yo for the work here. We can merge it once the logging is removed. :+1: \n. \n. > Intended to be used in the future when Bower gets a real registry where you can publish actual packages, but for now just leave it out.\nIf they intend to use it, is there any harm in leaving it?\n. Alright, works for me. \n. Thanks for helping keep things tidy around here! :)\n. Please remove the log statement.\n. ",
    "galaban": "I tried this originally, but it caused some problems for me.  The text in the textbox remained masked so that if you tried to re-mask the data, it wouldn't mask correctly.  I think a better solution would be to strip the mask out of the data so that you can work with the raw input itself.\nCheck my pull request for a proposed solution to fix this problem (along with another).\n. That's odd!  It seems to work well on jsfiddle, but not on my box.  (Yeah, I know that doesn't help much, does it?)\nIn fact, it's not behaving at all like what I'm seeing.  I'm not sure if this is due to other code we have in place, other code jsfiddle has in place, or possibly differences in framework.  But I know that this change fixed the problem we were having and it seems to work nicely with the code.\nI thought I'd just share this with you in case you wanted to add it.  I noticed someone else had a similar problem with initializing the buffer[].  (Issue #35, https://github.com/digitalBush/jquery.maskedinput/pull/35)\n. ",
    "braddunbar": "@galaban's solution handles this.\n. ",
    "codelahoma": "Thought I couldn't recreate it, but was working with my corrected version. :-)\n. ",
    "leafac": "Thanks for the useful resources and fix.\n. ",
    "FagnerMartinsBrack": "Now I saw what I anwered, what I meant actually was:\n\nif you bind the CHANGE event, since the line above is already triggering it?\n. My first time on github so I couldnt find how to select the commits to show while pulling the request.\nLooks like the .gitignore is being removed, that can be ignored (or I can edit it after sending oO?).\nI saw the diff tab and it shows the correct code changes.\n. Found a bug related to this request, I'll correct it soon along with unit tests: http://jsfiddle.net/fkEvP/1/\n. what about some unit tests? oO\n. Probably it will\n. Sadly a lot of ppl is using .mask()\nThe author should create a 2.0 with a lot of pull requests mixed with the namespace changed or jQuery Tools if their framework is younger than maskedinput\n\nAnyway It's complicated when this happens\n@digitalBush\n. Most of them can be done directly to the element using plain jQuery\n. @digitalBush \nThis is important, IE 8 does not comply to the spec which says the last property can have a trailing comma.\n. I am not sure how this is still an issue, cause this is known for a long time.\n. @simonschaufi \nProbably like this:\njavascript\n$.extend( $.mask, {\n    definitions: {\n        // configs here\n    },\n    placeholders: {\n        // Configs here\n    }\n});\n. @codeimpossible one should remove dist folder from source control and add into .gitignore, then commit only when release is done by using the command:\nshell\n$ git add build -f\njQuery has a pattern to automate this using grunt release process (but I never digged deeper into it).\n. You may also add grunt-contrib-jshint and grunt-contrib-jscs to enforce consistency and prevent future PRs of this kind.\n. ",
    "Yasser": "Great addition.\n. ",
    "nvanheuverzwijn": "Merge this please.\n. ",
    "wzub": "Tested with Firefox 11 and IE9 with jQuery 1.7 - works perfectly.\n. ",
    "satazor": "+1\n. ",
    "brainster-one": "It is simmilar to https://github.com/digitalBush/jquery.maskedinput/pull/70 but works for focus event too.\n. ",
    "bkempner": "Would be awesome to see this merged.\n. ",
    "gburghardt": "+1 for this as well.\nWe need to at least give the user a chance to correct their mistake before blowing away what they entered.\n. I just discovered a bug with this implementation:\n<input type=\"text\" id=\"foo\" value=\"\">\n$(\"#foo\").mask(\"(999) 999-9999\", { autoclear: false });\nWith an empty value, the mask shows up without focus on the field.\n[                ] <-- Blank value is expected with no focus\n[ (___) ___-____ ] <-- Actual result: the mask shows up\nThe default behavior is to hide the mask until setting focus. I need to implement this feature. The change looks to be pretty easy. I'll update the pull request.\n. Commit b9c0097c176d41c9d7e3d3dd6be5fed8115abcda resolves the issue with the mask showing up without focus on the field when \"autoclear\" is set to false. Ready for review.\n. @digitalBush - Is this something we can get merged in? I've seen this feature request several times in pull requests and issues. If you have any concerns, let me know. I can tweak the code or add test coverage as you see fit.\n. @digitalBush said:\n\nHave you had a chance to test this new functionality when used with the '?' marker?\n\nThat's actually a really good question. I haven't tested it with the \"?\" marker yet. I'll add some more specs and dig in to how this marker works.\nAnd another question is, how would you like it to work? :)\n. @digitalBush I merged your master branch into my autoclear branch and fixed a few conflicts in jquery.maskedinput.js. I added test coverage around the optional marker in Focus.Spec.js and Raw.Spec.js. I updated the demo as well to include examples with autoclear: false.\nIf you have autoclear set to false, any placeholder characters past the \"?\" marker in the text field get stripped out when losing focus.\n$(\"#foo\").mask(\"(999) 999-9999? x999999\", { autoclear: false });\n\nText field display\n\n\nWith Focus\nOn Blur\n$(\"#foo\").mask()\n\n\n\n\n(555) 123-4567 x______\n(555) 123-4567\n5551234567\n\n\n(555) 123-456_ x______\n(555) 123-456_ x______\n555123456\n\n\n(555) 123-4567 x123___\n(555) 123-4567 x123\n5551234567123\n\n\n\nThe specs in Raw.Spec.js assert that the unmasked values do not contain any of the masked characters\n. ",
    "knyttl": "You can always use \"?\" in front of your pattern to make it optional.\n. ",
    "codeimpossible": "Closing this issue as it is fixed by #190\n. Theres a few different fixes in here. Thankfully they are broken out in separate commits!\n0d7d60d - the ie7 fix, is no longer needed, looks like this was already taken care of.\n941908c - looks good, but needs tests. I can write these. \na1afe03 - I honestly don't know if we should take this or not, it adds some new mask characters and escaped character code - not sure what the use case is for these. \n@digitalBush what do you think?\n. I'm not able reproduce this with version in master today: http://jsbin.com/himiq/2/edit?html,js,output\nprobably was fixed with other recent merges/bug fixes.\n. crap, I just noticed that #79 fixes this issue as well. should have just merged that and written the specs!\n. looks like this fix will also close #38 \n. @bhoekv nice! Thanks for the contribution! I'll verify locally later today. Can you also add a test case to cover this new change?\n. Hey @prostohz thanks for the submission! I'm not familiar with angular, can you just explain a bit about how your patch works? Maybe post a link to an example of it running?\nthanks!\n. @prostohz so should we close this PR?\n. closing per discussion with submitter.\n. merged.\n. Maybe I'm misunderstanding you're example, but this sounds like an expected behavior. The value of the input is cleared on blur when it doesn't match the mask.\nCan you post a jsbin/jsfiddle with an example of what you're seeing that isn't working?\nThanks!\n. ah, I was using Chrome v33.0.1750.146m and the problem doesn't happen there. I can repro this on Firefox v27.0.1.\nJust to make sure I understand the problem: the field shouldn't highlight as invalid on page load. It should be invalid after a user types into the field and what they typed does not satisfy the mask.\nIs that right?\n. @patrickkettner  thanks for the submission! The changes in the src/jquery.maskedInput.js look fine, however, there are a ton of changes to the javascript in the dist folder. \nThe dist folder is really only updated when we release a new version. All code modifications should be done to the javascript in the src/ folder, and only changes to the src/ folder should be submitted in a PR. \nCan you move your changes from dist/ to src/ and re-submit?\n. dist is the correct folder path for bower - or at least it should be. Take a look at the tag for v1.4.0. Did the bower install not work for you?\n. would you mind removing these lines if they're not needed?\n. ",
    "KevinTriplett": "Will it submit the incomplete value on submit?\n. Sorry @mohnish, what I meant was: will the masked input not clear the value on blur, so that the FORM will submit the value entered by the user? Yes, you are right, the plugin should not submit the value. Submitting the incomplete value is helpful if validation is all done server-side. Nice if it's part of your option.\n. Cool -- and thanks for updating the readme with this information.\n. ",
    "mohnish": "Yeah it does. But that wouldn't be a part of the plugin's functionality right?\n. @KevinTriplett Yeah you're right. It does submit the incomplete value entered by the user.\n. ",
    "ronjouch": "UPDATE: my comment is a duplicate of issue #123, forget about my comment here.\n@digitalBush: you say jquery.maskedinput \"already supports allowing incomplete inputs by starting your mask with a '?'\" but, in my use case, the plugin exhibits undesired onblur/onfocus behavior when used with masks both optional (starting with \"?\") and containing \"forced\" parts (like country phone prefixes) if doing so:\n1. Add a mask:  \nvar phoneMask = \"?+355 9999999999999999\";\n$(\"#phoneNumber\").mask(phoneMask);\n1. Focus the field, don't enter any input\n   \u2192 Seems to work as expected: field shows \"+355 ___\"\n2. Blur and focus\n   \u2192 Forced part is added to the input value. E.g. after three blur/focus without typing anything, my input's value contains +355 355355355. Mandatory screencast (230kB, webm).\nDoes it look like I'm doing something wrong, or is it a bug? Need additional information? (using Firefox 27.0a2 and jQuery 1.7.1)\nThanks for your great work.\n. ",
    "eliasjunior": "Thanks!\n. ",
    "Eonasdan": "see this https://github.com/digitalBush/jquery.maskedinput/issues/106\n. see this https://github.com/digitalBush/jquery.maskedinput/issues/106\n. see this https://github.com/digitalBush/jquery.maskedinput/issues/106\n. ",
    "hughlomas": "I would like to endorse this pull request for correcting the behavior to how I would expect it to work.\n. ",
    "norlin": "@kolyuchii, thank you, fixed:  6fd6139321024a3eabe61202daaff0e0504399e7 \n. Thank you! Very usefully!\n. ",
    "steponas": "Applied this to the current master, by using the patch`s code where the conflict was. Works as outlined. I suggest adding this as a feature to the great plugin. It's configurable after all, and the benefits in some UX cases are enormous.\n. ",
    "gustavohenke": "I've registered the package as jquery.maskedinput. Seems like @digitalBush is busy.\n. Go ahead!\nI unregistered my fork.\n. Hm, I'm sorry, I don't have the code anymore.\nIf you still have some installation with that code, you can create a repo by yourself and update your bower.json to point to it.\n. ",
    "stimms": "I've added you in as an owner. \n. I think I used convention based packaging for this http://docs.nuget.org/docs/creating-packages/creating-and-publishing-a-package so all that was needed was to put the files in a Scripts/ directory. Then run nuget pack . It might be reasonable, now you're doing builds, to switch to a files element and explicitly pull in the built files. \nThere is some documentation on how to hook this into grunt at http://blog.greatrexpectations.com/2013/08/09/creating-nuget-packages-with-grunt/\n. ",
    "bakoushin": "On input date shifting is very surprising.\nExample: you have date 31/12/2013 and you want to change month to 10.\nWith shifting enabled you'll have 31/10/2201.\n. ",
    "joecorcoran": "I just hit this IE7 error too. Would be great to see this merged. Merging this pull request would close #125 and #115 too.\n. ",
    "danielboendergaard": "+1\n. ",
    "ryoe": "+1 I believe this behavior was previously configurable with the uncomplete option.\nEdit: \nAs I looked at this more closely, I also need checkVal(true) in both bind(\"focus.mask\") and  bind(\"blur.mask\") so I can tab in/out of incomplete masked fields. I wonder if the uncomplete option needs to be re-introduced.\nEdit 2: \nApparently, my incoherent ramblings about uncomplete are about an option introduced into our v. 1.3 source at work. Please forgive my confusion.\n. ",
    "b2k": "Por favor, perdona mi espa\u00f1ol. Estoy utilizando el servicio de traducci\u00f3n de Google.\nEl problema s\u00f3lo existe en las nuevas versiones de Android cuando se utiliza el navegador Chrome, en nuestro caso un Samsung Galaxy Note y el Samsung Galaxy S3.\nOn Aug 26, 2013, at 7:46 PM, melloflavio notifications@github.com wrote:\n\nN\u00e3o consegui replicar. Mas a m\u00e1scara n\u00e3o \u00e9 muito fluida nos androids testados (HTC Desire S e Galaxy Note, Chrome e default browser)\nPode ser relacionado\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks!\n\nI'll try it out tomorrow at work.\nOn Oct 27, 2013, at 7:59 PM, Josh Bush notifications@github.com wrote:\n\nJust merged in your changes. Looks good on my nexus7\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "envisagenow": "We were looking to implement the same behavior for this plugin, and after looking into the issue, I saw that you can get the behavior using the 'optional' specifier at the beginning of your mask string.  e.g.  $('#phone').mask('?999-999-9999');\nHowever, this is not really the intended use of that mask element, and is pretty counter-intuitive for anyone not already familiar to the library.  Having an autoClear option seems like a good addition IMO.\n. ",
    "nickdurcholz": "Hello, I was the individual who originally posted using the envisagenow account, and am now using this one so I receive the github email.  \nI have no strong opinion on which implementation to use.  If you want to look at what I was talking about regarding implementing it using the optional marker, I pushed my original try at implementing the same to envisagenow/autoclear-optional branch  (https://github.com/envisagenow/jquery.maskedinput/commit/297f38b2c745baca7d3b2aad04c4a4a7e9320d24).\nEither way works, I think.  When I came across gburghardt's pull request, I abandoned my change and put his implementation in our app.  Our testers didn't find any issues with it.\n. ",
    "Zak-r2": "Really cool commit\n. When we use  complex mask, here's an example jsfiddle.net/yzY4D/\n. ",
    "tyv": "yep, this is what I need too, thanks Dmitry\n. ",
    "bhoekv": "Test added for issue\n171https://github.com/digitalBush/jquery.maskedinput/pull/193\nOn Wed, Nov 13, 2013 at 4:43 PM, Jared Barboza notifications@github.comwrote:\n\n@bhoekv https://github.com/bhoekv nice! Thanks for the contribution!\nI'll verify locally later today. Can you also add a test case to cover this\nnew change?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/digitalBush/jquery.maskedinput/pull/193#issuecomment-28405095\n.\n. @codeimpossible Do you have everything now to process this pull request?\n. \n",
    "fwosko": "@digitalBush I'm using your library to make masked input in the handsontable ( https://github.com/warpech/jquery-handsontable ). Form some reasons there is used TEXTAREA as cell editor even if it behaves as INPUT. \n@codeimpossible Yes, the marked lines can be removed. I inserted them into block comment for future reference.\n. ",
    "marcpires": "I just published an app to the Mozilla MarketPlace and it passed validation with no problem.\n. ",
    "prostohz": "Hi Jared!It was a mistake! I need a custom version of your plugin and in\ngeneral case it`s not necessary.\n2013/12/12 Jared Barboza notifications@github.com\n\nHey @prostohz https://github.com/prostohz thanks for the submission!\nI'm not familiar with angular, can you just explain a bit about how your\npatch works? Maybe post a link to an example of it running?\nthanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/digitalBush/jquery.maskedinput/pull/198#issuecomment-30392835\n.\n. Yes. Decline it.\n\nBest regards,\nSvyatoslav Podmogayev\n2013/12/13 Jared Barboza notifications@github.com\n\n@prostohz https://github.com/prostohz so should we close this PR?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/digitalBush/jquery.maskedinput/pull/198#issuecomment-30472480\n.\n. \n",
    "catchke2ro": "The input clearing is works, but if the input is required (with html5 requried attribute) the browser mark the field as invalid on pag load.\nHere is the JSFiddle example (the input gets the invalid-red-shadow)\nhttp://jsfiddle.net/zH69U/\n. Absolutely :)\nMy modification is only leave the field empty, if the field is empty. So the change event is not fired, and the field stay valid.\nI'm sorry, I wanted to write that I'm using Firefox 27, I forgot it :)\n. ",
    "srggroup": "(Sorry, I commented with an other account, but the profile-image is the same, so I didn't realize it. catchke2ro=srggroup :)\n. ",
    "simonschaufi": "oh, while browsing through other pull requests, i found #182 which is almost the same.\n. @digitalBush can you please explain how to use \"the hook\"?\n. ",
    "AndrewEastwood": ".. and here we go :)\n. also I recommend that all indentations is either to tabs or to spaces, because it's really inconvenient making any changes when it's mixed. what do ya think?\n. I'll update Jasmine tests little bit later\n. it requires requirejs integration as well\n. it seems while I was doing rebase my editor replaced all tabs with spaces\n. ",
    "patrickkettner": "done!\n. rebased off of latest master as well\n. ",
    "Style87": "These changes allow for a placeholder such as MM/YY on a mask of 99/99, providing more information for the user on the values to be entered.\n. There are bugs when its partially filled. I'll fix them then submit a new pull request.\n. ",
    "angelanicholas": "Meant to open this against our fork. Closing.\n. ",
    "gubarta": "@ryan-roemer  updated\n. @digitalBush It is related when we have this kind of params:\n$(\"#input\").mask(\"9999 9999 9999 9999 9999 9999 9999 99\", {autoclear: false, placeholder: \"\"});\n. @digitalBush  what other use cases you want to cover?\n. ",
    "ryan-roemer": "Hi @digitalBush --\nI think we (twice) accidentally opened the PR against the real upstream repo. I think we are due for bringing master back in to our fork and then re-opening this properly here.\n/cc @gubarta \n. @gubarta -- Can you help out with @digitalBush 's request for our use case (as opposed to the existing functionality supported)? Thanks!\n. GLOBAL: STRING.trim fails in IE8/9 (http://kangax.github.io/compat-table/es5/#String.prototype.trim) Please switch to $.trim (http://api.jquery.com/jquery.trim/)\n. Here too.\n. ",
    "QuentinFchx": "Thanks you for moving forward, guys.\n@gustavohenke could you avoid deleting your entire repository the next time ? It broke all our builds and we had no way to figure out what was going on :smile: . If instead you could keep the repo \"alive\" for a few days and add a big warning on the README.md, it would be super helpful !\nAnyway, thanks both of you for the library :+1: \n. ",
    "lancedikson": "+1, it's really useful. Merge this please!\n. ",
    "vagkaefer": "Hello,\nI was looking at the repo days ago and visualized that the date was incorrect!\nOnce realized the PR just seeing that there were other PR with the correction and closed it. Sorry for the inconvenience!\n. ",
    "rquadling": "Can this be merged please?\n. In https://github.com/digitalBush/jquery.maskedinput/blob/1.4.0/bower.json, there is no \"main\" entry, so bower-installer won't work. And master has no dist, so sort of stuck in the middle.\n. And that version has the false upper limit for jQuery.\nSo need a new tag/release that has the removal of the upper jQuery version, has a \"main\" entry in bower.json.\n. OK. Then I think all we need is a new tagged release, rather than pulling from master and building our own release.\n. Perfect. Thank you.\n. I had trouble with the use of the maxlength attribute. Removed that and masks worked for me Android.\n. @dmikester1 You either have to wait for a new release to be made or you pull from master. If you are using bower then take a read of http://stackoverflow.com/questions/16949173/how-to-install-latest-untagged-state-of-a-repo-using-bower\n. 4 space indents please, not tabs. Never tabs.\n. ",
    "TrySound": "Why remove dist folder not for tags? Just confusing.\n. It is very necessary.\n. ",
    "vsn4ik": ":+1: for merge.\n. ",
    "jt3k": "fix all tests !\n. bump! merge IT!\n. ",
    "JBlond": "Tests fixed.\nEven tho it doesn't seem to be logical to have the code that way how it is done by digitalBush\n. ",
    "jimmykane": "NP!\nOn Tue, Feb 10, 2015, 00:08 Josh Bush notifications@github.com wrote:\n\nThanks!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/digitalBush/jquery.maskedinput/pull/296#issuecomment-73610925\n.\n. \n",
    "MattSich": "example of someone with the same issue: https://github.com/digitalBush/jquery.maskedinput/issues/280\n. @digitalBush log removed\n. Look at the files changed. It's not in there... I think you're looking at an old version there?\n. ",
    "voronovam": "hi! can you help me?\ni use latest version (1.4.1). but, maskedinput work incorrectly for android... \nwhat need to change in code?\n. still NOT WORKING for android - v. 5.1 (sony zt)\n. why 'pos2'? - it`s unresolved variable\n. ",
    "Floppe": "Using an Android tablet with Lollipop 5.1.1.\nHere it works in Chrome 49, but not in an Android WebView.\n. ",
    "dmikester1": "Github newb here.  How do I get this latest version from June 18?  It appears it is not the version on the main github page.  But it says \"merged\" up at the top, so I am very confused.\n. ",
    "jason16v": "Sent from Windows Mail\nFrom: Kevin Kirsche\nSent: \u200eThursday\u200e, \u200eJune\u200e \u200e11\u200e, \u200e2015 \u200e7\u200e:\u200e53\u200e \u200ePM\nTo: digitalBush/jquery.maskedinput\nPer bower/bower.json-spec@a325da3\nAlso their maintainer says they probably won't ever use it: http://stackoverflow.com/questions/24844901/bowers-bower-json-file-version-property\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/digitalBush/jquery.maskedinput/pull/321\nCommit Summary\nRemove moot version property from bower.json\nFile Changes\nM bower.json (1) \nPatch Links:\nhttps://github.com/digitalBush/jquery.maskedinput/pull/321.patch\nhttps://github.com/digitalBush/jquery.maskedinput/pull/321.diff\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "kkirsche": "Blank response\n. As stated above: Also their maintainer says they probably won't ever use it: http://stackoverflow.com/questions/24844901/bowers-bower-json-file-version-property\n. ",
    "djpowers": "It saddens me to finally admit this, but I do not think this pull request is going to be addressed.. ",
    "doncullen": "Excellent addition.  What would need to be done to have it behave slightly differently: Example (using phone mask):\nINPUT (user hasn't typed anything): \nINPUT (used typed 1): (1\nINPUT (user typed 2): (12\nINPUT (user typed 3): (123)\nINPUT (user typed 4): (123) 4\nINPUT (user typed 5): (123) 45\nINPUT (user typed 6): (123) 456\nINPUT (user typed 7): (123) 456-7\n...\nINPUT (user typed 0): (123) 456-7890\nINPUT (user typed 1): (123) 456-7890 x1\nINPUT (user typed 2): (123) 456-7890 x12\nINPUT (user typed 3): (123) 456-7890 x123\n...etc\nAs you can see in above example, it'd be cleaner, I think.  . ",
    "JustinStolle": "Is this line supposed to be inside the if block? It is formatted to look that way but there are no braces.\n. ",
    "nathanl": "Yes, indeed. Thanks for noticing that.\n. "
}