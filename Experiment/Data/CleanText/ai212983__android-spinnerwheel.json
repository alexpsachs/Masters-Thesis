{
    "ai212983": "Hi there. Right now there's no implementation of this feature - mostly its because of lack of alpha property for Views before 4.0. Without alpha animation implementation would be a lil bit ugly, so I've decided to drop out this feature totally. Although it can be implemented (drawing directly to canvas and stuff), just thought its not worth it.\n. Hey Riffer. My suggestion is to set target sdk to 14 (as it is in AndroidManifest), but it seems your problem is of another kind. \nHow do you linking library to the demo? \n1) You shouldn't use compiled jar (in order layout files to be included)\n2) You have to specify your namespace (xmlns:app) to that of your demo.\nIf that's what you're doing - lemme know, I'll set up the Eclipse (atm working on IntelliJ IDEA) and will try to compile demo myself.\n. Nah, there's no way to distribute libs as jar files, sadly. Look here: http://developer.android.com/tools/projects/index.html: \nYou cannot export a library project to a JAR file\nA library cannot be distributed as a binary file (such as a JAR file). This will be added in a future version of the SDK Tools.\nOh, and thanks a lot for you efforts investigating running demo in Eclipse, mate!\n. Yup, agreed very much. Will do so this week.\n. Just found time to look into it. Actually my sources have no .project file. So feel free to change your .project file as you want.\n. Hi there, bakua. Unfortunately, I got no time to implement serious changes in this library. Hoping to find some time to dig it in 2 weeks or so. If this bug will take not too long to fix, I'll fix it. If things are complicated, I'll close it as wontfix, sorry. Feel free to dig it yourself and send me pull requests though. =) \n. Hi there, Konrad. \nI've been looking into this functionality from the very beginning. Sadly, it can't be implemented easily - first, because of the way component is drawn, second, because of right now component is data-agnostic, i.e. it can accept almost anything (unlike NumberPicker, which accepts only numbers).\nSo, I'm not planning to implement this feature, at least in foreseen future.\nIf you'll ever decide to implement it yourself, though, feel free to send pull requests. :)\n. I guess there's a problem with measuring/calculating amount of items. \nSadly, I have not much time lately, so I'll be very grateful if you'll look into this. =)\n. Thank you so much!\n. You just can't. The whole idea was to give ICS look-and-feel, so... I'm pretty sure you can easily add original theme yourself, but there's no build-in way to do that.\n. Not sure if its bug of feature. Anyway, almost got no time to implement it right now ( so feel free to fire pull requests :) ), will leave it for later.\n. I believe it was fixed in commit 2bc04b6a238df29edf6b398e48570c94c4d44107\n. It is not a feature, but supposed behavior. While your object is not created and inflated, its width is 0. Use measurement methods to provide its width before its creation.\n. Done, you're good to go, kind sir! \n. Hi there, Gerrit. At the moment, spinnerwheel doesn't support 'selected' state for its elements. I'm pretty sure it shouldn't be too tricky to implement though. \nFeel free to fork the project and implement it.\nI'd implemented it myself, but sadly I'm almost out of free time these days.\np.s. If implementing yourself pose some kind of problem for you - send me a message somewhere in mid May, i'll try to find a space in my schedule.\n. p.s. Set a 'feature' label and assigned it to myself.\n. Yeah, feel free to put a bounty on SO.\n. I'm still looking for a reference how spinnerwheel should look like in Material Design. \nIf you got any links or ideas - feel free to share :)\n. Yeah, I've seen a plenty of material design apps, digged in Google's design\nguide, but nothing like spinnerwheel control. Have you seen anything like\nit?\nOn Nov 16, 2014 11:30 PM, \"GerritHoekstra\" notifications@github.com wrote:\n\nHave you seen the Google Play Newsstand app\nhttps://play.google.com/store/apps/details?id=com.google.android.apps.magazines?\nAlso here http://playboard.me/android/channels/53c58755ea9e19a13e111eff\ncan you find more apps that has Android L features and looks.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/ai212983/android-spinnerwheel/issues/24#issuecomment-63237402\n.\n. You see, I'm not even sure if this project should be maintained anymore.\n\nGoogle is not using spinner wheel in Lollipop, there's no need in emulating\nit on ICS, and number of devices with Android 2.x is shrinking blazingly\nfast.\nI guess I should take a look on it with our designer and think of something\nworthy.\n. Worry do not, fellow developer! My designer said she'd liked to create Material Design version of spinnerwheel, so I guess I'll start working on it next week.\nAnd thanks )\n. It seems you've fixed it in your fork? I've merged my repo with yours, is bug still here?\n. Don't get it. Can you clarify your request, please?\n. Okay, closing this issue then.\n. Hello, Janusz.\nThat's done to simplify layout algorithm. Variable item size is quite possible, but will require some work. I'll mark this ticket as 'feature-request', maybe I'll have some time to look into it later.\nFeel free to send me pull requests though, if you'll decide to make it yourself.\nThanks for your interest in my small lib :)\n. Hi, necroph. I'm afraid things aren't that easy.\nTake a look at AbstractWheel class - there's getItemsRange method, calculating range of items to be shown. When items have variable width, it's quite tricky to calculate items width without rendering them. \n. Yep, Sachin is right. You can't use jar directly because of using assets. JAR files contains code only.\np.s. Thanks a lot, Sachin. :+1: \n. Thanks for a suggestion. I'll try to find some time to review the code and to submit it to maven.\n. This widget is based on wheel widget by Yuri Kanivets (and that's explicitly specified in readme).\nMay be its not the best approach, but it was the fastest by then.\n. Can you please specify a little bit more details?\n. I see. \nActually you shouldn't use this control for scrolling images. This control is supposed to be used with small textual views, it was designed and optimized this way. My suggestion for you is to look around for another lib for your task - it will be less problematic than to adapt spinnerwheel for your needs.\n. That was made on intention - scrollwheel is not supposed to do anything on clicks - it notifies listener of its value on change. Moreover, I'd strongly advised against using click on central part - in standard scrollwheel it enables numeric input for the value, so opening another activity on click is non-standard behaviour and should be applied on your own risk.\n. Yep. Got designer working on sketches. Due to New Year rush, things are going pretty slow. Should be way faster in Jan 2015. Expecting release somewhen in mid Feb 2015.\n. Thank you, kind sir. Feel free to share your ideas for the new component. Most likely it will be rewritten from scratch, so don't hesitate.\n. Hi Gerrit. Nah, no news yet.\nYour example is not exactly SpinnerWheel as I see it. Originally SpinnerWheel was supposed to be as advanced version of Android's NumberPicker, with horizontal orientation support and ability to display custom elements, not only numbers.\nI do like idea of creating widget more abstract and flexible, allowing stuff like you've posted, but it requires a bit of thinking on my side.\nLast few months I fell out of Android development, right now I'm refreshing my memory and learning stuff I've missed. After then, I'll make one more attempt to start with Material Design version.\n. Whatever suits you. I'll handle them later on implementation planning stage.\n. Please clarify what do you mean by 'portrait' and 'landscape' orientation. Vertical/horizontal scrolling? It is supported now.\n. closing this thread, new version features should be kept somewhere else\n. in new repo. \nit will be created later this month\n. That's because library is TOO old. \nWon't-fix unless someone will PR this.\n. not quite remember right now (gotta take a closer look), but i believe KayWu is right. \nThis is due to hardcoded painting coefficients, so you have to tweak code himself. \nI'd recommended to try his suggestion.. Not yet, but close enough, I guess. =). Yep, sure. Submit PR, please, and I'll take a look.\n. This library is pretty old and was written before gradle support in android. Any pull request to implement it will be greatly appreciated though.\n. JitPack.io kindly sent me a pull request (which I approved) to support gradle/maven, so you're free to try.\nThis weekend I'll try to add release to enable versioning.\n. check again pls\n. I'm pretty sure the problem is in your code.\nhave you tried to set current item programmatically in sample app?\n.  I'll try to take a look at it this weekend. Thanks for report.\n. on this weekend maybe ) thanks for your help.\n. You gotta write your own adapter, sorry. There's no CursorAdapter support out of the box.\n. This library is VERY old and should be rewritten from the scratch, frankly.\nSo, closing as wont-fix. Please try suggestion by @sirvanparaste.. This library is using bitmaps to draw on canvas, even with text.\nDo you still have this problem?. As long it's not PR, closing this ticket =). please provide description\n. I think this feature is not implemented just yet. please see suggestion here https://github.com/ai212983/android-spinnerwheel/issues/45. please reopen if it is still actual. Wow, such a great job, Xavier, thanks!. This library is pretty old, ripple effects has appeared much later. \nI'd rather completely rewrite this lib, so this is wont-fix unless someone will PR me. What comes to mind first: it will be using Canvas, extending AdapterView. Year selection in stock Android will be used as design reference, but not that much (because it is SO basic).\nFeatures to think of in no particular order: \n\nHandling ripple effects (enabling/disabling/customizing?), maybe implementing my own (like ripples from bouncing)\nDifferent sizes for scrolling items\nImplementing some kind of viewportSize/totalSize (like for scrollViews)\ninfinite scrolling (lazy items provider, related to above) \noverscrolling support (incl. bouncing)\ninitial value (animated/non-animated)\ncustomizable dimming\ncustomizable effects/styles for selected item (including background)\nsupport for layers (like animated arrow pointing to active element)\nupdateable items (like placeholders for images being loaded)\nwidget can be non-symmetric (selected item not in the center)\neffects like items changing size (fisheye effect)\nper-widget and per-item effects (smooth gradual opacity vs opacity per item) \n\nAlso gotta take a look at example here, Scroller and OverScroller classes.. it seems there's lotsa decent wheel libraries out there, not sure it makes sense to write yet another one . ",
    "Riffer": "Thanks for your quick answer! At the moment I am to busy to check this out but will come back to this - maybe this evening .\n. I just downloaded IntelliJ IDEA and with its help I succeded to compile. Now will try to do the same with eclipse ;-)\n. After fiddeling around I got it working with eclipse too.\nHere is what to do:\n- Download the source by git or as a zip archive\n- Importing the source by \"Android/Existing Android Code Into Workspace\" will give you two Eclipse projects:   \"antistatic.spinnerwheel.demo.WheelDemo\" and \"library\".\n- Use \"Refactor->Rename\" to rename \"antistatic.spinnerwheel.demo.WheelDemo\" to \"antistatic.spinnerwheel.demo\" (else you will have problems with XML-Layouts).\n- Open properties of \"antistatic.spinnerwheel.demo\"\n- Set \"Android\" to 3.0 (3.2 worked even well for me).\n- In the same property \"Android\" scroll down to the very bottom, remove \"wheel\" and add \"library\" to the library references. Attention! That setting can be \"hidden\" at the bottom of the window if you have a big number of targets in your sdk!\nThats all.\nThanks in advance for your help and the tipp not to include only the jar file. I ask myself if there is a clean method to use only the jar file and not the source?\n. ",
    "almozavr": "Fixed by #17 \nScreenCast: http://ge.tt/7oyT5sa/v/0?c\n. ",
    "bakua": "Hello again,\nI downloaded new version of SpinnerWheel and tried this issue again. Here is my result:\n\n\nFirst screen is view displayed at activity start. Second one is when I scroll it somewhere afterwards. Correctly it sould be darker between every | text |.\nAlso those messages popped up in LogCat:\n05-09 22:59:41.062: E/antistatic.spinnerwheel.WheelVerticalView #0(20695):  ----- layout: 40043\n05-09 22:59:41.062: E/antistatic.spinnerwheel.WheelVerticalView #0(20695):  -------- dumping 5 items\n05-09 22:59:41.062: E/antistatic.spinnerwheel.WheelVerticalView #0(20695):  item #0: 177x43\n05-09 22:59:41.062: E/antistatic.spinnerwheel.WheelVerticalView #0(20695):  item #1: 169x43\n05-09 22:59:41.062: E/antistatic.spinnerwheel.WheelVerticalView #0(20695):  item #2: 54x42\n05-09 22:59:41.062: E/antistatic.spinnerwheel.WheelVerticalView #0(20695):  item #3: 0x42\n05-09 22:59:41.062: E/antistatic.spinnerwheel.WheelVerticalView #0(20695):  item #4: 0x42\n05-09 22:59:41.062: E/antistatic.spinnerwheel.WheelVerticalView #0(20695):  ---------- dumping finished \nand here is my code:\n```\n\nAbstractWheel wheelMonth = (AbstractWheel) findViewById(R.id.wheelMonth);\nwheelMonth.setViewAdapter(new MonthAdapter(this));    \nCalendar cal = Calendar.getInstance();\nwheelMonth.setCurrentItem((cal.get(Calendar.YEAR) - 2000) * 12 + cal.get(Calendar.MONTH));\n.\n.\n.\nprivate class MonthAdapter extends AbstractWheelTextAdapter {\n    private int ITEM_COUNT = 12 * 99;   //for every month in 2000 - 2099 (starting from zero)\n    private DateFormatSymbols mDateSymbols;\nprotected MonthAdapter(Context context) {\n    super(context);\n    mDateSymbols = new DateFormatSymbols(getResources().getConfiguration().locale);\n}\n\n@Override\npublic int getItemsCount() {\n    return ITEM_COUNT;\n}\n\n@Override\nprotected CharSequence getItemText(int index) {\n    return \"|\" + mDateSymbols.getMonths()[index % 12] + \" \" + ((index / 12) + 2000) + \"|\";\n}\n\n}\n```\n. I did some testing and figure out that this bug still appears when SpinnerWheel uses default ItemResource. Or custom ItemResource but with top view's width set to wrap content or match parent. Only way I've got this working was to set its width to exact display points. Hope it helps someone :)\n. ",
    "mkutgt72": "okey)\n. 05-07 14:09:58.997: E/AndroidRuntime(12304): FATAL EXCEPTION: main\n05-07 14:09:58.997: E/AndroidRuntime(12304): java.lang.ArithmeticException: divide by zero\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at antistatic.spinnerwheel.AbstractWheel.doScroll(AbstractWheel.java:388)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at antistatic.spinnerwheel.AbstractWheel.access$0(AbstractWheel.java:335)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at antistatic.spinnerwheel.AbstractWheel$2.onScroll(AbstractWheel.java:186)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at antistatic.spinnerwheel.WheelScroller$1.handleMessage(WheelScroller.java:225)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at android.os.Handler.dispatchMessage(Handler.java:99)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at android.os.Looper.loop(Looper.java:156)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at android.app.ActivityThread.main(ActivityThread.java:4977)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at java.lang.reflect.Method.invokeNative(Native Method)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at java.lang.reflect.Method.invoke(Method.java:511)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)\n05-07 14:09:58.997: E/AndroidRuntime(12304):    at dalvik.system.NativeStart.main(Native Method)\n. ",
    "GerritHoekstra": "Also asked on Stack Overflow: http://stackoverflow.com/questions/23139865/android-spinnerwheel-individual-tab-drawable (after 4 months without any reply here I've decided to also ask it there).\nIf I've no response within a week then I place a bounty to the question on Stack Overflow.\n. Hi there,\nI'm not that experienced with Java or Android development, so it would be nice if you can implement that (there's no hurry).\nMaybe I can put a bounty to the question on Stack Overflow and hope that someone fork the project and implement it. Then you don't have to implement it by yourself.\nThanks, I really appreciate your help.\n. Any update on this? And supporting Material Design what you have announced in the README.md would be awesome. I was thinking setting mSeparatorsPaint to colorPrimary and the text color of the items to textColorPrimary.\n\n. Have you seen the Google Play Newsstand app? Also here can you find more apps that has  Android L features and looks.\n. Is there any news on the material design development of spinnerwheel? Or on this feature?\n. @ai212983 How is the development going? I'm looking forward to see the new spinner wheel.\nSome ideas:\n- Ripple Effect on individual items\n- Support for issue #24\n- Overscoll edge effect \n  - Also support for colorEdgeEffect to change the color\n- Current selected triangle indicator (see reference image 2)\nReferences how spinnerwheel should look like in Material Design:\n\n(Source)\n\n(Source)\n. You can try this:\njava\npublic int[] range(int start, int end, int step) {\n    int n = (int) Math.ceil((end-start)/(double)step);\n    int[] arange = new int[n];\n    for (int i = 0; i < n; i++)\n        arange[i] = i*step+start;\n    return arange;\n}\nAnd then for example: \njava\nint[] range = range(5, 50, 5);\nSystem.out.println(Arrays.toString(range));\nThis would return: [5, 10, 15, 20, 25, 30, 35, 40, 45]\n. I'm getting the same crash report on a few devices. (LG G2 - Android 4.4.2 and Sony Xperia Z3 - Android 5.1.1)\nMy app has 400 active users, so it does not occur on every device. I could not reproduce this issue.\n. ",
    "getsilly": "I think the issue is that with the new material design, using a wheel for a time or date picker looks a bit weird. It seems that google is looking to move into the less user movements to get a result. They have the new calendar and date picker widget that shows the entire month and the face of a clock. \nI still think the wheel spinner would be great for lists of numbers and items though, in which case the material design guidelines on lists seem to be pretty thorough.\n. Either way, I have enjoyed your work in a few projects. Thanks for the quality widget!\n. Wonderful news! If you need help with anything, I can offer my modest support. Good luck with the implementation!\n. ",
    "davidschreiber": "A solution is to additionally call canvas.clipRect().\n. ",
    "zouhaireae": "It's Solved , i wanted the get the selected value on the wheel adapter , it didn't let me get it from the TextView cuz i was using a different layout , even using inflater didn't work , but this solved the issue : NumericWheelAdapter.getItemText(AbstaractWheel.getCurrentItem())) , thanks for feed back though :)\n. ",
    "jleidgens": "Hi Dimitri, \nif we come around to add this feature in the app we are working on we will\nsend you the push request. \nAt the moment this is postponed to a later point in time. \nThanks for your lib \nJanusz\nOn Tue, 03 Jun 2014 04:17:13 -0700, Dimitri Fedorov\nnotifications@github.com wrote:\n\nHello, Janusz.\nThat's done to simplify layout algorithm. Variable item size is quite\npossible, but will require some work. I'll mark this ticket as\n'feature-request', maybe I'll have some time to look into it later.\nFeel free to send me pull requests though, if you'll decide to make it\nyourself.\nThanks for your interest in my small lib :)\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ai212983/android-spinnerwheel/issues/28#issuecomment-44951424\n. \n",
    "necroph": "Hi,\nI am trying to implement this feature since two days without any significant success. I am pretty new to android and i am a bit lost at this point. Maybe someone can point me to the right direction. \nWhat did i do so far:\n- WheelHorizontalView.getItemDimension() returns width of the view of the mCurrentItemIdx\n- In WheelHorizontalView.drawItems(Canvas canvas) i implemented this formula for the \"left\"- property:\n  (getWidth() / 2 - (iw / 2)) - ((mCurrentItemIdx - mFirstItemIdx) * iw) - (mSelectionDividerWidth * 2)\ni think \"(mCurrentItemIdx - mFirstItemIdx) * iw\" should iterate through all the items and get the individual ItemWidth.\nBasically my goal is a simple wheel selector for a big range of numbers. 0 - 999999. Any help would be really appreciated.\n. ",
    "uguratar": "I'm digging into code for overscrolling too. It would be great to have some assist about controlling the overscrolling of horizontal wheel .\n. ",
    "noinnion": "https://github.com/ai212983/android-spinnerwheel/blob/bba368d940da356f9681545a46677caaa21b624d/library/src/main/java/antistatic/spinnerwheel/WheelHorizontalScroller.java#L64\nChange\nfinal int maxPosition = 0x7FFFFFFF;\nto \nfinal int maxPosition = 0\n. ",
    "sachin-shelke": "Add this project in eclipse workspace and set it as library. Then in your project use it as library project. Don't use jar directly.\nOn Aug 14, 2014 3:11 PM, muktopesha-jibi notifications@github.com wrote:\nhow to use this library in my project in eclipse. I tried by adding the jar files to the libs folder and then and then added to the build path but i could not access the classes in my main activity.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/ai212983/android-spinnerwheel/issues/30\n. ",
    "yakubbaev": "+1\n. ",
    "ligi": "+1\nPS: it is less painful to add it to jcenter and as jcenter is the new android default it is ~equally good to users\n. ",
    "akiwarheit": ":+1:\nReally helpful if we can just reference it from build.gradle\n. ",
    "gengjiawen": "+1\n. ",
    "mathieudebrito": "+1\n. ",
    "jitpack-io": "Would be easy to publish on https://JitPack.io. Don't even need to upload anything. All that's needed is a GitHub release of android-spinnerwheel and a build.gradle\n. @ai212983 In general would be easy to publish on JitPack with very small changes. Can submit a PR if you are interested\n. Nice!\nIt might be an idea to add a GitHub release as well https://github.com/ai212983/android-spinnerwheel/releases\nthen the dependency will get a version.\n. Doesn't look right\n. ",
    "umerkiani": "i am pulling images from server and showing them in picker the issue i am having is once after the data is downloaded from server and pushed to adapter it just displayes blank untill we scroll it then it shows the data secondly if you put any moving object ie Progress bar it does not shows the spinning animation\n. ",
    "Rainer-Lang": "Cool! Really waiting of a new spinner wheel.\nYes - I understand - the time before the new year is busy - every year... :-)\nThanks for the fast feedback.\n. vertical/horizontal - that's it.\n. The \"numbers\" on the wheel: Could the developer also use strings or double?\n. Maybe it would also be good if you write what features the wheel will have.\n. Where? \n. @ai212983 Thanks.\n. ",
    "claudiopastorini": "Sorry, I read it too late #34 XD. How could I do it \"on my own risk\"?\n. I resolve it :+1: \nFYI, \"on your own risk\":\nI modifiy onTouchEvent in AbstractWheel.java from:\njava\nif (items != 0 && isValidItemIndex(mCurrentItemIdx + items)) {\n    notifyClickListenersAboutClick(mCurrentItemIdx + items);\n}\nto:\njava\nif (isValidItemIndex(mCurrentItemIdx + items)) {\n    notifyClickListenersAboutClick(mCurrentItemIdx + items);\n}\nand in my OnWheelClickedListener:\njava\n@Override\npublic void onItemClicked(AbstractWheel wheel, int itemIndex) {\n    if (itemIndex == abstractWheel.getCurrentItem()) {\n        onTimeChangeListener.onTimeChange(times[abstractWheel.getCurrentItem()]);\n    } else {\n        abstractWheel.setCurrentItem(itemIndex, true);\n    }\n}\n. ",
    "daywong1119": "solved by calling \"invalidateItemsLayout(true)\"\n. ",
    "KayWu": "I did't find related setting methods in the library but edited the source directly to meet the need.\nIn WheelVerticalView.java & WheelHorizontalView,  change setSelectorPaintCoeff\nfloat p3 = (1 - ih*3/(float) h)/2;\nfloat p4 = (1 + ih*3/(float) h)/2;\nto \nfloat p3 = (1 - ih * mVisibleItems / (float) h) / 2;\nfloat p4 = (1 + ih * mVisibleItems / (float) h) / 2;\n. +1\n. ",
    "TigerSkinZhang": "I think it's a bug in WheelVerticalView\n. ",
    "tompad2": "Tried to make a manual install, think I got it working.....but got another error (see other issue - #50 )\n. Solution - I copied the files to  the location again. Android Studio must have changed something....\n. +1\n. I'm not an expert but I think you can do it by an array with just the numbers/text you want, I managed to set it to 1, 2, 3, 4, 5, 10, 15, 20, 25 etc.\n. Hmm I am not sure what you are looking for......any code??\n. ",
    "snasrudeen": "/\n     * Scroll the spinnerwheel\n     \n     * @param itemsToScroll items to scroll\n     * @param time          scrolling duration\n     /\n    public void scroll(int itemsToScroll, int time) {\n        int distance = itemsToScroll * getItemDimension() - mScrollingOffset;\n        onScrollTouched(); // we have to emulate touch when scrolling spinnerwheel programmatically to light up stuff\n        mScroller.scroll(distance, time);\n    }\nThe above function will call when you calling setCurrentItem(pos) . \ngetItemDimension() Returns base dimension of base item \u2014 width for horizontal spinnerwheel / height for vertical.\nIn onCreate method the view does not get measured completely. So it return 0 always.\nUse handler to set current item after few seconds like below\nHandler handler = new Handler();\n        handler.postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                BpmWheel.setCurrentItem(pos);\n            }\n        }, 50);\n. ",
    "rejochandran": "Yup !\n. That's great news ! will try !\n. ",
    "pellyadolfo": "but then it would be limited to a subset of numbers....\n. Hi, sorry, as the project is not very dynamic now, i missed your responses. Sorry about that.\nA sample code could be this wheel defined in a layout.xml\n<com.myapplication.util.spinnerwheel.WheelHorizontalView\n                xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n                android:id=\"@+id/wheel\"\n                android:layout_width=\"0dp\"\n                android:layout_weight=\"3\"\n                android:layout_height=\"match_parent\"\n                android:background=\"@drawable/button_selected_medium\"\n                app:visibleItems=\"2\"\n                android:visibility=\"gone\"/>\nand in the Java code:\nfinal AbstractWheel from = (AbstractWheel) findViewById(R.id.wheel);\n        NumericWheelAdapter fromAdapter = new NumericWheelAdapter(this, 100, 300, \"%02d\");\n        fromAdapter.setItemResource(R.layout.wheel_text_centered);\n        fromAdapter.setItemTextResource(R.id.text);\n        from.setViewAdapter(fromAdapter);\nI would expect in the numeric adapter an option to increment the wheel by steps. The problem is that my wheels can range thousands and navigating item by item can be a bad user experience. I do not think is a good idea hardcoding the array number when the number of items is quite large.\n- e.g. in Java: \n  new NumericWheelAdapter(this, 100, 300, 5, \"%02d\"); being the 4th argument the step increase\n- e.g. in XML:\n  android:increment=\"5\"\nAnother thing I would like is to increase the spinning speed of the items so a simple scroll progresses a larger number of items.\nI have been browsing the code and both task looks complex to implement.\nBut on the other hand, my wheels looks great, i like the project.\n. I hacked by adding an increment variable to methods of NumericWheelAdapter.\n```\n@Override\npublic CharSequence getItemText(int index) {\n    if (index >= 0 && index < getItemsCount()) {\n        int value = (minValue + index) * increment;\n        return format != null ? String.format(format, value) : Integer.toString(value);\n    }\n    return null;\n}\n@Override\npublic int getItemsCount() {\n    return (maxValue - minValue + 1) / increment;\n}\n```\n. ",
    "riyazJ": "yes, getting same error when i setCurrent item to 0 on sample app.\n. you are welcome buddy\n. ",
    "abhimanyu209": "I am getting the same issue, im not sure whether its a problem in importing the project, but the WheelHorizontalView is not even inflating in the xml and giving this error.\nAlso, has the project been put on maven central yet?\n. ",
    "JoelJay": "Edit the recreateAssets() method of  AbstractWheelView class like this:\nprotected void recreateAssets(int width, int height) {\n    if(width <= 0 || height <= 0) {\n        return;\n    }\n    mSpinBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\n    mSeparatorsBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\n    setSelectorPaintCoeff(0);\n}\nIt works for me.\n. ",
    "arshu-dev": "I got the solution on my own.\nJust need to call the methods in the ArrayWheelAdapter.\nBelow is the example.\nAbstractWheel wheel_date = (AbstractWheel) rootView.findViewById(R.id.date_wheel);\nString[] numbers = new String [7];\nnumbers = new String[] {\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"};\nArrayWheelAdapter  arrayWheelAdapter = new ArrayWheelAdapter(rootView.getContext(), numbers);\n        arrayWheelAdapter.setTextColor(0xffff1744); // Cannot use HEX Codes have to use integer colors\n        arrayWheelAdapter.setTextSize(20);\n        arrayWheelAdapter.setTextTypeface(Typeface.createFromAsset(getAssets(), \"fonts/Roboto-Light.ttf\"));\n        wheel_date.setViewAdapter(arrayWheelAdapter);\n        wheel_date.setInterpolator(new AnticipateOvershootInterpolator());\n. I had the same issue #60 \nI got the solution on my own.\nJust need to call the methods in the ArrayWheelAdapter.\nBelow is the example.\nAbstractWheel wheel_date = (AbstractWheel) rootView.findViewById(R.id.date_wheel);\nString[] numbers = new String [7];\nnumbers = new String[] {\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"};\nArrayWheelAdapter  arrayWheelAdapter = new ArrayWheelAdapter(rootView.getContext(), numbers);\n        arrayWheelAdapter.setTextColor(0xffff1744); // Cannot use HEX Codes have to use integer colors\n        arrayWheelAdapter.setTextSize(20);\n        arrayWheelAdapter.setTextTypeface(Typeface.createFromAsset(getAssets(), \"fonts/Roboto-Light.ttf\"));\n        wheel_date.setViewAdapter(arrayWheelAdapter);\n        wheel_date.setInterpolator(new AnticipateOvershootInterpolator());\n. ",
    "fakir22": "I had the same question. You solution works like a charm, thanks arshu-dev ;)\n. ",
    "sariego": "hey,\nreplace\njava\ndependencies {\n    provided files('libs/nineoldandroids-2.2.0.jar')\n}\nwith\njava\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n}\nin library/build.grade\nthere seems to be a problem with the provided directive\nHope it helps\n. ",
    "sirvanparaste": "I have the same problem, the above solution did not work for me. \n I relace that with the following line and is ok now :+1: \ndependencies {\ncompile 'com.nineoldandroids:library:2.4.0'\n}\n. ",
    "ebadali": "Wel, you can always use ScrollTo(x,y).\nIn your case you might want to calculate the vertical position of the desired item. \n``` javascript\nmScrollView.post(new Runnable() { \n        public void run() { \n             mScrollView.scrollTo(0, mScrollView.getBottom());\n        } \n});\nHope this will help.\n```\n. ",
    "huss22us": "Yes , I have an application which uses the library heavily -- hope this could be fixed soon. ",
    "soroushjavdan": "compile 'com.github.ai212983:android-spinnerwheel:1aa14134af'\n. ",
    "nallwhy": "Oh, sorry. I added AbstractWheelCustomAdapter to that branch.\nBut it's also a good update. :-)\n. ",
    "amorenew": "just upgrade min sdk to 14 and use android animator\n. my fork\nhttps://github.com/amorenew/android-spinnerwheel\n. XML Attrs\n```\n            app:pickerBackground=\"#fcfcfc\"\n            app:pickerMaximum=\"12\"\n            app:pickerMinimum=\"1\"\n            app:pickerTextColor=\"#444\"\n            app:pickerTitle=\"Child Age\"\n            app:pickerTitleBackground=\"#FAFAFA\"\n            app:pickerTitleTextColor=\"#333\"\n            app:pickerTitleTextSize=\"15dp\"\n            app:pickerValue=\"1\"\n            app:pickerVisibleItems=\"3\"\n``\n. in my fork i added change text color`\nhttps://github.com/amorenew/android-spinnerwheel/blob/master/library/src/main/res/values/attrs.xml\n. ",
    "bhavikgandhi007": "is that possible selected color change,or selected item background change\nlike:\n\n. i want to change different textcolor for selected valuw and unselected value\n. ",
    "XAVlER-S": "@ai212983 The pleasure is mine : ). "
}