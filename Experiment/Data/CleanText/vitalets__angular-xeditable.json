{
    "vitalets": "Hi, it was the first version just to get it working.\nI will try to adopt for older angular for sure.\nthx!\n. fixed in 0.1.2.\n. Ok, will do it.\nThanks!\n. Yes, you can always use ||'Empty' to show some text for empty values. But looking on it I think that it would be more convenient to have global emptytext option. and just use\nhtml\n<a href=\"#\" editable-text=\"user.name\"></a>\nMarking as enhancement, thx.\n. I think global emptytext param can be easily maintained via $rootScope\njs\n$rootScope.emptytext = 'empty';\nand then in html\nhtml\n<a href=\"#\" editable-text=\"user.name\">{{ user.name || emptytext }}</a>\nSo currently will keep it out.\n. @sarath2 \nif you want to have single editable element, there is no need to wrap it into form tag.\nIf you want to have several editable elements and submit them together, you shoud wrap it into form with editable-form directive:\nhtml\n<form editable-form>\n   <a href=\"#\" editable-text=\"user.name\">{{ user.name | uppercase }}</a>\n</form>\n. Could you make a jsfiddle to demonstrate the issue?\nuse this as template http://jsfiddle.net/NfPcH/3\n. Closing as too old.\nPlease feel free to reopen if you still have this issue.\n. hi,\nplease recheck that you added module dependency var app = angular.module(\"app\", [\"xeditable\"]);\nIf it's ok but still not working please try starter template: http://vitalets.github.io/angular-xeditable/zip/angular-xeditable-starter.zip\n. yes, these are two very usefull features. \nWill add it for sure.\nThx\n. date added in 0.1.4.\nhttp://vitalets.github.io/angular-xeditable/#bsdate\n. It seems ui-select2 is not maintained now and possibly will be overwritten in plain angular style.\nSee https://github.com/angular-ui/ui-select2/issues/82\nAre you using ui-select2 maily for local or remote source?\n. @tobi-or-not-tobi there is active discussion of select2 here: https://github.com/angular-ui/ui-select/issues/1\n. Could you try with just released 0.1.2 in jsfiddle: http://jsfiddle.net/NfPcH/3 \nand let me know\n. ok :)\n\nBTW is it possible to edit only a specific cell and not a complete row (that is what I initially wanted and was looking for)?\n\nyes, just put editable element in cell without any wrapping forms.\n. It seems you mean this: http://vitalets.github.io/x-editable/demo.html\nI will think about popup mode for angular..\n. Not much, but I dont want to stick to bootstrap popover or some other third-party tooltip. Because every change of it brings lot of headache. And it pulls jquery that I hope to avoid for angular.\nIt would be nice to find some pure angular-style tooltip and fork it.\n. you may update stage.from.name in onaftersave function:\njs\n  $scope.updateStage = function(stage) {\n    var selected = $filter('filter')($scope.allLocations, {id: stage.from.id});\n    stage.from.name = selected[0].name;\n  };\nUpdated fiddle:\nhttp://jsfiddle.net/NfPcH/4/\n. To use this datetimepicker it should be wrapped into angular directive, e.g. <datetime ng-model=\"...\">\nAfter then you can make editable-datetime directive like this:\njs\napp.directive('editableDatetime', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableDatetime',\n      inputTpl: '<datetime></datetime>'\n    });\n}]);\nand use it:\nhtml\n<a href=\"#\" editable-datetime=\"user.lastVisit\"> {{ user.lastVisit }} </a>\nI plan to add date/datetime support in the future.\n. currently not.\nxeditable is just container for any angular directives assuming user input.\nWhen someone will create <datetimepicker> directive, integration will take a few lines of code..\n. looks very nice! \nCould you create new issue for datetimepicker with this link - I will mark it as feature to implement in the next release.\nthx!\n. It was the bug exactly with minification. Fixed in 0.1.3.\nThanks for feedback!\n. good option, will add in 0.1.4\nthx!\n. fixed via buttons=\"no\" attribute.\n. You are going right way! The only thing confusing me is that ng-model defined inside wrappong div not timepicker directive itself. Could you check timepicker itself can it work with syntax:\nhtml\n<timepicker ng-model=\"mytime\" hour-step=\"1\" minute-step=\"1\" show-meridian=\"false\"></timepicker>\n. such behavior fixed in 0.1.4.\ncould you re-check with custom time directive?\nthx\n. ok. \nI plan to include timepicker to future release.\n. @dreadjr could you give an example what you mean?\n. github eaten your link examples, put it like this <a ...>.\nBut anyway, your final task is to preserve original value and let user reset to it, yes?\nfirst , just to notice, xeditale writes to model only after user clicks on submit button. if you change text and then press cancel - your model will not change. is not it what you need?\n. closing as too old.\nPlease feel free to reopen if you still have this issue.\n. currently such behavior not implemented.\nAs workaround you can try to do it manually - bind to document click and close editables.\nGood idea, will do it in next release. thx!\n. fixed in 0.1.5 with blur parameter.\nBy default only one element can be in edit mode now.\n. could you suggest some js plugin for it?\n. Hi, not published in bower yet. will do it asap, thanks!\n. Now works:\nbower install angular-xeditable\n. @8bitDesigner good point!\nAssigning value to promise was fixed in current angular 1.2, see https://github.com/angular/angular.js/pull/2854\nI've replaced it in your fiddle and now it works:\nhttp://jsfiddle.net/pP2jZ/3/\nAlso there are two issues you will find:\n1. editable-empty class still applied even if promise resolved with non-empty value. I'll fix it in 0.1.5.\n2. status not shown correctly when using showStatus() method. It's because inside used direct access to $scope.user.status that is pormise and cannot be accessed directly (in fact, value is in $scope.user.$$v ).\nThe solution is to put expression right into template - then angular will resolve everything automatically, see my fiddle third sample:\n{{ (statuses|filter:{value: user.status||0})[0].text || 'Not set' }}\n. Also could you give a short exlanation and example how you use modelkey?\n. Number type added in 0.1.5.\nthank you!\n. As ng-repeat creates new scope for each item you should not have unique form names, just set it to some value:\nhttp://jsfiddle.net/NfPcH/22/\n. you are welcome :)\n. yes, it's good option. The current solution is here (my last comment): https://github.com/vitalets/angular-xeditable/issues/41\nI will think may be add another way to activate it..\n. @eugene-d could you show full source code or make a fiddle?\n. i get it, it was bug for sure. fixed in dev.\nthank you!\n. good option!\n@plandem could you share the link to ckeditor directive?\n. ok, thanks, I will have a look!\n. @ashernevins textAngular look very nice.\nIf you have time, it would be greate to you make PR with editable-wysiwig directive..\n. hi @plandem there is no dublication of code as angular-xeditable just uses controls defined in angular-ui.\nI will add this dependency as a note to documentation. \nThanks to pointing on that.\n. no, jquery is not needed.\nit's just for documentation page..\n. It relates to onblur parameter - what should be done if control losses focus. \nThere can be 3 possible values: cancel, submit, ignore.\nI plan to add it in 0.1.5\nbtw, what behavior you expect?\n. Related to https://github.com/vitalets/angular-xeditable/issues/14\n. fixed in 0.1.5 with blur parameter.\n. ok, I also plan to collect all options in one table for convenience.\n. hi @christianacca fixed in dev. thanks for pointing!\nPlease note that to you should provide e-name attributes as well as in normal angular forms.\n. @christianacca \ncould you describe a bit the usecase when you need it?\n. yes, onaftersave is called only when changes are applied.\nI will think about onclose / oncancel callbacks..\nBut also, didn't you try  $visible property of form?\nI mean\nhtml\n<a editable-text=\"user.name\" e-form=\"myform\">\nNow scope.myform.$visible flag refers to form's state.\n. thank you! :)\nFor adding new records you may have a look on just released 0.1.5 docs http://vitalets.github.io/angular-xeditable/#editable-row\n. hi @christianacca \nI think creating new row already in edit mode is good idea.\nI've updated docs: http://vitalets.github.io/angular-xeditable/#editable-row\nTo have  whole table in edit mode you can also use ng-init directive..\n. hi @christianacca \nyes I think these hooks can be usefull anyway. \nI plan to add oncancel - called when form is cancelled and onhide - called when form both saved or cancelled. \nI'll reopen the issue to keep it in mind for nest release.\n. could you show me a fiddle?\nfor me works http://jsfiddle.net/NfPcH/59/\n. @igler \n1. could you try it wtih editableOptions.blur = 'ignore';?\n2. in what browser it appears?\n. @igler angular-strap requires jquery + bootstrap.js, I'm not happy to pull these dependencies.\nAngular-ui is much more pretty. I think the best solution is to fork tooltip.js as starting point for popup. And keep it inside angular-xeditable to allow non-angualr-ui projects use it.\n. Basically, to have popup you should change $show and $hide methods of editable-factory: https://github.com/vitalets/angular-xeditable/blob/dev/src/js/editable-factory/controller.js#L257\nPlease feel free to fork the repo and try to add popup. I would be happy to help and merge\n. 1. mode=\"popup | inline\" should be added to editableConfig with default value inline and then used be editable factory controller. Form should just call show() of each field and dont care how it will be displayed.\n2. Yes, directives should stay the same.\n. @ryanlanciaux looks very nice! it should be definetly added in future version.\n@igler is plain bootstrap popover works correctly with accordion border?\n. We need wait this pull request to be merged https://github.com/angular-ui/bootstrap/pull/1046 to allow use html in popover content\n. yes, fighting with this bug but can't found exact reason yet..\n. hi @christianacca \nplease try with just released 0.1.6\nalso note that <button> without type attribute works as submit by default. I've seen it in your plunkr..\n. hi @christianacca \nI've updated fiddle to get it working without custom directive and user.isFocused flag.\nIt uses some undocumented features, I think I will add it to docs.\nhttp://jsfiddle.net/gpgD4/10/\n. y're welcome )\n. hi @christianacca good point.\nAdditional hook is not needed. \nYou can attach validator via e-* attributes, e.g. e-ng-minlength=\"5\". You will see that contorl gets ng-invalid class.\nThe only problem now is how to configure validation messages for different error types.. \n. @kanakiyajay could you make a jsfiddle to show you your task and let me check it.\n. yes, absolutley!\n. hi @johntom \nit was just a typo in angular.js path.\nI ve inserted it from google cdn - now it works: http://plnkr.co/edit/YCT1YjlmPAyjiiLu3RQ3?p=preview\n. totally agree, good feature.!\nI plan to add two directives: checklist and radiolist.\n. You may set e-ng-keypress=\"keypress($event, rowform)\" and submit if keycode is 13:\njs\n    $scope.keypress = function(e, form) {\n        if (e.which === 13) {\n            form.$submit();\n        }\n    };\nNote to use angular 1.2.x\nhttp://jsfiddle.net/NfPcH/85/\n. @chatelardbastien totally agree.\nmaybe prop('disabled') will do the job. will fix in the next release.\nthanks!\n. hi @eugene-d \nas I checked it works if there is value and label in ng-options: http://jsfiddle.net/F48Cy/1/\nBut for sure x-editable select should be the same. i will look deeper and write here.\nthx!\n. currently not.\nmark as enh, thx!\n. It is possible already:\nhttp://jsfiddle.net/NfPcH/216/\n. You can do it also - as form variable exposed into scope: http://jsfiddle.net/NfPcH/219/\n. no, it's normal behavior. To change it - set\njs\napp.run(function(editableOptions) {\n  editableOptions.theme = 'bs3';\n  editableOptions.blur = 'ignore'; // don't hide on blur\n});\n. When you expose form variable it is considered that you are responsible for show/hide input.\nSo I've added ng-click=\"textEditForm.$show()\" - now it goes to edit mode automatically but also can be triggered by user:\nhttp://jsfiddle.net/NfPcH/310/\n. maybe it's not clear from docs, but it's possible already.\nWe define e-form attribute giving access to form variable and can call $show() in any anguar handler, e.g. ng-dblclick.\nSee http://jsfiddle.net/NfPcH/152/\n. Hi, could you show example what you mean?\n. ok. It should work as usual: http://jsfiddle.net/NfPcH/147/\n. For that case there is a shown attribute, but it not supported in single editable element yet.\nI've made it with editable forms:\nhttp://jsfiddle.net/NfPcH/215/\nand added issue: \nhttps://github.com/vitalets/angular-xeditable/issues/48\n. foggot scope.$apply.\nthank you!\n. angular-xeditable has own activation method, so we need to apply select() in the next tick:\nhttp://jsfiddle.net/NfPcH/153/\n. @schadedk good point.\nfirst, I've modified a bit your fiddle to make measurement more clear: showing counter inside ng-repeat bring it to recursion. We should display counter in console:\nhttp://jsfiddle.net/CuLrm/3/\nSecond, I've checked native angular input inside ng-repeat - it works the same way, triggers $digest on every key press.\nYour point looks correct - we should not trigger $digest loop on every keypress as we want only update model finally. But in practise - as deep as i know angular - it's impossible, because every single change leeds to $digest cycle. \nTo illustrate it I 've added a tiny directive that just listen click - and every click performs repeater to update counter (see in console) http://jsfiddle.net/CuLrm/4/ \n. @schadedk you solution works but I think the more right way not to watch hidden $data variable,  you may watch\ndirectly value of first select.\nPlease have a look:\nhttp://jsfiddle.net/NfPcH/214/\n. You are welcome :)\n. hi @devmondo it's good point.\nI think the best way for that is to write custom directive using editableFactory. \nFor example, have a look on:\nhttps://github.com/vitalets/angular-xeditable/blob/master/src/js/directives/select.js\nYou can create own editable widgets the same way.\nFrom my expierence custom widget is not only about template, it also requires some methods that is better to incapsulate into directive.\n. ok :) feel free to ask or make pull request.\n. Do you mean something like this: http://jsfiddle.net/NfPcH/217/ ?\n. I understand your task, it seems interesting. Currently there is strong relation between control and form.\nIf control is a part of big form - it behaves like all other controls of form.\nIf control is single - it operates individually.\nFor your task I think you should use individual controls not wrapped in one big form.\nBut when button \"Edit all\" pressed - programmatically show all controls without ok/cancel buttons (it is not possible now to dynamically change button visibility, you can research this)\n. hmm.. you just set model value in controler initialization and it's became initial, e.g. set user.name = 'vitalets';\nOr you mean something else?\n. hi, @Deraen you raised good point.\nWhen loading content via templateUrl or ng-include it's always creates new scope and form variable created there and can't be linked with elements.\nThe only solution in current code that I found is:\n1. for directive - to use template instead of templateUrl\n2. for ng-include - to load only buttons from separate file, but <form> tag put in html.\nPlease have a look on updated plunker http://plnkr.co/edit/ljHaiCdPa4hm6vigBfGY?p=preview\nand share your thoughts.\nthx!\n. Yes, directive with scope: false does not create scope, but templateUrl that works like ng-include does.\nI'll keep issue open to think about it in hte future ..\n. @myisis your last comment is quite correct. render is exactly for dom manipulation. \nIs you task is solved now or there is something unclear?\nSorry for missing documentation of creating custom directives. Plan to do it in future when it will be more or less fixed. \n. hi @myisis \nYour last comments moved me to some thoughts and investigation.\nIt seems to me that bounds directive should not be directly based on editableFactory. \nBecause 2 main ideas of editable are:\n1. field by field editing (not many at once)\n2. same markup in view state and edit state\nIf your task fulfills it - the solution will be like this:\nhttp://jsfiddle.net/NfPcH/362/\nYou can pack it into simple directive without editableFactory stuff.\nAnother case, if you want to edit both bounds at once: \nHere, you want to edit complex object {lower: 0, higher: 100} that can be displayed in varity of ways.\nFor such case normal html form is imho more suitable way.\n(I know that mentioned address input of x-editable implements it but currrently I'm sure it's not good sample and confusing people)\nSo, I tryed to solve it without angular-xeditable - and it looks very nice. The only problem was angular's 2-way-binding that breaks the idea of cancel button (as changes comes instantly). \nI ended up with simple lazy-model directive that saves changes only when form is submited.\nI described it in corresponding issue on stackoverflow\nFinally, second solution of your task without xeditable is: http://jsfiddle.net/H4V9D/1/ \n. @myisis you are absolutely right about having consolidated widget, such a blackbox, where you provide input datos and get result (that is always automatically validated and correct) \nIn example with bounds you expect some editor ui where you provide current lower and higher values and want to get new changed values, automatically validated that lower < higher.\nI agree totally. My point is that using traditional html form is more suitable for that task then editable approach as is. \nPlease have a look on this updated fiddle: http://jsfiddle.net/H4V9D/2/\nI've created my-bounds directive that has pretty simple usage:\nhtml\n<my-bounds lower=\"myBounds.lower\" higher=\"myBounds.higher\" visible=\"formVisible\">\nIf you see some pitfalls here - feel free to write.\nI'm not against creating custom xeditable widgets, of course :) But from my vision it should be simple building blocks relevant to standart value types (string, number, date, etc). It seems more satisfying core idea of in-place-editing: click on something and edit instantly. Complex objects requires complex forms and various validtion rules.\nThey also should be packed into directives (and angular is awesome for that!) but these directives are on another level than xeditable ones.\n. Yes, validation is important point for lazy-model.\nAngular way is instant validation - so we can disable submit button when form became invalid. \nI've made some fixes:\nhttp://jsfiddle.net/LUhTu/2/\nBut we cant totally rely on disabled submit button. for that reason I've modified lazy-model to save new values only if form is $valid.\nhttp://jsfiddle.net/LUhTu/3/\nLet me know if there are any questions or ideas, because lazy-model approach look very interesting for me)\n. Yes, we should manually call validate() when showing form.\ncheck http://jsfiddle.net/LUhTu/4/\n. hi, please try shown=\"true\" attribute, it is exactly for that.\n. hi @askhogan , thanks for pr!\nYou should change files in src directory, and then dist will be generated in grunt task.\n(see https://github.com/vitalets/angular-xeditable/blob/master/src/js/directives/input.js )\n. see https://github.com/vitalets/angular-xeditable/pull/55\n. hi @diaspar \nIt's possible and depends on your updateFinance function. \nIn following case it should work correct:\njs\n$scope.updateFinance = function(data) {\n  chart.data.rows[0].c[1].v = parseInt(data, 10);\n}\n. hi @mrcmorales \nI think the best way is following:\nin controller:\njs\n$scope.emptyVal = [{value: '', text: 'Other'}];\nin view: \nhtml\ne-ng-options=\"s.value as s.text for s in emptyVal.concat(statuses)\"\nsee http://jsfiddle.net/NfPcH/374/\n. Hi, \ndo you use e-ng-change ?\nor make a simple demo fiddle to show your code.\n. @ChinaXing thanks for posting answer here. Will add to docs.\n. @sfresnel I think we should not make library too smart, sometime these event can be usefull. \nYou can just filter events by target, have a look at http://jsfiddle.net/kB8p5/6/\nthx\n. thanks, will fix it!\n. hi, yes you can.\nFirst you should chekc your version of angular where ngBlur appears.\nAnd then use e-ng-blur attribute n the original element to be transformed to ng-blur on the input. \nPlease have a look:\nhttp://jsfiddle.net/NfPcH/467/\n. Hmm.. explain more about pagination?\n. yes, you may pass any additional parameter to identify each instance, e.g. onbeforesave=\"check($data, 'field_id_1')\".\nAnd in controller:\njs\n$scope.check = function(data, field_id) {\n...\n}\n. hi, it's not ready yet.\nYou can watch #35 to get notified when it's done.\nI plan to implement it soon.\n. hi, @mrcmorales \n1. about edit mode on page load - it's just copy-paste typo, remove show=\"inserted == user\" and it's ok.\n2. about correct values in your dropdowns - i think data structure is a bit complex. My suggestion is to add option.selected property instead of storing whole array of selected options.\n   Please have a look:\n   http://jsfiddle.net/86U29/27/\n. Could you try to rewrite it without using $index ?\nmay be store selected options directly in product_options..\nhave a look on my example with correct initial values:\nhttp://jsfiddle.net/86U29/37/\n. hi, could you point exactly which line you needed to change?\n. ok :)\n. yes, editable-form should be without value, or with empty value. \nI will update docs, sorry for that.\nps:\nInternally editable-form with value is used to attach editable methods (e.g. $show(), $hide()) not to form variable, but to some other variable - as for single editable element <form> may be created/deleted several times and does not have persistent variable in scope.\n. hi, @fynnfeldpausch \nI think it should be \njs\napp.run(['editableOptions', function(editableOptions) {\n    editableOptions.blur = 'submit';\n}]);\nI will try to update docs, thanks!\nps: also you can have a look on ngmin minimizer that resolves such cases automatically.\n. hmm, are there any errors in console?\n. oh, sorry, it's the problem of proper documentation. \nThere is separation of blur behavior for single editable elements and forms.\njs\napp.run(['editableOptions', function(editableOptions) {\n    // if you are using single editable elements\n    editableOptions.blurElem = 'submit';\n    // if you are using forms\n    editableOptions.blurForm = 'submit';\n}]);\n. hi, I think it should be done with angular ng-click and class binding.\nI've created demo: http://jsfiddle.net/NfPcH/679/\n. hi, thanks for reporting. I'll try to investigate into this issue..\n. Hi everyone!\nI'm really sorry for having this project unsupported for such a long time. Please have a look on my answer here\nConcerning angular-xeditable I also see big potential of it and would appreciate if someone can help me to maintain. If you can find some time please write me at noginsk@rambler.ru \nThank you!\n. hi @eugef \ndo you have permissions to publish angular-xeditable to npm ?\n. Contacted with https://www.npmjs.com/~akalinovski, he provided npm publish access to @eugef.\n. opening test/e2e/dev-test.html in browser is not work?\n. ok, it seems not to be a problem.\nI my current projects I use this:\nbash\nnpm i http-server -g\nhttp-server test/e2e\nit starts start static web server in specified directory. \n. @lalitkapoor \nI just re-checked: yes you should start server in root and then open in browser\ntests/e2e/doc-test.html  - to test actual documentation examples work\nor\ntests/e2e/dev-test.html - to run tests during development \nThe second is really broken because of Unknown provider: editableIconsProvider <- editableIcons\nI think some commit has broken it. It would be great if you investigate and find error.. \n. I think this change could be removed from pull request.\n. Could you please edit comments for number type and if possible, make it separate pull request to keep things clean.\nthx\n. ",
    "johntom": "Hi,\nMy test fails with 1.2.0.rc-2 and rc-3. \nsee http://plnkr.co/edit/mFVl7QVPwVJRoQwWMd6V?p=preview\nThanks for angular-xeditable, it's great!\nJohn\n. Thanks, works great and glad to see jquery issue gone.\nJ\n. My mistake\n. Hi,\nSo what I really trying save a decimal (float) number so I used editable-text which caused the problem. The following fix using editable-number with e-step=\"0.1\" works great!\nThanks,\nJohn\n        span e-style=\"width:120px\" editable-number='lineitem.qty' e-name='qty' step='0.01' e-form='rowform' onbeforesave=\"checkQty($data, id)\"\n         {{ lineitem.qty  }}\n       /span\n$scope.checkQty = function (data, id) {\n                console.log(' data. ', data)\n                if (is_float(data) !== true) {\n                    return \"must me a number\";\n                }\n            };\n            is_float = function (v) {\n                return !isNaN(v) && isFinite(v) &&\n                    (typeof(v) == 'number' || v.replace(/^\\s+|\\s+$/g, '').length > 0);\n            }\n. ",
    "SeyZ": "Pull request available at #4 \n. ",
    "sarath2": "It can be handle \n<a href=\"#\" editable-text=\"user.name\">{{ user.name||'Empty' | uppercase }}</a>\n. Nope. I mean, I have a form inside with varies controls. When I put one xeditable input box inside this form,it not working properly(Not shown text-box when click the link).\nInside div working properly.\n. ",
    "devmondo": "hi, \nsorry to bring this up but i am also facing same thing, i have followed all steps in demo, when i click on an editable element nothing happens\n. :+1:  this would be awesome\n. thanks for reply man, \nthis looks easy in the code you should :)\ni will work on it and see if my current poor skills can get me anywhere :)\n. thank you :)\n. ",
    "dsidharta": "vitalets,\nHere's an example: http://jsfiddle.net/eJnT9/1/. In my case, I'm using a form to mainly layout the fields, however, there may be one or two values that I'd like to update in-place.\nThanks for looking into this, and let me know if you need more info.\n. ",
    "dukehoops": "Hi, vitalets:\nseeing the same - clicking link on editable-text has no effect if tag is placed inside a form. created a repro using your starter template (but updated AJS to 1.2.9): http://plnkr.co/edit/NgMZ3DydXJKgddJ6gZyt?p=preview\n. ",
    "lionelB": "Hello,\nI have the same problem here. I use a form to layout element cause I use a bootstrap3 theme. I understand that editable-form is mandatory for submiting the whole forms, but x-editable should work fine for simple field editing even for fields inside a form.\nalso your angular x-editable is a great work !\n. ",
    "raniejade": "You have to explicitly call <form-name>.$show() or $form.$show() (if your form has no name attribute) for it to work.\nhtml\n<form editable-form>\n   <a ng-click=\"$form.$show()\" href=\"#\" editable-text=\"user.name\">{{ user.name | uppercase }}</a>\n</form>\nIt won't automatically hide, either you need to call $form.$hide().\nIMO, the problem here is enforcing forms with editable-* elements to have the editable-form attribute. I can think of some use cases that wont require what editable-form has to offer.\n. ",
    "ryan-kimber": "Same issue - using <form> elements in our application to take advantage of Bootstrap 3 layout, but with editable-form declared on the form, none of my editable-text fields will open up when clicked.\nDemonstrated in this plunkr: http://plnkr.co/edit/NgMZ3DydXJKgddJ6gZyt?p=preview\n. ",
    "snario": "Having the same issue, anyone have a fix?\n. I'm using an editable-select and this does the following:\n- doesn't fix the styling issue\n- allows me to click on it and the select dropdown appears\n- doesn't allow me to save or cancel\n  \u1427\nOn Fri, Jun 13, 2014 at 11:59 AM, John Freeman notifications@github.com\nwrote:\n\nHere's a fix, until the library can incorporate this logic internally:\n{{ model.value }}\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/6#issuecomment-46028619\n.\n. http://plnkr.co/edit/3148OUwbdxe89QRhPyTA?p=preview\n\nJust copied the above plunker from above and moved the select inside the form and added your fix.\n. ",
    "thejohnfreeman": "Here's a fix, until the library can incorporate this logic internally:\nhtml\n<a href=\"#\" ng-click=\"$form.$show()\" e-ng-blur=\"$form.$hide()\" editable-text=\"model.value\">{{ model.value }}</a>\n. Mind giving a minimal example or fiddle?\n. It's not getting the editable-click class applied, so I'd dig in the code to see where it's failing. I'm not using the editable-select, so I don't have your problem.\n. Maybe check out ag-grid if you want editable cells in a table.. ",
    "ddasilva": "Also experiencing this problem. @thejohnfreeman's fix does not work for me.\n. ",
    "promolic1": "Hello\nI am on the same boat.\nAlso, the workaround doesn't show the save/cancel buttons.\n(And particularly I am interested in getting this working with a table, or at least with the manual trigger example and I am not able to get this workaround working with this use cases).\n. At the end, to be able to use this I dropped the outer form to use the inner forms for my tables. Unfortunately this disables the submit on enter function and the form validation.\n. Thanks @dittonamed I hope to try your idea soon.\nBut also, the issue with this approach of getting this working, probably is something worse (for some people). I am not fully sure, but having a form inside another form isn't valid HTML.\nBut well, personally if it works crossbrowser, I will be happy enough.\n. @tasneem93 Well, probably \"solving\" this is complicated. Maybe it means to change the whole idea of how xeditable works, because is designed to create forms dynamically. And also we can't change how html works to allow forms inside another forms. Not sure if this will be \"solved\" soon...\n. ",
    "bfloydd": "Having the same problem here. As promolic1 said, the workaround doesn't show the save/cancel button, so its out. AngularJS uses \"novalidate\" on the form tag to enable its own validation, so it might be that xeditable and Angular's form validation are incompatible without modifying the source of angular-xeditable to ignore the form tag.\n. Thanks promolic1. For anyone who might want to use single xeditable form elements (without whole form editing) + use angular's form validation, its currently not possible. They are mutually exclusive at current revision. But with a small hack you can have both right now. In editableDirectiveFactory, look for the block of code following this comment: \n// element wrapped by form\nif(ctrl[1]) {\n..\nand add \"hasForm = false;\" after the else, and there you have it. Of course this will break whole form editing capability of xeditable and it is definitely not a permanent fix\n. ",
    "KendallPark": "+1\nAlso having this issue.\n. +1\n. ",
    "pmuilu": "Just bumped to this very same issue as well. Simply having this does not work:\n<form name=\"form\" id=\"form\" action=\"#\" method=\"POST\">\n<div class=\"note\"> <p><a href=\"#\" editable-textarea=\"note\" e-rows=\"7\" e-cols=\"40\">#{ note || \"Add note\" }#</a></p></div>\n</form>\n. ",
    "bdhillon": "I am facing same issue:\n\n  Some normal fields\n only one field which is xeditable, but that does not work\n\nGetting following error on web console: Form with editable elements should have editable-form attribute.\nI don't want to use editable-form with  tag, but just want one field to behave like xeditable. Can't move this field outside form because this comes in middle of form :(\n. ",
    "onlineassociates": "@dittonamed @promolic1 Thank you for the solution. Yes,  it works but it breaks the form editable capability. I have modified a bit to work with form edit option.\njavascript\n hasForm = eFormCtrl.$addEditable;\n\n. ",
    "maxaon": "+1 I need edit only sinle items by click, not entire form.\n. ",
    "Zeikko": "I also have this issue.\n. ",
    "ispringer": "+1 - please fix this.\n. ",
    "Fost": "+1 fix pls\n. ",
    "andrejbranch": "+1 fix please \n. ",
    "VictorRicha": "+1\n. ",
    "ganqqwerty": "Yes, there is still such issue. What I need is the ability to create a conventional form with inputs, select boxes AND xeditable elements, like here: \n\n. this is so cool, thanks! A must-have feature!!!\n. #6 , I've been waiting for it for so long...\n. ",
    "gunta": "+1\n. ",
    "assisrafael": "How about something like this http://jsfiddle.net/NfPcH/3704/ ?\n. See if this fiddle contains the solution http://jsfiddle.net/NfPcH/3704/ \n. You can change the onbeforesave function to achieve this behavior: http://jsfiddle.net/NfPcH/3703/\n. Can you provide a live example of your problem?\nYou can use one of the following examples:\n- http://jsfiddle.net/NfPcH/3\n- http://plnkr.co/edit/BjWwXIlYyyLvRnVwO8m8?p=preview\n. I'm not sure if this is what you suggesting: jsfiddle.net/NfPcH/3700/\nIf not let post an example here.\n. You have tested in which version?\n. Can you provide a live example?\nYou can use one of the following examples:\n- http://jsfiddle.net/NfPcH/3\n- http://plnkr.co/edit/BjWwXIlYyyLvRnVwO8m8?p=preview\n. Maybe e-ng-show=\"false\" is what you whant. See the documentation\n. Can you provide a live example?\nYou can use one of the following examples:\n- http://jsfiddle.net/NfPcH/3\n- http://plnkr.co/edit/BjWwXIlYyyLvRnVwO8m8?p=preview\n. It seems that ui bootstrap documentation link is broken. Access http://angular-ui.github.io/bootstrap and navigate through datepicker widget.\n. The problem is that you are using the same variable to control all fields. You need to isolate the scope, or use different variables for each field. Maybe writing a directive is more suitable for that.\n. Can you provide a breaking test case? See docs/demos/dev-form\n. Can you provide a live example?\nYou can use one of the following examples:\n- http://jsfiddle.net/NfPcH/3\n- http://plnkr.co/edit/BjWwXIlYyyLvRnVwO8m8?p=preview\n. Can you provide a live template?\nYou can use one of the following examples:\n- http://jsfiddle.net/NfPcH/3\n- http://plnkr.co/edit/BjWwXIlYyyLvRnVwO8m8?p=preview\n. Can you provide a live example?\nYou can use one of the following examples:\n- http://jsfiddle.net/NfPcH/3\n- http://plnkr.co/edit/BjWwXIlYyyLvRnVwO8m8?p=preview\n. If you include ng-click=\"usernameForm.$show()\" in the first x-editable you can achieve this behaveior. See http://jsfiddle.net/tq65xjhb/1/\n. ",
    "hectorj2f": "+1\n. ",
    "DoubleExposure": "This problem is still ongoing? No fix yet?\n. ",
    "JakeBecker": "+1\n. ",
    "denisariel": "+1\n. ",
    "niemyjski": "+1\n. Your basic samples run without any forms.. but If I have a table inside of a form.. it doesn't like it.\n. ",
    "phpniki": "+1 bug remain i have a problem with editable row table inside a form please help me\n. +1 any update?\n. +1 it open one time \n. i solved the problem sample code : \n\n                                    < span editable-bsdate=\"staff.birth_issue_date\" e-name=\"birth_issue_date\" \n                                          class=\"form-control\"\n                                          e-type=\"text1\"\n                                          e-is-open=\"opened.$data\" \n                                          e-ng-click=\"open($event,'$data')\"\n                                          e-datepicker-popup-persian=\"{{format}}\" \n                                          e-datepicker-options=\"dateOptions\" \n                                          e-date-disabled=\"disabled(date, mode)\" \n                                          e-close-text=\"\u0628\u0633\u062a\u0647\"\n                                          e-current-text=\"\u0627\u0645\u0631\u0648\u0632\"\n                                          e-clear-text=\"\u062d\u0630\u0641\"\n                                          e-name=\"birth_issue_date\" \n                                          e-ng-bootstrap-fix=\"staff.birth_issue_date\"\n                                          >{{ staff.birth_issue_date | persianDate:'yyyy/MM/dd'}}\n</span>\n\nangular code:\n```\n            $scope.dateOptions = {\n                formatYear: 'yyyy',\n                startingDay: 6\n            };\n        $scope.initDate = new Date(); //'2016-15-20'\n        $scope.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate', 'yyyy/MM/dd'];\n        $scope.format = $scope.formats[4];\n\n\n\n        $scope.opened = {};\n\n        $scope.open = function($event, elementOpened) {\n            $event.preventDefault();\n            $event.stopPropagation();\n\n            $scope.opened[elementOpened] = !$scope.opened[elementOpened];\n        };\n\n```\n\n. ",
    "ousmaneo": "+1\n. ",
    "summerrain": "+1\n. ",
    "mmilito": "I had this problem also ... was able to fix it by explicitly stating the value like this:\n   <form editable-form=\"\"> \nIn jade, the browser translates from this:\nform editable-form \nto this: \n   <form editable-form=\"editable-form\">\nIt seems the value of the attribute being set is the problem, so the browser needs to be worked around if it is adding the value if not specifically stated.\nHope this helps.\n. +1 -- the workaround does not seem to be working for me either.\n. ",
    "SaeedDarya": "+1 \n. ",
    "kevinspacey": "+1\n. ",
    "skidvd": "+1\n. ",
    "Petro-Kashpurenko": "+1\n. ",
    "olso": "+1\n. ",
    "tasneem93": "so many people having the same issue but still no updates? \n+1\n. ",
    "erossignon": "+1\n. ",
    "krema": "+1\n. any update on this?\n. ",
    "r-coursera": "+1\n. ",
    "Ledragon": "Work around/solution here?\n http://stackoverflow.com/questions/24996429/form-with-editable-elements-should-have-editable-form-attribute\nIt seems that setting the button type to button make it work (at least worked for me)\n. ",
    "ghost": "+1\n. Hi @vitalets ,\nI am working on dates with the same technique. \nHow can I achieve the same if I have multiple fields (ng-repeat) ?\nScenario:  I have month and day fields. Number of days in a month is displayed when the month is selected.. I have months and days inside ng-repeat.\nRegards,\nAjju\n. Yeah, please do so...\nOn Mon, 17 Apr 2017, 18:48 ckosloski, notifications@github.com wrote:\n\n@pavi95 https://github.com/pavi95 can you provide a jsfiddle/plunkr\nshowing your issue?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/45#issuecomment-294484066,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABT8aqZTQ5VTh2NBpG8jBhZjBBjvFuhmks5rw2bBgaJpZM4BM8i_\n.\n. Was able to solve with customized method ....\n. It seems like we can't change dynamically a type of an input in IE8 :(\n\nBy adding \"password\" as an allowed type in the x-editable module and by changing the attribute \"editable-text\" by \"editable-password\" all is working in IE8+, Chrome, Firefox, Safari :+1: \nvar types = 'text|email|tel|number|url|search|color|date|datetime|time|month|week|password'.split('|');\n<a editable-password=\"user.password\" e-required>********</a>\n. @ehsan-hakimi @ckosloski  Hello! I am new to angular and I'm having the same problem. I have a form\n<form editable-form name=\"rowform\" ng-show=\"rowform.$visible\" class=\"form-buttons form-inline\"\n                        shown=\"inserted == item\">\n                    <button type=\"submit\" ng-disabled=\"rowform.$waiting\" class=\"btn btn-primary editable-table-button btn-xs\" ng-click=\"saveNote(item)\">Save</button>\n                    <button type=\"button\" ng-disabled=\"rowform.$waiting\" ng-click=\"rowform.$cancel()\" class=\"btn btn-default editable-table-button btn-xs\">Cancel</button>\n                  </form>\n                  <div class=\"buttons\" ng-show=\"!rowform.$visible\">\n                    <button class=\"btn btn-primary editable-table-button btn-xs\" ng-click=\"rowform.$show()\">Edit</button>\n                  </div>\nand when I press on Save, it reloads the page. I wouldn't mind if I woudn't have pagination, but if I edit something on page x, after saving and reloading, it jumps on the first page. How can I solve this? Thank you! \n. $scope.saveNote = function (item) {\n      var row =  $(\"#\"+ item.id);\n      var val =  row.find('input').val();\n      Restangular.one('users', $scope.patientID).one('readings/bgs', item.id).patch({tags: {note: val}})     \n    };\nThis is my saveNote function. The item is visually saved in the textbox and then I am saving it into the database using a patch request. \n. @ckosloski  @ehsan-hakimi I don't have access right now to my code, but I will try on Monday to add onaftersave=\"saveNote($data)\". I already tried to chang the Edit from type=\"submit\" to \"button\", as I saw in your first post here, but after doing this, the data didn't save and the form didn't cancel itself.\n. It's solved now, the problem was from some dropdown filters I had and weren't inside the table and for that I had to move these classes st-table=\"displayedCollectionBG\" st-safe-src=\"smartTableDataBG\" table st-set-filter=\"customFilter\"> to a parent div. That caused the reload... Now I have to move those filters inside the table and put the classes back to the table. Thank you!\n. Yes, I think so... :)\n. ",
    "baio": "+1\n. ",
    "rfink": "+1\n. ",
    "luccascorrea": "+1\n. ",
    "xmlking": "+1\n. ",
    "mitcht": "Hopefully this will get merged. Its the simplest thing... just add 'e-single' to any item you want to have ignore the outer form.\n. I've spoken one of the previous owners of this project.  It may have been somewhat abandoned / going stale at this point.  Correct me if i'm wrong.\n. I spoke with painyjames and he was under the assumption that vitalets is currently the project owner. I've sent some emails and we'll see what happens.\n. Here is the list of things to do.  I'm planning on working on them in my spare time...\nhttps://github.com/vitalets/angular-xeditable/milestones\n. Seriously?\n.  Just because my commit  has been merged does not mean that it has been built into the bower distribution as of the date of this comment. Anyone who knows how this stuff works would know that they can clone the repo, build it locally and use the results from that build on their site. This will make e-single work.  If you find yourself bower-installing xeditable and then going \"hey e-single isn't working\" you need to do your own build on your own machine. Learn this. Contribute. It will take you to the next level. \n. You could always ask to be a repo admin :)\n. Submitted build as pull req. Fingers crossed.\nhttps://github.com/vitalets/angular-xeditable/pull/422\n. https://github.com/vitalets/angular-xeditable/pull/422 merged\nbower install angular-xeditable now allows e-single with version 0.1.10\n. It allows xeditable elements to be used with a standard ng-form element.  You can then create your own form, and the elements themselves don't have to validate using the internal e-form validation.  Just make sure they have names, and they will show up on your ng-form scope object with validity booleans.  This allows you to do things like implement angular-message without having to come up with ways to sidestep the built in validation in xeditable.\n. @HugCoder do you have an open pull req? There doesn't seem to be one.  If you create a pull req, i'll merge it.\n@im1dermike \n1, i don't see a pull request from you fixing this.  #2, angular-xeditable is free, so if you don't like it go somewhere else.  #3, There ARE ways to deal with this.  For instance you aren't forced to use the validation schemes.  I prefer angular-message. I don't bother trying to make angular-xedtiable handle all form stuff, even though it can, but doesn't do it quite as you would expect.\n. Closed as being too old\n. Please provide a JS fiddle. I am just starting collaboration and doing a bit of cleanup / damage control. There are 10 pages of issues.  The fact that you just commented on this is a good sign we still have a problem. Thanks.\n. Closed as being too old\n. Closed as being too old\n. Closed as being too old\n. There are 226 issues. I'm trying to close a few. If they pop up again, we'll work on them. Sorry.\n. Closed as being too old\n. Closed as being too old\n. Closed as being too old\n. Closed as being too old\n. Closed as being too old\n. Closed as being too old\n. Closed as being too old\n. Closed as being too old\n. Closed as being too old\n. Create new issue.\n. The question is, why are you guys putting a < form > tag inside of a repeater?  Try to eliminate this. I bet your problem will go away.  I use tons of fields on pages with validation on each one of them.  I only use one form.  If it comes to where I have a directive with xeditable items inside it, and that directive is used more than one time on the page (like your 'rows' in the example), i make sure that each e-name has a unique identifier on it.  I then pass the form as a scope variable, and everything ends up on the same form, easily validated. You can't have a bunch of forms with a bunch of elements that have the same name and expect validation to work right.\n. I believe its working exactly as it was intended.  According to the documents...\nIf you need validation of individual editable elements then you should define onbeforesave on particular editable element.\nThe result of child's onbeforesave is important for next step:\nstring: submit will be cancelled, form will stay opened, string will be shown as error message\nnot string: submit will be continued\nThis leads me to think that your checkname function needs to perform the validation routines.  see my jsfiddle here.\nhttp://jsfiddle.net/carcomp/64oc7wdp/\nThis would mean that any field you add 'onbeforesave' to will have to be manually validated for all circumstances, not just a single check on a specific row.   \nAs for your question about the whole thing being editable, well, its because its inside a form.  I was seeing the same results.  Just look into how i set up the js in my fiddle and go from there.\n. What sort of validation do you want?  I mean, its a text box. You either have data, or you don't have data. If you are trying to validate a phone number or something, use a regex and return a string based on those results.\n. You know what? I just don't think it makes sense to try to attempt form validation with multiple form tags.  I have tried multiple ways to make this work, including eliminating xeditable and just using basic forms.The fact is that ng-repeat creates isolate scope for each form.  This invariably denies any global validation to happen.  Its not specifically a problem with xeditable.. It just the concept of putting forms with inputs in an AngularJS repeater is somewhat flawed, even if there is a demo showing to do it in the docs.  \nIf you want this to work, you are going to have to write a custom directive and manually manipulate the isolate scope of each form into the 'main' form that is for the entire page. \nI cannot stress enough that it is not xeditable causing this.  Its AngularJS + multiple form tags + isolate scope.\n. Ok everyone, look into using the $validators to add a custom validation you want.  The more you learn about angularJs, the more you can unlock.\nfor instance, here is an example\nYour view would (should) be like this\n        <span custom-date-time editable-text=\"user.name\" ng-model=\"blargh\"  e-name=\"name\" e-form=\"rowform\" required>\nThat should cause the below attibute validators to fire off..  Makes it so you can ONLY type in a valid date, nothing else. Also forces the ng-model to be a datetime no matter what is typed.\n```\n   angular.module('myAppName')\n        .directive('customDateTime', ['$moment', function ($moment) {\n          return {\n            restrict: 'A',\n            require: '?ngModel',\n            link: function(scope, element, attrs, ngModel) {\n              if (!ngModel) { return; }\n          ngModel.$validators.date = function (value) {\n            return value instanceof Date === true;\n          };\n\n          ngModel.$parsers.unshift(function(value) {\n            var datePicked = null;\n\n            // Attempt to use JS built in date and validate\n            var tmpDate = new Date(value);\n            if ($moment(tmpDate).isValid()){\n              // If you typed in the time, this will convert it to something we can store\n              datePicked = tmpDate;\n            }\n\n            return datePicked;\n          });\n        }\n      };\n    }]);\n\n```\n. It is possible to do this with built in functionality. Using the e-ng-disabled=\"boolean\" value, one can easily enable and disable an xeditable element. Here I have shown it used on a standard text element, as well as a date time picker. https://jsfiddle.net/carcomp/dpf5jb39/1/\n. At 12 EST I will.\n. I noticed, i've written almost the exact same thing in my pull request. https://github.com/vitalets/angular-xeditable/pull/315\n. Please update this pull req and fix conflicts.\n. You don't need to commit the files from the dist directory. They get built automatically, and just clutters up the commit.  There may be additional files that do not need to be committed as well (possibly the zip files)\n. @jrsquared dist files have to be in the repo because it is a bower package. Adding them to .gitignore would break the package installation process. We could probably argue on this, but the point I meant to make is that you might want to have the cleanest commit possible. Whoever it is out there that has to look at your request only will see the really important bits. It makes it more likely for them to just merge it. Still thanks for the pull request. You are on a milestone so i hope you get merged.\n. Use e-single. This should allow this to happen.\n. I'm going to submit this from a new branch on my fork\n. Heres hoping!\n. No, it is not part of master yet.\n. @eugef please review. thx.\n. I would think you would add this to each directive, as well as update the documentation. Thoughts?\n. This is not an actual issue with the project. Questions such as this are better suited to be posted on sites like stackoverflow.com, using their Q/A format. Thanks.\n. This is not an actual issue with the project. Questions such as this are better suited to be posted on sites like stackoverflow.com, using their Q/A format. Thanks.\n. Questions such as this are better suited to be posted on sites like stackoverflow.com, using their Q/A format. Thanks.\n. This is not an actual issue with the project. Questions such as this are better suited to be posted on sites like stackoverflow.com, using their Q/A format. Thanks.\n. Question is better suited for sites like stackoverflow.com.  Not an actual issue.\n. This is not an actual issue with the project. Questions such as this are better suited to be posted on sites like stackoverflow.com, using their Q/A format. Thanks.\n. I had to host it on an actual server before it would run...\n. The bower packages are out of date first of all. The newer versions don't quite work right. You might look down that road.\n. What do all the CSS changes do? Are they needed? Is there a way to do without them? I don't want a version change to affect how the directives look when people upgrade.\n. Also like @eugef said, fix the conflicts.\n. This is not an actual issue with the project. Questions such as this are better suited to be posted on sites like stackoverflow.com, using their Q/A format. Thanks.\n. Please submit a build with this pull req.  This way, it can go directly into the bower package.\n. This is not an actual issue with the project. Questions such as this are better suited to be posted on sites like stackoverflow.com, using their Q/A format.\n. This is not an actual issue with the project. Questions such as this are better suited to be posted on sites like stackoverflow.com, using their Q/A format. Thanks.\n. Try implementing e-single, or make sure your item each item has a unique name. I bet if you check your form in bats tang, you will see what I'm talking about.\n. Batarang. Not bats tang. Stupid autocorrect.\n. Squashed.\n. Hah! Which one?  Theres a few in this release!\n. You could have always built it yourself :)  Fork, clone, npm install, bower install, grunt build.  Simple as that.\n. I noticed this too. I'll try to get it updated.\n. Tabs were changed to spaces here.If this is unacceptable, please let me know.  As for now, i'm just going to leave it since it doesn't affect functionality, and tabs are the devil. :)\n. allows closing all 'edits' from outside of the directive.. .useful when you are using the xEditable system with other controls that 'open and close\"\n. don't include dist now. build will just make a fresh one if its missing.\n. Don't math on files that may or may not exist!\n. Good catch. Our bower repo and source repo we use in house are separate.  I am just used to doing this.\n. This information about using an element as single should not be removed.\n. This is already upstream master.  Why is it in this pull req? https://github.com/vitalets/angular-xeditable/blob/master/starter/angular-xeditable/js/xeditable.js#L872\n. Please don't change all the indentation without making any actual code changes.  This just increases the delta count for diff.\n. Have you pulled on a different branch? This change (i don't think) is meant to be in this pull req.\n. ",
    "eugenia-arias": "+1\n. ",
    "innerpeace0": "The founder, vitalets, told me that he is off the project. I got the sense that he doesn't plan on returning any time soon. It would be a good project for somebody to take over. The concept is great.\n. If you're going to do a lot of them and/or several other modifications, you could add a supplemental style sheet. A later style setting will override a previous one of the same weight, so make sure your custom style sheet loads last.\n. Perhaps a percentage?\n. > this would be more elegant if there were a built-in directive to conditionally show the editor.\n+1\n. > I can suggest to use the following workaround ...\nGr8! Thx.\n. For common licenses like GPL and MIT, links are usually sufficient. There are also some one liners with links that are commonly used and accepted.\n. ",
    "eugef": "Hi all, project now has new collaborator.\nIssue is confirmed (here is example of the bug http://jsfiddle.net/NfPcH/9316/) and the patch to fix it #315 would be merged in the nearest time.\n. Resolved by #315 \n. @ckosloski is there anything we can improve in the code, or issue can be closed?. e-maxlength works fine, here is jsFIddle http://jsfiddle.net/NfPcH/9468/ \nYou can also try e-ng-maxlength though\n. @markvp does this feature still make sense?\n. No problem.\n. Solution by @joseaquino works but it is definitely a workaround.\nForm should watch changes of the scope and updated itself.\n. Duplicates #6\n. component is not maintained anymore\n. @mitcht, could you take a look?\n. Hi @teneightfive , could you please explain what exact issue are you tryig to fix? \njsfiddle or plunkr would be nice to have.\n. @Mcafee123 , could you please add a simple code example how to use this new feature (preferably in Plunker or something similar)\n. Fixed by #473\n. Fixed by #414 \n. Hi @vitalets , I don't have permissions. \nCould you add me as collaborator at npmjs.com? My login there is eugef\n. new version is released to npm\n. @jivasquez , please update your PR and include only changes to src/folder.\n. @jivasquez, thanks for your PR.\n. Ok, will do it.\n. I've merged this change to the new branch WIP-282, i didn't merge to master because the test dev-text  blur = submit is failing.\n```\nexpect element '[ng-controller=\"DevText\"] form' count toBe 1\nhttp://127.0.0.1:8000/docs/demos/dev-text/test.js:58:5\nexpected element '[ng-controller=\"DevText\"] form' count toBe 1 but was 2\n```\n@ckosloski could you please check the test and fix it if possible.\n. Branch is https://github.com/vitalets/angular-xeditable/tree/WIP-282\n. @ckosloski, yes it works\n. @dotansimha can you update your PR?. Don't think it is still relevant. npm & bower support should be enough. @NameFILIP , thanks for the contribution!\n. @zhendong590 , could you please provide code example how to use this new feature (preferably in plunker or jsfiddle)\n. Implemented by #451 \n. @mitcht , thanks for your commitment!\n. Fixed by #443\n. Duplicates  PR #266 , need to check which one works better.\n. Fixed by #473 \n. Use onbeforesave handler for that http://vitalets.github.io/angular-xeditable/#editable-form\n. Yes, just add e-disabled attribute to the input.\n. e-disabled attribute works, here is jsfiddle http://jsfiddle.net/NfPcH/9349/\n. As for now there is no built-in directive to do this, I can suggest to use the following workaround with ng-if:\n<a href=\"#\" editable-text=\"user.name\" ng-if=\"enabled\">{{ user.name || 'empty' }}</a>\n<span ng-if=\"!enabled\">{{ user.name || 'empty' }}</span>\nHere is jsfiddle http://jsfiddle.net/NfPcH/9360/\nInternal implementation could be slightly faster, but until you have couple of thousands elements on the page, you should not notice any performance impact.\n. BTW, there is a PR #206 that aimed to implement this feature. \nAnytime soon will take a look at it and merge if possible\n. Hi @MarkHerhold , would be nice if you could create a PR to fix it.\n. @MarkHerhold PR with one-line link for readme.md would be nice to have\n. You can pass the formName.$data to the ng-click handler\n. @MarkHerhold , thanks for your commitment.\n. @coreypobrien , thanks for your commitment.\n. Hi @kimmowikman , could you also add to the index.html file an example how to use this new feature.\n. Yes please.\n. @jawadatgithub You are more than welcome to do changes in your fork and submit the PR\n. Fixed by #414 \n. Implemented in #467 \n. Implemented by #467 \n. @mitcht, could you take a look?\n. Hi @ckosloski , please rebase your branch against the latest master and resolve the conflicts.\n. @dolzenko, could you also update documentation to include new attributes\n. Just modify https://github.com/vitalets/angular-xeditable/blob/master/docs/demos/combodate to include new attributes and add reference to the https://github.com/vitalets/angular-xeditable/blob/master/docs/js/structure.js\n. @ka7eh, please remove all changes to the dist/ folder from your commit.\n. Fixed by #414 \n. Please squash all your commits in a few with meaningful commit messages and we are ready to merge.\n. Thanks for your commitment!\n. @ckosloski , thanks for your commitment\n. Fixed by #443 \n. @david12341235, please include in PR only src/* files\n. Fixed by #443 \n. Fixed by #451 \n. @ibirrer, would be nice if you create the PR with the css fix.\n. Fixed by #443 \n. @sveller , you can easily find out yourself - just comment out one line or another and try.\nWould be great if you submit a pull request with a fix.\n. @ckosloski what exactly tests are broken?\nIf you merge #414 would those tests still fail?\n. Thanks @ckosloski, great job\n. @Jmenache, please create a PR\n. Fixed by #448 \n. @afgonzal you can try the latest release 0.4\n. Great job @ckosloski !\n. @abdulshukkoortp pleaseexplain what exact issue are you trying to fix. \n. @Sampath-Lokuge, new version was just released, so you can install it with npm\n. @bostrom, can you make sure tests are not failing\n. @bostrom:\nshell:jsdoc fails because of the new folder structure created by npm3\nThis task should be completely rewritten, for now you can comment it out in Gruntfile.js\n@ckosloski:\nIf you have time, please try to make shell:jsdoc work, thanks!\n. @ckosloski jsdoc task depends on folder structure inside the node_modules and it is changed to be flat in npm3. So probably you are using old 'npm' that iswhyyou don't see any issue.\n. @bostrom, thanks for your PR\n. @ckosloski, could you create a new PR with this fix.\n. Great job @ckosloski. \nWould you add some documentation to docs/demos/dev-bsdate/desc.md?\n. @thim81, could you explain what exactly bug is fixed.\n. @ckosloski, good job!\n. @ckosloski, could you please check if this PR doesn't break existing fucntionality.\nIs it really impossible without this PR to have several ui-select on thesame page?\n. @ckosloski, do you mean that multiple ui-selects work normally even without PR?\n. Ok, let's wait for the answer of @julia-k.\n. Tests are added by #467.\nAs i can see this bug is not confirmed and having multiple ui-selects on the same page is not an issue.\nI am closing this PR for now.\n@julia-k if you can provide code example that reproduce the issue, please reopen this ticket.\n. @ckosloski, @TomOffringa, PR is merged\n. Will do a release tomorrow\n. @ckosloski, thanks for the PR.\n. Nice job @ckosloski \n. Great job, @ckosloski!\n. @ckosloski, thanks for your commitment.\n. @ckosloski I'll try, unfortunately jsdoc command is not compatible with npm3 which i have on my machine right now, so i will install npm2 and do a release\n. @edmedo, will try my best\n. Release 0.2.0 was just published\n. @ckosloski, please resolve the conflicts\n. Fixed by #500\n. New release 0.3.0 is pushed\n. @ckosloski done\n. Hi @ttonyh, thanks for you PR. \nTo be able to merge it - could you also add documentation how to use it and unit test.\n. @ttonyh , just add information about new attribute to the docs/jade/reference.jade and also nice to add demo example as it is done for some other attributes.\n. @ttonyh please include only src/ files in your PR. @ckosloski, thanks for the PR\n. @ckosloski , thanks for your commitment\n. @ckosloski sure\n. @ckosloski, thanks for your commitment.\n. Tests are failing with the following error:\n```\nbrowser navigate to '../../dev.html'\nhttp://127.0.0.1:8000/docs/demos/text-simple/test.js:4:5\n[$injector:modulerr] Failed to instantiate module app due to:\nError: [$injector:modulerr] Failed to instantiate module ngTagsInput due to:\nError: [$injector:nomod] Module 'ngTagsInput' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.\nhttp://errors.angularjs.org/1.5.0/$injector/nomod?p0=ngTagsInput\n    at http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:68:12\n    at http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:2015:17\n    at ensure (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:1939:38)\n    at module (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:2013:14)\n    at http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:4503:22\n    at forEach (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:321:20)\n    at loadModules (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:4487:5)\n    at http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:4504:40\n    at forEach (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:321:20)\n    at loadModules (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:4487:5)\nhttp://errors.angularjs.org/1.5.0/$injector/modulerr?p0=ngTagsInput&p1=Error%3A%20%5B%24injector%3Anomod%5D%20Module%20'ngTagsInput'%20is%20not%20available!%20You%20either%20misspelled%20the%20module%20name%20or%20forgot%20to%20load%20it.%20If%20registering%20a%20module%20ensure%20that%20you%20specify%20the%20dependencies%20as%20the%20second%20argument.%0Ahttp%3A%2F%2Ferrors.angularjs.org%2F1.5.0%2F%24injector%2Fnomod%3Fp0%3DngTagsInput%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A68%3A12%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A2015%3A17%0A%20%20%20%20at%20ensure%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A1939%3A38)%0A%20%20%20%20at%20module%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A2013%3A14)%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4503%3A22%0A%20%20%20%20at%20forEach%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A321%3A20)%0A%20%20%20%20at%20loadModules%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4487%3A5)%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4504%3A40%0A%20%20%20%20at%20forEach%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A321%3A20)%0A%20%20%20%20at%20loadModules%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4487%3A5)\n    at http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:68:12\n    at http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:4526:15\n    at forEach (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:321:20)\n    at loadModules (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:4487:5)\n    at http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:4504:40\n    at forEach (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:321:20)\n    at loadModules (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:4487:5)\n    at createInjector (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:4409:19)\n    at doBootstrap (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:1691:20)\n    at Object.angular.resumeBootstrap (http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:1720:12)\nhttp://errors.angularjs.org/1.5.0/$injector/modulerr?p0=app&p1=Error%3A%20%5B%24injector%3Amodulerr%5D%20Failed%20to%20instantiate%20module%20ngTagsInput%20due%20to%3A%0AError%3A%20%5B%24injector%3Anomod%5D%20Module%20'ngTagsInput'%20is%20not%20available!%20You%20either%20misspelled%20the%20module%20name%20or%20forgot%20to%20load%20it.%20If%20registering%20a%20module%20ensure%20that%20you%20specify%20the%20dependencies%20as%20the%20second%20argument.%0Ahttp%3A%2F%2Ferrors.angularjs.org%2F1.5.0%2F%24injector%2Fnomod%3Fp0%3DngTagsInput%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A68%3A12%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A2015%3A17%0A%20%20%20%20at%20ensure%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A1939%3A38)%0A%20%20%20%20at%20module%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A2013%3A14)%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4503%3A22%0A%20%20%20%20at%20forEach%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A321%3A20)%0A%20%20%20%20at%20loadModules%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4487%3A5)%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4504%3A40%0A%20%20%20%20at%20forEach%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A321%3A20)%0A%20%20%20%20at%20loadModules%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4487%3A5)%0Ahttp%3A%2F%2Ferrors.angularjs.org%2F1.5.0%2F%24injector%2Fmodulerr%3Fp0%3DngTagsInput%26p1%3DError%253A%2520%255B%2524injector%253Anomod%255D%2520Module%2520'ngTagsInput'%2520is%2520not%2520available!%2520You%2520either%2520misspelled%2520the%2520module%2520name%2520or%2520forgot%2520to%2520load%2520it.%2520If%2520registering%2520a%2520module%2520ensure%2520that%2520you%2520specify%2520the%2520dependencies%2520as%2520the%2520second%2520argument.%250Ahttp%253A%252F%252Ferrors.angularjs.org%252F1.5.0%252F%2524injector%252Fnomod%253Fp0%253DngTagsInput%250A%2520%2520%2520%2520at%2520http%253A%252F%252F127.0.0.1%253A8000%252Flibs%252Fangular%252F1.5.0%252Fangular.js%253A68%253A12%250A%2520%2520%2520%2520at%2520http%253A%252F%252F127.0.0.1%253A8000%252Flibs%252Fangular%252F1.5.0%252Fangular.js%253A2015%253A17%250A%2520%2520%2520%2520at%2520ensure%2520(http%253A%252F%252F127.0.0.1%253A8000%252Flibs%252Fangular%252F1.5.0%252Fangular.js%253A1939%253A38)%250A%2520%2520%2520%2520at%2520module%2520(http%253A%252F%252F127.0.0.1%253A8000%252Flibs%252Fangular%252F1.5.0%252Fangular.js%253A2013%253A14)%250A%2520%2520%2520%2520at%2520http%253A%252F%252F127.0.0.1%253A8000%252Flibs%252Fangular%252F1.5.0%252Fangular.js%253A4503%253A22%250A%2520%2520%2520%2520at%2520forEach%2520(http%253A%252F%252F127.0.0.1%253A8000%252Flibs%252Fangular%252F1.5.0%252Fangular.js%253A321%253A20)%250A%2520%2520%2520%2520at%2520loadModules%2520(http%253A%252F%252F127.0.0.1%253A8000%252Flibs%252Fangular%252F1.5.0%252Fangular.js%253A4487%253A5)%250A%2520%2520%2520%2520at%2520http%253A%252F%252F127.0.0.1%253A8000%252Flibs%252Fangular%252F1.5.0%252Fangular.js%253A4504%253A40%250A%2520%2520%2520%2520at%2520forEach%2520(http%253A%252F%252F127.0.0.1%253A8000%252Flibs%252Fangular%252F1.5.0%252Fangular.js%253A321%253A20)%250A%2520%2520%2520%2520at%2520loadModules%2520(http%253A%252F%252F127.0.0.1%253A8000%252Flibs%252Fangular%252F1.5.0%252Fangular.js%253A4487%253A5)%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A68%3A12%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4526%3A15%0A%20%20%20%20at%20forEach%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A321%3A20)%0A%20%20%20%20at%20loadModules%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4487%3A5)%0A%20%20%20%20at%20http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4504%3A40%0A%20%20%20%20at%20forEach%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A321%3A20)%0A%20%20%20%20at%20loadModules%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4487%3A5)%0A%20%20%20%20at%20createInjector%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A4409%3A19)%0A%20%20%20%20at%20doBootstrap%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A1691%3A20)%0A%20%20%20%20at%20Object.angular.resumeBootstrap%20(http%3A%2F%2F127.0.0.1%3A8000%2Flibs%2Fangular%2F1.5.0%2Fangular.js%3A1720%3A12)\nError: [$injector:modulerr] Failed to instantiate module app due to:\nError: [$injector:modulerr] Failed to instantiate module ngTagsInput due to:\nError: [$injector:nomod] Module 'ngTagsInput' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.\nhttp://errors.angularjs.org/1.5.0/$injector/nomod?p0=ngTagsInput\n    at http://127.0.0.1:8000/libs/angular/1.5.0/angular.js:68:12\n```\n@ckosloski, Could you please fix it.\n. dev\n. I forgot to run grunt build :) \n. @ckosloski release is pushed\n. Thanks @ckosloski \n. Thanks @ckosloski \n. @ckosloski new release is out\n. @ckosloski good job!\n. @Carnid could you describe the purpose of the PR?\n. @Carnid, thanks for your PR\n. @roblperry, thanks for your PR\n. @ckosloski, thanks for your PR\n. Yes, will do it shortly\n. Thanks @ckosloski \n. @ckosloski how exactly #183 was fixed?\n. ok, clear\n. @ckosloski I'll do it today.\n. Looks good for me as well, @fredrikw thanks for you PR!\n. Thanks @ckosloski \n. @Carnid, thanks for the PR.\nCould you please update tests for the uib-datepicker-popup\n. @ckosloski no, could you create a new fiddle and update link in the readme?. Thanks @ckosloski . @B3nCr did you close PR on purpose?. @aecepoglu please include only src folder in your PR. @valexiev could you squash all your changes into single commit.\n@ckosloski does this PR looks good for you? BTW creating contributors guidlines would be a good idea.. @valexiev Thanks for you PR.. Thanks @ckosloski . Hi @arielcr, the way how we include 3rd party dependencies right now is completely wrong (i mean copying them to the libs folder), the right way would be to use bower to install them.\nPlease do the following:\n- remove jquery-ui and angular-ui-date from libs\n- install them as devDependencies of bower\n- change urls to include jquery-ui and angular-ui-date directly from bower_components folder\nI did that already for angular and jquery (https://github.com/vitalets/angular-xeditable/commit/e4f3e25b93219dd7431329941f860e9d5b7e2a76)\nI've already modified the package.json so whenever you run npm install bower componets are also updated.. @arielcr , thanks for the quick fix. \nPlease also squash all you commits into the single one.. @arielcr, it seems like you squashed wrong commits, please make sure you don't add anything to libs folder, install all dependencies with bower instead.. Now it's good. Thanks for your PR.. Did you run npm install to get all dependencies?. Errors, you have sent are not critical, just map files are missing for minifed css.\nI've fixed the error related to Uncaught ReferenceError: inject is not defined https://github.com/vitalets/angular-xeditable/commit/1024d7ca9d02d488c82932c293353dcd0237eb37. \nTurns out that this test  was broken and didn't run for a long time, but angular-scenario didn't report that.\nSo the only error that is left is [$sce:unsafe] Attempting to use an unsafe value in a safe context which occurs if you run dev-tests. @ckosloski thanks. Hi @kglee79, thanks for your PR. Please exclude /starter/ folder from your commit.. Thanks for the PR @ckosloski . @ckosloski thanks for the contribution. @ckosloski thanks for the contribution.. @ckosloski thanks for the contribution. @ckosloski thank you. @ckosloski, would be nice to have a test that confirms the fix.. Does the test fail without your fix?. Thanks. @Fredz66, thanks for your PR. Fix is trivial so it can be accepted without tests.. @B3nCr, @ckosloski what about tests? are they green?. @B3nCr npm v2 is required to run build and tests.. Maybe @ckosloski could run the tests agains this PR?. Great, then I merge it.. As far i know tests can be run only in browser. Can Travis-CI do it?. @ckosloski thanks for the contribution. Seems like you are using  io.js v3.3.1 on Travis, which doesn't support arrow function syntax.\nTry to use node v6.. Very good! Please keep doing this. Maybe @ckosloski can join you?. Will do release tomorrow.. New release 0.7.0 is out. Thanks for the quick feedback. I fixed it.. Great job @ckosloski . New release it out. @ckosloski thanks for the PR!. I'll do release this week. Sorry for delay, release is out now. Thanks for the PR. @fnk thanks for your PR. \nCould you also add a test that proves your change works as expected.. Hi @chiu0602, thanks for your PR, could you add a test to prove code works as expected.. @ckosloski this PR looks good for me, what do you think?. @chiu0602 thank you for the PR. @ckosloski thanks for the PR. @ckosloski thanks for the PR. @ckosloski you are using moment.js, but it only a devDependency of the angular-xeditble.\nI think me should mention in the documentation that for editable-combodate you need a moment.js installed as a global variable. Thanks for the fix. @ckosloski thanks for your PR!. @ckosloski thanks for your PR. Fixed, thanks @ckosloski . Don't exclude dist from the git repo, as it is used by bower.\nWhen you install with bower you should already have builded library without running any additional scripts\n. Why this file is empty?\n. Why did you change ng-model to data-ng-model? \nI don't think it is necessary.\n. Why did you prefix all angular attributes names with dataprefix? \nI don't think it is necessary.\n. Please, move lines 24 - 30 to a separate function findElement(name)\n. Please remove quotes around array keys.\n. I would better make that function return an index rather than changing the variable.\nfor example var index = findElement(this.name)\n. Why did you remove this code? Is it not necessary?\n. Ok.\n. Could you improve the code and do setTimeout(function(){}.bind(this)) instead of assigning that = this.. It is ok to include non-minified version. ",
    "phaniram": "Any ETA on this merge?\n. ",
    "HariBabuThubati": "@mitcht  Yes , please advise me, if i have two rows and i modified all two rows values, myform.$data is having only last row data only . it is not maintaining entire table data in ng-repeate.please adivise me\nhttp://jsfiddle.net/0amredgj/3/\n. Hi I am also facing the same issue ,if you are resolve the please let me know.\n. @johntom  : did you get any solutions ? I am adding datepicker on ng-repeat , if i have multiple rows if i click on one row the calender is pooping up in all coloumn which was date picker ,can you please help me out\n.  e-form=\"tableform\"  e-name =\"input.deathDt\" editable-date=\"input.deathDt\" e-ng-modal=\"input.deathDt\" e-is-open=\"opened[$index]\" e-ng-click=\"open($event,$index)\" e-datepicker-popup=\"dd-MMMM-yyyy\" e-max-date=\"todaysDate\" onbeforesave=\"checkEstateDate($data)\">\n        {{ input.deathDt | date:\"MM/dd/yyyy\"}}\n$scope.opened = {};\n        $scope.open = function($event, elementOpened) {\n            $scope.tableform.$dirty = false;\n            for (currentOpen in  $scope.opened) {\n                if(currentOpen != elementOpened){\n                    $scope.opened[currentOpen] = false;\n                }\n            }\n            $event.preventDefault();\n            $event.stopPropagation();\n            $scope.opened[elementOpened] = !$scope.opened[elementOpened];\n        };\n. @johntom : above is the solution\n. onbeforesave method is not calling if i add edit-disabled = \"item.val\" .\n. ",
    "christandy": "vitalets - Is there a way to do multiple separate editable forms within a single form element? I've got a large form and would like to break it up a bit. Thanks for any help. \n. What's worked for me is to just nest form elements inside each other. I am well aware that that approach is non-standard, won't validate, and could fairly be called \"hackish\". \n. ",
    "HugCoder": "This still seems to be broken. I tried different hacks and \"solutions\", including the \"e-single\" which doesn't seem to do anything. There seems to be workarounds here to get somewhere, but what I want to accomplish is the following:\nI have a table with cells (td-tags) containing content I want to use xeditable on, i.e. I don't want to edit the whole row or the whole table at the same time, since this expands the table too big cause of the inputs taking more space than text. I also don't want buttons, I want save on blur (buttons=\"no\" blur=\"submit\"). I only want the element I click on to be editable. This is fine as long as it's not surrounded by a form-tag but when I add it, things start breaking. First of it stops displaying the inputs on click, cause it wants myform.$show() to be called. If it's called it displays all the xeditables, which is what I don't want.\nI could just do all validation through onbeforesave=\"validate($data)\" or something like that, but that takes quite a bit of extra code and I would like to use angulars inbuilt features like dirty, pristine, etc., which is only available if you surround everything with form-tag. So, is there a solution to achieve the above?\n. I implemented the e-single fix by simply changing the lines:\n// element wrapped by form\n                if (ctrl[1]) {\n                    eFormCtrl = ctrl[1];\n                    hasForm = true;\n                    }\nto\n// element wrapped by form\n                if (ctrl[1]) {\n                    eFormCtrl = ctrl[1];\n                    if (attrs.eSingle !== undefined) {\n                        hasForm = false;\n                    } else {\n                        hasForm = true;\n                    }\nMakes it work inside forms without any problem so far. Would be easier to contribute if the author of the project was active. Making 10+ forks or your own build isn't contributing, unless you are prepared to keep it up and develop it.\n. Sounds good, but to me it doesn't seem to be implemented in the way we have \"fixed\" it in the thread. Now it's like this:\n\"\n         if(ctrl[1]) {\n           eFormCtrl = ctrl[1];\n          hasForm = true;\n        } else if(attrs.eForm) { // element not wrapped by form, but we have e-form attr\n          hasForm = attrs.eSingle === undefined;\n        }\n\"\nThis means we still cannot wrap the element in form tag but instead we have to use only e-form. Then we don't get the angular form validation etc. that the form tag provides. I really don't see what problem this implementation solved. At least it didn't solve the original issue discussed in this thread.\n. ",
    "dnauck": "Even the latest master branch had this issue :/\n+1 for fixing it\n. It's also related to #6 \n. ",
    "im1dermike": "What a joke that this hasn't been fixed.  It makes the plugin completely unusable.\n. ",
    "mohamednagy": "i have a form and i want to edit the only clicked editable controller not all the editable controllers in the form.\n. ",
    "bgsavage": "@mitcht can you provide a code sample of how to use your fix?  It sounds like you're saying we should try using ng-form instead of the built in e-form now.\nThanks-. ",
    "elutz": "I second this. It would be a really cool feature if it could be combined with angular-ui / ui-date and ui-select2. \n. ",
    "jscg719": "we are really looking forward you guys to adding select2 feature too\n. ",
    "tobi-or-not-tobi": "Thanks a lot for this implementation. I'm also very interested in select2. Any update here?\n. ",
    "micha77dd": "would also like to have support of 'ui-select2'. thank you, great work!\n. ",
    "Nate-Wilkins": ":+1: Is ui-select support a planned feature? Or is just select2?\n. I would also expect ng-disabled/disabled to work instead of having to add the class directly. Is this a possible feature?\n. @renatomefidf \nUnfortunately no - I ended up passing ng-disabled down with prefix e- and just have the editable form show but disabled.\n. html\n<a href=\"#\" editable-text=\"model.value\" e-ng-disabled=\"model.disabled\">\n    {{ model.value | 'empty' }}\n</a>\n. @renatomefidf No problem!\nNow we can just wait for the merge so we can use ng-disabled \n. @hammat <3 \n. ",
    "rigobcastro": "+1\n. ",
    "jengwood": "would love to use select2 with xeditable. does anyone have an example of that?\n. yeah I know it works without the ng-repeat, the problem is that I have variable columns and need to define them using ng-repeat. \nupdated jsfiddle with another example showing a working row edit with the form defined in a row ng-repeat. just can't get it to work with the ng-repeat for a column edit.\nhttp://jsfiddle.net/cwbk0aao/1/\n. That makes sense, thanks for clarifying. So is there any way to accomplish this? A change in the x-editable code to reference both the form and the editables from rootScope or something?\n. ",
    "tarlepp": "+1 for select2, anyone has example for this?\n. And the issue is still open.\n. @rmariuzzo please do, I'm having the same problem. Also issue #238 is linked to this.\n. +1 Any updates with this?\n. ",
    "davidsielert": "I added angular-selectize2 element right in easily ,, ~the only problem being you must modify the switch Statement in the postrender~ - nevermind thats for some class changes.. \nmy code.. \nangular.module('xeditable').directive('editableSelectize', ['editableDirectiveFactory',\nfunction(editableDirectiveFactory) {\n  return editableDirectiveFactory({\n    directiveName: 'editableSelectize',\n    inputTpl: '<selectize></selectize>',\n    render: function() {\n      this.parent.render.call(this);\n      this.inputEl.removeAttr('class'); //Dump the form-control and other junk that gets added we don't need\n    }\n  })\n}]);\n. Nevermind this was due to an outter form element .. works inside directive.. \n. ",
    "cina2012": "hi.\ni have a problem.\nmodel value is not updated when user select item.\ncan you help me?\ntnx.\n. i have a problem.\nmodel value is not updated when user select item in ui-select..\ncan you help me?\ntnx.\n. i have same problem.\nmodel value is not updated.\ncan you help me?\ntnx.\n. ",
    "igler": "... your latest code works much better! I have restricted the error that I cannot get an \"editable row\" working (http://vitalets.github.io/angular-xeditable/#editable-row). This is probably because the form is inside another form. If I copy the form outside, then it is working. \nBTW is it possible to edit only a specific cell and not a complete row (that is what I initially wanted and was looking for)?\n. ... OK, here we go! One last thing: is it possible to wrap the input-select, the OK and Cancel button into a tooltip that appears when I click the item? I have seen this on some page but I cannot remember any more. Otherwise the column-borders jump left and right. Do you know what I mean?\n. Yes, that's what I mean. Is a popup mode much work?\n. OK, I understand the tooltip problem.\nSomething different: Using the code like this, it works but I only have the ID's of the stage items shown:\n<span editable-select=\"stage.from.id\" e-ng-options=\"location.id as location.name for location in allLocations\" onaftersave=\"updateStage(stage)\">\n{{stage.from.id}}\n</span>\n\nBut I'd like to have the names of the locations show, something like:\n<span editable-select=\"stage.from.id\" e-ng-options=\"location.id as location.name for location in allLocations\" onaftersave=\"updateStage(stage)\">\n{{stage.from.name}}\n</span>\n\nThe problem here is that it does not show the new selected name (the old one stays). The onaftersave-function updateStage also tells the old name when I do a console.log(...).\n. Thanx, that works. I have updated the fiddle with the question how to separate different elements that have been updated (2nd location, date time, etc.) BTW, I use bootstrap-datetimepicker (http://www.malot.fr/bootstrap-datetimepicker/). Will that one work with angular-xeditable?\n. Well it works, but if I add the onaftersave=\"changed()\", then this function is not called. If I write\n<a href=\"#\" editable-time=\"mytime\" onaftersave=\"changed()\">\n    {{mytime}}\n</a>\n\n... it only works once. I can change the time, save it (changed-fucntion is also fired), but when I want to change it again, then the time is empty.\n. I can now edit the time more than once, this is fixed. But the changed()-function is not called. The directive I use is:\n//timepicker\nangular.module('xeditable').directive('editableTime', [ 'editableDirectiveFactory', function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n        directiveName : 'editableTime',\n        inputTpl : '<timepicker hour-step=\"1\" minute-step=\"1\" show-meridian=\"false\"><timepicker>'\n    });\n} ]);\n\nDo I have to add some more parameters to the directive so onaftersave is handled?\n. ... sorry, it works. There was still a timepicker script included from angular-ui-bootstrap. After excluding this one it works now as expected. Thanx.\n. Unfortunately there is still a small bug. When I change the time it is not saved to the scope variable. The onaftersave is called and works. When I use the timepicker outside of angular-xeditable it works. I do not use any library that implements timepicker. It works outside somehow out of the box, at least outside of angular-xeditable. Don't know why. What I use at a different side is bootstrap-datetimepicker. Maybe this one implements the necessary functions and disturbs angular-xeditable?\n. editableOptions.blur = 'submit'; worked for me.\n. When I use the new editable-bstime feature, I am facing the problem that when I use the arrow keys, the popup closes automatically after the first click. In your demo-fiddle (http://jsfiddle.net/NfPcH/34/) it works correct. Is this also a configuration problem?\n. That solved it, thanx. The Browser is Chrome version 29.0.1547.57. The select-button with onaftersave still works :-)\n. Can you please give me a hint where to start? In my case I need a popup for every element that is marked as x-editable. This is because I use them in a table and I want to prevent that the table column border jump back and forth.\n. The tooltip.js library renders the following code when clicking the element:\n<div class=\"tooltip top in fade\" ng-class=\"{ in: isOpen(), fade: animation() }\" title=\"\" content=\"Hello, World!\" placement=\"top\" animation=\"tt_animation()\" is-open=\"tt_isOpen\" style=\"top: 70px; left: 355px; display: block;\">\n    <div class=\"tooltip-arrow\"></div>\n    <div class=\"tooltip-inner ng-binding\" ng-bind=\"content\">Hello, World!</div>\n</div>\n\nI have tried it with an input-element and then the code looks like this:\n<div class=\"tooltip top in fade\" ng-class=\"{ in: isOpen(), fade: animation() }\" title=\"\" content=\"<input type=\"text\">\" placement=\"top\" animation=\"tt_animation()\" is-open=\"tt_isOpen\" style=\"top: 45px; left: 430.5px; display: block;\">\n    <div class=\"tooltip-arrow\"></div>\n    <div class=\"tooltip-inner ng-binding\" ng-bind-html-unsafe=\"content\"><input type=\"text\"></div>\n</div>\n\nDo we want to add an attribute mode to the xeditable tags that decides if we are in normal or popup mode? If so, then I have to add it to the EditableController function, right?\nAnd, am I right that we do not need a new directive but just change the way things are display?\n. The HTML-code would look like this:\nCannot find editableConfig. In which file is it? \nBTW the function self.show = function()... in controller.js: I do not get the point what to add here. Where do I have to place the <div class=\"tooltip\">-tags?\n. That would work in my case but I am having the problem that it does not recognize the borders of the accordion element it is in. This means, that it partially disappears under the left border of the accordion. I there a way to make it dynamic so it adopts its environment?\n. No, it does not. All have problems recognizing the accordion container. But as a workaround instead of centering the popup over the item it would be good to have an alignment parameter. Left-align would mean, that the left side of the item you click on and the left border of the popup have one common x-value. Together with the placement parameters (top, bottom, left and right) I could do a very fine grained adjustment.\n. I have found some additional alignment options here: https://github.com/dkleehammer/bootstrap-popover-extra-placements\n. ",
    "vartana": "@vitalets have you implemented the datetime picker?\n. How would I implement this https://github.com/dalelotts/angular-bootstrap-datetimepicker\n. ",
    "william-p": "Good job!\nCan you make tag 0.1.3 for Bower ?\nThanks :)\n. ",
    "MaciejHadam": "It works.\nThank you.\n. ",
    "dreadjr": "@vitalets For example \nuser.name = \"original field\"\nuser.name_ = editted user.name field (preserve the original)\njavascript\njavascript\nuser: {\n  name: \"joe the boxer\"\n}\nhtml\nhtml\n<a href=\"#\" editable-text=\"user.name_\">{{ user.name_ || user.name || 'empty' }}</a>\nSo when it renders it shows \"joe the boxer\" and when you click it, it shows an empty input box.  The empty input box is the thing i am trying to fix.  I would like it to display user.name.\nIf i type into the input box the resulting model would change\njavascript\nuser: {\n  name: \"joe the boxer\",\n  name_: \"just joe\"\n}\nDoes that make sense? @vitalets i updated the example, my bad about the code.\n. Tinymce or something along those lines. Think about it now making it\nconfigurable would be cool then you could load a markdown editor if needed.\nOn Friday, September 27, 2013, Vitaliy Potapov wrote:\n\ncould you suggest some js plugin for it?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/15#issuecomment-25282250\n.\n. thanks, i was missing the explicit open form call.\n\nOn Mon, Oct 7, 2013 at 11:21 PM, Vitaliy Potapov\nnotifications@github.comwrote:\n\nAs ng-repeat creates new scope for each item you should not have unique\nform names, just set it to some value:\nhttp://jsfiddle.net/NfPcH/22/\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/19#issuecomment-25867211\n.\n. \n",
    "plandem": "that's duplicate issue:\nhttps://github.com/vitalets/angular-xeditable/issues/21\n. WYSIWYG is not as easy as basic inline editing, especially if you gonna to release it for users/customer, because alot of testing for cross-browser functionalities (each major browser, each major operation system, each major update of depencies (libraries and etc)). Better looks for something like CKEditor inline editor mode, there is a angular wrapper for inline editor - at least i saw it somewhere!\n. Well, here is it:\nhttp://ericpanorel.net/2013/08/03/ckeditor-4-inline-mode-angularjs-directive/\ni'm still new about angular, so i can't rate level of implementation.\nP.S.: Here is official doc about it:\nhttp://docs.ckeditor.com/#!/guide/dev_inline\n. to enable inline editing, you will not do alot from CKEditor/etc side. But if you want to bring some 'events' as angular style, then probably some work will be needed :)\n. Oh, i see. but now i see jQuery at your libs. Do you really need it?\n. ",
    "snez": "something like https://github.com/thijsw/angular-medium-editor\n. ",
    "8bitDesigner": "Oh brilliant, thanks, mate!\n. ",
    "diegopamio": "What about making a new item added automatically editable? http://jsfiddle.net/dpamio/hD5Kh/1/\n. What if I now need to make the latest added item editable after I add it to the collection? I'm requiring this to do a \"+\" button that adds a new row and makes it automatically editable. \nOh... and BTW, I'm using \"edit\" buttons (manual trigger).\n. ",
    "eugene-d": "@vitalets \nhttp://jsfiddle.net/q3bDk/1/ it's your example code. I added data-e-class=\"redEditable\" and data-e-ng-options=\"s.value as s.text for s in statuses\">\n. @vitalets \nyou are welcome. Thank you for such incredible library\n. Cool, thanks!\n. What I can say, it's problem of blur feature. I have the same. To test it add editableOptions.blur = 'submit'; like theme config\n. ",
    "amish-patel": "Thanks guys - CKEditor was definitely good pointer - although I have not used it as form-editable control, I did use a directive on a stand-alone page to provide WYSIWYG editing using CKEditor and it's pretty straightforward \n- http://stackoverflow.com/questions/18685530/multiple-4-2-ckeditor-instances-on-one-page-with-angularjs\n. ",
    "ashernevins": "For what it's worth, this isn't that difficult to do. I used textAngular https://github.com/fraywing/textAngular with xeditable and it works great. The only changes I needed to make were:\n1. Change inputTpl to '' (I did it only for editableTextarea, but you can do it for whatever you like).\n2. Remove one of the x-editable styles that draws a box around the editor in your chosen theme (if applicable).\n3. For convenience sake, I added the submit and cancel buttons to textAngularTools, so that I could turn them off in xeditable and use them right in the textAngular toolbar with the others.\n. ",
    "jonaswindey": "@ashernevins : I think github removed your code when pasting, could you post your code again with correct markdown? Thanks!\n. ",
    "vasya10": "@jonaswindey you can copy the xeditable editableTextArea module and just change this line to:\n(call your directive as editableTextAngular)\ndirectiveName: 'editableTextAngular',\ninputTpl: '<div text-angular></div>',\nand you can use the tag as <div editable-text-area> ... it will work.\n. @vitalets i could submit a PR but currently im not getting the textAngular styles correctly, once i figure out how to set those styles this could be reusable.\n. ",
    "schup": "editable-wysiwig would be nice :-)\n. ",
    "geoidesic": "@vasya10 any luck getting the textAngular styles to work?\n. @ashernevins Any chance you could show your code for how you removed the buttons and added them as toolbars?\n. Problem solved:\n<input e-type=\"number\" e-step=\"any\">\n. ",
    "pdonorio": "+1\nAn editable-wysiwig should be a must :)\nI worked a little with textAngular and found some limitations. Just for the record, i am testing now ng-wysiwyg which - at first impression - seems to cover more options.\nThanks for the great work!\n. +1\nThis plugin is very great and used a lot in my previous project, thanks for your great work.\nI am trying material design now that the official angular material has come to 1.0 version but still no luck. @Toilal did you manage to solve the snippet? May i help in some way?\n. ",
    "christianacca": "Sorry my bad this is already implemented (and documented!). As explained in the docs, I needed to add an e-class attribute to the editable-text tag.\n. Yeah that would be good. That said I think you made a good job of the\ndocs...\nOn 12 Oct 2013 18:03, \"Vitaliy Potapov\" notifications@github.com wrote:\n\nok, I also plan to collect all options in one table for convenience.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/24#issuecomment-26201428\n.\n. Thanks for the tip!\nOn 12 Oct 2013 20:31, \"Vitaliy Potapov\" notifications@github.com wrote:\nhi @christianacca https://github.com/christianacca fixed in dev. thanks\nfor pointing!\nPlease note that to you should provide e-name attributes as well as in\nnormal angular forms.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/25#issuecomment-26204255\n.\n. Of course.\n\nThe specific use case I'm targeting is as follows.\n- onshow I have an event handler that sets the state of the particular\n  model as being in edit mode\n- onclose would then cancel this editing state\nThe onaftersave would probably have been sufficient but it seems this hook\nonly gets called when the user confirms acceptance of their changes.\nChristian\nOn 13 Oct 2013 08:42, \"Vitaliy Potapov\" notifications@github.com wrote:\n\n@christianacca https://github.com/christianacca\ncould you describe a bit the usecase when you need it?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/26#issuecomment-26213055\n.\n. Yeah I did think about that. Infact I used it already in one place in the\ncode. I'll give some more details once I get in front of the code.\n\nI ended up \"pushing the boundaries\" I think with x-editable making a master\ndetail table that allows for adding additional records to the table. I\nthink this drove the need for having an onclose. Like I say I'll get in\nfront of the code and let you know.\nBTW, excellent job on what you've done so far.\nC\nOn 13 Oct 2013 20:13, \"Vitaliy Potapov\" notifications@github.com wrote:\n\nyes, onaftersave is called only when changes are applied.\nI will think about onclose / oncancel callbacks..\nBut also, didn't you try $visible property of form?\nI mean\n\nNow scope.myform.$visible flag refers to form's state.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/26#issuecomment-26224599\n.\n. Cool. Will look at this tonight.\nOn 14 Oct 2013 09:47, \"Vitaliy Potapov\" notifications@github.com wrote:\nthank you! :)\nFor adding new records you may have a look on just released 0.1.5 docs\nhttp://vitalets.github.io/angular-xeditable/#editable-row\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/26#issuecomment-26242773\n.\n. Hi Vitaliy,\n\nHad a look at the example for adding a row. I had already done something similar and then tweaked things to make the behaviour fit how I needed the \"grid\" to work. For example, I needed an editable table. I also wanted the table to be placed in edit mode as soon as the Add button was clicked. Lastly I needed to be to have the cancel button undo the newly added row.\nTo make the newly added row be in edit mode I had to to do something that felt a little bit of a hack. I ended up having to defer the call to tableForm.$show until after the new row had been rendered in the DOM. I did this by scheduling the call to $show inside a $timeout.\nIf you're interested in a working example of this I've updated your example here: [http://jsfiddle.net/christianacca/gpgD4/](http://jsfiddle.net/christianacca/gpgD4/\nI still need to explain why I think there's a need for an onclose hook... I'll post that a little later once I've experimented a bit more with $visible.\nChristian\n. Nice example - really liked how focus is immediately on the first input in\nthe newly added row.\nNot sure how I could use the ng-init to add a new row to an editable\ntable that would achieve the following:\n1. Click on the add row button\n2. New row added to the table\n3. Entire table (including new row) is in edit mode\n4. Focus is immediately on the first input in the newly added row\nIt would be brilliant if you include a new example or update the existing\neditable table example :-) If you stuck for time then maybe just some more\npointers so that I can figure it out myself.\nThanks\nChristian\nOn Tue, Oct 15, 2013 at 8:30 AM, Vitaliy Potapov\nnotifications@github.comwrote:\n\nhi @christianacca https://github.com/christianacca\nI think creating new row already in edit mode is good idea.\nI've updated docs:\nhttp://vitalets.github.io/angular-xeditable/#editable-row\nTo have whole table in edit mode you can also use ng-init directive..\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/26#issuecomment-26314220\n.\n. Hi Vitalets,\n\nAbout that use case for when onclose (with a isCancel argument). I have changed tact a little so that I have now an editable table row for the master table (for the nested details I'm using an editable table). \nAnyway, because an editable row has buttons that I manually define, I can define on ng-click event to hook the form open/close events. So the use case I was going to talk about has gone away for the moment.\nI suspect another scenario will pop up and in which case the onclose hook would be useful for those inputs that are not wrapped in a form with buttons that I can hook.\nChristian\n. Cool!\nOn 16 Oct 2013 14:12, \"Vitaliy Potapov\" notifications@github.com wrote:\n\nhi @christianacca https://github.com/christianacca\nyes I think these hooks can be usefull anyway.\nI plan to add oncancel - called when form is cancelled and onhide -\ncalled when form both saved or cancelled.\nI'll reopen the issue to keep it in mind for nest release.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/26#issuecomment-26416106\n.\n. Will try this out tomorrow afternoon. Thanks for the good work Vitaliy.\n\nOn Sat, Oct 19, 2013 at 4:59 PM, Vitaliy Potapov\nnotifications@github.comwrote:\n\nhi @christianacca https://github.com/christianacca\nplease try with just released 0.1.6\nalso note that  without type attribute works as submit by\ndefault. I've seen it in your plunkr..\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/30#issuecomment-26652573\n.\n. OK, so the suspense was killing me so I couldn't wait until tomorrow :-)\n\nI toyed around with http://jsfiddle.net/christianacca/gpgD4/ and the code is much better.\nI still need to employ one hack to ensure that the first input of the newly added row has focus. I needed a custom directive 'focusMe' and scheduling user.isFocused = true within a $timeout.\nHere's the significant parts of code (from the above jsfiddle) for adding a user:\n``` js\n  $scope.addUser = function() {\n    var newUser = {\n      id: $scope.users.length ...\n    };\n    $scope.users.push(newUser);\nif (!$scope.tableform.$visible) {\n  $scope.tableform.$show();\n}    \n// Hack to be able to add a record and have focus set to the new row\n$timeout(function(){\n   newUser.isFocused = true;\n}, 0);\n\n};\n```\nI think it would be more intuitive to have focus on the newly added row rather than having to perform these tricks. What do you think?\nChristian\n. I knew you would have a solution up your sleeve! Thanks Vitaliy\nOn Mon, Oct 21, 2013 at 7:42 AM, Vitaliy Potapov\nnotifications@github.comwrote:\n\nhi @christianacca https://github.com/christianacca\nI've updated fiddle to get it working without custom directive and\nuser.isFocused flag.\nIt uses some undocumented features, I think I will add it to docs.\nhttp://jsfiddle.net/gpgD4/10/\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/30#issuecomment-26695529\n.\n. Excellent\nOn 22 Oct 2013 08:56, \"Vitaliy Potapov\" notifications@github.com wrote:\ntotally agree, good feature.!\nI plan to add two directives: checklist and radiolist.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/35#issuecomment-26783651\n.\n. \n",
    "rbedemann": "i'm having the same problem with the latest version 0.1.8. it's working in fiddle but not inside my app. are there any known incompatibilities?\n. ",
    "ryanlanciaux": "Maybe less than ideal but I needed popover styles for text and select elements. I just modified some CSS as a short term solution (it's very manual sizing / layout). http://jsfiddle.net/EWcUw/4/\n. If I understand correctly, it would be possible to re-position the popover based on the layout of the container (saying the popover would be on the left of the link or below it etc etc) but I think it would be a bit more javascript and couldn't be solved as easily with just CSS.  One other thing (and this may look terrible) is this something where you can adjust the z-index of the accordion and the popover so that the popover would show up on top?\n. @vitalets Thanks! I appreciate all your incredible work on these plugins! \n@igler Totally understandable -- I may try to fork and add something like this (but handling the sizing, etc) to the project in the future. For now, I have updated the demo to allow popup positioning on the right side http://jsfiddle.net/EWcUw/5/. This is still very manual sizing / positioning. The side can be adjusted by messing with the left / right positioning on the form and the borders/positioning in the before/after pseudo element. I hope this is more inline with what you're trying to do :) \n. ",
    "albertomizrahi": "Any updates on this?\n. ",
    "maverix": "@amb110395 +1\n. ",
    "mackelito": "FYI: Angular-straps no longer requires bootstrap or jQuery\n. You could solve this with pure css.\n.editable-wrap {\n  position: absolute;\n  z-index: 999;\n  display: inline-block;\n  overflow: scroll;\n  width: 300px;\n  max-height: 300px;\n  margin: 0;\n  padding: 15px;\n  white-space: nowrap;\n  border: 1px solid @gray-lighter;\n  border-radius: 4px;\n  background-color: #fff;\n}\n. No one?\n. ",
    "Wesseldr": "Looks like the: \"popup mode (waiting https://github.com/angular-ui/bootstrap/pull/1391)\" and also \"merged angular-ui/bootstrap#1046\" is now merged. hope someone can give it a kick, currently to new to get the big picture of this :)\n. ",
    "aguirrel": "Hi guys, thanks for this great component! Somebody has some update?\n. @mitcht Could you review why do you close it? I think being old doesn't mean nobody need it.  If it was solved, tag it, if not, please leave it open.\n. ",
    "t8g": "As a temporary workaround, I have just used the click event on the save button :+1: \nelem.find('button:submit').click(function(event) {\n    event.preventDefault();\n    scope.$apply(function() {\n      eForm.$submit();\n    });\n});\n. ",
    "smancke": "Oh, this is a duplicate of buy #29,\nso... closing.\n. ",
    "kanakiyajay": "I have got the same problem as @christianacca .\nMy case is when the user blurs or exits an xeditable cell in a table , the validation errors should be displayed on a bs.popover.\nIs it possible to use Ui Utils for blur events.\n. I found a fix to the issue.\nI didn't know that you can apply double directives to by pre-fixing with e-\nExample ,\n<span id=\"blur-element\" editable-text=\"Hello World\" e-blurcontrol></span>\napp.directive(\"blurcontrol\",function  () {\n //your code\n})\n. +1\n. I first tried than inside app.run() thought it didn't work as expected.\nBut mine is a complex app , with many templates , partials and directives.\n. ",
    "ricatom": "Thank you for feedback.\nTo continue using the angular 1.0.8, adapted his example using the ui-keypress (# https://github.com/angular-ui/ui-utils keypress) and got:\ne-ui-keypress=\"{13:'rowform.$submit()',esc:'rowform.$hide()'}\"\n. ",
    "kdekooter": "Thanks, I'll work around it for now.\n. ",
    "mparisi76": "+1 Would love if this could happen programmatically!\n. Oh I misunderstood the actual issue then. What I meant was to have the editable input box and submit/cancel buttons activated programmatically, as if the user had clicked to edit the text.\n. Awesome! Thank you!\n. I have noticed an undesirable side-effect of this when looking at http://jsfiddle.net/NfPcH/219/ \nWhen I click out of the editable text field, I am not able to click back in to edit again. Is this a bug?\n. I think you misunderstood me. If you go to http://jsfiddle.net/NfPcH/219/ you will see that the \"awesome user\" text is an editable input. If you now click outside of it, the input box goes away. If you then try to click back in to edit the text again, nothing happens.\n. Ahh, that worked great. Thanks!!\n. e-maxlength=\"100\"\nthanks! ;-)\n. I have another question that may be more relevant. I've noticed that when buttons=\"no\" $save naver gets called when the text area loses focus. How can I call $save without buttons?\nThanks.\n. That would be:\nblur=\"submit\"\n. ",
    "AlessandroEmm": "+1\n. Sure:\nLets say you have a ng-repeat\n<div ng-repeat=\"item in items\">\n  <span> item.value </span> <br /> <span> item.anotherValue </span>\n  </div>\nAnd now I want to make all \"repeats\" of item.values editable, and have the changes reflected in the array \"items\".\n. ",
    "Madd0g": "@vitalets - in your fiddle (and my replication of it), enter is not working to submit, only using the button :(\nThis is really a useful missing feature.\n. oops, apparently it's been an issue for a while - https://github.com/vitalets/angular-xeditable/issues/6\n. @gae - I ended up removing the wrapping form, if I remember correctly.\nNOT an acceptable solution really.\nOn Wed, Apr 1, 2015 at 5:53 PM, gae123 notifications@github.com wrote:\n\nI am hitting the same issue. @rainery https://github.com/rainery I do\nnot understand you. @Madd0g https://github.com/Madd0g did you ever\nfigure this out?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/138#issuecomment-88676613\n.\n. there's an event called onshow, you can pass the $form and do stuff with $editables\n\nI just did this onshow=\"selectAll($form)\": \n$scope.selectAll = function (form)\n{\n    var input = form.$editables[0].inputEl;\n    setTimeout(function () { input.select(); }, 50);\n};\n. @dimaslz - Is there a way to do this from the parent controller?\nWhere does the e-form become available? Only inside that element? How can I pass it to the external controller scope for it to decide when to call $show?\nIt seems like all the examples are around using the variable set in e-form inside the element where it is set, but how to use it from outside??\nI wanted to post a new issue to ask this, but since this is so relevant, I thought I'd post here.\nThanks\n. It is quite inconvenient to get a reference to the form in order to close/submit it.\nI add this attribute\ne-form='{{saveForm($form)}}',\nand saveForm just saves the form in my scope variable, so I can later call $submit on it.\nThe method above that gets the controller from the HTML elements seems like it would work too, but doesn't seem very angular-ish.\nI don't know what's the best way to make this happen, I'm using other angular libraries where the same problem exists - the only way to get a reference to something is to use an attribute in the directive, it's really awkward but I don't know of better alternatives.\n. ",
    "rustyfausak": "Something like this might work (jquery 1.7+)\n$(document).ready(function () {\n    $('html').on('focus', 'input.editable-input', function () {\n        $(this).select();\n    });\n});\n. ",
    "skalb": "Is it possible to make options out of this (and other show behaviors)? \nFor example, clear-on-show=true or select-on-show=true that would clear and highlight the field being edited. I'm happy to submit a PR for this, if you can point me in the right direction.\n. ",
    "dvnrsn": "Updated @vitalets fiddle to angularjs 1.6 because I'm not exactly following what was made available via those commits. http://jsfiddle.net/NfPcH/21066/. ",
    "schadedk": "I don't know if this is the right way to do it, I did accomplish it, and this is what I did:\n<span editable-select=\"select1\" e-class=\"select-field\" onshow=\"showingSelect1(this)....>\n<span editable-select=\"select2\" e-class=\"select-field\" e-ng-options=\"s.Id as s.Text for s in select2data\" ...>\nOn my controller the showingSelect method did the following:\n$scope.showingSelect = function (selectDirective) {\nselectDirective.$watch('$data', function () {\n            <<when data is change change the value for select2data >>\n        });\n    };\n. Thanks!\nYour solution is much nicer, and is just what I was looking for.\nThank you for your help!\n. ",
    "pavi95": "I am working on dynamic drop downs. Tried with your possible solutions but not able to achieve.. Please help me out!! @vitalets @schadedk . @ckosloski  @ajjublr Thanks for your valuable time man. I found this fiddle.. It helps me out.. https://jsfiddle.net/32kzsvve/1/ it may help others . Any update on this? Am stuck with this issue.. . @ckosloski Exactly my issue is cascading dropdown. While am selecting dropdown A, it will update the dropdown B like country and state. my scope variable is not updating in my view :(. @ckosloski Thanks for your time man.. I found this https://jsfiddle.net/32kzsvve/1/ It helps me out.. . Did you sort out this @HollandRisley . @ckosloski  Thank you very much for your time.. I found this https://jsfiddle.net/32kzsvve/1/ Such an awesome. It may help others :)\n. @ckosloski  Can you please let me know how to handle the uploaded file to server on save form? Not able to get the file using scope. Please help me out. @ckosloski  Thanks for your reply. Please find my code\nMy template:\n`\n{{item.channel_logo}} \n \n\n\n          Save\n        \n\n          Cancel\n        \n\n`\nMy js:\n$scope.updateItem = function (data, file, id, rowform){\n    return $http.post('/api/updateChannel', {data: data, id:id}).then(\n      function successCallback(response){\n          console.log(response.data);\n\n        $scope.alertMessageSuccess = true;\n            $timeout( function(){ $scope.callAtTimeout(); }, 5000);\n\n      }, \n      function errorCallback(err, status, headers) {\n\n            $scope.editableForm.$setError('name', 'Unknown error!');\n            $scope.alertMessageWarning = true;\n            $timeout( function(){ $scope.callAtTimeout(); }, 5000);\n      }\n    );\n}\n\nError: no data passed through post method for file.\nMy question: How to send the uploaded formData to api server call? Please help me. Please find it here\nMy Form:\n<form editable-form name=\"rowform\" ng-show=\"rowform.$visible\" class=\"form-buttons form-inline\"\n            shown=\"inserted == item\" onbeforesave=\"updateItem($data, $files, item.channel_id, rowform)\">\nMy editable file upload div:\n<span e-ng-file-select=\"onFileSelect($files)\" e-accept=\".jpg,.png,.gif,.jpeg\" editable-file=\"item.channel_logo\" e-name=\"channel_logo\" e-form=\"rowform\"  e-required>{{item.channel_logo}} </span>. Thanks @ckosloski . Yes it worked only for the static data not for the dynamic API call. That is my problem here. Please find the js fiddle here https://jsfiddle.net/Pavi95/k2f6osdu/1/ . Please check this fiddle https://jsfiddle.net/Pavi95/k2f6osdu/5 I updated sample data format below HTML section. @ckosloski I fixed this by using angular way of jquery :). ",
    "ckosloski": "@pavi95 can you provide a jsfiddle/plunkr showing your issue?. @pavi95 what exactly is your issue?  As far as I know e-ng-change should work.  Please provide a jsfiddle/plunkr showing your issue.. This is still an issue.  I played around with the code and wasn't able to find a solution.. The datepicker is currently bootstrap3 and the html5 password input is supported.\n@eugef please close.\n. The e-required example does work in the document here.  It uses the HTML5 required validation.  Are you using a browser that supports HTML5 validation?  I know that Safari does not support it.\n. e-required does not work in the editable-form case because the form is submitted via a script.  HTML5 validation only runs if a form is submitted via the submit button.\nI will add a note to the documentation about this fact.\n. e-required does work in some situations.  How are you trying to use it?\nIf you are checking for existence of a value, I think onbeforesave is the only other option.\n. You have to use onbeforesave to check input values before saving.  Or maybe have an onchange on the input field that can validate the input.\n. Everything is working as intended, which isn't what some people are looking for.  No one has offered a pull request to improve the functionality so I suggest closing it.. Is this still an issue?. See this thread on your options for for doing this.. @eugef this question has been answered, please close.. This has already been fixed, this can be closed.\n. @eugef I think this can be closed. I don't see this error being thrown on the site, I think this can be closed.\n. Here is an idea on how to do it.  That code is very specific to the demo, so I don't think it is something that belongs in the project.\nI was playing around in the project and came up with this.  You could pass in  your own onhide function maybe to do something similar.\n```\n      //Auto open next element if autoOpen is set and no onhide function is already set\n      if (!$attrs.onhide && editableOptions.autoOpen) {\n          self.onhide = function() {\n              var next = self.elem.next('.editable');\n          if (next) {\n              return $timeout(function () {\n                  next.click();\n              }, 300);\n          } else {\n              return angular.noop;\n          }\n      };\n  }. @eugef Please close this issue due to lack of response. You can do something like this to open the next field:\n\n```\n\n    {{ user.name }}\n  \n  \u00a0\n  \n    {{ user.name }}\n  \n$scope.nextElement = function(id) {\n    $timeout(function() {\n        angular.element('#' + id).trigger('click');\n    }, 50);\n};. @eugef This has been answered, please close.. Is this still an issue?. @eugef There hasn't been an recent follow up on this, please close.. It does exist in [cdnjs](https://cdnjs.com/libraries/angular-xeditable)\n\n@eugef please close\n. Is this still an issue?\n. @lanceschi is this still an issue?. @eugef please close due to lack of response. The editable-table example shows on to use an on-cancel event to do this.\n. @eugef I think this can be closed.. @eugef please close this issue, the current demo is working correctly.\n. @pavi95 what exactly is your issue?. Can this issue be closed?. Is this still an issue?\n. Couldn't you setup a form to edit two different fields?. Is this still an issue?\n. @eugef There has been no follow up, please close.. @eugef I think this can be closed since #238 was closed.\n. Did you try e-maxlength=490?  It should work on textarea.\n. See this fiddle\n. Thanks for sharing your code. Since wysihtml5 isn't supported anymore should this be closed?\n. @eugef I think this can be closed.. I think the issue with the checklist/checkbox/radiolist is that these tags don't transfer all of the e- attributes like some of the other elements.  I believe this is a code change to transfer the ng-change to the input element and remove it from the parent element. \nThe can't find ng-model error comes from the fact that the ng-change winds up on the containing span of the radio list and not on the actual input element.\n. @eugef ng-change is now supported, please close.. Please see discussion in #563, you need to change the template of the header in order for the clicks to work correctly.\nPlease close.\n. @eugef I think this can be closed.. Is this issue fixed now that #489 has been merged?. I think this can be closed due to #235\n. Is this still an issue?\n. @eugef There has been no follow up, please close.. Can you provide a plunker/jsfiddle showing your issue?\n. The reason your track by index didn't work is because you are using an older version of angular in your fiddle.\n. I think this can be closed due to #235\n. Is this still an issue?\n. @eugef There has been no follow up, please close.. Looks like the stackoverflow question was answered.  Please close.\n. @eugef I think this issue can be closed.. Is this still an issue?\n. Support for tabbing was added with pr #590.\n@eugef I think this issue can be closed.. Is this still an issue?\n. @eugef looks like a solution was posted, please close. Is this still an issue?\n. I tried using UTF-8 characters on the demo site and I don't see any issues.  Maybe you didn't properly set your page encoding to UTF-8.. @eugef There has been no follow up, please close.. Is this still an issue?\n. @eugef There has been no follow up, please close.. Is this still an issue?\n. @eugef There has been no follow up on this issue, please close.. @eugef This issue looks answered, please close. Maybe the comments in #521 will help. Is this still an issue?\n. @eugef There has been no follow up on this issue, please close. I think you can use an onchange event to update other fields.. @eugef Please close this issue due to lack of response. You could probably setup a function that loops through any existing values that are used and removes them from the available list.\nOr, create an AJAX call and have your backend query filter out the values already saved to the db (if items are being saved).. @eugef There has been no follow up, I think this can be closed.. @eugef I think this can be closed.. See if this comment  helps you.. @eugef please close, this issue looks like it's answered.. Is this still an issue?. You can use the onbeforesave attribute to call a function that can display an error.  The editable-row example shows how to do this.. There is an example here with a popup that has several fields.. Did you ever figure this out?. @eugef Please close due to lack of response. Is this still an issue?  If so, can you provide a link to a plunkr/jsfiddle?. @eugef There has been no follow up on this issue, let's close it.. This was fixed with #463 \n. @eugef I think this can be closed due to #491. Pull requests are accepted :)\n. Is this still an issue?\n. @eugef There has been no follow up on the issue, I think this can be closed.. Can this be closed?\n. @eugef This question appears answered, please close.. Pull requests are welcome :). You can use e-ng-change\n@eugef please close this issue.\n. @lalitkapoor if your change is working, can you create a pull request?\n. @lalitkapoor I tried making your changes from the commit you posted above, but the changes seem to break the editable form and row examples.\nIs there a different commit that contains more changes?. @eugef please close\n. Is this still an issue?\n. @eugef please close\n. Is this still an issue?  I can verify it works for me in OS X with Firefox 49.\n. Is this still an issue?  I just tested this scenario and it appears to be working correctly.\n. @fabiomello is this still an issue?. This can be closed now that 0.1.12 was released.\n. This was fixed by PR #179.  This can be closed\n. ng-value has been added to editable-radiolist.\n@eugef this can be closed.\n. @eugef I think this can be closed.\n. @eugef please close, the html5-inputs phone issues where fixed in #561 . Is this still an issue?\n. @eugef I think this can be closed.\n. Is this still an issue?\n. I tried the plnk on my iPad 2 and I didn't see an issue.  Is this specific to iPad mini?. @cccastle is this still an issue?. This is working correctly with the latest version of angular-xeditable and angular-ui-bootstrap.\n@eugef please close\n. This is working correctly with the latest version of angular-xeditable and angular-ui-bootstrap.\n@eugef please close.\n. It looks like you might be able to manually check the dirty flag for the input.  See this comment\n. @eugef please close due to lack of response. Duplicates #236\n@eugef  please close\n. Did you get this resolved?  Looking at your link, I think the issue in in editable-text=\"{{item.Name}}\"\nIt should be editable-text=\"item.Name\"\n. @sprguillen is this still an issue?. @eugef please close due to lack of response. Pull requests are welcome :). @eugef I feel like this can be closed.  The referenced image editor is no longer supported.  Not sure if this is needed in the project.. Yes, this is possible. \nYou have to override your error template to wrap the error div in the \"popup-wrapper\".\nerrorTpl:    '<div class=\"popover-wrapper\"><div class=\"editable-error help-block\" data-ng-if=\"$error\" data-ng-bind=\"$error\"></div></div>',\nThen add the following css:\n```\n.popover-wrapper .editable-error {\n    position: absolute;\n    top: -59px;\n    background: #FFF;\n    border: 1px solid #AAA;\n    border-radius: 5px;\n    padding: 7px;\n    width: auto;\n    display: inline-block;\n    left: 50%;\n    z-index: 101;\n}\n.popover-wrapper .editable-error:before {\n    content:\"\";\n    width: 0;\n    height: 0;\n    border-left: 10px solid transparent;\n    border-right: 10px solid transparent;\n    border-top: 10px solid #AAA;\n    position:absolute;\n    bottom:-10px;\n}\n.popover-wrapper .editable-error:after {\n    content:\"\";\n    width:0;\n    height:0;\n    border-left: 9px solid transparent;\n    border-right: 9px solid transparent;\n    border-top: 9px solid #FFF;\n    position:relative;\n    bottom:-9px;\n}\n@media screen and (min-width: 750px) {\n    .popover-wrapper .editable-error {\n        margin-left: -260px;\n    }\n    .popover-wrapper form:before, .popover-wrapper .editable-error:before {\n        left:100px;\n    }\n.popover-wrapper form:after, .popover-wrapper .editable-error:after {\n    left:101px;\n}\n\n}\n```\nLooks like:\n\n. @eugef This question has been answered, please close. This is possible, you just need to wrap the items contained in the form in an <a> and it will work.  Here is an example (although you might need to tweak the css).\n``````\n\n\n\n\n editable username (text with validation) \nUser name: \n{{ user.name || 'empty' }}\n \n    <div>\n      <!-- editable status (select-local) -->\n      <span class=\"title\">Status: </span>\n      <span editable-select=\"user.status\" e-name=\"status\" e-ng-options=\"s.value as s.text for s in statuses\">\n        {{ (statuses | filter:{value: user.status})[0].text || 'Not set' }}\n      </span>\n    </div>\n\n    <div>\n      <!-- editable group (select-remote) -->\n      <span class=\"title\">Group: </span>\n      <span editable-select=\"user.group\" e-name=\"group\" onshow=\"loadGroups()\" e-ng-options=\"g.id as g.text for g in groups\">\n        {{ showGroup() }}\n      </span>\n    </div>\n</a>\n<div class=\"buttons\">\n  <!-- buttons to submit / cancel form -->\n  <span ng-show=\"editableForm.$visible\">\n    <button type=\"submit\" class=\"btn btn-primary\" ng-disabled=\"editableForm.$waiting\">\n      Save\n    </button>\n    <button type=\"button\" class=\"btn btn-default\" ng-disabled=\"editableForm.$waiting\" ng-click=\"editableForm.$cancel()\">\n      Cancel\n    </button>\n  </span>\n</div>\n\n\n ``\n``````\n. @eugef this question is answered, please close.. Just include your own css file that overrides the xeditable css classes your want changed for your site.\n. @eugef This question is answered, please close.. This works with the latest versions of angular/ui-bootstrap/bootstrap/xeditable.  Here is the [jsfiddle](http://jsfiddle.net/ckosloski/4k4m3nen/6/)\n. @eugef This question is answered, please close.. Take a look at thisng-initsolution:\nhttp://stackoverflow.com/a/27863346/5920696\n. @eugef this question is answered, please close.. This is a good idea, but do you have a better control that could be added.  The one you linked to doesn't seem that good (to me).\nThere is ui-select that is supported and may do what you need: https://github.com/angular-ui/ui-select/wiki/ui-select\n. Can you provide some more info on this issue?\n. @navinSing is this still an issue?. @eugef please close due to lack of response. I think this can be closed due to #235 \n. What you need to do is setblurElem='submit'. @eugef This question is answered, please close.. Not sure if you can only display one element of a form as editable.  Is this still an issue for you?\n. @eugef please close due to lack of response. This can be closed.  This was fixed in 0.1.9.\n. Not sure what you mean.  Is this still an issue?\n. @eugef please close due to lack of response. To turn off the buttons you dobuttons='no'. @eugef This question is answered, please close.. @eugef since #76 was closed, this can be closed.. Take a look at this - http://stackoverflow.com/questions/39244079/how-to-order-checked-checkbox-at-the-top-of-the-list-in-angularjs\n. I think you have the form declaration incorrect, please take a look at the form column example - http://vitalets.github.io/angular-xeditable/#editable-column\n. @eugef Please close due to lack of response. Pull request are welcome :). Is this still an issue?\n. I just tried the fix listed above and it did not work.  Since the default theme inputTpl is blank, nothing gets displayed.. @eugef please close due to lack of response. @eugef This question is answered, please close.. You have to haveeditable-form=\"rowform\". @eugef This question is answered, please close.. Is this issue resolved?\n. Try using thee-singleattribute.. Is this still an issue?\n. Can you close the issue then?\n. In yourapp.jsseteditableOptions.activate = 'select';. @eugef question answered, please close. Since there is a wontfix label on this ticket, shouldn't it just be closed?\n. I looked at the jsfiddle in the original post and I'm not seeing what the issue is.  Both dropdowns are being updated when I select a value in either dropdown.\n. Password support was fixed in 0.1.11.\n. I think this can be closed.  I no longer see any references to $http.push in the documentation.\n. Is this still an issue?  I don't have an iPhone, but this the jsfiddle works on my iPad.. @troygilbert any idea as to what the issue is?. @Mcafee123 is this pull request still relevant?. Is this still an issue?  If so, can you provide a jsfiddle or plunker?\n. @alzorz is this still an issue?. The model is not updated until after the save.  The original model value would be empty until the editable save is complete.\n. @eugef The question is answered, please close.. I think it might be possible, but I you would have to update the templates in treeview to have the xeditable directives on the nodes that are editable.\n. @ImranAppdev is this still an issue?. I just verified that this indeed does happen with the current version for textbox and textarea fields.\n@eugef this issue can be closed.\n. What issue are you trying to show?  I am not seeing any errors in the console and I am able to select a different date in the popup.\n. @eugef please close.  bs-date is working with the current version of xeditable and uibootstrap. I looked at the diff posted above and it states there are no differences.  The feature appears to have been merged.  \n@eugef please close.\n. editable-bsdate is the ui-bootstrap datepicker and doesn't have a time option. \nThe html5 date input has been deprecated and is no longer supported.\nYou could try using editable-combodate for a date/time picker.\n. @eugef please close. If you have a form, you can just dotheNameOfYourEditableForm.$show().\nIf you want to reset the data on the form, just reset your model.\n. @eugef I think it's safe to close this issue.. Pull requests are welcome :)\n. I would think there is a better way to do this than using onshow.  If you are adding a class, couldn't you do anng-classthat inspects the$visibilityproperty of theeditable-form`?\n. @avandendaele is this still an issue?. @eugef can you please close this issue.. I would think you can use some one of onchange/onaftersave to set other values in scope.\nCurrently edit-disabled is not watched, so any changes to it once the form is initially rendered are not picked up.  #282 is supposed to fix that issues, but it's not yet merged to master.\n. @eugef this issue is fixed, please close.. is this still an issue?\n. @eugef please close. Is this still an issue?  In the current version, if you have multiple editable elements, clicking on a second one will close the first one.  This is correct behavior.\n. @eugef please close.  Radiolist works in the current release.. Password support was fixed in 0.1.11.\n. If you want to cancel the model update on an error, you would have to use onbeforesave instead.  The documentation does say the model is updated first with onaftersave:\n\nAnother way to submit data on server is to define onaftersave attribute pointing to some method of scope. Useful when you need to update local model first and only then send it to server. \n. @eugef The question is answered, please close.. It should be \"e-minDate\" and not \"e-min\"\n. @eugef please close.. Is this still an issue?\n. @AndrewIsh is this still an issue?. You want to be able to show text instead of icons?\nYou can always overwrite the the button template with your own to include customized text.\n. Looking at #19, this is a scope issue.  Did some playing around, but didn't figure anything out.\n. Is this still an issue?\n. @davidsielert is this still an issue?. I guess I don't understand what the issue is here.  Is it that the names don't get dynamically generated?   Or that the forms don't work with dynamically generated forms?\n. Apparently there is an attribute called e-clickable that you can add to the single editable-text to get this to work.\nHere is the modified plunkr from above that works.. @area did you ever figure out a better approach?. @eugef Since the code doesn't work in the request, I propose it should be closed.. @eugef I just noticed this was merged into vitalets:dev.  Shouldn't this have beem merged into vitalets:master?\n. I just checked out the dev branch and ran the dev-test's in all 3 browsers and I don't see that error.\n\nDo you have any local changes?\nThis is what I see as the last commit:\n\ncommit 46e43771e447c27b2a19cbfb9ef3fd442f0f4348\nMerge: 4d05668 b55e7ad\nAuthor: Eugene Fidelin eugene.fidelin@gmail.com\nDate:   Mon Apr 25 09:57:47 2016 +0200\n\n```\nMerge pull request #282 from jivasquez/dev\nFixed text-disable so it \"Watches\" the actual value of the edit-disabled attribute instead of the initial value\n```\n. Sorry about the mixup.\nIn the demos/dev-text/text.js, remove class=\"submit\" from the last a tag, the one with id=\"editingEnabled\".\nNot sure why this didn't fail before.\n. @eugef did my suggestion above work?\n. I tried these changes locally and they didn't work for me.  The onkeyup function never gets called.\nThere was also an issue in the onkeyup/desc.md file that cause a formatting issue on the generated index file.\nAlso, the dist files need to be removed from the pull request.\n. @qisaw can you clean up your request?. @eugef Since the code doesn't work in the request, I propose it should be closed.. This can be closed.  It was fixed by #456 \n. I'm not sure that is right either.  editableOptions.blurElem will always have a value (defaults to cancel), so the last or will never be used.\n. @eugef please close, this was fixed in #649. I have done a push and that adds the item to the list and opens it for edit. (i.e. $scope.movies.push(data) )\n. You can also set editableOptions.activate='select' for the text to be automatically selected upon edit.\n. @eugef this question is answered, please close.. Is there still an issue here?\n. @eugef there is an answer, please close.. @eugef this was fixed by #544 please close\n. I have verified that with the latest AngularJS and angular-xedtiable, using ng-bind-html shows the tags in the edit link for editable-textarea.\n. @eugef please close\n. This doesn't work correctly.  Adding default then messes up the styling for ui-select, typeahead and ng-tags directives.\n. @alograg can you fix you request so that it works for all directives?. @alograg Here are the issues with ui-select and ng-tags\nWith your changes:\n\n\nWithout:\n\n\n. @alograg any update on this?. @eugef is this still relevant?. @eugef what do you want to do with this pull request?. 1.  This has been fixed.\n2.  I think you could add this yourself.  You could take a look at how ui-select was implemented.\n3.  ui-select has been implemented.\n. @eugef The roadmap has been already been removed, please close.\n. It works with the latest 1.5.3.\n. Is this still an issue?  If so, can you provide a plunker/jsfiddle?\n. @pcapozzi is this still an issue?. @vjkumarsw is this still an issue?. @djandyr Did you try using a date picker instead of formatting a date for a text input?\n. Not currently.\n. Can you provide the code for your xeditable element?  If you are building the name of the model in the element, that currently is not supported.. Why do you not have a model assigned to editable-text?. Yes, you have to have a model.. Thanks for the comment @jdmallen \n@eugef I think you can close this issue.. @eugef please close, this was fixed in #590. Is this still an issue?\n. @aszharite is this still an issue?. Is this still an issue?\n. @damylen are you still  having a problem?. Is this still an issue?\n. Can you provide a jsfiddle or plunkr showing your issue?\n. When using editable-form, you have to have a button to show the form.  See the documentation. \nHere is your updated jsfiddle with the edit button.\nOr, I suppose in your case, you could add an on-click event to the href to show the form.\n. @eugef The question is answered, please close.. Is this still an issue?\n. You can either add e-class to have classes transferred to the input or override the xeditable classes in your own css file.\n. @eugef The question is answered, please close.. @eugef this could possible by closed since blur on tab was added in #590. This issue can be closed.\n. Is this still an issue with the latest release?\n. Can you post your code or a jsfiddle/plunker showing your issue?\n. Please post your code.\n. @scripterkaran are you still having an issue?. I tried this code and it doesn't seem to be working right.  It is appending a comma after the selected value.  Is that the intention?\nAlso, add a demo and documentation.\n. @rbecheras can you update your request?. @rbecheras any update on this?. @JetFault are you still having an issue?. Does this still happen with the latest release?\n. I tried this change and it does not work.  All form submits fail because eForm.$valid is undefined.\nWhat is this change supposed to do?\n. @marthinal is this request still relevant?. @eugef Since the code doesn't work in the request, I propose it should be closed.. Pull requests are welcome :)\n. Pull requests are welcome\n. You need to set the z-index of the \"one\" class to -1 and then it will be behind the div that contains the expanded text area.\n. @eugef please close. You need to set buttons=\"no\" and blur=\"submit\" in order for this to work correctly with checklist.\n. @eugef please close. Is this still an issue with the latest release?\n. Can you share you directive?\n. @dlwhiteman can you share you code?. Can you provide a plunker or jsfiddle for your issue?\n. @eugef Please close due to lack of response.. Is this still an issue with the latest release?\n. I have verified that the rowform example works with the latest release.\n@eugef please close.\n. Can you provide a plunker or jsfiddle showing your issue?\n. @khaltouaca can you provide a plnkr or jsfiddle showing your issue?. @sureshamk are you still having an issue?. @eugef Please close due to lack of response.. Is this still an issue?\n. @okonet are you still having an issue?. OK, can you please close then :). Is this still an issue?\n. @beedaan can you provide a plnkr or jsfiddle showing your issue?. @eugef please close this issue.. The documentation for onbeforesave says a string must be returned and that string is displayed as the error.. Your issue is different that the one mentioned originally.  It seems there is no handling/display of error messages for the onbeforesave that is set at the form level.\nIt does seem like the documentation does back that up:\n\nIf you need to send data on server before writing to local model then you should define form's onbeforesave.\nThe result of form's onbeforesave is important for next step:\ntrue or undefined: local model will be updated and form will call onaftersave\nfalse: local model will not be updated and form will just close (e.g. you update local model yourself)\nstring: local model will not be updated and form will not close (e.g. server error)\n\nVS what is says for onbeforesave for a specific editable element:\n\nIf you need validation of individual editable elements then you should define onbeforesave on particular editable element.\nThe result of child's onbeforesave is important for next step:\nstring: submit will be cancelled, form will stay opened, string will be shown as error message\nnot string: submit will be continued. @dongyb80 I did take try some stuff to see if I could get errors to display on the form level, but I didn't get anything to work.  If you come up with something, please post your code here.. Thanks @dongyb80, at least it's a step in the right direction :). You could use edit-disabled=true and use some css to style the link so that it doesn't appear clickable.  Not sure if this will work, but you could try it:  a[edit-disabled=true] {\n    cursor: default; text-decoration:none;\n}\n. @eugef I think this can be closed since edit-disable is now dynamic and #496 was also closed\n. There is a e-placeholder attribute that you can set and it will add the \"blank\" or \"default\" selection option to the list.  This should resolve your issue.\n. @eugef please close. Have you tried this on the most recent build?\n. @Pavan1889 have you tried this on the most recent build?. @eugef a valid answer was given, please close.. You need to name your editable form the same as your form name editable-form=\"rowform\".\n\nSee this updated plunker\n. @eugef this issue has been answered, please close.. @eugef looks like he answered his own question, please close.. Can you provide a plunker or jsfiddle showing your issue?\n. Can you provide a plunker or jsfiddle with your issue?\n. @eugef Please close due to lack of response.. I don't think this request is valid.  You can just add the e-ng-change' attribute and that will addng-changeto the generated text input field.\n. @eugef I think this can be closed becausee-ng-changeis already supported.. @eugef looks like a valid answer was given.  Please close.. This feature was added with version 0.1.10.  This issue can be closed.\n. The reason a td doesn't work is because the code tries to hide the text when the input field is shown.  Since the td contains both the text and the input field, the td ends up being hidden which then messes things up.\nThe documentation does state that editable-elements should be placed inside table cells.\nThis is working as intended and can be closed.. @eugef please close. I think this is more of an angular issue.  See [this issue](https://github.com/angular/angular.js/issues/10146)\n. @eugef please close, this is an angular issue, not a xeditable issue.. Should this request be closed?\n. You have to sete-tabindexon your columns like [this](http://jsfiddle.net/ckosloski/g807jm1j/2/)\n. Posted to Stack Overflow.  You can close this issue now.\n. Can you provide a Plunker or JSFiddle showing your issue?\n. @exp-anoop are you still having an issue?. OK, can you please close then?. Is this still an issue?  Did you figure out a solution?\n. @eugef it looks like he answered his own question since the plnkr has the computed value.  Please close.. - 1\n. This can be closed, it was fixed by #456 \n. @kenfdev have you tried building the latest code?  I have put in some changes that reduced the memory leak that haven't been released yet.  You could see if that helps you out.\n. Is this issue fixed now that #489 has been merged?\n. @eugef this can be closed, it was fixed by #489 . This change appears ok and ready to merge.\n. Have you tried with a more recent version?\n. @chadpry are you still having an issue?. @eugef Please close due to lack of response.. This looks to be answered with the last comment.\n@eugef please close.. For the original question, try the latest version.  There were some changes to how scope works for the editable-elements, maybe that will fix  your issue.\n. @dlwhiteman are you still having an issue?. This might be fixed by pull request #414 \n. Can you try this in the latest release?\n. @eugef this should be fixed with the latest release, please close.. @eugef can you close this issue?\n. You should be able to add ae-ng-disabledattribute with a check on your textarea.\n. @eugef question is answered, please close.. @sagimann Can you post how you were using the ng-form?   I'm trying to use the code above but I don't think I using the editable with  ng-form correctly.  I'm not able to submit the form.. I think this issue can be closed.\n. Can  you explain your issue some more?  Once you submit or cancel, the fields return back to links.  Are you expecting the link to have the focus?\n. @r-coursera are you still having an issue?. @eugef Please close due to lack of response.. The dist folder has been updated with the latest release.\n. Couldn't you usee-ng-changeto hide/show the other fields?\n. @popsovy are you still having an issue?. @eugef Please close due to lack of response.. Can you provide a Plunker or JSFiddle showing your issue?\n. @debonair are you still having an issue?. @eugef Please close due to lack of response.. This change breaks many tests because the tests specifically look for a submit button to click.  Fix the tests and don't submit the dist files with your request.\n. @lu4 can you update your request?. ok, do you want to close this request then?. Per the documentation, it should be justeditable-form`.\n. Are you trying to highlight the text that is displayed when the input field is not displayed, or are you trying to highlight text in the input field?\n. Here is an example of highlighting text using a client side function.\n. @eugef question is answered, please close.. Can you add a Plunker or JSFiddle showing your issue?\n. @bmrinal are you still having issues?. Using \"data-\" works fine for me\nhtml\n<span data-editable-text=\"character.movie\" data-e-name=\"movie\" data-e-form=\"characterform\" data-e-readonly>\n    {{character.movie}}\n </span>\n. I have updated some of the documentation in a recent pull request to include the \"data-\" prefix.  I think this issue can be closed.\n. I believe you have to use e-ng-click in order for it to be put on the text field that is created.\n. @eugef question is answered, please close.. Yes, 'e' is for exponents and is allowed in the input.  This is an HTML5 issue.  If you don't want the 'e', you will have to add a onchange or onbeforsave call to do some validation or to clean the input.\n. @eugef I think this can be closed. No, not currently working on that.  Pull requests are welcome :)\n. I think what you need to do is to submit the form on page change so that it saves the values.\nIf you don't want to save the values, maybe you could try adding an onchange event to keep track of all the values and then save them manually.\nAlso, maybe inspect the editable form object (i.e. rowform).  I think it contains an array of the items on the form ($editables).  Not sure if it has anything useful or not.\n. You can add e-ng-change to a textarea.\n. @atodicebear are you still having issues?. @eugef I think this issue can be closed.. Can't you do something like e-ng-disabled=\"model.value == 'complete'\"\n. @eugef question is answered, please close.. Can you provide a jsfiddle or plunker showing your issue?\n. @Kreshnik are you still having an issue?. The tests have all been fixed in pull-request #443 \n. +1\n. What needs to be done to get this merged?\n. @lalitkapoor are you going to create a pull request?\n. The editable is expecting a model,  not a filtered value.  You should be able to apply filters to the editable input or use the work arounds listed above.\n@eugef I think this can be closed.. Your function is defined as \"validatePhone\" and you are calling \"validatephone\".  Javascript function names are case sensitive.\n. @dannycsng are you still having an issue?. @dannycsng can you go ahead and close the issue please. @eugef can you go ahead and close this issue?. When you click add row, it calls the addUser function which adds a new item to the array. \nIs there a specific issue you are having with this?\n. @realisation are you still having an issue?. @eugef Please close due to lack of response.. +1\n. You can use a input type=\"number\" for number input.\nYou could try the html5 pattern attribute for applying patterns.\n. @fnbns can this issue be closed?. Did you check out the editable row example - http://vitalets.github.io/angular-xeditable/#editable-row\nYou need to set the \"e-form\" attribute on your editable entries and then wrap your buttons in an editable-form.\n. There is the $activate(name) fuction (http://vitalets.github.io/angular-xeditable/#ref-form), but I never got that to work.\nThe following worked for me:\nAdd an id to the field you want to set focus to data-e-id=\"characterName\"\nIn the function that adds a new row, at the end put a call to a new focus function\n$timeout( function() {\n                            $scope.setFocus('characterName');\n                        }, 50);\nThe new focus function:\n$scope.setFocus = function (id) {\n                        angular.element( document.querySelector(\"#\" + id)).focus();\n                    };\n. Here is the new fiddler url\nI had to add Jquery to the fiddler to get it to work, plus tweaked the focus function since your editable table is different than the one I am using.\n. I updated the fiddler.  I had to upgrade Angular to 1.2.0 so that I could use the ng-init on the ng-repeat.\n. Here it is \n. Answer posted to stack overflow\n. Did you try calling a function that returns the correct value?\n. What exactly are you trying to do with {{name || 'empty' }}?\nAre you trying to print \"empty\" if name is empty?\nIf so, take a look at this fiddle \n. This was fixed with pr #429 \n. This was fixed by #425 and is in the latest release.\n. What needs to be done to get this change merged?\n. The ui-bootstrap tags need to be updated to use \"uib\".  See pull request #406 \n. Your definition should be:\ndata-e-datepicker-popup=\"yyyy-MMM-dd\"\n. You need to remove:\ndata-e-uib-datepicker-popup=\"yyyy-MMM-dd\"\nYou should only have:\ndata-e-datepicker-popup=\"yyyy-MMM-dd\"\n. +1\n. this can be closed, it was added in #463\n. Is this still an issue?  Is there a specific error you are getting?\n. @harigna are you still having an issue?. @eugef Please close due to lack of response.. Are you referring to something like this?\n. @eugef question is answered, please close.. Can you add a jsFiddle showing this issue?\n. @tibetty are you still having an issue?. @eugef Please close due to lack of response.. Just set the tabindex of each cell to the same number.\nHere is an example \n. @eugef question is answered, please close.. Can you provide a link to a plunker or jsfiddle?. @Pabba-Varun @semaja2 @cp15dec see if this fiddle helps you. Not right now.  You would have to integrate something like ui-select into the project.\n. I'm pretty sure the issue is that ui-select requires a model with a \".\" in it i.e. \"model.dropdown\".  The model that gets passed to ui-select from xeditable is $data and that is why the example plunkr in the link your provided doesn't work.\nNot quite sure how to fix it though.\nHere is the link to the ui-select faq that explains the model behavior.\n. Actually, I think I have it working.  Please check out this plunker that is a fork of the one you referenced.\n. Do you have an example of your issue?  I tried it it with this plnkr and if I change the input text and hit enter, the value is updated along with the console.log statement I added.\n. Pull requests are welcome :)\n. You can always override the css with your own.\n. @sveller I think the issue is because you are appending \"uib\" into your property.  You would need to update the source code to retrieve uib-datepicker-popup value and set it on the tag.\n. @eugef All the tests were failing before.  The two tests failing now are the dev-text/blur = \"submit\" and blur = \"cancel\".\nI didn't test if #414 would fix it or not.  I will take a look.\n. I have merged #414 into my pull request.  That change fixed the 2 broken tests.\n. Taking a couple of examples I put together a crude example that worked for me (although it did seem slow).\nhtml\n<div ng-controller=\"TypeaheadCtrl\">\n  <a href=\"#\" editable-text=\"user.state\" e-uib-typeahead=\"state for state in getState($viewValue) | limitTo:8\">\n    {{ user.state || 'empty' }}\n  </a>\n</div>\n``` javascript\napp.controller('TypeaheadCtrl', function($scope, $filter, $http, $q) {\n  $scope.user = {\n    state: 'Arizona'\n  };\n$scope.states = ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Dakota', 'North Carolina', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'];\n$scope.getState = function(item) {\n    var d = $q.defer();\n    $http.post('/checkName', {value: item}).success(function(res) {\n      d.resolve($filter('filter')($scope.states, item));\n    }).error(function(e){\n      d.reject('Server error!');\n    });\n    return d.promise;\n  };\n});\n```\n. @eugef this has been answered, please close.. What version are you having the issue in?\n. I think that blur=\"submit\" only blurs on a click, so there needs to be a change to support something other than click.. I do see the uib warnings in the console when I look at your plunkr:\n\nuib-datepicker settings via uib-datepicker-popup attributes are deprecated and will be removed in UI Bootstrap 1.3, use datepicker-options attribute instead\nangular.min.js (line 114)\nuib-datepicker initDate attribute usage is deprecated, use datepicker-options attribute instead\n\nTry downloading the latest code and building it yourself.  Pull Request #443 added support for a more recent version of ui-bootstrap that I don't think is in the release yet.\n. It does seem like something is not getting removed properly then the editable form is closed.  I haven't been able to figure out what the issue is exactly.\nI do see that the UibDaypickerController init is being called before the UibDatepickerController init the second time when the error is thrown.  It seem like the UibDaypicker is not being cleaned up correctly, but everything I have tried to fix this issue isn't working.\nEvery time you reopen the calendar, the UibDaypickerController init is called.  So on the 3rd open, the UibDaypickerController init is called twice before UibDatepickerController init is called.\n. I think this can be fixed by adding the following to the UibDatepickerPopupController:\njavascript\n$element.on('$destroy', function() {\n      $scope.$destroy();\n     });\nI have opened an issue with  ui-bootstrap\n. Try using the latest release (0.2.0).  It looks like #489 might have fixed the issues.\n. @eugef please close, this should be fixed in the latest release.. I think this can be fixed by adding the following to the UibDatepickerPopupController:\njavascript\n$element.on('$destroy', function() {\n      $scope.$destroy();\n     });\nI have opened an issue with  ui-bootstrap\n. Here is a plunkr that shows the fix working.\nDo you have an example of the fix not working?\n. Try using the latest release (0.2.0).  It looks like #489 might have fixed the issues.\n. What version of bootstrap where you using when it didn't work?\nDo you have a jsfiddle or plunkr showing your issue? \n. Yes, the current version of xeditable requires angular-ui-bootstrap 1.0.0 or higher.  In version 1.0.0 they renamed many of the directives and xeditable was updated to work with these new directive names.\n. Yes, I am aware of the issue.  The issue is fixed and merged, but not yet released.\n. You would have to download the source code and build it yourself.\n. https://github.com/vitalets/angular-xeditable\nClone or download link.\n. Yeah, I'm not sure what this is fixing.  If the step is invalid, it will be set to NaN by parseInt which would cause the loop to break.\n. Have you tried building the latest version?  There were some changes in a recent commit to work with the latest version of ui-bootstrap.\n. You need to download and build it yourself.  The uib changes are merged but not yet released.\n. Look at the examples here - http://vitalets.github.io/angular-xeditable/\nIt is using editable-text, not editable-select.\nYou could also try the new ui-select that was added.\n. I haven't tried that, but it sounds like you should try the ui-select.\n. Your AngularJS drop down example is using a text field.  The editable-text and typeahead should work the same.\n. Here is your Fiddle working.\n. I do\ngrunt jade\ngrunt build\nhttp-server\nThen navigate to:\nhttp://localhost:8000/test/e2e/dev-test.html\nor\nhttp://127.0.0.1:8080/test/e2e/docs-test.html\nAll of the tests were successful in my last 2 commits.\n. There is one other command I have in my notes, not sure if this is what you need\nnpm install -g grunt-cli\n. @eugef What is the issue with jsdoc?  I installed clean on a different machine and I don't get that error when I do grunt docs\nI did notice on my mac I had to do a sudo npm install in order for grunt-jsdoc to be installed.\n. @eugef should this be merged now?\n. @bostrom, when I run the doc tests (http://127.0.0.1:8080/test/e2e/docs-test.html), I get lots of JS errors and see a couple of test failures.\n\nVM7068 angular.js:13236 TypeError: e.parents is not a function\n    at link (http://127.0.0.1:8080/dist/js/xeditable.min.js:6:13319)\n\nWere you seeing these errors when you ran the tests?\n. I'm pretty sure that editable-row is broken with this fix due to the e.parents is not a function error.\n. I did this locally and it fixed the error and the broken tests.  I can submit this fix with some other changes I have locally later this week.\njavascript\n        // element wrapped by form\n        if (ctrl[1]) {\n          eFormCtrl = ctrl[1];\n          hasForm = attrs.eSingle === undefined;\n        } else if(attrs.eForm) { // element not wrapped by <form>, but we hane `e-form` attr\n          var getter = $parse(attrs.eForm)(scope);\n          if (getter) { // form exists in scope (above), e.g. editable column\n            eFormCtrl = getter;\n            hasForm = true;\n          } else if(elem && typeof elem.parents === \"function\" && elem.parents().last().find('form[name='+attrs.eForm+']').length) { // form exists below or not exist at all: check document.forms\n            // form is below and not processed yet\n            eFormCtrl = null;\n            hasForm = true;\n          } else {\n            // form exists below or not exist at all: check document.forms\n            for(var i=0; i<$document[0].forms.length;i++){\n              if($document[0].forms[i].name === attrs.eForm) {\n                // form is below and not processed yet\n                eFormCtrl = null;\n                hasForm = true;\n                break;\n              }\n            }\n          }\n        }\n. Yeah, I can see if I can get it done tonight.\n. PR #467 created.\n. What exactly did you change in your JSFiddle?  I looked at it and nothing was jumping out at me.\n. Looking at your latest fiddle, I see several errors in the console relating to ng-table.\n\nError: pData.then(...).catch is not a function\nNgTableParams/this.reload@https://cdn.rawgit.com/esvit/ng-table/master/dist/ng-table.js:1101:1\nError: Template must have exactly one root element.\n. I think your issue is due to normal angular behavior.  This {{showStatus()}} creates a watcher and anytime there is a digest, the showStatus function gets called.\n\nI verified this by printing out the stack trace of the call every time it was called:\n\nat Scope.$scope.showStatus ((index):302)\n    at fn (eval at  (angular.js:14086), :4:221)\n    at expressionInputWatch (angular.js:15116)\n    at Scope.$digest (angular.js:16655)\n    at Scope.$apply (angular.js:16928)\n    at HTMLAnchorElement. (xeditable.min.js:6)\n    at defaultHandlerWrapper (angular.js:3398)\n    at HTMLAnchorElement.eventHandler (angular.js:3386)\n\nI think what you need to do is do a one way binding on the initial text display and then update the text via a function call with the onaftersave attribute.\nCheck out this version of your jsfiddle.\n. You need angular version 1.3 or higher.  That is when the single way binding was introduced.\n. Try with the latest version which contains changes to scope which may fix your issue.\n. I think what he is trying to do is that when the input is disabled with the edit-disabled attribute, it should not be red when there is no value using the default stylesheet.\nI think that's more of a personal preference and should be overridden in your own stylesheet instead of updating it here.\n. Can you be more specific?  What is your error.  I just tried the edtiable date on the demo site in Chrome and it is working for me.\n. Yes, the fiddle in the documentation is broken because it is using an older version of ui-bootstrap and thd the current release which requires a more recent version of ui-bootstrap.\nThe demo in the documentation does work properly - http://vitalets.github.io/angular-xeditable/#bsdate\n. Please see #450 and #449 for the missing model error.\n. Try using the latest release (0.2.0).  It looks like #489 might have fixed the issues.\n. Can you create a plunker showing this issue?\n. Are you trying to set it on edit or add?\n. The reason you are seeing \"activate field undefined\" is because be default, the activate function is called by the show method with an empty name value.  This then sets the active field to the first entry field by default.\nThis also means that wherever you are setting calling $activate is not being called.\nThe problem is that when you click the add button, there is no form object yet, so you can't call activate on it yet.\nOne option is to set onshow=\"setFocus(rowform, user)\" on the form object.\nIn the add method, you set an \"added\" flag to true.\nThe setFocus method checks for the added flag and does a settimeout to wait for the form to finish rendering.\njavascript\n  $scope.setFocus = function(rowform, user) {\n    if (user.added) {\n      $timeout(function () {\n        user.added = false;\n        rowform.$activate('status');\n      }, 50);\n    }\n  };\n. What do you think needs to be added to the documentation?\n. @beedaan you should be able to close this issue yourself.\nI will add something in the documentation in my next pull request.\n. Duplicate of #449 and #450 \n. I think the issue is because the ng-change doesn't actually get transferred to the input field and is still attached to the div.  A ng-change isn't value on a div and that is why you are getting the error.\n. Because the ng-change does get transferred to the input text field.\nThe date picker is different because it's building up the html needed for the bootstrap directive and all e-* attributes are not automatically transferred to the tag that is rendered for the bootstrap directive.\nA code change is required for the ng-change attribute to be added to the datepicker text field and have it removed from the surrounding div.\nWhat specifically are you trying to do?  Could the onbeforesave attribute on the form or element work? \n. Try this:\n- You have to have npm installed.\n- Download the latest source.\n- From the command line, go to the directory where you downloaded the source and run these commands.\n- npm install -g grunt-cli\n- npm install\n- grunt build\nI think that should build it for you. \n. Can you provide a JSFiddle or Plunker showing your issue?\n. @eugef Please close due to lack of response.. You should only check in your changes to src/js/directives/uiselect.js, none of the dist files should be checked in.\nAlso, are all of the tests still working with this change?\n. The tests do all run and everything seems to work OK on the demo page.  Maybe a new dev test with multiple ui-selects on the page should be added?\nI'm not sure if it's impossible or not to have multiple ui-selects on the page without the PR.  I would think it would work OK the way it is since the directive is searching for the sub-elements within the element the directive is placed on.\n@julia-k can you explain some more what the issue is you are having when you are using mulitple ui-selects?\n. I started working on a new dev-test for ui-select with two ui-select's on one form and they both appear to work normally.  I did have to upgrade to the latest version of ui-select (0.16.1).\n. Yes, at least in the test case I was working on (one editable form with two ui-selects that are active).  We need to find out what use case this fix is for.\n. @eugef I think this issue needs to be reopened and merged.  I was not testing the right scenario with this.  If you look at #481, there are two inputs with different sets of data.  I did verify locally that these changes fix the issues in 481.\n. @eugef could you do a release?\n. Do you have a jsfiddle or plunker showing this issue?\n. Do you have a plnkr/jsfiddle showing your issue?  This will help others investigate your issue.\nI have a Mac, so not easy for me to test with IE11.. I couldn't get the plnkr site to load in IE11 \u2639\ufe0f . Did you see my comments in #450 or the comments in #449?\n. Can you provide a JSFiddle/Plunker showing your issue?\n. Here is your issue e-uib-datepicker-popup=\"dd/MM/yyyy\"\nIt should be e-datepicker-popup=\"dd/MM/yyyy\"\nHere is a link to the documentation\n. Try using the latest release (0.2.0).  It looks like #489 might have fixed the issues.\n. The raw date that is printed out is the UTC date.   Once it's converted to your timezone, it is a different day.\n. @eugef I think this issue can be closed.. You would have to create your own css file and create a definition for pre {} that defines the font-family and color that you want to use.\n. I think the only thing you can currently do is some form of onbeforesave/onaftersave.  See the documentation\n. Yeah, I don't think there is any other way to do it right now and I think I've seen other issues opened with similar problems.\n. What about using the popover as an alternative?\n. If you are referring to the \"editable-combodate\", you need to add the following attribute e-max-year=\"2020\"\n. Your ng-options is not correct.  Please take a look at the angular documentation to figure out the correct syntax you want to use.\n. No, there currently is not a way to do this.\n. What is the error you are getting and can you provide a plunker or jsfiddle showing your issue?\n. See if there is anything in this thread that will help you.\n. It seems like you forgot to paste some code in your question.\nIt is possible to override the templates if that is what you are looking for.  See here\n. I'm not sure, I haven't tried overriding the templates.\n. @sushil-rxr You can change the theme per input (i.e. default or bs2/bs3,etc), but you can't change how the template looks per input, it is a global setting.\nAs for adding the spinner, looking at this again, it would require some code changes to add an optional spinner.  I don't see how else to easily add this to the existing template layout.. Maybe try adding onshow='autosize($('textarea'));' (or however you are calling the resize) to the p element.\n. Can you create a jsfiddle or plunker showing the issue?\n. That fiddle is throwing a js error:\n\nTypeError: angular.element(...).find(...).autosize is not a function\nhttp://fiddle.jshell.net/NfPcH/15381/show/\nLine 108\n. @Arrow7000 are you still having an issue?. I think it's because your edit button does not specify a button type.  By default, the button type is submit.  So you are clicking on the button and it's submitting the form since it's a submit button.  Try adding type=\"button\" to your edit button.\n. Did you try adding e-typeahead-loading to your input?\n. There is nothing specifically implemented for the typeahead element in this project.  Do you have a Plunkr or JSFiddle showing your issue?\n. Here is a working fiddle\n\nIt seems to want a \"full\" object i.e. user.loading\n. Sure, np.  You can go ahead and close this issue.\n. Pull request #464 was already completed to fix multiple ui-select's on a page.  A new release should be coming out shortly with the fix.\n. Is this what you are looking for?\n. @cliffordfajardo are you still having an issue?. @eugef can you please close this issue.. Do all the tests pass?\n. This is what I have done for tests (based on other comments I've seen).\n- install grunt globally, if you haven't already:\u00a0npm install -g grunt-cli\n- Execute npm install\u00a0in the project root\n- Execute grunt jade to create the documentation\n- Execute grunt build to build the project files\n- Execute http-server to start the server.\n- Navigate to the following url's for the tests:\n  - http://localhost:8080/test/e2e/dev-test.html\n  - http://localhost:8080/test/e2e/docs-test.html\n. You will need to squash your commits before they can be merged.\n. @eugef Merge this and then do a new release?\n. Currently setting the datepicker-options is not supported.  You have to specify each property individually.\ne-showWeeks=\"false\"\ne-startingDay=\"1\"\ne-minDate=\"today\"\n. That is because the latest build doesn't have my changes I did to fix this issue (adding showWeeks, min/max day support).\n@eugef Can you do a build please?\n. My changes are merged, there just hasn't been a new build yet.  You could always download the src and build the latest for yourself.\n. Merge conflict is fixed.  I was unable to squash all the commits correctly. \n. Couldn't you use e-ng-changed to set some value that could be referenced by a ng-hide or ng-show?\n. @shanahanbaptista are you still having an issue?. @eugef Please close due to lack of response.. Is this what you are looking for?\nhtml\n<label>\n  <input type=\"checkbox\" class=\"editable-has-buttons editable-input ng-pristine ng-valid ng-not-empty ng-touched\" title=\"Remember?\" ng-model=\"$parent.$data\">\n  <span>Remember?</span>\n</label>\n. You forgot the curly braces.  It should be:\n<div edit-disabled=\"{{readOnly}}\" editable-text=\"myproperty\">myproperty</div>\n. Yes, if edit-disabled=\"true\", it should disable editing.  Can you provide a plunker/jsfiddle showing your issue?\n. As discussed above, there is no watcher on edit-disabled, so if the value changes, it is not reflected in the control.\n. Pull requests are welcome :)\n. #282 was created to fix this, but it looks like it was never merged to master.\n. I have verified that edit-disabled is now watched with the latest build.\n@eugef please close.\n. There isn't any workaround that I know of.  What specifically are you looking for that will work with SharePoint?\n. @eugef I think this issue can be closed.. Are you using the latest version of xeditable?  If so, you need to use $parent.$data to access the data instead of $data\n. Per the change log, the on-change support for bsdate was added in 0.2.0.  Try upgrading to the latest version of xeditable.\n. I don't know of any breaking changes.\n. @eugef I meant to say #439, not #239.  Can you reopen #239 and close #439?\n. Do you have a JSFiddle showing this issue?  I just tried this out on an existing fiddle I had and it seems to work.  Delete the text in the first name text field, change the second name text field to \"awesome\" and save.  The first name field turns into \"empty\"\n. Do you have a JSFiddle or Plunkr showing this issue?  I did some testing locally, setting the starting value of a field to null and when I click save, the onbeforesave validation still displays the correct error.\n. What do you mean by \"$data does not include the field\".  Is there some specific test you are trying to do in your onbeforesave that is not working?\n. You don't need the index.html, that gets generated on build.\nFor the demo example, create a new folder in docs/demos called custom-template or what ever seems appropriate.   Create a controller.js, desc.md, test.js, view.html (or copy them) and put in your example and tests.\nYou will also need to update structure.js with your new example\n. @ttonyh can you update your request?. @ttonyh Can you remove all the generated files from your request?. @ttonyh any update on this?. Are you trying to style the text in the textbox in your fiddle?\n. Currently the bsdate control doesn't support the e-style attribute.\nDoes the color change per row?  If not, you could setup a css class to style the text.\n. It's going to require a change to editableBsdate directive to support e-style. \n. I added a fix for your issue.  There has not been a new release.  You would have to build it yourself locally in order to get the latest changes.\n. - You need to clone the repository locally.\n- install npm if you don't have it\n- install grunt globally, if you haven't already:\u00a0npm install -g grunt-cli\n- npm install\u00a0in the project\n- grunt jade - to create the test files\n- grunt build - to build the project files\n. Try e-dateDisabled or e-readonly.\nYou could try using onbeforesave to check for required fields before submitting.\n. @codeshri are you still having an issue?. @eugef Please close due to lack of response.. Did you try using a blur/change event to change the data?\n. @semaja2 are you still having an issue?. @eugef Please close due to lack of response.. In your fiddle, there is an issue with your definition of onaftersave, it should look like onaftersave=\"saveColumn('name')\".\nYour saveColumn function will fail if you do not set all the names to awesome because the mock function will return a 500 error.\nIt does appear that the onaftersave is not displaying the errors correctly.\n. The example you are looking at for editable-column seems to be a good example for saving.\nWhen you are passing in a string into saveColumn, that string represents the name of the field on the object.  The code is then looping through each user object and getting the value for the specified property that is passed in and sending that in the http request.\nThe onaftersave is called after your model is updated, so the code is looping through your model and sending the updated values to the backend.\n. Why are you doing this.$http?  Shouldn't it just be `$http.patch'?\nThere isn't any $touched/$dirty support that I know of.\nI looked at your SO request, it looks different than what is posted here.  Not sure what you want me to comment on there.\n. Yes, you will have to figure out something to determine what has been edited.  \nFeel free to submit a pull request to add this functionality :)\n. The documentation does state that any e-* attributes that are defined will be transferred to the element.\nYou could inspect the value with ng-change and only save the ones that are changed.\n. It's possible the ios version of chrome doesn't support that attribute.  Can you try this test page on your phone and see if it works?\n. @momoadeli are you still having an issue?. @eugef Please close due to lack of response. What is wrong with Search?\nIt appears that browsers have pulled support of the datetime html5 input field and will have to be removed from the project.\n. 1.  What effect are you expecting from the search field?\n2.  The datetime field is no longer supported by current browsers so it's not rendering correctly.  Support for HTML5 datetime field needs to be removed from angular-xeditable.\n. If you are referring to the \"x\" button to clear the search term in the search field, that does not display due to bootstrap styling.\n. @onceaspammer did you ever come up with a pull request for this?. @azizultex @onceaspammer Here is an example I created for someone else that shows opening two fields with one click.. You could try adding a ng-click to your submit button that sets a scope value that then can be used by your submit function.\n. I don't think you are calling or defining your checkName function correctly.  I can't tell if your function is available in $scope or not.  The example has $scope.checkName = function(data) {.\nAlso, your onaftersave function is using $ctrl.saveColumn('valueTranlate').\nMaybe your need to do something similar $ctrl.checkName ($data)?\n. In the example, the \"column\" parameter was used to load data from the array.\nresults.push($http.post('/saveColumn', {column: column, value: user[column], id: user.id}));\nYou are doing something different in your saveColumn function so it's not needed.\n. I think you can go ahead and close this issue.\n. What is the error you are getting?\nNot sure if this is relevant to your issue or not.\n. Have you seen this thread?  There are several suggestions on changing your webpack settings to get past the sourcemap error.\n. @jsandeepm are you still having an issue?. You probably could do this with a flag that gets flipped by an ng-click on the radio button and the ng-if on the second field to look for that flag.\n. @kas84 are you still having an issue?. @eugef Please close due to lack of response. The code snippet above seems ok.  Can you provide a jsfiddle or plunkr showing your issue?\n. @yshinjp are you still having an issue?. @eugef Please close due to lack of response. Did you try using the editable-popover?\n. Are you referring to the popup being cut off on a phone?\n. Thanks for posting your results!!\nCan this issue be closed now?\n. There was no specific reason why the css was setup like that.  I can add a fix for that in my next pull request.\n. You can always overwrite the style in your style sheet.\nPR's are welcome :). Would if work if you defined\n.popover-wrapper > a {\n    display: inline;\n}\nIn your own css file that is included after the xeditable file so that it will override it?. Is your css included after xeditable?\nIf so, then yes, I guess you have to do option a or b or c (create a pr). jQuery and Moment are not needed for using angular-xeditable.  If you look at this fiddle, it does not have either of those items.\nI think those items are needed for building the documentation.\n. Sorry, I haven't built a site using npm and angular-xeditable.  Maybe just go ahead and compile and see what happens.  If you run into issues, post what you are doing and the error you got and maybe someone else will be able to help you.\n. Hi @eugef, could you push out a new release?\n. Not quite sure I understand the issue.\nI take it you are using an editable form and when you click to edit, the date field is not showing the date in the textbox?\nWhat version of angular-ui-bootstrap are you using?\nWhat are you trying to do with e-date-format?\n. Are there any errors in your console?\nCan you provide a link to a plunkr or jsfiddle showing the issue?\n. Are you passing a JS Date object in incidence.finishDate?\n. The documentation has some links to some JSFiddle's you could start with.\n. Can you provide the code that sets the date value of  incidence.finishDate?\n. The date for the popup needs to be a JS date so you probably need to do something like:\n$scope.user.dob = new Date($scope.user.dob );. @jjgonver are you still having an issue?. @eugef This issue is answered and can be closed.. Are you trying to display the text red in the input field or when it's displayed as a link?\n. Did you try using ng-class?\n. Your issue is with angular and not with xeditable.  The issue is with the ng-show and ng-click.\nI think you need to create functions to pass in the name values and eval it in the function.\nshowForm('componentTableForm_', $index)\nshowForm('componentTableForm_', $index)\nNot 100% sure on the correct solution though.\n. @fatboyslimfast are you still having an issue?. @eugef Please close due to lack of response.. I think you would have to save the before values in a temp scope variable and if you click cancel after onaftersave was run, then reset the value.\n. OK, should this issue be closed then?\n. You need to close it.\n. Is this the doc tests or the dev tests?\n. @eugef I did the following and I am not seeing any errors relating to ngTagsInput\n- Rebased to master\n- grunt jade\n- grunt build\n- http-server\nThen browsed to http://127.0.0.1:8080/test/e2e/dev-test.html in Firefox/Chrome and Safari.\nAm I testing differently from how you got the error?\n. @eugef can you push out a new release?\nThanks\n. Set e-placeholder=\"Your Blank Value Text\".\n. Your welcome.  If that fixes your issue, please close it.\n. Is the onshow list different that the list you are passing into e-uib-typeahead?\n. Yes, if you figured out a solution, go ahead and close the issue.\n. Can you provide a plunker/jsfiddle showing your issue?\n. @dave-yang are you still having an issue?. @eugef Please close due to lack of response. No, currently you can only do the pop-over for one xeditable element.\n. All single editable elements will work in a pop-over.  There currently is nothing to create a form in a pop-over or string multiple elements together in a pop-over.\nPull requests are welcome :)\n. @artforlife did you ever take a look at the code for a PR?. Take a look at this and see if it works for you.. @artforlife can this be closed?. Where are you placing the ng-style tag?  In theory, that is the correct css to use.\nI don't know if it interferes with any or not, which ones are you having issues with?\n. @eugef would it be possible to push out another release?  I would like to get the css changes I made in the last to pull requests pushed out.\n. There was nothing in that ticket about custom buttons solutions, I implemented the items listed in the issue.\n- Point 1 - configuration to add a clear button was added.\n- Point 2 - Title and aria-labels were added to the buttons\n- Point 3 - Support was added for simple bootstrap input groups\n- Point 4 - Skipped, not entirely sure what solution he was looking for there and no other comments in over a year.\n. I think you forgot some code snippet in your comment above.\nThe code examples for editable row already have button type set to \"button\".\n. OK, I will update the code sample to put a type=\"button\" there.\n. Is your saveNote method running and then the page reloads?\nCan you provide a plunker/jsfiddle showing your issue?\n. I think you need to change your form to have onaftersave=\"saveNote($data)\" and remove the click event from the save button.\nTake a look at the editable-row example.\n. OK, can this issue be closed now?\n. @eugef can you close this issue?\n. Do you see any errors in the console?\nCan you provide the code that populates tl.logDate?\nAlso, what happens if you remove e-datepicker-options?  Currently if you want to set minDate and showWeeks it would be with e-min-date and e-show-weeks.\n. I am expecting something like this, but I don't see it tl.logDate = new Date(tl.logDate);\n. @ehsan-hakimi Since you are using Sharepoint, would you be able to answer this question #497?\nI know it's an older question, but since you are using Sharepoint, maybe a comment from you would help other users.\n. @ehsan-hakimi Is tl.LogDate a JavaScript Date Object like I posted above new Date(tl.logDate)?\nThe filter which prints the date will format date strings, they don't have to be a JS Date Object.\nIf you look at the documentation for the uib-datepicker:\n\nThe date object. Must be a Javascript Date object. You may use the uibDateParser service to assist in string-to-object conversion.\n. The CSS fix is already done and will be in the next release.  You need to close this issue.\n. Hi @NalinSajwan can you provide a little more info about your issue?  I'm not following.  Are you referring to live templates listed at the bottom of the readme?\n. Looking at the code, if the element is wrapped by a form (not editable-form), it assumes it's a single editable element and ignores the e-form attribute.\nWhy do you need to have an editable-form wrapped by a form?\n. OK, glad I could help.  You need to close the issue.\n. Yes, I am aware of the issue and it's already been fixed and merged, just not released yet.\n. This is fixed in the latest release\n. Not sure what issue you are having, but you can set both buttons and blurElem in the config options, see the documentation.\n. What do you think that line of code should be in order for both to work together?\n. @wetternest this should be fixed now, can you retest.. @eugef please close, this issue is fixed.. Can you provide the code for your cancel button or provide a plunkr/jsfiddle showing this issue?\n. @onceaspammer are you still having an issue?. @eugef Please close due to lack of response. Please open a pull request.\n. What I do is usually just mention the issue that the pull request is for.\n. Do all the tests still pass?\n. - For testing locally\n  - install grunt globally, if you haven't already:\u00a0npm install -g grunt-cli\n  - npm install\u00a0in the project\n  - grunt jade - to create the test files\n  - grunt build - to build the project files\n  - npm i http-server -g\n  - http-server\n  - http://127.0.0.1:8080/test/e2e/docs-test.html\n  - http://localhost:8000/test/e2e/dev-test.html\n. Can you squash your commits into one?\n. Also, try navigating to http://127.0.0.1:8080/ and verify that the examples in the documentation work as you now expect them to work.\n. Yeah, if it's easier, go ahead and create a new pull request.\nFor testing, just update the app.js and test the documentation examples locally to make sure they work.  Then revert the app.js changes before you create your new pull request.\n. Thanks for opening a new one.  Can you delete the other one?\n. fixed in pr #544 \n. It's merged, but not yet built.  You would have to download the code and build yourself to get the latest changes.\n. Can you add your test case to dev-uiselect instead of the \"normal\" uiselect demo?\nAlso, squash your commits.\nDo all the tests pass?\n. @eugef can you do a new release?\n. This is currently fixed, just not yet released.\n. You can always download the code and build the files yourself while we wait for a new release.\n. Just add e-multiple to your editable-ui-select tag\n. See #647. Instead of having the item as an editable element, use an editable form.\n. @Perseverance did you solve your problem?. @eugef Please close due to lack of response. Hi, I took a look and found a problem in the app.  I will have to make a pull request to fix it.  Once my pull request is in, you will need to add the following to your editable-checklist : \n e-checklist-comparator=\"compareFn\"\n\nWhere comparFn is:\njavascript\n  $scope.compareFn = function(obj1, obj2) {\n    return obj1.v === obj2.v;\n  };\n. Yes, you won't see the changes until a new build is released, or you pull down the code and build it yourself.\n. Yes this would be a useful pull request.  You might need to update the version of angular-bootstrap in the project for the demo pages.\nThere are one or two tests you will have to change for this.  All of the tests are docs/demos.\n. Add the new version to the lib directory.\n. Yes that is fine, but add it back in the demo page example.  It does look better on the demo page with the well around it.\n. You just need to include the files you changed (no generated files) and you should create your pull request against master.  Also make sure to squash your commits.\n. Yes, do a rebase and merge.\n. @B3nCr did you get a chance to work on a PR?. Let me know if you are having any specific issues and I can try to help.\nHere's a good link on squashing.. I have not seen any discussions.  Feel free to start one or create a pull request :)\n. The documentation works fine on my phone.  The only issue I saw was some layout problems.  I fixed most of them.\n. @eugef can you do a new build?\nAlso, I just noticed that the change log doesn't reference the text-disable watch fix you merged - https://github.com/vitalets/angular-xeditable/commit/eb502edda10ee9fadb80583785f243790f2451e3\n. Can you provide a plunker or jsfiddle showing your issue?\n. @andmattia did you solve your problem?. @eugef Please close due to lack of response.. Did you see the Known Issues section of ui-tabs?  Could be the issue:\n\nKnown issues\nTo use clickable elements within the tab, you have override the tab template to use div elements instead of anchor elements, and replicate the desired styles from Bootstrap's CSS. This is due to browsers interpreting anchor elements as the target of any click event, which triggers routing when certain elements such as buttons are nested inside the anchor element.\n. Can you add something to the documentation to show that this is available?\nDo all the tests pass?\n. Couldn't you check the css classes applied to a specific element if you are looking for a specific theme that was applied?\n\nAlso, make sure to squash your commits.\n. Yeah, not sure you can test it with the tests.  Maybe just be clear in the documentation what needs to be set.\n. Looks good to me.  @eugef please take a look.\n. Are you sure you have the xeditable css deployed with your code?\n. I think it might depend on the styling of your textboxes.  If the columns are smaller than the size of the textbox, they would be expanded.\nNot sure about your last comment.  Do you mean that on save you want to display another new entry field?\n. At the end of your save method you just push another item into the array and then set the focus.\n``` javascript\n$scope.inserted = {\n  movie: $scope.movieCharacterModel.selected,\n  characterName: null,\n  actor: null\n};\n$scope.movieCharacterModel.characters = [];\n$scope.movieCharacterModel.characters.push($scope.inserted);\n$timeout( function() {\n  $scope.setFocus('characterName');\n}, 50);\n$scope.setFocus = function (id) {\n  angular.element(document.querySelector(\"#\" + id)).focus();\n};`\n```\n. You would have to have a method that is called on cancel and determine if anything was entered or not.  If not, then \"pop\" the last item off your array.\n. Just change the ng-click of your cancel button to call a function.  Pass in rowform to the function to perform the cancel on the form and do the pop on the array.\n. @eugenevk did you solve your problem?. @eugef I think we can close this issue due to lack of response.. This is more of a stack overflow question or just searching for how to load a js object with ajax from php and then looking at the xeditable examples.\nMaybe something like.\nhttp://stackoverflow.com/questions/30606614/angularjs-update-database-using-x-editable\nPlease close.\n. OK, if my guidance has solved your issue, please close it.\n. Can you explain your issue some more, I don't follow.\n. Are you getting an error?\n. - Where are you calling updateUser?\n- Do  you see the value change on the screen after you change it and the input field changes back to text?\n. - Have you debugged updateUser to verify it's being called?\n- Where is x defined?\n. As I stated above, where is x defined.\nDid you see what the value of your x object was in your updatUser method.\n. Then you need to either pass x into your function or pass in an index number and use that to get the correct object from your list of users.\n. Your inputTpl above is empty.  Shouldn't it be <div text-angular></div>\nAlso, e-max-length is incorrect.  Shouldn't it be e-ta-max-text?  https://github.com/fraywing/textAngular/issues/308\n. When you add e-ta-max-text, do you see that attribute added to your text-angular div?\nYou might want to create a plunker/jsfiddle showing your issue.\nYour \"how you use it\" code is not displaying.\nHow is the ta-max-text supposed to work?  Does text-angular allow you to enter more characters, but display an error?\n. If you look at your console of your plunker, you will see:\nBlocked loading mixed active content \u201chttp://vitalets.github.io/angular-xeditable/dist/css/xeditable.css\u201d\nYou need to have https for your xeditable includes.\nIf you can fix your plunker to work so that I can see the issue, I will try to help.\n. See if this helps you.  Click edit, type more than 5 characters, see error appear.\n. ok, then please close this issue.\n. What version of xeditable are you using?\n. Please use the latest version 0.5.0.  There were some changes in a recent version that fixed some of these scope issues.\n. I found the issue, I just need some time to get it fixed.\n. I don't understand what your question is for xeditable?  Counting is an issue for text-angular and not xeditable.\n. NP, please close this issue.\n. You would have to use e-ng-maxlength=\"5\"\n. Is the ng-maxlength being placed on the input created by text-angular directive?\n. The only other thing you could try is maybe add a e-ng-change=\"countMethod($data)\" which calls a method to see the length of the current input and displays an error.\n. I think you can use no buttons, but you have to hit enter after your selection in order for the model to be updated.\n. Your fiddle is using the wrong angular-xeditable version.  Please see this fiddle\n. @eugef this can be closed.  This was fixed with #623 . Does your app work correctly, just the tests fail?. How are you injecting xeditable into your tests?. Don't you need to inject xeditable?  How do you inject xeditable into your application?. I am not familiar with this, but I would think that you would still need to load xeditable in your test somehow (unless you are saying lazyload does that for your test as well). @IssamEssarghini033 did you ever figure out your problem?. I don't think this is supported.  Maybe you can do something with an ng-if to setup an editable-form for create and then create individual editable elements for edit.. @amodpandey did you ever figure out a solution to your problem?. OK, thanks for your comment.  Did you want to close this issue?. @eugef can you close this issue?. The way xeditable handles forms I think prevents $dirty from working.  See if this comment helps you.. That is because it is out of date.\n@eugef do you know how to update the fiddle?. OK, I'll work on that for my next pull request.. This can be closed, the fiddle was updated in #583 . You could try blur=\"submit\" to submit the currently open single editable element when the next one is clicked on.. I think you will need to post some code or a plunkr/jsfiddle then.  I have verified that something like this does work: <a href=\"#\" editable-text=\"user.name\" data-e-label=\"User Name\" blur=\"submit\">\n    {{ user.name }}\n  </a>\nIf you click outside of the text field it is submitted.. Then try blur=\"cancel\". That's not possible right now.  Currently \"blur\" is when the element loses focus.  It sounds like you need to do different things depending on how the element loses focus.. Please post your code or a link to a jsfiddle/plunkr.. Can you update your jsfiddle with the correct JS files?  Currently the only files being included are the ng-tags files, all other files are not found because you are using a relative path and they are not there.. Did you try editableOptions.activate= 'select';. I think I found a fix, I just need to find some time to get it done.. @rmannibucau what version of chrome are you using?  If I go to the demo site  in Chrome 56 (on a Mac), the caret is positioned to the end of the input.. Can you provide a plunker or jsfiddle that shows your issue?\nOr, if you find a fix that works for your application, please create a pull request.. This looks like it's related to the use of e-single. The issue is due to the container being a <div> instead of an <a>.  I will work on a fix for it this week.. You need to load the translations for moment.js also look here. Do you have Angular setup for i18n?. You need to setup i18N for Angular.  See this stackoverflow as an example. 1.  It sounds like Angular isn't setup for localization correctly.  Maybe try this link\n2.  It sounds like Moment is not setup for localization correctly if the combodate dropdown is in English.  Did you set the locale for moment?\n3.  Not sure about this, if everything is in english, how are you updating to Italian?\nYou might need to create a jsfiddle/plunker with your code if you want further specific help.. @thienedits should this issue be closed?. Hi @aecepoglu, thanks for the pull request.  A couple of things need to be changed.\n\nRemove all generated files from your request.\nMove your new directive to it's own file.\nUpdate the documentation.\nAdd a test\n\nDo all of the existing tests pass?. For documentation you could just add a new folder to the \"docs\" folder and model it after an existing documented item.\nPut the documentation in the desc.md file, an example in the controller.js/view.html file and a test in test.js file.  Then update structure.js to add your documentation, maybe in the \"Techniques\" section.\n. @aecepoglu can you update your pull request?. @aecepoglu can you update your pull request?. @aecepoglu do you need any help getting this pr updated?. Yeah, this has been here for a while and no one has commented that they wanted it.  I am fine with you closing it.. Hi @valexiev thanks for the pull request.\nDo all of the existing tests pass. Do not include dist files in the pull request please.. Looks good.. @valexiev when I use the new release with your changes I get an error: \nReferenceError: uibDatepickerConfig is not defined\nI am using ui-bootstrap version 2.3.2 and I am bundling all my js files together.  I have also verified that the ui-bootstrap file is added to the bundle before xeditable.. Locally, if I change the code to this, it works:\n```\nangular.module('xeditable').directive('editableBsdate', ['editableDirectiveFactory', '$injector', '$parse', 'uibDatepickerConfig', 'uibDatepickerPopupConfig',\n    function(editableDirectiveFactory, $injector, $parse, uibDatepickerConfig, uibDatepickerPopupConfig) {\n// Constants from Angular-ui bootstrap datepicker\n//uibDatepickerConfig = $injector.get('uibDatepickerConfig');\n//uibDatepickerPopupConfig = $injector.get('uibDatepickerPopupConfig');. What \"new version\" are you referring to?. @valexiev I am using the latest release of xedtibable (0.6.0), angular 1.6.1 and ui-bootstrap 2.3.2 in a bundled file when I get the error I mentioned above.. It's possible.  Do you need the styles to dynamically change between enabled/disabled?. I tried watching the editable-disabled attribute and changing the classes, but I couldn't get it to work right.\n\nI could give you a one time shot css when the element is loaded the first time.\nOr, you could add some styling yourself by adding a class based upon the same criteria you are using for the editable-disabled attribute.. @MooDySmiles did you figure out a fix for this?. @MooDySmiles  Do you want to close this issue then?. Hi @arielcr, thank you for the pull request.\nPlease remove the generated files from your request.\nAdd a demo/test of your new directive in docs/demos (will also require changes to scripts-dev.jade and structure.js)\nMake sure all existing tests still run.. You can grunt build for testing locally, but only push the src changes.. Yes, better, now please add documentation/tests in docs/demos.. Almost there :)\n\n\nI see that you upgraded the version of jQuery, in your documentation can you include the minimum version of jQuery to use for this component?\n\nRemove the fiddle from your doc link since it's just pointing to the angular-ui-bootstrap date picker and not yours\nJust to verify, all the tests pass, correct?\n\nThanks!!. OK, this looks good to me.  Time for @eugef to take a look and merge. I think the issue is how uib-tab handles clicks.  Please see #563.  There is a working example there.. Please close this issue if your issue is solved.. I will take a look.. @eugef when I run the doc tests in Safari I see a lot of these:\n\n[Error] Failed to load resource: the server responded with a status of 404 (Not Found) (ng-tags-input.css.map, line 0)\n[Error] Failed to load resource: the server responded with a status of 404 (Not Found) (ng-tags-input.bootstrap.css.map, line 0). Yes, the error only appears to occur when running the tests in safari. PR #596 created. Did you try using e-ng-change?. What types of inputs are your two fields?\nDo you mean you want to update the value on the screen and on the backend when you update the first item?\nDo you have any code you could show?. The formatting above is a little hard to read.\nCouldn't you try an onaftersave event to call a function that updates leave_credtis_summary.total_number_of_days with the value from leave_credits.no_of_days after it's edited?\nMaybe a plunker or jsfiddle example would better demonstrate the issue you are having.. @gerome0123 are you still having an issue?. @eugef I think we can close this issue due to lack of response.. I'm not exactly sure what you would like to do, but looking through the issues I found #234 which said to use an ng-form as the inner form.. If you are having specific issues, please post a jsfiddle or plunker showing your code. @UmeshKilkile are you still having an issue?. @eugef This can be closed due to lack of response. Can you provide a plunkr/jsfiddle showing the issue?  I am not seeing the form submitted on tab when the blur attribute is not set.. The only time I see the form being submitted is when blur=\"submit\" buttons=\"no\" is set on a single item.  Can you provide a sample of your code where you are seeing it always submit on tab?. Did you try using an e-ng-change on the checkbox to set the row.amount to 0 when it's checked?. what about also changing row.amount?\n. What happens with this code?\ne-ng-change=\"editableDataForm.$data.amount = (editableDataForm.$data.isActive) ? '0' : row.amount\">. This seems to work, the value is updated and reverted if cancelled...but the ui doesn't seem to reflect the change until after the save/cancel.\n\ne-ng-change=\"update(editableDataForm)\"\n$scope.update = function (form) {\n      form.amount.value = 0;\n      form.amount.$viewValue = 0\n  }. Then I would need to seem more of your code.. @westerncj are you still having an issue?. Did you try using a e-ng-change to execute your validations on selection?. Please provide the code you are trying.. See this updated fiddle. Can you provide a link to the issue you are having?. I'm not understanding the issue.\n\nDouble click to open\nTry adding new character, can't because of max length\nDelete existing data\nAdd new data\nClick save, new data is saved.\n\nWhat exactly is the issue?. This only seems to be an issue on Chrome.. Can you post the code you have so far?. @okezieokpara are you still having an issue?. OK, can you close this issue then?. Did you try $parent.$data instead of $data in e-ng-change=\"setDate($data). Maybe try using date picker options to set the min date.  This seems a little similar to this ui-bootstrap issue (the last post suggests using options)\nhttps://github.com/angular-ui/bootstrap/issues/3188. I think this is a ui-bootstrap and not a xeditable issue.   Look at this thread - https://github.com/angular-ui/bootstrap/issues/6025\nIt seems like you could try to set the datepicker options as a scoped variable and then update the mindate on that.. That makes sense.  Did you want to close this issue then?. @Snippo should this issue be closed?. OK, can you please close the issue?. This might be an issue with ui-select.  I noticed you don't have the latest version in your plunker.\nI did find this, which seems similar:\nhttps://github.com/angular-ui/ui-select/issues/1486\nLooking at a comment here, seems to me this is a ui-select issue - https://github.com/angular-ui/ui-select/issues/88\n\nAlso a problem for me. I can't do the limitTo: 'myNumber' trick because it doesn't allow previously selected items to be pre-populated unless they're within the first 'myNumber' of my source.\n. Thanks for sharing your work around.. I haven't used this with Angular 2 yet.  Maybe you can figure it out and post your results here.. Pull requests are welcome :). Hi, there is no directive for the popover, it's a purely css implementation and it's not related to the ui-bootstrap popover.. Open an issue with a link to a jsfiddle showing your issue so that someone can look at it.. Take a look at this fiddle.  I got it working with a couple css changes:\n\n```css\nbandmate{\n  margin-bottom: 1rem;\n  padding-bottom: 3rem;\n  border-bottom: 1px solid #999;\n}\n.popover-wrapper {\n    display: inline;\n    position: fixed;\n}. Check out this one\nI dynamically change the css based on show/hide so the links still properly scroll.. Please provide a plunkr or jsfiddle showing your issue.. Pull requests are welcome :). @jongunter @rusackas  Take a look at this and see if it helps.. Test added. Tests re-arranged and it does fail if the change is removed.. Hi @Fredz66 do all the tests pass?  How about adding a new test which uses append to body?\nLooks like this will close #576.. That would be up to @eugef \nI think you can look at the dev-bsdate folder and duplicate the \"should show editor and submit new value and input field is read only\" test (test.js), except you would be testing for the append-to-body attribute instead of the read-only attribute (and also testing that picking a date still works like the rest of the test).\nYou would also have to duplicate the \"read-only\" html in view.html and update it for append-to-body.. See if the comments in this issue help.\nAlso, if you could provide a jsfiddle or plunker showing what you are trying to do, that would help.. Maybe something like:\n<td class=\"select-td\">\n                                <span editable-select=\"item.ROLEID\" e-name=\"ddlrole\" e-form=\"rowform\" e-selectpicker\n                                      e-ng-options=\"g.ROLEID as g.ROLE for g in section.role\" e-ng-change=\"displayText = true\">\n                                    {{ item.ROLE }}\n                                </span>\n                            </td>\n                            <td>\n                                <span editable-text=\"item.FULLNAME\" e-typeahead-editable=\"false\"  edit-disabled=\"{{displayText}}\"\n                                      e-name=\"txtName\" e-form=\"rowform\" e-placeholder=\"Name\"  e-required>\n                                    {{ item.FULLNAME }}\n                                </span>\n                            </td>\nA jsfiddle or plunker would be more helpful.\nSee disable documentation.. @estoysol are you still having an issue?. Per the documentation\n\nWhether form initially rendered in shown state.\n\n. @jothimoorthy Are you still having an issue?. Try this on your form shown=\"inserted == access\"\nFor some reason it wasn't letting me fork/save so I couldn't test it.. I feel like it's some sort of scope issue.\nIf you move the html out of the directive and just have it inline and don't use the directive, it works correctly.\nI tried different scope options in the directive, but couldn't get anything to work.. You can override the template, did you see this:\nhttp://vitalets.github.io/angular-xeditable/#default\nhttp://vitalets.github.io/angular-xeditable/#bootstrap3\nAnd the overall theme documentation?. NP.\nIf that works, please close this issue.. All tests pass.\nI also manually tested all bootstrap directives and those passed as well.\nThis will close #559. This is what I do to rebase.\ngit fetch upstream\ngit rebase upstream/master\nThat would be great if you have time to update the tests!!!. I don't remember what I did, but I used those commands after I viewed this stackoverflow. Did you try using the edit-disabled attribute?. There is a $visible property of the form\nMaybe you need to create a plnkr/jsfiddle showing your issue (I might not be understanding what you want). Based on the data in your plnkr:\n\nDo you want just one item in edit under \"One, Coordinator Total Hours\" or all items in edit?\nAnd then if something is in edit under \"One, Coordinator Total Hours\", does that mean nothing is editable in \"BAKER, DAWN A     Total Hours\"\n . There is the \"minutes\" field missing from my screenshot.\nSo, you want to be able to edit the hours/minutes for one row at a time, is that correct?. Check out this plunker, I think it gets you on the way to what you want.. I see ngPattern working.  It doesn't prevent values, it marks the field as invalid.\nIf you want to prevent the value, you would have to do something with onkeyup/down/change to do something if a non number is entered.\nThere is a shown attribute on the form.. What version of IE and what non-numeric values are you seeing it allow?\nUnfortunately xeditable doesn't have access to the errors object.  You could do an onbeforesave function that validates the value and stops form submission if the value is invalid.. @BukicMicko did you solve your issue?. Can you post a plnkr or jsfiddle showing your error?  I have used 1.5.8 and I'm currently on 1.6.2 with no issues using xeditable.. I think the closest thing is to add the input group and style it.. Can you provide a plnkr or jsfiddle showing your issue?\nIs it that you have two fields and you are trying to validate one based on the other?. Currently the angular form validations don't work well with xeditable.  You would have to use onbeforesave to do your validation.. Can you be more specific on what your issue is?\nWhen I go to the jsfiddle, I see a value for User DOB and I can change it.. Why not use edtiable-textarea since you are using multi-line data?. As far as I know, line are only allowed in textarea's.\nMaybe you could style the textarea to look more like a normal input.\nOr maybe you have an \"on-paste\" method that strips out the line breaks.. Looking at this I am thinking you don't need e-format.  If you are trying to saving the data in the db with that format, then you need to convert it before saving.\nThe code is always returning the isoString value of the date. I think you just need to take that and format it how you need it.. This was just fixed.  There needs to be a new release published or you can build the code your self until a new release is published.. @eugef when do you plan on doing a release?. @eugef looks like something didn't build right, can you take a look?. This is not currently available.  Pull requests are welcome :). I came up with an idea, see if it works for you.. If that works for you, please close this issue.. An input type of file currently isn't supported.  Pull requests are welcome :). I'm not sure.  You can try and report back your results.  I did find issue #232 which may help.. @gerome0123 I take my comment back, the file input type is supported, it's just not in the documentation.  I'll update the document in a future pull request.. Can you provide code and any errors you are seeing?. How is updateItem called?. What are you trying to achieve with $files?  If you want to get the model, I think it should be $parent.$data. @pavi95 did you get your issue resolved?. @eugef this issue can be closed. This is only an issue with the bootstrap datepicker. I'll see what I can do to get them updated.. @eugef please close, these are fixed. Needs more work. @eugef did you want to release a new version to get the documentation with the updated fiddles out?. This is a duplicate of #647, please close.\nAlso, I just checked in a change fixing the fiddle links, a new build is required.. Correct.  Try looking at this #232 . There is a HTML5 date picker, but it is not supported by all browsers.  It does work in Chrome.\nThere also is combodate. Try adding e-data-template=\"DD / MM / YYYY\" to your combodate tag. What exactly do you want an example of?  I had previously posted about combodate.  If you are still having issues with combodate, please post a jsfiddle/plunker of your issue.. That is a jquery date picker. @gerome0123 Try using editableUidate.  It exists, but isn't documented.  I haven't used it before so I don't know if it works or not\n/*\n jQuery UI Datepicker for AngularJS\n https://github.com/angular-ui/ui-date\n */\nangular.module('xeditable').directive('editableUidate', ['editableDirectiveFactory',\n    function(editableDirectiveFactory) {\n        return editableDirectiveFactory({\n            directiveName: 'editableUidate',\n            inputTpl: '<input class=\"form-control\" />',\n            render: function() {\n                this.parent.render.call(this);\n                this.inputEl.attr('ui-date', this.attrs.eUiDate);\n                this.inputEl.attr('placeholder', this.attrs.ePlaceholder);\n            }\n        });\n}]);\n. You posted this https://jsfiddle.net/32kzsvve/1/ previously which you said helped you.  What is not working for you?\nIf you want more specific help, you will need to post a jsfiddle/plunkr so people can see your code and help you with your issues.. When I go to that fiddle, I see the following JS errors:\nError: [$injector:nomod] Module 'BlurAdmin.pages.feeds' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.\nhttp://errors.angularjs.org/1.5.8/$injector/nomod?p0=BlurAdmin.pages.feeds  angular.js:68:12\n\"Error: [$injector:unpr] Unknown provider: editableOptionsProvider <- editableOptions <- FeedsPageCtrl\nYou are also using an older version of xeditable.. @pavi95 The jsfiddle link is broken.. I did something similar in an example here (in my-directive.html) and this is using the latest x-editable.\nThat looks correct to me.  Are there any errors in your console?. The code seems ok.\nAre there any errors in the console?\nDid you try putting in a console.log in the updateUser function to verify it is being called?. Are you sure that $scope.dataTable.nik has a value?\nIt looks like dataTable is a list, not an object.\nMaybe you need to try onaftersave=\"updateUser(adb.nik, adb.ipphone)\" and see if the correct values get passed in to your function.. Your plnkr is using angular 1.0.8, please update it to 1.5.5 and also include angular-sanitize.js.  It is throwing error Error: Unknown provider: $sceProvider <- $sce\nAlso, I don't see ng-html-bind used in that plnkr.. I still see an error in the console:\nError: [$sce:unsafe] http://errors.angularjs.org/1.5.5/$sce/unsafe\nIf you are trying to have the html display, I think you need to do something like $sce.getTrustedHtml. That's a question for @eugef . You need to return a string value in your onaftersave method:\n```\nIf you need to send data on server after writing to local model then you should define form's onaftersave.\nThe result of form's onaftersave is also important for next step:\nstring: form will not close (e.g. server error)\nnot string: form will be closed\n``. It seems like something is happening in your request (and this seems more of a stack overflow question than and xeditable question).\nIs the http request made?  If so, is there what is being returned from the server?\nAre you sure your http request and .then are setup correctly?\nAny way to provide a plunkr/jsfiddle showing your issue?. @ikwijaya It doesn't look like you defined the method$httpshould use in yoursaveGroupfunction. Do you want the user to be able to add an item to the list or do you need to programmatically add an item to the list?\nIf the second one, I think you should just be able to do aeconomies.push()`. ui-select is supported, please see the documentation.. You need to use tagging.  Please see the ui-select documentation.. That x is specific to IE and is supposed to clear the box.\nIf you want to stop the x from displaying, take a look here.. Try this css:\nselect option[value=\"0\"] { /* value not val */\n    background: rgba(200, 200, 200, 0.3);\n}\nTaken from here. If you assign the same id to the cancel buttons for the row, you can do something like this:\n$timeout(function() {\n          angular.element(document.querySelectorAll(\"#cancel\")).trigger('click');\n      }, 50);. It's just something I copied from something similar I was doing.  Try it with out the timeout and see if it works.\nPlease close this issue if your issue is resolved.. Looking at the combodate documentation, value is the correct attribute to set it's initial value which is actually e-value on the editable-combodate component.. @eugef I think we can close this due to lack of response.. Can you post the code you have for your add button that doesn't work and your edit button that does.. If you have angular debugging turned off, getting scope on the element won't work.. Here is a stackoverflow that might help. Did you verify that xeditable.js is loading?\nAny errors in your javascript console?. Can you post a jsfiddle or plunkr showing your issue?. Hi @guilmori, did you try any of the existing date pickers already included in the project?\n. There isn't any documentation on how to add a new directive.\nGenerally you would add a 'e-' in front of all the attributes that get passed into xeditable.\nTry doing passing in e-k-options=yourOptions and in the directive, something like:\nvar attrs = this.attrs;\nthis.inputEl.att('k-options', attrs.eKOptions);. Once you get your directive working, are you going to submit a pull request to have it added here?. OK, if this is something specific to your project, no need to merge in.\nCan this issue be closed then?. You need to set blur=\"ignore\" (or submit).\nThe editable element thinks that clicking on the kendo picker popup is blurring the element and is thus cancelling the form since the default for blur is cancel.. That link is already applied in xeditable here\nYou should be able to just add onbeforesave to the definition of your editable element.. Can you post a jsfiddle or plunge showing your issue?. The reason the select works is because when you select a new item in the list, that is the blur.\nWhat are you trying to do with the button and why is timeout not an option?. The select input is setup so that it saves on change for no buttons, which works well for a select.  A text input is not setup the same way and I'm not sure it would work as well.\nI think the best thing to do is use the timeout. The only way to show errors is by using onbeforesave and have that function return an error. Unfortunately, that is how xeditable works.  Maybe you could have an on change function that checks the size and displays an error.. Can you post a link to a plunker or jsfiddle showing your issue?. The edit-disabled will only work for editable elements that are a link.  It doesn't work for editable forms.\nYou could just add some logic to disable your edit button when the field should not be editable.. Is it giving you an error when you try that?. OK, thanks for providing your solution.  Please close this issue if the solution you provided is satisfactory.. You would need to make a new directive similar to ui-select. What does the data in stockjson look like?\nIf you posted a plunkr or jsfiddle showing your issue, it would make it easier to troubleshoot the issue.. The data you pasted has the <> symbols around the values, that would be why they are showing up in the display.. Can you post what you final ui-select code looks like for others who may have this issue in the future and then please close this issue.. @fnk do you need any help with your test?. @fnk do you need any help with creating the tests?. Hi @chiu0602, what are you expecting to happen when the minuteStep is 5?  Do you expect it to round up instead of down?. I see the issue.  The scope value only gets changed when the onchange event is called for the selects.\nThe value is never actually change, so nothing is propagated.. I can help, maybe tomorrow or next week.. @eugef this can be closed, it was fixed by #682. All tests pass with your change and adding the following to test your change:\nChange dev-combodate/controller.js to \napp.controller('DevCombodateCtrl', function($scope) {\n  $scope.user = {\n    dob: new Date(1984, 4, 15),\n    dob2: new Date(1984, 4, 15, 10, 11, 0)\n  };\n})\nChange dev-combodate/test.js to \n```\ndescribe('dev-combodate', function() {\nbeforeEach(function() {\n    browser().navigateTo(mainUrl);\n  });\nit('should show editor including seconds and submit new value', function() {\n    var s = '[ng-controller=\"DevCombodateCtrl\"] ';\nexpect(element(s+'a#seconds').css('display')).not().toBe('none');\nexpect(element(s+'a#seconds').text()).toMatch('May 15, 1984 12:00:00 AM');\nelement(s+'a#seconds').click();\n\nexpect(element(s+'a#seconds').css('display')).toBe('none');\nexpect(element(s+'form[editable-form=\"$form\"]').count()).toBe(1);\nexpect(element(s+'form select:visible').count()).toBe(6);\nexpect(element(s+'form select.day').val()).toBe('15');\nexpect(element(s+'form select.month').val()).toBe('4');\nexpect(element(s+'form select.year').val()).toBe('1984');\nexpect(element(s+'form select.hour').val()).toBe('0');\nexpect(element(s+'form select.minute').val()).toBe('0');\nexpect(element(s+'form select.second').val()).toBe('0');\nexpect(element(s+'form .editable-buttons button[type=\"submit\"]:visible').count()).toBe(1);\nexpect(element(s+'form .editable-buttons button[type=\"button\"]:visible').count()).toBe(1);\n\n//set 29 april\nelement(s+'form select.day option[value=29]').click();\nelement(s+'form select.month option[value=3]').click(); // month option numbers appear to be offset by 1\nelement(s+'form select.minute option[value=4]').click();\nelement(s+'form select.second option[value=5]').click();\n\n//submit\nelement(s+'form button[type=\"submit\"]').click();\n\nexpect(element(s+'a#seconds').css('display')).not().toBe('none');\nexpect(element(s+'a#seconds').text()).toMatch('Apr 29, 1984 12:04:05 AM');\nexpect(element(s+'form').count()).toBe(0);\n\n});\nit('should show editor and submit new value when initial date does not match avaiable values in drop downs', function() {\n    var s = '[ng-controller=\"DevCombodateCtrl\"] ';\nexpect(element(s+'a#minuteStep').css('display')).not().toBe('none');\nexpect(element(s+'a#minuteStep').text()).toMatch('May 15, 1984 10:11:00 AM');\nelement(s+'a#minuteStep').click();\n\nexpect(element(s+'a#minuteStep').css('display')).toBe('none');\nexpect(element(s+'form[editable-form=\"$form\"]').count()).toBe(1);\nexpect(element(s+'form select:visible').count()).toBe(5);\nexpect(element(s+'form select.day').val()).toBe('15');\nexpect(element(s+'form select.month').val()).toBe('4');\nexpect(element(s+'form select.year').val()).toBe('1984');\nexpect(element(s+'form select.hour').val()).toBe('10');\nexpect(element(s+'form select.minute').val()).toBe('10');\nexpect(element(s+'form .editable-buttons button[type=\"submit\"]:visible').count()).toBe(1);\nexpect(element(s+'form .editable-buttons button[type=\"button\"]:visible').count()).toBe(1);\n\n//submit\nelement(s+'form button[type=\"submit\"]').click();\n\nexpect(element(s+'a#minuteStep').css('display')).not().toBe('none');\nexpect(element(s+'a#minuteStep').text()).toMatch('May 15, 1984 10:10:00 AM');\nexpect(element(s+'form').count()).toBe(0);\n\n});\n});\n```\nChange dev-combodate/view.html to\n<div ng-controller=\"DevCombodateCtrl\">\n  <a href=\"#\" id=\"seconds\" editable-combodate=\"user.dob\" e-format=\"MM-DD-YYYY HH:mm:ss\" e-template=\"MM-DD-YYYY HH:mm:ss\" e-minute-step=\"1\" e-second-step=\"1\">\n    {{ (user.dob | date:\"medium\") || 'empty' }}\n  </a>&nbsp;\n  <a href=\"#\" id=\"minuteStep\" editable-combodate=\"user.dob2\">\n    {{ (user.dob2 | date:\"medium\") || 'empty' }}\n  </a>\n</div>\n. @chiu0602 why didn't you just add these to your other pull request?\nAlso, can you please squash your commits?. Looks good to me . I have not been able to get that to work either.\nAre you trying to manually edit multiple fields at save at once?\nNot sure what you are looking to get.\nYou can use blur=\"submit\" on an editable to have it submit on enter.\nYou can do validation with onbeforesave. See if this is what you are looking for. The forms are meant to be edited all at once.\nI still don't understand why you need to edit items one at a time for a form.  I guess I am not understanding the use case.\nThe example I gave was the only thing I could find searching the issues.. You can try adding e-single to the element.  Here is an example.  See if that works with what you are trying to do.. Everything \"should\" be in the documentation, unfortunately e-single is not.  I will try to add something in the future.. I think you would need to have a dynamic name for the form, something like editableUpdateTitleForm{{$index}}. I think that's because ng-show doesn't like editableUpdateTitleForm{{$index}}  You would need to call a function that passes in index then do the $show() or $visible check.. I think it is because Angular is putting a watch on the function.\nYou could try {{ ::ShowMedicamento(item) || 'n/a' }} and see what that does.\nAlso you are doing two null checks with that function, why not just do {{item.medicamento || 'N/A'}}. Angular is doing it because of the two way binding.. Isn't it just a matter of css?\nSee if this link helps.. Can you provide the xeditable-checkbox and xeditable-select code that is throwing this error?. Can you remove the filter from your editable-checklist and see if the error stops being thrown?\nFilters aren't supported.  Please see #409. I think I see the issue, I need a few days to get around to doing the fix.. Take a look at this jsfiddle and see if it helps you.. @eugef this was fixed by #693, please close.. How about if a new option was added, something like e-StringList=true.  If this is true, then ng-value is used, if false value will be used.\nDefault to value.. I don't think the isNaN test will work.  I tried that it always returns true even when the list is numbers.\nAlso, if the list is strings, it needs to be value= while anything non-string should be ng-value=\nhttps://docs.angularjs.org/api/ng/input/input%5Bradio%5D. If your proposed fix works for you, can you please open a pull request?. HI @pdemilly I tried using your code above, but I could not get it to work.\nHere is what I did:\n```      \nvar local = {\n            ngRepeat: parsed.ngRepeat,\n            eNgDisabled: this.attrs.engDisabled,\n            //$data: \"$parent.$parent.$data\",\n            startSymbol: $interpolate.startSymbol(),\n            endSymbol: $interpolate.endSymbol,\n            ngChangeHtml: ngChangeHtml,\n            ngNameHtml: ngNameHtml,\n            ngValueFn: isNaN(parsed.locals.valueFn) ? '\"'+parsed.locals.valueFn+'\"' : parsed.locals.valueFn,\n            displayFn: parsed.locals.displayFn\n        };\n    var htmlString =\n        '<label data-ng-repeat=\"'+parsed.ngRepeat+'\">'+\n        '<input type=\"radio\" data-ng-disabled=\"{{eNgDisabled}}\"' +\n        'data-ng-model=\"$parent.$parent.$data\" data-ng-value=\"{{startSymbol}}{{ngValueFn}}{{endSymbol}}\"' +\n        '{{ngChangeHtml}} {{ngNameHtml}}/>'+\n        '<span data-ng-bind=\"'+parsed.locals.displayFn+'\"></span></label>';\n\nvar html = $interpolate (htmlString)(local);```\nI had to comment out $data because it could not find $parent during interpolation.\nThis code produces this html:\n<input data-ng-disabled=\"\" data-ng-model=\"$parent.$parent.$data\" data-ng-value=\"{{\" f.value\"\"=\"\" class=\"ng-pristine ng-untouched ng-valid ng-empty\" name=\"257\" type=\"radio\">\nWhich doesn't work.  Any suggestions?. Thanks @pdemilly . Can you add some more specific on what you are trying to achieve?. Yes, one way to do that is do the ng-if based upon the unique key of the row.  If no id exists, don't show fields, if id exists, show fields.. If you decide to investigate you original issue some more and find a solution, please create a pull request.. Are you trying to use angular's built in validations?  If so, this project is not setup to use them.\nThere are several issues that haven been opened for this, here is #76 .\n. Fixed it. You have to remove the item that was added to the array when you click add row.\nThere is an example in editable-table. @bravility can this be closed now?. All you need to do is call a function on cancel that removes the last item in your list\n$scope.movieCharacterModel.characters.splice(index, 1);. So you select an item in editable-select and upon save you are expecting the cardExpiration directive watch to have done something?. Why can't you call an function in eitheronBeforeSave or onAfterSave that will display an error message based upon the value that update and the other input?. Documentation for onbeforesave andonaftersave are here.\nIf you want to do something on change, just add e-ng-change and have it call a function.. I will try to take a look at it this week.. I think the issue here is that you are using vm.color which isn't updated until you submit.  If you are trying to change the color while the editable is open, try using $data instead.. Can you provide a plunkr or jsfiddle?. Did you include angular-ui-bootstrap as specified by the documentation?\n. Can you post your code you are having an issue with or make a plunkr/jsfiddle so that I can better understand what your issue is?\nTo run typeahead, you have to include angular-ui-bootstrap and any properties of the bootstrap typeahead should be prefaced with e-.. It appears your change would work.\nDid you want to try and create a PR?  If so, add test cases to dev-combodate folder for all your tests cases in the fiddle.. @josemonsalve2 would you like me to help you with a PR?  I believe I have your change working locally for me.. I don't see that error at the JSFiddle link above.  I tested in the most recent FF and all the editable links did not throw that error.\nIs there a specific browser this error is occurring in?. I think your fix from #705 solves the problem.. @eugef this issue can be closed, it was fixed by #709. Did you take a look at #157?  There is a branch with a proposed fix there (although it broke existing tests, but I never testing it with nested forms).  Maybe that fix solves your problem.. Maybe this link will help you.. @josemonsalve2 please review. @eugef the documentation already states you need moment.js for combodate. Yes, adding e-on-select should work.\nIf it's not working for you, can you provide a jsfiddle/plunkr showing your issue?. Based on the demo site, the issue is the following css coming from forms.less:\n@media (min-width: 768px)\nforms.less:514\n.form-inline .input-group > .form-control {\n    width: 100%;\n}\nIf you change it to width:auto, that appears to fix the issue.\nYou should probably either create a new style class for this or pass in e-style=\"width:auto\" to your editable-bsdate.. @fborges42 glad I could help.  If this solves your issue, please close it.. Can you explain more what it is you are trying to achieve?\nAre you trying to prevent save calls to the back end by cancelling if nothing has submitted?. Why not just set the blur to submit?. Why can't you check the existence of data before submitting to backend?\nOr maybe add a onbeforesave call that returns false if no data was entered (and doesn't call the backend)\n. Hi @dementic can you describe your error some more, or provide a plnkr or jsfiddle showing your issue?\nIf I create a function that generates a random number, I see a new number in my input group every time I open it.. Try setting editableOptions.activate = 'none';\nIt appears that the two forms are competing for the focus since the default activate is focus\nhttp://vitalets.github.io/angular-xeditable/#ref-options. @dementic please review. @dementic Did you get a chance to review this yet?. @eugef You can go ahead and merge this and maybe do a new release?. That is a \"feature\" of angular-xeditable.  That is how it was designed.\nWhat problem are you trying to solve that would require two-way binding?\nI will be happy to review any PR's submitted.. Can you add a plnkr or jsfiddle showing your issue?\nI don't quite understand what your issue is.\nOn add, you are logging something and the logging isn't working?\nOr is the display of the new row not happening on add?\nOne observation, I think you need to actually add an object on the push, something like:\n$scope.addNewChoice = function() { \n$scope.inserted = {\n      name: '',\n      email: '',\n      number: '' \n    };\n  $scope.activeModules['settings/customer-profile/get-customer-details'].profileData.contact.push(inserted); \n };\n. I'm sorry, but angular-xeditable is not setup that way.\nI can try and help you find a solution to your specific problem if you describe it more or provide a plunkr/jsfiddle.. There is no image attached.\nThis is the editable row example.  Based on your first post, it seems that is what you are trying to do.. Did you try adding popover-placement=\"bottom\" ?. That doesn't look right.\nWhich popover are you trying to use?\nEditable Popover\nor\nBootstrap UI Popover\nUsing the Boostrap UI Popover, adding the popover-placement works for me\n<div ng-controller=\"UiPopoverCtrl\" id=\"UiPopoverCtrl\">\n  <div class=\"ui-popover-wrapper\">\n    <a href=\"#\"\n       id=\"simpleText\"\n       editable-text=\"user.name\"\n       e-label=\"User Name\"\n       uib-popover-template=\"'popover.html'\"\n       popover-is-open=\"popoverIsOpen\"\n       popover-append-to-body=\"true\"\n       onshow=\"popoverIsOpen = !popoverIsOpen\"\n       onhide=\"popoverIsOpen = !popoverIsOpen\"\n       popover-placement=\"bottom\"\n       popover=\"true\">{{ user.name || 'empty' }}</a>\n  </div>\n</div>. You have to return a string value, not a boolean.\nhttp://vitalets.github.io/angular-xeditable/#validate-remote. Try return \"Something went wrong\" instead of false.. You need to override the editable-empty css class with what you want.. Looking at previous issues, it seems some people used \"dirPagination\" for paging.\nSee previous issues #655 and #400 to see if they help.. Are you trying to use an editable-select and make it read-only and not disabled?\nIt so, yes, there is no good way of doing it.\nYou would have to try one of the suggested options using css/js or both to make it look read-only.\nWhat is your use-case?\nMaybe just display a read-only text field if they can't change it and display the select for when it's changeable.. What about the combodate\nThat uses moment.js which should be able to handle any date/time functions you need.. I guess I'm not 100% sure what you are asking for.\nIf your value your using is user.date why can't you just format it like $scope.user.date = format your date\nFor display after saving you have something like {{ (user.date | date: \"yyyy-MM-dd\") || 'empty' }}\nLook into moment.js for handling dates.\n. Are you referring to ui-select?. editable-select is just a normal select.\nIf you want other features, then try the ui-select in xeditable as mentioned above.\nHere is the documentation for ui-select.\nTry the demo I pasted above and see if that is what you want.. It looks like a scope issue.\nI changed it to scope=false and that seemed to fix the issue\nhttps://plnkr.co/edit/1772aosu2bY7O4a4IlVG?p=preview. Your code was incorrect.\nHere is a working version of your fiddle. Couldn't you do this with a scope variable?\nSet the variable on edit to true and have edit buttons disabled if the scope variable is set.\nSet the variable to false when cancelling or saving to enable edit again.. What does your table code look like?\nCan you provide a plunkr or jsfiddle showing your issue?. Can you provide your code?\nThe demo doesn't actually do the upload, which is why it just goes back to empty.. Looks like you are missing what to actually do when you submit.\nTry adding something likeonbeforesave=\"saveUser($data, user.id)\" to your editable-form\nSee the editable-form example here. Looks like you need to add on another directive to support it since angular models and the file input don't work together naturally.\nhttp://luxiyalu.com/angular-all-about-inputfile/\nhttps://stackoverflow.com/questions/17063000/ng-model-for-input-type-file-with-directive-demo\nI haven't used the file upload with xeditable, but in a different angularjs project I used the fileModel directive at https://github.com/murygin/rest-document-archive/blob/master/src/main/resources/static/app.js\nThe html that uses the directive - https://github.com/murygin/rest-document-archive/blob/master/src/main/resources/static/index.html\n. It is supported.  It is displaying it like other elements.   You just need to add a directive of your choosing to get it to work the way you want.\nAnother option I found is https://github.com/nervgh/angular-file-upload, which was used by another user in #645\n. This is a strange one.\nIt works in chrome/safari but not Firefox.\nI tried a bunch of things, but couldn't get it to work in Firefox.\nIt's as if bootstrap/jquery is hijacking the click event meant for xeditable, or maybe xeditable is handling it, but it then falls through to bootstrap/jquery.. I can see if I can get something added in the next couple of weeks.\nOr, your welcome to create a PR yourself :). @sinall how do you plan to use the dropdown-menu in an editable form?. @sinall so the inputs are linked?\nAn item is selected in the dropdown-menu and this populates the select with values?  Then a value is in the chosen in the select and the form submitted?. Maybe two editable-select's with e-ng-change would work for you?\nI updated the jsFiddle from #521 here . Sorry, I pasted the wrong link.\nTry this one. OK, so it seems there is an issue with the value being initially set..\nIf you select Toyota, then select Model, it only shows Camry.. Is this what you are looking for?\nOne way to submit data on server is to define onbeforesave attribute pointing to some method of scope. Useful when you need to send data on server first and only then update local model (e.g. $scope.user). New value can be passed as $data parameter (e.g. <a ... onbeforesave=\"updateUser($data)\">).. Should this be closed now that the issue has been merged?. I just updated my chrome to the latest and the demo site still works.\nCan you provide a plunkr or jsfiddle showing your issue?. I think you could add something like this to your editable link:\nng-class=\"{your_class: your_item >= 10 && your_item <= 20}. The documentation says you need to return true in order for the local model to be updated.\nDid you try that?\nhttp://vitalets.github.io/angular-xeditable/#onbeforesave\n. I use the ng-keyup to detect enter and then submit the form\nAdd this to the edtiable- span\ndata-e-ng-keyup=\"$event.keyCode == 13 && submitForm('submitForm{{::$index}}')\"\nMy button definition\n<button type=\"submit\" name=\"submitForm\" id=\"submitForm{{::$index}}\" data-ng-disabled=\"bookform.$waiting\" class=\"btn btn-primary phonePaddingSmall\" aria-label=\"Save\">\n                                    <i class=\"glyphicon glyphicon-floppy-disk\" aria-hidden=\"true\"></i>\n                                </button>\nMy functions:\n$scope.submitForm = function (id) {\n                        commonFunctions.clickElement(id);\n                    };\nclickElement: function(id) {\n                    $timeout(function() {\n                        angular.element(\"#\" + id).trigger('click');\n                    }, 50);\n                },\n. Sure, go for it!!. What do you need help with?. To build\ngrunt clean jade build\nTo run\nhttp-server\nTo run the tests:\nhttp://localhost:8000/test/e2e/dev-test.html\nhttp://127.0.0.1:8080/test/e2e/docs-test.html\nTo view the site:\nhttp://localhost:8000. Also info is here\nhttps://github.com/vitalets/angular-xeditable/blob/master/CONTRIBUTING.md. Can you squash your commits?. @eugef do you want to merge?. I did what all the other \"dev-\" files did, which is just put \"dev\" in it.  This is a dev only test and only shows up on the dev.html file.\n. Yes, it's not necessary, it's a habit of mine.  I can remove them if you like.\nAngular does list it in their best practices section on directives:\nhttps://docs.angularjs.org/guide/directive\nAn overview of the data attribute\nhttps://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Using_data_attributes\n. Isn't the scope function only available if debugging is turned on?\n. I had originally added it and it is no longer needed now that #489 has been merged.\n. Maybe make this an else if since activate can only be one value.\n. Fixed. ",
    "t3chnoboy": "That would be great.\n@vitalets Any plans on this?\n. ",
    "vmlf01": "I was looking for this also\n. ",
    "pottabathini": "I am also looking for this\n. ",
    "nathanprobst": "Almost, but not exactly. I would like the \"Edit All\" to behave exactly as described in the \"Editable Form\" section of the documentation where the entire form is edited and saved atomically, including the sequence of onbeforesave/save/onaftersave steps.\nIn addition, I would like each field to be individually editable/savable.\nThe goal here is to be able to edit/save a single field, or the entire form with a single round-trip to the backend.\nI think the missing functionality is the ability to trigger edit mode on a specific child of an editable-form.\nIt doesn't look like this behavior (which I admit is non-standard) is supported out-of-the-box. But, if you can point me in the right direction, I'd be happy to provide a PR after I get it working...if you think it's valuable.\nThanks!\n. Yep. That's what I ended up doing. Thanks!\nOn Friday, January 10, 2014, Vitaliy Potapov wrote:\n\nI understand your task, it seems interesting. Currently there is strong\nrelation between control and form.\nIf control is a part of big form - it behaves like all other controls of\nform.\nIf control is single - it operates individually.\nFor your task I think you should use individual controls not wrapped in\none big form.\nBut when button \"Edit all\" pressed - programmatically show all controls\nwithout ok/cancel buttons (it is not possible now to dynamically change\nbutton visibility, you can research this)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/49#issuecomment-32032255\n.\n\n\nNathan Probst\nCTO - Rebit, Inc.\n720.204.3359 office\n970.402.7384 cell\n. ",
    "Deraen": "Thanks,\nI guess I'll use directive with template for now. It must be about the only thing I didn't try myself :)\nThough it would be nice to have template in html-file... Seems a bit strange to me that templateUrl would create new scope when directive specifically says it shouldn't have own scope.\n. ",
    "myisis": "I just found this (#47) question. I'll have a play with it and see how far I get.\n. I can't see how it'd be possible to create a more complex input like the one from the original xeditable demo page (#47 is only a simple select). I can hook into the directive by adding an onshow method (to https://github.com/vitalets/angular-xeditable/blob/master/src/js/directives/select.js) which allows loading some data to be populated, but render pretty much messes up the elements that I specified in inputTpl as it assumes a single input element to be present. I would need to override and modify render (and maybe more).\nIn summary, a more flexible way to generate custom inputs would be appreciated (and maybe an example demonstrating the functionality).\n. Actually render turns out to be quite useful to modify the input. I refrain from any DOM manipulation in onshow and do this in render instead. This seems to be working (although it's not particularly pretty)... See: https://github.com/vitalets/angular-xeditable/blob/master/src/js/directives/input.js (editableRange).\n. It works quite well actually. The only remaining problem is the need for having an inputTpl defined. This is assumed to carry the input that binds to $data. However, in many circumstances there may be more than 1 DOM element involved (for instance in your \"Custom input, several fields\" example). The problem is that if I add a div, it gets some classes assigned which take up unnecessary screen space. I have to manually remove it in render.\nIt'll be great if this dependency/assumption could be removed, so the user does not need to define a dummy inputTpl.\nMaybe there's already another way of doing this which I wasn't aware of...\n. Just on my last comment on removing the element defined in inputTpl, it turns out that this removes the DOM element which potentially contains an error message (in case onbeforesave returns a string). It's not the best idea to remove the element.\nIs there any way of doing a (pre)validation in the directive before doing a more specific validation in the application specific scope? If there isn't, what would be the best way of implementing it? My aim is to implement a simple range element which has 2 inputs (lower and upper bound). Constraint to be enforced/checked in directive: lower bound < upper bound.\nHere's what I got so far:\nmod.directive('editableBounds', ['editableDirectiveFactory',\n    function(editableDirectiveFactory) {\n      return editableDirectiveFactory({\n        directiveName: 'editableBounds',\n        inputTpl: '<div></div>',\n        render: function() {\n          this.parent.render.call(this);\n          var lowerEl = '<input class=\"editable-input ng-pristine ng-valid\" type=\"number\" ng-model=\"$data.lower\">';\n          var higherEl = '<input class=\"editable-input ng-pristine ng-valid\" type=\"number\" ng-model=\"$data.higher\">';\n          this.inputEl.before(lowerEl);\n          this.inputEl.before(higherEl);\n//          this.inputEl.parent().find('div').remove();\n        },\n        autosubmit: function() {\n          var self = this;\n          self.inputEl.bind('change', function() {\n            self.scope.$apply(function() {\n              self.scope.$form.$submit();\n            });\n          });\n        }\n      });\n  }]);\nMarkup:\n<a href='#' editable-bounds='myBound' onbeforesave='saveBound($data)'>{{ myBound }}</a>\nIn the controller's scope I define $scope.myBound = {lower: 0, higher: 100};\n. Hmm... I read a comment of your's before in which you expressed quite a strong view favouring (1). I wonder why you think this way.\nFrom my perspective, bound is a self-contained \"field\". Manipulating and validating only parts of it doesn't make much sense (especially when you want to enforce lower<higher). You have this wonderful example of Custom input, several fields   Moscow, Lenina st., bld. 12 at http://vitalets.github.io/x-editable/demo-bs3.html which is essentially what I try to achieve with the Angular version of xeditable. Singling out individual components of the address and validating them without the user being able to also change other fields would cause the validation procedure to unnecessarily raise an alert (let's say you'd change the city to 'London' and left the rest - an error message would raise that 'Lenina st., bld. 12' does not exist in 'London').\nThis seems much less intuitive than validating the whole (complex) \"field\" at once. With such a custom input, you could refrain from using a lazy-model as whenever you'd return from the input, the validation had already passed successfully (or the user cancelled in which case it would revert).\nA completely different reason why to have custom inputs could be that a widget that was able to manipulate multiple values at once (think about a slider in the case of bound or something similar).\nI think angular-xeditable would greatly benefit from having means to easily implement more complex inputs... What do you think?\n. Ok. I think I understand what you mean. You would recommend xeditable for simple data types and recommend forms for more complex use cases. I guess to some extent angular has taken over some of what's been possible with the original xeditable (hence the custom input example for the non-angular xeditable version only), which is possibly why you recommend a custom angular directive as opposed to using xeditable for complex forms. I think that's a fair separation of the two very good libraries.\nI've looked at your jsfiddle. Thanks a lot for that - it works quite nice. I took the liberty to change it a bit (http://jsfiddle.net/LUhTu/1/). One problem it has is that if lower >= higher -> press save -> press cancel, the value is saved regardless. I'm not sure how to get around this, as it would require the lazyModel submit handler to fire last (I think). Anyway, thanks for your comments. They were very helpful.\n. Hi @vitalets,\nI've been playing with your lazyModel and am not sure any more if I can use it in conjunction with a validation function that may reject values. There are basically two sequences in which I can see the submit events to fire ( (a) 1: myBounds.controller,  2: lazyModel.postLink or (b) 1: lazyModel.postLink, 2: myBounds.controller). In both cases (a) and (b), the utility of lazyModel is limited. Let me explain:\n- Case (a):\n  - myBounds can check the value and reject if necessary; unfortunately, these are the old values, as the modified values are still kept in lazyModel.buffer (which will be executed afterwards)\n- Case (b):\n  - the value will be written from buffer in lazyModel before myBounds can validate it.\nI assumed that the point of lazyModel is to buffer a value and only write it back to the original scope data, once it passed validation. This would have been great, but I don't see how it could work... Any thoughts?\nPS: Another thing I noticed is that intermittently the input fields don't get set with the lazyModel. Once I set priorities (myBounds.priority > lazyModel.priority), this works better (deterministically).\n. Thanks for the fixes. I've been playing a little with your jsfiddle examples and was able to find some issues.\nFor http://jsfiddle.net/LUhTu/2/, try the following:\n- Set min to 100\n- click cancel\n- click link again\n- => error message is still appearing, despite min showing as 99 (also button is disabled)\nFor http://jsfiddle.net/LUhTu/3/, try the above steps, but press ok instead (same result).\n. ",
    "hannesstockner": "that would be awesome (for your already awesome library)!!!\n. ",
    "ni-ka": "Hey! I like this approach and would like to use it, unfortunately I found out that it does not work with values that are updated externally.\nCheck http://jsfiddle.net/Wh4qP/ and click on change higher. The value is changed in the label but not in the form. I'll have a look at it myself but a hint on how to fix would be welcome ;-)\n. I've added a watch on the parent scope and it solves the issue, but there might be a nicer solution. Check http://jsfiddle.net/Wh4qP/1/\n. Also what would be the cleanest way to clean one field based on the change of another? I don't seem to be able to find a way to set the model value (I can read it using $scope.frm.xxx.$modelValue)\n. ",
    "asakalou": "Hello Team,\nAre there any ways to use themes for custom xeditable components? E.g. I want to create component editableTextareaLimited.\nAccording to sources there are limited number of components to which themes are applied.\njavascript\nswitch (this.directiveName) {\n                    case 'editableText':\n                    case 'editableSelect':\n                    case 'editableTextarea':\n                    case 'editableEmail':\n                    case 'editableTel':\n                    case 'editableNumber':\n                    case 'editableUrl':\n                    case 'editableSearch':\n                    case 'editableDate':\n                    case 'editableDatetime':\n                    case 'editableBsdate':\n                    case 'editableTime':\n                    case 'editableMonth':\n                    case 'editableWeek':\n                        this.inputEl.addClass('form-control');\n                        if (this.theme.inputClass) {\n                            // don`t apply `input-sm` and `input-lg` to select multiple\n                            // should be fixed in bs itself!\n                            if (this.inputEl.attr('multiple') &&\n                                (this.theme.inputClass === 'input-sm' || this.theme.inputClass === 'input-lg')) {\n                                break;\n                            }\n                            this.inputEl.addClass(this.theme.inputClass);\n                        }\n                        break;\n                    case 'editableCheckbox':\n                        this.editorEl.addClass('checkbox');\n                }\nThanks\n. +1\n. Hello guys,\nCould you please take a look at this issue http://plnkr.co/edit/6VkbN3lTqUqriPcp7VM9?p=preview\n(Datepicker is not opened on calendar button click). \nI've added e-ng-click and it is called twice during calendar button click (both wrapper div and calendar button keep ng-click handler).\nThis issue prevents from opening picker. Please suggest what is the best way to fix this. Thanks.\nVersions:\nxeditable: 0.1.9\nangular: 1.3.16\nangular-ui-bootstrap 0.12.1\n. Hello Guys,\nCould you please fix bootstrap datepicker attribute issue.\nThere is a wrong name of the attribute datepicker-append to body:\nexpected: inputDatePicker.attr('datepicker-append-to-body', this.attrs.eDatepickerAppendToBody || false);\nactual: inputDatePicker.attr('date-picker-append-to-body', this.attrs.eDatePickerAppendToBody || false);\n. ",
    "askhogan": "Cool.  First time using grunt.  Will check it out!\nOn Monday, December 16, 2013, Vitaliy Potapov wrote:\n\nhi @askhogan https://github.com/askhogan , thanks for pr!\nYou should change files in src directory, and then dist will be generated\nin grunt task.\n(see\nhttps://github.com/vitalets/angular-xeditable/blob/master/src/js/directives/input.js)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/vitalets/angular-xeditable/pull/55#issuecomment-30684119\n.\n. \n",
    "mrcmorales": "works thanks.\n. Thanks!\n. hi, @vitalets \nI had changed de data structure, now de slect works well but only edit and save after load, first time that page is loaded, select not is seted.\nhttp://jsfiddle.net/86U29/36/\nThanks again!\n. ",
    "bioform": "I want to reopen this issue. Above solution is not right since in this case \"editable-empty\" css class be tot set for the xeditable element\n. ",
    "ChinaXing": "I found that, the reasone is beacuse of ng-repeate create a new $scope, which make the editableForm's $scope inner it , instead of the EditableRowCtrl's $scope.\nAnd we can use this.editableForm to fetch the form.\n. ",
    "adpnaveen": "Thank you very much for the input .It did worked for me .It would be good if the xeditable also keeps pagination in it .as pagination is a basic feature\n. Pagination in the sense like having the data into multiple pages rather than listing in a single page and having a navigation which is a good to have feature if we have in embeded in the xeditable any ways we can do it normally as well.Thanks again for your input .It really helped me a lot to resolve the onblur issue\n. ",
    "minipai": "Diff for you: https://github.com/minipai/angular-xeditable/commit/6a68481781da746a4018c689a3acafe3809c1e00\nIn fact, I just removed every $parent. I can't understand your code enough to chose which one is necessary. \n. Duplicated, sorry.\n. +1 need popups too\n. ",
    "chrismatta": "Whoops, seems like IE's cache wasn't properly emptying, it's working. This can be closed, thanks.\n. ",
    "zakialidev": "yeah, thanks he get me confuse thanks and thanks\n. God thanks, all problem was me,\ncorrect code is this\nform(editable-form=\"\" name=\"educationForm\" ng-repeat=\"education in educations\")\nbutton(ng-click=''educationForm.$show()\", type=\"button\") \n. ",
    "kayali": "+1\n. ",
    "fynnfeldpausch": "No, this does not solve the issue.\n. No, nothing. I am currently checking the scripts for an incorrect rename due to the minification. I am on v0.1.7.\n. ",
    "sebfie": "Why not to do just like this : http://vitalets.github.io/x-editable/demo-bs3.html?c=inline\nCombodate (datetime)\n. Sry, in fact it does not come from your code.\n. ",
    "nicolasgarnil": "+1\n. Would also be useful to use the $pristine and $dirty properties of the form for example to not trigger an update call if the form has not changed.\n. ",
    "shellydehaven": "Are there any plans to support this so that others don't have to handle it the way you suggest in the Fiddle?  I want to use e-ng-readonly=expression.  Currently, when this evaluates to true, the control is still clickable and edit form is shown.  The edit control does get the readonly attribute, however it would be nice if this simply didn't show the edit form at all.\n. ",
    "renatomefi": "@Nate-Wilkins +1\nI was trying to use ng-disabled but the editable form keeps showing!\nIs there a more native solution that you found?\n. @Nate-Wilkins do you mind to show me this piece of code?\nThanks for your answer!\n. Thank you @Nate-Wilkins \nIt worked and I used onshow to control the disabled flow!\n. ",
    "aligajani": "Doesn't work?\n. That's broken on mobile devices.\nOn Sunday, August 21, 2016, ckosloski notifications@github.com wrote:\n\nDid you try using the editable-popover\nhttp://vitalets.github.io/angular-xeditable/#editable-popover?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/519#issuecomment-241265302,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABpo2jBzUiM8rghrFvGZJxG6GoUjILCqks5qiHRbgaJpZM4JpPZz\n.\n\n\nAli Gajani\nFounder at Mr. Geek\nwww.mrgeek.me\nwww.aligajani.com\n. Yes\nOn Friday, August 26, 2016, Eugene Fidelin notifications@github.com wrote:\n\nClosed #519 https://github.com/vitalets/angular-xeditable/issues/519\nvia #525 https://github.com/vitalets/angular-xeditable/pull/525.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/519#event-768555929,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABpo2kI-4hZvF1vQkAVoXw3NtXStLOgNks5qjpwagaJpZM4JpPZz\n.\n\n\nAli Gajani\nFounder at Mr. Geek\nwww.mrgeek.me\nwww.aligajani.com\n. ",
    "kopch": "Yes, this is a huge problem for me right now. \n. ",
    "bezoerb": "+1\nAny updates for this one?\n@vitalets can you explain the reason for the setTimeout(...,0) to me.  I've currently commented this line and experienced no issues so far (+ iOS focus working)\n. Ok, now i got the reason for the setTimeout ;)\nError: error:inprog Action Already In Progress\n. ",
    "laurensnl": "Any update on this problem?\n. ",
    "taglia": "It's a problem for me too.\n. ",
    "atremel": "+1\nAny updates?\n. ",
    "BlackEspresso": "+1\n. ",
    "abhilashcode": "+1. Still an Issue, not yet resolved.. ",
    "cezarpretto": "I would like too :)\n. ",
    "oma": "+1 same here\nany update on this? @altaf-sami provided a example reproducing it. \n. ",
    "jsango": "Another +1 for this. Updates?????\n. ",
    "lindamarieb": "I have the same problem. No required or email type validation in my forms. Sadly x-editable is stripping away any advantage of using AngularJs and HTML5 and I need to consider dropping it.\n. ",
    "paulflo150": "That seems like a hack, adding the required attribute should make it required - going back and forth between the view and the controller is very inefficient and adds to the complexity of the controllers. \nAdding a required attribute should automatically set the validity of a property the same as angular does it.\n. ",
    "robertscholz": "The problem is that the e-form=\"rowform\" attribute is not transfered from the span element to the input element in edit mode. All other attributes prefixed with e-* are transfered but not e-form. So the resulting input element becomes:\nhtml\n<input type=\"text\" name=\"name\" required=\"required\" class=\"editable-input form-control ng-pristine ng-valid ng-valid-required\" ng-model=\"$data\">\ninstead of:\nhtml\n<input type=\"text\" name=\"name\" form=\"rowform\" required=\"required\" class=\"editable-input form-control ng-pristine ng-valid ng-valid-required\" ng-model=\"$data\">\nWithout the form attribute on the input element html5 validation attributes such as required, min and max will not work. If the form attribute was transfered correctly to the input element we only have to update the form element in the JSFiddle to have the id attribute set to the value that is used in the form attribute on the input element. So (from the JSFiddle) the form element:\nhtml\n<form editable-form name=\"rowform\" onbeforesave=\"saveUser($data, user.id)...\"\nshould be:\nhtml\n<form editable-form name=\"rowform\" id=\"rowform\" onbeforesave=\"saveUser($data, user.id)...\"\nThe code for omitting the form attribute seems intentionally when looking at the source code:\njavascript\n// exclude `form` and `ng-submit`, \nif(transferAttr === 'Form' || transferAttr === 'NgSubmit') {\n    continue;\n}\n. Please se my comment on issue #76.\n. ",
    "pnowy": "+1 any update?\n. ",
    "marthinal": "Hi guys I fixed the problem checking form errors.\nI have created a pull request and here is the patch\nhttps://github.com/marthinal/angular-xeditable/commit/d983f03d6be4d05a586ceded6b5e693cff7ba341\n. If you are adding css styles when validating and you need to remove it once the form is submitted, then you need to set $submitted to false. Please read:\nhttp://www.codedisqus.com/CHVjeXgWgg/angularjs-form-gets-pristine-but-still-submitted.html\n. ",
    "celsomtrindade": "@mitcht i understand what you said, and also already tried this. But, at least for me, when i use the form outside of the repeater, everything inside that form with be active for editing when i click on the edit icon of a row, and not just a single row. Any idea why?\n. Yes, until that part i understood. But for example, i need to validate a field based on a mask, but i'm not able to do so. I even posted a question on stackoverflow, but until now, i didn't got any answer.\nI can validate, like your example, but only if it match a certain 'name' or if it's not blank.\nDo you have any idea why?\n. But for example, i have a telephone field, so it need to have a especific type of data. I mean, it's not necessary to validate it based on the mask itself, it could be based on the input being $invalid. But even with this I'm not able to validate, because the input field doesn't get the proper ng-model name i set. It's always like: ng-model=\"$data\" no matter what i set on the e-ng-model attr.\n. I mad this change direct into the css (by the way, I'm using sass), in this part here: \n.editable-wrap {\n    display:block;\n    width: 100%;\n    padding-right:10px;\n    .editable-controls {\n        > input,\n        > select,\n        > textarea {\n            display: inline-block;\n            width: 100%;\n        }\n    }\n}\nHope this is what you are looking for.\nEdit: This will override the main style, so every editable will have this style. If you want to apply this to just one page or one form, you can follow @innerpeace0 response, and create your own style to change it.\n. It would be something like this:\n.editable-wrap {\n    display:block;\n    width: 100%;\n}\n.editable-wrap .editable-controls > input,\n.editable-wrap .editable-controls > select,\n.editable-wrap .editable-controls > textarea {\n    display: inline-block;\n    width: 100%;\n}\nBut like i said, this is the default css and i did this modification to match my layout, maybe you need to change some things to match yours, but you'll get the idea.\n. ",
    "thiagohac": "+1 any update?\ne-required do not work.\n. ",
    "Sampath-Lokuge": "Is there any permanent solution for this ? I mean it should be work with the e-required . Thanks.\n. @joseaquino I have used your 1st solution.It's working fine.Thanks for the Great work :)\n. @seksitha Thanks,It works :)\n. I have found the solution.Here it is :clap:\nHTML\n<span editable-select=\"bulkPaymentType\" e-form=\"tableform\" e-ng-options=\"s.value as s.text for s in statuses\" e-ng-change=\"setBulkPaymentType($data,tableform)\">\n\nJS\n```\n$scope.setBulkPaymentType = function (data,tableform) {\n    for (var i = 0; i < tableform.$editables.length; i++) {\n        if (tableform.$editables[i].name === 'user.status') {\n            tableform.$editables[i].scope.$data = data;\n    }\n}\n\n};\n```\nPlay with it : JSFiddle\n. Wow excellent.Thanks a lot @ckosloski   :smile:\ncan you do the same on Stack Overflow also ? \n. @ckosloski Thanks for the feedback.But it's not working for me.Can you update it on the above fiddler and let me know the new fiddler url ? Thanks. \n. Yes,it is working now when we click the add row button @ckosloski Thanks.\nAnother requirement is can we set focus it on form load event also ? I mean when it loads first time it should be focused on the first row.Thanks.\n. @ckosloski  Can you put the new fiddler url ? Thanks.\n. @ckosloski  Wow.. Thanks a lot :) Can you put your answer on stack overflow ? \nstack overflow\n. Great @ckosloski Thanks a lot for the continuous support.Have a nice day ! :) \n. @ckosloski Yes,But I have seen there are problems on that integration.Please see the link below.Thanks.\nui-select Issues with Xeditable\n. @ckosloski  Aha.. Thanks a lot for the invaluable information.I'll also try it on coming days and will let you know.Thanks again :+1: \n. Thanks @ckosloski .Your solution is working  :smile:\n. @ckosloski Actually if you see the above example then it uses latest build (2016-03-24).But still it is not working.Am I missing something on the above fiddler ? Thanks.\n. @eugef Thanks.But still it is not working with e-typeahead.Could you give me a working example ? Thanks.\n. @ckosloski But still it is not working with e-typeahead.Could you give me a working example ? Thanks.\n. @eugef @ckosloski  Here is the updated Fiddle which is not working.\n. @ckosloski Is that mean can't we use the drop downs with the  e-typeahead ? Thanks.\n. @ckosloski I have used typeahead with the Angular only drop downs. Which are working fine.The only problem is within the Xeditable grid which is not working ? Thanks.\nHere is the AngulaJs drop down with the typeahead.Which is working.\n<input name=\"contactType\" id=\"contactType\" type=\"text\" placeholder=\"@L(\"OiEnterContactType\")\"\n ng-model=\"vm.occupantDetail.contactType\" typeahead=\"a as a.name for a in vm.contactTypes | filter:$viewValue\" class=\"form-control\" required>\n. @ckosloski The problem on the ui-select is, we cannot add a new item to the drop down if that item is not in the popup list.But with typeahead we can do that.My requirement is that.That means,if a particular item was not there on the drop down then user can add it to the drop down.After that app will save that item into the table.Thanks. \n. @ckosloski Very good point.I have done that way.But still it's having issue when user clicks the Edit button.When user clicks, it shows the id of the property.But it should be the text.How can I get rid of this ? Thanks.\n<span editable-text=\"user.status\" e-name=\"status\" e-form=\"rowform\" \n        e-typeahead=\"s as s.text for s in statuses | filter:$viewValue\">\n          {{ showStatus(user) }}\n </span>\nHere is the Fiddle\n. Wow ... Thanks a lot @ckosloski   :smile:\nIf you don't mind can you put this answer on the StackOverflow  also.\n. Thanks a lot @ckosloski It works for me  :smile:\n. Hi @ckosloski can I have any support for this ? Thanks.\n. @ckosloski Nope,I'm using this.Then what should I do ? Thanks.\nangular-xeditable - 0.1.12\nEdit-in-place for angular.js\nBuild date: 2016-04-14\n. @ckosloski Oh..Thanks a lot for the info.If I'll update it to latest version then  will I have lot of braking changes on my app ? If so could you tell me where are those places ? Thanks.\n. OK sure @ckosloski  I'll do that and will let you know if I'll need any  further help. Thanks a lot. \n. Thanks a lot @ckosloski It is working fine with the latest version :smile:\n. Hi @ckosloski Can I have any support for this ? Thanks.\n. Exactly @ckosloski It is date picker control.I need to give a colour to that date text. \n. Actually @ckosloski  I need to give a colour according to the condition as shown below.Could you tell me how to do that ? \n<span ng-if=\"note.isEmailSent\" editable-bsdate=\"note.date\" e-datepicker-popup=\"MM-dd-yyyy\" e-style=\"color: green; background-color: green\"\n e-ng-click=\"opened = !opened\" e-is-open=\"opened\" onbeforesave=\"vm.checkValidity($data)\"\n e-name=\"date\" e-form=\"noteInformationForm\" e-readonly=\"true\" e-required>\n       {{ note.date | date:'MM-dd-yyyy' }}\n</span>\n. Oh.. OK @ckosloski Then you can mark this issue as an enhancement no ? Hope you'll do that and will let us know.Thanks.\n. Thanks a lot @ckosloski  Have you released new version or what ?\n. Oh..   :open_mouth: Then can you please tell me how to do that or may be a simple reference link about the way how to do that @ckosloski  ?\n. Thanks  a lot @ckosloski    :thumbsup:  I really appreciate it.I'll try it and will let you know if I'll have any issue.\n. ",
    "claudionunezjr": "Seriously need to remove e-required from the docs and demos (doesn't even work in the demos) if a working example cannot be presented. How much more frustrating can this get. At least, the docs should have some note about this. Like, hey!, you have to write your own validation logic.\n. Thanks for your response. Unfortunately, that example (http://vitalets.github.io/angular-xeditable/#text-customize) doesn't demonstrate the table scenario. The issue is with the ng-repeat(ing) of the table rows and maintaining scope appropriately. I did have to hook in my own validation. Maybe there is no \"real\" native solution for this without having to build in additional logic to address this. Just would be nice if this exact scenario (using e-require with tables - repeating rows) would indicate this limitation in that section of the docs.\n. ",
    "buzai": "@ckosloski E-required not work, then I can only onbeforesave () method to check the parameters of the? But I used a lot of e-required before, and the use of onbeforesave very troublesome. Is there a simple solution? .\n. @ckosloski ,In a  form ,I want check input  value before click save button \n. @ckosloski thanks ,now i am know\n. ",
    "MuraliM": "@redterror  I am also looking to implement something similar. Please inform if you resolve it.\nThanks in advance!\n. Do we have any working example with typeahead with id,label pair values and showing a field in x-editable table?\nExample, I want to show a product name column in the table with typeahead implementation. Once the user enters the information I need to save the Id of the product and not the name I display in the column.\n. Is it possible to do the same thing from external select box which is not a part of tableform?\nI have the similar problem, got two forms one which has normal form controls. Another one is inline editable table. There is a column in inline editable table which depends on the select box available in the form1. \nHow to make this work? I tried with \n$scope.$watch('purchaseHeader.DiscountPercent', function (newValue, oldValue, scope) {\n    // get access to the editable form table and set the discount column value\n  });\nBut need to know how to access the table forms?\n. @HariBabuThubati Check this Plunker link http://plnkr.co/edit/UoXWgnqOVMEwVvHonnqG?p=preview\nAs of now I have managed to update the object(order) passed to get the computed value\n. ",
    "redterror": "We ended up with a different solution.  It's been a while now, so my apologies but I don't recall what we did.\n. ",
    "fnbns": "Wow, Thanks a lot !!\n. Yes, replace this inline edit with an input box that has no borders, there are many angular alternatives for this (e.g. http://www.tamas.io/inline-editing-with-angularjs/). Basically you have to use a normal input and do the validation in pure angular style on that input. \nLet me know any questions,\nAlex.\n. ",
    "BartoGabriel": "The change must be made in https://github.com/vitalets/angular-xeditable/blob/master/src/js/themes.js#L66\nChange editableDate by editableBsdate.\nThe project is great!\n. ",
    "sick": "+1\n. ",
    "paulmand3l": "+1\n. ",
    "matt-duch": "+1\n. ",
    "mattlanham": "+1\n. I really needed this, so i made this very simple directive to work with the regular x-editable version and it's working for my use case, perhaps you can give this a go:\nhttps://gist.github.com/mattlanham/9738979\n. ",
    "cseils": "+1\n. ",
    "BirdInTheCity": "+1\n. ",
    "dbrgn": "Yeah, would be great :)\nHere's another workaround: http://ryanlanciaux.github.io/blog/2013/10/16/fake-popovers-for-angular-xeditable/\n. I think this is a duplicate of #81.\n. Probably a duplicate of #146 and #81.\n. ",
    "JobaDiniz": "+1\n. +1 for support ui.select\n. Looks great. Why don't you make a pull request for this?\n. Great, please create a PR :smile: \n. +1\n. @zhendong590, I think you modified the wrong file. You should create another js file in this folder. Grunt compilation will take care of adding the new file to the dist js...\n. @zhendong590 , it doesn't work for me... :cry: \nmodel value (state.selected) is not updated:\n```\n\n\n{{$select.selected}}\n\n\n\n\n\n```\n. ",
    "gabrielchites": "+1\n. ",
    "RPGillespie6": "+1\n. ",
    "stevebhyve": "also getting this in http://vitalets.github.io/checklist-model/ - might be a conflicting compile\n. This needs to be changed for this version of jQuery as it is trying to change the type, not checking if it is a checkbox\n- jQuery JavaScript Library v1.8.3\nif (tElement[0].tagName !== 'INPUT' || !tElement.attr('type', 'checkbox')) {\n                    throw 'checklist-model should be applied to input[type=\"checkbox\"].';\n                }\nif (tElement[0].tagName !== 'INPUT' || tElement.attr('type') !== 'checkbox') {\n                    throw 'checklist-model should be applied to input[type=\"checkbox\"].';\n                }\n. ",
    "webholics": "You need to add the attribute blur=\"submit\". Then it will submit the changes on blur. Otherwise it will only submit if you press enter.\n. ",
    "sniras": "@webholics, thanks a ton! That was very helpful. This feature and it's use in concurrence with buttons=\"no\" was not obvious from the current documentation. Closing the issue.\n. ",
    "bholzer": "Ah, was looking for a way to do this. I just removed the outer check of !attrs.eForm but I think this is probably better. Thanks\n. @vitalets On second thought, this may be better achieved by adding an editable-ok-class and editable-cancel-class attribute to the directive, so that you can add custom icon classes straight to the element instead of choosing a global icon set that has to be hardcoded\n. ",
    "christianrondeau": "Glad you found it useful!\n. ",
    "fastf0rward": "+1!\n. ",
    "amit777": "sorry, I figured it out.. In case anyone else runs into this, you can simple just put the fullowing in your tag:\n<span editable-text=\"scopevar\" e-name=\"password\" e-type=\"password\">{{scopevar || 'empty'}}</span></td>\n. Were you abel to figure out a solution to this?  I've run into a similar issue.\n. Did you ever figure this out? I wanted to changeform fields based on the value of a selected radio button.\n. ",
    "tallsam": "+1 tabbing is lost when submitting via the keyboard\n. I'm working on a complex reusable form component that is included within another form via a directive. So the component has no knowledge of the other form. In some circumstances the other form may not exist.\n-form\n  - name\n  - size\n  - historical-stock\n     - year, volume\n     - year, volume\nIf you consider the above, the stock form is a parent form, and the historical stock area would be the table with the editable rows. historical stock is embedded within the stock form using a directive.\n. I see what you mean about not needing to use editable form - I think I'll switch to using editable popover in this case.\nFeel free to close.\n. Okay thanks a lot.\n. ",
    "lanceschi": "I read your answer to issue #73 and I somehow modify my code. I still would like an opinion of yours. Thanks, Luca.\n. ",
    "tomchentw": "+1  for this. Please consider merge :)\n. ",
    "llwt": "+1\n. ",
    "deepthoughts": "I guess it may be a CSS issue. \n. I am having same issue not sure what I am doing wrong. \n. @HollandRisley Thanks for the prompt reply and it did help me to isolate the problem. \nI think my ID is returned as string from the JSON so as to work with Localstorage but it is causing me this problem here. I think I may have to use to use Parseint or similar function or anyone here has some insight. \n. @HollandRisley I take back my previous comment. Localstorage string  is not the cause for this problem. \n. ",
    "futurechan": "Since you are using ui-bootstrap, are you sure you have the bootstrap glyphicons loaded on the page?\nI think this question is best suited for ui-boostrap and not this repo.\n. +1\n. ",
    "hiepthai": "Please use e-name attribute\nhtml\n<button ng-click=\"surveyTextBtnForm.$show()\">Edit</button>\n<div editable-text=\"surveyText.value\" e-form=\"surveyTextBtnForm\" e-name=\"surveyText\"></div>\n<div ng-show=\"surveyTextBtnForm.$visible\">\n    You've written {{ surveyTextBtnForm.$data.surveyText.length }} symbols\n</div>\n. ",
    "chibisov": "@hiepthai, thank you. I haven't tried it but I hope it works =)\n. ",
    "HollandRisley": "Sorry... it doesn't update the $scope until you save!! Doh!! I was looking for live binding as I changed the dropdown, and thought it was broke!\n. @deepthoughts I am still looking for an answer and am using a hack at the moment, this code only changes the ID in my JSON object, I then have to manually look up the referenced item to change the Name. This is a real pain, so I am really looking forward to receiving some help!:\n<span class=\"inputHolder\"\n              editable-select=\"data.organisation.OrganisationType.Id\"\n              e-ng-options=\"type.Id as type.Name for type in data.types\">\n            {{data.organisation.OrganisationType.Name}}\n        </span>\n. Yeah, I gave up on this plugin and ended up writing my own custom editable fields to overcome this bug..\nOn 26 Aug 2014, at 21:58, David Webb notifications@github.com wrote:\n\nI am having the same issue. It seems like the JSON attribute bound by the editable-select is not properly linked to the underlying model that is updated via ajax call after the page is loaded.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "Duskfall": "I created a plunker with pagination\nhttp://plnkr.co/edit/APCMh0?p=preview\n. Yeah just set currentpage to the page you want \n. ",
    "arun0009": "Thanks - I have the same issue, after creating 3 rows the 4th row is created on page 2 but user is still on page 1. Is there a way to redirect user to page 2 as well?\n. ",
    "000panther": "+1\n. Hey, I guess this is pretty outdated by now, but I would suggest creating a function in the controller that populates the view or is assigned to the view and then call this function in onaftersave.\nIn this function (in the controller) you then have access to the $scope, if you have injected it.\nHTH\n. Sorry, seems like I got something wrong ... seems like rejected promises are handled well.\n. Puh, sorry this is a very old issue, I do not remember what I did ... \n. ",
    "mp-jgoetzinger": "hey, any reasons not to merge it?\n. thx!\n. ",
    "caioc": "yes. ",
    "prowave": "I am having the same issue. It seems like the JSON attribute bound by the editable-select is not properly linked to the underlying model that is updated via ajax call after the page is loaded.\n. I experienced the same issue.  Your fix works good.  Thank you.\n. Another side effect I see as a result of moving from 0.10.0 to 0.11.0 is that the popup default to today, and not the date being edited.\n. ",
    "rmariuzzo": "I'm facing the exact same problem :angry: If the owner, or any collaborator could point me where could be the cause of this problem, I would be happy to create PR.\n. Me too, I would like to know how to disable x-editable from a directive. I have particular use case.\n. Temporarily, I'm using the following hack to disable xeditable elements:\njs\nelement.find('.editable').each(function () {\n  angular.element(this).scope().$form.$show = angular.noop;\n});\nIt works for my expected scenario, but it is clearly a hack and not a real solution.\n@vitalets, if you can point me out where I could contribute to add a way to really disable xeditable for a particular element, I will really appreciate that :smile: \n. I was surprised to see it has been added such functionality yet. I'm very interested to contribute to this feature. Currently I have a form where some part can be edited depending on user role.\n. +1, is there something needed to be done before merging it?\n. Thanks @Painyjames !\n. ",
    "adaro": "@HollandRisley - any chance I can see that directive you built? I am having the same problem :P\n. ",
    "lorenscott": "This did not work for me.  Using X-editable.\n. ",
    "geostima": "e-maxlength works on a editable-text field but NOT on a editable-number field or other types, be aware of that. (in case that is the reason why it wasn't working for you and you did not specify correctly).\n. ive noticed that you may need to add an e-init-date attribute also, that together with (e-uib-datepicker-popup=\"yyyy-MM-dd\") fixed the format on the input when the calendar is clicked.\n. tried this hack by modifying the actual UibDatepickerPopupController - didn't work.\n. ",
    "NessfertIndia": "How to make it work for textarea? Any alternate ways? I am already using a validation on sumission like \n  $(item).editable({\n                type: 'textarea',\n                url: '/Project/POSTComment',\n                title: 'POST Comment',\n                validate: function (value) {\n                    if ($.trim(value) == '') {\n                        return 'This field is required';\n                    }\n                    else if (value.length > 490) {\n                        return 'Max length is 490';\n                    }\n                },\n                success: function (response) {\nBut looking for some better ways which UI prevents user from adding more characters\n. Yes but its not working for me .  Can u share some jsFiddle samples to see the difference from my approach\n. ",
    "maxxrdrgz": "Is there any way to set maxlength not using angular? I'm the BS3 build.. Figured it out, you can use the tpl option of a textarea to change the html template like so:\n$('.class').editable({\n    type:'textarea',\n    tpl: '<textarea maxlength=\"5\"></textarea>'\n});. ",
    "epicbagel": "+1\n. ",
    "brunopaz": "+1\n. ",
    "paweldziura": "+1\n. ",
    "snebjorn": "Is there any doc on how I could write this myself?\nI noticed that src/js/directives have the editable attributes. So I guess I need to add it there, but what else do I need to edit?\n. ",
    "d-H-": "Nope, never got it working. It was a \"nice to have\" in my application, not a requirement. After a few fruitless attempts I gave up and moved on to other things.  If you figure it out please let me know!\n. ",
    "parer800": "This is exactly what I want to accomplish! I want to have \"chained selections\" that depends on another select/input element, this works with custom filters BUT it requires that the data model is saved first.\nPlease let me know if you know how to solve this!\n. ",
    "cuipengfei": "+1\n. ",
    "tthew": "+1 - being able to save the local model on change would be super useful.\n. :+1: Being able to manipulate the 'temporary model' while a form is $visible would be super useful.  For example, I have a bunch of forms in rows, containing editable-selects that I need to be able to validate (checking the values in other rows) on a change event (rather than on submit).  Can't see an obvious solution to this problem.\n. Use $watch \n$scope.$watch('a', function (val) {\n        $scope.b = val; \n    });\nJSFiddle\n. ",
    "pravinkumart": "This requirement suits mine too. Want to save model instantly.\nI have found this line in \"self.inputEl.attr('ng-model', '$data');\" in xeditable causes that flaw.\nI have changed it to \"self.inputEl.attr('ng-model', $attrs[self.directiveName]);\"\nIt works.But some functionalities are not working. \nFrom my understanding, what they have done is they are passing the model value as string instead of passing it as model.\nWe have to work on it ... Somebody please help me to fix it\n. Thank you for your solution. But i would like to do it in form like this.. http://jsfiddle.net/pravinkumart/BfL9D/2/\nWhen i start typing or at the end of type(focus out of the box), the value in the name text box should reflect in user name text box before clicking on save button.\n. ",
    "ODelibalta": "+1 \n. ",
    "onemenny": "+++1\ni found a solution: \ne-ng-change=\"acceptNameChanges($data)\"\nthan in your 'acceptNameChanges' method you can get the current value $data\n. http://jsfiddle.net/onemenny/NfPcH/7240/\n. thanks - ill check later on\n. ",
    "rankun203": "And another question, how to update the editable value when the model changes?\n. +1\n. +1 for this request.\n. ",
    "getkitchendeal": "+1.Would be nice if i could pass the parameter to instantly update the model(like default behavior in angular)  i used e-ng-click='myfunction ($data)'\n. Fiddle: [(https://codedump.io/share/VuLCMjxQZKD3/1/angular-x-editable-show-some-form-control-onchange)]\ne-ng-change only works for select. Check the link above to see it in action. Set \"status\" =\"status 1\" However when you you try to use e-ng-change with checklist, check box, radio list then it throws an error: can't find ng-model.\ne-ng-click='myfunction ($data)' -> doesn't work\nDid anyone figure out the fix that will suit all controls in x editable?\n. there is more thread on this issue in https://github.com/vitalets/angular-xeditable/issues/105\nI think you could close this break\n. ",
    "pihomeserver": "@hobbysoldat how did you manage that ?\nI try the following code but can't get the returned message displayed in the table in case of error\n```\n        var deferred = $q.defer();\n    if (data.db_element === '' && data.active) {\n        deferred.reject('Source can not be empty for active series');\n    } else {\n        deferred.resolve(true);\n    }\n\n    return deferred.promise;\n\n```\n. Thanks anyway\n. ",
    "hfar": "Hello,\nI have the same issue ..is there any workaround please for this?\n. Hello,\nI had the same issue and in my case i was able to solve it using blur attribute :\n<tab-heading>\n   <span editable-text=\"tab.name\" onbeforesave=\"validate($data)\" buttons=\"no\" blur=\"submit\">{{ tab.name}}</span>\n </tab-heading>\nPlease see the documentation.\nAlso please see the below code in xeditable.js: \nif (shown[i]._blur === 'submit') {\n        toSubmit.push(shown[i]);\n      }\n. ",
    "jrvidal": "+1\nThe simplest example shows a memory leak:\nhttp://embed.plnkr.co/WE7XFvtMhrRzPtpxqcc0/preview\n. ",
    "asmuelle": "Yes, works for me.. ",
    "markvp": "+1\nCurrently have to create replica \"display\" containers for every item with data-ng-if (or data-ng-show/hide) directives\n<div data-ng-if=\"!vm.canEdit\" data-ng-bind=\"vm.item\"></div>\n<a data-ng-if=\"vm.canEdit\" data-editable-text=\"vm.item\"></a>\n. @eugef, we're no longer using NuGet or xeditable so are unable to continue this contribution.\nSorry.\n. ",
    "abhikp": "+1\n. ",
    "clicktrend": "+1\n. ",
    "Fabryprog": "+1\n. Any news? I am very interested in this feature!!!\n. ",
    "mrenvoize": "+1\n. Code looks reasonable to me, though I'm no Angular expert..  Any chance you could provide a fiddle to show it in action with your changes?\n. Also, I'de probably swap the 'editable' to 'editing-enabled' or something similar for a more descriptive wording.\n. ",
    "FieldMarshallVague": "How about when you want a single 'edit' button in another scope?\nFor instance, I have a status bar with the edit button in it (status.editable), this has its own controller.  I want to enable editing on my diary controller using that button.  But if I put the editable form in the status view (i.e. within status scope) then the editable-form is null when the diary's scope is being rendered.  This makes sense, but I don't want to put the edit-toggle button in the same view.\nI don't want to assign a rootScope property, but essentially want to be able to set another scope's 'editable' property that any editable inputs obey (e.g. enabling all editable inputs when it's 'true').  Is this possible?\n. ",
    "RavenHursT": "+1\nSeems to me like this is still a very desirable feature.  Currently, what @markvp said seems to be the only way to control editable enabled/disabled functionality.  Especially when implementing a \"buttonless\" editable via the blur=\"submit\" and buttons=\"no\" attributes for editable fields directives.\nPreferably it was seem logical to just tie ng-disabled into this library that would just disable/enable editable functionality based on the truthiness of the ng-disabeled value.\n. The PR here: https://github.com/vitalets/angular-xeditable/pull/235 seems to be a great solution.  But it hasn't been merged yet :-1: \n. Can we get this re-opened or someone to point us toward another issue where this might be getting implemented?  Seems like a lot of people would like to see this...\n. @maelfrize, @BenjaminConant did it..\n@BenjaminConant wondering if the opposite behavior might be better/worse?  Maybe allow for both.  For example.. Facebook behaves as you've mentioned, (shift+enter for new lines, enter for submission).  But a number of other apps (like gitHub and Gmail) behave in the opposite (kind've): Enter for new lines, CMD+Enter (on a Mac) for submission.\nI kind've prefer the latter, but that's just me.\n. Why hasn't this been merged yet?\n. +1 to @vitalets for a merge?\n. So is there any roadmap to getting this into a release?\n. Doesn't seem to work in 1.8 either: http://plnkr.co/edit/uvLOMJ?p=preview\n. Yeah.. can't get it to work in 0.1.9 either: http://plnkr.co/edit/msqzF8?p=preview\nI've gotta be doing something wrong here....\n. ahhhhh..... looks like you have to handle the show method yourself if you set e-form: http://jsfiddle.net/kjfu3rnx/3/\nWould be nice if this was handled for you instead of explicitly having to handle it.\n. Works w/ 0.1.8 as well :-) \nhttp://plnkr.co/edit/R7hfW6?p=preview\n. But for the exact use case I was trying to use, it doesn't seem to work. :-(  \nSee my issue here: https://github.com/vitalets/angular-xeditable/issues/280\n. Having unique form names in a view seems very desirable.. otherwise, how else do you perform operations on specific forms in your controller if you cannot referent the form via ($scope.[formName])?\n. Yeah.. there's a number of work arounds. I can't remember the specific use case that I was was trying to solve in our app when I generated this issue, but I remember finding a work around as well.  \nBut that doesn't negate the fact that there's an inconsistency here in regards to how e-form is behaving w/ just a static single item, and how it's behaving in the context of ng-repeat.\n. ",
    "vpratti": "+1\n. Workaround does not work for me either\n. ",
    "fracz": "+1\n. ",
    "VitalyM": "+1\n. ",
    "marcosPerezRubio": "+1\n. ",
    "amerli": "+1\n. ",
    "abloch": "+1\n. ",
    "thim81": "+1\n. +1\n. Hi Jvasquez,\nYour PR works perfect, so I hope it gets merged soon.\nI have fine-tuned your proposal to support better CSS addClass behaviour when isDisabled\nNot sure how to modify a PR, so I added them here.\n- I have changed the part, around line 988 in xeditable.js\nAdded is_disabled check\n// add `editable` class to element\nif (is_disabled() == false) {\n    elem.addClass('editable');\n}\n- I also changed the part, around line 1020 in xeditable.js\nAdded is_disabled check\n// bind click - if no external form defined\nif(!attrs.eForm || attrs.eClickable) {\n     if (!is_disabled()) {\n           elem.addClass('editable-click');\n     }\n...\n. ",
    "Arkh1": "+1\n. ",
    "edalorzo": "+1\n. ",
    "MaitreDede": "Would be a lovely feature :)\n. ",
    "octaviandavid": "why was this merge not accepted yet?\n. ",
    "altsanz": "I'm affected by this also, but the problem is that is more complicated:\nusually you would want to input boxes when editing password value, to validate that user is writting the same passwords twice.\n. hey, yes, this has been answered. And thanks a lot!. ",
    "austinpray": "Looks like a question for stack overflow and not the issue tracker\n. ",
    "ismarslomic": "I would agree. See this post: http://stackoverflow.com/questions/23413383/angular-xeditable-editable-fields-only-for-authenticated-users\n. ",
    "hwagz": "@mitcht This did not work quite as I was hoping. Upon clicking, the edit box still pops up, but can't be used. I saw somewhere else to use edit-disabled=\"boolean\". This... mostly works with the editable box not even popping up. But for whatever reason, the exact same code works just fine on an element being ng-repeat'd, and not at all on a standalone element. So if I have an array of string info from an API I'm iterating through it's fine, but if I have just a single text element, no dice.\n. Hmm. No I cannot. The code from my project works exactly as it should in the fiddle. I think I've identified another issue that is causing my problems that is not xedit related. \nHere's the fiddle anyway for anyone that wants to see e-ng-disabled and edit-disabled side by side. http://jsfiddle.net/dpf5jb39/16/\nThe ngRepeat should be\nli ng-repeat=\"alias in aliases track by $index\"> \n        <span editable-text=\"aliases[$index]\" e-name=\"aliases[$index]\"e-required\nFiddle just didn't like \"track by $index\" for whatever reason.\n. ",
    "vikasgarghb": "Were you able to get this working?\n. ",
    "tlaak": "You can add blur=\"submit\" attribute for the element. See http://vitalets.github.io/angular-xeditable/#ref-element for details. \nNote that this event does not fire when element loses focus after pressing tab key, because it only listens for click events on the document. In that case you can use e-ng-blur=\"function()\" attribute to handle the blur event. Would be nice though if xeditable could handle the blur event correctly so that there would be no need to hack the form submit by yourself.\n. ",
    "trodi": "@ckosloski , @tlaak notes are still correct.\nI expected blur=\"submit\" to trigger on more than just the click event, so tabbing through xeditable elements would submit themselves. e-ng-blur=\"form.$submit()\" is a workaround, but $submit() isn't in the documentation and isn't as clean of a solution.\nThe updated functionality could be limited to if the user has selected buttons=\"no\" (as that's a simpler implementation).\n. :+1: \n. In searching for an NPM package, I found angular-editable-npm, which is up to date with this parent repo and thus a viable solution to this issue. Note, neither package is maintained by @vitalets.\n. npm package maintainers, would either of you be able to update to the latest release? Additionally, it would be helpful to only have one npm package and deprecate the other. Thanks.\nangular-xeditable-npm @ShaKann\nangular-xeditable @PitBeast\n. ",
    "yrik": "@hodeyp what was the problem? I have the same issue.\n. ",
    "shsrivastava": "@johntom did you get any solution ? Thanks in advance\n. ",
    "jdforsythe": "You can use the string equivalents of the 0/1 by using:\ne-ng-true-value=\"1\" e-ng-false-value=\"0\"\non your checkbox. Remember, anything prefixed with e- transforms to a regular attribute, so these transfer to the angular:\nng-true-value=\"1\" ng-false-value=\"0\"\n. I use this to show Yes or No as the checkbox value when not editing. It properly shows Yes initially and updates.\n<span editable-checkbox=\"field.def\" e-ng-true-value=\"1\" e-ng-false-value=\"0\">\n    {{ field.def == 1 ? 'Yes' : 'No' }}\n</span>\n. I do it with a checkbox.\n. Let's say your editable form has:\n<form editable-form name=\"myEditableForm\" oncancel=\"checkCanceled()\">\nYou can access values like an angular form in your controller. Check $scope.myEditableForm.$dirty:\n$scope.checkCanceled = function() {\n    console.log($scope.myEditableForm.$dirty);\n};\n. ",
    "kevinhikaruevans": "That sorta seems to work.\nI'm using the following:\n<span editable-checkbox=\"field.def\" e-ng-true-value=\"1\" e-ng-false-value=\"0\"></span>\nHowever, it doesn't check the box if field.def = 1 initially. But it will save field.def as a 0/1 value when the editing is done.\n. +1.\nWould be nice to have an attribute in the tag. Something like:\n<span e-style=\"min-width: 100px\" editable-select=\"device.model_id\" e-ng-options=\"s.id as s.name for s in models\" ng-bind=\"getDeviceModelName(device)\" e-null-option=\"Please select...\"></span>\n. ",
    "nmstoker": "@kevinhikaruevans - not sure if you found a way to fix this yourself, but after some fiddling I managed a simple work around to make it okay.\nIf I've understood correctly then the issue was that upon the transition to the display of the actual checkbox the checkbox's initial setting does not respecting the initial model value (of 0 or 1), it's just blank whether the model is set to 1 or 0.\nThe logical test (ie {{model.field == 1 ? 'Active' : 'Inactive'}}) for displaying the text works fine, but as soon as the user clicked to edit the row then the checkbox appears incorrectly set.\nI appreciate this workaround might not be acceptable for everyone, but I found that simply casting the MySQL output to be text worked. It's as simple as changing the output Active to be CAST(Active AS CHAR).\n. ",
    "davidrothschild": "I was having this same issue -- my checkbox is tied to a Boolean in MySQL, which returns the value as Integer 0 or 1.  Tried @nmstoker 's suggestion to CAST it as CHAR, which I confirmed returned the value as String \"0\" or \"1\" instead of an Integer, but it still wasn't working for me.... \nI ended up leaving it as an Integer and adding e-ng-checked=\"model.field\", in addition to e-ng-true-value and e-ng-false-value, which DID work for me:\n<span editable-checkbox=\"model.field\" e-name=\"field\" e-form=\"myform\" e-ng-true-value=\"1\" e-ng-false-value=\"0\" e-ng-checked=\"model.field\">\n    {{model.field == 1 ? 'Yes' : 'No'}}\n</span>\n. ",
    "roshenpo007": "On edit check box getting checked even for value  0 also. Tried with above code. \nNote : value character(1) type in DB.\n@davidrothschild Is there any fix for this ?\n. ",
    "LewisCooper4": "Not sure if there was a definitive solution to this or not with the casting, but I think I found a solution that only requires html.  If you would prefer to not change how the SQL query returns the value then the solution is to make the e-ng-true-value=\" '1' \" (no spaces they are there to see the single quotes).  This way you can leave your SQL query intact (in case you don't have control over it) and you can handle this situation on the front end and not on the backend.\n. ",
    "tcledford3": "@davidrothschild @roshenpo007 Oops!  I thought I had it working. I ended up with the SQL field as an INT. And the HTML markup for my app is as follows: \n<span editable-checkbox=\"data.active\" e-name=\"active\" e-form=\"rowform\"\n            e-ng-true-value=\"'1'\" e-ng-false-value=\"'0'\" e-ng-checked=\"{{data.active}}\">\n            {{data.active == 1 ? 'Yes' : 'No'}}  \n            </span>\nThis is working for me now. Sorry if my previous answer was confusing. It confused me too :). ",
    "kvetis": "I guess you use e-ng-required.\n. Hi, your problem is not caused by xeditable, but happens anywhere an DOM element is added in angular and has directive on it. Because the element you're adding is not getting compiled.\nPlease note that you should avoid manipulating DOM inside controllers. Only manipulate DOM using directives. I suggest you use ngRepeat with xeditable fields. It works like a charm.\nAlso the syntax of your directive seems incorrect, though I'm not an JS expert.\n. ",
    "lowie1": "Yes, please use e-ng-required for this purpose.\n. It does work but you need to ensure that you quote the date as follows if you are using a literal date:\ne-min-date=\"'2014-01-01'\"\nIf you are using angular bindings then it should work fine.\nIf you can't get it to work then please provide a plunkr\n. Prefix all events and properties with an 'e-' to get them copied over to the editable input\nWhat exactly do you want to achieve here though as every time you type a character into the input you will get a new category created...?\n. ",
    "kliolios": "I should also add that I do not want to use a nested generic structure.  At this point want the values coming for 2 separate factories.\n. I am using e-ng-model and e-ng-change but somehow the currently selected value does not go through.  Same happens when I use $watch as mentioned here: https://github.com/vitalets/angular-xeditable/issues/45  Can it be that it does not work from a form?\n. html:\n``` javascript\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n\n\n\nMy HTML File\n\n\n\n\n\n\n",
    "dlussky": "+1000 for inner temporary model manipulation, we're struggling with location form, where city selection is based on country.\n. ",
    "sukh48": "Looking for the same solution. \n. ",
    "pasine": "I have a similar problem.\nI am updating the model within a directive.\nThe model is correctly updated in the scope of the controller, but the view does not change.\nI also tried to manually trigger $scope.$apply(), but nothing happens.\n. I understand this, but is this necessary? Wouldn't it be easier to deal directly with the model? Wouldn't this add out of the box features like native validation and two-way binding?\n. ",
    "uqee": "As I see it, it's just not possible because xeditable deliberately detaches field value from the model to perform its own data checks (onbeforesave, etc.) before updating the model back. So it's not an issue but a feature)\n. ",
    "ahneo": "Hi, I solved this problem by setting the value of the input via angular.element.\nangular.element($('input[name=\"myInputName'\"]')).val(\"myInputValue\");\n. ",
    "joseaquino": "The problem on setting the value through the use of jQuery/jQlite is that the form won't know the value has changed and the form states won't be updated like if the form is $valid or $invalid.\nI have found a solution but it is a little hard coded, from the forms controller access the property $editables and select the arrat element corresponding to the input you want to update and update the value in scope.$data. Here is the full code:\njavascript\n// Inside your controller\n$scope.formName.$editables[0].scope.$data = newValue;\nAnother way I found but it required editing the source code is to add the following line inside the watch on line 435:\njavascript\n// Line 435 inside /angular-xeditable/dist/js/xeditable.js\n$scope.$parent.$watch($attrs[self.directiveName], function(newVal, oldVal) {\n  self.setLocalValue();\n  self.handleEmpty();\n});\nSo that everytime the main model value assigned to the field changes it updates the internal model.\n. ",
    "kirakishin": "Hello, i have the same problem.\nYour first solution works but not the second for me.\nanyway, i use also some validation with pattern and when we update with \n:1234: $scope.formName.$editables[0].scope.$data = newValue;\nit does'nt works because of the pattern validation : get undefined value in the input.\nsee : http://jsfiddle.net/kirakishin/4o7jkj4a/\nanyone has an idea please ?\ni think to not use ng-pattern but the custom validation of xeditable with onebeforesave.\n. ",
    "lderks": "When is this nice combodate being merged? \n+1\n. ",
    "Nighthawk14": ":+1: Could be really useful !\n. ",
    "shanemgrey": "Thank You!  Just 2 days ago I forked this project just to get this PR into it.  Now I can go back to yours :-)\n. ",
    "lismarc": "+1\n. ",
    "sushil-vishwanathan": "+1\nI think is a very important feature. Any idea how to implement this\n. ",
    "JetFault": "You can use onBeforeSave\n. ",
    "xcopy": "Thanks!\n. ",
    "laurencei": "I just asked the same question here https://github.com/vitalets/x-editable/issues/610 . The author has not posted a single commit to Github for any project for 6 months - so it might all be abandoned... :(\n. ",
    "stillnet": "I agree. I need to do inline editing in an Angular app. At first this project looked promising, and I have a proof of concept working, but I have my doubts about using this project given the lack of momentum behind it.\n. Do you need to use dynamic form names? I have many editable forms inside an ng-repeat, each form has the same name and it works fine.\n. I get what you are saying. I solved it this way:\n  $('#my-form-element\").data().$formController.$show();\nAs far as accessing the data, it's bound to my model so I access it simply as $scope.myData.\n. This is possible. In my app the value of condition1 causes the condition2 drop down to be filtered. We have many rows of data and each set of condition1/condition2 (on each row) should be independent of the other rows. Here's some code, hope this helps.\n```\nquoting.filter(\"byCondition1\", function(){\n    return function(input, optional1, optional2){\n        var output = [];\n        angular.forEach(input, function(val, index){\n            if(val.dependency == optional1.input || val.dependency === ''){\n                output.push(val);\n            }\n        });\n        return output;\n    }\n});\n// shows the selected condition 1 code\n$scope.showCondition1 = function(line) {\n    var selected = [];\n    if(line.condition1 != '') {\n        selected = $filter('filter')($scope.condition1Options, { code: line.condition1 }, true);\n    }else{\n        line.condition2 = ''; // make sure condition2 is empty if condition1 is empty\n    }\n    return selected.length ? selected[0].code : '';\n};    \n// shows the selected condition 2 code\n$scope.showCondition2 = function(line) {\n    var selected = [];\n    if(line.condition2 != '') {\n        selected = $filter('filter')($scope.condition2Options, { code: line.condition2 }, true);\n    }\n    return selected.length ? selected[0].code : '';\n};     \n// when condition 1 changes, we need to update information on the line\n$scope.changeCondition1 = function(data, line){\n    line.condition1 = data;\n    if(data === ''){\n        var editables = this.$form.$editables;\n        for(var i=0; i<=editables.length-1; i++){\n            if(editables[i].name == 'condition1value' || editables[i].name == 'condition2value' || editables[i].name == 'condition2'){\n                editables[i].scope.$data = \"\"; \n            }\n        }\n    }\n};\n// when condition 2 changes, we need to update information on the line\n$scope.changeCondition2 = function(data, line){\n    line.condition2 = data;\n    if(data === ''){\n        var editables = this.$form.$editables;\n        for(var i=0; i<=editables.length-1; i++){\n            if(editables[i].name == 'condition2value'){\n                editables[i].scope.$data = \"\"; \n                break;\n            }\n        }\n    }\n};    \n\nCondition 1:\n\n        {{ showCondition1(line) }} \n    \n\n        {{ line.condition1value | currency:'' }}\n    \n\n\nCondition 2:\n\n        {{ showCondition2(line) }}\n    \n```\n. I have a similar problem. My approach was to make each row it's own form. Inside an ng-repeat I have many\n\n```\n\n```\n\ntags. No issues even though every form has the same name. I have buttons on each row like\n\n```\nEdit\n```\n\nYou can also flip a specific form into editable mode by doing this\n\n```\n$('#your-form-element').data().$formController.$show();\n```\n. I started with Angular 1.3 and have since moved to 1.4 beta 6. I haven't noticed any problems.\n. Hmm this isn't in the docs but I found a $submit() method by digging through the source code. This seems to work great:\n\n`$('.editableForm').each(function(index,element) { $(element).data().$formController.$submit() });`\n. Ok I found there is a $save() method also, which seems more correct and also works. Are these methods unsupported?\n. @dlwhiteman I use code similar to this to close all my x-editable forms when saving. I give each form a class of materialLineForm and then:\n\n```\n    $('.materialLineForm').each(function(index,element) {\n        formController = $(element).data().$formController;\n            formController.$submit();\n        }\n    });\n```\n.",
    "oshh": "I'm in the same situation as @stillnet \nAnyone knows of a good alternative?\n. ",
    "chino23": "+1 here. Really need a good inline editing library for Angular, if someone knows a well working and active project, please share :)\n. ",
    "sivkoff": "This hub dead. It seems better to write own library..\n. I wrote my own directives for necessary components to me. Maybe later I'll make the library and make it public.\n. ",
    "maxcook": "So did you write an own library? I am looking for an alternative. Too bad this hub is dead :(\n. ",
    "rainery": "I had the same error , the problem ta to your html , in closing tags , indents the code , and everything opens closes , if not the error .\n. ",
    "gae123": "I am hitting the same issue. @rainery I do not understand you. @Madd0g did you ever figure this out?\n. ",
    "yohendry": "@Madd0g  thanks man, u saved my day\n. ",
    "thebillkidy": "+1 @Madd0g\n. ",
    "artforlife": "I am getting this error on a single field of date type. What is interesting, on another page, this works fine. The error seems to have something to do with DOM structure. In particular, I am trying to edit some text within a <span> tag.\n. What about the Time format? There are clearly several controllers on a single popover. Is this built-into the x-editable? \nWhat I am after is something that will edit one field, but at least allow for labels to be included on the pop-over. It would also be cool if one could attach several fields to be edited to one pop-over (that is triggered from a single link in DOM).\n. Let me see what I can do. I have not looked at the code yet. But I do need this for myself, so ...  :)\n. I figured this out. The issue had to do with quotation marks for the ng-style directive. It worked as expected and rid the link off the bottom border.\n. ",
    "ullakhan": "\nI am facing the below issue \nForm with editable elements should have editable-form attribute.  \nHere is the scenario:\n\nI have Form which has childrens item-list  like Order form has orderLine Items.\nI want to use the xeditable to the childerItem(orderLineItems) with ngRepeat. and add the child item with AddLineItem Button.\n\n\n    div class=\"form-group\">\n            Company Name\n\n\n OrderLIne Items with XEditable Form\n         Item1\n         Item2\n         Item3 \n\nSample: \n\n\n\n form \n\n            save\n          \n\n            cancel\n          \n\nedit\ndel\n\n\n\n editable username (text with validation) \n\n          awesome user1\n        \n\n\n editable status (select-local) \n\n\n\n\n editable group (select-remote) \n\n          admin\n        \n\n\n\nwhen click on the Edit button it is not showing the editable row..\nI suspect that the parent form is not allowing the child form to get displayed.\n\nThanks in advance. Please help to overcome this error.. Hi All,\n\nIt working fine with just single form not as show in the screenshot. But the problem i have with the nesting form as mentioned earlier.\n< Form >\n      field 1\n      field 2\n\n  childItems with ng-repeat\n   \n      xeditable form on each row\n  \n\nPlease let me know how to hack this to achieve the required functionality.\n\nThanks,\nNyamath\n![singleform-working](https://cloud.githubusercontent.com/assets/8574568/23104726/44d6b876-f6f9-11e6-9136-4523fe499665.png)\n. Mentioned comment helps me to just have a single editable. But in my case I want to wrap three fields into a editable form  for each user object from users list (OrderItemList). This user grid fall inside the main form again which contains other fields too....\n\n\n![sampleform](https://cloud.githubusercontent.com/assets/8574568/23121767/a45e1d32-f787-11e6-91f9-c747635f8cc3.PNG)\n\n\n\n\n. @ckosloski  this is what i am trying to achive..\n\nhttp://jsfiddle.net/ullakhan/jynvLfoL/\n\nPlease help me in this regard. Thanks...",
    "dimroc": ":+1:  +1\nI'm hoping to set an error on an editable-row as opposed to an editable-form\n. ",
    "petrabarus": "Has anyone succeeded implementing this?\n. +1\n. Yes it's working on 0.1.8.\nThere is a lot of scripts in my site, so it would take some time to find where the culprit is.\n. ",
    "anniemartinez": "Have you figured it out how to accomplish this? I need the exact same thing.\nThanks,\nAnnie.\n. ",
    "hanneskaeufler": "What I did was create my own directive like so:\njs\nangular.module('xeditable').directive('editableCustomSelect', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableCustomSelect',\n      inputTpl: '<select><option value=\"\">Please choose</option></select>'\n    });\n}]);\nAnd then use it like \nhtml\n<span editable-custom-select=\"model.age\">{{ model.age }} years old</span>\n. ",
    "lagunimzz": "Thanks, hanneskaeufler\n. ",
    "jbgury": ":+1: \n. ",
    "NotionCommotion": "Try using select prepend per http://vitalets.github.io/x-editable/docs.html.  I got it working with a string, but haven't yet done so with a array or object.  Ideally, the menu option text would be one thing (i.e. Select One), and the text displayed after saving could be another (i.e. Add New).\n. ",
    "mblum14": "+1 would love the option to use the popups instead of the inline inputs.\n. ",
    "iforapsy": "+1 I've been looking for this feature too.\n. ",
    "jaybayley": "+1 here too!\n. ",
    "toymachiner62": ":+1: \n. ",
    "nikhil-bhandari": "+1\n. ",
    "assada": "+1 \n. ",
    "gerzhan": "+1\n. ",
    "cadrogui": "+1\n. here is a good solution, works for me!..\nhttp://ryanlanciaux.github.io/blog/2013/10/16/fake-popovers-for-angular-xeditable/\nregards.\n. ",
    "Nishchit14": "+1 Please give this ASAP :+1: \n. ",
    "t-k-": "+1\n. ",
    "itzik-ilan": "+1\n. ",
    "igor-smyrnov": "+1\n. ",
    "vyegres": "u can use blur=\"submit\"\nhttp://vitalets.github.io/angular-xeditable/#ref-element\n. ",
    "dirq": "I'm also looking for a way to read the local, edited scope.\n. ",
    "reynard2007": "This was my problem as well. Make sure you link xeditable.css in your web app. I haven't reviewed the css file yet but I think it just hides the original text and makes it reappear with updated binding when you press save. You may refer to this fiddle (http://jsfiddle.net/NfPcH/25/) and check out the external resources list.\n. ",
    "taylorfort": "weirdest thing.  I swear everything was working for me, but now every time i go to click on a link for in-line edit, it opens up the editor below the text and the link doesn't hide.  I have no idea what I did wrong, I backed out of every change and it's still doing it.  \nEdit:  ugh... totally my boneheaded move.  as the above posts, verify that the .css is being included.  I was having an issue in my gulp build where it wasn't cleaning/including it in the final css build.  Everything is working fine now!\n. ",
    "chuang88": "It is still happening. Tested in FF 34.0. \nhttp://vitalets.github.io/angular-xeditable/#text-customize\n. ",
    "enapupe": "Please take a look at my proposal https://github.com/vitalets/angular-xeditable/issues/249 .. Regards preserving caret position on inputs..\n. Would you make a release so we can use the latest version with bower?\n. Cool, thanks!\n. ",
    "antoinepairet": "@lowie1 Great to see activity on the repo!\n+1\n. @ozjongwon Could you create a pull request for this? Thanks in advance\n. see https://github.com/vitalets/angular-xeditable/issues/136\nHowever I think new maintainers are now taking care of the repo. @lowie1 can you confirm this?\n. ",
    "Bogdan-D": "Ohh..\nTry to not use xeditable with  tag, use it with <span or <div, and also use 'empty' not empty.\nGood luck, and close a bug\n. try to use e-ng-change=\"userAddedCategory(newCategory)\"\n. and close bug if it helps\n. +1 current version of xeditable is not able to be used in forms with all of its features\n. not a bug, date displayed in required date format\n. that is because there used gmt 0 timezone, and you have gmt +3 local time,\n21+3 = 00:00:00 17-05\nso it's depends. Generally not a bug, but there should be a way to display datetime without local timezone settings\n. yes, but you can get timezone from browser\nhttp://www.w3schools.com/jsref/jsref_gettimezoneoffset.asp\nalso there other ways to handle this. \n. ",
    "QuijoteShin": "You can read it at docs\nif you assign a name to the form you can do a \nformname.propertyName.key\nor $scope.formname.property[1].key\nany way. its always binding to your main $scope.\nSo if you modify $scope.propertyName  you will reflect at your form.\n. $scope.users  its an object so its passed by reference and not just the value.\nsorry.\n. ",
    "jsandeepm": "Are there any updates on this issue? \n. I am getting below error\nfailed to parse sourcemap: bundle.js.map\nOn 13-Aug-2016 2:30 AM, \"ckosloski\" notifications@github.com wrote:\n\nWhat is the error you are getting?\nNot sure if this is relevant\nhttps://github.com/lpiepiora/bower-webpack-plugin/issues/19to your\nissue or not.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/514#issuecomment-239558618,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AJXb_HtET0GH_jWmoNMvCDAHmo_egXFUks5qfN8HgaJpZM4JjEE3\n.\n. \n",
    "jmjpro": "+1\n. ",
    "bcaudan": "+1\n. ",
    "squarewave24": "+1\n. ",
    "mcianc": "+1\n. ",
    "lalitkapoor": "+1\n. I might have a solution to this, but I'm not sure how to run the test suite for this repo. Can anyone help w/that please? Thanks!\n. Hey, I did that locally as well against master, but they all seem to fail. Do you experience this @sunild. Thanks for stepping up to help!\n. @Painyjames Hi, this is out of the blue, but I noticed you have commit access to the repo and so I was wondering if you could help me get the tests running locally against master? Thanks\n. @vitalets @Painyjames @eugef ping!\n. @anaisamp you can take a look at this branch here: https://github.com/viewthespace/angular-xeditable/tree/use-xeditable-with-existing-forms\nhere's the commit: https://github.com/viewthespace/angular-xeditable/commit/6fc8488e238243ceb07eb17ae734884057ae0026\nconcacted version: https://gist.github.com/lalitkapoor/0f84359cf1389239e078\n. I'd like to open a pull request for something, but I can't figure out how to run the tests. Can you please advise @vitalets. Thank you.\n. @mitcht @vitalets I tried that in the past. All i get is errors as it tries to fetch the following (all 404s):\ndev-test.html:6 GET http://localhost:9090/libs/angular/1.2.7/angular-scenario.js \ndev-test.html:12 GET http://localhost:9090/docs/demos/text-simple/test.js \ndev-test.html:13 GET http://localhost:9090/docs/demos/text-customize/test.js \ndev-test.html:14 GET http://localhost:9090/docs/demos/text-btn/test.js \ndev-test.html:15 GET http://localhost:9090/docs/demos/select-local/test.js \ndev-test.html:16 GET http://localhost:9090/docs/demos/select-remote/test.js \ndev-test.html:17 GET http://localhost:9090/docs/demos/select-multiple/test.js \ndev-test.html:18 GET http://localhost:9090/docs/demos/select-nobuttons/test.js \ndev-test.html:19 GET http://localhost:9090/docs/demos/html5-inputs/test.js \ndev-test.html:20 GET http://localhost:9090/docs/demos/textarea/test.js \ndev-test.html:21 GET http://localhost:9090/docs/demos/checkbox/test.js \ndev-test.html:22 GET http://localhost:9090/docs/demos/checklist/test.js \ndev-test.html:23 GET http://localhost:9090/docs/demos/radiolist/test.js \ndev-test.html:24 GET http://localhost:9090/docs/demos/bsdate/test.js \ndev-test.html:25 GET http://localhost:9090/docs/demos/bstime/test.js \ndev-test.html:26 GET http://localhost:9090/docs/demos/typeahead/test.js \ndev-test.html:27 GET http://localhost:9090/docs/demos/validate-local/test.js \ndev-test.html:28 GET http://localhost:9090/docs/demos/validate-remote/test.js \ndev-test.html:29 GET http://localhost:9090/docs/demos/onbeforesave/test.js \ndev-test.html:30 GET http://localhost:9090/docs/demos/onaftersave/test.js \ndev-test.html:31 GET http://localhost:9090/docs/demos/editable-form/test.js \ndev-test.html:32 GET http://localhost:9090/docs/demos/editable-row/test.js \ndev-test.html:33 GET http://localhost:9090/docs/demos/editable-column/test.js \ndev-test.html:34 GET http://localhost:9090/docs/demos/editable-table/test.js \ndev-test.html:37 GET http://localhost:9090/docs/demos/dev-text/test.js \ndev-test.html:38 GET http://localhost:9090/docs/demos/dev-form/test.js \ndev-test.html:39 GET http://localhost:9090/docs/demos/dev-select/test.js 404 (Not Found)\n. @mitcht @vitalets If I run the server in the root directory of the project and then navigate to tests/e2e/dev-test.html all I get are failures for the tests:\nError: [$injector:unpr] Unknown provider: editableIconsProvider <- editableIcons\nhttp://errors.angularjs.org/1.2.7/$injector/unpr?p0=editableIconsProvider%20%3C-%20editableIcons\n    at angular.js:78\n    at angular.js:3540\n    at Object.getService [as get] (angular.js:3667)\n    at angular.js:3545\n    at getService (angular.js:3667)\n    at invoke (angular.js:3694)\n    at Object.instantiate (angular.js:3715)\n    at angular.js:6766\n    at angular.js:6179\n    at forEach (angular.js:309)\n. @vitalets do you mind trying to find the error? I'm not as familiar as you are with the code base. I'll try and help, but I feel like you should own this one because it means that master is not in a good state and things are not being properly tested before being merged.\nWe should add a CI maybe so that the chances of failing releases is reduced.\n. @mcblum yes you can do this, I had to make some changes to the editableForm directive. I'm trying to open a pull request for this as a solution to https://github.com/vitalets/angular-xeditable/issues/157. My problem is I'm not sure how to run the tests to see if I broke anything else - https://github.com/vitalets/angular-xeditable/issues/405 \nThat said my changes have been working well for me. I have complex forms inside my editable components.\n. @eugef any help to get the test runner running? I'm running into a problem with that too!\n. @ckosloski thank you!\n. ",
    "sunild": "@lalitkapoor It looks like those tests are using angular-scenario. That's been deprecated since I don't know when, but at least since 2013 when I started w/Angular.  \nMaybe you can add karma to the project (literally and figuratively) by upgrading it to the Karma test runner, I'm sure the repo owner wouldn't mind such a fix. I took a quick look at the tests, many of them were simply commented out :)\n\nOn the other hand, I did some poking around and managed to get something running by doing this:\n- Install grunt globally, if you haven't already: npm install -g grunt-cli\n- npm install in the project\n- grunt server\n- open a browser and navigate to: http://localhost:8000/test/e2e/dev-test.html\n. ",
    "anaisamp": "Hey @lalitkapoor can you share your solution in the meantime? \nI'm not able to use xeditable form in an asp.net page due to the duplicated form tag. I believe using ngForm would do the trick! \nThanks!\n. Thank you so much @lalitkapoor. Fingers crossed :)\n. ",
    "DarkRayX": "@lalitkapoor your solution not working.\nIm kinda made xeditable to work with nested forms, but i dont have time to commit\\pull, cause project where it used is currenty under heavy time schedule.\n1. adde-form-nested=\"true\"prop to editable element which linked to nested form (ex:div editable-form ng-form)\n2. change line ( 1322 for me)  -if (ctrl[1]) { ) toif (ctrl[1] && !attrs.eFormNested) {3. lastly you need to trigger submit event, in my case iv just added 'name-hook=\"rowform_{{rowIndex}}\"' attr to div with ng-form, and added click event for pseudo submit button (ng-click=\"submitRow(rowIndex)\") , which just triggers submit$timeout(function(){\n                    angular.element(document.querySelector('[name-hook=\"rowform_'+i+'\"]')).trigger('submit')\n                })`\n. ",
    "tshachar": "what i meant was that the date value shows 17/05/1984 where as the JavaScript date shows 1984-05-16 different dates one is the 17th while the other is the 16th.\n. Thank you for the explanation. :)\nIt is determent by the Browser, right?\nSo basically if two different users from two different contrary's submit the same date I mite get  two different Dates?\n. Great, thank you for your help. :)\n. ",
    "tekdungtralala": "+1, waiting for this \n. ",
    "dennisroche": "I have found the cause and a fix for this issue.\nIn xeditable.js, line ~854, we have this:\n```\n// array of opened editable forms\nvar shown = [];\n// bind click to body: cancel|submit|ignore forms\n$document.bind('click', function (e) {\n// ignore right/middle button click\nif (e.which !== 1) {\n  return;\n}\n\nvar toCancel = [];\n\n```\nThe problem is caused by event.which (http://api.jquery.com/event.which/) reporting 0 for all mouse clicks in IE8, forcing the function to return early as it is meant to be ignoring right/middle clicks. \nThis was been reported as a jQuery bug (http://bugs.jquery.com/ticket/13209), however subsequently closed as the button data isn't available in IE8. \nSolution\nChange $document.bind('click', function (e) to $document.bind('mouseup', function (e) as the mouseup event has the correct data for the .which property. \nI have tested this in IE8, IE11, Firefox 17, Chrome. \n. Could that be a problem with the IE10 emulation of IE8? I tested this in a Windows XP, IE8 Virtual Machine downloaded from http://www.modern.ie \n. @LucyBui is the latest version 0.1.8? \nI have closed my PR as I discovered it broke another part of the library. I have since found an alternate fix. \n. @radhikadesai sorry, I didn't see this notification until today. \nIt is not a proper fix as I have only tested with XP/IE8 and vLatest of IE/Firefox/Chrome.\nWhat I found worked was to change the $document.bind('click', function(e) implementation to not to check the e.which value and instead perform a hit-test check. It is a hack as it quickly led to further modifications so it is not suitable for a pull-request. \n``` js\n// bind click to body: cancel|submit|ignore forms\n$document.bind('click', function(e) {\nvar toCancel = [];\nvar toSubmit = [];\nfor (var i=0; i<shown.length; i++) {\n\n  var self = (shown[i].$editables.length > 0) ? shown[i].$editables[0].inputEl[0] : '';\n  if ($.contains(self, e.target)) {\n    continue;\n  }\n\n  var select = $('select');\n  if (select.length > 0 && select.filter(e.target).length > 0) {\n      continue;\n  }\n\n  // ...\n\n}\n```\n. I have since found a better fix. I found that this change broke the editable form initialization.\n. ",
    "arcadeJHS": "Actually this solution does not seem to solve completely the problem. \nI am testing my conde on a IE8 emulated by IE10, and also 'mouseup' fails to return a value for e.which (also, \"on blur\" is triggered when you select text inside an input through the mouse).\nSo far I solved (skipped the problem, actually) this way:\nif (e.which && e.which !== 1) {\n    return;\n}\n. I actually changed all the occurences of\nif (e.which !==1)\ninto\nif (e.which && e.which !==1)\nbecause I had this strange behaviour in IE8: I click on an editable-text and the form appears; then I click inside the text input to edit it, and it seems an onBlur is triggered: the input field disappears, leaving no possibilities to change its value.\n. Well, I am not sure mine is a fix, it's a sort of workaround.\nCould someone else \"certify\" it?\nI can try with a pull request, by the way.\n. ",
    "LucyBui": "Dear @arcadeJHS,\nWill you update the new version to resolve this issue?\n. ",
    "radhikadesai": "@dennisroche Could you elaborate on the alternate fix, please?\n. ",
    "lucassus": "It seems that it also works with ui.bootstrap 0.10.0 see http://plnkr.co/edit/NLg9pFL2Sl5gkkvMr6vT?p=preview\nI guess the breaking change is here https://github.com/angular-ui/bootstrap/commit/7f4b40eb8bc57f03bd306330a6ad227790c33f27\n. ok, I've just figured out a workaound for this problem http://plnkr.co/edit/Y4ilZ4rITYnjAyq2xAUa?p=preview\n. ",
    "merenzo": "I see here (https://github.com/angular-ui/bootstrap/issues/2149) that many UI Bootstrap 0.11.0 users report this problem.  Turns out that it was a deliberate feature-add by the authors to remove the \"open on focus\" behaviour (https://github.com/angular-ui/bootstrap/pull/1922#issuecomment-40491716).\nThe workaround above (thanks @lucassus) causes all datepickers on my page to open at once (as you would expect when I bind them all to the same scope variable  :)   I tried modifying xeditable.js line 69 (the editableBsdate directive) from this:\ninputTpl: '<input type=\"text\">'\nto this:\ninputTpl: '<input type=\"text\" class=\"form-control\" is-open=\"dt.open\" ng-click=\"dt.open=true\">'\nand it's nearly there, but still glitchy.\n. ",
    "se-panfilov": "+1\n. ",
    "dtam": "+1\n. ",
    "sallampalli": "@lucassus : Hey , good fix, however, I am trying to get this(AngularUI datepicker) working on the editable form http://vitalets.github.io/angular-xeditable/#editable-form\nAnd I am using AgularUIBootStrap 0.11.0, Angular 1.2.13 and Bootstrap 3.0.0 and I can't get this to work. Any thoughts ?\n. @lucassus : Here is the jsFiddle of the above mentioned stack and I'm not sure why it isnt working with the solution :  http://jsfiddle.net/NfPcH/6518/\n. ",
    "hyunlim": "@lucassus solution still works with angular 1.3.x, ui-bootstrap 0.11.x, and angular-xeditable 0.1.8\n. ",
    "ganapativs": "Replace line no:1552 with this code in angular bootstrap UI 0.12.0:\nvar keydown = function(evt, noApply) {\n        scope.keydown(evt);\n      };\n      var clicked = function(evt, noApply) {\n        scope.clicked(evt);\n      };\n      element.bind('keydown', keydown);\n      element.bind('click', clicked);\nscope.keydown = function(evt) {\n    if (evt.which === 27) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      scope.close();\n    } else if (evt.which === 40 && !scope.isOpen) {\n      scope.isOpen = true;\n    }\n  };\n  scope.clicked = function(evt) {\n    scope.$apply(function(){\n      scope.isOpen=!scope.isOpen;\n    });\n  };\nNow, datepicker works with click on input element.\n. @asakalou Here is the working code. \nhttp://plnkr.co/edit/pBnxWiqrLwOG1UNWyTJM?p=preview\nI have replaced your angular bootstrap UI file with modified code.\n. ",
    "hroussel": "Thanks @lucassus. \n+1\n. ",
    "ilbarzo": "same issue for me, using angular 1.3.15, ui-bootstrap 0.13.0, and angular-xeditable 0.1.8                            \nhtml\n<span editable-bsdate=\"defannoimp.chiudi\" e-name=\"chiudi\" e-form=\"rowform\" e-datepicker-popup=\"dd-MM-yyyy\" onbeforesave=\"checkChiudi($data, defannoimp.anno)\">\n    {{ defannoimp.chiudi | date:\"dd/MM/yyyy\" }}\n</span>\nwhen edit row and click on field, calendar is not shown\n. ",
    "slavoroi": "ilbazro... lucassus fixed it for me!\nit works! need to add $timeout to the scope :) as well.\n. ",
    "vinhboy": "@ganapativs thanks for the sample, got this working for me in angular-ui-bootstrap 0.13.0 and angular 1.3 without modification to angular-ui-bootstrap\n. ",
    "seksitha": "This's my solution with editalbe 0.1.8  angular 1.4.0 ui-bootstrap 0.12  after dig deep into ui-bootstrap document:\n    <span class= \"form-control\" editable-bsdate=\"data.date\" e-ng-click=\"opened = !opened\" e-class =\"form-control\" e-is-open=\"opened\" e-datepicker-popup = \"dd-MM-yyyy\" e-name= \"date\" >{{data.date}}</span>\nNote: e-class = \"form-control\" is optional. I add because xeditable is not include when invoked.\ne-ng-click and e-is-open is used in ui-bootstrap to toggle the datepicker.\nHope this help!\n. Thank you, That is working! I try almost everything except formName. \nYou save my day.\n. ",
    "vishalbedre": "It is problem with X-editable js.\nchanged x-editable.js \nto  angular-xeditable - 0.1.9\nhttp://plnkr.co/edit/pBnxWiqrLwOG1UNWyTJM?p=preview****\n. It is problem with X-editable js.\nchanged x-editable.js\nto angular-xeditable - 0.1.9 \nYou can find 0.1.9 version in blow link\nhttp://plnkr.co/edit/pBnxWiqrLwOG1UNWyTJM?p=preview****\n. It is problem with X-editable js.\nchanged x-editable.js\nto angular-xeditable - 0.1.9\nhttp://plnkr.co/edit/pBnxWiqrLwOG1UNWyTJM?p=preview****\n. ",
    "fabiomello": "resolved. ",
    "iamthestreets": "Sorry this issue was meant for x-editable.\n. ",
    "rodrigouroz": "Taking a look at the code I've found that you can return false in onbeforesave instead of a string and that's the use case I was looking for. Too bad it's not specified in the documentation.\n. ",
    "murphyalexandre": "It was a giant error on my part.\n. ",
    "julienboulay": "I did it in the bug description : exemple of breaking case on jsfiddle : http://jsfiddle.net/jboulay/bjhucxLg/\n. ",
    "ozjongwon": "Fix - use of ng-value instead of value (please close after reviewing and applying the patch, thx):\n```\ndiff -r ce6794ac1dc5 resources/public/js/xeditable.js\n--- a/resources/public/js/xeditable.js  Wed Oct 01 17:50:24 2014 +1000\n+++ b/resources/public/js/xeditable.js  Thu Oct 02 10:18:11 2014 +1000\n@@ -197,7 +197,7 @@\n         this.parent.render.call(this);\n         var parsed = editableNgOptionsParser(this.attrs.eNgOptions);\n         var html = ''+\n-          ''+\n+          ''+\n           '';\n     this.inputEl.removeAttr('ng-model');\n\n```\n. Sorry, I do not want to have the repo. You can apply it to your local then\npush it. Thx\n@ozjongwon https://github.com/ozjongwon Could you create a pull request\nfor this? Thanks in advance\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/180#issuecomment-57944454\n.\n. Are you saying the integer value in the \"model\" changed into string somehow? If that is true, it might be a bug. If this happens with editable-radiolist, you may want to check my fix: https://github.com/vitalets/angular-xeditable/issues/180\nYou shouldn't do any of those type conversions by yourself when you use AngularJS, otherwise you're doing it wrong or you found a bug, I believe.\n. ",
    "Akeru": "Anyone with an alternative ?\n. ",
    "dandv": "@Akeru: the main thread on reviving maintenance of x-editable is at https://github.com/vitalets/x-editable/issues/610\n. ",
    "maelfrize": "+1\n. @RavenHursT Thanks for sharing your solution!\n. :+1: \n. ",
    "BenjaminConant": "I would also like this! Just came across this problem and hitting enter to submit a text area would be awesome.\n. Hey @RavenHursT and @maelfrize ... just modified my x-editable source to accommodate the request ... I will probubly make a pull request with this but just incase anyone does not want to wait around here is how I did it ... go into your x-editable source and change the xeditableTextarea directive to this. The modifications are down in the autoSubmit function where I check to see if there is a submitOnEnter attr and if there is cause submission to happen on Ente  and new lines to happen on  Shift + Enter  This might not be the best way to do it but it works really well for me. All you need to do after making these modifications is add a submit-on-enter=\"true\" attribute to your editable-textarea element. \n \nangular.module('xeditable').directive('editableTextarea', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableTextarea',\n      inputTpl: '',\n      addListeners: function() {\n        var self = this;\n        self.parent.addListeners.call(self);\n        // submit textarea by ctrl+enter even with buttons\n        if (self.single && self.buttons !== 'no') {\n          self.autosubmit();\n        }\n      },\n      autosubmit: function() {\n        var self = this;\n        self.inputEl.bind('keydown', function(e) {\n          if (self.attrs.submitOnEnter) {\n            if (e.keyCode === 13 && !e.shiftKey) { \n              self.scope.$apply(function() {\n                self.scope.$form.$submit();\n              });\n            }\n          } else if ((e.ctrlKey || e.metaKey) && (e.keyCode === 13)) {\n              self.scope.$apply(function() {\n                self.scope.$form.$submit();\n              });\n          }\n        });\n      }\n    });\n}]);\n\n. ",
    "xonbugeja": "No, to be honest I forgot exactly what the issue was, but am sure it was not related to xeditable itself, seeing this 2 years later I'm thinking it was probably something stupid in my code back then. Apologies for never updating the issue.\n. ",
    "njenia": "I forked the first jsfiddle:\nhttp://jsfiddle.net/njenia/tq65xjhb/\nYou can see that the first x-editable is only editable by manual trigger. That is, by clicking the button next to it.\nAnd the second x-editable is only editable by clicking the text itself.\nTo clarify, I would like having both options working simultaneously on one element.\n. ",
    "Asciant": "I experienced the same problem on iOS 8, particularly the hiding of the keyboard bothered me.\n. ",
    "tiagocedrim": "Would be fantastic\n. ",
    "mgxm": "Look editableImabe.\nI'm not expert in angular, but i added this directive for my personal use, i need to modify some things for a better code, for example: put the handleFileSelect from controller inside the directive.\nif anyone have some feedback, please, tell me.\n. ",
    "darkmanAmazigh": "I have found the solution in your documentation, thank's for your work,\ni enjoy it\n. Any one can help me !!\n. ",
    "bbrown": "I would recommend using Smart-Table to provide the sorting and pagination. They work well together\u2014I'm using them together right now.\n. This is possibly just a documentation issue. I used angular-strap via the following code (prepending 'e-' seems to act as a passthrough to the underlying input element):\n<span editable-bsdate=\"event.date\" e-name=\"date\" e-form=\"addform\" ng-model=\"event.date\" e-data-date-format=\"MM/dd/yyyy\" e-data-date-type=\"number\" e-data-autoclose=\"1\" e-bs-datepicker>\n. ",
    "sinsunsan": "hello, is this editable variable has been merged somehow ? \nI need to set editability depending of user rights.\nSo a simple attributes pointing a scope function or value could be useful in order not to duplicate the html code.\n. ",
    "zhendong590": "i also have this problem.555\n. i find a way to fix it.\nyou can use a file and add new elements on html like this\nhtml\n<span\n        editable-ui-select=\"ma.owners\"\n        e-form=\"manualRowForm\"\n        e-name=\"owners\"\n        name=\"owners\"\n        theme=\"bootstrap\"\n        e-ng-model=\"ma.owners\"\n        >\n    <editable-ui-select-match placeholder=\"input names\" style=\"width: 99px\">\n        {{$select.selected.nick || sc.expectConfirmor.nick}}\n    </editable-ui-select-match>\n    <editable-ui-select-choices repeat=\"user in task.allUsers\" refresh=\"funcAsync($select.search)\" refresh-delay=\"500\">\n        {{user.nick}}/{{user.realName}} - {{user.empId}}\n    </editable-ui-select-choices>\n</span>\nyou also need  select.js(ui-select)\n. i will make a test on my local \n. i think you can handle it by onbeforesave event.\njavascript\nif(empty == data){\ndata = null;\n}\n. @JobaDiniz could you make a jsfiddle for me ? \n. ",
    "rafa-as": "I have the same problem @cina2012 :(\n. Same problem with model\n. ",
    "forkwhilefork": "Wow, thanks so much bbrown! That really helped me a lot. I'm still getting the Save and Cancel buttons, though. Any idea how to disable those?\n. ",
    "CNemo7539": "ng-repeat creates new scope. If you remove it it is going to work.\n. Sorry confusion! I need to clarify my answer.\nWhen you do by row, both form and its editables will end up in the same scope that is crated by repeat. This is not the case for your column attempt, which will create separate scope for header.\n. ",
    "kareemf": "+ 1\n. ",
    "anshul0212": "same issue I am facing. I want editable-text if type is text and editable-select if type is group of strings. How can we achieve this. Any suggestions are welcome.\nThanks\nAnshul\n. ",
    "Revln9": "Hi , custom directive is the answer , here's an example  , you need to put this inside an ng-repeat of your input fields\n``` javascript\n.directive('formspecs', function ($compile , $filter) {\nvar htmlrange   = '{{incat.name}}   {{incat.value}} {{incat.unit}}  '\nvar htmltext    = '{{incat.name}}   {{incat.value}} '\nvar htmlnumber  = '{{incat.name}}   {{incat.value}} {{incat.unit}}'\nvar htmldate    = '{{incat.name}}   {{incat.value}} {{incat.value}} {{incat.unit}}'\nvar htmlselect  = '{{incat.name}}   {{incat.value}} {{incat.unit}} '\nvar getTemplate = function(contentType) {\n    var template = '';\n\nconsole.log(contentType)\n        switch(contentType) {\n             case 'select':\n                template = htmlselect;\n                break;\n            case 'text':\n                template = htmltext;\n                break;\n            case 'radio':\n                template = htmlradio;\n                break;\n            case 'range':\n                template = htmlrange;\n                break;\n            case 'date':\n                template = htmldate;\n                break;\n            case 'number':\n                template = htmlnumber;\n                break;\n            case undefined:\n                template = htmltext;  \n                break;  \n        }\n        return template;\n    }\n   var linker = function(scope, element, attrs) {\nelement.html(getTemplate(scope.incat.type)).show()\n$compile(element.contents())(scope);\n\n}\n\nreturn {\n    restrict: \"EA\",\n    link: linker,\n    scope: '=',\n    replace:true,\n    data:'=showStatus',\n};\n\n});\n```\nhope it helps !\n. hi,\nhttp://jsfiddle.net/hvnmpx4n/1/\nsomething like this ?\none tricky issue with this method is that you are unable to edit one field at a time when you click on the field it will open all the fields  in your form. To avoid that you can create a form for every field.\n. ",
    "teneightfive": "@eugef This was intended to allow you to pass a name attribute through to each input in a radio list.\n. ",
    "Toilal": ":+1: \n. I'm not sure it is that hard. It seems to be possible by creating a new angular-material theme. \n. @seiyria, this seems to work nicely, without any change to sources.\n``` js\nangular.module('myApp').run(function(editableOptions, editableThemes) {\n  editableThemes['angular-material'] = {\n    formTpl:      '',\n    noformTpl:    '',\n    controlsTpl:  '',\n    inputTpl:     '',\n    errorTpl:     '{{$error}}',\n    buttonsTpl:   '',\n    submitTpl:    'save',\n    cancelTpl:    'cancel'\n  };\neditableOptions.theme = 'angular-material';\n});\n```\nwith those styles:\n``` css\nmd-input-container.editable-controls {\n  padding: 0;\n}\nmd-input-container.editable-controls [ng-message] {\n  position: static;\n}\n```\n. Problem is that there's no maintainer ... @vitalets @assisrafael Could you give some people access rights to maintain this repo ? There are many PRs pending ...\n. Yes, with the snippet i've pasted, but I don't use it now. Don't know if it still works.\n. ",
    "seiyria": "@Toilal That worked ok, I had to make a few adjustments (submitTpl needed .md-primary, cancelTpl needed .md-warn) but other than that it was fine. It would still be nice to get this upstream though.\n. Another thing about this. Now that angular/material has updated, their templates have changed. The structure is a LOT different, and I wish a-xeditable was more flexible in this regard.\nBasically, instead of giving it stuff like \"inputTpl\" I would rather just give it an entire template, structured however I want. It should be up to me to ensure the classes, etc get added correctly. In its current state, though, it's unusable AFAICT.\n. related: #232\n. ",
    "kevohagan": "@seiyria @Toilal  did you guys manage to get this working with angular material at the end? :)\n. @Toilal its not working for me... if i manage to figure this out ill post it here :)\n. ",
    "mostafabarmshory": "+1 It is nice.\n. ",
    "OscarAgreda": "@Toilal \nThank you , your addition to angular \n\napp.run\n\nworks great . \nI am using angular material 1.1.0 - and no bootstrap.css whatsoever \ni added the following css tweaks:\n\nmd-input-container.editable-controls {\n    padding: 1px ;\n    padding-left: 10px ;\n    margin: 1px ;\n}\n.editable-input.md-input {\n    font-size: 18px ;\n    font-weight: 600;\n    color: #716e6e;\n    max-width: 100px ;\n    margin: 1px ;\n}\n.editable-wrap.editable-text {\n    margin: 1px ;\n}\nmd-input-container.editable-controls [ng-message] {\n    position: static !important;\n}\n. ",
    "harshaldhake": "@OscarAgreda : can u please advise exactly where did u add these style? Also is there any code things added as per @Toilal\n. ",
    "gerome0123": "can u give a working jsfiddle  or plunker for this thanks guys. @OscarAgreda can you give an example running exeditable with angular material T_T. @ckosloski no i think my my data update is asynchronous\n. here's my view(slim format)\n`md-content\n  div layout=\"row\" layout-sm=\"column\" layout-align=\"space-around\"\n  div.md-whiteframe-1dp\n    md-toolbar\n      div.md-toolbar-tools\n        span Leave Credits\n        span flex=\"\"\n        form editable-form=\"\" name=\"tableform\" onaftersave=\"saveTable()\"\n          div class=\"btn-edit\"\n            md-button.lc-edit type=\"button\" ng-show=\"!tableform.$visible\" ng-click=\"tableform.$show()\"\n              | Edit\n        div.lc-btn-form ng-show=\"tableform.$visible\"\n          md-button.lc-save type=\"submit\" ng-disabled=\"tableform.$waiting\" class=\"btn btn-primary\" save\n          md-button.lc-cancel type=\"button\" ng-disabled=\"tableform.$waiting\" ng-click=\"tableform.$cancel()\" class=\"btn btn-default\" cancel\nmd-content layout-padding=\"\"\n  table.md-table\n    thead\n      tr.md-table-headers-row\n        th.md-table-header\n          | Name\n        th.md-table-header ng-repeat=\"leave in ctrl.leaves | orderBy: 'id'\"\n          | {{ leave.name }}\n      tr.md-table-headers-row\n        th.md-table-header\n        th.md-table-header ng-repeat=\"leave in ctrl.leaves | orderBy: 'id'\"\n          | left / Initial\n    tbody\n      tr.md-table-content-row ng-repeat=\"record in ctrl.leave_records | unique: 'employee_id '\"\n        td style=\"white-space:nowrap; line-height: 60px\"\n          | {{ record.name }}\n        td align=\"center\" ng-repeat=\"record in record.leave_credits\"\n          div.rem-item layout=\"row\" layout-align=\"center\"\n            div.remaining\n              | {{record.values.remaining}}/\n            div.item-wrapper\n              span ng-hide=\"tableform.$visible\" e-style=\"width:50px;\" editable-text=\"record.no_of_days\" e-form=\"tableform\" onbeforesave=\"checkRecord($data, record)\"\n                | {{ record.no_of_days || 'empty' }}`\n\nand my controller(coffee format)\n`#= require ./../../module\nclass LeaveCreditsIndexCtrl\n  constructor: ($scope, $timeout, $location, $window, $route, LeaveType, LeaveCredit)->\n@leaves = LeaveType.query()\n\nLeaveCredit.summary (data)=>\n  @leave_records = data\n\nnums = []\n\n$scope.saveTable = () =>\n\n  for data in nums\n    LeaveCredit.update(data)\n\n$scope.checkRecord = (data, record) ->\n  if data != record.no_of_days\n    nums.push({ id: record.id, no_of_days: data })\n\nLeaveCreditsIndexCtrl.$inject = [\"$scope\", \"$timeout\" , \"$location\", \"$window\", \"$route\", \"LeaveType\", \"LeaveCredit\"]\nangular\n.module \"CaesApp\"\n.controller \"LeaveCreditsIndexCtrl\", LeaveCreditsIndexCtrl`\nmy resource is in the different directory so i give you an example of a json\nLeaveType = [\n    \"id\": 1,\n    \"name\": \"Vacation Leave\",\n    \"no_of_days\": \"15.0\",\n    \"created_at\": \"2017-01-31T16:36:19.022+08:00\",\n    \"updated_at\": \"2017-01-31T16:36:19.022+08:00\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Sick Leave\",\n    \"no_of_days\": \"15.0\",\n    \"created_at\": \"2017-01-31T16:36:19.060+08:00\",\n    \"updated_at\": \"2017-01-31T16:36:19.060+08:00\"\n  },\n  {\n    \"id\": 3,\n    \"name\": \"Birthday\",\n    \"no_of_days\": \"1.0\",\n    \"created_at\": \"2017-01-31T16:36:19.071+08:00\",\n    \"updated_at\": \"2017-01-31T16:36:19.071+08:00\"\n  },\n  {\n    \"id\": 4,\n    \"name\": \"Maternity\",\n    \"no_of_days\": \"78.0\",\n    \"created_at\": \"2017-01-31T16:36:19.082+08:00\",\n    \"updated_at\": \"2017-01-31T16:36:19.082+08:00\"\n  }]\nLeaveCredit.summary = [\n  {\n    \"id\": 1,\n    \"reference_no\": \"8424161983\",\n    \"name\": \"Noah Gleason IV\",\n    \"birth_date\": \"2015-08-11\",\n    \"date_hired\": \"2016-11-21\",\n    \"image\": {\n      \"normal\": \"/assets/caes/employees/avatar/normal/missing.png\",\n      \"thumb\": \"/assets/caes/employees/avatar/thumb/missing.png\"\n    },\n    \"leave_credits\": [\n      {\n        \"id\": 1,\n        \"employee_id\": 1,\n        \"leave_type_id\": 1,\n        \"leave_type\": {\n          \"id\": 1,\n          \"name\": \"Vacation Leave\"\n        },\n        \"no_of_days\": \"16.0\",\n        \"values\": {\n          \"initial\": 16.0,\n          \"remaining\": 16.0\n        },\n        \"leave_type_with_days\": \"Vacation Leave (16.0)\",\n        \"created_at\": \"2017-01-31T16:36:19.179+08:00\",\n        \"updated_at\": \"2017-02-01T09:34:44.944+08:00\"\n      },\n      {\n        \"id\": 2,\n        \"employee_id\": 1,\n        \"leave_type_id\": 2,\n        \"leave_type\": {\n          \"id\": 2,\n          \"name\": \"Sick Leave\"\n        },\n        \"no_of_days\": \"15.0\",\n        \"values\": {\n          \"initial\": 15.0,\n          \"remaining\": 15.0\n        },\n        \"leave_type_with_days\": \"Sick Leave (15.0)\",\n        \"created_at\": \"2017-01-31T16:36:19.237+08:00\",\n        \"updated_at\": \"2017-01-31T16:36:19.237+08:00\"\n      }]\nLeaveCredit =[\n  {\n    \"id\": 2,\n    \"employee_id\": 1,\n    \"leave_type_id\": 2,\n    \"no_of_days\": \"15.0\",\n    \"year_of_effect\": 2017,\n    \"created_at\": \"2017-01-31T16:36:19.237+08:00\",\n    \"updated_at\": \"2017-01-31T16:36:19.237+08:00\"\n  },\n  {\n    \"id\": 3,\n    \"employee_id\": 1,\n    \"leave_type_id\": 3,\n    \"no_of_days\": \"1.0\",\n    \"year_of_effect\": 2017,\n    \"created_at\": \"2017-01-31T16:36:19.247+08:00\",\n    \"updated_at\": \"2017-01-31T16:36:19.247+08:00\"\n  },\n  {\n    \"id\": 4,\n    \"employee_id\": 1,\n    \"leave_type_id\": 4,\n    \"no_of_days\": \"78.0\",\n    \"year_of_effect\": 2017,\n    \"created_at\": \"2017-01-31T16:36:19.257+08:00\",\n    \"updated_at\": \"2017-01-31T16:36:19.257+08:00\"\n  },\n  {\n    \"id\": 5,\n    \"employee_id\": 1,\n    \"leave_type_id\": 5,\n    \"no_of_days\": \"20.0\",\n    \"year_of_effect\": 2017,\n    \"created_at\": \"2017-01-31T16:36:19.267+08:00\",\n    \"updated_at\": \"2017-01-31T16:36:19.267+08:00\"\n  }]\nthe one i edit is LeaveCredit and when i and LeaveCredits summary is dependent to leaveCredit when i edit LeaceCredit i need to reload the page to change the value in my LeaveCredit.summary\n. this is help me lol ng-hide=\"tableform.$visible\"\n. i check the id if true or false and put in the condition :). thanks for the reply i'm new in angularjs lol XD additional question @ckosloski can i run xeditable in mddatatable by iamisti/mdDataTable. ok i will try that one thanks :*. @ckosloski sweet!!! :). @ckosloski can u give a sample of combodate without time. it will be great if there is jsfiddle thanks alot T_T. \n@ckosloski  didn't work\ntd.md-table-content\n              span e-form=\"form\" ng-show=\"form.$visible\" editable-combodate=\"detail.date_of_expiration\" e-data-template=\"D MMM YYYY\"\n                | {{ detail.date_of_expiration }}. i just create my own combodate by using editable-select btw thanks @ckosloski \ud83d\ude18\ud83d\ude18\ud83d\ude18. @ckosloski can you give an example for datapicker simple html. @ckosloski  thanks for the feed back i just want a plain date picker with calendar without bootstrap just a simple html\nhere's the example i just need the source code :) https://vitalets.github.io/x-editable/demo-plain.html?c=inline\n. oh i see that make sense now thanks. ",
    "ikwijaya": "\nerror : \"md-input-container, can only have one input, textarea or md-select child element!\"\nwhen using editable-radiolist.\n. here?\n\n\nif i bypass js code like\n'id': 1209022,\n'ipphone': 9981\ndata change successfully but i change the code below\n$scope.updateUser = function(){\n          $http.post('<?php print Config::get('URL');?>phonebook/modify', \n                {\n                    'id': $scope.dataTable.nik, \n                    'ipphone': $scope.dataTable.ipphone\n                }\n            ).success(function(data, headers, status, config){\n                  console.log(data);\n            }).error(function(data, headers, status, config){\n                  console.log(data);\n            });\n        };\ndata not changed and output here \n\nthe json data no pass to http\n\nso PHP StdClass cannot read some value, in key 'nik' and 'ipphone'\nand the json output just '{ }' no data\ncan you admit sir?\n. case close sir..\nhere my last code\n\ni change some code like updateUser(data,id) in js. So in xeditable use onbeforesave=updateUser($data,adb.nik)\ncode working perfectly\nnuhun pisan..\n. ",
    "elennaro": "That would be a great idea to add validation directives to angular Xeditable.\n. ",
    "thaoula": "Hi Yacob,\nI know you posted this a while ago .. but have tried making the second form an ng-form rather than a form?\nRegards,\nTarek\n. ",
    "Yacob": "I don't remember sorry\nOn Fri, Oct 14, 2016 at 5:29 PM, ckosloski notifications@github.com wrote:\n\nIs this still an issue?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/234#issuecomment-253924160,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACS_rny4ocCIBodiGWVfIz94N91p8Pqbks5qz_QlgaJpZM4DU4Zo\n.\n. Closed issue. Also with very brief testing it looks like using the inner form an ng-form fixes the problem. \n. \n",
    "abuechler": "Thanks @hammat!! Looking forward to get this merged.\n. ",
    "sesh-kebab": "Thank you :+1: \n. ",
    "eparchas": "Thanks!\n. ",
    "hammat": "No idea. It does the job and could be improved if needed.\nI'm currently using the fork until it gets merged.\n. ",
    "m2omou": "Thanks, that feature should be merged.\n. ",
    "jivasquez": "I made a small change on this so it checks the actual state of the edit-disabled attribute instead of the initial value of it on this pull request\nhttps://github.com/vitalets/angular-xeditable/pull/282\n. Done\n. My pleasure\n. ",
    "langdonx": "It seems like this should be the default behavior, or at least an app.run configurable, not something you'd have to add to every field.\nNot only does it make editing the text easier, it would also make keyboard navigation easier (especially if there was a .focus() called again back to the non-editable element on onhide).\n. ",
    "nicolasbousson": "I have the same problem...\n. ",
    "diegocortassa": "This is an old issue but, as I've lost few hours dealing with the same problem and this thread comes up on google, I just wanted to post my solution.\nThe problem is not really related to angular-xeditable beacuse the form get added to the scope only after the controller initialization.\nThe solution is to add a $watch like:\n$scope.$watch('myform', function(myform) {\n        if(myform) {\n            console.log('myform is',$scope.myform);\n            $scope.myform.$show();\n            $scope.myform.$visible = true;\n        }\n    });\n. ",
    "dlwhiteman": "What appears to happen is the editable-select is making copies of the objects that are listed in ng-options, so that even if the ng-model refers to one of the objects in that initial array, it doesn't match an item in the select widget upon initial display.\n. Password support was apparently added in version 0.1.9.  See here: https://github.com/vitalets/angular-xeditable/blob/master/CHANGELOG.txt\n. I have a similar request as @Madd0g .  I want to call $save() on the form when the user is saving the page on which the form resides.  There are other fields on the page, and I don't want to make them click the form's save button before they can save the whole page, so I'm trying to programatically call save on the xeditable form when they try to save the page.   I am unsuccessful in getting the object I need in order to call $save().  Can someone please help?\nEDIT: I figured out how to get a handle on the form.  In the <form name=\"formname\"> element, I added an onshow=\"myController.setForm(formname)\" and in the controller, I store the passed in form object in a field, so I can later have access to it to call $save(). \n. I had to create a custom directive that wrapped a  and registered for its change event in order to achieve this.\n. I would like the same feature.  What I believe he is asking for is to not show an editor at all if a certain condition is met.  Maybe you have a table containing employees, and only those employees that are not managers can have their vacation days edited, or something like that.  I want to make it so that conditionally the static text is not changed to an editable element.  Maybe supporting e-ng-if here or some custom attribute like editable-if would be useful.\n. OK, here is a workaround within an xeditable table:\n<td>\n   <span ng-show=\"readOnlyMode\">{{myValue}}</span>\n   <span editable-text=\"myValue\" e-form=\"myform\" e-ng-hide=\"readOnlyMode\" ng-hide=\"readOnlyMode\">{{myValue}}</span>\n</td>\nThe first line ensures static text will be displayed when I don't want the field to be editable, i.e. when readOnlyMode is true.  The second line uses ng-hide to hide the entire editable element, and e-ng-hide to hide the editor.  The downside is you have duplication here, so this would be more elegant if there were a built-in directive to conditionally show the editor.\n. Obviously I am having trouble getting the markdown to work in my original question as well.\n. ",
    "timoklok": "+1\n. anyone?\n. ",
    "troygilbert": "+1\n. I find it is still an issue in our app, and we have customers that report it occasionally.. No idea, unfortunately. There\u2019s two issues:\n\nwhen the user closes the soft keyboard it does not trigger a blur event. This is by design, but should be optionally handled as I have many users who think they are submitting at that point. \nwhen the user taps elsewhere on the page it basically does the same thing as clicking \u201cDone\u201d on the soft keyboard: the blue focus ring disappears, but a blur event is not triggered. This can be \u201cfixed\u201d in a clunky way by adding a click handler to a top-level container, which causes a blur event to occur. \n\n\nOn Feb 16, 2018, at 8:53 AM, ckosloski notifications@github.com wrote:\n@troygilbert any idea as to what the issue is?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "valiantvu": "+1\n. ",
    "hassanwasef": "+1\n. ",
    "andremann": "+1\n. ",
    "smnmtzgr": "+1\n. ",
    "bubblepixel": "+1\n. ",
    "beedaan": "+1\n. @ckosloski Thank you for the quick response! It looks like the issue has indeed been resolved. I was experiencing the issue with an older build  (0.1.8).  I confirmed the issue exists with the older build in a fiddle: http://jsfiddle.net/beedaan/evx01emj/1/\nIt appears this issue is fixed in the latest distribution, so I would close this issue.\n. @eugef I am having trouble getting an error message to be displayed if I do in fact have a server error.  The form will not close and the model is not updated, but I don't see the error message being displayed.  Is this behavior correct?  Shouldn't the error message be displayed somewhere like when the onbeforesave directive is used on individual fields?\n. I can't replicate this issue anymore, so I'd like to close it.. I updated the jsfiddle from the docs for the editable form:\nhttp://jsfiddle.net/beedaan/wvrqm1xb/\nIn the fiddle, I tried to set the focus to the status column.  I called $activate from the template and from the controller.  I couldn't get either to work.  It would be greatly appreciated if someone could show me how to use the $activate(name) method to set the focus on the status field.\n. I'm trying to set it on add.\nOn Mon, Apr 18, 2016 at 4:46 PM ckosloski notifications@github.com wrote:\n\nAre you trying to set it on edit or add?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/459#issuecomment-211568639\n. Very interesting!  I'm in the middle of creating a setFocus() method to activate the field I'd like to.  My trouble is stemming from the list of editables being created in an order that is different from order of appearance on the page.  I have an editable-number element first in my editables array, even though it's the third element.  Two editable-selects are before it.  I need to understand how the editables array is created so I can better predict which field will have focus once the form is $shown.\n\nThe order that the elements are in, in the editables array are:\nnumber, checkbox, select1, select2, select3, select4\nOn the page, they appear in this order:\nselect1, select2, number, checkbox, select3, select4\nIt looks like the selects are just shifted to the back of the array\nUpdate: The setFocus method you suggested works for me.  I would still like to learn more about how the editables array is constructed and why it seems like it's order is different from on page order.\n. I propose this issue is closed because we know that $activate() is indeed working.  I will say that I think the documentation is lacking regarding the behavior of this method.\n. I think it would be worth mentioning that you cannot activate a form field\nif you are adding a row because the form is not available yet.  You have to\nuse the $timeout module and give the form a chance to be created, then\nactivate the field.\nOn Fri, Apr 29, 2016, 10:44 AM ckosloski notifications@github.com wrote:\n\nWhat do you think needs to be added to the documentation?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/459#issuecomment-215740668\n. \n",
    "paustria": "I just checked on iPhone 6 Safari. It works fine. Could you please recheck?\n. ",
    "Grandiz": "same issue to me. iphone 5 ios 8.4. also have checked on iphone 6 and latest ios, same\n. ",
    "Mcafee123": "this is my first pull request. please tell me if i have made anything wrong or informations are missing ;-)\nexplanation:\ni have models that support validation and can apply or reject changes. i would like to be able to bind these directly to in place editable elements. i propose to change the code so that $data is only added as a model if there is not already another ng-model directive on the element.\n. @ckosloski: in one of my projects i use a version where i modified this. at the moment, i'm far away from this and cannot test anything, so feel free to delete the pull request.. ",
    "cpursley": "I'm experiencing the same issue.\n. ",
    "sebelga": "I'm having the same issue. I can't get the datepicker to open. It does work perfectly outside xeditable though...\n. ",
    "Painyjames": "Sure!\nI need to have a look a the rest of the pull requests, but will try to have it done maybe this weekend?\n. Unfortunately I needed to change this commit (https://github.com/enapupe/angular-xeditable/commit/68cbb66a442f637661ea06b9a0f4a805d907bf20) since it was causing another issue (#262).\nMight to have a look again at it having in mind this fiddle (https://jsfiddle.net/NfPcH/7191/). I'll try as well if I got any time.\nCheers! \n. Hi there,\nI asked Vitaly if he could add me as contributor, which he did yesterday.\nI'm currently merging pull requests. One of this is a fix for the issue you are mentioning.\nI'll try to have it done before the beginning of next week.\nCheers.\n. Sure, I just need to update the angular-xeditable demo page with the example on it.\nI'll try to do as soon as possible, hopefully before next week.\nCheers\n. Hi again,\nI still couldn't release the new version on the demo web, but I did a jsfiddle if you can find it useful.\n(Disregard the lack of icons, haven't loaded the bootstrap glyphicons on this example, on the demo looks fine)\nhttp://jsfiddle.net/NfPcH/7249/\n. Yeah, I tried to keep them ordered but couldn't since there were plenty of merges to be done and was quite a mess to merge. Will try to do like that in the future.\nAbout the untested changes, yes you are right there. I saw people already using this forks that I assumed that were stable enough. My bad.\n. Yeah you are right.\nI'll have a look this afternoon and see which change on the latests merges provoke that.\nThanks for noticing!\n. this commit was causing that issue:\nhttps://github.com/enapupe/angular-xeditable/commit/68cbb66a442f637661ea06b9a0f4a805d907bf20\nI've included the amendments to 0.1.9, you can check your fiddle again to see that is working.\nCheers!\n. Hi\nWill have a look this evening to see which recent change leads to that.\nCan you provide a fiddle that shows that issue?\nThanks!\n. Found the bug.\nYou can see your example working on http://jsfiddle.net/NfPcH/7246/\nIf you are using bower for getting xeditable you might want to run\nbower cache clean angular-xeditable#0.1.9 and get it again\n. Yes, that's what it seems.\nWill have a look this evening to see what causes that.\nCheers.\n. Fixed.\nSome commits from #158 were causing that error.\nYou can check your fiddle to see that is working fine now.\nThanks for noticing/your patience\n. Have you tried with previous version (0.1.8) ?\nMight be a breaking change since e.isDefaultPrevented() has been included recently. \nWould be great if you can post a fiddler/plunker so I can have a look as well.\nCheers.\n. ",
    "kotmatpockuh": "i mean how to clean $data with onshow method?\n. i see that if on page i have > 1 input and click on other, last focus din't removed, in build from 2014 - all was ok\n. ",
    "CEikermann": "Perfect, thank you for taking the responsibility\n. ",
    "stephenstroud": "I have this issue also with bootstrap 3, I found this information: \n\"Date control is implemented via Angular-ui bootstrap datepicker.\nCurrently it has only Bootstrap 2 version, Bootstrap 3 version is in progress.\"\nhttps://github.com/vitalets/angular-xeditable/blob/master/docs/demos/bsdate/desc.md\n. ",
    "SSchaaf": "Same to control type Text..\n. ",
    "avandendaele": "@ckosloski I left Angular for React more than a year ago. Finally I left web development.\nTherefore I don't know. Sorry. ",
    "nemes1s": "Hello, tried out this solution with 0.1.9 and bootstrap-tpls version 0.11.2.\nExample in demo doesn't work :(\nTransforms into input with a calender button, but the datepicker is not shown on neither input click nor button click. Can you please provide a working example? Thank you!\n. Thanks a lot! :+1: \n. Also, i've noticed that using editable-bsdate with editable-form doesn't update the field in $data after selecting the date in datepicker.\nLooking at the code, i've changed line 100 in xeditable.js: ng-model=\"$data\" to ng-model=\"$parent.$data\" and it worked.\nBut maybe i'm wrong?\n. ",
    "ayakovlevgh": "I have two little suggestions:\n1. If possible, it would be better to keep a linear commit history in order to save the information about original PR author.\n2. Please, don't release untested changes as patch version. (0.1.8 -> 0.1.9)\n. good job. Thanks.\n. ",
    "pascaldubois": "I confirm cleaning the cache fixed the issue for me.\n. ",
    "sbrnunes": "I'm experiencing the same problem reported by @kotmatpockuh. I'm trying to add more than one input type radiolist into the same page and they interfere with each other. In 0.1.8, if you click on one of the inputs, the other looses focus and returns back to it's read-only mode.\nWorse, if in 0.1.9 you click in more than one input, and then you click on the cancel button in one of them, both return back to read-only mode.\n. ",
    "dannyshmueli": "+1 on merging this to master\n. ",
    "jrsquared": "@mitcht Correct, but they are already in the repo, so it makes sense to at least keep them up to date until the repo owner decides to remove them and add then to .gitignore.\n. ",
    "fourty2": "I have the same problem.\n. ",
    "Rykie": "I am also running 0.1.8 and I have the exact same issue. When I look on the demo site, it works fine, but as soon as I use it in my site, it does not work. i.e. I can activate multiple inputs to stay in the edit mode, and as soon as I close one, all of them close.\n. +1\n. ",
    "klerehag": "Any plans on fixing this?\nIt works on the demo site is because it still uses the 0.1.8 version, maybe time to update?\nIf you take this example http://jsfiddle.net/NfPcH/82/ and switch to using 0.1.9 version then you will get the same behaviour as in this issue. Add this to external resources, https://rawgit.com/vitalets/angular-xeditable/0.1.9/dist/js/xeditable.js\n. ",
    "rawaludin": "Hi, I'm experiencing this too. As far I can see, the sample use different controller, right?\n. ",
    "l0rn": "+1\n. ",
    "tlrobinson": "+1\n. ",
    "okonet": "+1\n. Also package.json lacks main key...\n. I don't work on the project anymore that uses that so I guess I'm not :). Keeping in mind the question is still open and some people might be interested in it, I'd prefer not to. But if you insist.... I don't use input. Instead I use a as in this example: http://vitalets.github.io/angular-xeditable/#text-simple and it doesn't seem to work with e-disabled\n. Oh now I see there is a misunderstanding happened. What I mean by \"read only\" mode is that you even can not click the control anymore and it is getting \"normal\" (not link) styles.\n. @dlwhiteman I use the same \"work around\" in my code, but as some investigation shows, it's rather unperformant when switching lots of items. IMO internal \"readonly\" implementation could be much more performant since it would not require completely new DOM and attaching/detaching event listeners. Not sure though it is really so when using angular (not an expert here).\n. ",
    "Rodeoclash": "+1\n. ",
    "zEvg": "+1\nIs there any update on this ?\n. ",
    "pdwinkel": "+1\n. ",
    "the-darc": "+1\n. ",
    "sgarbesi": "+1\nSomeone just needs to run npm publish\n. ",
    "ShaKann": "angular-xeditable-npm is updated now. For sure I agree that there should be only one package. I tried to contact owners of angular-xeditable before I created my own but without success. I tried again to send them mail, I hope we will be able to sort that out.\n. So @eugef let me know when you will update npm pacakge angular-xeditable so I will be able to deprecate my own. I have added PR with updated package.json. Or add me as contributor on npm and I will update package.\n. I deprecated my own package. I'm glad we are able to sort that out.\n. ",
    "xak2000": "Is there a case where you don't want to cancel the model update on an error?\nI think, the answer is almost always - you want.\nSo, you almost always can't use onaftersave then?\nI don't think the answer \"don't use onaftersave, use onbeforesave instead\" is correct answer.\nAny server respond with error sooner or later.\nIdeally, the directive should restore model state when user presses Esc (oncancel event) after onaftersave failed. It is required for optimistic UI. onbeforesave is intended only for pessimistic UI updates.\nBut I understand, this is too hard to implement. So close for now.. ",
    "elgs": "Problem solved by reading this thread: https://github.com/vitalets/angular-xeditable/issues/40.\nWhy not put it on the documentations? Also I think it would be much better to make it a separate property, say toggle='dblclick'. Not sure if it is easy to implement.\n. Currently I have a work around by listening on both onbeforesave and onaftersave. However, it's ugly, because it has to use a tmp variable, like so.\nhtml\nhtml\n<a editable-text=\"table\" buttons=\"no\" e-form=\"textBtnForm\"\ndata-ng-dblclick=\"textBtnForm.$show()\" onbeforesave=\"beforeRenameTable(table)\"\nonaftersave=\"renameTable(table)\">{{table}}</a>\njavascript\n``` javascript\n// ugly workaround for not able to get old value from the on aftersave event.\n$scope.beforeRenameTable = function (table) {\n    $scope.tmpOldTableName = table;\n};\n$scope.renameTable = function (table) {\n    if (table === $scope.tmpOldTableName) {\n        return;\n    }\n    console.log('old:', $scope.tmpOldTableName);\n    console.log('new:', table);\n};\n```\n. So is it an inconsistency for the behaviors of the controller? Or is there a reason for this one to be different from others?\n. ",
    "AndrewIsh": "Worth noting that this problem seems limited to text inputs, number inputs are set to null when empty\n. Apologies for the delay in replying. The fix that @zhendong590 suggests obviously works, I guess it's now more a question of whether reverting to an empty string rather than null is desirable behaviour for angular-xeditable to be doing? My personal feeling is that reverting to null would be proper behaviour.. ",
    "kasrakhosravi": ":+1: \n. ",
    "lingyan1002": "hello, I have used your editable row recently and I have some question, I don't know how $data is  acquired, can you help me? \n. ",
    "area": "This PR should not be accepted in this state - it includes a dirty hack around a bug I have discovered in this implementation. I am hoping someone more versed in angular than I am can figure out the subtlety I am missing, which only appears to rear its head when edit-disabled is set to an angular variable on the input.\nThe hack starts at https://github.com/vitalets/angular-xeditable/pull/281/files#diff-90635473805044e26bceb2f7ffecfa82R251 , and copies the contents of addListeners defined elsewhere into the version of addListeners defined for the textArea, rather than calling it.\n. I note that #282 takes a different approach to solve the same problem, but it does not remove the styling associated with clickable elements, which my approach does - if the above bug can be fixed!\n. ",
    "wormyy": "When will be this or #281 merged? I would greatly appreciate it.\n. ",
    "sbrouil": "+1\n. ",
    "julian-iFactory": "+1.\n. ",
    "jwohlfert23": "+1\n. ",
    "dougmoscrop": "Please merge -- do you need help maintaining this project?\n. ",
    "aneri90": "+1\n. same here from 0.1.9\n. same\n. ",
    "McGiogen": "+1\n. ",
    "MooDySmiles": "+1\n. Yes, something like \"editable-disabled\" to be added runtime when edit-disable=\"true\" and to be removed when edit-disable=\"false\". It's pretty useless for us give it css when the element is loaded the firts time.\nRight now it isn't a fundamental feature, so we'll work on it when we'll have the time.\nThanks for your time! :smiley: . @ckosloski we hacked that by placing a span (with ngIf) when we want xeditable to be disabled.\nWe have been moved onto a new whole project, so I don't think we will be able to do any progress on this, sorry :disappointed: . If it's okay for you, it's okay for me.. ",
    "mgohin": "+1\n. I have the same problem and asking for the same feature (didn't find your issue before posting) : #496\nUsing a dynamic edit-disable doesn't work\n. Not working, here is the outerHtml and I can edit the field. The edit-disabled was false on init, then I change it to true.\n<span autocomplete=\"off\" \nedit-disabled=\"true\" \neditable-text=\"myproperty\"\ne-input-mask-date\ne-carret-position=\"2\" \nclass=\"ng-scope ng-binding editable editable-click\">27-06-2016</span>\n. I just took a look at the directive, the attribute editDisabled isn't watched, so it'll not be updated :/\nAny change to make it updatable ?\n. ",
    "bhamde": "+1 to merge\n. ",
    "ebuckley": ":+1:  Looks good to me\n. ",
    "alograg": "Sorry for the delay, i'm a little busy.\nCan you give me an example?. Thanks, i will work on it, soon.. No, i'm sorry. ",
    "NameFILIP": "Update: it is in fact minified, but the filename doesn't reflect it. The .min suffix should be added\n. ",
    "KatelynL": "I am attempting to migrate from Angular 1.2 to 1.3 and am having issues.  Has anyone else had issues with 1.3?\n. ",
    "jmvalencia": "I'm with angular 1.4 and no issues so far, for the record Im only using basic functionality for now.\n. I have sent a PR to handle it take a look:\nhttps://github.com/vitalets/angular-xeditable/pull/311\nWe need to wait for this to be merge and deploy, Im requiring this urgently :sob: \n. ",
    "danielo515": "It works flawlessly with angular 1.4.7\n. ",
    "masitko": "it works with 1.5 too\n. ",
    "chepilot": "This fix seems not working with append-to-body of ui-select. \n. ",
    "polybioz": "@zhendong590 the fix does not work for me either, the model is not updated when the form is saved. See http://plnkr.co/edit/YTuBlsxEjCpXeILvpjry?p=preview \n. ",
    "JessyH": "Hi, \nSame error here. I got this when i'm trying to include several variables in \"editable-select\".\nEx : \n\"editable-select=\"table.number +' '+ table.SIMNickName +' '+ table.msisdn\"\"\nHope it helps.\nJessy\n. ",
    "jensenkd": "Any resolve on this?  I'm getting the same error.\n. @planttheidea any fix for this that you were able to find?\n. ",
    "kalitas": "same here:\n[Error] Error: undefined is not a function (evaluating 'valueGetter.assign($scope.$parent,\n          self.useCopy ? angular.copy(self.scope.$data) : self.scope.$data)')\nsave@http://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:791:25\nhttp://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:1261:22\nforEach@http://localhost:9000/bower_components/angular/angular.js:336:24\n$save@http://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:1260:22\nhttp://localhost:9000/bower_components/angular/angular.js:1167:22\napplyCallback@http://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:1539:19\nthen@http://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:1534:24\ncheckSelf@http://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:1249:16\nhttp://localhost:9000/bower_components/angular/angular.js:1162:23\napplyCallback@http://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:1539:19\nthen@http://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:1534:24\n$submit@http://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:1238:14\nhttp://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:1454:32\n$eval@http://localhost:9000/bower_components/angular/angular.js:15846:28\n$apply@http://localhost:9000/bower_components/angular/angular.js:15945:28\nhttp://localhost:9000/bower_components/angular-xeditable/dist/js/xeditable.js:1453:29\ndispatch@http://localhost:9000/bower_components/jquery/dist/jquery.js:4435:14\nhandle@http://localhost:9000/bower_components/jquery/dist/jquery.js:4121:33\n    (anonymous function) (angular.js, line 12330)\n    (anonymous function) (angular.js, line 9109)\n    $apply (angular.js, line 15947)\n    (anonymous function) (xeditable.js, line 1453)\n    dispatch (jquery.js, line 4435)\n    handle (jquery.js, line 4121)\n. ",
    "skukx": "This was happening for me when applying a filter.  I ended up using a workaround by applying the filter beforehand in the controller and then passing that variable into x-editable.\njavascript\napp.controller('MyController', function() {\n  vm = this;\n  vm.originalValue = 'hello';\n  vm.filteredValue = $filter('uppercase')(vm.originalValue);\n});\nhtml\n<a href=\"#\" editable-text=\"vm.filteredValue\">{{ vm.originalValue || 'empty' }}</a>\n. ",
    "nikki-forshaw": "Hi,\nI'm getting the same issue, specifically on an angular xeditable date field. If I remove the buttons (buttons=\"no\") then I don't get the issue, however, the date does not get saved.\nFinding it very hard to find any info on this. Did anyone here find a solution aside from the $filter one (no filters in my code)?\nRather frustrated by it all!\nTIA,\nNikki\n. ",
    "gfguthrie": "@nikki-forshaw I had this issue when the target of editable-text (or editable-select, etc.) was not a simple property. For example, I had editable-select=\"item.arr.join(', ')\" and got the error, but when I changed it to editable-select=\"item.arr\", then the error went away.\nThe answer is then to use just simple properties that can be get & set, and do any transformation outside of the directive.\n. ",
    "sergio-ivanuzzo": "I had this error with editable-checkbox. Details:\nFor adding rows I'm using https://vitalets.github.io/angular-xeditable/#editable-row example. When I tried to add row with checkbox value, which I set to true or 1, I got this error.\nI fixed this by replacing previous checkbox value with [] (empty array)\nI also got this error with editable-checklist.\n. ",
    "djandyr": "Same error, using angular filter on an ISO 8601 date on editable form, using editable-text. \nhttp://plnkr.co/edit/OzeTfddVZ4xDED33Ys7u?p=preview\nIs is possible for filters to be used? I assume the valueGetter parses the directive name, when a filter is used x-editable can not reference the editable element correctly.\n. Thanks @ckosloski, using the date picker does work\nIn general if I had a requirement for using a filter on a editable text element, is it supported?\n. ",
    "ChMrWang": "HI, I have a same issues, here is my code \n`\n    $scope.saveNewGroupName = function () {\n        if($scope.newGroupisEditing == false){ // It seems this function may be invoked even current group is not new group , it's strange but really happened\n            return false;\n        } else if(this.$data.length == 0){\n            return \"Please input a group name\";\n        } else {\n            return $http.post(\"device/group/create\", {\n                name: this.$data\n            }).then(function (res) {\n                var device_group = res.data;\n                device_group.device = [];\n                $scope.deviceModel.deviceGroup.push(device_group);\n                $scope.newGroupisEditing = false;\n            });\n        }\n    }\n\n`\nand xeditable element here:\n`\n    <div class=\"col-lg-4 col-md-6 col-sm-10\">  \n        <li dnd-draggable=\"\" class=\"groupitem box box-blue\" ng-init=\"newGroupisEditing = false;\" ng-show=\"newGroupisEditing\">  \n            <h3>  \n                <a id=\"addANewGroup\" href=\"#\" e-placeholder=\"Group Name\" editable-text=\"''\" onbeforesave=\"saveNewGroupName()\" blur=\"submit\">{{newGroupName}}</a>  \n                <div class=\"button_group\">  \n                    <a class=\"glyphicon glyphicon-remove\" ng-click=\"newGroupisEditing=false;\"></a>  \n                </div>  \n            </h3>  \n            <ul  class=\"devicelist clearfix bs-glyphicons-list\"></ul>  \n        </li>  \n        <a href=\"\" style=\"text-decoration:none;\" ng-hide=\"newGroupisEditing\">  \n            <div class=\"file-preview\">  \n                <div class=\"file-drop-zone\">  \n                    <div class=\"file-drop-zone-title\" ng-click=\"newGroupisEditing=true;\"><i>Add a Group</i></div>  \n                </div>  \n            </div>  \n        </a>  \n    </div>\n\n`. @ckosloski  Thanks for your quickly replication, I updated the xeditable element code in my first comments.. @ckosloski  I will save the text to server and push the text to a array on saveNewGroupName() function, so a model assigned to editable-text is not needed for me. Is this the reason why this error appear?. @ckosloski  OK, Thank you.. ",
    "jdmallen": "For others who might get this error, make sure that you're providing the model without the double curly braces \"{{}}\" in the editable-select argument. That was what caused it for me.\nThis worked:\n<a href=\"\" editable-select=\"myModel\"\n    e-ng-options=\"o.id as o.name for o in myOptions\"\n    onaftersave=\"updateModel()\">{{myModel}}</a>\n\nThis produced the error in this issue:\n<a href=\"\" editable-select=\"{{myModel}}\"\n    e-ng-options=\"o.id as o.name for o in myOptions\"\n    onaftersave=\"updateModel()\">{{myModel}}</a>\n\nAlso, if your options are an array of objects with subproperties like id and name, make sure the model you're updating is just a single property and not the whole object. That was the second problem I ran into. Notice that all the examples on his docs update just an id field on the user object-- user does not contain the whole of the option object.\nIn other words,\n$scope.user = {\n    status: 2\n};\n\ninstead of \n$scope.user = {\n    status: {value: 2, text: 'status2'}\n};\n\nHope this helps.. ",
    "hungyc": "I have faced the same issue, any solution for that?\n. ",
    "guikubivan": "Oh you're a life saver @jmvalencia ! Thank you and hope it gets merged in soon, I will apply manually for now.\n. ",
    "gentisaliu": "@ckosloski YES!\n. Please fix this.\n. If I place the element outside a form tag, then it works. It seems like the editable-form controller is responsible for this malfunction, somehow related to https://github.com/vitalets/angular-xeditable/pull/414 .\n. Yes.\nJsFiddle with form element: https://jsfiddle.net/tj8j8qrh/23/ (not working)\nSame JsFiddle without form element: https://jsfiddle.net/tj8j8qrh/24/ (working)\n. ",
    "lookfirst": "Obviously, this pull request can't really be pulled cause I'm making a ton of changes, but I'd like you to take a look at it to get what I'm doing. This is my form-managed directive that is adding extra functionality for automatic generation of validation. It is actually all kind of cool and might be something that you should consider adding to your project.\n<div class=\"form-horizontal\">\n                    <label class=\"col-sm-2 control-label\">Name</label>\n                    <div class=\"col-sm-10\">\n                        <span name=\"name\" editable-text=\"store.name\" ng-bind=\"store.name || 'empty'\" e-required onbeforesave=\"updateName($data)\"></span>\n                    </div>\n                </div>\n```\nimport angular from 'angular';\nimport _capitalize from 'lodash/string/capitalize';\nimport 'angular-input-modified';\nimport 'angular-messages';\nlet formManaged = angular.module('gl.FormManaged', ['ngInputModified', 'ngMessages']);\nformManaged.directive('formManaged', () => {\n    return {\n        restrict: 'AC',\n        compile: (element) => {\n            let form = element.find('form');\n            let formNameFull = form.attr('name');\n            let [scopeName] = formNameFull.split('.'); // store.storeForm\n        let body = angular.element(form[0].getElementsByClassName('body-managed'));\n        if (body.length) {\n            body.prepend(`<div class=\"alert alert-danger\" ng-if=\"${formNameFull}.ajax\" ng-bind=\"${formNameFull}.ajax\"></div>`);\n        }\n\n        let formGroups = form[0].getElementsByClassName('form-group');\n        for (let i = 0; i < formGroups.length; i++) {\n            let formGroupElement = angular.element(formGroups[i]);\n\n            let labels = formGroupElement.find('label');\n            let titleLabel = labels.eq(0);\n            let controlLabel = labels.eq(1);\n\n            // TODO: Add support for <select> elements\n            let input = formGroupElement.find('input');\n            let inputName = input.attr('name');\n            let formNameInputName = `${formNameFull}.${inputName}`; // store.storeForm.domain\n\n            if (titleLabel.length) {\n                titleLabel.attr('for', inputName);\n            }\n\n            // special case to not conflict with xeditable\n            if (! input.hasClass('editable-input')) {\n                input.attr('ng-model', `${scopeName}.${inputName}`);\n            }\n            input.attr('id', inputName);\n\n            // Control Label\n            if (!controlLabel.length) {\n                controlLabel = angular.element('<label class=\"control-label\"></label>');\n                formGroupElement.append(controlLabel);\n            }\n\n            if (input.attr('required')) {\n                let required = `<span ng-message=\"required\"><i class=\"fa fa-bug\"></i> ${_capitalize(inputName)} is required</span>`;\n                controlLabel.append(required);\n            }\n\n            if (input.attr('type') === 'email') {\n                let email = `<span ng-message=\"email\"><i class=\"fa fa-bug\"></i> ${_capitalize(inputName)} is invalid</span>`;\n                controlLabel.append(email);\n            }\n\n            let ajax = `<span ng-message=\"ajax\"><i class=\"fa fa-bug\"></i> {{${formNameInputName}.ajax}}</span>`;\n            controlLabel.append(ajax);\n\n            controlLabel.attr('ng-messages', `${formNameInputName}.$error`); // store.storeForm.domain.$error\n            controlLabel.attr('role', 'alert');\n            controlLabel.attr('for', inputName);\n            controlLabel.attr('ng-if', `${formNameInputName}.$invalid && (${formNameInputName}.$touched || ${formNameInputName}.$dirty)`);\n\n            formGroupElement.attr('ng-class', `{\n                'has-error': ${formNameInputName}.$invalid && (${formNameInputName}.$touched || ${formNameInputName}.$dirty),\n                'has-success': ${formNameInputName}.$valid && ${formNameInputName}.modified\n            }`)\n        }\n\n        // Footer buttons\n        let footer = form[0].getElementsByClassName('btn-managed');\n        if (footer.length) {\n            let cancel = angular.element(footer[0].getElementsByClassName('btn-warning'));\n            if (cancel.length) {\n                cancel.attr('ng-click', 'cancel($event)');\n            }\n\n            let ok = angular.element(footer[0].getElementsByClassName('btn-primary'));\n            if (ok.length) {\n                ok.attr('ng-click', 'ok($event)');\n                ok.attr('ng-disabled', `${formNameFull}.$invalid`);\n            }\n        }\n    }\n}\n\n});\nexport default formManaged;\n```\n. Link to screenshot: http://take.ms/k3jrj\n. ",
    "dimaslz": "The only way to execute the action $show by code is pass object e-form=\"THIS_ID\" by method, for example: \n<span editable-text=\"item.description\" e-form=\"editableDocumentDescription\" buttons=\"no\" ng-click=\"methodToExecute(editableDocumentDescription)\">{{item.description}}</span>\nand in your code, you can execute an action:\nfunction methodToExecute(object) {\n   object.$show(); // for example\n}\n. ",
    "m-apsolon": "probably not the case, but did you actually set \"blur='submit'\" on every form? just asking since we had a case where one of ours forgot it and wasted considerable time for finding a 'workaround' .. \n. not the nicest, but the easiest way would be to use e-style attribute.\n<span editable-text=\"user.name\" e-name=\"name\" e-style=\"width:400px;\" onbeforesave=\"doSomething($data)\" </span>\n. Pretty sure you forgot to name your fields. Notice the attribute 'e-name'.\nhttp://jsfiddle.net/NfPcH/81/\n. ",
    "cokuyan": "I had the same problem and got around it using jQuery to find the right element's scope. If you notice, the element actually inherits the isOpen property from its parent scope, so you have to change that value for it to work. But for some reason, the normal triggers didn't work so I made my own.\nI put this method on the input field with an ngClick directive:\n$scope.openDatepicker = function (index) {\n  index = index || 0; // in case you have multiple inputs for the datepicker\n  var datepickerScope = angular.element($('div[datepicker]')[index]).scope().$parent;\n  datepickerScope.isOpen = true;\n}\nYou don't need to worry about $apply since the ngClick should have fired in the correct scope.\n. ",
    "SDries": "Great! this works, thank you very much.\n. ",
    "alexanderivanovdev": ":star:\n. ",
    "peterwarbo": "@jmvalencia Sorry for the noob question, but I can't seem to get your commit to work? I forked your angular-xeditable repository and then I reference to the specific commit in bower.json (https://github.com/peterwarbo/angular-xeditable.git#48daa0af6fea1eaea09cdd0814be2e0575738966)  but for some reason nothing happens when I press the tab key.\nEDIT: Solved it, did a grunt build and pushed to my own fork...\n. Seems that this fix adds unexpected behaviour:\nThe function in onbeforesave gets triggered twice when blur=\"submit\" and onbeforesave returns a string (as error).\nTo reproduce:\nFirst time when clicking and holding down mouse button outside the form element.\nSecond time when releasing the mouse button.\n. It seems to be a bug in 0.1.9. If you use 0.1.8 it works as expected.\n. ",
    "yantolee": "@jmvalencia I copied your code to bind blur for when really losing focus on single input & paste it on xeditable.js. What happened is the blur works but it breaks the onBeforeSave. Am I suppose to do what I did or should I fork your repo? Thanks \n. Found same issue reported. Refer to #311 \n. ",
    "pascal08": "I would love to have this PR merged because I stumbled upon the same issue.\nNB: Clicking on a xeditable input that's moving after blurring a focussed xeditable (which is then collapsing) seems not to work properly though. \n. ",
    "jjreicher": "Does this fix still break onbeforesave? Is there a fix that doesn't break onbeforesave?. any updates on this issue? I see there was a fix in #311 but that was with version 0.1.x not with 0.2.0. Hoping someone has figured out how to fix this in 0.2.0.\nFor me the issue arises in making the app accessibility work correctly. With tabindex and editableOptions.activationEvent = 'focus'; I have been able to get the fields to activate by tabbing to them, but I cannot get them to save when I tab out--it should work as part of the blur=\"submit\" but does not seem to. So I'm left with blur=\"cancel\" or blur=\"ignore\", neither of which are great solutions.. Certainly seems to be true--you see the issue though, yes? Basically\nconceptually tabbing away from the field should cause the field to \"lose\nfocus\" but blur doesn't seem to do that. Thought maybe focusout or\nsomething along those lines might solve the problem.... Thoughts?\nOn Dec 7, 2016 4:26 PM, \"ckosloski\" notifications@github.com wrote:\nI think that blur=\"submit\" only blurs on a click, so there needs to be a\nchange to support something other than click.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/446#issuecomment-265616919,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMu4lSvY9IQPuTIGTE0j885qEwEh6m2kks5rF06wgaJpZM4H7-6z\n.\n. Running into the same issue...seems like not much activity here.... http://plnkr.co/edit/Mn4vnP9vYS9eFiWhaNYQ?p=preview\nWorks in Chrome. Doesn't work in IE11.. Well it's pretty simple anyways. Basically loads up fine. Then when you click on the item, it ONLY remains in the editable state while actively holding down the mouse-click. As soon as you let up on the mouse-click, it reverts to text state.\n\n\n. Oh awesome. Any way to get hands on the fix? Or when is the release?\n. thanks!\n. ",
    "bodhisatwag": "its a duplicate of https://github.com/vitalets/angular-xeditable/issues/326. Try e-init-date=\"false\"\n. I have successfully got rid of this error by adding e-init-date=\"false\". But not sure if its the proper way to do it.\n. ",
    "ncubo": "I tried that and now I don't have the error, but the datepicker popup doesn't appear :/\n. I tried that and now I don't have the error, but the datepicker popup doesn't appear :/\n. ",
    "chrisruddick": "Using the suggestion above, I got it to work with this:\nhtml\n<a href=\"#\" editable-bsdate=\"dueDate\" e-datepicker-popup=\"MM/dd/yyyy\" e-is-open=\"data.isOpen\" e-ng-click=\"data.isOpen = true\" e-init-date=\"false\">\n. ",
    "gauravbansal74": "Same issue. Please help. when i am assigning minDate then its giving this error.\n. ",
    "itailulu": "That's a bug with 0.13.0\nUpdate to the latest version and you'll be fine\n. ",
    "scripterkaran": "I think this error is back, I am using 1.0.3 and I cannot pass minDate to datePicker popup. \n. ",
    "maeishoj": "is this part of the master? cause I am having this problem still..\n. I would like to know that too.. Also it doesn't work for text areas! \nOr rather , it would seem to behave like a normal input and would expect to work, except that if I click outside the area the value does not get set! \nAny idea?\n. 1 year old issue, can't recall this anymore nor am i using it anymore, therefore i am closing it.\n. ",
    "sijmenvos": "Will this be in the dist any time soon? Or could you maybe do a pre-release?\n. ",
    "brantje": "When will this be in master?\n. ",
    "rbecheras": "@ckosloski ok I'm sorry, I will.. I added it to my todo list now.. ",
    "rguldener": "+1 would be great to get this resolved. If I find time I might create a PR on the weekend but will have to see how easy this is to fix for somebody not familiar with the codebase.\n. ",
    "borgez": "change to \nif (self.single) {\n                  self.editorEl.attr('editable-form', '$form');\n                  // transfer blur to form\n                  self.editorEl.attr('blur', self.attrs.blur || editableOptions.blurElem);\n              }\n. ",
    "heston": "I just encountered this myself. Definitely a real issue, but the fix from @bodhisatwag seems to work.\n. ",
    "xinyu7": "@m-apsolon  thank you ~ \n. ",
    "boubou1030": "Could we do a responsive size? Thanks.\n. @innerpeace0  I used a percentage and the size can be changed, but however it didn't show a responsive size. @celsomtrindade  I don't have any experience on sass, I'm wondering how could I modify it into css3  between  directly? Thanks! \n. @celsomtrindade  Thank you very much! I'm looking into it.\n. ",
    "adisembiring": "@dlwhiteman  can you share your sample code ?\n. ",
    "AlexSchuetz": "I will check this again.\n. ",
    "khaltouaca": "i'got the same issue, i'm using checklist under an editable table row form. But when but all checkboxes stay unchecked and my data is not updated.\n. ",
    "luigimassa": "+1\n. ",
    "dongyb80": "I guess it is the same issue I am seeing.\nhttp://jsfiddle.net/dongyb/msjc56w3/\nThe jsfiddle code posted above is forked from official example of Editable row.\nWhat I changed are:\n1) change the mocked post /saveUser to return 406.\n2) change the saveUser function of controller to reject with error message.\nAfter the changes, when edit a row and submit it, it fails but no error message shown. Thanks for your reply @ckosloski .\nIn the section 'Validate remote' of documentation, it says \"\nYou can perform remote validation e.g. checking username in db. For that define validation method returning $q promise. If promise resolves to string validation failed.\n\"\nIn my example, http://jsfiddle.net/dongyb/msjc56w3/, it does return a promise that resolves to string.. @ckosloski  you are right. As what you say my real question is that \"no display of error message for the onfbeforesave that is set at the form level\".\nIt seems likely it is not designed to display error message at form (row in my case) level. It is only designed to display error message at field (td) level.\nI am working around it to call 'form.$setError(null, \" \")' in the form's onbeforesave, which would show all fields in red border. It is not perfect but at least it tells something is wrong.. @ckosloski \nPlease see http://jsfiddle.net/dongyb/msjc56w3/4/\nIt shows what I said in previous post. It does NOT show error message. It shows all fields in red border to indicate something is wrong. To see how it behaves, edit a row and click save button.\nIt is absolutely NOT good solution. Please let me know if you have better one :)\nThe key pieces of code posted below\n$scope.saveUser = function(form, data, id) {\n    //$scope.user not updated yet\n    console.log(\"saving user\");\n    angular.extend(data, {id: id});\n    let d=$q.defer();\n    $http.post('/saveUser', data).then(\n    ()=>{d.resolve()},\n    (err)=>{\n    console.log(\"server error\");\n    console.log(err);\n    form.$setError(null, ' '); //please note that the second parameter is a blank char.\n    d.reject(\"server error\");\n    })\n    return d.promise;\n  };. ",
    "gusreyes01": "I have another workaround:\nCreate a function on the row you want to make optional:\ntemplate.html\n<button ng-click=\"showRowForm(rowform)\">Button</button>\ncontroller.js\n$scope.showRowForm = function(rowform) {\n            if($scope.quote.status != '2'){\n                rowform.$show();\n            }\n        }\n. ",
    "juanvillegas": "Another way could be to make a manual button to trigger the editable input, and if certain conditions are met display the button, otherwise hide it\n. ",
    "MarkHerhold": "Oops. I see that you have \"MIT\" at the bottom of the README. Please add a LICENSE file. :)\n. @innerpeace0 ok that is fair enough.\n@eugef would you like the PR or to close this issue?\n. ",
    "Anisotropic": "I have same issue and can`t realize where is a bug\n. ",
    "corinagum": "Having the same issue, but changing to 0.1.8 did not fix it. Has anyone found another resolution?\n. ",
    "Pavan1889": "Hi I'm facing same issue still till date!! if anyone has solution to this please post here.\n. Sorry im not available online from past 2 weeks, any how check the below for issue:\nhttp://jsfiddle.net/Pavan1889/q44qfcj8/1/\n. Hi i have made one more fiddle resembling my issue :\nhttp://jsfiddle.net/Pavan1889/vraounop/1/\n. Hi i did the same, but i ended up like this???\nhttp://jsfiddle.net/Pavan1889/q44qfcj8/3/\nhttps://jsfiddle.net/Pavan1889/6a71bu7g/1/\nwhere i am going wrong?\n. ",
    "joelbarba": "I had the same problem. I couldn't find a way to access the input to check its $invalid property because they are outside the form. I fixed it binding an on-change event and checking it dinamically into a javascript function:\n```\n{{item.name}}\n{{item.surname}}\n{{item.address}} \n....\n// Check the input reactively to turn on/off the save button\n$scope.checkInput = function(rowform, currentInputName) {\n  var invalid = false;\n  var value;\n// Check all inputs\n  for (var inputName in this.$form.$data) {\nif (inputName === currentInputName) { // For the current input, the new value is here\n  value = this.$data;\n} else {\n  value = this.$form.$data[inputName];\n}\n\ninvalid = invalid || (value === undefined);     // Default check: no $data means the input is invalid\n\nif (invalid) {\n  break;\n}\n\n}\nrowform.noSave = invalid; // Flag to set the Save button disabled\n}\n```\nI know it is not the prettiest way, but it works.\n. ",
    "jongravois": "I have created a plunker to show my issue -- http://plnkr.co/edit/1jImj2qULqKfQ3pGBzVb?p=preview. I have to click the cancel 'X' of each row before the table is like I need it to be.\n. ",
    "chisaipete": "Did you find a solution?  I've got the same issue.\n. ",
    "kashcode": "I think this sample 'Validate remote' http://jsfiddle.net/NfPcH/36/ is that I need.\n. You can validate remote category of 'oil' http://jsfiddle.net/NfPcH/36/ and if server return that this new category already exist just select it in a list.\n. ",
    "vjanssens": "Unfortunately, it seems as if custom options on the element don't get transfered to the combodate element. I could not get the parameters to work.\nI didn't have the time to make a pull-request (and am not sure if it will ever be merged) for this problem but a real nasty hack would be to edit xeditable.js (the angular version) on line 231 with the following.\njavascript\nvar combodate = editableCombodate.getInstance(this.inputEl, {\n  value: new Date(this.scope.$data), // should already be in the code\n  minYear: 1900 // custom parameter\n});\n. ",
    "gabrieleciech": "I'm experiencing the same behaviour, How can we investigate more on the problem? \n. @GBora I have a similar problem, did you find any solution?\n. ",
    "wayjake": "If you use an  tag as the root of the editable text it started working fine in Firefox. Couldn't figure out how to get the  going with it. \n. ",
    "kimmowikman": "Added documentation to reference table. Do you think there should be an example case too?\n. I've been busy with other things recently. \nI need to improve the pull request a little bit. Pressing cancel should revert fields to original values.\n. I found a one-liner that effectively does what I originally wanted without change to xeditable itself.\nJust call this in onaftersave(): $scope.myFormName.$show()\nI need to rethink how can this be applied with alwaysshown attribute.\n. ",
    "mylonos": "Have similar issue, \nTypeError: k.assign is not a function\n    at c.m.save (xeditable.min.js:170)\n    at xeditable.min.js:298\n    at Object.forEach (angular.js:332)\n    at FormController.g.$save (xeditable.min.js:297)\n    at val (angular.js:1029)\n    at c (xeditable.min.js:357)\n    at Object.then (xeditable.min.js:368)\n    at FormController.a (xeditable.min.js:275)\n    at angular.js:1024\n    at c (xeditable.min.js:357)\n. ",
    "exp-anoop": "I think I solved this issue. Sure. I have done this long ago. Let me check how I solved this issue.. ",
    "rajesh-rns": "@exp-anoop  could you please provide info on how you fixed it? I am facing the exact same issue. Thanks. ",
    "DiegoZoracKy": "Came here to open this same issue. Was reported here on #108 too. Any news about that?\n. ",
    "omarw": "What Chrome extension is that in your screenshot?\n. ",
    "S-YOU": "angular watchers - https://chrome.google.com/webstore/detail/angular-watchers/nlmjblobloedpmkmmckeehnbfalnjnjk?hl=en\n. ",
    "NickAb": "Is there are any workaround or a quick fix to this?\n. I made a temporary fix setting onhide to (typescript code)\nts\nfunction () {\n            var last = this.scope.$$watchers.pop();\n            this.scope.$$watchers = [last];\n        };\nBut i am new to angular and not sure if it is a correct way that will free memory, etc.\nAlso, based on code, I think there are might be a problems not only with watchers, but with binds too. Directive bind to some events, but never class unbind.\n. Is there any workaround or should we wait for new release for it to be fixed and use 1.8.0 meanwhile?\nAny downsides in using 1.8.0?\n. ",
    "kenfdev": "I think this leak would be fixed with these commits.\nFix scope memory leak 46b71a7cadc169093a8464261b9c5545b87b0155\nChange $data on scope parent to propagate change 7e73a3b9d459cab3960455bede46af7c3f043e71\nBut the pull request (#158) is mixed with many other fixes and is not merged.\n~~These changes at least worked for my situation.~~\n~~First, change the self.render function.~~\n``` js\n// src/js/editable-element/controller.js\nself.render = function() {\n...\n      self.inputEl.addClass('editable-input');\n      self.inputEl.attr('ng-model', '$data'); // <- change this to self.inputEl.attr('ng-model', '$parent.$data');\n  // add directiveName class to editor, e.g. `editable-text`\n  self.editorEl.addClass(editableUtils.camelToDash(self.directiveName));\n\n...\n```\n~~and then change the self.show function.~~\n``` js\n// src/js/editable-element/controller.js\n     //show\n    self.show = function() {\n...\n  // compile (needed to attach ng-* events from markup)\n  var newScope = $scope.$new(); // <- add this line\n  $compile(self.editorEl)(newScope);\n\n...\n    };\n```\n~~and finally destroy the created scope inside self.hide~~\n``` js\n// src/js/editable-element/controller.js\n    //hide\n    self.hide = function() {\n  // destroy the scope to prevent memory leak\n  self.editorEl.scope().$destroy(); // <- add this line\n\n  self.controlsEl.remove();\n  self.editorEl.remove();\n  $element.removeClass('editable-hide');\n\n...\n    };\n```\n~~I haven't checked the side effects but it seems to be working.~~\n~~If anybody can confirm this change, I'll create a pull request.~~\nUpdated(2016/06/20)\nStruck out my  comment. The above approach does not work.\n. The modification I made above does not work.  It is referenced in issue #265 and the fix has been reverted in this commit (1fcdd97ab886b67fee7e47cfe7d0a7e2da9cc6da) .  It's probably because creating a new scope with $scope.new() creates an additional layer and access from directives like editableRadioList have to be modified to ng-model=\"$parent.$parent.$data\" .  This modification has pretty much a big impact and I'm not sure if it's even the right approach.\nDoes anybody have any ideas on how we can fix this??\nFor example, I'm thinking that we have to change all the directives to reference another $parent above to access the right $data when we create a new $scope.\n`` js\n// radiolist\nangular.module('xeditable').directive('editableRadiolist', [\n  'editableDirectiveFactory',\n  'editableNgOptionsParser',\n  function(editableDirectiveFactory, editableNgOptionsParser) {\n    return editableDirectiveFactory({\n      directiveName: 'editableRadiolist',\n      inputTpl: '<span></span>',\n      render: function() {\n        this.parent.render.call(this);\n        var parsed = editableNgOptionsParser(this.attrs.eNgOptions);\n        // changed theng-modelbelow to$parent.$parent.$data`\n        var html = ''+\n          ''+\n          '';\n    this.inputEl.removeAttr('ng-model');\n    this.inputEl.removeAttr('ng-options');\n    this.inputEl.html(html);\n  },\n  autosubmit: function() {\n    var self = this;\n    self.inputEl.bind('change', function() {\n      setTimeout(function() {\n        self.scope.$apply(function() {\n          self.scope.$form.$submit();\n        });\n      }, 500);\n    });\n  }\n});\n\n}]);\n```\nAm I on the right road or am I missing something??\nThanks in advance.\n. @ckosloski thx for the reply.  Yes, I've built the latest with grunt build and I believe the code you're mentioning is as below.\njs\n      // Manually remove the watcher on 'has-error' to prevent a memory leak on it.\n      for (var i = 0, len = $scope.$$watchers.length; i < len; i++) {\n        if ($scope.$$watchers[i] !== undefined && $scope.$$watchers[i].last && $scope.$$watchers[i].last !== undefined &&\n            typeof $scope.$$watchers[i].last === 'object' && \"has-error\" in $scope.$$watchers[i].last) {\n          $scope.$$watchers.splice(i, 1);\n          break;\n        }\n      }\nThis indeed reduces a few $$watchers but not all.  For example, the view used in my project creates about 400 $$watchers and ending editable mode only reduces about 40 of them.  Creating a new scope and destroying the scope reduces the same amount of $$watchers created.\n. @ckosloski This is an example of the $$watchers leaking in the newest build .\n\nThe code is as below.\n``` html\n\n\n\n      user status: {{ user.status }}\n    \n\n\n\n      user status2: {{ user.status2 }}\n    \n\n\n\n  var app = angular.module(\"app\", [\"xeditable\"]);</p>\n<p>app.run(function (editableOptions) {\n    editableOptions.theme = 'bs3';\n  });</p>\n<p>app.controller('RadiolistCtrl', function ($scope, $filter) {\n    $scope.user = {\n      status: 2,\n      status2: 1\n    };</p>\n<pre><code>$scope.statuses = [{\n  value: 1,\n  text: 'status1'\n}, {\n  value: 2,\n  text: 'status2'\n}];\n</code></pre>\n<p>});\n\n``\n. I've created a PR #489 .  I hope this problem gets a step closer to being solved.\n. @jawadatgithub Maybe I can look at the problem.  Could you create a plunkr???  I'll try and reproduce it.  I have a feeling that this should be a different issue though.\n. I've probably found the proper way to fix both #364 and #265.  The problem was that directives likeeditable-bsdate,editable-radiolist, etc. had their ownng-modelset manually and were removing the  originalng-modelwiththis.inputEl.removeAttr('ng-model').  Therefore, this commit (7e73a3b9d459cab3960455bede46af7c3f043e71) was not enough because it was being removed inside therender` method of the directive.\nBelow is editableRadiolist for example.\n``` js\n// radiolist\nangular.module('xeditable').directive('editableRadiolist', [\n  'editableDirectiveFactory',\n  'editableNgOptionsParser',\n  function(editableDirectiveFactory, editableNgOptionsParser) {\n    return editableDirectiveFactory({\n      directiveName: 'editableRadiolist',\n      inputTpl: '',\n      render: function() {\n        this.parent.render.call(this);\n        var parsed = editableNgOptionsParser(this.attrs.eNgOptions);\n        var html = ''+\n          ''+\n          '';\n    this.inputEl.removeAttr('ng-model');   // the original `ng-model` is being removed here\n    this.inputEl.removeAttr('ng-options');\n    this.inputEl.html(html);\n  },\n  autosubmit: function() {\n    var self = this;\n    self.inputEl.bind('change', function() {\n      setTimeout(function() {\n        self.scope.$apply(function() {\n          self.scope.$form.$submit();\n        });\n      }, 500);\n    });\n  }\n});\n\n}]);\n```\nTherefore, I've added a $parent to the $datas to directives like editable-bsdate, editable-radiolist, etc.  I haven't checked all the possibilities but at least the demo page seems to be working.\n$parent.$parent definitely isn't clean but was the simplest way I could of thought of for right now.\nCan anybody confirm this change??  Or point me to a cleaner path??\nThanks in advance.\n. @ckosloski thank you for the reply.  I've been wondering how I can execute the tests.  I assume its inside test/e2e/dev-test.html but I think I'm missing something (i.e. ../../dev.html ) and all the tests fail.  Are there any instructions on how I can execute the tests???\n. @ckosloski I appreciate your kind support.  I was able to execute the tests.  They had to be updated because the input and select element's attributes changed from $data to $parent.$data and the original tests would fail due to not being  able to find the elements.  After the update I've confirmed that all the tests have passed.\nI hope this fix could be merged and get released.\n. Definitely...  This code is not valid.  Thank you for the review.\nI'm going to change it to reference a variable outside the function.\n. ",
    "jawadatgithub": "Dear participants,\nI have deadline after 10 hours from now, I need this leak bug fixed and released, I have part of the SPA that uses form with ~400 xeditable fields (that's ~ 2000 Watches everytime user click Edit), please update ASAP, otherwise I will be forced to make custom changes in my local version of the component which I prefer not to happen.\nthanks for the awesome component.\n. Another bug might be caused by this bug is $data content keep reference of previous edit items:\ni.e.,\nhtml:\n<form editable-form name=\"editableForm\" onshow=\"pauseVideo()\" onbeforesave=\"beforeSavingEditedText($data)\">\n<span ng-repeat=\"word in tsWordsArrayForEdit track by $index\" e-style=\"width: 110px;height: inherit;\" e-name=\"{{$index}}\" editable-text=\"word\"></span>\n......</form>\njs:\nscope.beforeSavingEditedText = function(data) {\n//data object contains items of previous scope.tsWordsArrayForEdit array items.\n};\none first edit:\nif scope.tsWordsArrayForEdit.length = 100\nand on second edit, scope.tsWordsArrayForEdit.length = 80\nthen after form submit $data return 100 items, in which last 20 items came from scope.tsWordsArrayForEdit old content! in below image, every item after 318, is coming from previous content!\n\nI think this should make this opened issue get higher priority because it highlight data corruption not only performance issue.\nmeanwhile, is there a way to destroy the form and recreate it on each edit? can you share an example? or in case there is better workaround till this get fixed please share?\n. ",
    "kashyp": "Facing similar Issue, were you able to get around this?\n. ",
    "madhurahuja": "I was able to have it working. Sharing just in case you have the similar requirement-\n//textarea\nangular.module('xeditable').directive('editableTagsinput', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableTagsinput',\n      inputTpl: '<tags-input min-tags=\"1\" max-tags=\"3\" ng-model=\"tags\" display-property=\"itemDesc\" class=\"ti-input-sm\" template=\"tag-template\" add-from-autocomplete-only=\"true\">      <auto-complete source=\"loadTags($query)\" load-on-focus=\"true\" load-on-empty=\"true\" template=\"autocomplete-template\"></auto-complete></tags-input>',\n      addListeners: function() {\n        var self = this;\n        self.parent.addListeners.call(self);\n        // submit textarea by ctrl+enter even with buttons\n        if (self.single && self.buttons !== 'no') {\n          console.log(self);\n          self.autosubmit();\n        }\n      },\n      autosubmit: function() {\n        var self = this;\n        self.inputEl.bind('keydown', function(e) {\n          if ((e.ctrlKey || e.metaKey) && (e.keyCode === 13)) {\n            self.scope.$apply(function() {\n              self.scope.$form.$submit();\n            });\n          }\n        });\n      }\n    });\n  }]);\n. ",
    "samaksh-vokal": "Just add e-add-from-autocomplete-only=\"true\" to the outer <span> like so:\n<span editable-tags-input=\"model.tags\" \n      e-ng-model=\"model.tags\"\n      onaftersave=\"updateTagsAndSave(model)\"\n      e-add-from-autocomplete-only=\"true\">. ",
    "jasongraff": "I got around that by modifying line 609:\nline in 1.9:\nself.editorEl.attr('blur', self.attrs.blur || (self.buttons === 'no' ? 'cancel' : editableOptions.blurElem));\nmy version:\nself.editorEl.attr('blur', self.attrs.blur || (editableOptions.blurElem));\nThen set blurElem to 'submit' up in the editableOptions section.\nHope this helps.\nThanks for your work, Vitaly!\n. ",
    "kkulikowski": "Or you can just use buttons=\"no\" blur=\"submit\" onbeforesave=\"someCtrl.updateContact(contact)\", it will run submit when you loose focus on form, then it will run function inside your onbeforesave (or onaftersave).\nIts easier this way, and you dont have to edit directive.\n. ",
    "codigoalvo": "Any success ? I'm trying to use \"Angular Material\" with xeditable and can't find a simple way to wrap the inputs with  needed to give the angular material apearence on inputs. The creator from xeditable seens to take a long time to answer questions here. Maybe could you help me, please?\n. ",
    "ezk84": "This happens even with blur=\"submit\", I would've thought the blur event fires whenever focus is lost in the input.\n. ",
    "CraigWarford": "This happens for me as well.  In addition, clicking a different xeditable control leaves the previous ones in an edit state.  I have to click a non-xeditable control to get it to reset them all.\n. ",
    "chnldw": "Same issue here...\n. ",
    "violetbobo": "@CraigWarford same issue! Clicking a different xeditable control leaves the previous ones in an edit state. \nHave you solved it?\n. ",
    "gs11": "Same issue here..\n. ",
    "hung-doan": "Well, I think you are doing validation in the wrong way.  It won't work with angular-xeditable because angular-xeditable will append a new form for each model then do validation him self (his way).\nYou can take a look at this sample: http://vitalets.github.io/angular-xeditable/#validate-remote\nThis code: \nreturn $http.post('/saveUser', $scope.user).error(function(err) {\n  $scope.editableForm.$setError('email', 'Unknown error!');\n});\nwill work because it return a promise instance. angular-xeditable can check if the the promise is success or not!.\n. I finally got you;\n1. Can I use Restangular? : yes, for sure you can use any library if they return the \"right format\" - which will be accepted. (for example: Restangular return a promise).\n2. \"I just want to make one post request for the whole form which includes multiple fields and every field would return different kind of validation errors\" : \nYes : but you have to do a little \"hacking\"(actually this is not a good solution, but It makes your work done): \nChange your code: \n$scope.editableForm.$setError('email', 'Unknown error!');\nto \n```\nfunction setError(inputName, errorMsg){\n   var elm = angular.element(document.querySelectorAll(\"[name=inputName]\"));\n   return elm.scope().$error = errorMsg;\n}\nsetError('email', 'Unknown error!');\n```\nHere is an example:\nhttp://jsfiddle.net/5ju0s6kv/1/\n. @heridev could you give me a live sample ?.\n1. You have to use var d = $q.defer();  to handle output. Because angular-xeditable itself can't check if there is an invalid business validation in responsed request\nYou have to tell him if a model is invalid (by d.reject(e.error)).\n2. You can use var d = $q.defer();  with Restangular as well. \nYour code might be like this : \nvar d = $q.defer();\n Restangular.one(model, subscriberId).get(extra_params).then(function(res) {\n          res = res || {};\n          if(res.status === 'ok') { // {status: \"ok\"}\n            d.resolve()\n          } else { // {status: \"error\", msg: \"Username should be `awesome`!\"}\n            d.resolve(res.msg)\n          }\n        }).error(function(e) {\n          d.reject(e.error);\n        });\n(So sorry , I have never used  Restangular before, so I use pseudo code instead)\n3. When the request returns an error in Restangular seems like the form is already removed(hidden) so not able to find the input : \nDoes your query/selector is correct ?\nIt's hard to figure out what is the problem without a live demo (or at least HTML/JS codes that you implemented).\n. You are welcome. \nah, I'm not the collaborator of this project, @vitalets will decide to close issue for you, later ^^.\n. I don't get you.  Is there something wrong with texarea (http://jsfiddle.net/NfPcH/32/)\n. There are onaftersave and oncancel events (http://vitalets.github.io/angular-xeditable/#ref-element).\nAre these events meet your requirements ?\n. ",
    "heridev": "That makes sense, based on my needs seems like maybe It is better to not use angular-xeditable, because when I post my form I would receive different kind of errors and I need to have total control on that and I just want to make one post request for the whole form which includes multiple fields and every field would return different kind of validation errors, thanks\n. that's a great example, thanks for pointing out a posible solution, I'll give it a try, thanks\n. @hungdoan2 FYI: I'm trying to make it work using your example but guess what?\nWhen the request returns an error in Restangular seems like the form is already removed(hidden) so not able to find the input. :(\nSubscriberService.update(myId, _data).then(function(subscriber) {\n  // seems like here the form is already hidden or at least not present in the DOM\n}, function(errorResponse) {\n  // seems like here the form is already hidden or at least not present in the DOM\n});\nthe only way to make it work is using the examples included in the documentation:\nvar d = $q.defer();\n        $http.post('/api/v1/subscribers/validate_email', _data).success(function(res) {\n          res = res || {};\n          if(res.status === 'ok') { // {status: \"ok\"}\n            d.resolve()\n          } else { // {status: \"error\", msg: \"Username should be `awesome`!\"}\n            d.resolve(res.msg)\n          }\n        }).error(function(e) {\n          d.reject(e.error);\n        });\n        return d.promise;\n. @hungdoan2 I get it, I really apreciate your help and now it is working yaay, let me add the whole example just in case anyone is interested:\nThe service:\n```\nAutoresponderApp\n  .factory('SubscriberService', ['Restangular',\n                                 function(\n                                   Restangular\n                                 ) {\n    var model;\nmodel = 'api/v1/subscribers';\n\nreturn {\n  validateEmailSubscriberUpdate: function(params) {\n    return Restangular.all(model + '/validate_email').post(params);\n  },\n};\n\n}\n]);\n```\nThe controller:\n```\n$scope.validateEmail =  function(data) {\n  var d = $q.defer();\n  var _data = prepareData(data);\n  SubscriberService.validateEmailSubscriberUpdate(_data).then(function(successResponse) {\n    d.resolve()\n  }, function(errorResponse) {\n    d.reject(errorResponse.data.error);\n  });\nreturn d.promise;\n}\n```\nOh and the html looks like:\n<span e-name=\"email\" e-required=\"\" editable-text=\"subscriber.email\" onbeforesave=\"validateEmail($data)\" ></span>\nIn my case, when there is a validation error the server will respond with 422 status and will return the validation error message as well just like this:\n{ data: {error: 'validation error'}, status: 422, statusText: \"Unprocessable Entity }\nSo there you go, thank you again Hung Doan ,let me know if you want me to add this example in any wiki, readme or something, and feel free to close this issue whenever you want. \n. ",
    "Ganzman": "How can i add more   in another container?\n. Sorry I solve that issue but how to disable editable contents after saving?\n. ",
    "sagimann": "+1\nI've done some code changes to support it on my installation:\n1. add '?^ng-form' to the 'require' option in editableDirectiveFactory:\n     require: [overwrites.directiveName, '?^form', '?^ng-form'],\n2. reverse the order of how the directive finds out whether a form exists or not: if e-form is specified, it takes precedence over a parent form/ng-form. Once e-form is found, we lookup either a form or ng-form with the same name in the doc:\n// element explicitly references e-form - take precedence:\n   if(attrs.eForm) { // element not wrapped by <form>, but we hane `e-form` attr\n     var getter = $parse(attrs.eForm)(scope);\n     if(getter) { // form exists in scope (above), e.g. editable column\n       eFormCtrl = getter;\n       hasForm = true;\n     } else { // form exists below or not exist at all: check document.forms\n       for(var i=0; i<$document[0].forms.length;i++){\n         if($document[0].forms[i].name === attrs.eForm) {\n           // form is below and not processed yet\n           eFormCtrl = null;\n           hasForm = true;\n           break;\n         }\n       }\n       var ngforms = $('ng-form[name=\"' + attrs.eForm + '\"]');\n       if (ngforms.length > 0) {\n           eFormCtrl = null;\n           hasForm = true;\n       }\n     }\n   } else if(ctrl[1] || ctrl[2]) {\n       // element does not explicitly reference e-form but already wrapped by form\n       eFormCtrl = ctrl[1] || ctrl[2];\n       hasForm = true;\n   }\nsee if this helps... note I'm using Jquery here... guess I can use angular's liteJQ instead and iterate ng-forms manually instead of using a selector..\n. ",
    "izzusan83": "yes, thanks!\nthe best solution for me is onaftersave=\"EditMenu(param)\"\nThank you.\n. ",
    "konczak": "+1\n. ",
    "atodicebear": "Is there any Update on this ?\nOr anything Implemented that shows us only touched/dirty rows.\nNothing found on this on the Examples at the moment.\nBecause I want in my Code only to save changed Rows.\nBut working with Edit Columns. So it would be later much work to save on server with 1000> Rows if it saves everything and not only $dirty ones.\n. Hey,\ndid you found a solution for Edit with Pagination?\nIam using as well dirPagination and the Problem is Editing something in Page1 then changing to Page 2 it delete/forgets the Changes.\nSomehow to remember it?\n1) Dirty just to call save allways after changing Pages\n2) Just remember Changes \n. @ckosloski \nSomething you are working on wiht Pagination or how to Save the Edited Fields while Changing the Page with Pagination?\n. @ckosloski \nHow can I read the Values of the generated TextFields?\nBecause you use you \"e-name..\" and so on and not \"ng-model\".\nBecause I want to read from every TextField the Data and save them allways onLeaveOfTextField or PageChange in a Factory. If user wants to save then it gets the Data from the Factory.\nIs there something implemented as \"ng-change\" as in Normal Textareas?\nhttps://docs.angularjs.org/api/ng/directive/textarea\nThis could be helpfull\n. I tried with \"save on page change\" but it didnt do the Trick.\nThe Values were deleted faster as the save came.\nThis on Change is what I want to do now.\nWith normal Textareas its working through ng-model+ng-change.\nBut your Editable Textareas dont accept neither ng-model or ng-change.\nThat was the question If it has something implemented like \"ng-change/e-change?\"\n. @ckosloski \nIf i remember correctly I did a workaround with a Factory Method which just saved the Values with e-ng-change and after saving/cancel just delete everything to clear the Factory.\nBut Im not anymore a Member of this Project so for further Questions or Codesnippets I cant help anymore, sorry.. @ckosloski \nMy Problem is more the understanding how everything works together.\nThats not an Issue that i had that was on Purpose to see how it works.\nfor Example thats my saveColumn Function only added console.log:\nsaveColumn(column) {\n      console.log(column);\n      var results = [];\n      angular.forEach(column, function(value) {\n        console.log(value);\n        /*results.push(this.$http.patch('/api/dict_values/' + 28, {\n          user_id: 266,\n        }));*/\n      });\n      return this.$q.all(results);\n    }\n<span editable-text=\"v.value2\" e-name=\"valueTranslate\" e-form=\"valueForm\">\n          {{v.value2 || 'empty' }}\n        </span>\nSituation1:\n<form editable-form name=\"valueForm\" onaftersave=\"$ctrl.saveColumn('valueTranslate')\" oncancel=\"$ctrl.checkCancel()\" ng-show=\"valueForm.$visible\">\nIf i click save output is:\nFirst Console.log = valueTranslate\nFor Each not doing.\nSame Case in for each changed this.Values to column:\nfirst console.log the same\nfor each console.log output ist \nv\na\nl\nand so till value translate is shown.\nSo with Singlequote 'name' we are sending a String in ? Because if change onaftersave=\" 'blahblah' \"\nOutput is blahblah? \nSituation 2:\n\nSame without SingleQuote\nUndefined output allways\nSituation 3:\n\nSending the Form:\nOutput is the last Edited Cell.\nIn all Situations he throws an \nTypeerror $http undefined in the angular.foreach ?\nBut its defined and working because if i set it before the angular.forEach its working?\n```\n    saveColumn(column) {\n      console.log(column);\n      var results = [];\nthis.$http.patch('/api/dict_values/' + 28, {\n          user_id: 266,\n        });\n      angular.forEach(column, function(value) {\n        console.log(value);\n  });\n  return this.$q.all(results);\n}\n\n```\nIn the Example I even changed the Name of the Input Fields in 'name2' but sending onaftersave='name' and everything still works?\nThats why iam asking for a Example which shows the Function how to save the Data in the Databse, if the Example it allready does then I understand it fully wrong?\nMy understanding is:\n1. Name input Fields which are repeated e-name'name'\n2. After editing and click save the Function onaftersave is called\n3. We are giving it the input fields => onaftersave= \" 'name' \" (why singlequote? like this we send a String only, do we ?)\n4. forEach repeat every Row in this Column and save with $http request in Database\n5. Work with promises results and $q so it works\nSo where is my understanding/coding Problem?\nIm grateful for Help :)\n. Ok ok got it it has to be:\nonaftersave=\"$ctrl.saveColumn('valueTranlate')\"\nsaveColumn(column) {\n      console.log(column);\n      var results = [];\n      angular.forEach(this.langV, function(value) {\n        console.log(value._id);\n          results.push(this.$http.patch('/api/dict_values/' + value._id, {\n            user_id: 266,\n          }));\n      });\n      return this.$q.all(results);\n    }\nIt now Loops through every Object fine.\nOnly one Problem it says the \n$http request is undefined ? \nLike mentioned before if I put it before the forEach its working.\nSo how can I Inject $http in the forEach?\nFor Future Coding is there something Implemented as $touched/$dirty or sometihg to only updated the ones which are were Edited?\nBtw if you are on SO\nYOu can post your Answer there and I will Accept it :+1: \nPoints for ya ;)\nhttp://stackoverflow.com/questions/38302877/angular-ui-grid-rowedit-not-working\n. Im using Angularjs 1.5.x Components.\nWill this ($dirty and so on) come in near Future?\nSo at the moment we need to do somehow a Workaround by ourself for only saving Edited ones?\n. Im fine at the moment like it is.\nIf I have free time around I will look in this ;)\n. @ckosloski \nNow the Time has come which I need this or Iam going to Hell :D.\nI need kinda this 2 Functions which are normally there be default in Angularjs\n1. ~~ng-change~~\n2. touched/dirty\nYou mentionend allready that there are not implemented. Could you show me/explain how I can change your Code so that I can implment this Functions?\nNever changed a Code of a Package I used so no clue how to start.\nSo to add to your standards e-name and so on something like ~~\"e-change\"~~ and \nfunctionality to check\nvalied and more\nhttps://docs.angularjs.org/api/ng/directive/ngModel\nOr are there workarounds you or someone else used to get this Funtionalitys?\nThx for Help\nEdit1:\nIam sorry,\nchecked the Pull Requests to see if something on the way found this.\n350\nSo there is allready \"e-ng-change\". Could never find it and in the DEmo its only mentioned once only at the Date Sector.\nWould be nice in the Demo kinda mentioned under Techniques or somewhere that everything is in normal Textarea is implemented here as well. For some kinda dumbheads like me for less Problems :D \nOnly thing left is \"save only touched/edited\" Textareas. Having at the moment Kinda thousands of them and it is Iterating everyone and saving values.\n. You can use the Form Example\nhttp://vitalets.github.io/angular-xeditable/#editable-form\nSetting there 2 Input Fields and then \"onbeforesave\" checking if the 2 INputs are the same ?\n. Got it running now thx :)\nBtw for what is the \"column\" in the saveColumn function?\n// Edit Table Row\n$scope.saveColumn=function() { \n  var results = [];\n  angular.forEach($scope.langV, (value) => {\n    results.push($http.patch('/api/dict_values/' + value.v_id, {\n      id: value.v_id,\n      value: value.value2,\n      user_id: Auth.getCurrentUser()._id,\n      key_id: value._id,\n      lang_id: $scope.select2\n    }));\n  });\n  return $q.all(results);\n};\nI have removed the column in\n$scope.saveColumn = function(column) {\nAnd it is still saving everything normal without Errors.\n. // Edit Table Row\n$scope.saveColumn=function() {\n  var results = [];\n  angular.forEach($scope.langV, (value) => {\n    results.push($http.patch('/api/dict_values/' + value.v_id, {\n      id: value.v_id,\n      value: value.value2,\n      user_id: Auth.getCurrentUser()._id,\n      key_id: value._id,\n      lang_id: $scope.select2\n    }));\n  });\n  return $q.all(results);\n};\nThat is what I did and it is getting the Data from all Fields right with the Depending other Datas.\nCan be closed because it is working.\nOr Discuss for other/me/you why it is working.\n. ",
    "lu4": "Not sure that I remember what it had to do with the project, afaik there's no reason to make the fix since angular-xeditable is targeted at Angular 1 rather than 2, no new projects start with Angular 1 so nobody will ever need the fix, sorry... (((. Yeah, I'll do it. ",
    "GBora": "@gabrieleciech I did not, ultimately I had to run a extra filtering function before I sent my model to the server, the user then saw the sanitised list after the server responded.\n. ",
    "gtarsia": "I accomplished this by including the actual row I want to update like this:\nonbeforesave=\"updateUser($data, row)\" \nThe problem is that in the body of updateUser, row is not updated yet. So you can get to that post-updated point with a setTimeout like this:\njs\nfunction updateUser($data, row) {\n  setTimeout(function() {\n    row.whatever = <actual value>\n  }, 0)\n}\nYou can put that setTimeout after the last then of a Promise as well.. ",
    "kiev78": "highlight the text that is displayed, not the input field.\n. ",
    "bmrinal": "@ckosloski I used some other control for the same. Didn't checked after that. Closing this issue at this time.. ",
    "fixundfertig123": "Hi,\nI must have been tired. Wrote the solution and did not even tested it myself. You are right, it works. I was blindly trusting the docs, in which the attributes \"onbeforesave, onaftersave\" where described without \"data-\" prefix. Adding the prefix solved the problem for me. Howoever, it might me useful to update the docs using the \"data-\" prefix to be conform to HTML5.\nCheers Fritz\n. @ckosloski Great thanks!\n. ",
    "pakTech786": "i have same issue with ng-change.\n<td> <a href editable-bsdate=\"std.payment_date\" e-datepicker-popup=\"dd-MMMM-yyyy\" ng-    change=\"p_date(std)\">{{ (std.payment_date| date:\"dd/MM/yyyy\")||today}}</a></td>\ni am trying to get date in controller when one is selected.....\n@itskashi have u got it working??? \n. hey got it working by using   \"onaftersave=\"p_date(std)\" instead of ng-change or ng-click.\n. i want this validation too......so is there any solution???\n. ",
    "Sheparzo": "This is happening to my app too\n. ",
    "daggmano": "I'm unable to find any reference to this online, but I expect the 'e' character is required for specifying exponents (2.7e2 = 270).  However, the allowance of repeated 'e' chars doesn't make sense, and xeditable does not seem to interpret the result correctly.  Nonetheless, this may be down to HTML5 ather than an xeditable bug. \n. Fiddle is broken as xeditable script has incorrect mime type and will not execute.\n. ",
    "Voxis": "Here is my two cents:\nI can actually do sorting and pagination together... Here is the link \nA JSFiddle Example\nIt uses another directive called \"dirPagination\" from AngularUtils & updated AngularJS version to 1.4.8\nModified the base code from angular xeditable's table row edit. \nThe problem I have is that, the edit mode does not \"close\" when the item being edited goes to another page. \nScenario 1: \nEdit and second Item (User 2) and click on the Name sorting link at the top of the table.\nYou can see that User 8 is in edit mode now. \nScenario 2: \nDelete items until it only have 5 , and do the Scenario 1. \nIf the item being edited is still in the page. the edit mode does not follow \nMaybe it is also caused by some other libraries. so i dont know.\nMy question is: is there a scope flag in the library so it tells you there are some items in edit mode. \nSo that at least I can check this flag to prevent sorting. \n. The datepicker from angular-ui is picking with your local (browser) time. \nYou have to know what your desired output is and do some pre-processing and/or postprocessing...\nNot sure if angular-ui's datepicker has any built-in date-options to pick in UTC time, I would like to have that. \n. ",
    "Kreshnik": "Just found out that the issue has to do with the method controller. editable-text=\"tree.tree_name\" the tree model in this case belongs to another controller, while onaftersave=\"qa.updateTreeTitle(tree)\" calls a method in another controller. And this seems not to work somehow.\n. ",
    "bokrizan": "i have similar problem, and fix is, you need to set submit button inside editable-form <form></form>\n. Thank you for your reply. Please could you give me a little more detail to explain this, because I did not quite understand.\nIf I return string before $http.post, form stay opened, but if I return string under .error response, form is closed after server response.\nreturn 'open';  //// if return string here, it's working, but in this case, form stay opened on success and on error.\n$http.post(serviceBase + 'cd/saa/' + $stateParams.aaaID + '/config', configCopy, config)\n            .success(function (data, status, headers, config) {\n                Notification.success({message: $filter('translate')('BENCH_EDITED_SUCCESSFULLY'), delay: 3000, positionY: 'bottom', positionX: 'right'});\n            })\n            .error(function (data, status, header, config) {\nreturn 'open';  //// here i need return, but this not working\n                Notification.error({message: $filter('translate')('BENCH_EDITED_ERROR'), positionY: 'bottom', positionX: 'right'});\n            });. I fix this, thanks to @ckosloski. ",
    "SylTi": "typeahead also depend on ui-bootstrap\n. ",
    "ymhuang0808": "May the pull request be merged? Perhaps, there are some indentation problems.\n. Should the PR be resolved by @mhennemeyer ?\n. It seems like that the CSS was only formatted. \n. ",
    "dolzenko": "@eugef I can try, you mean to https://vitalets.github.io/angular-xeditable? Should I also add the rest of the combodate options from https://vitalets.github.io/combodate/#docs?\n. @eugef I have updated to allow passing all the options and added short doc, not sure about https://github.com/vitalets/angular-xeditable/blob/master/docs/js/structure.js :(. Also wasn't able to setup test runner, sorry.\n. ",
    "ljfolino": "I am having a similar issue.  I have found a partial work around for this.  If you set a ng-blur=\"$data=function($data)\" and have the function return a value it should set it correctly.  The issue I am having is the initial filer on show.  Also you have to set a variable to the filter so you will need something like var returnVal = $filter('filter')(data,format);\nreturn returnVal\nI had issues when trying to use return $filter('filter')(data,format);\n. So I figured out how to set the initial filter on the data.  I pass the name of the item into a function and pass the form.  I then do a look up for the item using var editable = _.find(form.$editables, { name: name }); and then update the data on the element using editable.scope.$data = value.  I am using lodash to find the element.\n. The issue seems to be you are missing the form attribute.  You need to define a form and each input needs to point to the form using e-form.  Look at the example on the page for forms.\n. I don't think you can  directly attach the form to the controller.  The form element allows you to bind multiple controls to the form element.  You could then onshow of the form bind the form to the controller at that point.  \nYou may be able to bind the form directly by defining it using bindable-form and giving it a name and using in the controller ctrl.form = <nameofform>.  I have not done that and not sure if it would work.\n. ",
    "markyboryslav": "my temporary work around\neditable-text=\"item.filtered_value\"   onshow=\"getFilteredValue(item)\"\nand\n$scope.getFilteredValue = function(item) {\n         item.filtered_value = /*some changes */ ;\n    };\n. ",
    "dannycsng": "Sorry for late response. I believe this issue resolved. thanks.\nOn Wed, Aug 16, 2017 at 10:01 AM, ckosloski notifications@github.com\nwrote:\n\n@dannycsng https://github.com/dannycsng are you still having an issue?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/410#issuecomment-322800641,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AD8uQC_oaCWEcQCNs-vZ_cJy59YkozRFks5sYwRagaJpZM4HKidW\n.\n. Sorry, this has been awhile and I loss the link to the blog.\n\nOn Thu, Sep 21, 2017 at 8:24 AM, ckosloski notifications@github.com wrote:\n\n@dannycsng https://github.com/dannycsng can you go ahead and close the\nissue please\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/410#issuecomment-331155242,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AD8uQL40D0KS3Od9QiTXYstBK_3TzexPks5skmOrgaJpZM4HKidW\n.\n. \n",
    "Boboss74": "You added some spelling mistakes in your commit.\n. ",
    "ka7eh": "@eugef just updated the commit.\n@Boboss74 I just noticed. Apparently it was introduced here: https://github.com/vitalets/angular-xeditable/commit/3556de527f77478f2c2af40abe54b3ef6e26ca5c.\n. ",
    "bramcordie": "Fiddle was messed up so I switched it with a working plunker: http://plnkr.co/edit/KAYtHhN5tL92xec4L4sP. @ljfolino I'm just editing the example I found in the documentation. Do you mean a form element? A form element would not make sense in the context that I want to use the editable element.\n. ",
    "adamduren": "+1 This would also fix #267. I am building a widget with multiple of these inputs and if you click an input and then click a second input the previous input does not go back to being a label. You must first click the body then click the second input. See screenshot below for example.\n\n. ",
    "etiennecrb": "+1\n. ",
    "patfrat": "+1\n. ",
    "dasdipankar": "<div ng-repeat=\"phonenumber in contact.phoneNumbers\"  >\n             <a href=\"#\" editable-text=\"phonenumber.value\" > \n                {{phonenumber.value}}</a>          \n</div>\nmodified 'item' tag with 'div' and it worked\n. ",
    "VidyaPatil": "Just updated issue . please check \n. Yeah exactly same issue. form validation already there in xeditable plugin. But form with xeditable is not working !!\n. Yes fixed issue!\n. ",
    "shides-ac": "It's the same problem of issue #6 \nin the replies you can find some workarounds but nothing that will work as expected \n. ",
    "tkanapar": "Workaround add the following into your input elements\nclass=\"editable-click\" ng-click=\"$form.$show()\" e-ng-blur=\"$form.$hide()\"\n. ",
    "richfergus": "Awesome - upgrading to (Version 0.1.12 Apr 14, 2016) fixed the \"Form with editable elements should have editable-form attribute\" requirement \n. ",
    "david12341235": "+1\nIt may not make sense as HTML in the element body, since that usually contains the display element (currently selected option). But maybe as an extra attribute like \"e-placeholder\"?\n. ",
    "msenthu": "Thanks for the solution that worked, but still I am getting lot of console errors like below\n\nTypeError: ngModelCtrl.$setValidity is not a function\nError: [$compile:ctreq] Controller 'ngModel', required by directive 'uibDatepicker', can't be found!\n\nBut I do have ng-Model/ e-ng-model that didnt help resolve the error. Also it is not using the format I specified. Any idea?\ne-uib-datepicker-popup=\"yyyy-MMM-dd\"\n. Thanks for the quick reply,  Here is my code i tried different options but both didn't work\n<a href=\"#\"  ng-model=\"lastReviewed\" editable-bsdate=\"lastReviewed\" data-e-datepicker-popup=\"yyyy-MMM-dd\"\n       e-ng-click=\"opened = true\" e-is-open=\"opened\"       >\n        {{ (lastReviewed | date: \"yyyy-MMM-dd\") || 'Not reviewed' }}\n</a>\nAbove code I am not getting the datapicker popup\nand\n<a href=\"#\"  ng-model=\"lastReviewed\" editable-bsdate=\"lastReviewed\" data-e-uib-datepicker-popup=\"yyyy-MMM-dd\" data-e-datepicker-popup=\"yyyy-MMM-dd\"\n       e-ng-click=\"opened = true\" e-is-open=\"opened\"       >\n        {{ (lastReviewed | date: \"yyyy-MMM-dd\") || 'Not reviewed' }}\n</a>\nin the above code I get the datepicker popup but format is different (screen shot below). I would like the date appear as yyyy-MMM-dd format\n\n. If i downgrade my angularjs-xeditable to 0.1.8 then it works as expected. It is not working on 0.1.9 and 0.1.10.\nThanks\n. ",
    "tibetty": "Please kindly help to close it - too long for me to recall the details. . ",
    "semaja2": "I am looking for a similar scenario, if the user has selected X from the list of options, then display XYZ editable fields etc\nAt the moment they need to save the form, then edit again for the ng-show etc to work on those fields\n. Sorry I don't have any example code at the moment, but basically if the field has a value say \"example\" and I change it to \"\" when I use onbeforesave in a form, the $data does not include the field.\nI assume this is due to the field being blank?\n. Apologies I created a quick fiddler and was unable to reproduce my issue, I suspect this may be a issue in my code\n. ",
    "cp15dec": "Stuck in same requirement where I am trying to clear an editable-text field if selection is changed in an editable-select.\nAll these editables are enclosed inside a form element which got Save/Cancel button. \nI am able to clear the text field by doing something like (in controller):\nelement.$form.txtField.$setViewValue\nelement.$form.txtField.$render\nOn Cancel the form value get reverted back to original.\nBut on Save it do not save the cleared value for text field and displays old value. Form goes in non edit mode.. ",
    "ibirrer": "Thanks for your response. That's what I am actually doing. Just wanted to inform you about this glitch in the example code.\n. ",
    "sveller": "@eugef, \nno luck - even if I hardcode \ninputDatePicker.attr('datepicker-popup', 'dd/MM/yyyy' );\nI still get date shown the same way as before\nTue May 15 1984 00:00:00 GMT-0400 (Eastern Daylight Time)\n. ",
    "johngomersall": "I'm new to x-editable and noticed this too.  I fixed it by commenting out the e.PreventDefault() line towards the end of editableDirectiveFactory (line 129 of the source or line 962 of the un-minified distribution).\nCould figure out a way of changing the behaviour without changing the code though...\n. I tried it with the Master at the time I posted my comment but looks like the lines have moved since then.  Haven't tried on the latest Master\n. ",
    "edmedo": "This remains an issue with 0.2.0. I've forked will attempt to work on a solution for this using https://github.com/vitalets/angular-xeditable/pull/311 as a base.\n. Ok, this occurs if you apply stopPropagation to any of the editable wrappers or elements. This was required for me due to other events firing attached to elements below the editables.\nIt works fine just using the library normally so; user created issue, at least on my part.\n. Thanks @ckosloski, I did attempt that method but it also doesn't seem to work:\nhttps://jsfiddle.net/edgiles/7ap9xxce/1/\n. Ah, ok good stuff, I will await the new build then. Thanks for your help.\n. Hi @eugef \u2013 sorry to ask but; how is it looking for a release today?\n. Hi @ckosloski - did those changes get merged? Using the current master branch, now e-show-weeks and e-starting-day work fine, but e-min-date doesn't work. (I've also tried e-minDate, as you suggested above)\n. Are you definitely including xeditable.css in your source?\n. ",
    "wetternest": "edmedo: which version of angular-xeditable did you use?\n. setting buttons = 'no' deactivates editableOptions.blurElem\nself.editorEl.attr('blur', self.attrs.blur || (self.buttons === 'no' ? 'cancel' : editableOptions.blurElem));\nsee code at https://github.com/vitalets/angular-xeditable/blob/master/src/js/editable-element/controller.js#L283\nshure one can set self.attrs.blur for every element, but setting this in the editableOptions for all elements at once would be much more convenient!\n. thank you for your fix! i will test it as soon as possible, unfortunately i don\u2019t have much time at the moment =(. ",
    "Jmenache": "Here : #448 \n. ",
    "Ireisme": "I thought I saw it in the commits for the 1.11 release, but on a second look you're right and it's not there.  I'll give building it locally a shot.\n. I built the latest version of the code locally and added it to the plunkr.  Which did remove the warnings, but the same errors are still occurring.\nI did a bit of digging and it appears to break specifically on anything past ui-bootstrap version 1.1.0.  Taking a look at the commits for that release and it appears that https://github.com/angular-ui/bootstrap/pull/5274 might be causing the issue.\nIt looks like the ng-model attributes live on the new <div> that is wrapping the calendar control which isn't destroyed when the calendar is closed.  Since xeditable is re-creating the uib-datepicker each time it might be that the ng-model stuff is being initialized out of order or something.\nRegardless using ui-bootstrap 1.0.3 seems to work fine until the issue is resolved.\n. Thanks @ckosloski!  Hopefully ui-bootstrap makes that change.\n. ",
    "jobski": "@ckosloski Tried your fix but as @geostima said, it didn't work.\nWhen I open the datepicker for the second time, I get these errors in chrome:\nError: [$compile:ctreq] http://errors.angularjs.org/1.5.3/$compile/ctreq?p0=ngModel&p1=uibDatepicker\n    at Error (native)\n    at https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:6:416\n    at jb (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:70:406)\n    at jb (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:70:473)\n    at n (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:65:259)\n    at https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:76:125\n    at g (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:58:140)\n    at https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:57:281\n    at https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:62:133\n    at d (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:59:122) <li ng-transclude=\"\">(anonymous function) @ angular.js:13424(anonymous function) @ angular.js:10137ja @ angular.js:9625n @ angular.js:9022g @ angular.js:8333n @ angular.js:9017g @ angular.js:8333(anonymous function) @ angular.js:8213(anonymous function) @ angular.js:8551d @ angular.js:8350l @ angular.js:9072(anonymous function) @ angular.js:25323m.$digest @ angular.js:16869m.$apply @ angular.js:17133(anonymous function) @ angular.js:24813n.event.dispatch @ jquery.min.js:3r.handle @ jquery.min.js:3\nangular.js:13424 TypeError: Cannot read property 'getFullYear' of undefined\n    at _refreshView (https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/1.3.2/ui-bootstrap-tpls.min.js:7:25823)\n    at refreshView (https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/1.3.2/ui-bootstrap-tpls.min.js:7:22763)\n    at init (https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/1.3.2/ui-bootstrap-tpls.min.js:7:25624)\n    at link (https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/1.3.2/ui-bootstrap-tpls.min.js:7:29743)\n    at ja (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:80:35)\n    at n (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:65:220)\n    at https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:76:125\n    at g (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:58:140)\n    at https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:57:281\n    at d (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:59:122) <table class=\"uib-daypicker\" role=\"grid\" aria-labelledby=\"{{::uniqueId}}-title\" aria-activedescendant=\"{{activeDateId}}\" ng-switch-when=\"day\" tabindex=\"0\">(anonymous function) @ angular.js:13424(anonymous function) @ angular.js:10137ja @ angular.js:9625n @ angular.js:9022(anonymous function) @ angular.js:9380g @ angular.js:8333(anonymous function) @ angular.js:8213d @ angular.js:8350l @ angular.js:9072(anonymous function) @ angular.js:29434q @ angular.js:321(anonymous function) @ angular.js:29433m.$digest @ angular.js:16869m.$apply @ angular.js:17133(anonymous function) @ angular.js:24813n.event.dispatch @ jquery.min.js:3r.handle @ jquery.min.js:3\nTypeError: Cannot read property 'getFullYear' of undefined\n    at _refreshView (https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/1.3.2/ui-bootstrap-tpls.min.js:7:25823)\n    at refreshView (https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/1.3.2/ui-bootstrap-tpls.min.js:7:22763)\n    at init (https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/1.3.2/ui-bootstrap-tpls.min.js:7:25624)\n    at link (https://cdnjs.cloudflare.com/ajax/libs/angular-ui-bootstrap/1.3.2/ui-bootstrap-tpls.min.js:7:29743)\n    at ja (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:80:35)\n    at n (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:65:220)\n    at https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:76:125\n    at g (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:58:140)\n    at https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:57:281\n    at d (https://ajax.googleapis.com/ajax/libs/angularjs/1.5.3/angular.min.js:59:122) <table class=\"uib-daypicker\" role=\"grid\" aria-labelledby=\"{{::uniqueId}}-title\" aria-activedescendant=\"{{activeDateId}}\" ng-switch-when=\"day\" tabindex=\"0\">(anonymous function) @ angular.js:13424(anonymous function) @ angular.js:10137ja @ angular.js:9625n @ angular.js:9022(anonymous function) @ angular.js:9380g @ angular.js:8333(anonymous function) @ angular.js:8213d @ angular.js:8350l @ angular.js:9072(anonymous function) @ angular.js:29434q @ angular.js:321(anonymous function) @ angular.js:29433m.$digest @ angular.js:16869m.$apply @ angular.js:17133(anonymous function) @ angular.js:24813n.event.dispatch @ jquery.min.js:3r.handle @ jquery.min.js:3\n. ",
    "anthofo": "Same problem for me : there is no error thrown, but the second time I try to edit a date field, the input field becomes empty.\n. ",
    "kuceram": "Upgrading the plugin, I could not open the date picker at all. It just doesn't work and it doesn't throw any error. However for latest angular bootstrap it works, see https://github.com/vitalets/angular-xeditable/issues/466\n. The setup was:\nangular-bootstrap: 0.13.4\nangular: 1.4.10\nangular-xeditable: 0.2.0\nbut maybe we can close it as it works with the newest version of angular-bootstrap...\n. ok, make sense...thanks anyway.\n. Well, I did but non of them helps me to solve both issue I rose. It seems to me that there is a bug in xeditable plugin as it doesn't handle the ng-model properly, however I didn't dig deep into the code...\n. Sure, here it is: http://plnkr.co/edit/3Z6wvZROmdR6d1uJlRX5?p=preview. When you click on the date it throws an error to console...\n. This actually fixes it...\n. ",
    "afgonzal": "@ckosloski the demo and your plunkr have the same issue, the styles of the datepicker are wrong (looks huge etc) \nlike it\u00b4s ignoring the boostrap styles for the picker\n. Great, is that version downloadable?\n. sure, np, is it under github?\nlink?\nthanks\n. ",
    "bostrom": "@eugef Seems that tests don't even run cleanly in master. Or am I doing it wrong by starting grunt server and navigating to http://localhost:8000/test/e2e/dev-test.html?\n\n. Also, generating docs failed when I tried grunt build. \nRunning \"shell:jsdoc\" (shell) task\n/bin/sh: node_modules/grunt-jsdoc/node_modules/jsdoc/jsdoc: No such file or directory\nWarning: Command failed: \"node_modules/grunt-jsdoc/node_modules/jsdoc/jsdoc\" -c jsdoc.conf.json > jsdoc.json\n/bin/sh: node_modules/grunt-jsdoc/node_modules/jsdoc/jsdoc: No such file or directory\n Use --force to continue.\n. @ckosloski With a clean clone of master after having run npm install, jade fails with the above error message. The jade task is included in the build task, so even that would fail. \nHowever, excluding the 'jade' task from build and running\ngrunt build server\nand navigating to \nhttp://localhost:8000/test/e2e/dev-test.html \nseems to work. And sure enough the tests pass in master after building (I didn't realize that the tests were run against the built lib).\nSo yes, there seems to be some issues with my fix. I'll look in to it.\n. But @eugef @ckosloski can we do something about the failing jade task? Are some dependencies missing or what?\n. @eugef OK thanks. \nSo after some more test runs it seems that they do in fact pass. They failed earlier probably because my computer is slow or because I did some other browser tasks at the same time. \nThe only tasks that failed were those that check the disabled status of an input field while some XHR request is processing and those tests are probably prone to errors when the XHR and test script don't sync. \nSo anyways, this fix doesn't seem to break anything. \n. Hmm, the tests did pass when I ran them, so maybe there's some browser\nissues? What browser are you using?\nI'll try to find the time to fix it this week if we can pinpoint the\nproblem.\nOn 3 May 2016 00:16, \"ckosloski\" notifications@github.com wrote:\n\nI'm pretty sure that editable-row is broken with this fix due to the e.parents\nis not a function error.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/pull/454#issuecomment-216366893\n. Great @ckosloski \nSorry for not catching that bug. My tests ran clean, though. It would be interesting to know under which circumstances e.parents isn't a function. But nevermind, thanks for the fix. \n\nAh, but looking more closely, the tests failing are in doc tests, which I didn't run. So that explains it. \n. ",
    "afroz786": "\nas u can see, the pop up button is not proper. and the code is also not complete.\n. Then after every row the user has to save according to my current requirement. Guess have to make use of normal select box and table for this.\n. ",
    "vqanguyen": "The following code\ne-uib-datepicker-popup=\"yyyy-MM-dd\" \ndoes not work\n```\nIt shows errors:\nangular.js:12783 Error: [$compile:ctreq] Controller 'ngModel', required by directive 'uibDatepickerPopup', can't be found!\nhttp://errors.angularjs.org/1.4.10/$compile/ctreq?p0=ngModel&p1=uibDatepickerPopup\n    at angular.js:68\n    at getControllers (angular.js:8432)\n    at getControllers (angular.js:8439)\n    at nodeLinkFn (angular.js:8570)\n    at compositeLinkFn (angular.js:7965)\n    at nodeLinkFn (angular.js:8561)\n    at compositeLinkFn (angular.js:7965)\n    at compositeLinkFn (angular.js:7968)\n    at publicLinkFn (angular.js:7845)\n    at c.n.show (xeditable.min.js:6)\n```\ni have the following versions:\nangular 1.4.0, \nbootstrap 3.3.0\nangular-bootstrap 1.3.0\nangular-xeditable 0.1.12\nPlease helps. Thanks you.\n. ",
    "ianellis90": "Excellent thanks for the help @ckosloski. \n. @ckosloski why does it work for the span above the date picker field then? If you type in the field before the datpicker field you can see the console logs from the e-ng-change method. That's what has me confused.\n<span e-ng-change=\"onAccNumChange(mappedAccount, $data)\" editable-text=\"mappedAccount.peaceAccNum\" e-form=\"tableform\">\n                          {{ mappedAccount.peaceAccNum || '' }}\n              </span>\nThanks for your help on this.\n. I'm trying to figure out only the rows that one or more columns have been changed in therefore the onbeforesave won't work because it gives me all the rows before the save.\nThe reason being I don't want to save/update all of the table back to the DB just the elements which change cause the table could get large in the future.\nDo you know of another way to only get the rows which some columns have being changed?\n. @ckosloski sorry for my negligence but I'm quite new to javascript/angularJS and I'm wondering how can I build this from source to generate the xeditable.js file and get the new change?\n. @ckosloski sorry just seen that I didn't thank you.... Thanks very much for the help it worked a treat!!\n. Thanks for the work @ckosloski. When will this be merged I could really do with this functionality?\n. ",
    "jkrikunenko": "@ckosloski Thanks, I've updated pull request, delete unnecessary files.\nAnd yes, all tests are passed.\n. @eugef done. Please, take a look.\n. ",
    "TomOffringa": "Hi,\nThanks for referencing this error @ckosloski! I looked through the issues for something similar for my issue https://github.com/vitalets/angular-xeditable/issues/481 but I guess I oversaw this one. \nThe changes in this PR do indeed fix my issues, so if this PR doesn't break anything else, this would be a good solution. \n. ",
    "NalinSajwan": "Hi, when will this be available in a release?\n. Sorry this was a mistake this got mixed up.\n. ",
    "himmittal": "In IE 11, when activationEvent is set to focus, on click event x-editable element blurs out.\nCan we have multiple activationEvent to enable edit mode through events like focus and click. Both would enable edit mode.\n. Another Issue I found is that when I have editable-select element and any value is selected from drop down it loses its focus and therefore user navigating from keyboard has to tab through all the items again.\n. ",
    "zollinger": "I experience the same issue. The official demo has the same issue. Just try opening the datepicker twice:\nhttps://vitalets.github.io/angular-xeditable/#bstime\n. ",
    "bojannyc": "That works, thank you!\n. ",
    "Strae": "@ckosloski to be honest I'll prefer to have a simple <label> or <span class=\"input-label\"></span>, a popover can be an enhancement but not a replacement..\n. ",
    "navinSing": "thanks !\n. thanks !\n. ",
    "aashishab": "It is not giving any error. It is not calling its success method or not invoking it.\n. ",
    "sushil-rxr": "Yeah, thanks for pointing out. I had the code but did not mark it as code, so it was not appearing :-)\nIs it also possible to override the input templates using the approach you suggested? And is it possible to specify it for only particular instance rather than globally?\n. ",
    "Arrow7000": "That doesn't work. It looks like it's adding the right classes and attributes to the textarea element - going by the console output - but it's not actually resizing. \nThe first textbox on the left is a textarea. As you can see it stays small and doesn't resize on typing into it. \nI've done it manually in the console to ensure I'm not making a mistake in selecting the elements with Angular. \n\nEDIT although actually on hovering over the console elements it looks like the first element in the console is the first textarea, which doesn't seem to have gotten any of the attributes...\n. Sorry last fiddle was wrong. Here is the right one: http://jsfiddle.net/NfPcH/15381/\n. Oh wow this actually works. Thanks @ckosloski! :) :+1: \n. ",
    "celluj34": "Probably because angular.element returns a jqLite object, not a jQuery object.\n@Arrow7000 you could try attaching your resize function to the jqLite prototype.\n. ",
    "cesiya23": "I solved this problem with onshow and onhide attrs.\nhtml\nhtml\n<span type=\"button\" \n  editable-text=\"vm._remark\" \n  onbeforesave=\"vm.updateRemark($data)\" \n  onshow=\"vm.bindEventToCancelButton($event)\" \n  onhide=\"vm.bindEventToCancelButton($event)\" \n  e-placeholder=\"enter\">\n  {{'addRemarkName' | i18n}}\n</span>\ncontroller.js\n``` javascript\nctrl.bindEventToCancelButton = bindEventToCancelButton;\nctrl.unbindEventToCancelButton = unbindEventToCancelButton;\nctrl.updateRemark = updateRemark\nfunction bindEventToCancelButton () {\n  $('.editable-buttons [type=button]').bind('click', ($event) => {\n    $event.stopPropagation();\n  });\n}\nfunction unbindEventToCancelButton (event) {\n  $('.editable-buttons [type=button]').unbind('click');\n}\nfunction updateRemark (data) {\n  //...\n}\n```\n. ",
    "chedched": "Yes, it didn't work. But as said, I can't see anything like that in the code, so I think that functionality is just not implemented.\n. I just created one: http://plnkr.co/edit/l4ewWsVvvAg1OabXm2c3?p=preview. You can see the non-working xeditable at the top and the working typeahead without xeditable at the bottom.\n. Yes, that's the solution. Thank you so much for your help, I really appreciate it.\n. ",
    "geoalex89": "ok thanks!! \n. ",
    "cliffordfajardo": "@ckosloski - not anymore. You can close this out. ",
    "codeshri": "I am getting the following error when trying to use datepicker inside form/table.  Also when i set e-ng-required= inside  element it doesn't apply required to  datepicker input element it applies that to a div. Can you please let me know when will the new build available for download?   Hopefully that will fix error that i am getting.      Error Message:  angular.js:13642 Error: [$compile:ctreq] http://errors.angularjs.org/1.5.6/$compile/ctreq?p0=ngModel&p1=uibDatepicker\n    at Error (native)\n    at http://localhost:53928/bower_components/angular/angular.min.js:6:412\n    at ib (http://localhost:53928/bower_components/angular/angular.min.js:71:437)\n    at ib (http://localhost:53928/bower_components/angular/angular.min.js:72:1)\n    at n (http://localhost:53928/bower_components/angular/angular.min.js:66:215)\n    at http://localhost:53928/bower_components/angular/angular.min.js:77:99\n    at g (http://localhost:53928/bower_components/angular/angular.min.js:58:429)\n    at http://localhost:53928/bower_components/angular/angular.min.js:58:67\n    at http://localhost:53928/bower_components/angular/angular.min.js:62:430\n    at d (http://localhost:53928/bower_components/angular/angular.min.js:59:422) (anonymous function) @ angular.js:13642(anonymous function) @ angular.js:10287ia @ angular.js:9759n @ angular.js:9156g @ angular.js:8459n @ angular.js:9151g @ angular.js:8459(anonymous function) @ angular.js:8339(anonymous function) @ angular.js:8677d @ angular.js:8476l @ angular.js:9206(anonymous function) @ angular.js:25687$digest @ angular.js:17220$apply @ angular.js:17486(anonymous function) @ angular.js:25177Rf @ angular.js:3487d @ angular.js:3475\nangular.js:13642 TypeError: Cannot read property 'getFullYear' of undefined\n    at _refreshView (http://localhost:53928/bower_components/angular-bootstrap/ui-bootstrap-tpls.min.js:7:26023)\n    at refreshView (http://localhost:53928/bower_components/angular-bootstrap/ui-bootstrap-tpls.min.js:7:22963)\n    at init (http://localhost:53928/bower_components/angular-bootstrap/ui-bootstrap-tpls.min.js:7:25824)\n    at Object.link (http://localhost:53928/bower_components/angular-bootstrap/ui-bootstrap-tpls.min.js:7:29943)\n    at http://localhost:53928/bower_components/angular/angular.min.js:16:230\n    at ia (http://localhost:53928/bower_components/angular/angular.min.js:81:35)\n    at n (http://localhost:53928/bower_components/angular/angular.min.js:66:176)\n    at http://localhost:53928/bower_components/angular/angular.min.js:77:99\n    at g (http://localhost:53928/bower_components/angular/angular.min.js:58:429)\n    at http://localhost:53928/bower_components/angular/angular.min.js:58:67 \n. Thank You!\n. Issue is fixed. ",
    "miseeger": "Great stuff. Working fine! Just came across and missed that feature. Thx guys!\n. ",
    "StephenStrickland": "I found a temporary fix by adding: ng-hide=\"$form.$visible\" to every tag that is using the editable directive. But surely this would be included in the directive.\n. That would be the issue. My path for xeditable.css was mispelled. \n. ",
    "EvanBurbidge": "If you use the following line of code in the render function of the ediableCheckbox directive it will allow a span to be present for styling purposes\nthis.inputEl.parent().append(\"<span></span>\");\nChanging the part of the code to this will allow the span to be present in the HTML for styling.\n. ",
    "chasingtheflow": "I'm having a similar issue, I think. Except that for mine the editable vs read-only states seem to be flipped from what I expected / understood from the documentation. Unless I misunderstood. But when I have edit-disabled=\"false\" the field is not editable but when I have edit-disabled=\"true\" the field is editable. I thought that it should be the reverse.\n. So when I recreate it with just the bare-bones stuff required it behaves correctly in plunkr (http://plnkr.co/edit/uHnPJ0onnsKW90kzynLK?p=preview), but doing the same thing in my (much larger) app it's doing the opposite. I'm trying to figure out what's wrong, though it's likely on my end...\n. Source for this particular piece of the template:\n\nRendered output:\n\nNot sure if this helps at all, but if you can spot something I'm doing wrong here it would be appreciated.\n. Yeah, but in this case I did not change the value of the published flag \u2013\u2013 it was the same since load time. Also, the reverse is also happening, if I navigate to a model which is not published then I see the opposite:\n\n. So think I figured this out in the end and it is a result of edit-disabled not being watched. I was thinking that this was set from load time but in fact the value is being updated slightly after the initial load, so I'm consistently getting the behavior from the previously active item. Which makes sense.\nI'll resolve by using an approach similar to the ng-if approach suggested here https://github.com/vitalets/angular-xeditable/issues/337#issuecomment-123011314\n. ",
    "fhurta": "Any plans to make edit-disabled watched in the near future? It would be really helpful\n. ",
    "ehsan-hakimi": "Hi Ruben,\nI am a SharePoint developer as well and use xeditable in my SP hosted app. You can use Angular and xeditable in SP hosted or provider hosted app in SharePoint. Please have a look at this URL\nhttps://www.pluralsight.com/courses/building-sharepoint-apps-spa-angularjs\nI have used xeditable within SP and you can see a sample in issue number #540 \nBest regards,\n. Hi Ckosloski,\nI am referring to this section of document\nhttp://vitalets.github.io/angular-xeditable/#editable-row\nin html section, add/edit/del button doesn't have any type. (however save/cancel button have it).\n```\n  form \n\n\n            save\n          \n\n            cancel\n          \n\n\nedit\ndel\n\n\n\n\nAdd row\n\n```\nThanks\n. I think, you need to add type=\"button\" to your Edit button in your html code. This solved my issue.\n. Thanks for your answer Cosloski,\n1- No error in console as you can see in screenshot attached. and as you can see in display mode it has value.\n2-  here is the code that I populate tl. This is a SharePoint app that I am writing with Angular so the service layer is a SharePoint REST call which fetch data and show them in JSON format\n```\n        $.when(SharePointJSOMService.getAllTimelogsByREST($scope, TimeLogListName,timesheetID))\n          .done(function(jsonObject) {\n            console.log('in ctrl when SharePointJSOMService.getAllTimelogsByREST');\n            angular.forEach(jsonObject.d.results, function(tl) {\n              $scope.timesheet.timelogs.push({\n                TLID: tl.Id,\n                title: tl.Title,\n                logDate: tl.TSLogDate,\n                startTime: tl.TSStartTime,\n                finishTime: tl.TSFinishTime,\n                logBreaks: tl.TSLogBreak,\n                subTotalMinutes: tl.TSLogSubtotalMinutes\n                //totalHours: convertMinuteToHour(tl.TSTotalMinute)\n              });\n            });\n          //$scope is not updating so force with this command\n          if (!$scope.$$phase) {\n            $scope.$apply();\n          }\n          console.log(\"time logs count is = \"+$scope.timesheet.timelogs.length);\n          })\n          .fail(function(err) {\n            console.info(JSON.stringify(err));\n          });\n```\n3- nothing happen by adding/removing e-datepicker-options.\nThanks\n\n. It is there. As you can see in above controller code\nangular.forEach(jsonObject.d.results, function(tl) {\nd.result object (which is JSON result from a call to DB) put in tl\nand 4 line below it, it will populate date field using below statement\nlogDate: tl.TSLogDate,\nthen populated object (including logDate field and other fields) push in timelogs array in scope as below \n$scope.timesheet.timelogs.push({\nAlso in html (which I didn't mention its entire code), I will get $scope.timesheet.timelogs and using \n<tr ng-repeat=\"tl in timelogs\"> I will make a table of rows. I show each row of timelogs as a tl .\nThat is the reason which {{tl.logDate| date : \"yyyy/MM/dd\": \"+1000\"}} (mentioned in my first comment code) will show logDate correctly in display mode because tl.logDate has value. But as soon as I press edit in any row which this code will be run \n <span e-form=\"timeLogForm\" editable-bsdate=\"tl.logDate\" e-ng-model=\"tl.logDate\" > then it will show empty as a value of date (which is the case of issue here)\n. Thanks a lot Ckosloski, \nadding new Date(tl.logDate) to the controller while populating data fix my issue. tl.logDate was a C# date field so I was able to work with that but not a JS date field. Sorry for my mistake and appreciate for your time. \nBest regards,\n. Please close this.\n. As a suggestion, I have added this change to my code. You can apply it into the css of the module. In table row in edit mode, it will increase row vertical space. I checked and find out that it is due to this line code in CSS\n.editable-wrap {white-space: nowrap;}\nindeed if you change it to be \n.editable-wrap {white-space: normal;}\n.editable-wrap .editable-error{white-space:nowrap;}\nthen it work better. It won't increase space in edit mode unless there is a validation message that should be appear there. \nBest regards,\n. Thanks so much\n. ",
    "artemgrygor": "@eugef any particular date when it will be published to NPM?\n. @eugef fixed, thank you!\n. @vitalets @eugef Guys, when do u plan to publish it at NPM?\n. It's impossible to use package with such error! @eugef @vitalets @atodicebear \n. ",
    "nickshiling": "+1 to NPM publishing date question.\nThanks\n. ",
    "jerimiahbaldwin": "Thank you!\n. ",
    "Burnett01": "Not sure what happened here, but the code removed by @ckosloski  is still available:\nRemoved:  https://github.com/vitalets/angular-xeditable/pull/500/files#r70768015\nStill there:  https://github.com/vitalets/angular-xeditable/blob/master/dist/js/xeditable.js#L798\n\nThis needs to be addressed asap. I just ran into an issue where a scope watcher did not exist, yet the loop was called and it failed miserably. \nangular.min.js:89 TypeError: Cannot read property 'length' of null\n  at EditableController.self.hide (http://localhost:3000/javascripts/libs/xeditable.min.js:801:48)\n  at http://localhost:3000/javascripts/libs/xeditable.min.js:1326:18\n  at Array.forEach (native)\n  at Object.q [as forEach] (http://localhost:3000/javascripts/libs/angular.min.js:7:280)\n  at Object.$hide (http://localhost:3000/javascripts/libs/xeditable.min.js:1325:15)\n  at Object.$cancel (http://localhost:3000/javascripts/libs/xeditable.min.js:1350:12)\n  at http://localhost:3000/javascripts/libs/xeditable.min.js:1190:50\n  at Array.forEach (native)\n  at Object.q [as forEach] (http://localhost:3000/javascripts/libs/angular.min.js:7:280)\nIf you pretend keeping the loop @ \"https://github.com/vitalets/angular-xeditable/blob/master/dist/js/xeditable.js#L798\", you must make sure to only call it when the $$scope.watchers exist: \njavascript\n// Check if a watcher exists\nif ($scope.$$watchers != null) {\n  // Manually remove the watcher on 'has-error' to prevent a memory leak on it.\n  for (var i = 0, len = $scope.$$watchers.length; i < len; i++) {\n    if ($scope.$$watchers[i] !== undefined && $scope.$$watchers[i].last && $scope.$$watchers[i].last !== undefined &&\n      typeof $scope.$$watchers[i].last === 'object' && \"has-error\" in $scope.$$watchers[i].last) {\n    $scope.$$watchers.splice(i, 1);\n    break;\n    }\n  }\n}\n@eugef \n. ",
    "davicente": "Please, could you add @Burnett01 correction??    \n\nif ($scope.$$watchers != null) {\n\nIt 's blocking\n. ",
    "dunkersa": "I seem to be having a similar issue.  If $data is null when the form becomes editable, $data never changes no matter what I input.  If there's already a value there, though, $data updates just fine.\n. ",
    "ttonyh": "@eugef I'd be happy to. What's the documentation procedure for this project?\n. @eugef Docs have been updated per your request, please review when you get the chance. Thanks :-)\n. @ckosloski Ok, will do. Thank you!\n. ",
    "2947721120": "1 did not see the effect of search\n\n2 date and time can enter additional text\n\n. https://2947721120.github.io/angular-xeditable/\nThe url has been translated to Chinese Simplified (zh_cn)\nAnd the way that you say, if there is anything I need to be translated into zh_cn\nYou can give me!...\n. ",
    "onceaspammer": "Not possible atm, I might submit a pull request for this when I have time.\n. ",
    "azizultex": "I need this feature too! any udpate?\n. ",
    "frontendplace": "Thanx I did that now. But thought It would be better to mimic the same input submits as a normal form submit and register the name of the submit button.\n. ",
    "stibay": "Found a temp fix by setting Id on the added row and sorting in the view by Id. Then I can use push instead.\n. ",
    "sudheerDev": "@ckosloski that would be great thanks.\n. ",
    "Moghul": "Is there a reason in the first place why that has to be !important? I understand the need for it to be inline for functionality reasons, but right now I'm having a hell of a time juggling display values because of this.\nI'd appreciate it if you removed the !important and added a note in the documentation that this needs to be inline.. Perhaps I am missing something. In order for me to override or overwrite this locally don't I either have to: \na) Edit the css file from your library locally\nb) Use more !important tags in my own css files\nIs there a better way? . \n. ",
    "christianmalek": "My fault. I forgot the CSS file.\n. ",
    "spanevin": "Shouldn't it be in devDependencies section in this case? I thought that dependencies was for runtime deps.\nSorry if it's a stupid question but I'm a very new angular + npm developer. My worries are that if I compile it using webpack, extra code could get into compiled scripts.\n. I removed angular and moment from dependencies, killed these packages and did recompilation. Result scripts are the same as before. So, I don't see any reason of pulling these packages along with angular-xeditable package. Please remove these dependencies from package.json, dependencies section. I believe that bootstrap can be removed too.\nActually I see optionalDependencies section in the package.json, shouldn't it be declared here? According to project home page, the only required dependency is angular, and there are some optional, like angular-ui bootstrap and ui-select. Nothing is said about jquery and moment at all.\n. Just read description of optionalDependencies secion in npm documentation https://docs.npmjs.com/files/package.json\nIt can't be used in the way I thought. So there should be another way to specify optional runtime dependencies, or you can just describe it in readme/documentation.\n. ",
    "jjgonver": "\nYes. that is.\n\"angular-ui-bootstrap-bower\": \"1.3.3\"\nI'm not sure. I make a copy/paste from an example.\n. No errors in console. \nIn the controller I load in $scope.incidence all the fields from incidence database and finishDate is a Date field.\nI try to make a plunker.\n. Do you have a base plunker with dependencies to put my code?\nThanks\n. Sorry for the late reply. Worked for me!. \n",
    "matthew-b-payne": "I also have a similar issue.   If a hard code the date it works fine. \n$scope.user = {\n        dob: new Date(1984, 4, 15)\n    };\ne.g.\nHowever, if the user is loaded.\n$scope.loadUser = function () {\n        $scope.user = UserService.get({id: id});\n    };\nThe date in the text box is empty.  The calendar popup is set to the correct date though. \n. ",
    "Irikos": "Struggled a bit with this problem as well. It turns out, as mentioned earlier, that you need to conver the data to JS Date.\n      campaign.dateStart = new Date(campaign.dateStart);\n\ndid it for me.. ",
    "jonathankraemer": "Sorry, I forgot to mention: I am trying to display the link in red, but\nlike I said: I don't want to change the editable-link css altogether\nbecause it's supposed to be in red only in some cases within a page.\n\nJonathan Kraemer\nOn Tue, Aug 30, 2016 at 11:53 AM, ckosloski notifications@github.com\nwrote:\n\nAre you trying to display the text red in the input field or when it's\ndisplayed as a link?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/527#issuecomment-243487243,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEP6b52tDq_4shiwtyJmODyjBbdGyeakks5qlFHugaJpZM4JwriM\n.\n. Hey, I am so sorry I only now realized class=\"\" and ng-class=\"\" were not\nworking because my code wasn't even running. Bug in our code.\n\n\nJonathan Kraemer\nOn Tue, Aug 30, 2016 at 5:06 PM, ckosloski notifications@github.com wrote:\n\nDid you try using ng-class?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/527#issuecomment-243581054,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEP6b_UqFRbSeJK6OTLDznTDg4mWG4mFks5qlJthgaJpZM4JwriM\n.\n. \n",
    "westerncj": "OK. That's kind of what I ended up doing. Thanks for the quick response.\n. No it's the same list. I was loading the list initially when the page loaded, but I'd rather load the list onshow because I think it makes more sense.\n. I can close this now if you'd like. I found a workaround with my vm.formatField() function by evaluating if the list is loaded yet. If the list isn't loaded then I'm setting it equal to the local model value in the dataset. Thanks for your help and let me know.\n. If I set row.amount using e-ng-change, then when the cancel button is clicked the value is set to zero. \nI tried something like this:\ne-ng-change=\"editableDataForm.$data.amount = (editableDataForm.$data.isActive) ? '0' : row.amount\">. If I change row.amount, the underlying model is changed. I'd like to retain the original values if the Cancel button is clicked.. When using that code, it doesn't change amount to 0 in edit mode.. I get this error: TypeError: Cannot set property 'value' of undefined\nIf I console.log the form coming in I don't see the value or $viewValue properties.. That works awesome! Why the timeout?. Ok cool. Yeah if you remove the timeout you get a digest error. Thanks for your help!. ",
    "JeremieLAN": "terrific !\nThank you !\n. ",
    "letmejustfixthat": "How does this close #341? I can't find anything how to add custom buttons to the panel. Or did you just implement the actual use case described in #341?\n. > I want to be able to add my own button to the Save/Cancel set, e.g. a clear button\nI'm trying to add a button to completely remove the editable item from the model and hoped I just missed how to do that. But I guess that's not possible (without changes in the xeditable lib)?\n. ",
    "snimavat": "Never mind, it was a silly question.. i was misguided by a custom directive we have for creating submit/cancel buttons, i thought the directive is from editable..\ni can always have onclick on my cancel button..\n. ",
    "Carnid": "Here you go, not sure how to link issues with pull requests...\nhttps://github.com/vitalets/angular-xeditable/pull/548\n. How do you run your tests? Are they manual? I have found the tests themselves in the docs, but you don't seem to have a test runner setup.\n. All tests pass.\n. Well, to do that, I would need to add a section that highlights the editableOptions.activate = 'select' feature, which is not yet documented there. Also, since it's an angular run config, I believe it would need a second ng-app to demonstrate.\nUnless I change the whole demo app to use 'select' instead of 'focus'.\nWhat would you suggest?\n. Well, it seems my attempts to squash my two commits went terribly wrong. Want me to do another PR instead?\n. Done. Running a few final tests.\n. @eugef It solves this issue here: https://github.com/vitalets/angular-xeditable/issues/547\n. Thought I had already mentioned it. I am satisfied with the tests.\n. ",
    "pratheekhegde": "I'm using the latest, it still seems to be there. \ud83d\ude15 \nwhite-space: nowrap; is  white-space: pre; <= this is the prime reason.\nThanks @ckosloski for pointing me out to #544 \n. @BenevidesLecontes That does fix ! \ud83d\ude03 .\nBut, I dont see\njavascript\n/* fix padding issue on typeahead */\n .editable-text {\n     white-space: nowrap;\n }\nof #544 \nin https://github.com/vitalets/angular-xeditable/blob/master/dist/css/xeditable.css \n. Yea, I figured that out. Thanks again @ckosloski .\n. ",
    "BenevidesLecontes": "@pratheekhegde white-space: normal; on editable-wrap, should fix.\n. ",
    "roblperry": "Reimplemented test modifications in dev-uiselect. \nSquashed the commit.\nAll tests pass. \n. ",
    "borm": "Oh, thanks\nhttp://jsfiddle.net/NfPcH/17021/\n. ",
    "Snippo": "Thanks for the example. I have spend some time trying to get a (key, value) object working in editable-ui-select. The last problem was making it work with e-multiple, as $select didn't work. Seems I should use $item :).\nHere is an example for anyone with the same problem:\nhttp://jsfiddle.net/96nz5gy7/\n. Just tried it but that doesn't solve it. The data seems to be correct (the variable is set to the right date in a console.log()), but the value for some reason does not affect the e-min-date property.. e-datepicker-options works outside of the form, but not inside the form: http://jsfiddle.net/grk2eyqo/6/\nSo that unfortunately doesn't solve it.. I found a workaround.\nI think the problem is caused because the datepicker is not reinitialized when opened inside the form.\nIn normal usage, you first get the x-editable 'text box' with the datepicker attached to it. In the form the datepicker is always 'opened', thus not applying any changes.\nThe workaround is using ng-if on the datepicker which should be updated and a watcher on the datepicker which is changed: http://jsfiddle.net/grk2eyqo/9/\nThe ng-if variable is then toggled inside a time-out function and the second datepicker is updated.. I'm sorry, I did not see your previous comment. I believe the issue is still there, but the workaround I posted works fine. However, I am not using it anymore so in my opinion it can be closed.. ",
    "usamakhalil86": "The fiddle is no more working and also the code does not works with latest  * Version: 0.19.5 . ",
    "jackts": "@ckosloski . Thank you for fixing the issue.  Should i wait till your changes will be pushed to the new release of the library to see the fix on my end?\n. ",
    "B3nCr": "The tests all pass fine with the change to the template. \nDo you want me to add angular-ui-bootstrap as a bower or npm dependency or an dev-dependency? I'm not sure what the best practice is in this scenario. I can see the old versions of ui-bootsrap in the libs folder, do you just want me to update the js in that folder with a copy of the latest version?\n. I'll push my repo and you can pull it and build it and then use the output.\nI've not had chance to update the tests and docs yet.\n. Actually i think you could just pull the dist folder.\nhttps://github.com/B3nCr/angular-xeditable/tree/bsdate-ui-bootstrap-update/dist\n. @ckosloski I don't think it's necessary to add the <div class=\"well\"></div> element around the timepicker any more so this code is un-necessary.\nhttps://github.com/B3nCr/angular-xeditable/blob/bsdate-ui-bootstrap-update/src/js/directives/bstime.js#L13\nRemoving it would change the look of the control slightly. Is that acceptable?\n. I'll just leave it in. It will ensure that the appearance doesn't suddenly change for anyone using the library. \nI've done the changes, updated angular-bootstrap and bootstrap and the tests all pass but I'm not sure how much I should be adding to the PR.\nLooking at old PRs for example they don't include the built output but my commits do (because I didn't know what else to do with it other than commit it). My PR looks massive. Also I'm not sure which branch I should be targeting with the PR?\nSorry for being a bit useless at this. \n. Okay, so your master has changed since I created my fork. I've create a pull request to pull those changes into my branch...\n\nPresumably I want to rebase that into my master branch? The other options would make a new commit that I don't want when I merge back into your repo.\n\nThen I'll squash my feature branch into my master branch. That'll hopefully give me the opportunity to remove some of the generated stuff I've committed by mistake. Then I'll create a PR to your repo.\n. Sorry, I've been really lax with this, the work is done I just need to sort out my PR. I'll try and get around to it this week. . @ckosloski  I can't get my head around git's PR system, only including the bits I need and squashing it into a single commit.\nI'll have another go now.. Okay, I've managed to get my commits into a single commit, not by squashing but it's done.\nI basically had to re-fork the repo again and re-do my change because I was so out of date and trying to merge all the branches again was causing too much aggravation considering this is basically a three line change.\nThe problem now is that I'm having problems running the tests. The tests in master don't work either so it's not my change that's broken them so what you do with the PR is now up to you.. Here's the link to the PR to associate it with this issue. https://github.com/vitalets/angular-xeditable/pull/630. Sorry, opened this by mistake, it's not ready yet\n. Yes. I was trying to pull from the original source into my branch.\nOn 6 Dec 2016 08:32, \"Eugene Fidelin\" notifications@github.com wrote:\n\n@B3nCr https://github.com/B3nCr did you close PR on purpose?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/pull/587#issuecomment-265090692,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABN9VFy6c67svOnUsyMBuEHyT2Faydkiks5rFR1_gaJpZM4LFIFe\n.\n. Hi\n\nSorry, i mentioned this in the bug report.\nI can't get the tests passing in the master branch so they're still the\nsame here.\nI'm wondering if it's because my npm version is not putting files in the\nsame place because I had a problem with grunt build and jsdoc not being\nfound either.\nPerhaps you could pull my branch and see if you can run them.\nThanks\nBen\nOn 7 Mar 2017 8:48 a.m., \"Eugene Fidelin\" notifications@github.com wrote:\n\n@B3nCr https://github.com/B3nCr, @ckosloski\nhttps://github.com/ckosloski what about tests? are they green?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/pull/630#issuecomment-284658715,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABN9VFK-TPGBS81rvrOWDK3KfCkPhfIZks5rjRnZgaJpZM4MU6X5\n.\n. This is my node and npm version for comparison.\n\nD:\\dev\\Repos\\angular-xeditable [squashed-bs-time]> node -v\nv6.9.5\nD:\\dev\\Repos\\angular-xeditable [squashed-bs-time]> npm -v\n4.0.5. @eugef Yes, that's what I thought. \nWell I'll leave this PR for you to do whatever you choose. I can't see an easy way of installing NPM v2 and v4 side by side. It shouldn't be that difficult for someone to pull my branch and run the tests.\nSorry I couldn't be of more help.. Perhaps to make someone else running the tests easier I could create a PR into a different branch in the vitalets repo then it won't be necessary to clone my repo, just checkout a branch.. I'll see if I can get Travis CI to build my branch.. Thanks. \nI know this is merged but is this an appropriate place to discuss perhaps getting a travis-ci build setup that runs the tests? Is that something that anyone would be interested in?\nI've set one up that runs grunt build and it seems to work fine but I'm not sure how to run the tests from the command line.\nhttps://travis-ci.org/B3nCr/angular-xeditable. I'm not sure yet, it seems like it can but I was hoping there would be a\ncommand line way that I could experiment with first.\nThe tests seem to be using the old angular-scenario e2e testing.\nI could take a look at updating the tests to use protractor at the same\ntime, there seems to be a lot more documentation for Travis+Protractor?\nAnother question, more of a side question. Of I was to start looking at the\nprotractor tests what's the best way to take my repo forwards? I've tried\nto rebase the vitalets master back into my B3nCr master but now GitHub is\ntelling me they are diverged, the rebase must have created new commits (i\nthought the point of rebase was that it didn't do that).\nShould I just drop my fork and create a fresh fork for future contributions?\nOn Wed, Mar 8, 2017 at 11:54 AM, Eugene Fidelin notifications@github.com\nwrote:\n\nAs far i know tests can be run only in browser. Can Travis-CI do it?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/pull/630#issuecomment-285021964,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABN9VOL1Z9YbG-PlJsYGLB48c0w_hySaks5rjpcRgaJpZM4MU6X5\n.\n. I take it you manually add the upstream origin which refers to the the\nsource repo of the fork, my local repo only has one remote which is my\ngithub repo,\n\nOn Wed, Mar 8, 2017 at 3:52 PM, ckosloski notifications@github.com wrote:\n\nThis is what I do to rebase.\ngit fetch upstream\ngit rebase upstream/master\nThat would be great if you have time to update the tests!!!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/pull/630#issuecomment-285079310,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABN9VGwGRoRd3xTwkUKLxHmTn5tdzN7Jks5rjs6pgaJpZM4MU6X5\n.\n. Nice one, that's got me a bit further on. I'll keep plodding away. \n\nI'll leave this open for now incase I have any other issues getting the tests running\nThanks. Boom. Travis-CI status is green!\nOnly 5 tests so far but it's progress.\nhttps://travis-ci.org/B3nCr/angular-xeditable/builds/214473297\n. Sorry, I forgot to change this back when I was debugging the model binding issue that's in the bstime directive. I can change it back, it'll add another commit and hopefully you can squash it when you merge the PR, or I can leave it like it is.. ",
    "muten84": "Hi i just discovered the same issue, can you guys suggest me a workaround?\n. i tried it work, i used same trick with my local copy,  to go on. thx\n. ",
    "carterpayne": "What is the status of this PR? @muten84, i found another work around for the time being using a decorator:\nangular.module(\"app\").decorator(\"editableDirectiveFactory\", function ($delegate) {\n  return function (overwrites) {\n    if (overwrites.directiveName === \"editableBstime\") {\n      overwrites.inputTpl = '<div uib-timepicker></div>';\n    }\n    return $delegate(overwrites);\n  }\n});\nkinda sketch but my only option for the time being. hope that helps.. ",
    "Zoid-dr": "Mea culpa.\nThanks, it works.\n```\n\n\n{{ heading1 || 'empty' }}\n\n      content 1\n\n\n   <li ng-class=\"[{active: active, disabled: disabled}, classes]\" class=\"uib-tab nav-item\">\n      <div href ng-click=\"select($event)\" class=\"nav-link\" uib-tab-heading-transclude>{{heading}}</div>\n   </li>\n\n```\n. ",
    "LegendOfFire": "Thank you! It's solved.. ",
    "fredrikw": "I'm sorry, but how do I run the tests most easily? I couldn't find any instructions and when I loaded the Dev Test Runner at /test/e2e/dev-test.html none of the tests were working so I think I am missing something...\n. I think I found out that the reason for failing tests may be that the docs task failed for me while building, I'm looking at that now...\n. OK, I have now managed to get the tests running and all current tests pass. However, I am a bit at a loss when it comes to defining new tests and adding docs.\nOne part of the PR is that before, when having no default theme (from the app.run function) the button classes where never set when a theme was added via editable-theme. This is not visible in the tests currently since they are all run with a default theme of bs3. However, if I comment out editableOptions.theme = 'bs3'; from app.js and change the dev-theme test to specify editable-themes = 'bs3' on any link I get buttons like in the attachment.\nI don't see an easy way of testing for this though, but it might be due to my limited experience with both jsdoc and the test runners...\nThe other part, I can add both doc and tests for, I will update the PR shortly...\n. The problem is that when editableOptions.theme is set, the bug won't show up since it requires a non-existing editableOptions.theme and editable-theme set to something else than default. Then self.icon_set = editableOptions.icon_set === 'default' ? editableIcons.default[editableOptions.theme] : editableIcons.external[editableOptions.icon_set]; will evaluate to undefined instead of editableIcons['bs3'] (since editableOptions.theme is still set to 'default') and hence give a situation like the one that I forgot to attach to the last comment...\n\nAnd this, I don't know how to test for since it requires unsetting editableOptions.theme that is set in the app.js file for the full test suite...\n. I think I managed to get everything done now...\nThere are tests for both the fix when the wrong icon-set was used on items with editable-theme set (tested with editable-theme=\"bs2\" that gives bs3-icons on 0.5.0) and the addition with editable-icon-set.\nI also added a short sentence to the docs describing editable-icon-set.\nThere were some changes needed to make the tests work, the dev-theme/tests.js was never run and even though the css files aren't needed for the tests, I think it is nice to have the possibility to test manually as well and see that it looks like expected.\n. ",
    "eugenevk": "You were fully right @ckosloski ! I had to include the css in the default.js file of the MEAN boilerplate of Inspinia. Thanks a lot!\n. @ckosloski I do have another question. I have three columns in my table (as in the screenshot). When I switch to 'edit' mode, the column widths change. After clicking 'save' they change back to the initial width. Any idea why that can happen?\n. @ckosloski And also: is there a way to use the TAB key to add new records when in the last editable field of the table?\n. Ok, I'll test the first.\nAnd yes, I mean save a record when tabbing out of the field and immediately creating a new record with focus on the first field.\n. @ckosloski  Can you maybe also tell how I could automatically delete a row when the user adds a record and immediately cancels it? Now the record stays but with empty fields.\n. @ckosloski The issue with the jumping column widths is indeed solved by setting the size of the th tag. Thanks.\nRegarding your last remark, it looks like onbeforesave is not executed after a rowform.$cancel(). Is that correct? If so, how can execute a function on cancel?\n. ",
    "jawizie": "Thanks a lot still link helped\nOn Mon, Oct 31, 2016 at 4:41 PM, ckosloski notifications@github.com wrote:\n\nThis is more of a stack overflow question or just searching for how to\nload a js object with ajax from php and then looking at the xeditable\nexamples.\nMaybe something like.\nhttp://stackoverflow.com/questions/30606614/angularjs-\nupdate-database-using-x-editable\nPlease close.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/566#issuecomment-257311792,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AWGPEY_mGG1Gpm2ahTmLNaWoeVCI5yItks5q5f4mgaJpZM4KlEkB\n.\n. well i have managed to follow that\n http://stackoverflow.com/questions/30606614/angularjs-update-database-using-x-editable\nim realising i cannot retrieve data posted from the form\n. i have managed to display data from my database in the text boxes(when i'm in edit mode) but i am unable to post edited form data to the database .\n. no im not getting an errorbecause no data is posted from the form.\n\napp.controller('ProfileFormCtrl', function($scope, $http) {\n    $scope.display = function () {\n        $http.get('../../core/scripts/insert.php')\n            .success(function(data) {\n                $scope.users = data;\n            });\n    };\n    $scope.updateUser  = function() {\n        document.getElementById(\"message\").textContent = \"\";\n        var request = $http({\n            method: \"post\",\n            url: '../../core/scripts/clone.php',\n            data: {\n                'name' :$scope.x.name,\n                'surname' :$scope.x.surname,\n                'dob' : $scope.x.dob,\n                'phone' : $scope.x.phone,\n                'national_id' : $scope.x.national_id,\n                'city' : $scope.x.city,\n                'about' : $scope.x.about\n            },\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n        });\nrequest.success(function (data) {\n        document.getElementById(\"message\").textContent = \"Post Successful\"+data;\n    });\n}\n});\n< editable-text=\"x.name\" e-name=\"name\" >\nthis is how i have named the textboxes\n.   < editable-form name=\"editableForm\" ng-repeat=\"x in users\" onaftersave=\"updateUser()\">\n1. i call it when i initialize the form\n   the value changes after i save but not in my database \n. yes updateUser is being called it is posting blank field values from what i deduced after adding some fake values in my back end i ran the function and it posted.I think the major issue is in the naming convention for values posted from edit mode as they are passed through function\n. x is the value from \nng-repeat=\"x in users\"\n which is from my display() function and so in order for me to view the data in edit mode i had to maintain  that value\nit is not defined in the script\n. Created the object data posting succesfully to database but can no longer view the data in edit mode .Object name is user ..using the same name for the display() function object causes a conflict and no data is posted \n\n. ",
    "BukicMicko": "For some reason it is showing is empty but I have it as : \ntext-angular\n. If I add e-ta-max-text=\"5\" it allows me to add more than 5 characters but when click on Save button it does not get binded to div but how can i controle that? I mean to have function when click on Save button to check if I have more than 5 and show some message? Here is how I use it:\n\n\n\n. Hey @ckosloski I am not sure why I cannot run x-editable in this plunker: \nhttps://plnkr.co/edit/CKZ9DeHee4pk7GUjVim2?p=preview\nsorry, I am not so good with plunker. To answer your question above:\nWhen I add e-ta-max-text I see atribute in my text-angular. When i click on href and add more than 5 characters and click on Save button that text is not binded to div tag which is good, it means e-ta-max-text is working. My question was how to check this on href click in some function for example and show message above this x-editable?\n. What I meant was how to have control  on Save button after I enter text and click on that button. And how to check if I have over max character error to show some message... \n. Hey @ckosloski I got read of the errors.. I added xeditable.js file and modified editableTextarea in editableTextAngular. However I cannot show this editableTextAngular  href....You have some idea why is that?\nhttps://plnkr.co/edit/CKZ9DeHee4pk7GUjVim2?p=preview\n. Omg.. @ckosloski this was exactly what i needed!!! Thank you so much for your help!!!\n. Hey @ckosloski I tried your way for max length and I am getting this message that character limit is exteneded... However after I open  editable-text-angular for second or third etc.. time I am getting this error:\nangular.js:11706 textAngular Error: An Editor with name \"title\" already exists <div text-angular=\"\" ta-max-text=\"5\" name=\"title\" class=\"editable-input ng-pristine ng-untouched ng-valid ng-isolate-scope ta-root\" ng-model=\"$data\">\nI tried to open inspect element amd I see editable-text-angular is there twice.\nhttps://snag.gy/XfPClx.jpg\nI was researching on some issues for this and found this \ud83d\udc4d \nhttps://github.com/fraywing/textAngular/issues/240\nbut I tried with {{$index]} and it was same.... Can you help me with this?\n. My code:\n<div class=\"form-group text-center\">\n                <form editable-form name=\"editableForm\">\n                    <label class=\"col-md-3 control-label\" data-ng-show=\"reviewvm.foType == 'finding'\"><span class=\"text-danger\">*</span>Finding:</label>\n                    <label class=\"col-md-3 control-label\" data-ng-show=\"reviewvm.foType == 'observation'\"><span class=\"text-danger\">*</span>Observation:</label>\n                    <div class=\"col-md-9 form-control-static text-left\">\n                        <a class=\"clickable\" editable-text-angular=\"reviewvm.findingOrObservationTitle\" e-ta-max-text=\"5\" e-name=\"title\">\n                            <div data-ng-bind-html=\"reviewvm.findingOrObservationTitle\"></div>\n                        </a>\n                        <a class=\"clickable\" ng-click=\"editableForm.$show()\" ng-show=\"!editableForm.$visible\">\n                            <span data-ng-show=\"!reviewvm.findingOrObservationTitle'\">Click to add the Finding</span>\n                            <span data-ng-show=\"reviewvm.findingOrObservationTitle\">Click to edit the Observation</span>\n                        </a>\n                        <div ng-if=\"editableForm.title.$error.taMaxText\" class=\"text-danger\">Too much text!</div>\n                    </div>\n                     <span ng-show=\"editableForm.$visible\">\n                      <button type=\"submit\" class=\"btn btn-primary\" ng-disabled=\"editableForm.$waiting\">\n                          Save\n                      </button>\n                      <button type=\"button\" class=\"btn btn-default\" ng-disabled=\"editableForm.$waiting\" ng-click=\"editableForm.$cancel()\">\n                          Cancel\n                      </button>\n                    </span>\n                    <div class=\"col-md-3 col-md-offset-3\" ng-if=\"reviewvm.findingOrObservationTitle === '' && reviewvm.foType == 'finding'\" style=\"color:maroon\" role=\"alert\">\n                        <div class=\"help-block alert alert-danger form-group\">The Finding is a required field</div>\n                    </div>\n                    <div class=\"col-md-3 col-md-offset-3\" ng-if=\"reviewvm.findingOrObservationTitle === '' && reviewvm.foType == 'observation'\" style=\"color:maroon\" role=\"alert\">\n                        <div class=\"help-block alert alert-danger form-group\">The Observation is a required field</div>\n                    </div>\n                </form>\n            </div>\n. \"angular-xeditable\": \"~0.1.10\",\n\"textAngular\": \"~1.5.0\",\n. @ckosloski I updated to 0.5.0 and this errors were removed... Thank you so much for your quick responses and help!!!\n. @ckosloski you are right I should have add this question to textAngular github cause this ta-max-text is from that directive... Sorry for this.\n. Hey @ckosloski sorry for reopening this again, but I have one question. Can I use ng-maxlength for editable-text-angular? I was using e-ta-max-text but it is not counting html tags so my idea is to use ng-maxlength and to disable save button if we have maxalenth form error. Something like this:\n<form editable-form name=\"editableTitleForm\">\n<div>\n<a class=\"clickable\" editable-text-angular=\"reviewvm.findingOrObservationTitle\" e-name=\"title\" ng-maxlength=\"5\" ng-click=\"editableTitleForm.$show(); edit = true\" ng-show=\"!editableTitleForm.$visible\">\n<div ng-if=\"reviewvm.findingOrObservationTitle\" data-ng-bind-html=\"reviewvm.findingOrObservationTitle\"></div>\n</a>\n</div>\n<span ng-show=\"editableTitleForm.$visible\">\n<button type=\"submit\" class=\"btn btn-primary\" ng-disabled=\"editableTitleForm.$waiting || editableTitleForm.title.$error.maxlength\">\nSave\n</button>\n</span>\n</form>\n. hm... I tried also with e-ng-maxlength but it is not working. I tried in in this way:\n<a class=\"clickable\" editable-text-angular=\"reviewvm.findingOrObservationAddBac\"  e-name=\"background\" e-ng-maxlength=\"5\"\n                               ng-click=\"editableBackgroundForm.$show(); edit = true\" ng-show=\"!editableBackgroundForm.$visible\">\n<button type=\"submit\" class=\"btn btn-primary\" ng-disabled=\"editableBackgroundForm.$waiting || editableBackgroundForm.background.$error.maxlength\">\n                              Save\n                          </button>\nAnd when I reach 5 characters button is not getting disabled.\n. hm...I was somehow thinking that this e-ng-maxlength can also work on a href tag on which we have this editable-text-angular. I suppose I cannot do that so will close this issue. Also I tried to somehow get this charcount from text-angular with textAngularManger.retireveEditor('title').charcount but it is not working with combination with angular-xeditable....\n. Well that can be a good solution I will give a try, but I also just implement it in this way:\nI am using onbeforesave function on href tag and I am checking if characters together with html tags are more that max return string message that will be showin before reach text editor.\n<a class=\"clickable\" editable-text-angular=\"reviewvm.findingOrObservationTitle\" e-name=\"title\" e-form=\"editableTitleForm\" onbeforesave=\"reviewvm.checkCharacterLength($data, editableTitleForm)\"\nfunction checkCharacterLength (data, form) {\nvar length = data.length;\nswitch (form.$name) {\ncase 'titleForm':\nif (length > 1000){\nreturn 'character length exceeded'\n}\n}\n}\n. If I remove form tag and use e-form for both only can be open at time but now when i click on editable-text only editable-text is shown without editable-select and Save button is not overriden. \n```\n\n\n\n\n\n0\n\n {{phase.hours}}\n\n\n\n\n\n\n\n\n                                        Save\n                                        \n\n\n\n\n```              . Hey @ckosloski well how can I use edit-disabled? I mean because I have ng-repeat inside ng-repeat how to add condition in ng-disabled that some form is opened?\n. Hey @ckosloski here is plunker : \nhttps://plnkr.co/edit/5aZ1v9qsxivyiUvlNVed?p=preview\nSomehow I cannot fix editable-text to be open, when clicking on some hour form x-editalbe should be shown. Basically what I want is if I open any editable text in some table in every other table x-editable fields to be disabled.. Hey @ckosloski yeaaah if one item on One, Coordinator is in edit more, nothing is editable in all other tables, that means also in One, Coordinator other cannot be editable.. Yup that is correct. . Hm.. yeah this is good only one at time can be open with this implementation. Just curious if there is some attribute from x-editable that can check if some form is open so others will be disabled (with edit-disabled) condition. If not I suppose maybe in controller I can check if some form have $visible true already and not show() clicked field. Thanks.. Hey @ckosloski I don't want to open new issue, will ask you here. How can i restrict user to be able o type only numbers in editable-text? I don't want to use editable-number cause I am getting strings as numbers from back end and when open editable field I am getting error that expects to be number. I tried adding e-ng-patter=\"regexForOnlyNumbers\" but user is still allowed to type strings, characters etc... \n<a data-ng-if=\"reviewEditMode && (isCoordinator || (isReviewer && isCurrent))\" class=\"clickable\" e-ng-pattern=\"onlyNumbersPattern\" editable-text=\"phase.hours\" e-step=\"any\" e-name=\"Hours\" e-min=\"0\" ng-click=\"openForm($index, 'editableHours');\" ng-show=\"!$parent.editableHours{{$index}}.$visible\">\n                                        <div ng-if=\"phase.hours\" data-ng-bind-html=\"phase.hours\"></div>\n                                        <span data-ng-if=\"!phase.hours\">0</span>\n                                    </a>\npattern:          $scope.onlyNumbersPattern = /^\\d+$/;. Thanks @ckosloski will close issue now.. Hey @ckosloski  I have one question, maybe you are familiar with this. Editable-number in IE is allowing user to enter non-numeric values, in Chrome and FF is good, user can enter only numbers (also decimal numbers). Because of this i want to use ng-pattern to allow only numbers but it seems that IE is allowing even with  ng-patter user to enter non-numeric values and we don't have error in form... Maybe this is because i am using editable-form instead of e-form or that does not make any difference?\n$scope.numbersOnly = /[0-9]+$/;\n```\n\n\n\n                                Enter a valid number\n                            \n\n\n {{ phase.costs | currency:\"$\":0}} 0 \n{{!phase.costs ? '0.00' : phase.costs | currency:\"$\":0}}\n\n\n\n                                         Save\n                                    \n\n\n\n\n```\nSo when i check in updateCosts function for this current form $erros is empty objects for $parent.editableCosts{{$index}}.costs.$error.... Iternet Explorer 11 (Version 11.633.10586.0). It allows all alphabets and also all characters (and i need only \n'.' to allow). So maybe as you said on onbeforesave function i can check with pattern in this function and stop submission if value is not valid... . Hey @ckosloski yes i resolve it with onbeforesave function. Somehow I forgot to close the issue.. Sorry for that.. Well I wanted to go with editable-textarea but requirement is to use simple text and if text is bigger than 65 characters I am showing tooltip.. stupid but that is how I must go... . Hey @ckosloski  I agree with you. If we want lines (paragraphs) we need to use textareas.. I was just curious because I see that in Text Angular there was made PR that fix this on Chrome and Mozilla but not FF... Thanks anyway I will close PR. . Yeah was thinking same but it is strange for me because in every place on html when I have editableUpdateTitleForm i replace it with editableUpdateTitleForm{{$index}} and I am getting html error  Syntax Error: Token '.3.' is an unexpected token... . Hm... I can try that of course but then again $visible , waiting, fieldName.$error all are complaining about syntax error and i was under impression (almost sure that was using in this way in other places and it was working good).\nhere is example \n```\n\n\nFinding:\nObservation:\n\n\n\n\nClick to add the Finding\nClick to add the Observations\n\nCharacter length has been exceeded\n\n\n\n\n                                      Save\n                                  \n\n                                      Cancel\n                                  \n\n\n\n\n\n\n\n```. Also I just saw in console log it says that editor with that name already exist. $index would help but why i get this error I am confused.. Hey @ckosloski I finally resolved $index issue. I am calling function to open form by sending index. But again i cannot get rid of error\"\ntextAngular Error: An Editor with name \"title\" already exists <div text-angular=\"\" ta-max-text=\"3000\" name=\"title\" class=\"editable-input ng-pristine ng-untouched ng-valid ng-isolate-scope ta-root\" ng-model=\"$parent.$data\">\nMaybe I can somehow add $index to e-name also or something... Yup I just added {{$index}} to e-name=\"title{{$index}}\" and everything is working good now. Thanks for help!. ",
    "IssamEssarghini033": "@ckosloski yeah the app works properly \ud83d\udc4d . i've added the path of xeditable in my karma conf file, and i inject it by \n```\nbeforeEach(inject(function(..., editableThemes, editableOptions) {\neditThemes = editableThemes;\n editOptions = editableOptions;\nBecause in my Controller i'm usiing editableThemes and editableOptions services that's why I injected them.. Actually i'm using oc.lazyload, when i redirect to the view where i'm using xeditable, i load it in my router config by :\nresolve: load([\n  'xeditable',\nand on lazyload config i have :\n{\n          name: 'xeditable',\n          files: [\n              'libs/angular/angular-xeditable/dist/js/xeditable.min.js',\n              'libs/angular/angular-xeditable/dist/css/xeditable.min.css'\n          ]\n      },\n```\nOn My controller i inject only editableThemes and editableOptions.\nand it works fine.. ",
    "amodpandey": "I did something similar but not exactly the same. Created a save button that works for create and update. I was happy to keep the create mode with editable links rather than form mode (but I could achieve this as well).\nMy solution won't work when we disable accessing scope from dom element (done in production)\nfunction validateFormSubmit() {\n  var status = true;\n  var editables = document.querySelectorAll('[onbeforesave]')\n  for (var i = editables.length - 1; i >= 0; i--)\n  {\n    var scope = angular.element(editables[i]).scope();\n    if(scope.$editable.onbeforesave() !== true) {\n      scope.$form.$show();\n      scope.$form.$submit();\n      status = false;\n    }\n  }\n  return status;\n}\n\nWith above I could achieve\n\nDefine validation for individual form element and use them with Submit\nHave form save functionality with 'click to edit' ui behavior.\n. sure.. \n",
    "ilsaha": "@ckosloski What flag should I look on? I'm already have this attribute, but it works only if not edit button is clicked. Also I don't have any form. I'm just using \"editable-text\" attribute to edit my model.                        \n\n. @ckosloski I don't need to submit, need to cancel it when clicking on edit button. Submitting on blur works perfectly.. @ckosloski But I need to submit it on blur and cancel on click. ",
    "wasitaanggara": "https://jsfiddle.net/wasita_anggara30/5rk67uqk/ here dude, thanks for your response. i need some help why this code not work.\nRegards.. im also change editable-text / editable-dropdown work editable with text and dropdown, but when editable-tags-input its not work. . i know the problem dude, i have template urban admin with angular-xeditable version 0.1.9 and the lastest version is 0.5.0 not support NgTagInput. but i just wanna ask some queestion, with v.0.1.9 editable-dropdown work with search data select, but in version 0.5.0  not work? . ",
    "borismee": "Yes, but it make all text selected. I want that default behavior will stay as it and will same across all browsers.\nIn other words, I want to place the caret at the end of the string in the input.\nAny other suggestions?\nP.S.: Thanks for a quick response!!!. ",
    "rmannibucau": "this looks like it introduced a regression in chrome - didnt check other browsers. this.$editables[0].elem[0].text will always be undefined and therefore end = start = 0 even if there is an actual text value.. Google Chrome 55.0.2883.87 (Build officiel) (64 bits)\nR\u00e9vision    ad0be09aa3ca814168d079b52825f6f80e22f0e8-refs/branch-heads/2883@{#723}\nSyst\u00e8me d'exploitation  Linux \nJavaScript  V8 5.5.372.32\nFlash   24.0.0.194\nAgent utilisateur   Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36\nLigne de commande   /usr/bin/google-chrome-stable --flag-switches-begin --flag-switches-end\nIt is in a \"big\" application so can be a side effect of other components or http usage which imply some latency or angular $timeout but point is text is undefined when evaluated by xeditable which leds to a caret at position 0 even if value is bound after. Wonder if xeditable should use $watch or something else\n. Hi @ckosloski , here is a jsfiddle reproducing it on the mentionned environment: https://jsfiddle.net/u998qke7/. happens for me without as well (which comfort me in the idea it is a timing issue related to binding). ",
    "federicoco": "I've managed to display it in a human comprensible way, but it is in english : if I want to change the locale to italian ?. I've included the moment-with-locales.js and in the init function of angular(equivalent of $(function)), I wrote\nmoment().locale('it');\n\nif you see the attached images you will understand what I'm trying to achieve\n. no, what fix would you suggest me ?. hello sorry to annoy you, I've added the libraries like stackoverflow example suggested .\nThe date is printed in italian locale only when is changed\n1) underlined date : In english\n2) popup combo date : months in english\n3) Change date in Italian locale, but it does not update the old date\nHow i manage to have all the date in italian locale ? (displayed date, months in italian ?)\n. ",
    "thienedits": "Hello sorry to hijack this post but I have a question about the displayed datetime value. When testing locally on my machine the displayed valued is shown in UTC. Is this working as should? How do you get the displayed value to show in the users timezone?. hmmm nvm, I don't think our api is correctly returning datetime in UTC format.. Yes my issue has been resolved not sure about original post owner though.. ok thanks thats what i was thinking of doing.. ok thanks.. ",
    "aecepoglu": "With these changes other tags input libraries can be used with xeditable.\nmyApp.config(function(editableConfig) {\n    editableConfig.editableTagsInput.inputTpl = \"<chips>...</chips>\";\n})\n\nAnd then use editable-generic-tags-input instead of editable-tags-input\n<div editable-generic-tags-input=\"myTags\"></div>\n\nThat's all.\nI believe this approach can also be used to make other views more extensible.. I assumed because they weren't .gitignore'd they were wanted.\nAnyway, I'm going to need to extend the mixin props(items in docs/jade/reference.json because my items are objects and this mixin doesn't seem to handle them.\nWhat would you like the output table to look like?\nSo this is what I'm trying to document:\neditableGenericTagsInput: { inputTpl: \"...\" }\n\nAnd the mixin outputs table of this form:\nName | Type | Description\n\nSo will this suffice?\neditableGenericTagsInput | Object | An object of the form `{inputTpl: \"...\", otherAttributesMaybe: \"...\"}`.\n                                  | *inputTpl: the html template to use for the tags input directive\n             . Oh no no, I just can't find the time or motivation to do it; and I feel nobody is interested in the feature anyway. If you or someone else would like it added, I can make an effort. Otherwise we can close this..\n",
    "valexiev": "I've corrected the commits.\nThe tests are passing.\nBtw: i couldn't find contributors guidelines and had problems to run the tests. Also Angular Scenario Runner is deprecated, https://docs.angularjs.org/guide/e2e-testing. . @eugef, done.. @ckosloski, i use the new version and don't have this error.\nFor the module's internals adding uibDatepickerConfig as an argument should be equivalent to:\nuibDatepickerConfig = $injector.get('uibDatepickerConfig');\nAny ideas for the error?. @ckosloski i am referring to the new release of angular-xeditable.. ",
    "arielcr": "Hi @ckosloski , thanks for your reply!\nSo, I must not grunt build anything? Just push the changes on /src?. @ckosloski Is it ok like this?. @ckosloski ready, can you take a look at it? thanks!. @ckosloski Yep, all tests are passing!. Hi @eugef !\nI did the changes that you mentioned. It seems that there's a conflict on bower.json (because of the two additional dependencies that I added). I updated mine with the latest one from your repo and added the two dependencies, but I think that you must be the one who merge them.\nLet me know if there's anything else to be done for this pull request.\nIt's a pleasure to contribute to this awesome library!\n. @eugef Ready, commits squashed!. @eugef You're right. My mistake! I've just fixed it. Can you check it out?\n. ",
    "kglee79": "Removed starter files.. It appears I may have had an issue in my usage of the combodate, closing as this does not appear to be an issue using different attribute values for the combodate.. ",
    "dcardosods": "By submitting, I mean having the new value saved to scope.\nOnly buttons=\"no\" is necessary to reproduce the issue.\nhttp://plnkr.co/edit/uVz5MlcgvLhozswzGetA?p=preview. ",
    "b4ng": "Closed. For those with similar issues:\n\nStyling for the popover can be controlled through xeditable.css\nWhile inputTpl isn't functioning the way I'd expect, I added the custom directive to the input field using e-*. . \n",
    "takotuesday": "@ckosloski thanks for the quick response. Yes I did, but the problem is I cant access whatever the new value being selected is, only the old value that was previously selected.. Here is an example in JSFiddle. See the user.status editable-select.\nhttp://jsfiddle.net/NfPcH/18046/. @ckosloski this is awesome, thank you.. ",
    "ViniciusCPSouza": "@pdorgambide I've dealt with that before by using e-title=\"&zwnj;\".. ",
    "moshfeu": "Sure.. It was in the bin, but apparently I changed it back to ng-click. I save a snapshot for this here: http://jsbin.com/puzage/2/edit?html,js,output. Try adding new character, can't because of max length - Well, I can.\nSee the screen record: https://drive.google.com/open?id=0By_6v7nVfuvmSDMwWjhmdVRzSDg\nYou can see in the video that although the input's value is already the maxlength I can type one more character. When I delete it I can't type anymore. . ",
    "okezieokpara": "no thanks. ",
    "stefanvanherwijnen": "You are probably right. I had been struggling with the problem for a few days, but upon writing this issue I realized it was related to the limitTo option. It seems to be a known problem with ui-select.\nI finally managed to find a workaround. The problem seems to be that ui-select requires the selected items to be present in the list of items. limitTo reduces the array to a certain length which will remove the selected items from that array.\nI created a custom filter which searches for the right items but also includes the selected items in the array. The following code will include the selected items (I stripped out the rest of the code):\napp.filter('search', function () {\n  return function (items, search, selectedItems) {\n    var matches = [];\n    angular.forEach(items, function (item) {\n      if (selectedItems.indexOf(item.value.id) !== -1) {\n        matches.push(item);\n        return;\n      }\n    }, this);\n    return matches;\n  }\n});\nI noticed there is a pull request for ui-select to include a \"limit\" attribute which might solve this problem, but I haven't tried it.. ",
    "pequet": "hi vitaliy. any update on this port to angular2/4? thank you! \n(thinking i should just use the jquery version of the plugin in my angular 4 project.) . ",
    "rusackas": "Thanks... that explains why I couldn't find the code. I guess I'm out of luck if a popover gets cut off when going outside the edge of a containing div with overvlow:hidden? I'll close the issue, but if there's a solution you're aware of, let me know. Thanks again.. I whipped up a quick Beatles editor that illustrates the issue. Clicking the names to edit them in a popover, you should see that the popover is cut off on the left and/or top due to it being in a container with overflow:auto; \nhttp://jsfiddle.net/rusackas/gsrLo40x/6/\nI think the popover placement options, or better still, the popover-append-to-body option would solve the issue, but I'm open to other suggestions.. That's awesome for most situations. I used it in my real site (which I wish I could share here) but ran into another wrinkle. If the content area with the editable is a scrolling pane, the fixed elements don't move. \nI think adding some scroll event listeners and adjusting css position according to scroll offset might be the ticket here. I'll play with it. Meanwhile, I tweaked the fiddle with a shorter/scrolling content area to illustrate what I'm talking about:\nhttp://jsfiddle.net/rusackas/1yj49rvf/1/. ",
    "jongunter": "I'm having this issue, as well. My popover needs to be appended to the body (not the element in which the xeditable field resides).. http://plnkr.co/edit/c5v1PH4uDBpoxuXegtx0?p=preview\nAs you can see, when the popover opens, it is cut off by the sidebar. Usually I would use the popover-append-to-body option with UI bootstrap to prevent this problem, but this popover isn't internally created using ui-boostrap, correct?\nYeah, I could tweak some CSS (I'm adding this plugin a large legacy codebase, which makes that solution a bit more challenging), but if you're already requiring ui-bootstrap for the editable typeahead, it would make sense to use it for the editable popover, so users can have more control.. ",
    "Fredz66": "All tests passed (40 Passed for docs, 77 Passed for dev). I'll look how it's possible to add a specific test case.. I'm not familiar enough with unit testing via npm and I didn't manage to create a test for this for the past hour. Would it be possible to still accept the pull request ? Thank you.. Sorry but it's a bit complicated for me. I don't know Protactor and Jasmine and I don't even know how to attack this, also I don't have much time to learn these new tools. I would be grateful if you could accept this pull request as is since it's a bugfix for a feature that didn't have a test in the first place. Thank you.. ",
    "jothimoorthy": "what does this attribute do ? shown=\"inserted == user\"\nhttp://jsfiddle.net/NfPcH/93/. ",
    "bertysentry": "Hi, I have the same issue, where the added row is NOT editable the first time it is added, but IS editable the next times. Quite weird. It may be because I'm using a custom directive for the [Edit] and [Remove] buttons.\nI posted this yesterday on SO: https://stackoverflow.com/questions/49215445/custom-angularjs-directive-with-xeditable-doesnt-work-first-time-but-works-af\nAnd I have a Plunker showing the issue: https://embed.plnkr.co/TKsa86FfA8ahb90IQbCu/\nAny help will be much appreciated! :-). Thank you for your reply @ckosloski !\nI'm already using shown=\"access == newDenyAccess\" (newDenyAccess is the object being inserted in the array).\nSo:\n in index.html, I'm calling my directive with shown=\"access == newDenyAccess\"\n in my directive JS, I specify that shown is mapped to shown in my directive scope (scope: { shown: '=' })\n* in my directive template, I'm using <form editable-form ... shown=\"shown\">\nWhat I cannot understand is why it works at times, but never the first time for the first row. Even after adding several rows, the first one cannot be edited, while the 2nd and others are editable.\nAlso, the first row is never editable, i.e. even the [Edit] button doesn't work. So it means the $show() method is failing. And I have nothing in the Console log that would explain the behavior.\nNote: Plunker was slow and sometimes failing the other day. Maybe try again now, it should work. It would be cool if you could see the behavior for yourself ;-)\nThank you! :-). oh yeah, the editable row works beautifully!... as long as it's not embedded in another directive. I don't understand what is going on. Quite frustrating.\nHere's my suggestion: allow us to customize the [Add], [Del] and [Cancel] buttons with small templates (not just changing the label). This way, we won't need to embed xeditable-forms into custom directives.\nWhat do you say? :-). Oh my goodness, no I hadn't seen this, I'm sorry!\nThis should definitely do the trick! Thank you so much! :-). ",
    "pradyumnad": "Sorry my bad, I missed the order of scripts included... ",
    "sim999": "thnaks for your answer. ",
    "viniciusaugutis": "@ckosloski I made a few examples here in jsfiddle that will get easier to understand what I want to do.\nI want to do the same thing I did in this example (using form and input), but using form and xeditable.\nHere the code with Form and Input\nhttp://jsfiddle.net/vinicius_augutis/tuevy0Lj/\nHere the code with Form and Xeditable(not working correctly)\nhttp://jsfiddle.net/vinicius_augutis/ouj3159c/\nThe problem is that using xeditable I am not able to link the \"cpfField\" to the form. ",
    "opencubicles": "If you try to edit the date and leave the values for all the options as empty for combo-date dropdown and hit save, it will not retain the new empty value. \nPls check the screenshot below\n\n. Thank you!. ",
    "joaopgg": "Thanks guys\nCheers.. ",
    "thaodx": "Thank you very much @ckosloski . ",
    "Johan-CR": "That is not correct, this is a issue with all the inputs, I change the example and add a text input\nhttp://jsfiddle.net/Johan_CR/w3353mhk/2/. ",
    "efsh": "Try update to latest AngularJS1 version (1.6.4)\nHere an example. ",
    "katsos": "@ckosloski sorry, wrong link. updated.. Thank you very much. I updated my code on plunker so anyone with the same problem can find it easy.. ",
    "lesliemklo": "When is the scheduled release for this feature? \ud83d\udc4d . awesome! thank you :). ",
    "SebastianCBA": "Yes, I want the user to be able to add an item to the list \nLike http://embed.plnkr.co/GLuyC0jpIdiEXB6R4FIa/preview\nBut I do not know how to apply it.. Yes..\n            <div editable-ui-select=\"sectorSheet.economy_id\" data-e-form=\"rowform\" data-e-name=\"economy_id\" name=\"economy_id\" theme=\"bootstrap\" data-e-ng-model=\"sectorSheet.economy_id\">\n              [[ showEconomy(sectorSheet) ]]\n                <editable-ui-select-match placeholder=\"Select\">\n                [[showEconomy(sectorSheet) || $select.search]]\n            </editable-ui-select-match>\n            <editable-ui-select-choices repeat=\"economy in (search_economies | filter: {text: $select.search}) track by economy.id\">\n                    [[ economy.text ]]\n            </editable-ui-select-choices>\n        </div>\n\nIt seems to work as an example, but how to add a new economy? Or write a value that does not exist in the dropdown?. perfect! thanks. Hi  ckosloski! I has tested that teh button works inside teh view, but teh add new button should go out of sight...\nWithin teh view use this code:\n<div><button class=\"btn btn-primary blue-500-b white\" ng-click=\"add()\">Add an entry <span class=\"zmdi zmdi-plus-circle-o zmdi-hc-fw\"></span></button></div>\nAnd it worked ... but outside of the view use this code:\n<button class=\"btn btn-primary blue-500-b white\" onclick=\"angular.element(document.getElementById('EditableRowCtrl')).scope().add();\">Add an entry <span class=\"zmdi zmdi-plus-circle-o zmdi-hc-fw\"></span></button>\nAnd it does not work for me... do you understand?. Hi ckosloski! With this\n\napp.config(function($logProvider, $popoverProvider) {\n  $logProvider.debugEnabled(true); //added\n  angular.extend($popoverProvider.defaults, {\n    html: true\n  });\n})\n\n\nNow, the button outside teh view works! Thank you, you are the best!. Now, I need export the table to excel file, do you have some idea for that?. great! I applied:\n<div editable-ui-select=\"sectorSheet.stock_new_format\" data-e-form=\"rowform\" \ndata-e-name=\"stock_new_format\" name=\"stock_new_format\" theme=\"bootstrap\" \ndata-e-ng-model=\"sectorSheet.stock_new_format\" data-e-style=\"width:200px;\" e-multiple >\n  [[sectorSheet.stock_new_format]]\n  <editable-ui-select-match placeholder=\"Stock\">\n      [[$item]]\n  </editable-ui-select-match>\n  <editable-ui-select-choices repeat=\"state in stockjson | filter: $select.search track by $index\">\n    [[state]]\n  </editable-ui-select-choices>\n</div>\n\nBut now, I need add a new value if not exists, to the list . Solved with https://stackoverflow.com/questions/29489821/allow-manually-entered-text-in-ui-select. Everything works fine, but I only have one problem, when uiselect is not in edit mode, the value it displays is:\n[\"< value1 >\",\"< value2 >\",\"< newvalue >\"]\nand I would like it to show up like this:\nvalue1, value2, newvalue\nwithout losing the link with the edition, any help out there?\n. I get the stock json from a laravel function:\n    $SectorSheets = array();\n    $SectorSheets = SectorSheet::where('stock_new_format', 'like', \"<%\")\n                                ->select('stock_new_format as result')\n                                ->get(); \n    $SectorSheets->each(function($SectorSheets)\n            {\n                 $texto = $SectorSheets->result; \n                 $divide = explode(\">\", $texto);\n                 $SectorSheets->result  = $divide[0].\">\";\n\n            });\n    return Response::json($SectorSheets);\n\nthat return:\n[\"< Yuan Longping High- Tech Agriculture >\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]\nand I load the data from http function:\n$http.get('Stock/json').success(function (data) {\n                var temp = [];\n                for(var key in data){\n                  temp.push(data[key].result);\n                }                      \n$scope.stockjson = temp;\n});\n\nI can't upload to jsfiddle because it's a very long project with a big database, roles, login, etc... but I will do if you can't help me... . I know, forget the symbols... I store the array in a field using the serialize function:\n$sector->stock_new_format = serialize($request->stock_new_format);\n$sector->save();\nThat stores the values \u200b\u200bperfectly in the database:\na:3:{i:0;s:3:\"one\";i:1;s:3:\"two\";i:2;s:5:\"three\";}\nThen, when I read the data, I use the unserialize function:\n    $SectorSheets->each(function($SectorSheets)\n            {\n                 if($this->is_serialized($SectorSheets->stock_new_format))\n                     {\n                     $SectorSheets->stock_new_format = unserialize($SectorSheets->stock_new_format);   \n                     }\n            });\n\nand also works perfect, but when I show the data in the view, it shows me like this:\n[\"one\", \"two\", \"three\"]\n\nbut I want them to be used like this:\none, two, three\ndo you understand?. Sorry, I solved with https://stackoverflow.com/questions/27239754/angular-print-string-array-without-quotes \nthanks anyway, you are the best!. yes!\nview:\n    \n<span class=\"list\" ng-repeat=\"thing in sectorSheet.stock_new_format track by $index\">\n    [[ thing ]]\n </span>\n  <editable-ui-select-match placeholder=\"Stock\">\n      [[$item]]\n  </editable-ui-select-match>\n  <editable-ui-select-choices repeat=\"state in getStock($select.search) | filter: $select.search track by $index\">\n    [[state]]\n  </editable-ui-select-choices>\n</div>\n\nfunction getStock:\n$scope.getStock = function(search) {\n var newSupes = $scope.stockjson.slice();\n  if (search && newSupes.indexOf(search) === -1) {\n    newSupes.unshift(search);\n  }\n  return newSupes;\n}\nand options:\napp.factory(\"stockjson\", function ($resource) {\n    return $resource(\"Stock/json\", //la url donde queremos consumir\n        {}, \n        { get: { method: \"GET\", isArray: true }\n    })\n});\n    $scope.stockjson = stockjson.get(); \n. ",
    "antjori": "Hey @ckosloski,\nThank you for your feedback!\nIt solved my issue :wink: \nMuch appreciated!\n. ",
    "PrasannaInamdar": "@ckosloski You are right, JS file is loaded now and it is working correctly.. ",
    "Glassig": "I just figured out what it is. I want to count the amount of characters on the input. So I have the editable field change the value {{ctrl.value}}, and then displays the amount on another place with {{ctrl.value.length}}. Then I use e-ng-change to set ctrl.value to the new value. I guess that is why the cancel doesn't work.\nMy bad. Thanks for answering so quickly anyway!. ",
    "guilmori": "Hi @ckosloski !\nWe already use kendo date picker throughout our application, so we would like to stick with the same editor.\nI tried making a directive, which seems to work. Not sure how to pass in the kendo parameters though, like k-options, k-format and so on.\nIs there any documentation on building custom directives ? Other than looking at source code in angular-xeditable/src/js/directives/ and try to understand what is going on :-)\n```\nangular.module('xeditable').directive('editableKendoDate', ['editableDirectiveFactory',\n        function (editableDirectiveFactory) {\n            return editableDirectiveFactory({\n                directiveName: 'editableKendoDate',\n                inputTpl: '',\n                render: function () {\n                this.parent.render.call(this);\n                this.inputEl.removeAttr('ng-model');\n                this.inputEl.attr('k-ng-model', '$parent.$data');\n            }\n        });\n    }]);\n\n```\n. I tried sending e-k-options and it works built-in !\nNo need to do anything in the directive, great !.. You would like this builtin in angular-xeditable ?\nI'll try if I got some spare time :-)\nThe final code is the same as the one I pasted above though.\nNote that we use the k-ng-model attributes which binds to a date object, instead of a date string with ng-model (see http://docs.telerik.com/kendo-ui/AngularJS/introduction)\nNot sure if this would fit everyone needs.. Hmm well, I got a false impression of this working\nHere is a jsfiddle:\nhttp://jsfiddle.net/a6nr6a2f/\nThe control displays ok but when I click on a date, it closes the editable without saving.\nIf a manually enter a date like \"7/11/2017\" in the input and click the save, it works.\nI assume clicking in the calendar dropdown does trigger an outside click for the editable which close it. \nIs there anyway to fix this ?. Thanks, good enough for me !. ",
    "hk0i": "Never mind I got this working by adding an e-ng-change:\nhtml\n<li\n    editable-text=\"myStorageModel\"\n    e-ng-change=\"myStorageModel = $data\"\n    e-ng-model-options=\"{ debounce: 500 }\">\n    {{ myDisplayModel }}\n</li>\nI'm not sure if this is the best way, but we might want to consider adding even a localStorage feature with this type of capability built in.. ",
    "ZivW44": "The button is collecting data for later send the server, so if a user press this button, the value will still be the old value.\ntimeout is an option but I prefer not to use timeout if not needed.\nDo you not consider this a bug? basically with button='no' I would expect that the value will be changed on change, not on blur. (the docs states on change). ",
    "Irfanbsse2060": "bt this function gets called when i click on submit button.i want to call function while editing the text field. ",
    "kongbb": "https://jsfiddle.net/6960k8vv/15/. ",
    "harryyuanfeng": "it shows empty instead of the string 'harry'. well, I solved this by doing this:\n.directive(\"editDeviceName\", function() {\n    return {\n        scope: {\n            text: '='\n        },\n        template : '<a href=\"#\" editable-text=\"text\">{{ text || \\'empty\\' }}</a>'\n    };\n})\nscope.name = 'harry';\nscope.title = '<edit-device-name text = \"name\"></edit-device-name>';\n<span bind-html-compile=\"title\"></span>\n. ",
    "fnk": "I will conjure a test over the weekend!. @ckosloski sorry for the late reply. i am currently moving home, hope to get back to you by the end of the week.. ",
    "chiu0602": "Hi @ckosloski, minuteStep is an attribute which is working fine, when the attribute with value 5, the combobox of minute shows 0,5,10,15,...,55 for user to select; when the attribute with value 15, the combobox of minute shows 0,15,30,45 for user to select.\nWhether to round up or down the value depends on scenarios, I don't have comment on it. But when \npressing the tick button, the selected value should be set as the variable value.\nThanks!. Would anyone able to help to create a test case? I don't familiar with the unit test code and don't know how to create a control with desired value for me to test. Thanks.. My pleasure. Thanks @ckosloski maybe you have provided a hint for me, here is my code:\n<table>\n  <tr>\n    <td>Item</td>\n    <td>Price</td>\n    <td>File</td>\n    <td>Action</td>\n  </tr>\n  <tr ng-repeat=\"item in user.items\">\n    <td>\n      <span editable-select=\"item.id\" e-name=\"item\" onshow=\"loadItems()\" e-form=\"rowform\" e-ng-options=\"i.id.toString() as i.name for i in items\">\n        {{ showItem(item) }}\n      </span>\n    </td>\n    <td>\n      <span editable-text=\"item.price\" e-name=\"price\" e-form=\"rowform\" onbeforesave=\"checkPrice($data)\" e-required>\n        {{ item.price }}\n      </span>\n    </td>\n    <td>\n      <a href=\"#\" editable-file=\"item.file\">{{ item.file || 'None' }}</a>\n    </td>\n    <td>\n      <form editable-form name=\"rowform\" ng-show=\"rowform.$visible\" class=\"form-buttons form-inline\" shown=\"inserted == item\">\n        <button type=\"submit\" ng-disabled=\"rowform.$waiting\" class=\"btn btn-primary\"><span class=\"glyphicon glyphicon-ok\"></span></button>\n        <button type=\"button\" ng-disabled=\"rowform.$waiting\" ng-click=\"rowform.$cancel()\" class=\"btn btn-default\"><span class=\"glyphicon glyphicon-remove\"></span></button>\n      </form>\n      <div class=\"buttons\" ng-show=\"!rowform.$visible\">\n        <button class=\"btn btn-primary\" ng-click=\"rowform.$show()\"><span class=\"glyphicon glyphicon-pencil\"></span></button>\n        <button class=\"btn btn-danger\" ng-click=\"removeItem($index)\"><span class=\"glyphicon glyphicon-trash\"></span></button>\n      </div>\n    </td>\n  </tr>\n</table>\n...\n...\n<button class=\"btn btn-lg btn-primary btn-block\" ng-show=\"allowSubmit\" ng-click=\"submitForm(userForm.$valid)\">Submit</button>\nI use \"input file\" with \"Editable row\" and expected to upload in a bulk with other data when I click \"Submit\" button. Can \"input file\" works with \"Editable row\"? Thanks!. I have modified the editable-form example and created file upload field\nhttp://jsfiddle.net/y31obvr0/\nAfter I have chosen the file, the file field become \"None\", that means the info for file input haven't been stored. The demo doesn't actually do the upload but the behavior is already unexpected. If the model have no information stored for the file to be uploaded, the file should not be able to be uploaded.. So that means angular xeditable not supports , it should be removed on demo page to avoid misleading.. ",
    "hash-bang": "I would like to have stand-alone editable controls within a form but not have the 'editable-form' functionality which makes all form items editable or not.\nSo clicking on the above <a/> should enter editable mode as if it were nested inside a regular <div/> instead of a <form/>.. Its a solution yes, but using $form.$show() and so on makes the entire form editable at once. I'm just after one element being editable at a time. Similar to the stand-alone editable controls (i.e. any component not already inside a form).\nBasically my query is why wrapping an element inside a <form> acts differently to wrapping it in a <div>. Is it possible to have a non-editable form so to speak.. The situation is that I have a very very large form containing lots of moving parts. I'm using a form tag because Angular provides various functionality with this - validation, submit managing etc.\nWithin this large form I have a table of many rows/columns that contains information. Rather than display a lot of input textboxes I thought it would be nicer to use xeditable to allow the table to display as normal text and clicking a cell would allow the user to change that one value.\nThe problem as I see it is that xeditable has its own conceptual meaning for form which conflicts with Angular. In Angular / HTML a form is a collection of elements that get managed together, validated together and submitted together. I suspect xeditable tries to use the same conceptual 'togetherness' but adds the restriction that if an xeditable component is within a form it can only ever be edited with its peers. In the above example, I could only allow the entire table contents to be edited and not one cell for example.\nI would suggest rather than xeditable throwing an error when a component isn't nested inside a form with a 'editable-form' attribute, as it does now, this behaviour should be changed so that it acts as a standalone xeditable component. This would allow the following two scenarios:\njavascript\nForm that can only be edited all at once:\n<form editable-form>\n    <a editable-text=\"foo\">foo</a>\n    <a editable-text=\"bar\">bar</a>\n    <a editable-text=\"baz\">baz</a>\n</form>\njavascript\nForm where each widget acts as a stand-alone:\n<form>\n    <a editable-text=\"foo\">foo</a>\n    <a editable-text=\"bar\">bar</a>\n    <a editable-text=\"baz\">baz</a>\n</form>. Ah ha! Yes thats exactly what I'm after.\nIs there a list of these e-* attributes somewhere? I realise they effect the downstream style and arn't really 'core' but I can't seem to find them anywhere in the documentation.. Much appreciated. Thanks for all your help.. ",
    "joweste": "Yes, I already did it and put your tip. About the watch in the function, Is angular putting a watch in the function or x-editable  is doing it?. ",
    "nnickd": "This helps, thanks!. ",
    "Malathikarkera": "I just commented this line on xeditable.js file then the above error cleared and functionality is working fine . Is this solution a good practice and feasible ?\nself.save = function() {\n     // valueGetter.assign($scope.$parent,\n       //   self.useCopy ? angular.copy(self.scope.$data) : self.scope.$data);\n  // no need to call handleEmpty here as we are watching change of model value\n  // self.handleEmpty();\n};\n\nPlease someone help me regarding this issue. \n. ",
    "rolivares": "just like that!, thanks. ",
    "piotr-dobrogost": "Thanks!. In my case some fields should only be editable when adding new entries and not when editing existing ones. That is why upon entering edit mode I hide edit fields which are not meant to be used when editing (as opposed to adding) entry. I guess better approach on my side would be to use something like ng-show and conditionally show edit fields based on weather user is editing already existing entry or adding a new one. Though I'm not sure how to go about accessing mode (add/edit) in ng-show attribute of edit fields?. Ok, in this case I'm going to change approach. Still I guess there should be easy way to access edit fields by name in more advanced scenarios. Closing for now. I guess if more people want this then this issue could be reopened later.. Would like to revisit this. Does angular-xeditable create underneath standard AngularJS input component (one from those listed at https://docs.angularjs.org/api/ng/input) and if so then how to access it from (or pass into) onbeforesave() function? Such a component has for example $valid and $error properties.. It looks like you linked this issue by mistake.. > Are you trying to use an editable-select and make it read-only and not disabled?\n\nIt so, yes, there is no good way of doing it.\n\nWell, I hoped that e-readonly would be smart enough to use whatever attribute is suitable for specific type of input field which for <select> appears to be disabled. Now that I know it's not that smart setting disabled myself seems like a good option.\n\nYou would have to try one of the suggested options using css/js or both to make it look read-only.\n\nI would like to avoid this extra complexity if I can.\n\nWhat is your use-case?\n\nWhen editing item some fields which are editable during addition are not meant to be editable anymore.\n\nMaybe just display a read-only text field if they can't change it and display the select for when it's changeable.\n\nThat's what I ended up with. It would be nice to have some e-if attribute which would do this automatically.\n. Thanks for suggestion. I've seen all date and time controls listed in the docs but datetime-local on Chrome and Edge is much nicer and one day it will be available on Firefox too. That's why I wanted to try and make it work. Any idea how to perform my pre and post edit transformations?. No, it's not as there is no way to neither modify model in onbeforesave (it will be overwritten later with the original $data by the library) nor to return a value which the model should be set to.\nIn other words you can pass new value as $data parameter to onbeforesave but there is no way to pass modified (final) new value from onbeforesave to be used later by the library when updating the model. You are forced to make a side note inside onbeforesave what the new final value should be, return false and then inside onaftersave consult the side note you had made and possibly update model yourself accordingly.\nCurrent flow: onbeforesave (take a side note with the final new value and return false) \u279e the library updates model with the new value (instead of the final new value) \u279e onaftersave (consult the side note and update model with the final new value yourself)\nDesired flow: onbeforesave (return the final new value) \u279e the library updates model with the final new value\nTo sum it up, there's no way to update model right from onbeforesave now.. ",
    "pdemilly": "radiolist should accept number or string as value. Just looking at the code quickly it looks like:\nparsed.locals.valueFn should be tested is it needs surrounded quotes, something like that:\nvar ngValue = isNaN(parsed.locals.valueFn) ? '\\\"'+parsed.locals.valueFn+'\\\"' : parsed.locals.valueFn;\nbut then again this code is confusing. too many +  why  not interpolate the whole string\nvar html = '<label data-ng-repeat=\"'+parsed.ngRepeat+'\">'+\n          '<input type=\"radio\" data-ng-disabled=\"::' +\n            this.attrs.eNgDisabled +\n            '\" data-ng-model=\"$parent.$parent.$data\" data-ng-value=\"' + $interpolate.startSymbol() +\n            '::' + parsed.locals.valueFn + $interpolate.endSymbol() +'\"' +\n            ngChangeHtml + ngNameHtml + '>'+\n          '<span data-ng-bind=\"::'+parsed.locals.displayFn+'\"></span></label>';\n`var local = { \n     ngRepeat: parse.ngRepeat,\n     eNgDisabled: atts.engDisabled,\n     $data: $parent.$parent.$data,\n     startSymbol: $interpolate.startSymbol(),\n     endSymbol: $interpolate.endSymbol,\n     ngChangeHtml: ngChangeHtml,\n     ngNameHtml: ngNameHtml,\n     ngValueFn: isNaN(parsed.locals.valueFn) ? '\\\"'+parsed.locals.valueFn+'\\\"' : parsed.locals.valueFn,\n     displayFn: parsed.locals.displayFn\n};\nvar htmlString = '' +\n        '' +\n        '' +\n''\nvar html = $interpolate (htmlString, locals); \n`\nBut then again using ES6 multiline strings would be a lot easier to read. The problem is not about using value or ng-value the problem is that you build a string which is going to be interpolated and the valueFn is not surrounded by quotes so it can only take real numbers or strings representing numbers. Anything else will generate an interpolation error as it should.. My code was mostly pseudo code.  On my end I didn't modify desirable since\nI'm using wrappers using angular components    if I find some time I'll do\na PR\nOn Oct 9, 2017 8:29 AM, \"ckosloski\" notifications@github.com wrote:\n\nHI @pdemilly https://github.com/pdemilly I tried using your code above,\nbut I could not get it to work.\nHere is what I did:\nvar local = {\n            ngRepeat: parsed.ngRepeat,\n            eNgDisabled: this.attrs.engDisabled,\n            //$data: \"$parent.$parent.$data\",\n            startSymbol: $interpolate.startSymbol(),\n            endSymbol: $interpolate.endSymbol,\n            ngChangeHtml: ngChangeHtml,\n            ngNameHtml: ngNameHtml,\n            ngValueFn: isNaN(parsed.locals.valueFn) ? '\"'+parsed.locals.valueFn+'\"' : parsed.locals.valueFn,\n            displayFn: parsed.locals.displayFn\n        };\n    var htmlString =\n        '<label data-ng-repeat=\"'+parsed.ngRepeat+'\">'+\n        '<input type=\"radio\" data-ng-disabled=\"{{eNgDisabled}}\"' +\n        'data-ng-model=\"$parent.$parent.$data\" data-ng-value=\"{{startSymbol}}{{ngValueFn}}{{endSymbol}}\"' +\n        '{{ngChangeHtml}} {{ngNameHtml}}/>'+\n        '<span data-ng-bind=\"'+parsed.locals.displayFn+'\"></span></label>';\n\nvar html = $interpolate (htmlString)(local);\nI had to comment out $data because it could not find $parent during\ninterpolation.\nThis code produces this html:\n\nWhich doesn't work. Any suggestions?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/issues/694#issuecomment-335193116,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AB9aGMvUwC41aUGU_eWQcnfbWZCiDsbPks5sqjv0gaJpZM4PqAx9\n.\n. \n",
    "bravility": "@ckosloski To some extent, yes. But I would rather use Editable row than Editable table, can I fix it in Editable row? instead of use Editable table. ",
    "johnzakariasabry": "the problem is ctrl value\ni have 2 pull donwn menu one for year and other for month.. when i change value of month it only set validity for months and when i change the year it set validity for only year\nso how to set validity for ctrl that is not clicked notice that i know its name , id and model id. i dont know how to call directive in on before save or i will make it into controller?\ni want to make it on change. ",
    "logan-jobzmall": "$data does get not populated unfortunately. I believe I saw another ticket around that.... Testing now.... Thanks!. Worked! Thank you. ",
    "santilin": "I didn't, but I have done now and still I can't find any references to e-uib-typeahead. Is it possible that the 'e-' prefix is added by the xeditable extension?. ",
    "josemonsalve2": "I am not that familiarized with your code, but would this work? \ncombodate.$widget.find('select').bind('change', function(e) {\n          //.replace is so this works in Safari\n          self.scope.$data = combodate.getValue() ?\n              moment(combodate.getValue(), combodate.options.format).toDate().toISOString() : null;\n        });. I just realized that the problem with YYYY - 1 is with the | date: filter. I will do this by the end of next week, I can't right now. I am trying to finish a project. . I would highly appreciate that. I have had no time to do that. . JsFiddle here\nhttps://jsfiddle.net/josemonsalve2/u03z4kw2/. Sorry I forgot to stage my changes in the jsFiddle as base. Now it should be updated with the issue . It looks good to me\n. Also, thanks for being so responsive. @ckosloski is right. I felt free to use moment.js due to the mention in the documentation.. ",
    "jmliz": "nvm, it works. thanks.. ",
    "fborges42": "Thanks for the input @ckosloski this worked!. ",
    "yeeland": "@ckosloski originally, we had textareas that would cancel whenever you blurred but users would type long content in those textareas, click outside of the form, and lose all that they had typed in the input. However, they do like the convenience of being able to click outside of the form if they haven't typed anything instead of having to find and click the cancel button.. @ckosloski To answer your second question in the original comment, we are looking to avoid a backend call unless the user has hit the save button.. ",
    "dementic": "Every time you OPEN it, but if you need something to be calculated on the fly based on the input, it does not work.\nHere is a fiddle:\nhttps://jsfiddle.net/s4qva61w/8/\n  @ckosloski  anything else?. Am away until the end of the month, will do as soon as I'm back.\nOn Jan 17, 2018 01:59, \"ckosloski\" notifications@github.com wrote:\n\n@dementic https://github.com/dementic please review\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vitalets/angular-xeditable/pull/715#issuecomment-358159446,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABxVIBpK66IyGl-1Rs6u2lm6mGvKpbQhks5tLUYGgaJpZM4Rgp1x\n.\n. \n",
    "KetanJain6333": "when i am adding more fields then two way binding is not working.\ni am printing the arrrayObject(\nconsole.log(\"2wayBinding\",$scope.activeModules['settings/customer-profile/get-customer-details'].profileData.contact)\n) after clicking the add more field.\nPlease go through the code\ncode:\nHTML Code-->\n\n \n\n  {{contacts.title}}    {{contacts.name}}    {{contacts.email}}    {{contacts.number}}   \n\n\n buttons to submit / cancel form \n \n      \n\nJS Code-->\n$scope.addNewChoice = function() {\n $scope.activeModules['settings/customer-profile/get-customer-details'].profileData.contact.push({});\n\nconsole.log(\"2wayBinding\",$scope.activeModules['settings/customer-profile/get-customer-details'].profileData.contact)\n   };\n$scope.removeNewChoice = function(index) {\n     if(index >= 0 && $scope.activeModules['settings/customer-profile/get-customer-details'].profileData.contact.length>1){\n        $scope.activeModules['settings/customer-profile/get-customer-details'].profileData.contact.splice(index, 1);\n         console.log(\"index\",index)\n    }\n   }\n\nFrom: ckosloski notifications@github.com\nSent: Tuesday, January 30, 2018 3:53:07 PM\nTo: vitalets/angular-xeditable\nCc: Ketan Jain; Author\nSubject: Re: [vitalets/angular-xeditable] two way binding (#717)\nThat is a \"feature\" of angular-xeditable. That is how it was designed.\nWhat problem are you trying to solve that would require two-way binding?\nI will be happy to review any PR's submitted.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/717#issuecomment-361775084, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AiSVvRT7zF9GWKOJTozchXsLBdLInaYpks5tP6tjgaJpZM4Rx50H.\n. when i type into input box then it should get bind like it does in ng-model angularjs which is called two binding but in editable-text case it didn't get binded.\nhttps://www.w3schools.com/angular/tryit.asp?filename=try_ng_model_two-way ----->want this feature in editable-text=\"\" https://www.w3schools.com/angular/tryit.asp?filename=try_ng_model_two-way\nTryit Editor v3.5 - W3Schoolshttps://www.w3schools.com/angular/tryit.asp?filename=try_ng_model_two-way\nwww.w3schools.com\nSave to Google Drive. If you have a Google account, you can save this code to your Google Drive. Google will ask you to confirm Google Drive access.\n\nFrom: ckosloski notifications@github.com\nSent: Wednesday, January 31, 2018 5:50:31 AM\nTo: vitalets/angular-xeditable\nCc: Ketan Jain; Author\nSubject: Re: [vitalets/angular-xeditable] two way binding (#717)\nCan you add a plnkr or jsfiddle showing your issue?\nI don't quite understand what your issue is.\nOn add, you are logging something and the logging isn't working?\nOr is the display of the new row not happening on add?\nOne observation, I think you need to actually add an object on the push, something like:\n$scope.addNewChoice = function() {\n$scope.inserted = {\n      name: '',\n      email: '',\n      number: ''\n    };\n  $scope.activeModules['settings/customer-profile/get-customer-details'].profileData.contact.push(inserted);\n };\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/717#issuecomment-361937592, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AiSVvQwfg3qYFCm2d4Nh45naX0asvfvxks5tQG-ngaJpZM4Rx50H.\n. Hi,\nPlease find the attached screenshot and help us out in implementing this functionality where i want to create a dynamic form on clicking add button and remove the same.\nThanks & Regards\nKetan Jain\n\nFrom: ckosloski notifications@github.com\nSent: Thursday, February 1, 2018 6:36:28 AM\nTo: vitalets/angular-xeditable\nCc: Ketan Jain; Author\nSubject: Re: [vitalets/angular-xeditable] two way binding (#717)\nI'm sorry, but angular-xeditable is not setup that way.\nI can try and help you find a solution to your specific problem if you describe it more or provide a plunkr/jsfiddle.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/vitalets/angular-xeditable/issues/717#issuecomment-362284226, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AiSVvcYRbcSK2EPK8zpWw9nVw6G0djcEks5tQcvsgaJpZM4Rx50H.\n. ",
    "IainmXray": "Thanks for the reply.  Yes I have tried that.  Example usage:\n<a href=\"\" popover-placement=\"bottom\" editable-text=\"editCtrl.sourceValue\"\n   class=\"editable editable-click\" onbeforesave=\"editCtrl.IsValueValid($data)\"\n   onaftersave=\"editCtrl.OnAfterSave()\">{{ editCtrl.sourceValue || \"empty\" }}</a>\n\nThe tag has no effect.. I am using the Editable popover which is working in every way but does not respond to popover-placement.  I will investigate further.. ",
    "Fossil01": "I've looked at that example but don't fully understand. How would I fix my sample code to make that work?. ",
    "s2jrchoi": "Thank you!!\n/* editable-empty */\n.editable-empty, \n.editable-empty:hover, \n.editable-empty:focus,\na.editable-empty, \na.editable-empty:hover, \na.editable-empty:focus {\n  font-style: italic !important; \n  color: #888888 !important;  \n  text-decoration: none !important;\n  font-size:small !important;\n}. ",
    "shrikantthorve": "Thanks ckosloski. I will try and let you know.. ",
    "4blocksinc": "Nope, is it possible with ui-select? I am using HTML5 select box.. ",
    "praveen252elite": "thank you !!. ",
    "kuiperr005": "You're right, thanks!. ",
    "pompalini": "@ckosloski for PR and @ckosloski for merge.. ",
    "zavod": "So, how should it work?. ",
    "sinall": "@ckosloski it could work if the dropdown-menu is created by angular-bootstrap library.\n. @ckosloski I use it to refresh the select list and view/create new item.\nThe 'select' and dropdown-menu stay in a row.\n. The inputs are editable-select, a dropdown menu is next to it.\nThe items in the select could be viewed/created/refreshed by choosing one of the dropdown menu item.\n. Doesn't work on firefox, did you change the code? I can not find 'e-ng-change'.. I tried several times. But it doesn't display correct.\nIt shows like this:\n\nBrand: Ford\nModel: havent selected\ncar { \"brand\": \"Ford\", \"model\": \"havent selected\" }\nbrands [ { \"value\": \"Ford\", \"text\": \"Ford\" }, { \"value\": \"Toyota\", \"text\": \"Toyota\" }, { \"value\": \"Nissan\", \"text\": \"Nissan\" } ]\nmodels{ \"Ford\": [ \"Focus\", \"Fiesta\" ], \"Toyota\": [ \"Camry\" ], \"Nissan\": [ \"Siesta\", \"Sentra\" ] } \n. \n",
    "osvathrobi": "One hack-fix is to move this code from the self.render method into the self.show method right before triggering self.onshow:\nif (self.popover) {\n        var wrapper = angular.element('<div></div>');\n        wrapper.append(self.editorEl);\n        self.editorEl = wrapper;\n        $templateCache.put('popover.html', self.editorEl[0].outerHTML);\n}\nThis will fix both the missing class names and creating the bsdate controls.. ",
    "sherlock1982": "Workaround: downgrade angular-aria to 1.7.2. ",
    "gkalpak": "The regression should have been fixed with angular/angular.js#16680. It is not released yet (will happen in the next few days - possibly tomorrow). In the meantime, you can try out the latest version from https://code.angularjs.org/snapshot/ and see if the error goes away \ud83d\ude4f . For future reference, the fix is included in v1.7.4. @sherlock1982, can you confirm that upgrading to v1.7.4 fixes the issue?. ",
    "ulumjoe": "Well, i tried to create at plunker or jsfiddle but it sems xeditable is not working there,\nin my project I have a table, inside the table I have record when user click on data, they can update it (without click button first like in demo). The selected data become hidden instead of showing form for edit.\nThx in advance.. Well, it seems when we place editable-text inside  tag it will become hidden\nmy old tag :\n<td editable-text=\"user.name\">{{user.name}}</td>\nso I add  tag inside \nand become this :\n<td><a href=\"#\" editable-text=\"user.name\">{{user.name}}</a></td>\nIt worked again.. ",
    "brunobottazzini": "Update: \nI was able to force the refresh by adding \n$(\"#editableNumber\").text($scope.kgScorte).trigger('change');\nHowever, the $parent.$data model does not update. So when we click in the number to update it shows the previous selected updated number. It works as half solution.. Hi @ckosloski,\nYes I put the 'return true;' but still the local model is not updated.. ",
    "amfsyn": "Do you think it's technically possible to replace the entire row with an enclosed \\<form> on edit? I know that's a big ask, but it would preserve native form behavior.. I ran with what you gave me and created a simple directive that makes the solution easy. If you put this on the table's \\<tr> you can really easily add submit on enter.\napp.directive('submitOnEnter', function () {\n    return {\n        link: function (scope, element, attrs) {\n            $(element).keypress((event) => {\n                if (event.keyCode === 13) { // <enter>\n                     $(element).find('form').find(':submit').click();\n                }\n            })\n        }\n    }\n});\nDo you think this would be fit for a PR?. ",
    "lohxx": "I've found a possible solution to this problem, but i need to send a pull request. Could anyone help me with that?. I am having some problems to build and run the tests of the project.. Thanks, i will try to run these steps later!. "
}