{
    "lawloretienne": "Could you add a stack trace of the crash?  Also when you create a newInstance of the QuickReturnFragment class what are you passing into the constructor?\n. If you take a look at https://github.com/lawloretienne/QuickReturn/blob/1f971cd847d44e2f8f30d202f79d854122838ff5/app/src/main/java/com/etiennelawlor/quickreturn/activities/QuickReturnScrollViewActivity.java\nin the SectionsPagerAdapter class, in the getItem() method I am instantiating the QuickReturnFragment class like this\nbundle.putString(getString(R.string.quick_return_type),\n                            QuickReturnType.HEADER.name());\n                    return QuickReturnFragment.newInstance(bundle);\nWhat are you passing into the bundle, the param of the newInstance() method ?\n. So its no longer crashing, since you are now correctly passing in the bundle to the constructor.  Can you tell me what exactly you are passing into the constructor, so I can see which type of QuickReturnFragment is causing issues.\n. Is the QuickReturnType of type QuickReturnType.HEADER, QuickReturnType.FOOTER, or QuickReturnType.BOTH?\n. By the way, adding a code snippet in a gist \nhttps://gist.github.com/\nIs a very easy way to share code.  And supports multiple languages as far as syntax highlighting.\n. So up to this point, you are trying to use a QuickReturnFragment of type FOOTER, it is not crashing but the footer is not scrolling out of view or into view.  Is that correct?  Could you attach a screenshot of what it looks like on your phone?\n. In that xml file you attached i can see two scrollable views.  A NotifiyingScrollView and a ListView, are you sure you want both?  My library is intended to work with one scrollable view at a time.\n. Could you attach a screenshot? I noticed on line 105 you start an xml comment but never close the comment\n. Ok so let me ask the question, if you want a scrollable area, is it going to be a ListView or a ScrollView?  Because you should not have both in the same xml file.\n. QuickReturnFragment.java \nshould be used if the scrollable area is a ScrollView,\nQuickReturnFooterListFragment.java\nQuickReturnFooterList2Fragment.java\nQuickReturnFooterList3Fragment.java\nQuickReturnHeaderListFragment.java\nQuickReturnHeaderList2Fragment.java\nQuickReturnHeaderList3Fragment.java \nshould be used if the scrollable area is a ListView\n. If its a ListView, then you should not use QuickReturnFragment.java\n. also if its a ListView, then you don't want a NotifiyingScrollView in your xml.\n. I would say the best way to know which one to use, is download the demo app from the play store (the link to the app is in the README of this github repo), and find which set up you like the best.  If you do that and let me know, I can help point you in the right direction as far as which classes are involved.\n. Thanks for the feedback. That is actually something I am trying to figure\nout. How to make a sample and library project in the same repo. Do you have\nany examples or tutorials of how to do this?\nOn Aug 25, 2014 5:42 AM, \"Paul Burke\" notifications@github.com wrote:\n\nIt's not fun having to search through an entire project just to see how\nsomething is fundamentally implemented. This is especially true for ones\nlike this, where the \"library\" and examples are in the same project. It\nwould be better to create two different projects, library and samples.\nAlso, a simple example in the README would go a long way.\nAs it is now, it's completely unclear which dependencies are actually\nneeded, and how to use this as an Android library project.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/issues/2.\n. Hey @iPaulPro I have made my first attempt as setting up a library project within this repo and adding some sample Usage to the README.  If you have any feedback, let me know.  Thanks.\n. I have updated the README with simple setup instructions for Gradle or Maven.\n. I believe the minSdk should be 14.  The minSdk of your project should be no lower than the minSdk of the library project.\n. Typo has been fixed.\n. Hey @dhrumit123 thanks for reporting this issue.  Can you give me some more details.  Have you installed the latest version?  What phone are you testing with?  What version of Android is your phone running?  On what screen are you experiencing this crash?\n. @feay1234 I have set up my gradle project in Android Studio.  I am not familiar with the exact configuration that is needed to make it run in Eclipse.\n. I have updated the README with simple setup instructions for Gradle or Maven.\n. Hey @longkai , thanks for reporting these two issues.  The first thing you reported, does not seem to be a problem, as you scrolldown on the Twitter screen, the tabs should disappear as they do in the official Twitter app.\n\nThat second thing you reported I am looking into.\n. As for the first issue, I will try to clear some things up.  The twitter screen as with other screens that contain multiple tabs, are using a ViewPager.  When you change pages of the ViewPager, from let's say the first tab to the second tab, the previous position (height of the tabs when on the second page) should be preserved.  If this is not happening, then there is an issue.\nCan you explain a little more about the second concern?  What do you mean by the QuickReturnListViewOnScrollListener should have the ability to take other OnScrollListener(s)?  Could you provide a code snippet to help demonstrate your point?\n. Thanks for the feedback. That is very informative. If you believe you have\na potential solution then you can submit a pull request and I can review\nyour changes.\nOn Sep 9, 2014 9:42 AM, \"\u9f99\u51ef\" notifications@github.com wrote:\n\nsorry for the delay.\nThe first should not be an concern. The ViewPager has an method called\nsetOffscreenPageLimit, default value is 1, which means when we scroll\nthe tab from the first to second(in order), the two page will be preserved\nbut from the first to the third page and go back to the first page and the\nfirst page would reconstruct. But your set the value to 2, that will be\nok(but it takes more memory). It seems I made a mistake, sorry.\nThe second concern. For example, the QuickReturn widget needs to detect\nthe list' s scroll listener to to make the quick return behaviour which\nis fine. However, like the Twitter' s timeline, when scrolling to the\nbottom, the list should load more tweets which also needs to detect the\nlist' s scroll listener. The both will conflict and only the last\nOnScrollListener listener will call.\nSo, my solution is to provide a List field\nin the QuickReturnListViewOnScrollListener which allow others register\nother OnScrollListener(s). Finally, iterator the list and perform its\nonScrollStateChanged and onScroll method in\nQuickReturnListViewOnScrollListener.\nsorry for my english...\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/issues/6#issuecomment-54999185\n.\n. @longkai is this still an issue?\n. Hey @nguyentruongtho thanks for removing the IntelliJ related files.  I definitely wanted to do that.  I had a comment on the updated .gitignore file though, it seems that there are some duplicates things that get ignored such as\n\n.gradle/\nbuild/\nIf you remove these duplicates then I will merge your pull request.\nThanks again.\n. Hey @nguyentruongtho, thanks again for the pull request.  I looked at you TradeHero app, but couldnt find where in the app you are using QuickReturn.  Could you point that out to me?\n. Well I added you to my list in the updated README of my library. Hope that\nhelps with exposure to your app.\nOn Sep 7, 2014 8:06 PM, \"Nguyen Truong Tho\" notifications@github.com\nwrote:\n\n@lawloretienne https://github.com/lawloretienne I forgot to mention, it\nwill come out in the next version (2.4), eta few weeks from now. I've just\nadded recently to implement our new feature.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/pull/7#issuecomment-54772688\n.\n. I can't wait to see your update with the QuickReturn library being used.\nIts very satisfying to see people interested in this project.\n On Sep 7, 2014 8:12 PM, \"Nguyen Truong Tho\" notifications@github.com\nwrote:\nSure, thanks\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/pull/7#issuecomment-54772934\n.\n. Hey Nguyen,\n  I see that you have finally put in the quickreturn ui pattern in your\napp.  It looks good.  I just wanted to make a suggestion that may simplify\nyour UI.  So right now you have to ways to navigate to the same screen\n(tabs at the bottom, and the navigation drawer).  I would consider just\nusing the navigation drawer if I were you. This document about the\nnavigation drawer should help\nhttps://developer.android.com/design/patterns/navigation-drawer.html#WhenToUse\n\nOn Sun, Sep 7, 2014 at 8:19 PM, Nguyen Truong Tho notifications@github.com\nwrote:\n\nYou can have a quick look at how I used it here:\nhttp://www.youtube.com/watch?v=-rlXQ8AEEJQ This is still in on-going\ndevelopment without any UI polishing, but please feel free to comment [image:\n:+1:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/pull/7#issuecomment-54773221\n.\n\n\n-Etienne Lawlor (Software Developer)\n. I would suggest that direct clones of iOS apps on android are unfamiliar to\nandroid users and Google is strongly against this practice\nOn Oct 24, 2014 11:20 PM, \"Nguyen Truong Tho\" notifications@github.com\nwrote:\n\n@lawloretienne https://github.com/lawloretienne Thank you for the\nadvice, I would use Navigation drawer if there isn't a decision from the\nboard to make our android app as close as possible to the iOS app:\nhttps://itunes.apple.com/sg/app/tradehero-mobile/id572226383?mt=8. I\noften use the navigation drawer in my personal app [image: :+1:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/pull/7#issuecomment-60473256\n.\n. ohh gotcha.  that makes sense.\n\nOn Thu, Oct 2, 2014 at 12:34 AM, \u9f99\u51ef notifications@github.com wrote:\n\nThanks, @lawloretienne https://github.com/lawloretienne\nFor example, like the twitter timeline list, when the user scrolling to\nbottom, we need to load more tweets usually. We need to add an\nOnScrollListener to detect whether it reaches the bottom. However, the\nQuickReturn also needs an OnScrollListener but the listview can only add\none.\nThat' s one of the purposes.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/pull/8#issuecomment-57593629\n.\n\n\n-Etienne Lawlor (Software Developer)\n. to support pagination\nOn Thu, Oct 2, 2014 at 11:07 AM, Etienne Lawlor lawloretienne@gmail.com\nwrote:\n\nohh gotcha.  that makes sense.\nOn Thu, Oct 2, 2014 at 12:34 AM, \u9f99\u51ef notifications@github.com wrote:\n\nThanks, @lawloretienne https://github.com/lawloretienne\nFor example, like the twitter timeline list, when the user scrolling to\nbottom, we need to load more tweets usually. We need to add an\nOnScrollListener to detect whether it reaches the bottom. However, the\nQuickReturn also needs an OnScrollListener but the listview can only add\none.\nThat' s one of the purposes.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/pull/8#issuecomment-57593629\n.\n\n\n-Etienne Lawlor (Software Developer)\n\n\n-Etienne Lawlor (Software Developer)\n. Maybe that fragment can be renamed to represent something about pagination\nor some stuff in the UI that makes that clear to other devs.\nOn Thu, Oct 2, 2014 at 11:07 AM, Etienne Lawlor lawloretienne@gmail.com\nwrote:\n\nto support pagination\nOn Thu, Oct 2, 2014 at 11:07 AM, Etienne Lawlor lawloretienne@gmail.com\nwrote:\n\nohh gotcha.  that makes sense.\nOn Thu, Oct 2, 2014 at 12:34 AM, \u9f99\u51ef notifications@github.com wrote:\n\nThanks, @lawloretienne https://github.com/lawloretienne\nFor example, like the twitter timeline list, when the user scrolling to\nbottom, we need to load more tweets usually. We need to add an\nOnScrollListener to detect whether it reaches the bottom. However, the\nQuickReturn also needs an OnScrollListener but the listview can only add\none.\nThat' s one of the purposes.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/pull/8#issuecomment-57593629\n.\n\n\n-Etienne Lawlor (Software Developer)\n\n\n-Etienne Lawlor (Software Developer)\n\n\n-Etienne Lawlor (Software Developer)\n. Sure. That would work.\nOn Oct 3, 2014 12:56 AM, \"\u9f99\u51ef\" notifications@github.com wrote:\n\nIt makes sense, should be another pull request?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/pull/8#issuecomment-57766179\n.\n. Thanks again for contributing to the library.\nOn Oct 3, 2014 8:46 AM, \"Etienne Lawlor\" lawloretienne@gmail.com wrote:\nSure. That would work.\nOn Oct 3, 2014 12:56 AM, \"\u9f99\u51ef\" notifications@github.com wrote:\n\nIt makes sense, should be another pull request?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/pull/8#issuecomment-57766179\n.\n. @adamin1990 I believe this attribute has been removed from build.gradle.  Is this still an issue for you?\n. @ilandbt What does your layout file fragment_new_home_layout.xml look like?\n. @somghosh @clau007 Sorry I don't have this up as a maven repo.  I actually have tried to go through the process to turn this into a maven repo but it was really difficult to set up.  If anyone has suggestions or is willing to help me with this, I am all ears.\n. I have updated the README with simple setup instructions for Gradle or Maven.\n. @saityoukou I have tried to convert this into an .aar but couldn't figure it out.  Do you know how to do this?\n. I have updated the README with simple setup instructions for Gradle or Maven.\n. That would be great if you could provide a pull request for this issue.\n\n\nOn Sun Jan 25 2015 at 6:38:09 AM Andreas Lukito notifications@github.com\nwrote:\n\nHello, thanks for creating such a nice library.\nI was running the example code and found that the first and second item\nfrom R.array.countries (United States Of America and Afghanistan) was\ncovered by the header. I'm trying to scroll up and down, but it still\ncannot show the first and second item.\nScreenshot:\n[image: quickreturnitemnotshown]\nhttps://cloud.githubusercontent.com/assets/708537/5891816/42390678-a4da-11e4-9d78-71cb6cbb6ec1.png\nAfter checking the layout (fragment_list_quick_return_header.xml), I find\nthat the problem is in the layout. The CustomTextView and the ListView do\nnot have the position set between each other. After I change the layout\ninto the code below, it solve the problem.\n\n```\n\n\n```\n\nHope it helps, I can provide a pull request if you want me to. Thanks\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/issues/14.\n. @evliya I believe that is exactly how I would handle it too.  Creating a dummy list item to be the exact height of the quick return header view.  I am doing something similar in the Twitter example.\n. Hey @ayyb1988, can you be more specific?  What issues are you experiencing?\n. Thanks for pointing this out.  I have wanted to do this, but am not sure how.  How would I do this?\n. I was wondering what exactly I would need to add to .gitignore since i have\nthe password in the build.gradle file.  Would i need to add build.gradle to\n.gitignore or do I have to alias the passwords somehow, im just not sure\nabout how to do that part.\n\nOn Wed, Feb 11, 2015 at 11:25 AM, ewhite-dev notifications@github.com\nwrote:\n\nwell, adding to gitignore is a simple command but retroactively removing\nfiles from old commits is something I don't know off the top of my head so\nlook at this highly upvoted answer on stackoverflow:\nhttp://stackoverflow.com/a/7532131/727429\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/issues/16#issuecomment-73946436\n.\n\n\n-Etienne Lawlor (Software Developer)\n. Thanks @ewhite-dev for bringing this to my attention.\nSo I followed the steps in this blog post\nhttp://www.thoughtworks.com/insights/blog/signing-open-source-android-apps-without-disclosing-passwords\nThen to untrack a file in a git repo (http://stackoverflow.com/questions/1274057/making-git-forget-about-a-file-that-was-tracked-but-is-now-in-gitignore) I just did the following command\ngit rm --cached <file>\n. Although it would be nice to support more devices, based on the current breakdown of devices\nhttps://developer.android.com/about/dashboards/index.html?utm_source=suzunone\nthere aren't too many devices pre API level 15.\n. I am looking to create a maven artifact so that it will be a one line gradle dependency, but haven't quite figured out how to set that up.  But I definitely have that in mind.\n. I have updated the README with simple setup instructions for Gradle or Maven.\n. That google plus implementation is by design. That is how it was being\nhandled in the Google + app. Keep in mind it is just an example. You are\nfree to customize that behavior.\nOn May 25, 2015 2:13 AM, \"ByungHwa Ra\" notifications@github.com wrote:\n\nI have the same issue. And if i scroll very slowly, the\nQuickReturnFooterTextView and the QuickReturnFooterImageView(Google plus\nimplementation) do not scroll at the same pace.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/issues/23#issuecomment-105174684\n.\n. Hey Maxxan,\n  That was just one of the examples.  Feel free to make a pull request to\nadd an additional example.\n\nOn Tue, May 19, 2015 at 4:03 PM, Maxxan notifications@github.com wrote:\n\nIn your examples, the header is above the listview even when the listview\nis at the top of the list, so the first two items in the list is never\nvisible.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/issues/24.\n\n\n-Etienne Lawlor (Software Developer)\n. I am doing something similar in the Twitter example.  Let me know if you have any questions.  I add a dummy item to the listview the same size as the quick return header.\n. So in the xml you would need to set visibility to GONE.  Also in the QuickReturnGooglePlusFragment class, the ScrollListener builder takes a has a method .footerViews() which takes an ArrayList as a param.  If you comment out lines 141 and 142 it wont add the FooterTextView.\n. @patelakshay13890 I have updated the README with simple setup instructions for Gradle or Maven.  I am not sure what the minimum SDK is but maybe you could test this and let me know if you are having issues.\n. Closing this for now.  Let me know if you are having issues using the library.\n. Sorry about that.  I had gradle.properties in my .gitignore.  Now you can clone and run the project.  Also if you want to include it in your own project look at the README for the Gradle or Maven setup.\n. Hey @dasheck0 I'm glad you like the library.  If you take a look at what I do in the Twitter example when you are at the top and start scrolling slowly it doesnt immediately hide the tabs so there is a distance that gets scrolled before the tabs start scrolling off screen.  Is this sort of what you were going for?\n. Can you please demonstrate what this would look like if you had more than 3 items, lets say 30 items, with an updated video?\n. ",
    "javierpe": "Yes...\n08-20 15:38:55.578  14935-14935/com.dcubica.dtraining E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\n    Process: com.dcubica.dtraining, PID: 14935\n    java.lang.NullPointerException\n            at com.dcubica.capacitaciones.CCapacitaciones.onViewCreated(CCapacitaciones.java:441)\n            at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:904)\n            at android.app.FragmentManagerImpl.moveToState(FragmentManager.java:1062)\n            at android.app.BackStackRecord.run(BackStackRecord.java:684)\n            at android.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:1447)\n            at android.app.FragmentManagerImpl$1.run(FragmentManager.java:443)\n            at android.os.Handler.handleCallback(Handler.java:733)\n            at android.os.Handler.dispatchMessage(Handler.java:95)\n            at android.os.Looper.loop(Looper.java:136)\n            at android.app.ActivityThread.main(ActivityThread.java:5139)\n            at java.lang.reflect.Method.invokeNative(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:515)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:796)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:612)\n            at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:132)\n            at dalvik.system.NativeStart.main(Native Method)\nAnd CCapacitaciones.java:441 is:\nHere---> switch (mQuickReturnType){\n            case HEADER:\n                mQuickReturnHeaderTextView.setVisibility(View.VISIBLE);\n                mNotifyingScrollView.setOnScrollChangedListener(new QuickReturnScrollViewOnScrollChangedListener(QuickReturnType.HEADER,\n                        mQuickReturnHeaderTextView, headerTranslation, null, 0));\n                break;\n            case FOOTER:\n                mQuickReturnFooterTextView.setVisibility(View.VISIBLE);\n                mNotifyingScrollView.setOnScrollChangedListener(new QuickReturnScrollViewOnScrollChangedListener(QuickReturnType.FOOTER,\n                        null, 0, mQuickReturnFooterTextView, footerTranslation));\n                break;\n            case BOTH:\n                mQuickReturnHeaderTextView.setVisibility(View.VISIBLE);\n                mQuickReturnFooterTextView.setVisibility(View.VISIBLE);\n                mNotifyingScrollView.setOnScrollChangedListener(new QuickReturnScrollViewOnScrollChangedListener(QuickReturnType.BOTH,\n                        mQuickReturnHeaderTextView, headerTranslation, mQuickReturnFooterTextView, footerTranslation));\n                break;\n        }\n. My constructors:\npublic static CCapacitaciones newInstance(Bundle extras) {\n        CCapacitaciones fragment = new CCapacitaciones();\n        fragment.setRetainInstance(true);\n        fragment.setArguments(extras);\n        return fragment;\n    }\npublic CCapacitaciones(){}\n. Ohh, then I have to pass the parameter in the constructor. It's work! but I can't make scroll in my Fragment...\n. The contents of the xml file called fragment_quick_return goes in my view xml?\n. Thank you I'am new at this.\nThe QuickReturnType is FOOTER\n. Yes..\nThis is my xml:\nhttps://gist.github.com/FranciscoJavierPRamos/7d1983ac0c1c389c21b3\nAnd this is the scrollview_content.xml\nhttps://gist.github.com/FranciscoJavierPRamos/8917f04d209e80672cb8\n. I want to implement it in FrameLayout in this view:\nhttps://gist.github.com/FranciscoJavierPRamos/7d1983ac0c1c389c21b3\n. \n. 'extends QuickReturnBaseActivity'. Does this have to go on my ActivityMain.java?\n. It's a ListView\n. Right, I will implement it that way. Thank you, if I find another bug I will contact you\n. ",
    "lovellfelix": "+1\n. ",
    "iPaulPro": "@lawloretienne The typical pattern is simply to create 2 different folders in the root of the repo. One for library and one for samples. Here are some examples (of the most popular Android libs):\nhttps://github.com/JakeWharton/ActionBarSherlock\nhttps://github.com/jfeinstein10/SlidingMenu\nhttps://github.com/square/picasso\n. ",
    "kenyee": "+1 and add to Maven Central\n. ",
    "feay1234": "I got the same error when importing the project to eclipse.\n. ",
    "longkai": "Hi, happy to receive your response. The fist thing, I mean, I just swipe right to the centre page, the tabs quickly slide up and disappear, not scroll down.\nbtw, I have used your lib in my project and I suppose the QuickReturnListViewOnScrollListener should have a ability to take other OnScrollListener(s), because the list view often needs a load more on bottom. I have simply  changed your code to do that. I  suppose the lib needs to provide the ability.\nThanks!\n. sorry for the delay.\nThe first should not be a concern. The ViewPager has a method called setOffscreenPageLimit, with default value 1, which means when we scroll the tab from the first to second(in order), the two page will be preserved but from the first to the third page and go back to the first page and the first page would reconstruct. But setting the value to 2, that will be ok(but it takes more memory). It seems I made a mistake,  sorry.\nThe second concern. For example, the QuickReturn widget needs to detect the list' s scroll listener to to make the quick return behaviour which is fine. However, like the Twitter' s timeline, when scrolling to the bottom, the list should load more tweets which also needs to detect the list' s scroll listener. The both will conflict and only the last OnScrollListener listener will call.\nSo, my solution is to provide a List<AbsListView.OnScrollListener> field in the QuickReturnListViewOnScrollListener which allow others register other OnScrollListener(s). Finally, iterator the list and perform its onScrollStateChanged and onScroll method in QuickReturnListViewOnScrollListener.\nsorry for my english...\n. Sorry for the delay again.\nThe pull request has been submitted.\nThanks!\n. It's not. Sorry for the delay, once again.\n. Thanks, @lawloretienne \nFor example, like the twitter timeline list, when the user scrolling to bottom, we need to load more tweets usually. We need to add an OnScrollListener to detect whether it reaches the bottom. However, the QuickReturn also needs an OnScrollListener but the listview can only add one.\nThat' s one of the purposes.\n. It makes sense, should be another pull request?\n. ",
    "nguyentruongtho": "@lawloretienne As you can see, the gitignore file was generated automatically by a script when I specify that this is an Android project, building with IntelliJ and gradle. \nI should have improved my script so that it can do better. Anyway, the file is updated, no more duplication.\nThanks for this awesome library, if you have a list of who using your library, please include TradeHero :+1: \n. @lawloretienne I forgot to mention, it will come out in the next version (2.4), eta few weeks from now. I've just added recently to implement our new feature.\n. Sure, thanks\n. You can have a quick look at how I used it here: http://www.youtube.com/watch?v=-rlXQ8AEEJQ This is still in on-going development without any UI polishing, but please feel free to comment :+1: \n. @lawloretienne Thank you for the advice, I would use Navigation drawer if there isn't a decision from the board to make our android app as close as possible to the iOS app: https://itunes.apple.com/sg/app/tradehero-mobile/id572226383?mt=8. I often use the navigation drawer in my personal app :+1: \n. @lawloretienne I agree. Let me work it out, thanks.\n. ",
    "adamin1990": "@lawloretienne  already solved  ,thanks.\n. ",
    "necipallef": "I have this issue too, when list items have different height header&footer pops randomly. How to fix this?\n. ",
    "samy-baili": "Someone found a solution about this ?\n. ",
    "clau007": "Yeah. I suggest you to create a \"libraries\" folder in your project's root and copy the \"library\" folder in here. You can rename it to \"quickreturnlib\" or whatever you want.\nFrom android studio open your Gradle Scripts and include into the settings.gradle (Project Settings) file the folder of the new library by adding this row: \ninclude ':libraries:quickreturnlib'\nThen add this dependency to your build.gradle(Module: yourmainprojectname) file:\ncompile project(':libraries:quickreturnlib')\nSync your project and start using the library.\n. ",
    "somghosh": "Thanks a lot @clau007 \n. ",
    "mblcdr": "@lawloretienne the process of pushing a library to central is indeed a bit complicated. But you can provide an easy to use access for maven and gradle users with JitPack. Take a look here: https://jitpack.io\nAlso here's the link to how to set it up and update your readme file accordingly for the users:\nhttps://github.com/jitpack/jitpack.io/blob/master/ANDROID.md\n. @jitpack-io This library contains xml resources, so I guess it should be deployed as an aar file. Shouldn't the gradle complie setting contain @aar suffix? \n. ",
    "brianmuse": ":+1: This would be extremely helpful!\n. ",
    "jitpack-io": "@mblcdr Thanks for suggesting! You're absolutely right, it's were easy to publish on JitPack. Only a few tweaks needed and submitted as a PR #20.\nHere's how it looks with our forked project: https://jitpack.io/#jitpack-io/QuickReturn/1.0\nWill be happy to help deploying @lawloretienne .\n. @mblcdr If you use it from Gradle it will download the .aar file automatically even if you don't specify @aar. Its because Gradle downloads the .pom file and sees that it's an .aar packaging type. \n. @lawloretienne Can help with that:)\n. ",
    "nathanjones": "Thanks @jitpack-io! Packaging up the library like that makes it a heck of a lot easier to use. Would love to see @lawloretienne accept PR #20.\n. ",
    "NicodeLee": "Perhaps this article will help you, however, is in Chinese.\nhttp://www.trinea.cn/dev-tools/upload-java-jar-or-android-aar-to-maven-center-repository/\n. ",
    "noman-iqbal": "This will help you i guess. \nhttp://stackoverflow.com/questions/24309950/create-aar-file-in-android-studio\n. ",
    "alukito": "Hi, I'm sorry, I thought layout change would solve the problem, but it didn't. So I edited my comment regarding the issue, but i forgot to add \"Edit:\" tag.\nWhen I set the position of the ListView to be below of the CustomTextView, the first and second item appears. But the problem is when the ListView is scrolled, the CustomTextView is translated above while RelativeLayout still thinks CustomTextView is at its original position. I think this is because of the fact that setTranslationY happens post-layout. \nThe effect can be seen in the screenshot in my updated comment earlier.\nTo be honest, I don't have a solution right now. Maybe if you point me to right direction, I could help you with fixing. Thanks a lot.\n. ",
    "evliya": "I have the same issue. Are there any solutions yet?\n. I have a workaround for this issue. I created a dummy list item and put it as the first element of the list. This dummy item has the exact height of the quick return header view. This way, the top items of the list are visible.\n. ",
    "metalurgus": "You can add a header to the listView (listView.addHeaderView) to avoid covering the items as a workaround. You should set the header height the same as the QuickReturn view height.\n. @ayyb1988 you should have read previous issue before creating a duplicate. It's 100% same as yourth.\n. ",
    "ayyb1988": "my means is     for    listview girdview \u3002the first item is coverd.\n. @metalurgus I'am so sorry.  thx . have fix.\n. ",
    "ewhite-dev": "well, adding to gitignore is a simple command but retroactively removing files from old commits is something I don't know off the top of my head so look at this highly upvoted answer on stackoverflow:\nhttp://stackoverflow.com/a/7532131/727429\n. After scrubbing the old versions out of the repository, you can commit a version of build.gradle without the release part of the script. Locally you can add build.gradle to .gitignore , but I'm not sure what the best best practice is, for instance you may add/change some dependencies and want to commit that build.gradle\nIt may be possible to have the passwords in a different file that is references by build.gradle, and have that file always ignored. So you can release updates easily but others can't use your keystore and password\n. ",
    "oliguo": "I add this ,it works,\nfirstly, you should put swipelayout to contain recycleview not root layout,\n```\n\nandroid.support.v4.widget.SwipeRefreshLayout\nandroid:id=\"@+id/the_swiperefreshlayout\"\nandroid:layout_width=\"match_parent\"\nandroid:layout_height=\"match_parent\"\n<android.support.v7.widget.RecyclerView\n    android:id=\"@+id/the_recyclerview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    />\n\n\n<TextView\n    android:id=\"@+id/the_textview_for_quickreturn\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"80dp\"\n    android:layout_alignParentTop=\"true\"\n    android:gravity=\"center\"\n    android:text=\"Header\"\n    android:textColor=\"@android:color/white\"\n    android:textSize=\"22sp\"/>\n\n\n```\nand I add code to refresh if first item:\nswipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\n                @Override\n                public void onRefresh() {\n                    mRecyclerViewTop=mRecyclerView.getChildAt(0).getTop();\n                    Log.d(\"RecycleviewPosition\", \"init:\"+mRecyclerViewTop+\";\"+ (mRecyclerViewTop-16==0));\n                    if ((!isRefresh)&&(mRecyclerViewTop-16==0)) {\n                        Log.d(\"RecycleviewPosition\", \"get:\" + mRecyclerView.getChildAt(0).getTop());\n                        isRefresh = true;\n                        new Handler().postDelayed(new Runnable() {\n                            public void run() {\n                                swipeRefreshLayout.setRefreshing(false);\n                                isRefresh = false;\n                                mRecyclerViewTop=0;\n                            }\n                        }, 3000);\n                    }else{\n                        swipeRefreshLayout.setRefreshing(false);\n                        isRefresh = false;\n                    }\n                }\n            });\nand the line of code \"mRecyclerViewTop-16==0 \" the int 16 which get from mRecyclerView.getChildAt(0).getTop()\n. ",
    "fdln": "Yes, now it works. Thanks @oliguo \n. ",
    "fahimk": "So I managed to figure out a workaround for this. What I have is a custom class that extends RecyclerView. In there I have this function\njava\npublic int getVerticalOffset() {\n    return super.computeVerticalScrollOffset();\n}\nThen in QuickReturnUtils.java I modify the getScrollY for RecyclerView:\njava\npublic static int getScrollY(RecyclerView rv, int columnCount) {\n    return ((ViewAutofitRecyclerView) rv).getVerticalOffset();\n}\nAccording to the documentation computeVerticalOffset() gives \"The vertical offset of the scrollbar's thumb\".\n. ",
    "afollestad": "You should add it to Bintray, that's what jCenter (the default Android Studio repository) runs on top of.\n. There's also a convenient Gradle for publishing: https://github.com/novoda/bintray-release\n. ",
    "rabyunghwa": "I have the same issue. And if i scroll very slowly, the QuickReturnFooterTextView and the QuickReturnFooterImageView(Google plus implementation) do not scroll at the same pace.\n. @lawloretienne ok man. thanks.\n. @zhonghanwen nope. I decided to use the header textview instead and just manually set its visibility to visible or gone. This is what the current behavior is in the latest Facebook's app.\n. ",
    "zhonghanwen": "@rabyunghwa have a solution?\n. ",
    "Maxxan": "I would prefer to see a solution to to make it below the header while at\nthe top, but when the header view is gone, it fills the whole height. I\ndon't know how to do that..\nDen 20 maj 2015 01:08 skrev \"Etienne Lawlor\" notifications@github.com:\n\nHey Maxxan,\nThat was just one of the examples. Feel free to make a pull request to\nadd an additional example.\nOn Tue, May 19, 2015 at 4:03 PM, Maxxan notifications@github.com wrote:\n\nIn your examples, the header is above the listview even when the listview\nis at the top of the list, so the first two items in the list is never\nvisible.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/issues/24.\n\n\n-Etienne Lawlor (Software Developer)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/lawloretienne/QuickReturn/issues/24#issuecomment-103693970\n.\n. \n",
    "dasheck0": "Not exactly. The thing with quick return is that the header gets scrolled in immediately. That is also the purpose of this pattern I guess. I wanted the behaviour of a collapsable toolbar, that you can hide the header to get the maximum amount of space available for the scrollview. And when the user scrolls down the header gets also scrolled in but not immediately but with a delay, so that it does not hide the content of the scrollview. \nSomething like this but not with the toolbar but with a header view: https://www.youtube.com/watch?v=6gZ_y7MqEGM\n. Sure. This is not my video by the way. I just googled the desired behaviour. Anyway I'll see if I find another one and edit this post once I found it. \n. ",
    "yanglichuan": "hide the first item\n. "
}