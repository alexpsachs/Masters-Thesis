{
    "grahamc": "I'm not certain this is still a legitimate bug. Closing it for now, if it remains as legitimate - please reopen it.\n. This looks promising; will try to get this in tomorrow.\n. This functionality has been included into master.\n. @jsmestad - I understand your commit was from a very long time ago, however I'm quite interested in implementing this feature.\nDo you by any chance whatsoever have the code sitting around somewhere? I cannot seem to find it on your fork of integrity for the life of me.\nIf you would be able to get that code to me, that would be wonderful. If not, I have plans to implement this feature.\nThank you so much for contributing!\nGraham\n. Thank you, @qrush for the patch - I'll look into merging it in tomorrow.\nThank you,\nGraham\n. Don't know what this means. Closing for now; if you want to update it with more details, feel free.\n. Can you provide a test with this diff? I would very much appreciate that, and make it faster for me to merge in.\nThank you,\nGraham Christensen\n. Closed with: GH-81.\n. I will be working towards dropping the ParseTree dependency and getting the build passing again.\nCurrently the project works well on Ruby 1.9.2. See GH-102 for the ticket to remove that dependency.\n. There are some potential issues with implementing a system like this, but I'm definitely interested in investigating this further.\n. This appears to be resolved in master.\nThank you, @jeremyolliver for your resolution!\n. I hear the concern, and have plans to investigate this myself. I'm going to keep it open, but tag it as low priority with regards to getting Integrity up to date with Gems, and passing tests.\n. Here is the diff between your branch and master: https://github.com/josephholsten/integrity/compare/integrity:master...josephholsten:bootstrap\nWill be bringing this in soon.\n. This has been resolved in master.\nThank you for your bug report!\n. This appears to be resolve in master.\n. Don't know what this means. Closing for now; if you want to update it with more details, feel free.\n. This should not be very difficult. Will investigate tomorrow.\n. I wish I knew what this meant, but am closing it due to lack of information. If you would like to update it with more, that would be wonderful, but not pressure.\n. This is likely resolved in master with several gems being upgraded, and the source updated for compatibility. I'm going to close this bug for now - if it is still an issue in master, please re-open it with more details.\nThank you :)\n. I believe bundler is already up to date beyond 1.0 at this point.\n. I will have to investigate best-practices on performing migrations on a project such as this.\nA stop-gap solution is to trim to 255 characters, and create a second column on the table named full_message containing the complete message.\n. @cgriego, I think the best way to go about it would be to create a second column, copy all the data into that column, and then drop the first column. It is a three part process, but its really the only way to go about it.\nAre you still up to making a patch for that? I'd love to get that in.\n. Thank you a lot for your pull request! I appreciate your help maintaining this project. Similar changes have been merged in to master, so you shouldn't be having problems with it at this time.\nThank you!\nGraham\n. Thank you for the pull request - it has been merged in. Additionally, several tickets have been closed and master is in a much better situation than it was before.\n. Thank you so much!\nHopefully you haven't abandoned Integrity in the last year - or if you have, you'll take a look at it again :)\nI'd appreciate any comments/suggestions/pull requests you could submit!\nThank you again,\nGraham\n. Well this certainly does seem problematic.\nI will investigate this issue, though the resolution may involve removing private repos altogether - favoring HTTP auth implemented at the nginx/etc layer.\nWe will see. I'm marking this as \"low priority,\" however, in favor of more pressing issues.\n. Good point; taken care of.\nThank you.\n. I understand, and appreciate the frustration - I hate having to dig through the build DB to delete the build that causes it to break.\nI will be fixing this ASAP.\n. This seems to work at this point, and @spectator's changes have been merged in.\nIf this is not the case with the current master, please reopen the ticket.\n. Thank you for reporting this - I haven't used Integrity in that particular use case, but I will see about setting up a couple of repos to see how it reacts.\nThank you!\nGraham Christensen\n. This pull request looks great, I'll try to get it merged in tomorrow.\n. I'll take it!\n. Resolved in the latest pull.\n. Resolved in recent pull request.\n. msp,\nUnfortunately I'm not able to update the website with up to date instructions. doc/integrity.txt has up to date instructions: https://github.com/integrity/integrity/blob/master/doc/integrity.txt ...\nThat document includes a new way to configure it (slightly,) and also says to use master, not the v22 tag.\n. Let me know if that doesn't work for you!\nThank you!\nGraham\n. This was resolve in a recent pull request. Please try again using master. Please note that the configuration style has changed.\n. @kwerle, I am unable to update the website. Additionally, I won't update the v22 tag, since that would be a significant change.\nInstead of running git checkout -b deploy v22, try running git checkout -b deploy master.\nI did update the gemfile in Master.\n. I'm not sure, myself. I have been using it at work and have fixed some of these issues myself. See: http://github.com/nationalfield/integrity\nIf you clone the repository, check out v22.7, read the README and then run install.sh everything will be setup for you.\nIf you have any problems with that, feel free to open a ticket there.\n. I have intentions on merging those in as I get some time. Since we're in the middle of a big release, I'm having to delay these pull requests.\n. As long as you check out my repo at v22.7 you can follow the installation instructions on integrityapp.com, my script just simplifies it for exactly what we're doing here.\n. For the large part, I think these fixes are already in master.\nI will be merging in the shell notifier soon, and will be reviewing the diff then to see what parts may still need to be merged in.\nThank you for your help!\nGraham Christensen\n. This appears to be resolved in master. Thank you for making a pull request!\n. Is this still an issue? Please check out the latest master for testing purposes. Note that the configuration style has changed slightly.\nThank you so much!\n. The only reason I could guess that it wouldn't work, is if 6414843749e1daccd8c1fc9efa0e43d38195f555 doesn't exist in your repo. Can you verify that this is still an issue on a different commit? Sometimes this gets weird if you do a force push.\n. richmeyers resolved this in pull request #131.\n. How does this stand, @spectator? I have fork m'self and would love to bring this in to mine.\n. Looks like I'm getting an error when trying to run rake db - here's my trace:\n$ rake db --trace\nrake aborted!\nuninitialized constant Integrity::Configuration::Logger\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/ext/module.rb:36:in const_missing'\n/Users/gchristensen/integrity/lib/integrity/configuration.rb:31:inlogger'\n/Users/gchristensen/integrity/lib/integrity/configuration.rb:52:in builder='\n/Users/gchristensen/integrity/init.rb:33\n/Users/gchristensen/integrity/lib/integrity.rb:50:inconfigure'\n/Users/gchristensen/integrity/init.rb:25\n/Library/Ruby/Site/1.8/rubygems/custom_require.rb:36:in gem_original_require'\n/Library/Ruby/Site/1.8/rubygems/custom_require.rb:36:inrequire'\n/Users/gchristensen/integrity/Rakefile:57\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/task_manager.rb:207:in in_namespace'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/dsl_definition.rb:95:innamespace'\n/Users/gchristensen/integrity/Rakefile:56\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/rake_module.rb:25:in load'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/rake_module.rb:25:inload_rakefile'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:495:in raw_load_rakefile'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:78:inload_rakefile'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:129:in standard_exception_handling'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:77:inload_rakefile'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:61:in run'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:129:instandard_exception_handling'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:59:in run'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/bin/rake:32\n/usr/bin/rake:19:inload'\n/usr/bin/rake:19\n. That's after I resolve this issue (by updating the Gemfile to 0.9.2)\n$ rake db\nrake aborted!\nYou have already activated rake 0.9.2, but your Gemfile requires rake 0.8.7. Consider using bundle exec.\nTasks: TOP => db\n(See full trace by running task with --trace)\n$ rake db --trace\n* Invoke db (first_time)\n* Execute db\nrake aborted!\nYou have already activated rake 0.9.2, but your Gemfile requires rake 0.8.7. Consider using bundle exec.\n/Library/Ruby/Gems/1.8/gems/bundler-1.0.15/lib/bundler/runtime.rb:31:in setup'\n/Library/Ruby/Gems/1.8/gems/bundler-1.0.15/lib/bundler/spec_set.rb:12:ineach'\n/Library/Ruby/Gems/1.8/gems/bundler-1.0.15/lib/bundler/spec_set.rb:12:in each'\n/Library/Ruby/Gems/1.8/gems/bundler-1.0.15/lib/bundler/runtime.rb:17:insetup'\n/Library/Ruby/Gems/1.8/gems/bundler-1.0.15/lib/bundler.rb:107:in setup'\n/Library/Ruby/Gems/1.8/gems/bundler-1.0.15/lib/bundler/setup.rb:7\n/Users/gchristensen/specinteg/init.rb:6:inrequire'\n/Users/gchristensen/specinteg/init.rb:6\n/Users/gchristensen/specinteg/Rakefile:26:in require'\n/Users/gchristensen/specinteg/Rakefile:26\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/task.rb:205:incall'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/task.rb:205:in execute'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/task.rb:200:ineach'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/task.rb:200:in execute'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/task.rb:158:ininvoke_with_call_chain'\n/System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/1.8/monitor.rb:242:in synchronize'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/task.rb:151:ininvoke_with_call_chain'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/task.rb:144:in invoke'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:112:ininvoke_task'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:90:in top_level'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:90:ineach'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:90:in top_level'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:129:instandard_exception_handling'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:84:in top_level'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:62:inrun'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:129:in standard_exception_handling'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/lib/rake/application.rb:59:inrun'\n/Library/Ruby/Gems/1.8/gems/rake-0.9.2/bin/rake:32\n/usr/bin/rake:19:in `load'\n/usr/bin/rake:19\nTasks: TOP => db\n. Hi @spectator,\nI was granted access to Integrity this evening and will be reviewing/testing this pull request thoroughly. I'm hoping to get a release put together by the end of next week.\n. Looks good.\n. Can you confirm that this is still an issue using the master branch? Please note that the configuration style has changed due to a recent pull request.\nThank you,\nGraham\n. Can you confirm that this is still an issue using the master branch? Please note that the configuration style has changed due to a recent pull request.\nThank you,\nGraham\n. This appears to make some tests fail. Fix ASAP.\n. Do you have any concern with simply updating the test? I would be ok with that.\n. I'm sorry!\nI cannot access that infrastructure. I cannot even deploy new documentation to integrityapp.com.\nIf you notice, doc/integrity.txt has changed quite a lot between v22 and master: https://github.com/integrity/integrity/compare/v22...master#diff-9\nIn this way I can't fix it. I'm very sorry!\n. I have tried to, I invite you to try and get in touch with @sr and @foca :)\n. I just removed the reference to that URL, and updated the documentation. Thank you!\n. I appreciate your help @richmeyers, its a bummer. I'd pay for the hosting and domain m'self too, but they don't seem interested.\n. I believe so, here we are: https://github.com/integrity/integrity/issues/107\n. Thank you @foca! I've been swamped with work (and will be until about October 15th,) but after that I'll be working to get the site back up and running.\nThank you!\n. builder.integrityapp.com has been configured and is set up. I have not updated the documentation, though. I will be setting up integrityapp.com as well as soon as I can.\n. HAH! Oops. Server 'sploded between there and here. I'll get it back up tonight, but I promise its close ;)\n. Fixed and secured. Thank you for your patience :)\n. Thank you so much!\n. Hrmm... it does indeed!\nIt appears that we are using a specific branch of it as well, which seems kind of silly.\nI'll investigate what it requires to remove that dependency, and use the regular gem available on rubygems.org.\nThank you!\n. @kwerle, if you replace that requirement to just use the rubygem, do things work for you?\n. I'm not sure, msp. I've never used Heroku and am doing my best at keeping this project running somewhat well. Would you mind investigating this issue some? I can't think of a reason that it wouldn't be compatible.\n. That too has been my opinion on using Heroku, that the speed limitations of it are too limited.\n. I just updated the README and the documentation. Thank you!\n. Thank you so much!\n. You are exactly right, @richmeyers. This button is there for an environmental issue.\n. Good call :) I just made that change. Thank you!\n. I love the idea, would you mind contributing some code for it? I would merge it in at once.\n. Hi there @p3ll0n, any luck on finishing that up?\n. I just removed the reference to the website. Thank you!\n. I experienced a similar issue myself. Thank you!\n. Wonderful fix, that was silly.\n. Looks good, I just need to test it out first.\n. Beautiful.\n. Thank you, Rich!\n. I didn't see this come through.\nI have an implementation of the same thing, but it is done outside of integrity - I would love to see it brought into Integrity. Let's do a pull request for it?\n. #145 has been merged as of about half an hour ago.\nI'm not sure what best practices are for this, but I'm fine with two .lock files. Would it be possible to automatically detect the Ruby version and move the right one into place before bundle install is executed? I'm also concerned about updating the proper one when we make changes to the Gemfile, and moving those back into place when we're done editing it. I guess it might just take vigilance when editing and working on it. What do you think?\nAt any rate, the double Gemfile.lock's should be documented in the README/etc in addition to your updated-gemfile-lock branch.\n. I replaced the icons with .ico files, and the link with shortcut icon as you suggested - good catch. I like the changes you made, so I would suggest we go ahead with that code. The size issue was just a typo mistake when resizing it down to 60x60, that has been resolved as well. I like the idea of using a black border - it would offer a nice contrast. The I would be very cool, I don't have much by way of graphic design programs - this was all done via Preview and convert.\n. Alright, @richmeyers - give this a look. To clean up the history I removed a few commits via --force, so you might need to as well.\n. That would be fantastic, @azisaka.\n. Note: As part of the flow workflow, it involves lots (at least for us) of branch creation and deletion, and trimming them manually / outside of core is a PITA.\n. @richmeyers I've been using this all day and it seems to be fine. Could you vet through the changes for me?\n. I like the idea of it. The idea of wildcards are very interesting to me, because I would like to expose <build-dir>/artifacts/* as a download directory.\nOne question, however - I have to very aggressively prune old build directories. We keep only the last 10, as our builds are quite large, and we have tens of thousands of them. How will this react once those build directories are deleted?\n. Hi @jdutil, I really would appreciate your help with the documentation for getting that running. I'm glad it worked out!\nGraham\n. @richmeyers I agree on all three points. I'm also interested in exposing an entire directory of artifacts.\n. Thank you a lot, @mildmojo!\n. I can understand that. Perhaps subclassing checkout to support it? Still bundling it in there.\nThe flip side is it doesn't add much complexity, and as far as my testing has found there isn't any chance that it would introduce new issues, but of course that isn't proven.\n. I can fix that by adding \"Put git-cachecow in your $PATH\" 'course.\n. Sure. I haven't finished cleaning up the instructions and making it fully compatible; you've brought up a good number of points.\n. @richmeyers - I've updated it to all be Python, and I've made it available on Pip for easy installation.\n. Regarding the configuration option, I don't see a clear path to access that option from within checkout.rb. I've dismissed the idea of subclassing it, since that seems to add a large layer of work on top of it.\n. Happy day - green on 1.8.7, 1.9.2, 1.9.3.\n. I'm definitely into this, but I'd really appreciate @richmeyers's thoughts on this as well.\n. Rich, I have a connection to @RyanHouston and peripherally to @mfrost, and they've been working fairly hard to bring the entire application up to date and improve upon it - this particular PR, from what I understand, is a small step towards a good bit of the code they've already improved upon.\nI'd let them represent themselves of course though :)\n. Hey @richmeyers - I'm good with these changes at this point. Would you like to give it another look over?\n. Hey @richmeyers - I'm good with these changes at this point. Would you like to give it another look over?\n. Mezis,\nI've implemented similar behavior over here: https://github.com/integrity/integrity/pull/168 What are your thoughts on the differences? One plus to yours is it is all ruby. One plus on mine is it also caches submodules.\n. Hi Steve,\nThank you for your commits!\nLooks good, but would you please update the documentation to include these environment details? Additionally - if the user or password isn't set, perhaps we should make it public by default.\n. Looks good, thank you for your contributions! I apologize for taking so long.\n. Good catch. Thank you!\n. Looks good. Thank you for your code!\n. I like where this is going, but I'm going to have to spend a touch more time testing and working through it.\nThank you for the code none the less!\n. This is beautiful! Thank you so much. I've already updated integrity.github.com with your changes.\n. Ideally your build script be stored in your repo, and integrity calls that.\n. I love this PR, I think its an incredible inclusion. My biggest concern is about the image being a direct copy from Travis. I'd rather not rip off that graphic. Would you be up to creating a custom image for that?\n. I'll take it as-is! Thank you a lot!\n. Thank you for your contribution!\n. What would you think about making this an installation-wide setting, instead of a build-specific setting?\nAdditionally, more documentation will be needed to merge this.\nThank you though, it looks like a decent addition!\n. Would it be possible for you to just make this command run first thing in your test suite? We do similar things as you, but include it in our build script.\n. Looks good. Travis failed the build, but it seems unrelated.\n. What would you think about adding a warning to the config.ru if they specify the old version, saying they should check the changelog?\n. +1 Merge when ready.\n. Looks like a great option. Good job!\n+1 Merge when you're ready.\n. @p - that's how Cachecow works, it just hides the implementation details.\n. Except for the one test which seems to have a race condition.\n. Can you merge master into this branch?\n. Great! Thank you!\n. Cool! Thank you!\n. Looks great. I hacked this in with dotjs for myself :)\n. You've been a machine today!\n. Hi,\nI have considered it, but you can do it far simpler in your own repository. Setup a build.sh script which Integrity runs. This way, your build steps are tracked with your repository.\nAt the top of the script, put...\n``` bash\n!/bin/bash\nset -e\nthe rest of your steps\n```\nset -e tells the shell to exit as soon as any command fails, taking care of exactly what you're looking for.\n. Note, that means your provided build script would look like this:\n``` bash\n!/bin/bash\nset -e\nbundle install\nrake test\nrake deploy\n```\nYour script will automatically exit if bundle fails, or if rake test fails.\n. :thumbsup: Glad to hear!\n. :thumbsup: \n. @p have you had an opportunity to test it? I haven't been able to run it here (not due to failure, but due to time.)\n. I love it, looks great.\n. Cool! Thank you!\n. Ah! Nice! Thank you!\n. One other concern is what happens if this directory cannot be created.\n. Looks like this should be\nusername == (ENV['ADMIN_USERNAME'] || ENV['ADMIN_USER'])\nand if (ENV['ADMIN_USERNAME'] || ENV['ADMIN_USER'])\n- no?\n. ",
    "sr": "Up to date: http://github.com/hpoydar/integrity\n. - \"build started X minutes ago\" for in-progress build\n- duration for completed builds \"built in X minutes/seconds/qhetverz on Jun 24\"\n. Bah, sinatra-ditties will do for now\n. Gonna ignore this as it shouldn't be that bad given it only affects the project page. Fixing it would require to store the commit metadatas on the Build model, which would involve major change and migrations, etc. Usefulness/pain ratio is too low IMO\n. Please provide more details and reopen\n. Thanks, I've merged the first patch. Regarding the second one, I've simply replaced #save by #save!, which by-pass validations and raises an exception if it hit a DB-level constraints. In fact, given how SQLite's datatypes works [0], that makes the first commit useless. But I've merged it anyway since we also support postgresql.\n[0] http://sqlite.org/datatype3.html - I've learned about it recently; sqlite basically do duck typing :)\n. Nice, thanks for the write-up and explanations; I'll definitely look into this again.\n. I'd be happy to apply a patch providing a rake task usable as a cron job to remove N builds starting from the oldest\n. Hey, sorry for the lack of reply. I am pretty much convinced that a rake task + cron is the way to go. \nhttp://github.com/integrity/integrity/blob/master/Rakefile#L28\nDeletes checkout directory of every completed build\n. I can't reproduce. could you provide more details? (error log, integrity log, ...)\n. If I understand your problem correctly:\n- Use \"rake testset1 testset2\" as your build command\n- Make sure each test run in a clean slate. (ie cleanup database, directories, ...)\n. We do not try to support SVN anymore\n. Maybe populate the command field with /usr/bin/env -i\n. should be fixed in v22\n. How about   in your init.rb?\n. yeah, what i am saying is couldn't you achieve the exact same feature without adding any code to Integrity by doing  \n. Merged, thanks!\n. I'd suggest using the dj or resque builder; the thread builder is not very reliable by definition. Look at github.com/sr/ey-integrity for an example of using the resque builder.\n. Not sure how to fix this. We obviously don't want to force people to use \"refs/heads/master\" instead of just \"master\" as their project's branch. Any idea? Thanks\n. Applied, thanks!\n. Hi, I started merging Glenn's fixes a while back but the stylesheet is still busted. Here is my branch: http://github.com/integrity/integrity/compare/master...heroku\n. fixed on master (docs on website no updated yet)\n. Hi, the whole hax needed to generate a git URI out of the HTTP one is there because GitHub doesn't include it. I am glade you guys do. I applied your patch and removed part of the hax afterwards. Let us know if that works for you. Thanks!\n. Definitely possible to drop the ParseTree test dependency. I tried the other day but kept getting segmentation fault either when running the test or running the app. Not sure what's up (that was with 1.9.1-p376) -- I'd be more than happy to apply patches to make Integrity run on 1.9\n. applied, thanks\n. I am not willing to do that in Integrity itself; rather, I believe people should do in their build command instead. \"git submodule update --init && rake\"\n. Indeed, concurrent builds. This is how it used to work: http://github.com/integrity/bob/commit/97e2c5407530f8a45cfce78a4d74ccd5714d5748\nI'd be very happy to merge a caching system.\n. (I believe the same approach plus a lock file for when updating the cached version could work)\n. Applied, thanks\n. http://github.com/integrity/integrity/compare/master...dmrc2\ndj is totally busted with it because DM will try to load AS 3.0 if AR is required (or something like that) and tobi/delayed_job doesn't work with it. collectiveidea/delayed_job seems to have a DM adapter but it completely changed the API and isn't the simple and sweet tobi's version is. Can I just remove the DJ builder? :-)\n. we can't git it because people will have different gems depending on the notifiers, database, builder, etc\n. merged, thanks!\n. glade to know you had success with integrity. I've been looking into continuous deployment as well... thanks for the sweet patch and let me know how it goes\n. i went ahead and modified it to just have one URL since the build status is already available in the payload. sounds good?\n. I am curious why you want to use AMQP for builds notification. Your HTTP notifier has been working just fine for me\n. Right on. Merged, thanks!\n. Nice. Are you sending build notifications to your phone yet? Thanks!\n. Merged, thanks. No worries about the unit test. I'd say as long as you're using it and it works, there's no need to spend time testing it :)\n. BTW, re. hosting, you don't need anything special really. Linode or something should be good. I personally use http://github.com/sr/ey-integrity on http://cloud.engineyard.com\n. Rack 1.2.0 doesn't work on Ruby 1.8.6. Locking rack to 1.1.0 and rebundling (bundle install --relock) should fix the issue. See http://github.com/integrity/integrity/commit/1a5bbe43189a3820d4de7340dc9af16df9c02556\nPlease reopen if this is still an issue. Thanks!\n. I want to wait for 1.0 final before upgrading. Also, it sounds like you're running into the issue where the build is running under Integrity's own bundle environment. You can avoid this by unsetting RUBYOPT and BUNDLE_GEMFILE or use env -i to clear the environment. I usually point the build command to a script that sets all the necessary environment variables\n. yeah, it'd be nice but I am not too concerned about it\n. ",
    "richmeyers": "Rebased on master, did not try yet: https://github.com/richmeyers/integrity/compare/master...build-duration\n. Instead of using IO.popen one could use fork and collect output as it was generated, obviating the need for tee and associated troubles.\nDoes integrity run on windows?\n. The patch is a hack - it deletes everything with vendor from path and rubyopt, however it is possible that either had entries with vendor in them before integrity started, as well as integrity could have added entries without vendor in them.\nThe intent of it seems to be to restore path and rubyopt to what they were before integrity started, in which case a possible solution/work-around would be to run the build command in a login shell.\nIf a guaranteed-clean environment is desired, env -i should be used as mentioned by sr above.\nAnother option is not requiring bundler from integrity. In this case only rubyopt should need to be set for integrity to work, and build command would need to only unset rubyopt without destroying path.\nThis is the mailing list thread where the patch above was proposed: http://librelist.com/browser//integrity/2009/12/3/integrity-path-leaking-into-builds/\n. My current approach is to source ~/.zshenv in the build command to get the environment back to pristine state.\n. I'm going to close this.\nAs an administrator deploying integrity you know that both integrity and the projects it is testing require certain environments. You may be using the same environment for both or different environments.\nIf, as an administrator, you want to start the project in a clean environment you can clear or alter environment variables as part of the build command, externally to the project being tested.\nIf you have a single global environment, you may want to reuse it from integrity to the project being tested. This is currently possible as well.\nI am open to documentation patches explaining the various arrangements.\n. Issue cleanup - closing.\nfirst bullet point was fixed from what I see.\nSecond bullet point - not something I want to do myself at this time.\nLast bullet point - code in question appears to be gone.\n. I have never had to create the builds directory, I'm guessing integrity creates it automatically.\nThe remaining steps invoke bundler. They will not work if bundler is not in path (e.g. default debian configuration from my recent experience). If dependencies are not managed with bundler they won't be correct at all.\nConsidering that the documentation is pretty clear on required steps I am inclined to not add these tasks.\n. #130 may be morphed a little to do what is desired here. Specifically, add code to integrity to truncate the first line to 255 chars so that it fits in the database column and put the entire first line and the remaining lines into a new field.\nAs I mentioned in #130 datamapper migrations are nothing pleasant.\n. I altered #130 as described above to fix this issue.\n. We have http basic auth in front of integrity.\nJust to make sure,  a private project is one for which \"Public project\" checkbox is not checked, correct?\nIf so, when someone is logged in they see such projects on index. This is on v22.\nOn master, which currently we don't have in production yet, the situation is slightly interesting. We don't have basic auth configured on web server level. If one goes to the home page, they only see one project which is marked public, with no obvious way to see the other projects. However, if one clicks on \"add project\", they are prompted for a username and password. Submitting an empty username and password there \"works\", and subsequently such \"authorized\" user sees all projects on the home page.\n. #139 might be a fix for this issue.\n. I'm going to write the following for posterity since I did go through the effort:\nv22 fails to install due to a test dependency depending on a different version of json than what integrity specifies.\nhttps://github.com/integrity/integrity/commit/06490db848ef6fb63c88d20022501d51dc746083 is the fix.\nOn a side note, it seems that version increases on dependencies tend to live in their own commits (not just integrity, seems that most ruby projects operate in this fashion), such that looking at just these commits one is entirely clueless as to why the version number was increased.\nv22 also requires bundler 0.9. bundler 1.0 apparently changed their api as far as setup code is concerned.\nhttps://github.com/integrity/integrity/commit/91d3d2ff7d614edc53edbcbcb34d37bafcd24142#init.rb is the fix, or delete that require entirely and don't use bundler which is the direction I'm trying.\n. > bash: -rbundler/setup: No such file or directory\nYou did not quote RUBYOPT value, therefore -rbundler/setup was taken to be the command to run instead of part of RUBYOPT.\nThe invocation in original comment probably suffers from this issue, and additionally has an extraneous && after environment variables before the rake command, which would have caused rake to be executed without specified environment variables (assuming execution got to it).\n. On the topic of the subject of this issue, integrity does indeed not update build status when build fails for various reasons.\nJust now I dumped our \"production\" integrity database and loaded it into a \"development\" installation, then proceeded to request a rebuild of one of the builds. Since I did not bother copying over repositories, this predictably failed:\n\nI, [2011-10-05T17:26:19.470404 #608]  INFO -- : Started building /repo/path at commit-hash\nD, [2011-10-05T17:26:19.472827 #608] DEBUG -- : (git clone /repo/path repos/1938 2>&1)\nE, [2011-10-05T17:26:19.518531 #608] ERROR -- : \"Initialized empty Git repository in /home/integrity/integrity/current/repos/1938/.git/\\nfatal: '/repo/path': unable to chdir or not a git archive\\nfatal: The remote end hung up unexpectedly\\nfetch-pack from '/repo/path' failed.\"\nE, [2011-10-05T17:26:19.518927 #608] ERROR -- : Exception occured during build: Failed to run 'git clone /repo/path repos/1938'\n\nHowever, the UI continues to say:\ncommit-hash hasn't been built yet\n116 produces the same UI behavior.\n(This is all on master.)\n. @jdutil is this the same issue as #156? Did you get integrity running on heroku?\n. I'm going to close this issue then as original reporter has not responded.\n. Thanks, I added this in 34f79abcb8cacdb7619ddcc4d585a49cb55cbaea.\n. I have tests almost passing on master. The only issue remaining is a number of tests looking for the string \"revision is not built yet\" whereas the string included is \"revision is building\". So either at some point ruby thread scheduling changed, or this is a difference between ruby versions, or this had been broken by some change.\n. I ran out of time today but yes, I'm planning on looking into it.\n. You have to check return value of system and raise an exception or otherwise fail as appropriate. See http://ruby-doc.org/core/classes/Kernel.html#M001441.\n. FWIW I did send a message to sr and foca asking them to do something about this.\n. Was this done? https://github.com/integrity/integrity.github.com is empty.\n. RUBYOPT=... PATH=... && bundle install ; bundle exec - because you're not exporting either rubyopt or path neither bundler invocation receives those environment variables. You need to either use\nRUBYOPT=... PATH=... bundle ... - for each bundle command - note no && or ;, or\nexport RUBYOPT=... PATH=... ; bundle ... && bundle ... which should work fine and require typing environment variables out only once because the entire command is run in a subshell.\nWhen you run bundle ... in your shell you may have those environment variables already in your environment, making things appear to work when they are in actuality no-ops.\n. No response from reporter - closing.\n. I'm going to close this issue.\n. https://github.com/integrity/integrity/commit/23d79d71c11477b6d96f9897952c4fd68f18eccb#lib/integrity/configuration.rb makes configuration incompatible between v22 and master.\n. I'm guessing one could rebuild if they discovered that an environmental issue in their integrity installation broke the build.\nAnother possibility is the build is currently legitimately broken, but previous builds that had no code issues were broken due to an environmental issue. Someone might then want to rebuild an old revision to see at what point the current code breakage was introduced.\nProbably not an often needed feature, this.\n. Duplicate of #107.\n. I'm guessing https://github.com/benburkert/randexp/commit/d5aef3654821d55ef19d7dc87f7e070e973af078 was the important commit. There have been no release since 0.1.5. Note that this pull request adds parsetree back into integrity as a dependency.\nWhat should happen probably is randexp needs to release a new version and integrity should depend on that version instead of 0.1.5.\nSee also #107.\n. I requested a new release in https://github.com/benburkert/randexp/issues/7.\n. Found another similar case in the delayed job test, where activerecord requires sqlite3.\nNotifo requires httparty which requires rubygems.\nWhy not simply let these exceptions propagate instead of hiding the stack trace? What I do now is:\n1. Run rake test\n2. It fails with a message saying \"install foo\"\n3. I launch irb and require 'foo'\n4. I look at the stack trace to see what actually required whatever it is that I don't have.\nIn case of activerecord -> sqlite3 dependency even this did not work as delayed job could be required in irb without errors. I had to reraise the error in the test to see what caused it.\n. The last commit converts abort calls to warn + raise, yielding two benefits:\n1. Exception stack trace is preserved.\n2. The tests now proceed all the way when one of them depends on something that is not installed.\n. I reproduced #78 and my original solution in this pull request did not address it. Therefore I changed the implementation to what I outlined in #78, which is to store the entire commit message in a full_message field and leave message be possibly truncated subject.\n. The last commit (dab96d3531a7bd5cda423e756b13a8f1cf4e0591)  is needed to keep tests working with #141.\n. This change already helped me catch a situation where a certain tree, when built, remained pending forever:\nERROR -- : Exception occured during build: DataMapper::SaveFailureError: Integrity::Build#save returned false, Integrity::Build was not saved\n(offending line is lib/integrity/builder.rb:46:in complete)\nPer http://www.drmaciver.com/2010/04/datamapper-is-inherently-broken/ datamapper provides no information as to why the build was not saved, but at least it is not a silent failure now.\n. Please test master now that my pull requests have been merged.\n. Your threading-related changes are interesting, I want to look at them more closely.\nWhat is the reasoning behind https://github.com/glenngillen/integrity/commit/db4d264be474b978d500c92f9c69bd0f0b4bc6f3 and similar edits?\n. Did you get color output working on ruby 1.9?\n. Gemfile.lock does indeed need to be updated, but Gemfile should not be changed and based on ruby-debug addition it looks like you run ruby 1.8 whereas previously Gemfile.lock was generated by ruby 1.9.\n. So this one is a little tricky.\nTo start, sqlite3-ruby (which is what the default gemfile specifies) is not currently installable on centos 5. That will hopefully be fixed with https://github.com/luislavena/sqlite3-ruby/pull/59 and integrity needs https://github.com/integrity/integrity/pull/145 to make use of the fix.\nThen, because of https://github.com/integrity/integrity/commit/9b990ab0588de0482e00e65895c20fed3df41002 Gemfile.lock is different for ruby 1.8 and 1.9. It can be made the same but then 1.8 will have to endure massive amounts of spam that 1.9 has no choice but to enjoy.\nMy proposed solution is two lock files: https://github.com/richmeyers/integrity/compare/update-gemfile-lock.\nNote that if you add or remove any dependencies in Gemfile you still have to create your own Gemfile.lock.\n. I could make a rake task to copy the lock file, but the user would have to know to run it, which requires reading installation instructions, at which point we can just as easily require the user to copy the lock file manually.\nAgreed on adding a note to the readme/documentation.\n. > I'm also concerned about updating the proper one when we make changes to the Gemfile, and moving those back into place when we're done editing it.\nYou don't need to move/copy the lock file before making changes to gemfile. After you make changes to gemfile and run bundle install you need to copy lock file to the appropriate ruby18/ruby19 version and that's it.\nAs I have not gitignored the lock file itself you should see it when you run git status, hopefully that will be a sufficient reminder to do the right thing. Or maybe it just turns out to be annoying.\nAlternative #1 would be to update integrity to whatever the current datamapper version is, or a sufficiently recent version, and alternative #2 would be to try and get the old behavior back which I did here: https://github.com/datamapper/dm-do-adapter/issues/4#issuecomment-3285078\nAlso, I am not exactly sure how many people really use the lock file. You would have to run integrity with its out of the box dependency configuration (this includes using sqlite and not using any notifiers that have dependencies). And then you don't run bundle install, as that resolves all dependencies from scratch which is how issues like #144 appear. But I don't use bundler myself so maybe I'm way off.\n. Tested my two lock files against bundle install --deployment on both 1.8 and 1.9, seems to work. I will add a note to readme and commit.\n. Fixed by #148.\n. Please try the master branch (which should also work on 1.9).\n. According to http://en.wikipedia.org/wiki/Favicon msie only understands ico files and requires rel to be \"shortcut icon\", not \"icon\".\n. I added some changes here: https://github.com/richmeyers/integrity/compare/icons\nOne of them is not specific to favicons (the ping one).\nI have not run the tests yet.\nWhy is one of the images a different size from the others?\nOn my system active tab background is beige-ish and light green does not contrast with it very well. Maybe a black border around the boxes would work better? I should try some options. Our builds currently pass thus I haven't seen the red favicon in action yet.\nFor extra spiffiness put something like an I on the favicon for Integrity?\n. New icons look great. I am really liking having the favicons. The only thing we need now is auto refresh :)\n. Agreed. Looks like b29852df was responsible. Are you using psych?\n. https://github.com/richmeyers/integrity/compare/always-return-metadata should fix it. I will commit it after I check the test suite.\n. This is not fixed yet :)\nTest suite is thoroughly broken on 1.9 with psych without the patch. With the patch it almost works - there are two failing tests.\n. This was fixed by #152.\n. Would you mind submitting a patch for readme then?\n. Needs documentation. ~ and * specifically need to be documented.\n. Right now there is no documentation at all for this feature. If someone installed integrity they would have no idea what the \"artifacts\" field is for, what they can enter in it and how it will work. Please add a description of the feature to the readme.\nThere should be no manual escaping and unescaping of slashes. Use CGI.escape and CGI.unescape to do the escaping.\nIt is still possible to obtain the contents of arbitrary files from the server, from what I can tell, by specifying certain artifact patterns. if you don't have any other ideas I suggest performing File.expand_path on the root directory in which artifacts are allowed to be (this would be the build directory) and on the expanded artifact path, and then verifying that the latter is under the former.\nIdeally you should only glob-expand the pattern under the build root, not the entire integrity path with it.\n. I can work on that but it will take some time as I currently have no integrity installations.\n. Cleaned up history: https://github.com/richmeyers/integrity/compare/artifacts\nWhat is your use case for wildcards in artifacts?\n. Please try the version in #164.\n. https://github.com/mikel/mail/blob/master/lib/mail.rb#L36\nDid you have activesupport installed when you originally encountered this issue? If so what version?\n. In irb I am able to require pony with and without requiring active_support. I am also able to require active_support/inflector by itself.\nPlease try to figure out why the inflector require fails in your environment. I would start by looking at $: at the time of require.\n. Thread pool for threaded builder is created when init.rb is processed, which I'm assuming is before passenger forks the application from the spawn process. Thus the thread pool does not survive the fork.\nAs a side note, I could not get sqlite to work with passenger either - it said \"could not open database file\" but did not bother stating the reason. Tested with mysql.\n. Fixed in bae0222.\n. I took out some unrelated changes in #165.\n. https://github.com/luislavena/sqlite3-ruby/issues/37\nDo you get that error when running the test suite? What is your OS and sqlite library version?\n. Were you always getting that error or was there a situation when it did not occur?\n. Please report this issue to sqlite3-ruby, either in https://github.com/luislavena/sqlite3-ruby/issues/37 or in a new issue. It clearly affects more than one project using sqlite3-ruby.\n. I have had this code running for a while now in our CI server, but we haven't actually used it.\nMy use case is nearly opposite from that of original submitter: when tests fail, I want to be able to access failure (exception) reports via integrity.\nThis means:\n1. Artifacts should be exposed regardless of build status, if they exist. Currently when a build fails artifacts are not exposed.\n2. Artifact wildcards are useful.\n3. If artifacts are specified via wildcards and none exist, no UI for them should be displayed. Currently there is an empty box for artifacts in my use case.\n. This seems reasonable, I will merge as soon as I can run the test suite.\n. I would prefer this being an option since projects that are small and/or host their repositories in proximity to ci are unlikely to need it.\n. Well, to start, https://github.com/grahamc/git-cachecow is missing installation instructions :)\n. It wasn't obvious that that would work given the scripts import python modules (I would build self-contained scripts out of the \"source\" ones that you have), not to mention putting the entire project onto PATH is not that clean.\n. I am not seeing a clear benefit of these changes but I am not against them either.\n. Have you tested this with artifact being ..%2F..%2F..%2Fetc%2Fpasswd ?\n. What is this meant to do?\n. Why not /:project/builds/:build/artifacts/:artifact for the route ?\n. This route would then be  /:project/artifacts/:artifact.\n. All of the file existence logic should probably be in a controller or possibly in a helper, not in this view.\n. Why?\n. I suspect this field should be longer, at least 1000 characters and possibly a text instead of string.\n. Should probably use File.join here in case someone specifies trailing slashes and such.\n. This check is done each time log directory variable is accessed. I would rather it was not done here.\n. ",
    "menno": "We had this problem when running Integrity on Passenger. Passenger will set the environment variable RAILS_RELATIVE_URL_ROOT to whatever subdomain you're running on. When the tests run this variable will be picked by Rails and sets it as the relative_url_root, thus causing the tests to fail.\nYou can work around this by explicitly setting the configuration in your test.rb:\nconfig.action_controller.relative_url_root = ''\n. ",
    "foca": "Not ATM, but you're welcome to submit a patch with a working migration path. There were lots of changes in the schema to make it worthwhile, and re-creating the data shouldn't take long (well the projects, not the individual commits and builds)\n. I'd say no. I still hold that this is not the right way to go :) \nFor the people that want this, maybe link this from the documentation.\n. Making integrity easy to integrate with other services was always on our roadmap.\nRight now we're working on a rewrite of integrity to make it slightly less coupled to it's web UI and hopefully a lot more flexible. That will change how the endpoint to trigger post receives will work a bit, though. \nThere's some docs on where we're going at https://gist.github.com/b29cf333af7847b867a8 \u2014 We would definitely appreciate any feedback if you have it.\nThe gist of it is to keep it simple, and just do a POST /some/endpoint passing a couple parameters: a repository slug, and a commit id (which defaults to HEAD). I suppose this should work for you?\nIn any case, +1 to applying the patch to the current version of integrity.\n. Hum. I'm pretty sure that Rack will work fine if you just do POST /some/endpoint?repository=foo, since we'll get the repo from the params hash. RIght?\n. I'm talking about integrity at EuRuKo in 2 weeks. So ideally, there should be a beta release before then :)\n. With a rake task that generates it. Something along the lines of\n```\ntask \"environment\" => \"config/database.yml\"\nfile \"config/database.yml\" do\n  File.open(\"config/database.yml\", \"w\") do |f|\n    f.puts <<-str\n      test:\n        ...\n    str\n  end\nend\n```\nSo yes, the credentials for the test db you use for CI end up stored on your repo, but I don't think that's so bad. So this works for me.\n. AFAIK the only task that requires the file present is environment, so making sure it runs before that should work. Rake itself should not be a problem; if it is, notify rails-core :)\n. @grahamc I just reconfigured linode so you have full access to integrityapp.com's DNS management. Please let me know if you need anything else from me.\nSorry for the delay, this slipped my inbox a couple times. And thanks a lot for the work of taking over and maintaining integrity :)\n. I gave @grahamc access to the linode panel so he can point it to wherever he wants/needs :)\n. Awesome! :D\n2012/1/4 Graham Christensen\nreply@reply.github.com:\n\nbuilder.integrityapp.com has been configured and is set up. I have not updated the documentation, though. I will be setting up integrityapp.com as well as soon as I can.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/integrity/integrity/issues/105#issuecomment-3362906\n. \n",
    "jsmestad": "is this fixed yet?\n. ",
    "iain": "I fixed that in the finalist fork\n. ",
    "fritzek": "+1 ;)\n. ",
    "qmx": "any reason why this didn't got applied?\n. ",
    "zdennis": "For one, it breaks the exit status of the command that is run. See http://mutuallyhuman.com/2010/4/29/unix-tee-in-real-life which has the actual fix that you would want applied.\n. I have this same problem and I am not using Selenium, just a Rails app. It hangs half-way through and never completes.\n. ",
    "cpjolicoeur": "I'd love to see this too.  We just ran into a problem with our Integrity app on EC2.  completely ate up 100% of our disk space.\nHard to believe that this isn't already built into integrity considering it does a full git clone each time instead of a reset and pull\n. ",
    "rbroemeling": "I've implemented a configuration variable that allows configuring of Integrity to automatically delete builds after X days (where X is any integer above 0).  I believe that this should address this specific request.  See my branch at http://github.com/rbroemeling/integrity for the moment for this feature, though I am hopeful that it will get pulled upstream into the master integrity tree.\n. Sorry, just realized that I should have included a link to the specific patchset necessary to get these changes in-place, so here it is: http://github.com/rbroemeling/integrity/compare/c709acd27b...365c26d47d\n. Hi sr,\nWell, I don't really have any problem with a rakefile to do it; but a couple of things about the currently-existing process, then.\n1) There is no way to delete only \"expired\" builds.  i.e. delete anything older than X, or only the oldest X, etc.  Typically \"delete everything\" isn't actually what I would want.\n2) The rake task deletes only FS directories and doesn't update the database, which causes the database to be out-of-sync with the DB.\n3) In the current codebase, \"bang\" operations are used (i.e. .destroy! instead of .destroy) which means that the hooks are disregarded, which again leads to the DB being out-of-sync with the FS when (for example) a build is deleted from the web-interface and the DB being out-of-sync with itself (i.e. commit rows existing for builds that have been deleted, etc.)\nThe patchset that I reference above fixes all of those things, and even if the rake task remains the \"standard\" way of removing all the old builds from the FS, I would strongly suggest that most of the patchset be pulled into the \"trunk\" of integrity to fix some of the above issues.\n. ",
    "tjsingleton": "I updated the Gemfile to load rack 1.0.1 instead and ran the bundler again without any problems. \n. For what it's worth the delayed_job builder will only do one at a time. Check out http://integrityapp.com/#_delayed_job for details on getting it setup.\n. ",
    "radiospiel": "Yeah, that would certainly be suitable as a test for the entire system. \nHowever, I have two separate subsystems, each built by a different team, and I am running a test suite for the entire platform. Now it would be great to see the status of each subsystem on my integrity start page - i.e. each handled independently from the other. As the subsystems are checked out from the same repository they end up in the same build directory, the tests start running in parallel, and thus break.\nI know that this is some way of a comfort feature, but hey, I do like comfort.\n(Besides: integrity was a real joy to set up and get running)\n. ",
    "colinsurprenant": "similar situation here: I have multiple branches for the same repo configured as different projects and if any two branches of the same repo are built at the same time, it will usually fail with 'test' database race conditions.\nQuick & easy way to solve this is to only allow 1 build at a time. Using the default threaded builder, you can do this in init.rb by putting the number of threads to 1 using :\nc.builder :threaded, 1\na better solution would be to somehow isolate each build into its own test db, certainly easily doable through some pre & post setup in the build rake task. maybe dynamically generate the test db name, create the db, run the tests, drop the db. \n. ",
    "qrush": "I came across this as well, and posted on the ML about it.\nI ended up with this patch, sr didn't want to merge it in though.\nhttp://gist.github.com/273075\n. ",
    "lackac": "This also solved my issue where building a Rails app using bundler failed because of the already loaded rack 1.1.0.\nThanks.\n. ",
    "adambair": "/opt/local/lib/ruby/site_ruby/1.8/rubygems.rb:280:in `activate': can't activate rack (~> 1.0.0, runtime) for [\"actionpack-2.3.5\"], already activated rack-1.1.0 for [] (Gem::LoadError\nThanks qrush - your patch solved the issue I was having.\n. ",
    "botandrose": "+1 thanks!\nFixed my problems too. Why wouldn't sr accept it? Seems like a clearcut bug to me.\n. @dougal, I'd agree, except that these undesired environment variables are set by integrity itself. Since integrity is responsible for launching the new process to run your apps' tests in, I think it falls squarely to integrity to ensure that it doesn't let its own environment bleed into the new process.\n. ",
    "mocoso": "+1\nSr could you share your reasons for not committing this to master?\n. /usr/bin/env -i blows away the environment completely and so generally you will then have to put in a fair amount of work to recreate the elements of your environment that your project does need to build successfully.\nThis is why qrush's patch just undoes the changes made by integrity\n. This was fixed in http://github.com/integrity/integrity/commit/fdf3f01e6c7581b381d94a05e3bb7f4ecaf106be\n. ",
    "dougal": "-1\nThese seems very much like an environment issue rather than an Integrity issue. Integrity allows you to run code, and has little to do with making sure the host environment is setup in an appropriate way for your app. If you wish these environment variables to be unset, add this to the command that is run for your project.\n. ",
    "khelal": "I can confirm that I had the same exact problem and the patch fixed it.\n. ",
    "JDutil": "I'm having the same issue trying to use the latest 0.9.5 version of bundler\n. Not sure if I am going about it wrong, but I also had to add:\nsource \"http://gems.github.com\"\nto the group :test block and removed the :git references in the :test block also.\nOtherwise I was getting permission errors when it tried to install the git repos.\n. I have a similar setup with multiple projects using the same prefix.  I use the /github/:api_token hook since I was unable to properly authenticate the project specific hook, and it is working properly for me.\nWhen using the project specific /:project/builds hook this may still be an issue though I was unable to test that setup.\n. I've just setup an instance of Integrity from master and my builds are not running either.  I'm asking to manually build from HEAD on a newly created project, and it creates the build.  Then it doesn't appear to ever pull down the git repo.  Looking at the log file absolutely nothing is being logged either so it doesn't appear anything is happening after creating the initial build record.  \nCould you elaborate on the configuration change?  The above configuration looks similar to what I have, and what master is using.\n. Yes turned out unrelated to this.\n. I was using rvm and a gemset specifically for integrity so any versions installed shouldn't have been loaded.  I was also using bundle exec rackup also so to start the server so that also should have prevented it from being loaded.  I had found that line in Mail also when debugging which confused me since it appears this shouldn't be an issue.\n. Well the issue is with the way Passenger handles threads.  By switching to the DelayedBuilder I was able to use Passenger for the web server.  The documentation is quite outdated for setting up Integrity though do to bugs I've come across.  I'll be trying to submit some updates to documentation and bug fixes for the issues I've come across.\n. Would you be opposed to moving the docs to the README?  It may not be great to have 2 places to update, but since the website isn't currently being updated it would be much nicer for people to be able to read the README instead of hunting for documentation.  That way it also will get formatted nice when viewing it on Github.\n. I've fixed this issue in https://github.com/integrity/integrity/pull/160 once it's merged.\n. Yes I got it during the test suite.  I'm using OSX 10.7, it occurred with both Ruby 1.8.7 & 1.9.3, and with both sqlite3-ruby 1.3.2 & 1.3.5.\n. Only when changing the builder to :dj with sqlite3 adapter instead of the default threaded.\n. ",
    "valdis": "insert in the Gemfile on line one\nsource \"http://gems.rubyforge.org\"\nand replace \nonly :test do\nwith\ngroup :test do\n. ",
    "shingara": "no, with second params in your configuration :\n. ",
    "p": "The readme should contain enough information/instructions for someone to follow to end up with Integrity using resque builder.\n. Killing out of process workers is more complicated, but at least in process worker threads can be made to check a flag periodically and quit if their build is deleted.\n. Closing as wontfix.\n. @rud according to a comment above, \"the matcher is insufficiently specific\". The fix then should make the matcher more specific?\n. If you make a pull request with these two changes:\n1. Change %W{#{@repo.uri} #{@repo.uri}.git} to [@repo.uri, \"#{@repo.uri}.git\"]\n2. Add test coverage\nI will be more than happy to merge it. Thanks!\n. Good idea. This should allow implementing #194 for projects.\n. That commit provided json serialization for builds. This issue remains open because corresponding functionality for projects was not implemented.\n. You are right, I got it backwards.\nWith json serialization of build statuses, #194 can be implemented in a prettier fashion (poll the api rather than refresh the page).\n. Closing as a non-Integrity issue.\n. Closing as a non-Integrity issue.\n. The root cause should now be fixed in do_sqlite3. Until that fix propagates to released versions and integrity gemfile is updated, the workaround should be to require sqlite3 on top of init.rb.\n. Closing as a non-Integrity issue.\n. #191\n. How about #189.\n. Please try #189.\n. I think you simply need to set GIT_SSH in the environment you run Integrity in.\n. If you want to use a git wrapper with Integrity this can also be done without any alterations to Integrity as follows:\n1. Name your wrapper git and place it in its own directory.\n2. In the wrapper, use absolute path to refer to the real git. E.g. /usr/bin/git.\n3. export PATH=/path/to/wrapper:$PATH\n4. Start Integrity.\n. I have not actually used Heroku, this was more of a general observation. It seems Heroku has a free plan which may be sufficient for testing.\n\nThe docs state that it isn't possible to setup Integrity to use an SSH deploy key on Heroku.\n\nI am not entirely sure what this means. Are you running Integrity on Heroku? Are you cloning a repository hosted on Heroku? Something else?\n. http://stark-bastion-9589.herokuapp.com/test-project\nI tried building integrity but it requires sqlite which heroku doesn't have, so that didn't work.\nWas your issue #185?\n. For my future reference:\n1. https://devcenter.heroku.com/articles/quickstart\n2. Sign up for heroku\n3. Download heroku toolbelt\n4. Clone integrity\n5. heroku create\n6. Edit gemfile, comment sqlite bits uncomment pg bits\n7. bundle install to get updated lock file\n8. Edit init.rb, replace db from sqlite to pg, find pg settings in heroku dashboard/account\n9. Comment out integrity.log as instructed in init.rb\n10. Commit everything\n11. git push heroku master\n12. heroku run rake db\n. Yes. Can you manufacture a repository and a keypair for testing?\n. Please try #188.\n. git reset --hard takes a branch name as an argument, not filesystem path. Is this part of your build command? What is the complete log of failure?\n. Might be a threading issue. Which builder are you using and have you tried a different one?\n. I checked my install and I am running Integrity via Unicorn.\nhttps://gist.github.com/4238044\nPerhaps your build commands are not working?\n. A per-project setting makes more sense to me.\n. Wait, I did not realize the command was per-build. \nIs there gerrit documentation that explains why it requires different checkout commands for builds?\n. Conceptually this does not feel right. In Integrity there are projects which are built. You essentially want to bypass all project configuration and have a unique build command for each build. This is normally accomplished by keeping the build command in the repository and invoking it (rake etc. ends up doing more or less this anyway), except you want to specify build command externally to both the Integrity project and the code which is in repository.\nHave you considered simply editing a project before triggering a build?\n. You issue a PUT to /project-name.\nproject_data%5Buri%5D=repo.git&project_data%5Bbranch%5D=master&project_data%5Bcommand%5D=rake\nReplace as needed.\n. Thinking about this more, I would rather not allow submitting arbitrary code to integrity over http.\nHowever, I would support/consider submitting arbitrary data which then could be used via #189.\n. If integrity implemented CSRF protection updating projects would have been more involved. But right now it should be very easy.\n. It's rather hard to offer specific alternatives given details provided here, but besides updating the project for each build and implementing arbitrary per-build data (but not code), I can also offer:\n1. If each commit requires a unique test command, store the command elsewhere before starting a build and have the build script (the one specified in Integrity configuration) fetch the command from wherever it was stored given the commit hash being tested.\n2. Create a separate repository which contains test command and repo/hash that needs to be tested. Have the script that starts a build commit and push to that repository with both repo/hash and test command. Have Integrity watch that repository. In Integrity build script retrieve the command from the helper repository and execute it.\n. Perhaps auto branch feature will do what you want. It seems that the only piece of information that varies is the branch name.\n. refs/changes/#{@short_identifier}/#{@identifier}/#{@patchset_id} should be the branch name? Or is it a tag?\n. Could you try auto branching then?\n. http://integrity.github.com/ under auto_branch!\n. As the unix user running Integrity run:\nssh-keygen\nCreate a new key pair. Do not set a password on it. Save in default location prompted, note what the location is. Take the public key file and add it to your ssh keys in github.\n. Sure I can do that.\n. Added a silent fallback to the old variable. No need to harass users.\n. Fixed.\n. Another caching approach: https://github.com/composer/composer/issues/1323\n. I think I have seen the races and there was a fix for them in one of the closed PRs.\nWith threaded builder a new thread is spawned to build the build. If this thread is scheduled before the request returns to the test code, the build is built. Otherwise the build is not built.\n. As far as the diff here, it ends up testing integrity against different versions compared to what we have in the lock file, which is probably not ideal.\nhttps://github.com/rdp/faster_require/issues/16 suggests to me there may be multiple requires of something going on.  Maybe activesupport.\n. Never mind, I read the diff backwards. I think this is what we want.\n. Rebased.\n. UI/wording can be improved but this finishes hpoydar's patch.\n. Reproduced the issue on 1.8.7. I think I will simply write a to_utc_time implementation that works everywhere.\n. @grahamc please try this.\n. Overall this looks very solid, great job.\n. Merged, thank you.\nI think builds should gain json view (http://localhost:9292/art2/builds/31.json).\n. https://github.com/integrity/integrity/commit/2c8d6c31cdff20b6b0f3be237944753f45088e34\n. This particular exception cannot be persisted because it happened during build saving.\n. \n. Pull requests updating dependencies and fixing whatever issues arise from that are appreciated.\n. This was superseded by #234.\n. Before you sink too much time into this, are there any issues (as in breakage) with the current Integrity master?\nIf the current master works fine and updates create inevitable problems for some of our users (e.g. being forced to update rubygems), I would be inclined to postpone dependency updates until rubygems is in a more sane state.\n. By now this is typical (dare I say, expected) behavior. Nothing new there.\nThe option you forgot was:\n- Do not use rubygems (not trivial, but also not as hard as one might think)\nI will need to investigate this more thoroughly to figure out what the least aggravating option is, but in the meantime, would you mind making a separate PR just for notifo deletion without changing anything else in gemfile hopefully?\nAlso, removing version specifications on all dependencies is something I need to think about. Integrity should not be using much version-specific functionality, but historically dependencies have been frozen and I need to consider what breakage unfreezing might bring.\n. > What do you mean by that ? Providing a tarball with all dependencies ?\nhttps://github.com/rtomayko/rpg\nEven though it has not seen any significant development since 2010, it manages to work while rubygems insists on breaking itself on a regular basis. There are things rpg does not do, but what it does do stays working.\n(I have resigned to using rvm recently so this may have changed, although I would expect not significantly.)\n\nI don't know integrity history, but many ruby dev I see have the bad habit to froze gem version for no real reason.\n\nYes, and this is another fail-fail situation. Because many libraries have no interest in compatibility (any breaking changes are acceptable as long as they come with tests), or are at version 0.x where you really cannot blame them for doing this sort of thing, the options are 1) freeze version specifications to very specific versions that are known to work and dread updates or 2) have stuff break at the most inconvenient times.\nFrom a quick glance at the gem list in this very PR, 1/3 to 1/2 of Integrity dependencies are at version 0.x.\n\nThe test suite did not show any breakage so far. But again I have no idea about the actual coverage.\n\nUltimately dependencies will be updated and I will wait for bug reports. Living in the past is worse.\n. That is a race. \"HEAD is building\" means commit info has not been fetched yet, which suggests to me that travis is slower than your machine (cpu/io) which seems plausible. \"sha1 is building\" means the repo had been cloned and the build command is being executed. This is something for me to fix.\n. To reproduce locally, try dd if=/dev/zero of=test while you are running that test.\n. There is a sleep for half a second there, I'm guessing it is not enough. I can make it longer easily enough but that obviously increases the runtime of the test suite.\n. The fundamental issue is the build process is essentially indivisible, at least from the perspective of test code, and that test attempts to inspect its state in the middle. I'm thinking checking for \"HEAD is building\" and discarding those responses might work well enough for now.\n. As far as my opinion on datamapper, I have very limited experience with it. 95% of my interaction with it has been a result of maintaining Integrity and Integrity does not exactly do anything fancy with the database.\nMy last impression of datamapper was that migrations were effectively unusable a year ago, see #130 for gory details. See also 9b990ab0588de0482e00e65895c20fed3df41002 for more fun stuff. Note that while datamapper itself is at 1.x, dataobjects drivers are at 0.x. I dread do/dm version updates.\nIf you are looking to get work done as opposed to play with technology, I would recommend activerecord. If you are looking to play - sure, why not.\n. Can you rebase this on master please?\nSo far I see two things:\n1. bundle update (unchanged gemfile) updates zentest to 4.9.0 which seems to work with my rubygems 1.8.25.\n2. Same update creates the delayed_job failure due to queue attribute missing.\nThe delayed_job situation should be dealt with first.\n. > Yeah in fact the real dependency is rubygems >= 1.8.25.\nI will commit/merge stuff that Works On My Machine(tm).\n\nBut again. Why not having a distinct Gemfile for developers so we can get rid of the ZenTest dependency for simple users ?\n\nBundler philosophy? Likelihood of people getting freaked out when they see two gemfiles (we had this before with 1.8 and 1.9 editions, and it was somewhat annoying)? Don't know.\nI suppose my test for this PR would be:\n1. Works on my dev machine.\n2. Works on travis.\n3. Works on my integrity installation.\n. Looks like travis updated rubygems and bundler, putting a new twist on the situation...\n. Receiving a lot of zentest spam on my vps with rubygems 1.8.23.\nhttp://pastebin.mozilla.org/2232927\n. Locking zentest to 3.8.0 allows bundle install to succeed, however test suite now requires ssl where previously it did not:\nhttp://pastebin.mozilla.org/2232951\n. Builds are now broken on travis... it seems there is no way to please everyone.\n. I think I have an idea what to do here.\n. Can you please rebase or redo this PR on current master and send a new PR? I want to keep this discussion for posterity.\n. No worries, I will take care of it.\nGood point regarding localized systems, this code will need to be redone in a more robust fashion.\n. Can you rebase this on master please?\n. Indeed it is.\n. Fixed in #231 with discussion in #230.\n. Hi, thanks for the patch. Do you know if travis has similar functionality?\n. What do you think of status_image_always_public as the configuration variable name?\n. If you rename to status_image_always_public I think I can merge this.\nThere should be some acceptance tests as well, if you can write them that would be awesome otherwise I will take care of it.\n. Interesting. I was leaning more toward having it be off by default.\n. No, ADMIN_USER/ADMIN_PASSWORD cover the entire instance on Rack level which includes status images.\nYou should be able to achieve what you are after by setting username/password in config and marking your projects private.\n. Otherwise looks good, thanks!\n. #232 has the background/explanation.\n. Travis agrees: life is better without zentest.\n@byroot please try this version.\n. Travis just keeps hitting that race, what 404s are you seeing?\n. I am going to merge this then, and please do.\n. I spot this:\ntest/unit warning: method StatusTest#test_Get_private_project_info_in_JSON_format is redefined\nFixed in #237.\n. Looks good.\nI am seeing this now:\n/home/rvm/.rvm/gems/ruby-1.9.3-p385/gems/activesupport-3.2.13/lib/active_support/multibyte.rb:26: warning: already initialized constant VALID_CHARACTER\n. Hunted down the problem: https://github.com/datamapper/dm-core/issues/242\nruby 1.9:\n\n1.9.3-p385 :009 >   p=Integrity::Project\n => Integrity::Project \n1.9.3-p385 :010 > DataMapper::Property::Integer.new(p,:id).typecast(['1'])\n => [\"1\"] \n\nruby 2.0:\n\n2.0.0p0 :070 > p=Integrity::Project\n => Integrity::Project \n2.0.0p0 :071 > DataMapper::Property::Integer.new(p,:id).typecast(['1'])\n => nil \n\n. The fix here is suboptimal because:\n\n1.9.3-p385 :011 > Integrity::Project.get('1x')\n => nil \n1.9.3-p385 :012 > Integrity::Project.get('1')\n => # @branch=\"master\" @command=\"rake\" @artifacts=\"\" @public=true @last_build_id=1 @created_at=# @updated_at=#> \n1.9.3-p385 :013 > '1x'.to_i\n => 1 \n\n. Can you add a test for this please?\n. That is probably the best idea.\n. Looks good, thanks!\n. :speedboat: :shipit:\n. Awesome, thanks for working on this! I think the previous build is not always needed therefore it should not be queried all the time, especially not with a query that retrieves all builds for a project (hundreds/thousands).\n. Looks good, thanks! I will test and merge late next week.\n. The code should be easily movable in the base class, and maybe make a partial for the UI to avoid excessive duplication?\n. Link to manual?\n. Otherwise looks good, thanks!\n. Also can you add the note about ident and timeouts to either the source as a comment around the require or to the configuration UI? I would prefer the configuration UI.\nNote to self: update changelog.\n. :+1: \n. Integrity is a rack application, so you should follow passenger's instructions for rack applications, https://www.phusionpassenger.com/documentation/Users%20guide%20Apache.html#_deploying_a_rack_based_ruby_application_including_rails_gt_3. Are you able to get their hello world example working?\n. Yes, that would be good, thanks! Can you elaborate on what you have in mind?\n. Yes, that would be good, thanks! Can you elaborate on what you have in mind?\n. Yes, that would be good, thanks! Can you elaborate on what you have in mind?\n. Yes, that would be good, thanks! Can you elaborate on what you have in mind?\n. Sounds good :+1: \n. I see, thanks :)\n. Thanks, but, why was 1.9.2 killed?\n. I do not plan to put much effort into supporting EOLed releases, but if they work, why not let them be?\n. :+1: \n. Looks good, just found one disabled/enabled misspelling I think. Thanks!\n. :+1: @grahamc \n. No, I assume it works perfectly :D\n. :+1: \n. Would there be a use case for password protecting the resque/delayed job backend ui?\n. I think the code here is good to go but we need a changelog entry that explains that resque ui is now automatically exposed. I can draft this when I have a moment or feel free to take a stab at it.\n. Thanks!\n. :+1: \n. I like :+1: \nI think it will look even better with U+21B3 arrow (http://unicode-search.net/unicode-namesearch.pl?term=arrow).\nOr perhaps a ul/li with dots?\n. Looks good but there are some conflicts, can you rebase on master please?\n. I like, @grahamc your thoughts?\n. Why not use getElementById instead of querying by selectors?\n. :+1: \n. And can you please send a separate PR for whitespace changes?\n. UI shows commit times because the \"by X on Y\" part refers to the commit, not the build. This pull request however claims to group by build dates.\nA solution might be to add build time to the UI.\n. I like this. @grahamc thoughts?\n. Thanks, I wonder how this happened.\n. Can you add a test please?\n. I see, this PR applies to gitlab only.\n. :+1: \n. @Bishop are there any other gitlab-related changes that you would like to make?\n. This can be accomplished via a git post-commit hook.\nIf you do not want to issue a request from the git hosting machine to the integrity hosting machine, you can write a poller for git and have this poller invoke integrity's endpoint.\n. Integrity is a lightweight continuous integration server, I don't think a poller like this would be in line with Integrity's philosophy when there already are established ways to achieve the desired result.\n. Thanks for the patch!\n. What key/configuration setting/project parameter is \"git@bitbucket.org:\" the value for?\n. Shouldn't it be after submodule commands?\n. a user\n. an additional\n. Should use integrity/integrity.\n. If that is the case you can leave it alone.\n. This may not work as intended. If two processes each creates the file, they will end up each locking their own fd.\n. Very true. Code review is good :)\n. This should use code rather than hardcoded 401?\n. response_content_type to avoid naming collisions maybe?\n. parse_response_as_json?\n. Is there a use case for this? We should be using project name in urls everywhere.\n. code is already a numeric status? So just use it as an argument to status?\n. Replace that line with status code.\n. Is this necessary? It is not Integrity's job to update rubygems...\n. Is this something from your local installation?\n. My concern is that users on a less than current version of rubygems who are currently able to use integrity continue being able to use integrity.\nThis feels like a fail-fail situation. New rubygems cannot install old ZenTest, old rubygems cannot install new ZenTest. Is this an accurate assessment?\n. Which version of bash was this on?\n. I suspect this comes from delayed_job_active_record 0.3.2 -> 0.4.3 update. This also looks like a change that will break installations using Integrity with delayed_job. If we cannot add the column automatically to existing installations we need to at least have a changelog entry for this change.\n. This needs to be changed in https://github.com/integrity/integrity/blob/master/lib/app/views/integrity.sass and then integrity.css should be generated from integrity.sass.\nAlso, what does this change do?\n. Could you send a separate PR for it?\n. Almost. You need to create a new branch off master, cherry pick the stylesheet commit into it and create a pull request for that branch. Then hard reset this branch to the first commit and force push.\n. You can say if !@only_success_changed || success_changed?\n. Please issue a query returning one row for the build in question.\n. I think the previous build query should be delayed until it is needed.\nSuggested solution: add a previous_build method which would check e.g. @previous_build_queried variable (to account for previous build being nil) and if not, call set_previous_build, then return @previous_build.\n. Expected value should be first (see the failing test in https://travis-ci.org/integrity/integrity/jobs/15215288).\n. There is a warning on 1.8.7 that this block apparently is given two arguments, can you investigate? https://travis-ci.org/integrity/integrity/jobs/15215288\n. What is this for?\n. Are these two lines doing anything for the tests?\n. I think the purpose of this test was to check that deleting a build actually deletes a build. Can you either put this test back or create a new test which deletes the only build in the project and checks that the project has no builds?\n. This should raise an exception if the class is not defined, rather than silently doing nothing.\n. ... to accomplish which you could simply remove if const_defined?. Unless there was a reason you went this way?\n. I see this but IMO register should still raise on error.\n. What are these for?\n. Why were these added again?\n. Two lines please if you don't mind.\n. I am pretty sure this does not work on all browsers, can you add an inline comment with which browsers it does work on?\n. Is there a reason why getElementById won't work here?\n. I would prefer to have no space between function and opening parenthesis, indent with 2 spaces and put returns on their own lines.\n. Also, let's use a local scope (function() { ... })() to avoid naming collisions.\n. Build date should be either started_at or completed_at, no?\n. Sorry, can you explain how setting unknown time to current time works?\n. Would it then be better to have a separate block for not started builds?\n. ",
    "ghost": "Having the same issue here, but adding an SSH key to the apache user and adding it to my git repository doesn't work either.\n. I'm finishing up the code today have a bit of testing to do. Look for\nit tonight or tomorrow.\nOn Wed, Sep 28, 2011 at 12:52 PM, Graham Christensen\nreply@reply.github.com\nwrote:\n\nI love the idea, would you mind contributing some code for it? I would merge it in at once.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/integrity/integrity/issues/114#issuecomment-2227412\n. \n",
    "vlex": "Same problem here\u2026 :)\n. ",
    "PartidoDeInternet": "same problem here too\n. ",
    "voodoorai2000": "Okay, I thought I had this problem, but really what happened was that, even though I could git clone from the command line, because my local machine's ssh key was already in the server; I didn't have the ssh key of the server in github, which was the one being send.  Not apache's, but the deploy users ssh key. Running Integrity with Passenger + Apache.\n. ",
    "kareem": "+1 for this. though i'd prefer that instead of aborting older builds, newer builds run sequentially.\n. ",
    "til": "@tjsingleton thanks, that should do the trick (as long as you only start one worker process)\n. For a test to be useful it would have to save to a test postgresql db to make sure it triggers the exact error I assume. And that would involve extending the test suite with a setup and teardown for a postgresql test db, which I am not sure how to do it in a way that is acceptable for this project, and whether it should be run with the full suite or only on a specific switch. And given that after entering this issue I haven't used integrity much longer, I don't even know if this is still a problem, so I'll close the issue for now.\n. ",
    "tomkersten": "So the link is clickable: http://github.com/tomkersten/integrity/commit/526994e1aeee5a7e6540a9bc3c56e65006f4a363\nSummary\nIt adds the ability for Integrity notifiers to send notifications when a build starts (instead of only after a build finishes).  There is no impact on the API for existing notifiers...and it does not require new notifiers to implement new methods going forward.\n. For those interested, I rebased this commit to update it to the current state of master as of today.  I threw it on a new branch called \"builder_updated\" (the original is still available on \"builder\").\n. I removed the old branches & rebased the changes off of the current HEAD (as of Sept 10).  The new branch name is called \"start_notifications\" (more details here: http://github.com/tomkersten/integrity/commit/69d882554b35e931b352d821d9ad3cd1311d5c1a).\nOpinions are welcome.\n. Cool. Thanks, man!\n. ",
    "petyosi": "I had the same issue as the project got larger; switched to dj, seemed to resolve it. \n. ",
    "claudiob": "Thanks for the suggestion, I'll give resque a try.\n. ",
    "cgriego": "Sure, just strip \"refs/heads\" from the incoming ref instead of the leaving only the last segment.\n. One of Glenn's commits cached the file in the tmp folder and used an action to serve it. That worked for me.\n. That seems inconsistent to me since the act of calling git clone and the branch checkout is is not a part of the build command but part of Integrity itself since Integrity boasts built-in git support and similar tools such as cruisecontrol.rb do support initializing the submodules.\n. I had to jump through additional hoops to setup and run Integrity with Bundler 0.9 while building projects using 1.0. You could still use 0.9 while making it compatible with the 1.0 betas if you stopped using the now removed private API.\n. I'd love to submit a patch for this issue, but I'm a little stuck.\nThe simplest thing that could possible work is to trim the string in the writer, which I probably will do in my fork to alleviate the issue for us in the near term, but I want my notifiers to have access to the full commit message. That means the Commit#message property needs to change from a String to Text, which requires writing a DataMapper migration. Except Integrity supports, and we use it with, sqlite3 which doesn't fully support ALTER TABLE statements. Then there's also the question of where in the integrity project the migration should be placed.\nCan a core team member provide some guidance on what direction would persist the full commit message and also has the best chance of being merged into core?\n. I am not. I abandoned using Integrity.\nSent from my iPhone\nOn Sep 28, 2011, at 12:02 PM, Graham Christensenreply@reply.github.com wrote:\n\n@cgriego, I think the best way to go about it would be to create a second column, copy all the data into that column, and then drop the first column. It is a three part process, but its really the only way to go about it.\nAre you still up to making a patch for that? I'd love to get that in.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/integrity/integrity/issues/78#issuecomment-2227545\n. \n",
    "XieConnect": "I hope this issue gets solved soon. There errors are: Read-only file-system: integrity.log\n. ",
    "dsabanin": "That's a great news!\nHaving parameters passed with POST to /some/endpoint seems like an elegant solution, but I believe it will require specific web hooks created just for Integrity. Although it's not a problem, it could potentially rule out other source provider who also may have Github-like web hooks already done. But the idea is cool and definitely is worth doing. Along with having Github endpoint that can accept other provider's repos, it should be a complete set of what people might need.\nThanks for taking the time to reply, I really appreciate that. Keep up the good work!\n. Yes, you are right. That makes it the best way to do it probably. When are these changes planned? \n. ",
    "davidsf": "It seems that ParseTree would not work with ruby 1.9.1 [1]. So, the question is: Integrity works with ruby 1.9.1?\n[1] http://blog.zenspider.com/2009/04/parsetree-eol.html\n. ",
    "trak3r": "more info:\n$ gem list | grep -i bundler\nbundler (0.9.25)\n$ ruby --version\nruby 1.8.7 (2008-08-11 patchlevel 72) [x86_64-linux]\n$ gem --version\n1.3.7\n$ git --version\ngit version 1.6.3.1\n. ah the cause seems to be the patch not wrapping the command line arguments in quotes, but upon doing that i end up back at the missing rails gem error.\n. ",
    "mzsanford": "The current deploy and master branches are currently failing due to this error:\n\u2234 rake db\n(in /Users/matt/src/external/integrity)\nIntegrity::Author < DataMapper::Type is deprecated, use the new DataMapper::Property API instead (/Users/matt/.bundle/ruby/1.8/gems/dm-validations-1.0.0/lib/dm-validations.rb:41:in `new')\n. ",
    "jeremyolliver": "Fix for this issue at:\nhttp://github.com/jeremyolliver/integrity/commit/98bae311784540c89f1ebff01bbad774999a4148\n. See issue #67, this line already needs to change to support bundler 1.0.0, and I suspect the new way of doing this (require \"bundler/setup\") will handle being executed in a different path (if not, it would then be a bug with bundler rather than integrity)\n. The change I had to make to get this working using bundler 1.0.0 was changing:\nrequire \".bundle/environment\" (in init.rb)\nto:\nrequire \"bundler/setup\"\n. I was about to post that I've had no issues running Integrity with bundler 1.0 and testing a rails 2.x app not using bundler, but after double checking I realised that I'm not using bundler 1 in my install after all.\nAre there issues testing an app not using bundler with bundler 1.0? I don't see why there would be specifically, since the build command for the apps Integrity run's is in a different environment (e.g. rake command when running tests won't be restricted to Integrity's bundler environment).\nI opened this ticket, simply because this was shortly after bundler 1.0 was released, and Integrity didn't specify the version of bundler used at the time, and used a syntax that didn't work with version 1 of bundler.\n. Cool, I'm very unfamiliar with datamapper, so I was just glad to be able to fix the only deprecation warning I got for it. Hope these pull requests get added in soon :)\n. ",
    "garethr": "No problem. I played around with both approaches so happy with just the one URL. I'll probably use the same pattern for the AMQP hook I'm working on now.\n. I've just pushed a new commit to the notifier to make it more useful, and I think to separate the use case from that of the http notifier. Specifically I've changed from using direct to fanout. This allows multiple clients to listen for the information as it happens.\nSo, I have a few use cases for this:\n1. You want multiple consumers of build information. You could do this using the IRC notifier, but I find a proper message queue a better fit.\n2. You want the notified application to do some long running task (for example packaging or deployment) after each build, but you only want it to be working on one build at once.\n3. You want to just broadcast the build information because you don't know all the potential consumers ahead of time.\n4. You don't want to potentially lose build information when you restart your consumer.\nHappy to knock together some examples in code as well if you'd like.\n. ",
    "robbyrussell": "I was having trouble going the rake task route because Rails was expecting this file to exist when rake is invoked from the app directory.\n. ",
    "mrtazz": "I used it for testing for some time, but haven't found the perfect solution where to host integrity for my projects yet.\n. I just tried out integrity from your master HEAD commit and noticed, that the notifier breaks with an uninitialized object. Apparently some more requires are needed. It worked with me before, so I have no clue why it breaks now. It is fixed here. Sorry for that. I'll add unit tests as soon as I can, so that it doesn't happen again.\n. The specialty was more because of dependencies of projects I want to build. But I finally got around to get a small linode and set up integrity there. Works perfectly and pushes notifications directly to my phone :)\n. ",
    "jwhitmire": "I also filed this on lighthouse, can't tell which is the real support site now.  If it's relevant, here's the lighthouse url: http://integrity.lighthouseapp.com/projects/14308/tickets/205-error-on-rake-db\n. Thanks, that got me past this issue.\n. ",
    "tjmcewan": "nevermind, the errors reach further than that. :-(\n. ",
    "zedtux": "Agree with claudiob.\nHere, Rspec + Cucumber is about 1h and half.\n. I am encountering the same issue... with Ruby 1.9.3 and REE...\n. I have solved my issue by replacing the following line from [...]/gems/ruby-1.9.3-p194/gems/integrity-0.1.11/lib/integrity/app.rb:\nruby\n  class App < Sinatra::Default\nby:\nruby\n  class App < Sinatra::Base\n. Ha ok.\nI'm asking this because I am using RVM, and have defined a gemset for integrity and my project is using another Ruby version and a gemset, so I need to redefine some environment variables, and then I have a lot of characters.\nI guess, if I put those variables in this script, it will work.\nThank you for you answer.\n. ",
    "toovs": "yeah why are there no docs?\n. ",
    "spanner": "It's easy to make to integrity run with Bundler 1 but I've found it's practically impossible to create a normal build environment within it. Bundler sandboxes the gem system, so whatever you do to the environment only the bundled gems are visible.\nI think it's probably workable if the application you test is also using Bundler, as it will  redefine the sandbox during your build. Anything that relies on config.gem or just gem calls will fail.\n. ",
    "simonask": "Note that this fix is not enough to get Integrity running with current datamapper. See pull request #84. :-)\n. ",
    "spectator": "In fact, Bundler.with_clean_env doesn't remove BUNDLE_GEMFILE from ENV along with some other ENV variables, so #with_clean_env doesn't help at all.\nI've made a fork of Integrity with Ruby 1.9.2 and Bundler fixes. If you interested you can try it out - https://github.com/spectator/integrity\nI'm still testing it with 1.9.2 and bundler and can't be sure that everything else is working. Well, Integrity tests pass :) So you can try it and tell me your experience.\n. oh well... my commits keep getting here, so ignore those you're not interested in\n. @grahamc it looks good, however I haven't used it in a real-life environment so feel free to use my fork and tell me if I can help with any issues you find.\n. It works well, you probably did something wrong...\n$ rvm use ruby-1.9.2-p180@integrity_test --create\n$ git clone git@github.com:spectator/integrity.git\n$ bundle install\n$ rake db\n$ rackup\n. That's cool, please let me know if I can help.\n. ",
    "jamesarosen": "This seems to be happening because one of our projects (\"foo\") has a name that's a prefix of some of our other projects (\"foo_core\", \"foo_forms\", \"foo_bar\"). The matcher seems to be insufficiently specific.\n. The solution might be as simple as removing the \"%\" from ProjectFinder#all\n. ",
    "rud": "So commit 5773fa8 looks like it would fix this. What are the chances of having that merged in?\n. It used to be a wildcard, but that means it'll match too much. The commit 5773fa8 fixes the issue as reported. Currently a \"LIKE\" query is used, with the fix it just uses an exact match.\n. I don't expect to be contributing a PR for this as I've picked a different CI solution for the project. In other words, this is up for grabs for anyone wanting to help out with a simple pull-request.\n. Think this can be safely closed now.\n. You're most welcome\n. ",
    "masterkain": "Same problem here\n. ",
    "jbbarth": "If you don't need Campfire notifications, just comment out the line in the Gemfile, it should work.\n. ",
    "msp": "Can you tell me which pull? I'm seeing this with a fresh install yesterday, following instructions at: http://integrityapp.com/\nand using branch 22.\nThanks.\n. Thanks Graham, Integrity fires up now but I can't get things building. Pretty sure that's local RVM issues though.\n. Are you using RVM in your project? I'm so far not able to convince the build to run in the projects RVM config despite trying this kinda thing:\nrvm use 1.9.2@project_gemset && rvm info && bundle install --without production && rvm info && bundle exec rake spec --trace RAILS_ENV=test\nrvm info is reporting the integrity RVM config, not the projects.\n. Hey - sorry, I went with BigTuna in the end but I've burnt too much time and still don't have a satisfactory setup. Unlikely I'll be able to look into this as I'm not convinced Heroku is the right platform for any CI - too locked down.\n. ",
    "edeustace": "Had the same problem,\nTo fix: open up the GemFile in your clone and change the json version to 1.4.\nBest,\nEd\n. ",
    "trobrock": "Ok that and using an older Bundler version got me running, is there any way to see the progress of the git clone or alter the build command at all?\n. Ok great, I noticed there are a ton of pull requests here that fix a lot of bugs and was going to fork it so people could actually update things to get them working well, but no need now.\n. Oh ok great, the current state of the app though is nearly uninstallable for me without a lot of extra work\n. ",
    "kwerle": "Master doesn't work for some other reason.  The instructions on your website at:\nhttp://integrityapp.com/\nare:\n$ gem install bundler\n$ git clone git://github.com/integrity/integrity\n$ cd integrity\n$ git checkout -b deploy v22\n$ bundle install\n$ bundle lock\n$ rake db\nThey don't work.  The least you could do is fix the gemfile so the instructions work.\n. Ah - serious bummer that the most visible webpage is broken.\n. Aeolus:/Users/kwerle/Source/integrity% git checkout master\nAeolus:/Users/kwerle/Source/integrity% bundle install\n...\nFetching git://github.com/snusnu/randexp\nfatal: remote error: \n  Could not find Repository snusnu/randexp\nGit error: command git clone \"git://github.com/snusnu/randexp\" \"/Users/kwerle/.bundler/cache/git/randexp-7ab83ea07d3c09e34e6b73455e7bc6525ae2f92a\" --bare --no-hardlinks in directory /Users/kwerle/Source/integrity has failed.\n. AOL: Me too.  Is commenting the only way to watch a ticket?\n. Never used it before, but I can get at least as far as doing the rackup and seeing the initial webpage...\n. Integrity app links to old website (upper right corner of the app).\nYou probably want to do a global search on integrityapp.com and be pretty aggressive about changing those refs.\n. ",
    "amitk": "Now what i did was i run the below command manually from the Integrity setup\n(cd builds/16 && RUBYOPT=-I/usr/lib/ruby/gems/1.8/gems/bundler-1.0.7/lib -rbundler/setup PATH=/usr/lib/ruby/gems/1.8/bin:/var/lib/gems/1.8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games && rake ci:build 2>&1)\nAnd got the error as \nbash: -rbundler/setup: No such file or directory\n. Thanks a lot for the information.\nI checked out the latest code from Master branch and the error is gonr.But some other problem has appeared.\nBuild for some projects is working fine but build for other are breaking and i am getting an error as :\nD, [2011-07-14T13:07:19.851354 #13793] DEBUG -- : (cd builds/7 && git fetch origin 2>&1)\nD, [2011-07-14T13:07:28.825691 #13793] DEBUG -- : (cd builds/7 && git checkout origin/master 2>&1)\nD, [2011-07-14T13:07:28.882442 #13793] DEBUG -- : (cd builds/7 && git reset --hard 6414843749e1daccd8c1fc9efa0e43d38195f555 2>&1)\nE, [2011-07-14T13:07:28.888316 #13793] ERROR -- : \"fatal: Could not parse object '6414843749e1daccd8c1fc9efa0e43d38195f555'.\"\nE, [2011-07-14T13:07:28.888603 #13793] ERROR -- : Exception occured during build: Failed to run 'git reset --hard 6414843749e1daccd8c1fc9efa0e43d38195f555'\n. Thanks for the reply.\nI am not using rvm for the project.\nFollowing are the versions which i am using\nrails - 3.0.7\nruby -1.8.7\nrspec - 2.6.0\nIs the problem something related to rails version?\n. ",
    "Fabs": "I had the same problem for a while, but managed to get it running with the current build.\nMy configuration file is this one:\nIntegrity.configure do |c|\n  c.database                  =  ENV[\"DATABASE_URL\"]\n  c.base_url                    = \"http://ci.example.org\"\n  c.github_token                = \"happy token\"\n  c.build_all                   = true\n  c.trim_branches               = false\n  c.builder                     = :threaded, 5\n  c.project_default_build_count = 10\n  c.directory = File.dirname(FILE) + \"/tmp/builds/\"\nend\n. ",
    "avocade": "Not running this any longer, so can't comment. We're using bigtuna.\n. ",
    "guiocavalcanti": "Ok, thanks. :)\n. ",
    "phocke": "ahhhh\nI see - I can't run it on 1.9.2 ...\n. ",
    "d11wtq": "No response? Still down on 6th September.\n. Did @snusnu delete randexp?  It's 404'ing in the browser too.\nchris@chris:~/integrity$ bundle install\nFetching git://github.com/snusnu/randexp\nfatal: remote error: \n  Could not find Repository snusnu/randexp\nGit error: command `git clone 'git://github.com/snusnu/randexp' \"/home/chris/.rbenv/versions/1.9.2-p290/lib/ruby/gems/1.9.1/cache/bundler/git/randexp-7ab83ea07d3c09e34e6b73455e7bc6525ae2f92a\" --bare --no-hardlinks` in directory /home/chris/integrity has failed.\n. ",
    "jonashaag": "Well get in contact with the hosters then ;)\n. I offer hosting for a new website if that helps.\n. ",
    "snusnu": "Hey,\nYeah, I deleted my fork of randexp, but (I hope) only after my patches were pushed into the master repo at http://github.com/benburkert/randexp\nI just checked (I still have the repo locally) and I have no commits in there that aren't part of official master branch, so I guess it doesn't make much sense for me to push my fork back online.\nJust using the official repo should just work fine?\nLemme know if I can/should do anything else\ncheers\nsnusnu\n. ",
    "garethrees": "Every little helps ehy! I'll try to contribute more as I use it.\n. ",
    "glenngillen": "Thanks Rich. I noticed your fork after I issued this pull request and pulled most of it in myself. Nice work :)\n. The github acceptance test fails sporadically on my machine with 1.8.7. Haven't identified why this fixes it, suspect it might be a class accessor being overwritten somewhere by a setup block.\n. ",
    "khoan": "I am using psych with ruby 1.9.3-p0 installed via rvm.\nYour commit branch looks better.\n. ",
    "azisaka": "I can provide it. Is it still interesting for you?\n. Cool! I'm gonna work on it.\n. @p projects are already supported, what is not supported yet is a URL for specific builds. But I don't think an end point for specific builds are needed. What are your thoughts about it?\n. What you think now?\n. You mean something like Ruby on Rails :unauthorized ? Because I don't know if Sinatra has this kind of feature.\n. Sure, I'm gonna change this.\n. Ok.\n. Actually, no. That was done by habit :smile: I'm gonna remove it.\n. Oh! Got it now. I will remove the parameter code for now. Maybe not?\n. ",
    "adrienthebo": "Is this issue still open? c5a2f67 would indicate that this issue has been handled.\n. ",
    "pirogoeth": "I solved it. @grahamc You might want to add something about the project checkout URI needing to match the URI that get sends in the post-receive payload (git://github.com/username/repo) to the README or somewhere where people will notice.\n. Buried artifacts do break it, I'll attempt to fix it later.\n. It should react just fine. There shouldn't be any problems caused when a build is pruned. I'm sure you've already looked at how it works, but basically, it just checks the :artifacts symbol in the build instance and gathers information from that, and then the build_info view takes care of the rest. There should absolutely be _no adverse side-effects when builds are pruned.\n. Ok, as you can probably see from the commit log, I fixed buried artifacts breaking artifact display. It does a much better job of handling those now :p it can also handle buried wildcarded artifacts now, as well.\n. * is basically a wildcard character. You use it in artifacts path the same way you'd use it in, say, bash. Like, \u2018ls ./*.jar\u2018 lists all the files in a directory that end with .jar. The usage and point is the same. There really is no need to document something as simple as that, in my honest opinion. As you can maybe tell from my last commits, I maybe answered some questions or changed some things that should have been different from the start or just shouldn't have been there.\n. Do you think you could provide me with an example of an artifact pattern which would allow access to arbitrary files? I've tried multiple different ways to get data from arbitrary files, but to no avail.\n. What do you mean by \"use case\"?\n. If I understand what you are asking correctly, basically, wildcards in artifacts work like this:\nSay you have a project which, when built, generates multiple files you may want to let others download, and say they're all placed in /artifacts/ under the build directory each time. In the artifacts field, you'll use \"artifacts/\" to provide all of those as an artifact. Or maybe, you only want to provide .gem files as artifacts: \"artifacts/.gem\"\nFor one of my projects, Integrity runs a compile script, which generates a jar file with a different name, depending on the version of the project, so I just have \"*.jar\" as an artifact.\n. ",
    "ryanhouston": "I'm heading out of town for the night but I'll look at the logger issues when I get back.\n. ",
    "mfrost": "Most of these changes are merely an attempt to move towards a more logically grouped lib directory. A few changes (logs / db) are meant to keep the root directory clean. The hope is that organization can make it easier for new developers to catch up and contribute more quickly.\n. ",
    "mezis": "Hi Graham,\nYour solution's obviously more complete (submodules being a nice touch).\nThis said, for the sake of this being accepted by @richmeyers eventually, I'd rather stick with a pure-ruby version.\nThanks for pointing your the \"competing\" PR though, I should probably add an option to disable this, as:\n\nI would prefer this being an option since projects that are small and/or host their repositories in proximity to ci are unlikely to need it.\n\nis definitely a good idea.\n. ",
    "JangoSteve": "Maybe instead of turning it off by default, we could add a config setting in init.rb with c.basic_auth = true, which could be set to false?\nOK, added documentation.\n. Sounds good. If you have any questions, please let me know.\nWhere it's doing git show and git ls-remote, they only really need the script the first time the repo is pulled down, but then seem to work fine without it after that. But since it works just fine with the script, I didn't bother adding complexity to detect that scenario. With the script, it worked every time.\nIf it's not clear, the top line where it runs exec ssh, only happens when the script is called without the specified arguments, which happens when git calls the script implicitly from just calling git commands after the GIT_SSH config var has been set with the script itself. So, you call the script explicitly, it then sets the config var and calls a git command, which then calls itself again implicitly.\nYou can put some echo lines in the script to help you see what it's doing, e.g. on line 16, you could add:\necho \"cd $3 && git fetch origin && git checkout origin/$4 && git reset --hard $5 && git submodule init && git submodule update\"\nAnd it will output that, with the variables filled in, to the runner.output. However, doing so may cause errors in the ruby where the specific output of the script is being parsed and used.\n. The purpose of this pull request was to get Integrity working on Heroku. I don't remember the details because I did all this a while ago. Have you successfully gotten Integrity to work using your method? If so, then maybe that could be added to the README, and we could just include the git_ssh wrapper from this pull request, minus the changes to checkout.rb?\n. Yes, I was running Integrity on Heroku by implementing the changes in this pull request. The line you quoted from the docs is the exact thing this pull request fixes. Your suggestion is more elegant if it works.\n. > Was your issue #185?\nYes. The issue is, you'd need to check out the repo through ssh-git with a specific key-pair.\n. With the solution in this pull request, you literally add the private key to your heroku as a config variable, and the git-ssh wrapper uses that. But if I understood your earlier comment, that part would still remain the same, you were just saying there's an easier way to load the git-ssh wrapper without having to modify integrity/checkout.rb, right?\n. ",
    "travisbot": "This pull request passes (merged 4076b61b into 51382e83).\n. ",
    "roberto": "That was fast! Thank you!\n. I think now we can use http://integrity.github.com instead of http://integrityapp.com as the website to this repository :+1:\n. ",
    "ahmet": "I thought images of Travis makes common sense and not found any legal obstacle to use them outside of Travis.\nAlso I can use images of Travis for my open sourced projects and of integrity for closed ones transparently.\nSince Travis licensed under MIT and open sourced like integrity, I don't think copying this graphic is illegal in any sense.\n. Any updates?\n. Thanks :)\n. ",
    "Smarre": "It must be (for my case; someone else might want setting at project settings instead) build specific, since, the checkout command varies for each build that will be built. The command could be pull, cherry-pick, whatever, but the commit that will be tested won\u2019t be merged onto master before this passes, so getting it with specific command is must.\nAn example for a command would be\ngit fetch http://gerrit.smar.fi/qtjambi-community refs/changes/24/124/1 && git checkout FETCH_HEAD\nWhere you\u2019d want that documentation? \n. Well, that forces us to maintain our own fork for that change, but it can\u2019t be helped then :) Since we need this feature for Integrity to be useful. \n. Those commands are to check out specific ref from remote server; the change is not in the tree and must be fetched from remote repository with some means or another.\nFor that reason I did not make a ready \u201dtemplate\u201d where you\u2019d just throw ids, since someone else might have totally different system, might have some other command she\u2019d want to execute for the repository before starting testing (like scp foo bar.sh && sh bar.sh ..\nThe command I gave as example specifies remote server url, change that will be fetched and then command to git checkout to that command. This way I can force tests for those changes before they\u2019ll merged to the repository, forcing independent test that nothing breaks. \nIt\u2019s easiest way I was able to think out for this kind of testing :)\n. I get it, but I don\u2019t really feel like having custom script updated by each commit for that being a \u201dcorrect solution\u201d either...\nWhat you mean with \u201dedit a project\u201d? If I can change build command (\u201drake\u201d part) with POST call to server, it\u2019d do what I want to achieve with this one. I assume it works even if there is \u201d;\u201d, \u201d&& \u201d or other script-like things. \n. Yeah, it\u2019s dangerous hence I disabled it by default in my patch. I\u2019m surprised you could just do it with that project setting changing.\nI\u2019ve been busy so I haven\u2019t been able to test it, I\u2019ll be back next week, from then I should have some time to look at it.\n. grahamc: I don\u2019t really see a point of adding some extra commands (that are useless for reproduction; only for this test case) to each commit you\u2019re processing when you can avoid it. That\u2019s where you\u2019re referring to? \n. I\u2019ve decided to leave this additional command to be there, atleast for now. The reason is that the command used for actual testing differs for different projects, so I can\u2019t wholly provide the full command to as \u201dtest command\u201d that way.\nIf it were configurable as part of project configuration (additional command), I could just put it to that field instead of throwing directly to the build, it wouldn\u2019t change how it executes itself.\nHandling all these with extra repository would be unnecessary hassle, where I can now just tell Integrity to build and test the stuff.\n. Uhm, example for this command I run to get correct data is \n    git fetch #{@git_url}/#{@project_name} refs/changes/#{@short_identifier}/#{@identifier}/#{@patchset_id} && git checkout FETCH_HEAD\nidentifier (short identifier is calculated from identifier) and patchset ids are main variation things, project name maybe could be retrieved from somewhere? and git url could be hardcoded to it, for my case atleast. \nSo definitely not branch name that is varying, it even isn\u2019t in the command... :)\n. Hmm right, they are internally handled as branches, IIRC. They are not branches exactly visible for users, so you\u2019d need to manually fetch them with some other command like fetch, cherry-pick or similar. \ngit ls-remote shows them ( 0043ee5a00a342552d06e4ac43c4dc2f0e709975        refs/changes/99/99/1 ), but git branch -r does not. I can\u2019t think of any other tool which I could use to check it from client side for this moment. They\u2019re not tags either.\n. Could you point me to its documentation?\n. Yeah, I think it makes more sense.\n. It\u2019s used everywhere in the tests, so I just copied it. I\u2019ll change it then. \n. ",
    "byroot": "Also I'm wondering what is your policy on dependencies because most of them are really outdated.\n. Then wait for it ;)\n. The build failed because of the rubygem version. It will be fixed in next run\n. Sure at first it was failing like that: https://travis-ci.org/integrity/integrity/jobs/5302372\nThis is because the rubygems version on this worker was too old to understand the [\"< 2.1, >= 1.8\"] syntax for version requirement.\nThen I forced rubygems update via the .travis.yml but now it fail like that: https://travis-ci.org/byroot/integrity/jobs/5302481`\nFor now it seems to be a bug in rubygems 2.0.2 if I trust this thread: http://stackoverflow.com/questions/9203945/ror-nomethoderror-private-method-open-called-for-gempackageclass\nBut I'm still investigating.\n. Now all tests pass on my dev environment exec a test that check the bash error message which do not match my bash build.\nAppart from this one the build is green.\n. I understand your point. but ZenTest guys do not seems to want to fix the issue on their end: https://github.com/seattlerb/zentest/issues/28\nSo the possiblities are:\n- Stay with a hard requirement on rubygems 1.8 with an old version of ZenTest\n- Go for a hard requirement on rubygems >= 1.8.25 and a newer version of ZenTest\n- Try to get rid of ZenTest. Seems complicated since it's pulled by dm-sweatshop which look dead. The last beta got rid of ZenTest but was never published.\nAnyway all these issue are juste related to gems in the test group.\nIt do not seems crazy to ask a recent rubygems to developers.\nAnd if we want to keep installation simple for people stuck with a old rubygems then we should look for a solution that prevent them to install all these development stufs like:\nbundle install --without test\nBut a bit more user friendly. \n. > Do not use rubygems\nWhat do you mean by that ? Providing a tarball with all dependencies ?\n\nwould you mind making a separate PR just for notifo deletion without changing anything else in gemfile hopefully?\n\nSure you'll get it in a minute or two. Just the time to create a new environment with an old rubygem\n\nhistorically dependencies have been frozen and I need to consider what breakage unfreezing might bring\n\nI don't know integrity history, but many ruby dev I see have the bad habit to froze gem version for no real reason.\nI the case of integrity I think that freezeing gems like activerecord or delayed_job is counter productive because testing that integrity works with a 3 years old version of another library is not very relevant.\nThe test suite did not show any breakage so far. But again I have no idea about the actual coverage.\n. > https://github.com/rtomayko/rpg\nI wasnt aware of it. Thanks.\n\nhave stuff break at the most inconvenient times.\n\nYes an no. The Gemfile.lock is sufficient to prevent these unwanted breakage. All you have to do is run bundle outdated from time to time and update gems one by one and running tests.\nIn this case all gems were so old and cross dependant that I gave up the independant update approch. But with less cluttered Gemfile it's really managable to only freeze version when we really encounter an unfixable bug in one of the dependencies.\nOr at least it's what I do on all my projects and it works great so far.\n\nUltimately dependencies will be updated and I will wait for bug reports. Living in the past is worse.\n\nGood to hear. To be honest I needed a CI for my company. I was seduced by the simplicity of integrity but between integrityapp.com that says Ruby >= 1.8.6 (currently doesn\u2019t work on 1.9.X) and the state of the Gemfile during a few minutes I though that the project was dead.\nI'm also wondering what is your opinion on datamapper. \n. Ok the last commit finally works: https://travis-ci.org/byroot/integrity/builds/5304948\nThis time the 1.9.3 env is able to run the test suite. Unfortunately it fail on an acceptance test:\nexpected following output to contain a <h1>195a3d9 is building</h1>\n...\n <h1>\n  HEAD is building\n  for 1s\n</h1>\nBut it's weird because I can't reproduce it in local...\n. Le 7 mars 2013 \u00e0 01:33, Oleg Pudeyev a \u00e9crit :\n\nTo reproduce locally, try dd if=/dev/zero of=test while you are running that test.\nIf it's a race condition prepending a sleep; before the git log should to the trick in a more reliable way.\n. When I was talking about a sleep, I meant in the app code to simulate a slow disk and so reproduce the error. Not in the test.\n\nBut the solution you used is great. It's basically how capybara works capybara.\n. Green ! \n. > Can you rebase this on master please?\n\nDone.\nbundle update (unchanged gemfile) updates zentest to 4.9.0 which seems to work with my rubygems 1.8.25.\n\nYeah in fact the real dependency is rubygems >= 1.8.25. But you saw the ZenTest issue ...\n\nSame update creates the delayed_job failure due to queue attribute missing.\n\nIt's not really an issue. The commented dependency in the Gemfile still reference 3.x .\nBut it's true upgrading to 4.x will require a migration.\nBut again. Why not having a distinct Gemfile for developers so we can get rid of the ZenTest dependency for simple users ?\n. See #239 for the next try.\n. Done.\n. Well, a lot of integration tests gets a 404 (like on travis but a bit worse) but apart from that it's wonderful !\n. Finished tests in 28.427928s, 3.2011 tests/s, 8.8293 assertions/s.\n91 tests, 251 assertions, 22 failures, 6 errors, 0 skips\nAlmost all of them fail because integrity returned a 404 instead of the expected page.\nI'll dig on this a bit \n. My bad, I forgot that I promoted ruby 2.0 as my default ruby. It pass perfectly with 1.9.3\nI'll see what I can do for 2.0 compat because I was planing to install it on my CI server.\n. Ok, so it's not just me, it fail the same way on travis that on my laptop.\nI'll try to find some time to fix that this week end.\n. Finally it was sinatra-authorization but sinatra itself.\n1.4 seems to have changed the behavior when an URL match multiple routes.\nIn many cases the app served JSON instead of HTML. A little tweak on routes definition did the trick.\n. Yeah, It was already present in the previous PR.\nActiveSupport is strangely loaded twice.\nI'll dig it if it's a problem\n. I agree that it's far from perfect.\nBut IHMO it's a good enough workaround until dm-core release a fix (if they do).\nIHMO again, a better fix would be to move for ActiveRecord.\nBecause with 100 opened issues and no Ruby 2 support DM do not look very serious to me.\n. My rule of thumb when I have to do that kind of monkey patches is:\n- It's ok if you are convinced that il will not stay more than a month.\n- If the patch got rejected or is not going to be published, find another solution.\n. I mean why not submitting this patch to dm-core and using the fork in the Gemfile for now ?\n. :+1: \n. ZenTest 0.4.9 can't be installed with older versions of rubygems.\nIt's a common and documented practice on Travis: http://about.travis-ci.org/docs/user/languages/ruby/#Upgrading-RubyGems\nThe issue is that as always the rubygems team have pushed some bugs. So rubygems 2.0.2 do not work with bundler anymore I try to find a workaround\n. No it's in DelayedJob 3.x\nIntegrity was testing the 2.x branch\n. You're right I've fixed ZenTest to ~> 4.8.4 so it's now both installable by rubygems 1.x and 2.x \n. ``` bash\n$ sh -c 'if ('\nsh: -c: line 1: syntax error: unexpected end of file\n$ sh -c 'echo $BASH_VERSION'\n3.2.48(1)-release\n$ sh --version\nGNU bash, version 3.2.48(1)-release (x86_64-apple-darwin11)\nCopyright (C) 2007 Free Software Foundation, Inc.\n```\nIt's the default bash of Mac OS X Lion\n. But ultimately this test need a mock or something similar because the similar acceptance test is using XSLT so it do not allow a case insensitive match and it is still failing on my machine.\nAnd It will also fail on localised system:\nbash\n$ bash -c 'if ('\nbash: -c: ligne1: Erreur de syntaxe : fin de fichier pr\u00e9matur\u00e9e\n. Also sorry to put these commits together but without this one I can't run the whole test suite.\n. ",
    "jimothyGator": "I don't know. I see that private Travis projects are currently still in beta.\n. That name sounds fine to me. I was unsure of the name to pick when naming the variable, so definitely open to suggestion.\n. For the sake of comparing with other CI systems, Gitlab CI makes the status image always public without a configuration option.\nPersonally, I'd be fine with that approach, but I figure having a configuration option doesn't hurt. I'd argue it should be true by default, but I can also see an argument for making it false by default to be extra secure/paranoid. :) \nNote that in my pull request, it's set to true by default in init.rb.\n. I'm still cutting my Ruby teeth, so if you don't mind putting together an acceptance test, that'd be great. Otherwise, I'll take a stab at it; it'll be a good lesson for me.\nAs for the default value, I'll leave that up to you. I could make an argument for either way.\n. ",
    "automaticgiant": "Is this supposed to work with ADMIN_USER/ADMIN_PASSWORD?\nMine does not. I'm using WEBrick, if that helps.\n. I'm having no joy with autobranch. It looks like the tests cover this case, but I'm not getting it. Is it a limitation of GitLab hooks?\n. ",
    "jeremyw": "Amended the commit to update the sass file. Thanks!\n. Ah, didn't notice the sass source.\nThis fixes a float issue when there's a long label. It was reproducible with the \"From address (used for Gravatar)\" label, where the following \"Notify on success\" paragraph was floating.\n. It's in a separate commit now. Is that all right?\n. ",
    "dkubb": "This actually is fixed in the release-1.2 branch of dm-core. We just haven't released yet because there's a few straggler gems we need to get to all-green on travis.\n. ",
    "jalada": "Hmm it's a shame the SES notifier doesn't inherit this (we're using it instead of the email notifier because it was simpler out of the box). I might just swap to using the email notifier.\n. @P how's that? :)\n. Whoops :( will fix + add to request.\n. Sure :)\n. Well spotted.\n. Just to ignore cruft from rake test:\n$ ls -1 tmp | wc -l\n0\n$ rake test\n<snip>\n$ ls -1 tmp\n1\nmy_test_project\n$\n. ",
    "lewiseason": "Just works? Make the POST url look like this: http://username:password@integrity.host.com/:project/builds\n. ",
    "rob-murray": "OK, thats fine - bit simpler like that so I will go with the set -e instead. Thanks.\n. ",
    "Bishop": "GitLab web hooks spec. So it can support build_all and auto_branch options, trim_branches supports too.\n. Work started: #268 \n. It need more details. Could you create issue and describe problem with more details: content of your config local.rb, gitlab version etc.\n. Sorry. I thought that no sense to check all minor outdated releases. Reverted.\nAnd related question. How long you plan to support ruby 1.8 and 1.9.2? Maintenance of they is ended https://www.ruby-lang.org/en/news/2014/07/01/eol-for-1-8-7-and-1-9-2/ \n. Ready for review.\n. It successfully works at my live CI :smile: \n. Fixed.\n. Any questions?\n. Moved to separate branch #273 \n. Changed.\n. Yes, i forget it\n. Alternative:\n``` ruby\n    helpers Integrity::Helpers\ndef show(view, options={})\n  @title = breadcrumbs(*options[:title])\n  haml view, :views => File.expand_path('../../../app/views', __FILE__)\nend\n\n```\n. Added.\n. Found very simple and tidy:\n\n. It works in IE9+, Chrome 1+, Firefox 3.5+, Opera 10+, Safari 3.1+.\n. Changed.\n. There aren't started_at and completed_at in UI. And it displays commits dates here. I think grouping by commit date here is consistent way.\n. You are right, i am agree. I like how GitHub groups commits (https://github.com/integrity/integrity/commits/master) and use separate date formats for groups and rows. I made it like the GitHub.\n. Changed solution add added test.\n. up\n. No, please see this commit https://github.com/Bishop/integrity/commit/f795ecc363b6e31f09456abed41bdfd2ced88fbc.\nThis test is very old. Before you separate handle last_build and previous_builds. So this test check: if previous_builds not displays if there is only one build. Really it checks line, removed here: https://github.com/Bishop/integrity/commit/f795ecc363b6e31f09456abed41bdfd2ced88fbc#diff-f0e2d2c04d2c212ee671e03a1c836020L20\n:smile: \n. I specifically did 3 commits:\n- remove outdated test\n- write new test for issue\n- fix issue\n. Added deleting test.\n. Done.\n. It is useful for not started builds, usually they just wait in queue. Without it they show without grouping. I guess showing them in current day is good solution. \n. I have tried use (started_at || created_at), but in this case build can jumps from one day to next on starting. In this solution builds can jump too but this way is more clear for me.\nThis is just presentation issue. I guess this solution has a bit better UX.\n. I think no.\n. Removed this commit from this pull request. Could you merge?\n. ",
    "forresty": "Screenshot:\n\n. @p sure. Sent another pull request, closing this\n. @p okay :)\n. hi @p, are you going to merge this? any problem with this?\nThanks\n. ",
    "es1o": "Hi, thank you for a reply.\nI know, I can setup hook, but I would like to use CI instead. Like a Jenkins or QuickBuild.\n. ",
    "L2G": "Sorry, forgot to RTFR. :)\n. I notice that the integrityapp.com domain has a clientRenewProhibited flag on it, though. That's encouraging.\n. ",
    "lodi-g": "I generated another key and it solved itself. Sorry for the inconvenience.. "
}