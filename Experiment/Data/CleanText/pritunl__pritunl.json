{
    "zachhuff386": "Thanks for pull requests. It looks like inline certs were added in 2005 beta release so I'll do some testing with ovpn clients/distro's and maybe use it as default. Users can be attached to multiple servers so the implementation will have to support multiple ovpn conf files for each user. The code above is only going to get the last server from self.org.get_servers()\n. Added option in app server conf to enable inline certs using inline_certs=true Might change default to true if it is supported by most ovpn clients\n. Thanks for pull request, I might add multiple users in the future but it will need to be added to the web interface/api so that the users can be managed. I also don't want to pull in more third party python libraries just to manage passwords because it can cause problems across different linux distributions.\n. Sorry I closed the pull request. I've never used chef but any configuration management software should work you do have to restart the pritunl service to reload the configuration. The password salt is there just to prevent using any existing sha512 rainbow tables.\n. The password salt is now random and prefixed to the hash in the conf.\n. The password is written to the conf file when changed but if you don't change it the conf file doesn't get modified. It isn't just as simple as adding an htpasswd file to add multiple user support. Adding this would require updating the arch, debian and setup.py packages. Code would need to be added to migrate the previous versions of the application so the application runs after being updated. There would need to be something on the web interface/api to manage the accounts so that the user is aware of what accounts exists otherwise it could become insecure with multiple accounts that the user isn't aware of. Because the multiple accounts would become a significant part of the app's database it would need to be included in the /export handler so the user can backup the admin accounts. Unittests and api documentation would need to be added for the new code.\n. Pritunl requires access to the networking of the host and it doesn't work well in a docker container. Also this dockerfile isn't using the packages or a supported distribution.\n. Pritunl requires access to the networking on the host for creating tun/tap adapters which will need privileged mode. Docker also adds a NAT which will complicate the networking and cause issues with some configurations. There is also bridge adapters used in the new version which won't work in a docker container. It's also mostly network bound and similar to a router or switch which wouldn't be run in docker containers.\n. The pin is hashed so it can't be compared directly. This has been fixed in https://github.com/pritunl/pritunl/commit/8fc70eb602fd8a05d034b2d04f1c2cc2e570756b\n. That would install the mongodb package from the ubuntu repository instead of the mongodb repository. Ubuntu wily has reached end of life and it should no longer be used.\n. Using the same routes or network links in a server isn't supported. The web console should prevent it from happening. If you are trying to run multiple VPN servers on the same instance with the same network links that isn't supported, the web console won't stop this but it will cause several issues if done.\n. If two different clients are connecting to two different servers with the same network link the routes will be on two different servers. What is the purpose of using a route metric?\n. I was referring to two servers across two Pritunl instances. It isn't intended to support connecting two users with the same network link to the same Pritunl instance with or without multiple servers. I don't see any good use cases for supporting that. If it's for fault tolerance I will try to find a different implementation. It isn't intuitive for the administrator to create two servers only to get a fault tolerant network link.\n. The sso_match option is already type checked as a []string here https://github.com/pritunl/pritunl-web/blob/master/handlers/settings.go#L33\nIt is also checked again here https://github.com/pritunl/pritunl/blob/master/pritunl/handlers/settings.py#L363\nI have added an additional check in the verify function. This isn't a vulnerability.. The formatting on this is incorrect but the virtual client address has been added to the user_connected plugin handler.. Yes it is in the user_disconnected handler.. This is set to 1536 because some servers can take 10-15 minutes to generate larger parameters. This may have improved with recent performance improvements on cloud servers, I will need to do testing on different servers before increasing it.. This pull request has a force push in it so I'm not going to merge it but the default param size has been increased to 2048.. ",
    "gourneau": "Thanks a lot!\n. ",
    "guilhem": "Using libraries is something really common in python world.\nFor example, your way to manage password is just really bad (a salt in a constant.py ...).\nUsing a dedicated library simplify code and structure but moreover, it permit to do things right.\nYou have packaging problem... like 99% of projects. But there is 1000 solutions brighter than \"no lib at all\". And good news, managing this kind of problems is my work (devops in a python company).\nFor example, in debian world, you can use https://github.com/spotify/dh-virtualenv (good news I have done a ppa for this: https://code.launchpad.net/~dh-virtualenv/+archive/daily ) and that's only 1 solution.\nI really think that my patch was clean, light and useful.\nI try to be careful about not only patch in my way, but also try to add new feature to help opensource projects.\nYou can be mitigate on usage of a library.. we can discuss. But not if you are closing it! (in GH, only admin can re-open it)\nIf I have done this PR it's because I really HAVE problems with your software and can't use it with Chef (here: https://github.com/optiflows-cookbooks/pritunl ).\n. There is a problem with the way you are storing password.\nBy default, a conf file must be only \"read\" by an app.\nIn your software, when a user set password, your app must write in pritunl.conf\nChef use template to generate conf file so Chef and your software just kill each other each turn.\nIt's for this reason that I separate configuration (immutable file) and password (dynamic file).\nAnd a common format to manage password is htpasswd, so I use it with an dedicated lib.\n. ",
    "Creepers-Help": "+1 Nice work\n. ",
    "almereyda": "This is already hanging for a while. @zachhuff386 Any chances this can be merged?\n. ",
    "josegonzalez": "@zachhuff386 Just curious as to why you say it doesn't work well in the container?\n. ",
    "eterry1388": "Ah I see.  Thanks for catching that!\n. ",
    "paolodenti": "not in the same server but same network_link from 2 different clients onto 2 different servers. which issue should it generate? of course I do not have enough understanding of pritunl in order to be able to say something about that but strictly talking of openvpn, it just works.\ncould you please deepen about \"several issues\" if you are talking about openvpn and not just pritunl?\n. Zach, what do you mean by \"server\"? By \"server\" I mean what you called \"server\" in pritunl, that is an instance of the class \"class Server(mongo.MongoObject):\".\nAre you talking about this \"server\" or about a \"linux pritunl installation\"?\nThe problem today is that:\n- you create on organization (org-a)\n- you create a user (user-a) with a network link (192.168.1.0/24)\n- you create a server (srv-a) attached to org-a\nthen\n- you create on organization (org-b)\n- you create a user (user-b) with a network link (192.168.1.0/24)\n- you create a server (srv-b) attached to org-b\ntoday it does not work, a single route is created, the organization users cannot access their servers.\nthe patch manages metric in order to give access:\n- to user-a to its server srv-a\n- to user-b to its server srv-b\nan in order to do that, metrics are used.\nThis is a common use case, nowadays not supported, and solved by the patch.\nWhy you see issues in using metrics in order to solve this use case?\n. ok, never mind, closing the request, thanks Zack\n. ",
    "synnack": "Also, please stop calling your project Open Source, because your license terms do not comply with the definition: https://opensource.org/osd\nFor one: Free redistribution clause: You don't allow any redistribution. See definition 1.\nSecond: No derivative works. See definition 3.\nThird: Your license is discriminatory: commercial use is not allowed. See definition 6.\nYour license does not even allow forking on github (even though you give explicit permission for this by setting the repo to public on github)!\nIt could not be any less open source :-1: \n. Nice closing ;-)\n. Also, thanks for your elaborate response :)\n. ",
    "artburkart": "Hi! It looks like the latest RPM doesn't contain this code change for Amazon Linux.\nhttps://repo.pritunl.com/stable/yum/centos/7/pritunl-1.27.1314.93-1.el7.centos.x86_64.rpm. ",
    "eugk": "Sorry, didn't realize it was always a list. The added type check clears that up.. ",
    "hansbogert": "Did you mean user_disconnected ?. ",
    "thenoid": "Might it be worth running the whole code base through futurize - to ensure 2/3 compatibility?  . ",
    "cliv": "Resolved by https://github.com/pritunl/pritunl/commit/5b86d15f70432f7c536ebe847be59fac04d46e15 - This pull is no longer valid.. ",
    "Tenzer": "Thanks! The force push was in order to fix a typo in the commit message, from \"bites\" to \"bits\".. @zachhuff386 https://security.stackexchange.com/a/95184 mentions adding the -dsaparam flag to the openssl dhparam operation as a way to speed it up massively while maintaining the same level of security.\nIt takes the average time (across 5 runs) for generating a 2048 bit DH parameter from an average of 42 seconds down to 0.6 seconds on my laptop.\nMight be worth considering?. Haveged only helps generate random bits, but that's not what takes the time here. It's instead calculating prime numbers, so it's all CPU bound.. ",
    "jeremygaither": "Haveged may also help, especially on virtual machines: http://www.issihosts.com/haveged/. "
}