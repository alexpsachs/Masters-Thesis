{
    "kenkeiter": "Got rid of issuer(Did|Will)Change since we no longer really distinguish between issuer and product.\n. Look through the <option>s in the type <select>. If the option has a data-card-product-shortname, use it to match a valid card product, and whitelist that card product. Otherwise, use the value attr as the shortname to match.\n. Let the user handle this how they see fit, for v1.\n. Fixed; for some reason the commit didn't close it.\n. Guessing this is because validation state is not being reset when the card product changes.\n. Also, pasted values need to be validated. Maybe we can just subscribe to change, as well?\n. Closing in favor of #36.\n. Interesting! Thanks for submitting the bug. The code for that thing is a little dicey (needs a refactor in a major way) -- I'll get it fixed.\n. I wasn't able to duplicate this, but I'm planning to rewrite it anyway. Gonna close the ticket for now :palm_tree: \n. Glad you like it -- sorry for the lack of pure JS. TBH, I love the JS community, but I hate client-side scripting, so I went with the least painful option for me that would allow me to get the job done. This feature will get into release 1.0, which is coming up fast.\n. I'm trying to avoid detaching and reattaching DOM elements in order to re-order the fields. I'm thinking moving down the face and determining the order of the fields visually -- but the downside to this is that I then have to set the tabindex of each field, which is suboptimal since I don't know what the tab indexing scheme on the page already looks like. I.e. if the user has set the tabindex of the previous field to 100 and I provide a tabindex of 10 for the first field of the card, the card would \"accidentally\" be the first tabbable item on the page.\n... looking at this now, I can see I'm going to have to detach and reattach DOM elements in order. Damn.\n. Ah, good point! I completely spaced on that. My bad :) Should work either way, though! It will be fixed.\n. Using http://labs.ft.com/2011/08/fastclick-native-like-tapping-for-touch-apps/ will allow us to trigger a refocus to another input without the keyboard being dismissed. Focus events on iOS must be triggered by user input and be part of that event chain.\n. Turns out that this just plain isn't possible at the moment. We're going to have to figure out a fallback design -- perhaps based around a customized element using contentEditable so we can manipulate spacing and whatnot? This is, to put it simply, an unpleasant issue.\n. @phillipadsmith Unfortunately this just 100% straight up isn't possible to resolve at the moment because of security limitations in iOS having to do with forcing field focus. This issue won't be resolved -- your best bet is to degrade gracefully into the underlying form. I'm leaving the issue open purely for documentation purposes at the moment.\n. @phildinuzzo Skeuocard is designed to gracefully degrade. Simply check to see that it's a mobile browser and /don't/ \"upgrade\" the form by creaing a new Skeuocard instance. Style the un-skeuocarded form however you wish.\n. @phildinuzzo No problem ;) glad it's working for you! You might try giving some different messaging/styling around the flip animation some thought... The current version isn't as good as it perhaps could be.\n. @phildinuzzo Out of curiosity, can you share which product it's used in? Always cool to see it in action...\n. Very nice :D You might consider creating a two-prompt system in which both the flag on the corner of the card appears when flip is required, and the \"Purchase\" button's text is changed to \"Flip\" and highlighted visually somehow. When a person fills the card (if a flip is required) clicking either the corner flag (over the card itself) or the \"purchase\" button would flip the card, and the user would enter their details before being able to submit the card.\n. Yeah, I actually had an idea about that. Select all DOES need to work. Do you think it should be:\n- Select all in ANY field converts the whole thing to one field, and selects the whole range of text\nor should it be:\n- Select all in one field selects just that field\n?\n. Yeah, that was my original preference as well. I'll get working on that, unless you're up for tackling it ;) Gotta say, not proud of the field management code. It's ugly.\n. I'd better get to work, then! sprints off\n. Good fix, man. I'll need to merge that into gh-pages for the change to take effect on the public site. I'll do that now.\n. Inline base64 might be a bit much, since I'm using PNGs -- although I may be able to switch to GIFs if need be. Either way, if it's feasible, I'll take it under consideration, for sure! Thanks for the suggestion :+1: \n. Ah, not a bad idea! Basically, the way it works internally is that card products are matched as regexes against the card number. If a card is matched, I then attempt to match an issuer -- which simply extends the card options. It does the same thing in CSS by applying the product-<product name> and issuer-<issuer name> classes -- so long story short, issuer specific corrections are pretty simple.\nI'll take a look at this right when I get a moment -- fixing input issues right now, which have first priority :)\n. Okay! So here's the strategy. I'm going to split the background from the card face elements (the \"valid thru\" text and any logos) and move it into its own image (the \"generic card image\") -- then, I'm going to make a sprite-sheet of all the card faces as a single PNG and preload it using something like this:\ncss\nbody:after{\n    display:none;\n    content: url(../images/background-sprite-sheet.png);\n}\nIssuer-specific stuff will go into its own sprite-sheet as well. I made a test sheet png and optimized it -- it brings the size down to around 100 Kb, and with preloading, the performance should be much better. I'll specify multiple backgrounds for the card body -- the first of which is the card background -- and then layer the sprite sheets on top as need be. Should have this done today.\n. Okay, change of plans. I've messed with this for quite a while today, and there's no way to retain the fade-in transition without accidentally showing dimensional changes to the sprite sheet. The new game-plan is to set a generic background image, slim the card-face images down so that they have only the elements (no background) and then use the preloading trick above to load all the card face PNGs.\nI really want that quarter-second fade.\n. Can you take a quick screenshot? Obviously bootstrap is a make or break :)\n. Oh wow. That's not right even a little. I'll take a shot at getting that fixed.. Thanks for the heads up!\n. If anybody has the time to figure out whether it's v2 or v3, that'd be useful. The lower the overhead of determining where the problem is, the faster I can get to this ;) I'll get to it either way though.\n. @cvrebert Did you think that it was a max-width issue?\n. Huh, I'm seeing a four-digit CVV on the Amex input. Can you tell me the BIN number you tried? Is it possible that the fourth digit was accidentally cut off by a styling error?\n. @scottconnerly Looked into this a little further; I'm pretty sure the field length is being set to 4 properly, but I am thinking it might be a styling issue -- in which case, knowing your browser/version would be really cool!\n. Tested this with recent fixes; it no longer appears to be an issue. Closing the ticket for now -- we'll re-open if it's reported again.\n. Ah, nice catch. I have a feeling that this has to do with the validation state not updating properly on repetitive key presses. I'll check it out, and get it fixed.\n. I'm literally working on it right now, haha. I'll make sure it's fixed.\n. Had another issue on this; I honestly need to re-work how the segmented input is done. It's super poor at the moment. Working on it ;)\n. This is definitely on the priority list -- for some reason, the stupid css_browser_selectors plugin doesn't identify mobile Chrome as Chrome. Ugh.\n. Fixed in 1.0.0.\n. Fixed in 1.0.0.\n. Nice work, man! It may be hard for you to keep up to date until the Skeuocard v1 release -- things are moving quickly over here. If you're up for keeping it somewhat up to date, I'll link it in the README.\n. I've reached out to AgileBits to ask them how they perform detection of fillable inputs. Once I get that figured out, I should be able to come up with a good way to get this working elegantly. Thanks for taking the time to put in the ticket! \n:palm_tree: <-- extraneous palm tree\n. AgileBits got back to me; they're having an engineer take a look at it. We'll get to the bottom of this.\n. Response from AgileBits:\nWe base the filling on the labels used for the form.\nhtml\n<label for=\"creditcardname\">Name on Card:</label>\n<input type=\"text\" id=\"creditcardname\">\n<br/>\n<label for=\"creditcardnumber\">Credit Card Number:</label>\n<input type=\"text\" id=\"creditcardnumber\">\n<br/>\n<label for=\"cvv\">CVV</label>\n<input type=\"text\" id=\"cvv\">\n<br/>\n<label for=\"expirationmonth\">Expiration Month:</label>\n<input type=\"text\" id=\"expirationmonth\">\n<br/>\n<label for=\"expirationyear\">Expiration Year:</label>\n<input type=\"text\" id=\"expirationyear\">\nThat will all work for Card name, card number, card CCV, expiration year and month.\nSo, the label is how we determine which is which, if that helps :)\n. This is now linked to the completion of #57, which is necessary to fix this issue.\n. Looks like 1password and LastPass will trigger an input event on the fields when they're done filling them. We should watch for that.\n. I appreciate the PR and your effort on this! However, I think we need to come up with a way of changing inputs of type \"text\" to type \"number\" dynamically based upon browser support. Here's why: http://caniuse.com/input-number\nLong story short, if we change the underlying form type to \"number\", we lose the ability to use the non-enhanced form in anything other than the latest browsers (or the ones at the link above). Obviously you know what you're doing -- do you agree with that assessment?\n. Fair point! I reviewed it the PR on my machine -- I'll merge it.\n. Wow, I didn't catch that either; can you submit another PR with fixes?\n. That's pretty much the plan -- just have to get to it. There's a duplicate ticket #31, so I'm going to close this -- please comment on there if you'd like to be CC'd when things change :)\n. It would be rad to see a Magento plugin for this! I'm not super familiar with the Magento codebase, so if you want to build one, I'll offer whatever support I can!\n. Glad you enjoyed it! I'm going to go ahead and close this ticket now, but I appreciate the ideas and the support :)\n. That may be a regression from the last series of commits. I'm looking into it -- that, and getting tests in place so I don't keep running into these issues ;)\nSent from my iPhone\nOn Aug 2, 2013, at 6:12 PM, ihsw notifications@github.com wrote:\n\nReally sad about that.\n\u2014\nReply to this email directly or view it on GitHub.\n. Fixed in commit: 668f3bf093d09f794961f28b90179e6601aff006.\n. Similar functionality is now on develop. Didn't end up using this PR, but thanks for the contribution, either way. You rock!\n. Closing this as a duplicate of #7. Don't worry, it's on the list to be taken care of :palm_tree: \n. Hi @yzhang -- we already have a ticket in on this issue! See #26.\n. Hi @shezi --\nYour commit only made changes to the SCSS file, and didn't include a compiled CSS file. I've made the changes on my end, and pushed them. I think I need to update the README to note that PRs need the compiled files, as well :)\n\nCan you please verify this fix? Also, any idea why it's supposed to be 1.5em line-height instead of 1em? Bootstrap is so weird sometimes :palm_tree: \n. I've brought these changes in manually, and set line-height to auto to reset to the browser's line-height, rather than bootstrap's.\n. Thanks for the fix. Bringing it in.\n. I appreciate your effort on this; however, I can't accept this specific pull-request at this time. Here's why: there are literally thousands of issuer-specific card design variants out there. To include them and their associated art would be discriminatory toward certain issuers, which is a problem I really do not want to deal with -- and Carte Bleue is a VISA product; aside from their logo, the card layout is the same.\nTo that end: issuer-specific designs will only be included if the field-layout of the card (for example, the Chase Sapphire card) differs from the layout of the typical product. I'll be working on a way to make it easier to include/distribute issuer-specific layouts in the near future.\nI would also like to thank you for taking so much interest in the project, and the pull requests. They really are appreciated, even if I can't accept all of them!\n. As a side note, you may want to double-check their BIN number -- you might be laying things out incorrectly for some users otherwise ;)\n. It's planned, but it hasn't been addressed yet. I'm currently overhauling the validation model and cleaning things up to reduce the size of the codebase -- it's on the list for 1.0 though, which is coming soon!\n. No worries! I'm thinking sometime in the next couple of weeks. I don't get paid for this, so it's all in my spare time :)\n. Lol. Yep, you're totally right. Must have missed that during matching.\n. The change is on develop. I'm using git-flow now -- doesn't work as well with Github, but it's going to be better in the long run -- once this thing is stable, the testing and release progress needs to become more rigorous, because we might be risking losing money for users.\n. Syntax has changed -- it should be stable though, for a while, since I'm now at 1.0.0. I look forward to hearing what you think!\n. It was originally designed to match the card perfectly, but I suppose we can be more forgiving. I'll get this in.\n. Done, man! Thanks for your help.\n. Fun! Good catch.\n. Fixed in 1.0.0.\n. This issues has been fixed on the develop branch, and will be included in the next release.\n. Hi @zschmid --\nSplitting the name field using JS for your own requirements isn't a bad idea at all -- and it'll probably work with at least 80% of names. An even better solution might be to pre-fill the name on the card using first and last name fields elsewhere on the page and, if the user doesn't modify the card's name, treating those first and last name fields as canonical.\nAll that said, adding this feature to support a small handful of payment processors probably isn't in the cards (pun) for this project at the moment. My tests indicate that users think of their name on the card as one field; splitting it into two would add confusion. We'd have to a) make a bunch of assumptions about the formatting of users' names, and b) support any edge-cases.\n. Good catch. It'll get fixed!\n. Hold up a couple of minutes. Haven't pushed changes to the server yet for the demo page :)\n. Changes are now live. Give it a shot!\n. Some of your changes have been cherrypicked in :) thanks man!\n. Thanks for the submission; a fix has been included on develop.\n. Good catch; this might be something I'm leaving out of the CSS reset that needs to be there. I'll try to address it on Monday.\n. Lol! Nice. I was having problems with this under Windows for a while, too. Had to apply specific CSS fixes for it.. I'll build up a Linux VM and get this fixed in 1.0.\n. Interesting. Do you know if you have GPU compositing enabled?\n. Good catch; I'll make sure this works with noConflict();\n. Yep; I'll make sure we take care of it in the Skeuocard CSS reset in v1.0.0. In the short term, you should be able to do something like:\nscss\n.skeuocard input{\n  display: inline !important;\n}\n. Only because I didn't realize people still used them! Never seen one in my life. I'll get it added for version 1.0.0. Out of curiosity, can you attach a photo of the front and back of yours (with the details blurred) so I can do a layout?\nThx!\n. Never mind, got it! Should be in shortly.\n. Fixed in 1.0.0.\n. No problem; sorry it took so long!\n. Ha! Actually, that's the fun part with that line: it's not a typo -- it's a bug fix for an older version of Chrome. It had to be called twice. New versions ignore it, so it's fine.\nAs a side note, please make your pull requests against develop in the future, and note that compiled CSS files must be included in the PR -- not just SCSS :) \nEither way, good looking out! Always nice to have a second set of eyes on something like this.\n. Haha keine schlechte Idee!\nGlad you're enjoying the project ;)\n. I speak German; lived in Bad-Harzburg for a year as an exchange student ;)\n. Nope, it just turns out that it's not a valid Diner's Club BIN. There are a couple doc bugs I'm tracking right now.. This is one of them. I'll close this ticket and open up a new one where I'll track doc bugs for now.\nIf you want a Diner's Club layout, try any number matching this regex: /^(36|38|30[0-5])/.\n. Good advice; I'll add it to the doc bugs issue I'm working on now. I'm consolidating them in one ticket for now: #83.\n. Fixed/enhanced the list of sample card numbers on the demo page in the gh-pages branch.\n. Good catch; I'll try to get this in the next minor release.\n. @sjoness No worries! Actually, would you be willing to submit a patch for this on the develop branch (when you have a second), with an updated list of dependencies? I'm happy to include bower if it makes people's lives easier, but I'd prefer not to have to 100% understand it myself, since I don't use it ;)\nI can't accept this PR, since it's on the master branch. PRs are only accepted on the develop branch :) Either way, great catch, and thank you :)\n. @sjoness Changes are now in master -- I released them as a hotfix. If you can go ahead and $ bower register skeuocard I'd be much obliged ;)\n. @dlachapelle No worries, man! All contributions are appreciated, regardless of what branch they're on ;)\n. Thanks for the examples; the problem is actually fixed in 1.0.0 -- you're just using it incorrectly in the \"skeuocard_fail\" example, by using the $ to make a query for the containing element.\njQuery.noConflict() causes the $ alias to disappear from the global scope. Try instantiating your Skeuocard instance like so:\njavascript\nwindow.card = new Skeuocard(jQuery(\"#skeuocard\"), {\n  debug: true\n});\nNote that the call to $(\"#skeuocard\") has been replaced with jQuery(\"#skeuocard\").\nHope it works out :palm_tree: \n. Done and done! Thanks man.\n. Yeah, the fact that this all has to happen in a bunch of browsers generally tends to make things trickier -- however, it would be pretty trivial to use something like document.elementFromPoint to check if an element is top-layer visible and trigger reversion if an error is detected.\nI'm trying to avoid a legacy-mode link at all costs. The user shouldn't have to make a choice; if things don't/can't work, they should degrade gracefully. If it's an instantiation error, the user should never have to know that Skeuocard was even on the page to begin with -- and if it's a runtime error, we should alert them somehow that there was a small problem, and gracefully (with some sort of animation or something) transition back to the legacy form.\nEven better, I should just automate browser testing, and make sure this never happens in the first place ;)\n. Yeah, I had a feeling it'd have something to do with #bind being available. It's only available in ECMAScript 5, if I'm not mistaken. I considered conditionally defining #bind, but I decided not to, because several of Skeuocard's features won't work without ECMAScript 5, anyway.\n. @jarthod If you wanna give your tests another shot, I've changed the selectors on master as of v1.0.3.\n. This is assigned to the 2.0 milestone because it will involve incompatible API changes, and thus, a major version bump.\n. I assume that you need to get the details of the card. The underlying form values are changed in real-time as the user enters them -- so there should be an underlying field containing the card type, as well.\nYou should use jQuery to get the value of the underlying type field. If you're using the default selectors, you can do so using something like this:\njavascript\njQuery('[name=\"cc_type\"]').val()\nIf you'd like to take an event-based approach, you can subscribe to the productWillChange.skeuocard or productDidChange.skeuocard events by doing something like this:\njavascript\ncard.bind('productWillChange.skeuocard', function(_card, oldProduct, newProduct){\n  if(newProduct != null){\n    alert(\"Skeuocard will change to type: \" + newProduct.attrs.companyShortname);\n  };\n});\n. Ah -- my mistake. The first parameter to the handler function is the event itself. It should look more like this:\njavascript\ncard.bind('productWillChange.skeuocard', function(e, _card, oldProduct, newProduct){\n  if(newProduct != null){\n    alert(\"Skeuocard will change to type: \" + newProduct.attrs.companyShortname);\n  };\n});\nNote that null will represent a generic card (no card product). oldProduct or newProduct may be null when the user enters a number which doesn't match any known card product (i.e. visa, mastercard, etc.)\nI tried the above code in the browser, and it worked :)\n. Side note: adding a page to the wiki about this: https://github.com/kenkeiter/skeuocard/wiki/Events\n. This is an excellent question; at the moment, there's no specific way -- but what you could do is pre-fill the card, and then write a custom event handler to go through and mark all the inputs as readonly! I'll give that some thought tomorrow -- it's currently 1:47A here, and I require sleeps.\n. Good idea, and thanks for the PR -- however, I think it might be a good enhancement to pull the placeholder attribute from the underlying form fields when possible, or at least add some structure to our placeholder options. I'll get it added in 1.X.\n. When you say \"four digit year,\" do you mean on the card face itself, or on the underlying form fields? If you mean the underlying form fields, the answer is yes. See #99 for an example of how to map legacy fields to skeuocard values.\n. In the case of the segmented input, it seems that the more critical issue is actually the users' expectations for how the fields should behave. My testing indicates that, while the number is technically a single field, users think of the groups as being entirely separate -- hence the replication of that mental model in Skeuocard. Perhaps the best thing to do would be to prevent  between fields unless a group has been entirely filled? The challenge then becomes balancing the users' expectations for how a form's tabbing should behave (i.e. the expectation that tabbing/shift-tabbing through a form should function consistently). I'll give this some consideration for v2.0 of Skeuocard.\nI do appreciate the feedback, but I don't intend to switch back to a single input without extremely good justification. In my testing, users haven't raved about the segmented field, but it has behaved as they expected (better, in many cases, like select-all) and appears to provide the desired (read: necessary) constraint when compared to my tests using a single field.\nSince this is an open-source project, however, you're more than welcome to fork it and make the necessary modifications to better suit your needs!\n. Are you referring to the underlying date fields, or the ones on the card face?\n. It actually does like it, believe it or not! Example mixed with legacy support-ish things:\nhtml\n<label for=\"cc_exp_month\">Expiration Month</label>\n<select name=\"cc_exp_month\" id=\"cc_exp_month\">\n  <option value=\"jan\" data-sc-expmonth=\"1\">Jan</option>\n  <!-- a while later... -->\n  <option value=\"12\">Dec</option>\n</select>\n<label for=\"cc_exp_year\">Expiration Year</label>\n<select name=\"cc_exp_year\" id=\"cc_exp_year\">\n  <option value=\"13\" data-sc-expyear=\"2013\">13</option>\n  <!-- meanwhile... -->\n  <option value=\"2020\">20</option>\n</select>\nShould just work ;) You can use the data-sc- attributes to override legacy values :)\n. That's actually intentional, with the intention of limiting distraction until the user has actually finished entering the face of card info. I've weighed this decision with several UX experts, and we seem to be in accordance that it's the right one, so I'm going to close this as wontfix.\nThat said, it's SUPER easy to change this behavior. All card input is validated as it's typed -- including the card number -- and filled, valid and invalid classes are added to the corresponding fields as their state changes! That means that, in order to change it so that errors are shown immediately, you simply need to change _cards.scss so that the .face.filled selector is removed (currently around line 76) -- this will eliminate the criteria that the face be filled prior to showing validation errors.\n. Haha no worries; you'll find that -- although Skeuocard may not be 100% to your UX-liking -- it's pretty robustly/canonically designed. As much styling as humanly possible is done in CSS, and it's made to be dropped into pretty much any site with minimal (or non-interfering) changes to code. Take a look at the coffee files in there -- the organization has probably improved quite a bit since the last time you saw it. \nAlso, inspecting the Skeuocard instance in your browser and watching realtime changes should give you a better idea of what's going on with styling behind the scenes.\n. That is... really odd. Can you tell me which version of Express server you have installed? I don't think it's version locked in package.json -- and it works fine on my machine.\n. I was unable to duplicate this issue under FF 24x. Are you still experiencing it?\n. You guys are absolutely correct; great catch. In the isValid function I'm checking to ensure that neither front nor back faces have the invalid class applied -- but in the case of the front-side CCV of the AMEX, the invalid class is being applied to the back face extraneously.\nI'll get on fixing this ASAP. Thanks a lot!\n. Haven't been testing in Opera. For now, you should probably not enable Skeuocard for your Opera users -- but I'll work on getting Opera support in place for 2.0.\n. The issue that you're encountering is that you've changed the the select element's id attribute without letting Skeuocard know about it. When you instantiate a new Skeuocard instance, you should provide the typeInputSelector a value of something like: '[name=\"cc_type\"]'.\nThe only thing you need to do is ensure that all of the required fields are within a containing element of some sort, and that the containing element is passed to Skeuocard upon instantiation.\nAs a side note, you can find this information under the Changing Underlying Value Selectors header in README.md.\n. Uh.. What?\n. Hey @ctborg -- I really appreciate your contribution; however, I can't accept it at the moment. The problem is that using the number type results in value increment/decrement controls on several desktop browsers which (unfortunately) are difficult to hide. It'd be awesome to see this as an event-listener-based add-on, but for the time being, it doesn't fulfill the interaction requirements.\nThanks for your time, man!\n. I will be, yes -- sorry for the delay; I've recently joined a new company and haven't gotten back into the swing of giving my projects the attention they deserve. \nThe reason I haven't been accepting peoples' PRs is because they aren't reading the documentation which states (specifically) that all PRs must be submitted on the develop branch -- this is because master should always reflect a stable (production-ready) release :)\nI've been operating under the assumption that people are simply cherry-picking the PRs they want and applying them to a fork, which seems like a good solution until I get around to correcting/merging all the PRs manually :)\n. As an aside, @dylanjha, I really appreciate your effort on this project. I hope it's been useful to you. If you can submit a good PR on develop I'm more than happy to accept your enhancement :)\n. I'll get that done tonight! Thanks for the hard work, @dylanjha!\n. Will review this ASAP; it's on my todo list. Thanks for the submission, @dylanjha!!\n. Looks great. I'll merge it into develop, cherry-pick from the other PRs, and do a minor release! Thanks for your hard work, @dylanjha.\n. Officially, 6011 is the BIN number assigned to Discover. While I could discover Discover (heh, see what I did there?) with 60 alone, the chance of me also accidentally matching another provider and potentially limiting input in a way that could prevent a sale from completing is high.\nLong story short, it's really easy for you to make this change on a one-off basis by modifying the card product matchers, but I'm not willing to force everyone into it, on the off chance that it might cause problems for customers.\n. Sorry folks -- I haven't had time to maintain it with my current workload.\nThere are a lot of things I'd really like to fix about Skeuocard;\nespecially the way changes in state are dealt with -- probably one of the\nthings that's causing the bug you're seeing right now. At some point, I'll\nprobably get around to rebuilding it. In the meantime, if you're interested\nin forking and (possibly) pushing good things back upstream, that's always\nappreciated.\nI apologize that I don't have more time to work on this. I'm glad to see\npeople are still using it.\nOn Mon, Nov 17, 2014 at 10:37 PM, CaptSaltyJack notifications@github.com\nwrote:\n\nI get the same problem.\nI don't think the author is paying attention to this repo anymore. Maybe\nit's time someone forked it and took over.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/kenkeiter/skeuocard/issues/148#issuecomment-63418120.\n\n\nKen Keiter R&D at CONSTRVCT http://constrvct.io/\n(503) 453-5264 | @kenkeiter http://twitter.com/kenkeiter | kenkeiter.com\n. ",
    "ofaurax": "Broken in Firefox 17.0.7 which is ERS (see http://www.mozilla.org/en-US/firefox/organizations/).\nThe card appears but there is no numbers input.\n. ",
    "testower": "The back side of the card doesn't work in latest version of Chrome.\n\n. ",
    "fourseven": "I'm just looking into this, is it better to make es5-shim a dependancy/requirement for old browsers or use underscore-like helper methods internally for the Array ES5 methods? The bind() calls are fine, coffeescript can handle that natively.\n. ",
    "jimothyGator": "Here is how I am able to replicate this bug, in both Chrome 30 and Safari 7:\n1. Reload the demo page.\n2. Enter one of the sample numbers, e.g., 4111111111111111.\n3. Click in any of the text fields.\n4. Select all (command-A/control-A).\n5. Hit delete\n6. Type the start of a new card number (e.g., 4111)\n7. NaN/Nan is show as the expiry.\n. ",
    "staabm": "after jumping through the card with TAB it would be great if the card would spin around itself on TAB key and (and turn back when using SHIFT-TAB) so one can immediately start typing the CVC\n. not sure if it was the case when I opened this issue, but ATM also the arrow keys left/right don't work.\n. duplicate of https://github.com/kenkeiter/skeuocard/issues/58\n. doesn't work in crome or FF on http://kenkeiter.com/skeuocard/\n. works now, thanks.\n. What about also checking for >= 1 (or zero, in case 0 is used for optional fields)\n. attached a PR, with an untested patch.\n. ok, maybe you should add a comment which indicates it is not a typo ;-)\n(and maybe even in which crome version so you can drop it in a few weeks/months)\nwill be more carefull when sending the next PR... thanks for this great project!\n. hmm do you speek german - or is it just google translate speaking with me? :)\n. @kenkeiter great. I will be in portland in 2 weeks for a few days :-)\n. ",
    "renfredxh": "I agree that the TAB should automatically flip it to the back side once the front is done. I would try do this myself but I'm not familiar with coffeescipt.\n. ",
    "Prestaul": ":+1: for using tab to flip the card after completing the first side.  Love the project, wish it wasn't in coffeescript! :)\n. Boo ya! Thanks for all the work you put into this!\n. ",
    "codepo8": "I sent a pull request with the fix. Work is strange to define here. A label to be connected for a screenreader should either be around the input or connected with the input via ID. name doesn't cut it as several elements can have the same name - best example for this are radio buttons. They have unique IDs but the same name.\n. this is super simple with git rebase. You can also do it automatically with\na post commit hook. http://oli.jp/2011/github-pages-workflow/ The only\nissue is the caching of github pages.\nOn Thu, Aug 1, 2013 at 11:11 PM, Kenneth Keiter notifications@github.comwrote:\n\nGood fix, man. I'll need to merge that into gh-pages for the change to\ntake effect on the public site. I'll do that now.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/kenkeiter/skeuocard/pull/30#issuecomment-21973686\n.\n. \n",
    "peterlada": "This is a show stopper. Confirmed on iOS 6/iPhone 5\n. Win7 64b, FF23 confirming the bug.\n. I second this. Removing name causes weirdness...\n. I've placed the strip attributes and it seems to be working quite well on Mac/FF and Mac/Chrome? What is your platform?\n. ",
    "phildinuzzo": "Any update or workarounds for this? \n. Does anyone have tips for degrading the form? \n. Thanks, I was over-thinking it. We've been using this for a while and we really enjoy it. Some technically challenged users get confused (disabling flipping helped), but most people give us great feedback. Thanks!\n. http://www.sweatguru.com\nUsers need to sign in to get to the sign-up flow (where the card is used). \n\n. ",
    "phillipadsmith": "/subscribing\n. @kenkeiter Thanks for the response. Appreciate. Will keep exploring. \n. ",
    "send2cloud": "can it degrade into a 'single field' if it detects mobile/tablets?\n. ",
    "joshuachestang": "+1\n. ",
    "irskep": "Wow, you respond to email as fast as I do.\nI think it should definitely be the first option, because the user is (I think?) imagining the entry widget as a single field. After all, they're typing one string of characters, they just happen to be displayed across four segments.\n. I shall leave the development to you. ;-)\n. ",
    "martindale": "How about inline base64?\n. Here's what it looks like:\n\n. ",
    "jlindenbaum": "Perhaps moving the paths for the card backgrounds into the CCProducts objects, if a preload option is set on instantiation one could loop through the accepted card products (no use doing them all) and preloading those images in a hidden image tag? I'm not sure how that would affect cases like the chase sapphire special cards you have integrated?\n. Browsers that don't support HTML5 form types gracefully degrade to normal text fields, even IE 6.\nEdit: I should say the \"number\" and \"tel\" types are purely there to trigger the proper keyboards on iOS/Android. No additional functionality is added. For all other browsers (including those not supporting those types) they are standard text fields.\nEven if you wanted to keep the underlying fields as text, and only have the \"active\"/js-visible Segmented and Expiration fields as HTML5 types.\n. Thanks!\nI just realized I am a buffoon, I edited the js and css instead of the coffee and scss.\n. ",
    "cvrebert": "Bootstrap v2, or v3? v3 has gotten rid of the problematic default img { max-width: 100%; }\n. Just blind speculation honestly.\n. ",
    "scottconnerly": "8274\nFireFox 22 on OSX 10.8.4\n. ",
    "lancefisher": "Hey cool. Thanks! I've bookmarked this to try out in a future project.\n. ",
    "aaronpk": "Cool, looked but didn't see the other one! Looks really nice though, and congrats on the HN coverage!\n. ",
    "pushpak": "Yap cant see 4th digit in ipad landscape mode\n. ",
    "thomasdarde": "I think I can make a version per week.\nIt's quite easy since you're using a similar toolchain.\nOn 3 ao\u00fbt 2013, at 09:23, Kenneth Keiter notifications@github.com wrote:\n\nNice work, man! It may be hard for you to keep up to date until the Skeuocard v1 release -- things are moving quickly over here. If you're up for keeping it somewhat up to date, I'll link it in the README.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "fredzannarbor": "Well, we're going to have to wait for someone else to come along and do\nthat!  I'm not familiar with Magento either.  It is pretty straightforward\nPHP/MYSQL (with, unfortunately, a large and ever-changing data model) and\nthere is an abundance of Magento developers, so I'll keep my eyes open!\n Generally speaking, you're going to get a lot of bang for your buck if you\nfigure out a way to get people to write plugins for popular storefronts.\n Love your work!\nFred\nOn Fri, Aug 2, 2013 at 2:05 PM, Kenneth Keiter notifications@github.comwrote:\n\nIt would be rad to see a Magento plugin for this! I'm not super familiar\nwith the Magento codebase, so if you want to build one, I'll offer whatever\nsupport I can!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/kenkeiter/skeuocard/issues/46#issuecomment-22023023\n.\n. \n",
    "shezi": "You can simply leave out the select field for the card type if you specify the accepted card product. \nnew Skeuocard($(\"#skeuocard\"), {\n  acceptedCardProducts: ['visa', 'amex']\n});\n. I understand your logic and I agree with it. However, since my payment provider specifically allows Carte Bleue, I'd like to add them to my site. Would it be possible to add some kind of enhancement hook, where I can add my own card types and layouts to your library? Otherwise, I (and each other user with specific cards) would have to maintain a fork of this wonderful library.\n. Additionally, I urge you to pull the first changeset 155748f because that adds a layout fallback for cards that don't have one defined specifically. For example, you define JCB credit cards to be supported but do not have a layout for them. Using the fallback, they might not look exactly like they do in the real world, but at least they have the right font and their input fields don't stick to the top left.\n. That was quick. Great! Thanks!\n. Awesome! Thanks!\n. I'll use it a little and let you know. Great work in any case!\n. ",
    "quicksnap": "I'm hoping to integrate skeucard into Magento, and possible wrap it up into an extension. However, Magento's default   CC form splits expiration into two selects. Resolution on this would be great.\nIs there immediate progress on this? I could try to fork and come up with a solution if not.\n. Great! Do you have any rough estimate for 1.0? Not trying to be pushy--just seeing if it's worth it for us to hack up a solution in the interim.\nThanks for your work on this!\n. ",
    "impressivewebs": "Cool.... Oh and fantastic little project, very creative and practical.\n. ",
    "JacksonGariety": "@kenkeiter, @impressivewebs, this is fixed in my commit JacksonGariety/skeuocard@028280f50ee7a224c622116522760ae9c62d6cd3\n. ",
    "jarthod": "I just had the same issue (chromium).\nQuickly hacking from the console it seems related to z-index and rotation.\nSetting z-index to 2 on .skeuocard.js .card-body.flip .face.back seems to fix it.\n. I think I do but now that I tried disabling / forcing composition in chromium, the skeuocard demo page is screwed and blinking xD But that's a linux/chromium/gpudriver issue I guess xD reopening/relaunching chrome doesn't help. I hope it'll be ok after a reboot xD\nBTW I also see the right part of the green fliping label even when it's should he hidden below the card. Probably the same kind of issue.\nI'm planning of using skeuocard for my project and as chromium is my main development browser i'll be happy to spend some time trying/helping to fix this issue ;)\n. Got some news, I tried on my work machine (Ubuntu 12.04) with Chromium 28 and it's working perfectly. I have composition enabled. So I guess I didn't have composition at home.\nI saw in your CSS a hack from chrome on windows which seems to match the problem, maybe it should also be enabled for linux ?\nscss\n/* \nFix for issue with Chrome in which no GPU acceleration will mess with \nbackface visibility in 3d transforms\nsee: https://code.google.com/p/chromium/issues/detail?id=127844 \n*/\n.chrome.win .skeuocard {\n  @media screen and (-webkit-transform-3d: 0) {\n    .card-body .face{\n      -webkit-transition-property: -webkit-transform, opacity;\n      -webkit-transition-duration: 0.25s, 0;\n      -webkit-transition-timing-function:ease-in-out,ease-in-out;\n      -webkit-transition-delay:0, 0;\n    }\n    .card-body .face.back{\n      opacity: 0;\n    }\n    .card-body.flip .face.front{\n      -webkit-transform: rotateX(0deg) rotateY(-180deg);\n      opacity: 0;\n      z-index: -1;\n    }\n    .card-body.flip .face.back{\n      opacity: 1;\n    }\n  }\n}\n. Ok I confirmed at home, chrome linux with GPU compositing works fine.\nThe issue is present without GPU compositing. I tried enabling the windows chrome hack by removing the \".win\" selector: It's better, the form is working, but the animation looks bad.\nThe back side is displayed at the very begining of the flipping animation.\nAnd it's the same the other way around, the front side is displayed at the very begining of the flipping animation.\nIf I understand your CSS correctly, the card faces should fade from one to another but this is not happening here.\nI'll try to find out why but i'm not a CSS guru xD\n. Ok I've realized the opacity transition duration was set to 0s:\nscss\n      -webkit-transition-property: -webkit-transform, opacity;\n      -webkit-transition-duration: 0.25s, 0;\nAnd by setting it to 0.25s, it's looking great !\nscss\n      -webkit-transition-property: -webkit-transform, opacity;\n      -webkit-transition-duration: 0.25s, 0.25s;\nI don't know if this is causing any issue with windows but I think you can safely enable this hack for all OS (remove the .win) and change the opacity animation to 0.25s here is the final code:\nscss\n.chrome .skeuocard {\n  @media screen and (-webkit-transform-3d: 0) {\n    .card-body .face{\n      -webkit-transition-property: -webkit-transform, opacity;\n      -webkit-transition-duration: 0.25s, 0.25s;\n      -webkit-transition-timing-function:ease-in-out,ease-in-out;\n      -webkit-transition-delay:0, 0;\n    }\n    .card-body .face.back{\n      opacity: 0;\n    }\n    .card-body.flip .face.front{\n      -webkit-transform: rotateX(0deg) rotateY(-180deg);\n      opacity: 0;\n      z-index: -1;\n    }\n    .card-body.flip .face.back{\n      opacity: 1;\n    }\n  }\n}\n. Good idea, the simplest way to prevent javascript issues is to do all the work with virtual or cloned DOM and replace the form at the end.\nBut the hard problem I guess is rendering issue (like the one there was with chrome not showing the back face of the card), they makes the user unable to fill the form, without any javascript errors.\nThe only solution I know to this kind of problems is a tiny \"legacy mode\" link reverting to the regular form.\n. I totally agree ;) It's better, and you seems to master js way better than me so i'll let you handle this =p\nBTW about testing, this might be a good idea indeed :) And while I was adding some integrations specs for my payment form, I ran into issues (I'm using PhantomJS). I don't know why yet, i'm still investigating but phantomJS fail to run skeuocard.js with some weird exception:\n```\n     Capybara::Poltergeist::JavascriptError:\n       One or more errors were raised in the Javascript code on the page. If you don't care about these errors, you can ignore them by setting js_errors: false in your Poltergeist configuration (see documentation for details).\n   TypeError: 'undefined' is not a function (evaluating 'this._isCardNameFilled.bind(this)')\n       at http://127.0.0.1:40830/assets/skeuocard.js?body=1:1360 in CardProduct\n       at http://127.0.0.1:40830/assets/skeuocard.js?body=1:1324\n       at http://127.0.0.1:40830/assets/skeuocard.js?body=1:1532\n       at http://127.0.0.1:40830/assets/skeuocard.js?body=1:1687\n   TypeError: 'undefined' is not a function (evaluating 'this._faceStateChanged.bind(this)')\n       at http://127.0.0.1:40830/assets/skeuocard.js?body=1:534 in FlipTabView\n       at http://127.0.0.1:40830/assets/skeuocard.js?body=1:122\n       at http://127.0.0.1:40830/assets/skeuocard.js?body=1:62 in Skeuocard\n\n```\nI'll do more testing but if you have any idea ;)\n. Ok I found the solution here: https://github.com/jonleighton/poltergeist/issues/292\nI tried phantomJS and capybara-webkit, they both failed because the webkit version it too old and doesn't implement bind. I had to redefine it for the tests to run:\njavascript\nif(typeof Function.prototype.bind == 'undefined') {\n  Function.prototype.bind = function(target) {\n    var f = this;\n    return function() {\n      f.apply(target, arguments);\n    };\n  };\n}\nIt should be ok with selenium, but with headless solutions you may get into the same issue :)\n. Yes, I got more errors with focused = $('*:focus'), this selector is not working in phantomJS (https://github.com/netzpirat/guard-jasmine/issues/48) I stopped here but i'm pretty sure there is a lot more xD\nIf you just want to support ECMAScript 5, the best way to test will probably be selenium, with an up-to-date firefox and/or chrome.\n. @kenkeiter I haven't tested yet but I'm gonna drop phantomJS anyway, I got other issues with my own js, the phantomjs webkit engine is too old. I'm switching to selenium.\nBTW I don't think this will fix the issue, in the post I linked they said the whole :focus selector is broken and the workaround is to use activeElement:\njavascript\n$('input[name=q]').get(0) == document.activeElement\n. ",
    "hackin88": "The error is still occurring\nI put the following examples\nlook\n\nhttp://www.cerebrum.com.br/diversos/skeuocard_success.html\nhttp://www.cerebrum.com.br/diversos/skeuocard_fail.html\n. Updated\nfrom\n$(document).ready(function(){\nto\njQuery(document).ready(function($){\n\nThanks Man\n. Is not working, go\nhttp://www.cerebrum.com.br/diversos/skeuocard_event.html\nEnter the following credit card\nVISA\n4073020000000002\nIt is not immediately displayed the type of credit card is \"visa\"\nThen when entering the following credit card\nMASTERCARD\n5555666677778884\nAi appears \"skeuocard will change to type: visa\"\n. Hello\nSoon I will be performing new tests\nThank you\n. ",
    "fshsweden": "The problem seems to be that Zurb Foundation sets input[*] to display:block, while skeuocard wants display:inline. I can hack my way around this for now but how to solve it long-term?\n. While I'm at it, I can also mention that Zurb also triggers another error: the fourth digit in each number group isnt shown. Somehow the whole view is enlarged (including the font size) so that the fourth digit can't fit in the text entry. This error is also mentioned (but probably for another reason) in this issue: https://github.com/kenkeiter/skeuocard/issues/40\nThe screenshot below illustrates the difference between 'without zurb' and 'with zurb'.\n\n. ",
    "ludofleury": "Thanks, awesome !\n. ",
    "sjoness": "Oh well spotted @dlachapelle! Sorry about this @kenkeiter, my fault.\n. @kenkeiter Sure I can do that. Is this project at version 1.0.0 now? I haven't been keeping up.\n. @kenkeiter there seems to be a problem with Bower 1.2.6. Trying to figure out a fix at the moment.\nEdit: I think I have gotten to the root of the problem. You need to apply the recent changes of bower.json to the 1.0.2 release.\nbash\n$ git tag 1.0.2\n$ git push origin 1.0.2\n. @kenkeiter Thanks dude, every time you bump the version number, remember to:\nbash\n$ git tag X.Y.Z\n$ git push origin X.Y.Z\nThat way I can always make sure the Bower package is up to date.\nEverything is O.K. for version 1.0.2.\n``` bash\n$ bower info skeuocard\nbower cached        git://github.com/kenkeiter/skeuocard.git#1.0.2\nbower validate      1.0.2 against git://github.com/kenkeiter/skeuocard.git#*\n{\n  name: 'skeuocard',\n  keywords: [\n    'credit',\n    'card',\n    'skeuomorphism'\n  ],\n  description: 'Skeuocard progressively enhances credit card inputs to provide a skeuomorphic interface.',\n  version: '1.0.2',\n  license: 'The MIT License (MIT)',\n  readmeFilename: 'README.md',\n  repository: {\n    type: 'git',\n    url: 'git://github.com:kenkeiter/skeuocard.git'\n  },\n  main: [\n    'styles/skeuocard.reset.css',\n    'styles/skeuocard.css',\n    'javascripts/vendor/cssua.min.js',\n    'javascripts/vendor/demo.fix.js',\n    'javascripts/vendor/jquery-2.0.3.min.js',\n    'javascripts/skeuocard.js',\n    'javascripts/skeuocard.min.js'\n  ],\n  ignore: [\n    'Gruntfile.coffee',\n    'package.json',\n    'index.html',\n    'screenshot.png',\n    '*/.',\n    'node_modules',\n    'bower_components',\n    'test',\n    'tests'\n  ],\n  homepage: 'https://github.com/kenkeiter/skeuocard',\n  authors: [\n    'Kenneth Keiter ken@kenkeiter.com'\n  ]\n}\nAvailable versions:\n  - 1.0.2\n  - 1.0.0\n  - 0.1.0\nYou can request info for a specific version with 'bower info skeuocard#'\n```\n. ",
    "dlachapelle": "My bad - sorry, should've looked for a develop branch before submitting a pull request to master.\n. ",
    "SaschaKonietzke": "Ken, did you ever have a chance to take a look at this? I've tried and the problem I had was that I only have the 4 last digits remaining when trying to display the card, which of course confuses the code a lot.\nWhat I would want to do is show the credit card to the user after it was saved.\n. ",
    "nodesocket": ":+1:  on this. We want to use as readonly.\n. Nevermind.\n. ",
    "rmccue": "\nMy testing indicates that, while the number is technically a single field, users think of the groups as being entirely separate -- hence the replication of that mental model in Skeuocard.\n\nI disagree. For non-technical users especially, they'll type in their number without looking at the screen and to find out that it has changed half way through seems to be a cause of disorientation.\nI have to fork the project anyway to get the date fields to use selects instead (the benefit of not being able to change the HTML, yay), so I might work that in, but something to consider anyway.\nThanks for the prompt response, and for creating this project! I've been wanting to see something like this for ages and had my own implementation, but I'd rather contribute to a shared project. :)\n. > Are you referring to the underlying date fields, or the ones on the card face?\nThe underlying ones. Last I checked, Skeuocard didn't particularly like that. (Although, come to think of it, that's more of a bug...)\n. Oh hey, just saw #57. That seems to handle that case.\nThanks for the prompt responses! :sailboat:\n. Thanks, and sorry for not double-checking this first. :blush:\n. ",
    "jackspirou": "@swrobel can you merge this into the dev branch?  btw just wondering but is 35728 specific to avoid conflicts or just a random port?  I only ask cause I don't know much about livereload port conflicts.\nThanks!\n. Hey @flinehan can you merge into the dev branch instead of master for this PR? \nThanks!\n. @fourseven  thanks!\n. Hey @leek can you merge this into dev?  Thanks!\n. @dylanjha  Thanks!\n. @cvrabie this is an interesting feature.  Can you merge into dev instead of master? Thx!\n. @kenkeiter @csexton I am in a battle with the same issue, but it seems to be working here: http://jsfiddle.net/dv9c9/ \n@csexton please submit a fix! \n. Hi @caruccio, can you submit the pull request into the dev branch instead of master?  Thanks!\n. Hey @seiyria \nIf you are willing to use jQuery you can do something like this: \nvar ccType = $('[name=\"cc_type\"]').val();\nvar ccNumber = $('[name=\"cc_number\"]').val();\nvar ccExpMonth = $('[name=\"cc_exp_month\"]').val();\nvar ccExpYear = $('[name=\"cc_exp_year\"]').val();\nvar ccName = $('[name=\"cc_name\"]').val();\nvar ccCvc = $('[name=\"cc_cvc\"]').val();\n@kenkeiter it would be nice if there were wrappers and documentation around these so you could do something like, card.getType() or card.getNumber().  Just a thought :)\n. I will be pushing this to the develop branch.  Sorry for submitting to master, my bad!\n. ",
    "swrobel": "Ok, rebased on top of develop although I can't edit the PR to point to that branch. I just picked 35728 at random. It seemed to be unused.\n. ",
    "yazinsai": "+1\n. ",
    "mikejihbe": "+1\n. My mistake, wrong project! I closed it.\nOn Mon, Oct 21, 2013 at 9:17 PM, Ken Keiter notifications@github.comwrote:\n\nUh.. What?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/kenkeiter/skeuocard/issues/109#issuecomment-26747182\n.\n\n\nMike Ihbe\nMustWin - Principal\nmike@mustw.in\nmikejihbe@gmail.com\nskype: mikeihbe\nCell: 651.283.0815\n. ",
    "jgemedina": "is a fix for tihs issue to be fixed soon? or is it out there already?\n. @kenkeiter is there are ETA for this bug?\n. ",
    "EmeryEx": "My quick fix:\nSkeuocard.prototype.isValid = function() {\n  return !this.el.front.hasClass('invalid') \n    && (!this.el.back.hasClass('invalid') || !this._inputViewsByFace['back'].length);\n};\n. ",
    "MatayoshiMariano": "+1\n. It happens the same to me, any solution?\n. +1\n. Someone have made it responsive?\n. Kinda, I did something like this:\n``` javascript\nvar scope = angular.element($(\"select\")).scope();\nif (!card.isValid()) {\n    scope.errorMessage = \"Invalid Payment Information\";\n    console.log('invalid');\n    return false; // not a valid card; don't allow submission\n} else {\nvar ccType = $('#cc_type option:selected').text();\n\nvar ccName = $('#cc_name').val();\nvar ccNumber = $('#cc_number').val();\nvar ccExpMonth = $('#cc_exp_month').val();\nvar ccExpYear = $('#cc_exp_year').val();\nvar ccCvc = $('#cc_cvc').val();\n\nscope.$apply(function () {\n    scope.PaymentOption.CardType = ccType;\n\n    scope.PaymentOption.NameOnCard = ccName;\n    scope.PaymentOption.CardNumber = ccNumber;\n    scope.PaymentOption.CardExpiryMonth = ccExpMonth;\n    scope.PaymentOption.CardExpiryYear = ccExpYear;\n    scope.PaymentOption.Cvc = ccCvc;\n\n});\n\n}\n```\n. ",
    "coderdave": "Sorry, I should have shown the default layout because I'm using custom fields.\nIt also breaks when using the default field names:\nhtml\n  <div class=\"control-group\">\n    <label for=\"cc_type\">Card Type</label>\n    <div class=\"controls\">\n      <select name=\"cc_type\">\n        <option value=\"\">...</option>\n        <option value=\"visa\">Visa</option>\n        <option value=\"discover\">Discover</option>\n        <option value=\"mastercard\">MasterCard</option>\n        <option value=\"maestro\">Maestro</option>\n        <option value=\"jcb\">JCB</option>\n        <option value=\"unionpay\">China UnionPay</option>\n        <option value=\"amex\">American Express</option>\n        <option value=\"dinersclubintl\">Diners Club</option>\n      </select>\n    </div>\n  </div>\nThe error occurs specifically on this line:\nhttps://github.com/kenkeiter/skeuocard/blob/master/javascripts/skeuocard.js#L172\n. ",
    "bcackerman": "Edit the image: visa-front.png\n. ",
    "aerodynamics": "We did it. Thanks for you comment and excuse me for my late update.\n. ",
    "nachiketkumar": "This worked fine for me. The prompt appears only when you start filling in the name.\n. ",
    "BarryCarlyon": "+1 to this fix. Works perfectly! <3\n. ",
    "dylanjha": "confirmed... I think I would like an initialization option dontFocus: true, that would prevent focus on initialization.  do you support that?\n. I had to get this problem solved urgently, so I had a really nasty monkey patch you can see here:\nhttps://github.com/mattnish/skeuocard-rails/commit/ec7c295f76faed766badd73a64f781bdebc81f3d\nI wouldn't recommend using this code, unless you're really in a bind.\nI want to go back and make an actual fix for it, if I get around to it, I'll put in a PR\n. @kenkeiter are you still supporting this project? and what are your thoughts about an initialization options {dontFocus: true} ? If you support that as an enhancement, I'd be happy to give it a shot.\n. no problem.  thanks for the reply.  and thanks for this awesome library :+1: I'm loving it.\n. development should be merged into master @kenkeiter \n. @kenkeiter just a friendly reminder to have a look when you get a chance\n. I'll update the Readme\nOn Tuesday, January 7, 2014, Ken Keiter wrote:\n\nMerged #117 https://github.com/kenkeiter/skeuocard/pull/117.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/kenkeiter/skeuocard/pull/117\n.\n. big thanks @kenkeiter, love this library, happy to be a contributor.  Thanks for maintaining.\n. \n",
    "frankfjf": "Having the same problem.  Is there anyway to disable the initial autofocusing without breaking the other behavior of the form?\n. Thanks a lot.  I might use this in the meantime since I also need it kind of urgently.\n. ",
    "argyleink": "awesome, this is a great new option\n. ",
    "brightcommerce": "Nice work Cristian, I like it. I think would be our preferred way to display it too. Thanks for sharing.\n. ",
    "Zakay": "Great! Exactly what it needed!\n. ",
    "quakes": "Just what I needed. Thanks.\n. ",
    "igorpavlov": "+1\n. ",
    "adamwong246": "bump. I really liked skeuocard but it's sadly mobile unfriendly\n\n. ",
    "shandy-bixly": "Here is some CSS I came up with to make it responsive. It isn't perfect but it works pretty good. \nAt 390px it drops the brand logo. It was done this way to prevent it from getting over-crowded at smaller screens. \n/* Make Skeuocard responsive */\n@media only screen and (max-width: 500px) {\n    .checkout_page .skeuocard {\n        padding: 20px 20px !important;\n    }\n}\n@media only screen and (max-width: 430px) {\n    .checkout_page .skeuocard {\n        padding: 20px 10px !important;\n    }\n}\n@media only screen and (max-width: 410px) {\n    .checkout_page .skeuocard {\n        padding: 20px 5px !important;\n    }\n}\n@media only screen and (max-width: 400px) {\n    .skeuocard.js .face{\n       width: 99% !important;\n    }\n```\n.skeuocard.js .flip-tab {\n    width: 150px !important;\n    font-size: 10px !important;\n}\n.skeuocard.js .flip-tab p {\n    width: 90px !important;\n}\n```\n}\n@media only screen and (max-width: 390px) {\n```\n.skeuocard .face.front {\n    background-image: url('/static/skeuocard-master/images/products/generic-front.png'),\n    url('/static/skeuocard-master/images/card-front-background.png')!important;\n}\n.skeuocard.js .cc-number input{\n   font-size: 15px!important;\n}\n/ correction for amex cards /\n.skeuocard .face.front .cc-cvc {\nmargin-left: -10% !important;\n\n}\n.skeuocard.js .front .flip-tab {\n    width: 140px !important;\n    font-weight: bold;\n    font-size: .7em !important;\n}\n.skeuocard.js .front .flip-tab p {\n    width: 95px !important;\n}\n```\n}\n@media only screen and (max-width: 360px) {\n/* correction for amex cards */\n.skeuocard .face.front .cc-cvc {\n    margin-left: -20% !important;\n}\n}\n@media only screen and (max-width: 340px) {\n```\n/ correction for amex cards /\n.skeuocard .face.front .cc-cvc {\n    margin-left: -30% !important;\n}\n.skeuocard.js .cc-number input{\n   font-size: 14px!important;\n}\n```\n}\n@media only screen and (max-width: 310px) {\n```\n.skeuocard.js .cc-number input{\n   font-size: 13px!important;\n}\n```\n}\n@media only screen and (max-width: 300px) {\n```\n.skeuocard.js .face {\nheight: 190px !important;\n\n}\n.skeuocard.js .back .cc-cvc  {\nmargin-left: -10px !important;\n\n}\n.skeuocard.js .face input {\n    font-size: .9em !important;\n}\n.skeuocard.js .cc-field .cc-name {\n    font-size: .8em !important;\n    top: 75% !important;\n}\n.skeuocard.js .cc-field .cc-exp input {\n    font-size: .8em !important;\n}\n/ amex specific correction /\n.skeuocard.product-amex .cc-field .cc-name {\ntop: 80% !important;\n\n}\n```\n}\n@media only screen and (max-width: 260px) {\n.skeuocard.js .face input{\n   font-size: .8em !important;\n}\n}\n. Here is a screenshot of it at 320px:\n\n. Cards with logos can be done be creating a card front for each card without the logo (using photo editing software) saving it as a different name (ex visa-front-small.png), and saving the logo as another file (ex visa-logo.png) Then using css similiar to below:\n@media only screen and (max-width: 390px) {\n```\n.skeuocard.product-visa .face.front {\nbackground-image: url('/static/skeuocard-master/images/products/visa-front-small.png'),\nurl('/static/skeuocard-master/images/card-front-background.png')!important;\n\n}\n.skeuocard.product-visa .face.front:after {\ncontent: url('/static/skeuocard-master/images/products/visa-logo.png');\nposition: absolute;\ntop: 85%;\nleft: 80%;\n width: 2% !important;\n\n}\n```\n}\n. Then, it will look like this screen shot (320px):\n\n. The function starting on line 1201 of skeuocard.js (ExpirationInputView.prototype._onKeyUp)  takes the number you input and returns a date object. For some reason, if you use a month > 12 it will return a valid but incorrect date object. I made a workaround for this.\nIt was returning the date as long as month and year are not equal to zero. It was doing this by these lines:\ndateObj = new Date(year, month - 1, day);\nthis.date = dateObj;\nI changed it to return a date in the past if the month is > 12 like this:\n if (month <=12) { \n     dateObj = new Date(year, month - 1, day);\n } else {\n      dateObj = new Date(1900,1,1);\n }\n      this.date = dateObj;\nSince 1900 is in the past, Skeuocard recognized it as an invalid date. \n. Found the issue. I was not linking skeuocard.js correctly. \n. ",
    "kpommerenke": "Flip button also doesn't appear when the initial value is set in the html through the 'value' attribute. This seems to apply to all inputs, not just the name field.\n. ",
    "csexton": "@pthurmond I had the same problem. I was able to hack this by adding:\ncoffeescript\n$(@_inputViews.number.el).find(\"input\").attr(\"placeholder\", @options.genericPlaceholder)\nTo Skeuocard.coffee on Line 373.\nOr if you want the js version for skeuocard.js:\njavascript\n$(this._inputViews.number.el).find(\"input\").attr(\"placeholder\", this.options.genericPlaceholder)\nThis is clearly a hack, but lets me set the generic placeholder.\n. @kenkeiter I would be up for submitting a PR with a fix for this issue, but wasn't sure the best way to handle this. Seems like a couple of approaches could be to:\n1. Tell the SegmentedCardNumberInputView to use the genericPlaceholder when there is no product. Kinda like this hack, but in a cleaner way. Perhaps we could add a method to the class to set the placeholder to the genericPlaceholder\n2. Let the SegmentedCardNumberInputView infer that it should use the genericPlaceholder if there is only one value in the grouping array\n3. Pass the product to the SegmentedCardNumberInputView so it can decide based on that.\nThoughts?\n. @scottzirkel I was able to work around this by putting the following in the stripe success callback:\njavascript\n$form.find('[data-stripe]').val('')\n. ",
    "catgeek86": "Here's another hack:\nAdded to lines 854-857 of skeuocard.js In this case, it makes the initial placeholder \"Enter Card Number\"\n         if (groupings.length == 1 ) {\n             groupEl.attr({placeholder: \"Enter Card Number\"});\n         }\n. ",
    "caruccio": "Any chance for this to merged?\n. Moving PR on develop branch.\n. ",
    "reggi": "The more I familiarize myself with it, I understand it better. You're replacing the whole form, still would be nice if these transfered over to the new inputs.\n. Thanks for replying! I never ended up going with skeuocard in production, ended up using @stripe checkout.js. :frowning: \nThanks a bunch for replying! If I even need I'll reference this!\n. ",
    "scottzirkel": "I agree, making this more Stripe friendly would be helpful.\n. My issue isn't with the Stripe attributes as it is with the name attribute. Is there a way to keep name from being used in the form?\n. Thanks, I ended up changing the InputSelectors on the fields. Yours has less code, though.\n. ",
    "bi1yeu": "Yeah, there are a number of problems with setting values on the fly.\nSetting expMonth or expYear programmatically will fail if there isn't already an expiration date set. See the code here. \nA new date is made with, e.g., the new month and the existing year. If one of those values is null, however, the new expiration date is invalid.\nYou'll notice that on-the-fly value setting for cardholder name and cvc also don't work. Line 190 reads:\ncoffee\n@_inputViews.exp.setValue @_getUnderlyingValue('name')\nbut should be:\ncoffee\n@_inputViews.name.setValue @_getUnderlyingValue('name')\nSimilar change on 194 for CVC.\nMy temporary solution for the expiration date bug was change this part of the .js file:\njs\n      _expirationChange = function(e) {\n        var month, year;\n        month = parseInt(_this._getUnderlyingValue('expMonth'));\n        year = parseInt(_this._getUnderlyingValue('expYear'));\n        _this._inputViews.exp.setValue(new Date(year, month - 1));\n        return _this.render();\n      };\nto this...\njs\n      _expirationChange = function(e) {\n        var month, year;\n        month = parseInt(_this._getUnderlyingValue('expMonth'));\n        year = parseInt(_this._getUnderlyingValue('expYear'));\n        if (isNaN(month)) {\n          month = 1;\n        }\n        if (isNaN(year)) {\n          year = 0;\n        }\n        _this._inputViews.exp.setValue(new Date(year, month - 1));\n        return _this.render();\n      };\n. @reggi No problem. I'm digging into it now because I wrapped Skeuocard in an AngularJS directive and I wanted to write unit tests for it. So it was necessary to programmatically populate those fields. I've had to make a few changes to get this to work, but overall I think it's a pretty cool plugin. I'll have to check out checkout.js.\n. ",
    "hrdwdmrbl": "I would give you a pull request, but I'm on a foreign machine right now. I think I've identified the code in question. Take a look at line 239 this._inputViews.number.bind(\"change valueChanged\", function(e, input) {\nI think you should add 'paste' to that bind command.\nAwesome work on this project, BTW! I love it and use it.\n. ",
    "vanerleo": "I had to do a whole song and dance around it. so far this is how i got it to work. not elegant but works\nin the view : \n``` Javascript\n$(document).ready(function () {\n\n\n    card = new Skeuocard($(\"#skeuocard\"));\n\n    $('#skeuocardButton').on('click', function () {\n        var scope = angular.element($(\"select\")).scope();\n\n        if (!card.isValid()) {\n            scope.errorMessage = \"Invalid Payment Information\";\n            console.log('invalid');\n            return false; // not a valid card; don't allow submission\n        } else {\n\n            var ccType = $('#cc_type option:selected').text();\n\n            var ccName = $('#cc_name').val();\n            var ccNumber = $('#cc_number').val();\n            var ccExpMonth = $('#cc_exp_month').val();\n            var ccExpYear = $('#cc_exp_year').val();\n            var ccCvc = $('#cc_cvc').val();\n\n\n            scope.$apply(function () {\n                scope.PaymentOption.CardType = ccType;\n\n                scope.PaymentOption.NameOnCard = ccName;\n                scope.PaymentOption.CardNumber = ccNumber;\n                scope.PaymentOption.CardExpiryMonth = ccExpMonth;\n                scope.PaymentOption.CardExpiryYear = ccExpYear;\n                scope.PaymentOption.Cvc = ccCvc;\n\n                scope.wip();\n                scope.SaveCCDetails();\n            });\n        }\n    });\n});\n\n```\nand in the controller defined the following structure :\nJavascript\nPaymentOption: {\n            NameOnCard: '',\n            CardType: '',\n            CardNumber: '',\n            CardExpiry: '',\n            CardExpiryMonth: '',\n            CardExpiryYear: '',\n            Cvc: ''\n        },\n. ",
    "vavrecka": "Thanks for your help, I really appreciate it. Weirdly enough, I got it working another way. Unfortunately the HTML2JADE convertor screwed the code up, and the whole thing was in the first paragraph, so the jQuery couldn't handle it for some reason. So I removed the  tag and it all works now, even without your dance around :-)\n. ",
    "paveltyk": "@vavrecka how did you get the angular data-binding to work?\n. @seiyria Did you solve the problem?\n. @MatayoshiMariano did you ever solved this?\n. ",
    "seiyria": "@jackspirou Thanks for that. I was trying to find a better way to get the data, but I ended up going with Stripe checkout anyhow. Thanks though!\n. No, I ended up just using the Stripe widget.\n. ",
    "TheRyanBurke": "When can we expect a new release with this change?\n. ",
    "estenp": "Thank you for addressing this issue. I was struggling with validating AmEx. Needs to be merged\nI did run into an issue, though, where if you were trying to validate before the card had began rendering, or before this.product exists, as I see it, the validation using card.isValid() would throw an error because this.product cannot be found. For example if you tried to submit before ever touching the \"card\". I altered your addition like so:\nif (this.product) {\n     if (this.product.faces === 'both') {\n       return !this.el.front.hasClass('invalid') && !this.el.back.hasClass('invalid');\n     } else if (this.product.faces === 'front') {\n       return !this.el.front.hasClass('invalid');\n     } else {\n       return !this.el.back.hasClass('invalid');\n     }\n  } else {\n    return false;\n  }\nThis seems to be working for me, so far.\n. Currently struggling with this bug. It appears to be Firefox related -- it seems to work in Chrome.\nI found some Firefox issues that seem to indicate this issue, however they are rather old and I've yet to find any sort of solution:  https://bugzilla.mozilla.org/show_bug.cgi?id=743169\nPerhaps a regex pattern can be (re)applied to the field as the card type changes, rather than relying on the maxlength value?\n. ",
    "ghost": "I get the same problem.\nI don't think the author is paying attention to this repo anymore. Maybe it's time someone forked it and took over.\n. ",
    "hellopablo": "Closing abandoned issues / clearing my issues inbox.. ",
    "cameronroe": "I definitely agree that it would be ideal to just have one script tag for skeuocard.js. Including jquery defeats the purpose of bower where one is looking to include bower dependencies rather than coupled vendor code. Can you use bower.json to include other dependencies?\n. Cool, thanks for the update.\n. ",
    "JohnMorales": "@cameronjroe this doesn't give you just one dependency, but here's what I used to fix the main files problem:\nIn your bower.json add the following :\n\"overrides\": {\n    \"skeuocard\": {\n      \"main\": [\n          \"styles/skeuocard.reset.css\",\n          \"styles/skeuocard.css\",\n          \"javascripts/vendor/cssua.min.js\",\n          \"javascripts/skeuocard.js\"\n        ] \n      }\n    }\nThat said, I'm not planning on using this project but instead a different solution for providing card input as the owner has seemingly moved on.\n. ",
    "mhluska": "On a side note I had a hell of a time getting this to play nice with Rails. I had to patch the compiled CSS like so:\n```\nSKEUOCARD_PATH='./vendor/assets/components/skeuocard/styles/skeuocard.css'\nperl -pe 's,url(\"../(.*?)\"),url(\"''<%= asset_path \"skeuocard/\\1\" %>''\"),g' ${SKEUOCARD_PATH} > ${SKEUOCARD_PATH}.erb\nrm ${SKEUOCARD_PATH}\n```\nThe skeuocard-rails gem seems outdated.\n. ",
    "judgej": "We could split the name that is entered into first and surname, but I imagine that would start to get tricky with double-barrel names, and when titles are added (\"MR FREDERICK LORD BLENKINSOP\").\n. No, we used the JS library from Stripe instead. That works well enough.\n. ",
    "micfacch": "@judgej did you find or create a solution to this issue?\n. ",
    "tangoNine": "Yeah I am seeing the need to expand to handle 19 digit card number. In my testing I have been able to make adjustments to the skeuocard.js and the skeuocard.css in this manner. \nUsing Visa as a test, \n\n1    realcard.prototype.CardProduct.create({\n2    pattern: /^4/,\n3    companyName: \"Visa\",\n4    companyShortname: \"visa\",\n5    cardNumberGrouping: [4, 4, 4, 4],\n6    cardNumberLength: [13, 14, 15, 16],\n7    expirationFormat: \"MM/YY\",\n8    validateLuhn: true,\n9    cvcLength: 3,\n10    layout: {\n11     number: 'front',\n12      exp: 'front',\n13      name: 'front',\n14      cvc: 'back'\n15   }\n16  });\n\nIf you know the 19 character patter I changed lines 5 & 6 to the following just to try it out.\n\n5    cardNumberGrouping: [4, 4, 4, 7],\n6    cardNumberLength: [13, 14, 15, 16, 19],\n\nOn the CSS I changed the font size from 1.5em to 1.25em\n\n.skeuocard.js .cc-number input {\n    color:#333;\n    font-family:\"ocraregular\", \"OCR A Std\", \"OCR A\", Courier, \"Courier New\", monospace;\n    font-size:1.5em;\n}\n\nWhile it was not the best looking it did let me enter 16 and 19 length cards. \nI am not sure if that I am doing is correct or not, as I am a hobbiest kind of coder and I still have not figured out how to make the expiration date output be MM YY i.e 01 18 and not 1 2018 so I would check with someone that knows more than me to get it 100%.\n. Building a database could be a nightmare. I have put out some requests regarding the 19 digits. I do internal PCI auditing for a card processor. I should be able to get layouts, patterns, and types from some of the engineers that I deal with. WIll post back here when I have something.\n. @custa1200 Yeah, the pattern that you have is what is going to be expected by what we have from Visa, Mastercard. Discover will use the same pattern when and if they choose to go that route and American Express, at this time, has no plans to change their pattern scheme. Also, just as an aid on what card to display, here is a very basic IIN Range table that I can offer. It's just for card type i.e. Visa, Mastercard etc and not for specific branded cards.\n\n\n\nAmerican Express\n34, 37\n15\n\n\nDiners Club - Carte Blanche\n300, 301, 302, 303, 304, 305\n14\n\n\nDiners Club - International\n36\n14\n\n\nDiners Club - USA & Canada\n54\n16\n\n\nDiscover\n6011, 622126 to 622925, 644, 645, 646, 647, 648, 649, 65\n16\n\n\nInstaPayment\n637, 638, 639\n16\n\n\nJCB\n3528 to 3589\n16\n\n\nLaser\n6304, 6706, 6771, 6709\n16-19\n\n\nMaestro\n5018, 5020, 5038, 5893, 6304, 6759, 6761, 6762, 6763\n16-19\n\n\nMasterCard\n51, 52, 53, 54, 55, 22\n16-19\n\n\nVisa\n4\n13-16\n\n\nVisa Electron\n4026, 417500, 4508, 4844, 4913, 4917\n16\n\n\n\nFor any that want to get really deep in displaying cards I have attached the most current BIN list by card brand/issuer/variant i.e. BIN Numbers for Chase Saphire, Subway, BestBuy, Canada Trust etc that I have might help but good to have none the less.\nCard-Brand-Bin-List-082016.txt\n_EDIT_\nSomething that I forgot to mention. There is nothing in the BIN numbers or elsewhere in the card number to indicate if it is a 19 digit number. Visa and Mastercard expect developers to simple expand the maxlength attribute in a form field for Card Number from maxlength=\"16\" to maxlength=\"19\". So I would think that for the last quad set of the card number that the filed somehow be widened to accept 7 numbers instead of 4 OR a single field that after they enter the digits and it loses focus some magic happens and it counts the number of digits and displays XXXX XXXX XXXX XXXX for a 16 number card or XXXX XXXX XXXX XXXXXXX for a 19. \n. ",
    "tim-m89": "I was trying to see if there was some simple way to dynamically handle lengths and groupings for all 12-19 credit card number. Unless someone knows any better, I think the only fool proof way would be to have a comprehensive database all known IINs so probably not. While doing some google image searches for 'maestro', I found a few examples of uncommon groupings, and even multiple groupings for the rarest lengths. By the way, this page has a 19 digit maestro example where the grouping is [5,11,3].\n. ",
    "custa1200": "hi @tangoNine did you ever get more information around layouts and patterns of 19 digit numbers? I saw somewhere else that it was thought to be 4 4 4 7\n. ",
    "Cy-Bo-Rg": "SPAM !!! pay attention !!!\ndon't trust that person!!\nHe's deliberately spamming that website on many github projects ; it all goes down to some ArtWired Inc. (I'm posting the google webcache result as I don't trust this domain)\"http://webcache.googleusercontent.com/search?q=cache:dTozl8sc95IJ:www.artwired.com/+&cd=1&hl=en&ct=clnk&gl=us\"\nI've tried a website lookup and the domain looked like registered years ago but modified only a few days ago; I've just made a record on the archive.org on which there wasn't a single trace of this; not only that, but after making those lookups , the registar infos are now lost and almost all whois website aren't showing anything about it...\n14.000 or so domains are registerd under the name \"artwired inc\" \nhttp://reversewhois.domaintools.com/?all[]=ArtWired%2C+Inc.&none[]=\nDefinitely dangerous.\nReported for abuse.User blocked.\n. ",
    "mattgrande": "Telling people to register for GitFund is the only activity this guy has.\nhttps://github.com/tooksy?tab=contributions&from=2015-07-17\n. "
}