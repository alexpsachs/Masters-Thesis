{
    "yohannpoli": "+1\n. I register jquery.dotdotdot in bower (via register), can you just add a tag for current version?\n. ",
    "lukaszklis": "@vvondra @yohannpoli meanwhile you can add the plugin as a dependency using commit as a version in bower.json file (using latest hash):\njson\n{\n  \"dependencies\": {\n    \"jquery.dotdotdot\": \"#1887688d1fe7b58b4a6a545bd14fae6a7837a64e\"\n  }\n}\n. Will fix one part of #1. Would be really nice to add tags as well. ;)\n. ",
    "FrDH": "Thanks, I'll also add the fallback to where the data is being set.\n. I updated the minified version just a few hours ago, so the dev and the minified version should be the same now.\n. Could you please fix the issue in a pull request?\n. This is due to the fact your DIVs don't have a height, but a max-height. This way the plugin can't automatically measure the available height and you should specify it via the \"height\"-option:\n$(\".ellipsisi\").dotdotdot({\n    height: 50\n});\n. Should be fixed in v1.6.9\n. I guess an array of elements to \"skip\" could be introduces, but I'm not sure if this can be implemented any time soon.\nFor now, I would recommend not to put script tags in the HTML.\n. I don't think there's much that can be done about this issue. I did some testing with trying to skip the SCRIPT tags, but that resulted in the script being fired 3/4/5 times.\nIsn't it possible to put the SCRIPT tags outside the DIV that's truncated?\n. Interesting, I think I found a way to make it work that also makes the script a bit better (the script isn't being fired 3/4/5 times).\nI'll commit a new version later on.\np.s. any other tags that could be skipped/kept?\n. \"It's not a bug, it's a feature\"... :-)\nThat message is considered to be an error-message, not a debug-message and therefor it is always shown.\n. FYI,\nIn the latest version, I removed the debug option and added this function:\n$.fn.dotdotdot.debug = function( msg ) {};\nBy default, it doesn't do anything, override it if you want to show debug information:\n$.fn.dotdotdot.debug = function( msg ) {\n    console.log( msg );\n};\n. I was under the impression the bug was fixed. Isn't it? If so, could you create an online example?\n. I guess you could try to measure the length of the truncated html and slice it off of the original text:\nvar org = $(\"#col1\").html();\n$(\"#col1\").dotdotdot();\n$(\"#col2\").html( org.slice( $(\"#col1\").html().length ) );\nHope this helps.\n. You're right, I just committed a new version to undo the issue.\n. For the plugin to work, you need to set a fixed height for the anchors (and display: block).\nAnyway, for a single line ellipsis, I would recommend using a pure CSS solution.\nhttp://jsfiddle.net/L4tyL/3/\n. This is probably due to the fact the plugin uses jQueries replaceWith() method, which does not \"copies\" eventhandlers. Have a look at this post:\nhttp://stackoverflow.com/questions/770308/events-not-registering-after-replacewith\nI think the solution to use jQueries live() method in stead of bind() should fix this issue.\nAlso, bobbotron's solution should work I guess:\n\n. on() would indead be better.\nHow are you using it?\nThis would not make a difference with using bind():\njavascript\n$(\"a.readmore\").on(\"click\", function() {\n   //  code\n});\nThis would:\njavascript\n$(\".wrapper\").on(\"click\", \"a.readmore\", function() {\n   //  code\n});\n. It would indead be better if the plugin did not remove events, but I'm not sure if it's possible.\n. No, unfortunately it is not possible to use HTML as an ellipsis.\n. If the button has a single line of text, I would always recommend using CSS text-overflow to add an ellipsis. Otherwise, if it works, go for it.\n. Good idea, I would only test whether \"$dot\" is visible instead of filtering it.\nI'll implement this later on.\nI don't see any reason not to change the interval to 300 milliseconds, I'll change this too.\nFor best performance, I would recommend to manually trigger the \"update\" event when the width and/or height of the element could change. For example in the callback function of an AJAX request.\n. Could you check how the latest version (1.6.14) performes?\n. That's odd. I can't think of any reason why a different font would generate an error like that.\nIs that the Chrome debugger? If so, what does FireBug say (often has better debugging information)?\nJust a thought: When you fire the plugin while the font hasn't loaded yet, the height of your content will be \"0\" (I guess). Could you fire the plugin onWindowLoad (or after a long timeout):\njavascript\n$(window).load(function() {\n   $('#foo').dotdotdot();\n});\n. :)\n. Keep in mind that the plugin needs the wrapper to have a fixed height. Otherwise it can not measure the correct maximum height.\n. Also, webkit browsers fire the onDocumentReady event before the height of an image is retrieved from the server, making it impossible for jQuery (or actually the browsers javascript engine) to measure the correct height if it isn't specified in either the height-attribute or via CSS.\n. You can use \"\\u2026 \" if you wan't but the default value will be three dots:\njavascript\n$(\"#foo\").dotdotdot({\n   ellipsis: \"\\u2026 \"\n});\n. Are you sure this is correct?\nWhen you destroy the plugin after having set the style-attribute, wouldn't that put back the style-attribute as it was before firing the plugin?\n. Is there an online example I could have a look at?\n. I agree about the donate text, I'll see if I can come up with a better text.\nThe plugin is dual licensed so you can choose either one of the licenses to use. Not that uncommon I believe.\nI don't think I'll be including  copy of the license with the plugin, seems a bit needles. Also, jQuery links to the same wikipedia page: https://jquery.org/license/\nThanks anyway.\n. You could try to change line 345 of jquery.dotdotdot.js from:\njavascript\nvar noty = 'script';\nin to:\njavascript\nvar noty = 'script, :hidden';\nLet me know if this works. If it does, I'll implement it in the next version.\n. Cool, I'll implement it in the next release.\n. I just released version 1.6.15, it containes the fix by default.\n. Apparently the fix introduced a far more unwanted bug, it showed all HTML when using HTML markup.\nIn the new version (v1.6.16), you can add a classname to elements you don't whant the plugin to remove from the content: \"dotdotdot-keep\":\nhtml\n<div id=\"foo\">\n   <p>some text...</p>\n   <p class=\"dotdotdot-keep\">keep this</p>\n</div>\n. I don't think so.\nBlackHat seo means you are deliberately hiding content to trick the search engine. dotdotdot should be used to merely hide a small part of the text for layout and styling purposes.\n. Version number should be fixed in 1.6.16\nSorry about that.\n. Hmm sorry about that, should be fixed in v1.6.16\n. This could be a combination to how you've set up your CSS and the plugin wrapping the truncated text in a DIV while calculating where to truncate.\nFor example:\n``` css\nfoo > #text {\nfont-size: 20px;\n\n}\n```\njavascript\n$(\"#text\").dotdotdot();\nThe CSS is not applied while the plugin calculates where to truncate, because \"#text\" is wrapped in a DIV and no longer is a direct descendant of \"#foo\".\n. That's odd, here's how it looks on FF (on OSX)\n\nAre you getting any errors in the console?\nI'm guessing the browsers javascript engine can't measure the correct height of the DIV.\n. Apparently, the plugin has some issues with lists.\nIf lists are all you're truncating, you could try setting the \"wrap\" option to \"children\". That way the plugin will not truncate inside the LI:\njavascript\n$(\"ul\").dotdotdot({\n   \"wrap\": \"children\"\n});\n. Apparently, the plugin has some issues with lists.\nIf lists are all you're truncating, you could try setting the \"wrap\" option to \"children\". That way the plugin will not truncate inside the LI:\njavascript\n$(\"ul\").dotdotdot({\n   \"wrap\": \"children\"\n});\n. This is because the plugin removes and re-appends the elements using jQueries \"append\" method.\nThis method doesn't add any whitespace (as it shouldn't).\nI don't think there is much I can do about this.\n. Pixels.\n. No, its pixels.\nBut if you know the lineheight, I guess it is easy to calculate the height:\nheight = lineheight * 4\n. I'm sorry about that, I need to update the documentation; the ellipsis can only be plain text, not HTML.\n. Documentation is updated, you can't insert HTML as an ellipsis.\n. If I'm correct, the plugin should automatically truncate new text if it is inserted via either the text or html method:\n``` javascript\n$(\"#foo\").dotdotdot();\n//  later on\n$(\"#foo\").text( \"New text that should be truncated automatically\" );\n```\nIf that somehow doesn't do the trick, you could always destroy the plugin and recreate it:\n``` javascript\n$(\"#foo\").dotdotdot();\n//  later on\n$(\"#foo\").trigger( \"destroy.dot\" );\n$(\"#foo\").text( \"New text that should be truncated automatically\" );\n$(\"#foo\").dotdotdot();\n```\n. Could you try and add \"a\" to the string on line 344:\njavascript\nvar var notx = 'a, table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, blockquote, select, optgroup, option, textarea, script, style';\nIf this works, I'll implement it and push a bugfix version.\n. So, did this do the trick?\n. Did it?\n. Ok, should be fixed in version 1.7.2\n. My first guess is, it's because you append the original content to the DIV that contains the truncated content, this doesn't remove the trucated content.\n. Any browser that allows the javascript engine to measure the height of an DOM node will work, I think.\nIE8 should definitely work. \n. I added a package.json file just now (a new one, the one in the merge was for version 1.6)\n. p.s. I don't think this project is dead, there's just not much more to expand or improve.\n. I honestly have no idea. Do I need to do anything else?\n. nope.\nIf you can (and wouldn't mind), could you do that? I'm not that much of a commandline hero.\n. Zooming in probably rounds up some of the sizes, while rounding down others (which sounds odd actually).\nYou could try the tolerance option I guess.\nBut in general, a single line truncation is probably best done with pure CSS.\n. Chrome fires the onDocumentReady event before having retrieved the width and height of images from the server. So if your content has images in it, make sure to give it a width and height.\nIf that doesn't solve your problem, you could trigger the plugin to update its appearance onWindowLoad, which is fired after every element on the page has been loaded:\n``` javascript\n$(document).ready(function() {\n   $(\".text\").dotdotdot();\n});\n$(window).load(function() {\n   $(\".text\").trigger( \"update.dot\" );\n});\n``\n. I'd say the script should work when using css columns. Does it only not work on FireFox? Or haven't you checked other browsers?\nIs there an online demo I could have a look at?\n. Hmm, I see the issue but can't really think of a way to fix it.\nMaybe you can replace thewith a` using jQuery before firing the plugin?\njavascript\n$(\".content\").find( \"br\" ).replaceWith( \"<span />\" );\n$(\".content\").dotdotdot();\n. No, max-height probably won't work, the wrapper needs a fixed height while the plugin calculates where to cut off the text.\nI guess you could set a fixed height to the wrapper before firing the plugin and remove it afterwards:\njavascript\n$(\".wrapper\")\n    .height( 150 )\n    .dotdotdot()\n    .height( \"auto\" );\n. The intended behavior of the read-more link is to open a new page, showing the whole story. That behavior doesn't need any explanation I think.\nI'll see if I can whip up an example and add it to the demo in the download pack.\n. Well, I just added a demo to the download file.\nHave a look at it.\n. javascript\n$(\"#foo\").dotdotdot();\nalert( $(\"#foo\").triggerHandler( \"isTruncated\" ) );\nThat should alert either true or false. \nThe namespace (\".dot\") is not required, but prevents any \"isTruncated\" events from other plugins from being fired (although I doubt there'll be another plugin in the page that also uses a custom event called \"isTruncated\").\n. For responsive layouts, you can set the watch option to \"window\" and bind a function to the update custom event. This is triggered every time the plugin updates the truncated content.\njavascript\nfunction myUpdate() {\n  alert( $(\"#foo\").triggerHandler( \"isTruncated.dot\" ) );\n}\n$(\"#foo\").dotdotdot({\n    watch: \"window\"\n}).on( \"update.dot\", function() {\n    myUpdate();\n});\nmyUpdate();\nNote that you must bind the update event to the wrapper AFTER firing the plugin, otherwise the plugin will remove it. Unfortunately this causes the event not to be triggered the first time so you'll need to trigger it once manually (hense the \"myUpdate\" function).\n. Try using an .each() loop, something like this should get you in the right direction:\n``` javascript\n$(\".caption\").each(function() {\n    var $dot = $(this),\n        $after = $dot.find( \".the-after-element\" );\nfunction myUpdate() {\n    if ( $dot.triggerHandler( \"isTruncated.dot\" ) ) {\n        $after.show();\n    } else {\n        $after.hide();\n    }\n}\n$dot.dotdotdot({\n    watch: \"window\"\n}).on( \"update.dot\", function() {\n    myUpdate();\n});\nmyUpdate();\n\n});\n```\nI understand it's a bit difficult figuring out what HTML, JS and CSS are needed to get the example to work. I'll see if I can split up the JS and CSS for each example.\n. I agree it's a bit vague and contradictory, I'll update and the license the website late on.\n. white-space: pre-wrap; seems to cause this issue.\n. The jsfiddle isn't doing anything at all, there's an error: \"TypeError: url.indexOf is not a function\".\n. That's odd, on line 343 a link (\"a\") is specified. So BOB should have been added after JIMMY.\n. Ok, found the issue.\na table, etc should have been a, table, etc.\nWill release a new version soon.\n. The bug has been fixed in the latest version. Closing this issue now.\n. Is there an online example? I tried but could not reproduce the issue with the demo files.\n. Can you post the script you're using? I can't figure out why it's working OK in the demo files but not on your website.\n. Sounds like an odd bug. I can't think of any reason for it to happen.\nI guess you could try to remove the <p> or to fire the plugin on the <p> instead of the <div>. Maybe that'll improve the behavior.\n. That's odd, I think it should.\nAre you getting any errors?\n. Is there an online example?\nI tried, but could not reproduce the issue with the demo files.\njavascript\nalert( $('#dot4').triggerHandler('isTruncated') );\nalerted true.\n. I think I found the reason and'll see if I can fix it without introducing new issues.\n. The latest version should have fixed this issue I think.\nIf it didn't, try removing the $.trim from line 585 and see if that makes any difference.\n. How are the rows loaded? If asynchronously (with an AJAX call) you'll need to wait till the HTML is actually added to the DOM. If synchronously, I can't think of a reason why triggering the update.dot event wouldn't work.\n. The thing is, if I remove it and some other script calls html() or text(), the ellipsis isn't updated.\nBut if you want, feel free to remove the lines that override the methods in your copy of dotdotdot.\n. I ran the below test with all demos in the download pack, they all worked:\njavascript\nalert( $('#dot1').triggerHandler( 'isTruncated' ) );\n. Do you have multiple DIVs with that classname?\nIf so, triggerHandler will only test the first DIV to be truncated. Try using an .each().\n. Is there an online example?\n. I don't know why, but for some reason the \"after\" element goes bananas when used in combination with HTML markup.\n- Replace the <p> tags with pure text -> no issue\n- Remove the \"after\" option -> no issue\n- Use the \"after\" option and have <p> tags -> issue...\n. That's pretty odd, it seems to me the \"after\" element is what is causing the issue.\nI have no idea why though...\n. You can't. The ellipsis option is restricted to being text.\n. Why do you toggle $i while looping over all children of $i? Shouldn't you toggle $(this)?\nOr, if toggling $i is enough to solve the issue, toggle it only once?\n. Thank you for the suggestion.\nI'll see if I can implement this is the next version.\n. Try setting the fallbackToLetter option to false.\n. Then I don't think there's a solution for your issue (or at least not using this plugin).\n. I guess you could wrap all content in a <span>.\n. While measuring the contents height, the plugin wraps the truncated element in a DIV. My guess is thats where it stops working, since wrapping a TD in a DIV probably isn't supported by any browser.\nWhen you wrap the content in a DIV, and fire the plugin on that DIV (not the TD), there should be no problem because a DIV can be wrapped in a DIV.\n. If you take a look at the options, you'll notice the watch option. It can be set to either true or \"window\". Setting it to true will start an interval constantly updating the ellipsis. Setting it to \"window\" will update the ellipsis onWindowResize.\n. If your element has no height, how should the plugin know where to stop showing text? Also, I think using a block element will work better than an inline element.\n. According to HugoArts, you can use a unicode ellipsis if you escape it.\nSince this plugin is considered to be donationware, but almost no-one ever makes a donation, I decided to no longer actively maintain the plugin. Therefor I'm not going to make any changes that possibly introduces new issues.\nIf the plugin works for you, you can keep using it. Also feel free to make improvements and submit a pull request. If the plugin doesn't work for you, there's a few alternatives out there you could give a try.\n. it seems this PR has conflicts so it can not be merged. Could you please create a new PR?\nThanks.\n. That would break functionality with standard spaces, wouldn't it?\n. wouldn't replacing a standard space with a non-breaking space break functionality on non-japanese text?\n. The PR currently has conflicts, could you create a new PR from the latest branch? \nThanks.\n. This isn't demo code. It's \"Automatic parsing for CSS classes\". The comments actually describe what's going on there pretty well.\n. Strange... I'll run Gulp in the next version.\n. css-activation and data-activation will be removed in the next version. If you want such a feature, I'd suggest implementing it in your theme or framework. css-activation will be removed in the next version. If you want to keep using it I suggest you implement it in your theme or framework. If it's not compattible I can't merge it. Is there an online example of the issue I could have a look at?. You're using an older version of the plugin (1.7), try updating to the latest version (should work a lot better): \nhttp://dotdotdot.frebsite.nl\nPlease note that some options have changed since version 3.0. thanks :). Thank you for reporting the issue.\nThe problem seems to be, that the text is directly inside the wrapper. If  you wrap the text in a HTML node (for example a <SPAN>), it works: http://jsfiddle.net/kcemztok/6/\nI'll see if I can fix it shortly, for now you could wrap the text in a <SPAN>. Should be fixed in 3.0.4\nCould you please check?. My guess is, the plugin looses the reference to the \".test\" node when the slider moves the slide in the HTML. Is there an online example I could have a look at?. Could you please check if the bug is fixed the latest version?. 1) I thinks in this case watch: true should work. (the interval should detects when the DIV becomes visible)\n2) You can manually truncate the DIV using the API (it replaced the custom events):\nhttp://dotdotdot.frebsite.nl/#api\n````js\n// fire the plugin\nvar $dot = $(\"#wrapper\").dotdotdot();\n// get the API\nvar API = $dot.data( \"dotdotdot\" );\n// manually truncate\nAPI.truncate();\n````. Thanks.\nI'll see if this works without any drawbacks.. Fixed the issue with a different approach.. Here's a list of things that changed since 1.8.3:\n\nThe truncation process was re-written to calculate where to put the ellipsis more precise. In 1.8 the ellipsis was somethimes not added at all.\nThe after option is replaced with keep which can point to more than one element. The elements are now kept in there original place in the DOM instead of always being appended after the ellipsis.\nThe custom events are replaced with an API\nThe watch option is set to \"window\" by default\njQueries html and text methods are no longer overridden\nInitiallisation via classnames and data-attributes is removed\nThe wrap and fallbackToLetter options are combined into truncate\n\nThe height option is removed because the plugin now understands height, min-height and max-height CSS values. I guess that makes sense. Thanks for sharing.. Sorry for the late reply, but I think watchNow isn't a good name, it implies a watch will be started.\nThe most logic would be to add an argument to the truncate method that determines whether or not to first check if the sizes are changed. Something like this:\n````js\ntruncate = function( force )\n{\n    if ( force || this._watchSizes() )\n    {\n}\n}\n```\nThis would mean I have to rewrite some of the watch logic (because at this point,_watchSizestriggerstruncate`).\nI'll try to implement this in the next release.. I can't really think of any reason for IE11 to not function correctly, I don't think the plugin does anything browser-specific. Do the examples that come with the download have the same issue in IE11?\n\n\nThere are two changes that might have slowed down the truncate process:\n During the truncate process, text-nodes are wrapped in a <span>\n Truncating text-nodes starts at the end of the string removes words untill the text fits. This will slow the process down if your original text overflows a lot.\nHaving 100 elements truncated seems like quite a lot, the plugin isn't (and never was) intended to do so. You might want to consider simply using overflow: hidden and only trigger the truncate() process when an element is about to come into view (I can recommend waypoints for that).\nHope this helps.. The plugin compares the current height using $..innerHeight() to the max-height using the smallest of window.getComputedStyle( element )[ \"height\" ] and window.getComputedStyle( element )[ \"maxHeight\" ].\nhttps://github.com/FrDH/jQuery.dotdotdot/blob/master/src/jquery.dotdotdot.js#L459\nhttps://github.com/FrDH/jQuery.dotdotdot/blob/master/src/jquery.dotdotdot.js#L475\nShould work according to caniuse. That's odd, I think 1.8.3 should be on there, but it isn't. I'll have a look at how to publish an older version to NPM.\nThanks for the heads up.. 1.8.3 is now available on NPM. Thanks for the fix, I'll implement it shortly.\nI think the height should be watched when the height unit is anything other than a \"px\" value.\nFor example: height: 20vw should update this.maxHeight onWindowResize and height: 50% should probably update it in an interval.\nI'll take this in consideration for the next version.. Good point, I'll add the callback in the next version.. Check the latest version (3.1.0) and the docs: http://dotdotdot.frebsite.nl/#options. Hi, sorry about the broken functionallity, but it is a major update.\nFor all available options, please visit the documentation website:\ndotdotdot.frebsite.nl#options\nThe height option was removed in favor of using the CSS value for the height. Basically, you should use CSS to set a (max-)height:\ncss\n.my-div {\n    max-height: 100px;\n}\nA callback option will be added in the next release:\nhttps://github.com/FrDH/jQuery.dotdotdot/issues/142. In the new release (3.1.0), you can now (once again) set a callback function and height option.\nCheck the documentation site for mor info:\nhttp://dotdotdot.frebsite.nl/#options. The documentation shows the default values.. What version of the plugin are you using?\nIs there an online example I could have a look at? I can't really do any debugging based on a screenshot.. Have you tried updating to v3.0?. Could you give 3.2.1 a try?. The after option was replaced with the keep option, please have a look at the documentation:\ndotdotdot.frebsite.nl\njQueries data method will only return the value for the first element in the jQuery collection.\nSo to restore only the third instance, try it like this:\n````js\n$(\".lol\").dotdotdot();\nvar API = $(\".lol\").last().data( \"dotdotdot\" );\nAPI.restore();\n````\nHope this helps.. Hi, thank you for the feedback. Having more detailed examples on the website is on the todo list.\nFor now, check index.html In the download pack, it has all three examples. The JS and CSS for those examples can be found in the source of index.html as well.\nHope this helps.. I can't seem to reproduce the issue, tested using \"index.html\" in the download pack on FireFox and Chrome.\nAre you using the latest version of the plugin?\nCould you provide an online example of the issue? For example using codepen?. Firing the plugin a second time will call the destroy method, which will reset the content to the original values.\nTry using the API to call the destroy method before changing the text:\n````js\n$('.ddd').dotdotdot();\nvar API = $('.ddd').data( \"dotdotdot\" );\n$('#btn').click(function () {\n   API.destroy();\n   $('.ddd').text('2. This is another test');\n   $('.ddd').dotdotdot();\n// I think you need to re-assign the API:\n   API = $('.ddd').data( \"dotdotdot\" );\n});\n. Sounds odd, I'll have to check.\nThank you for bringing it to my attention.. Should be fixed in 3.2.0\nCould you try?. The maxLength option was removed because it did not work properly. All it did was trim the text to a fixed number of characters:js\ntext.substr(0, options.maxLength);\nConsider trimming this text to 25 characters:html\nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor.\nIt would remove the `</strong>`, making all text below it appear bold:html\nLorem ipsum dolor\n````\n. A bit more information please? What error? Is there an online example?. Hi,\nThank you for reporting the issue.\nShould be fixed in 3.2.2. Makes sense, the plugin was designed to truncate vertically overflowing text. If you want to truncate text on a single line, I'd advice using CSS ellipsis.. Is there an online example?. Could you please try with the latest version? Although the logic itself didn't change, the plugin no longer needs jQuery and execution should be faster in vanilla js.. Thank you for reporting this, I have no idea why only 11.2007.14393.0 wouldn't work. Are there any errors in the console?. I think you'll need a polyfill for IE11:\nhttps://polyfill.io/v3/url-builder\nI'll add this information to the browser support section on the website.. Good question, the plugin uses gulp-umd for implementing the Universal Module Definition, not sure if that supports ES6 modules at all.. I think for now you'll need to manually remove the UMD pattern and replace it with an ES6 export:\nRemove this:\njs\n;(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.Dotdotdot = factory();\n  }\n}(this, function() {\nand the last two lines:\njs\nreturn Dotdotdot;\n}));\nAdd prepend var Dotdotdot with the export:\njs\nexport default var Dotdotdo\nI'll see if I can compile a seporate ES6 file in the next release.. Version 4.0.3 includes separated es6 and umd files.\nYou should be able to use the module like this:\njs\nimport Dotdotdot from \"./path/to/dotdotdot.es6.js\";\nnew Dotdotdot( element, {\n   // options\n});. Im not sure what \"appendExternalFile\" is, but is it asynchrone? If so, you should trigger the truncate API method in a callback (or use an async function). Setting the watch option to true should also work I guess.. is a bug. Thanks for reporting :). ",
    "jameswilson": "For anyone interested,  I've already patched another competitor's script (jquery.autoellipsis) to add this functionality (https://github.com/pvdspek/jquery.autoellipsis/pull/27).  The current drawback of jquery.autoellipsis, is that it doesn't support having an inline \"read more\" link added onto the end of the text, like jquery.dotdotdot does.\nIf I ever get some time, I'll try to figure out how the logic works in dotdotdot for applying the ellipses and see if I can get this working for this script too. from a quick glance, it looks like the work i did on jquery.autoellipsis is not really going to be portable to this script, because the ellipsis workflow is quite different.\n. I've confirmed it does work properly now... with an updated fiddle using 1.6.9\nhttp://jsfiddle.net/jwilson3/kBFBL/6/\n@FrDH,  Thank you very much for this fix!\n. +1,  but just curious where are you seeing that bower will be replaced by npm?\n. Would be nice to see this setup in a jsbin or codepen.\n. Yup. This should be a configuration option, though (as stated in my other comment on PR #104,  its not entirely clear how to expose that configuration, because it highly depends on the content you're trimming.\n. I wonder if there is some fast heuristic way to detect the \"average unicode range\" of the entire string being trimmed,  or maybe come up with some magic ratio of the number of spaces in the string compared to the length of the string that triggers whether to use a nbsp or a plain breaking whitespace.\n. Patch looks good.  One question, does the AMD/CJS compatibility require the switch from \\t indentations to double-space indentation?  If not, seems like that should be a separate issue/request.\n. sanity++   And I agree, that I usually code with 2 spaces, not tabs, but I also know that the jQuery Style Guide dictates indentation with tabs, and lots of (unnecessary) filler whitespace around many language constructs.  Oh well. \n. I think it might actually be the other way around.  In most cases all words are bunched together with no spaces,  so your CSS should already be taking this into account with proper wrapping. now, if you happen to have a space character most browsers will automatically fall back to their \u201cnatural\u201d way of breaking lines by looking for a whitespace character first, which is probably not what the designer intends to happen in Japanese.\n\nOn Mar 3, 2016, at 7:13 AM, Fred Heusschen notifications@github.com wrote:\nwouldn't replacing a standard space with a non-breaking space break functionality on non-japanese text?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/BeSite/jQuery.dotdotdot/pull/104#issuecomment-191728520.\n. Bah.  you said non-japanese  my bad, mis-read your question, and agree that you\u2019re correct.  The whitespace character needs to be a per-language configuration option. It\u2019s not an easy problem to solve if you have content in multiple languages on the same page or even in the same paragraphs. Even if the \u201cmajority\u201d of your content is CKJ interspersed with a few English words here and there, it\u2019s hard to make a clear-cut answer to whether you want non-breaking spaces or breaking spaces.\nOn Mar 7, 2016, at 3:17 PM, James Wilson jrwilson3@gmail.com wrote:\nI think it might actually be the other way around.  In most cases all words are bunched together with no spaces,  so your CSS should already be taking this into account with proper wrapping. now, if you happen to have a space character most browsers will automatically fall back to their \u201cnatural\u201d way of breaking lines by looking for a whitespace character first, which is probably not what the designer intends to happen in Japanese.\n\nOn Mar 3, 2016, at 7:13 AM, Fred Heusschen notifications@github.com> wrote:\nwouldn't replacing a standard space with a non-breaking space break functionality on non-japanese text?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/BeSite/jQuery.dotdotdot/pull/104#issuecomment-191728520.\n. @renoiv  check out what we're doing on TripAdvisor\n\n\nhttps://www.tripadvisor.jp/TripAdvisorInsights\nCompare with english version: https://www.tripadvisor.com/TripAdvisorInsights\nThe white text on the blue slideshow captions as well as the article title links in the card / grid layout below use dotdotdot.  We mix English works and Japanese words mixed together and use CSS tricks like word-wrap to control whitespace / wrapping, etc.\nMaybe this will help you?  Not sure.\n. :+1: \n. ",
    "newpen": "There is a problem if there is a empty space before the CJK characters\nhttp://jsfiddle.net/x7zgygx6/9/\n. ",
    "loveLibra": "$el.dotdotdot({\n    wrap: 'letter'\n});\nThe code may solute the problem of text intercept when using CJK  with space in\n. ",
    "coolheinze": "Yeah, well not putting script tags in would ... avoid the problem. ;o) The thing is that when you build web apps using Ember, you use automagic update of the content quite extensively - it's one of the cardinal features of Ember. To be able to use it dynamically along with dotdotdot would be so abso-enthusiastic tmesis-lutely awesome! :o) The script tags are inserted automatically by Ember (metamorph), though, so AFAIK, you can't not put them in there or put them somewhere else. Thus, stripping the script tags quite effectively kills Ember's \"automagicality\"...\n. Well, obviously we can't have the script firing away like that. However, if you check out my fiddle, you'll see that the script tags are actually empty. I.e. they contain no code that can be fired several times. So, \"why have the tags at all?\"  you may well ask. The answer is very simple: Metamorph uses the tags' attributes to figure out where to output bound values (note: for the immediate purposes, this only makes sense for one-way bindings). Ergo: removing the tags causes Metamorph to utter \"What the f...??\" (or the rhetorical equivalent of an error message).\nI think, by now it's time to answer your question, and the short answer is \"no\". A longer answer would be \"no, and please don't make me\". You see, when binding values to the DOM, Metamorph adds these tags, so in order to do that, you would have to add the HTML with the DIV to the value that you want to bind to the DOM, which in countless ways will screw up your code.\nSo all in all, I think it would make sense to just ignore script tags to begin with - it doesn't make much sense to remove them anyway, as they don't take up space in the text - and just have them fire. After all, it's the developer's responsibility to keep stray script code out of dotdotdot's way. In that way, Metamorph should - knock on wood - work neatly.\nAt a (much) later stage, an actual integration with Metamorph or Ember could be quite interesting. I imagine, it could be a feature, you could add to a binding... Sweet...\n. That's awesome. If this works with Ember...! :o)\nI can't really think of any, no. Just script tags, and I'm a happy bunny. The reason, I figured, it would make sense to ignore script, is that it doesn't take up any physical space like the letters do, and therefore doesn't influence the layout. Can't think of other tags with that feat ATM. Though it has been a long day, so bear with me... ;o)\n. ",
    "jim-at-miramontes": "Nice!\n. ",
    "niyazpk": "+1\nI have not looked at the code, but this patch fixes the issue I had with only the first child being displayed as well. Thanks!\n. Found an issue with this version: http://jsfiddle.net/2z6Xa/158/\nNotice how there is an extra \"...\" inside the read-more link. This issue is not present in master.\n. Yes, it did fix it. Thanks!\n. @FrDH  Is there any reason why this was closed without a merge?\n. ",
    "pwlmaciejewski": "Thanks @niyazpk! The latest commit should fix it.\n. Bump\n. Thanks @niyazpk! @BeSite can we merge it to master?\n. @FrDH This one is unfixed: http://jsfiddle.net/DjNXB/ . When you comment the \"after\" option it truncates text correctly,\n. @avkash4n4u Could you test it with code from #15? I looks like it's the same bug.\n. ",
    "rwky": ":+1: \n. ",
    "Colir": "i've the same probleme.\nWhen using modified version, it turnthe truncate tag empty, but present...\nIs there a way to remove them ?\nthanks\n. ",
    "avkash4n4u": "@fragphace Wooohoo.. it works.. Thanks\n. ",
    "dondmcg": "Or how would I access the texts original content which I thought was orgContent but it seems this var keeps updating with the truncated text.\n$('#dot1').dotdotdot({\n                    callback    : function( isTruncated, orgContent ) { \n                        //console.log(orgContent);\n                        var self = $( this );\n                        var fulltext = orgContent;\n                        self.append('More');\n                        self.find('a.more').click( function(){\n                            var self = $( this );\n                            self.parent().html('').find('a.more').remove();\n                            revealFull();\n                        });\n                        function revealFull() {\n                            alert('reveal');\n                            self.html(fulltext);\n                        }\n                    }\n});\n. Nevermind I solved it by doing this:\nBut please let me know if this is convoluted.\n$('#dot1').dotdotdot({\n                    callback    : function( isTruncated, orgContent ) { \n                        var self = $( this );\n                        self.append('More').click( function(){\n                            var content = self.triggerHandler(\"originalContent\");\n                            self.html('').append(content).find('a.more').remove();\n                        });\n                    }\n                });\n. Or this, of course this snippet creates the \"read more\" text instead of having available already.:\n$('#dot1').dotdotdot({\n                    callback    : function( isTruncated, orgContent ) { \n                        var self = $( this );\n                        self.append('More').click( function(){\n                            self.trigger(\"destroy\");\n                        });\n                    }\n                });\n. ",
    "qris": "The problem was introduced a few days ago by 7214d27bb977aec0ddeffb27648dd2fd9e02ee23. I can see that there might be a problem, if test() is not used to decide whether to insert the after element, but that fix cannot be correct.\n. ",
    "bobbotron": "How are you specifying your click behaviour?\nI've noticed a similar bug, might be the same thing.  I've been meaning to set up a jsfiddle and report a nice bug report here, but I haven't had the time yet.\nWe're using dotdotdot to shorten a link, with a read more link, so the HTML is something like \n<div class=\"ellipsis\">\n<a href=\"\u2026\">\nA long text link that needs shortening\n</a> \n<a class=\"readmore\" onclick=\"dosomething();\">\nRead more\n</a>\n</div>\nOn collapse, dotdodtdot reformats the DOM to look like:\n<div class=\"ellipsis\">\n<a href=\"\u2026\">A long \u2026 \n<a class=\"readmore\" onclick=\"dosomething();\">\nRead more\n</a>\n</a>\n</div>\n(This might not be exactly what's happening in our case, but it was something to this effect.)  \nWe have a work around in place that's fired as a callback (see below) - I had hoped to submit a pull request fix for this, but got lost debugging the dot dot dot code!  :)\nfunction hideLinkIfNoTruncation(isTruncated, origContent) {\n    if (!isTruncated) {\n        $('.readmore', this).remove();\n    }\n    else {\n        // fixes dotdotdot issue where collapsed html element is misordered\n        readmore = $('.readmore', this).detach();\n        $(readmore).find('a').text($('#more-text').text());\n        $(this).append(readmore);\n    }\n}\n. ",
    "feketegy": "My \"read more\" link is hidden by default in CSS (display:none), and if truncation happens it is shown automatically by dotdotdot.\nThere's no problem if I don't resize the window, but if I resize it, the event attached to the link doesn't fire. \nMy text is in a div element, I'm not embedding multiple links in each other.\nI guess it has to do something with watch : 'window' and how it is reattaching the read more link after the truncated text. \nMy read more link is a simple jQuery click event, I tried both versions with .click(function(){...) and also .on('click' ...) neither of it works after resize.\n. jQuery's .live() is deprecated in favor of .on(), I tried with .on() but it does not work.\n. Yep, that does make the difference. I tried and it works OK.\nSo the correct way to fire an event for read more links is:\nJavaScript\n$('.wrapper').on('click', 'a.readmore', function() {\n    // code here\n});\nBut I still think this should be filed as a bug.\n. ",
    "GabiSchaffzin": "Can you please change the documentation on your site, then? \nIt currently reads that the ellipsis property is:\n/* The HTML to add as ellipsis. */\nShould be\n/* The text (no HTML) to add as ellipsis. */\n. ",
    "trinzia": "Got it to work in a button.  Do not place a div or span inside the button.  Code as follows:\n```\n\n    Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n\n\n(function($) {\n    $(\".truncate\").dotdotdot();\n    $(\".truncate\").click(function() {\n        alert(\"clicked\");\n    });\n})(jQuery);\n\n```\n. ",
    "mrdziuban": "An additional change that decreased CPU usage to 30% was to change the interval in the setInterval to 300 milliseconds, instead of the 100 that it is now. I didn't include this change since it has an effect (although a very small one) on the functionality of the plugin. Filtering by visible elements doesn't affect functionality, just improves performance.\n. ",
    "Booyanach": "You can set it as taken care of, the problem was the jQuery version ( we were still with 1.4.4 ), after updating to the latest it's working now. Thanks for the quick reply tho.\n. ",
    "CupOfTea696": "I have the same bug, it is also present in version 1.6.14. You can see it happening in two of the paragraphs on http://svenwittevrongel.mctantwerpen.kdg.be/kns/design/news.html\n. I execute dotdotdot on a div, so that already has display: block;\n. One of the versions of the fragphace fork has a bugfix for this. I'm not sure which version I downloaded to make it work because I think I might have tried two from that fork. anyway you can click through from here https://github.com/BeSite/jQuery.dotdotdot/network\n. ",
    "lsterling03": "Me too. If the text doesn't need to be truncated, it's being wiped out completely. For me, text loads fine on page load. But then if I go to another page and then go back to the same page, it gets wiped out completely. This happens whether I click a link back to the page, manually type in the URL, or whether I use the back button on my browser. If I refresh the page, then the text appears again. But then, if I go to another page and come back, text is gone again.\nThis makes no sense to me.\nIf, however, the text is long enough that it NEEDS to be truncated, it's fine. I can leave the page and come back and it's still there.\n. Here's an example of what's happening for me:\nEXAMPLE 1\nOn page load: The caption is short enough that it doesn't need to be truncated:\n\nGo to new page, then come back to this page, and now the caption is gone:\n\nEXAMPLE 2\nNow, I made the caption a little longer. Still doesn't need to be truncated, but it goes to a second line, which is still short enough that it doesn't need to be truncated. Here's page load:\n\nGo to another page, then come back. Now the caption is truncated unnecessarily, but at least it is still there:\n\nHope this helps to clarify the issue. \nHere is my CSS on that text div:\n.excerpt { max-height:45px }\nAnd here is my dotdotdot initialization:\n$(function() {\n    $('.excerpt').dotdotdot({\n        watch: 'window'\n    });\n});\n. Well, after typing all that out, I realized something. For me, I solved the issue by putting display:block on the css for .excerpt. It was a span tag, so it needed the block designation to behave properly. Feel a little stupid now, but leaving this up in case it helps anyone else. \n. Coming back to say this issue is still happening for me too. In my case, it happens when I shrink or expand the browser to see the different responsive viewports. If I change from widescreen to skinny, sometimes the text disappears, even though I've verified that the height of the text divs are tall enough at each viewport to show the text.\nLooks like the developer isn't active. Anyone else come up with a solution? I've tried the solution in the fork above, but that didn't solve it for me.\n. ",
    "justinperkins": "My elements that I'm having trouble with are already dislplay:block\n. ",
    "marycourtland": "I'm also seeing it a similar bug. Here's an example: http://jsfiddle.net/W85fL/1\nIn this particular example, it also seems to be related to the \"after\" element which is placed right after the ellipsis.\n. ",
    "orzechow": "I have this issue too. Actually I have multiple paragraphs in a div container. I run dotdotdot on this div and in some cases all paragraphs except the first will be removed even though there is enough space for at least one more paragraph. Neither an ellipsis is added nor my \"after\" element preserved.\n. ",
    "rbhalla": "For those struggling to find a solution, a quick (extremely hacky) fix is to run the it dotdotdot again. For some reason this makes all the text reappear.\n. ",
    "cina2012": "this is resolved by:\n.thumbnail > img,\n    .thumbnail a > img {\n        display: inherit;\n         }\n. ",
    "joahua": "Fair enough, that's the library name afterall! :)\n. ",
    "janscas": "This happens to me also.\nSimply put some divs with display none then in document ready set them to show and then do the dotdotdot on some divs with text inside those parent divs.\n. ",
    "glenatron": "I see the same issue in 6.16 - seems as though when ellipsis is called it simply detaches everything in the #dotdotdot container that it has created, then only adds back a couple of elements ( possibly only the ones that are not truncated ) but it has dropped everything with any content. \nAt the start of an ellipsis call $('.dotdotdot')[0].innerHTML looks like this:\n<div class=\"dotdotdot\">\n    <a class=\"media-left\" href=\"http://www.bing.com\">\n      <div class=\"well tile\" style=\"background-color:darkmagenta\"><span class=\"icomoon-windows8 large-64\" style=\"text-align:center\"></span></div>\n    </a>\n    <div class=\"media-body\">\n        <h4 class=\"media-heading\">sunt aut facere repellat provident occaecati excepturi optio reprehenderit</h4>\n    quia et suscipit suscipit recusandae consequuntur expedita et cum\n    reprehenderit molestiae ut ut quas totam\n    nostrum rerum est autem sunt rem eveniet architecto\n    </div>\n    </div>\nAfter the ellipsis call it looks like this:\n<div class=\"dotdotdot\">\n      <a class=\"media-left\" href=\"http://www.bing.com\"><div class=\"well tile\" style=\"background-color:darkmagenta\"></div></a>\n </div>\n. Alright, in my case it was because one of the elements there was a pixel higher than the container, so every subsequent element got stripped out. Understanding that dotdotdotis using a height comparison between container and contained did the trick for me.\n. ",
    "icambron": "@FrDH You're welcome.\nJQuery does distribute the license with the software. You can see it here: https://github.com/jquery/jquery/blob/master/MIT-LICENSE.txt. In fact, the one of the rules in the license is that others have to distribute the license with the software (\"The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\") So it's a little awkward not to provide it.\nOn dual licensing, you can of course do what you want, but the normal reason to dual license is either to ensure compatibility with GPL software (if the other license isn't compatible) or to have a commercial ($$) and a restrictive open-source license, so you can enjoy the benefits of open source without losing opportunities to make money from other people commercializing your software. Since neither of these apply here, it's not really useful. But I suppose it doesn't hurt anything.\nI hope that helps, and I'll leave you alone now :)\n. ",
    "megapctr": "This resolved my issue. Thanks!\n. ",
    "skiano": "Thanks for the response!\n. ",
    "bendavis78": "This occurs for me on both Chrome and FireFox in linux, however it might not occur in other operating systems.  Here's a screenshot of how the fiddle looks for me: \n\n. ",
    "akalinovskiy": "Hi All!\nI've faced with such issue too. \nJust replace 'h1' on 'p'.\nAlso there aren't any errors in the console\nFF (on OSX):\n\n. Guess i got it.\nThis happens because <p>text</p><a>readmore</a> and <p>text<a>readmore</a></p> do not have the same height. \nIn that case the algo gets second <p> (Lorem ipsum dolor...) and decide to truncate it. But inside next recursive call of ellipsis the height is smaller and truncating is not needed. \nThen the entire paragraph is deleted\nif ( !isTruncated )\n{\n    $e.detach();\n    isTruncated = true;\n}\n. I've created a pull request - https://github.com/BeSite/jQuery.dotdotdot/pull/46\nHIH\n. @justinjams Hm, we use ellipsis option as well...could you give an example?\nhttp://jsfiddle.net/akalinovskiy/hckntjx1/2/\n. Yes, it seems my changes doesn't take into account that case.\n. ",
    "paulmason": "I'm also having this issue with the latest version of Chrome and there aren't any console errors.\n. ",
    "jonchay": "I'm having this issue as well. Any quick fixes?\n. ",
    "fejesjoco": "In my case, there could be long texts only, or lists embedded in texts, and even the lists may contain long texts, so I don't think the workaround will work in this case.\n. ",
    "davidhtien": "Ok thanks!\nOn Fri, Aug 1, 2014 at 12:42 PM, Fred Heusschen notifications@github.com\nwrote:\n\nPixels.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/BeSite/jQuery.dotdotdot/issues/45#issuecomment-50926415\n.\n\n\nPraise the Lord\n- David Tien\n. ",
    "velocirabbit": "Would it be possible to set the max height in line units? So:\nheight : 4 lines\nor something like that.\n. ",
    "justinjams": "@akalinovskiy I'm finding this solution works very well, except that it doesn't seem to respect the ellipsis option. The text is shortened, after included, but no ellipsis between them. Any idea why this might be happening?\n. @akalinovskiy First of all... thank you for getting back to me so quickly! You are awesome!\nHere's an example using your suggested changes that displays the behavior I'm seeing: http://jsfiddle.net/9zh6nfhg/1/.\n. Ah, I guess that's due to the fact it's not trimming the remaining element. Adding a space to the front of the read more link will be a suitable solution for me for now.\n. ",
    "jdlich": "@akalinovskiy Thanks for this fix, saved me a headache! :)\n. ",
    "daigo75": "I think it would be better if it could be HTML. Is there a need to avoid HTML?\n. ",
    "ImBobby": "Tried to reproduce @Jerrik's issue. adding a to line 344 doesn't solve the issue. \nHere's the screenshot.\n\n. I have confirm that it works on either IE7 and IE8, great! This info might be useful for other devs so please consider to add browsers support section in the readme file.\n. ",
    "Jerrik": "Sorry for the delay. Your fix did solve the issue of nested anchoring. I added anchor tag var notx.\nTested on the demo file.\n. It would be good to add this to the demo.\nI am using Example dot5 with dynamic text. When there is no need for \"read more\" this will remove it.\nif( !$dot5.triggerHandler( \"isTruncated.dot\" )){\n     $('a.toggle').remove();\n}\n. ",
    "sciascia": "Thanks mate, the way we're doing it is all a bit hacky - sorry for bothering you.\nCheers\n. ",
    "till": ":+1: Would be very much appreciated!\n. I wouldn't want to start an argument on npm vs. bower. I would just hope this PR makes it in so people can use either down the road.\n. @FrDH No comment? :( \n. @FrDH ah, didn't see that. Well thank you very much for adding that. Any idea when you will publish a release? Or is there anything I could contribute to streamline the process? :)\n. 1. Need an account on https://npmjs.com\n2. You need to run npm publish inside the directory\nVersion in package.json should be what the package is published with.\n. @FrDH let me know if you have any questions! :)\n. ",
    "rnicholus": "Bower is little more than a method to download a github repo. NPM is a far more robust package manager. Going forward, I see no reason to publish to bower. It will be \"replaced\" when developers realize this and stop using it. \n. This project appears to be dead, so I wouldn't count on it. The simplest solution would be for someone else to publish this to npm.\n. Have you published to npm?\nOn Thu, May 21, 2015 at 4:56 PM, Fred Heusschen notifications@github.com\nwrote:\n\nI honestly have no idea. Do I need to do anything else?\nReply to this email directly or view it on GitHub:\nhttps://github.com/BeSite/jQuery.dotdotdot/pull/54#issuecomment-104433230\n. \n",
    "pivotal-vanguard": "@FrDH - If you are interested in keeping npm up-to-date (very simple), just create an http://npmjs.com account and just npm publish your package. Since you have already created a package.json, you should be good to go.\n@FrDH - If you are not interested in maintaining npm, maybe @ws-malysheva would be willing to help maintain it? The npm package dotdotdot is currently maintained by @ws-malysheva but is out-of-date (contains the 1.7.0 source).\n. ",
    "jordanmkoncz": "Okay so after some further testing, I think I've found what causes this to occur.\nThe text content that this was happening for was a div that I wanted dotdotdot to truncate such that it's always a single line of text. In Chrome, the height of this div is 27px, so to achieve what I wanted, I had set height: 27px on the div that contains this text content.\nNow when I zoom to 75% in Chrome, Chrome believes the height of this same div is actually 28px rather than 27px. Then, the dotdotdot plugin truncates the content to nothing, presumably because it thinks the content is too big to fit in the div as a single line due to the height property of the div being manually set to 27px, but the height of the content actually being 28px at the 75% zoom level.\n. ",
    "JuanDaniel": "Tanks you, with your tip i solved the problem.\nRegards!!\n. ",
    "bolshchikov": "@cameronprattedwards, you can set a css property word-break on your p tag, and no need in br tags, or just remove them before applying plugin.\n. ",
    "rogerbinns": "Different expectations then!  I'm concerned with the case of expanding the container so all text is visible, and going back again to the original size.  This requires some bookkeeping as well as sizing the expanded version correctly.\n. Thank you.  I am trying to adapt it now.  In my case I have many photo thumbnails on a page, some with (long) captions so I have to make it work across all of them on the page, not just one item.\n. I've got it working, after adapting the javascript to multiple elements.  It took a bit longer to work out the CSS that is needed too.  (I also had a max-height on the caption so that had to be set to none for opened.)   Thank you for doing this and the awesome library.  I consider the issue complete.\n. There is one remaining problem which is when the text is sufficiently short that it doesn't need an ellipsis at all.  For example if you edit the index.html and change dot5 text to just be \"Lorem Ipsem\".  Responsive layouts make this more complicated since things can change at any time.\nI've tried to use the isTruncated trigger with the intention of only adding the +/- to captions that get that.  However I have been unable to get the trigger to fire.  It is also unclear from the doc if it is \"isTruncated\" or \"isTruncated.dot\", but neither worked for me.\n. I apologise but I can't get this working, mainly due to not understanding exactly how this is supposed to work. Note that I have multiple items on the page (photo captions) so I do need to know specifically which ones have been truncated.  Replace $(\"#foo\") with $(\".caption\") to see where I am starting from.  Will keep trying.\n. Thank you - that helps a lot.  The code is creating a closure per item.  The normal jquery pattern is this or a parameter in callbacks, so you know which item was affected.  I was trying to make it work the latter way and failing :-)\n. No matter what I try I cannot get this work.  I can get some combination of things working each try, but never every needed piece at the same time.  I'm giving up trying to make it work as it has taken far too much time.  Thank you for your assistance.\n. ",
    "catmando": "BTW... I DID NOT PROVIDE AN UPDATED MINIMIZED SCRIPT.... sorry\n. ",
    "BeSite": "Good fix, thanks!\nI'll pull, minify and release a new version later on.\n. ",
    "gpetrioli": "+1, I am having the same problem. \nAn alternative (for the plugin) can be found at http://stackoverflow.com/questions/5747523/cross-browser-solution-for-checking-if-a-javascript-object-is-an-html-element\n(or state that it does not support IE8)\n. I have create a pull request that fixes the issue. \nChecking for existence of nodeType and that its value is 1 is a crossbrowser way to detect it.\n. ",
    "saiichihashimoto": "Cool! I'm looking forward to this issue getting closed.\n. ",
    "alexkilgour": "this isn't fixed\n. demo: http://codepen.io/howlingmad/pen/vOeoGd\n. There seems to be a \"sweet spot\" where this fails to work properly. In this example, with a read more link. the ellipsis and the link are inserted inside another link\nhttp://codepen.io/howlingmad/pen/vOeoWa\n. There is no after element in the first example, and the ellipsis still appears inside the link. I will try and dig into it a bit and see if I can work out the issue.\n. ",
    "rob006": "http://salenauts.com/\n. Here you can find demo with this bug (dot3): https://github.com/rob006/jQuery.dotdotdot/blob/master/index.html\nIt looks like problem is putting more link inside <p> tag.\n. I need to handle multiple <p> tags in lead, so I can't use any of those solutions. \nAnyway, when I put more-link outside <p> tag, after initialisation it is moved inside <p> tag, so the DOM HTML looks exactly the same as in bugged demo file, but after window resize everything works fine. \nAlso this line looks suspicious: https://github.com/BeSite/jQuery.dotdotdot/blob/master/src/js/jquery.dotdotdot.js#L396 - why after is detached if element is not truncated?\n. ",
    "hellsingblack": "no errors appear... when reload the page it work normally, but when I tried to update the content this callback never call even if I tried with triggerHandler. \nvar isTruncated = $(sectionSelector).triggerHandler(\"isTruncated\");\nisTruncated is undefined\n. ",
    "matthewferry": "+1\n. Yep upgrading to master seemed to fixed it, thanks! Might want to close this issue?\n. ",
    "radicalsauce": "+1 - we're having the exact same issue. @FrDH - any insight?\n. ",
    "MathieuLescure": "The version 1.7.3 fixed the issue for me. Thank you for the library and the bug fix.\n. ",
    "tadywankenobi": "Sweet man, thanks. That whole JS blocking functions thing catches me out time and time again. You'd think I'd have learned. Added it to the $.ajax success method and it's working now.\nThanks again!\n. ",
    "KDCinfo": "I just found my test conditions need to be narrowed down for FireFox and other browsers/devices. The below doesn't work directly on FireFox (it removes the entire text on even the longer text strings).\nThe following is using Chrome emulator iPhone 6. In troubleshooting this, I'm using some generic <span> tags so I can focus on just working and non-working text blocks. For the following, it only removes the text from within the first <span>. It truncates the second <span> tag correctly.\n<span class=\"item-title-test\">59 12345 67890 12345 67890 12345 67890 12345 67890xx xx xxx</span>\n<span class=\"item-title-test\">60 12345 67890 12345 67890 12345 67890 12345 67890xx xx xxxx</span>\nExecuted in the Chrome debugger console:\n$('.item-title-test').dotdotdot();\nThanks.\nP.S. Looks like my FireFox has a breaking point of 84 characters (lines 81-83 get stripped, while >=84 truncate properly).\n81 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 xxx xx\n82 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 xxx xxx\n83 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 xxx xxxx\n84 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 xxx\n85 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 xxxx\n86 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 xxxxx\n87 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 67890 12345 xxxxxx\n. That's a really good suggestion, @jameswilson ... Perhaps that will help to expose if there is a setup issue on our side. I've started setting it up (a codepen stub), but will need to continue looking into it deeper, as I don't have my work code with me. Will post with any updates when I can. Thanks again.\n. Well, I tried creating both a CodePen and jsFiddle stub, but neither are executing the dotdotdot. I'm new to both of these, so unsure if I may be doing something wrong or missing something.\nCodePen: http://codepen.io/KeithDC/pen/aOBKzB/\njsFiddle: http://jsfiddle.net/KeithDC/pxa9gmkd/1/\n. ",
    "Batmensch": "That's why I asked for some way to debug.  I don't know why isTruncated isn't firing.  It works in other contexts.\n. No multiple divs.  And besides, even if there were, I'd get at least one console log entry anyway, wouldn't I?  And there's nothing.\n. ",
    "randomnuggets": "Try this:\nhttp://codepen.io/anon/pen/doVdBo\nAll the text within the div vanishes when the browser window width is greater than 534px.\n. ",
    "jtag05": "I'm also experiencing this issue. Has any progress been made for a workaround, or a solution implemented in the library?\n. I've done a little testing and find this is directly related to using the 'after' attribute in the config object.\n. I have more or less traced it to a single block of code that decides if you use the .after() or .append() methods to add the 'after' element (line: 376). \nThe issue only occurs when the end of a  element coincides with the designated height for plugin.\nI haven't had time to test further and simply did a .replace() on the content before initializing the plugin as a workaround. \nMy thinking is leaning in the direction that the append() method is being called on the wrong element, somehow causing the bug to occur.\n. ",
    "AlexanderLea": "Hi - I'm also experiencing this issue. Is there any suggestion/progress on a fix for this? I'd like to keep the styling of paragraphs intact, so I'd rather not remove them. \nThis also appears to be an issue if you replace the <p>s with <span>s and use any kind of new line styling float:left;clear:left; or display:block.\n. ",
    "dhunnapotha": "I hope this pull request fixes the issue. \n. can you post a jsfiddle? i can check it out.\n. ",
    "rvalitov": "Seems that it was fixed. The issue can be closed, I guess. The documentation seems outdated, some update required.\n. Dear all,\njust a little comment about the importance of the functionality. Using CSS is just for usability. The main useful point here is the ability to activate dotdotdot on window.load event. I faced a problem when using complex responsive design with modules that automatically reposition and resize themselves makes it impossible for the dotdotdot to correctly calculate the height. Of course, there's a trick with height parameter that you can put it to a function (you can't use a number, because it can't be defined for the responsive design when the height changes dynamically), but it's a more complicated approach. What I suggest works more simple for the end-user, I guess:)\n. Merged with last version of jQuery.dotdotdot, no merge conflicts anymore.\n. Thank you for the update! It seems I missed something here))\nIsn't it better to replace indexOf to lastIndexOf and remove the quotes and exclamation mark? Like this:\n$.each(classList, function(index, item) {\n        if (item.match(/^dot\\-height\\-\\d+$/)) {\n            height=Number(item.substr(item.lastIndexOf('-')+1));\n        }\n    });\n. Sorry guys. It was my typo, didn't notice it. Thank you for being attentive! )\n. Agree\n. Duplicate of #111 \n. Thank you for your contribution! But I think that your correction is still not complete and probably adds some more confusion. The idea of using the watch parameter is to update the text (ellipsis) when resize of the container occurs. There are 2 ways to achieve this:\n1. dot-resize-update which is equivalent to option watch:'window'. In this case the text is updated when window is resized. But sometimes the size of container may change even when the window size has been fixed. For example, this may happen if you add or modify the HTML dynamically using JS. To monitor this situation another parameter was added (see below).\n2. dot-timer-update which is equivalent to option watch:'true'. It monitors if the size of the text container changes.\nI think the end user doesn't need to know what functions are used in each of the cases above. In one approach there's a call to setInterval function, in another - setTimeout. But naming the functions doesn't explain the logic, and I think the names should be omitted from the documentation. So, I think that your pull request in its current state should not be merged.\n. Thank you for your contribution. However, it's very difficult to read the diff of your commits. Did you reformatted the files with your own line offsets (tabs/spaces) or line endings?. Thank you, but still your push request contains the old commits with customized tabs/spaces. It means that your push request will overwrite the whole project. Can you please remove invalid commits and leave only necessary? As far as I understand your idea is to change 1 line of code:\nphp\nreturn ($i.innerHeight() > o.maxHeight || (o.maxLength && $i.text().trim().length > o.maxLength));\ninstead of\nphp\nreturn ($i.innerHeight() > o.maxHeight || (o.maxLength && $i.text().length > o.maxLength));\nIs it correct?. Hi! If we cache the width and height, then it will be static and will not change even after window is resized?. ",
    "h-hub": "I did. But it is not working.\n. ",
    "Emnalyeriar": "I have a similar problem. I have a wrapper with display table and inside two divs with display table-cell so I can use vertical align middle. As you said text inside table-cell remains unchanged. Did you find a solution to this?\n. ",
    "mradzinski": "Not really. If I remember correctly I wrapped the cell content (which it was a simple paragraph block) in a span block and it didn't work. Didn't find a solution so I actually had to move on and give up on this.\n. ",
    "dawidk92": "That was my mistake. It's working! :) Sorry for opening issue\n. ",
    "noirbizarre": "Hi !\nAny reason not to merge this ?\n. +1\nThis pull-request #83 should remove some warnings too.\n. Hi !\nAny plan to release to NPM ?\nRight now, it does not allow us to properly use jQuery.dotdotdot from Browserify or Webpack.\n. ",
    "a-ursino": "+1\n. ",
    "gil": "+1\nI've tried installing directly from your repo, but there are some invalid characters (+) on your package.json: https://github.com/BeSite/jQuery.dotdotdot/blob/5b31f5b6971724c8304ef2c956ad9ebdf4e2a7ca/package.json#L7-L9\n. ",
    "GeekSMN": "I\u2019ve discovered that using \u201cword-wrap: break-word\u201d to the CSS for the containing element gets the overly large string to truncate and have an ellipsis. I don\u2019t know if this is intentional behavior or just a work around.\n. Just to clarify using break-word causes other problems if you're trying specifically to truncate and use ellipsis rather than break in the middle of words.\n. ",
    "buruzaemon": "Adding in the Tiny Segmenter so that we can deal with Ja text properly.\n. ",
    "HugoArts": "Using a Unicode ellipsis character works for me if I escape it:\njavascript\n$('div.wrapper').dotdotdot({ ellipsis: '\\u2026 ' });\nHowever, in general I strongly believe that using &hellip; or an actual unicode ellipsis character should be the default. A proper ellipsis can't be replaced by 3 periods, the spacing is wrong.\n. ",
    "jpotterm": ":+1: \n. @FrDH Why did you close this? It doesn't look like this has been fixed in master. Is this something you disagree with? &hellip; should definitely be the default. There's no reason ever to use three periods as an ellipsis.\n. ",
    "davidosomething": "+1 @BeSite can you merge this and republish?\n. ",
    "jonscottclark": "How the first commit got through is beyond me. Please merge...\n. Already covered by https://github.com/BeSite/jQuery.dotdotdot/pull/98\n. You're right, the indentation change was totally opinionated. I've added another commit to go back to the original indentation.\n. Going to separate these into multiple PRs.. getting really polluted now and won't be able to easily merge others' PRs if this goes through.\n. FWIW, there are places where patches have been inserted where there are tabs instead of spaces, and double quotes instead of single quotes, presumably because the maintainers aren't preparing releases... so I just went ahead and did a wholesale beautify on the file for my own sanity.\n. Yeah, oh well.\nThe recent PR merge-fest seemed to lack any consideration, so I had to step back, for sanity, again. Maybe I'll try and submit more PRs to clean it up some more.. but not prioritizing it :sob: \n. @FrDH are you a maintainer here? ping!\n. ",
    "malyusha": "please, merge this fix. had the same problem and I had to fix the source...\n. ",
    "oikwsat": "+1\n. I'm sorrry for late response..\n\nIn most cases all words are bunched together with no spaces, so your CSS should already be taking\nthis into account with proper wrapping. \n\nYes, my problem is this.\nIn Japanese, space as delimiter is not used often.\nfor example) This is a difficult problem. = \u3053\u308c\u306f\u96e3\u3057\u3044\u554f\u984c\u3067\u3059\u3002\nSo, In the case of Japanese, to the basis of the Space it is not a good way.\nHowever, my solution is not a good way.\nAnd I don't have solution yet.\nThank you for the time.\n. ",
    "shmax": "@FrDH Please review!\n. Just realized that jquery.dotdotdot.min.umd.js already has the amd functionality. Will update my PR to only do the comment fix...\n. Hmm, well then it's doing something that is architecturally unsound at best, and causing an exception for requireJs users at worst. First, a plugin shouldn't do any work until I tell it to. If it needs to parse the dom for classes, then it should only do so once I've invoked it--it shouldn't happen at include time. ~~And even if it should do this, you're acting on a potentially undefined variable. Remember that for people like myself, who are including this plugin via requirejs, the jQuery variable won't be available until after we hear back from the call to define.~~ \nScratch that--looks like your UMD gulp task is wrapping everything up properly; the exception is happening because jQuery isn't found when doing the define call, and this is related to the matter of the wrong case for \"jQuery\" in your gulpfile.\nSomething tells me I'm not going to be able to convince you to remove the \"automatic parsing\" stuff, but I may do another PR with just the case fix a bit later.\nThanks much!\n. ",
    "SquidEpps": "Well, this code now looks valid, but I personally prefer the regexp way. We can check the string and get the height value in one step and don't need additionally call lastIndexOf and substr.\nBTW, although that isn't a mistake, but you don't need to escape -.\n. ",
    "jolidog": "@FrDH ready to merge, simple enough to review. \ud83d\udc4d \n. Looks good. @FrDH this should me merged :)\n. ",
    "Scritik": "Yes, it should be merged. This fix is important since JQuery 3.0!\n. ",
    "vernondegoede": "Looks like this change is only present in the development version of this plugin. This doesn't make make sense to me. Shouldn't every source file contain the same functionality? \n. ",
    "ruiann": "or console will said: jquery.js:9612 Uncaught TypeError: url.indexOf is not a function\n. @FrDH \n. ",
    "jdcl32": "Yes, i formatted the files. At that time i had the tab settings set to 2 spaces, i changed to 4 and pushed the changes, can you tell me if is easier to read now?. ",
    "jsilvax": "It's cached locally inside the $window.bind('resize.dot') callback function, so when it gets executed on resize it will cache the new width and height values to the currentWwidth, currentWheight variables every time.. ",
    "bobisum": "Can someone please merge that fix? The plugin isn't really doing it's job with the current version. It will be a relief if I don't need to find a different one and change my project login.\nThanks.. ",
    "zhongdeliu": "Yes you are totally right.\nIn fact for me it wasn't clear where the $ should come from. But I read now, that jquery passes itself into ready handlers. Interesting fact....\n. ",
    "derwaldgeist": "Any chance to get this integrated? I had to upgrade jQuery which broke this fine package.. ",
    "juek": "Works initally but doesn't play well with watch:'window' when available space increases. \nYet no clue why it doesn't.  . ",
    "piaNINo4kA": "Yes, sure\nRight now i found it even in chrome\nRandomly. In safari you should just reload the page\nhttp://markup.com.dev11.vintagedev.com.ua/SmartAgreements/02_Legal-areas.html\n. ",
    "RudeySH": "That error is the same error that was fixed with #134, so this is probably fixed too.. Even though watch: true works, I'd like to keep using watch: 'window' because the truncate seems more responsive that way.\nI entirely missed the API section of the documentation, thanks for pointing that out! With API.truncate(), I can achieve what I want. I'll call it whenever my script makes the element visible.. Thanks!. I'm curious too. Right now I'm considering using 2.x, because the performance of 3.x seems to be much worse than 1.8.3. I'm wondering what I'll be missing out on.. Thanks!. Any thoughts on the pull request?. Sounds good!. Good to know that's how the truncate process works. I was using truncate: 'letter' instead of 'word', I can imagine 'letter' slows it down even more. There should be a better way of truncating though, but I'm not sure how. If I think of anything I'll be sure to submit a PR.\n\nI don't think the plugin does anything browser-specific\n\nCalculating widths and heights can lead to different results per browser, maybe the use of getComputedStyle is the culprit? But instead of guessing I'll do some investigation now.. I realized I was having two separate issues, one on my end which caused the difference between browsers.\nThe other issue is that max-height doesn't work with this plugin as expected. See #148.. Different browsers render fonts in different ways. What kind of difference are you seeing between browsers? If it's just a few words being trimmed that aren't trimmed in other browsers, it's probably not a bug, just a tiny inconvenience that can't be solved.. ",
    "Hinaser": "This PR is for issue #140 . ",
    "sectsect": "Great. It works fine :tada:\nThanks for quick response.. ",
    "AlbertRAR": "that's good, thanks!. Also it will be great if you define default values of options on site, now it is unclear, if user should add option parameter or it set by default.. ",
    "MonsAllyAlex": "it is version 2.0.0 @FrDH \nHere is the online example v2.tantannews.com/home. Not sure if you are still viewing this post, but can you help me on this bug? Please and thanks. Hi Fred,\nAfter reading your email, I checked the version of dotdotdot.js in our\nsystem. It is 3.0.2 at first and I updated it to 3.1.0 now, But, the\ntruncating Chinese word issue still exists. Here is the link to the\nwebsite: http://v2.tantannews.com/home. Thanks for replying my post and\nhope to hear good news from you soon about the issue.\nYours Sincerely,\nAlex\nOn Mon, Dec 11, 2017 at 10:39 PM, Fred Heusschen notifications@github.com\nwrote:\n\nHave you tried updating to v3.0?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/FrDH/jQuery.dotdotdot/issues/144#issuecomment-350742656,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AgSpf2fy32sKFanML1XC7h0__NmsF844ks5s_T6mgaJpZM4QleKI\n.\n. \n",
    "Vilial": "Confirm. Version 3.1.0\nisTruncated is false in some situations though the text actually was truncated. Though in my case the passed height was 300px and 4 paragraphs left after the truncation are 305px.\nIf I resize the window on this same page in order to slightly change the height of the text I get the correct behaviour.. ",
    "Px-Factor": "Issue seems to be resolved for me with version 3.2.1. ",
    "pirminis": "Thank you for replying \ud83d\udc4d \nIt just disappeared so quickly, had to use git bisect to find the commit that removed this option.\nI have no more questions!. ",
    "danielgc": "And not just a single line... Even in the case that all words fit in the container, the ellipsis is added:\nhttps://jsfiddle.net/ueabtf0c/. Yeah! Thx!!. ",
    "thomasbao12": "Awesome thanks!. ",
    "cherner": "From what I'm seeing it's an entire line that is being trimmed in Chrome but not in Firefox.. For what it's worth, on my #element-to-truncate element, I observe that it has the class ddd-truncated in Firefox, but not in Chrome. . Incoming.. ",
    "anki247": "I my case the version 3.x got worse and really slow\nversion 2.0.1 needs 55ms\nversion 3.2.2 needs 12.607ms\nfor the exact same text.... \ud83d\ude15 \nDemo:\nCodepen V2\nCodepen V3\nAdditionally the v3 ignores the height of the wrapper element, if multiple elements is selected (see the second section in codepen v3)\nBoth of them ignores the padding if you have list items.. @FrDH Do you need more info?. ",
    "Yakoot": "SCRIPT438: Object doesn't support property or method 'append'. ",
    "Safe-Mode": "\nGood question, the plugin uses gulp-umd for implementing the Universal Module Definition, not sure if that supports ES6 modules at all.\n\nEverything was fine when I used browserify to bundle js, so I had think if I'd be using commonjs plugin for rollup I'd be able to import it by es6 syntax. Probably I should use anything like umdjs plugin or I don't know what?. Would be nice). ",
    "schmidex": "maybe set \"main\": \"dist/dotdotdot.es6.js\" in package.json so that we could simply do\nimport Dotdotdot from \"dotdotdot-js\";\nOr would this break other things... sorry iam new to this.. ",
    "JimDutton": "I apologize. I should have referred to the JQuery .append() method, which I\nuse to add the external file to an HTML page. Most of the page loads, then\nin a separate column on the right, the HTML reaches the "
}