{
    "omab": "I've merged your pull request and slightly modified to make it work, results that oauth_verifier parameter must be passed and it wasn't.\nThanks for your work,\nMat\u00edas\n. It's a good idea indeed, I've left some comments on your changeset with some little improvements.\n. Improvements and documentation on custom User class definition.\nClosed by be463c854d66d84d609661294c3942393eaa85e9\n. I agree, it worths adding, but why would you import something from social_auth inside your user model and not use the related managers?\n. Pushed doc at https://github.com/omab/django-social-auth/commit/a5c397489f33fe92679cd24312cf17d0b6fa1b03\nThanks!\n. Improved user creation handling, closed by 219b5bbf52b47041d99f94389449201cad4f5794\n. Orkut authentication included, Closed by 8ef8f916dade38f298e3235a9c0e70f54db930cf\n. Orkut authentication pulled and added some improvements, also needed to use cherry-pick to pull changeset avoiding shout migration on your repo.\n. Association of multiple social credentials to single user account support, Closed by 3532953cdc62f4f084c36808d8f05e12ce7fb74a\n. Merged on https://github.com/omab/django-social-auth/commit/71e570dc8f3b6eb764ca7f67f9f611bb04b3ff4e\n. Merged properly.\n. Correct documentation, Closed by 5c6bf7b8e43d510af5c011ceb247af52be4d7faf\nThanks!\n. Please fix import, it should be django.utils.hashcompat instead of hashlib\n. Removed unneeded str() call. Closed by dfaf32117e0c0228e448799fd66bbc02c94b85f8\n. Fix doc variable value. Closed by 24a6e8285162e8362387ac8ad6740b38d37e1c41\n. Setup signal sender properly. Closed by 3703c1a509c6b4d4903955790f25458493929f2e\nThanks for the report.\n. Merged, thanks.\n. Remove username update, username is already generated and loaded in user instance. Closed by f42fc57dae0b2a44a73b80707573c99d81aaef9e\n. Small doc change. Closed by f0cb91b63a62144f1575c56393d3512368c151d1\n. It's fixed on https://github.com/omab/django-social-auth/commit/a6a5860430febee553cb77e924965ade0d5dcfb8\n. It's still reproducible?\n. The only way I could reproduce this one is disabling TWITTER_CONSUMER_KEY or TWITTER_CONSUMER_SECRET, check your settings please.\nTake a look to Twitter section on README.\n. Doc updated in https://github.com/omab/django-social-auth/commit/795f0c2962a664971d02d962a25c04bc5cfa70cb\n. Added backends module with contribs section and simpler way to add extra backends support. Closed by 7fba9e3414d32d48cd4e782caa958cd007362f90\n. Hi Rafael, thanks for you changesets, but seems that your repo is outdated corresponding to my current master, for example, we don't have a backends.py anymore :)\nThe issue fixed by https://github.com/orygens/django-social-auth/commit/444fbdd5e5474a9ecdfe20248c7c3fdd2e36d473 is already fixed on my mainline.\nI've fixed orkut keys issue on https://github.com/omab/django-social-auth/commit/668179b8a77a8b09bb20da1d2b3be05ce5c44347.\nI suggest you pull my changes soon.\nThanks anyway!\nMat\u00edas\n. I've merged the error code changeset, but don't think the slugged username has a place in the code, yet ;)\n. Merged [https://github.com/omab/django-social-auth/commit/7f62dc54882e8e9f6516590b4ab9be56d96bee6b].\nThanks!\n. Thanks for the updates, that could had drove me crazy debugging a non-bug. About the last update, seems that you are using google appengine, sadly I don't have experience running django there, so the issue you get might be a missing requirement to run the app there?\n. Hi,\nI think Facebook doesn't accept 127.0.0.1 as a redirect url config, instead what I do is setup myapp.com as redirect url and then edit my /etc/hosts file to map:\n127.0.0.1 myapp.com\nThis is just for testing purposes and should be changed to correct site URL once it's deployed, also helps to have a development Facebook app.\nI'll close the report because there's no bug on the app, but we can keep discussing it.\n. Done https://github.com/omab/django-social-auth/commit/5132bc246890c24d0da93a4163971fd19a995c68\nThanks!\n. Thanks for the kind words :D\nYeah, spread the word, that will make this app even better.\nThanks,\nMat\u00edas\n. Makes sense to add such protection, could you prepare a pull request and I'll review it?\nThanks,\nMat\u00edas\n. Maybe messages here or code review comments if you want to comment some particular sections. But let's keep it here just for the record :)\n. Moved transaction management to view, Closed by cbd37e8e9eefe4cd6e9b464c6fa07695fcb9fc1b. Closed by cbd37e8e9eefe4cd6e9b464c6fa07695fcb9fc1b\n. Moved transaction management to view, Closed by cbd37e8e9eefe4cd6e9b464c6fa07695fcb9fc1b. Closed by cbd37e8e9eefe4cd6e9b464c6fa07695fcb9fc1b\n. Yes, this project lacks test at the moment and is in the TODO list, will try to add something quick in the next few days that can be improved later.\nThanks\n. I don't think that using selenium is better than using unittests, check the twitter test I've added a few days ago, I'm still working on a facebook one and others will come right after that.\nYes, I've faced the same issue, I need an account into every site to test behavior, don't think we can avoid it.\nMat\u00edas\n. Hi Miguel,\nI like the idea of having good test coverage, I have some serious redirect problems with google that I couldn't make work yet, so I couldn't advance much on testing recently.\nWhat do you think if we add your work but no in the app itself but on a \"extras\" directory because the dependency will be quite important to add. \n. Hi Miguel,\nIf you can get a complete Google test, that would be great, but no hurries. About the \"extras\" directory, maybe contrib suits better (a root level contrib, not the one on backends), the main purpose is not to make social_auth application depend on selenium.\nThanks,\nMat\u00edas\n. Hey, I've merged this into a \"testing\" branch, I'll take a look and check this cool stuff. If you can share some details about running it I'll really appreciate.\nThanks for the hard work,\nMat\u00edas\n. Hi,\nI've merged the testing branch back to master with some small changes. I've replaced the test_settings.py with test_settings.py.template and added test_settings.py to .gitignore list.\nFor some reason all the test fail for me, maybe I'm doing something wrong, don't know. Could you take a look?\nThanks,\nMat\u00edas\n. I don't think github support such option. I don't mind pulling from your repo on a local branch, testing and when all looking good merging back to master.\n. Hi Miguel, sorry it take too long, been on busy days, here are the errors reported for facebook and google-oauth2 which are failing, linkedin too but you know it fails:\n```\nERROR: test_facebook_backend (contrib.tests.test_core.BackendsTest)\nTraceback (most recent call last):\n  File \"/home/omab/src/django-social-auth/contrib/tests/test_core.py\", line 125, in test_facebook_backend\n    heading = self.driver.find_element_by_id('heading')\n  File \"/home/omab/.virtualenvs/dsa/lib/python2.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 171, in find_element_by_id\n    return self.find_element(by=By.ID, value=id_)\n  File \"/home/omab/.virtualenvs/dsa/lib/python2.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 558, in find_element\n    {'using': by, 'value': value})['value']\n  File \"/home/omab/.virtualenvs/dsa/lib/python2.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 143, in execute\n    self.error_handler.check_response(response)\n  File \"/home/omab/.virtualenvs/dsa/lib/python2.6/site-packages/selenium/webdriver/remote/errorhandler.py\", line 100, in check_response\n    raise exception_class(message)\nNoSuchElementException: Unable to locate element: {\"method\":\"id\",\"selector\":\"heading\"}\n======================================================================\nERROR: test_google_oauth2_backend (contrib.tests.test_core.BackendsTest)\n\nTraceback (most recent call last):\n  File \"/home/omab/src/django-social-auth/contrib/tests/test_core.py\", line 102, in test_google_oauth2_backend\n    heading = self.driver.find_element_by_id('heading')\n  File \"/home/omab/.virtualenvs/dsa/lib/python2.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 171, in find_element_by_id\n    return self.find_element(by=By.ID, value=id_)\n  File \"/home/omab/.virtualenvs/dsa/lib/python2.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 558, in find_element\n    {'using': by, 'value': value})['value']\n  File \"/home/omab/.virtualenvs/dsa/lib/python2.6/site-packages/selenium/webdriver/remote/webdriver.py\", line 143, in execute\n    self.error_handler.check_response(response)\n  File \"/home/omab/.virtualenvs/dsa/lib/python2.6/site-packages/selenium/webdriver/remote/errorhandler.py\", line 100, in check_response\n    raise exception_class(message)\nWebDriverException: this.getWindow() is null\n```\nI've added small doc about selenium tests on https://github.com/omab/django-social-auth/commit/2c3fead376ce4bc4da64b175b555ecfe499b2e9b, feel free to improve.\nThanks,\nMat\u00edas\n. Yes I have FF4, is it relevant for the failure? You want to test something with it?\n. Has tested with firefox 3 (version 3.6.17) and only Facebook fails with the same error mentioned above.\nAlso, I've merged your last changes into master.\nThanks\n. Ok, I found why it was failing, the Facebook test wasn't checking the \"Allow app\" screen option. Here's the change https://github.com/omab/django-social-auth/commit/59fc139c201a2508b1cd177db9c47c399459eede, pull from master to get it.\n. Yes, very likely it was the issue.\n. I like this idea, I needed this on a recent project, so it makes sense to generalize it.\n. Added socialauth_registered signal for newly registered users. Closed by 72347939d24011cefb43205b807450ab094261e7\n. Any time!\n. Don't have sphinx doc, yet ;)\n. Initial Sphinx documentation started https://github.com/omab/django-social-auth/commit/c75b5e1ea589b59d4d65a224687017752f567103, and uploaded to readthedocs http://readthedocs.org/docs/django-social-auth/en/latest/index.html\n. Migration to OAuth2 lib. Closed by ab8ce75c9c737963e2e7186826167bd60a6eb1f0. Closed by ab8ce75c9c737963e2e7186826167bd60a6eb1f0. Closed by ab8ce75c9c737963e2e7186826167bd60a6eb1f0.\n. Add support for session expiration. Closed by 6602ee1d7f857e14590b0ca9242917041f1392b0\n. Store extra data in JSON format, also add method to extend extra values to store. Closed by bf11946afbac3a10b6a7ae502c81f7016c472719\n. Could you add some links and details? I'll be glad to check them.\n. Migration to OAuth2 lib. Closed by ab8ce75c9c737963e2e7186826167bd60a6eb1f0. Closed by ab8ce75c9c737963e2e7186826167bd60a6eb1f0. Closed by ab8ce75c9c737963e2e7186826167bd60a6eb1f0.\n. That's already supported, https://github.com/omab/django-social-auth/blob/master/social_auth/views.py#L95\n. Hi,\nLooks like you are configuring backends improperly, check the second point on Configuration section on README.rst, the setting must be social_auth.backends.twitter.TwitterBackend.\n. I'll review this in the following days.\nThanks.\n. LinkedIn Support from Quard. Closed by a4c65504d8d63d11180f61fb91298b6f0c0258f5\n. Merged, thanks.\n. Is better to keep URLs names version because the app need to reverse them with the backend name in the path.\n. server_url didn't have a constant size across providers, so I preferred to not relay on size.\nI'll review your changes\nThanks.\n. Merge branch 'master' of https://github.com/bernardokyotoku/django-social-auth into bernardokyotoku-master. Closed by b8b449a8d486b6b3be909d3f6d4c2fb566a1da68\n. Merged, thanks.\n. Migration to OAuth2 lib. Closed by ab8ce75c9c737963e2e7186826167bd60a6eb1f0. Closed by ab8ce75c9c737963e2e7186826167bd60a6eb1f0. Closed by ab8ce75c9c737963e2e7186826167bd60a6eb1f0.\n. Thanks.\n. Merged sanitize redirect url checker. Closed by cce23df675de5d8e762461ffd60e75119024907c\n. Merged, thanks!\n. Could you share some details?\n- Does it drop any error?\n- Are you testing locally? or in demo?\nThanks,\nMat\u00edas\n. That site drop JS errors on my case, this file seems missing http://friendstream.tv/static/js/script.js and drops 404, I guess the JS errors are caused by that missing script.\nAre you the owner of this site? \nThanks,\nMat\u00edas\n. I couldn't reproduce it so I'm closing it. Reopen if needed and has more details.\n. Thanks, closed in 851a3475084a88ab8ac5d5acbef4be873c4c2757\n. User uuid4 to generate unique usernames. Closed by 05adbadc6515babf4fe731d9d2f522cac00ad017\n. Use get_db_prep_value instead of get_db_prep_save. Closed by 3c8b3a24978cf757fb3a8cc8660eb4554f183e0f\n. Changed at: https://github.com/omab/django-social-auth/commit/edd2cc66fff3159699c28c8f86c52e6524ce9d86\n. What do you mean \"with a PAGE\" ?\n. Ok, I got it now, that's interesting, I didn't meant to support this, and don't see any usage, so far, but will take a look ;)\nThanks\n. This option doesn't fit the purpose of the app IMO, reopen if anybody has another opinion/suggestion.\nThanks.\n. The redirect URL cannot be http://127.0.0.1:8000/, facebook will reject that. If you have:\n127.0.0.1 mytestapp123.com\nthen open that address in your browser as in http://mytestapp123.com:8000/ it will work then.\n. Hi,\nI think there's not service google service to get such information. Let me know if you find anything.\nThanks\n. Interesting, I'll take a look and add this to google auth methods.\nThanks!\n. I've tried working with that one too without luck :-/\n. Issue fixed by pull request #284.\n. I saw some weird checks on code, I'll take a further look later, meanwhile you could use a \"?next=\" parameter in your URL, that will override the LOGIN_REDIRECT_URL redirect\n. I've added a setting to define a custom redirect URL as you suggested:\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/another-url/'\nThanks!\n. I know this is not the correct way to do it, but meanwhile I fix this redirect non-sense, you could setup a handler for socialauth_registered that does an:\nuser.is_new = True\nand then on your view check for the user status and display signup page or redirect to another place.\n. Yeah, I won't call it a property, but a forced-hackish value instead :)\n. The signal is sent by social_auth app, you should register a handler somewhere (usually on some models.py or init.py file).\n. Yes, it's in my plans.\n. I've added a new settings SOCIAL_AUTH_NEW_USER_REDIRECT_URL to define a different redirect URL for new users.\n. Thanks!\n. There's no particular reason beside legacy behavior, I should check this taking security issues into account, but might be a good option to have, or at least to be able to enable.\nThis won't be available for all providers since a few don't provide any email address.\nThanks\n. I've pushed the needed changes, the feature is disabled by default, enable adding the following setting:\nSOCIAL_AUTH_ASSOCIATE_BY_MAIL = True\nThanks!\n. @Visgean, it's not supported anymore, the preferred method now is to define the pipeline to include the associate_by_email entry like this:\npython\nSOCIAL_AUTH_PIPELINE', (\n    'social_auth.backends.pipeline.social.social_auth_user',\n    'social_auth.backends.pipeline.associate.associate_by_email',\n    'social_auth.backends.pipeline.user.get_username',\n    'social_auth.backends.pipeline.user.create_user',\n    'social_auth.backends.pipeline.social.associate_user',\n    'social_auth.backends.pipeline.social.load_extra_data',\n    'social_auth.backends.pipeline.user.update_user_details',\n)\n. The email spoofing problem is created by those services that don't validate the user email address, so you could go to one of those services, register an account using another email address and then try to login using DSA with that provider on another site, finally taking over an already registered account that was already registered with that same email address.\nIf you are using services that ensure email validation like Facebook, Twitter and Google, then you are safe with this feature. Otherwise there's a risk.\n. You could do that on the signal level too\n```\ndef new_user(sender, user, response, details, **kwargs):\n    user.is_new = True\n    return False  # to avoid the unnecessary user.save()\nsocialauth_registered.connect(new_user)\n```\n. That depends a lot on what you want to do and the case-by-case scenario.\n. Django-social-auth doesn't alter the session time on anyway, it only uses session as simple data storage, django contrib auth app does the same, it only stores a few things on session but doesn't change the live time. Instead this is left to default values.\nTake a look to:\nhttp://docs.djangoproject.com/en/dev/topics/http/sessions/?from=olddocs#session-cookie-age and\nhttp://docs.djangoproject.com/en/dev/topics/http/sessions/?from=olddocs#session-expire-at-browser-close\nto check django default values.\nCurrently I'm working on improvement to redirect URLs and it will support a custom URL for newly created users and for old users, maybe that view suites your needs to tweak the session times?\nMat\u00edas\n. Actually it does, check the account association feature. Once the user is logged in in your system (old or new), it should be able to associate other social accounts.\n. What do you mean with implicit? The user must be logged in to use the association feature. If you check the demo, you will that the association links are given in the second page when the user has authenticated.\n. That's also supported because the only restriction is same UID where a UID is a unique identifier provided by the authentication provider for such account, so it will be different for different accounts.\n. Yeah, you are right there, the code is not compatible, I'll make a fix for it ASAP.\n. Interesting, will take a look.\nThanks.\n. Fixed using the mentioned method, thanks!\n. Yes, /associate/backend-name/ is the correct path to trigger account associations, this is only for logged in users. Which error are you getting?\nMat\u00edas\nEdit: fix path broken by github markup\n. Seems that you have this setting:\nSOCIAL_AUTH_ASSOCIATE_URL_NAME = 'association_complete'\nDefault django-social-auth name for this view is associate_complete, not association_complete.\nAre you trying to override the association view? If that is your case, then seems that you have a problem with your URLs setup and you aren't including the the module with such URL, or that you don't give it a name.\nIf this is not the case, then remove the setting, the app will use associate_complete by default.\n. Remove the namespace please, I've ditched it several changesets ago because they weren't really useful and were confusing instead.\n. Issued fixed on https://github.com/omab/django-social-auth/commit/9e456ccce3058c907e9bf80219a89ea45bec21fd\nThanks.\n. Thanks!\n. Thanks but I'll discard this, the app doesn't care about south or any other schema/data migration mechanism. It should be per project, not per app IMO.\n. I'm still not very comfortable having the code on sodial_auth directly because it doesn't have the dependency and it's a quite big dependency to add, but would like to add the snippet to the documentations, that way other people can get it easily.\nSeems that you removed your fork :(\n. @fahdoo, try the last HEAD\n. I've fixed a syntax error, my bad.\n. Works?\n. Thanks!\n. Thanks for spotting this one.\n. I've merged this into a \"testing\" branch (https://github.com/omab/django-social-auth/tree/testing), will take a look and merge to master asap.\nThanks!\n. Moved, thanks.\n. Hi Camilo,\nI'm glad you liked the app. About your extra-step issue, I'm not really familiar because I lack the experience of building Facebook apps so far. But a quick search showed that it might be a Facebook bug and not a protection, take a look to this StackOverflow discussion http://stackoverflow.com/questions/4173318/facebook-oauth-login-for-iframe-canvas-apps-displays-a-logo-image-and-a-go-to-fac, also http://stackoverflow.com/questions/3438814/facebook-iframe-app-strange-redirection-problems\nLet me know if that workaround works for you.\n. You can define SOCIAL_AUTH_USERNAME_FIXER setting:\nSOCIAL_AUTH_USERNAME_FIXER = lambda username: username.replace(' ', '_')\nThat function can be whatever you want to fix usernames for your desired format.\n. Looks quite similar to Google OAuth2 implementation, take a look to it, it should be easy to mimic.\n. Depends on the site. Some providers enforce that the domain from where the request is made must be the same as the one defined in the app configuration, others don't, but seems that foursquare is checking it.\nAn easy workaround is to serve the same domain from localhost, for example, let's suppose that the domain used in the Foursquare app configuration was example.com\n1. Add example.com to /etc/hosts\n127.0.0.1 example.com\n2. Define Django SITE_URL to use the desired domain\nSITE_URL = 'http://example.com'\n3. Run the server, and open it in your browser using http://example.com:8000/. The redirect from Foursquare might lack the port number and that will pop a 404 error on your browser, just add :8000 to the URL and it should work.\n. Looking at your code, seems that you are inheriting from BaseOAuth instead of BaseOAuth2 (https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L628), that should simplify and fix your issues, OAuth2 standard defines responses as JSon strings and they are decoded properly (https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L663)\n. Could you share the JSON server response?\n. Only access_token? The code that raises the KeyError is trying to get an 'id' entry from the server response, that ID is used to identify the current user with the provider. But you can override the method to suit the foursquare case, in google I needed to override it to use the email address https://github.com/omab/django-social-auth/blob/master/social_auth/backends/google.py#L50, check the details and response data, it might have some value that's unique for current user.\n. Mmm... I didn't understood you, are you getting an error or not? Which is the error?\n. No prob at all, it's not my main language, so that makes things worse :D\nWhat happens when you change the service to \"/oauth2/authenticate\"? Twitter does the same, /authorize/ asks user permission every time, while /authenticate/ only asks once.\n. This code http://dpaste.com/hold/544082/ worked properly for me, it's a simplification from your last code, I've removed the overridden functions because they weren't needed at all. It worked with /authorize/ and /authenticate/ properly.\nYou need to add this two settings to your local_settings or what ever place you keep them::\nFOURSQUARE_CONSUMER_KEY = 'YOUR_CONSUMER_KEY'\nFOURSQUARE_CONSUMER_SECRET = 'YOUR_CONSUMER_SECRET_KEY'\nI'll merge your work if you create a fork of the project and add this backend.\n. That's because Foursquare is checking the referer url with the one you defined on their app. I've defined http://myapp.com:8000/complete/foursquare/ as redirect on foursquare site, and check the site locally opening http://myapp.com:8000/ (previous /etc/hosts workaround).\n. The fork is OK, but contrib backends should be on backends/contrib directory, could you move it?\n. Merged https://github.com/omab/django-social-auth/tree/4f53065e1b42da98fc3f241407e68ada0b1922c5\nThanks\n. Thanks\n. Which openid provider are you using?\n. What's a \"delegating url\" on this case, it's myopenid account setting? Are you forcing the redirect to another part?\n. I see. I did a try on my example site and locally using the delegation thing and I didn't get any CSRF token failure, so it might be on another part. Does it render a template explaining why the CSRF check didn't worked?\n. This is quite odd, on my tests I don't get a POST request back to my demo. My scenario is always like the second point in your comment. I might be missing something.\n. Please check the recent fix and let me know it that works, then I'll close the ticket.\nThanks\n. CRFS check were removed from return views. Closing.\n. The app uses the common ?next=... URL parameter, so be sure that the value is present in the URL when starting the process, and the user will be redirected to that page right after login process ended.\n. You need to specify \"email\" scope to Facebook backend, add this setting::\nFACEBOOK_EXTENDED_PERMISSIONS = ['email']\nthat should be enough to get user email populated properly.\n. The REDIRECT_FIELD_NAME (defined as next in auth app) is used to redirect the user to that address after the login process finished.\n. Totally understandable, the code is a little mess on that part.\n. - First changeset (https://github.com/kinpoo/django-social-auth/commit/fb4500c7f8f9faac012260179ad369969c5fa878)\nI don't get the real purpose of this change, could you explain a little?\n- Second changeset (https://github.com/kinpoo/django-social-auth/commit/20b32d96c43f973c550e5c4620a6267b7f11d44a)\nI like the contribution, but would prefer to implement it following the same patter as the rest of the backends, that's a module with a subclass for each provider. It could be implemented easily adding a base class that does can build the needed openid_url using some well defined attributes::\n``` python\nclass BaseUsernameOpenIdAuth(OpenIdAuth):\n    USERNAME_KEYWORD = '{username}'\n    base_url = ''  # define in subclass, must contain USERNAME_KEYWORD\ndef openid_url(self):\n    if not USERNAME_KEYWORD in self.base_url:\n        raise ValueError(...)\n    if not USERNAME_FIELD in self.data:\n        raise ValueError(...)\n    return self.base_url.replace(USERNAME_KEYWORD, self.data[USERNAME_FIELD])\n\n```\nthen, the different backends can extend this one and define the needed AUTH_BACKEND value with the correct provider name instead of having several backends using the same name (which is used for provider UserSocialAuth field).\nAlso, the different backends can be extended to add extra functionality como user data retrieval, etc.\nI'll reject these one for the moment, but I'm sure we can add this soon.\nThanks.\nEdit: small markdown change.\n. It's not necessary to setup the URL to /complete/facebook/, it's enough to setup your site address. Check the Facebook section on django-social-auth README file. \n. I think this is useful enough to add support directly to the app, here's the change that adds the last used provider name to user session https://github.com/omab/django-social-auth/commit/d1ed37fa9ed080d0c05e7b8c2746dc357314dc60\n. Hey, thanks for the fix, I don't have experience with orkut and this was a contrib. Could you share the error you got?\n. Code merged and changed a little.\nMany thanks\nPS: I would prefer a pull request in the future ;)\n. Thanks\n. This changeset should have fixed that several days ago, check if you are using the last version. https://github.com/omab/django-social-auth/commit/475fc891424b3dc2ebc2e825bae94d8da8d4c611\nI'v tagged the current code and released it to pypi.\n. Hi,\nI don't have experience with mongoengine, but with little changes that issue can be solved, but, there's a major issue, the model UserSocialAuth has a ForeignKey to to the User model and the one defined by mongoengine is not a real Model and it fails, do you have any idea that could solve that?\n. The problem is not how much we assume about the User model, the problem is that mongoengine User is not a model at all and that makes the ForeignKey definition fail.\nMeanwhile, I've pushed a fix for get_model() call. This ticket is closed (https://github.com/omab/django-social-auth/commit/3365cd79a3efa3a0cc352dfe4a564ade65a698d7), but raise a new one about mongoengine support or a pull request.\nThanks\n. A few questions:\n1. Do you have SOCIAL_AUTH_ERROR_KEY defined?\n2. The user instance is None at https://github.com/omab/django-social-auth/blob/master/social_auth/views.py#L48?\n3. To which signal is create_profile attached to?\n. A simple print statement to debug it should work.\n. So, the error seems to be in the handler, could you share it? Also could you show how do you setup it?\n. I'm assuming that the version you pasted is the one that doesn't fail on your project. If the failure is the call to profile = user.get_profile(), then it makes sense that it fails, get_profile() doesn't create the profile instance if it doesn't exists and raises a DoesNotExist exception. The get_or_create() call should be enough.\n. Could you try adding a big try/except block that contains the whole code on your handler and check the exception it raises?\n. Very likely it raises a ValueError when assigning the value which is catch in the view. I'll close the ticket.\n. This is not completely True, some contains username, but others don't (my testing account doesn't for example http://graph.facebook.com/100002200789926). Anyway, I've introduced a change to give username preference if present.\nThanks.\n. Check https://github.com/omab/django-social-auth/commit/b8878afc0dbf50c75677ab3ea1e05073355f0b2f\n. Thanks.\n. Work for this is part of python-social-auth, the namespace is social. Closing due to django-social-auth deprecation.\n. HttpResponseServerError is only returned when the used backend name is not correct, like in:\npython\n    backend = get_backend(backend, request, redirect)\n    if not backend:\n        return HttpResponseServerError('Incorrect authentication service')\nThere's not much to debug there, just check the backends list, one quick way is using the shell:\n```\nfrom social_auth.backends import BACKENDS\nBACKENDS.get('facebook')\n```\n. I think that a signaling system for such actions is not correct, instead I'm implementing a pipeline of actions with option to define custom actions and override the default pipeline.\n. It will be ready in a couple more days, not much time to hack these days :(\n. My plans is to have this ready by the end of the weekend.\n. Please, take a look to the changes, feedback is well welcome.\n. I'm working on a solution that allows to apply partial pipeline process, give me some days :)\n. The default pipeline should mimic the old behavior, I might have missing something in the process, will check it.\nOverriding the pipeline is the desired idea now (also drop signal handlers in favor of custom pipeline processes, etc).\nAll this will be properly documented (when I get some time to finish all this stuff), sorry for the delays, meanwhile it's just the code :-(\n. The tuple is needed to ensure the operation order, you will need it anyway to tell the object methods order in which they should be call. Having it inside an object or just a plain function won't make any difference IMO, you will have to override the method but copy the code and add your customization anyway since calling super() doesn't seems to be an option, if it is, then you could call the original django-social-auth method too.\nThe solution is here is better fragmentation IMO, that way we split the functions in smaller parts that can be really reusable by your overrides.\n. Small doc section added to doc http://django-social-auth.readthedocs.org/en/latest/pipeline.html\n. Partial pipeline work pushed, please check and comment back :)\nDoc at http://django-social-auth.readthedocs.org/en/latest/pipeline.html#partial-pipeline\n. I'm closing this one, feel free to reopen if needed.\n. I needed to merge this by hand because of recent change made a conflict, check https://github.com/omab/django-social-auth/commit/5ce9cde251dbc94fd47a59688ab17ee7e46925d5\nThanks.\n. @planetcrypton, you don't do anything, this app takes care for too-long usernames automatically.\n. Seems that your Facebook backend is not setup properly, check that you have these settings defined FACEBOOK_APP_ID and FACEBOOK_API_SECRET.\n. Ok, closing the issue.\nThanks.\n. I thinks this is a good idea that I've should had implemented from the beginning.\n. It works ok with Django 1.3, check your template settings values. Did you changed anything?\n. Thanks.\n. Hi,\nI agree with micrypt, it will be better and simpler for you if you attach to library that knows what it's doing and specializes in such task, it's not in the aim of django-social-auth to cover that things.\nIf all what you need is the user profile image, then it will be simpler for you to just request it using Twitter API (check urllib and json). Alos the image is present in the response sent by the server but on it's smaller size, you can save it to UserSocialAuth extra_data value by defining this setting:\nTWITTER_EXTRA_DATA = [('profile_image_url', 'profile_image_url')]\nthen you will be able to do:\nuser.social_auth.get(provider='twitter').extra_data['profile_image_url']\nI would recommend use .filter instead of .get since a single user can have several Twitter accounts ;)\nCheers,\nMat\u00edas\n. Sorry, but I'm not following you, django-social-auth already saves the generated access_token, what token are you talking about?\n. You can connect a pre_update signal handler to the wanted backends, that handler will be able to access any loaded data and store more desired values easily.\n. Check how the example app does that at https://github.com/omab/django-social-auth/blob/master/example/app/views.py#L25\n. SOCIAL_AUTH_COMPLETE_URL_NAME is used to defined the URL for the complete-authentication process (the one that gets the provider response and creates the user, etc). By default it's value is socialauth_complete and you should define it's value only if you want to override that view.\nI've fixed the example settings now with the correct name, but leaving that commented is OK too.\n. Thanks, I'll refactor it a little merging the behavior with authenticaion complete view in next changeset.\n. By definition username cannot be blank, were you getting an exception? I've pushed a fix to make SOCIAL_AUTH_DEFAULT_USERNAME not ignored anyway.\n. Indeed something odd there since the field is defined as non-blank. Did the fix worked for you?\n. No, it doesn't, django-social-auth only provides the option to redirect the user to a custom view when they firstly register or associate a new account. Check SOCIAL_AUTH_NEW_USER_REDIRECT_URL and SOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL settings.\n. /login/google/ is not OAuth, is OpenID, you need to use /login/google-oauth/ or /login/google-oauth2/ (depends on your setup). Check this difference please.\n. Thanks\n. Extra backends setting must point to the \"directory\", like INSTALLED_APPS, try with:\nSOCIAL_AUTH_IMPORT_BACKENDS = (\n    'social_github.backends',\n)\n. Could you share the traceback?\n. Issue fixed, the problem was that current user was used to complete the process which is not valid for \"login\" mechanism, instead None user is used, that way Django will drop the current user session and create a new one for the newly logged in account.\nPrevious patch shouldn't be needed unless that's a new issue (I didn't checked).\nThanks\n. If the data requested doesn't have it's own access resource, then you will get it in the authentication process, if not, you will need to retrieve it manually or using any Facebook SDK around. In both cases the access-token contains the needed permissions to access the extra values.\nIf the data from extended-permissions is retrieved on auth process, then  you can define FACEBOOK_EXTRA_DATA with name pairs that you want to store in extra_data JSONField on UserSocialAuth instance. Also you can define a pre_update signal handler attached to FacebookBackend and the data will be available in the details parameter.\n. Signals aren't made to cut the flow with HttpResponses, there are a few layers messed there IMO.\nThanks\n. I should have commented properly than just a quick comment. I kinda like the first part of your patchset, using a signal for users creation, I don't like that it returns the user right away and you loose the ASSOCIATE_BY_EMAIL stuff, also I don't like the idea of returning HttpResponses, an exception would fit better for such case.\n. Tests are a mess at this moment and I'm aware of it, there's another ticket for it.\nThanks.\n. Improved added. Thanks.\n. Hope this helps on your issues, feedback is welcome.\n. @ghickman, any luck getting OAuth backends up? Seems to be a misconfiguration as you mentioned, please check that settings for each backend are properly defined.\nAbout error URL, django-social-auth expects LOGIN_ERROR_URL setting to redirect the user to such page, that value is taken as it is, not reverse or anything is applied. It's weird that a redirect to /login/error/ is even tried.\n. @ghickman, yeah, I'm aware of the redirect and a value like /login/error/ will fail unless URLs are properly ordered as you pointed. Views return values were fixed in a recent commit https://github.com/omab/django-social-auth/commit/3bbcee80d4a43f20481951211554da3914dec965.\nAbout the pull request, I've rejected it, IMO a signal shouldn't cut the process in the middle with a HttpResponse, it's not it's responsibility to play with responses, it's not it's layer.\n. @ghickman, so you want the association URL instead of the login ones? Your users will access to /associate/google/ and that will link their current account with the Google one but users must be logged in, makes sense?\n. Closing, reopen if needed.\n. If you are using the pip version, then the URL should be socialauth_begin, not\njust \"begin\".\nExcerpts from movingahead's message of Tue Aug 09 20:44:48 -0300 2011:\n\nI shifted my project to virtualenv and installed social-auth using pip. I moved the same files which were working to the new environment, but I am getting a \nCaught NoReverseMatch while rendering: Reverse for 'begin' with arguments '(u'facebook',)' and keyword arguments '{}' not found.  Where could I be making a mistake ?\n. Basically all social-auth URLs have the socialauth_ prefix, instead of\ncomplete, it should be \"socialauth_complete\".\n\nRegards,\nMat\u00edas\nExcerpts from movingahead's message of Wed Aug 10 17:39:45 -0300 2011:\n\nThanks @omab.  The signup page now doesn't show the error after changing begin to socialauth_begin. But I am getting the same error on /login/facebook \nReverse for 'complete' with arguments '(u'facebook',)' and keyword arguments '{}' not found. \nI have appended the social_auth directory to my virtualenv's pythonpath.\n. ```\n\n\nfrom django.core.urlresolvers import reverse\nreverse('socialauth_begin', args=['facebook'])\n'/login/facebook/'\n```\n\n\n\nCannot reproduce, do you have social_auth/urls.py included in main urls.py?\n. Good to know.\nThanks.\n. @murilobsd, remove the $ in that URL include, it should be url(r'^social/', include('social_auth.urls'))\n. @murilobsd, no problem at all!\n. @tleewu, you have a namespace in your url definition. Try using: {% url 'social:socialauth_begin' 'facebook' %}\n. Improved added. Thanks.\n. Thanks\n. Hi Kim,\nAre you sending the access_token with the URL? I'm not familiar enough with\nFQL, but surely it needs the access_token as Graph API.\nExcerpts from kimsterv's message of Sat Aug 13 15:29:59 -0300 2011:\n\nIn \"facebook_extra_values\" method, I'm trying to get some additional data by using the Facebook Query Language. I'm calling \"urllib2.urlopen\" on the URL, and getting redirected to the login/error page with the error:  \"Incorrect authentication service\"\nThe URL works as expected outside my app though so I'm not sure what's going on.\n-Kim\n. The backend is defined in the URL /login// in your case it should be\n/login/facebook/, there's no default backend.\n\nIf it's failing that that place, then it could be that:\n    1. The URL doesn't have a valid backend (check it's value)\n    2. The backend given is not registered, could be invalid name or could be\n       missing configuration making the backend not registered, in the case of\n       Facebook check that the two needed settings are defined.\nHope this help, ping me back if not.\nMat\u00edas\nExcerpts from kimsterv's message of Sat Aug 13 16:13:25 -0300 2011:\n\nHi Omab,\nYes, I am. It's failing on this line:\nhttps://github.com/omab/django-social-auth/blob/master/social_auth/views.py#L113\nI'm not exactly sure how urllib2 works, but is there a way to set the backend manually or something?\n-Kim\n. Mmm... I don't see a way that such signal handler could interfer with the auth\nprocess, try adding a try/except block around that code and check the exception\nraised there, django-social-auth is quite aggresive (too much) on exceptions\ncatching:\n\ntry:\n    ...\nexcept Exception, e:\n    print e\nRegards,\nMat\u00edas\nExcerpts from kimsterv's message of Sat Aug 13 17:02:31 -0300 2011:\n\nThe code looks like this:\ndef facebook_extra_values(sender, user, response, details, **kwargs):\n    #....\n    q = urllib2.quote('SELECT uid, username, name, email,current_location FROM user WHERE uid = me\n        () OR uid IN (SELECT uid2 FROM friend WHERE uid1 = me())')\n    query = 'https://api.facebook.com/method/fql.query?query=' + q + '&access_token=' + response['access_token']\n    results = json.load(urllib2.urlopen(query))\nI'm not sure how to set the backend for the URL?\n-Kim\n. Good to know you fixed it, and you had something to blame.\n\nRegards,\nMat\u00edas\nExcerpts from kimsterv's message of Sat Aug 13 20:38:43 -0300 2011:\n\nHey Matias,\nI'm retarded. I forgot \"&format=JSON\" in the query, so XML was being returned and breaking it. I'll blame last night's tequila :)\nThanks for helping me debug!\n-Kim\n. Why not create the token in a similar way made by Django, using settings.SECRET_KEY?\n. Yeah, maybe it doesn't worth the change, I'll merge this soon, if you can merge with current master I'll merge it from here, if not, I'll try to merge it from command line after I finish a pending change.\n\nThanks\n. Ok\n. Thanks anyway.\n. Work was merged, just closing the ticket.\n. I'm thinking on removing this validation at all, I've never liked it very much and a developer is responsible enough to supply a correct model. what do you think?\n. Magic check removed.\n. No prob, merged.\n. After several minutes inspecting the code and found nothing, this is very likely some race condition, maybe some user going throw Facebook registration but opening the link on current page and on a new tab at the same time? I've created a bug_131 branch, with some protection code https://github.com/omab/django-social-auth/commit/1247ef295225c63506e622f4d1e617fe58e910a8, could you give it a try and if it works properly, then I'll merge it to master.\nThanks,\nMat\u00edas\n. Yeah, the latency might be the source of the issue but the code should take that into account, will try to improve the fix.\nThanks\n. I've disabled the \"commit_on_success\" decorator on the complete view, looks like an earlier commit might fix this issue, could you try to take a new look to bug_131 branch?\nThanks,\nMat\u00edas\n. Even if using the transaction middleware, the commit is delayed and might cause the issue. Let me know the results with the new change in the branch.\nThanks\n. Cool.\n/me opens a beer and waits\n. Good to know, will merge it ASAP.\n. You have the setting SOCIAL_AUTH_CHANGE_SIGNAL_ONLY, setting that to False will\nstop updating your values automatically, but you need to setup a signal handler\nattached to socialauth_registered signal to do the filling the first time.\nMakes sense?\nRegards,\nMat\u00edas\nExcerpts from mzupan's message of Wed Aug 24 11:55:03 -0300 2011:\n\nI looked through the code but did not find a way to do this.. I'm looking to associate facebook/foursquare to a user object already created. Now if I do.. values like email/first/last name get changed to what they get sent by facebook/foursquare. I found a way to do this in the backend by just returning a blank dict but is there a setting to make this more global?\n. Done.\n. Didn't saw the pull request, there's a patch with the fix already.\n\nThanks,\nMat\u00edas\n. Merged and added some little improvements too.\n. Issue fixed. BTW, on your settings your settings you have:\nSOCIAL_AUTH_ENABLED_BACKENDS = ('facebook')\nit should be\nSOCIAL_AUTH_ENABLED_BACKENDS = ('facebook',)\nnote the comma after the 'facebook' value.\nThanks,\nMat\u00edas\n. @franckbret, you are misunderstanding python tuples (http://docs.python.org/tutorial/datastructures.html#tuples-and-sequences)\n@ritehs85, django-social-auth is not related with django-admin authentication mechanism, the error you get is from django.contirb.auth application, try resetting the password using ./manage.py shell\nThanks,\nMat\u00edas\n. @ritehs85, it's because your logged-in user instance is stored in every request instance and django-admin/django-auth uses that instance to check for a logged in user. There's no correct fix, your CustomUser shouldn't go to /admin/ since it depends on request.user to be a django.auth User instance. You could try to:\n1. add a is_staff = False attribute to your custom model\n2. Setup a middleware that enforces that when URL is /admin/*, the request.user must not be a CustomUser instance\n. A similar error was reported on convore a few days ago, but I'm unable to reproduce it, at least with Django 1.3, maybe a 1.4pre-alpha issue?\n. Error reported was a problem with Twitter app configuration, any new insight about this?\n. Check this discuss on convore https://convore.com/django-social-auth/twitter-loginassociate-keeps-giving-401/, maybe that's your same problem.\n. Yes, it should be http://<your site domain>/<path to django social auth>/complete/twitter/\n. LinkedIn should be redirecting to /accounts/login/linkedin/, check that callback.\n. You are right, it must be /accounts/complete/linkedin/. Does it work?\n. Checking my example App setup, this is what I've filled:\nApplication Name: Django Social Auth Testing\nDescription: Django Social Auth testing application\nApplication Type: Web application\nApplication Use: Other\nLive Status: Development (Live should work too)\nInclude yourself as a developer for this application: Checked\nInterface Language: English\nProgramming Tools: Python\nDeveloper Contact Email: my-email-address\nPhone: my-personal-phone-number\nThose are all the mandatory entries in the app Form (Add New Application at https://www.linkedin.com/secure/developer), lot of them should't affect your app, but I have not filled is OAuth Redirect URL and Integration URL. Try clearing those values.\n. Which is the value of your LOGIN_REDIRECT_URL setting?\n. And the value for LOGIN_ERROR_URL and SOCIAL_AUTH_LOGIN_REDIRECT_URL and SOCIAL_AUTH_NEW_USER_REDIRECT_URL ?\n. Ok, I think I got it now. You don't have value for LOGIN_ERROR_URL which will take the value of LOGIN_URL if undefined. LOGIN_URL is will take the value /accounts/login/ by default by django. So, it seems that for some reason you got an error from LinkedIn.\nIf you have django.contrib.messages app installed, you can access to messages in a similar way as the example error view (https://github.com/omab/django-social-auth/blob/master/example/app/views.py#L26), if not, you can check the error on request.session['socialauth_backend_error'].\n. Take a look to https://github.com/omab/django-social-auth/blob/master/example/templates/error.html, that's now how you render errors from django-messages app.\n. That's odd, let's try adding some print statement below this line https://github.com/omab/django-social-auth/blob/master/social_auth/views.py#L69. Something like print e, msg.\n. Seems that you are using PIP version, I've uploaded the last master with v0.5.8 now, could you give it a try?\n. It must be below the msg = str(e) thing.\n. Up and Down of what? How's the print line?\n. I've removed some try/except code on a function, please try new version 0.5.9 with the same prints, but I guess that you will get the error page with the message now too.\n. Oh my... it makes sense now, good to know you found it.\nThanks,\nMat\u00edas\n. Check last master, there's already exception handling there.\nThanks,\nMat\u00edas\n. You could try opening the login page on a popup, that will show Facebook login/authorization form in the popup (maybe the mobile version suites better, I'm not sure if facebook has a popup version for server side auth). Finally when completing the loging you just close the popup with JS.\nMakes sense?\nMat\u00edas\nPD: I'm closing the bug because this is not really a bug, but we can keep the discussion on.\n. Yes, but Facebook will redirect back to your app when user logged in and you can make that return-back view a simple page that just does a popup-close JS line. Basically it will like this:\n1. Open popup to social auth /login/facebook/ view\n2. Popup will load Facebook login page\n3. User logins/accepts the app\n4. Facebook redirect backs social auth /complete/facebook/ view\n5. Social auth app makes the user login and redirects to view defined by SOCIAL_AUTH_LOGIN_REDIRECT_URL setting.\n6. You defined a view under that final URLs that just closes the template.\nI'm not really sure, but I think you can produce the same with iframes instead of a window popup, and you can embed that iframe in a modal dialog generated by any JS library around.\n. Django-Social-Auth doesn't support username/password registration schema, there are a lot of projects around that handle that very well (even django.contrib.auth could work for you). Anyway, if you want to use DSA you only have to point the user to a account association links like /social-auth/associate/facebook/ or /social-auth/associate/twitter/ and retrieve the needed data if they associate an account.\nMakes sense?\nThanks,\nMat\u00edas\nPD: closing since it's not a bug.\n. I think you misunderstood me, if you want an all-in-one solution, the django-social-registration might be what you need (I've never used it), django.contrib.auth only has user/password authentication, it has nothing to retrieve twitter/facebook data.\n. How did you do it?\n. Who would raise such exception?\n. On which file did you added the secret keys? Be sure to do that on local_settings.py and not local_settings.template.py\n. Fixed twitter first name/last name (https://github.com/omab/django-social-auth/commit/07b1d30a1d3a956093b67672ff800c2d230542f4)\n. Yes it's possible, you need to setup your button/link to open in a popup and specify the needed to display popup layout arguments for Facebook/Twitter using FACEBOOK_EXTRA_ARGUMENTS and TWITTER_EXTRA_ARGUMENTS settings.\n. My bad, the setting was FACEBOOK_AUTH_EXTRA_ARGUMENTS, you won't find it in the code because it's checked dynamically using the backend name (https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L440). To use it:\nFACEBOOK_AUTH_EXTRA_ARGUMENTS = {'display': 'popup'}\nAbout the popup works, it simple as to make a simple JS code that closes the window when the auth process finish.\nGood luck,\nMat\u00edas\n. DSA joins the value and sends them to the server, but you need to specify it as a list.\nFacebook defines the needed method get_scope(): https://github.com/omab/django-social-auth/blob/master/social_auth/backends/facebook.py#L58, get_scope() is used to build the auth_url() on https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L685\n. Similar snippet was merged by pull request #284.\n. Where does it happen?\n. Could you fork/create pull request with the doc change if confirmed?\nThanks\n. Glad to know, thanks.\n. Awesome, thanks.\n. Are they different users?\n. And are you logged in as any social-auth user when trying to loggin with the admin one?\n. I don't see a reason for that to not work, just tested it locally and works OK (Django 1.2.6 and 1.3), any error message? Traceback? Are the flags for mentioned user correct?\n. Check that AUTHENTICATION_BACKENDS contains the auth.user backend beside the social-auth ones.\nAUTHENTICATION_BACKENDS = (\n    ....\n    'django.contrib.auth.backends.ModelBackend',\n)\n. Doc added, only because your avatar.\n. @1st, it sounds good but I don't see why you need me :D, just add django-social-auth as a dependency, if anything raises I'll glad to help, just ping me by email or in the mailing list.\n. Cool, closing.\n. Wow, it toke a year but a fix for this finally arrived and it was easier than expected. The protection is off by default for historical reasons, to enable it define SOCIAL_AUTH_FORCE_POST_DISCONNECT = True.\n. DSA doesn't join accounts, it avoids it because it's too much project dependent since the first user should be trashed (or not), but the user could loose any reference to its created stuff in your site. Makes sense?\nAnyway, the recent introduced pipeline allows you to add some custom code to join the accounts on someway, sadly there's no doc yet, so you need to check the pipeline code to learn how this stuff works at the moment.\n. No, there's no signal (and signals will be deprecated soon), instead you could define your own auth pipeline and add a custom handler that does what you want for associations.\n. I'm preparing a detailed doc about it, will be ready soon.\n. Sorry, taking more time than expected.\n. Pipeline work and docs were implemented already, check docs at http://django-social-auth.readthedocs.org/en/latest/pipeline.html.\n. Check the reverse, it must be socialauth_complete instead of complete.\n. I've noted too, it's some Facebook stuff, I've remember sawing it in someplace in the docs, but can recall where correctly right now. The browser will mostly ignore it because it's a hash content.\n. @Fandekasp, there's a but in Facebook, quite old and not fixed yet, check it here: http://developers.facebook.com/bugs/318390728250352?browse=search_5040e171d3ac02944460198\n. Flickr only needs the keys, but you can specify the access permissions you want by using the params argument as described on http://www.flickr.com/services/api/auth.oauth.html#authorization. To use this params you need to define this setting:\nFLICKR_AUTH_EXTRA_ARGUMENTS = {\n    'perms': 'write'\n}\n. I've worked on it yesterday and I know it works OK, I've introduced a fix to the backend, try the last HEAD to check. Also, a very common error that makes the \"Error page\" redirect is to miss the auth backend on AUTHENTICATION_BACKENDS, like this:\nAUTHENTICATION_BACKENDS = (\n    ...\n    'social_auth.backends.contrib.flickr.FlickrBackend',\n    ...\n)\n. Maybe, but I don't see how, could you detail how that happens?\n. Your data should be associated with the user since a user can have multiple instances of UserSocialAuth (one per social account associated), that will be troublesome for your project when collection the data.\n. This is the only place where users are created in this app https://github.com/omab/django-social-auth/blob/master/social_auth/backends/pipeline/user.py#L77\n. @originell, I know that feeling :-)\n. Any luck?\n. Closing, reopen if needed.\n. Thanks\n. Updated, http://pypi.python.org/pypi/django-social-auth/0.6.0\n. The default pipeline mimics the old non-pipeline behavior, extra_values is loaded into the social auth instance which needs a user to be created, but doesn't stop you to redefine your custom pipeline that adds an associate_by_extra_values that will request the extra values earlier and try to associate the user account.\n. You can user the usual ?next=.... parameter.\n. SOCIAL_AUTH_ERROR_KEY was deprecated in favor of django.contrib.messages (if enabled) or plain logger. I need to update the docs.\n. @tijs, there's wat to \"catch\" the error messages beside the messages django structure, let me think about it and I'll try to come with something.\n. @thomasjenkins, @tijs, please check the last change linked on this thread.\n. @tijs, I know it might not be quite straightforward, it's just that I'm always looking for the open solutions that might fit best to the whole django projects jungle.\n. Seems that the changeset solved the issue, I'm closing the ticket, reopen if needed.\n. Fixed on https://github.com/omab/django-social-auth/commit/7ae03e087298e52a9db9655d450af4c3fd82efc3\n. Thanks @sorcio. Fixed on https://github.com/omab/django-social-auth/commit/6cc074f8764f69ceaf490af2c0d2bdeae9310c30\n. @thomasjenkins has the correct answer to the issue. Closing this.\n. Is ssnews.com your domain? It's the facebook app configured with ssnews.com domain?\nWhat do you mean with \"facebook registration plugin\"? Is that the facebook support on django-social-auth?, in that case, why you use POST instead of GET?\n. I cannot confirm that Pinax and django-social-auth play well together, never tried it. Django-social-auth is compatible with django authentication mechanism, if Pinax is using it, then yes, it should be compatible. About the error, I'm not sure what it means, looks like a Facebook issue. Any extra details would help to check this issue.\n. Is this still happening?\n. Closing, reopen if still relevant.\n. Fixed on https://github.com/omab/django-social-auth/commit/2868aab97632fff7ba2754a94c8b520c89bcb4b6\n. get_user() is overridden on SocialAuthBackend and it uses the correct model, this shouldn't be an issue. Please check your version of social_auth. Please reopen if needed.\nP.S.: Thanks @noizwaves :D\n. Don't have a date yet, I want to release the new pipeline fixes and improvements and documentation ASAP, but need to polish it a little bit yet.\n. Thanks\n. Thanks.\n. You can define your custom pipeline processor to make it store extra data from details. Check the current pipeline entries for examples.\n. Yes, the setting is deprecated in favor of custom pipelines, it's expected that you define a custom pipeline list without the associate_by_email item if you want to disable the associate by email behavior. The doc is coming soon.\n. The default behavior of this app is to login users using their social accounts, if you want a different behavior (like the one explained), you should override the complete view (https://github.com/omab/django-social-auth/blob/master/social_auth/views.py#L88) and define a pipeline item that stores the needed data or sends it to a different server, or whatever you need.\n. Change is already in code.\n. Yes, it was tested on WSGI environment, check the backend name and the route, that error is caused by wrong backend name, so check your URLs.\n. I don't see the changes, can you update the pull request?\n. Check last commit, it avoids clearing redirect URL from session on errors, thus further correct authentication will catch it and send the user correctly.\n. Didn't knew it was used on opencomparison sites, that's awesome, thanks for telling me.\n. I'll look into this.\n. Do you have an example where this is useful?\n. Email addresses aren't case-insensitive and I don't think this tasks really matters to django-social-auth.\nIf this an issue to work with user input, then it should be validated with a form first. Also, users don't go around typing their address using different cases on each form they find.\n@vapask, if this concerns your particular project, you can implement your own pipeline version that makes the ignore-case stuff that you need.\n. When you change the scope the access_token will be invalid and the user will be prompted to accept/deny the new scope. This change will affect all of your users that use the backend you changed.\n. You are right, Facebook doesn't prompt on downgrade, only on upgrade and doesn't seems to do it on every permission.\nAbout dynamic scopes per user, I don't think it fits on django-social-auth since it's too tied with the project IMO. Anyway, you can easily implement your custom Facebook backend that inherits from social_auth.backends.facebook.FacebookAuth and overrides get_scope() to return the custom scope based on your requirements. If you want to access the current user you can use self.request.user (check if it's an anonymous account).\n. @nisc, works that solution for you?\nClosing, reopen if needed.\n. Hi Kevin,\nThe hash thing was noted sometime ago and briefly discussed on #166.\n. Just deployed the demo app here http://empty-ocean-9186.herokuapp.com/, seems to work OK.\n. Closing, reopen if needed.\n. Try the new version 0.6.1, seems that google oauth service changed the needed parameters when requesting the authorization token http://code.google.com/apis/accounts/docs/OAuth_ref.html#GetAuth\n. @atodorov, you need to register the URL that users will be redirected back when going through the auth process.\n. Depends on the providers and their OAuth implementation, some revoke the token sooner and others don't.\n. OMG, what a good explanation you drop there, good work. About the fix, I really like it, a sane default will be needed to keep backward compatibility of course. If you send a pull request I'll look into it ASAP.\nThanks!\n. @andrew-inglis, not knowing any further details, all I have to say is to check that:\n- AUTHENTICATION_BACKENDS has the entry needed for given service provider\n- Your backend has the needed secret and api keys\n. @davecap, did this fix the issue for you?\n. Fixed on https://github.com/omab/django-social-auth/commit/a854c8bad4f465d48bb3e3499b58ff339a61f058\n. It worked for me on your app and on my demo.\n. Couldn't reproduce. Closing. Reopen if needed.\n. I've missed those too, thanks.\n. There's already work for this, docs is on the way sadly. Basically you want a custom create_user entry on the authentication pipeline (check https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L71 and https://github.com/omab/django-social-auth/blob/master/social_auth/backends/pipeline/user.py#L59), what you should do is implement your version of that create_user function that implements the needed checks if there's no user value in kwargs (that means a no-logged in user) and returns an HttpResponseRedirect to the registration page when needed.\nClosing since it's not a bug, reopen if needed.\n. An example of partial pipelines is detailed in the example app now, also some doc was added.\n. No, de-authorizations are a user thing provider by the other point, in this case Facebook app administration, I'm not aware of any API. However, the app has disconnect URLs that will remove the account/social-account association (check https://github.com/omab/django-social-auth/blob/master/social_auth/urls.py#L14). Take into account that once disconnected users won't be able to loging unless you provide another mechanism like user/password or they have associated another social account.\n. Session handling is up your setup, once a user has loggedin using facebook, twitter, etc, it's up to django to keep the session, I don't see anything that could lead to the described behavior.\n. Any clue?\n. The logout is on your site, right? Or the issue is that the token become invalid after a while?\n. @vipulvpatil, the session live time is determined by your custom setup but by default it last 2 weeks (https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-SESSION_COOKIE_AGE) if using cookie-based sessions.\nTo implement a logout button just add a link to the logout view, take a look at the docs at https://docs.djangoproject.com/en/dev/topics/auth/#how-to-log-a-user-out\n. No and this is controlled by Facebook, what happens is that the first time you login into Facebook to grant access to the app, then Facebook checks for your session value and see that you are already logged in, and doesn't ask for user/password again, it will ask your user/password if you logout from Facebook.\n. @vipulvpatil, I guess it's acceptable, the user is clearly loggin into the site, the sites only need to certify that the user is who he say it is, and since login is already developed and is easy to use, then they go through login.\n. @vipulvpatil, thanks, that's better and will attract a wider audience\n. You should provide links to association URLs to your logged in users, check the example app https://github.com/omab/django-social-auth/blob/master/example/templates/done.html#L35.\n. Signal? You don't need signals, the purpose of the associate URLs is to associate the new social accounts to the logged in user (https://github.com/omab/django-social-auth/blob/master/social_auth/urls.py#L11). So, if you are logged in and go to /social/associate/facebook/, that will go throw the authentication mechanism with Facebook and then associate the account with the current logged in user.\n. I'll merge this if you implement the little commented change\n. Is /users/login/social/done/ your SOCIAL_AUTH_LOGIN_REDIRECT_URL? in that case that's something on your view, but there was a bug on complete view that didn't treated the next argument correctly, it's fixed on above commit.\n. It's not django-social-auth fault but just normal django auth login behavior, take a look to https://code.djangoproject.com/browser/django/trunk/django/contrib/auth/init.py#L64\n. I guess that wrapping the complete view that takes the session stuff you need before the user is logged in should work for you.\n. This should do the trick:\nfrom xxx.views import my_custom_view\nurl(r'^complete/(?P[^/]+)/$', my_custom_view, name='social_complete')\n. @yekibud, could you add a prefix to the setting name, something like GOOGLE_ since it's google specific?\n. Maybe an actions pipeline is useful on disconnect action too, will have a thought about it.\n. Damn, it's the first time I see this ticket, sorry for that. I approve that kind of option.\n. I prefer the solution proposed by @uruz than adding extra complexity to DSA. Thanks.\n. There's no way to avoid the redirect on a full auth process, some services return an HTML and in that case the redirect is not needed, but I think only google openid has such option.\nIf you have the tokens/access-codes you could try loading the complete URL with such data, but I'm not 100% confident that that will really work. Let me know if you try.\n. Glad to see a solution, be sure to do it through SSL, the access_token is sensible data.\n. I'm looking forward it, will you implement it? :D\n. According to that doc you need the oauth_token and oauth_secret, those are stored in the extra_data field on the corresponding UserSocialAuth instance, but it's stored as a single query string under the key access_token. Try something like this (assuming you have the current user under the user var)::\n```\nimport cgi\nuser_social_auth = user.social_auth.get(provider='google-oauth')\noauth_values = cgi.parse_qs(user_social_auth.extra_data['access_token'])\ncalendar_client.auth_token =  gdata.gauth.OAuthHmacToken(\n    settings.GOOGLE_CONSUMER_KEY, \n    settings.GOOGLE_CONSUMER_SECRET, \n    oauth_values['oauth_token'][0], \n    oauth_values['oauth_secret'][0], \n    gdata.gauth.ACCESS_TOKEN)\n``\n. The issue is that you can't test google-oauth2 on your localhost if I can recall correctly.redirect_uriis computed automatically using current domain, port and the path to django-social-auth complete URL and it must match the value you used when configured the app on google.\n. When do we get the .deb config? :D\n. Try adding this settingSOCIAL_AUTH_SESSION_EXPIRATION = False`\n. This is really odd, any clue on your points?\n. Closing, reopen if it's still relevant or have more data to check it.\n. Define this setting::\nTWITTER_REQUEST_TOKEN_EXTRA_ARGUMENTS = {\n    'x_auth_access_type': 'read'\n}\n. Any error message?\n. Closing, reopen if issue persists and please add some details like traceback or error message.\n. I don't see the problem here, that way is quite clean IMO, you just specify the URLs your users want access to while the app provides some sane defaults.\n. SOCIAL_AUTH_CREATE_USER is deprecated, it shouldn't be a trouble. Overriding the default URLs is quite simple than building a set of URLs based on settings values, it's just 5 lines of code :-)\n. I would say that the Redirect URI is not properly defined on google app configuration.\n. @ganeshglits, it's been a month, any more info?\n. Mmm... I don't do support for oauth-login-demo, you don't need a setting for DSA, just define an app in Google's API Access section in https://code.google.com/apis/console/ page which Redirect URIs has the format::\nhttp://<your domain>/<social-auth-prefix-if-any>/complete/google-oauth2/\nhttp://<your domain>/<social-auth-prefix-if-any>/associate/complete/google-oauth2/\nThen copy the generated Client ID and Client secret values into the DSA settings with it's corresponding names::\nGOOGLE_OAUTH2_CLIENT_ID = \"...\"\n  GOOGLE_OAUTH2_CLIENT_SECRET = \"...\"\n. Closing, reopen if this is still relevant, or try the mailing list http://groups.google.com/group/django-social-auth\n. social_auth.views.associate_complete uses request.user to pass the user, so for some reason the user in the request is None, maybe you miss some authenticateion backend? Maybe some middleware?\nThere's any query parameter in the URL that GitHub is redirecting back?\n. Added some doc clarification just in case. Thanks.\n. Are the parameters escaped properly?\n. Does setting SOCIAL_AUTH_SANITIZE_REDIRECTS = False solve the issue?\n. Not a waste, thanks.\nClosing.\n. > Looking for the problem I also noticed that the get_backends function does some unnecessary work\n\nby discovering its own BACKENDS cache and adding that to itself (which of course accomplishes\nexactly nothing).\n\nWhat do you mean? Where do you see such behavior?\nThe same fix can be accomplished by adding OpenIdAuth to BACKENDS and improve the if not BACKENDS or force_load: check, right?\n. Your explanation makes a lot of more sense now, merged.\n. I suppose you are talking by the exception raised here https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L437.\nExceptions are cached and treated properly on https://github.com/omab/django-social-auth/blob/master/social_auth/views.py#L48. But the exceptions are raised if the setting DEBUG is set to True because it's easier to check the backtrace and get a 500 error page with details while debugging.\n. Define this setting to avoid tracebacks SOCIAL_AUTH_RAISE_EXCEPTIONS = False.\n. I'm not able to reproduce it, it works OK locally and on demo site.\n. Good analysis, I've changed the URL in the next changeset.\n. Thanks\n. It should work correctly now.\n. Usually yes, you would create the user after resuming the pipeline, but it could be useful the other way too, last changeset fixes the issue.\n. Any traceback?\n. Reopen if needed.\n. I'm not in favor of the class with a call(), instead I've added a override option for the user exists check, you will be able to create your pipeline get_username that calls the original one with a function that implements the needed check.\n. Things being configurable is the purpose of the pipeline, if the default behavior doesn't fit, then it's the time to implement the needed functionality for the project as a new pipeline item.\nThe main idea is to have small functions that do the work properly. But DSA aims to provide a default basic behavior, not cover all the possible cases or it will end like a big classes collection with lot of overrideable methods for \"just in case\" scenarios.\nThanks.\n. I think it's much simpler to do list(PIPELINE).index(entry) and it won't be a performance killer.\n. Updating the pull request is enough, merged now. Thanks.\n. Do you get the error after POSTing your form?\n. And you have Facebook's FACEBOOK_APP_ID and FACEBOOK_API_SECRET defined? Also, do you have the Facebook backend entry in AUTHENTICATION_BACKEDS ?\n. Could you share some more details, maybe the custom pipeline setup or your custom pipeline entry? I'm not able to reproduce it locally.\n. I'm not able to reproduce even with your settings, please drop a pdb, that would be very helpful.\n. That's weird, both required arguments (request and auth) are well specified in the kwargs passed in the complete process and to authenticate() which finally triggers the pipeline. Which version of DSA are you using?\n. Can you inspect args and out before the save_status_to_session() call?\n. Try version 0.6.6 please.\n. v0.6.6 was just deployed with the fix to the bug you just found :D\n. 400 error usually refers to an unauthorized token request, maybe the user canceled the access, but there's code to catch that workflow. Any more info?\n. @geboyr, AFAIK Facebook always checked URL thing, for my tests I have a Facebook app that uses myapp.com as domain and then I've defined 127.0.0.1    myapp.com in /etc/hosts and use http://myapp.com:8000 locally, that's enough to trick Facebook.\n. Thanks @tijs\n. No, that's not correct, it should run always when the user is redirected back to your site from facebook, any more debugging info?\n. Try here https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L109\n. It's not a diff, just the line I've suggested to put a pdb.set_trace() call, so it works now?\n. Which version of djangos-social-auth are you using?\n. Please move it to backends/contrib.\n. @nlaurance, please check the last changeset.\n. That expected return_to doesn't seems right, it should be an absolute URL with the server name, could you check the result of request.build_absolute_uri('/complete/google/') ?\n. @yugal, can you try the test in my previous comment?\n. @yugal, you could try registering the IP address in the google app, but I'm not sure that will work. AFAIK google and facebook check for the the URLs defined and return error if not match.\n. @paritosh90, does the fix from @yugal work for you too?\n. @yugal, no since this issue affects a whole django project, not just this app, at least some doc could be added in Use Cases section. I'm happy to merge any pull request :D\n. Join the discussion group at https://groups.google.com/group/django-social-auth\n. The fix was already pushed, thanks anyway!\n. Merged but I'm thinking that these checks are better suited in the pipeline instead of adding more and more methods to the class.\n. Usernames can be very tided to the project/site, that was the reason behind the (now deprecated) SOCIAL_AUTH_USERNAME_FIXER.\nThe preferred method now is defining a pipeline entry similar to this one:\ndef clean_username(*args, **kwargs):\n    if 'username' in kwargs:\n        return { 'username': re.sub('[^a-zA-Z_0-9]', '', kwargs['username']) }\nand put it right after 'social_auth.backends.pipeline.user.get_username', entry in the pipeline.\nCheck the pipeline doc for details at http://django-social-auth.readthedocs.org/en/latest/pipeline.html\n. Can you do the same for doc/configuration.rst ?\n. Thanks\n. Exceptions are raised if you have DEBUG = True, you can disable this behavior and get the redirect to your login-error-view by defining SOCIAL_AUTH_RAISE_EXCEPTIONS = False.\n. @Bastien-, use version 0.6.7\n. I've followed the detailed steps without any luck on reproducing the issue, any more details?\n. You mentioned a custom partial pipeline, could you describe it? I would say to debug where UserSocialAuth instances are created here https://github.com/omab/django-social-auth/blob/master/social_auth/backends/pipeline/social.py#L29\n. @ajt, the user must be logged in, if it's not passed then that means that the user is not logged in or you are using the wrong URL to associate new accounts, verify that the the associate URL is being hit, for example /socialsignup/associate/twitter/.\n. I should have spotted or suggested that before.\nThanks.\n. Duplicate of #271, this changeset fixed the issue https://github.com/omab/django-social-auth/commit/7418ec96d36ac3f690dcda9ca3531a20bfc50f7b\n. @dhananjaysathe, which version of social-auth are you using?\n. @dhananjaysathe, I can assure you that SOCIAL_AUTH_EXTRA_DATA = True works OK (you don't even need to define it). The access token is accessible like this::\nu = User.objects.get(...)\nu.social_auth.filter(provider='facebook')[0]\ntoken = u.extra_data['access_token']\nDoes that work for you?\n. No prob, thanks.\n. I've just pushed some work that differentiates the exceptions raised from social-auth (https://github.com/omab/django-social-auth/blob/master/social_auth/backends/exceptions.py), will you be able to merge your repo with the last HEAD and update the pull request?\n. closing it since it doesn't merge correctly now, update and reopen again please.\n. Why would you expect that? It's not usual to start a registering process, step out and then continue from the step you left.\n. @Dru89, good to know, thanks.\n. @vinigracindo, I don't follow, how can a user accept an application directly on twitter?\n. Closing, reopen if needed.\n. Thanks, this needs to be addressed.\n. Yeah, tests are not maintained for a while now, I'm planning to drop those and create selenium ones since they are much easier to develop and maintain.\n. Seems like the error is caused by some app trying to use django.contrib.messages with a user that's not authenticated, DSA does that when processing the error messages caused by exceptions on some backend, etc. Maybe disabling that processing will solve the issues too, can you try defining a function like this on some place:\ndef process_exceptions(*args, **kwargs):\n    pass  # do nothing\nand then define this setting:\nSOCIAL_AUTH_PROCESS_EXCEPTIONS = 'import.path.to.process_exception'\nand give the tests another try?\n. @lambdalisue, the process_exception handler is not deprecated in favor of SocialAuthExceptionMiddleware usage, the idea is that projects extend it to add custom behavior. Also it has protection against adding messages to non-authenticated users. Check the docs at http://django-social-auth.readthedocs.org/en/latest/configuration.html (near the bottom, last point above the \"Notes\" section, I need to improve the docs linking).\n. The setting is deprecated but not the functionality, it's defined here https://github.com/omab/django-social-auth/blob/master/social_auth/backends/pipeline/associate.py#L9, in the future who wants to disable that feature just needs to define SOCIAL_AUTH_PIPELINE dropping the associate_by_email entry. At the moment you need to define the setting for backward compatibility.\nI think the moment to drop those deprecated settings is near, maybe it's time to release v0.7.0 and drop them.\n. @jmichelsen, no, there's no way since it's not an easy task to accomplish on a generic way\n. @skizzy, first you posted your Twitter consumer and secret keys to a public place :D, second, remove the comas after each key or you are creating a tuple.\nAlos, SOCIAL_AUTH_ENABLED_BACKENDS is deprecated, it's enough with the AUTHENTICATION_BACKENDS list.\n. Please paste the traceback.\n. Nevermind, just saw the new raised issue #287.\n. Are you behind a proxy?\n. @skizzy, it looks like a connection issue on your development server, there are a few similar reports in stackoverflow, plese check them too since I don't see any issue with DSA so far, but I lack windows experience.\nSome SO links:\nhttp://stackoverflow.com/questions/5022945/urllib2-urlerror-urlopen-error-errno-11004-getaddrinfo-failed\nhttp://stackoverflow.com/questions/4847649/opening-websites-using-urllib2-from-behind-corporate-firewall-11004-getaddrinf\nhttp://stackoverflow.com/questions/5620263/using-an-http-proxy-python\n. Don't see any reason to use pycurl, clearly @skizzy has a problem on it's own platform.\n. @skizzy, if it's a bug, then raise a new one, if it's just a question, the mailing is the preferred method https://groups.google.com/group/django-social-auth.\nI'm closing the issue. Thanks.\n. That's not they way to disable the associate_by_email, the idea is that you remove the entry from the pipeline if you wan't to disable it.\n. @Adys, I've updated the docs, check http://django-social-auth.readthedocs.org/en/latest/pipeline.html right below the default pipeline doc for details.\n. A set of properties in UserSocialAuth should do the work.\n. This issue is a duplicate of #277 which was alredy fixed. Which version of DSA are you using?\nEdit: typo in ticket number.\n. The fix is included in v0.6.7\n. Please, don't raise issues about taking a look to another one.\nClosing.\n. Thanks\n. The usernames aren't stored at the moment, you can define these settings to get them stored in the extra_data attribute of the UserSocialAuth instance:\nFACEBOOK_EXTRA_DATA = ['username']\nTWITTER_EXTRA_DATA = ['screen_name']\nthen access them as user_social_auth.extra_data.get('username') or user_social_auth.extra_data.get('screen_name').\nIf you want more uniformity, then you can code a custom pipeline entry that takes those names from the response parameter (check how facebook backend does it https://github.com/omab/django-social-auth/blob/master/social_auth/backends/facebook.py#L41, and twitter too https://github.com/omab/django-social-auth/blob/master/social_auth/backends/twitter.py#L35), and store it under extra_data['username'], and then just use user_social_auth.extra_data.get('username').\nuser_social_auth is the UserSocialAuth instance for twitter or facebook provider.\n. BTW, the mailing list (https://groups.google.com/group/django-social-auth) is a better place for this kind of questions than a bug report.\n. #370 merged, closing this one.\n. Cannot reproduce, here's what I did:\n1. Login using Google OpenID (/login/google/)\n2. Disconnect account (/disconnect/google/x/)\n3. Logout\n4. Login using Google OpenID (/login/google/)\nIt worked. I've also tried this one:\n1. Login using Google OpenID (/login/google/)\n2. Disconnect account (/disconnect/google/x/)\n3. Associate Google OpenID (/associate/google/)\nand it worked too. Different Nonces were created each time.\n. @yrik, the issue is fixed now. Thanks.\n. I cannot say since I've never tried, but some people did AFAIK. Please try the mailing list for this questions http://groups.google.com/group/django-social-auth.\nClosing since it's not a bug.\nThanks\n. This setting should do the trick:\nFACEBOOK_PROFILE_EXTRA_PARAMS = {'locale': 'ru_RU'}\n. Exceptions are controlled in the decorator dsa_view(), you can define SOCIAL_AUTH_RAISE_EXCEPTIONS = False to avoid the exception being raised, the user will be redirected to SOCIAL_AUTH_BACKEND_ERROR_URL or LOGIN_ERROR_URL if the first is not defined. And the exception message is logged using django messages framework by default, but you can define your own processor.\n. @ads901119, set DEBUG = False in your settings (the code is not very good when checking SOCIAL_AUTH_RAISE_EXCEPTIONS value).\n. @amosjyng, since a few versions ago a middleware was introduced to move the exceptions handling from DSA, so, the current best approach is to subclass https://github.com/omab/django-social-auth/blob/master/social_auth/middleware.py#L10 (or not if it already does what you want), and override the needed methods to implement your expected behavior.\n. Do you have social_auth in INSTALLED_APPS? I don't see anything wrong with the {% url ... %} call, but something odd is happening in your project, the error message doesn't show the URL name being resolved, maybe another URL entry is too greedy and is used to resolve it before social_auth is checked?\n. What do you mean with \"inside quote\"?\n. Remove the quotes around socialauth_begin please. It should be like this:\n{% url socialauth_begin \"facebook\" %}\n. Oh, misunderstood your previous message. This change on 1.3 might be the cause https://docs.djangoproject.com/en/dev/releases/1.3/#changes-to-url-and-ssi, I'm still confused why I don't get that error locally.\n. No, since it's part of django doc and I won't duplicate that already extensive documents. Also the demo app cannot be updated because the app still support django 1.2.5, when support for that version is dropped, then it can be updated.\n. No, Twitter doesn't disclose users emails, https://dev.twitter.com/discussions/4019\n. Thanks\n. This is a duplicate of #289, it was fixed already https://github.com/omab/django-social-auth/blob/master/social_auth/backends/pipeline/associate.py#L15 but I think it was not released to pip yet.\nThanks\n. Closed by pull request #310.\n. Why not just remove the override and let the super class definition take place?\n. I left an small comment on the first change, please review.\nThanks\n. I buy it. Thanks\n. Mmm... I merged an updated pull-request :-/\n. @bacher09, I've made a change that makes user_data() arguments more flexible using *args, **kwargs, but that doesn't contain your ConsumerBasedOAuth change to retrieve response and pass it to user_data(), if you merge current HEAD I'll pull your changes to that and flickr.\n. I'll test it and confirm. Write as much doc as you want, but please, add it to main README.rst and also to doc/backends/vkontakte.rst (and add an entry in doc/backends/index.rst). It's OK if you copy/paste the same content, README.rst will be improved soon and point to read-the-docs since it's easier to use than a big text file IMO.\n. @bacher09, flickr backend worked OK. Could you prepare a pull-request?\n. Fitbit was broken but not because of your change, it's fixed on my repo now. After that fix it worked OK with your code too.\n. Exceptions go away when debug is False or SOCIAL_AUTH_RAISE_EXCEPTIONS = False, please check with the second setting.\n. Seems that you are being disconnected when DSA exchanges the oauth token with an access_token. Maybe your domain mydomain.lol is the issue?\nApp domain and Site URL is enough.\n. Just tested with myapp.lol and it went well here. Another thing to check is the \"Advanced\" tab in facebook app configuration, check that App Type is Web, and also Sandbox Mode should be disabled (it causes some troubles that I need to check AFAIK).\n. I've added a comment about this issue in the docs http://django-social-auth.readthedocs.org/en/latest/miscellaneous.html#python-2-7-2rev4-2-7-3-and-facebook-backend. Thanks for the bug hunting and the detailed explanation.\n. @bedspax, that's the way, great.\n. Thanks.\n. Merged manually. Thanks.\n. @night-crawler, I've deprecated the /associate/ URLs in the linked changeset (a change I wanted to implement a lot of time ago). So, from now on just use the /login/<backend>/ and /complete/<backend>/ in your app configurations and your site URLs.\n. @night-crawler, if the user is logged in your site, then a new account won't be created, it will be exactly like the association process but using the usual /login/ URL instead of /associate/. If the user is not logged in, then a new account is created.\n. Which django-social-auth version? line 106 doesn't refer anything on current HEAD.\n. This changeset introduced data type check https://github.com/omab/django-social-auth/commit/cd085afc7ff8c8fc2bb2e0e768b3d3a2a06a5e2c. But I don't consider this a real solution since it's hiding the real issue, data comes as a bool for some reason that I'm not able to reproduce so far.\n. This might be relevant http://stackoverflow.com/questions/5011027/facebook-graph-api-returns-false, and there are others posts but my tests couldn't reproduce it so far :-/\n@bacher09, I agree that a better mechanism instead of hiding is needed and exceptions seems OK, and this is a needed change since the user ID is a required value or further logins will fail to retrieve the registered account and will create a new one instead.\n. No, you need to specify the permission you require access to, otherwise it just return basic data (names and id if I remember correctly). Even email is not returned unless requested. Check http://developers.facebook.com/docs/authentication/permissions/ for the list of permissions supported by Facebook. And use FACEBOOK_EXTENDED_PERMISSIONS setting to define them in your project.\n. The best solution is to add a pipeline entry (http://django-social-auth.readthedocs.org/en/latest/pipeline.html) that will store the data in some place, a pipeline like this would be an starting point:\ndef store_facebook_data(user, response, *args, **kwargs):\n    # Response is Facebook response, the additional data will be available there\n    print response\nHope this helps.\n. Awesome. Thanks.\n. Clearly data is coming back as a True/False value for some reason that I don't understand, seems that the JSON output at https://github.com/omab/django-social-auth/blob/master/social_auth/backends/facebook.py#L70 might be broken? Can you debug the result there? Otherwise data should be None which is checked in auth_complete at https://github.com/omab/django-social-auth/blob/master/social_auth/backends/facebook.py#L107.\n. Previous changeset fixes the issue but it hides the real problem IMO, data shouldn't be a bool unless I'm missing something in Facebook workflow that's not supported by DSA yet.\n. Check the doc for FACEBOOK_EXTENDED_PERMISSIONS http://django-social-auth.readthedocs.org/en/latest/backends/facebook.html\n. Do you have any traceback? Some details about how to reproduce it?\n. Reopen if needed.\n. Merged manually. Thanks.\n. No, because a user can have multiple associated accounts making this a many-to-one relation.\n. It might be easy to miss, thanks for keeping an eye on the code though.\n. @bedspax, I think I didn't got the whole picture, but what you are looking for is very easily accomplished by defining custom steps in the auth pipeline, right? You just need to figure the way to send the info to your other server (API, databse sharing, etc).\nI didn't understood the last item userIsNotLoggedOnServerA, what does it mean?\nPS: I'm closing the issue since this is no bug or request actually.\n. Great work @andrusha, keep it coming\n. No, DSA only does authentication/authorization work. Your options are:\n1. Use Facebook API directly (urlopen, json, etc) to accomplish your invite-friends action\n2. Use any of the many Facebook API libs to use the API\n. Can you prepare a pull-request with such util? a good place would be social_auth/utils.py IMO.\n. @andrusha, from that last change, you will be able to do:\n```\nfrom social_auth.backends.yahoo import YahooAuth\nfrom social_auth.backends.utils import consumer_oauth_url_request\nresponse will be the json evaluated\nresponse = consumer_oauth_url_request(YahooAuth, 'api.yahoo.com/something', user_id, '/')\n```\nI didn't tested against any API, just checked that the auth workflow was still working OK, so please review.\n. Related manager fixed. JSON parsing is on by default, but doing json=False will disable it and return the raw data, I think it's a good option for that utility since json is the usual preferred return value.\n. I've made an small change that fixes the retrieval of the UserSocialAuth instance, then I did a test and it worked correctly, I was able to get the response from http://social.yahooapis.com/v1/me/guid?format=json with my freshly generated access_token. Do you have the needed scopes configured in Yahoo app panel? I think Social Directory is the one needed to access the /v1/me/guid.\n. I think you can't avoid that step when using Google OAuth1.0, at least I didn't found anything to avoid that when I've implemented the backend. This doesn't happen when using OAuth2.0, and taking into account that OAuth1.0 is deprecated by google (still working and will be working for a while), I would consider moving to OAuth2.0 instead of 1.0.\n. It shouldn't happen as it's shown on the demo site, do you have any more\ndetails?\nExcerpts from Iurii Kriachko's message of 2012-05-08 08:51:01 -0300:\n\nHas the same problem.\nIt stil exist with oauth2.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/342#issuecomment-5572845\nMat\u00edas Aguirre (matiasaguirre@gmail.com)\n. @broderboy, I've tried with your same settings (but using my keys of course), and it worked correctly, the auth dialog only appeared the first time and further attempts didn't asked for permissions again.\n. Wow, this is big, I'll review it and merge or suggest some changes, thanks!\n. Yeah, it's right in the docs http://django-social-auth.readthedocs.org/en/latest/backends/facebook.html, check the FACEBOOK_EXTENDED_PERMISSIONS setting.\n. Never tried Instagram+facebook (or have idea of the changes since Facebook bought Instagram), but my guess is that some of the publishing-on-behalf-of-the-user is needed, maybe publish_stream is enough?\n. Thanks, I've added it to the doc to avoid confusion.\n. Yes, the last backend used is stored in the session, you can access it by doing request.session['social_auth_last_login_backend']\n. @sunprophit, thanks for mention that, it's added to the doc now.\n. @cihann thanks\n. Thanks\n. Thanks\n. The main problem is how do you identify that an already registered user is trying to register a second account if he is logged out of your site? You could use a cookie, but those aren't really reliable IMO.\n\nIf you figure how to do it, you can easily raise an exception in the pipeline before the create_user entry (https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L75).\nAlso, in the pipeline you can check if the user parameter is None (before the create_user) or if is_new is True (after create_user), that implies a registering process.\n. The backend shouldn't have that responsibility. Anyway, you can implement this behavior without needed a change in this app, you can implement a simple view like this one::\n```\nfrom social_auth.views import auth_process, complete\nfrom social_auth.decorators import dsa_view\n@dsa_view('login_complete')\ndef login(request, backend):\n    return auth_process(request, backend, args, *kwargs)\n@dsa_view('register_complete')\ndef register(request, backend):\n    return auth_process(request, backend, args, *kwargs)\n@dsa_view()\ndef login_complete(request, backend, *args, kwargs):\n    return complete(request, backend, is_login=True, *args, kwargs)\n@dsa_view()\ndef login_complete(request, backend, *args, kwargs):\n    return complete(request, backend, is_login=True, *args, kwargs)\n@dsa_view()\ndef register_complete(request, backend, *args, kwargs):\n    return complete(request, backend, is_register=True, *args, kwargs)\n```\nThen define a pipeline entry that should go before the create_user:\ndef avoid_register_on_login(*args, **kwargs):\n    if kwargs.get('is_login') and kwargs.get('user') is None:\n        return redirect('/url/to/explain/the/issue')  # or raise an exception\nTake into account that some providers enforce the redirect URL to match the one defined in the app configuration, so this might not work for every provider.\n. Great\n. Do you have your custom pipeline definition?\n. This is odd actually, the pipeline ensures that social_auth is created, there's an IntegrityError check at https://github.com/omab/django-social-auth/blob/master/social_auth/backends/pipeline/social.py#L41, maybe you are hitting that one and the call to social_auth_user is returning a None value, do you mind trying to debug that?\n. @skizzy, did that work? Can I close this or more checks are needed?\n. Good catch, thanks.\n. @inactivist, I've just tried your very same steps and everything worked OK, the home page showed correctly, do you mind sharing the entire stacktrace?\n. Hehe, good to know. Good luck!\n. DSA could narrow this issue by sending some confirmation email, but users would be annoyed with so many confirmations, the pipeline won't be hard to implement and those willing to ignore it can disable it easily. Besides that, I don't think another solution could be implemented to avoid that situation, a simpler approach would be to just add a comment to the docs explaining the risk of this setting.\nThis is a good problem to get solve, so I might take some time to implement the pipeline entry to send confirmations.\n. Change implemented, thanks.\n. Merged, thanks.\n. Seems that you missed the AUTHENTICATION_BACKENDS settings http://django-social-auth.readthedocs.org/en/latest/configuration.html\n. @Camel, could you paste the full traceback and data used in that particular line?\n. Thanks\n. Thanks\n. @hannes2000, thanks for the setting, this looks very useful. One small request, could you add the same doc to https://github.com/omab/django-social-auth/blob/master/doc/configuration.rst ?\n. @hannes2000, great, thanks!\n. Thanks\n. @sfdye, I've never tried it with nonrel, the admin page works quite well with a usual db backend, can you isolate the problematic query?\n. @sfdye, that's not a solution, just a work around. The weird thing is that the filter defined is very simple, it's just configured for provider field which is just a CharField.\n. Still an issue?\n. @sfdye, OK, thanks, I'll close this but feel free to reopen if needed.\n. @tazzy531, that code wasn't moved, but I've removed ModelBackend from SocialAuthBackend some time ago, could you test that change and leave a comment (or prepare a pull-request)? I'm reopening this issue.\n. @tazzy531, thanks for the detailed explanation, after checking this I've too decided that this a django-nonrel issue and they should take care of it (doing distinct in-memory does not scale properly to consider it as a solution IMO).\n. I fail to see how this is related to django-social-auth.\n. Thanks, merged.\n. @kiranchari, to which URL does it redirect? Are you logged in with twitter? Did you approved the app previously?\n. That might mean that the process worked and your user should be logged in, do you mind checking for request.user.is_authorized() in your view?\n. Oh, disregard my last comment, I didn't saw your last one :D\n. Thanks.\n. Fixed, thanks for reporting.\n. I prefer this solution than #297, keep the work, I want to see the final result\n. Maybe AUTHENTICATION_BACKENDS is not defined? Maybe your mongoengine models drop an error causing an ImportError killing the get_backends() functionality?\n. Sounds like the redirect URL is wrong, maybe you have this setting defined SOCIAL_AUTH_COMPLETE_URL_NAME or maybe the URL in twitter side is wrong?\n. @estebistec, just need some free minutes to check it :-/\n. @estebistec, I've pulled your changes into a branch and made some changes and little improves, take a look to it and let me know what you thinkg https://github.com/omab/django-social-auth/tree/estebistec\nI think it's ready to merge into master.\n. 1. I don't dislike the conf module idea, just didn't saw the point for a single setting right now.\n2. I'm not very comfortable with model class, but prefer them than lot of methods that need to be explicitly imported, and the class seems to be a good place since they know about the needed API internals, and the mixins simplified a lot in that area.\n3. No prob, saw the comments so seemed the logical step to improve the work.\n4. No doc yet, and I'm in favor of documenting it, there's no purpose on hiding anything, specially a good solution that would be useful.\n5. I'm not worried about tests since they are quite unmaintained at the moment (sadly), they need a whole review and rewrite for sure. Overall the change looked OK and my manually tests worked well.\nIf you can add some basic doc, that would be awesome, we can improve it from there, about tests, I won't worry about them just yet. I liked the change and the whole idea since itan area that weren't covered and several users have asked for it already.\nThanks\n. @estebistec, sure, take your time, no hurries at all. Thanks\n. @kulbir, do you mind adding some small doc about the backend conf, like the ones at https://github.com/omab/django-social-auth/tree/master/doc/backends ?\n. Great, thanks!\n. Yes, I'm aware of testing failing :(, I plan to replace them with selenium tests since it's simpler to check that way than messing with the sites that usually do too many redirects or need to POST data.\n. Closing in favor of #436\n. Thanks\n. @salomo851, this issue was discussed some time ago on #342, sadly the conclusion was that Google OAuth1 always requests the user for permission.\n. UserSocialAuth.user is non-null at the moment, if you want to associate an account to an already registered user, veryfy that the link is shown to logged-in users, or make sure your link points to a view for logged-in users only, it's a requirement.\nAlso, this setting is not user anymore::\nSOCIAL_AUTH_ENABLED_BACKENDS = ('github',)\nInstead AUTHENTICATION_BACKEDS is used.\n. Defining the setting GITHUB_EXTENDED_PERMISSIONS, check http://django-social-auth.readthedocs.org/en/latest/backends/github.html\n. Thanks\n. @bedmondmark, it's much to ask for a small pull-request where you document that solution in the https://github.com/omab/django-social-auth/blob/master/doc/use_cases.rst? If you cant I'll add as soon I get some free time to focus on DSA.\n. Sounds fair, many thanks!\n. @1st, import errors are logged but the pipeline ignores it and continues with next entry, maybe that should change, maybe not, I'll think about it.\n@bedmondmark, no hurries\n. @1st, I've removed the exceptions catch since that will help to debug errors related to the pipeline.\n. @kalamhavij, it's just an example, not production ready doc. I agree on the docs improvements, what do you suggest should be improved about pipeline docs?\n. Thanks\n. Thanks\n. Thanks\n. That format is correct, is the value sent by Twitter as access_token. There's a property tokens in UserSocialAuth that makes the split if you need it.\n. Thanks\n. @twoolie, I've introduced the state parameter to OAuth2 backends, base backend defines, uses and checks it, but subclass can disable the process if needed like Github and Instagram backends that don't sent the parameter back :-/\nBackends for Mail.ru, Odnoklassniki and Yandex weren't tested because I know nothing about Russian, I'll ask the contributors to check them. The rest were tested and worked as expected.\nThanks for pointing the issue, I saw the article earlier today but it banished from my mind at the end of the day.\nWill leave this open until the Russian backends are checked.\n. Additional parameter is not possible on every case since some providers enforce the redirect_uri check between the request value and the one defined in the app configuration, Google does it and fails showing a \"redirect_uri mismatch\" error page.\n. @homakov, gotcha, got lost in the discuss for a little.\n. The blog update only refers to the changes that @krvss needed to implement in this app to make facebook canvas work, this is the particular changeset https://github.com/omab/django-social-auth/commit/24e482aee5e375d2153a331c86d27ac84b72c978.\nMy guess is that you still need the JS code to make it work.\n. Sorry, didn't meant to close.\n. Hey @krvss, just pinged you thinking that you might add something to the discuss, if you can bring an example I'll gladly to add to the doc.\nThanks\n. @krvss, excelente, I've merged it, thanks.\n@uruz, check last changes from @krvss\n. Thanks\n. That's awesome, thanks.\n. It's still weird why your response is missing some keys, maybe some users restrictions?\n. Usually that scenario doesn't happen since social_auth_user checks for that, but I've added the protection since it would be helpful when isolating the entry in custom pipelines. Thanks.\n. User authentication is case-sensitive too, why do you think that the username is duplicated? Admin is different than admin.\n. Thanks.\n. @gclementsatrue, it was broken, thanks.\n. Thanks\n. What happens if you import UserSocialAuth and use that in the ForeignKey?\n. @uruz, that last changeset should have fixed it.\nThanks\n. Is /accounts/ your LOGIN_URL? Do you have a LOGIN_ERROR_URL defined?\n. social_auth_login_redirect was added after v0.7.0\n. Pull request #402 merged (#401 was discarded in favor of #402).\n. I'm willing to merge it but cannot do it automatically and don't have time to do it by hand right now, do you mind merging last head into your repo and update the pull-request? Otherwise I'll do the marge later today.\n. No since it's a change that implies a schema change and this app doesn't provide migrations, IMO a better solution would be to store the proxy email into UserSocialAuth.extra_data and leave the User.email blank.\n. Thanks.\n. Which is the reason for such dangerous option?\n. @arnaudbreton, yeah, at least an authorized parameters list should do the work quick, another approach would be to add a pre-auth pipeline that ran when the authorization process is about to be triggered, that way you can put a function that stores what you need in the session and keeps this session-storing just related to your project and is powerful enough to extend easily to do more stuff, but that seems to be a change quite big.\n. Closing since there's no progress. Reopen if needed.\nThanks.\n. Thanks\n. Thanks\n. Fixed in the last release v0.7.1\n. I've add the extra backend check since it makes sense to validate that data, but it's still strange how you triggered the issue, maybe depends on the session backend used, or some garbage left previously, but the session entry is removed when it's used and .pop() sets the modified flag to True if the key is present in the session.\nThanks\n. Fixed, thanks.\n. Not at the moment, some management command could be useful for that task, plus a cronjob task to run it.\n. @nnseva, I'll add the requested indexes, they sound fair enough, also will check to include south migrations since it's very used in Django community, but I lack the experience, since I prefer to have more control on the database. Of course, a pull-request is always welcome :)\n. I've added a couple manage command to ease Nonce and Association cleanups. Calling manage.py clean_nonces or manage.py clean_associations will remove any expired Nonce and Association instances. A cron rule should do the trick to run this tasks from time to time. Also added indexes where needed.\nI'll keep this open to track south integration.\n. @ustun, not very experienced with South, but yes, that should be the procedure AFAIK\n. @ustun, did it went as expected?\n. @ustun, yeah, no changes, I tried to make the migrations to resemble the changes made in that order.\n. Thanks for this work, I left an small comment. Also, any chance to get some small doc explaining where to register an app to use this backend?\n. @hepochen, thanks, merged\n. 23 backends in the contrib section, this is great, keep the good work!\n. Sorry, but I'm not following you there... what are you trying to solve/fix?\n. @kingtut, did you find the issue?\n. Cool, thanks for taking care of the ticket.\n. @markusgattol, that's correct, I need to park some time to update the README and finally drop the drepecated settings, but the preferred mechanism is to disable the pipeline entry as you point.\n. At the moment there's no dynamic scope, subclassing is the better approach, a callable alternative would be easy to code tho.\n. request is passed to backends (https://github.com/omab/django-social-auth/blob/master/social_auth/decorators.py#L29 and https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L326), you can access it by using self.request.\n. I prefer sub-classing solution since it's not a very common issue AFAIK, if this raises again, I might consider adding a more generic solution. Thanks\n. OK, seems that the time to fix tests has finally come, will make it my priority for DSA in the following days, meanwhile don't run them since they are broken anyway.\n. Closing in favor of #436\n. Thanks\n. Thanks\n. At which point did it hung? API call, redirect to Twitter login/allow app?\n. @johtso, I've created a branch to track this issue, in that I've added a setting to define a timeout (SOCIAL_AUTH_URLOPEN_TIMEOUT) for urllib2.urlopen calls. Seems to work OK so far, so I'll merge it soon to master, could you give it a look?\n. Yeah, that's why it's not altered unless the setting is defined, maybe some extra warning in the doc is needed. Python version is not specified, but I don't mind excluding 2.5 out.\n. Doc improve https://github.com/omab/django-social-auth/commit/627800702c3aa4e8c9dfc3b15257e383e3a8391c\n. @uruz, I've thought about that but so far urlopen does the work quite well, so didn't wanted to do a that big change yet, and I don't think it's gonna happen in the near future. Also I've been thinking to use this recent lib https://github.com/litl/rauth/, which already uses requests and brings an easier support to call OAuth1/2 APIs.\nRight now I'm happy with the current fix and will merge it to master today.\n. Branch merged and released v0.7.2\n. Thanks.\n. @uruz, tests are a really broken part on this project which I'm trying to solve and structure correctly in the following days (check #417). About your questions:\n1. I preferred the split at that time to separate selenium tests from regular tests, not a good idea now that I've reconsidered it.\n2. If they are Selenium tests, put them on contrib, otherwise put them on tests (I'll merge the tests split in a single directory soon)\n3. I doesn't have tests because it's a very simple example app, I don't think it's vital to have it tested at this point.\n. Closing in favor of #436\n. Thanks\n. Thanks\n. Thanks\n. @1st, I left an small comment on your code, seems that this is needed to support django 1.2.5 and 1.3, right?\n. @1st, do you plan to do the small code change commented?\n. @1st, you don't get an exception .get() returns None if the key is missing, check http://docs.python.org/library/stdtypes.html#dict.get for details.\n. @estebistec, good catch on that missing case exception, I would like to see that middleware, I'm sure that will be very useful for the community. Bring that pull-request and I'll glad to merge it.\nThanks\n. @estebistec, I've merged the pull, thanks. Regarding your question, yes, the setting resembles your middleware suggestion a little, but I think that a middleware is a much cleaner solution than that handler that I shouldn't have added from the beginning, that setting will be deprecated in favor of the middleware.\n. @estebistec, what do you think that instead of defining a AUTH_EXCEPTION_REDIRECT_URI_FUNC and AUTH_EXCEPTION_REDIRECT_URI settings, just let the middleware define a method get_redirect_url(request, exception) and make the users extend the middleware to define the extra functionality, the default method can default to LOGIN_ERROR setting and store the messages using the messages app, I find this a bit cleaner than extra settings (which there are too much already).\n. @tijs, I agree that having docs to show it and also defined in the example app will be a good starting point, meanwhile @estebistec don't worry about extensive docs and examples, I can add more docs later and also integrate it to the example app.\n. Closing since the work was merged.\nThanks everybody.\n. @ads901119, the dependency is not bad since the pipeline defines an execution order (like a pipeline command sequence in the command line). But they should be less prone to errors.\n. Thanks\n. @faxioman, I guess that you didn't created a middleware that sets request.user to the corresponding ConsumerUser instance, right? If that's the case, then the contrib.auth.middleware.AuthenticationMiddleware is being ran and the instance put there is an auth.User model causing that error you see.\n. @faxioman, thanks!\n. I've left a comment at https://github.com/omab/django-social-auth/issues/428#issuecomment-7563616 with a suggestion, I like this solution so far. Thanks.\n. @estebistec, maybe next parameter would come in help, but that's up to the user to add the next parameter to the URL\n. Looks good to me\n. @estebistec, I can do the example right after the merge, won't be a problem\n. @estebistec, great work, merged.\n. @tymofij, Google OAuth2 has name, https://github.com/omab/django-social-auth/blob/master/social_auth/backends/google.py#L71, it's required for all backends to have one.\n. @tymofij, that last changeset fixed the issue, thanks for pointing that out.\n. @estebistec, name is always on auth backends, but some exceptions might be raised by social-backends so that's why it's worth the check.\n. Thanks\n. That changeset gets rid of the default value on False issue. Thanks/\n. Instead of doing that, I would decorate the login view to always do a logout first, would that work for you?\n. @faxioman maybe the solution on this comment suits your problem https://github.com/omab/django-social-auth/issues/376#issuecomment-7674895\n. @faxioman, that looks good, could you document it in the Use Cases section (http://django-social-auth.readthedocs.org/en/latest/use_cases.html) ?\n. @faxioman, make a fork and edit this file https://github.com/omab/django-social-auth/blob/master/doc/use_cases.rst\n. @hcarvalhoalves, quite a lot I might say, but focusing on the auth process:\n1. Backend tests (just main backends, but contribution tests would be great of course)\n   - There are some old tests defined (not sure they still work)\n   - There are some selenium tests (again, not sure they still work)\n   - There are some CasperJS tests at https://github.com/omab/django-social-auth/tree/tests_refactoring/social_auth/tests/integration\n   - Probably mocking server responses is a better approach to test DSA\n2. Auth pipeline\nThere's a lot of work :-/\n. @mdippery, I don't have a problem with that since tests will be replaced by python-social-auth tests soon.\n. Tests on python-social-auth are far better than we had on DSA, coverage is around 94% of the code. Closing due to django-social-auth deprecation.\n. Can you verify the status and content of social_auth/backends/exceptions.py installed? Works quite well on virtualenv.\n. v0.7.2 didn't have the middleware work, I've just released v0.7.4 which carries the changes.\n. Closing since it seems fixed, reopen if needed.\nThanks\n. Thanks\n. I'll that doc soon. Thanks.\n. I was checking the issue since I wasn't aware of that change since 1.3, as you saw it's not the default behavior yet, but it will be soon, I'll add a note to the configuration section in the doc about it since DSA supports several versions of django.\nThanks\n. > At last I have bind my local address at /etc/hosts : 127.0.0.1 example.com:8000\nThat map is wrong, remove the port :8000 from that line.\n. Also, this setting SOCIAL_AUTH_ENABLED_BACKENDS = ('github', 'weibo',) is not needed.\n. @stephenLee, did you solve this problem?\n. Maybe @hepochen can shade some light.\n. @stephenLee, I think that what @hepochen means is that you should use http://example.com:8000 in the app configuration in weibo.\n. Thanks\n. I've merged this, but exceptions processors will go away son, instead a custom middleware derived from https://github.com/omab/django-social-auth/blob/master/social_auth/middleware.py is the preferred method now.\n. Thanks!\n. @1st, define a middleware derived from social_auth.middlewares.SocialAuthExceptionMiddleware and override the needed methods to do the redirect, some details at http://django-social-auth.readthedocs.org/en/latest/configuration.html (last point in Configuration section):\nA base middleware is provided that handles social AuthExceptions by providing a message to the\nuser via the Django messages framework, and then responding with a redirect to a URL defined\nby one of the middleware methods. The base middleware is social_auth.middleware.SocialAuthExceptionMiddleware.\nThe two methods to override when subclassing are get_message(request, exception) and\nget_redirect_uri(request, exception). By default, the message is the exception message and the\nURL for the redirect is the location specified by the LOGIN_ERROR_URL configuration setting.\nEdit: markup\n. @1st, v0.7.5 released\n. @faxioman, you could define the __eq__ method in your custom user model to make the correct identity check\n. select_related loads pk AFAIK:\n``` python\n\n\n\nx = UserSocialAuth.objects.filter(provider='twitter').select_related('user')\nx[0].user.pk\n3\nx[0].user.id\n3\n```\n. @liodakis, sadly not at the moment, I wan't to settings more flexible but didn't found a proper solution so far. Meanwhile you can define a custom backend derived from the facebook one, that will check settings using other name, something like this::\n\n\n\n``` python\nfrom social_auth.bcakends.facebook import FacebookBackend, FacebookAuth\nclass MobileFacebookBackend(FacebookBackend):\n    name = 'facebook-mobile'\nclass MobileFacebookAuth(FacebookAuht):\n    AUTH_BACKEND = MobileFacebookBackend\nBACKENDS = {\n    'facebook-mobile': MobileFacebookAuth\n}\n```\nThen add it to AUTHENTICATION_BACKENDS::\npython\nAUTHENTICATION_BACKENDS = (\n    ...\n    'yourapp.mobile_facebook.MobileFacebookBackend',\n    ...\n)\nAnd add the needed setting for mobile layout::\npython\nFACEBOOK_MOBILE_AUTH_EXTRA_ARGUMENTS = {'display': 'touch'}\nEdit: code markup\n. @uruz, it is a design flaw, no doubt, but I don't think it should be solved with a model, a better structure of settings should be enough.\n. @faxioman, excelent, looks really good.\n. Pull-request #453 introduced a solution to this issue too.\n. Thanks\n. Could you prepare a pull-request?\n. Merged, thanks.\n. Enable the pipeline 'social_auth.backends.pipeline.associate.associate_by_email', it's disabled by default for security reasons. Some details here http://django-social-auth.readthedocs.org/en/latest/pipeline.html#partial-pipeline\n. No, it shouldn't since you limit the choices to the ones already defined in the setting, I'll merge this. Thanks!\n. @tejinderss, it looks good, I wouldn't replace update_user_details but just add it to the bottom of the pipeline, but I guess you do that to avoid some extra queries, but you are modifying a profile instance, not the user, maybe there's a missing profile.save() in that snippet?\nI'll close the ticket since you got it right :D\n. @mrmch, this issue is fixed by #464?\n. Thanks\n. @sharataka, the setting name is FACEBOOK_API_SECRET, the Incorrect authentication service might be caused by other reasons, do you have 'social_auth.backends.facebook.FacebookBackend', in your AUTHENTICATION_BACKENDS setting? Any traceback?\n. @sharataka, I think you looking for this project https://github.com/tschellenbach/Django-facebook, report an error there, not django-social-auth.\n. According to that traceback django-facebook is not removed yet and it's code is being used.\n. @sharataka, http://submeup.com dropped the error some minutes ago when I've tested it, and it showed an from django_facebook import ... which triggered your issue, maybe you have some missing import around.\n. @sharataka, yeah, you need to provide the view for that, this app only provides login and disconnect views, but no templates at all.\n. @alekzvik, what's the problem with cyrilic characters? Cyrilic characters work very well with django/contrib/auth, maybe some encoding problem with your table / database? Which Django version are you using?\n. Not necessary, or a lot of people would be really pissed :D, it works with usernames quite well (just tested it).\n. Thanks\n. Thanks!\n. LOGIN_URL, LOGIN_REDIRECT_URL and LOGIN_ERROR_URL aren't intended to define URLs, but to specify the destination URL after the auth process has finished (with an error or no), take for instance, a view which is decorated with @login_required will redirect the user to the value of LOGIN_URL if the user isn't logged in, that page should show the login form/links/etc needed to perform the action. You need to define them (the views and the URLs).\n. @NareshKosgi, there's no need to edit get_username(), but yes, you should remove that entry from the pipeline and replace it with your desired behavior. To avoid email replacement just define this setting:\nSOCIAL_AUTH_PROTECTED_USER_FIELDS = ('email',)\n. Thanks\n. Thanks\n. Exceptions processors are deprecated in favor of extending this middleware https://github.com/omab/django-social-auth/blob/master/social_auth/middleware.py\n. SOCIAL_AUTH_PROCESS_EXCEPTIONS is deprecated in favor of a middleware derived from https://github.com/omab/django-social-auth/blob/master/social_auth/middleware.py#L11\n. Can up update your fork and resubmit the patch? Take into account lines ending, use UNIX style please.\n. @seansay, that's why I've requested to update the fork and resubmit, otherwise it looks like the whole file changed.\n. Thanks\n. Thanks\n. Done, version 0.7.6 released\n. @yugaljosh, the error was caused because \"first-name\" scope was repeated, seems that LinkedIn isn't very friendly with those mistakes, I've pushed a fix, but  you can fix it by removing any repeated scope in your setting. BTW, going to the generated URL shows an XML with the error reported. And yes, LinkedIn returns XML (at the moment it was implemented there wasn't JSON support AFAIK).\n. @yugaljosh, it is already fixed, but it's not tagged or released, it just at the top of the master branch. You can pull the repo and install manually (I want to collect a few more bugfixes before the next release), or just define the setting avoiding any of this https://github.com/omab/django-social-auth/blob/master/social_auth/backends/contrib/linkedin.py#L26 since they are added by the backend automatically to ensure that the basic data is pulled.\n. The backend seems to be working quite well, locally and or demo (using the same\nlinkedin app) and using your same LINKEDIN_EXTRA_FIELD_SELECTORS setting.\nAny extra details you can tell about your setup that could help to debug it?\nThanks,\nMat\u00edas\nExcerpts from Alan Viars's message of 2012-11-03 15:06:52 -0200:\n\nHello.  This error still occurs for me despite the fact I cloned and installed the master branch.\nIt  only seems to occur in production and not when I'm working locally.\nLINKEDIN_EXTRA_FIELD_SELECTORS =    ['picture-url', 'public-profile-url']\nLooks like others on stack overflow are having the same issue.\nhttp://stackoverflow.com/questions/9480850/django-social-auth-debug-http-error-400-bad-request-linkedin\nI'm using Django 1.4.2\nI don't want to have to switch to Janrain. Any ideas?  Any help appreciated.  \n-Alan\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/471#issuecomment-10041447\nMat\u00edas Aguirre (matiasaguirre@gmail.com)\n. Thanks\n. Actually you should be interested in caching UserSocialAuth.get_social_auth(), get_user() doesn't seems called at all (I need to check these methods again). But, is it worth doing? I assume that you aren't authenticating the users on every request, and since the authentication process is run just a few times (no much people keeps loging in and out of a site, right?).\n\nInstead you should check the code that loads the user into the request instance (check django/contrib/auth/middleware.py for it), and mime the procedure but install any cache you find needed.\n. I see your point, to implement that cache, I would suggest to implement your own version of social_auth.db.django_models.UserSocialAuth that overrides get_user() and returns the value in the cache or fallbacks to the current implementation on cache miss. You can inherit from the current model definition and just define that method, something like this:\n``` python\nfrom social_auth.db.django_models import UserSocialAuth, Nonce, Association, is_integrity_error\nclass CachedUserSocialAuth(UserSocialAuth):\n    def get_user(self, pk):\n        user = self.get_user_from_cache(pk)\n        if not user:\n            user = super(CachedUserSocialAuth, self).get_user(pk)\n            self.cache_user(user)\n        return user\ndef get_user_from_cache(self, pk):\n    pass\n\ndef cache_user(self, user):\n    pass\n\n```\nThen define the setting SOCIAL_AUTH_MODELS as the import path to the module where you defined that code.\n. Closing, reopen if needed.\n. Thanks\n. That decorator will be heavily refactored soon dropping that exception catching and leaving that task just to middleware.\n. The refactoring of this decorator was done at adb08ec295. The correct method now is to create a middleware class that extends social_auth.middleware.SocialAuthExceptionMiddleware, there you can define the desired behavior for AuthCanceled.\n. Thanks\n. @armisael, yeah, add a method to the end of the pipeline to do that, the user instance is discarded after the pipeline process, so it's accessible there.\n. @armisael, not always, but it's very handy :D\n. That code will run when user is None for some reason, it didn't authenticated, or something else, it's not clear actually and shouldn't happen often IMO, that's why DSA uses exceptions to raise real errors. LOGIN_ERROR_MESSAGE is just a fancy text to show in that case, doesn't aim to be per-issue solution. Maybe you could track where the user becomes None in the pipeline or the auth process and raise an exception there. I'll gladly merge a pull request with that change :D\n. Please share your wsgi conf.\n. @bkvaiude, clearly you are having some import path issue, that's why I've asked for your wsgi conf, not the server conf, do you have a .wsgi file around?\n. Reopen if needed.\n. @cemkozinoglu, a pull-request to bring the support back is very welcome :D\n. You can define it after this entry https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L68, something like this should do the trick\npython\ndef set_new_associate(social_auth=None, *args, **kwargs):\n    if not social_auth:\n        print 'something...'\n. @bedspax, my bad, the pipeline parameter is social_user not social_auth. The user tokens are available in kwargs['response'] or just define the response argument in the function arguments list.\n. Cannot reproduce it, still happening?\n. That last commit should fix this issue\n. Thanks for the report, I've update the path to the problematic API.\n. @selwin, v0.7.7 released\n. @edulix, that's and odd, I'm not able to reproduce it, which is the value printed if you do:\n``` python\nfrom social_auth.backends.twitter import TWITTER_CHECK_AUTH\nprint TWITTER_CHECK_AUTH\n``\n. @pxg, yes it is\n. @camilonova, pypi version has the fix, did it worked for you?\n. Any reason to have'social_auth.backends.pipeline.misc.save_status_to_session',at the end of your pipeline?\n. I've tried LinkedIn and it works, so the problem is at your conf and not the backend (unless there's a bug around of course). A few things I would try:\n1. Remove unnecessary settings:SOCIAL_AUTH_PIPELINE,SOCIAL_AUTH_COMPLETE_URL_NAME,SOCIAL_AUTH_ASSOCIATE_URL_NAME2. Remove the unused social_auth context-processors (there are a few incompatible, take a look to the doc)\n3. Fix this settingLOGIN_REDIRECT_URL, it should be an URL in the form/foo/bar/, not a name or plain string.\n. Closed by inactivity, reopen if needed.\n. @RakeshRam, there are a few errors in that settings:\n1.SOCIAL_AUTH_PIPELINElacks an entry that creates a User instance (that's the reason of your current error)\n2. Some DSA context_processors don't play nice together since they use the same context names (https://github.com/omab/django-social-auth/blob/master/social_auth/context_processors.py#L7)\n3.AUTHENTICATION_BACKEDSorder is wrong, theModelBackendshould be afterLinkedinBackend. Using GET parameters to control this doesn't look like a good idea to me since it's easy to forge new scope values easily. You could just extend Github backend and override the needed method that returns the scope (get_scope()) inferring the extra scope from another parameter in the current request.\n. I wasn't suggesting doing many providers, just one that overridesget_scope()` and check for a request value is enough, something like:\npython\ndef get_scope(self):\n    return {\n        'level1': ['public_repo'],\n        'level2': ['user', 'public_repo', 'repo']\n    }.get(self.data.get('level')) or super(GithubAuth, self).get_scope()\nand links to /login/github/?level=level1, etc.\nI consider backend inheritance a powerful and helpful mechanism to extend DSA with custom behavior.\nOf course, all is open to discussion, but still I'm not convinced to mess scopes in the URLs, but we could improve backends registration and the settings structure to accomplish something similar.\nLet's say we store all DSA related settings in a dict, like:\n``` python\nSOCIAL_AUTH = {\n    'error_url': '...',\n    'github': {\n        'scopes': ['public_repo']\n    },\n'github-level1': {\n    'scopes': ['user', 'public_repo', ...]\n}\n...\n\n}\n```\nAnd then instead of using the backend name usually defined in the class, just stick to the name as key in the BACKENDS dict in the module, that way we can defined different instances for Github backend (different keys in BACKENDS dict), and each backend will use different keys settings defined SOCIAL_AUTH setting.\n. python-social-auth supports per-backend settings which covers this issue. Closing due to django-social-auth deprecation.\n. I don't think that leaving scopes handling to be controlled GET/POST data is a good idea.\nThanks\n. Worth updating to some consistent names (keeping backward compatibility)?\n. @dakoller, that depends a lot on XING OAuth 1.0 implementation, do you have some link to their doc?\n. @dakoller, that's a setting error, how are you defining the AUTHENTICATION_BACKENDS setting?\n. @dakoller, it should be an import path, no just a name, define for example, if that XINGBackend is defined in a foo app inside a backends.py module, the value in the setting should be foo.backends.XINGBackend\n. @dakoller, clearly there's something still wrong with that module, maybe missing some __init__.py in nwg/xing try importing it in a running django shell.\n. @dakoller, OK, looking at the original code, I see you have defined class XingBackend while on your setting you are using XINGBackend, check the word case.\n. @dakoller, fix the BACKENDS definition, it should be the module, not the string name, so something like this:\npython\nBACKENDS = {\n    'xing': XingAuth\n}\n. Do you have the URL being requested that raises that error?\n. @dakoller, check in the traceback view rendered by django on that 400 error, check the different calls, the problematic URL should be listed if you expand the tracebacks arguments.\n. Take facebook backend as an example (https://github.com/omab/django-social-auth/blob/master/social_auth/backends/facebook.py#L67), in that method the backend queries a Facebook API to retrieve some basic user data, then get_user_data() method should check for this values and return the expected dict.\n. @dakoller, maybe you could add an example to the use case section in the docs http://django-social-auth.readthedocs.org/en/latest/use_cases.html?\n. Looks like a bug on Yammer OAuth2 API. Why are you re-defining the whole self.data instead of doing a making a writable copy of self.data and then self.data.update(new_data)?\nDoes the backend work?\n. self.data is immutable, that's why I've mentioned to make a writable copy of it, I'm mentioning that because some time some values in self.data could be used on another place of the process (like the pipeline), but your redifinition drops them. Overall the backends looks good to me, I'm looking forward that pull-request.\nThanks\n. @amirouche, looks good, I've left some small comments, I'll merge it if you change those little things.\nThanks\n. @amirouche, there's no problem with that since OAuth is a standard and several providers follow the same basic rules, just the API endpoints change. I'm looking forward the new pull-request.\n. Worked quite well here https://gist.github.com/3956791, which issue should be in the last release that wasn't?\n. Awesome, thanks.\n. But you don't haven an email, how do you expect to avoid the exception? (For the record, I have no experience with mongoengine)\n. @sbshetty01, what happens if email is not provided or is None?\n. Yeah, I know, I'm wondering if mongoengine User model will fail in that case too so I can try to change the line to use None or discard the key from the dict.\n. So, dropping the key sounds like the right approach letting the defaults to do their work.\n. @sbshetty01, take a look to the fix and give it a try.\nThanks\n. @sbshetty01, good to know, thanks.\n. HTTPS on your end or the provider end?\n. Could you mention the OpenID provider? It seems to work with myopenid over https.\n. There was an old nginx/gunicorn issue, basically nginx was over https but the django-app couldn't figure this out (probably missing headers sent to gunicorn by nginx), to workaround the issue the setting SOCIAL_AUTH_REDIRECT_IS_HTTPS was introduced, maybe that fixes this problem?\n. @garrypolley, great, closing this one.\n. Thanks\n. Thanks\n. Why would you need a enabled property in SocialAuthBackend and subclasses? Backend classes are implicitly enabled when added to AUTHENTICATION_BACKENDS setting.\n. Closing, reopen if needed.\n. And which is the issue?\n. @kjoconnor, ignore my previous comment, for a sec I thought this was a new issue.\n. @kjoconnor, every backend has the enabled() method by inheritance, the default code checks for the settings defined in the class. But you are right, my wording wasn't entirely correct, I get for granted that the APP settings are in place to enable a backend.\n. Clearly that is outdated in the doc, I'll take a look.\n. @dakoller, are you willing to drop a pull-request with the backend? I'll gladly merge it.\n. @dakoller, please give a try to the backend social_auth.backends.contrib.xing, I've modified a little the code in your blog.\n. @dhendo, I don't see a reason to return a dummy email, accounts are created just fine since email can be left blank when using django user model or mongoengine user model.\n. I've updated the code to correctly default to empty string and make the None conversion only on mongoengine backend (where it fails if the email is an empty string). Take into account that your error raises on django 1.3, on 1.4 that won't happen since they changed the create_user() method and expects email=None in the parameters.\n. Thanks!\n. @scheeser, I'm not following any plan for releases, I'm more into release often, release early criteria, will do a release shortly today.\n. @scheeser, v0.7.8 released.\n. What do you mean whit \"pop the preferred service from the list\"?\n. @tBaxter, which OpenID provider are you using?\n. @tBaxter, could you try the last HEAD and check if it works now?\n. @tBaxter, worked as expected?\n. @tBaxter, good to know, I'm closing the issue, reopen if needed.\n. @l1bbcsg, try the last change please.\n. @l1bbcsg, I had to remove that code since create_user() just take username and password, otherwise I have to call create() directly but will lose some functionality or take care of extra stuff that shouldn't matter to DSA (like passwords, etc).\n. Thanks\n. Thanks\n. That's a too generic try/except block, a simple if at the top does the work\n. Thanks\n. @mrmch, I've made some code simplifications, prod and staging backends were too similar to ignore inheritance there, please take a look.\n. The issue was caused by server date being ahead by 1 hour.\n. Pull-request merged, closing this one.\n. @w0rse, thanks for that work, I've merged it manually to fix the line endings on those modified files.\n. DSA exceptions expect the backend as the first parameter:\n``` python\n\n\n\nfrom social_auth.backends.exceptions import AuthTokenError\nx = AuthTokenError(object(), 'hello')\nunicode(x)\nu'Token error: hello'\n``\n. That indeed was wrong, thanks.\n. Thanks\n. Moving to requests might be easy to implement, not sure about oauthlib, still sounds like a good idea.\n. I've pushed the changes to support Python3 and also Django1.5 on requests branch, this includes requests and oauthlib (with requests-oauthlib) changes. Please give it a try before I merge it to master.\n. Work for this is part of [python-social-auth](https://github.com/omab/python-social-auth).  Closing this due to django-social-auth deprecation.\n. Thanks for the report, I don't find this critical, but a fix was pushed anyway.\n. Which version of django-social-auth are you using? Could you paste the URL that's trying to being opened (I'm interested in the path)\n. Did the same and it worked just fine. I'm interested in the URL that's trying to be opened on line 263 insocial_auth/utils.py.\n. @stevejalim, cool. @some1thatNeedsHelp, any progress on your side?\n. @some1thatNeedsHelp,stripeerror is caused because you are using the development example withdjango-social-authinstalled in your python lib (DSA version 0.7.7 according to your traceback). So disabling that backend inAUTHENTICATION_BACKENDSin the examplesettings.py` does that trick.\n\n\n\nTry updating django-social-auth global package with sudo pip install --upgrade django-social-auth. I'm confused with your issue, I've just cloned the repo, did a syncdb, created a new twitter app, added the keys to local_settings.py, ran the server and it worked as expected. \nMain difference between your setup and mine, is that I use virtualenv instead of installing packages globally.\n. @some1thatNeedsHelp, this doesn't make sense to me, could you ping me on GTalk? You can add me using matiasaguirre [at] gmail.com, or in IRC in Freenode server under cadillac_ nick.\n. I've give a try to Google-OAuth2 backend, it worked OK, Incorrect authentication service is an error dropped when the auth backend is not defined in AUTHENTICATION_BACKENDS\n. What  happens if you try this on a django shell in that project:\n``` python\n\n\n\nfrom social_auth.backends.google import GoogleOAuth2\nprint GoogleOAuth2.enabled()\n``\n. @some1thatNeedsHelp, I've pushed some refactoring to the exception handling mechanism, that might help to debug your issue, which I don't see a reason to happen (the backends mentioned are working quite well). The error mentioned only raises if the backend is not present onAUTHENTICATION_BACKENDSor somehow it's notenabled`. Try firing up a django shell and try this other snippet:\n\n\n\n``` python\n\n\n\nfrom django.conf import settings\nprint settings.AUTHENTICATION_BACKENDS\n``\n. @some1thatNeedsHelp, I've removed/sa/` in the last commit, it had some big impact in the defined apps. Glad that it worked, my guess is that global installed packages are interfering with your example testing. Can we close this?\n\n\n\nEdit: ignore my close question, you already did that.\n. @sbshetty01, could you test the last commit? If that works I'll release 0.7.10\n. @sbshetty01, new fix (I don't use mongoengine, so I'm doing a check-code/try-fix)\n. @sbshetty01, indeed, that will be better\n. @sbshetty01, released\n. @elec, the account will be associated to the current logged in user if it's authenticated, the user instance is passed to the pipeline functions, and if it's not authenticated, a user parameter is passed with value None.\n. @elec, thanks for finding this, I've pushed a fix for it.\n. Thanks @henward0, could you add some docs on doc/backends/? Just an small text with some links to where the user must go to create an app on angel.co, etc.\n. Merged, thanks\n. Thanks\n. Thanks\n. Thanks\n. @jgsogo, that's the expected behavior, usually doesn't make sense to split the form processing code in two functions when it can be processed in a single one:\npython\ndef user_form(data, *args, **kwargs):\n    if data.get('xxx'):  # form was POSTed\n        form = Form(data=data)\n        if form.is_valid():\n            form.save()\n            return\n         else:\n             # process errors, store in some place?\n    return redirect(...)\nThis doesn't apply just for forms, but you get the idea.\n. @max107, thanks for the report\n. @Nasmon, I've restored the setting usage.\nAbout the docs, I'm aware of their poor state, but sadly I lack some time to take care of that, any contribution is welcome.\nAbout the exception, DSA uses exceptions to signal quite a lot of states, maybe not the best, that proved to work quite well. To handle the exceptions add a middleware that extends from https://github.com/omab/django-social-auth/blob/master/social_auth/middleware.py#L10 and override the needed methods to accomplish your expected behavior.\n. Which is the value of your LOGIN_URL?\n. Reopen if needed.\n. Are you using the same Twitter/Facebook apps locally and on production?\n. @kiranchari, do you have a \"Callback URL\" defined in your twitter app?\n. Any error on messages app? Do you have social_auth.middleware.SocialAuthExceptionMiddleware enabled? Looks like the auth process works, but fails because the user instance is not created or because the instance is not active.\n. That's odd, 404 on https://api.twitter.com/1.1/account/verify_credentials.json, what happens when you try to curl or wget that URL from the server?\n. That's OK because it lacks the Auth stuff, could you send me the URL that's trying to open? It should be available in the traceback when inspecting the vars in the call at line 11 in the pasted traceback (it might contain some sensitive data, will be better to send it my email directly or contact me on GTalk/IRC)\n. @kiranchari, matiasaguirre@gmail.com\n. @kiranchari, twitter worked at the end, but facebook broke, right? is that solved?\n. @NorthIsUp, thanks for the pull-request, I've left an small comment on the diff, beside that everything looks good and I'll merge it\n. Thanks!\n. Thanks\n. Thanks\n. @mwaterfall, checking InnoDB doc, it looks like the source of the problem since uid has a 255 max_lenght, asumming UTF-8, that's enough to trigger the error. I've added SOCIAL_AUTH_UID_LENGTH setting to customize uid field length, could you give it a try and leave a comment here if that works?\nI didn't tested it, but a value SOCIAL_AUTH_UID_LENGTH = 223 should work (probably 222 since 223 sums up to 255 with provider field length).\n. @mwaterfall, good to know, I'm closing this.\nThanks\n. @phoebebright, by RFC an URL could take up to 1024 chars, but we don't see those around, DSA limits the length to 255, but should be save to reduce the limit a bit more, I've added some settings similar to UID to accomplish that, check the linked changeset above for details.\n. @vinograd19, those settings tweaks the database fields lengths to fit the limitations imposed by mysql innodb, that way the length of the keys don't overflows the keys max lengths.\nTake a look to the docs here http://django-social-auth.readthedocs.org/en/latest/configuration.html#tweaking-some-fields-length\n. @vosi, I've opted for supporting unicode characters in the regex, forcing slugged usernames could affect all projects in a way that's not expected or desired.\nThanks\n. @maxgrosse, the correct approach is to sub-class social_auth.middleware.SocialAuthExceptionMiddleware and define the needed logic there.\n. What's the problem with non ascii usernames?\n. Unicode support was already fixed on that regex https://github.com/omab/django-social-auth/blob/master/social_auth/db/base.py#L13\n. @rudyryk, IMO your solution is too tied to your project, a cleanup step in the pipeline should do the same for you without modifying the backend. There's nothing wrong with unicode usernames, it's not what we are used to, but they work quite well.\nThanks for the the pull-request, but I don't think it's the proper solution.\n. Thanks\n. @estebistec, don't worry, I've added some docs for it, feel free to suggest any change\n. Thanks\n. Thanks\n. Great, thanks.\n. @zgohr, when working on this template Stripe kept returning a totally different state parameter than the one sent. And using redirect_state hack included in DSA (for those providers that don't support state) didn't worked because Stripe uses the redirect URI defined in the app instead of the redirect_uri parameter in the request.\n. @zgohr, it was one month ago when the backend was added, I should give it another try. The issue was persistent, as in every request.\n. @zgohr, I've tested it again and it's working now, thanks.\n. Adding ?next=/foobar/ to the socialauth_being link seems to work OK\nhere, any error dropeed? Could  you paste the sever log?\nExcerpts from Zachary Gohr's message of 2012-12-15 14:16:21 -0200:\n\n@omab Thanks for looking into this. It looks like the state parameter is now working, but is only populated with a CSRF token and not with any method of knowing where to redirect post-completion, even after setting ?next= on my begin url. Ideas?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/547#issuecomment-11406118\nMat\u00edas Aguirre (matiasaguirre@gmail.com)\n. @zgohr, great.\n. Thanks\n. Thanks!\n. Thanks!\n. Thanks\n. @redatest, I've started to experience the same, will take a look.\n. @redatest, actually my problem on demo site was another (somehow /favicon.ico request was killing the uwsgi thread). Github login is working as expected now. Re reading your description the callback url should be http://tranquil-crag-5144.herokuapp.com/complete/github/ instead of /private\n. @redatest, any progress?\n. I'm closing this since the issue seems to be misconfiguration, reopen if needed.\n. Damn, that was a big issue, thanks for finding it!\n. I've released v0.7.13 which carries the fix.\n. Thanks!\n. Thanks\n. @ashchristopher, v0.7.16 released\n. I'm closing this.\n. Are you still testing on heroku while using 127.0.0.1 as domain in the Facebook app?\n. No problem, glad it works again.\n. @dencold, merged and already up at http://django-social-auth.readthedocs.org/en/latest/backends/facebook.html thanks!\n. Merged, thanks for the example!\n. Merged, thanks!\n. @johanneswilm, a section comparing the available solutions would be good (at the moment I lack the time). About facebook username, yes, DSA tries to build username using the facebook user username if available, otherwise tries to use the name returned by their API. This happens with any available backend where some kind of username is returned (on some cases we use the email handle to build it). \n. @fabioz, do you have SocialAuthExceptionMiddleware defined in your middlewares settings?\n. The docs needs some major refactoring (links are awful, etc). I'm keeping some notes locally and added your suggestion. Will close the ticket now.\n\nThanks\n. @fabioz, like #562, do you have the middleware defined in your settings?\n. @fabioz, I've released v0.7.17 which carries the fix too. Thanks\n. Added, thanks.\n. @appel268576, add a pipeline entry that cleans up usernames before the user is registered.\n. Closing this one since PR #569 takes care of this.\n. I'm not able to reproduce, but I had some Nonce errors when the server datetime was set in the future or the past.\n. @ozexpert, no, I mean the server date, usually installing nptdate does the trick, but first check the if server date is correct.\n. @Azote51, the recommended fix is to add SocialAuthExceptionMiddleware to the middlewares list, you could sub-class it too to add any custom behavior.\n. @appel268576, I'm not in favor of this forced transformation, some sites want username to be unicode complaint, some don't, IMO, there's nothing wrong with unicode usernames, if you make it setting-enabled, I'll merge the changeset, something like:\npython\nif setting('SOCIAL_AUTH_SLUGIFY_USERNAMES', False):\n    final_username = slugify(final_username)\nWhat do you think?\n. Django signals need to be imported from some place where django can detect them, like models.py. Beside that, signals aren't recommended anymore, instead pipeline entries are the best approach.\n. Closing since last comment might be the solution (and not really relevant to DSA), reopen if needed.\n. Thanks!\n. Thanks!\n. @night-crawler, check #539 for details on how to fix this.\n. |  even though the version numbers are the same in the git repo and the pypi version.\nWhat do you mean? Last released version is v0.7.17 which is older than that fix, thus that fix is not in last release.\n. @sbaechler, version 0.7.18 realsed\n. @dusual, it's in sync always, in your case seems that you don't have any OAuth2 backend defined, I've added an if around that block to avoid the error.\n. Thanks!\n. @stevejalim, feel free to submit a patch\n. Closing this since the pull-request wasn't delivered in a while, reopen if needed.\n. @hedleyroos, that error and (other reported in the mailing list), is caused by my inexperience with south, I'll take a look to it\n. @tmackenzie, I've left a comment in the second commit on the list above, also, could you add some docs about how to use this?\n. Hey, didn't saw the update, merged, thanks!\n. @arnaudbreton, thanks for pointing that out. I'm closing this ticket now.\n. @marselester, could you add some docs explaining the setting? I'll merge it then.\n. Thanks!\n. Could you share some more details?\n. @retd, thanks for commenting that, I'll close the ticket now.\n. Thanks\n. Thanks!\n. @airfang, it was indeed a bug, I've pushed a fix for it. Thanks.\n. Thanks!\n. Thanks!\n. @joaopimentel, by default exceptions are raised, you need to define this middleware withing your settings (or subclass it to define any custom behavior)\n. @joaopimentel, there's no need to set DEBUG = False, you can subclass the middleware and overrride raise_exception() method.\n. @OddBloke, I've never tried github enterprise, but so far it seems that the usual github backend should work, but replacing the auth URLs to point to the server. You can try that by subclassing the current backend and override the URLs.\n. @OddBloke, yeah, of course\n. Closing this issue, feel free to send a pull request.\n. Could you share a stacktrace? Consumer is defined on oauth2/__init__.py, https://github.com/simplegeo/python-oauth2/blob/master/oauth2/init.py#L175.\n. Still don't see what could cause that issue, what happens if you import it on a django shell? Also, is Consumer defined on oauth2/init.py ?\n. pyoauth? That's not a dependency for DSA.\n. From where did that py_oauth2 came from? Did you installed the dependencies manually?\n. That doesn't look like the result of installing oauth2 with pip (the final package name is oauth2 not py_oauth2). I would suggest removing that one (you can get a list of installed packages with pip freeze), and installing oauth2 with pip install oauth2 again.\n. @shadowsyntax, good to know. I'm closing this issue.\n. There seems to be some issues with south migrations and custom user models, I need to investigate it.\n. I've updated the migrations to be built dynamically from models instead of some static fields definition, it seems to work, anybody could give it a try again?\n. @lorddaedra, seems to me that the changes are already in place, try running with --fake.\n. @tejinderss, the fix done by @oinopion is merged into master branch, please take a look, it solves the issue. Reopen if it's not the case.\n. Actually SOCIAL_AUTH_DISCONNECT_REDIRECT_URL is used for successful disconnection, not for errors ones, if you want to setup a custom redirect for that one, just subclass this middleware, override the get_redirect_uri() method with your custom behavior.\n. Added docs for last released versions.\n. @abompard, I've implemented a new version of this feature that only modifies the pipeline method instead of the may get_user_details() methods around. Please take a look to that change.\n. Sure, let me check a couple issues first.\n. v0.7.19 released\n. @pydanny, which is the redirect value generated and the value on github app?\n. @pydanny, just gave it a try on a without being logged into Github (should have done that before) and this was the redirected URL information:\npython\n{\n    'return_to': ['/login/oauth/authorize?client_id=d6675...08&next=%2F&redirect_uri=http%3A%2F%2Fwww.djangopackages.com%2Fcomplete%2Fgithub%2F%3Fredirect_state%3DYV6c3qOkIu7QgG9olxaepvXK2LOZZp0W&response_type=code&state=YV6c3qOkIu7QgG9olxaepvXK2LOZZp0W']\n}\nThe value for redirect_uri is http://www.djangopackages.com/complete/github/?redirect_state=YV6c3qOkIu7QgG9olxaepvXK2LOZZp0W, but your site is over https, but the URL doesn't, that triggers the URL mismatch.\nThis might be caused because nginx on heroku is not giving this information to the app, which assumes a SSL-less environment, try setting SOCIAL_AUTH_REDIRECT_IS_HTTPS = True, that's the reason behind that setting and if I can recall properly, a project on heroku was the reason behind this option too.\n. Yes, that did the trick. I'm closing this one, reopen if needed.\n. @aswanii, I've reported the error to Github, hope they get this fixed soon.\n. AFAIK the only 75 chars long field is email, you might want to add some pipeline entry to process emails length (probably ask the user for another email address?), or store it on some other place and leave the original one empty.\n. @sirex, take a look to the changeset above, that solves your case?\n. @sampathaya, yeah, just enable the this pipeline entry https://github.com/omab/django-social-auth/blob/master/social_auth/backends/pipeline/associate.py#L7 check the default setting at https://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L66 for the position where it should be added. It's disabled by default for security concerns.\n. What do mean with expiration of Facebook sessions? You cannot clear facebook cookies from your site, that's not allowed by browsers. You can clear the auth on your side and ask the user again by simply clearing the UserSocialAuth instance associated, also there's a expires entry in the extra_data attribute of that same instance with the time pending for that Facebook access_token.\n. @ustun, I've added the changelog to the docs\n. Thanks\n. @ChrisCooper, thanks for the pull-request, yesterday I've made some big changes to the docs trying to make them easier to read and link, any chance you could update the changes to lastest HEAD?\n. Merged, thanks!\n. Thanks for answering it, closing this issue.\n. Thanks!\n. @topiaruss, email addresses are case-insensitive by definition, adding __iexact might have some performance implication on the queries slowing them (specially in projects with lots of users). It's probably safer to lowercase the emails once they are available, what do you think?\n. @topiaruss, I'm fully aware of the issue and I know that using __iexact is a possible solution, I'm just bringing another possible solution to the be considered. I'll merge your PR and probably rollback with another solution in case of performance complains (it's something I like to take into account since I got bitten by them from time to time).\n. redirect_uri_mismatch is caused by some difference between the configured Callback URL in the app and the value used on DSA (which is /complete/douban2/). Some providers don't like the ?redirect_state=foobar argument, but I think douban was OK with it, you can try defining your version of Douban backend by extending DoubanAuth2 and setting REDIRECT_STATE = False and STATE_PARAMETER = False.\n. thanks @seansay \n. Please use English :D\n. @seansay, no prob!\n. @seansay, I don't have douban configured locally, I can't figure a thing from that site, do they have an english version?\n. jeje\n. Wow, finally it was solved, good work guys :D\n. @topiaruss, there were some changes but the final result is the same (the changes were to avoid some issues when custom user models were used). If the key is already in place but the migration wasn't applied, try running it with --fake argument.\n. @topiaruss, thanks, I'll take a look to migrations and make them backward compatible.\n. @topiaruss is right, the migration shouldn't fail, I didn't had time to investigate this yet, meanwhile @topiaruss, could you post the process you are following to reproduce it?\n. @topiaruss, by merging #593, this issue is fixed, please take a look. Reopen if needed.\n. Thanks!\n. Thanks, I'll do some changes to backends names to keep consistency with other backends (using dash instead of underscore)\n. Thanks!\n. Thanks\n. Thanks!\n. @arnaudbreton, it's not supported yet, but I've plans to add it, implementation should be quite similar to Mozilla Persona.\n. @arnaudbreton, no progress yet, been busy with project deadline lately.\n. I've added Google+ Sign In support on python-social-auth, docs here http://psa.matiasaguirre.net/docs/backends/google.html#google-sign-in\n. Thanks\n. @oinopion, I've merged the pull-request since it does the work expected and does it right, I've also added some code to freeze the custom user model app in case there's no migration defined by the developer for that app.\n. Thanks\n. @stereoit, which is the {% url ... %} call in your templates? There were some changes on Djange lately, are you using Django 1.5? Check this on the docs http://django-social-auth.readthedocs.org/en/latest/miscellaneous.html#url-template-tag it might be related.\n. I'm not sure what's going on there, could you try to use the url tag from future, like this:\n{% load url from future %}\n{% url \"socialauth_begin\" \"mojeid\" %}\n. DSA doesn't do anything like that yet, you could add any link in your pages that do it, it's just a cancel link that goes to a custom view and removes any social auth related classes if they were created, right?\n. I've restored the module and drop it out on v0.8, the signals aren't used anymore, and that won't change, replace the code with pipeline methods where needed. Take into account that DSA is not flagged as stable and its API can and will change if needed, but I agree that some changes should be done paying more attention.\n. Which is the value for SIGNUP_ERROR_URL or LOGIN_ERROR_URL?\n. Proper checks are done on python-social-auth. Closing due to django-social-auth deprecation.\n. Thanks!\n. @quantum13, check the response parameter in that same pipeline function.\n. That's the reason for the the middleware at https://github.com/omab/django-social-auth/blob/master/social_auth/middleware.py, you can extend it to provide any extra functionality for your project.\n. @gfronza, it's here http://django-social-auth.readthedocs.org/en/latest/configuration.html#exceptions-middleware, the README just keeps an small introduction and details of the project.\n. No problem!\n. The twitter backend uses oauth/authenticate which according to Twitter docs https://dev.twitter.com/docs/api/1/get/oauth/authenticate it shouldn't ask the user to grant permissions again, but that doc is about APIv1, not v1.1, which doesn't have such page at the moment.\nThe app doesn't use oauth/authorize because that endpoint always asks the user to grant permissions to the app.\nI've change the URL to use https://, still doesn't solve the issue.\n. I've merged the pull-request, thanks!\n. Could you add some details on how to reproduce it?\n. I've tried your LinkedIn output, it worked as expected, do you have a traceback? or try to get one? KeyError is not an issue, I'm sure it's not even needed there.\n. This is what I've tested so far:\n1. Tried those settings, it worked\n2. Tried added summary, it worked\n3. Forced your XML as the response from LinkedIn, it worked (with and without summary)\nSo far the backend seems to work properly.\n. Closing due to inactivity.\n. Merged, thanks. I would stick with the return None since {} or {} will evaluate the or anyway, but with return None a dict instance is avoided.\n. @daGrevis, done, v0.7.23 released\n. @cheesemonkey. that's strange, are you using any particular session mechanism? Do you have cookies support enabled in your browser?\n. Django doesn't erase sessions automatically, so they should be still stored and accessible, try checking the value for the given key (when leaving the site and when coming back). DSA sets the modified flag to True after adding *unauthorized_token_name entries, that should trigger a save always.\n. That's odd. Is the session kept on \"normal\" pages (for example a simple page that stores a value and another that retrieve it)?\nAre you using memcached backend? This text is from django sessions docs:\n\nWarning\nYou should only use cache-based sessions if you\u2019re using the Memcached cache backend. The local-memory cache backend doesn\u2019t retain data long enough to be a good choice, and it\u2019ll be faster to use file or database sessions directly instead of sending everything through the file or database cache backends.\n\nWhat happens if you set SESSION_SAVE_EVERY_REQUEST = True in your settings?\n. @cheesemonkey, I can't depend on cache since it's very project related, I can trust on session because session-less projects are quite rare and having that dependency isn't very hard to ensure, while saying \"install memcached to make this app work\" isn't really reliable.\nThanks for the update.\n. Thanks!\n. Thanks for the report\n. Thanks!\n. For that purpose is the extra data processing, check the doc at http://django-social-auth.readthedocs.org/en/latest/backends/oauth.html, basically you define in that setting the key names of data you want to store in the UserSocialAuth instance.\n. The two-tuples are in the form key name in response, alias value to store it, the alias was added to uniform the retrieved data between providers, for example if you use Github and Facebook backends, you will know that given any UserSocialAuth instance, you will find the avatar under a same key and avoid any backend-type check to use the correct key.\nOnce the data is stored, you can access it under the extra_data attribute in the UserSocialAuth instance, for example, given a user instance you can get it in this way:\nuser.social_auth.get(provider='github').extra_data['avatar_url']\n. Thanks!\n. Updated, thanks.\n. Great improvement, thanks!\n. @ggreer, your code doesn't cover all the options on DSA, for example, it ignores mongoengine backend, and also assumes that all the names in details are fields, Model._meta.get_field() fails with FieldDoesNotExist if there's not a field with a given name.\nI've pushed two pipeline methods, one for Django ORM and another for Mongoengine, the entries aren't enabled by default, you should add it to your pipeline setting (or define one if using the default).\nThanks,\nMat\u00edas\n. Thanks\n. IMO the proper fix would be to raise an exception rather than keep authenticating an invalid user. Also separating the backends like I did when porting it to python-social-auth would be great.\n. @sjagoe, it shouldn't affect others, that's the expected behavior from backends, I've added the mentioned change.\n. Thanks!\n. I've merged #647. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. Thanks!\n. I don't see what this fixes, the enabled() method is defined in the superclasses. Could you share which was the exception raised that forced you to remove the KeyError? My conclusions are that you are using some wrong setting names for those backends, could you share the names?\nThe backends are working just fine locally with my settings, that's why a consider it's a conf issue.\n. I'll close this one since it seems inactive and is not solving any problem from my tests. Reopen if needed.\n. Thanks!\n. @barracel, what do you think about the code used on python-social-auth here https://github.com/omab/python-social-auth/blob/master/social/storage/base.py#L55? I was going to port it to django-social-auth shortly.\n. I've ported it, thanks!\n. @houmie, I've pushed some code to take into account USERNAME_FIELD, and also simplified create_user() call to take *args, **kwargs instead of imposing username and email parameters names. Please take a look to the change and give it a try.\n. It's not released yet, could you give it a try by downloading it? If it works as expected to you I'll do a release.\n. @houmie, I pushed a fix for that method, could you give it another try?\n. Finally the issue was with a field initialization withing the custom user mode.\n. No problem!\n. Cannot reproduce it here, anyway the issue must be with django.auth app or django.admin app, DSA doesn't get involved when editing the user on django admin.\n. @gfronza, use a middleware to process it, you can subclass the middleware defined on this app (https://github.com/omab/django-social-auth/blob/master/social_auth/middleware.py)\n. Even if IntegrityError is not a subclass of SocialAuthBaseException, you could check for request.social_auth_backend to identify if the current issue was raised by some DSA view. It's not the cleanest solution, but I prefer that than hide the real exception with another.\n. Thanks\n. I don't have experience with LinkedIn SDK, and I didn't found anything related to r_fullprofile and IN.user.logout(), from the error, it looks like a CORS issue.\n. Closing due to inactivity and DSA deprecation.\n. Thanks. FYI, I'm working on transforming DSA to use python-social-auth and the tests will be on that app, plus some testing on DSA to run those from PSA. Check the tests on PSA at https://github.com/omab/python-social-auth/tree/master/tests, they use HTTPretty to mock server responses. What do you think?\n. This change is not backward compatible, it breaks support with Django 1.4 and earlier versions.\n. This is great, thanks for the big improvement.\n. And it's up http://django-social-auth.readthedocs.org/en/latest/backends/facebook.html\n. I'll port them shortly, I've been working on changes to DSA to make it depend on PSA, that way a lot of stuff will be documented in a single place and also fully tested.\n. @dencold, frankly I don't know why that limitation is in that place, I've checked the messages app just in case, and there's no reference to anything that mention that a user must be logged in to make use of it (even checked older versions of django just in case it was a backward compatibility thing). I've removed the restriction, and just do a fallback URL with parameter in case of MessageFailure error. Let me know what you think.\n. @dencold, it was an small change, didn't took much time. The change is already in master branch. I'll close the ticket, feel free to reopen if needed.\n. Thanks!\n. Signals were deprecated in DSA, they are still defined to keep backward compatibility and not break imports, but the signals aren't sent anymore, instead defining pipeline methods is the preferred way to add extra functionality. Regarding Steam backend methods not called, any chance that you have two versions installed of DSA (one installed  using pypi and another by your requirements.txt file)? Your user is being created with the expected username, so my thoughts are that another version of the app is doing the auth.\n. Thanks!\n. Thanks!\n. Looking forward that pull-request, thanks!\n. Thanks for this big update to the backend!\n. Fixed on PSA (https://github.com/omab/python-social-auth/commit/e60852f1054ed1c01278675ca862f37632688992)\n. @livskiy, just define SOCIAL_AUTH_SLUGIFY_FUNCTION = 'import.path.to.your.slugify'.\n. Thanks!\n. Thanks!\n. @DrMartiner, does it work with mongoengine?\n. Looks like it will work, I'll merge it, thanks!\n. Can you narrow the exception type instead of catching everything? except TypeError should do the trick.\n. Thanks!\n. Thanks!\n. @emakarov, because it was not contributed so far.\n. I didn't tried coding one, frankly never used any AOL service.\n. AOL openid backend was added a few weeks ago.\n. Ah, didn't remember who did the contribution, thanks!\n. Thanks!\n. I've wrote the support for some major popular sites when releasing the code (google, facebook, twitter and yahoo), the rest of the backends were contributions since I focus more on the library itself than the backends.\n. Thanks!\n. Thanks!\n. Thanks!\n. I've merged it manually, thanks!\n. That's basically why account association by email is disabled by default, having a backend level attribute sounds good to me, by default it will be False and then we can enable those on demand. The association pipeline can check this value and make a decision. Still, I prefer to have association by email feature off by default.\n. Thanks!\n. Thanks!\n. The email is stored in the user model.\n. Thanks!\n. Thanks!\n. Thanks!\n. @jerzyk, seems that your version of DSA is outdated, the quotes are there already https://github.com/omab/django-social-auth/blob/master/social_auth/backends/facebook.py#L43\n. @jerzyk, thanks for the report, the referenced change should fix it.\n. @a-sabaa, looking your code and a similar issue another user had, I'd say that the problem resides with MyUserManager.create_user(), it expects a lot of arguments without default values, but the call in DSA looks like this create_user(username=username, email=email), all those fields defined in your manager create_user(self, email, password, first_name, last_name, date_of_birth, gender, phone, country, city, area, street_name, building_number, floor_number, flat_number) aren't passed and python fails.\nAt the moment DSA doesn't support extra arguments for create_user(), a solution could be to setup those parameters with default values, or override the pipeline entry that calls create_user() (this one) and provide one that supports the fields you need.\n. Damn, this is tricky and DSA won't be nice to make it work, the app uses the setting and backend_setting helpers to gather settings values, but they are unaware of the request at the moment.\nIt could be possible to modify those functions to check for a setting that points to functions that will provide the settings, still they will be unaware of the request and those new functions should use some hack to make the request available globally. Of course that the functions could receive the request, but not all the calls take place inside a request context. So, there's quite a lot to change.\nHave you consider porting to python-social-auth?\n. @AbdealiJK, I've fixed those import errors.\n. @khanio, I'm not able to reproduce (Django 1.5.1 too), could you paste the traceback?\n. That's all? No call chain? No data details?\n. At least I need a line number where it happens withing the app to figure out what's going on.\n. Thanks\n. @benma, import paths didn't changed and django/contrib/messages/__init__.py does an from django.contrib.messages.api import *, so the import should work, anyway, I've added the explicit imports to middleware.py, it looks better this way.\nThanks\n. @dferrante, thanks for the report, the referenced change fixes the issue.\n. ???\n. Works for me, the tests will be replaced when this app depends on python-social-auth (which is well tested).\nThanks\n. I didn't tried, but for what I can recall, DSA will process the response and build a dict in the form:\n{'location': {'name': 'San Francisco Bay Area'}}\nAt the moment DSA doesn't support inner dict inspection when storing extra data, if you define LINKEDIN_EXTRA_DATA = [('location', 'location')], you should get that dict stored in the UserSocialAuth instance which you will be able to access like this:\nuser = User.objects.get(...)\nsocial = user.social_auth.get(provider='linkedin')\nsocial.extra_data['location']['name']\n. @karanbhangui, I agree, storing some basic data doesn't make any harm, but DSA doesn't focus on complex structures and it's not the idea, instead focuses on authentication/authorization processes.\n. @Skandh, I've pushed a fix for this issue, now mongoengine backend respects the import format on SOCIAL_AUTH_USER_MODEL and AUTH_USER_MODEL. Please give it a try.\n. Should be fixed by https://github.com/omab/python-social-auth/commit/e2c3d776fba73ce959bba66430322a16520c1adb\n. Offline access impose a security access that not all users might want and not all the projects needs, because of that it's not added by default by DSA. Instead you can define the extra argument with this setting:\nGOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {'access_type': 'offline'}\nThose that want offline access and refresh token support should use this setting.\n. @s29, I don't think the app needs more settings (there already a lot around), I've added better docs detailing the extra arguments setting for google-oauth2 offline-mode.\n. Thanks!\n. Do you have app in your INSTALLED_APPS setting?\n. DSA leaves that to projects developers to implement, for that it provides a base middleware class SocialAuthExceptionMiddleware that a developer an improve and extend with the desired behavior that works better for the project.\n. That behavior should be implemented in a middleware that's subclassing SocialAuthExceptionMiddleware\n. Thanks!\n. Try setting HTTP_X_FORWARDED_HOST to the proper value in your server configuration, otherwise Django doesn't know from where the request came and can't build the proper host value.\n. Thanks for the feature, I've merged it but then made it a bit more generic, that way it's easier to add the feature to other backends.\n. Thanks!\n. That change should fix the issue, thanks for the report!\n. Thanks!\n. Thanks!\n. Thanks!\n. I've pushed the fix and released v0.7.25\n. Thanks!\n. Thanks\n. Thanks!\n. @tdruez, I've checked your code and there's an issue with resolve_url, it was added on Django 1.5 while DSA supports older versions too (1.2.5, 1.3, 1.4, I should drop 1.2.5), instead the prior versions define a redirect function which does pretty much the same but returns an HttpResponseRedirect instance.\nredirect is supported at Django 1.2.5 too, what do you think about changing those return HttpResponseRedirect(resolve_url(...)) to return redirect(...)?\n. Not possible, but it's possible on python-social-auth (which will replace this lib).\n. @gen1us2k, @s0b0lev, this shouldn't work when using the django built-in User model since the field has null=False. This works with mongoengine and is taken into account already. What version of django are you using? Are you using a custom user model? IMO you should use a custom pipeline entry to clean email address in it since this looks like a custom solution.\n. Reddit backend seems working OK, the error in the images don't make many sense. CSRF doesn't take place on complete process because it's a GET request. I don't see which key is being tried that drop the error, any chance to get the key name?\n. @lrrrgg, I've pushed a fix to that method, could you try again?\n. The backend is passing the the valid grant_type according to reddit code https://github.com/reddit/reddit/blob/master/r2/r2/controllers/oauth2.py#L170. Check this post on r/redditdev http://www.reddit.com/r/redditdev/comments/156i5k/stuck_with_reddit_oauth_and_python/\n. Thanks!\n. Thanks!\n. Using User as model name works as expected, DSA doesn't try the auth_user table. Could you share your models.py? Maybe your imports were importing the User model built-in in django auth application.\n. This is not related with django-social-auth.\n. I don't see the reason of this fix, if user is authenticated then it's an association process and with this patch that won't happen. There was any particular issue that you were trying to solve? Any traceback?\n. After user is authenticated auth_complete() shouldn't be called, why is that happening?\n. Your links are to many things with the word auth_complete which are not the same. The auth process goes like this:\n1. The user clicks /login/github/\n2. The view takes the GithubBackend and calls auth_url() and returns a redirect to that URL\n3. The user gets redirected to github and approves the auth\n4. The user gets redirected back to your site to /complete/github/\n5. The complete grags the GithubBackend and calls auth_complete() which completes the authentication process\n6. auth_complete() returns a user instance and if all went OK redirects the user to the value of SOCIAL_AUTH_LOGIN_REDIRECT_URL or LOGIN_REDIRECT_URL\nThe proposed patch breaks the authentication workflow for github backend (when the user is already logged in). Do you have a traceback of what happens without your patch?\n. No problem, glad it was solved.\n. Thanks!\n. Do you have the attribute name?\n. PR merged, thanks!\n. Thanks\n. Thanks!\n. @mikek, I've pushed a fix for this issue, now all backends have - replaced with _ and no more duplicates now. The replacement is done to allow access by attribute in templates, so you can do social_auth.google_oauth2 if needed.\n. @mikek, my bad, I've removed the dash replacement with underscore, the dict won't be accessible using dot notation, but seems that nobody is using it like that or an issue would be raised already.\n. @kiarashplusplus, I've updated the docs dropping the deprecated example code, the proper way to implement a single association mechanism is using the pipeline example in the pipelines docs (the one you pasted in this ticket description).\n. I think that this should be fixed in Facebook backend since it's the only code that will use that so far.\n. @boris-savic, for that purpose there's a middleware to properly handle the errors, you can extend it and override the behavior if needed.\n. @boris-savic, no problem, here's a link to docs http://django-social-auth.readthedocs.org/en/latest/configuration.html#exceptions-middleware. I'll close this PR.\n. @trilliput, I've released v0.7.26 to pypi. I guess you already know this, but to make your /emails endpoint work you need the proper scope (user or user:email) this grants you access to the private email addresses of the user, otherwise the app tries to get the public email address (the .get('email') or '' in the code).\n. Thanks! I'll port it to python-social-auth too.\n. @kaleissin, I've pushed an small code clarification in the docs. Disconnect is in fact for current users, at least the view enforces that but you can create your own view to handle your project requirements (staff members disconnecting social accounts from another users).\nbackend-id wasn't correct in the docs, it should be association_id, which is the id from the UserSocialAuth instance.\n. The view returns a 405 error code (it's triggered by django require_POST decorator).\n. \n. Reading source code is a common task, anyway, I've added doc regarding the 405 response code.\n. Thanks!\n. @magopian, v0.7.27 has been released to pypi with your changes. Thanks!\n. You can extend this middleware to force you needed behavior, for example try this:\n``` python\nfrom social_auth.middleware import SocialAuthExceptionMiddleware\nfrom social_auth.exceptions import AuthFailed, AuthCancelled\nclass DSAMiddleware(SocialAuthExceptionMiddleware):\n    def get_redirect_uri(self, request, exception):\n        if isinstance(exception, AuthFailed):\n            return '/auth/failed'\n        elif isinstance(exception, AuthCancelled):\n            return '/auth/cancelled'\n        else:\n            return super(DSAMiddleware, self).get_redirect_uri(request, exception)\n```\nThen define the views for /auth/failed and /auth/cancelled\n. @adambratt, what happens if you define SOCIAL_AUTH_TEST_ODNOKLASSNIKI = False? Not the best IMO but I want to focus more on python-social-auth port than old code. If that doesn't work I'll remove the test or move it outside.\n. @ekarthikkumar, you need to enable the associate_by_email pipeline entry which is disabled by default. Check the docs regarding the pipeline at http://django-social-auth.readthedocs.org/en/latest/pipeline.html.\n. Thanks!\n. Thanks!\n. Any chance that nginx is droping that request because it's too long?\n. http://wiki.nginx.org/NginxHttpCoreModule#large_client_header_buffers\n. @tonylampada, that's great, good hunting!\n. Could you try again?\n. @mo-mughrabi, first try updating this setting:\nAUTH_USER_MODEL = 'apps.account.User'\nIf that doesn't work, try firing a django-shell or python shell on heroku and run this code and paste the output:\nfrom social_auth.models import UserSocialAuth\nprint UserSocialAuth.user_model()\n. Cool, closing the issue.\n. Damn, forgot about that. Thanks!\n. Removing the handler from the button to avoid the popup?\n. The lib support Python3 since it started to depend on python-social-auth.\n. v0.8.0 (which carries that change) is not released into pypi yet (I want it to be well tested before breaking everybody setup by a simple pip update). You can install it with pip install git+git://github.com/omab/django-social-auth\n. @stefankoegl, this fixes the issue https://github.com/omab/python-social-auth/commit/d610790e05d42c3f6b7e69148b357a56063383bc\n. Use SOCIAL_AUTH_PROTECTED_USER_FIELDS to protect those fields, check http://django-social-auth.readthedocs.org/en/latest/configuration.html#miscellaneous-settings\n. You can add a pipeline to check the user email, if it's not the same as the current one, then logout the user, but you are assuming that the users use the same email address on every provider you support, that breaks association a little.\n. Overriding the pipeline 'social_auth.backends.pipeline.social.associate_user' to enforce a single social account per user, or replace the inclusion of social-auth URLs with something like this:\n``` python\nfrom functools import wraps\nfrom social_auth.views import auth, complete, disconnect\ndef logged_out_only(func):\n    @wraps(func)\n    def wrapper(request, *args, kwargs):\n        if request.user.is_authenticated():\n            return redirect('/you-need-to-logout-first')\n        return func(request, *args, kwargs)\n    return wrapper\nurlpatterns += patterns('',\n    url(r'^login/(?P[^/]+)/$', logged_out_only(auth),\n        name='socialauth_begin'),\n    url(r'^complete/(?P[^/]+)/$', logged_out_only(complete),\n        name='socialauth_complete'),\n    # disconnection\n    url(r'^disconnect/(?P[^/]+)/$', disconnect,\n        name='socialauth_disconnect'),\n    url(r'^disconnect/(?P[^/]+)/(?P[^/]+)/$',\n        disconnect, name='socialauth_disconnect_individual'),\n)\n``\n. No problem.\n. Shouldn't be a problem now that the lib depends onpython-social-auth.\n. https://django-social-auth.readthedocs.org/en/master/miscellaneous.html#url-template-tag\n. Nothing has changed, butpartial_pipelineis stored in the session which can be trashed on many cases (like after login), alsopartial_pipelineentry is defined when the partial pipeline is used.\n. Yeah, that change cleans any partial pipeline data left in the session,save_status_to_sessionis not a recommended way to get the last used backend, you are filling your session with too many unneeded data. You can get the last used backend by usingrequest.session['social_auth_last_login_backend']or define your custom pipeline function to store it (replacingsave_status_to_session`):\npython\ndef save_backend_name(backend, request, *args, **kwargs):\n    request.session['social_backend'] = backend.name\n. You can also add a pipeline entry before the user instance is created, and modify the values in details to fit your database limits.\n. @Pragueham, create a pipeline function (docs at http://django-social-auth.readthedocs.org/en/latest/pipeline.html) like this:\n``` python\nfrom django.contrib.auth.models import User\nfrom django.db.models.fields import FieldDoesNotExist\ndef clean_user_details(backend, details, user=None, args, *kwargs):\n    if user is not None:\n        return\n    details_copy = details.copy()\n    for field_name, field_value in details.items():\n        try:\n            field = User._meta.get_field(field_name)\n        except FieldDoesNotExist:\n            pass\n        else:\n            if len(field_value) > field.max_length:\n                details_copy[field_name] = field_value[:field.max_length]\n    return details_copy\n```\nAnd put it before the create_user entry in the pipeline. That pipeline will enforce your fields limits to the values that will be used later to create the user.\n. do_auth() is just for OAuth1 and OAuth2 backends only, GoogleAuth is OpenId.\n. Thanks!\n. Thanks!\n. pop is used because that argument is used to call create_user() manager method which will fail if it doesn't accept a username field in case a custom user model is defined, if user_model.USERNAME_FIELD is set to username (default value in Django) then it will just pop and re-insert the username value.\n. @tonylampada, a quick fix is to protect your connect URLs with a token as mentioned in that post, for example ensure that any link <a href=\"/login/facebook/?csrf=TOKEN\">Login with Facebook</a> has that csrf parameter, then check the token validity in a similar way done by Django CSRF middleware.\n. Thanks\n. @kaleissin it's already there http://psa.matiasaguirre.net/docs/configuration/porting_from_dsa.html\n. Set this setting\npython\nSESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'\n. @papaloizouc, this lib is deprecated.\n. This is a python-social-auth bug fixed here https://github.com/omab/python-social-auth/commit/b4d67ce235028cd30b5d7e058ce3f9a5087e10a5\n. @SalahAdDin, yes python-social-auth is a replacement for django-social-auth.\n. @SalahAdDin, django-allauth is a different package from another author, the code is at https://github.com/pennersr/django-allauth.\n. @SalahAdDin, the functionality is similar, django-allauth is a django-only solution while python-social-auth aims to be a multi-framework library.\n. Wrong project?\n. Thanks!\n. Those are keys for python-social-auth, not django-social-auth.\n. Because this library was deprecated on Aug 29, 2013. @mmerchant, this issue was closed because this library is no longer supported (for a few years now).. This library is long dead, similar docs can be found at https://python-social-auth.readthedocs.io/en/latest/. This project was marked as deprecated on Aug 29, 2013. This project was marked as deprecated on Aug 29, 2013. This project was marked as deprecated on Aug 29, 2013. This project was marked as deprecated on Aug 29, 2013. ",
    "liorsion": "It is worth documenting somewhere that get_user_model can only work on already loaded models, so if it happens that you import anything from social_auth inside your custom user model (before it was defined) it would fail.\n. The use case makes sense in a way:\nI have a CustomUser that inherits from User (so it has all the needed methods and managers as required). This CustomUser has another attribute that it needs from Facebook (let's say, Hometown), so it also uses the \"pre_update\" signal.\nA logical place to put the signal is in the CustomUser model, because this is the related magic, and good code writing dictates that the lines:\nfrom social_auth.signals import pre_update\nfrom social_auth.backends.facebook import FacebookBackend\nwould be at the top of the model file. However, once those are imported, the entire thing fails because of the order (CustomUser was not imported yet)\n. ",
    "jezdez": "D'oh, fixed.\n. ",
    "memespring": "Yes. \nEnvironment:\nRequest Method: GET\nRequest URL: http://localhost:8000/login/twitter/\nDjango Version: 1.2.4\nPython Version: 2.6.1\nInstalled Applications:\n['django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.admin',\n 'django.contrib.flatpages',\n 'django.contrib.gis',\n 'social_auth',\n 'main']\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware')\nTraceback:\nFile \"/data/vhost/newsblocks/lib/python2.6/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = callback(request, _callback_args, *_callback_kwargs)\n   File \"/data/vhost/newsblocks/lib/python2.6/site-packages/social_auth/views.py\" in auth\n2.     return auth_process(request, backend, complete_url, redirect)\n   File \"/data/vhost/newsblocks/lib/python2.6/site-packages/social_auth/views.py\" in auth_process\n3.         return HttpResponseRedirect(backend.auth_url())\n   File \"/data/vhost/newsblocks/lib/python2.6/site-packages/social_auth/backends/init.py\" in auth_url\n4.         token = self.unauthorized_token()\n   File \"/data/vhost/newsblocks/lib/python2.6/site-packages/social_auth/backends/init.py\" in unauthorized_token\n5.         return OAuthToken.from_string(response)\n   File \"/data/vhost/newsblocks/lib/python2.6/site-packages/oauth/oauth.py\" in from_string\n6.         key = params['oauth_token'][0]\nException Type: KeyError at /login/twitter/\nException Value: oauth_token\n. After much digging I tracking it down to a bug on the Twitter app registration page. \nIf you do not specify a Callback URL then Twitter  changes the type of app from 'Browser' to 'Client' which then produced the result reported above.\nI have reported this to Twitter, but it might be worth amending the readme in the meantime.\n. ",
    "alfredo": "Yep, I think you are right, didn't considered other User models. \nCheers!\nA\n. ",
    "maraujop": "I have been reviewing the app's code and Facebook's oauth process and it looks like this is not a django-social-auth bug, it is a Facebook's bug. As I said before my Site URL is correct, the way you send the redirect_url is correct too, but I get to:\n\nhttp://127.facebook.com/complete/facebook/?code=....\n\ninstead of:\n\nhttp://127.0.0.1:8000/complete/facebook/?code=....\n\nIf I had a wrong redirect_url sent I would get this:\n\n{\n   \"error\": {\n      \"type\": \"OAuthException\",\n      \"message\": \"Invalid redirect_uri: Given URL is not allowed by the Application configuration.\"\n   }\n}\n\nBut I'm not, so this is one of those problems related to Facebook's love machine, that one that turn's dev's hate and desperation into love :)\nAnyways, you might be interested in mentioning this in the README, so others don't think something is broken when testing locally.\nBest regards,\nMiguel Araujo\n. I didn't know that, but I find it out after debugging the process. I think you should mention this somewhere in the README.\nI was going to close it, but I wanted you to read it :) Thanks\n. Great app, great developer! If you keep the pace, this will be the most popular social app for Django. I'm recommending it everywhere :) \n. I just wanted to make sure I wasn't slipping up. I'll take care of it right away. I have a couple more things I would like to comment with you, do you want me to PM you or create issues?\nMiguel \n. I have tried to work on a Selenium test suite that attacks your demo page, but It needs a test user for every social website.\nThe other way around would be constructing a browser session with a test user logged in, in every different application. What do you think?\nLooks like testing oauth is nothing easy:\nhttps://convore.com/django-community/unit-testing-oauth-with-django/\nRegards,\nMiguel Araujo\n. My relation with selenium is a hate relationship, so I agree with you. I hope the link can help you on this. I will review the twitter test tomorrow.\nKeep up the good work Mat\u00edas! \n. Hi Mat\u00edas,\nI have been following your work progress these days, great work! I am aware you are taking very seriously to have a good testing coverage.\nAs a personal challenge I wanted to try Selenium2. It is supposed to be designed for testing modern web patterns, like Oauth. So I thought that coding a Twitter test for django-social-auth would be a good exercise. \nIt's got some cons and pros. Pros:\n- Your testing code is quite hard to follow and this code is easier to follow. I think documenting it a little bit, would be a good step for getting more developers to review the code.\n- I could have testing for all backends quite fast, as this approach is very reusable.\nCons:\n- At the moment I'm lunching my tests against your online demo page: \n  http://social.matiasaguirre.net/\n  So the real database cannot be hit. I think there should be a way to do this local, but I'm not sure.\n- Selenium2 is not very stable, but the Firefox driver is quite reliable.\n- There cannot be real testing coverage statistics. \nYou are free to keep your line of work, I just wanted you to see this:\nhttps://github.com/maraujop/django-social-auth/commit/e4d25192be294a18ede2f6c77774003fb99c67ba\nBest regards,\nMiguel\n. Hi Mat\u00edas,\nI would love to hear your opinion in what I commented. I have been looking the testing suite and looks like Selenium2 could help speeding testing a lot :)\n. Hi Mat\u00edas,\nI can probably get a complete Google test working this weekend if you want me to. \nYou know the nightmare testing these things is, so I honestly think having two different testing approaches is a strong point. I don't mind that you put my work on an \"extras\" directory or maybe you prefer to add a selenium2-testing branch or something like that :)\n. Hi Mat\u00edas,\nI will put it in a \"contrib\" directory in the root level. Though in my opinion having Selenium2 as a dependency within tests is not really having a dependency strictly. People rarely check tests and the app would run without issues, for those that don't have Selenium2. Anyways I'm moving it and if in the future you change your mind you can move it back, it's not a big thing.\nI will send you a pull request today with some goodies :)\nRegards,\nMiguel\n. I just sent a pull request with Selenium2 contrib testing suite :) that includes tests for several backends.\nAdding tests for the rest of backends should be a piece of cake. As I said before one of the advantages of this method is code reusability. \nOne important thing, is that Linkedin login fails, It looks like there might be a bug in its social backend.\nRegards,\nMiguel\n. Thanks for the kind words Mat\u00edas,\nRunning these tests should be easy, at least that is what I intended. First you need to install Selenium2 in your machine doing:\n\npip install selenium2\n\nThen:\n\ncd contrib/tests/\n./runtests.py\n\nIn order for this to work you will need to edit file test_settings.py with the User information necessary for the social logins. \nI have to update runtests.py as It uses a method that is marked to be deprecated in Django1.3 in favor of DjangoTestSuiteRunner. I will send you an update with that.\nBTW don't forget that the Linkedin test didn't pass.\nThanks, regards\nMiguel Araujo\n. Hi,\nGreat idea having test_settings.py.template and ignoring the real one, so we don't push by mistake our users and passwords :D I was very worried about slipping there.\nI will check it right now, to see what happens, don't worry. Do you get any errors or what happens when you run them?\nMiguel\n. Done,\nIs there a way you can grant me access just on contrib directory, so I don't have to send pull request, every time I fix something? \nTwitter test was failing, but I just fixed it. Others run and pass, excepting Linkedin's one, this is what I get:\n\nError!\n\nSorry but some error made you impossible to login.\n\nPlease try again Home\n\nI will send you a pull request right away, cheers\nMiguel\n. Yeah, I checked and they don't. Anyway we'll do it that way if you want :) \nI'm still wondering why all tests fail for you, what errors do you get? I want you to be able to run them.\nBTW maybe updating the docs to reflect this testing contrib app would be good, so people are aware of this acceptance testing effort. It is a strong point that can boost project's watchers and also some people can contribute, improve some of the tests, give new ideas or add new tests for other backends.\nMiguel\n. Hi Mat\u00edas,\nTake it easy, no rush at all. I will update a couple things today, I will keep you posted.\nBy any chance, Do you have Firefox 4?\nThank you for your great effort and app,\nMiguel\n. Yes, as far as I know Selenium2 is having issues with FF4 and devs are working with the Mozilla guys to get them fixed. It must be related to the low level drivers that manage the browser. That's probably why you have the issues.\nI've just run the tests and only Linkedin fails. \nI guess you could try with the Chrome driver if you have Google Chrome changing the line self.driver = webdriver.Chrome(), but I think it's got worse support than Firefox driver, so don't get angry if it fails.\nBTW I just pushed the changes I was going to do, please pull them into master :D\n. Wow! What version of Selenium do you have?\nAt the same time, when you run the tests, try to not touch anything, don't use another browser at the same time, sometimes selenium does weird things. \nI'm using Selenium 2.0a5 with FF v.3.6.17 So it might be your Selenium version. Selenium2 is in alpha stage at the moment, but this should work, it's nothing that fancy. \nThanks for merging last changes, \nMiguel\n. Well done! That is probably because I had the app already allowed, thanks for fixing it.\nSo now you have the tests working, great.\n. Great, thanks for the work! \n. Sure, I'm saying that we can start moving the README to a docs directory and start the first layout for Sphinx documentation.\n. ",
    "micrypt": "Sure thing. I'll strip out stuff that's specific to my project and put it up over the weekend.\n. Nice catch. Fixed + pull request sent: https://github.com/omab/django-social-auth/pull/56\n. Hi,\nYou can pull the user's social_auth data via \"user.social_auth.get()\". The UserSocialAuth model contains has an \"extra_data\" field that contains the information you can use to get the profile_image_url. \nAnother option's to create a Profile model & hook into a social_auth signal, storing these details in explicit fields on account creation via social_auth.  You could then pull out the data via user.get_profile(). \nI hope that's useful/sufficient. \nRegards,\nSeyi\n. Hi, \nAs long as you have the access tokens, you can do that. However, you might find that you are essentially reimplementing python-twitter or one of the other options (twython) somewhere along the line. \ndjango-social-auth is essentially an authentication-focused package and I doubt @omab has plans to make it a swiss-army knife for dealing with all the API calls possible with the different providers supported. \nI'd keep the dependency or use a different package if dissatisfied with python-twitter in particular. If you're certain that all you would need is the profile picture you could hit the required API endpoint  (http://dev.twitter.com/doc/get/users/profile_image/:screen_name) to pick it up. It's not an authenticated call.\nRegards,\nSeyi\n. \"This week, we started adding a fragment #= to the redirect_uri when this field is left blank. Please ensure that your app can handle this behavior.\"\n- https://developers.facebook.com/blog/post/552/\n. @e7mac If there's any bit of the readme that could be clearer, suggestions & pull requests are welcome. :)\n. I'm uncertain of the exact nature of your requirements. However, if you wish to perform additional processing on the username, you can specify a function to handle this with the SOCIAL_AUTH_USERNAME_FIXER setting.\n. Done.\n. Seems I overestimated GitHub's online editing. Closing to clean up and add commits to initial pull request.\n. ",
    "kraiz": "ahh, yeah. kind of missed that.\n. ",
    "gercheq": "I tested it on http://friendstream.tv \nThe login link is at the left bottom corner along with Twitter and Google. It links to https://graph.facebook.com/oauth/authorize?redirect_uri=http%3A%2F%2Ffriendstream.tv%2Fcomplete%2Ffacebook%2F&client_id=200286996665300\nbut then nothing happens. \n. ",
    "ghost": "If you don't use connection in get_db_prep_value (and you don't) please use get_prep_value instead get_db_prep_value\n. I was getting this exact same issue. Thanks for fixing it. However now i have a new issue. When i try to login as an admin, it always gives me wrong password. It would be great if you could look into that. \nRegards,\nRitesh Kadmawala\n. @omab I am not sure why but my admin module is trying to use the custom user i defined for social auth. I am not sure how to seperate them both. Would appreciate if you could give some pointers.  Currently when i try to go to admin module, I get following error:\n\"CustomUser\" has no method is_staff.\nEnvironment:\nRequest Method: GET\nRequest URL: http://localhost:8000/admin/\nDjango Version: 1.3\nPython Version: 2.7.1\nInstalled Applications:\n['django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'south',\n 'social_auth',\n 'sellitnow',\n 'registration']\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTraceback:\nFile \"/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, _callback_kwargs)\n   File \"/usr/local/lib/python2.7/dist-packages/django/contrib/admin/sites.py\" in wrapper\n2.                 return self.admin_view(view, cacheable)(_args, _kwargs)\n   File \"/usr/local/lib/python2.7/dist-packages/django/utils/decorators.py\" in _wrapped_view\n3.                     response = view_func(request, _args, _kwargs)\n   File \"/usr/local/lib/python2.7/dist-packages/django/views/decorators/cache.py\" in _wrapped_view_func\n4.         response = view_func(request, _args, _kwargs)\n   File \"/usr/local/lib/python2.7/dist-packages/django/contrib/admin/sites.py\" in inner\n5.             if not self.has_permission(request):\n   File \"/usr/local/lib/python2.7/dist-packages/django/contrib/admin/sites.py\" in has_permission\n6.         return request.user.is_active and request.user.is_staff\nException Type: AttributeError at /admin/\nException Value: 'Seller' object has no attribute 'is_staff'\n. Thanks a lot for your reply. But i am still not sure how to go about doing\nthis. The problem is facebook login page belongs to a completely different\ndomain and hence i cant attach events to the popup window. So i dnt know how\nwould i find out when user has logged in and i can close the popup window.\nRegards\nRitesh Kadmawala\nOn Tue, Sep 6, 2011 at 10:35 PM, omab \nreply@reply.github.comwrote:\n\nYou could try opening the login page on a popup, that will show Facebook\nlogin/authorization form in the popup (maybe the mobile version suites\nbetter, I'm not sure if facebook has a popup version for server side auth).\nFinally when completing the loging you just close the popup with JS.\nMakes sense?\nMatas\nPD: I'm closing the bug because this is not really a bug, but we can keep\nthe discussion on.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/140#issuecomment-2018873\n\n\nRegards\nRitesh Kadmawala\n. thanks a lot. I was able to figure out how to do it as soon as i sent you an\nemail.  Anyways it was nice of you to still help me with the solution.\nOn Wed, Sep 7, 2011 at 12:47 PM, Matas Aguirre \nreply@reply.github.comwrote:\n\nYes, but Facebook will redirect back to your app when user logged in and\nyou can make that return-back view a simple page that just does a\npopup-close JS line. Basically it will like this:\n1. Open popup to social auth /login/facebook/ view\n2. Popup will load Facebook login page\n3. User logins/accepts the app\n4. Facebook redirect backs social auth /complete/facebook/ view\n5. Social auth app makes the user login and redirects to view defined by\n   SOCIAL_AUTH_LOGIN_REDIRECT_URL setting.\n6. You defined a view under that final URLs that just closes the template.\nI'm not really sure, but I think you can produce the same with iframes\ninstead of a window popup, and you can embed that iframe in a modal dialog\ngenerated by any JS library around.\n6.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/140#issuecomment-2026246\n\n\nRegards\nRitesh Kadmawala\n. You're quite right. I thought it might be something foolish. Apologies for the unnecessary issue, thanks for the answer!\n. I'd like to get this update too, what version should I put in my requirements.txt? right now I use django-social-auth==0.6.6. Thanks.\n. I have also encountered this error:\n``` -\nTypeError at /social/complete/facebook/\n'bool' object does not support item assignment\nRequest Method:     GET\nRequest URL:    http://localhost:8000/social/complete/facebook/?code=XXXXXXXXXXXXXXXXXX\nDjango Version:     1.4\nException Type:     TypeError\nException Value:    \n'bool' object does not support item assignment\nException Location:     c:\\Python27\\lib\\site-packages\\social_auth\\backends\\facebook.py in auth_complete, line 108\nPython Executable:  c:\\Python27\\python.exe\nPython Version:     2.7.3\n```\nThese are my package versions:\n-\n% pip freeze\ndjango-social-auth==0.6.9\nhttplib2==0.7.4\noauth2==1.5.211\npython-openid==2.2.5\nrequests==0.11.1\n. Here's my copy of facebook.py from 0.6.9: http://pastebin.com/KFd9a15j\nI haven't seen the problem occur since yesterday, perhaps it was a Facebook API issue.\n. Understood. Maybe once we can clearly identify the cases where False is returned, a suitable exception can be raised\n. Same thing happened here, solved by upgrading. Again thanks a lot @omab !\n. I confirm, I had the same issue, yesterday everything was working fine and suddenly I got the 404. I upgraded and everything is fine again now.\n. I am in charge a of copy/pasting spree, I admit, I'll do another PR once I recover ;)\n. I tried to install django-social-auth (PyPi, stable) with new project, but got same error (ValueError: Cannot successfully create field), next I tried latest dev version from trunk and got this error:\nError in migration: social_auth:0002_auto__add_unique_nonce_timestamp_salt_server_url__add_unique_associati\nDatabaseError: relation \"social_auth_nonce_timestamp\" already exists\n...\nand\nDatabaseError: relation \"social_auth_association_issued\" already exists\nI manually removed this indexes from database after first migration and tried migrate 0002 again and it works now.. So may be you need remove 4 lines with 'create_index' and 'delete_index' in /social_auth/migrations/0002_auto__add_unique_nonce_timestamp_salt_server_url__add_unique_associati.py to fix this issue...\n. @omab with --fake I lose this unique indexes:\ndb.create_unique(Nonce._meta.db_table, ['timestamp', 'salt',\n                                                'server_url'])\n        db.create_unique(Association._meta.db_table, ['handle', 'server_url'])\n. I also had same problem, is there has the solution now?\n. @seansay \u5728\u8c46\u74e3\u7684\u5e94\u7528\u5c5e\u6027\u91cc\u9700\u8981\u8bbe\u7f6e\u300e\u56de\u8c03\u5730\u5740\u300f\uff0c\u56de\u8c03\u5730\u5740\u4e3a\u4f60\u8f6c\u5165\u8c46\u74e3\u9a8c\u8bc1\u7684\u5730\u5740\uff0chttp://*_/complete/douban2/\uff0c \u800c\u5e94\u7528\u5730\u5740\uff0c\u8bbe\u7f6e\u4e3ahttp://_***/\u3002\u672c\u5730\u6d4b\u8bd5\u65f6\u6539hosts\u5230127.0.0.1 \u5c31\u80fd\u89e3\u51b3\u4e86\u3002\n\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u5728\u4e8e\u8c46\u74e3\uff0c\u800c\u4e0d\u662fsocial-auth\u3002\n@omab solution has found, you can close the issue.\n. @dengyuanzhong \u5e94\u8be5\u662f\u4f60\u7684\u5e94\u7528\u901a\u8fc7\u5ba1\u6838\u4e4b\u540e\u5c31\u4f1a\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u3002\u901a\u8fc7\u5ba1\u6838\u4e4b\u524d\uff0c\u4efb\u610f\u5730\u5740\u90fd\u53ef\u4ee5\u8f6c\u5165\u8c46\u74e3\u9a8c\u8bc1\u767b\u9646\u3002\u901a\u8fc7\u5ba1\u6838\u4e4b\u540e\u5982\u679c\u7531\u5e94\u7528\u8f6c\u5165\u8c46\u74e3\u7684\u5730\u5740\u4e0e\u56de\u8c03\u5730\u5740\u4e0d\u7b26\u5408\u5c31\u4f1a\u51fa\u73b0Error 400\u3002\u800c\u4ece\u56de\u8c03\u5730\u5740\u8f6c\u5165\u8c46\u74e3\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002\n. This migration try create indexes which already exists. Just remove 10 and 13 lines or manually remove indexes after first migration in database via PhpPostgreAdmin, for example and try again.\nhttps://github.com/omab/django-social-auth/blob/master/social_auth/migrations/0002_auto__add_unique_nonce_timestamp_salt_server_url__add_unique_associati.py\n. With --fake option you may lose creation of unique indexes (don't forget to add them manually).\n. Im having the same problem.\nSetting 'social_auth.context_processors.social_auth_by_type_backends' in the TEMPLATE_CONTEXT_PROCESSORS\ndid not fix my problem.\nI cannot create this error myself but my server keeps sending me an email of 500 error with following traceback.\n\nTraceback (most recent call last):\nFile \"/usr/lib/python2.6/site-packages/Django-1.5-py2.6.egg/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\nFile \"/usr/lib/python2.6/site-packages/Django-1.5-py2.6.egg/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(_args, *_kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.22-py2.6.egg/social_auth/decorators.py\", line 29, in wrapper\n    return func(request, request.social_auth_backend, _args, *_kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.22-py2.6.egg/social_auth/views.py\", line 42, in complete\n    return complete_process(request, backend, _args, *_kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.22-py2.6.egg/social_auth/views.py\", line 111, in complete_process\n    user = auth_complete(request, backend, _args, *_kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.22-py2.6.egg/social_auth/views.py\", line 197, in auth_complete\n    return backend.auth_complete(user=user, request=request, _args, *_kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.22-py2.6.egg/social_auth/backends/twitter.py\", line 87, in auth_complete\n    return super(TwitterAuth, self).auth_complete(_args, *_kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.22-py2.6.egg/social_auth/backends/init.py\", line 635, in auth_complete\n    raise AuthTokenError(self, 'Missing unauthorized token')\nAuthTokenError: Missing unauthorized token\n-----END-------\nHelp me out!\n. bugged urls:\nhttp[s]://[host]/[admin]/default/usersocialauth/\n. Oops, I used outdated version.... :-)\n. ",
    "m-misseri": "Ah, the problem is because i'm logged with a PAGE and not with a PROFILE USER.\nIt's a bug? :-) \nRegards.\n. A Fan Page, only page, not profile. Understand?\n. These are the errors:\nTraceback (most recent call last):\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/servers/basehttp.py\", line 283, in run\n    self.result = application(self.environ, self.start_response)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/contrib/staticfiles/handlers.py\", line 68, in call\n    return self.application(environ, start_response)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/handlers/wsgi.py\", line 273, in call\n    response = self.get_response(request)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/handlers/base.py\", line 169, in get_response\n    response = self.handle_uncaught_exception(request, resolver, sys.exc_info())\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/handlers/base.py\", line 111, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/contrib/auth/decorators.py\", line 23, in _wrapped_view\n    return view_func(request, _args, *_kwargs)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/social_auth/views.py\", line 66, in associate\n    return auth_process(request, backend, complete_url)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/social_auth/views.py\", line 93, in auth_process\n    redirect = reverse(complete_url_name, args=(backend,))\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/urlresolvers.py\", line 391, in reverse\n    _args, *_kwargs)))\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/urlresolvers.py\", line 337, in reverse\n    \"arguments '%s' not found.\" % (lookup_view_s, args, kwargs))\nNoReverseMatch: Reverse for 'association_complete' with arguments '(u'google',)' and keyword arguments '{}' not found.\n. I have removed the:\nSOCIAL_AUTH_COMPLETE_URL_NAME = 'social:complete'\nSOCIAL_AUTH_ASSOCIATE_URL_NAME = 'social:association_complete'\nbut the errors are the same:\nTraceback (most recent call last):\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/servers/basehttp.py\", line 283, in run\n    self.result = application(self.environ, self.start_response)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/contrib/staticfiles/handlers.py\", line 68, in call\n    return self.application(environ, start_response)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/handlers/wsgi.py\", line 273, in call\n    response = self.get_response(request)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/handlers/base.py\", line 169, in get_response\n    response = self.handle_uncaught_exception(request, resolver, sys.exc_info())\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/handlers/base.py\", line 111, in get_response\n    response = callback(request, _callback_args, *_callback_kwargs)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/contrib/auth/decorators.py\", line 23, in _wrapped_view\n    return view_func(request, _args, *_kwargs)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/social_auth/views.py\", line 66, in associate\n    return auth_process(request, backend, complete_url)\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/social_auth/views.py\", line 93, in auth_process\n    redirect = reverse(complete_url_name, args=(backend,))\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/urlresolvers.py\", line 391, in reverse\n    _args, *_kwargs)))\nFile \"/Volumes/duc/Sites/django/met_env/lib/python2.6/site-packages/django/core/urlresolvers.py\", line 337, in reverse\n    \"arguments '%s' not found.\" % (lookup_view_s, args, kwargs))\nNoReverseMatch: Reverse for 'associate_complete' with arguments '(u'twitter',)' and keyword arguments '{}' not found.\nWhere i mistake?\nMy Urls.py regarding social_auth is:\nurl(r'^accounts/', include('social_auth.urls',     namespace='social')),\nThanks for the support omab.\n. Thanks brother! It seems to work well ;-)\n. To you, for this fast support. Thanks.\n. For OAuth2 is important the callback url and the domain from I testing the code? \nBecause in local I'm using 127.0.0.1 but in callback and in server name settings I have used another domains..... \nMust i use the same domain like in facebook login testing?\nNow i receive in the query string:\n?error=invalid_client\nand this:\nHTTPError: HTTP Error 400: Bad Request\nThanks in advance omab\n. Yes, i know that workaround, thanks. :-)\nCan you take a look on this: http://dpaste.com/hold/543641/ ?\nThe authentication work:\n/accounts/login/foursquare/ redirect to:\nhttps://it.foursquare.com/oauth2/authenticate?redirect_uri=http%3A%2F%2Fmyapp.com%2Faccounts%2Fcomplete%2Ffoursquare%2F&response_type=code&client_id=**\nfor asking the permission, then after accepting permission the foursquare server redirect to:\nhttp://myapp.com/accounts/complete/foursquare/?code=K**FBN34A\nBut now, i don't know how i can complete the authorization and why access_token is Null.\nCan you help me? \nThanks!\n. Ok, i have fixed.\nNow i receive these error:\nhttp://dpaste.com/543811/plain/\nThe code updated is:\nhttp://dpaste.com/hold/543812/\nThanks for the support guys.\n. Yes, it's this: \n{'access_token': 'R0SMPBGO2OGYY0DZPVGM*O'}\n. Now seems to work, but there is another problem.\nAfter authorization..\nif i disconnect my account (logout) /accounts/logout/ and i want to re-login with foursquare, it ask to me every time the window for asking the permission..\nNow i'm using: \nhttps://foursquare.com/oauth2/authorize\n  ?client_id=YOUR_CLIENT_ID\n  &response_type=code\n  &redirect_uri=YOUR_REGISTERED_REDIRECT_URI\nIf i use:\nhttps://foursquare.com/oauth2/authenticate\n  ?client_id=YOUR_CLIENT_ID\n  &response_type=code\n  &redirect_uri=YOUR_REGISTERED_REDIRECT_URI\nAfter the login the foursquare server don't reply any, 'error when loading the page'..  but the first auth work correctly. \nThe code is this:\nhttp://dpaste.com/hold/544013/\nWho can help me? :-)\nThanks!\n. Sorry for my bad english.\nThe problem is this:\nThe foursquare server asks me the permissions for the login every time, instead that only the first time.\nUnderstand?\nThere are no errors..\n. If I change to  /authenticate/ the system redirect here:\nhttps://foursquare.com/oauth2/authenticate?redirect_uri=http%3A%2F%2Fmyapp.com%2Faccounts%2Fcomplete%2Ffoursquare%2F&response_type=code&client_id=GIA4VU1ZHJIYT05325FYXS1FZGKVKRSNHOJYWYSXF0***\nbut the link not work :( \nError connection.\n. Thanks, but now return to me: ?error=redirect_uri_mismatch\nwhit this error:\nhttp://dpaste.com/hold/544089/\nMust I set it?\nThanks..another ;)\n. Oh yeah!\nMy error was\nCallback URL http://myapp.com:8000/complete/foursquare/\ninstead of\nCallback URL http://myapp.com:8000/accounts/complete/foursquare/\nIn the foursquare settings :)\nThanks Thousands omab! Seems to work all correctly!\nI'll create the fork soon\n. Ok, created :)\nThis is my first fork.. i must exercise with git because this is the first time that i use it :)\nhttps://github.com/bedspax/django-social-auth\nI'v mistake?\nLet me know. \n. Moved! :-) \n. I'm talking about token of oauth2.0 but i need to integrate a mobile app (the auth) with my store db data. Understand?\nPlease read this, thanks:\nhttp://stackoverflow.com/questions/6565008/implement-api-to-storing-credential-of-facebook-twitter-or-something-else\n. I receive the same error with 1.3\nDjango Version:     1.3\nException Type:     HTTPError\nException Value:    \nHTTP Error 401: Unauthorized\nWith all login.. \n. Another strange error with twitter login ... 'oauth_token' not found in OAuth request. (this with a old version of django-social-auth, it's 0.4.2)\nValueError at /accounts/login/twitter/\n'oauth_token' not found in OAuth request.\nRequest Method:     GET\nRequest URL:    http://127.0.0.1:8000/accounts/login/twitter/?next=/accounts/\nDjango Version:     1.3\nException Type:     ValueError\nException Value:    \n'oauth_token' not found in OAuth request.\n. I'v download the last version in local, setup new app twitter and reset key.. but still not work. Any hints?\n. Which callback must i set?\nhttp://mysite.com/accounts/complete/twitter/ ?\nTy\n. Now twitter and all works fine :-),  except Linkedin. \nIt dosn't return any errors but:\n1)  Redirect me to linkedin login,\n2)  I confirm the authorization\n3)  The app redirect to /accounts/login/ and i'm not logged. \nThese are the messages from django:\n[06/Sep/2011 07:01:40] \"GET /accounts/login/linkedin/?next=/accounts/ HTTP/1.1\" 302 0\n[06/Sep/2011 07:01:43] \"GET /accounts/complete/linkedin/?oauth_token=19a37b4c-2060-49ba-b334-f049ccecedbe&oauth_verifier=62540 HTTP/1.1\" 302 0\n[06/Sep/2011 07:01:43] \"GET /accounts/login/ HTTP/1.1\" 200 5617\nAny hints?\nI'v also set in the linkedin app configuration the callback.\n. I'v set /accounts/complete/linkedin/ like in others social. I'm wrong?\n. No, it doesn't,\nThese are the field regardings url in the linkedin app config:\nIntegration URL: http://mysite.com/\nand i'v tryed with: http://mysite.com/accounts/login/linkedin/\nURL redirect OAuth: http://mysite.com/accounts/complete/linkedin/\nWhere I wrong?\n. Still no work without OAuth Redirect URL and Integration URL, also in local :-(\nThese are the log:\n[06/Sep/2011 16:40:58] \"GET /accounts/login/linkedin/?next=/accounts/ HTTP/1.1\" 302 0\n[06/Sep/2011 16:41:01] \"GET /accounts/complete/linkedin/?oauth_token=c3a3931a-d6ef-4c1a-bbdf-3e48688368b8&oauth_verifier=00677 HTTP/1.1\" 302 0\n[06/Sep/2011 16:41:01] \"GET /accounts/login/ HTTP/1.1\" 200 5617\n[06/Sep/2011 16:41:01] \"GET /jsi18n/ HTTP/1.1\" 200 2439\nIf you need any further information, please ask. \nThanks for the support and your patience.\n. LOGIN_REDIRECT_URL = '/accounts/'\n. I haven't set that var. Are foundamentally?\n. Thanks omab for the support. :) Tomorrow or more late in the night I try your solution and I'll inform you ;)\n. Uhm, my view:\ndef error(request):\n    messages = get_messages(request)\n    return render(request, 'error.html', { 'error': messages })\nmy error.html:\n{{ error }}\nIts return: \n     django.contrib.messages.storage.user_messages.LegacyFallbackStorage object at 0x1039b21d0>\n. My new view:\ndef error(request):\n    messages = get_messages(request)\n    return render(request, 'error.html', { 'messages': messages })\nAnd html equals to your example.\nNow return only: \nSorry but some error made you impossible to login.\nPlease try again Home\n. Uhm.. I have the latest version but don't have that code, my views.py is http://dpaste.com/610785/plain/\nEdit: I have also tryed with that views.py files but don't return anything. Hints? O_o\n. Ok, now I have your version. ;)\nBut.. I think that the number of the line where I put the print is wrong because now dosn't return any message on my terminal.\n. Yes,\nok i have put two print, one up and one below, the result is this:\nmessage up\n[07/Sep/2011 19:02:05] \"GET /accounts/login/linkedin/?next=/accounts/ HTTP/1.0\" 302 0\nmessage up\n[07/Sep/2011 19:02:08] \"GET /accounts/complete/linkedin/?oauth_token=f4bebd41-e43a-4c72-9fd4-a0b5fe33c1f4&oauth_verifier=23488 HTTP/1.0\" 302 0\n[07/Sep/2011 15:23:28] \"GET /error/ HTTP/1.1\" 200 97\nDosn't enter in the except imho.\n. try:\n            print 'message up'\n            return func(request, backend, *args, **kwargs)\n        except Exception, e:  # some error ocurred\n            backend_name = backend.AUTH_BACKEND.name\n            msg = str(e)\n            print 'message below'\n            print e, msg\n. I hope I explained it well.\n. Hei Omab,\nI'm an idiot. \nI'v missed that: \n'social_auth.backends.contrib.linkedin.LinkedinBackend',\nin my settings.py.\nI apologize for your lost time with me.\nNow all works fine. :)\n. cool. Thanks. \nAre you work on these days?\n. And another thing. \nCould you explain better 'your own auth pipeline' ?\nThanks another omab. \n. Ok thanks. If you have also only a draft it will be usefully for me now. ;) \n. Any news?\n. Thanks!\n. When will be done the documentation for the pipeline?\n. well omab! :)\n. Maybe the problem is this var: SOCIAL_AUTH_SESSION_EXPIRATION ? \nI have tryed with False and True, but the result is the same.\n. Some ideas on how can I resolve it?\n. Thanks omab, Which is the best method to override a view?\nI though: \nurl(r'^complete/(?P[^/]+)/$', complete, name='my_custom_view')\nIs this the best method?\n. Thanks\n. Resolved with this custom pipeline:\ndef fetch_profile(backend, details, response, user, is_new=False, _args, *_kwargs):\n  pass\n:)\n. I thinks the problem is here:\nelse:\n    msg = setting('LOGIN_ERROR_MESSAGE', None)\n    if msg:\n        messages.error(request, msg)\n    url = backend_setting(backend, 'LOGIN_ERROR_URL', LOGIN_ERROR_URL)\n@omab \nOk, gotcha. The problem is that i Have set LOGIN_ERROR_MESSAGE = True.\nBut I would want to know why there are this login error.. :)\n. Thanks @omab as always. It's a my bad error on my custom pipeline. ;)\n. Thanks @omab, but in that case, have I don't have access on users tokens.\nI need tokens for sending something like ('I have just connected my account with Site') ... on twitter/facebook stream/wall.\nThanks.\nEdit:\nMoreover, don't work:\npython\ndef set_new_associate(social_auth=None, *args, **kwargs):\n    if not social_auth:\n        print 'NEW ASSOCIATION'\n    else:\n        print 'NO NEW ASSOCIATION'\n    return dict()\n)\nit print always NEW ASSOCIATION.\nSettings.py:\npython\nSOCIAL_AUTH_PIPELINE = (\n    'social_auth.backends.pipeline.social.social_auth_user',\n    'pigusers.backends.pipeline.user.set_new_associate',\n    'social_auth.backends.pipeline.associate.associate_by_email',\n    'pigusers.backends.pipeline.user.get_username',\n    'social_auth.backends.pipeline.user.create_user',\n    'pigusers.backends.pipeline.user.fetch_profile',\n    'social_auth.backends.pipeline.social.associate_user',\n    'social_auth.backends.pipeline.social.load_extra_data',\n    'social_auth.backends.pipeline.user.update_user_details',\n)\n. 10x @omab .\n. ",
    "wyleung": "Tnx!\n. ",
    "scrua": "Hm you are right, cool! That was my fail. Thanks!\n. ",
    "kevinpostal": "I found a way https://www-opensocial.googleusercontent.com/api/people\nHere is an example:\n```\ntoken = 'O AUTH TOKEN'\nscope = \"https://www-opensocial.googleusercontent.com/api/people\"\nurl = \"%s/@me/@self\" % scope\nparams='OAuth %s' % token \nrequest = Request(url, headers={'Authorization': params})\ndata =  simplejson.loads(urlopen(request).read())['entry']\nfirst_name = data['name']['givenName']\nlast_name = data['name']['familyName']\n```\nI use this with Celery to download info plus avatar.\n. It also might be nice to modify\nDEFAULT_REDIRECT = getattr(settings, 'LOGIN_REDIRECT_URL', '') in views \nso you can specify a \"SOCIAL_AUTH_LOGIN_REDIRECT_URL\" and default to normal default redirect if not specified. \n. Thank you omab. Your support for this application is amazing :) keep up the great work.\nThe SOCIAL_AUTH_LOGIN_REDIRECT_URL  works well, but it still leaves the original issue of displaying a page for when you FIRST register. This is useful if you need to display a thank you page upon registration.\nI looked through the code, not sure how this would be accomplished. It looks like the rendering of  the redirect url is very decoupled from the actual registration. \n. ",
    "bashmish": "I want to implement this feature, but can't find any documentation about this API on Google Code.\nCould anybody point me at it?\n. According to this discussion on Google Groups, Googlers are still working to implement appropriate API. Hope they do that at last.\n. ",
    "pshields": "I think the scope should be https://www.googleapis.com/auth/userinfo.profile. Here is an example application with source.\n. I encountered a similar issue, but with Apache. The proxy module docs say the ProxyPreserveHost directive should normally be off, which it is by default. But I have to turn it on for django-social-auth to construct the URLs correctly. No other element of my application, as far as I'm aware, requires the host header to be accurate. I have settings.BASE_URL defined as the URL I would prefer used for constructing URLs.\nI just wanted to share my experience\u2014I'm not pushing for any particular change to django-social-auth.\n. ",
    "jsanchezpando": "Just write this google oauth2 backend to get the full profile !\nMay be integrated in 'google-oauth2' backend ?\ngooglebackend.py:\n```\nfrom urllib import urlencode\nfrom urllib2 import Request, urlopen\nfrom django.utils import simplejson\nfrom social_auth.backends import USERNAME\nfrom social_auth.backends.google import GoogleOAuth2, GoogleOAuth2Backend, BACKENDS\nimport settings\nclass GoogleProfileBackend(GoogleOAuth2Backend):\n    \"\"\"Google OAuth2 authentication backend\"\"\"\n    name = 'google-profile'\ndef get_user_details(self, response):\n    \"\"\"Return user details from Google account\"\"\"\n    email = response['email']\n    return {USERNAME: email.split('@', 1)[0],\n            'email': email,\n            'fullname': response.get('name',''),\n            'first_name': response.get('given_name',''),\n            'last_name': response.get('family_name',''),\n            'gender': response.get('gender','')}\n\nclass GoogleProfile(GoogleOAuth2):\n    \"\"\"Google OAuth2 support\"\"\"\n    AUTH_BACKEND = GoogleProfileBackend\ndef get_scope(self):\n    return ['https://www.googleapis.com/auth/userinfo.email', 'https://www.googleapis.com/auth/userinfo.profile'] + \\\n           getattr(settings, 'GOOGLE_OAUTH_EXTRA_SCOPE', [])\n\ndef user_data(self, access_token):\n    \"\"\"Return user data from Google API\"\"\"\n    return self.googleapis_profile('https://www.googleapis.com/oauth2/v1/userinfo', access_token)\n\ndef googleapis_profile(self, url, access_token):\n    \"\"\"Loads user data from googleapis service\n\n    Google OAuth documentation at:\n        http://code.google.com/apis/accounts/docs/OAuth2Login.html\n    \"\"\"\n    data = {'access_token': access_token, 'alt': 'json'}\n    request = Request(url + '?' + urlencode(data))\n    try:\n        return simplejson.loads(urlopen(request).read())\n    except (ValueError, KeyError, IOError):\n        return None\n\nBACKENDS['google-profile'] = GoogleProfile\n```\nin settings.py:\nadd 'yourapp.googlebackend.GoogleProfileBackend' in the AUTHENTICATION_BACKENDS\nand\nSOCIAL_AUTH_IMPORT_BACKENDS = (\n     'yourapp',\n )\nexpect was usfull...\n. I have integrate this plugin to my app\nhttps://github.com/davejohnson/phonegap-plugin-facebook-connect\nIt allow me (by the Facebook sdk) to connect to Facebook, call the ajax Facebook api, get an access token... Everything works fine but I need to be authenticated on the server.\nI things i can be logged if I send the good \"code\" parameter to my complete facebook url but i don't know yet witch one i need to send... The documentation said it is the \"authorization code\", is it the same as \"access token\" ? Is there a way to be authenticated with the access token ?\nhttps://developers.facebook.com/docs/reference/javascript/\nI am searching a way to get the authorization code from the plugin.\n. I found a solution !!!\nThe authentication can be done with the access token, I just need to send the token to the server and social_auth retrieve the user by querying Facebook (or wathever).\nMy code look like this\n```\nimport json\nfrom social_auth.backends import get_backend\nfrom django.contrib.auth import authenticate\nfrom django.http import HttpResponse\ndef oauthtoken_to_user(backend_name,token,request,*args, kwargs):\n    \"\"\"Check and retrieve user with given token.\n    \"\"\"\n    backend = get_backend(backend_name,request,\"\")\n    response = backend.user_data(token) or {}\n    response['access_token'] = token\n    kwargs.update({'response': response, backend_name: True})\n    user = authenticate(*args, kwargs)\n    return user\nthis is a view\ndef check_my_token(request):\n    user = oauthtoken_to_user(request.GET.get('backend'),request.GET.get('access_token'),request)\nreturn HttpResponse(json.dumps({\n    'status':'success',\n    'user':user.get_full_name(),\n    'more stuff': do_somethings()\n}),mimetype=\"application/json\")\n\n```\nMaybe there is a more direct way to retrieve the user but this way works.\n. ",
    "JasonGiedymin": "Ah so your saying add a new property, and set it to True for later access. One must remember and set it to 'False' when done.\n. ",
    "mishrarohit": "From where should I send the socialauth_registered signal ? Also, where should its handler be defined ? \n. Thanks. Though I think we can have a SOCIAL_AUTH_REDIRECT_NEW parameter which will show a welcome page for new users and home page/REDIRECT_URL page for old users.\n. Thanks @omab. As others have commented, you are just awesome on this project. \n. I was using user(foreign key in UserProfile) = instance in the create_profile handler which is connected to post_save signal on User model. I changed that to user = kwargs[instance] which solved the error. \nSOCIAL_AUTH_ERROR_KEY was defined.\nHow do I check the 2nd question?\n. I am not getting logged in at all now - even on second attempt.The user record is being created as well as the corresponding record in socialauth_usersocialauth. My create_profile signal is also working. The facebook_extra_values signal is not working. \nI ran the print statement on line 48 and the user instance is None. \n. I am able to get my project working when i comment out facebook_extra_values signal handler. After commenting it out, I am getting the correct username on line 48 in views.py also. In my facebook_extra_values, I am getting the user's profile and then saving all the data from FB into the profile. \n. My signal handler is : \n``` django\ndef facebook_extra_values(sender, user,response, details, **kwargs):        # Save all the FB data into a user's profile\n    #profile = user.get_profile()\n    current_user = user \n    profile, new = UserProfile.objects.get_or_create(user=current_user)\n    #except:\n    #   pass\nprofile.gender = response.get('gender')\nprofile.facebookID = response.get('id')\nprofile.locale = response.get('locale')\nprofile.fb_link = response.get('link')\nprofile.timezone = response.get('timezone')\nprofile.bio = response.get('bio')\nhometown = response.get('hometown')\n\n    # Search for a place object with the same name, otherwise create a new place\ntry :\n        city = City.objects.get(name = hometown)\nexcept City.DoesNotExist:\n        city = City.objects.create(name = hometown)\n        city.save()\n\nprofile.hometown = city\n\n# End of hometown\n\n# Do the same work as hometown for location\nlocation = response.get('location')\ntry:\n            city = City.objects.get(name = location)\n    except City.DoesNotExist:\n            city = City.objects.create(name = location)\n            city.save()\n\n    profile.location = city\n# End of location\n\nprofile.website = response.get('website')\n\nprofile.save()\nreturn True\n\npre_update.connect(facebook_extra_values, sender=FacebookBackend, weak = False, dispatch_uid = 'facebook_extra_values_user')\n```\nI have only one app in my project and this handler is defined at the end of the models.py in that app. \n. The version I pasted is failing. If I have the signal handler defined in my code, I get the login-error page. If I remove it, then I land at the URL_REDIRECT page without any error with record created for user. \n. I got the error. I have defined timezone as a DecimalField whereas facebook returns a float value due to which my profile was not getting saved. Still wonder why that will create problem in user login.\n. Thanks @omab.  The signup page now doesn't show the error after changing begin to socialauth_begin. But I am getting the same error on /login/facebook \nReverse for 'complete' with arguments '(u'facebook',)' and keyword arguments '{}' not found. \nI have appended the social_auth directory to my virtualenv's pythonpath. \n. Thanks for your help @omab. Please add a mention in the example files that we need to prefix urls with socialauth. \n. ",
    "thoas": "I already have done it in my fork but your solution is better.\nThank your for your time.\n. ",
    "Visgean": "Is this still actual? I mean this settings is not mention in the docs: http://django-social-auth.readthedocs.org/en/latest/configuration.html\n. but is it safe though? I have found this:\nAutomatic email association is disabled by default since it could be a security risk and allow users to take-over others' accounts by spoofing email address in providers. Also this setting is not supported any more:\ndoes it mean that user can take over the account only by modifying data send by url from provider? i mean just to change the redirect url and rewrite the email... Or is there some controlling mechanism like md5 sum of the url parameters?\n. Thanks, that is exactly what I needed, I am using facebook and google oauth2 so it\u00b4s fine.\n. Hi I ran into same problem - basically I need users to authenticate with google open id but I do not want them to register. Therefore I cannot display auth link only to logged users... \n. Hah that seems pretty smart - my 'solution' was just let the people register becasuse they would not log anyway as we have custom middleware that will log them off if they do not belong there...\n. Oh, and for anybody who has based their auth mechanism on emails: do not forget to add this pipeline:\nsocial_auth.backends.pipeline.associate.associate_by_email\n. ",
    "jacobg": "I just want to know how/where I specify login session expire parameters at\nthe time of login.\nThanks\nOn Mon, Apr 18, 2011 at 1:50 PM, omab \nreply@reply.github.comwrote:\n\nThat depends a lot on what you want to do and the case-by-case scenario.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/52#comment_1022361\n. Sorry for the delayed reply, I just got back from vacation. Thanks for the\ninfo. I am trying out request.session.set_expiry() method to see if that\nwill suit my needs.\n\nOn a separate note, the social auth app doesn't seem to handle\nchanging/re-creating a UserSocialAuth object based on existing user object.\nInstead, it creates a new user object. I modified the SocialAuthBackEnd to\nhandle this by:\n1. in authenticate method, I changed UserSocialAuth.DoesNotExist exception\n   handler to the following-\n```\n   except UserSocialAuth.DoesNotExist:\n   user = kwargs.get('user')\n\n   if user is None:  # new user\n\n       if not getattr(settings, 'SOCIAL_AUTH_CREATE_USERS', True):\n\n           return None\n\n       username = self.username(details)\n\n       email = details.get('email')\n\n\n\n       # $JACOBGUR: Try to look up existing user object. Then we'll\n\n```\ncreate\n```\n           # a new association\n       from django.core.exceptions import ObjectDoesNotExist\n\n       try:\n\n           user = User.objects.get(username=username, email=email)\n\n       except ObjectDoesNotExist:\n\n       # END $JACOBGUR\n\n           user = User.objects.create_user(username=username,\n\n```\nemail=email)\n```\n               is_new = True\n   social_user = self.associate_auth(user, uid, response, details)\n\n```\n2. changed username method to the following:\ndef username(self, details):\n```\n   \"\"\"Return an unique username, if SOCIAL_AUTH_FORCE_RANDOM_USERNAME\nsetting is True, then username will be a random 30 chars md5 hash\n\"\"\"\ndef get_random_username():\n   \"\"\"Return hash from random string cut at 30 chars\"\"\"\n\n   return md5_constructor(urandom(10)).hexdigest()[:30]\n\nif getattr(settings, 'SOCIAL_AUTH_FORCE_RANDOM_USERNAME', False):\n   username = get_random_username()\n\n# $JACOBGUR: Add SOCIAL_AUTH_EMAIL_USERNAME setting and condition\nelif getattr(settings, 'SOCIAL_AUTH_EMAIL_USERNAME', False):\n   username = details['email']\n\n# END $JACOBGUR\nelif USERNAME in details:\n   username = details[USERNAME]\n\nelif hasattr(settings, 'SOCIAL_AUTH_DEFAULT_USERNAME'):\n   username = settings.SOCIAL_AUTH_DEFAULT_USERNAME\n\n   if callable(username):\n\n       username = username()\n\nif not username:\n   username = get_random_username()\n\n\n  # $JACOBGUR: Remove the following commented-out code that\n\n```\nprevents user object\n```\n   # from already existing\n'''fixer = getattr(settings, 'SOCIAL_AUTH_USERNAME_FIXER', lambda u:\n   ```\nu)\n```\n   name, idx = username, 2\nwhile True:\n   try:\n\n       name = fixer(name)\n\n       User.objects.get(username=name)\n\n       name = username + str(idx)\n\n       idx += 1\n\n   except User.DoesNotExist:\n\n       username = name\n\n       break'''\n\n  # END $JACOBGUR\n\nreturn username\n   ```\nIs this type of functionality something you are interested to integrate in\nyour app?\nOn Mon, Apr 18, 2011 at 5:26 PM, omab \nreply@reply.github.comwrote:\n\nDjango-social-auth doesn't alter the session time on anyway, it only uses\nsession as simple data storage, django contrib auth app does the same, it\nonly stores a few things on session but doesn't change the live time.\nInstead this is left to default values.\nTake a look to:\nhttp://docs.djangoproject.com/en/dev/topics/http/sessions/?from=olddocs#session-cookie-ageand\nhttp://docs.djangoproject.com/en/dev/topics/http/sessions/?from=olddocs#session-expire-at-browser-close\nto check django default values.\nCurrently I'm working on improvement to redirect URLs and it will support a\ncustom URL for newly created users and for old users, maybe that view suites\nyour needs to tweak the session times?\nMatas\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/52#comment_1023607\n. Thanks.\n\nIs the account association feature implicit?\nI am running into a problem now, b/c I am accessing my site through two\ndifferent hostnames. As a result, Google returns a different open id for my\nusername, and then two UserSocialAuth objects get created. Then I end up\nwith this error:\nMultipleObjectsReturned at /complete/google/\nget() returned more than one UserSocialAuth -- it returned 2! Lookup\nparameters were {'provider': 'google'}\nDo I need to do something explicit to support two or more UserSocialAuth\nobjects for a particular user?\nOn Wed, Apr 27, 2011 at 10:26 AM, omab \nreply@reply.github.comwrote:\n\nActually it does, check the account association feature. Once the user is\nlogged in in your system (old or new), it should be able to associate other\nsocial accounts.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/52#comment_1064510\n. I do see that the demo support multiple associations of different providers to one user. What about multiple associations of the same provider to one user? For example, in the scenario of my last post on this thread, where a user logs into the web site using different server hostnames?\n. Hmm, I'm not seeing a query on UID. At:\n  File \"/Users/jacobgur/Documents/workspace/djangotimeclock/src/social_auth/views.py\", line 51, in complete_process\n    social_user = user.social_auth.get(provider=backend_name)\n\nit looks up UserSocialAuth object by user and provider values, but not by uid. If the same user on same provider accesses provider (say, Google) via a different consumer hostname (e.g., foomail.com, mail.foo.com) then UID will be different and thusly you should see the following error:\nMultipleObjectsReturned: get() returned more than one UserSocialAuth -- it returned 2! Lookup parameters were {'provider': 'google'}\n. Thank you!\nOn Tue, May 3, 2011 at 5:57 PM, omab \nreply@reply.github.comwrote:\n\nYeah, you are right there, the code is not compatible, I'll make a fix for\nit ASAP.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/52#comment_1096671\n. \n",
    "olivergeorge": "I think adding a value_to_string method on your JSONField is the answer.\npython\nclass JSONField(models.TextField):\n    # ...\n    def value_to_string(self, obj):\n        value = self._get_val_from_obj(obj)\n        return self.get_prep_value(value)\n. ",
    "samuraisam": "I agree but without this snippet it's impossible to use south when you have south-managed models connected to your user profile.\n. ",
    "fahdoo": "How would I add this snippet if I don't have access to the social_auth files since I installed using pip on Heroku?\n. It worked, sort of. The South migration went well, but now I'm getting this error: \nError importing request processor module social_auth.context_processors: \"cannot import name BACKENDS\"\nAny idea whats causing this?\nAlso I used this line to get the latest code (I'm new at this so correct me if I'm wrong):\npip install -e git+https://github.com/omab/django-social-auth.git#egg=django-social-auth\n. Thansk for the quick response!\n. Yes, that fixed it\n. Looks like the docs already covers this - closing.\n. ",
    "camilonova": "Mat\u00edas, thanks a lot for your comments.\nThis works for me: http://stackoverflow.com/questions/3438814/facebook-iframe-app-strange-redirection-problems/3954281#3954281\nMy redirect is:\nhtml\n<a href=\"{% url begin \"facebook\" %}?next={{ request.path }}\" title=\"Login\" onclick=\"javascript:window.top.location.href='{% url begin \"facebook\" %}?next={{ request.path }}';\">Login</a>\nThis could be useful for anybody in the future.\n. Works great.\nThanks\n. Can you please what you sent in the email? i would like to see the example\n. There is any way to do the same with javascript modal? i have an app inside a canvas and the redirect is not working fine\n. Seems 5a1ecda solves this problem, but pypi version is still broken.\n. @omab no, i did install it but it don't work, installing it from github did the trick\n. Thats right, maybe was a problem with my virtualenv.\nThanks,\n. ",
    "jinarusha": "Camilo, thanks for sharing your solution. \nIt came in really handy when I tried to connect my app to Facebook inside canvas app using DSA. \nWhat a lifesaver!\n. ",
    "bremac": "cgi.parse_qs parses query strings. Foursquare responds with a JSON-formatted response, so it should be parsed with simplejson.\n. ",
    "yourcelf": "myopenid.com, but with a delegate to a different URL.  Perhaps it's the delegate in the chain that causes breakage?  Here's the delegating URL: http://c.tirl.org/\n. From the spec: http://openid.net/specs/openid-authentication-1_1.html#delegating_authentication\nDelegation is a means of specifying a URL which contains meta tags that point to another OpenID endpoint.  I suspected this might have something to do with it only because it means there would be another request stage for the consumer to go through; which might lead to a loss of the CSRF token.  But that's just a theory. :)\n. Reason given for failure:\nCSRF token missing or incorrect.\nLooking at the firebug net panel for the two cases shows this sequence of HTTP requests for the first pass (failure) and 2nd pass (success):\n1. Failure:\nPOST http://localhost:8000/login/openid/ (200)\n      csrfmiddlewaretoken  257e592b7d898d5667714888fc12fe90\n            openid_identifier  c.tirl.org\n   GET https://www.myopenid.com/trust?_=...f&token=... (200)\n   POST http://localhost:8000/complete/openid/?janrain_nonce=2011-05-18T01%3A58%3A12Zv2PoEA  (500)\n       ... lots of openid.xxx parameters, but no csrfmiddlewaretoken\n2. Success:\nPOST http://localhost:8000/login/openid/ (200)\n       csrfmiddlewaretoken 257e592b7d898d5667714888fc12fe90\n             openid_identifier c.tirl.org\n   GET http://www.myopenid.com/server?openid.assoc_handle=...&openid.ax.mode=fetch_request&openid.ax.required=email%2Cfullname%2Cold_email%2Cfirst_name%2Cold_nickname%2Clast_name%2Cold_fullname%2Cnickname&openid.ax.type.email=http%3A%2F%2Faxschema.org%2Fcontact%2Femail&openid.ax.type.first_name=http%3A%2F%2Faxschema.org%2FnamePerson%2Ffirst&openid.ax.type.fullname=http%3A%2F%2Faxschema.org%2FnamePerson&openid.ax.type.last_name=http%3A%2F%2Faxschema.org%2FnamePerson%2Flast&openid.ax.type.nickname=http%3A%2F%2Faxschema.org%2FnamePerson%2Ffriendly&openid.ax.type.old_email=http%3A%2F%2Fschema.openid.net%2Fcontact%2Femail&openid.ax.type.old_fullname=http%3A%2F%2Fschema.openid.net%2FnamePerson&openid.ax.type.old_nickname=http%3A%2F%2Fschema.openid.net%2FnamePerson%2Ffriendly&openid.identity=...%2F&openid.mode=checkid_setup&openid.return_to=http%3A%2F%2Flocalhost%3A8000%2Fcomplete%2Fopenid%2F%3Fjanrain_nonce%3D2011-05-18T02%253A03%253A37ZdglsCs%26openid1_claimed_id%3D...&openid.trust_root=http%3A%2F%2Flocalhost%3A8000%2F  (302 Found)\n   GET https://www.myopenid.com/server?openid.assoc_handle=...&openid.ax.mode=fetch_request&openid.ax.required=email%2Cfullname%2Cold_email%2Cfirst_name%2Cold_nickname%2Clast_name%2Cold_fullname%2Cnickname&openid.ax.type.email=http%3A%2F%2Faxschema.org%2Fcontact%2Femail&openid.ax.type.first_name=http%3A%2F%2Faxschema.org%2FnamePerson%2Ffirst&openid.ax.type.fullname=http%3A%2F%2Faxschema.org%2FnamePerson&openid.ax.type.last_name=http%3A%2F%2Faxschema.org%2FnamePerson%2Flast&openid.ax.type.nickname=http%3A%2F%2Faxschema.org%2FnamePerson%2Ffriendly&openid.ax.type.old_email=http%3A%2F%2Fschema.openid.net%2Fcontact%2Femail&openid.ax.type.old_fullname=http%3A%2F%2Fschema.openid.net%2FnamePerson&openid.ax.type.old_nickname=http%3A%2F%2Fschema.openid.net%2FnamePerson%2Ffriendly&openid.identity=...&openid.mode=checkid_setup&openid.return_to=http%3A%2F%2Flocalhost%3A8000%2Fcomplete%2Fopenid%2F%3Fjanrain_nonce%3D2011-05-18T02%253A03%253A37ZdglsCs%26openid1_claimed_id%3D...&openid.trust_root=http%3A%2F%2Flocalhost%3A8000%2F&no_ssl=true   (302 found)\n   GET http://localhost:8000/complete/openid/?janrain_nonce=2011-05-18T02%3A03%3A37ZdglsCs&openid1_claimed_id=...%2F&openid.assoc_handle=...&openid.identity=...&openid.mode=id_res&openid.op_endpoint=http%3A%2F%2Fwww.myopenid.com%2Fserver&openid.response_nonce=2011-05-18T02%3A03%3A38ZF8tKfK&openid.return_to=http%3A%2F%2Flocalhost%3A8000%2Fcomplete%2Fopenid%2F%3Fjanrain_nonce%3D2011-05-18T02%253A03%253A37ZdglsCs%26openid1_claimed_id%3Dhttp%253A%252F%252F...%252F&openid.sig=aVjRbeoryHJCVjiX%2BznJLJc4gpo%3D&openid.signed=assoc_handle%2Cidentity%2Cmode%2Cop_endpoint%2Cresponse_nonce%2Creturn_to%2Csigned   (302 Found)\n   GET http://localhost:8000/accounts/profile/  (authenticated successfully)\n(I snipped some bits from the URL param strings, with ...'s)\n. ",
    "Jolmberg": "I'm having the same issue. Also using myopenid.com, but no delegation. Authenticating with google (by putting https://www.google.com/accounts/o8/id in the openid-box) works every time but myopenid always requires two attempts.\n. Yeah, works great now! Interestingly (but perhaps not unexpectedly), I now get a POST request to /complete/openid/ every time. I still think it's somewhat creepy that I get a POST and you get a GET but I guess there's no point in dwelling on it now that it works either way. Thanks for the speedy fix, and for making this overall awesome library!\n. Sorry, I should have been more specific. From the social_auth.backends module (init.py):\nif not BACKENDS or force_load:\n    for auth_backend in setting('AUTHENTICATION_BACKENDS'):\n        module = import_module(auth_backend.rsplit(\".\", 1)[0])\n        backends = getattr(module, \"BACKENDS\", {})\n        for name, backend in backends.items():\n            if backend.enabled():\n                BACKENDS[name] = backend\nThis loop will look for dictionaries called BACKENDS in every module mentioned in AUTHENTICATION_BACKENDS and copy their keys and values to a dictionary also called BACKENDS. If 'social_auth.backends.OpenIDBackend' is in AUTHENTICATION_BACKENDS the loop will eventually reach the module social_auth.backends (ie itself!) and start copying backends from its own BACKENDS dictionary to itself. This just seems silly and can easily be avoided by renaming the BACKENDS dictionary in init.py.\nYou're absolutely right that you can solve the main problem (the missing 'openid' backend) simply by adding OpenIdAuth to BACKENDS at the end of the get_backends function. That's how it was done in 0.6.1. But then you're treating 'openid' as a special case. Not that that's really a problem, I just figured I would do it the more general way since it's so easy to do after fixing the issue with the loop above.\n. You're the man, omab! It works great now.\nI did happen to notice one little remaining oddity. I can now break and resume the pipeline at any point except one. If I put the break right between create_user and associate_user I get a ValueError exception (Cannot assign None: \"UserSocialAuth.user\" does not allow null values.) when I resume the pipeline.\nDefinitely not a problem for me since I (and probably most people) want to break the pipeline before create_user. Just thought I'd mention it since I happened to notice it.\n. Sure, it's definitely more readable.\nI'm kind of new to this git stuff. If you merge this, I guess you'll get my reverted commit into the master branch which seems unnecessary. Is there any way for me to fix this or should I just make a new branch and a new pull request?\n. ",
    "wingchen": "Thanks so much.\n. ",
    "TimDumol": "Sorry about that. I must have been too sleepy to notice the code right above it. That was rather stupid of me. Thanks!\n. ",
    "kinpoo": "my mistake for the print line.\nfor the first commit:  If visitor have been logged in, and use another social account, it will create another user.  In other words is that if user has been logged in, it should not visit /login/ and /login/complete/ page again. If need add another social account to exists user, he must visit /associate/ and /associate/complete/ page. If need create real new user, he must be logout first!\nfor the second commit: It is not a good implement, drop it at this moment.\n. ",
    "lvanderree": "Get real! That's fast!\nI had just forked django-social-auth and was trying to implement it myself, but I noticed it takes quite some adjustments to get the request in the backend.update_user_details method to provide it to the signal, and this probably isn't the place anyway.\nYour solution within the view looks perfect! The only consequence is that everyone now gets this info in his session, but I don't think anyone could be bothered with this.\nSo thanks!\n. ",
    "netinsideout": "I found problem near this lines:\npython\n    def unauthorized_token(self):\n        \"\"\"Return request for unauthorized token (first stage)\"\"\"\n        request = self.oauth_request(token=None, url=self.REQUEST_TOKEN_URL)\n        response = self.fetch_response(request)\n        return Token.from_string(response)\nresponse was 'parameter_absent\\noauth_parameters_absent:scope\\n\\n' and after that i got ValueError in Token.from_string\nOrkut needs extra parameter named: scope in request.I fixed it by overriding method oauth_request, like in google.py\nAlso i found little problem on second stage. Orkut does not return email param in response.\n. ",
    "georgedorn": "Don't assume anything about the user model other than the expected API methods?\nIn retrospect, django's get_model() won't work with mongoengine at all, since it assumes that you're referring to a model in an INSTALLED_APPS app.\nOne way to deal with this may be to follow along with mongoengine's authentication backend helpers and retrieve the model that way.  I'll look into it, possibly submit a patch.\n. ",
    "ankitranka1": "I faced the same error. Make sure you exactly use FACEBOOK_APP_ID and FACEBOOK_API_SECRET  in the settings. In my case I was using some different global name and that caused the \"Incorrect authentication service\" error.\n. ",
    "urielb": "well, running the example with my keys didn't solved. still getting the same error. \"Incorrect authentiction service\"\nis there any possiblity that another package installed at my env is conflicting with django-social-auth?\nthanks\n. ",
    "g00fy-": "This behaviour was caused by User.is_active=False.\nSorry - my bad.\n. duplicated issue.\n. ",
    "dguaraglia": "Completely agree. Sure, it's not a deal breaker but it makes it easier to organize things.\n. ",
    "inactivist": ":+1: \nI may take a stab at this.\n. @omab: I'd love to, but I'm not seeing one.  Even when I use the --traceback option.\n```\n$ ./manage.py  runserver --traceback 127.0.0.1:9999\nValidating models...\n0 errors found\nDjango version 1.3.1, using settings 'example.settings'\nDevelopment server is running at http://127.0.0.1:9999/\nQuit the server with CONTROL-C.\n[31/May/2012 20:24:16] \"GET / HTTP/1.1\" 404 2229\n[31/May/2012 20:24:18] \"GET / HTTP/1.1\" 404 2229\n[31/May/2012 20:24:18] \"GET / HTTP/1.1\" 404 2229\n```\nNothing in the console or on the web page.\nHow do I get a stack trace on a 404?  (Sorry, I'm semi-Django literate)\n. By the way, I'm not at all convinced that it isn't something wonky about my setup.  Other Django projects are running as expected, though.  \nAll I needed to hear was that it works for you.  I'll investigate and report back but at this point I expect this is my goof.  \nThanks!\n. I did notice that there's no ROOT_URLCONF in the base settings.py, or anywhere else for that matter.  Edit: Never mind, ROOT_URLCONF was there, I just missed it.\nEdit: As far as I can tell, the urls.py file is never imported...  curiouser and curiouser...\nInvestigating...\n. Ok, looks like a path issue.  Renaming the project to something other than example (say, dummy) and setting ROOT_URLCONF='dummy.urls' makes it work. \nI suppose that's what I get for not using a clean Virtualenv this time...  turns out one of the other packages I'd installed earlier in my virtualenv, django-ajax-selects, had an example project named... oddly enough, example :D\n. ",
    "phuihock": "+1\nOne of the problem I am having now is that I can't ask user for his desired username. The default suggested username with long random numbers is likely not what user wants. Even if I assigned a callable to DEFAULT_USERNAME, it can't make use of the username user POSTed.\n. ",
    "cassus": "I added a create_user signal in Cassus/django-social-auth@c696f57d8dbbbdf65dd3417c786ffcbd8e96ff8b\n. Pull request: https://github.com/omab/django-social-auth/pull/109\n. New pull request: https://github.com/omab/django-social-auth/pull/125\n. I like this idea. Any ETA on it?\n. Any progress?\n. Looking at the code one thing is not clear to me. How can I interrupt and resume the pipeline? Eg. if I need the ability to ask the user for a username, or some confirmation. For this I need to stop the pipeline, return a HTTPResponse, and resume the pipeline when I get the next request with the information I need.\nCurrently I'm saving the auth data to a session, return HTTPResponse and call authenticate again with the data from the session when I get the confirmation.\n. Great news! I can't wait to see it! :)\n. Ping?\n. If we use it with a random salt I don't see what we gain. (Still need to store the salt in session) and the SECRET_KEY only complicates the process while it adds nothing to security (given random is good enough)\nIf we use it without salt and hash something we know about the user it's probably less secure.\n. Please wait with this merge! We deployed this to production and about 10% of the users fail this test. They don't have the state in their session. I'll look into it.\n. I did not find any good solution. It seems to be a known issue with the PHP facebook lib as well: https://github.com/facebook/php-sdk/issues/391\n. Hi omab!\nCan you please give me some update if this can be merged?\n. I think this won't be pulled as omab stated: I think that a signaling system for such actions is not correct, instead I'm implementing a pipeline of actions with option to define custom actions and override the default pipeline.\nhttps://github.com/omab/django-social-auth/issues/90#issuecomment-2149303\n. ",
    "Cruel": "I'm in the same boat as phuihock, I can see no clean way to let the user select a username when creating an account. I like the create_user signal, it's what I'll use atm.\n. ",
    "jstlaurent": "+1 from me as well. \nI had the same kind of problem. I solved it by using my own view to replace complete, set the new user's is_active property to false and redirect them to a form where they can complete their registration and pick a username. It works well, but having more control over the flow would be great.\nIn any case, keep up the good work, the package is very useful.\n. This might be outdated, but just in case anyone else is wondering about another way to do this without patching django-social-auth, here's my take on it:\nThe authentication process sends a request to the authorization provider along with a URL the provider should redirect to when the authentication is complete. By default, that URL is complete/(?P<backend>[^/]+)/ (found in django-social-auth's urls.py). However, looking at the code for the authentication process (in views.auth, which calls views.auth_process), you'll see that the view looks for a REDIRECT_FIELD_NAME (a constant for next, from django.contrib.auth) in the request parameters. That allows you to specify a different URL to redirect to once the authentication is done.\nIn your case, I would create two views to be redirected to and add URL mappings for them in your configuration. One for regular users and one for your expert users. In each registration form, I'd have the next parameter point to new view's URL. This way, when the redirect comes in, you know which type of user has just authenticated with the third party.\nAs for the content of the views, a quick look in views.complete shows that it calls views.complete_process directly. You can do the same and once it returns, trigger the appropriate signal.\nAs a shortcut, you could also use a single view and map it to two URLs, each providing a kwarg to indicate what kind of user is registering.\n. Good to know I wasn't too far off base and that you found a better approach. :-)\n. ",
    "saidimu": "Addressing this issue requires a clean API, something that appears to be non-trivial in the current code-base given the tight logic integration in the Django views.\nIdeally, one should be able to go thro' the entire auth pipeline without requiring a Django view.\n. Ya, they are different users.\nThe superuser was created prior to installing social-auth; additional users were created by social-auth after authenticating with Twitter, LinkedIn etc. After these additional users are created the superuser cannot log-in to admin anymore.\nBut, changing the is_staff and is_superuser attributes of the social-auth created users allows me to log-in as admin, although the original django-created superuser still cannot log-in as admin. \n. Nope. Completely logged-out as social-auth user.\n On Oct 7, 2011 11:49 PM, \"Mat\u00edas Aguirre\" \nreply@reply.github.com\nwrote:\n\nAnd are you logged in as any social-auth user when trying to loggin with\nthe admin one?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/154#issuecomment-2330371\n. I replicated the issue on two separate Django 1.3 installs.\n\nThere are no tracebacks, just the normal \"Please enter a correct username\nand password\" message on the admin login prompt.\nI'm going to try running the example app and see if I can replicate the\nissue again.\nOn Sat, Oct 8, 2011 at 12:03 AM, Mat\u00edas Aguirre \nreply@reply.github.comwrote:\n\nI don't see a reason for that to not work, just tested it locally and works\nOK (Django 1.2.6 and 1.3), any error message? Traceback? Are the flags for\nmentioned user correct?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/154#issuecomment-2330401\n. Bingo! That was the problem.\n\nIt isn't clear from the docs that social-auth replaces the default Django auth, as opposed to augmenting it.\nThanks for the help.\n. ",
    "nemith": "I agree with Cassus on this one.   It sees like the pipleline is only good for backend processes and although it will be nice to extend/overwrite some of these built in processes I would like my users to choose a username post authentication and pre user creation.\nSo there needs to be some interaction with a view at some point to pull this off. \n. @kaminem64 Modifying the base code shouldn't be required.\n. ",
    "Gromph": "I was using django-social-auth 0.4.2 and had SOCIAL_AUTH_CREATE_USERS=False. I updated to 0.6.0 and started getting errors like \"ValueError: Cannot assign None: \"UserSocialAuth.user\" does not allow null values.\" triggered by backends/pipeline/social.py:associate_user\nIt looks like the code is respecting the SOCIAL_AUTH_CREATE_USERS flag and not creating the user, but then going on to try to setup a new UserSocialAuth object with a null user.\nSo I found this bug and looked over the code, and a note about overriding the PIPELINE. So here is what I added to my settings.py:\nSOCIAL_AUTH_PIPELINE = (\n                'social_auth.backends.pipeline.social.social_auth_user',\n           )\nThe only thing I want social-auth to do is authenticate the user. If the user doesn't exist yet I handle adding the entry to UserSocialAuth later. \nSo my question is, is this the right thing to do? It seems to work ok.   And I wanted to put out the suggestion that it seems like it would be much simpler to continue to respect the SOCIAL_AUTH_CREATE_USERS flag and make it work as it did before.  And too document how and why to override SOCIAL_AUTH_PIPELINE\nthanks\n. ",
    "ygamretuta": "hey, I don't know if this is the right place to post this but I wanted to customize the create_user action so that I can manually create a user given the extra details(access tokens, user ids, etc.) I obtain from authorizing another app. (my setup is an iPhone app is authorized, extra details are sent via Tastypie and creating the user via django-social-auth). As I browsed through the discussion, is it right to assume that I can't do what I want until this issue is resolved?\n. ",
    "saffarizadeh": "I think the whole procedure \"to authenticate user in backends's init.py and running a pipeline in it\" is not reasonable.\nSocialAuthBackend.authenticate should be replaced with another method which only runs get_user_details and returns kwargs, then developer can decide whether to use PIPIELINE or not in his/her own \"view\" (the django way).\nThe whole project is not in its pythonic way, exploring it's mechanism and mechanics is a time consuming project. I'll try my best to re-implement the procedure and send a pull request.\n. @danxshap since the answer was too long I wrote it here:\nhttp://solutioner.net/solutions/view/30/\n. ",
    "kensaggy": "Any word on updating the docs regarding the pipeline? Can someone please give an example of extending the create_user to create a UserProfile model for example... or obtain data from a backend after auth? or anything..\nThanks\n. What GAE SDK are you using?\n. I'll just throw this here incase anyone is looking for it,\nThe issue could be rising from this:\nhttp://code.google.com/p/googleappengine/issues/detail?id=6567&can=5&colspec=ID%20Type%20Component%20Status%20Stars%20Summary%20Language%20Priority%20Owner%20Log\n. ",
    "danxshap": "Has the functionality to use a partial pipeline process been implemented?  I'm trying to do the same thing as bennetb01 - let my users authenticate with the social provider and then enter data in a form before user creation.  If someone could recommend a good way of doing this that would be awesome.\n. ",
    "hassek": "The idea is to set in settings this tuple:\nSOCIAL_AUTH_PIPELINE = (\n    'social_auth.backends.pipeline.social.social_auth_user',\n    'social_auth.backends.pipeline.associate.associate_by_email',   \n    'social_auth.backends.pipeline.user.get_username',  \n    'MYAPP.views.MY_NEW_CREATE_USER',\n    'social_auth.backends.pipeline.social.associate_user',\n    'social_auth.backends.pipeline.social.load_extra_data',\n    'social_auth.backends.pipeline.user.update_user_details',   \n)\nwhere MYAPP.views.MY_NEW_CREATE_USER will be a function with a different behavior returning the same data the original create_user function does.\nThis way you can modify any behaviour on the pipeline (even create your own pipeline if you desire, now that would be odd heh)\n. +1 to mkai\n. awesome, thanks.\n. ",
    "mkai": "I think the pipeline system is a huge improvement. I've already used it to override three of the methods to suit my app. However, in those cases I found myself copying/ pasting the whole method (not good) from django-social-auth because it's impossible to keep some default/ package behavior intact and customize only the pieces that I need.\nSo basically I'm not sure if a tuple of methods is a good design pattern when we have \"the object\" as a standard for that. Have you thought about implementing the pipeline in an object-oriented way?\n``` python\nclass SocialAuthPipeline(object):\n    def social_auth_user(...):\n        ...\ndef get_username(...):\n    ...\n\n```\nCustomizing would be easier then:\npython\nclass CustomSocialAuthPipeline(SocialAuthPipeline):\n    def get_username(...):\n        username = super(CustomSocialAuthPipeline, self).get_username(...)\n        return slugify(username)\nWhat do you think?\n. omab, could you give a quick clarification or a rough example implementation on how to do this?\nI have tried to overwrite create_user to redirect to the confirmation page if user is None. Two questions:\n1) how do I pass user info to the redirected view? create_user doesn't have access to a Request object (it did once, but the change seems to have been reverted in newest tree), so nothing can be saved to the session. Passing info through GET params (/register/confirm/?username=xy) would work, but is ugly.\n2) more importantly: if the user has filled out the form in the confirmation view and it is valid, where would I pass that data? Can I pass it to `associate_user\u00b4 in some way and then \"resume\" the pipeline?\nI saw the solution which overwrites the complete view, but I'd rather try implementing it with the pipeline system first.\nThanks!\n. Hi omab, could you merge this, please? I need the fix, too.\n. ",
    "gerardo": "Great implementation! now it needs to be documented, there's nothing about it on the documentation.\n. I was thinking in a setting variable instead of that kind of overriding. Someone could use DSA just for account asociation and then forget that there's a login backend available, where someone without the required (local) credentials could just log in using twitter or facebook.\nThat in combination with SOCIAL_AUTH_CREATE_USERS = True seems quite dangerous to me.\n. Yes, you're right. Then maybe that technique could be documented. \nTastypie has a section for some out-of-the-box use cases, maybe this is one of such cases for DSA.\n. ",
    "Morpho": "Partial pipeline is a BIG improvement! I already implemented it on a site. It seems very stable and easy to manage! Thumbs up!\n. ",
    "planetcrypton": "Could you explain this for me: \"Force username field limit when generating username\".\nHow / where do I do that?\n. ",
    "sebfie": "Yes, I did a bad manipulation on my setting.py and it didn't find FACEBOOK_APP_ID \n. ",
    "miracle2k": "The proper way to do this is: #86.\n. I'd be ok with that. I don't have any strong feelings either way, I suppose.\n. ",
    "douglas": "Nope, i  did not changed anything, only added my twitter keys. Nothing more.\nI will create a clean virtualenv to test.\n. My bad.\nSeems it worked in a clean virtualenv with Django 1.3.\n. Hello @micrypt,\nThanks a lot for the explanation.\nI just have one more doubt, i managed to get the info using the python-twitter lib, is there a way to get the same info using only the oauth2 lib ? Im asking so i can remove the dependency on python-twitter.\nAgain, thank you and @omab for the great work in django-social-auth.\n. Thanks a milliion, @omab and @micrypt =)\nI will keep python-twitter for now, as it is working great here.\nYou guys rock !\n. ",
    "jvc26": "Please disregard the above, realised that I hadn't removed the .example from the file, apologies, a tired evening!\nJ\n. It appears that you can get a blank username - no exception is given, and the username remains unset within the auth_user table:\n2|||||!|0|1|0|2011-07-15 20:16:18.596048|2011-07-15 20:16:18.574616\nPretty concerning eh?\nJ\n. Ok, so with the fixed version checked out latest from git, oauth responses lead to a default username being set. This is clearly suboptimal, as really I'd either like them to be auto set, or if one isn't demand that the user provide one - does django-social-auth give me a method to do the above?\nJ\n. Bingo - that explains it - sorry about the confusion, I had assumed since I got an Oauth message back, that the /login/google was the correct one to use. Thanks for the clarification, with that corrected it works, so I have closed the issue.\n. ",
    "agrif": "Ah! I had tried that, but it looked like it failed. Knowing that it was the right thing to do let me to figure out what was actually wrong: I didn't have a BACKENDS dictionary in github.py.\nThanks for the help!\nOnce I get this done, I could file a pull request for the GitHub contrib backend if you could use it.\n. ",
    "rawbeans": "http://dpaste.com/572580/\n. ",
    "antisvin": "I've stumbled upon the same issue.\nIt looks like that the problem is caused by not using \"authenticate\" function before \"login\" from django.contrib.auth. The former sets \"backend\" attribute to user object that is used by \"d.c.a.login\". This patch seems to fix it:\n```\ndiff --git a/social_auth/views.py b/social_auth/views.py\nindex 8f88d9d..1dbae4b 100644\n--- a/social_auth/views.py\n+++ b/social_auth/views.py\n@@ -139,6 +139,9 @@ def auth_complete(request, backend):\n try:\n     user = backend.auth_complete(user=user)\n\n\nuser.backend = \"%s.%s\" % (\nbackend.AUTH_BACKEND.module,\nbackend.AUTH_BACKEND.name)\n     except ValueError, e:  # some Authentication error ocurred\n         error_key = getattr(settings, 'SOCIAL_AUTH_ERROR_KEY', None)\n         if error_key:  # store error in session\n```\n\nThis could go to sa.v.complete instead before \"login\" is called, etc.\n. After some more debugging, I can see that I had misconfigured app. This led to ValueError during processing of sreg/ax data, but it got excepted. So d.c.a.authenticate wasn't called because the error was raised before it, but there still was an authenticated user that the app tries to login later.\n. The patch helped to suppress error message, but it wasn't necessary in first place - I had invalid values for sreg/ax for openID backends, you should make sure that it's not the case for you. You could also try debugging it to find out what was causing the error that prevented user authentication. In my case it happened only if user was authenticated before creating new association, otherwise authentication just didn't work without showing errors.\n. ",
    "sidmitra": "\nI can see that I had misconfigured app. \n\nSo is the patch still valid? or did you correct the misconfiguration. I'm getting the same issue on a production app of mine.\n. I'm using the Oauth backend, but since it's happening on production. I haven't been able to replicate it locally yet. So i'll try the patch.\n. My patch is tightly coupled with my project(mainly a module called registration). So wanted to know if someone had an agnostic way of implementing it or if it was possible with the current signal handlers.\n. Yup that's a pretty good approach. I changed my final implementation to something similar. Although i do think use cases like mine are more of an implementation issue, and the corresponding logic doesn't belong in the social_auth module in any case.\nClosing this ticket.\n. For now i've fixed it by using get_or_create instead of create\nhttps://github.com/Teaspiller/django-social-auth/commit/2ee5f5db7bf668cb17f1f76b4644046b06bbc53a\nHere's the patch below, in case i delete the above repo later.\ndiff\nsocial_auth/backends/__init__.py \nView file @ 2ee5f5d...  ... @@ -206,8 +206,8 @@ class SocialAuthBackend(ModelBackend):\n206 206  \n207 207      def associate_auth(self, user, uid, response, details):\n208 208          \"\"\"Associate a Social Auth with an user account.\"\"\"\n209     -        return UserSocialAuth.objects.create(user=user, uid=uid,\n210     -                                             provider=self.name)\n    209 +        return UserSocialAuth.objects.get_or_create(user=user, uid=uid,\n    210 +                                             provider=self.name)[0]\n211 211  \n212 212      def extra_data(self, user, uid, response, details):\n213 213          \"\"\"Return default blank user extra data\"\"\"\n. I haven't been able to replicate this issue on local, might be related to caching or thread safety?\n. I guess the earlier check didn't fix it:\n``` python\nTraceback (most recent call last):\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/core/handlers/base.py\", line 111, in get_response\n    response = callback(request, callback_args, *callback_kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/views/decorators/csrf.py\", line 39, in wrapped_view\n    resp = view_func(args, *kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/views/decorators/csrf.py\", line 52, in wrapped_view\n    return view_func(args, *kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/db/transaction.py\", line 217, in inner\n    res = func(args, *kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/views.py\", line 58, in wrapper\n    return func(request, backend, args, *kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/views.py\", line 75, in complete\n    return complete_process(request, backend)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/views.py\", line 130, in complete_process\n    user = auth_complete(request, backend)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/views.py\", line 165, in auth_complete\n    user = backend.auth_complete(user=user)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/backends/facebook.py\", line 83, in auth_complete\n    return authenticate(args, *kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/contrib/auth/init.py\", line 55, in authenticate\n    user = backend.authenticate(**credentials)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/backends/init.py\", line 132, in authenticate\n    social_user = self.associate_auth(user, uid, response, details)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/backends/init.py\", line 210, in associate_auth\n    provider=self.name)[0]\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/db/models/manager.py\", line 135, in get_or_create\n    return self.get_query_set().get_or_create(**kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/db/models/query.py\", line 393, in get_or_create\n    raise e\nIntegrityError: (1062, \"Duplicate entry 'facebook-100000175894114' for key 'provider'\")\n```\n. Thanks @omab, will incorporate it today and see how it goes.\nIt might be the user clicking the manual redirect link(eg on twitter with the loading gif) while the auto redirect was taking place. It takes a few seconds for the redirect while i save his avatar to S3 and save/create other tables/entries. I did see some erratic behaviour when i tried to break it that way, but not this exact same error.\n. Doesn't look like the patch fixed it. I still get the above errors. One way is to keep clicking LogIn/Allow on the facebook credentials page for eg. I'm looking at other ways of trying to avoid race conditions, like select_for_update etc. or exponential backoff. Will keep you posted if those help.\nI also get this now:\n``` python\nTraceback (most recent call last):\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/core/handlers/base.py\", line 111, in get_response\n    response = callback(request, callback_args, *callback_kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/views/decorators/csrf.py\", line 39, in wrapped_view\n    resp = view_func(args, *kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/views/decorators/csrf.py\", line 52, in wrapped_view\n    return view_func(args, *kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/db/transaction.py\", line 217, in inner\n    res = func(args, *kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/views.py\", line 58, in wrapper\n    return func(request, backend, args, *kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/views.py\", line 75, in complete\n    return complete_process(request, backend)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/views.py\", line 130, in complete_process\n    user = auth_complete(request, backend)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/views.py\", line 165, in auth_complete\n    user = backend.auth_complete(user=user)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/backends/facebook.py\", line 85, in auth_complete\n    return authenticate(args, *kwargs)\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/contrib/auth/init.py\", line 55, in authenticate\n    user = backend.authenticate(**credentials)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/backends/init.py\", line 139, in authenticate\n    social_user = self.get_social_auth_user(uid)\nFile \"/home/ubuntu/.virtualenvs/app/src/social-auth/social_auth/backends/init.py\", line 265, in get_social_auth_user\n    .get(provider=self.name, uid=uid)\nFile \"/home/ubuntu/.virtualenvs/app/lib/python2.6/site-packages/django/db/models/query.py\", line 349, in get\n    % self.model._meta.object_name)\nDoesNotExist: UserSocialAuth matching query does not exist.\n```\n. Sure will checkout the new branch. Also note, i'm already using the transaction middleware.\nEDIT: sorry meant the new updates to the bug_131 branch\n. I have pushed it to production today, things seem to be running smoothly so far. Let me have it run on live for a day or two see if the issue persists. I haven't had any issues during testing, after i incorporated the last commit.\n. I think we can close this issue for now. I haven't seen any issues after the last push. I think we can safely incorporate the transaction changes to master?\n. ",
    "kimsterv": "Got it. Thanks!!\n. Hi Omab,\nYes, I am using an access_token. It's failing on this line:\nhttps://github.com/omab/django-social-auth/blob/master/social_auth/views.py#L113\nI'm not exactly sure how urllib2 works, but is there a way to set the backend manually or something?\n-Kim\n. The code looks like this:\ndef facebook_extra_values(sender, user, response, details, **kwargs):\n    #....\n    q = urllib2.quote('SELECT uid, username, name, email,current_location FROM user WHERE uid = me\n        () OR uid IN (SELECT uid2 FROM friend WHERE uid1 = me())')\n    query = 'https://api.facebook.com/method/fql.query?query=' + q + '&access_token=' + response['access_token']\n    results = json.load(urllib2.urlopen(query))\nI'm not sure how to set the backend for the URL?\n-Kim\n. Hey Matias,\nI'm retarded. I forgot \"&format=JSON\" in the query, so XML was being returned and breaking it. I'll blame last night's tequila :)\nThanks for helping me debug!\n-Kim\n. ",
    "jpuderer": "Good patch.  This scratches my itch.  Please do pull.\n. Can you propose an alternative?\nI needed a way to conditionally allow new user creation if the user has an invitation (for a closed beta).  This signal is working great for that purpose, and I didn't see another way to do it.\n. ",
    "BogdanMm": "I got the login process working\nbut the tests still fail, even on production...\nFeel free to leave this issue open or close it\n. ",
    "derks": "I see now that I can get this via the following:\n\nfrom social_auth.backends import BACKENDS\n\nWhich are supposed to be the enabled backends, however I have only set the settings for Twitter and Facebook in my settings.py, and still all the other backends are in this list.\n. The reason I had to add context processors is that we are using Userena, meaning we don't have control over the data passed to the template in a traditional sense... so this lets us access to social auth stuff easily.\n. ",
    "ryr": "encountered the same problem. i used a quick fix in views.py:\n```\ndef grouped_backends():\n    \"\"\"Group backends by type\"\"\"\n    backends = {'oauth': [],\n                'oauth2': [],\n                'openid': []}\nfor name, backend in BACKENDS.iteritems():\n    #quick fix\n    if \"%s.%s\" % (backend.AUTH_BACKEND.__module__,\n                  backend.AUTH_BACKEND.__name__) in settings.AUTHENTICATION_BACKENDS:\n        if issubclass(backend, BaseOAuth2):\n            key = 'oauth2'\n        elif issubclass(backend, BaseOAuth):\n            key = 'oauth'\n        elif issubclass(backend, OpenIdAuth):\n            key = 'openid'\n        else:\n            print name, backend\n        backends[key].append((name, backend))\nreturn backends\n\n```\n. ",
    "ghickman": "@andriusa this error is probably masking the real error unfortunately. The 'error' part of /login/error/ is being picked up by the _auth rule\nurl(r'^login/(?P<backend>[^/]+)/$', auth, name='socialauth_begin'),\nand so it tries to find a backend called error. I got around this by adding this line to my global urls.py\nurl(r'^login-error/', 'views.login_error', name='login_error'),\nthen adding a basic view to my global views.py. Admittedly this only meant I got past that error before I could move onto peppering the code with prints.\nHope this helps in some way.\n. @omab you're redirecting to it in views.py in both complete_process and associate_complete if the user isn't set and auth_complete doesn't return nicely respectively. Thus you're redirected to `/login/error/ if you haven't changed the value.\nThis was masking my main problem to do with not creating users but wanting to associate them with a Google Account, which I've fixed using the pull request from Cassus: https://github.com/omab/django-social-auth/pull/109\n. @omab ah decorators, well played sir!\nYes that's fair enough, I hadn't looked into the signals very closely. I needed to allow current users link their accounts to their Google Apps Account while not creating new users (it's an internal app so we want control of that) and the pull request did cover that. Unless I'm missing something that already exists?\n. ",
    "franckbret": "I seems that the error still occurs on 0.5.6 and trunk : \n```\nIn [4]: from django.core.urlresolvers import reverse\nIn [5]: reverse('socialauth_begin',args=['facebook'])\nNoReverseMatch                            Traceback (most recent call last)\n/home/brett/Documents/code/mx-communes/projects/mx/ in ()\n/home/brett/.virtualenvs/django1.3-001/lib/python2.7/site-packages/django/core/urlresolvers.pyc in reverse(viewname, urlconf, args, kwargs, prefix, current_app)\n    389 \n    390     return iri_to_uri(u'%s%s' % (prefix, resolver.reverse(view,\n--> 391             args, *kwargs)))\n    392 \n    393 def clear_url_caches():\n/home/brett/.virtualenvs/django1.3-001/lib/python2.7/site-packages/django/core/urlresolvers.pyc in reverse(self, lookup_view, args, *kwargs)\n    335             lookup_view_s = lookup_view\n    336         raise NoReverseMatch(\"Reverse for '%s' with arguments '%s' and keyword \"\n--> 337                 \"arguments '%s' not found.\" % (lookup_view_s, args, kwargs))\n    338 \n    339 def resolve(path, urlconf=None):\nNoReverseMatch: Reverse for 'socialauth_begin' with arguments '('facebook',)' and keyword arguments '{}' not found.\n```\n. Yeah silly me, It was not in main urls.py, loaded from another module with i18nurls, so after some tweaking it works fine now :-) Thanks \n. I would really like a signal to handle custom user creation. It's the best way to integrate social-auth and customize with tier app. Hope this can be merged soon.\n. @omab Thanks for that, and the missing comma ;-) Btw note that the trailing comma is missing from example settings\n```\nSOCIAL_AUTH_ENABLED_BACKENDS = ('google', 'google-oauth', 'facebook')\n```\n@ritehs85 Can't reproduce, you should open your admin session within another browser just to be sure\n. @omab doh, never noticed this ugly but effective subtlety, thks\n. ",
    "murilobsd": "Hello, I'm using version 1.5 of Django, in my template put the following url: href=\"{% url 'socialauth_begin' \"facebook\" %}\"> Facebook\nin urls.py: url (r '^ social / $', include ('social_auth.urls')),\ninstalled apps 'social_auth',\nis generating the following error:\nNoReverseMatch: Reverse for 'socialauth_begin' with arguments' (u'facebook ',)' and keyword arguments' {} 'not found.\nthe shell:\nDeprecationWarning: django.conf.urls.defaults is deprecated, instead use django.conf.urls\n\u00a0\u00a0 DeprecationWarning)\nTraceback (most recent call last):\n\u00a0\u00a0 File \"\", line 1, in \n\u00a0\u00a0 File line 496, in reverse\n\u00a0\u00a0\u00a0\u00a0 return iri_to_uri (resolver._reverse_with_prefix (view, prefix, * args, ** kwargs))\n\u00a0\u00a0 File line 416, in _reverse_with_prefix\n\u00a0\u00a0\u00a0\u00a0 \"arguments '% s' not found.\" % (Lookup_view_s, args, kwargs))\nNoReverseMatch: Reverse for 'socialauth_begin' with arguments '(' facebook ',)' and keyword arguments '{}' not found.\nsocial-auth Version: 0.7.23\n. ooowwwwwww, omab I'm sorry for your loss of time!, thanks!\n. ",
    "tleewu": "@omab I'm also running into the same kind of error.\nUnder my urls.py:   url('', include('social_auth.urls', namespace='social')),\nIn my index.html: {% url 'socialauth_begin' 'facebook' %}\"?next={{ request.path }}>\nInstalled Apps:     'social_auth',\nAnd I'm still getting the NoReverseMatch error. Any ideas?\n. @omab, you are the greatest!\n. ",
    "Python4569": "This error continues.... ",
    "mzupan": "sorry stupid me.. completely overlooked\nSOCIAL_AUTH_CHANGE_SIGNAL_ONLY = True\n. ",
    "MechanisM": "first time I'm tried to find client key. and found it in bottom of google's api console\nit's says:\nSimple API Access\nAn API key cannot be used to access protected user data. Learn more\nAPI key: blahblah\nand while I didn't found any \"KEY\" options I choosed this one. and there was error. Until I realized that GOOGLE_OAUTH2_CLIENT_KEY it's Client ID\n. would like if it's will be added.\n. Glad you did it coz I'm still working on project and don't have time to do it and contribute.\n. ",
    "dokterbob": "bump\nBy the end of this month, the old OAuth API should be disabled. See the roadmap.\n. ",
    "aapris": "The end of this month is close. Is there any news about this issue?\n. Thank you. I upgraded from 0.3.something and it seems to work after I made these changes:\n1. settings.py: added 'social_auth.context_processors.social_auth_by_type_backends' into TEMPLATE_CONTEXT_PROCESSORS.\n2. local_settings.py, changed value 'complete' to 'socialauth_complete' in SOCIAL_AUTH_COMPLETE_URL_NAME.\n3. home.html template, changed hardcoded links and url-tag, from:\n   ```    \u203a Twitter\n\u203a Facebook\nto:\n```    <li><a rel=\"nofollow\" href=\"{% url socialauth_begin \"twitter\" %}\">\u203a Twitter</a></li>\n    <li><a rel=\"nofollow\" href=\"{% url socialauth_begin \"facebook\" %}\">\u203a Facebook</a><br/>\nSo thank you again.\n. ",
    "bimboy": "hi can someone please email me a sample code with the solution for this problem. thank you\nbimboy143@gmail.com\n. ",
    "cliffrwong": "Hi. I have the popup login window automatically close after login. But I want to update the original window that the user has logged in. Any idea how to send the signal back to the original window? Thanks!\n. ",
    "tejinderss": "Thanks for the info, i am a kind of new comer to django, so i think i will use some other alternative which is made for this specific task and easy to set up, could you please suggest me something? Should i go with django-social-registration or django.contrib.auth? Which one would be more easy to set up? And how would i retrieve facebook/twitter data using django.contrib.auth? \n. ok Thanks. \n. Can i use pipeline method too ?\n. This is the method i have come up with, dont know if its optimal? \nhttp://dpaste.org/rT3hj/\n. Thanks, but it works without the profile.save() as i am using the imagefield's save method and not making change to any other field. I would rather use the separate pipeline method, you are right. Thanks again. \n. ",
    "cardinal27513": "Figured out a way to do it... \n. insider _init__.py, \nAdded the following code so that it will be called when you do DB Sync.. \nBut this will not take care of the Admin site problem that were discussed in stackoverflow. Since I don;t need to care of about Admin site... this solution works for me.\nfrom django.utils.translation import ugettext as _\nfrom django.db.models.signals import class_prepared\nfrom django.db import models\nMAX_USERNAME_LENGTH = 32\ndef customizeUserModel(sender, args, *_kwargs):\n    if sender.name == \"User\" and sender.module == \"django.contrib.auth.models\":\n        sender._meta.get_field(\"username\").max_length = MAX_USERNAME_LENGTH\n        sender._meta.get_field(\"username\").help_text = (\"Required, %s characters or fewer. Only letters, numbers, and @, ., +, -, or _ characters.\" % MAX_USERNAME_LENGTH )\nclass_prepared.connect(customizeUserModel)\n. ",
    "szaboat": "According to the pipelines this pull request does not make sense.\nhttps://github.com/omab/django-social-auth/issues/90#issuecomment-2161908\n. ",
    "grillermo": "That was the problem, thank you.\n. There was no FACEBOOK_EXTRA_ARGUMENTS anywhere on the code, so i add it to the facebook backend auth_url method\n        if hasattr(settings, 'FACEBOOK_EXTRA_ARGUMENTS'):\n            EXTRA = ','.join(settings.FACEBOOK_EXTRA_ARGUMENTS)\n        return FACEBOOK_AUTHORIZATION_URL + '?' + urlencode(args)+'&'+EXTRA\nAnd of course\nFACEBOOK_EXTRA_ARGUMENTS = ['display=popup'}\nTo my local_settings.py\nAnyway for lack of javascript skills i couldnt get a popup with the correct url that closes itself if we are logged in, so i moved to the django-facebook project that has the feature.\nThanks for the effort.\n. I don't understand the purpose of that url\nIf i go to socialauth_associate_begin url with a logged in user i get global name 'user' message.error\nAnd if i'm not logged in it takes me to my /login url and does nothing else once i log in to it.\nThe behavior i'm looking to build is:\nIf the user is logged in associate the social login with the current account. No extra step needed. \nAnd if the user is not logged in, create a new account.\n. Nevermind, you can do what i want with the existing code base.\nI was connecting the wrong signal somewhere.\n. Yeah, thanks for that, i used signals to update my user.profile model with the response.details. \n. ",
    "joelhaasnoot": "Never mind, make this a \"documentation bug\". The right key to set is SOCIAL_AUTH_CHANGE_SIGNAL_ONLY = True. Might be good to empasize that a bit better.\nThere still is a big in the twitter auth. setting the full name as the first name.\n. ",
    "cubicova17": "I do not know if it will help anyone but:\nI had FACEBOOK_AUTH_EXTRA_ARGUMENTS = {'display': 'popup'} in my app settings and Facebook login was loaded as page(not as popup).\nBut when I removed this line from settings login form was shown as popup.\n. ",
    "dchaplinsky": "Another thing which may help:\nCode for grabbing avatars from FB and google\nhttps://gist.github.com/1248728\n. ",
    "frague": "Thanks dude! \nYour code snippet is really helpful!\n. ",
    "nisc": "I guess it requires \"pythonforfacebook/facebook-sdk\" instead of \"facebook/python-sdk\".\nYou should mention that somewhere in the README. (If it is true, that is. Can't test now.)\n. Never mind. Actually the output above was from django-socialregistration and not from your project. You're not even using the \"facebook\" module. I had two servers running at the same time and entered the wrong port number. Without any alcohol involved. Amazing. Ha.\n. And you're sure that you're not running django-socialregistration ? ;-)\n. Very nice, thanks.\n. If I parse this correctly, you're asking for a version bump of django-social-auth in the Cheeseshop, which currently has django-social-auth 0.5.13, which is from 2011-09-26, while Flickr support was authored October 10.\nVery reasonable :)\n. BTW, you can always just do pip install -e \"git+https://github.com/omab/django-social-auth.git#egg=django-social-auth\"\n. A version bump on PyPi would still be nice.\n. Yes. But shouldn't there be a way to temporarily override the scope? Lets say my app normally does not require Facebook publish_stream permissions, because for most users it does not want to publish stuff to their Facebook wall. But then there are a few exceptions. \nBTW, AFAIK Facebook tokens don't get invalidated when you change their scopes. You can only upgrade though, no downgrading.\n. ",
    "marcoamorales": "This needs to be included in the documentation, I had no clue about this.\n. The universe will repay you with a lot of pies :)\n. ",
    "1st": "Wow, this is a problem :-) And it is solved.\nOmab, what do you think about join together to create separate project with easy authentication and registration, where we avoid end-users from many settings? I have describe my idea in ,my new project: https://github.com/1st/django-easy-registration\nthe main idea is to join together auth, registration via email and social auth into single project. Are you interested in work around this project, with your big experience in this area?\nBest regards, Anton\n. @omab I have the same error, but probmle is in INCORRECT record in SOCIAL_AUTH_PIPELINE. I have insert not existing pipeline module. Expected result: show error with indicate that some pipelines is not exists, and this is a problem. Actual: we have see error, that we cant login (Cannot assign None: \"UserSocialAuth.user\" does not allow null values).\nPlease fix this, or I can do this (lease tell me if it is need).\n. @bedmondmark Yes, I have \"not existing function\" inserted after get_username and before associate_user. Because this not existing function not exists :-) - we have the problem. But I have found this only after code investigation some hours. This is problem to find a code line, where is a problem. We need to simplify find errors.\n@omab I described what I do. Please test it locally. Maybe this not continue execution, if reached import error.\n. @omab, thank you!\n. YES, tested on 1.3\n. Sorry for a long away. This is not good solution. If I have not email key in dict, will be raised exception. You need to do this:\nemail = details.get('email', None) or ''\nTo get None if \"email\" key is not exists.\n. Hmm. This is true. This is my mistake.\n. Hmmm.... I have star using latest code version from repository, an it is work well. but, in version from PyPi I have a trouble with this issue. Maybe you need to make new version and upload code to PyPi to avoid end-users from same errors. Thx\n. ",
    "mlavin": "Confirmed this is a bug for registered applications. From the Google OAuth docs: http://code.google.com/intl/sk-SK/apis/accounts/docs/OAuth.html under \"Identifying your application to users\"\n\nDo not set this parameter if your application is registered. By default, Google shows the display name specified during registration. If you set a display name in your OAuthGetRequestToken request, Google will use this instead of your registered display name, and will include a message that the identity of your application cannot be verified.\n. Based on these docs it would seem the correct fix would be check to see if the application is registered (GOOGLE_CONSUMER_KEY and GOOGLE_CONSUMER_SECRET set or not) and if it is then don't send this parameter. I'll try to make some time for a pull request.\n. This isn't an issue with django-social-auth. This is a problem with your proxy configuration. Are you sending the host header in your Nginx proxy configuration?\n\nlocation / {\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header Host $http_host;\n        proxy_pass http://127.0.0.1:1234;\n }\n. Tip of the hat to DanGer in #django for the proposed fix.\n. Django does not store emails as case-insensetive because they aren't. According RFC2821 \n\nThe local-part of a mailbox MUST BE treated as case sensitive.  Therefore, SMTP implementations MUST take care to preserve the case of mailbox local-parts.  Mailbox domains are not case sensitive.\n\nMany domains (like Gmail) handle email as though they are case-insensitive but it is not true that email addresses are case-insensitive.\n. This issue isn't about OAuth; it's about email. You opened this issue stating that email addresses are case-insensitive which is simply not true.\n. Seems like it should work as intended. dsa_view wrapper should catch this exception and kick the user to the login error page. Some documentation on how to configure this properly probably wouldn't hurt. WHITE_LISTED_DOMAINS = ['foo.com', ] would not work as likely expected since this should be a list of regular expressions. For instance with this setting, an email from footcom.net would be allowed.\n. Technically the username field in contrib.auth allows any 30 characters (it's just a CharField). However the UserCreationForm/UserChangeForm forms only allow for r'^[\\w.@+-]+$'.\n. It's worth noting that the urlopen timeout is the socket connection timeout and does not handle read timeouts. This argument was also added in Python 2.6 but I'm not sure this project worked on Python 2.5 before this proposed change.\n. I don't see a problem with having it on by default. It's more that if server connection is established within the timeout then reading the content can still take beyond the timeout and lead to the same problem as originally reported.\n. I love requests as much as the next person but it doesn't really solve the problem I'm describing either as you'll see in the timeout documentation note. Whether DSA needs to handle this case or simply live with this possibility is up to @omab. DSA can't make the Facebook or Twitter API work if their servers are down or overloaded. The current change is already a nice improvement and I didn't mean to imply otherwise.\n. ",
    "dgerzo": "I can confirm the bug is fixed now.\n. how's the progress here? ;)\n. ",
    "alexlovelltroy": "Actually, my refactoring of the authentication method is terrible.  I'll resubmit with better refactoring.\n. I can already see a bug.  This line doesn't need the additional kwarg\n. ",
    "sorcio": "It would be great if you could provide a minimal code example of the pipeline usage for this purpose. Thanks!\n. omab, accessing Exception.message is deprecated since Python 2.6. You should use e.args[0] or str(e).\n. ",
    "Fandekasp": "I'm sorry, but social_auth does provide a redirect_uri argument, so this field is not blank:\nipdb> backend.auth_url()\n'https://www.facebook.com/dialog/oauth?scope=email&state=7wK1v3kdEWDaQyzx729izW9mVk3jilbP&redirect_uri=https\n%3A%2F%2Fexample.com%3A8443%2Fcomplete%2Ffacebook%2F%3Fredirect_state%3D6xK1v3kdEWDaQyzy721izZ9m\nVk0jilbL&client_id=170531728784623'\nTherefore, why do we keep getting that fragment at the end of the url ? \n. ",
    "czpython": "It works now, thanks \n. ",
    "darkpicnic": "Is there any scenario where garbage users could still be created even with the fixed code above? I'm still seeing this occur in certain situations... \n. Yeah, sorry for the lack of detail, but it appears more or less randomly. I'll try and isolate the problem. In the mean time, what is your recommendation for handling user association with content? I'm fairly new to django-social-auth, so I maybe wrong here, but if my app creates garbage users and I associate other content with the User object, then if that user enters data and returns under a different garbage user, then that content would not be associated with them, right? Should I be associating content with a social_auth object and not the User object?\n. Yeah, that's what I figured... Hmmm. I'll look into why it's generating multiple users.\n. ",
    "originell": "Actually what happened to me in recent days was that I had a wrong import-string specified in the pipeline (forgot to append the function name to the module name my_sauth.associates instead of  my_sauth.associates.email).\nFurthermore when you work on an existing database, you might fall into uniqueness fails with existing emails... However that's basically the only 2 pitfalls I've come across (besides the refactor to pipeline) in the recent months. \n. @omab, haha ;-) We all shudder when we see some social auth errors in sentry. xD\n. my pleasure :)\n. ",
    "appel268576": "please :)\n. true, totally forgot about it, just \"assumed\" it would be up-to-date on PyPi.\n. Very strange.\nAlready having my account associated with Facebook, Twitter and LinkedIn looked like it did not want to complete it.\nSince I removed my other accounts and did Foursquare first and then the others seem to have worked.\n\nIt worked for me on your app and on my demo.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/209#issuecomment-3291107\n. Hmm, just to clarify. does it work the same way as the Facebook permission, cause the question referred to Instagram?\n. actually since it goes back to instagram, all you need to do is pass auth_extra_arguments as follows\n\nINSTAGRAM_AUTH_EXTRA_ARGUMENTS    = {'scope': 'likes comments relationships'}\n. Same error here until we upgraded to 0.7.7. Thanks for pushing this fix!\n. Sounds like a great idea. \nSent from my iPhone\nArno Smit\nDeveloper / Designer / Entrepreneur \n+46 76 794 82-18\nOn Jan 10, 2013, at 16:22, Mat\u00edas Aguirre notifications@github.com wrote:\n\n@appel268576, I'm not in favor of this forced transformation, some sites want username to be unicode complaint, some don't, IMO, there's nothing wrong with unicode usernames, if you make it setting-enabled, I'll merge the changeset, something like:\nif setting('SOCIAL_AUTH_SLUGIFY_USERNAMES', False):\n    final_username = slugify(final_username)\nWhat do you think?\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "siddharthsarda": "Thank you, that works. It wasnt working for me because i had defined LOGIN_REDIRECT_URL in my settings.py.\n. Yes they are. Here's how they look http://ip/login/facebook?next=/api/my_closet/add_redirect%3Fitems%3D04b8a620-ca48-11e0-a67b-0007e95c7626%26redirect_to%3D%252Fshop%252Fshop%252F\n. I am so sorry. Your first guess was correct. I was mixing up HTML encoding and URL Encoding. After adding log statements to the social_auth app I figured I was sending the wrong next value. \nAgain, I am sorry for wasting your time.\n. ",
    "tijs": "Is there any way to 'catch' the error messages and rewrite them into something a bit more user friendly (and translated)? \n. i.e. doing this in the view is hardly ideal:\nstorage = messages.get_messages(request)\nfor message in storage:\n    regex = re.compile(\"(?<=\\(\\')[\\w\\s\\.]+\")\n    message.message = regex.findall(message.message)[0]\nInstead it would be nice if you could configure a dictionary of messages for each error message a backend could return for instance. Sorry this is turning into a seperate feature request i guess..\n. @omab great! let me know if you need some more input\n. @thomasjenkins did you find something in the docs though? last i looked i did not find anything on how to handle this better...\n. @thomasjenkins yeah thats what i do now too, trouble is that local issues such as a social account already being linked to a different user also end up in that flow and are hard to differentiate from the rest. Although i'm now thinking they may not have the same error level...\n. @omab ah very cool! i'll try that out and let you know if i run into any issues but it looks like that would resolve most of my headaches.\n. It looks like this is related to the following 'advanced' option for facebook apps: \"Forces use of login secret for auth.login\", if enabled \"apps must use the login secrer for auth.login calls\". I'm guessing this is a new setting that social-auth is not supporting yet?\nFor now it can be fixed by simple not turning on this options but i'm guessing that eventually all apps will need to support this.\n. Hmm, no such luck. This still happens just not always... Any idea what i could do to fix this quickly? Some way to retry the call for instance?\n. Nope its live actually.\n. Maybe Facebook is just returning 400 errors now and then? I've checked their discussions and it would definitely seem possible although i don't see this exact issue there anywhere.\n. since i have not had this since i'm chalking it up to a setup/config error at the time. closing this, if i ever tun into it again i'll let you know.\n. simply a piece of middleware that sets up sane default messages for each of the exceptions would already be awesome. Would make it much easier to get started with django-social-auth by just using the defaults and looking at that middleware for pointers on how to write your own exception handling for a step 2.\n. @estebistec Looks good to me. I'm not a commiter though but @omab is.\n. @estebistec ah ok :) only feature i'd still like if i look at this is some way to easily override the messages. For instance; it could use a default dict for the messages unless there was one defined in settings.\n. @omab agreed that that's cleaner. the downside of this 'extend pattern' is that it's a bit harder to pick up if your new to the project. this sort of thing only works with great clear examples in the docs in my, humble, opinion...\n. ",
    "thomasjenkins": "Just stumbled across this too. I'd like to avoid showing strings like \"access_denied\" to the end user for things like FB user cancel. It would also be nice to know DSA was the source of the messages so they could be displayed differently when using the same template for non-social authn. Perhaps, I just missed that last feature.\nI would have just subscribed to the bug instead of adding a useless \"me too\" comment, but I'm not sure how to do that on GitHub without commenting.\nOn a related-ish side note, the SOCIAL_AUTH_RAISE_EXCEPTIONS = False requirement to debug the actual end-user flow for provider error responses could possibly be made more prominent in the docs. The behavior of raising ValueError for things like user cancel was quite unexpected and I assumed I had mucked something up.\n. @tijs the docs thing I mentioned was just about setting SOCIAL_AUTH_RAISE_EXCEPTIONS to disable DSA from raising a ValueError for any provider response other that successful auth. Sorry, confusing on my part mentioning it here. I wonder if user-caused responses should raise something else, or not raise at all, as they aren't exceptional but rather an expected user flow, but I should put that in another issue.\nI don't have a better solution for the error messages. I resort to just displaying a generic couldn't-sign-in-with-provider message if there is are any messages with level \"error\" returning from social-auth.\n. @omab you beat me to proposing a pull request with more or less the exact exception changes in 0db8f14. I guess I'll have to find another thing to contribute. :)\nI'll try those changes later today, but at a glance those should work well.\n. Removing social_auth.backends.pipeline.user.update_user_details from your pipeline will stop your Django User from being updated on FB (or other provider) login.\nIf you want the other User fields updated and just not the email field, you could replace update_user_details with a function wrapping it that removes (and restores after) 'email' from details dict before it calls the django-social-auth update_user_details function.\n. ",
    "dimebagdai": "Yes, ssnews.com is my domain and my facebook app's domain is set to www.ssnews.com. I guess I am bringing up a different issue by talking about the facebook registration plugin. I would much rather understand why the first scenario is not working. \nI included the url above to see if that would give any clues as to why I'm seeing an error. Is django-social-auth compatible with Pinax?\n. ",
    "wronglink": "Thanks much.\n. ",
    "noizwaves": "I've just encountered this issue as well, and agree with the fix proposed by @vbsteven.\nP.s. Thanks for providing this awesome project @omab\n. Thanks for that! I didn't think to check the code in the git repo; I was going by version 0.6.0 in Pypi. Do you know when the next release is scheduled for?\n. Ok, awesome. Sounds like a plan!\n. ",
    "armisael": "Great, thank you!\n. I was actually thinking about different urls: \n- /register/(?P<backend>[^/]+)/ in the registration page, \n- /login/(?P<backend>[^/]+)/ in the login page;\nif anyone tries to login from the registration page it is their fault, not ours, but it should not be possible to register from the login page if somebody picks the \"wrong\" social service.\nI was thinking about these steps:\n- the user gets the /register/.. or the /login/.. page;\n- social-auth redirects to the external service, appending a GET parameter to the callback URL specifying which action has been required, login vs registration\n- the SocialAuthBackend uses kwargs.get('response') to discriminate between the two.\nNo cookies needed, no issues with callback URL validation, no pipeline involved since the authentication is stopped at backend level. Do you think that would work?\nOf course, if this is not a requirement for the community, I will go for the \"raise / catch\" approach in the pipeline, but avoiding the cookie with the callback URL trick would be needed anyway...\n. That worked perfectly, after removing dsa_view from login_complete and register_complete, thanks!\nHope oauth2 callback URL validation will not break everything, now.\nThanks!\n. Right I always forget that the solution to any issue is \"add something to the pipeline\" :-)\nThank!\n. ",
    "ygpark2": "[pid: 15866|app: 0|req: 21/20] 121.215.234.128 () {58 vars in 1734 bytes} [Tue Dec  6 00:23:44 2011] GET /complete/facebook/?code=AQBsUcsnNSPIZdGekzuUuvTSfZXCShnxGCRllddWeHYxQO9MyRAR68P-KMVC39oa4fr26TsE1LeLsFK31nVIKZnc1UugZjjq70slERqj3Xc_g3_CX6BQAuzztghEXF9tFArS_e7Kjvlh0eLDwbsthwuYih87_4iLqVp1ybJAhAysXU6UzJK49-trh2TtN4kuTmE => generated 0 bytes in 1544 msecs (HTTP/1.1 302) 2 headers in 116 bytes (1 switches on core 0)\n[pid: 15866|app: 0|req: 22/21] 121.215.234.128 () {58 vars in 1309 bytes} [Tue Dec  6 00:23:46 2011] GET /login/error/ => generated 32 bytes in 1 msecs (HTTP/1.1 500) 1 headers in 78 bytes (1 switches on core 0)\nThis is my log file\nBut still the issue is going on.\n. ",
    "pydanny": "Yup! \n- http://www.djangopackages.com/grids/g/this-site/\n- https://github.com/opencomparison/opencomparison/blob/master/requirements/project.txt#L35\nNow if that django-social-authj fork for facebook app integration had extended rather than been done the way it did, my life would be perfect and I would be a rich man. :D\n. @omab,\nNot sure what you mean, so I'll just give you as much information as possible. :wink:  \nGitHub Application URL: https://www.djangopackages.com\nGitHub Application Callback URL: https://www.djangopackages.com\nFWIW, this was working. Then it stopped yesterday before we did any code changes. It's extremely weird. \nlogs:\n2013-02-07T20:28:16+00:00 heroku[router]: at=info method=GET path=/login/github/?next=/ host=www.djangopackages.com fwd=76.174.54.73 dyno=web.1 queue=0 wait=0ms connect=3ms service=70ms status=302 bytes=5\n2013-02-07T20:28:17+00:00 heroku[router]: at=info method=GET path=/?error=redirect_uri_mismatch host=www.djangopackages.com fwd=76.174.54.73 dyno=web.1 queue=0 wait=0ms connect=3ms service=161ms status=200 bytes=30308\n. Awesome! That setting looks to have worked! Can you try it and confirm?\nDanny\nOn Thu, Feb 7, 2013 at 12:53 PM, Mat\u00edas Aguirre notifications@github.comwrote:\n\n@pydanny https://github.com/pydanny, just gave it a try on a without\nbeing logged into Github (should have done that before) and this was the\nredirected URL information:\n{\n    'return_to': ['/login/oauth/authorize?client_id=d6675...08&next=%2F&redirect_uri=http%3A%2F%2Fwww.djangopackages.com%2Fcomplete%2Fgithub%2F%3Fredirect_state%3DYV6c3qOkIu7QgG9olxaepvXK2LOZZp0W&response_type=code&state=YV6c3qOkIu7QgG9olxaepvXK2LOZZp0W']}\nThe value for redirect_uri is\nhttp://www.djangopackages.com/complete/github/?redirect_state=YV6c3qOkIu7QgG9olxaepvXK2LOZZp0W,\nbut your site is over https, but the URL doesn't, that triggers the URL\nmismatch.\nThis might be cause because nginx on heroku is not given this information\nto the app, which assumes a SSL-less environment, try setting SOCIAL_AUTH_REDIRECT_IS_HTTPS\n= True, that's the reason behind that setting and if I can recall\nproperly, a project on heroku was the reason behind this option too.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/issues/600#issuecomment-13258987.\n\n\n'Knowledge is Power'\nDaniel Greenfeld\nPrincipal at Cartwheel Web; co-author of Two Scoops of Django\ncartwheelweb.com | pydanny.com | django.2scoops.org\n. ",
    "scottwoodall": "I'm not seeing this issue anymore and can no longer reproduce it.\n. ",
    "vapask": "User can register manually with \"USERNAME@gmail.coM\" and then log in from google open id with email \"username@gmail.com\". Django does not store emails case-insensetive\n. OAuth is for authorization and so what? We should ignore the fact that everybody use oauth for authentication?\n. Try to change your email in facebook for example\n. I admit i was wrong. Nevertheless this is useful\n. ",
    "ustun": "That was fast! Thanks :)\n. What is the correct way to migrate an existing app? Should we just apply a fake migration for 0001, and apply the second migration?\n. OK, I just ran the following two:\n./manage.py migrate social_auth --fake 0001\n./manage.py migrate social_auth\n. Yes, I think so , there were no changes in models.py for the first migration, right? It created indexes in the second migration.\n. Hmm, I haven't tried it, but it seems like my problem was something different. Were you always getting  Missing unauthorized token errors or just sometimes?\n. ",
    "atodorov": "Hi guys,\nI'm using 0.6.1 and I get\nIncorrect tokens (google-oauth)\nerror message. Since my app uses 2 different urls I'm not sure which one needs to be registered with Google - the first one is example.com (static pages hosting), the second one is myapp.cloudvendor.com - the Django code. \nI tried registering both but somehow didn't work. How can I debug the issue?\n. Haha, I don't use Debian based distros and I have no idea how to make it :) \n. Ignore previous comment. My bad. \nI had URL, Callback URL starting with https:// . Changing to http:// worked (I have .htaccess that will redirect to https:// anyway)\n. I have django-social-auth 0.6.6. Which version fixes #277 ?\n. Thanks, updated to 0.6.7 and everything working as expected. again. \n. Did you manage to fix your problem ? I'm seeing a similar issue and the root cause is that the auth pipeline fails before creating a UserSocialAuth object for some reason. The next time user tries to login, they receive a new username. \nI'm still trying to debug why athentication fails sometimes.\n. Thanks\n. ",
    "stephenmcd": "No problem. Leave it with me and I'll put together something backward compatible.\n. This shouldn't be needed given the fixes that were made, so I'd thoroughly recommend trying to work out what's actually going wrong in your case, as I did at the time when I contributed my fix.\nIn any case, prior to my fix, I had this in urls.py:\npython\nfrom someapp import SomeAuth\nfrom social_auth import backends\nbackends.BACKENDS[\"backend_name\"] = SomeAuth\n. In fact that code won't work with the latest version. You should definitely try and debug what the real issue is.\n. Licence is British. License is American. Both are acceptable.\n. I've created a new pull request (https://github.com/omab/django-social-auth/pull/210) which addresses the parts of the application that explicitly interact with BACKENDS.\n. ",
    "andrew-inglis": "Hi Stephenmcd,  Although this seems to have been solved a few months ago, I am getting an eerily similar problem that Authentication works in the development and gives a \"Incorrect authentication service\" on a production platform.  Although I am a bit of a newbe, I am getting confident that this is not a configuration issue.\nI was wondering what your \"fix\" was that you mention here: \n\"A workaround for me has been to explicitly add my backend to social_auth.backends.BACKENDS in my urlconf and this resolves the issue.\"\nI would like to try it to see if it solves the problem, but I am not sure what you mean.\nThanks!\nAndrew\n. ",
    "rudyryk": "Sorry, I didn't know that! It seems that License is more generic, so Licence may look like misspell for non-native speaker.\n. Well, here's fragment of response data passed to FacebookBackend.get_user_details:\n{u'first_name': u'\\u0418\\u0440\\u0438\\u043d\\u0430', u'last_name': u'\\u0412\\u043e\\u043f\\u0438\\u043b\\u043e\\u0432\\u0430', u'verified': True, u'name': u'\\u0418\\u0440\\u0438\\u043d\\u0430 \\u0412\\u043e\\u043f\\u0438\\u043b\\u043e\\u0432\\u0430', u'locale': u'ru_RU',}\nAnd there were no 'username' in it. Having so, I got None value in username argument  in pipeline.user.create_user.\n. Oh, I see! UserSocialAuthMixin.clean_username method uses regexp:\nCLEAN_USERNAME_REGEX = re.compile(r'[^\\w.@+-_]+')\nUTF-8 cyrillic symbols actually are not treated as \\w (may be it depends on system settings).\n. May be it's a good idea to use some lib like Unidecode http://pypi.python.org/pypi/Unidecode to convert no-ascii to valid ascii username.\n. Hmm, it seems I missed some updates :)\nWell, do you think it's good idea to have non-ascii usernames? I'm not sure about that and I'm a bit paranoid, so I'd rather added Unidecode or used fb.\n. ",
    "davecap": "quick question about this... I think this breaks the backends_data() in context_processors, since BACKENDS is now empty. Am I missing something? how can I \"warm the cache\"?\nThanks!\n. yes sir! seems to work fine now.\nThanks for the quick response.\n. ",
    "denizdogan": "This merge broke something for me. With these changes, restarting the server will give me a KeyError. Checking out the revision before this merge doesn't have the problem.\n. Thanks, those changes seem to fix it for me.\n. Thanks, I think that will do!\n. That seems to solve it. I had set SOCIAL_AUTH_EXPIRATION to False...\n. ",
    "sarvi": "I have not seen any comments on this issue. I am willing to do the work needed. I have written my proposed solution to draw some feedback and make sure I incorporate them. To also make sure the changes get accepted by this repo. Do let me  know.\n. ",
    "oinopion": "OK. I know. I'm to hasty. It's actually trimmed down.\n. Use SOUTH_MIGRATION_MODULES to specify alternative migrations directory for social auth, then do schemamigration --initial social_auth. This way you will have to take care of creating new migrations yourself, but you will not have problems with custom user model.\nHandy documentation link: http://south.readthedocs.org/en/latest/settings.html#south-migration-modules\n. I've started discussing this on mailing list: https://groups.google.com/forum/#!topic/django-social-auth/aTNDxhNccvM\n. I didn't think of that last thing, nice. I still think this fix is an ugly hack, but there should be some systematic fix coming from South project next month or two. Thanks.\n. ",
    "alexkehayias": "Still no idea. Maybe I need to capture some extra piece of information so Facebook knows to persist the auth state. \n. Yes it's logging out on my site. Since it sometimes happens in the middle of an active session it makes me believe that it becomes invalid after awhile.\nOn Jan 20, 2012, at 4:48 PM, Mat\u00edas Aguirre wrote:\n\nThe logout is on your site, right? Or the issue is that the token become invalid after a while?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/215#issuecomment-3591184\n. FYI the original issue that this was opened for has been resolved. All new apps on Facebook that utilize server-side oauth are given a longer term expiration token. I no longer have the problem described above after migrating to the \"Remove offline_access permission\" setting in the facebook app dashboard. \n. \n",
    "vipulvpatil": "I am having a slightly different issue. I only implemented the login method using facebook. The problem is that I cannot logout. I understand that I haven't implemented a logout button (which I am still trying to figure, how to implement). But event closing the browser does not log me out. I remain logged in forever. I am not sure what is going on wrong. I mean shouldn't the session expire on closing the browser.\nI am checking for request.user.is_authenticated() to see if user is logged in. Is this the right method to check for logged in users?\n. Thank you for the prompt response and clarification. I will change the session settings and try.\n. Thanks Omab,\nI was able to get this to work. But now face a different issue.\nIf I enter my login and password (for facebook) and login once, after a successful logout, I can login without needing the password again.\nThis behavior is also present at the demo site. So this leads me too believe that this is the intended behavior.\nIs there a setting to change this?\n. Thanks. Really greatful for the prompt answer. Is this behavior acceptable? I find it improper.\nI will look into the Facebook Api to see if this can be controlled.\n. @alexkehayias Sorry to hijack your thread. You are right the titular issue is closed. But what I see isn't an issue in Django-social-auth. So I am starting a new thread in stackoverflow. Hope to hear from you guys there.\nhttp://stackoverflow.com/questions/11098455/why-does-facebook-for-websites-login-also-log-you-into-facebook-com\n. ",
    "avillavi": "Sent a pull request that deals with this.\n. ",
    "yekibud": "Thanks for the tips, mlavin.  How about now?\n. Actually, that loop was garbage (would have failed on the first invalid domain).  Made some changes to simply check if the users email domain string is in the list.  Added some documentation.\n. Thank you for the reply, omab.  Unfortunately I'm getting the same error when I use the values from the UserSocialAuth.extra_data field.\nAny other suggestions?\n. Looks like I'm not the only one with this problem: http://stackoverflow.com/q/7496628/154739\n. OMG, this just about finished me.\nThe access token in extra_data is escaped!  I replaced %2F with / and all is well with the universe.\n. ",
    "uruz": "But there is a way to create lazy object, which'd concatenate string: \nfrom django.utils.functional import lazy\nSOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = lazy(lambda : reverse('user_settings_account') + '?next=/', str)\n. There is a typo: python manage.py mysite:80 instead of python manage.py runserver mysite:80. I also see no place where code and docs cover the case when user has not yet authorized the application and therefore signed_request contain no suitable user_id. It would be good practise to cover that case in the docs instead of raising AuthException. As I understand we should catch that exception and emit some plain html which contains javascript like top.location.href = \"{% url 'socialauth_begin' 'facebook' %}\";\n. It does not matter if I do from social_auth.db.django_models import UserSocialAuth or from social_auth.models import UserSocialAuth or use a string in ForeignKey: error is always the same. Should I attempt to write a failing test case?\n. I'm not so handy with git. I've created another pull request against last head: #402\n. I've amended the commit per your advice\n. I think, maybe we should switch to the perfect python-requests library, doing all the connections to external API through it and have a config for that library (and timeout within that config). It would be a lot of work though\n. With recent addition of the facebook.py application become not so trivial. And there is potential for it to become even more complex: for example, we may add a vk.py file for example vkontakte iframe application, or odnoklassniki one, etc. Or maybe we can provide a middleware setting P3P header on the response (because IE doesn't like to pass cookies in iframes). Also, having an example application inside codebase would allow us to write selenium tests around it, eliminating the need of TEST_DOMAIN\n. Sorry, pressed wrong button\n. @omab Don't you think that this is a design flaw? Maybe there should be a model Application, which would store things like path to auth backend, public and secret keys, permissions, etc?\n. ",
    "kouroshshafi": "well, the signal for registration for the same code works. take a look at https://gist.github.com/1662930\nit means there is a problem with pre_update signal.\n. you have to add this in form model to rule out this possibility :)\nif (not User.objects.filter(username= request.POST['username']).exists()):\n. well, I would like to see more information about built in pipelines and what each one does in docs- what are \"arg\" and \"kwargs\" that exist for the first pipeline and how each one passes those information to the next. I am not yet sure how command is given to the first pipeline. I was really confused how the flow (the consequence of authentication) and what kind of information at each pipeline I have and what I don't have; this makes it difficult to customize (my learning curve here was a bit over than my patience).\nIt is already a great app and the main resean I didn't even try other apps was that it was recommended highly on the community. thank you very much. After one day, I managed to implement an invite-only on top of this application, which is really great. \nI believe \"implementation of an invite only on top of social auth\"  was a frequent asked question on google groups that was given poor answer. Well, I have posted my solution. http://stackoverflow.com/questions/11026244/invite-only-app-for-django-auth\n. ",
    "elsurudo": "I'm having the same problem. Removing the pre_update handler solves the redirect issue, but where should I move the code that used to run on pre_update? Have you found a workaround?\n. I managed to find a workaround, although it's not ideal.\nOn pre-update, I had been starting a few async tasks to do with pulling some user information from Facebook, as well as firing off some emails. These were being called with celery's \"delay\" method. Just calling the task methods synchronously seems to have fixed the redirect issue, although I have no idea why...\n. No, I haven't been able to find the cause yet. Right now I'm on a tight schedule so I can't afford to look further, but I will try when I have the time...\n. ",
    "e7mac": "sorry guys.. just going through the readme... got it all working.. thanks a TON again!\n. @micrypt No man - the readme's great! It was just my fault for not having gone through it thoroughly enough - pressure to get things working can do that to a person :) This project is great - thanks again to everyone!\n. ",
    "ganeshglits": "I have added this in google api console and generated client id and all. but still problem presist. pls help me\n. I have registered my website URL in API Access in https://code.google.com/apis/console/ and got source from https://github.com/justinjsmith/oauth-login-demo and edited the redirecting URl and client ID and all. but where i have to config redirecting URL? pls help me or send me one sample using google appengine python code.pls help\n. ",
    "bradmontgomery": "Here's what I've got for Middleware and Authentication backends. Both initial account creation and association work correctly with Google, Twitter, and Facebook.  And, no, I'm not getting any query parameter in the URL to which github redirects me.\n```\nMIDDLEWARE_CLASSES = ( \n    'django.middleware.common.CommonMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',\n    'axes.middleware.FailedLoginMiddleware',\n    'sentry.client.middleware.Sentry404CatchMiddleware',\n)\nAUTHENTICATION_BACKENDS = (\n    'social_auth.backends.contrib.github.GithubBackend',\n    'social_auth.backends.twitter.TwitterBackend',\n    'social_auth.backends.facebook.FacebookBackend',\n    'social_auth.backends.google.GoogleBackend',\n    'social_auth.backends.yahoo.YahooBackend',\n    'social_auth.backends.contrib.linkedin.LinkedinBackend',\n    'django.contrib.auth.backends.ModelBackend',\n)\n```\nGithub requires a Name, a Url, and a Callback URL for a registered app. My callback URL looks like http://example.com/complete/github, which works well for account creation, but am I correct in thinking this should be http://example.com/associate/complete/github for an existing an account? \n. One more thing... this doesn't directly fix the issue I'm having, but it may be related. social_auth.views.complete_process calls auth_complete (line 148), but doesn't pass in a value for user:\n```\n148:        user = auth_complete(request, backend, args, *kwargs)\n...\n189:    def auth_complete(request, backend, user=None, args, *kwargs):\n```\nso in this case, user=None will always be the case, even though I'm already logged in with an existing user account.\nFor what it's worth, here's my traceback:\n```\nRequest Method: GET\nRequest URL: http://127.0.0.1:8000/complete/github/\nTraceback:\nFile \"/Users/brad/django/myproject/social_auth/views.py\" in wrapper\n  50.                 return func(request, backend, args, kwargs)\nFile \"/Users/brad/django/myproject/social_auth/views.py\" in complete\n  81.     return complete_process(request, backend, *args, kwargs)\nFile \"/Users/brad/django/myproject/social_auth/views.py\" in complete_process\n  148.     user = auth_complete(request, backend, args, kwargs)\nFile \"/Users/brad/django/myproject/social_auth/views.py\" in auth_complete\n  193.     return backend.auth_complete(user=user, request=request, *args, kwargs)\nFile \"/Users/brad/django/myproject/social_auth/backends/contrib/github.py\" in auth_complete\n  86.             raise ValueError('Authentication error: %s' % error)\nException Type: ValueError at /complete/github/\nException Value: Authentication error: unknown error\n```\n. Just on a whim, I changed my Github OAuth app settings to:\nName:  My App's name\nURL: http://example.com\nCallback URL: http://example.com\nEverything works now, and I feel pretty silly :-P\n. ",
    "amarandon": "I see, thank you for explaining. I don't think that the debug mode should trigger a different observable behavior though. This is a general expectation in software development, not only in Django: debug mode is meant to provide more information on the execution of a program, but the program should give the same results. Do you understand what I mean?\n. ",
    "robmcmullen": "Short answer is: it works if I change YAHOO_OPENID_URL = 'http://yahoo.com' to http://me.yahoo.com in social_auth/backends/yahoo.py\nLong answer is: it was still broken for me in a virtual machine with a pristine browser, and fails for another user at a different site.  My app is on a shared-host apache machine under Passenger; I don't have su permissions to kill apache but I've killed the Passenger python process any number of times.\nPoked around the source and eventually came to openid.yadis.discover.  Instrumented def discover(uri) with:\npython\n    if resp.status not in (200, 206):\n        raise DiscoveryFailure(\n            'HTTP Response status from identity URL host is not 200. '\n            'Got status %r\\nuri=%s\\nfinal_url=%s\\n%s' % (resp.status, uri, resp.final_url, str(resp.body)), resp)\nand got this weird url in the 404 text: /404/*http://www.yahoo.com.  Larger excerpt of the debug print here:\n```\nuri=http://yahoo.com/\nfinal_url=http://www.yahoo.com/\n\n\n\nYahoo!\n\n\n\n\n\n\nYahoo! - Help\n\n\n```\nwhich led me to a google search and http://stackoverflow.com/questions/1720097/, and without any expectation that it might be any different I tried me.yahoo.com but to my surprise it worked.\n. ",
    "tschundler": "Related to reproducibility, it only seems to not work on some yahoo.com servers, but works on others.\nAsking yahoo ( http://developer.yahoo.com/forum/OpenID-General-Discussion/http-www-yahoo-com-returns-404-depending-on-headers-/1329169111466-34212409-d649-4154-8dd6-a19e04a6d02d ), their own suggestion is https://me.yahoo.com/\n. +1 on the indexes - we've noticed MySQL needs to do full-table scans when looking up Nonces.\nShould that perhaps be a separate ticket?\n. ",
    "dennisai": "Environment:\nRequest Method: GET\nRequest URL: http://localhost:8000/complete/facebook/?code=AQDJThH_aQrr0Gz1D23XyPksWTag-Oa30vINoN66lJVy0iuE0L-8EGvQ-XRFor95lPCioBjK_rT4xg783Nxuse4OgOBiGzC-WD08T0-dKYCD8LnKPZjirHUZ6NvcDHNi3EE0axNb__8Q28bL1g_hlrMgUMhiAVyj19lGVCD7XhEHNKJRfAw5O43toPGgsBxmS9E\nDjango Version: 1.3.1\nPython Version: 2.7.2\nInstalled Applications:\n['django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'south',\n 'social_auth',\n 'debug_toolbar',\n 'table_number',\n 'user_profile',\n 'social_graph',\n 'review',\n 'movie']\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'debug_toolbar.middleware.DebugToolbarMiddleware')\nTraceback:\nFile \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                 response = middleware_method(request, response)\n   File \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/debug_toolbar/panels/request_vars.py\" in process_response\n2.                 'session': [(k, self.request.session.get(k)) for k in self.request.session.iterkeys()]\n   File \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/django/contrib/sessions/backends/base.py\" in iterkeys\n3.         return self._session.iterkeys()\n   File \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/django/contrib/sessions/backends/base.py\" in _get_session\n4.                 self._session_cache = self.load()\n   File \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/django/contrib/sessions/backends/db.py\" in load\n5.                 expire_date__gt=datetime.datetime.now()\n   File \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/django/db/models/manager.py\" in get\n6.         return self.get_query_set().get(_args, *_kwargs)\n   File \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/django/db/models/query.py\" in get\n7.         num = len(clone)\n   File \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/django/db/models/query.py\" in len\n8.                 self._result_cache = list(self.iterator())\n   File \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/django/db/models/query.py\" in iterator\n9.         for row in compiler.results_iter():\n   File \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\" in results_iter\n10.         for rows in self.execute_sql(MULTI):\n    File \"/home/dennis/Dev/mavenize/django/local/lib/python2.7/site-packages/django/db/models/sql/compiler.py\" in execute_sql\n11.         cursor.execute(sql, params)\nException Type: InternalError at /complete/facebook/\nException Value: current transaction is aborted, commands ignored until end of transaction block\n. I'm using this code: https://gist.github.com/1662930\n. Yeah, data is coming back as False.\n. ",
    "joshuakarjala": "I get the same error with newest pypi version\n. ",
    "mpessas": "The thing is, that I was thinking of having more things \"configurable\", like how a random username would be generated (just nice to have), which would be easier to do with a functor than adding another function as a parameter or in settings.\nBut ok, since the main problem is solved, thanks!\n. ",
    "ajt": "No, I don't even get that far. I go to the '/login/facebook/' link and then get the error. This happens for completely new facebook accounts and accounts that are already registered. \n. Yes. They are all there, and this works fine (without the form) when I completely remove SOCIAL_AUTH_PIPELINE or just the 'social_auth.backends.pipeline.misc.save_status_to_session'.\n. There really is no custom pipeline setup right now. Here are the portions of my settings.py that should be relavent:\n```\nAUTHENTICATION_BACKENDS = (                                                                                                                                                                 \n                'django.contrib.auth.backends.ModelBackend',                                                                                                                                \n                'social_auth.backends.facebook.FacebookBackend',                                                                                                                            \n                'social_auth.backends.twitter.TwitterBackend',                                                                                                                              \n                        )                                                                                                                                                                   \nDEFAULT_FROM_EMAIL = 'admin@xxxx.com'                                                                                                                                                    \nSOCIAL_AUTH_ENABLED_BACKENDS = ('twitter', 'facebook',)                                                                                                                                     \nSOCIAL_AUTH_CREATE_USERS          = True                                                                                                                                                    \nSOCIAL_AUTH_FORCE_RANDOM_USERNAME = False                                                                                                                                                   \nSOCIAL_AUTH_DEFAULT_USERNAME      = 'socialauth_user'                                                                                                                                       \nSOCIAL_AUTH_COMPLETE_URL_NAME     = 'socialauth_complete'                                                                                                                                   \nSOCIAL_AUTH_ERROR_KEY             = 'socialauth_error'                                                                                                                                      \nSOCIAL_AUTH_COMPLETE_URL_NAME  = 'socialauth_complete'                                                                                                                                      \nSOCIAL_AUTH_ASSOCIATE_URL_NAME = 'socialauth_associate_complete'                                                                                                                            \nLOGIN_URL          = '/login-form/'                                                                                                                                                        \nLOGIN_REDIRECT_URL = '/logged-in/'                                                                                                                                                         \nLOGIN_ERROR_URL    = '/login-error/'                                                                                                                                                         \nSOCIAL_AUTH_PIPELINE = (                                                                                                                                                                    \n    'social_auth.backends.pipeline.social.social_auth_user',                                                                                                                                \n    'social_auth.backends.pipeline.associate.associate_by_email',                                                                                                                           \n    'social_auth.backends.pipeline.misc.save_status_to_session',                                                                                                                            \n    'social_auth.backends.pipeline.user.get_username',                                                                                                                                      \n    'social_auth.backends.pipeline.user.create_user',                                                                                                                                       \n    'social_auth.backends.pipeline.social.associate_user',                                                                                                                                  \n    'social_auth.backends.pipeline.social.load_extra_data',                                                                                                                                 \n    'social_auth.backends.pipeline.user.update_user_details'                                                                                                                                                                                                                                                               \n)                                                                                                                                                                                             \nfrom django.template.defaultfilters import slugify                                                                                                                                          \nSOCIAL_AUTH_USERNAME_FIXER = lambda u: slugify(u)\n```\nAs you can see, save_status_to_session is listed as a part of the SOCIAL_AUTH_PIPELINE. When it is in there it throws the error from the subject line. When I comment this out there are no issues. This should work, shouldn't it? I can put pdb in the misc pipeline.\n. Sure thing. I ran the trace and I see that there is an exception TypeError: 'save_status_to_session() takes at least 2 arguments (1 given)':\n```\n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/pipeline/misc.py(8)()\n-> def save_status_to_session(request, auth, args, kwargs):\n(Pdb) n\n--Return--\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/pipeline/misc.py(8)()->None\n-> def save_status_to_session(request, auth, *args, kwargs):\n(Pdb) n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/django/utils/importlib.py(36)import_module()\n-> return sys.modules[name]\n(Pdb) n\n--Return--\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/django/utils/importlib.py(36)import_module()->\n-> return sys.modules[name]\n(Pdb) n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/init.py(133)pipeline()\n-> func = getattr(mod, func_name, None)\n(Pdb) n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/init.py(135)pipeline()\n-> if callable(func):\n(Pdb) n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/init.py(136)pipeline()\n-> try:\n(Pdb) n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/init.py(137)pipeline()\n-> result = func(args, out) or {}\n(Pdb) n\nTypeError: 'save_status_to_session() takes at least 2 arguments (1 given)'\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/init.py(137)pipeline()\n-> result = func(*args, out) or {}\n```\n\nDoes this help at all? I can take a look at variables if you need me to.\n. This is 0.6.5. Man this is spooky.\n. I put my pdb.set_trace() right before save_status_to_session(). As you can see, out produced nothing for some time and args didn't either. I am a little over my head here, but I wanted to point that out.\n```\n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/pipeline/misc.py(8)()\n-> def save_status_to_session(request, auth, *args, kwargs):\n(Pdb) out\n NameError: name 'out' is not defined\n(Pdb) args\n(Pdb) \n(Pdb) print args\n NameError: name 'args' is not defined\n(Pdb) args\n(Pdb) out\n NameError: name 'out' is not defined\n(Pdb) n\n--Return--\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/pipeline/misc.py(8)()->None\n-> def save_status_to_session(request, auth, args, kwargs):\n(Pdb) args\n(Pdb) auth\n NameError: name 'auth' is not defined\n    (Pdb) request NameError: name 'request' is not defined\n    (Pdb) n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/django/utils/importlib.py(36)import_module()\n-> return sys.modules[name]\n(Pdb) args\nname = social_auth.backends.pipeline.misc\npackage = None\n(Pdb) out\n NameError: name 'out' is not defined\n(Pdb) n\n--Return--\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/django/utils/importlib.py(36)import_module()->\n-> return sys.modules[name]\n(Pdb) args\nname = social_auth.backends.pipeline.misc\npackage = None                                                                                                                                                                      \n(Pdb) out\n NameError: name 'out' is not defined\n(Pdb) n> /home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/init.py(133)pipeline()\n-> func = getattr(mod, func_name, None)\n(Pdb) out\n{'uid': u'100001345946828', 'user': , 'request': ,\nPOST:,\nCOOKIES:{'__utma': '83735939.1532914572.1306026189.1329409294.1329414078.160',\n '__utmc': '83735939',\n '__utmz': '83735939.1317856481.98.31.utmcsr=biometrics.gov|utmccn=(referral)|utmcmd=referral|utmcct=/referenceroom/introduction.aspx',\n 'csrftoken': '815cdda6c4f01d19b24cd9d10425f456',\n 'djdt': 'hide',\n 'fresh_registration': '29',\n 'sessionid': 'cef6b3acab6c6bde20bda58fd1d35829'},\nMETA:{'CONTENT_LENGTH': '',\n 'CONTENT_TYPE': 'text/plain',\n 'CSRF_COOKIE': '815cdda6c4f01d19b24cd9d10425f456',\n 'DJANGO_SETTINGS_MODULE': 'testsite.settings',\n 'GATEWAY_INTERFACE': 'CGI/1.1',\n 'HOME': '/home/ajt',\n 'HTTP_ACCEPT': 'text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8',\n 'HTTP_ACCEPT_CHARSET': 'ISO-8859-1,utf-8;q=0.7,;q=0.3',\n 'HTTP_ACCEPT_ENCODING': 'gzip,deflate,sdch',\n 'HTTP_ACCEPT_LANGUAGE': 'en-US,en;q=0.8',\n 'HTTP_CACHE_CONTROL': 'max-age=0',\n 'HTTP_CONNECTION': 'keep-alive',\n 'HTTP_COOKIE': 'fresh_registration=29; djdt=hide; __utma=182800295.69456271.1308790702.1326324875.1329265530.74; __utmc=182800295; __utmz=182800295.1329265530.74.51.utmcsr=t.co|utmccn=(refer\nral)|utmcmd=referral|utmcct=/KwZZa92g; csrftoken=815cdda6c4f01d19b24cd9d10425f456; sessionid=cef6b3acab6c6bde20bda58fd1d35829; __utma=83735939.1532914572.1306026189.1329409294.1329414078.160;\n __utmc=83735939; __utmz=83735939.1317856481.98.31.utmcsr=biometrics.gov|utmccn=(referral)|utmcmd=referral|utmcct=/referenceroom/introduction.aspx', 'HTTP_HOST': 'testsite.com:8000', 'HTTP_USER_AGENT': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.11 Safari/535.19', 'LANG': 'en_US.UTF-8',\n 'LESSCLOSE': '/usr/bin/lesspipe %s %s',\n 'LESSOPEN': '| /usr/bin/lesspipe %s',\n 'LOGNAME': 'ajt',\n 'LS_COLORS': 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:.tar=01;31:.tgz=01;\n31:.arj=01;31:.taz=01;31:.lzh=01;31:.lzma=01;31:.tlz=01;31:.txz=01;31:.zip=01;31:.z=01;31:.Z=01;31:.dz=01;31:.gz=01;31:.lz=01;31:.xz=01;31:.bz2=01;31:.bz=01;31:.tbz=01;31:.tb\nz2=01;31:.tz=01;31:.deb=01;31:.rpm=01;31:.jar=01;31:.rar=01;31:.ace=01;31:.zoo=01;31:.cpio=01;31:.7z=01;31:.rz=01;31:.jpg=01;35:.jpeg=01;35:.gif=01;35:.bmp=01;35:.pbm=01;35:.p\ngm=01;35:.ppm=01;35:.tga=01;35:.xbm=01;35:.xpm=01;35:.tif=01;35:.tiff=01;35:.png=01;35:.svg=01;35:.svgz=01;35:.mng=01;35:.pcx=01;35:.mov=01;35:.mpg=01;35:.mpeg=01;35:.m2v=01;35\n:.mkv=01;35:.ogm=01;35:.mp4=01;35:.m4v=01;35:.mp4v=01;35:.vob=01;35:.qt=01;35:.nuv=01;35:.wmv=01;35:.asf=01;35:.rm=01;35:.rmvb=01;35:.flc=01;35:.avi=01;35:.fli=01;35:.flv=01;3\n5:.gl=01;35:.dl=01;35:.xcf=01;35:.xwd=01;35:.yuv=01;35:.cgm=01;35:.emf=01;35:.axv=01;35:.anx=01;35:.ogv=01;35:.ogx=01;35:.aac=00;36:.au=00;36:.flac=00;36:.mid=00;36:.midi=00;3\n6:.mka=00;36:.mp3=00;36:.mpc=00;36:.ogg=00;36:.ra=00;36:.wav=00;36:.axa=00;36:.oga=00;36:.spx=00;36:.xspf=00;36:',\n 'MAIL': '/var/mail/ajt',\n 'OLDPWD': '/home/ajt/testsite.com',\n 'PATH': '/home/ajt/testsite.com/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games',\n 'PATH_INFO': u'/complete/facebook/',                                                                                                                                                  [0/1969]\n 'PS1': '(testsite.com)${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ ',\n 'PWD': '/home/ajt/testsite.com/testsite',\n 'QUERY_STRING': 'code=AQBs_R1NmyZsFqUdqLE-gX5DMqd65Tgik1toT9n0RFnsQm8z1CAuuTvytgqfZl_mG-jhyR1-W3lMOBYsHMqT-q03qOxa-TvJWO9cXJQHQLPuTTk2TmpPC5vtGio0qSRVfvJi2c88k2ym2sk_hsOau1T5BDOfTKRkJQpCwsE_0yjyu3mr4n9C2eqv8MwT2q4kS7o',\n 'REMOTE_ADDR': '10.147.124.201',\n 'REMOTE_HOST': '',\n 'REQUEST_METHOD': 'GET',\n 'RUN_MAIN': 'true',\n 'SCRIPT_NAME': u'',\n 'SERVER_NAME': 'testserver.com',\n 'SERVER_PORT': '8000',\n 'SERVER_PROTOCOL': 'HTTP/1.1',\n 'SERVER_SOFTWARE': 'WSGIServer/0.1 Python/2.7.1+',\n 'SHELL': '/bin/bash',\n 'SHLVL': '2',\n 'SSH_CLIENT': '210.10.123.2 8236 22',\n 'SSH_CONNECTION': '',\n 'SSH_TTY': '/dev/pts/0',\n 'TERM': 'screen',\n 'TMUX': '/var/run//tmux/tmux-1000/default,2481,1',\n 'TZ': 'America/Chicago',\n 'USER': 'ajt',\n 'VIRTUAL_ENV': '/home/ajt/testsite.com',\n '_': '/home/ajt/testsite.com/bin/python',\n 'wsgi.errors': ', mode 'w' at 0x7fbf45f60270>,\n 'wsgi.file_wrapper': ,\n 'wsgi.input': ,\n 'wsgi.multiprocess': False,\n 'wsgi.multithread': True,\n 'wsgi.run_once': False,\n 'wsgi.url_scheme': 'http',\n 'wsgi.version': (1, 0)}>, 'is_new': False, 'facebook': True, 'details': {'username': None, 'fullname': u'Andrew Thornton', 'last_name': u'Thornton', 'email': '', 'first_name': u'Andrew'}, 'social_user': , 'response': {u'first_name': u'Andrew', u'last_name': u'Thornton', u'verified': True, u'name': u'Andrew Thornton', u'locale': u'en_US', 'expires': '5176300', u'updated_time': u'2012-02-16T18:07:51+0000', 'access_token': 'AAAD6wylXeuYBAJvtfj5U8zgJG7dr06jxxxxxxxxxFJZBGMWlq368UcEgJ3uWqoSaUG1Ngutd4Abav3C4Oax9NBlcuqvjDAZDZD', u'link': u'http://www.facebook.com/profile.php?id=100001311146828', u'timezone': -5, u'id': u'10000111146828'}, 'backend': }\n(Pdb) n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/init.py(135)pipeline()\n-> if callable(func):\n(Pdb) n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/init.py(136)pipeline()\n-> try:\n(Pdb) n\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/init.py(137)pipeline()\n-> result = func(args, out) or {}\n(Pdb) n\nTypeError: 'save_status_to_session() takes at least 2 arguments (1 given)'\n/home/ajt/testsite.com/local/lib/python2.7/site-packages/social_auth/backends/init.py(137)pipeline()\n``\n. Hey, this seems to be working. I will try it with my new form and let you know. Isn't 0.6.5 the current version?\n. Hey that is all-right! Thanks for your help with this.\n. I have done more troubleshooting. I added apdb.set_trace()tosocial_auth.backends.pipeline.save_status_to_sessionand I have noticed that the pipeline does not get run when a new user registers for the first time. When the user is sent to the facebook authorization page, accepts the terms and then gets redirected to the site, thesave_status_to_sessionis not run. Maybe this is to be expected. Let me know your thoughts on this.\n. I am not sure where to putpdb.set_trace()to see what is going on. Can you recommend a section for me to drop it in at? Maybe something outside of the pipeline?\n. This seems to be working now, which is great. I looked at this diff. What was the issue? I was pretty sure that my users were not authenticated.\n. Yes it is working now. I replaced the **init**.py in backends entirely with what you sent me. I am testing with a couple of other accounts and I will let you know if I run into trouble.\n. 0.6.6\n. I am going topdb.set_trace()` on the pipelines but I wanted to show you more weird behavior. I was able to add a second twitter account but it used my facebook UID. This just happened. \n\n\n\nWhere do you think that I should use the pdb traces? I appreciate your help.\n. Sure, the custom pipeline I am using is similar to the custom pipeline that you use in your example, but I allow the user to set both a username and an email address in the custom form. All of the issues that I am describing within this issue are within the default example site included within the repo.\nAs far as the custom pipeline in my app, here is my pipeline.py:\n```\nfrom django.http import HttpResponseRedirect\ndef redirect_to_socialsignup_form(args, *kwargs):\n    import pdb; pdb.set_trace()\nif not kwargs['request'].session.get('saved_username') and kwargs.get('user') is None:\n    return HttpResponseRedirect('/socialsignup/')\n\ndef username(request, args, *kwargs):\n    import pdb; pdb.set_trace()\n    if kwargs.get('user'):\n        username = kwargs['user'].username\n    else:\n        username = request.session.get('saved_username')\n        kwargs['details']['email'] = request.session.get('saved_email')\n    return { 'username': username, }\n```\nHere is the view for socialsignup:\ndef social_sign_up(request):\n    if request.method == 'POST':\n        form = SocialSignUpForm(request.POST)\n        if form.is_valid():\n            from social_auth.utils import setting\n            from django.shortcuts import redirect\n            name = setting('SOCIAL_AUTH_PARTIAL_PIPELINE_KEY', 'partial_pipeline')\n            request.session['saved_username'] = request.POST['username']\n            request.session['saved_email'] = request.POST['email']\n            backend = request.session[name]['backend']\n            return redirect('socialauth_complete', backend=backend)\n    username = request.session.get(\"partial_pipeline\")['kwargs']['details']['fullname'].replace(' ','')\n    email = request.session.get(\"partial_pipeline\")['kwargs']['details']['email']\n    form = SocialSignUpForm(initial={'username':username, 'email':email})\n    return render(request, 'socialsignup_form.html', {'form':form,})\nHere is the ModelForm that I am using:\nclass SocialSignUpForm(ModelForm):\n    class Meta:\n        model = User\n        fields = ('username', 'email')\nHere is the url.py section:\nurl(r'^social/', include('socialregistration.urls', namespace = 'socialregistration')),\nurl(r'^socialsignup/', social_sign_up),\nand here is my pipeline from settings.py:\nSOCIAL_AUTH_PIPELINE = (\n    'social_auth.backends.pipeline.social.social_auth_user',\n    'social_auth.backends.pipeline.associate.associate_by_email',\n    'social_auth.backends.pipeline.misc.save_status_to_session',\n    'main.pipeline.redirect_to_socialsignup_form',\n    'main.pipeline.username',\n    'social_auth.backends.pipeline.user.create_user',\n    'social_auth.backends.pipeline.social.associate_user',\n    'social_auth.backends.pipeline.social.load_extra_data',\n    'social_auth.backends.pipeline.user.update_user_details',\n)\nThe custom pipeline code works very well when the user is new, but I am unable to associate a second account with the user. When I try to associate a second account with the user, I get the socialsignup form again, and if I submit this form, it does not associate the second account. I am sorry if this isn't making much sense.\n. I have narrowed down my main issue now, and I need a little help debugging. \nI am able to have a new account created via django-social-auth using a facebook account. This works very well, but when I try to associate the newly created account with a twitter account (via '/login/twitter/'), I get a Duplicate Entry error because the pipeline is trying to create a new user. \nI have found that the user variable is not being passed to the social.social_auth_user pipeline. I set a pdb.set_trace() within the first portion of social.social_auth_user and looked for the user variable, but it was not set. This is the reason that django-social-auth is trying to re-create the user.\nWhy do you think that there is no user being passed to the first step in my pipeline? Where can I put a debug statement prior to the pipeline being invoked?\nHere is my pipeline:\nSOCIAL_AUTH_PIPELINE = (\n'social_auth.backends.pipeline.social.social_auth_user',\n'social_auth.backends.pipeline.associate.associate_by_email',\n'social_auth.backends.pipeline.misc.save_status_to_session',\n'main.pipeline.redirect_to_socialsignup_form',\n'main.pipeline.username',\n'social_auth.backends.pipeline.user.create_user',\n'social_auth.backends.pipeline.social.associate_user',\n'social_auth.backends.pipeline.social.load_extra_data',\n'social_auth.backends.pipeline.user.update_user_details',\n)\n. I was using the wrong URL. Sorry for all of the confusion. I needed to use /associate/twitter/\n. ",
    "dragonx": "Any chance your FB app is in sandboxed mode?\n. I need to sync with the latest codebase to see if I''m missing something.  But essentially the django/contrib/auth/middleware layer calls the social_auth backend for every request, and that ends up calling get_user().\n. ",
    "geboyr": "I'm seeing this as well. Haven't figured out the fix for it though.\n. For me, it ended up being a domain issue; where the request originated from wasn't matching the one defined in the fb app configuration. But I'm setting up a new app.  I don't know how fb did it before, but perhaps facebook wasn't checking this before and now they are, breaking your implementation?\n. ",
    "code4ghana": "@omab how are you able to configure what port the request should be routed to?\nI ended up having to force my local dev to use port 80 since dns has no idea about ports.\n. ",
    "yugaljindle": "I am also facing the same exact problem !!\nPlease look into this.. this is driving me nuts !\n. Well, I will get back the result of the requested param. Although, my server doesn't have a domain name yet and working on IP address with domain mapping on Nginx.\nDoes that makes a difference ?\n. Hm.. I understand that.. domain problem. But the error doesn't seems to be pointing to that.\nStrangly, twitter login is working great on the server.. (Oauth)\nI think this issue is related to OpenID in someway.\nAlso, I am getting 502 from nginx on Google (OpenID) attempt. [ Strange again ]\nDo you think I am missing something ?\n. @omab Resolved the issue with a small change in the django settings.\nAdded the following line as per http://serverfault.com/questions/134863/nginx-fastcgi-problems-with-django-double-slashes-in-url\nFORCE_SCRIPT_NAME=\"\"\nPlease review this, if this requires a fix in the code or may be added to sample app settings by default.\n. Hey, @omab please update will this be incorporated in the code ?\n. Well.. I will try to fix it and raise a pull request.. if I can figure out the following :\nAlthough what I didn't understood was that 'Twitter' (Oauth) was able to login but 'Google' (OpenID) was giving the above error.\nThat means this was affecting this app in specific if not the whole project, so you might be interested in looking into this.\nI will also look into this as soon as I find some spare time.\n. ",
    "paritosh90": "Yes it worked for me too. But I can't get what was the problem.\nThanks\nParitosh\nOn Wed, Feb 29, 2012 at 11:36 PM, Matas Aguirre <\nreply@reply.github.com\n\nwrote:\n@paritosh90, does the fix from @yugal work for you too?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/262#issuecomment-4243154\n. Yes, we should try to update tests as soon as possible.\n\nThanks\n. ",
    "vencax": "I thing username shall contain only [a-zA-Z_0-9] and thats why I posted this issue. Anyway, I will try you suggestion. Thanks for pointing ...\n. ",
    "nlaurance": "splendid ! thank you very much.\n. ",
    "snanda85": "Just noticed that the above issue also surfaces when we redirect during a partial pipeline, but do not proceed to auth_complete view, and instead go back to auth_process view and restart the process all over again.\nThe following lines added in auth_process in views.py at line 140 solved it:\npartial_pipeline_name = setting('SOCIAL_AUTH_PARTIAL_PIPELINE_KEY', 'partial_pipeline')\nrequest.session.pop(partial_pipeline_name, None)\nP.S. I am not able to reopen the issue.\n. ",
    "dhananjaysathe": "Infact i have the same issue with twitter ! Please help\n. The latest git version !\nCould you help me out ?\n. Ok will try that and get back to you asap , However i arrived to this conclusion after manually going through the database manually with a browser and not finding it ! ill look and let you know , Thanks !\n. Oh great ! i was looking in the wrong place , so sorry .\n. ",
    "Dru89": "This was apparently fixed in 7418ec9, and I hadn't updated pip yet. =/  My apologies, this bug is basically a duplicate of #271.\n. ",
    "fmoga": "Without any further modifications, example is now working. Seems like it was an accounts.google.com issue.\n. ",
    "lambdalisue": "Cool, well I paste code which I use to hide this annoying error message from console\nfor people who are too tired to see this error message :-)\nsettings.py::\nimport logging\nclass NoMessageFailuresFilter(logging.Filter):\n    def filter(self, record):\n        if record.exc_info:\n            from django.contrib.messages.api import MessageFailure\n            exception = record.exc_info[1]\n            if isinstance(exception, MessageFailure):\n                # I DON'T WANT TO SEE ANNOYING MESSAGEFAILURE EXCEPTION!!!\n                return False\n        return True\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': True,\n    'formatters': {\n        'verbose': {\n            'format': '%(name)s %(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'\n        },\n        'simple': {\n            'format': '%(levelname)s %(message)s'\n        },\n    },\n    'handlers': {\n        'null': {\n            'level': 'DEBUG',\n            'class':'django.utils.log.NullHandler',\n        },\n        'console': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n            'formatter': 'verbose'\n        }\n    },\n    'filters': {\n        'no_message_failures': {\n            '()': NoMessageFailuresFilter,\n        },\n    },\n    'loggers': {\n        'django.request': {\n            'handlers': ['console'],\n            'level': 'ERROR',\n            'propagate': False,\n            # stop MessageFailure !\n            'filters': ['no_message_failures'],\n        },\n        '': {\n            'level': 'ERROR',\n            'handlers': ['console'],\n        },\n    },\n}\n. Well I forgot to say. The exception occur even if you delete all your test codes \n(I confirmed with comment outing from brabra import * codes in tests/__init__.py). \nThat's mean you may call somethings which should not called in definition level. Actually I had same \nproblem with my library. In my case, it was reverse('admin:index'). I called that code like::\nclass SomeTestCase(TestCase):\n    # the code below will call in definition level.\n    # it should be called in ``__init__()`` method\n    # to make sure ``reverse('admin:index')`` is called\n    # after everything has prepared.\n    # (or I can use ``lazy`` method to wrap ``reverse``\n    # method.)\n    admin_url = reverse('admin:index')\n    # You know it was so hard works to find that this codes had broke everything...\nBut in your case, I couldn't find anything which call reverse or whatever so it might not help you but just in case.\n. Nops. Nothing has changed. process_exception is even not called.\n\nSeems like the error is caused by some app trying to use django.contrib.messages with a user that's not authenticated\n\nI thought so too but  django.contrib.messages raise MessageFailure exception and it will be caught with django.request and it return HttpResponseServerError thus I think DSA cannot catch this exception anyway. \n. ",
    "pires": "Isn't this issue closed with c342d811616a600789c541888381c7e5a61eb3fc ?\n. ",
    "jmichelsen": "Is there a way to merge two accounts after they are already created (Facebook accounts that don't pull an email address, and Django based account with an email address)?\n. Ah ok, thank you.\n. ",
    "skizzy": "After removing the commas at the end of the consumer keys and deactivating  SOCIAL_AUTH_ENABLED_BACKENDS. I'm getting URLError at /login/twitter/\n. No. I'm on windows machine. Coding in the development area. Localhost:8000. I hope you get my point?\n. Kindly attend to my issue!\n. I guess have seen the problem. When I launch my internet and click on the link, I was taken to twitter authorization page! Guess it's now working fine. Thanks so much guys! :)\nBTW: Still have a question for you omab. Should I create a new issue or ask about it here? \n. Nope. I didn't add custom pipeline to my settings.py.\n. Will give it a try! Thanks!\n. Now working. I've fixed it. The problem was because I didn't fix the site url to 127.0.0.1:8000\n. Login to FB and go to the app, check for app website or url, there you can fix it. Let me know how it goes!\n. ",
    "silent1mezzo": "-1 Can't reproduce this issue on OS X or Windows.\n. ",
    "FrankBie": "Perhaps pycurl might solve your issue? - extending the twitter backend and use pycurl to do the urlopen\n. ",
    "dvinegla": "No quiero desactivar la asociaci\u00f3n con el email. Quiero que se asocie con el email. Pero si no defino el SOCIAL_AUTH_ASSOCIATE_BY_MAIL en el settings, no funciona.\n. ",
    "jleclanche": "This setting is still referenced in http://django-social-auth.readthedocs.org/en/latest/configuration.html\nAnd I can't find anywhere in the docs what it's replaced by.\n. ",
    "thomastinu": "Thanks for the quick reply. Next time, I will make sure that if its a query, then I will send a mail to the mailing list you mentioned. \n. ",
    "andrusha": "+1\n. I'm not sure how to properly decouple BaseAuth from HttpRequest. Any tips on it?\n. Here what I got:\n```\nEnvironment:\nRequest Method: GET\nRequest URL: http://localhost:8000/accounts/new_association/\nDjango Version: 1.4\nPython Version: 2.7.1\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'grappelli.dashboard',\n 'grappelli',\n 'django.contrib.admin',\n 'south',\n 'storages',\n 'taggit',\n 'compressor',\n 'debug_toolbar',\n 'django_openid_auth',\n 'mailer',\n 'emailconfirmation',\n 'metron',\n 'sorl.thumbnail',\n 'social_auth',\n 'apps.movies',\n 'apps.girls',\n 'apps.galleries',\n 'apps.reviews',\n 'apps.accounts')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.gzip.GZipMiddleware',\n 'django.middleware.http.ConditionalGetMiddleware',\n 'debug_toolbar.middleware.DebugToolbarMiddleware')\nTraceback:\nFile \"/Library/Python/2.7/site-packages/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, callback_args, *callback_kwargs)\nFile \"/Users/andrew/Projects/jporn/apps/accounts/views.py\" in new_association\n  36.     response = consumer_oauth_url_request(YahooOAuth, url, request.user.id, '/')\nFile \"/Library/Python/2.7/site-packages/django_social_auth-0.6.9-py2.7.egg/social_auth/backends/utils.py\" in consumer_oauth_url_request\n  18.     oauth_info = user.social_auth.objects.filter(\nException Type: AttributeError at /accounts/new_association/\nException Value: 'RelatedManager' object has no attribute 'objects'\n```\nAlso, API might not necessary return JSON, it is better to leave to user decide how to parse result.\n. Now this:\n```\nEnvironment:\nRequest Method: GET\nRequest URL: http://localhost:8000/accounts/new_association/\nDjango Version: 1.4\nPython Version: 2.7.1\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'grappelli.dashboard',\n 'grappelli',\n 'django.contrib.admin',\n 'south',\n 'storages',\n 'taggit',\n 'compressor',\n 'debug_toolbar',\n 'django_openid_auth',\n 'mailer',\n 'emailconfirmation',\n 'metron',\n 'sorl.thumbnail',\n 'social_auth',\n 'apps.movies',\n 'apps.girls',\n 'apps.galleries',\n 'apps.reviews',\n 'apps.accounts')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.gzip.GZipMiddleware',\n 'django.middleware.http.ConditionalGetMiddleware',\n 'debug_toolbar.middleware.DebugToolbarMiddleware')\nTraceback:\nFile \"/Library/Python/2.7/site-packages/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, callback_args, callback_kwargs)\nFile \"/Users/andrew/Projects/jporn/apps/accounts/views.py\" in new_association\n  36.     response = consumer_oauth_url_request(YahooOAuth, url, request.user.id, '/')\nFile \"/Library/Python/2.7/site-packages/django_social_auth-0.6.9-py2.7.egg/social_auth/backends/utils.py\" in consumer_oauth_url_request\n  24.     response = '\\n'.join(urlopen(request.to_url()).readlines())\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\" in urlopen\n  126.     return _opener.open(url, data, timeout)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\" in open\n  400.             response = meth(req, response)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\" in http_response\n  513.                 'http', request, response, code, msg, hdrs)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\" in error\n  438.             return self._call_chain(args)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\" in _call_chain\n  372.             result = func(*args)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib2.py\" in http_error_default\n  521.         raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\nException Type: HTTPError at /accounts/new_association/\nException Value: HTTP Error 401: Authorization Required\n```\nLocal vars for def new_association(request):\n```\nVariable    Value\nurl \n'http://social.yahooapis.com/v1/me/guid?format=json'\nrequest \n\",\\nPOST:,\\nCOOKIES:{'csrftoken': '32aa49dce295521d54a533c8ec2fcb13',\\n 'djdt': 'hide',\\n 'sessionid': '7920c10f3f657c2ffd52b04937009104'},\\nMETA:{'Apple_PubSub_Socket_Render': '/tmp/launch-70PsQc/Render',\\n 'Apple_Ubiquity_Message': '/tmp/launch-UH9cai/Apple_Ubiquity_Message',\\n 'COMMAND_MODE': 'unix2003',\\n 'CONTENT_LENGTH': '',\\n 'CONTENT_TYPE': 'text/plain',\\n 'CSRF_COOKIE': '32aa49dce295521d54a533c8ec2fcb13',\\n 'DISPLAY': '/tmp/launch-1MXkMy/org.x:0',\\n 'DJANGO_SETTINGS_MODULE': 'settings',\\n 'EDITOR': 'vim',\\n 'GATEWAY_INTERFACE': 'CGI/1.1',\\n 'GREP_COLOR': '1;32',\\n 'GREP_OPTIONS': '--color=auto',\\n 'HOME': '/Users/andrew',\\n 'HTTP_ACCEPT': 'text/html,application/xhtml+xml,application/xml;q=0.9,/;q=0.8',\\n 'HTTP_ACCEPT_CHARSET': 'UTF-8,*;q=0.5',\\n 'HTTP_ACCEPT_ENCODING': 'gzip,deflate,sdch',\\n 'HTTP_ACCEPT_LANGUAGE': 'en-US,en;q=0.8,ru;q=0.6',\\n 'HTTP_CACHE_CONTROL': 'max-age=0',\\n 'HTTP_CONNECTION': 'keep-alive',\\n 'HTTP_COOKIE': 'djdt=hide; csrftoken=32aa49dce295521d54a533c8ec2fcb13; sessionid=7920c10f3f657c2ffd52b04937009104',\\n 'HTTP_HOST': 'localhost:8000',\\n 'HTTP_USER_AGENT': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.168 Safari/535.19',\\n 'LC_CTYPE': '',\\n 'LOGNAME': 'andrew',\\n 'LSCOLORS': 'Gxfxcxdxbxegedabagacad',\\n 'OLDPWD': '/Users/andrew/Projects/django-social-auth',\\n 'PAGER': 'less',\\n 'PATH': '/Users/andrew/.rbenv/shims:/Users/andrew/.rbenv/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin',\\n 'PATH_INFO': u'/accounts/new_association/',\\n 'PWD': '/Users/andrew/Projects/jporn',\\n 'QUERY_STRING': '',\\n 'REMOTE_ADDR': '127.0.0.1',\\n 'REMOTE_HOST': '',\\n 'REQUEST_METHOD': 'GET',\\n 'RUN_MAIN': 'true',\\n 'SCRIPT_NAME': u'',\\n 'SERVER_NAME': '1.0.0.127.in-addr.arpa',\\n 'SERVER_PORT': '8000',\\n 'SERVER_PROTOCOL': 'HTTP/1.1',\\n 'SERVER_SOFTWARE': 'WSGIServer/0.1 Python/2.7.1',\\n 'SHELL': '/bin/zsh',\\n 'SHLVL': '1',\\n 'SSH_AUTH_SOCK': '/tmp/launch-vRDOvT/Listeners',\\n 'TERM': 'xterm-256color',\\n 'TERM_PROGRAM': 'Apple_Terminal',\\n 'TERM_PROGRAM_VERSION': '303',\\n 'TERM_SESSION_ID': 'E710B9E4-62CD-4E41-86DB-AD3C2054DC28',\\n 'TMPDIR': '/var/folders/cw/mjt358f94w3g4vn2cfh9kn1w0000gn/T/',\\n 'TZ': 'Asia/Tokyo',\\n 'USER': 'andrew',\\n 'VERSIONER_PYTHON_PREFER_32_BIT': 'no',\\n 'VERSIONER_PYTHON_VERSION': '2.7',\\n 'ZSH': '/Users/andrew/.oh-my-zsh',\\n 'ZSH_THEME': 'nicoulaj',\\n '': '/Users/andrew/Projects/jporn/./manage.py',\\n '__CF_USER_TEXT_ENCODING': '0x1F5:0:0',\\n 'vcs_info_msg_0': '.',\\n 'vcs_info_msg_1_': 'jporn/git/master !',\\n 'wsgi.errors': ', mode 'w' at 0x10db18270>,\\n 'wsgi.file_wrapper': ,\\n 'wsgi.input': ,\\n 'wsgi.multiprocess': False,\\n 'wsgi.multithread': True,\\n 'wsgi.run_once': False,\\n 'wsgi.url_scheme': 'http',\\n 'wsgi.version': (1, 0)}>\"\nconsumer_oauth_url_request\n\nYahooOAuth\n\n```\nLocal vars for consumer_oauth_url_request:\n```\nurl \n'http://social.yahooapis.com/v1/me/guid?format=json'\nrequest \n{'oauth_body_hash': '2jmj7l5rSw0yVb/vlWAYkK/YBwk=',\n u'oauth_callback': u'/',\n u'oauth_consumer_key': u'dj0yJmk9WlRtRnRhM2xVY3U3JmQ9WVdrOVFtMWtXVFJYTjJNbWNHbzlNVE0xT1RBME16RTJNZy0tJnM9Y29uc3VtZXJzZWNyZXQmeD0wYg--',\n u'oauth_nonce': u'77014517',\n 'oauth_signature': 'hw1TFS7Atmr0+zgCwOM7AQDLO3Y=',\n 'oauth_signature_method': 'HMAC-SHA1',\n u'oauth_timestamp': u'1336474599',\n u'oauth_token': u'A=nqLHgcfZlSac4U3xPAg6DswllHAYvhskWZ.WMiawKbypE4apxOQxz4YW3d5n3mirIkQyKO5es5_rIRwGe6YRF8nPDkXt1BzSamb2sTQj9Jq3kWcLhNCbgaoofdLcsKyhiw4oh16XX1jjzIPClUw_jb0m0kKSZCnM9R02GC99pdelPdNVK2QGvwvCV..Dtn7oDVtE9wo.aTsvTNy8L0gOKxFw6xf0v19D9FCU4COCYZDeHOSWIH5IA5kawgFRnLLbi7rFE0d8kosfiL_Y1b5.VoaI7fbqRPSYMIACUFQmqazPkiDxAbpMGT_bIXcz5I693FojYwywpCMhVi9WRb4VJYkgxw5usdCxJS1.1opC34NKkA4Y.ZKrmR_shdeW0Xh5hllzw56UB_Ek4Qwq94lBeZuZ2hAaG64Q8KrJlh3vHXo.HnxyJDFd2pMyR6Te8Byr.5vCDEuEessskvm8srlywwnb83wddLzE2uI1xUKskGsroqBy.iZgnAm_rrkX6RYf1j..Z2FPx1AtTmkbbNvzQnZJGFOyoon4JtV01VPSp2_rp8KClAeP10.r8Ho.p8BlTIzZsp8lDn7m.1V9NlIH6Hzq29zOz93GupEkop12hHnyNo01xzOYIDXoQ0GxwEUCC4rCbelNYH2b6ydtSwwOO0m38cwVjSZhclTwWjqd2Bmv7lMlvsgXECS9oRtNabHj9r34lsQO3H7kdYEGN3UHeOI.CziNsaHdbYJ3Rx9ETvZ3h76y7FlNadKQG0fPrKsbg3oQtcVgXYG3tfKQG1mPeGJKfAus2_Oomg49TRIYFoCmYr1sT0x3wqrFSbW9Z5K2JRM2k6fma1k-',\n u'oauth_version': u'1.0'}\ntoken \n\njson  \nTrue\nredirect_uri  \n'/'\nuser  \n\noauth_info\n\nuser_or_id\n12\nbackend \n\n```\nLooks like it wasn't signed properly.\n. Thanks, works well now.\n. Yeap, this comment is redundant anyway.\n. Yes, also returning None is not a Pythonic way to handle exceptions.\n. Fixed in #339\n. Fixed in #339\n. ",
    "estebistec": "@marcofucci What was your specific motivation for replacing UserSocialAuth? Was it to use separate storage or some other reason. I'm investigating doing something similar but for all the models so that alternate storage (e.g., noSQL) is possible.\n. and for the record, yes I tested these changes with the example app (and twitter login)\n. I think these phases will need to be extended, although I'm not sure how soon. The way I'm headed right now the configured storage is going to be very ORM-like (right now my alternate is mongoengine). It's probably good to see this work, but then I should probably proceed to abstract those concepts away and make the necessary changes around the core lib and pipelines to not use ORM-specific constructs (object managers, specific query syntax, etc.)\n. What else could cause an \"Incorrect authorization service\" error when I know my backend is being loaded and the key/secret are there? Worked in the example app when all I did was put the django models behind config (as you see here). Now when I switch in my mongoengine models I can't get past this error.\nI'm pdb'ing through slowly to see if I can find out where it barfs...\n. No/No. It happens after the return from twitter. An \"error\" backend is requested, and of course that doesn't exist. I'll work through it...\n. Almost got it... I think I'm down to the last error...\nOne note: I think the best thing for this will ultimately be hiding the models completely from the core social_auth code and adapting it with a pattern like this: http://charlesleifer.com/blog/django-patterns-pluggable-backends/ Otherwise, the alternates will need to look too similar to be worth the trouble :/\n. So yeah, definitely enough special methods there to make the default pipelines work, so that I think inserting a backend abstraction is warranted. How do you feel about this direction? Would it be acceptable? If I go flesh it out it will look a lot cleaner than the current models modules + collection of methods for where the model syntaxes diverge.\n. Didn't mean to close :/\n. Because that code was copied from the django models :) I worry about cleanup like that once the whole thing is looking better.\n. Okay, so that actually covers the bulk of raw data model usage throughout the code. Remaining:\n- The assumption that objects returned have the specific properties used (just need to document this or provide finer-grained methods to getting specific info)\nQuestions to you:\n- The base SocialAuthBackend class extends ModelBackend. What is gained by doing this and what's the danger to alternate storage? Since a Django site should otherwise provide either ModelBackend auth or an alternate (see [1]), is there some other common functionality being used there or can we just have it sub-class object?\n- The utils model_to_ctype and ctype_to_model are used in from_session_dict for something around \"partial pipelines\". What is this functionality and what is required of object conversion with alternate storage? If it's just dicts... mongodb objects translate to and from them pretty easily. But if there are other requirements being fulfilled by the ContentType model, that would be good to know.\nSo, these changes are feeling like they could lead to a pretty significant gutting of the storage guts in here. That's why I'd like some feedback soon on how you'd feel about such changes. If there's going to be a veto, that would be good to know sooner than later, or if you have preferences as to the overall direction.\nRight now, instead of implementing specific backend classes for storage models, the modules themselves are the \"backends\" and if we keep this I'd need to doc up the contract for these modules.\n. BUMP Has it become an overwhelming changeset? :/\n. Cool. Thanks for your time. I don't blame you. I really do fear it's gotten bigger than I'd hoped and it's going to uncover many more considerations before calling it done (chief among them, tests!)\n. Okay, so I'm going to run down your changes just to make sure I understand:\n- Removed the conf module. I liked this concept for centralizing default config values, but if it's not your style, no problem.\n- Converted the module methods to be model class methods. This was a point I struggled a bit with as I hate to lock the protocol of backends down to class-based objects that look exactly like Django ORM objects. On the other hand, this is still a good start and perhaps the storage API could be made more general later on. At some point I can see somebody wanting to use some kind of storage that doesn't fit into ORM-like objects.\n- Created the mixins to remove duplicate code between the model flavors. Thanks for doing that work.\n- No new doc yet. Do you believe this feature should be kept private for now (or indefinitely)?\n- Tests: what is your confidence level in the tests ensuring these changes don't break something that we missed?\nOn the last two points, I'm will to write any needed doc/tests. I held off on that and creating the mixins until I knew this was actually going to happen. It seems like you're generally positive on these changes, which I'm glad for. I'll be interested in your opinion on test coverage. This changeset turned out to be bigger than I at first expected and so I just want to be sure we don't break anything. I'll be perusing and running the tests a bit to get a feel for this.\nThanks again for your time on this request!\n. Yeah, I'll try to add some doc by the end of this week. Would that be soon enough?\n. That last commit contains some high-level info on the new setting. See what you think.\n. Wait a sec... isn't what I described for middleware supposed to be what:\nSOCIAL_AUTH_PROCESS_EXCEPTIONS = 'social_auth.utils.log_exceptions_to_messages'\ndoes?\n. Except I can't get that feature to work with the above settings and SOCIAL_AUTH_RAISE_EXCEPTIONS=False.\n. Pull with just the new exception type at https://github.com/omab/django-social-auth/pull/430. I've implemented the middleware, but I don't want to push that code until the question above is answered/clarified.\n. I see. Then i'll polish up what I've got and submit it tomorrow.\n. @tijs Pull request for middleware over here: https://github.com/omab/django-social-auth/pull/432\n. Yeah, I just wanted to notify you so you can give any comments you wanted to.\n. Cool. I'll see about adding that in tonight.\n. Yeah, this seems a lot simpler. It wouldn't prevent us from later on figuring out what the correct configuration points are an providing something like what I have now as one of the sub-classes. Change forthcoming.\n. If we like this, or I get it modified to sufficient liking, I'll add doc about it as well (may as well not doc it yet if it may change :)).\n. BTW, so is there no way to get the original target URL from before the user initiated login or associate (i.e., whatever page they were on when they decided to do one of those?)\n. Yeah. Then there's not really a good default for us to do in that regard.\n. There's a sketch of the simpler idea.\n. I can probably add some doc to it tomorrow.\n. Oh yeah, adding it to the example site would be good too.\n. Added some doc and an example subclass in the example site.\n. Ah, some are on the auth-backend, and some just on the social backend? Seems like we could normalize that to avoid the switching logic.\n. Overview here if you aren't familiar with behance: http://www.behance.net/dev\n. Ug, I should have made some doc changes here, shouldn't I? I'll submit another pull sometime this week with some doc additions.\n. No, what you added looks good. Thanks!\n. ",
    "marcofucci": "@estebistec we had a similar UserSocialAuth object that we wrote before integrating django-social-auth and that had already all we needed to authenticate the user and store additional data (such as facebook info).\nMaking UserSocialAuth optional worked just great and we didn't have to hack the remaining code at all.\n. ",
    "jordanperr": "There's a typo up there that drove me crazy trying to debug.\nGOOGLEOAUTH2_AUTH_EXTRA_ARGUMENTS\nshould be\nGOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS\nIt took a bit of trial and error to figure that out... Might be worth explicitly adding this to the documentation.\n. ",
    "yrik": "Still have this problem.\nUsing https://github.com/omab/django-social-auth/ repo to install social_auth package.\nGOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {'access_type': 'offline'}\nGOOGLE_OAUTH_EXTRA_SCOPE = ['http://www.google.com/reader/api',\n    'http://www.google.com/reader/atom/']\n. It was my mistake. Removed this comment from issue.\nEverything ok. It was window for multiple accounts.\n8 \u043c\u0430\u044f 2012, \u0432 15:24, Mat\u00edas Aguirre \u043d\u0430\u043f\u0438\u0441\u0430\u043b(\u0430):\n\nIt shouldn't happen as it's shown on the demo site, do you have any more\ndetails?\nExcerpts from Iurii Kriachko's message of 2012-05-08 08:51:01 -0300:\n\nHas the same problem.\nIt stil exist with oauth2.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/342#issuecomment-5572845\nMat\u00edas Aguirre (matiasaguirre@gmail.com)\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/342#issuecomment-5573318\n. \n",
    "ads901119": "After setting SOCIAL_AUTH_RAISE_EXCEPTIONS = False and both SOCIAL_AUTH_BACKEND_ERROR_URL and LOGIN_ERROR_URL to some meaningful url, I still get AuthCanceled at url /accounts/complete/facebook/\nWhat am I missing? I'm using the latest version 0.7.2 in pip repo\n. ",
    "amosjyng": "I am getting a different traceback using OpenID authentication with django-social-auth version 0.7.13\nTraceback (most recent call last):\n  File \"... project folder .../venv/lib/python2.7/site-packages/django/core/handlers/base.py\", line 111, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n  File \"... project folder .../venv/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"... project folder .../venv/lib/python2.7/site-packages/social_auth/decorators.py\", line 29, in wrapper\n    return func(request, request.social_auth_backend, *args, **kwargs)\n  File \"... project folder .../venv/lib/python2.7/site-packages/social_auth/views.py\", line 42, in complete\n    return complete_process(request, backend, *args, **kwargs)\n  File \"... project folder .../venv/lib/python2.7/site-packages/social_auth/views.py\", line 105, in complete_process\n    user = auth_complete(request, backend, *args, **kwargs)\n  File \"... project folder .../venv/lib/python2.7/site-packages/social_auth/views.py\", line 190, in auth_complete\n    return backend.auth_complete(user=user, request=request, *args, **kwargs)\n  File \"... project folder .../venv/lib/python2.7/site-packages/social_auth/backends/__init__.py\", line 484, in auth_complete\n    raise AuthCanceled(self)\nIn my settings I have \nDEBUG = False\n...\nLOGIN_URL          = '/user/login/'\nLOGIN_REDIRECT_URL = '/'\nLOGIN_ERROR_URL    = '/user/login-error/'\nSOCIAL_AUTH_BACKEND_ERROR_URL = LOGIN_ERROR_URL\nSOCIAL_AUTH_COMPLETE_URL_NAME  = 'socialauth_complete'\nSOCIAL_AUTH_ASSOCIATE_URL_NAME = 'socialauth_associate_complete'\nSOCIAL_AUTH_RAISE_EXCEPTIONS = False\nI can access '/user/login-error/ successfully if I enter that URL directly.\nHow can I not get the server to generate a 500 error when the user cancels a login?\nThanks!\n. I'm having the same problem. How did you fix the site url to 127.0.0.1:8000? And I thought the documentation says that fixing the redirect URL to localhost?\nSorry for the dumb question :/\n. Ahh, thanks, but it complains\nApp Domains: 127.0.0.1 is not a valid domain\nI tried creating a test app that points to a test Heroku server. The only settings I've put on the FB app are: http://imgur.com/IAClC2Y\nAll the changes I made in my code were adding\n```\nAUTHENTICATION_BACKENDS = (\n    'social_auth.backends.facebook.FacebookBackend',\n    ...\n)\nFACEBOOK_APP_ID = os.environ['FB_APP_ID']\nFACEBOOK_API_SECRET = os.environ['FB_API_SECRET']\nFACEBOOK_EXTENDED_PERMISSIONS = ['email']\n```\nto my settings.py, and finally adding a link to  {% url \"socialauth_begin\" \"facebook\" %}. I pushed my changes to the Heroku staging site, but still no luck.\nAm I missing anything? My logins for Google, Yahoo, Twitter, and MSN Live all work fine, it's just Facebook that's giving me problems right now, and I don't know what's wrong other than \"An error occurred.\"\nMany thanks!\n. Ahh, I didn't put that there. Now I have, but I am still getting this error:\n\nright after I click on the Facebook link on my website, before I even get a chance to authenticate myself with Facebook.\nI tried removing my \"App Domains\" setting too. The error still appears on Facebook. Any thoughts as to why this might be?\nThank you!\n. No, I just added /complete/facebook to the end of my Heroku URL and kept testing on Heroku...\nOh gosh... turns out I mixed up my Facebook App ID with the secret. D'oh!\nThank you all so much for the patience and help! :)\n. Gotta say, this looks awesome, Dennis!\n. ",
    "catskul": "Caution, this will not work if INSTALLED_APPS includes 'debug_toolbar' as it wraps the middleware and prevents the exception from percolating through the process_exception functions \n. ",
    "faxioman": "Yes, and all social auth urls are working. Writing socialauth_begin inside quote, template is parsed correctly ... but I can't understand why.\nThanks\n. Ehm...sorry for my english :)\nThis is the working code:\n{% url 'socialauth_begin' 'facebook' %}\n. Yes, the problem is that it works only with quotes around socialauth_begin...\n. Great! Thanks... I'm new to Django, and I didn't know the old behaviours. Thanks again!\n. ...and probably you don't get that error because you don't use {% load url from future %} in your template.\nDo you think could be useful to update the documentation?\n. You're right.\nI have django social auth 0.6.7 in a production environment, where probably setting request.user to ConsumerUser wasn't mandatory.\nOk, thanks for your suggestion ... and you are doing really a great job with django social auth!\n. Hi omab, sorry for the delay.\nUnfortunately, this is not an option for us.\nWe are using some web form inside an iPhone app (using an UIWebView) ... and the login page can be cached so is not reloaded.\n. No, because in a situation inside the iPhone app I need the association :(\nThis is what I'm thinking to do:\nI'll create new urls like '/new-login/facebook/' managed by a view that logs the user out and then redirect the browser to '/login/facebook'.\n. Ok, this is what I made.\nThis view:\npython\n@never_cache\ndef social_login(request,backend):\n    logout(request)\n    qs = request.GET.urlencode()\n    qs = '?%s' % qs if qs else ''\n    return redirect(reverse('socialauth_begin', args=[backend])+qs)\nwith this url configuration:\npython\nurl(r'^login/(?P<backend>[^/]+)/$', views.social_login, name='social_login'),\nand in my template, where I want to force the login of a new user, even if a current user is logged-in:\nhtml\n<button id=\"facebook_login_button\" onclick=\"location.href='{% url 'social_login' 'facebook' %}?next={{ next|urlencode:\"\" }}'\">{% trans \"Login with Facebook\" %}</button>\n. Yes, of course.\nBut how can I edit this project at readthedocs?\n. Yes, I can ... even if I think the standard model __eq__ comparison by pk is right.\nThe problem is that UserSocialAuth.get_social_auth use Django select_related to obtain user, which doesn't load pk attribute.\nPheraps, is better to load user without using select_related method, in order to preserve model __eq__ comparison.\nAnyway, in the meanwhile I proceed with a custom __eq__ method, using id attribute.\n. This is my backend for addressing this problem:\n``` python\nfrom social_auth.backends.facebook import FacebookBackend, FacebookAuth\nFacebook configuration\nFACEBOOK_ME = 'https://graph.facebook.com/me?'\nACCESS_TOKEN = 'https://graph.facebook.com/oauth/access_token?'\nclass FacebookMobileBackend(FacebookBackend):\n    name = 'facebookmobile'\nclass FacebookMobileAuth(FacebookAuth):\n    AUTH_BACKEND = FacebookMobileBackend\ndef auth_extra_arguments(self):\n    auth_settings = (super(FacebookMobileAuth, self).auth_extra_arguments()).copy()\n\n    #when display = touch is requested, set to touch only if browsing with a mobile device\n    if (auth_settings.get('display') == 'touch' and (not self.request.is_mobile)):\n        del auth_settings['display']\n\n    return auth_settings\n\nBackend definition\nBACKENDS = {\n    'facebookmobile': FacebookMobileAuth,\n}\n```\nAnd this is the middleware for adding is_mobile to request:\n``` python\nAdapted by Fabio Masini from http://detectmobilebrowsers.com/\nPorted by Matt Sullivan http://sullerton.com/2011/03/django-mobile-browser-detection-middleware/\nimport re\nreg_b = re.compile(r\"android.+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino\", re.I|re.M)\nreg_v = re.compile(r\"1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| ||a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|e\\-|e\\/|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(\\-|2|g)|yas\\-|your|zeto|zte\\-\", re.I|re.M)\nclass DetectMobileBrowser():\n    def process_request(self, request):\n        request.is_mobile = False\n        if request.META.has_key('HTTP_USER_AGENT'):\n            user_agent = request.META['HTTP_USER_AGENT']\n            b = reg_b.search(user_agent)\n            v = reg_v.search(user_agent[0:4])\n            if b or v:\n                request.is_mobile = True\n```\n. ",
    "tymofij": "That would indeed be even better.\n. The middleware code relies on the fact that each backend has name, which is not true for e.g. Google OAuth2\nShould the code be changed or backends ?\n. hmm..\nI had AUTHENTICATION_BACKENDS = ( 'social_auth.backends.google.GoogleOAuth2Backend',)\nand invoked the process with going to href=\"{% url socialauth_begin 'google-oauth2' %}\nand on cancelling the request got exception that name is absent in GoogleOAuth2 class at https://github.com/omab/django-social-auth/blob/master/social_auth/backends/google.py#L189 (it went away when I actually added name there)\n. ",
    "bacher09": "Look at this\nThis is just for OAuth2.\n. I also do some change in ConsumerBasedOAuth, with this code in some backends must be more clear, without monkey-patch\nI wrote example for flickr, I don't tested it but it should work.\nIf you think  it's good I'll change other backends, but I can't test all backends.\n. I've updated my fork, but need someone to tested it, I don't have key to flickr.\nI think need to someone tested it before merge.\nAlso I want ask, can I write documentation for vkontakte backend ?\n. Please, test fitbit, it was similar and I edit it too.\nI also added doc.\n. On my system it work fine.\njtyrrell seems that check isinstance not gives result or it does not exists, can you load file facebook.py to any pastebin. Maybe your files differ from files in HEAD.\nI also noticed that method enabled seems unnecessary when exists this.\n. Omab my opinion that user_data method must return  dict or raise an exception, if API returns bad values it should return empty dict or raise exception. That means that isinstance check should done in user_data method.\nMaybe if API returns \"false\" need repeat request and if it return \"false\" again then raise exception ?\njtyrrel you may install it from git and then it wouldn't return an error, but like omab said this fix may hiding real issue.\n. ",
    "wondernet": "Thanks, it works ok now for me. \n. ",
    "night-crawler": "mydomain.lol - is a subst for a real domain that works fine. App type is Web and Sandbox disabled. Other settings in django-social-auth are default. Also, it may be useful, it waits an answer for ~1min, and the next i see - this err message.\n. @salomo851, i put that code into the top of my views, and it works fine! Thank you!\nHere is the same code for easy copy-paste:\n```\nimport httplib, ssl, urllib2, socket\nclass HTTPSConnectionV3(httplib.HTTPSConnection):\n    def init(self, *args, kwargs):\n        httplib.HTTPSConnection.init(self, *args, kwargs)\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout)\n    if self._tunnel_host:\n        self.sock = sock\n        self._tunnel()\n    try:\n        self.sock = ssl.wrap_socket(sock, self.key_file, self.cert_file, ssl_version=ssl.PROTOCOL_SSLv3)\n    except ssl.SSLError, e:\n        print(\"Trying SSLv3.\")\n        self.sock = ssl.wrap_socket(sock, self.key_file, self.cert_file, ssl_version=ssl.PROTOCOL_SSLv23)\n\nclass HTTPSHandlerV3(urllib2.HTTPSHandler):\n    def https_open(self, req):\n        return self.do_open(HTTPSConnectionV3, req)\nurllib2.install_opener(urllib2.build_opener(HTTPSHandlerV3()))\n```\n\nAre you using the python from MacPorts?\n\nI use debian wheezy with python from repos, version is 2.7.2-8\nThanks again! I'll check if any other auth-backends work fine with this workaround.\n. vkontakte, twitter, mailru, google-oauth2, github, dropbox, linkedin, yandex, yahoo, instagram, flickr, foursquare works fine (i see, this check was not necessary, but %s). And also with fb-backend i got regirect back to /profile/#_=_, but it should be /profile/. It is not critical for me, but..\n. Ok, i will use /login/<backend>/, but what about creating users instead of association? I should use pipeline?\n. ",
    "swimorsink": "I spent a long time trying to figure this one out - the url that the facebook.py code is trying to fetch there on line 100 is \nhttps://graph.facebook.com/oauth/access_token?code=\nBasically, it's the last step that the library tries to carry out in order to request a long term access token.  When I printed that url out and went to it in my browser, it worked fine.  The problem appears to be related to urllib2 and certain https websites.\nSee http://stackoverflow.com/questions/9835506/urllib-urlopen-works-on-sslv3-urls-with-python-2-6-6-on-1-machine-but-not-wit\nWe found that the problem exists with python 2.7.3 but not with python 2.7.1, so our ultimate solution was to throw up our hands and revert to 2.7.1.  Not a very good solution - we should probably submit a patch to set up urllib2 correctly in facebook.py\n. Oh, I should also add - I see your python version is 2.7.2 above.  Are you using the python from MacPorts?  We found that python 2.7.2 revision 1 worked fine, but revision 4 did not, and I believe the version of openssl changed somewhere in between there, which was the ultimate cause of the problem.\n. FYI, I found a workaround for this issue.  It works using the latest python version on mac - 2.7.3.  At the top of my login handler (NOT facebook.py), before I load my login page - I run the following code taken from Ian Weatherbee on http://bugs.python.org/issue11220.\ncustom HTTPS opener, banner's oracle 10g server supports SSLv3 only\nimport httplib, ssl, urllib2, socket\nclass HTTPSConnectionV3(httplib.HTTPSConnection):\n    def init(self, _args, _kwargs):\n        httplib.HTTPSConnection.init(self, _args, _kwargs)\ndef connect(self):\n    sock = socket.create_connection((self.host, self.port), self.timeout)\n    if self._tunnel_host:\n        self.sock = sock\n        self._tunnel()\n    try:\n        self.sock = ssl.wrap_socket(sock, self.key_file, self.cert_file, ssl_version=ssl.PROTOCOL_SSLv3)\n    except ssl.SSLError, e:\n        print(\"Trying SSLv3.\")\n        self.sock = ssl.wrap_socket(sock, self.key_file, self.cert_file, ssl_version=ssl.PROTOCOL_SSLv23)\nclass HTTPSHandlerV3(urllib2.HTTPSHandler):\n    def https_open(self, req):\n        return self.do_open(HTTPSConnectionV3, req)\ninstall opener\nurllib2.install_opener(urllib2.build_opener(HTTPSHandlerV3()))\nThis ensures that the sslv3 handler is installed before any other urllib2 code runs, which for me, fixes the issue coming from facebook.py.\n. Thanks for the info.  I had glanced at #342 before and had mistakenly written it off because I assumed it only applied when  requesting additional scopes; however, It does not appear to matter if you request an additional scope or not.  Oauth1 always asks for permission.  Sigh.\n. ",
    "dkull": "0.6.9 still has this issue. I made a macro using iMacro(FF addon) to social-auth login/logout repeatedly to hit this error - Facebook sometimes returns \"false\" instead of valid JSON.\n. ",
    "gauravsjbrana": "Hey omab, thanks for the quick reply, the page you mentioned does include the below attached excerpt(see below). But perhaps, I might be better off being a little more direct. I would like to store the user's additional profile properties from facebook (let's assume I have all the permissions). but I'm finding it really hard to figure where and what code to alter. Are there any examples of someone doing this? I did read something about it (http://readthedocs.org/docs/django-social-auth/en/latest/signals.html?highlight=gender), but that wasn't very helpful. Hope you can help\nthanks,\nG\nBasic Information\nWhen a user auths your app and you request no additional permissions, your application will have access to only the user's basic information. By default, this includes certain properties of the User object such as id, name, picture, gender, and their locale. Certain connections of the User object such as the Friends connection are also available. If the user has made more of their data public, more information will be available.\n. got it, Thanks omab, great work by the way!\n. ",
    "fadykamal": "thank you for helping, just did it :)\nOn Mon, Apr 23, 2012 at 8:10 PM, Mat\u00edas Aguirre <\nreply@reply.github.com\n\nwrote:\nCheck the doc for FACEBOOK_EXTENDED_PERMISSIONS\nhttp://django-social-auth.readthedocs.org/en/latest/backends/facebook.html\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/324#issuecomment-5287555\n. \n",
    "pyzen": "is there any way to request more permission after login ? I mean not initial permissions, some time a site need a permission from the user for an action to perform. In those situation user need to accept the new permission etc .. \n. ",
    "XiaoHaibinaragoncs": "On 04/28/2012 01:12 PM, Mat\u00edas Aguirre wrote:\n\nDo you have any traceback? Some details about how to reproduce it?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/omab/django-social-auth/issues/329#issuecomment-5394500\nIt is resolved when I mapping the IP and domain of facebook in \n/etc/hosts. But I do not understand why.\n. \n",
    "dorfire": "Oh. Didn't realize that...\n. ",
    "bartTC": "Same here. I deleted that user account and tried again, then the email was successfully saved. \n. ",
    "rajlenin": "We added retry through queues. But for some users, you never get the email(through retries and graph explorer) which is a mystery. \n. Closing this one as it is the issue with Facebook. Opened #416 requesting the facebook scope to be dynamic.\n. Request object is not passed to the backend classes(in this case FacebookAuth).  So, the only way is to use a global variable(for scope) and override auth(set the global scope from request param and reset it to default after auth_process) and subclass FacebookAuth(get scope from global variable). Let me know if there is more elegant way to do this.\n. Thanks for pointing it out. Will look in to it.\n. That's much cleaner and it works. You can close this issue or keep it open for tracking if you plan to add this in the future.\n. ",
    "SacNaturalFoods": "I'll take a look at switching to the Oauth2 implementation.  Thanks for clarifying.\n. ",
    "timbroder": "I'm seeing this happen on my oauth2 implementation. \nI'm hoping its just a configuration issue but...\nThis is how I'm currently configured https://gist.github.com/3048955\nIt happens with or without the GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS line\nAny ideas?\nThanks for a great app!\n. hmm. sorry to bother again. I just tried a fresh django install\nthese are the packages I have installed (from pip):\nDjango==1.4\nMySQL-python==1.2.3\ndjango-social-auth==0.7.0\nhttplib2==0.7.4\noauth2==1.5.211\npython-openid==2.2.5\nwsgiref==0.1.2\nMy full settings.py file: https://gist.github.com/3066735\nMy full urls.py file: https://gist.github.com/3066737\nI cleared all recent history in firefox\nwent to http://localhost:8000/login/google-oauth2/\nlogged into google, accepted permission, got redirected back to app, which 404's not knowing where accounts/profile was (expected)\ncleared all recent history in firefox again, went back to http://localhost:8000/login/google-oauth2/, logged in again, was asked to approve permission again\nAPI access settings: http://screencast.com/t/sidWWkqU2e\nAm I missing something? Should I try a checkout of django-social-auth instead of from pip?\nThanks again\n. ",
    "redpublic": "Thanks, haven't mentioned it in docs.\n. ",
    "pennersr": "Associating by e-mail seems to be the default. This opens up a major security vulnerability in many existing DSA deployments that have OpenID enabled. Therefore, I feel you should at least change the defaults, perhaps even (temporarily) disable this feature completely.\n. ",
    "brycenesbitt": "There's another way in also:\nIf someone hacks an account at any of the social auth providers, they can then associate to unprotected django-socialauth sites, even if the legitimate user never set up such a linkage.\n. ",
    "Camel": "Right, but I didn't unfortunately. I have that facebook backend added as required.\n. Thanks for the quick response, but I think I'm just going to reimage the machine and see if I can fix the issue with that. If the issue still exists, I'll get back to you -- otherwise, I'll close the issue.\n. ",
    "ashwini-silicus": "What was the solution for this? I am facing same error. Please update. . ",
    "hannesstruss": "sure thing, done!\n. normally, DSA overwrites e.g. the email address of the user with the one coming from Facebook. it you set SOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email',], it will leave the email address untouched.\n. That's odd, indeed, I can't reproduce this. You could try debugging this with PDB (http://docs.python.org/library/pdb.html), maybe you have a custom pipeline element that messes with is_new, or you changed the pipeline order?\n. ",
    "Glideh": "Cool setting but it seems not taken into account for me :(\nI don't know how to debug it\n(Also it does not appear preformatted like others in the doc)\n. What I did is I have set\nSOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email', 'first_name', 'last_name']\nIf I understand well these fields should not be overritten if the user (already existing and associated) logs in with DSA (example by clicking on facebook link from the login page).\nThese fields should only be written for newly created users right ?\nIn my project they are still overwritten even when I log with DSA.\n. I didn't even thought about gdb. I'll try and tell you what I see\n. ",
    "sfdye": "@omab hey i just solved the problem. in  \\django\\contrib\\admin\\templates\\admin\\change_list.html (the django nonrel fork folder under my project), i comment out the filter block, and it's working again.\n{# {% block filters %} #}\n  {#   {% if cl.has_filters %} #}\n  {#     <div id=\"changelist-filter\"> #}\n  {#       <h2>{% trans 'Filter' %}</h2> #}\n  {#       {% for spec in cl.filter_specs %}{% admin_list_filter cl spec %}{% endfor %} #}\n  {#     </div> #}\n  {#   {% endif %} #}\n  {# {% endblock %} #}\nI think it may help other social auth users with nonrel if you report this issue. Thanks.\n. no longer use django nonrel. and seems issue solved\n. ",
    "JohnieLee": "Can we reopen this issue?  I just came across this on a new django-nonrel + social-auth stack.  This problem also occurs when you try to check if a user has permissions for an action.  The following would throw the same error:  \n{{ perms.change_message }}\nI also saw that someone forked social-auth for non-rel here: https://github.com/antoviaque/django-social-auth-norel \nIt seems like they were trying to fix this same problem.  I haven't dived into the code yet, but this looks relevant:\nhttps://github.com/antoviaque/django-social-auth-norel/commit/972e79b4b54574d99ecbef0c8849e547877bd27d\nIt looks like they replaced the django.contrib.auth.backends.ModelBackend with one from permission_backend_nonrel.  \nThat code doesn't exist in HEAD of this repository anymore, so if you can provide some pointers on where to look for that, that would be helpful.\n. After further investigation, this is what I've found.\nDjango-nonrel has the following line in the AllValuesFilterSpec.\nhttps://github.com/django-nonrel/django-nonrel/blob/develop/django/contrib/admin/filterspecs.py#L246\nIt uses queryset.distinct().  Distinct is not supported by the djangotoolbox/mongodb.  This is what is throwing the error.\nThe filter is triggered by the List_filter in social_auth/admin.py.  In my forked branch, I've commented out the list_filter and it works for me to load up the page.\nhttps://github.com/tazzy531/django-social-auth/commit/048b6452fea55a8fc2fb98b7ad6d87e94e5d38ad\nThis is obviously not a good solution because the root cause is in django-nonrel, not django-social-auth.\nI came across this conversation on StackOverflow discussing this specific issue:\nhttp://stackoverflow.com/questions/13138816/django-admin-filters-and-mongodb-caught-databaseerror-while-rendering-this-que/13193947#13193947\nThey solved this by making it handle distinct in-memory (less than ideal.. but it works). \nhttps://github.com/BlueDragonX/django-nonrel/commit/4025327efbe5c17c6b77e0497c2b433819c42918\nSo, I think the proper solution is to solve this in django-nonrel rather than in django-social-auth.\nI leave it up to you whether you want to close this issue.\n. ",
    "ace-han": "This issue still exists?\nAll the library I install comes from pip install django-mongodb-engine only\nand I follow the tutorial, still got below error once login admin site, and click User link\n``` sh\n[10/Dec/2013 18:20:04] \"GET /admin/ HTTP/1.1\" 200 3249\nInternal Server Error: /admin/auth/user/\nTraceback (most recent call last):\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\core\\handlers\\ba\nse.py\", line 115, in get_response\n    response = callback(request, callback_args, callback_kwargs)\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\contrib\\admin\\op\ntions.py\", line 372, in wrapper\n    return self.admin_site.admin_view(view)(*args, kwargs)\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\utils\\decorators\n.py\", line 91, in _wrapped_view\n    response = view_func(request, args, kwargs)\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\views\\decorators\n\\cache.py\", line 89, in _wrapped_view_func\n    response = view_func(request, *args, kwargs)\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\contrib\\admin\\si\ntes.py\", line 202, in inner\n    return view(request, args, kwargs)\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\utils\\decorators\n.py\", line 25, in _wrapper\n    return bound_func(*args, kwargs)\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\utils\\decorators\n.py\", line 91, in _wrapped_view\n    response = view_func(request, args, kwargs)\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\utils\\decorators\n.py\", line 21, in bound_func\n    return func(self, *args2, kwargs2)\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\contrib\\admin\\op\ntions.py\", line 1285, in changelist_view\n    'selection_note': _('0 of %(cnt)s selected') % {'cnt': len(cl.result_list)},\nFile \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\db\\models\\query.\npy\", line 106, in len\n    self._result_cache = list(self.iterator())\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\django\\db\\models\\query.\npy\", line 317, in iterator\n    for row in compiler.results_iter():\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\djangotoolbox\\db\\baseco\nmpiler.py\", line 375, in results_iter\n    results = self.build_query(fields).fetch(\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\djangotoolbox\\db\\baseco\nmpiler.py\", line 477, in build_query\n    self.check_query()\n  File \"D:\\Dev\\python\\Envs\\vizpropspy2\\lib\\site-packages\\djangotoolbox\\db\\baseco\nmpiler.py\", line 455, in check_query\n    raise DatabaseError(\"This query is not supported by the database.\")\n```\n. Sorry, submitted in the wrong place\nit should be here: https://github.com/django-nonrel/djangotoolbox/issues/46 \n. ",
    "chaitanya-srivastav": "Still got the same error: \nDatabaseError at /admin/default/usersocialauth/\nThis query is not supported by the database.\nI have used python-social-auth  with django-mongodb-engine\nError during template rendering\nIn template /home/chaitanya/venv/local/lib/python2.7/site-packages/django/contrib/admin/templates/admin/change_list.html, error at line \nThis query is not supported by the database.\n{{ cl.formset.non_form_errors }}\n    {% endif %}\n    <div class=\"module{% if cl.has_filters %} filtered{% endif %}\" id=\"changelist\">\n          {% block search %}{% search_form cl %}{% endblock %}\n          {% block date_hierarchy %}{% date_hierarchy cl %}{% endblock %}   \n          {% block filters %}\n        {% if cl.has_filters %}\n          <div id=\"changelist-filter\">\n          <h2>{% trans 'Filter' %}</h2>\n          {% for spec in cl.filter_specs %}{% admin_list_filter cl spec %}{% endfor%}          </div>\n        {% endif %}\n      {% endblock %}    \n <form id=\"changelist-form\" action=\"\" method=\"post\"{% if cl.formset.is_multipart %} enctype=\"multipart/form-data\"{% endif %}>{% csrf_token %}\n          {% if cl.formset %}\n            <div>{{ cl.formset.management_form }}</div>\n          {% endif %}   \n      {% block result_list %}\n. its actually a django-nonrel problem.. I suppose..\n. ",
    "kiranchari": "my pop-up blocker is not the problem BTW\n. @omab thanks for your reply\nIt redirects to the url under LOGIN_REDIRECT_URL. But since I do not have a template for /logged-in/ I simply forward it to my index.html.\nFYI, I can see in my cmd.exe that a request is being made to /complete/twitter/?oauth_token=....\n. @omab oops! you were right..I was logged into Twitter...so I did not see any pop-up. When I logout, I am forwarded to the Twitter page.\nThanks a lot man! Appreciate the prompt replies\n. no, i am using different apps. i was able to login with facebook at first - but now it is not working also. it produces just that error.\n. in fact, the problem is now only with twitter login. facebook login seems to be working again. any ideas? i have checked the app id and secret for the twitter app.\n. yes, i do. i even tried resetting the consumer secret and key - still no luck. u can try here - www.clipserf.com/login/ \nLogging in with twitter returns error (404 because I do not have /login-error/ page)\n. What do you mean by messages app? The only error I saw is 'No handlers found for logger \"socialauth\"'\nI do not have the middleware but when I add it I get this error: \"Error importing middleware social_auth.middleware: \"No module named middleware\"\"\nAs I said before, both twitter login and facebook login work on my localhost.\n. Hi Omab, any ideas on how to fix this? Users are not able to login with Twitter. It works on my localhost and I have checked that I am using the correct app. Otherwise all my configuration settings are same as the localhost.\n. I am pasting the traceback here that leads to the error. May be that will be better. Thanks a lot for the help!\nI have removed some parts that are not relevant.\nEnvironment:\nDjango Version: 1.4\nPython Version: 2.7.3\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'social_auth',\n 'south',\n 'compressor')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTraceback:\nFile \"/path-to-application/lib/python2.7/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, _callback_kwargs)\n   File \"/path-to-application/lib/python2.7/django/views/decorators/csrf.py\" in wrapped_view\n2.         return view_func(_args, _kwargs)\n   File \"/path-to-application/lib/python2.7/social_auth/decorators.py\" in wrapper\n3.                 return func(request, backend, _args, _kwargs)\n   File \"/path-to-application/lib/python2.7/social_auth/views.py\" in complete\n4.         return complete_process(request, backend, _args, _kwargs)\n   File \"/path-to-application/lib/python2.7/social_auth/views.py\" in complete_process\n5.     user = auth_complete(request, backend, _args, _kwargs)\n   File \"/path-to-application/lib/python2.7/social_auth/views.py\" in auth_complete\n6.                                      kwargs)\n   File \"/path-to-application/lib/python2.7/social_auth/backends/twitter.py\" in auth_complete\n7.             return super(TwitterAuth, self).auth_complete(_args, *_kwargs)\n   File \"/path-to-application/lib/python2.7/social_auth/backends/init.py\" in auth_complete\n8.         data = self.user_data(access_token)\n   File \"/path-to-application/lib/python2.7/social_auth/backends/twitter.py\" in user_data\n9.         json = self.fetch_response(request)\n   File \"/path-to-application/lib/python2.7/social_auth/backends/init.py\" in fetch_response\n10.         response = urlopen(request.to_url())\n    File \"/usr/local/lib/python2.7/urllib2.py\" in urlopen\n11.     return _opener.open(url, data, timeout)\n    File \"/usr/local/lib/python2.7/urllib2.py\" in open\n12.             response = meth(req, response)\n    File \"/usr/local/lib/python2.7/urllib2.py\" in http_response\n13.                 'http', request, response, code, msg, hdrs)\n    File \"/usr/local/lib/python2.7/urllib2.py\" in error\n14.             return self._call_chain(args)\n    File \"/usr/local/lib/python2.7/urllib2.py\" in _call_chain\n15.             result = func(*args)\n    File \"/usr/local/lib/python2.7/urllib2.py\" in http_error_default\n16.         raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\nException Type: HTTPError at /complete/twitter/\nException Value: HTTP Error 404: Not Found\n. I tried curl from the server and I got this. But there was no active twitter session on the session.\n{\"errors\":[{\"message\":\"Bad Authentication data\",\"code\":215}]}\n. Hi, I found the url you mentioned. What is your Gtalk id? BTW, thanks a lot!\n. UPDATE: Facebook login is working again. I think there was an issue with the callback URL specified in the facebook app. The app now covers all subdomains of my domain (*.domain.com).\n\ni fixed the configuration on the facebook app side and it worked, but it stopped working again. I don't understand why it is so. Existing facebook users can login but new users cannot sign up. Any ideas?\n. Yup, it hasn't been an issue since.\nOn Mon, May 27, 2013 at 7:22 PM, daisuke0131 notifications@github.comwrote:\n\ndid you resolve this problem?\nsame problem happened...\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/issues/534#issuecomment-18493938\n.\n. \n",
    "garrypolley": "For the string methods on the mongoengine models, why not do the .format?  I'm assuming it's because the rest of the code base does not, but it'd be better if it started to be Python 3.x compliant on new code. So instead of something like\npython\nreturn '%s %s' % (self.handle, self.issued)\ndo \npython\nreturn u\"{0} {1}\".format(self.handle, self.issued)\n. Thank you for the quick pull request merge.\n. It errors out on my end, I'm assuming.  I'm configured no differently than non HTTPS.  The provider is not doing the attribute exchange because I am not sending a valid openid.mode, as seen above it's not set.  \nI'm by no means an OpenID guy but the OpenID provider sees that I'm doing attribute exchange, and believe it to be an issues with the library since I can do it over HTTP and there shouldn't be a different between the 2 on their end. \nI've no idea where the issue lies, I'm lost on what the above error means, I was not able to authenticate because I did not receive values in the AX. Which leads me to believe I'm not sending a valid openid.mode when considering the error above. \n. So Attribute Exchange is working.  I'm getting the openid.mode error after that.  The provider is a cooperations private OpenID, which works fine with other libraries.  \nThe only fix needed to support this one, so far, has been having them provide the yadis document that says they support Attribute Exchange.  After that it has worked fine over HTTP.  \nWhere in the code does it error out if openid.mode is not what is expected?\n. As another note, I'm using the MongoEngine backend.  That could be one reason it's having issues, but that's not what I'd expect to have happen. \n. To help out here is my stack trace:\nAuthentication failed: Invalid openid.mode: '<No mode set>'\nTraceback (most recent call last):\n  File \"/opt/.virtualenvs/csd/lib/python2.7/site-packages/social_auth/decorators.py\", line 39, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"/opt/.virtualenvs/csd/lib/python2.7/site-packages/social_auth/views.py\", line 39, in complete\n    return complete_process(request, backend, *args, **kwargs)\n  File \"/opt/.virtualenvs/csd/lib/python2.7/site-packages/social_auth/views.py\", line 99, in complete_process\n    user = auth_complete(request, backend, *args, **kwargs)\n  File \"/opt/.virtualenvs/csd/lib/python2.7/site-packages/social_auth/views.py\", line 174, in auth_complete\n    return backend.auth_complete(user=user, request=request, *args, **kwargs)\n  File \"/opt/.virtualenvs/csd/lib/python2.7/site-packages/social_auth/backends/__init__.py\", line 474, in auth_complete\n    raise AuthFailed(self, response.message)\nAuthFailed: Invalid openid.mode: '<No mode set>'\n. It appears the issue may be related to nginx not giving the correct headers to gunicorn.  This is likely not an issue against social-auth. \nThanks for your help. \n. That fixes my issue.  Thanks for the help.\n. ",
    "yugaljosh": "Its also failing for me.. Django-social-auth is awesome - Just upgrading this is really difficult. Since I can't be sure that the new changes work with my system exactly the way I want.\nLets see if we can correct the tests.. :)\n. Some other details - If that makes a difference :\nAUTH_PROFILE_MODULE = 'profiles.UserProfile'\nLOGIN_REDIRECT_URL = ''\nI have a profiles which extends django-userena models.\n- Basically I am trying to integrate it with django-userena, for that I have also written 3 custom pipelines.\nHere we go with my pipelines :\nSOCIAL_AUTH_PIPELINE = (\n    'social_auth.backends.pipeline.social.social_auth_user',\n    'social_auth.backends.pipeline.user.get_username',\n    'profiles.social_auth.pipeline.dummy_email',               # Custom\n    'social_auth.backends.pipeline.user.create_user',\n    'profiles.social_auth.pipeline.create_profile',            # Custom\n    'profiles.social_auth.pipeline.set_guardian_permissions',  # Custom\n    'social_auth.backends.pipeline.social.associate_user',\n    'social_auth.backends.pipeline.social.load_extra_data',\n    'social_auth.backends.pipeline.user.update_user_details',\n)\nHere is the profiles.social_auth.pipeline.py :\n```\nfrom django.contrib.auth.models import User\nfrom userena.models import assign\nfrom profiles.models import UserProfile\nfrom userena.managers import ASSIGNED_PERMISSIONS\ndef dummy_email(details, args, *kwargs):\n    email = details.get('email') or ''\n    if not email:\n        username = 'test_%s' % details['username']\n        while 1:\n            try:\n                User.objects.get(username=username)\n                username += 1\n            except User.DoesNotExist:\n                break\n        details['email']='%s@dummy_email.com' % username\n    return kwargs.update({'details':details, })\ndef create_profile(user=None, profile=None, args, *kwargs):\n    \"\"\"\n    Create user profile if necessary\n    \"\"\"\n    if profile:\n        return { 'profile': profile}\n    if not user:\n        return\n    return { 'profile': UserProfile.objects.get_or_create(user=user)[0] }\ndef set_guardian_permissions(user=None, profile=None, args, *kwargs):\n    \"\"\"\n    Give the user permission to modify themselves\n    \"\"\"\n    if not user or not user.is_authenticated():\n        return\n    if profile:\n        # Give permissions to view and change profile\n        for perm in ASSIGNED_PERMISSIONS['profile']:\n            assign(perm[0], user, profile)\n# Give permissions to view and change itself\nfor perm in ASSIGNED_PERMISSIONS['user']:\n    assign(perm[0], user, user)\n\n``\n. Please help me figure-out what's going wrong ?\n. I guess I resolved it :\nIt wasLOGIN_REDIRECT_URL = ''-> I changed it toLOGIN_REDIRECT_URL = '/'`\nIts working fine now :P\n. So, this can be closed now !\n. There is a related stackoverflow question with no answer : http://stackoverflow.com/q/9480850/731963\n. @omab I have exactly the same settings as above, if first-name is getting repeated then there may be a bug.\nI will try using a set instead and keep you posted on the result.\nHm.. I followed http://developer.linkedin.com/documents/quick-start-guide, which shows json support.\nMay be we can use json now, although it doesn't matter unless someone is tinkering with the app inners.\n. Hey, @omab  I think this is a bug :\nIf I use : LINKEDIN_EXTRA_FIELD_SELECTORS = [ 'first-name', 'last-name', 'picture-url', 'positions', 'summary' ]\nIt gives HTTP 400 since both first-name and last-name gets repeated in the generated url, may be because linkedin already gives first-name and last-name by default.\nSo, this is a bug that django-socialauth is adding it two times for linkedin.\n. Great.. active development !\n. ",
    "kodeshpa": "Thanks it helped , works like charm now. 1 more query how can i add extended permission for github .\n. Thanks for prompt reply and possibly best lib.\n. ",
    "judy2k": "@Visgean By coincidence, I've just had to solve this exact problem myself.\nMy settings.py looks like this:\npython\nSOCIAL_AUTH_PIPELINE = (\n    'social_auth.backends.pipeline.social.social_auth_user',\n    'myapp.social_auth.user_association_not_found',\n    'social_auth.backends.pipeline.social.associate_user',\n    'social_auth.backends.pipeline.social.load_extra_data',\n    'social_auth.backends.pipeline.user.update_user_details'\n)\nand inside myapp.socialauth, I have a function that looks like this:\npython\ndef user_association_not_found(**kwargs):\n    if kwargs.get('user') is None:\n        return HttpResponseRedirect(reverse('user_association_not_found'))\n    return kwargs\nI've then written a view, template, url entry that correspond to 'user_association_not_found'.\nThis works for me, but if anyone with more experience of django-social-auth can offer any pointers for improvement, they'd be gratefully received.\n. @omab Sure - ping me if it doesn't turn up by next Sunday ;-) \n. @1st I'm not sure if I understand what you're seeing. If you've inserted a function into the pipeline that raises an exception, or returns an HttpResponse (or subclass), then your pipeline will stop at that point, and will never reach the 'associate_user'  function which raises the 'Cannot assign None' error.\nHave you inserted the 'user not found' function before 'associate_user' in your pipeline?\n(@omab - I still plan to add the documentation you asked for...) :)\n. ",
    "twoolie": "@omab, for backends that do not support passing state through their service, you could use redirect_uri that points back at an url that contains some sort of hash.\n. @homakov actually, state has a defined purpose for allowing webapps, and to a lesser extent traditional server-side code the ability to control where the user is sent after returning from authorization. by using state to carry a hash, we are corrupting it's true purpose to fit our needs. It would be better if the Oauth2 spec carried an extra parameter for this purpose.\n. @homakov From reading the implementation notes of providers (e.g. Google) the state parameter seemed to be designated for appstate. It really should be better named.\nI agree that it's possible to split the state into a hash and a redirect url, but there should be an extra param there somewhere. g.g. Oauth2 standards body.\n. ",
    "homakov": "Great job, guys! It seems you fixed it properly! \n. @twoolie yeah, trick with hashed redirect_uri is good only if it's not checked for Exact match. I personally dislike agile redirect_uri and I hope in the future all redirect_uri will be static. 'state' is the best option if available. I hope those providers(shame on them) will add this future.\n. @twoolie totally disagreed.\nOauth2 follows KISS rule. There is absolutely no problem to store 'returning point' in session or cookie or in redirect_uri - what ever. But only 'state' can help us to prevent CSRF. Also, CSRF protection MUST be implemented. Thus - state must be used for CSRF protection. And storing returning point is routine task. Mission of state was often misunderstood, a lot of manuals say 'state for returning point' and that is bullsh*t. I dislike this situation\n. I have nothing against additional parameter btw. I had similar thought, e.g. redirect_token. But it will work the same 'state' ..\nperhaps, developers should combine it in one value, e.g. HASH_POINT and split '_' at the end. \nAlso, I think about getting rid of 'state' in Provider's callback. We have state in session, let's extract it and send it to obtain access_token, along with code and client credentials.\n. @omab additional parameter is not passed in redirect_uri, it's passed along with other params - redirect_uri, scope, state.\nand it's returned back with code. No problem with static redirect_uri\n. ",
    "krvss": "I am going to make a sample code for that, there is a very old reminder in my to-do list as well. Will do it during this week.\n. Did a pull request with example code\n. Well, when user is not authorized in FB app we do not raise AuthException - in this case request.user will be anonymous. Connecting to application is demonstrated in current example via JavaScript and FB API (FB.login) that calls canvas app url with proper parameters if user connected to app.\n. Barracel, can you describe your workflow in some more details? There is no limitations in how you authenticate in FB using DSA, there are just 2 different ways to do so - using link (like http://social.matiasaguirre.net/login/facebook/) or via canvas application (in this case FB does POST with needed information to canvas app URL). Both ways share the same app id and actually there is no difference between them in user database.\n. > What should I do in that canvas url view to make django-social-auth handle the signed POST and automatically log/register the user in django?\nThere is a working example for Facebook canvas application in DSA example, it does all the needed stuff.\nDocumentation is here: https://github.com/omab/django-social-auth/blob/master/doc/backends/facebook.rst\n\nI tried reading the source code social_auth.backends.facebook.py and seems that there are two different backends FacebookBackend and FacebookAppAuth controlled by a non documented setting FACEBOOK_APP_AUTH. What should I use in settings.AUTHENTICATION_BACKENDS?\n\nFACEBOOK_APP_AUTH is not documented, I am not sure why, but it is just a boolean value, set to true if you want to use app authentication functionality. There is no need to do anything in settings.AUTHENTICATION_BACKENDS.\n. ",
    "barracel": "In a Facebook application you can activate both \"Website with Facebook Login\" and \"App on Facebook\" and then use the same App ID/Secret to do web login, and canvas app.\nBut seems that django-social-auth only allows you to use one the \"work modes\" by setting FACEBOOK_APP_AUTH.\nIs it possible to use both modes with the same app id?\n. The django-social-auth documentation says that I must specify a canvas url. What should I do in that canvas url view to make django-social-auth handle the signed POST and automatically log/register the user in django?\nI tried reading the source code social_auth.backends.facebook.py and seems that there are two different backends FacebookBackend and FacebookAppAuth controlled by a non documented setting FACEBOOK_APP_AUTH. What should I use in settings.AUTHENTICATION_BACKENDS?\n. That's even better :)\n. ",
    "festlv": "Woops, you're right- case insensitive username comparison is default behaviour of pinax's account app, not django.contrib.auth behaviour.\n. ",
    "aneumeier": "Flow of requests:\nStatus: 302\nGET http://application.neumeier.org/login/facebook/ \n[...]\nResponse Header:\n      Location[https://www.facebook.com/dialog/oauth?scope=email&redirect_uri=http%3A%2F%2Fapplication.neumeier.org%2Fcomplete%2Ffacebook%2F&client_id=396635147051388]\nStatus: 302\nGET https://www.facebook.com/dialog/oauth?scope=email&redirect_uri=http%3A%2F%2Fapplication.neumeier.org%2Fcomplete%2Ffacebook%2F&client_id=396635147051388\n[...]\n      Location[http://application.neumeier.org/complete/facebook/?code=AQDyksFN6oc66Je0eCIOTcMAQQPSiasjFefn6EoEoe86xEBKareMMmpKVjHcRF6ubylKC5B5bRVXDycGqqEQiTkzX98XmjuiKPnfxfiSm9G_Xt-sf5Yg_nVYTwrWdk4Fu3bqrL6gSyka-Ylk20P4lcGrMecM43Ct6JqP_IjbvS9xNw335orFdlvewNxPD5ONXbc#=]\nStatus: 302\nGET http://application.neumeier.org/complete/facebook/?code=AQDyksFN6oc66Je0eCIOTcMAQQPSiasjFefn6EoEoe86xEBKareMMmpKVjHcRF6ubylKC5B5bRVXDycGqqEQiTkzX98XmjuiKPnfxfiSm9G_Xt-sf5Yg_nVYTwrWdk4Fu3bqrL6gSyka-Ylk20P4lcGrMecM43Ct6JqP_IjbvS9xNw335orFdlvewNxPD5ONXbc#= \n[...]\nResponse Header:\n      Location[http://application.neumeier.org/accounts/]\nStatus: 200[OK]\nGET http://application.neumeier.org/accounts/#= \nSoftware:\nDebian wheezy/sid\nPython 2.7.3rc2 (default, Apr 22 2012, 22:35:38)\npython-django 1.4-1\npython-django-social-auth 0.7.0-1\n. LOGIN_URL          = '/accounts/'\nI had to add \nLOGIN_ERROR_URL = '/accounts/error/'\nthough.\nNow every attempt produces an error. Not sure which one, though.\n. I tried to retrieve some information from the error view, but apparently no messages are passed through there. \n. I rest my case for being an idiot & not paying attention to pipeline, which referred to app instead of accounts. \n. ",
    "khchen428": "Makes sense.  Closing!\n. ",
    "arnaudbreton": "Hello omab,\nSince now, I am using your app on my website without any problem (thanks you for sharing it!). \nI need to provide custom parameters which I will use later, in my custom pipelines (on my website, I need to distinguish two kinds of user and I can't find it via Facebook or any backend). \nI use it like this /social/login/facebookcustom_parameter1=custom_value1&...&custom_parameter2=custom_value2.\nI released this modification in 5 minutes, just to test it, I know that's not optimal.\nMaybe, an authorized list in settings must be used (SOCIAL_AUTH_AUTHORIZED_CUSTOM_PARAMETERS), with all the precautions needed (chars / HTML escapes, etc.). ?\nWith other parameters, if the pipelines does not use it, there's no problem, isn't it ? (Maybe in the case of a cookie based session).\nThanks by advance for considering it,\nArnaud.\n. Would be really really cool ! I received a lot of error due to users that changed their password !\n. An exception is raised each time I call the method \"refresh_token\" with Facebook backend.\nHere's the stacktrace:\n``` python\n File \"/app/UniShared_python/website/tasks.py\", line 243, in facebook_friends_joined_task\n    user_social.refresh_token()\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/db/base.py\", line 44, in refresh_token\n    response = backend.refresh_token(token)\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/backends/init.py\", line 857, in refresh_token\n    dsa_urlopen(request).read()\nFile \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/utils.py\", line 254, in dsa_urlopen\n    return urlopen(args, *kwargs)\nFile \"/app/.heroku/python/lib/python2.7/urllib2.py\", line 126, in urlopen\n    return _opener.open(url, data, timeout)\nFile \"/app/.heroku/python/lib/python2.7/urllib2.py\", line 406, in open\n    response = meth(req, response)\nFile \"/app/.heroku/python/lib/python2.7/urllib2.py\", line 519, in http_response\n    'http', request, response, code, msg, hdrs)\nFile \"/app/.heroku/python/lib/python2.7/urllib2.py\", line 444, in error\n    return self._call_chain(*args)\nFile \"/app/.heroku/python/lib/python2.7/urllib2.py\", line 378, in _call_chain\n    result = func(*args)\nFile \"/app/.heroku/python/lib/python2.7/urllib2.py\", line 527, in http_error_default\n    raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\nHTTPError: HTTP Error 400: Bad Request\n```\nThanks for your help!\nLet me know if I can do something to help..\nArnaud.\n. It seems that's because I try to refresh a short-term / long-term token no more valid. \nSo, it don't seems to be a bug, it's a normal, but non-explicit, behaviour of the FB's API.\n. Great! Good to hear!\nLet me know if I can help you on the implementation\n. Hi Omab,\nAny news about this? Have you started the implementation?\nThanks!\n. No problem, thanks for updating me. \n. Hi Omab,\nHow you doing?\nDid you managed to work on this implementation?\nI think I'll start to implement it in my project this week.\nBest,\nArnaud.\n. ",
    "nnseva": "Just right now I've noticed that neither associations, nor nonces define any applicable indexes to make cleanup process as well as a search efficient on large database. Please, add useful indexes into your models like:\nsocial_auth/db/django_models.py:\n\nclass Nonce(models.Model, NonceMixin):\n    \"\"\"One use numbers\"\"\"\n    server_url = models.CharField(max_length=255)\n    timestamp = models.IntegerField(db_index=True)\n    salt = models.CharField(max_length=40)\n    class Meta:\n        app_label = 'social_auth'\n        unique_together = (('server_url','timestamp','salt'),)\n\nclass Association(models.Model, AssociationMixin):\n    \"\"\"OpenId account association\"\"\"\n    server_url = models.CharField(max_length=255,db_index=True)\n    handle = models.CharField(max_length=255)\n    secret = models.CharField(max_length=255)  # Stored base64 encoded\n    issued = models.IntegerField()\n    lifetime = models.IntegerField()\n    assoc_type = models.CharField(max_length=64)\n\n    class Meta:\n        app_label = 'social_auth'\n        unique_together = (('server_url','handle'),)\n\nIt also might be useful to have 'expired' (also indexed) field (=issued+lifetime) additionaly or instead of 'lifetime' in the Association model for the filtering and cleanup purposes - for you wish.\nDo you plan to use django-south to make version migrations available for the production?\n. I've met the same error and it looks like fixed after pip install --upgrade ...\n. ",
    "hepochen": "Thanks for your reply, I modified the script file. :)\n. your douban support helped me a lot. thanks. :)\n@seansay\n. @stephenLee \ngoto http://open.weibo.com/apps/[your_app_id]/info/advanced\nedit your redirect_uri or bind your domain.\ncan it work now?\n. @stephenLee  just bind the domain, I think   http://example.com:8000/complete/weibo is different to http://example.com:8000/complete/weibo/?redirect_state=XX65IerjIdGQQYZC7YoqgI6o7WIWMuYI&response_type=code&client_id=357199909\nif you bind the domain to example.com, the callback url will work.\n. @stephenLee\nthis problem is not in the code, it's in the weibo.com. \nyou can test the url by hand: https://api.weibo.com/oauth2/authorize?redirect_uri=[%YOUR_URL%]&response_type=code&client_id=357199909 \nand will get the same error!\nwhen it goes well, your code will work too.\n. ",
    "lisongx": "it's cool to have weibo support\nthanks @hepochen \n. I think the problem is that weibo only allow redirect to the domain you register in their website,\nMaybe you can change your /etc/hosts file, map localhost to your producrtion url\n. what bugs?...I can't see which lines was changed\n. ;) nice job\n. +1\nOn Thu, Nov 22, 2012 at 10:43 PM, arnaudbreton notifications@github.comwrote:\n\nWould be really really cool ! I received a lot of error due to users that\nchanged their password !\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/issues/492#issuecomment-10636406.\n\n\nBest regards,\nSean Lee\n. agree, but this need a lot of effort...\n. my application works fine, django1.4.4 and current version socialauth\n. @dengyuanzhong \ncan I see your settings.py ? I'm glad to test \n. @dengyuanzhong \nmy settings.py is basicly the same\uff0cI think \u201c\u5e94\u7528\u5730\u5740\u201d and \u201c\u56de\u8c03\u5730\u5740\u201d is not effect in development \uff1f what's your django and social auth version?\n. @omab \nsorry;( my bad\n. @dengyuanzhong \ndid you get the api key & secret from the new developer site ?\n. @omab \ndoes this problem happens in your local dev enviroment?\n. @omab \nI was trying to @dengyuanzhong ....sorry\nThey don't have a English version I think\n. @dengyuanzhong \nis this only happened on sae or on local as well?\n. @yhben \nalso on sina app engine ?\n. @yhben \n\u6211\u672c\u5730\u5f00\u53d1\u7684\u65f6\u5019\u597d\u50cf\u6ca1\u6709\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898......\n@dengyuanzhong \ndid you solve this problem?\n. ",
    "kingtut": "Yeah, I figured the issue was not at all related to Social Auth. My VPS was preferring IPv6 connections but I had not set up a v6 IP Address.\n. ",
    "antoviaque": "Thanks, it always feels much better when the tests run : ) In the meantime I skip the social-auth tests, no worries.\nAnd congratulations for the excellent work on this project - it's great to use it and have it \"just work\"! The same can't be said of most of the social auth plugins out there. : )\n. ",
    "Alerion": "Thank you for your work. Really saved tons of time.\n. ",
    "hcarvalhoalves": "What are exactly the changes necessary? Break up the task on smaller chunks and I'll be able to look at it. I'm going to rely on django-social-auth for a big project and want to make sure the test suite is sound.\n. ",
    "mdippery": "Can the failing tests at least be marked as expected failures or skipped (using unittest.expectedFailure or unittest.skip)?\n. ",
    "jayliew": "Same issue here. Turns out, this happens when I do a pip install django-social-auth - but it works fine if I manually python setup.py install just after I do a fresh git clone. So I guess the package just needs to be updated on the repo\n. ",
    "sethwoodworth": "The issue is a bit more complicated than I thought, the stock behavior in django-1.4 is still {% url socialauth_begin 'facebook' %}, as noted in the 1.4 docs.  But the next version, currently the dev version has the new url tag.  Best practice was introduced in django1.3 to use {% load url from future %}' to accommodate upcoming changes.  My django project had the{% load url from future %}` in a lower level template, which explains my confusion with the current docs.\nYour decision if this is still important enough to add.\n. ",
    "stephenLee": "@omab. I have tried, but it still can't work, and Github has no problem. Maybe Weibo's authentication service is different from others. Thanks, just close this issue.\n. @hepochen I have config my app and set the redirect_uri as http://example.com:8000/complete/weibo after bind my localhost : 127.0.0.1   example.com \nAnd it doesn't work.\nSo I decode my request url to look anything wrong. Here is the decode url:\nhttps://api.weibo.com/oauth2/authorize?state=XX65IerjIdGQQYZC7YoqgI6o7WIWMuYI&redirect_uri=http://example.com:8000/complete/weibo/?redirect_state=XX65IerjIdGQQYZC7YoqgI6o7WIWMuYI&response_type=code&client_id=357199909\nI doubt the second '?'. But I use github to test, the decode url have the same format, it works.\nSo strange!\n. @hepochen sorry, What's your mean bind the domain? This program was tested on my PC and I have binded my local address: 127.0.0.1 example.com\n. @hepochen  Can you put a small test app for Weibo at your github respository? Thanks\uff01\n. @omab, Thanks. I have set the app configuration in Weibo  like the github app example. Github works, Weibo does not.\nJust close this issue, it's a waste of time.   I will look at \ndjango-social-auth source code and reimplement some contrib backends, as I find some may exist problems. Some service use OAuth2 but has implemented as OAuth1. A little chaos.\n. ",
    "airfang": "not sure if you guys have solved the problem, I ran into the same issue, but I noticed the notification saying that if you bind the DOMAIN then any url under that DOMAIN will be valid callback urls, so go ahead and set that in the security setting under OAuth2.0 in the advanced configuration in weibo. It worked for me.\n. I had nothing filled under OAuth2.0 authorization settings\nUnder Security Settings:\nBind domain: Already bound\nURL: mydomain.com\nApplication service IP address: Not filled\nHope this helps!\nOn Sun, Mar 10, 2013 at 5:22 PM, Tran Hai Dang notifications@github.comwrote:\n\n@airfang https://github.com/airfang Can you give an example about what\nyou specified in your Weibo app settings? As your suggestion, when I fill\nin the \u7ed1\u5b9a\u57df\u540d section with my domain, and check \u662f, it still returns the\n\"redirect_uri_mismatch\" error. I also try using different callback URLs,\nsuch as mydomain.com or mydomain/complete/weibo in \u6388\u6743\u56de\u8c03\u9875 but it does not\nwork. I just rely on Google Translate and it is troublesome to use any\nsearch engine or contact Weibo directly so it would be very helpful if I\ncould have your help.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/issues/441#issuecomment-14692845\n.\n. \n",
    "seaify": "it doesn't work on 127.0.0.1:8000.  or how can i change the callback url?\n. ",
    "selwin": "What about making FACEBOOK_AUTH_EXTRA_ARGUMENTS support callables that accept a single request argument and returns a dictionary? This way the extra arguments can be calculated during run time, depending on the request. Example:\n```\ndef get_fb_params(request):\n    # if request.is_mobile:\n    ...\nFACEBOOK_AUTH_EXTRA_ARGUMENTS = get_fb_params\n```\n. Or better, also support specifying dotted path to callable: i.e:\nFACEBOOK_AUTH_EXTRA_ARGUMENTS = 'path.to.callable'\n. @omab Any chance that this change can be pushed to pypi? I'm affected by this issue as well.\n. @omab Thanks a lot! :)\n. ",
    "liodakis": "@faxioman, I agree with @omab, great solution\n. ",
    "betonimig": "prepared\n. ",
    "stefanw": "No reason, wasn't completely aware of self.data. It should not have any negative impact that POST data can now potentially override *_AUTH_EXTRA_ARGUMENTS, right?\n. ",
    "ulyssesv": "Here's a quick snippet: https://gist.github.com/3511998\n. Sure, you can just a the method to the end of the pipeline. In fact, I think that is the recommended way now.\n. +1!\n. +1!\nThe custom User model isn't frozen inside the South migrations so accessing orm[USER_MODEL] doesn't work.\nAn ugly and temporary workaround is to add the model to the south migrations:\n```\n    models = {\n        ...\n        'account.user': {\n            'Meta': {'object_name': 'User'},\n            'date_joined': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),\n            'email': ('django.db.models.fields.EmailField', [], {'max_length': '75', 'blank': 'True'}),\n            'first_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),\n            'groups': ('django.db.models.fields.related.ManyToManyField', [], {'to': u\"orm['auth.Group']\", 'symmetrical': 'False', 'blank': 'True'}),\n            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),\n            'is_active': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),\n            'is_staff': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),\n            'is_superuser': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),\n            'last_login': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),\n            'last_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),\n            'password': ('django.db.models.fields.CharField', [], {'max_length': '128'}),\n            'user_permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': u\"orm['auth.Permission']\", 'symmetrical': 'False', 'blank': 'True'}),\n            'username': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '30'})\n        }\n    }\ncomplete_apps = ['social_auth', 'account']\n\n```\n. ",
    "mrmch": "I'm seeing the same error with LinkedIn ..\n. Assuming that irlabs issue is based on having a default setting and then expecting next to be redirected to after complete, yes.\n. Thank you! =]\n. I'm fairly certain self.data is immutable so that's why I am redefining it.\nBackend is working for me so far, but this is the first back end for\nsocial-auth so I don't know what I might have missed :)\nI'll clean it up and then submit a pull request.\nThanks\nOn Oct 23, 2012 6:19 PM, \"Mat\u00edas Aguirre\" notifications@github.com wrote:\n\nLooks like a bug on Yammer OAuth2 API. Why are you re-defining the whole\nself.data instead of doing a making a writable copy of self.data and then\nself.data.update(new_data)?\nDoes the backend work?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/issues/496#issuecomment-9724567.\n. I'll take a look, thanks. This was the result of a quick hack to implement\nthe staging environment.\nOn Nov 2, 2012 9:24 PM, \"Mat\u00edas Aguirre\" notifications@github.com wrote:\n@mrmch https://github.com/mrmch, I've made some code simplifications,\nprod and staging backends were too similar to ignore inheritance there,\nplease take a look.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/pull/514#issuecomment-10036179.\n. \n",
    "sharataka": "@omab When I change it to FACEBOOK_API_SECRET, I get an AssertionError. Exception Value:\nPlease provide setting FACEBOOK_APP_SECRET.  The error can be found at submeup.com.  I've been playing with the settings for the past couple days and am still lost.  Any advice.  Thanks again advance!\n. @omab I'm trying to remove django-facebook and implement django-social-auth\n. I've removed it from settings.py, from the python path, and urls.py...I think I've removed it now but I'm not sure what URL I should be visiting on the site in order to test it.\n. It seems to be logging me in now via my facebook account.  However, it seems there's no page found at http://submeup.com/logged-in/#=.  Do I have to manually add something in urls.py to take this url into account?  Am I missing something when I added url(r'', include('social_auth.urls'))?\n. ",
    "alekzvik": "They work as name, but not username. Username should be in english letters, no?\n. Ok, thanks.\nSorry for false alarm.\nIt's just that i use them in url pattern like:\nexample.com/users/<username>\nand at least using something like slugify would be very helpful for me.\nBut slugify does not accept cyrillic symbols, that's why I thought that changing the way django-social-auth accepts username from facebook is a good idea.\n. ",
    "vicalloy": "I added a new pull request.\n. ",
    "aviars": "Hello.  This error still occurs for me despite the fact I cloned and installed the master branch.\nIt  only seems to occur in production and not when I'm working locally.\nLINKEDIN_EXTRA_FIELD_SELECTORS =    ['picture-url', 'public-profile-url']\nLooks like others on stack overflow are having the same issue.\nhttp://stackoverflow.com/questions/9480850/django-social-auth-debug-http-error-400-bad-request-linkedin\nI'm using Django 1.4.2\nI don't want to have to switch to Janrain. Any ideas?  Any help appreciated.  \n-Alan\n. Could it have anything to do with timestamps?  I am using Ubuntu 10.04 and running on Amazon EC2.  I'll send you and email pointing you to the debug page so you can see the entire output.\n. ",
    "publicFunction": "OK.\nI was me. I created an empty project and ran it and it was fine. took the settings from there and BOOM! all good. Sorry for the hassle. I do like this app btw.\n. ",
    "bkvaiude": "Hey I am new to Django & want implement D-S-A.\nI have went through the docs & configuration, but still I am facing problem.\nI have added FB Login Url to mysite but doesn't take me to FB login page, it take me to my normal login page.\nSo I tried your example which generates above one error.\nPlease help me.\nHere is the setting:\nFACEBOOK_APP_ID              = 'XXXXXXXXXXXXXXXXXXXXXx'\nFACEBOOK_API_SECRET          = 'XXXXXXXXXXXXXXXXXXXXX'\nFACEBOOK_EXTENDED_PERMISSIONS = ['email']\nFACEBOOK_PROFILE_EXTRA_PARAMS = {'locale': 'ru_RU'}\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = '/another-login-url/'\nSOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/new-users-redirect-url/'\nSOCIAL_AUTH_NEW_ASSOCIATION_REDIRECT_URL = '/sharing'\nSOCIAL_AUTH_DISCONNECT_REDIRECT_URL = '/sharing'\nSOCIAL_AUTH_CHANGE_SIGNAL_ONLY = True\nSOCIAL_AUTH_COMPLETE_URL_NAME  = 'socialauth_complete'\nSOCIAL_AUTH_ASSOCIATE_URL_NAME = 'socialauth_associate_complete'\nSOCIAL_AUTH_PROTECTED_USER_FIELDS = ['email',]\nSOCIAL_AUTH_EXPIRATION = 'expires'\nSOCIAL_AUTH_SESSION_EXPIRATION = True\nSOCIAL_AUTH_USER_MODEL = 'intentapp.User'\nSOCIAL_AUTH_CREATE_USERS = True\nSOCIAL_AUTH_RAISE_EXCEPTIONS = DEBUG\nSOCIAL_AUTH_REDIRECT_IS_HTTPS = True\n. thanks for reply..\nJust for information: I am using Supervisor & Gunicorn to run the django application... & I never to try to figured out what exactly they do with django app.. :( \nDjango 1.3.1\nPython 2.7.2\nhref=\"{% url socialauth_begin 'facebook' %}\"\n\"I have added FB Login Url to mysite but doesn't take me to FB login page, it take me to my normal login page.\"\nApp installed on  aws instance & using with ec2-xxxxxx.com domain name.\nHere Supervisor.conf file:\n[program:djangoapp]\ncommand=python /var/www/apps/xxx/manage.py run_gunicorn 0.0.0.0:8081\ndirectory=/var/www/apps/xxx/\nuser=ubuntu\nautostart=true\nautorestart=true\nredirect_stderr=True\nHere is my nginx/site-availbles/xxxa-app.conf file:\nupstream XXX_APP {\n    server localhost:8081 fail_timeout=0;\n}\nserver {\n        listen 80;\n        server_name  www.xxxxxxxx.com;\n```\n    access_log  /var/log/nginx/xxxx.com.access.log;\n    error_log  /var/log/nginx/xxxxx.com.error.log;\nkeepalive_timeout 5;\nlocation = /favicon.ico {\n    rewrite (.*) /static/favicon.ico;\n}\n\nlocation /static/ {\n        autoindex on;\n        root  /var/www/apps/xxx/xxxxapp/;\n     }\nlocation / {\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header Host $http_host;\n    proxy_redirect off;\nif (!-f $request_filename) {\n    proxy_pass http://app_server_djangoapp;\n\n    break;\n}\n\n}\n```\n}\n. any updates?\nI am waiting for solution.\nthanks\n. ",
    "cemkozinoglu": "Another one I had to fix:\n/ social_auth / backends / pipeline / social.py \nException as e --> Exception, e at line 31...\n. And last but not least...\nAgain in utils.py...\nI added:\ntry:\n    from urlparse import parse_qs, parse_qsl\nexcept ImportError:\n    # fall back for Python 2.5 \n    from cgi import parse_qs, parse_qsl\nand changed\nurparse.parse_sql to parse_qsl..\nNow it works in Python 2.5\n. ",
    "abhinavsingh": "Happened for me just today and I stumbled upon this issue. Here are the logs from my environment:\n[10/Nov/2012 20:08:57] \"GET /login/facebook/?next=/ HTTP/1.1\" 302 0\nERROR Session value state missing.\nTraceback (most recent call last):\n  File \"/python2.7/site-packages/social_auth/decorators.py\", line 39, in wrapper\n    return func(request, backend, *args, **kwargs)\n  File \"/python2.7/site-packages/social_auth/views.py\", line 39, in complete\n    return complete_process(request, backend, *args, **kwargs)\n  File \"/python2.7/site-packages/social_auth/views.py\", line 97, in complete_process\n    user = auth_complete(request, backend, *args, **kwargs)\n  File \"/python2.7/site-packages/social_auth/views.py\", line 170, in auth_complete\n    return backend.auth_complete(user=user, request=request, *args, **kwargs)\n  File \"/python2.7/site-packages/social_auth/backends/facebook.py\", line 96, in auth_complete\n    state = self.validate_state()\n  File \"/python2.7/site-packages/social_auth/backends/__init__.py\", line 703, in validate_state\n    raise AuthStateMissing(self, 'state')\nAuthStateMissing: state\n[10/Nov/2012 20:08:58] \"GET /complete/facebook/?redirect_state=....&state=.... HTTP/1.1\" 302 0\nUser is finally redirected to SOCIAL_AUTH_BACKEND_ERROR_URL. Have you guys already figured/fixed as to why this might happen. I am yet to dig deep into this issue. \nHere are details about my environment:\nDjango==1.4.1\ndjango-social-auth==0.7.5\n. Alright, you clear your cookies and this is gone. However, still a bug somewhere.\n. ",
    "amigo00678": "I had this issue. Put domain name in nginx and django settings, not IP of server. That error gone.\n. ",
    "koekie": "I ran into the same problem when authenticating with the google plugin. We get quite some users who have spaces in their last name.\nI got this to work by simply removing the spaces from final_username before it returns from social_auth.backends.pipeline.user.get_username\npython\ndef get_username(details, user=None,\n    user_exists=UserSocialAuth.simple_user_exists,\n    *args, **kwargs):\n    ...\n    return {'username': final_username.replace(\" \",\"\")}\nThis works for all plugins because it one step later in the default pipeline, but maybe a more structural solution on plugin level is more desirable.\n. ",
    "edulix": "I'm getting a similar login error, and I've update to 0.7.7 already (pip freeze confirms it):\nRequest Method: GET\nRequest URL: http://local.dev:8000/complete/twitter/?oauth_token=ES8m8aTiHoZpa6nCxUJZ6dz2W9LCuo8MLmH6EpBinn0&oauth_verifier=jBQ5RYAX0t4UxCiEAtY6tiiAVpg2ZqieaBpJxr7Vk8\nDjango Version: 1.4\nPython Version: 2.7.3\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.staticfiles',\n 'django.contrib.messages',\n 'django.contrib.admin',\n 'django.contrib.admindocs',\n 'django.contrib.comments',\n 'django.contrib.staticfiles',\n 'django.contrib.markup',\n 'django.contrib.flatpages',\n 'debug_toolbar',\n 'reversion',\n 'south',\n 'guardian',\n 'easy_thumbnails',\n 'userena',\n 'rosetta',\n 'actstream',\n 'social_auth',\n 'crispy_forms',\n 'agora_site.agora_core',\n 'agora_site.accounts',\n 'endless_pagination',\n 'haystack',\n 'dajaxice',\n 'djcelery')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.locale.LocaleMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.middleware.transaction.TransactionMiddleware',\n 'reversion.middleware.RevisionMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'debug_toolbar.middleware.DebugToolbarMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware')\nTraceback:\nFile \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, _callback_kwargs)\n   File \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n2.         return view_func(_args, _kwargs)\n   File \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/decorators.py\" in wrapper\n3.                 return func(request, backend, _args, _kwargs)\n   File \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/views.py\" in complete\n4.         return complete_process(request, backend, _args, _kwargs)\n   File \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/views.py\" in complete_process\n5.     user = auth_complete(request, backend, _args, _kwargs)\n   File \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/views.py\" in auth_complete\n6.     return backend.auth_complete(user=user, request=request, _args, _kwargs)\n   File \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/backends/twitter.py\" in auth_complete\n7.             return super(TwitterAuth, self).auth_complete(_args, _kwargs)\n   File \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/backends/init.py\" in auth_complete\n8.         data = self.user_data(access_token)\n   File \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/backends/twitter.py\" in user_data\n9.         json = self.fetch_response(request)\n   File \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/backends/init.py\" in fetch_response\n10.         response = dsa_urlopen(request.to_url())\n    File \"/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/utils.py\" in dsa_urlopen\n11.     return urlopen(_args, _kwargs)\n    File \"/usr/lib64/python2.7/urllib2.py\" in urlopen\n12.     return _opener.open(url, data, timeout)\n    File \"/usr/lib64/python2.7/urllib2.py\" in open\n13.             response = meth(req, response)\n    File \"/usr/lib64/python2.7/urllib2.py\" in http_response\n14.                 'http', request, response, code, msg, hdrs)\n    File \"/usr/lib64/python2.7/urllib2.py\" in error\n15.             return self._call_chain(args)\n    File \"/usr/lib64/python2.7/urllib2.py\" in _call_chain\n16.             result = func(args)\n    File \"/usr/lib64/python2.7/urllib2.py\" in http_error_default\n17.         raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\nException Type: HTTPError at /complete/twitter/\nException Value: HTTP Error 404: Not Found\n. As I'm using v0.7.7 it prints https://api.twitter.com/1.1/account/verify_credentials.json. I've been debugging, take a look at this debugging session:\n\n/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/views.py(159)auth_complete()\n    158     import ipdb; ipdb.set_trace()\n--> 159     if user and not user.is_authenticated():\n    160         user = None\n\nipdb> \nipdb> \nipdb> \nipdb> from social_auth.backends.twitter import TWITTER_CHECK_AUTH\nipdb> \nipdb> print TWITTER_CHECK_AUTH\nhttps://api.twitter.com/1.1/account/verify_credentials.json\n\n/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/views.py(162)auth_complete()\n    161 \n--> 162     if request.session.get(PIPELINE_KEY):\n    163         data = request.session.pop(PIPELINE_KEY)\n\nipdb> user\nipdb> request.session.get(PIPELINE_KEY)\nipdb> n\n\n/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/views.py(171)auth_complete()\n    170                                              _xargs, _xkwargs)\n--> 171     return backend.auth_complete(user=user, request=request, _args, _kwargs)\n    172 \n\nipdb> s\n--Call--\n\n/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/backends/twitter.py(83)auth_complete()\n     82 \n---> 83     def auth_complete(self, _args, *_kwargs):\n     84         \"\"\"Completes login process, must return user instance\"\"\"\n\nipdb> n\n\n/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/backends/twitter.py(85)auth_complete()\n     84         \"\"\"Completes login process, must return user instance\"\"\"\n---> 85         if 'denied' in self.data:\n     86             raise AuthCanceled(self)\n\nipdb> n\n\n/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/backends/twitter.py(88)auth_complete()\n     87         else:\n---> 88             return super(TwitterAuth, self).auth_complete(_args, *_kwargs)\n     89 \n\nipdb> self.data\nMergeDict(< QueryDict: {}>, <QueryDict: {u'oauth_verifier': [u'jBQ5RYAX0t4UxCiEAtY6tiiAVpg2ZqieaBpJxr7Vk8'], u'oauth_token': [u'ES8m8aTiHoZpa6nCxUJZ6dz2W9LCuo8MLmH6EpBinn0']}>)\nipdb> s\n--Call--\n\n/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/backends/init.py(583)auth_complete()\n    582 \n--> 583     def auth_complete(self, _args, *_kwargs):\n    584         \"\"\"Return user, might be logged in\"\"\"\n\nipdb> n\n\n/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/backends/init.py(585)auth_complete()\n    584         \"\"\"Return user, might be logged in\"\"\"\n--> 585         name = self.AUTH_BACKEND.name + 'unauthorized_token_name'\n    586         unauthed_token = self.request.session.get(name)\n\nipdb> n\n\n/home/edulix/proyectos/wadobo/agora/agora-ciudadana/env/lib/python2.7/site-packages/social_auth/backends/init.py(586)auth_complete()\n    585         name = self.AUTH_BACKEND.name + 'unauthorized_token_name'\n--> 586         unauthed_token = self.request.session.get(name)\n    587         if not unauthed_token:\n\nipdb> name\n'twitterunauthorized_token_name'\nBy the way it was working correctly yesterday, and some users of my open source application (https://agoravoting.com) has already reported to me the same problem, in fact that's how I found it. BTW, if it's of any help, your demo in (http://social.matiasaguirre.net/ , I click in Oauth > Twitter) doesn't work for me either, though it maybe that because it's using the old 0.7.6, I don't know. Finally, I've added you to gmail chat if you need a more interactive debugging session =).\n. False alarm, it's working here now. I was reusing the same oauth request token and that was the problem\n. ",
    "pxg": "I was having the same behaviour with a development site which was working yesterday afternoon. I've just upgraded from django-social-auth 0.7.6 to django-social-auth-0.7.7 and can now login:\npip install --upgrade django-social-auth\nI have a colleague who's site is broken too, so will confirm if this fixes the issue on his machine. What version are you using?\n. I can see this commit for 0.7.7 not sure it's related to twitter login being fixed https://github.com/omab/django-social-auth/commit/5a1ecdab625035ecdcda500e345c2d696b1b8245\n. ",
    "olrandir": "Updating to 0.7.7 solved the issue for me. Thanks! I was actually using 0.7.1.\n. ",
    "RakeshRam": "No but it does not work without 'social_auth.backends.pipeline.misc.save_status_to_session' either\n. Can you show me the setting u have used for Linkidin\nMy modified settings.py\nSOCIAL_AUTH_PIPELINE = (\n    'social_auth.backends.pipeline.social.social_auth_user',\n    'social_auth.backends.pipeline.social.associate_user',\n    'social_auth.backends.pipeline.social.load_extra_data',\n    'social_auth.backends.pipeline.user.update_user_details',\n    'social_auth.backends.pipeline.associate.associate_by_email'\n)\nLOGIN_REDIRECT_URL = '/filter/'\nLOGIN_ERROR_URL = '/login_error/'\nTEMPLATE_CONTEXT_PROCESSORS += (\n     'social_auth.context_processors.social_auth_by_name_backends',\n     'social_auth.context_processors.social_auth_backends',\n     'social_auth.context_processors.social_auth_by_type_backends',\n     'social_auth.context_processors.social_auth_login_redirect',\n)\nAUTHENTICATION_BACKENDS = (\n  'django.contrib.auth.backends.ModelBackend',\n  'social_auth.backends.contrib.linkedin.LinkedinBackend'\n)\nNow it throws \nValueError at /complete/linkedin/\nCannot assign None: \"UserSocialAuth.user\" does not allow null values.\n. Thank You very much this solved my problem.\n. ",
    "tonylampada": "Touch\u00e9! Setting security settings from GET parameters, what was I thinking? :-)\nAnyway, extending the provider doesn't smell right to me either - if I have many situations where I need different combinations of permissions, I'd have to create many providers, all for Github.\nHow about another approach, take a look at this hipothetical settings fragment:\npython\nGITHUB_EXTENDED_PERMISSIONS = []\nGITHUB_ALTERNATIVES = [\n    ('level1', {'EXTENDED_PERMISSIONS':['public_repo']}),\n    ('level2', {'EXTENDED_PERMISSIONS':['user','public_repo','repo']}),]\nThen\n- /login/github would login with lowest permissions\n- /login/github/level1 would login with medium permissions\n- /login/github/level2 would login with high permissions\nWdyt?\nWould you be willing to accept such a PR?\n. Ah, I see, thanks for your suggestions - works for me, can use the first one right away.\nIMO the second solution sounds good too, not sure if it's worth the trouble though. I'll let that decision up to you :-)\nThanks @omab, big help!\n. Hi @avances123 \nhere's a working example if  you're still interested - https://github.com/freedomsponsors/www.freedomsponsors.org\n. I think it's possible. Do you know if there's a config setting in nginx for that?\n. No luck. Here's my nginx config file:\n```\nfrespo_nginx.conf\nthe upstream component nginx needs to connect to\nupstream django {\n    server unix:///tmp/frespo.sock; # for a file socket\n    # server 127.0.0.1:8001; # for a web port socket (we'll use this first)\n    }\nserver {\n    listen       80;\n    server_name  www.freedomsponsors.org;\n    return       301 http://freedomsponsors.org$request_uri;\n}\nconfiguration of the server\nserver {\n    # the port your site will be served on\n    listen      80;\n    # the domain name it will serve for\n    server_name freedomsponsors.org; # substitute your machine's IP address or FQDN\n    charset     utf-8;\n# max upload size\nclient_max_body_size 75M;   # adjust to taste\n\nlarge_client_header_buffers 4 64k;\n\n# Django media\nlocation /media  {\n    alias /home/frespo/media;  # your Django project's media files - amend as r$\n}\n\nlocation /logs  {\n    alias /home/frespo/logs;  \n}\n\nlocation /static {\n    alias /home/frespo/www.freedomsponsors.org/djangoproject/core/static; # your Django project's static files - amend as required\n}\n\n# Finally, send all non-media requests to the Django server.\nlocation / {\n    uwsgi_pass  django;\n    include     /home/frespo/www.freedomsponsors.org/djangoproject/frespo/uwsgi_params; # the uwsgi_params file you installed\n    }\n}\n\n```\n. VICTORY!!!\nAfter researching a little I found out that uwsgi has a --daemonize option that will direct uwsgi logs to a file.\nAfter enabling that, I started to see an error like `invalid request block size: 4167 (max 4096)...skip\nSo I added another config option: buffer-size     = 8192\nAnd the problem went away.\nThanks a lot to Bastian who helped me debug this problem!\n. @omab thanks! It felt very good indeed ;-)\n. @kakky Did you have any luck with python-social-auth?\n. Thanks!\n. @omab just answered me on the mail list [1]\nHere it is [2]\n[1] https://groups.google.com/forum/#!topic/django-social-auth/7ljo6sxdtsw\n[2] http://psa.matiasaguirre.net/docs/configuration/porting_from_dsa.html \n. thanks!\n. ",
    "kennyledet": "^ I know this is extremely late, but have you specified that you want 'offline_access' in FACEBOOK_EXTENDED_PERMISSIONS in your settings file?\n. ",
    "goldsmith": "+1 to 'offline_access'. For Google OAuth2, I just added the line\nGOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {'access_type':'offline'}\nto my settings.py, and everything started working.\n. @antonagestam @Pragueham I'm getting this issue as well. Any idea why it happened for you guys?\nI'm using Google OAuth2 backend \n. ",
    "fierroformo": "I have a error:\nImportError: cannot import name dsa_urlopen\n. ",
    "zzzombat": "Author of 'vkontakte' example app thinks that it doesn't make sense.\nhttp://www.ikrvss.ru/2011/11/08/django-social-auh-and-vkontakte-application/\n. ",
    "toidi": "There are two backends VKontakte OpenAPI authorization mechanism and VKontakteOAuth2 authentication backend.\nThe first one use VKONTAKTE_APP_ID.\nThe second one VK_APP_ID.\nLook the source https://github.com/omab/django-social-auth/blob/master/social_auth/backends/contrib/vkontakte.py\n. I can provide any additional information if it is necessary.\n. @GitBib take another key from application settings\n\n. ",
    "dakoller": "Hi omab,\nthx for the fast response: their doc is not yet public, I just copy their 'getting started'-example (in ruby):\nrequire 'rubygems'\nrequire 'oauth'\nrequire 'json'\nconsumer = OAuth::Consumer.new(CONSUMER_KEY, CONSUMER_SECRET, {\n  :site => \"https://api.xing.com\",\n  :request_token_path => \"/v1/request_token\",\n  :authorize_path => \"/v1/authorize\",\n  :access_token_path => \"/v1/access_token\"\n})\nStep 1: Obtain a request token\nmore info -> https://dev.xing.com/docs/authentication#call_v1_request_token\nputs \"Starting oauth handshake, ask for request token...\"\nrequest_token = consumer.get_request_token\nStep 2: Obtain user authorization\nmore info -> https://dev.xing.com/docs/authentication#call_v1_authorize\nauthorize_url = request_token.authorize_url\nprint \"Please open the following URL in your browser:\n  #{authorize_url}\nand enter the PIN here: \"\nverifier = gets.strip\nStep 3: Exchange the authorized request token for an access token\nmore info -> https://dev.xing.com/docs/authentication#call_v1_access_token\nputs \"Exchanging request token for your access token...\"\naccess_token = request_token.get_access_token(:oauth_verifier => verifier)\nputs \"Handshake complete. You should remember the following credentials,\\\n which you will need for further requests:\"\nputs \" access token: #{access_token.token}\"\nputs \" access token secret: #{access_token.secret}\"\nAnd now we can start with real API calls :-)\nputs \"\\nYou are:\"\nresult = access_token.request(:get,\n          \"https://api.xing.com/v1/users/me?fields=id,display_name,gender\")\nputs result.body\nputs \"\\nand your amount of contacts is:\"\nresult = access_token.request(:get,\n          \"https://api.xing.com/v1/users/me/contacts?limit=0\")\nputs JSON.parse(result.body)[\"contacts\"][\"total\"]\nI used the LinkedIn-code as a basis (as it seems to be also based on OAuth 1.0) and wrote:\n\"\"\"\nXING OAuth support\nNo extra configurations are needed to make this work.\n\"\"\"\nfrom xml.etree import ElementTree\nfrom xml.parsers.expat import ExpatError\nfrom oauth2 import Token\nfrom social_auth.utils import setting\nfrom social_auth.backends import ConsumerBasedOAuth, OAuthBackend, USERNAME\nfrom social_auth.backends.exceptions import AuthCanceled, AuthUnknownError\nXING_SERVER = 'xing.com'\nXING_REQUEST_TOKEN_URL = 'https://api.%s/v1/request_token' % \\\n                                    XING_SERVER\nXING_ACCESS_TOKEN_URL = 'https://api.%s/v1/access_token' % \\\n                                    XING_SERVER\nXING_AUTHORIZATION_URL = 'https://www.%s/v1/authorize' % \\\n                                    XING_SERVER\nXING_CHECK_AUTH = 'https://api.%s/v1/users/me.json' % XING_SERVER\nCheck doc at http://developer.linkedin.com/docs/DOC-1014 about how to use\nfields selectors to retrieve extra user data\nclass XingBackend(OAuthBackend):\n    \"\"\"Xing OAuth authentication backend\"\"\"\n    name = 'xing'\n    EXTRA_DATA = [('id', 'id')]\ndef get_user_details(self, response):\n    \"\"\"Return user details from Linkedin account\"\"\"\n    first_name, last_name = response['first-name'], response['last-name']\n    email = response.get('email-address', '')\n    return {USERNAME: first_name + last_name,\n            'fullname': first_name + ' ' + last_name,\n            'first_name': first_name,\n            'last_name': last_name,\n            'email': email}\nclass XingAuth(ConsumerBasedOAuth):\n    \"\"\"Xing OAuth authentication mechanism\"\"\"\n    AUTHORIZATION_URL = XING_AUTHORIZATION_URL\n    REQUEST_TOKEN_URL = XING_REQUEST_TOKEN_URL\n    ACCESS_TOKEN_URL = XING_ACCESS_TOKEN_URL\n    SERVER_URL = 'api.%s' % XING_SERVER\n    AUTH_BACKEND = XingBackend\n    SETTINGS_KEY_NAME = 'XING_CONSUMER_KEY'\n    SETTINGS_SECRET_NAME = 'XING_CONSUMER_SECRET'\n    SCOPE_SEPARATOR = '+'\n```\ndef user_data(self, access_token, args, *kwargs):\n    \"\"\"Return user data provided\"\"\"\n    url = LINKEDIN_CHECK_AUTH \n    request = self.oauth_request(access_token, url)\n    raw_xml = self.fetch_response(request)\n    try:\n        return to_dict(ElementTree.fromstring(raw_xml))\n    except (ExpatError, KeyError, IndexError):\n        return None\ndef auth_complete(self, *args, kwargs):\n    \"\"\"Complete auth process. Check Xing error response.\"\"\"\n    oauth_problem = self.request.GET.get('oauth_problem')\n    if oauth_problem:\n        if oauth_problem == 'user_refused':\n            raise AuthCanceled(self, '')\n        else:\n            raise AuthUnknownError(self, 'Xing error was %s' %\n                                                oauth_problem)\n    return super(LinkedinAuth, self).auth_complete(*args, kwargs)\ndef get_scope(self):\n    \"\"\"Return list with needed access scope\"\"\"\n    scope = []\n    if self.SCOPE_VAR_NAME:\n        scope = setting(self.SCOPE_VAR_NAME, [])\n    else:\n        scope = []\n    return scope\ndef unauthorized_token(self):\n    \"\"\"Makes first request to oauth. Returns an unauthorized Token.\"\"\"\n    request_token_url = self.REQUEST_TOKEN_URL\n    scope = self.get_scope()\n    if scope:\n        qs = 'scope=' + self.SCOPE_SEPARATOR.join(scope)\n        request_token_url = request_token_url + '?' + qs\nrequest = self.oauth_request(\n    token=None,\n    url=request_token_url,\n    extra_params=self.request_token_extra_arguments()\n)\nresponse = self.fetch_response(request)\nreturn Token.from_string(response)\n\n```\ndef to_dict(xml):\n    \"\"\"Convert XML structure to dict recursively, repeated keys entries\n    are returned as in list containers.\"\"\"\n    children = xml.getchildren()\n    if not children:\n        return xml.text\n    else:\n        out = {}\n        for node in xml.getchildren():\n            if node.tag in out:\n                if not isinstance(out[node.tag], list):\n                    out[node.tag] = [out[node.tag]]\n                out[node.tag].append(to_dict(node))\n            else:\n                out[node.tag] = to_dict(node)\n        return out\nBackend definition\nBACKENDS = {\n    'xing': 'XingAuth',\n}\nThe error I am getting now (after having included the class in settings.py) is \nEnvironment:\nRequest Method: GET\nRequest URL: http://localhost:8000/login/xing/\nDjango Version: 1.4.1\nPython Version: 2.7.2\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'djcelery',\n 'south',\n 'social_auth',\n 'xing_resume')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTraceback:\nFile \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, *_callback_kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/decorators.py\" in wrapper\n2.             backend = get_backend(backend, request, redirect)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/backends/init.py\" in get_backend\n3.         get_backends(force_load=True)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/backends/init.py\" in get_backends\n4.             mod, cls_name = auth_backend.rsplit('.', 1)\nException Type: ValueError at /login/xing/\nException Value: need more than 1 value to unpack\n. from nwg.xing import XingBackend\nAUTHENTICATION_BACKENDS = (\n    ...,\n    'XINGBackend',\n    'django.contrib.auth.backends.ModelBackend',\n)\n(from settings.py ... nwg is the project name  )\n. thx: I changed settings.py now to\nimport nwg.xing \nAUTHENTICATION_BACKENDS = (\n    'social_auth.backends.contrib.linkedin.LinkedinBackend',\n    'nwg.xing.XINGBackend',\n    'django.contrib.auth.backends.ModelBackend',\n)\nThe error message is now different:\nEnvironment:\nRequest Method: GET\nRequest URL: http://localhost:8000/login/xing/\nDjango Version: 1.4.1\nPython Version: 2.7.2\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'djcelery',\n 'south',\n 'social_auth',\n 'xing_resume')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTraceback:\nFile \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, *_callback_kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/decorators.py\" in wrapper\n2.             backend = get_backend(backend, request, redirect)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/backends/init.py\" in get_backend\n3.         get_backends(force_load=True)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/backends/init.py\" in get_backends\n4.             backend = getattr(module, cls_name)\nException Type: AttributeError at /login/xing/\nException Value: 'module' object has no attribute 'XINGBackend'\n. nwg is the django project name, and xing ('.py') is a module inside the nwg project. (inside the nwg project there is an init.py present) \nFrom the shell, 'from nwg.xing import XingAuth' and 'from nwg.xing import XingBackend' both work.\n. thx for helping out with my typos,\nTraceback:\nFile \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, *_callback_kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/decorators.py\" in wrapper\n2.             backend = get_backend(backend, request, redirect)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/backends/init.py\" in get_backend\n3.         get_backends(force_load=True)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/backends/init.py\" in get_backends\n4.                 if name in backends and backends[name].enabled():\nException Type: AttributeError at /login/xing/\nException Value: 'str' object has no attribute 'enabled'\nthat's what it says now.. any clue?\n. thx, that did the trick!\nNow I get up to \"/complete/xing\" and get\nEnvironment:\nRequest Method: GET\nRequest URL: http://localhost:8000/complete/xing/?oauth_token=142079c54d22776b30c3&oauth_verifier=7225\nDjango Version: 1.4.1\nPython Version: 2.7.2\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'djcelery',\n 'south',\n 'social_auth',\n 'xing_resume')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTraceback:\nFile \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, _callback_kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n2.         return view_func(_args, _kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/decorators.py\" in wrapper\n3.                 return func(request, backend, _args, _kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/views.py\" in complete\n4.         return associate_complete(request, backend, _args, _kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/django/contrib/auth/decorators.py\" in _wrapped_view\n5.                 return view_func(request, _args, _kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/views.py\" in associate_complete\n6.     user = auth_complete(request, backend, request.user, _args, _kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/views.py\" in auth_complete\n7.     return backend.auth_complete(user=user, request=request, _args, _kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/nwg/xing.py\" in auth_complete\n8.         return super(XingAuth, self).auth_complete(_args, _kwargs)\n   File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/backends/init.py\" in auth_complete\n9.         data = self.user_data(access_token)\n   File \"/Users/daniel/Documents/workspace/nwg/nwg/xing.py\" in user_data\n10.         raw_xml = self.fetch_response(request)\n    File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/backends/init.py\" in fetch_response\n11.         response = dsa_urlopen(request.to_url())\n    File \"/Users/daniel/Documents/workspace/nwg/venv/lib/python2.7/site-packages/social_auth/utils.py\" in dsa_urlopen\n12.     return urlopen(_args, _kwargs)\n    File \"/Users/daniel/.pythonbrew/pythons/Python-2.7.2/lib/python2.7/urllib2.py\" in urlopen\n13.     return _opener.open(url, data, timeout)\n    File \"/Users/daniel/.pythonbrew/pythons/Python-2.7.2/lib/python2.7/urllib2.py\" in open\n14.             response = meth(req, response)\n    File \"/Users/daniel/.pythonbrew/pythons/Python-2.7.2/lib/python2.7/urllib2.py\" in http_response\n15.                 'http', request, response, code, msg, hdrs)\n    File \"/Users/daniel/.pythonbrew/pythons/Python-2.7.2/lib/python2.7/urllib2.py\" in error\n16.             return self._call_chain(args)\n    File \"/Users/daniel/.pythonbrew/pythons/Python-2.7.2/lib/python2.7/urllib2.py\" in _call_chain\n17.             result = func(*args)\n    File \"/Users/daniel/.pythonbrew/pythons/Python-2.7.2/lib/python2.7/urllib2.py\" in http_error_default\n18.         raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\nException Type: HTTPError at /complete/xing/\nException Value: HTTP Error 400: Bad Request \n. my flow starts with 'http://localhost:8000/login/xing' and (in a clean browser) session I get back to /complete/xing. (after the auth dialog with the app (  example link: https://www.xing.com/v1/authorize?oauth_token=c19450e472d6274144e1&oauth_callback=http%3A%2F%2Flocalhost%3A8000%2Fcomplete%2Fxing%2F ) ...it seems most of the process works, only the last piece is missing.\n(not sure whether this is what you asked for)\n. @omab thx for your support! I am one step further. Found out that the url for CHECK_AUTH was wrong (the website did not deliver a relevant result)\nThe issue is now that I have just methods for request_token, access_token and authorize, but not for an auth_check. So next step is to find a call, which delivers the user data back... when I set the get_user_data call to constants, the whole process works like charm.\n. thx @omab  for your support ... the basic module & functionality works now! \nWhere should I post the ready module, in case others want to use it as well? \n. ",
    "sbshetty01": "My question is I guess in the near future will defaulting the email string to an empty string go away. Not all openid providers return an email on authentication. eg. Twitter does not return an email id on authentication. \n. When email is None social_auth defaults it to '' as I showed in line (https://github.com/omab/django-social-auth/blob/master/social_auth/backends/pipeline/user.py#L47). And this fails with mongoengine as backend as validation for email fails.\n. No it will not fail as email is not a required field in mongoengine. So validation does not happen if the email field is None.\n. Thanks for the quick reply @omab. I will test it.\n. Works great @omab Thanks for the fix.\n. Does the fix for https://github.com/omab/django-social-auth/issues/500 fix your issue?\n. This doesn't seem to work @omab. I just used pdb to debug through it. Following is the stacktrace:\n``` python\n\n~/.virtualenvs/openid_merge_3/lib/python2.7/site-packages/social_auth/db/mongoengine_models.py(46)create_user()\n-> return cls.user_model().create_user(username=username, email=email)\n(Pdb) s\n--Call--\n~/.virtualenvs/openid_merge_3/lib/python2.7/site-packages/social_auth/db/mongoengine_models.py(36)user_model()\n-> @classmethod\n(Pdb) n\n~/.virtualenvs/openid_merge_3/lib/python2.7/site-packages/social_auth/db/mongoengine_models.py(38)user_model()\n-> return User\n(Pdb) n\n--Return--\n~/.virtualenvs/openid_merge_3/lib/python2.7/site-packages/social_auth/db/mongoengine_models.py(38)user_model()->\n-> return User\n(Pdb) n\nTypeError: 'create_user() takes at least 3 arguments (3 given)'\n~/.virtualenvs/openid_merge_3/lib/python2.7/site-packages/social_auth/db/mongoengine_models.py(46)create_user()\n-> return cls.user_model().create_user(username=username, email=email)\n```\n. @omab this does not fix the issue either. I am going to take a look at it and submit a patch. That seems to be the best way :)\n. Thanks @omab It all works now. Can you release v 0.7.10?\n. Thanks!\n. \n",
    "kjoconnor": "If I git clone this repo, set up the environment correctly, and django-admin.py runserver, this is what I get:\nhttp://cl.ly/image/3N2B0b3A012S\nBut I'm using the default settings file from the example which lists all of the following backends:\nAUTHENTICATION_BACKENDS = (\n    'social_auth.backends.twitter.TwitterBackend',\n    'social_auth.backends.facebook.FacebookBackend',\n    'social_auth.backends.google.GoogleOAuthBackend',\n    'social_auth.backends.google.GoogleOAuth2Backend',\n    'social_auth.backends.google.GoogleBackend',\n    'social_auth.backends.yahoo.YahooBackend',\n    'social_auth.backends.stripe.StripeBackend',\n    'social_auth.backends.contrib.linkedin.LinkedinBackend',\n    'social_auth.backends.contrib.skyrock.SkyrockBackend',\n    'social_auth.backends.contrib.flickr.FlickrBackend',\n    'social_auth.backends.contrib.instagram.InstagramBackend',\n    'social_auth.backends.contrib.github.GithubBackend',\n    'social_auth.backends.contrib.yandex.YandexBackend',\n    'social_auth.backends.contrib.yahoo.YahooOAuthBackend',\n    'social_auth.backends.contrib.foursquare.FoursquareBackend',\n    'social_auth.backends.OpenIDBackend',\n    'social_auth.backends.contrib.live.LiveBackend',\n    'social_auth.backends.contrib.livejournal.LiveJournalBackend',\n    'social_auth.backends.contrib.douban.DoubanBackend',\n    'social_auth.backends.browserid.BrowserIDBackend',\n    'social_auth.backends.contrib.vkontakte.VKontakteBackend',\n    'social_auth.backends.contrib.yandex.YandexOAuth2Backend',\n    'social_auth.backends.contrib.yandex.YaruBackend',\n    'social_auth.backends.contrib.odnoklassniki.OdnoklassnikiBackend',\n    'social_auth.backends.contrib.odnoklassniki.OdnoklassnikiAppBackend',\n    'social_auth.backends.contrib.vkontakte.VKontakteOAuth2Backend',\n    'social_auth.backends.contrib.mailru.MailruBackend',\n    'social_auth.backends.contrib.dailymotion.DailymotionBackend',\n    'social_auth.backends.contrib.shopify.ShopifyBackend',\n    'social_auth.backends.contrib.stocktwits.StocktwitsBackend',\n    'django.contrib.auth.backends.ModelBackend',\n)\nSo for instance, the dropbox backend has the following method which explains why it's not enabled:\n@classmethod\n    def enabled(cls):\n        \"\"\"Return backend enabled status by checking basic settings\"\"\"\n        return setting('DROPBOX_APP_ID') and setting('DROPBOX_API_SECRET')\n. You said backends are implicitly enabled if added to AUTHENTICATION_BACKENDS, but that's not the case.  There's some contributed backends that will never work because they don't have an enabled property/method and aren't implicitly enabled if you add them to AUTHENTICATION_BACKENDS.\n. ",
    "dhendo": "@omab - ok will check out why it was failing without\n. Ok, here's what's happening in my system\n- In the create_user step of the pipeline, if the email is not set, it doesn't get added to args:\n  pipeline/user.py: 47\n``` python\n args = {'username': username}\n    if details.get('email'):\n        args['email'] = details['email']\nreturn {\n    'user': UserSocialAuth.create_user(**args),\n    'is_new': True\n}\n\n```\nThis in turn calls django_models.py UserSocialAuth.create_user(), which in turn calls django/contrib/auth/models.py UserManager create_user(self, username, email, password=None)\nIf the email is not set in the args above, then create_user is called with only the user parameter, so fails with a TypeError:\n'create_user() takes at least 3 arguments (2 given)'\nI've removed the dummy email and defaulted the email arg we pass into UserSocialAuth.create_user to an empty string.\n. ",
    "scheeser": "No problem. Do you have a timeline on when you are planning on cutting your next release?\n. @omab That works for me. Thanks.\n. ",
    "tBaxter": "openId's YadisServiceManager (https://github.com/openid/python-openid/blob/master/openid/yadis/manager.py) pops the first first (ordered) service from the list when it's called. We think it's being called by uses_redirect, and then again later, which means it's always going to the second item in the services list.\n. Running a few quick tests, it definitely appears to work as expected now.\n. Yes, that appears to have done the trick and it now doesn't move to the second item in the list prematurely. \n. ",
    "l1bbcsg": "Yeah, it also removes dependancy on username field, doesn't it? \nBut I'm concerned, _meta.get_all_field_names() returns all fields of the model, even those that should not be changed by social auth provider. What if it supplies detail fields with names like \"password\", \"id\" or other with the same name as custom user model?\n. Whoops, excuse me being slow. Well, I believe it should be noted in the docs at least since it's left for the user to deal with (redefining pipeline process, or adding dummy email argument to create_user like I did as a quickfix)\n. ",
    "kevcampb": "I guess the bug is here then\nsocial_auth/backends/init.py:574:            raise AuthTokenError('Missing unauthorized token')\nsocial_auth/backends/init.py:578:            raise AuthTokenError('Incorrect tokens')\n. That's fantastic, thanks.\nI've tested this out, and it solves the issue.\n. Closing this, raised the issue on python-social-auth instead as it seems that is the preferred repo\n. ",
    "beaumartinez": ":+1:\n. Sweet\n. ",
    "some1thatNeedsHelp": "Latest version.\nServer IP: 192.168.0.7\nClient IP: 192.168.0.6\nServer URL: http://192.168.0.7/\nRequesting URL: http://192.168.0.7/login/twitter/\n_Just did this now_\nCommands\n```\n[root@localhost ~]# git clone git://github.com/omab/django-social-auth.git\nInitialized empty Git repository in /root/django-social-auth/.git/\nremote: Counting objects: 6226, done.\nremote: Compressing objects: 100% (2193/2193), done.\nReceiving objects: 100% (6226/6226), 876.72 KiB | 1.05 MiB/s, done.\nremote: Total 6226 (delta 4692), reused 5498 (delta 4012)\nResolving deltas: 100% (4692/4692), done.\n[root@localhost ~]# cd django-social-auth/\n[root@localhost django-social-auth]# git log | head\ncommit 68cdc802cc55ee68a1f480512cae25915a4f4fcd\nMerge: e064aee 02c6d49\nAuthor: Mat\u00c3\u00adas Aguirre matiasaguirre@gmail.com\nDate:   Sun Nov 11 06:14:37 2012 -0800\nMerge pull request #519 from dgouldin/master\n\nAdding TripIt backend\n\ncommit e064aee038f1a1a3b52ac4df6af4d3097866b534\n[root@localhost django-social-auth]# cd example/\n[root@localhost example]# cp local_settings.py.template local_settings.py\n[root@localhost example]# vi local_settings.py\n[root@localhost example]# python manage.py syncdb\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/conf/init.py:75: DeprecationWarning: The ADMIN_MEDIA_PREFIX setting has been removed; use STATIC_URL instead.\n  \"use STATIC_URL instead.\", DeprecationWarning)\nCreating tables ...\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_user_permissions\nCreating table auth_user_groups\nCreating table auth_user\nCreating table django_content_type\nCreating table django_session\nCreating table django_site\nCreating table django_admin_log\nCreating table social_auth_usersocialauth\nCreating table social_auth_nonce\nCreating table social_auth_association\nCreating table app_customuser\nYou just installed Django's auth system, which means you don't have any superusers defined.\nWould you like to create one now? (yes/no): yes\nUsername (leave blank to use 'root'):\nE-mail address: root@locahost.net\nPassword:\nPassword (again):\nSuperuser created successfully.\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/conf/init.py:75: DeprecationWarning: The ADMIN_MEDIA_PREFIX setting has been removed; use STATIC_URL instead.\n  \"use STATIC_URL instead.\", DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/conf/init.py:75: DeprecationWarning: The ADMIN_MEDIA_PREFIX setting has been removed; use STATIC_URL instead.\n  \"use STATIC_URL instead.\", DeprecationWarning)\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[10/Nov/2012 06:47:25] \"GET / HTTP/1.1\" 200 6451\n[10/Nov/2012 06:47:32] \"GET /login/twitter/ HTTP/1.1\" 500 132634\n^C[root@localhost example]#\n```\n_Traceback _\n```\nEnvironment:\nRequest Method: GET\nRequest URL: http://192.168.0.7/login/twitter/\nDjango Version: 1.4.2\nPython Version: 2.6.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.staticfiles',\n 'django.contrib.messages',\n 'django.contrib.admin',\n 'social_auth',\n 'app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'example.middleware.ExampleSocialAuthExceptionMiddleware')\nTraceback:\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, callback_args, callback_kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/decorators.py\" in wrapper\n  39.                 return func(request, backend, *args, kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/views.py\" in auth\n  28.     return auth_process(request, backend)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/views.py\" in auth_process\n  87.         return HttpResponseRedirect(backend.auth_url())\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/backends/init.py\" in auth_url\n  620.         token = self.unauthorized_token()\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/backends/init.py\" in unauthorized_token\n  662.         response = self.fetch_response(request)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/backends/init.py\" in fetch_response\n  685.         response = dsa_urlopen(request.to_url())\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/utils.py\" in dsa_urlopen\n  264.     return urlopen(args, kwargs)\nFile \"/usr/lib64/python2.6/urllib2.py\" in urlopen\n  126.     return _opener.open(url, data, timeout)\nFile \"/usr/lib64/python2.6/urllib2.py\" in open\n  397.             response = meth(req, response)\nFile \"/usr/lib64/python2.6/urllib2.py\" in http_response\n  510.                 'http', request, response, code, msg, hdrs)\nFile \"/usr/lib64/python2.6/urllib2.py\" in error\n  435.             return self._call_chain(args)\nFile \"/usr/lib64/python2.6/urllib2.py\" in _call_chain\n  369.             result = func(args)\nFile \"/usr/lib64/python2.6/urllib2.py\" in http_error_default\n  518.         raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\nException Type: HTTPError at /login/twitter/\nException Value: HTTP Error 401: Unauthorized\n```\nRequest information\nGET\nNo GET data\nPOST\nNo POST data\nFILES\nNo FILES data\nCOOKIES\nVariable    Value\ncsrftoken   \n'plBj6RMn9aclWNQ8G73J9thOTSW5YO9o'\nsessionid   \n'67a1d9228171d3ea90526e13622ea9a8'\nMETA\nVariable    Value\nSSH_ASKPASS \n'/usr/libexec/openssh/gnome-ssh-askpass'\nwsgi.multiprocess   \nFalse\nKDE_IS_PRELINKED    \n'1'\nRUN_MAIN    \n'true'\nHTTP_COOKIE \n'csrftoken=plBj6RMn9aclWNQ8G73J9thOTSW5YO9o; sessionid=67a1d9228171d3ea90526e13622ea9a8'\nSERVER_PROTOCOL \n'HTTP/1.1'\nSERVER_SOFTWARE \n'WSGIServer/0.1 Python/2.6.6'\nSCRIPT_NAME \nu''\nLESSOPEN    \n'|/usr/bin/lesspipe.sh %s'\nSSH_CLIENT  \n'192.168.0.6 50456 22'\nSELINUX_USE_CURRENT_RANGE   \n''\nLOGNAME \n'root'\nUSER    \n'root'\nPATH    \n'/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin'\nQUERY_STRING    \n''\nQTDIR   \n'/usr/lib64/qt-3.3'\nPS1 \n'[\\\\u@\\\\h \\\\W]\\\\$ '\nwsgi.errors \n<open file '<stderr>', mode 'w' at 0x7f14abaa21e0>\nLANG    \n'en_US.UTF-8'\nQTLIB   \n'/usr/lib64/qt-3.3/lib'\nTERM    \n'xterm'\nSHELL   \n'/bin/bash'\nTZ  \n'America/Chicago'\nSERVER_NAME \n'localhost.localdomain'\nREMOTE_ADDR \n'192.168.0.6'\nQTINC   \n'/usr/lib64/qt-3.3/include'\nG_BROKEN_FILENAMES  \n'1'\nHISTSIZE    \n'1000'\nREQUEST_METHOD  \n'GET'\nSERVER_PORT \n'80'\nHOME    \n'/root'\nCONTENT_LENGTH  \n''\nHTTP_DNT    \n'1'\nHTTP_ACCEPT_CHARSET \n'ISO-8859-1,utf-8;q=0.7,*;q=0.3'\nCSRF_COOKIE \n'plBj6RMn9aclWNQ8G73J9thOTSW5YO9o'\nSELINUX_ROLE_REQUESTED  \n''\nHTTP_USER_AGENT \n'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1'\nHTTP_HOST   \n'192.168.0.7'\nwsgi.multithread    \nTrue\nHTTP_CONNECTION \n'keep-alive'\nHTTP_CACHE_CONTROL  \n'max-age=0'\n_   \n'/usr/bin/python'\nHTTP_ACCEPT \n'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'\nKDEDIRS \n'/usr'\nwsgi.file_wrapper   \n''\nSSH_CONNECTION  \n'192.168.0.6 50456 192.168.0.7 22'\nwsgi.version    \n(1, 0)\nGATEWAY_INTERFACE   \n'CGI/1.1'\nwsgi.run_once   \nFalse\nSSH_TTY \n'/dev/pts/0'\nOLDPWD  \n'/root/django-social-auth'\nHOSTNAME    \n'localhost.localdomain'\nHTTP_ACCEPT_LANGUAGE    \n'en-GB,en-US;q=0.8,en;q=0.6'\nwsgi.input  \n<socket._fileobject object at 0x26a80d0>\nSELINUX_LEVEL_REQUESTED \n''\nHISTCONTROL \n'ignoredups'\nSHLVL   \n'1'\nPWD \n'/root/django-social-auth/example'\nCVS_RSH \n'ssh'\nDJANGO_SETTINGS_MODULE  \n'example.settings'\nCONTENT_TYPE    \n'text/plain'\nMAIL    \n'/var/spool/mail/root'\nLS_COLORS   \n'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.tbz=01;31:*.tbz2=01;31:*.bz=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.axa=01;36:*.oga=01;36:*.spx=01;36:*.xspf=01;36:'\nREMOTE_HOST \n''\nHTTP_ACCEPT_ENCODING    \n'gzip,deflate,sdch'\nwsgi.url_scheme \n'http'\nPATH_INFO   \nu'/login/twitter/'\nSettings\nSettings\nUsing settings module example.settings\nSetting Value\nMONTH_DAY_FORMAT    \n'F j'\nVKONTAKTE_APP_ID    \n''\nUSE_L10N    \nTrue\nUSE_THOUSAND_SEPARATOR  \nFalse\nCSRF_COOKIE_SECURE  \nFalse\nLANGUAGE_CODE   \n'en-us'\nROOT_URLCONF    \n'example.urls'\nMANAGERS    \n()\nTEMPLATE_LOADERS    \n('django.template.loaders.filesystem.Loader',\n 'django.template.loaders.app_directories.Loader')\nSKYROCK_CONSUMER_SECRET \nu'********************'\nDEFAULT_CHARSET \n'utf-8'\nYANDEX_OAUTH2_CLIENT_KEY    \nu'********************'\nSTATIC_ROOT \n''\nDOUBAN_CONSUMER_SECRET  \nu'********************'\nORKUT_CONSUMER_SECRET   \nu'********************'\nMESSAGE_STORAGE \n'django.contrib.messages.storage.fallback.FallbackStorage'\nEMAIL_SUBJECT_PREFIX    \n'[Django] '\nSEND_BROKEN_LINK_EMAILS \nFalse\nURL_VALIDATOR_USER_AGENT    \n'Django/1.4.2 (https://www.djangoproject.com)'\nSTATICFILES_FINDERS \n('django.contrib.staticfiles.finders.FileSystemFinder',\n 'django.contrib.staticfiles.finders.AppDirectoriesFinder')\nYANDEX_OAUTH2_API_URL   \nu'********************'\nGOOGLE_OAUTH2_CLIENT_ID \n''\nODNOKLASSNIKI_OAUTH2_APP_KEY    \nu'********************'\nSESSION_COOKIE_DOMAIN   \nNone\nSESSION_COOKIE_NAME \n'sessionid'\nADMIN_FOR   \n()\nTIME_INPUT_FORMATS  \n('%H:%M:%S', '%H:%M')\nDATABASES   \n{'default': {'ENGINE': 'django.db.backends.sqlite3',\n             'HOST': '',\n             'NAME': 'test.db',\n             'OPTIONS': {},\n             'PASSWORD': u'********************',\n             'PORT': '',\n             'TEST_CHARSET': None,\n             'TEST_COLLATION': None,\n             'TEST_MIRROR': None,\n             'TEST_NAME': None,\n             'TIME_ZONE': 'America/Chicago',\n             'USER': ''}}\nFILE_UPLOAD_PERMISSIONS \nNone\nTIME_FORMAT \n'P'\nFILE_UPLOAD_HANDLERS    \n('django.core.files.uploadhandler.MemoryFileUploadHandler',\n 'django.core.files.uploadhandler.TemporaryFileUploadHandler')\nDEFAULT_CONTENT_TYPE    \n'text/html'\nSHOPIFY_SHARED_SECRET   \nu'********************'\nAPPEND_SLASH    \nTrue\nFIRST_DAY_OF_WEEK   \n0\nDATABASE_ROUTERS    \n[]\nVKONTAKTE_APP_AUTH  \nNone\nYEAR_MONTH_FORMAT   \n'F Y'\nSTATICFILES_STORAGE \n'django.contrib.staticfiles.storage.StaticFilesStorage'\nCACHES  \n{'default': {'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',\n             'LOCATION': 'unique-snowflake'}}\nYANDEX_APP_ID   \n''\nDAILYMOTION_OAUTH2_SECRET   \nu'********************'\nYANDEX_API_SECRET   \nu'********************'\nSERVER_EMAIL    \n'root@localhost'\nSESSION_COOKIE_PATH \n'/'\nSHOPIFY_APP_API_KEY \nu'********************'\nSTOCKTWITS_CONSUMER_SECRET  \nu'********************'\nMIDDLEWARE_CLASSES  \n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'example.middleware.ExampleSocialAuthExceptionMiddleware')\nUSE_I18N    \nTrue\nTHOUSAND_SEPARATOR  \n','\nSECRET_KEY  \nu'********************'\nLANGUAGE_COOKIE_NAME    \n'django_language'\nFILE_UPLOAD_TEMP_DIR    \nNone\nYANDEX_OAUTH2_CLIENT_SECRET \nu'********************'\nTRANSACTIONS_MANAGED    \nFalse\nLOGGING_CONFIG  \n'django.utils.log.dictConfig'\nMAILRU_OAUTH2_CLIENT_KEY    \nu'********************'\nGOOGLE_OAUTH2_CLIENT_SECRET \nu'********************'\nSKYROCK_CONSUMER_KEY    \nu'********************'\nWSGI_APPLICATION    \nNone\nORKUT_CONSUMER_KEY  \nu'********************'\nTEMPLATE_DEBUG  \nTrue\nX_FRAME_OPTIONS \n'SAMEORIGIN'\nFOURSQUARE_CONSUMER_KEY \nu'********************'\nDOUBAN_CONSUMER_KEY \nu'********************'\nFORCE_SCRIPT_NAME   \nNone\nUSE_X_FORWARDED_HOST    \nFalse\nSIGNING_BACKEND \n'django.core.signing.TimestampSigner'\nSESSION_COOKIE_SECURE   \nFalse\nCSRF_COOKIE_DOMAIN  \nNone\nFILE_CHARSET    \n'utf-8'\nDEBUG   \nTrue\nSESSION_FILE_PATH   \nNone\nDEFAULT_FILE_STORAGE    \n'django.core.files.storage.FileSystemStorage'\nINSTALLED_APPS  \n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.staticfiles',\n 'django.contrib.messages',\n 'django.contrib.admin',\n 'social_auth',\n 'app')\nODNOKLASSNIKI_OAUTH2_CLIENT_KEY \nu'********************'\nLANGUAGES   \n(('ar', 'Arabic'),\n ('az', 'Azerbaijani'),\n ('bg', 'Bulgarian'),\n ('bn', 'Bengali'),\n ('bs', 'Bosnian'),\n ('ca', 'Catalan'),\n ('cs', 'Czech'),\n ('cy', 'Welsh'),\n ('da', 'Danish'),\n ('de', 'German'),\n ('el', 'Greek'),\n ('en', 'English'),\n ('en-gb', 'British English'),\n ('eo', 'Esperanto'),\n ('es', 'Spanish'),\n ('es-ar', 'Argentinian Spanish'),\n ('es-mx', 'Mexican Spanish'),\n ('es-ni', 'Nicaraguan Spanish'),\n ('et', 'Estonian'),\n ('eu', 'Basque'),\n ('fa', 'Persian'),\n ('fi', 'Finnish'),\n ('fr', 'French'),\n ('fy-nl', 'Frisian'),\n ('ga', 'Irish'),\n ('gl', 'Galician'),\n ('he', 'Hebrew'),\n ('hi', 'Hindi'),\n ('hr', 'Croatian'),\n ('hu', 'Hungarian'),\n ('id', 'Indonesian'),\n ('is', 'Icelandic'),\n ('it', 'Italian'),\n ('ja', 'Japanese'),\n ('ka', 'Georgian'),\n ('kk', 'Kazakh'),\n ('km', 'Khmer'),\n ('kn', 'Kannada'),\n ('ko', 'Korean'),\n ('lt', 'Lithuanian'),\n ('lv', 'Latvian'),\n ('mk', 'Macedonian'),\n ('ml', 'Malayalam'),\n ('mn', 'Mongolian'),\n ('nb', 'Norwegian Bokmal'),\n ('ne', 'Nepali'),\n ('nl', 'Dutch'),\n ('nn', 'Norwegian Nynorsk'),\n ('pa', 'Punjabi'),\n ('pl', 'Polish'),\n ('pt', 'Portuguese'),\n ('pt-br', 'Brazilian Portuguese'),\n ('ro', 'Romanian'),\n ('ru', 'Russian'),\n ('sk', 'Slovak'),\n ('sl', 'Slovenian'),\n ('sq', 'Albanian'),\n ('sr', 'Serbian'),\n ('sr-latn', 'Serbian Latin'),\n ('sv', 'Swedish'),\n ('sw', 'Swahili'),\n ('ta', 'Tamil'),\n ('te', 'Telugu'),\n ('th', 'Thai'),\n ('tr', 'Turkish'),\n ('tt', 'Tatar'),\n ('uk', 'Ukrainian'),\n ('ur', 'Urdu'),\n ('vi', 'Vietnamese'),\n ('zh-cn', 'Simplified Chinese'),\n ('zh-tw', 'Traditional Chinese'))\nCOMMENTS_ALLOW_PROFANITIES  \nFalse\nSOCIAL_AUTH_DEFAULT_USERNAME    \n'socialauth_user'\nSTATICFILES_DIRS    \n()\nPREPEND_WWW \nFalse\nSECURE_PROXY_SSL_HEADER \nNone\nSESSION_COOKIE_HTTPONLY \nTrue\nFACEBOOK_APP_ID \n''\nDEBUG_PROPAGATE_EXCEPTIONS  \nFalse\nLINKEDIN_CONSUMER_KEY   \nu'********************'\nSOCIAL_AUTH_FORCE_RANDOM_USERNAME   \nFalse\nLOGIN_URL   \n'/accounts/login/'\nSESSION_EXPIRE_AT_BROWSER_CLOSE \nFalse\nLINKEDIN_CONSUMER_SECRET    \nu'********************'\nAUTHENTICATION_BACKENDS \n('social_auth.backends.twitter.TwitterBackend',\n 'social_auth.backends.facebook.FacebookBackend',\n 'social_auth.backends.google.GoogleOAuthBackend',\n 'social_auth.backends.google.GoogleOAuth2Backend',\n 'social_auth.backends.google.GoogleBackend',\n 'social_auth.backends.yahoo.YahooBackend',\n 'social_auth.backends.stripe.StripeBackend',\n 'social_auth.backends.contrib.linkedin.LinkedinBackend',\n 'social_auth.backends.contrib.skyrock.SkyrockBackend',\n 'social_auth.backends.contrib.flickr.FlickrBackend',\n 'social_auth.backends.contrib.instagram.InstagramBackend',\n 'social_auth.backends.contrib.github.GithubBackend',\n 'social_auth.backends.contrib.yandex.YandexBackend',\n 'social_auth.backends.contrib.yahoo.YahooOAuthBackend',\n 'social_auth.backends.contrib.foursquare.FoursquareBackend',\n 'social_auth.backends.OpenIDBackend',\n 'social_auth.backends.contrib.live.LiveBackend',\n 'social_auth.backends.contrib.livejournal.LiveJournalBackend',\n 'social_auth.backends.contrib.douban.DoubanBackend',\n 'social_auth.backends.browserid.BrowserIDBackend',\n 'social_auth.backends.contrib.vkontakte.VKontakteBackend',\n 'social_auth.backends.contrib.yandex.YandexOAuth2Backend',\n 'social_auth.backends.contrib.yandex.YaruBackend',\n 'social_auth.backends.contrib.odnoklassniki.OdnoklassnikiBackend',\n 'social_auth.backends.contrib.odnoklassniki.OdnoklassnikiAppBackend',\n 'social_auth.backends.contrib.vkontakte.VKontakteOAuth2Backend',\n 'social_auth.backends.contrib.mailru.MailruBackend',\n 'social_auth.backends.contrib.dailymotion.DailymotionBackend',\n 'social_auth.backends.contrib.shopify.ShopifyBackend',\n 'social_auth.backends.contrib.stocktwits.StocktwitsBackend',\n 'django.contrib.auth.backends.ModelBackend')\nMAILRU_OAUTH2_CLIENT_SECRET \nu'********************'\nDATE_INPUT_FORMATS  \n('%Y-%m-%d',\n '%m/%d/%Y',\n '%m/%d/%y',\n '%b %d %Y',\n '%b %d, %Y',\n '%d %b %Y',\n '%d %b, %Y',\n '%B %d %Y',\n '%B %d, %Y',\n '%d %B %Y',\n '%d %B, %Y')\nLOGIN_ERROR_URL \n'/login/error/'\nVKONTAKTE_APP_SECRET    \nu'********************'\nCSRF_COOKIE_NAME    \n'csrftoken'\nEMAIL_HOST_PASSWORD \nu'********************'\nPASSWORD_RESET_TIMEOUT_DAYS \nu'********************'\nFOURSQUARE_CONSUMER_SECRET  \nu'********************'\nCACHE_MIDDLEWARE_ALIAS  \n'default'\nROOT_PATH   \n'/root/django-social-auth/example'\nSESSION_SAVE_EVERY_REQUEST  \nFalse\nADMIN_MEDIA_PREFIX  \n'/admin-media/'\nNUMBER_GROUPING \n0\nTWITTER_CONSUMER_SECRET \nu'********************'\nSESSION_ENGINE  \n'django.contrib.sessions.backends.db'\nCSRF_FAILURE_VIEW   \n'django.views.csrf.csrf_failure'\nCSRF_COOKIE_PATH    \n'/'\nLOGIN_REDIRECT_URL  \n'/'\nSOCIAL_AUTH_PIPELINE    \n('social_auth.backends.pipeline.social.social_auth_user',\n 'social_auth.backends.pipeline.associate.associate_by_email',\n 'social_auth.backends.pipeline.misc.save_status_to_session',\n 'app.pipeline.redirect_to_form',\n 'app.pipeline.username',\n 'social_auth.backends.pipeline.user.create_user',\n 'social_auth.backends.pipeline.social.associate_user',\n 'social_auth.backends.pipeline.social.load_extra_data',\n 'social_auth.backends.pipeline.user.update_user_details')\nLOGGING \n{'disable_existing_loggers': False,\n 'filters': {'require_debug_false': {'()': 'django.utils.log.RequireDebugFalse'}},\n 'handlers': {'mail_admins': {'class': 'django.utils.log.AdminEmailHandler',\n                              'filters': ['require_debug_false'],\n                              'level': 'ERROR'}},\n 'loggers': {'django.request': {'handlers': ['mail_admins'],\n                                'level': 'ERROR',\n                                'propagate': True}},\n 'version': 1}\nIGNORABLE_404_URLS  \n()\nLOCALE_PATHS    \n()\nTEMPLATE_STRING_IF_INVALID  \n''\nMAILRU_OAUTH2_APP_KEY   \nu'********************'\nLOGOUT_URL  \n'/accounts/logout/'\nEMAIL_USE_TLS   \nFalse\nODNOKLASSNIKI_OAUTH2_CLIENT_SECRET  \nu'********************'\nVK_API_SECRET   \nu'********************'\nFIXTURE_DIRS    \n()\nEMAIL_HOST  \n'localhost'\nDATE_FORMAT \n'N j, Y'\nFACEBOOK_API_SECRET \nu'********************'\nMEDIA_ROOT  \n''\nDEFAULT_EXCEPTION_REPORTER_FILTER   \n'django.views.debug.SafeExceptionReporterFilter'\nADMINS  \n()\nFORMAT_MODULE_PATH  \nNone\nDEFAULT_FROM_EMAIL  \n'webmaster@localhost'\nSTOCKTWITS_CONSUMER_KEY \nu'********************'\nSOCIAL_AUTH_ERROR_KEY   \nu'********************'\nMEDIA_URL   \n''\nDATETIME_FORMAT \n'N j, Y, P'\nTEMPLATE_DIRS   \n('/root/django-social-auth/example/templates',)\nTWITTER_CONSUMER_KEY    \nu'********************'\nSITE_ID \n1\nDISALLOWED_USER_AGENTS  \n()\nALLOWED_INCLUDE_ROOTS   \n()\nDECIMAL_SEPARATOR   \n'.'\nSHORT_DATE_FORMAT   \n'm/d/Y'\nGITHUB_API_SECRET   \nu'********************'\nPROJECT_NAME    \n'example'\nTEST_RUNNER \n'django.test.simple.DjangoTestSuiteRunner'\nCACHE_MIDDLEWARE_KEY_PREFIX \nu'********************'\nTIME_ZONE   \n'America/Chicago'\nFILE_UPLOAD_MAX_MEMORY_SIZE \n2621440\nSOCIAL_AUTH_CREATE_USERS    \nTrue\nEMAIL_BACKEND   \n'django.core.mail.backends.smtp.EmailBackend'\nDEFAULT_TABLESPACE  \n''\nTEMPLATE_CONTEXT_PROCESSORS \n('django.contrib.auth.context_processors.auth',\n 'django.core.context_processors.debug',\n 'django.core.context_processors.i18n',\n 'django.core.context_processors.media',\n 'django.contrib.messages.context_processors.messages',\n 'social_auth.context_processors.social_auth_by_type_backends')\nSESSION_COOKIE_AGE  \n1209600\nSETTINGS_MODULE \n'example.settings'\nUSE_ETAGS   \nFalse\nLANGUAGES_BIDI  \n('he', 'ar', 'fa')\nSOCIAL_AUTH_COMPLETE_URL_NAME   \n'socialauth_complete'\nDEFAULT_INDEX_TABLESPACE    \n''\nINTERNAL_IPS    \n()\nSTATIC_URL  \n'/static/'\nVK_APP_ID   \n''\nEMAIL_PORT  \n25\nUSE_TZ  \nFalse\nSHORT_DATETIME_FORMAT   \n'm/d/Y P'\nPASSWORD_HASHERS    \nu'********************'\nABSOLUTE_URL_OVERRIDES  \n{}\nDAILYMOTION_OAUTH2_KEY  \nu'********************'\nCACHE_MIDDLEWARE_SECONDS    \n600\nDATETIME_INPUT_FORMATS  \n('%Y-%m-%d %H:%M:%S',\n '%Y-%m-%d %H:%M:%S.%f',\n '%Y-%m-%d %H:%M',\n '%Y-%m-%d',\n '%m/%d/%Y %H:%M:%S',\n '%m/%d/%Y %H:%M:%S.%f',\n '%m/%d/%Y %H:%M',\n '%m/%d/%Y',\n '%m/%d/%y %H:%M:%S',\n '%m/%d/%y %H:%M:%S.%f',\n '%m/%d/%y %H:%M',\n '%m/%d/%y')\nGITHUB_APP_ID   \n''\nEMAIL_HOST_USER \n''\nPROFANITIES_LIST    \nu'********************'\n. Hmmm.... Its now line 264....\nNot sure what's different.\nAnyway. Line 264:\nScreenshot\nhttp://i.imgur.com/kcneW.png\nText version\n```\n/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/utils.py in dsa_urlopen\n\ndef dsa_urlopen(args, *kwargs):\n\"\"\"Like urllib2.urlopen but sets a timeout defined by\nSOCIAL_AUTH_URLOPEN_TIMEOUT setting if defined (and not already in\nkwargs).\"\"\"\ntimeout = setting('SOCIAL_AUTH_URLOPEN_TIMEOUT')\nif timeout and 'timeout' not in kwargs:\nkwargs['timeout'] = timeout\nreturn urlopen(args, *kwargs) ...\n\n\nif name == 'main':\nimport doctest\ndoctest.testmod()\n\nVariable    Value\nargs  \n(u'https://api.twitter.com/oauth/request_token?oauth_body_hash=2***K%2FYBwk%3D&oauth_nonce=9**3&oauth_timestamp=1352553989&oauth_consumer_key=c***A&oauth_signature_method=HMAC-SHA1&oauth_version=1.0&oauth_signature=6***g%3D&oauth_callback=http%3A%2F%2F192.168.0.7%2Fcomplete%2Ftwitter%2F',)\ntimeout \nNone\nkwargs\n{}\n```\n...And the error message & method/commands\nScreenshot\nhttp://i.imgur.com/aJxtN.png\nCommands\n```\n[root@localhost ~]# git clone git://github.com/omab/django-social-auth.git\nInitialized empty Git repository in /root/django-social-auth/.git/\nremote: Counting objects: 6226, done.\nremote: Compressing objects: 100% (2193/2193), done.\nremote: Total 6226 (delta 4692), reused 5498 (delta 4012)\nReceiving objects: 100% (6226/6226), 876.72 KiB | 636 KiB/s, done.\nResolving deltas: 100% (4692/4692), done.\n[root@localhost ~]# cd django-social-auth/example/\n[root@localhost example]# mv ~/local_settings.py ./\n[root@localhost example]# ls -l local_settings.py*\n-rw-r--r--. 1 root root 3056 Nov 10 13:21 local_settings.py\n-rw-r--r--. 1 root root 2928 Nov 10 13:23 local_settings.py.template\n[root@localhost example]# git log | head\ncommit 68cdc802cc55ee68a1f480512cae25915a4f4fcd\nMerge: e064aee 02c6d49\nAuthor: Mat\u00c3\u00adas Aguirre matiasaguirre@gmail.com\nDate:   Sun Nov 11 06:14:37 2012 -0800\nMerge pull request #519 from dgouldin/master\n\nAdding TripIt backend\n\ncommit e064aee038f1a1a3b52ac4df6af4d3097866b534\n[root@localhost example]# python manage.py syncdb\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/conf/init.py:75: DeprecationWarning: The ADMIN_MEDIA_PREFIX setting has been removed; use STATIC_URL instead.\n  \"use STATIC_URL instead.\", DeprecationWarning)\nCreating tables ...\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_user_permissions\nCreating table auth_user_groups\nCreating table auth_user\nCreating table django_content_type\nCreating table django_session\nCreating table django_site\nCreating table django_admin_log\nCreating table social_auth_usersocialauth\nCreating table social_auth_nonce\nCreating table social_auth_association\nCreating table app_customuser\nYou just installed Django's auth system, which means you don't have any superusers defined.\nWould you like to create one now? (yes/no): yes\nUsername (leave blank to use 'root'): \nE-mail address: root@pleasework.com\nPassword:\nPassword (again):\nSuperuser created successfully.\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/conf/init.py:75: DeprecationWarning: The ADMIN_MEDIA_PREFIX setting has been removed; use STATIC_URL instead.\n  \"use STATIC_URL instead.\", DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/conf/init.py:75: DeprecationWarning: The ADMIN_MEDIA_PREFIX setting has been removed; use STATIC_URL instead.\n  \"use STATIC_URL instead.\", DeprecationWarning)\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[10/Nov/2012 07:26:28] \"GET / HTTP/1.1\" 200 6532\n[10/Nov/2012 07:26:30] \"GET /login/twitter/ HTTP/1.1\" 500 132583\n^CUnhandled exception in thread started by >\nError in sys.excepthook:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.6/site-packages/abrt_exception_handler.py\", line 198, in \n    sys.excepthook = lambda etype, value, tb: handleMyException((etype, value, tb))\nTypeError: 'NoneType' object is not callable\nOriginal exception was:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/core/management/commands/runserver.py\", line 111, in inner_run\n    ipv6=self.use_ipv6, threading=threading)\n  File \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/core/servers/basehttp.py\", line 253, in run\n    httpd.serve_forever()\n  File \"/usr/lib64/python2.6/SocketServer.py\", line 224, in serve_forever\n    r, w, e = select.select([self], [], [], poll_interval)\nAttributeError: 'NoneType' object has no attribute 'select'\n[root@localhost example]#\n```\nTraceback\n```\nEnvironment:\nRequest Method: GET\nRequest URL: http://192.168.0.7/login/twitter/\nDjango Version: 1.4.2\nPython Version: 2.6.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.staticfiles',\n 'django.contrib.messages',\n 'django.contrib.admin',\n 'social_auth',\n 'app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'example.middleware.ExampleSocialAuthExceptionMiddleware')\nTraceback:\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, callback_args, callback_kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/decorators.py\" in wrapper\n  39.                 return func(request, backend, *args, kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/views.py\" in auth\n  28.     return auth_process(request, backend)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/views.py\" in auth_process\n  87.         return HttpResponseRedirect(backend.auth_url())\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/backends/init.py\" in auth_url\n  620.         token = self.unauthorized_token()\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/backends/init.py\" in unauthorized_token\n  662.         response = self.fetch_response(request)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/backends/init.py\" in fetch_response\n  685.         response = dsa_urlopen(request.to_url())\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.9-py2.6.egg/social_auth/utils.py\" in dsa_urlopen\n  264.     return urlopen(args, kwargs)\nFile \"/usr/lib64/python2.6/urllib2.py\" in urlopen\n  126.     return _opener.open(url, data, timeout)\nFile \"/usr/lib64/python2.6/urllib2.py\" in open\n  397.             response = meth(req, response)\nFile \"/usr/lib64/python2.6/urllib2.py\" in http_response\n  510.                 'http', request, response, code, msg, hdrs)\nFile \"/usr/lib64/python2.6/urllib2.py\" in error\n  435.             return self._call_chain(args)\nFile \"/usr/lib64/python2.6/urllib2.py\" in _call_chain\n  369.             result = func(args)\nFile \"/usr/lib64/python2.6/urllib2.py\" in http_error_default\n  518.         raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\nException Type: HTTPError at /login/twitter/\nException Value: HTTP Error 401: Unauthorized\n```\n. _Traceback _\n```\nEnvironment:\nRequest Method: GET\nRequest URL: http://192.168.0.7/\nDjango Version: 1.4.2\nPython Version: 2.6.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'social_auth',\n 'app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTemplate error:\nIn template /root/django-social-auth/example/example/templates/home.html, error at line 15\n   No module named stripe\n   5 : \n6 : \n7 : {% endblock %}\n8 : \n9 : {% block heading %}Login using any of the following methods{% endblock %}\n10 : \n11 : {% block content %}\n12 : \n13 :   Login using OAuth from:\n14 :   \n15 :    {% for name in social_auth.backends.oauth %} \n16 :     {{ name|title }}\n17 :   {% endfor %}\n18 :   \n19 : \n20 : \n21 : \n22 :   Login using OAuth2 from:\n23 :   \n24 :   {% for name in social_auth.backends.oauth2 %}\n25 :     {{ name|title }}\nTraceback:\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, callback_args, callback_kwargs)\nFile \"/root/django-social-auth/example/app/views.py\" in home\n  18.                                   RequestContext(request))\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/shortcuts/init.py\" in render_to_response\n  20.     return HttpResponse(loader.render_to_string(*args, kwargs), *httpresponse_kwargs)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/loader.py\" in render_to_string\n  176.         return t.render(context_instance)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/base.py\" in render\n  140.             return self._render(context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/base.py\" in _render\n  134.         return self.nodelist.render(context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/base.py\" in render\n  823.                 bit = self.render_node(node, context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/debug.py\" in render_node\n  74.             return node.render(context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/loader_tags.py\" in render\n  123.         return compiled_parent._render(context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/base.py\" in _render\n  134.         return self.nodelist.render(context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/base.py\" in render\n  823.                 bit = self.render_node(node, context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/debug.py\" in render_node\n  74.             return node.render(context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/loader_tags.py\" in render\n  62.             result = block.nodelist.render(context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/base.py\" in render\n  823.                 bit = self.render_node(node, context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/debug.py\" in render_node\n  74.             return node.render(context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/defaulttags.py\" in render\n  138.             values = self.sequence.resolve(context, True)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/base.py\" in resolve\n  571.                 obj = self.var.resolve(context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/base.py\" in resolve\n  721.             value = self._resolve_lookup(context)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/template/base.py\" in _resolve_lookup\n  751.                     current = current[bit]\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/utils.py\" in getitem\n  247.             self._setup()\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/utils/functional.py\" in _setup\n  248.         self._wrapped = self._setupfunc()\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/context_processors.py\" in context_value\n  26.         data = backends_data(request.user)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/context_processors.py\" in backends_data\n  68.     available = get_backends().keys()\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/backends/init.py\" in get_backends\n  810.             module = import_module(mod)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/utils/importlib.py\" in import_module\n  35.     import(name)\nException Type: ImportError at /\nException Value: No module named stripe\n```\nCommands\n```\n[root@localhost ~]# git clone git://github.com/omab/django-social-auth.git\nInitialized empty Git repository in /root/django-social-auth/.git/\nremote: Counting objects: 6361, done.\nremote: Compressing objects: 100% (2148/2148), done.\nReceiving objects: 100% (6361/6361), 895.51 KiB | 702 KiB/s, done.\nremote: Total 6361 (delta 4791), reused 5712 (delta 4192)\nResolving deltas: 100% (4791/4791), done.\n[root@localhost ~]# cd django-social-auth/\n[root@localhost django-social-auth]# git log | head\ncommit e06f4822277538bfe73767613f2fe165a14d7814\nAuthor: Mat\u00c3\u00adas Aguirre matiasaguirre@gmail.com\nDate:   Wed Nov 14 23:03:58 2012 -0200\nUpdated example app to django 1.4\n\ncommit 36eb1247332f663601d07ec7074526b6d59b518c\nAuthor: Mat\u00c3\u00adas Aguirre matiasaguirre@gmail.com\nDate:   Wed Nov 14 22:02:28 2012 -0200\n[root@localhost django-social-auth]# cd example/example/\n[root@localhost example]# cp local_settings.py.template local_settings.py\n[root@localhost example]# vi local_settings.py\n[root@localhost example]# python manage.py syncdb\npython: can't open file 'manage.py': [Errno 2] No such file or directory\n[root@localhost example]# cd ..\n[root@localhost example]# python manage.py syncdb\nCreating tables ...\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_user_permissions\nCreating table auth_user_groups\nCreating table auth_user\nCreating table django_content_type\nCreating table django_session\nCreating table django_site\nCreating table django_admin_log\nCreating table social_auth_usersocialauth\nCreating table social_auth_nonce\nCreating table social_auth_association\nCreating table app_customuser\nYou just installed Django's auth system, which means you don't have any superusers defined.\nWould you like to create one now? (yes/no): yes\nUsername (leave blank to use 'root'):\nE-mail address: root@test.org\nPassword:\nPassword (again):\nSuperuser created successfully.\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[12/Nov/2012 06:38:21] \"GET / HTTP/1.1\" 500 281412\n^C[root@localhost example]#\n```\n. Fixed this first issue like so:\ncommands\n```\n[root@localhost example]# sed -i \"s/'social_auth.backends.stripe.StripeBackend',/#'social_auth.backends.stripe.StripeBackend',/\" example/settings.py\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[12/Nov/2012 06:43:32] \"GET / HTTP/1.1\" 200 6478\n[12/Nov/2012 06:43:35] \"GET /sa/login/twitter/ HTTP/1.1\" 500 131461\n^C[root@localhost example]#\n```\nTrackback\n```\nEnvironment:\nRequest Method: GET\nRequest URL: http://192.168.0.7/sa/login/twitter/\nDjango Version: 1.4.2\nPython Version: 2.6.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'social_auth',\n 'app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTraceback:\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, callback_args, callback_kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/decorators.py\" in wrapper\n  39.                 return func(request, backend, *args, kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/views.py\" in auth\n  28.     return auth_process(request, backend)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/views.py\" in auth_process\n  87.         return HttpResponseRedirect(backend.auth_url())\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/backends/init.py\" in auth_url\n  578.         token = self.unauthorized_token()\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/backends/init.py\" in unauthorized_token\n  617.         response = self.fetch_response(request)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/backends/init.py\" in fetch_response\n  636.         response = dsa_urlopen(request.to_url())\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/utils.py\" in dsa_urlopen\n  263.     return urlopen(args, kwargs)\nFile \"/usr/lib64/python2.6/urllib2.py\" in urlopen\n  126.     return _opener.open(url, data, timeout)\nFile \"/usr/lib64/python2.6/urllib2.py\" in open\n  397.             response = meth(req, response)\nFile \"/usr/lib64/python2.6/urllib2.py\" in http_response\n  510.                 'http', request, response, code, msg, hdrs)\nFile \"/usr/lib64/python2.6/urllib2.py\" in error\n  435.             return self._call_chain(args)\nFile \"/usr/lib64/python2.6/urllib2.py\" in _call_chain\n  369.             result = func(args)\nFile \"/usr/lib64/python2.6/urllib2.py\" in http_error_default\n  518.         raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\nException Type: HTTPError at /sa/login/twitter/\nException Value: HTTP Error 401: Unauthorized\n```\n. The stripe error has now gone (by itself)\nNow removed the django_social_auth-*.egg, so the only trace of it, is whats in git repo.\nYou can see all the commands which Im doing. I'm restoring from a fresh CentOS 6.2 VM every time.\nTraceback\n```\nEnvironment:\nRequest Method: GET\nRequest URL: http://192.168.0.7/login/twitter/\nDjango Version: 1.4.2\nPython Version: 2.6.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'social_auth',\n 'app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTraceback:\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, callback_args, callback_kwargs)\nFile \"../social_auth/decorators.py\" in wrapper\n  26.             return func(request, request.social_auth_backend, *args, kwargs)\nFile \"../social_auth/views.py\" in auth\n  28.     return auth_process(request, backend)\nFile \"../social_auth/views.py\" in auth_process\n  87.         return HttpResponseRedirect(backend.auth_url())\nFile \"../social_auth/backends/init.py\" in auth_url\n  618.         token = self.unauthorized_token()\nFile \"../social_auth/backends/init.py\" in unauthorized_token\n  674.         return Token.from_string(self.fetch_response(request))\nFile \"../social_auth/backends/init.py\" in fetch_response\n  696.         response = dsa_urlopen(request.to_url())\nFile \"../social_auth/utils.py\" in dsa_urlopen\n  254.     return urlopen(args, kwargs)\nFile \"/usr/lib64/python2.6/urllib2.py\" in urlopen\n  126.     return _opener.open(url, data, timeout)\nFile \"/usr/lib64/python2.6/urllib2.py\" in open\n  397.             response = meth(req, response)\nFile \"/usr/lib64/python2.6/urllib2.py\" in http_response\n  510.                 'http', request, response, code, msg, hdrs)\nFile \"/usr/lib64/python2.6/urllib2.py\" in error\n  435.             return self._call_chain(args)\nFile \"/usr/lib64/python2.6/urllib2.py\" in _call_chain\n  369.             result = func(args)\nFile \"/usr/lib64/python2.6/urllib2.py\" in http_error_default\n  518.         raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)\nException Type: HTTPError at /login/twitter/\nException Value: HTTP Error 401: Unauthorized\n```\nCommands\n```\n[root@localhost ~]# rm -rf /usr/lib/python2.6/site-packages/django_social_auth-*\n[root@localhost ~]# rm -rf django-social-auth/\n[root@localhost ~]# git clone git://github.com/omab/django-social-auth.git\nInitialized empty Git repository in /root/django-social-auth/.git/\nremote: Counting objects: 6372, done.\nremote: Compressing objects: 100% (2157/2157), done.\nReceiving objects: 100% (6372/6372), 896.33 KiB | 742 KiB/s, done.\nremote: Total 6372 (delta 4798), reused 5718 (delta 4194)\nResolving deltas: 100% (4798/4798), done.\n[root@localhost ~]# cd django-social-auth/\n[root@localhost django-social-auth]# git log | head\ncommit 0fcbc02ea426f013922310c960ab10a1e601943a\nAuthor: Mat\u00c3\u00adas Aguirre matiasaguirre@gmail.com\nDate:   Thu Nov 15 13:13:58 2012 -0200\nRestore login url path\n\ncommit 0f69f99c029ecdbaead163cb6724677679497050\nAuthor: Mat\u00c3\u00adas Aguirre matiasaguirre@gmail.com\nDate:   Thu Nov 15 13:01:18 2012 -0200\n[root@localhost django-social-auth]# cd example/example/\n[root@localhost example]# mv local_settings.py.template local_settings.py\n[root@localhost example]# vi local_settings.py\n[root@localhost example]# vi local_settings.py\n[root@localhost example]# cd ..\n[root@localhost example]# python manage.py syncdb\nCreating tables ...\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_user_permissions\nCreating table auth_user_groups\nCreating table auth_user\nCreating table django_content_type\nCreating table django_session\nCreating table django_site\nCreating table django_admin_log\nCreating table social_auth_usersocialauth\nCreating table social_auth_nonce\nCreating table social_auth_association\nCreating table app_customuser\nYou just installed Django's auth system, which means you don't have any superusers defined.\nWould you like to create one now? (yes/no): yes\nUsername (leave blank to use 'root'): root\nE-mail address: root@root.net\nPassword:\nPassword (again):\nSuperuser created successfully.\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[12/Nov/2012 07:14:08] \"GET / HTTP/1.1\" 200 5637\n[12/Nov/2012 07:14:10] \"GET /login/twitter/ HTTP/1.1\" 500 130461\n^C[root@localhost example]#\n.\n I've updated your server date, it was set in the future and that invalidates OAuth process\n still, seems that the root of the issue is related with that (another user had the same issue a couple weeks ago), installing ntp did the trick\n I've installed ntp on your server and now it works :D\n I've used these steps to install ntp on centos http://www.cyberciti.biz/faq/howto-install-ntp-to-synchronize-server-clock/\n```\nThanks for sorting it out =)\n@omab \nSpeedy fix once again!\n/me takes his hat off\n. 5e25aaca2c0d523cbba69d2d965c94bf7a3e3a0c  <--- when the error starts to happen\ncf0e512a9cec8b9c6b8d48cf522b6a07fa4ac3fe <--- as far as I can tell, the last time when Google OAuth2 worked!\ngit reset --hard 5e25aaca2c0d523cbba69d2d965c94bf7a3e3a0c\npython manage.py runserver 0.0.0.0:80\ngit reset --hard cf0e512a9cec8b9c6b8d48cf522b6a07fa4ac3fe \npython manage.py runserver 0.0.0.0:80\n. Just done the follow commands, still having the same issue!\nScreenshot:\nhttp://imgur.com/rnraL\nCommands\n```\n[root@localhost ~]# git clone git://github.com/omab/django-social-auth.git\nInitialized empty Git repository in /root/django-social-auth/.git/\nremote: Counting objects: 6226, done.\nremote: Compressing objects: 100% (2193/2193), done.\nremote: Total 6226 (delta 4692), reused 5498 (delta 4012)\nReceiving objects: 100% (6226/6226), 876.72 KiB | 806 KiB/s, done.\nResolving deltas: 100% (4692/4692), done.\n[root@localhost ~]# cd django-social-auth/\n[root@localhost django-social-auth]# git log | head\ncommit 68cdc802cc55ee68a1f480512cae25915a4f4fcd\nMerge: e064aee 02c6d49\nAuthor: Mat\u00c3\u00adas Aguirre matiasaguirre@gmail.com\nDate:   Sun Nov 11 06:14:37 2012 -0800\nMerge pull request #519 from dgouldin/master\n\nAdding TripIt backend\n\ncommit e064aee038f1a1a3b52ac4df6af4d3097866b534\n[root@localhost django-social-auth]# cd example/\n[root@localhost example]# cp local_settings.py.template local_settings.py\n[root@localhost example]# vi local_settings.py\n[root@localhost example]# python manage.py syncdb\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/conf/init.py:75: DeprecationWarning: The ADMIN_MEDIA_PREFIX setting has been removed; use STATIC_URL instead.\n  \"use STATIC_URL instead.\", DeprecationWarning)\nCreating tables ...\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_user_permissions\nCreating table auth_user_groups\nCreating table auth_user\nCreating table django_content_type\nCreating table django_session\nCreating table django_site\nCreating table django_admin_log\nCreating table social_auth_usersocialauth\nCreating table social_auth_nonce\nCreating table social_auth_association\nCreating table app_customuser\nYou just installed Django's auth system, which means you don't have any superusers defined.\nWould you like to create one now? (yes/no): yes\nUsername (leave blank to use 'root'): root\nE-mail address: root@localhost.com\nPassword:\nPassword (again):\nSuperuser created successfully.\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n[root@localhost example]# grep -iR \"AUTHENTICATION_BACKENDS\" ../\n../doc/configuration.rst:- Add desired authentication backends to Django's AUTHENTICATION_BACKENDS_ setting::\n../doc/configuration.rst:    AUTHENTICATION_BACKENDS = (\n../doc/configuration.rst:  Take into account that backends must be defined in AUTHENTICATION_BACKENDS_\n../doc/configuration.rst:.. _AUTHENTICATION_BACKENDS: http://docs.djangoproject.com/en/dev/ref/settings/?from=olddocs#authentication-backends\n../doc/backends/douban.rst:  into your AUTHENTICATION_BACKENDS.\n../doc/backends/douban.rst:  into your AUTHENTICATION_BACKENDS.\n../doc/backends/odnoklassnikiru.rst:  into your AUTHENTICATION_BACKENDS.\n../doc/backends/odnoklassnikiru.rst:  into your AUTHENTICATION_BACKENDS\n../doc/backends/mixcloud.rst:- Add Mixcloud backend to AUTHENTICATION_BACKENDS in settings::\n../doc/backends/mixcloud.rst:    AUTHENTICATION_BACKENDS = (\n../doc/backends/twilio.rst:- Add desired authentication backends to Django's AUTHENTICATION_BACKENDS\n../doc/backends/stripe.rst:- Add the needed backend to AUTHENTICATION_BACKENDS::\n../doc/backends/stripe.rst:    AUTHENTICATION_BACKENDS = (\n../social_auth/backends/init.py:    AUTHENTICATION_BACKENDS is imported and checked for a BACKENDS\n../social_auth/backends/init.py:        for auth_backend in setting('AUTHENTICATION_BACKENDS'):\n../social_auth/backends/init.py:    AUTHENTICATION_BACKENDS is imported and checked for a BACKENDS\n../example/settings.py:AUTHENTICATION_BACKENDS = (\nBinary file ../example/settings.pyc matches\n[root@localhost example]# grep \"AUTHENTICATION_BACKENDS = (\" settings.py -A 35 -B2\n)\nAUTHENTICATION_BACKENDS = (\n    'social_auth.backends.twitter.TwitterBackend',\n    'social_auth.backends.facebook.FacebookBackend',\n    'social_auth.backends.google.GoogleOAuthBackend',\n    'social_auth.backends.google.GoogleOAuth2Backend',\n    'social_auth.backends.google.GoogleBackend',\n    'social_auth.backends.yahoo.YahooBackend',\n    'social_auth.backends.stripe.StripeBackend',\n    'social_auth.backends.contrib.linkedin.LinkedinBackend',\n    'social_auth.backends.contrib.skyrock.SkyrockBackend',\n    'social_auth.backends.contrib.flickr.FlickrBackend',\n    'social_auth.backends.contrib.instagram.InstagramBackend',\n    'social_auth.backends.contrib.github.GithubBackend',\n    'social_auth.backends.contrib.yandex.YandexBackend',\n    'social_auth.backends.contrib.yahoo.YahooOAuthBackend',\n    'social_auth.backends.contrib.foursquare.FoursquareBackend',\n    'social_auth.backends.OpenIDBackend',\n    'social_auth.backends.contrib.live.LiveBackend',\n    'social_auth.backends.contrib.livejournal.LiveJournalBackend',\n    'social_auth.backends.contrib.douban.DoubanBackend',\n    'social_auth.backends.browserid.BrowserIDBackend',\n    'social_auth.backends.contrib.vkontakte.VKontakteBackend',\n    'social_auth.backends.contrib.yandex.YandexOAuth2Backend',\n    'social_auth.backends.contrib.yandex.YaruBackend',\n    'social_auth.backends.contrib.odnoklassniki.OdnoklassnikiBackend',\n    'social_auth.backends.contrib.odnoklassniki.OdnoklassnikiAppBackend',\n    'social_auth.backends.contrib.vkontakte.VKontakteOAuth2Backend',\n    'social_auth.backends.contrib.mailru.MailruBackend',\n    'social_auth.backends.contrib.dailymotion.DailymotionBackend',\n    'social_auth.backends.contrib.shopify.ShopifyBackend',\n    'social_auth.backends.contrib.stocktwits.StocktwitsBackend',\n    'django.contrib.auth.backends.ModelBackend',\n)\nTEMPLATE_CONTEXT_PROCESSORS = (\n    'django.contrib.auth.context_processors.auth',\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/conf/init.py:75: DeprecationWarning: The ADMIN_MEDIA_PREFIX setting has been removed; use STATIC_URL instead.\n  \"use STATIC_URL instead.\", DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/conf/init.py:75: DeprecationWarning: The ADMIN_MEDIA_PREFIX setting has been removed; use STATIC_URL instead.\n  \"use STATIC_URL instead.\", DeprecationWarning)\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[10/Nov/2012 07:07:13] \"GET / HTTP/1.1\" 200 6463\n[10/Nov/2012 07:07:15] \"GET /login/google-oauth2/ HTTP/1.1\" 302 0\n[10/Nov/2012 07:07:16] \"GET /complete/google-oauth2/?state=kHfxP6****&code=4/U6iG***.QsbDe1****** HTTP/1.1\" 302 0\n[10/Nov/2012 07:07:16] \"GET /login/error/ HTTP/1.1\" 500 32\n^C[root@localhost example]#\n.\n[root@localhost example]# python manage.py shell\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/conf/init.py:75: DeprecationWarning: The ADMIN_MEDIA_PREFIX setting has been removed; use STATIC_URL instead.\n  \"use STATIC_URL instead.\", DeprecationWarning)\nPython 2.6.6 (r266:84292, Sep 11 2012, 08:34:23)\n[GCC 4.4.6 20120305 (Red Hat 4.4.6-4)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n\n\n\nfrom social_auth.backends.google import GoogleOAuth2\nprint GoogleOAuth2.enabled()\nL****5\n```\n\n\n\n_Matches \"Client secret\" value in Google's \"API Access\".\n. Ops....\n_wrong button!\n. Traceback\n```\nEnvironment:\nRequest Method: GET\nRequest URL: http://86.19.105.115.xip.io/sa/complete/google-oauth2/?state=mRNrtmsGHN9H0rECoK2ba9brCc2OkUKX&code=4/1afpPTi50nVpKqrhENldUYD5hufZ.koiKd37lg70ZOl05ti8ZT3aTxEYJdgI\nDjango Version: 1.4.2\nPython Version: 2.6.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'social_auth',\n 'app')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTraceback:\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/core/handlers/base.py\" in get_response\n  111.                         response = callback(request, callback_args, callback_kwargs)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/views/decorators/csrf.py\" in wrapped_view\n  77.         return view_func(*args, kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/decorators.py\" in wrapper\n  39.                 return func(request, backend, args, kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/views.py\" in complete\n  39.         return complete_process(request, backend, *args, kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/views.py\" in complete_process\n  97.     user = auth_complete(request, backend, args, kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/views.py\" in auth_complete\n  170.     return backend.auth_complete(user=user, request=request, *args, kwargs)\nFile \"/usr/lib/python2.6/site-packages/django_social_auth-0.7.7-py2.6.egg/social_auth/backends/init.py\" in auth_complete\n  766.             return authenticate(args, **kwargs)\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py\" in authenticate\n  43.     for backend in get_backends():\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py\" in get_backends\n  34.         backends.append(load_backend(backend_path))\nFile \"/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py\" in load_backend\n  16.         raise ImproperlyConfigured('Error importing authentication backend %s: \"%s\"' % (path, e))\nException Type: ImproperlyConfigured at /sa/complete/google-oauth2/\nException Value: Error importing authentication backend social_auth.backends.contrib.dailymotion.DailymotionBackend: \"No module named dailymotion\"\n```\nCommands\n```\n[root@localhost ~]# rm -rf django-social-auth/\n[root@localhost ~]# history | grep git | tail\n  792  history | grep git\n  793  git clone git://github.com/omab/django-social-auth.git\n  797  git log | head\n 1005  history | grep git\n 1006  git clone git://github.com/omab/django-social-auth.git\n 1008  git log | head\n 1014  history | grep git\n 1015  git clone git://github.com/omab/django-social-auth.git\n 1017  git log | head\n 1033  history | grep git | tail\n[root@localhost ~]# git clone git://github.com/omab/django-social-auth.git\nInitialized empty Git repository in /root/django-social-auth/.git/\nremote: Counting objects: 6367, done.\nremote: Compressing objects: 100% (2153/2153), done.\nReceiving objects: 100% (6367/6367), 895.94 KiB | 249 KiB/s, done.\nremote: Total 6367 (delta 4795), reused 5715 (delta 4193)\nResolving deltas: 100% (4795/4795), done.\n[root@localhost ~]# cd django-social-auth/\n[root@localhost django-social-auth]# git log | head\ncommit 0f69f99c029ecdbaead163cb6724677679497050\nAuthor: Mat\u00c3\u00adas Aguirre matiasaguirre@gmail.com\nDate:   Thu Nov 15 13:01:18 2012 -0200\nRemove html valid badges\n\ncommit e06f4822277538bfe73767613f2fe165a14d7814\nAuthor: Mat\u00c3\u00adas Aguirre matiasaguirre@gmail.com\nDate:   Wed Nov 14 23:03:58 2012 -0200\n[root@localhost django-social-auth]# cd example/example/\n[root@localhost example]# mv local_settings.py.template local_settings.py\n[root@localhost example]# vi local_settings.py\n[root@localhost example]# cd ..\n[root@localhost example]# python manage.py syncdb\nCreating tables ...\nCreating table auth_permission\nCreating table auth_group_permissions\nCreating table auth_group\nCreating table auth_user_user_permissions\nCreating table auth_user_groups\nCreating table auth_user\nCreating table django_content_type\nCreating table django_session\nCreating table django_site\nCreating table django_admin_log\nCreating table social_auth_usersocialauth\nCreating table social_auth_nonce\nCreating table social_auth_association\nCreating table app_customuser\nYou just installed Django's auth system, which means you don't have any superusers defined.\nWould you like to create one now? (yes/no): yes\nUsername (leave blank to use 'root'):\nE-mail address: root@test123.work\nPassword:\nPassword (again):\nSuperuser created successfully.\nInstalling custom SQL ...\nInstalling indexes ...\nInstalled 0 object(s) from 0 fixture(s)\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[12/Nov/2012 06:49:33] \"GET / HTTP/1.1\" 500 247129\n^C[root@localhost example]# !sed\nsed -i \"s/'social_auth.backends.stripe.StripeBackend',/#'social_auth.backends.stripe.StripeBackend',/\" example/settings.py | grep -i strip\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[12/Nov/2012 06:51:02] \"GET / HTTP/1.1\" 500 247824\n[12/Nov/2012 06:51:03] \"GET / HTTP/1.1\" 200 5675\n[12/Nov/2012 06:51:05] \"GET /sa/login/google-oauth2/ HTTP/1.1\" 302 0\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n[12/Nov/2012 06:51:06] \"GET /sa/complete/google-oauth2/?state=IoInHdJydysvJdBs7W9UbCtWjCLogQzt&code=4/1NmdsFs-TTnSEGLdGnE1uCliyt4j.4mwa6BgtEjMeOl05ti8ZT3ZdT0cJdgI HTTP/1.1\" 500 144367\n^C[root@localhost example]#\n```\n. Okay! \nI finally got it working!\n_Commands_\n```\n[root@localhost example]# sed -i \"s/'social_auth.backends.contrib.dailymotion.DailymotionBackend',/#'social_auth.backends.contrib.dailymotion.DailymotionBackend',/\" example/settings.py\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[12/Nov/2012 06:55:51] \"GET /sa/complete/google-oauth2/?state=m****X&code=4/1***Z.k***I HTTP/1.1\" 500 98982\n^C[root@localhost example]sed -i \"s/'social_auth.backends.contrib.shopify.ShopifyBackend',/#'social_auth.backends.contrib.shopify.ShopifyBackend',/\" example/settings.py\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[12/Nov/2012 06:56:27] \"GET /sa/complete/google-oauth2/?state=m****X&code=4/1***Z.k***I HTTP/1.1\" 500 98945\n^C[root@localhost example]sed -i \"s/'social_auth.backends.contrib.stocktwits.StocktwitsBackend',/#'social_auth.backends.contrib.stocktwits.StocktwitsBackend',/\" example/settings.py\n[root@localhost example]# ^C\n[root@localhost example]# python manage.py runserver 0.0.0.0:80\nValidating models...\n0 errors found\nDjango version 1.4.2, using settings 'example.settings'\nDevelopment server is running at http://0.0.0.0:80/\nQuit the server with CONTROL-C.\n[12/Nov/2012 06:57:02] \"GET /sa/complete/google-oauth2/?state=m****X&code=4/1***Z.k***I HTTP/1.1\" 500 123231\n[12/Nov/2012 06:57:06] \"GET / HTTP/1.1\" 200 5675\n[12/Nov/2012 06:57:09] \"GET /sa/login/google-oauth2/ HTTP/1.1\" 302 0\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n/usr/lib/python2.6/site-packages/Django-1.4.2-py2.6.egg/django/contrib/auth/init.py:26: DeprecationWarning: Authentication backends without a supports_inactive_user attribute are deprecated. Please define it in .\n  DeprecationWarning)\n[12/Nov/2012 06:57:10] \"GET /sa/complete/google-oauth2/?state=6****4&code=4/*****l.0*******I HTTP/1.1\" 302 0\n[12/Nov/2012 06:57:10] \"GET /form/ HTTP/1.1\" 200 2652\n[12/Nov/2012 06:57:13] \"POST /form/ HTTP/1.1\" 302 0\n[12/Nov/2012 06:57:13] \"GET /sa/complete/google-oauth2/ HTTP/1.1\" 302 0\n[12/Nov/2012 06:57:13] \"GET / HTTP/1.1\" 302 0\n[12/Nov/2012 06:57:13] \"GET /done HTTP/1.1\" 301 0\n[12/Nov/2012 06:57:13] \"GET /done/ HTTP/1.1\" 200 5921\n^C[root@localhost example]#\n```\nAs you can see from the sed commands, I had to disable dailymotion, shopify, stocktwits just the same as stripe. Else it would say\nException Value: No module named stripe\nAfterwards, it would work! =)\n*p.s. I had to re login to Google, to alter the URL:\nRedirect URIs:  http://<domain>/sa/complete/google-oauth2/\nLast time\nRedirect URIs:  http://<domain>/complete/google-oauth2/\nNote: that '/sa/' is added \nAnyway... \nIts now working for me & OAuth2\n. @omab \nThanks for sorting out the issue. I take my hat off to you at the speed you work. \nPlease, keep up the good work\n. @omab\nIll update again then (;\nAnd yeah, I guess the egg files were playing a part in this. Which is funny cos I don't remember doing anything related to it (I don't have PIP installed!)\nYup, problem fixed, thread closed (:\nThanks once again!\n. ",
    "stevejalim": "I've got the same issue (Djagno==1.3.4, django-social-auth==0.7.9). I only created the oauth key and secret for this project yesterday and didn't see an option to allow 'Log in with Twitter' on the app settings. That may be significant here.\n. D'oh - facepalm time (always happens 30 seconds after posting). Looking at the settings, I'd been given the access tokens rather than the consumer tokens. Changing to the latter got me past the 401.\n. ",
    "veonua": "have the same issue even with example application\nVkontakteOAuth2 provider as well\nFacebook and Google OpenID works\nyou need to log more info, because current sting gives no clue what have been happened \n. ",
    "MikeVL": "I am testing two google backends. GoogleBackend (OpenID) backend works well, but GoogleOAuth2Backend create new user and associate social with it.\nif you change the line 827 in file django-social-auth / social_auth / backends / init.py for this:\n- return self.do_auth(response['access_token'], response=response)\n- return self.do_auth(response['access_token'], response=response, _args, *_kwargs)\neverything works fine.\n. ",
    "henward0": "Hi Matias,\nNo problem.  I added angel.rst do doc/backends and just pushed.  Thanks for\nmaintaining django-social-auth.  It is an awesome module.  I'm excited I\ncan be a very minor contributor :).\nHenry\nOn Tue, Nov 13, 2012 at 8:53 AM, Mat\u00edas Aguirre notifications@github.comwrote:\n\nThanks @henward0 https://github.com/henward0, could you add some docs\non doc/backends/? Just an small text with some links to where the user must\ngo to create an app on angel.co, etc.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/pull/526#issuecomment-10333330.\n. \n",
    "jgsogo": "touch\u00e9! xD\n. ",
    "daisuke0131": "did you resolve this problem?\nsame problem happened...\n. ",
    "karanbhangui": "hmmm, after tracing the SQL calls after the response from linkedin, it looks like the email is inserted into the User object instead of being stored in extra_data.\n. I guess the second part of this issue stems from my misunderstanding of the LinkedIn API. I realize now the correct way to query multiple location attributes is like so: location:(name,country:(code)). However, the first part of the report remains an open question..\n. Thanks, that seems to work. For my purposes, I think it's best to use DSA for auth purposes only, and then use a LinkedIn API library to query the API using the tokens in extra_data.\n. ",
    "Morgul": "I  went ahead and made the changes, to save time/effort.\n. Not a problem. Thanks for accepting it!\n. ",
    "mwaterfall": "Yep that patch works great! I also realised the character set for the database is utf8mb4, which was only making things worse! \n. ",
    "phoebebright": "Am having the same problem but now the problem model is Assocciation:\nCREATE TABLE social_auth_association (\n    id integer AUTO_INCREMENT NOT NULL PRIMARY KEY,\n    server_url varchar(255) NOT NULL,\n    handle varchar(255) NOT NULL,\n    secret varchar(255) NOT NULL,\n    issued integer NOT NULL,\n    lifetime integer NOT NULL,\n    assoc_type varchar(64) NOT NULL,\n    UNIQUE (server_url, handle)\n)\nserver_url and handle are both 255 and not sure it would be safe to shorten server_url?\n. Used these settings and syncdb worked fine, will feedback if any problems using these settings:\nsettings for social_auth\nSOCIAL_AUTH_UID_LENGTH = 222\nSOCIAL_AUTH_NONCE_SERVER_URL_LENGTH = 200\nSOCIAL_AUTH_ASSOCIATION_SERVER_URL_LENGTH = 135\nSOCIAL_AUTH_ASSOCIATION_HANDLE_LENGTH = 125\nThanks for such a quick response!\n. ",
    "dengyuanzhong": "phoebebright's solution is OK.\nThanks.\n. Used these settings (Refs #539) and import worked fine:\nsettings for social_auth\nSOCIAL_AUTH_UID_LENGTH = 222\nSOCIAL_AUTH_NONCE_SERVER_URL_LENGTH = 200\nSOCIAL_AUTH_ASSOCIATION_SERVER_URL_LENGTH = 135\nSOCIAL_AUTH_ASSOCIATION_HANDLE_LENGTH = 125\nCan you fix the bug (Change the length in models) in the future version?\n. Thanks @seansay \nMy settings.py\nWEIBO_CLIENT_KEY = '...'\nWEIBO_CLIENT_SECRET = '...'\nDOUBAN2_CONSUMER_KEY = '...'\nDOUBAN2_CONSUMER_SECRET = '...'\nAUTHENTICATION_BACKENDS = (\n    'social_auth.backends.contrib.weibo.WeiboBackend',\n    'social_auth.backends.contrib.douban.DoubanBackend2',\n    'django.contrib.auth.backends.ModelBackend',\n)\nLOGIN_REDIRECT_URL = 'my site url'\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = 'my site url'\nSOCIAL_AUTH_NEW_USER_REDIRECT_URL = 'my site url'\n\u8c46\u74e3\u7684\u5e94\u7528\u5c5e\u6027\u4e2d\uff0c\u201c\u5e94\u7528\u5730\u5740\u201d\u548c\u201c\u56de\u8c03\u5730\u5740\u201d\u90fd\u662f\u4e0a\u9762\u7684my site url\u3002\nThanks.\n. @seansay \ndjango: 1.4\nsocial auth: SVN revision: 1298 (just now)\nWeibo is OK. But douban respones:\ninvalid_request: redirect_uri_mismatch: http://my site url/complete/douban2/\nError 400\nThanks.\n. @seansay \nYes of course.\n(I use SinaAppEngine)\n. @omab \nYou can use google chrome to translate...-_-!\n. @yhben \nYour solution is OK. I've solved this problem. \n@seansay \n@omab \nIt's just matter of douban's settings. If the \u5e94\u7528\u5730\u5740[APP's URL] is 'http://mydomain.com', then \u56de\u8c03\u5730\u5740[Token URL] should be 'http://mydomain.com/complete/douban2/'. Douban's documentation is not so clear. django-social-auth is OK!\nGreat thanks!\n. ",
    "alswl": "Thanks to @phoebebright .\n. @dengyuanzhong  \u6240\u4ee5\u7531\u4e8e UTF-8 \u7684\u957f\u5ea6\u95ee\u9898\uff0c\u6c49\u8bed\u662f\u5fc5\u4e2d\u8fd9\u4e2a\u95ee\u9898\u4e48\uff0c\u56e7\u3002\n. @vinograd19 \nadd \nSOCIAL_AUTH_UID_LENGTH = 222\nSOCIAL_AUTH_NONCE_SERVER_URL_LENGTH = 200\nSOCIAL_AUTH_ASSOCIATION_SERVER_URL_LENGTH = 135\nSOCIAL_AUTH_ASSOCIATION_HANDLE_LENGTH = 125\nto settings.py\n. ",
    "paveltyavin": "As for me, the problem occured only for utf-general-ci encoding (mysql) and  @phoebebright fix worked. Please, explain, what does it do?\n. @alswl I've got what to do, I've asked about what does it do.\n. ",
    "maxgrosse": "Oh, thank you! That's been far easier than my approach. Actually, I thought there should be something like this, but didn't find it. Now working just fine.\n. ",
    "zgohr": "@omab How long ago was this? During my testing the last few weeks, the state parameter was working. Could it have been fixed since you tried using it? I also haven't found anything in Stripe's support.\nWas the issue persistent or sporadic?\n. I got that one figured out. I wasn't seeing how the next parameter is stored in the session. I was under the impression it was getting passed through state. Everything seems to be working fine. Thanks\n. ",
    "sheppard": "Thanks!\n. ",
    "ashchristopher": "Hey @omab - do you know when you might cut a new release to PyPi with these changes?\n. ",
    "dencold": "did you make sure to include /complete/facebook in your facebook config?  here's the screenshot for my config so you compare. this works fine for me connecting to localhost over here:\n\n. Cool, glad it worked out @amosjyng.  I'm trying to add some additional information to the docs as this initially tripped me up as well.\n. @omab I just submitted pull #668 that hopefully addresses these kinds of errors and makes setup a bit more straightforward with the help of screenshots.  If you think it helps, I will do similar doc enhancements for other services.  Let me know how it looks!\n. thanks amos!  this has been on my todo list for a long time.  I had the same issue you posted a while back and I made a promise to matias to improve the docs.  Your comment reminded me to stop procrastinating ;)\n. Thanks Mat\u00edas! I'll work on doing similar screenshot improvements for the other services when I get some extra time.  As always, thanks so much for everything you do on this library.  Should I also add this in to your omab/python-social-auth docs?  It would be nice to somehow keep them automatically in sync.\n. Perfect!  Sounds like the best approach.\n. Oh wow, thanks so much Mat\u00edas!  I was planning to do the pull request, didn't mean to add extra work for you ;)  Those changes look great to me.  I think that this new default behavior will be much easier for people to strap in on their local installs.  Let me know when this gets merged into master and I'll pull it down on my side and replace my overriden methods.\nThanks again!\n. Awesome, thanks again Mat\u00edas!\n. ",
    "sesas": "Check out the comparison grid here: https://www.djangopackages.com/packages/p/django-allauth/\n. ",
    "fabioz": "No, ok, it seems like that'll solve my issue... maybe you could just improve the docs to say that it's needed (close to when you say about LOGIN_ERROR_URL)\nThanks,\nFabio\n. No, closing this one as that should work (leaving the other one open as there's one suggestion regarding documentation).\nThanks,\nFabio\n. ",
    "ozexpert": "Hmm? I refreshly installed Ubuntu Server VM and install my application today. And what do you mean to set datetime?\nsetting TIME_ZONE in settings.py? \n. Thanks for the advise. Solved with executing nptdate. \n. ",
    "PacoDu": "Thank you for your very quick answer, this indeed solved the problem.\nSorry for the incovenience.\nAzote51\n. ",
    "sbaechler": "when installing with pip you still get an old version that does not support SOCIAL_AUTH_ASSOCIATION_HANDLE_LENGTH even though the version numbers are the same in the git repo and the pypi version.\nuse git+git://github.com/omab/django-social-auth.git#egg=social_auth\n. Yes, the last release does not work with mysql. While the docs on readthedocs already mention the fix.\nThe version string in the repo is still 0.1.17. I had to check the code of both to find out that they are actually different.\nCould you please submit the new version to pypi?\n. ",
    "hedleyroos": "That SOCIAL_AUTH_USER_MODEL must be immutable. If you change it in settings then the database foreign key will be out of synch. You could store the setting it in the database (I know, I know) and then you can detect changes and take appropriate action. Or just warn people against changing it. If they do then they must write their own south migration to handle it.\nIn any case thanks for the fix!\n. ",
    "tmackenzie": "@omab Sounds good. Good catch on the ValueError. I'll add docs later in the week.\n. @omab, documentation is done.\n. @omab, bump, any interest in merging this?\n. ",
    "dbrgn": "Note: If you're using Google-Oauth2 (probably counts for other auth services too), you need to enable offline access, otherwise you won't have a refresh token at all, so this will always fail.\n(Maybe the library could try to catch that case and display a better error message instead of the default HTTP 400...)\n. I installed django-social-auth from current master (commit d444f824609d5b9b9b9d77eafc6e4a827c561b30), but the migration still doesn't work:\n```\n(radar-django)[master]danilo@t410:radar$ ./manage.py migrate\nRunning migrations for social_auth:\n - Migrating forwards to 0002_auto__add_unique_nonce_timestamp_salt_server_url__add_unique_associati.\n\nsocial_auth:0001_initial\nValueError: Cannot successfully create field 'user' for model 'usersocialauth': \"The model 'user' from the app 'front' is not available in this migration.\".\n```\n. \n",
    "retd": "I'm sorry. There were problems with the server.\n. ",
    "joaopimentel": "Thanks, that does it! I just wish I didn't have to set settings.DEBUG to False to be able to catch this exception. The authentication cancel is an expected action, and I still want to debug other uncatched exceptions.\n. ",
    "OddBloke": "Yeah, that's what I was hoping. If I do so and find that it works, would you be interested in a pull request?\n. ",
    "shadowsyntax": "Hello Matias,\nFind below the stacktrace\nEnvironment:\nRequest Method: GET\nRequest URL: http://localhost:81/scratchgently/admin/\nDjango Version: 1.4.1\nPython Version: 2.7.3\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'registration',\n 'octial',\n 'social_auth',\n 'crispy_forms',\n 'django.contrib.admin',\n 'django.contrib.admindocs')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTraceback:\nFile \"/usr/lib/python2.7/dist-packages/django/core/handlers/base.py\" in\nget_response\n1.                     response = response.render()\n   File \"/usr/lib/python2.7/dist-packages/django/template/response.py\" in\n   render\n2.             self._set_content(self.rendered_content)\n   File \"/usr/lib/python2.7/dist-packages/django/template/response.py\" in\n   rendered_content\n3.         context = self.resolve_context(self.context_data)\n   File \"/usr/lib/python2.7/dist-packages/django/template/response.py\" in\n   resolve_context\n4.         return RequestContext(self._request, context,\n   current_app=self._current_app)\n   File \"/usr/lib/python2.7/dist-packages/django/template/context.py\" in\n   init\n5.         for processor in get_standard_processors() + processors:\n   File \"/usr/lib/python2.7/dist-packages/django/template/context.py\" in\n   get_standard_processors\n6.                 raise ImproperlyConfigured('Error importing request\n   processor module %s: \"%s\"' % (module, e))\nException Type: ImproperlyConfigured at /admin/\nException Value: Error importing request processor module\nsocial_auth.context_processors: \"cannot import name Consumer\"\nThanks!\nOn 30 January 2013 04:06, Mat\u00edas Aguirre notifications@github.com wrote:\n\nCould you share a stacktrace? Consumer is defined on oauth2/init.py,\nhttps://github.com/simplegeo/python-oauth2/blob/master/oauth2/init.py#L175\n.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/issues/592#issuecomment-12871952.\n. The same problem when ./manage.py shell is used \"cannot import name Consumer\".\n\nWill check the init.py file in directory to see if Consumer is defined.\nThe oauth2 folder that is referenced is the one in pyoauth EGG directory in /usr/local/lib........./dist-packages.\nOn 30 Jan 2013, at 15:45, Mat\u00edas Aguirre notifications@github.com wrote:\n\nStill don't see what could cause that issue, what happens if you import it on a django shell?\n\u2014\nReply to this email directly or view it on GitHub.\n. this the error I get from the python shell.\n\nPython 2.7.3 (default, Sep 26 2012, 21:53:58) \n[GCC 4.7.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n\n\n\nimport social_auth\nimport social_auth.context_processors\nTraceback (most recent call last):\n  File \"\", line 1, in \n  File \"/usr/local/lib/python2.7/dist-packages/social_auth/context_processors.py\", line 4, in \n    from social_auth.backends import get_backends\n  File \"/usr/local/lib/python2.7/dist-packages/social_auth/backends/init.py\", line 19, in \n    from oauth2 import Consumer as OAuthConsumer, Token, Request as OAuthRequest\nImportError: cannot import name Consumer\n\n\n\nFrom: Mat\u00edas Aguirre \nSent: Wednesday, January 30, 2013 4:40 PM\nTo: omab/django-social-auth \nCc: Shadowsyntax \nSubject: Re: [django-social-auth] Import error from init.py file in backend folder (#592)\npyoauth? That's not a dependency for DSA.\n\u2014\nReply to this email directly or view it on GitHub. \n. Also please find below my pythonpath for the django enviroment.\nPython 2.7.3 (default, Sep 26 2012, 21:53:58) \n[GCC 4.7.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n\n\n\nimport sys\nfrom pprint import pprint as pp\npp(sys.path)\n['/home/shadowsyntax/django/scratchgently',\n '/usr/local/lib/python2.7/dist-packages/django_registration-0.8-py2.7.egg',\n '/usr/local/lib/python2.7/dist-packages/python_openid-2.2.5-py2.7.egg',\n '/usr/local/lib/python2.7/dist-packages/py_oauth2-0.0.5-py2.7.egg',\n '/usr/local/lib/python2.7/dist-packages/emacs-24.1.50.1_20120610-py2.7.egg',\n '/usr/local/lib/python2.7/dist-packages',\n '/usr/lib/python2.7',\n '/usr/lib/python2.7/plat-linux2',\n '/usr/lib/python2.7/lib-tk',\n '/usr/lib/python2.7/lib-old',\n '/usr/lib/python2.7/lib-dynload',\n '/usr/local/lib/python2.7/dist-packages',\n '/usr/lib/python2.7/dist-packages',\n '/usr/lib/python2.7/dist-packages/PIL',\n '/usr/lib/python2.7/dist-packages/gst-0.10',\n '/usr/lib/python2.7/dist-packages/gtk-2.0',\n '/usr/lib/python2.7/dist-packages/ubuntu-sso-client',\n '/usr/lib/python2.7/dist-packages/ubuntuone-client',\n '/usr/lib/python2.7/dist-packages/ubuntuone-control-panel',\n '/usr/lib/python2.7/dist-packages/ubuntuone-couch',\n '/usr/lib/python2.7/dist-packages/ubuntuone-storage-protocol']\n\n\n\nFrom: Mat\u00edas Aguirre \nSent: Wednesday, January 30, 2013 4:40 PM\nTo: omab/django-social-auth \nCc: Shadowsyntax \nSubject: Re: [django-social-auth] Import error from init.py file in backend folder (#592)\npyoauth? That's not a dependency for DSA.\n\u2014\nReply to this email directly or view it on GitHub. \n. yeah i think i did using \"pip install oauth2\". should i uninstall it??\nFrom: Mat\u00edas Aguirre \nSent: Wednesday, January 30, 2013 7:19 PM\nTo: omab/django-social-auth \nCc: Shadowsyntax \nSubject: Re: [django-social-auth] Import error from init.py file in backend folder (#592)\nFrom where did that py_oauth2 came from? Did you installed the dependencies manually?\n\u2014\nReply to this email directly or view it on GitHub. \n. I actually have oauth2 installed but it seems when the script searches my path it finds the oauth2 in py_oauth first. So this is where the problem is coming from. I did a pip uninstall py_oauth2 and this fixed the problem.\nThanks!\nFrom: Mat\u00edas Aguirre \nSent: Wednesday, January 30, 2013 8:17 PM\nTo: omab/django-social-auth \nCc: Shadowsyntax \nSubject: Re: [django-social-auth] Import error from init.py file in backend folder (#592)\nThat doesn't look like the result of installing oauth2 with pip (the final package name is oauth2 not py_oauth2). I would suggest removing that one (you can get a list of installed packages with pip freeze), and installing oauth2 with pip install oauth2 again.\n\u2014\nReply to this email directly or view it on GitHub. \n. ",
    "syabro": "Same stuff here.\nCustom user.\n. Good job, thanks\n. ",
    "mpasternak": "Hi,\nany ideas how to fix this bug? I hit similar one with django-admin-tools, https://bitbucket.org/izi/django-admin-tools/issue/117/initial-south-migration-fails-with-custom\n. Here's what fixed the migrations for me, does anybody have opinion on such approach? : https://bitbucket.org/izi/django-admin-tools/pull-request/18/fixes-117/diff#chg-admin_tools/dashboard/migrations/0001_initial.py\n. ",
    "caioariede": "@dbrgn just make sure you have INITIAL_CUSTOM_USER_MIGRATION pointing to the correct migration, in case your model was created in other migration than 0001_initial.py.\n. Maybe this is somewhat related to #593\n. ",
    "rca": "I added INITIAL_CUSTOM_USER_MIGRATION to settings.py and get the following error:\n```\nFATAL ERROR - The following SQL query failed: ALTER TABLE \"social_auth_usersocialauth\" ADD CONSTRAINT \"user_id_refs_id_69f19872bc0e7859\" FOREIGN KEY (\"user_id\") REFERENCES \"console_baremetaluser\" (\"id\") DEFERRABLE INITIALLY DEFERRED;\nThe error was: relation \"console_baremetaluser\" does not exist\nDatabaseError: relation \"console_baremetaluser\" does not exist\n``\n. I figured out that the app with the custom user model has to be listed before south/social_auth inINSTALLED_APPS.  After moving it up the migration worked.\n. I ran into a related issue with GitHub where social auth was sending an HTTP URI.  SettingSOCIAL_AUTH_REDIRECT_IS_HTTPS  = Truedoes work, however, Django uses [SECURE_PROXY_SSL_HEADER](https://docs.djangoproject.com/en/1.5/ref/settings/#secure-proxy-ssl-header) to configure [request.is_secure()`](https://github.com/django/django/blob/86f4459f9e3c035ec96578617605e93234bf2700/django/http/request.py#L131).    \nThoughts on checking  SOCIAL_AUTH_REDIRECT_IS_HTTPS and falling back to request.is_secure() to determine HTTPS?  I'll work on a patch if this sounds like a good approach.\n. I knew there had to be a better way, thanks!  However, I'm not understanding the documentation.  :confused:\nI'm looking to get some extra values from GitHub's OAuth response.  For example, below is a subset of GitHub's response data:\npython\n    {\n        'avatar_url': 'https://secure.gravatar.com/avatar/[...]',\n        'created_at': '2009-02-11T02:18:24Z',\n        'email': 'roberto@baremetal.io',\n        'id': 53537,\n        'login': 'rca'\n        'name': 'Roberto Aguilar',\n        [...]\n    }\nThe documentation states to define the setting GITHUB_EXTRA_DATA to access this stuff.  From the page you reference, I did not understand why there is a need for a list of 2-tuples, nor where I access this data from once I define it.  I added the following to my settings:\npython\nGITHUB_EXTRA_DATA = [\n    ('avatar_url', 'avatar_url'),\n]\nNow that I've configured GITHUB_EXTRA_DATA to give me access to avatar_url, how do I access it?\nThanks!\n. @omab, thanks, got it working.  I'm opening up another PR for some doc enhancement.\n. ",
    "rxdazn": "@Dem3trius: see this reddit post. He should be making a pull request anytime soon. You can import his module manually in the meantime.\n. I have solved my issue using a custom pipeline as you adviced me.\npython\nSOCIAL_AUTH_PIPELINE = ( \n    'social_auth.backends.pipeline.social.social_auth_user',\n    'social_auth.backends.pipeline.user.get_username',\n    'social_auth.backends.pipeline.user.create_user',\n    'social_auth.backends.pipeline.social.associate_user',\n    'social_auth.backends.pipeline.user.update_user_details',\n    'accounts.pipeline.user_update_handler',\n    )\npython\ndef user_update_handler(backend, details, response, user=None, is_new=False, *args, **kwargs):\n    user.steam_id = details['player']['steamid']\n    user.username = details['username']\n    user.nickname = details['player']['personaname']\n    user.avatar_small = details['player']['avatar']\n    user.avatar_medium = details['player']['avatarmedium']\n    user.avatar_full = details['player']['avatarfull']\n    user.social_user = kwargs['social_user']\n    user.save()\n    return user\nThe username being already defined was not due to 2 versions of DSA being installed (tried cerating a new virtualenv) though.\nThank you.\n. ",
    "abompard": "Oh, that's much better indeed ! Thanks !\n. ",
    "kamotos": "You can write a custom pipeline. social_auth.backends.pipeline.user.get_username is the function used by default. Try writing another that suits more your needs.\nThis kind of questions belongs more to websites like SO. try to use to this one for features/bugs.\n. Yes sir\n. ",
    "nicoladj77": "Is there a tag on stackoverflow for django-social-auth?\nI always use stackoverflow but i thought this was too specialized. \n. Ok thanks\n. ",
    "sirex": "Same here. PostgreSQL log shows, that this email was used:\napp+80lekuk3ka.al3ki4.03b5c181d193b7b50d01a99972f40935@proxymail.facebook.com\nWhich is 77 characters long. And User.email field is 75 characters long.\nSo I guess, that this code:\nsocial_auth/backends/pipeline/user.py\n``` python\ndef create_user(backend, details, response, uid, username, user=None, args,\n                *kwargs):\n    \"\"\"Create user. Depends on get_username pipeline.\"\"\"\n    if user:\n        return {'user': user}\n    if not username:\n        return None\nreturn {\n    'user': UserSocialAuth.create_user(username=username,\n                                       email=details.get('email')),\n    'is_new': True\n}\n\n```\nShould be aware, that some emails, can be longer, than 75 characters, and in these cases, some actions should be taken. Maybe empty string should be stored? And long email should be stored in some other place?\nThis can be fixed in Django 1.5, since from 1.5 Django allows to use custom User model.\n. Or, maybe, facebook backend should be aware of such emails?\n. @omab not tested, but yes, it looks, like this solves my case. Than you.\n. ",
    "discretePixels": "See this api info from the face-book page: https://developers.facebook.com/docs/howtos/login/client-side-re-auth/\nFor the most part, it is the same auth call but includes the auth_type parameter: auth_type: 'reauthenticate'  - best to make sure the user is who they say they are before we do some critical data processing.\nHopefully the above helps clarify the request. Thanks for looking into it. \n. ",
    "ChrisCooper": "Oops, yes, sure. I didn't notice you had stuff in progress.\n. Ok, it's been updated with those changes now.\n. ",
    "topiaruss": "Hi Matias, \nI'm sorry, but my explanation was obviously not clear enough.\nI totally understand that \"email addresses are case-insensitive by definition\". \nAnd performance was not the reason I suggested __iexact. \nI spent the time fixing a real problem, not an imagined problem.\nThe issue is that we have had users registering email/password using the email address \"aUser@msn.com\", then coming back and adding social auth, let's say with facebook, where they may have long ago registered with a different capitalisation of their email address.  If you don't use __iexact on the comparisons in associate.py and base.py Django Social Auth cannot tell that the person is already in the User table, and simply creates a new user entry with the logically equivalent email address, but a different capitalisation.\nThen during login with email/pass, the login machinery throws an exception since it looks like the same user is in teh user table twice.\nIf you do the following google search, you can see that __iexact on searching to see if an email address is already present is the way to avoid this problem: https://www.google.co.uk/search?q=django+email__iexact\nOK. I hope this is clear.  \nFeel free to come back if you are in doubt.\nBest,\n--r.\n. Ok, Matias,\nThanks very much!\n. I've reverted to putting my email__iexact change onto the v0.7.19 tag, and that's working fine for me.  There were big changes between 19 and 20 in the migration scripts, and it seems that something is getting done twice, creating the Duplicate Index.   So this is what I'm using at the moment: https://github.com/Sponsorcraft/django-social-auth/tree/v0.7.19a\n. Hi Mattias,\nI agree that the final result should the same, but I'm getting the error that I pointed out, in any case.\nIf I run with --fake, then I will not have the social auth tables in place.\nI need that migration script to run every time tests run, and recreate the database, otherwise I have no table to work with.  When I stepped back to 0.7.19, it runs exactly the way it always did. with 0.7.20 there seems to be a second attempt to create the index, which causes the error, leaving the south migration pointer set at 0001_initial. Just to make that clear, this error occurs after dropping the database, and running a test.\n. Thanks so much. \nIf you are testing against MySQL you should see the same problem.\n--r.\nOn 22 Feb 2013, at 17:59, Mat\u00edas Aguirre notifications@github.com wrote:\n\n@topiaruss, thanks, I'll take a look to migrations and make them backward compatible.\n\u2014\nReply to this email directly or view it on GitHub.\n\nRuss Ferriday -- Software and Systems Architect/Developer\nCEO Topia Systems Ltd.\nrussf@topia.com  --  +44 7429 518822  --  www.topia.com\n. Thanks lorddaedra.\nThe point of the migration is that I can go from an EMPTY database for each test run.That's what I am doing when I encounter the error. I cannot live with a solution that requires --fake, or resolution of these things by hand.\nI have not had chance to look at the details, but 0.7.19 works fine. .20 fails. \n. It's a very normal process.\nI'm running on MySQL. I update to .20, run my tests. During test db initialization and migration, I get the traceback above.  I think you'll hit the same problem the first time you try a migration against mySQL.\n. ",
    "JesseFarebro": "Any news on the Google+ implementation yet? Really looking forward to this love G+\n. ",
    "stereoit": "Hi, I use\naction=\"{% url socialauth_begin 'mojeid' %}\"\nThe current versions:\ndjango-social-auth==0.6.9\n Django=1.4.2\n. ",
    "kevinastone": "If this is an intentional re-factor, please, for the love of god, increment more than the patch version number!  I shouldn't expect code breakage from a patch revision (v0.7.20 -> v0.7.21).\nI assume you guys are working on Django 1.5 compatibility, but that should be a new major version, let alone a minor version update.\n. No problem.  Figured that, just wasn't ready for a re-factor in such a small revision.\n. ",
    "johnkevingo": "I have already set-up the value of LOGIN_ERROR_URL to /login-error/ which is an error landing page.\nAny ideas regarding this? Thanks!\n. ",
    "mo-mughrabi": "am facing the same error, anyone can advise?\n. Hello, after trying several things for couple days I finally came to source of the problem, it was versioning issue. Django was running on 1.5.1 and social-auth was running on 0.7.22 which apparently had a conflict when running on custom user auth. Immediately after I updated both to latest version, it was solved :)\n. ",
    "quantum13": "@omab, big thanks! \n. ",
    "gfronza": "Nice! Would be interesting if you put this piece of information on README, perhaps?\nThanks for the reply!\n. In practice, how I deal with this problem? Do I need to fork the project and catch the exception myself?\nThanks\n. @omab Hmm, since IntegrityError is not a subclass of SocialAuthBaseException, do you think it's healthy to catch it there. Any IntegrityError thrown in my application wil be considered as a login/signup error. I think you could give us a base exception for that. Thanks! \n. Good idea @omab. But yesterday I came up with another solution. I've wrapped the DSA url include with an exception handler function. Something like...\npython\nurlpatterns = required(\n    social_auth_exception_handler,\n    patterns('', (r'', include('social_auth.urls')),)\n)\n. ",
    "avances123": "Hi omab, congrats for this fantastic piece of software, it's nice.\nBut it lacks of right documentation, it seems to be done by you for you only. Maybe a complete example could help.\n. ",
    "bedingue": "That was fast! Thanks a lot! :+1: \n. ",
    "eshellman": "I am also seeing this issue. I though perhaps the issue is that in backends/twitter.py \nTWITTER_AUTHORIZATION_URL = 'http://%s/oauth/authenticate' % TWITTER_SERVER\nshould be\nTWITTER_AUTHORIZATION_URL = 'https://%s/oauth/authenticate' % TWITTER_SERVER\nBut it seems that does the same thing\n. I have figured out the problem. In twitter, you need to enable \"log in with twitter\". I will add some documentation and submit a PR.\n. Try setting DEBUG = False, and see issue #662\n. try setting DEBUG = False. middleware won't handle the exceptions if DEBUG  = True. and see issue 662 with suggested fix.\n. ",
    "cshoe": "I wonder if not requiring authorization was a \"bug\" that was solved with the recent API v1 retirement. The retirement is \"gradual\" (to use Twitter's words). See their blog post.\nAs noted here, Twitter's policy seems to be\n\nThe user will always be prompted to authorize access to your application, even if access was previously granted.\n. \n",
    "imax": "yeah. here is a dump I saved, \nhttp://paste.in.ua/8098/\nXML response from LinkedIn that causes linkedin backend to return None. Besides missing \"summary\" field the unusual thing is russian names.\n. Here is my current LinkedIn config:\nLINKEDIN_EXTRA_FIELD_SELECTORS = ['picture-url', 'headline',\n'email-address',\n    'public-profile-url', 'num-connections']\nLINKEDIN_EXTRA_DATA = [('picture-url', 'picture-url'), ('headline',\n'headline'),\n        ('summary', 'summary'), ('num-connections', 'num-connections'),\n        ('email-address', 'email-address'),\n        ('public-profile-url', 'public-profile-url')]\nIt works.\nWhat doesn't work is when I add \"summary\" to\nLINKEDIN_EXTRA_FIELD_SELECTORS. Then that person (Olga) cannot log in. And\na few other users. For the rest 99% it works just fine.\n. does it help?\n. ",
    "jonathanendersby": "This issue is now resolved in the repo at https://github.com/jonathanendersby/SocialAuthCustomUserModel\nQuoting omab:\nThe problem was the parameters that create_user() was getting, not all of them are available on all the backends.\nBy replacing the method signature with the same from django manager, and setting some default values into first_name and last_name fields in your model, it works OK.\n. ",
    "serdardalgic": "Aahh, I think it's my bad, not to take a deeper look at the pipeline function.\nreturn None, which is not an instance of dict, causes \nreturn result\nwhich returns from the pipeline function.\nSo I think, we can close this pull request, sorry for the confusion.\n. Argh, I'm reopening the request again :) \nIf return None comes from the pipeline functions, result is set to {}.\nSo, in this case, my pull request is valid. :)\nHowever, I couldn't decide, which one would be a better option, returning None or returning {} in the pipeline functions.\n. ",
    "deanmalmgren": "I have the same problem with the Twitter API in django 1.5 and django-social-auth 0.7.22 except that logging in and out of Twitter manually does not appear to fix the problem. \nI'm new to using django-social-auth and not quite sure whether any of this is useful, but I can see entries in the MySQL auth_user, django_session, and social_auth_usersocialauth tables but nothing in the social_auth_association and social_auth_nonce tables. \n. After having a little IRC chat with @omab, we were able to get my project to work by including 'social_auth.context_processors.social_auth_by_type_backends' in the TEMPLATE_CONTEXT_PROCESSORS settings variable. See the example project setup in example/example/settings.py\nDoes this also fix your issue @ustun?\n. I was always getting the error. But now I can't seem to reproduce it and I'm pretty sure it has nothing to do with the TEMPLATE_CONTEXT_PROCESSORS setting. humpf.\n. ",
    "daGrevis": "Waiting for this to be in PyPI ASAP.\n. ",
    "cheesemonkey": "I'm using 0.7.23 and I still get the \"Missing unauthorized token\" error while using the LinkedIn api.  Even setting the server to DEBUG=False does not fix/hide the problem.  I still just get a 500 error.  The weird thing is that doesn't happen all the time.  I can use the same account and it fails about 1 out of 4 times.  Any thoughts?\n. Adding more info to my earlier post.  This seems to only happen when using OAuth v1.  When I use OAuth2, I have yet to run into this problem.  Any help would be appreciated...\n. It appears that I am getting a new session when I get redirected back from LinkedIn.  Therefore when the look up for \nunauthed_tokens = self.request.session.get(name) or []\noccurs, nothing is returned, even though I can see that value was set before the redirection to LinkedIn.  Any help would be appreciated.\nThanks\n. using cached_db.  Cookies are enabled.  What is strange is that its the same session ID when I leave the site to go to LinkedIn as when I return back.  When I look at the session store, the linkedinunauthorized_token_name key has disappeared.  It's almost like django is determining that the session is invalid and creates a new one.  But the odd thing is the id is the same.  Could it be some multithreaded race condition?\n. I already have.. see below\nK:session_country V:CH\nK:original_referer V:\nK:_auth_user_id V:88\nK:_auth_user_backend V:django.contrib.auth.backends.ModelBackend\nK:next V:/social/profile/create/xing/\nK:xingunauthorized_token_name V:['oauth_token_secret=xxx&oauth_token=xxx&oauth_callback_confirmed=true']\nK:last_access V:2013-05-30 09:28:44.687819\nK:django_language V:en\nu'K:session_country V:CH'\n'K:original_referer V:'\n'K:_auth_user_id V:88'\n'K:show_janzz_update V:False'\n'K:_auth_user_backend V:django.contrib.auth.backends.ModelBackend'\n'K:next V:None'\n'K:last_access V:2013-05-30 09:28:50.713541'\n'K:django_language V:en'\nI first thought the redirect was occurring before the sessionmiddleware could save the session data.  So I overwrote auth_url to save the session store directly.  It's still happening.\n. I believe we found the problem.  There was a long running ajax request also running on this page.  So social auth would go and set the session data and do the redirect to linkedin or whereever.  The background ajax call would then finished its work and write the session data.  The problem is that its session data would be old and not contain the social auth data.  Therefore the social auth data would be lost, along with the next url setting.\nSo the problem isn't with social auth but with our ajax call.  However, It might be good to store this data somewhere else ( maybe in cache or something ).  Just a thought..\nThanks for all your help!\n. ",
    "dasloss": "I am using the test client to test a @login_required view, and getting this error. I tried the TCP fix (no resolution) and toggling the raise exceptions settings (no resolution). \nIn debugging--it is clear that 'linkedinunauthorized_token_name' never gets set in the session. Looking at the source for tests/client.py--it creates a user and sets 'facebook_state' to 'dummy' in the session, but nothing else--and then calls the complete function, but that raises AuthTokenError because unauthed_tokens = [].\nAny help on how to resolve this so I can test my @login_required views? Thanks.\n. ",
    "lisitsky": "I have this problem with twitter login.\nFirst time all work ok.\nBut if I erase cookie and try to login with twitter again, I get this error.\nEnvironment:\nRequest Method: GET\nRequest URL: http://test1.tld:5000/complete/twitter/?oauth_token=......&oauth_verifier=....\nDjango Version: 1.5.4\nPython Version: 2.7.5\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'south',\n 'social_auth',\n 'social_auth_widget',\n 'core')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware')\nTraceback:\nFile \"/Users/user/Sites/heroku-1/venv/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                         response = callback(request, _callback_args, _callback_kwargs)\n   File \"/Users/user/Sites/heroku-1/venv/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n2.         return view_func(_args, _kwargs)\n   File \"/Users/user/Sites/heroku-1/venv/lib/python2.7/site-packages/social_auth/decorators.py\" in wrapper\n3.             return func(request, request.social_auth_backend, _args, _kwargs)\n   File \"/Users/user/Sites/heroku-1/venv/lib/python2.7/site-packages/social_auth/views.py\" in complete\n4.         return complete_process(request, backend, _args, _kwargs)\n   File \"/Users/user/Sites/heroku-1/venv/lib/python2.7/site-packages/social_auth/views.py\" in complete_process\n5.     user = auth_complete(request, backend, _args, _kwargs)\n   File \"/Users/user/Sites/heroku-1/venv/lib/python2.7/site-packages/social_auth/views.py\" in auth_complete\n6.     return backend.auth_complete(user=user, request=request, _args, _kwargs)\n   File \"/Users/user/Sites/heroku-1/venv/lib/python2.7/site-packages/social_auth/backends/twitter.py\" in auth_complete\n7.             return super(TwitterAuth, self).auth_complete(_args, *_kwargs)\n   File \"/Users/user/Sites/heroku-1/venv/lib/python2.7/site-packages/social_auth/backends/init.py\" in auth_complete\n8.             raise AuthTokenError(self, 'Missing unauthorized token')\nException Type: AuthTokenError at /complete/twitter/\nException Value: Token error: Missing unauthorized token\n. With which version have you tested?. ",
    "tobias47n9e": "Does this happen when the session times out? Starting the login process again seems to solve the issue for me. It only happens when I let a tab sit around and return to the page minutes later.. Current pip version: 0.1. ",
    "artemrizhov": "Thank you for great app :)\n. ",
    "koleror": "Oups just found a ticket for the same thing... \n436\n. ",
    "Nerian": "I would love for this happen when my bank tries to charge my account. :stuck_out_tongue_winking_eye:\n. ",
    "bobhsr": "I am getting the same error with the latest master branch at /complete/github/\nKeyError at /complete/github/\n'id'\n. What would be recommended approach on solving it. I have two accounts one within the organization and the other without, still getting the same error. Would it be possible to disable the organization.  How do you get to work.\n. ",
    "sjagoe": "I think the error will still occur if a user not in the configured organization attempts to log in.\nI have not looked at a complete fix for this in any real depth.\n. I am only using it for authentication of users within an organization for an ad-hoc internal service.\nThe easiest way to work around the issue would be to disable the built-in organization checking and maybe register some separate middleware to check organizations after authentication.\nThe real issue lies in the fact that if authentication fails for the github backend, the BaseOAuth2 backend attempts to authenticate a partially constructed user. If the BaseOAuth2.do_auth method gets back a None from GithubAuth.user_data, it should not attempt authentication and just return None. It looks to me like this would solve the problem.\nHowever, I don't know if this causes regressions with other backends.\n. @omab Agreed. I don't know enough about how django-social-auth handles errors to know how far this impacts other code.\n. ",
    "rosscdh": "thanks @omab Ill review again.. and provide you with the exceptions.\n. this must go\n. need to re-enable this check.\n. should probably make it conform to the social_auth standard? But I copy pasted it form the docs somewhere I believe.\n. ",
    "houmie": "Thats fantastic news. Is the code released to be picked by pip install django-social-auth -U or do I have to download the latest manually?  Thanks\n. Sure no problem.  I never tried to put something manually into virtual-env other than with pip. Give me some time to figure this out and I will definitely let you know about the result. :)\n. Alright. I have pip uninstall django-social-auth and then got the latest pip install -e git+https://github.com/omab/django-social-auth.git#egg=django-social-auth\nHowever I still get the same error:  (And the path seems correct, it is the latest code...\n```\nTraceback (most recent call last):\n  File \"/home/hooman/venuscloud/myapp-env/local/lib/python2.7/site-packages/django/core/handlers/base.py\", line 115, in get_response\n    response = callback(request, *callback_args, **callback_kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\", line 77, in wrapped_view\n    return view_func(*args, **kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/src/django-social-auth/social_auth/decorators.py\", line 29, in wrapper\n    return func(request, request.social_auth_backend, *args, **kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/src/django-social-auth/social_auth/views.py\", line 42, in complete\n    return complete_process(request, backend, *args, **kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/src/django-social-auth/social_auth/views.py\", line 111, in complete_process\n    user = auth_complete(request, backend, *args, **kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/src/django-social-auth/social_auth/views.py\", line 197, in auth_complete\n    return backend.auth_complete(user=user, request=request, *args, **kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/src/django-social-auth/social_auth/backends/facebook.py\", line 155, in auth_complete\n    return self.do_auth(access_token, expires=expires, *args, **kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/src/django-social-auth/social_auth/backends/facebook.py\", line 197, in do_auth\n    return authenticate(*args, **kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/local/lib/python2.7/site-packages/django/contrib/auth/__init__.py\", line 59, in authenticate\n    user = backend.authenticate(**credentials)\n  File \"/home/hooman/venuscloud/myapp-env/src/django-social-auth/social_auth/backends/__init__.py\", line 107, in authenticate\n    out = self.pipeline(pipeline, *args, **kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/src/django-social-auth/social_auth/backends/__init__.py\", line 136, in pipeline\n    result = func(*args, **out) or {}\n  File \"/home/hooman/venuscloud/myapp-env/src/django-social-auth/social_auth/backends/pipeline/user.py\", line 38, in get_username\n    while user_exists(username=final_username):\n  File \"/home/hooman/venuscloud/myapp-env/src/django-social-auth/social_auth/db/base.py\", line 111, in simple_user_exists\n    return cls.user_model().objects.filter(*args, **kwargs).count() > 0\n  File \"/home/hooman/venuscloud/myapp-env/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 155, in filter\n    return self.get_query_set().filter(*args, **kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 655, in filter\n    return self._filter_or_exclude(False, *args, **kwargs)\n  File \"/home/hooman/venuscloud/myapp-env/local/lib/python2.7/site-packages/django/db/models/query.py\", line 673, in _filter_or_exclude\n    clone.query.add_q(Q(*args, **kwargs))\n  File \"/home/hooman/venuscloud/myapp-env/local/lib/python2.7/site-packages/django/db/models/sql/query.py\", line 1266, in add_q\n    can_reuse=used_aliases, force_having=force_having)\n  File \"/home/hooman/venuscloud/myapp-env/local/lib/python2.7/site-packages/django/db/models/sql/query.py\", line 1134, in add_filter\n    process_extras=process_extras)\n  File \"/home/hooman/venuscloud/myapp-env/local/lib/python2.7/site-packages/django/db/models/sql/query.py\", line 1332, in setup_joins\n    \"Choices are: %s\" % (name, \", \".join(names)))\nFieldError: Cannot resolve keyword 'username' into field. Choices are:\n``````\n. No problem. I have tested it thoroughly. The good news is no further exception.  The bad news is facebook doesn't login now.  If you send me an email address, I could compress and send you a small demo project with my facebook app keys, so you can test it without any hassle and see for yourself.  \nUPDATE: I sent you an email with the demo. :dancer: \nNo error shown either. \n[03/Apr/2013 14:54:53] \"GET / HTTP/1.1\" 200 99\n[03/Apr/2013 14:54:57] \"GET /login/facebook/ HTTP/1.1\" 302 0\nNo handlers could be found for logger \"SocialAuth\"\n[03/Apr/2013 14:54:58] \"GET /complete/facebook/?redirect_state=q0d3Yow0Lr....HTTP/1.1\" 302 0\n[03/Apr/2013 14:54:58] \"GET / HTTP/1.1\" 200 99\n. Matias,\nI found a new bug.  Since this morning when I try to login with facebook, I get a new error message:\n```\nTraceback:\nFile \"/home/hooman/vc/myapp-env/local/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n  115.                         response = callback(request, callback_args, callback_kwargs)\nFile \"/home/hooman/vc/myapp-env/local/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n  77.         return view_func(*args, kwargs)\nFile \"/home/hooman/vc/myapp-env/src/django-social-auth/social_auth/decorators.py\" in wrapper\n  29.             return func(request, request.social_auth_backend, args, kwargs)\nFile \"/home/hooman/vc/myapp-env/src/django-social-auth/social_auth/views.py\" in complete\n  42.         return complete_process(request, backend, *args, kwargs)\nFile \"/home/hooman/vc/myapp-env/src/django-social-auth/social_auth/views.py\" in complete_process\n  111.         user = auth_complete(request, backend, args, kwargs)\nFile \"/home/hooman/vc/myapp-env/src/django-social-auth/social_auth/views.py\" in auth_complete\n  197.     return backend.auth_complete(user=user, request=request, *args, kwargs)\nFile \"/home/hooman/vc/myapp-env/src/django-social-auth/social_auth/backends/facebook.py\" in auth_complete\n  155.             return self.do_auth(access_token, expires=expires, args, kwargs)\nFile \"/home/hooman/vc/myapp-env/src/django-social-auth/social_auth/backends/facebook.py\" in do_auth\n  197.         return authenticate(*args, kwargs)\nFile \"/home/hooman/vc/myapp-env/local/lib/python2.7/site-packages/django/contrib/auth/init.py\" in authenticate\n  59.             user = backend.authenticate(credentials)\nFile \"/home/hooman/vc/myapp-env/src/django-social-auth/social_auth/backends/init.py\" in authenticate\n  107.         out = self.pipeline(pipeline, *args, kwargs)\nFile \"/home/hooman/vc/myapp-env/src/django-social-auth/social_auth/backends/init.py\" in pipeline\n  136.                 result = func(args, *out) or {}\nFile \"/home/hooman/vc/myapp-env/src/django-social-auth/social_auth/backends/pipeline/user.py\" in get_username\n  16.         return {'username': user.username}\nException Type: AttributeError at /complete/facebook/\nException Value: 'User' object has no attribute 'username'\n```\nI looked up the method:\ndef get_username(details, user=None,\n                 user_exists=UserSocialAuth.simple_user_exists,\n                 *args, **kwargs):\n    \"\"\"Return an username for new user. Return current user username\n    if user was given.\n    \"\"\"\n    if user:\n        return {'username': user.username}\nIt seems there are still bits remaining of username. \nThank you\n. Superb.  I just got the latest and tested it. facebook, Google+ and Twitter work all wonderfully. :)\nThanks for all the help.\n. ",
    "Mibou": "Problem came from incorrect urls.py file.\n. ",
    "PierreVannier": "Hi Matias,\nThanks for your reply. I'm gonna investigate further...\n. ",
    "iepathos": "hi, I know I sent a lot of pull requests as I was working through the fix,\nI believe the final pull request I sent should be compatible.  I put in:\ntry:\n    import json\nexcept ImportError: # python < 2.6\n    from django.utils import simplejson as json\nTo keep backwards compatibility across the project.  I'll test it out\nreal quick to make sure.\nOn Wed, Apr 10, 2013 at 1:38 PM, Mat\u00edas Aguirre notifications@github.comwrote:\n\nThis change is not backward compatible, it breaks support with Django 1.4\nand earlier versions.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/pull/667#issuecomment-16200367\n.\n. \n",
    "iperelivskiy": "Wow, thanks!\n. ",
    "maldn": "Hallo,\nHerr B\u00f6hme befindet sich bis zum 13.05. im Urlaub.\nBei technischen Fragen wenden Sie sich bitte an Herrn Eike Foken (e.foken@qpmedia.de).\n. ",
    "ggreer": "OK, done.\n. ",
    "emakarov": "I see\nI researched today about AOL open services documentation but didn't found any good source where it's described.\nThought probably you tried but didn't found that too\n. yep, that was my pull request :)\n. I'm thinking about fork\nThe approach is not for global request but it can be done with python lambda function\n. ",
    "jerzyk": "(comment) it was a latest version published on pypi. thanks!\n. ",
    "a-sabaa": "Yes, that's what I figured out and I already overrode the pipeline entry to create some functions in between the pipeline. Thanks for the response and sorry for not updating this issue myself :)\n. ",
    "simplyzaki": "Here is the traceback.\n. Yup. Will try to dig further and post.\n. Figured it out, the error was due to wrong url route-view binding. Original code line was\npython\n   url(r'^disconnect/(?P<backend>[^/]+)/$', 'disconnect', name='socialauth_disconnect')\nwhen the above was changed to \npython\n   url(r'^disconnect/(?P<backend>[^/]+)/$', 'social_auth.views.disconnect', name='socialauth_disconnect')\nthe error disappeared. Regret the false alarm.\n. ",
    "benma": "Indeed, there is such a line in messages/init.py. I still got an error, and in `./manage.py shell', importing MessageFailure directly from contrib.messages also does not work. Very weird.\n. ",
    "dferrante": "incredible turnaround time, thanks!\n. ",
    "Skandh": "Any update on this issue. I am facing exactly same issue.\n. @rubik .. I need some guidance. I am pretty new with django-social and mongoengine. \nI tried to write my own model class based on mongoengine.django.mongo_auth.MongoUser. But when when I replace it with AUTH_USER_MODEL I hit with following error:\n\"ValidationError: Argument to ReferenceField constructor must be a document class or a string\"\nsince https://github.com/omab/django-social-auth/blob/v0.7.23/social_auth/db/mongoengine_models.py#L33 is expecting Document class or string as ReferenceField constructor, while I am passing models.Model. Where did I err?\nThanks in advance.\n. ",
    "rubik": "@Skandh: Since I was only using the Github backend I ended up writing my own. It works fairly well, though I've not yet found out how to set an expiry for the session.\n. @Skandh You have to pass it a Document, not a Django model. That way it won't work. I recommend you to try again with django-social-auth, since it is far simpler and more robust.\n. ",
    "stefanocrosta": "While I do agree, I do the following:\n```\nxxx_URL = 'named_url'\n...\nfrom django.core.urlresolvers import reverse_lazy\nSOCIAL_AUTH_LOGIN_REDIRECT_URL = reverse_lazy(LOGIN_REDIRECT_URL)\nLOGIN_ERROR_URL = reverse_lazy(LOGIN_ERROR_URL)\n```\nsince those django-social-auth setting names are unique, I can just reverse them (lazily) myself (but I'd love not having to do so)\n. ",
    "anentropic": "+1 on this... was going to make the same pull request myself\nI guess the problem is that importing from django.shortcuts import resolve_url breaks on pre-1.5 Django\nalso thanks to @stefanocrosta for the workaround with reverse_lazy\n. ",
    "litchfield": "At least then it needs to be a setting and clearly documented, eg GOOGLE_OAUTH2_OFFLINE = True\n. Yep that's fine, thanks @omab \n. ",
    "tdruez": "Hey Mat\u00edas,\nanything I could do to help the merge of this pull request?\nThanks!\n. ",
    "s0b0lev": "This solution helped me.\n. ",
    "newlarry": "It looks like the key is 'error' ?\nhttp://i.imgur.com/dxi23h0.png\nFWIW I am able to use the code that comes back with PRAW to interact with the API.\n. I feel like we're getting closer, now I'm just getting AuthFailed: http://i.imgur.com/EwPMaKw.png\nhttp://dpaste.com/1337379/\nI don't understand though, b/c the oauth code that is passed in the query string is totally valid and usable.\n. Hi @omab , I understand the grant_type parameter is sent as part of the request exchanging a 'code' for an access_token. But I don't know what additional information I'm supposed to provide to the reddit backend to help it complete this process.\nFor example, with PRAW, I only provide the software with consumer key, secret, redirect_uri, and then 'code'. At this point I have a valid access token. \nreddit.set_oauth_app_info(client_id='KULxkkOUuiNSiQ',\n                          client_secret='my-secret-abc-123',\n                          redirect_uri='http://skrubba.com:8000/complete/reddit')\naccess_information = reddit.get_access_information('code_from_reddit_approval')\nAll of these things I have provided to the reddit backend in the settings ( except 'code' which comes back from reddit of course ). What else must I do? It should be able to complete the process with this data ( like facebook and twitter backends do ). Thanks for your assistance, I really appreciate it.\n. I think I located the problem, and its working for me now, but I'm not sure if something needs to be fixed in this project.\nI appended a trailing slash to the redirect_uri in the app settings on reddit.com AND in my settings ( REDDIT_AUTH_EXTRA_ARGUMENTS ). I tried this after digging though the tracebacks and seeing a request to my redirect uri with the slash.\n. I'm gonna go ahead and close this, assuming the error just stems from me using /complete/provider instead of /complete/provider/. Thanks again for your help and the project itself.\n. ",
    "unbracketed": "I've noticed some similar tracebacks on a site for the last few weeks; the site also runs on Heroku.\n. ",
    "paulocheque": "Hypothesis\n- It appears to be a Heroku network issue (Heroku proxy or something).\n- Check the Python in the runtime.txt file\n- Maybe the User-Agent: Python-urllib/2.7 is forbidden by the service.\n- Service throttle blocks Heroku's IPs because there are too many requests\n. They are just hypothesis, sorry, I have edited my message inform that.\nI have faced similar problems with different tools. Using python requests instead of urllib help me to understand the problem. In my case, it was a throttle problem of the Google API.\n. ",
    "antonagestam": "@paulocheque What makes you think it's a Heroku network issue? The user agent was definitely not forbidden as this was a rare error. Might have been a throttle, but in that case, shouldn't social auth handle it gracefully?\n. ",
    "rychlis": "+1\nFor now you can use github compare view and inspect commits directly to see what's new in specific version, eg.: https://github.com/omab/django-social-auth/compare/v0.7.20...v0.7.21\n. ",
    "tatenen": "After user authentication a redirect to the url is issued (url that is\nspecified in my settings.py). After that it parses the GET parameters\nagain, which results in an error \"there is no variable state\". My code just\nfixes that state. I.e if user.is_authenticated() returns True then function\nthat parses parameters from Github is skipped.\n2013/8/19 Mat\u00edas Aguirre notifications@github.com\n\nI don't see the reason of this fix, if user is authenticated then it's an\nassociation process and with this patch that won't happen. There was any\nparticular issue that you were trying to solve? Any traceback?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/pull/744#issuecomment-22874643\n.\n. it's called.\ndef auth_complete(request, backend, user=None, _args, *_kwargs): in\nhttps://github.com/omab/django-social-auth/blob/master/social_auth/views.py#L174\nand then\nhttps://github.com/omab/django-social-auth/blob/master/social_auth/views.py#L190\nand then\nhttps://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L831\nand then\nhttps://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L834\n\nhere\n params = self.auth_complete_params(self.validate_state())\nin self.validate_state()\nhttps://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L794\nand finish\nhttps://github.com/omab/django-social-auth/blob/master/social_auth/backends/init.py#L804\nI may be mistaken, show where?\n2013/8/19 Mat\u00edas Aguirre notifications@github.com\n\nAfter user is authenticated auth_complete() shouldn't be called, why is\nthat happening?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/pull/744#issuecomment-22877174\n.\n. Sorry. my mistake. I'm stupid. I had better read the documentation. Thanks\nfor the explanation. in my settings.py was\nGITHUB_SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/complete/github/'  and this is my\nerror. i war change it on /login/ and that's all right. thanks again for\nthe help\n\n2013/8/19 Mat\u00edas Aguirre notifications@github.com\n\nYour links are to many things with the word auth_complete which are not\nthe same. The auth process goes like this:\n1. The user clicks /login/github/\n2. The view takes the GithubBackend and calls auth_url() and returns a\n   redirect to that URL\n3. The user gets redirected to github and approves the auth\n4. The user gets redirected back to your site to /complete/github/\n5. The complete grags the GithubBackend and calls auth_complete()which completes the authentication process\n6. auth_complete() returns a user instance and if all went OK\n   redirects the user to the value of SOCIAL_AUTH_LOGIN_REDIRECT_URL or\n   LOGIN_REDIRECT_URL\nThe proposed patch breaks the authentication workflow for github backend\n(when the user is already logged in). Do you have a traceback of what\nhappens without your patch?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/pull/744#issuecomment-22880640\n.\n. \n",
    "dbaxa": "@omab ping!\n. ",
    "jorilallo": "When I started to debug this, I realized that I don't even need it so don't worry about it.\n. ",
    "mikek": "Even a simple workaround like this would not work if user has not associated account with a dash in backend name. The list will not include the backend with a dash because it is replaced only for associated accounts.\nhtml\n<h3>Connect more accounts (to be able to log in with any of them)</h3>\n<ul>\n    {% for backend, user_sa in social_auth.items %}\n        {% if not user_sa and not '-' in backend %}\n            <li><a href=\"{% url 'socialauth_begin' backend %}\">{{ backend }}</a></li>\n        {% endif %}\n    {% endfor %}\n</ul>\n. While we can get disconnect URLs regardless of the backend 'key':\n{% for backend, user_sa in social_auth.items %}\n    {% if user_sa %}\n        {% url 'socialauth_disconnect_individual' user_sa.provider user_sa.id %}\n    {% endif %}\n{% endfor %}\n'socialauth_begin' URLs for backends with dashes are broken now:\n{% for backend, user_sa in social_auth.items %}\n    {% url 'socialauth_begin' backend %}\n{% endfor %}\nwill produce 'underscored' URLs.\nAny other way to iterate over all enabled backends to connect and disconnect accounts?\n. Thanks, this simple approach should add no controversy!\n. ",
    "boris-savic": "I haven't tested Google oAuth or Twitter indeed, but anyway I find it inconvenient that in case of AuthException  thing just dies instead redirects to LOGIN_ERROR_URL. \n. Wasn't aware of that. Thanks. \n. ",
    "trilliput": "Hi Mat\u00edas. Can you tell how soon will it be in the stable version available by pip?\n. @omab Sure. Thanks!\n. ",
    "russian-master": "The problem was with ALLOWED_HOSTS - it's hard to guess...\n. ",
    "kaleissin": ".. and you have to read the source of decorators.py to see that, preferrably the source to require_POST too. It should be documented.\n. ",
    "magopian": "wow that was fast ;) thanks! I'll poll PyPI to see when I can use a released version instead of https://github.com/omab/django-social-auth/archive/master.tar.gz ;)\n. awesome!\n. ",
    "adambratt": "Yes that works for now.\n. ",
    "norbertsienkiewicz": "I've the same problem, I know it's an old post, but do you remember how you fixed that?\n. ",
    "pconerly": "+1\n. ",
    "emilisto": "Thank you too for a great package!\n. ",
    "igorline": "oops, sorry. found it in js...\n. ",
    "kakky": "It seems there is no should be written here.\nI'll try again written in python-social-auth.\n. @onylampada Please see here.\nhttps://github.com/omab/python-social-auth/issues/300\nhttps://github.com/omab/python-social-auth/issues/477\n. ",
    "stefankoegl": "Installing django-social-auth via pip doesn't work for me in Python 3, as can be seen in https://gist.github.com/stefankoegl/6858104\nAlso https://pypi.python.org/pypi/django-social-auth only lists Python 2.5 - 2.7 as supported.\n. OK, understood. I've reported the first Python 3 related issue as #776.\n. ",
    "luckymeeh": "That will still associate the social account with the logged-in user. How can we force the logged-in user to logout and create a new account for the new user?  \nOn Thursday, November 14, 2013 at 10:08 AM, Mat\u00edas Aguirre wrote:\n\nUse SOCIAL_AUTH_PROTECTED_USER_FIELDS to protect those fields, check http://django-social-auth.readthedocs.org/en/latest/configuration.html#miscellaneous-settings\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/omab/django-social-auth/issues/778#issuecomment-28490897).\n. Is it possible to disable multiple accounts association?  \n\nOn Thursday, November 14, 2013 at 11:13 AM, Mat\u00edas Aguirre wrote:\n\nYou can add a pipeline to check the user email, if it's not the same as the current one, then logout the user, but you are assuming that the users use the same email address on every provider you support, that breaks association a little.\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/omab/django-social-auth/issues/778#issuecomment-28496866).\n. Ok great. Thank you.\n\nOn Thursday, November 14, 2013 at 11:46 AM, Mat\u00edas Aguirre wrote:\n\nOverriding the pipeline 'social_auth.backends.pipeline.social.associate_user' to enforce a single social account per user, or replace the inclusion of social-auth URLs with something like this:\nfrom functools import wraps from social_auth.views import auth, complete, disconnect def logged_out_only(func): @wraps(func) def wrapper(request, _args, _kwargs): if request.user.is_authenticated(): return redirect('/you-need-to-logout-first') return func(request, _args, _kwargs) return wrapper urlpatterns += patterns('', url(r'^login/(?P[^/]+)/$', logged_out_only(auth), name='socialauth_begin'), url(r'^complete/(?P[^/]+)/$', logged_out_only(complete), name='socialauth_complete'), # disconnection url(r'^disconnect/(?P[^/]+)/$', disconnect, name='socialauth_disconnect'), url(r'^disconnect/(?P[^/]+)/(?P[^/]+)/$', disconnect, name='socialauth_disconnect_individual'), )  \n\u2014\nReply to this email directly or view it on GitHub (https://github.com/omab/django-social-auth/issues/778#issuecomment-28500098).\n. \n",
    "apelliciari": "I dig deeper (trying every version) and i found that the issue happens from 0.7.24. 0.7.23 works well.\nMaybe it's because of the new method clean_partial_pipeline? I'm referring to https://github.com/omab/django-social-auth/issues/706\nI'm using the partial_pipeline, isn't it triggered by social_auth.backends.pipeline.misc.save_status_to_session?\nThis is my pipeline setting (sorry some pipeline entries are my italian methods)\nSOCIAL_AUTH_PIPELINE = (\n        'social_auth.backends.pipeline.social.social_auth_user',\n        'social_auth.backends.pipeline.associate.associate_by_email',\n        'social_auth.backends.pipeline.misc.save_status_to_session',\n        'core.pipeline.redirect_collegamento_account',\n        'core.pipeline.email_as_username',\n        'social_auth.backends.pipeline.user.create_user',\n        'social_auth.backends.pipeline.social.associate_user',\n        'social_auth.backends.pipeline.social.load_extra_data',\n        'core.pipeline.create_utente',\n        'core.pipeline.aggiorna_dati_utente',\n        'social_auth.backends.pipeline.misc.save_status_to_session',\n    )\n. Thank you! I'll try with the custom pipeline function\n. ",
    "Pragueham": "I'm getting a similar issue using google oauth:\nEnvironment:\nRequest Method: GET\nRequest URL: http://***/complete/google-oauth2/?state=gGS6LwKcStXSZxHILVRfQQyiecUeUOl6&code=4/_7U5lalbXwuUX8qok0XMjxuTyWQq.IrmImxWg29MQYKs_1NgQtmXD8TN0hwI\nDjango Version: 1.6.1\nPython Version: 2.7.6\nInstalled Applications:\n('django.contrib.auth',\n 'django.contrib.contenttypes',\n 'django.contrib.sessions',\n 'django.contrib.sites',\n 'django.contrib.messages',\n 'django.contrib.staticfiles',\n 'django.contrib.admin',\n 'south',\n 'social_auth',\n 'holiday_tracker')\nInstalled Middleware:\n('django.middleware.common.CommonMiddleware',\n 'django.contrib.sessions.middleware.SessionMiddleware',\n 'django.middleware.csrf.CsrfViewMiddleware',\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\n 'django.contrib.messages.middleware.MessageMiddleware',\n 'django.middleware.clickjacking.XFrameOptionsMiddleware')\nTraceback:\nFile \"/app/.heroku/python/lib/python2.7/site-packages/django/core/handlers/base.py\" in get_response\n1.                     response = wrapped_callback(request, _callback_args, _callback_kwargs)\n   File \"/app/.heroku/python/lib/python2.7/site-packages/django/views/decorators/csrf.py\" in wrapped_view\n2.         return view_func(_args, _kwargs)\n   File \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/decorators.py\" in wrapper\n3.             return func(request, request.social_auth_backend, _args, _kwargs)\n   File \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/views.py\" in complete\n4.         return complete_process(request, backend, _args, _kwargs)\n   File \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/views.py\" in complete_process\n5.     user = auth_complete(request, backend, _args, _kwargs)\n   File \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/views.py\" in auth_complete\n6.     return backend.auth_complete(user=user, request=request, _args, _kwargs)\n   File \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/backends/init.py\" in auth_complete\n7.                             _args, _kwargs)\n   File \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/backends/init.py\" in do_auth\n8.         return authenticate(_args, _kwargs)\n   File \"/app/.heroku/python/lib/python2.7/site-packages/django/contrib/auth/init.py\" in authenticate\n9.             user = backend.authenticate(credentials)\n   File \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/backends/init.py\" in authenticate\n10.         out = self.pipeline(pipeline, _args, *_kwargs)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/backends/init.py\" in pipeline\n11.                 result = func(_args, *_out) or {}\n    File \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/backends/pipeline/social.py\" in associate_user\n12.         social = UserSocialAuth.create_social_auth(user, uid, backend.name)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/social_auth/db/base.py\" in create_social_auth\n13.         return cls.objects.create(user=user, uid=uid, provider=provider)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/models/manager.py\" in create\n14.         return self.get_queryset().create(kwargs)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/models/query.py\" in create\n15.         obj.save(force_insert=True, using=self.db)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/models/base.py\" in save\n16.                        force_update=force_update, update_fields=update_fields)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/models/base.py\" in save_base\n17.             updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/models/base.py\" in _save_table\n18.             result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/models/base.py\" in _do_insert\n19.                                using=using, raw=raw)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/models/manager.py\" in _insert\n20.         return insert_query(self.model, objs, fields, kwargs)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/models/query.py\" in insert_query\n21.     return query.get_compiler(using=using).execute_sql(return_id)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/models/sql/compiler.py\" in execute_sql\n22.             cursor.execute(sql, params)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/backends/util.py\" in execute\n23.             return super(CursorDebugWrapper, self).execute(sql, params)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/backends/util.py\" in execute\n24.                 return self.cursor.execute(sql, params)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/utils.py\" in exit**\n25.                 six.reraise(dj_exc_type, dj_exc_value, traceback)\n    File \"/app/.heroku/python/lib/python2.7/site-packages/django/db/backends/util.py\" in execute\n26.                 return self.cursor.execute(sql, params)\nException Type: DataError at /complete/google-oauth2/\nException Value: value too long for type character varying(16)\n. @antonagestam @goldsmith no nothing - maybe @omab could help?\n. Thanks, I'm obviously being thick, but having read the docs, I still don't understand @omab 's solution. Can you please explain a little more?\n. ",
    "sipp11": "This is django.contrib.auth.models related issue. It's because username and first_name and last_name field of auth_user table are fixed at 30 characters while user's data has longer than 30 characters. \nThis can be easily fixed by altering above fields to bigger one. I used varchar(75) and I didn't see any problem so far. If you are using all Django form, you might need to let Django know too. For example,\nUser._meta.get_field_by_name('username')[0].max_length = 75\nUser._meta.get_field('username').validators[0].limit_value = 75\nUser._meta.get_field_by_name('first_name')[0].max_length = 75\nUser._meta.get_field('first_name').validators[0].limit_value = 75\nUser._meta.get_field_by_name('last_name')[0].max_length = 75\nUser._meta.get_field('last_name').validators[0].limit_value = 75\n. ",
    "sid24ss": "Shoot. Thanks. Didn't know that. Anyway, migrating to PSA now.\nClose #786.\nOn Fri, Dec 27, 2013 at 9:29 AM, Mat\u00edas Aguirre notifications@github.comwrote:\n\ndo_auth() is just for OAuth1 and OAuth2 backends only, GoogleAuth is\nOpenId.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/omab/django-social-auth/issues/786#issuecomment-31262090\n.\n\n\nSiddharth Swaminathan\nhttp://siddharthswaminathan.in/\n. ",
    "ivanff": "You pass in crate model: (), {email: 'sdsdf@asdf'}\nYou must change pipeline view or method in UserSocialAuth, like this:\ndef create_user(backend, details, response, uid, username, user=None, _args,\n                *_kwargs):\n    \"\"\"Create user. Depends on get_username pipeline.\"\"\"\n    print 'create_user', backend, details, response, uid, username\n```\nif user:\n    return {'user': user}\nif not username:\n    return None\nAvoid hitting field max length\nemail = details.get('email')\noriginal_email = None\nif email and UserSocialAuth.email_max_length() < len(email):\n    original_email = email\n    email = ''\nreturn {\n    'user': UserSocialAuth.create_user(username, username=username, email=email),\n    'original_email': original_email,\n    'is_new': True\n}\n```\n. ",
    "malero": "Here is my database engine and storage engine settings. I didn't see any database requirements, so I just wanted to bring this to your attention.\n'ENGINE':'django.db.backends.mysql',\n'STORAGE_ENGINE': 'MyISAM',\n. After looking at the South migration files, I saw that you set it up so you can set the field lengths from settings.py. Thanks for the great app!\n. ",
    "pztrick": "For anyone that surfs on to this issue from Google (as I did), here are some settings.py variables you can tweak (which are referenced in the 0002 migration):\nSOCIAL_AUTH_UID_LENGTH = 128\nSOCIAL_AUTH_NONCE_SERVER_URL_LENGTH = 128\nSOCIAL_AUTH_ASSOCIATION_SERVER_URL_LENGTH = 128\nSOCIAL_AUTH_ASSOCIATION_HANDLE_LENGTH = 128\nThey default to 255 in the migration.\n. ",
    "binfeng": "Awesome, it works\n. ",
    "kotlyar-andrey": "Thank you very much!\n. ",
    "dxe4": "any chance to change datetime to int utc timestamp? because of the security issues of using PickleSerializer\n. ",
    "SalahAdDin": "thank you,\nDjango All Auth is the samen package?\n. but have the same function?\n. Ah, we have to use your package :D\n. ",
    "zelds": "Have the same trouble with steam but in main window auth dosen`t work. Do u have solution ?. ",
    "aliabbas-2012": "when i click onf facebook login link then it happens \n. I m now using djangoallauth\nOn Feb 22, 2015 10:01 PM, \"adilberrada\" notifications@github.com wrote:\n\nHello,\nDid you manage to find the solution. I am facing the same issue ... thanks\nin advance\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/omab/django-social-auth/issues/807#issuecomment-75445036\n.\n. Not tutorial I done this thing in many days\nOn Feb 22, 2015 10:07 PM, \"adilberrada\" notifications@github.com wrote:\nIs it better in some way ? Can you get authenticated user's friends with\ndjangoallauth ?\nDo you have any tuto ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/omab/django-social-auth/issues/807#issuecomment-75445338\n.\n. I can do from my code\nOn Feb 22, 2015 10:09 PM, itsgeniusstar@gmail.com wrote:\nNot tutorial I done this thing in many days\nOn Feb 22, 2015 10:07 PM, \"adilberrada\" notifications@github.com wrote:\n\nIs it better in some way ? Can you get authenticated user's friends with\ndjangoallauth ?\nDo you have any tuto ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/omab/django-social-auth/issues/807#issuecomment-75445338\n.\n. \n\n",
    "adilberrada": "Hello,\nDid you manage to find the solution. I am facing the same issue ... thanks in advance\n. Is it better in some way ? Can you get authenticated user's friends with djangoallauth ?\nDo you have any tuto ?\n. Hey do you have a separated djangoallauth app in your project ? Because in my project I have 2 apps (\"allauth\" and \"travels\"). After social logging in, the user is redirect to a template of \"travels\". In travels view I cannot do a \"if user.is_authenticated\" could you help me please ?\nYou help would be very appreciated.\n. ",
    "blockjon": "I have that problem too.\n. ",
    "andresgarciadev": "u need to install requeriments.txt\nsee that\nhttp://www.williamjohnbert.com/2011/08/django-social-auth-installing-and-troubleshooting/\ntoo need  install oauth\nand update oauthlib\n. ",
    "vyscond": "which version of django you're using?\n. The problem is that the function module_member over social/utils.py is getting the entire authentication backends tuple defined over the settings.py\n```\ndef module_member(name):\nprint('social > module_member > ', name) # you will se the tuple\nmod, member = name.rsplit('.', 1)\nmodule = import_module(mod)\nreturn getattr(module, member)\n\n```\nafaik this should receive the correct backend module path, but i don't know how this magic should be done.\n. ",
    "Alex-Just": "@adilberrada, you need to post your settings.py file. I had a similar error when my EMAIL_* vars inside settings.py had unnecessary trailing commas making them tuples instead of plain string vars.\n. ",
    "mauroka": "Hello, I would like to know if this is possible.\nI can see that the issue is closed but I don't know how to accomplish this.\nThanks a lot.. ",
    "sreejithr": "@shinriyo What version were you trying to install? Looks like an error with oauth2. Tell me the version so I can try to reproduce.\n. ",
    "geneinmylife": "I met the same problem using django 1.8.3 Can I ask how to solve it? \n. ",
    "Jzarecta": "I am using 1.8.2 wonder if you got to fix this and how?\n. ",
    "TakesxiSximada": "I'm in the same boat. \nusing \n- Django==1.8.7\n- python-social-auth==0.2.13\n- django-social-auth: 699571a3b6d84aa2c25ffce59daa4c7f3559a0e4\n- Python 3.5.0\n. ",
    "alexandcote": "Do you solve your issue ?\n. https://github.com/omab/python-social-auth\n. ",
    "mkdk": "why it was closed?. ",
    "geojacobm6": "Add this to your settings.py\nSESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'\n. @MaxFriedrichInitPy Did you got any solution for this? I'm facing same issue.\n. ",
    "scottlow": "I am running into the exact same issue. It looks like the permissions requested in FACEBOOK_EXTENDED_PERMISSIONS are not being respected.\nIn the past, I worked on a project that whose auth pipeline was implemented using python-social-auth, and the SOCIAL_AUTH_FACEBOOK_SCOPE setting seemed to work just fine. Not sure what's happening here.\n. ",
    "hellvix": "Same problem here. No information is being retrieved from Facebook at all. Twitter also has a problem but only with the e-mail address.\n. Yeah, django-social-auth is dead. People should migrate to python-social-auth. I got it working with their code.\n. Yes. I implemented on 1.9 with no problem.\n. @vaxXxa django-social-auth is no longer in use. You should install python-social-auth (https://github.com/omab/python-social-auth).\n. There is no documentation on how to the migration but the API is pretty\nmuch the same. Just take a look in the documentation that you'll be able to\nmake the proper changes.\nDen 14. jun. 2016 12.00 skrev \"Andrii Dvoiak\" notifications@github.com:\n\n@hellvix How hard is to migrate from django-social-auth to\npython-social-auth?\nIf there is any guidelines of how to do it?\nThanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "Hagalas": "From my experience it's Facebook's api fault. They made some changes and I had the same problem with retrieving data from it. Read changelog in docs and check your version of django-social-auth.\n. ",
    "gavelino": "Duplicated, sorry!\n. ",
    "fuzzy76": "I guess the fact that this project haven't seen a single commit since you asked your question answers it. :)\n. ",
    "michael-borisov": "Oh, sorry, now I found, that project is depricated)\n. ",
    "mrigdon": "+1\n. ",
    "Tatsh": "It seems to work, but there are some warnings and you have to enable the non-secure PickleSerializer as your SESSION_SERIALIZER (default for a while has been the JSON serialiser). If you do not, Facebook login will not work.\n```\n/home/tatsh/.virtualenvs/fos/lib/python2.7/site-packages/social_auth/utils.py:14: RemovedInDjango19Warning: The utilities in django.db.models.loading are deprecated in favor of the new application loading system.\n  from django.db.models.loading import get_model\n/home/tatsh/.virtualenvs/fos/lib/python2.7/site-packages/social_auth/models.py:4: RemovedInDjango19Warning: django.utils.importlib will be removed in Django 1.9.\n  from django.utils.importlib import import_module\n```\n. ",
    "vaxXxa": "@hellvix @Tatsh \nPython 3.5.0\nDjango 1.9.1\ndjango-social-auth 0.7.28\nDuring \"migrate\" or \"runserver\" I got:\nfrom django.utils.importlib import import_module\nImportError: No module named 'django.utils.importlib'\nChanging SESSION_SERIALIZER didn't solve my problem.\n. @hellvix ok.. thnx\n. ",
    "Andrii-D": "@hellvix How hard is to migrate from django-social-auth to python-social-auth? \nIf there is any guidelines of how to do it?\nThanks!\n. ",
    "shelldweller": "Oops. Submitted to a wrong repository. It's been reported here.\n. ",
    "arahman17": "This do the expected result for me. Hope it helps...\nSOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {\n'locale': 'ru_RU',\n'fields': 'id, name, email, age_range'\n}\n. ",
    "dljackson": "Hello armsmani,\nDid you resolve this situation in your IG account? If so, I get the same error, could you let me know your solution to get past it? Thanks!\n. ",
    "shlaikov": "I have the same problem when migrate and runserver.\nAre you fix this problem?\nDjango==1.9.2\ndjango-social-auth==0.7.28\n. ",
    "cdman": "Apparently importlib has been deprecated since Django 1.7 and removed in Django 1.9: https://docs.djangoproject.com/en/1.10/releases/1.7/#django-utils-dictconfig-django-utils-importlib\n. @bsninh78 - yes, that's also the impression I have :frowning: In the end I ended up using banana_py - (I only need mailchimp login for now)\n. ",
    "n2k3bu1": "Thank cdman for related issue. However, It seems that social_auth is not maintained well.\nI will work around another way.\n. ",
    "vaibhav734": "getting above error\n. WrongBackend at /login/google_oauth2/\n. ",
    "dorantor": "Not 100% sure, but it seems problem is with old package in pypi. Last version there is 0.7.28, while current latest is 0.8.1.. ",
    "mmerchant": "@omab was this closed because it is fixed? I seem to be running into this issue as well.. ",
    "ThunderTrent": "I'm having same error for Facebook authentications.. trying to figure out what's going on.. ",
    "tyapkov": "I have the same error. Cannot figure out what to do.. ",
    "Mr-Vice-Versa": "@acangiani  \"More fresh\" fix here^\nhttps://github.com/omab/django-social-auth/pull/855/files#diff-7c5b7cd0fa1ef792f949cfc27348202c. This fix for tag v0.7.28. ",
    "acangiani": "Sorry, I did not intended to create this PR, I'm sorry for the inconvenience and thank you for the fix reference.\n. ",
    "vyahhi": "Thanks!\nBy the way, this file already has import json.. ",
    "daya0576": "The authorization suddenly raises this error without changing any code.\nIt can be produced by visiting http://www.unsw.co/login/facebook/?next=/ \nThx a lot!  . Try Python Social Auth, it works perfectly for me.   . Same problem//. ",
    "Dimitri-Gnidash": "I am having a similar issues. Is there a resolution?. ",
    "iridiumsoft": "Any solution for this issue? @daya0576 did you get any?. ",
    "denisdubovitskiy": "Seems like the project is already dead.... ",
    "xarg": "I bet this can die in many different ways.\n. You mean Yahoo\n. "
}