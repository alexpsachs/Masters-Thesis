{
    "smashwilson": "Yeah, that's true. Next on my list is letting you edit the sides in place (which you can kind of do already, but I want to add a \"revert\" button and mark it as changed), which would let you copy and paste one side to the other and accept that. That is a little awkward, though, for large diffs.\nI have considered adding a context menu with additional resolution options, though, including accepting both in either order. What do you think?\n. > I have only used this once, so it may be there already but another nice feature would be to know how many conflicts there are currently in the file.\nAlready on the roadmap - I want to have a progress bar for each file, and a dialog to let you save and stage your resolution once you're done. Check out the README for my 1.0 list :grinning: \n. I've implemented ours-then-theirs and theirs-then-ours resolutions in #16:\n\nAnd, I've implemented whole-file resolutions (by shelling out to git checkout --ours or --theirs):\n\nIt's been tagged and released in 0.0.8.\nCheers! :beers: Thanks for the feedback and the ideas.\n. Fixed by #14. I changed it to use fold and unfold icons, too. It even animates!\n. > Toggle from cmd-shift-p, a hotkey, or a fancy button?\nCertainly from the command palette. A button would be nice, but I'm not sure where to put it; maybe at the bottom of the MergeConflictView.\n. Fixed by #17. When you finish each file, you'll get a dialog prompting you to save and stage; when you stage the last file, you'll get a dialog telling you you're done, and it shuts down.\nThere's still an issue or two remaining (#20) but the basic function is there.\n. > This pull request is seriously lacking in animated GIFs of functionality.\nYeesh, give me some time! I'm tidying up some stuff, then I'll mark it off in the README, do another gif, and push another patch release.\n. :zap:\n. @rgbkrk: Any chance you've got anything handy for this? Something from ipython history maybe? No worries if you don't, I can always go hunting myself.\n. > Not offhand.\nNo worries. Thanks for checking!\n\nHow are you going to manage it as an example? Keep a git submodule that you can muck with that isn't part of the actual repo?\n\nMy plan was the far lazier route of keeping it cloned and checked out at the merge point in ~/code. Right now I've got my ultra-artificial repo in ~/temp.\nOh, it might be nice to have some other kinds of conflicts handy, too -- modify-delete and so forth -- to eventually be able to experiment with and show off #10.\n. For the latest one I just did git log --grep=Conflicts in GitLab's history. Found a few good ones.\n. I think I took care of this one. It's a bit of a heisenbug so it's hard to reproduce to be sure. But, I believe the root cause is a bug in Marker and DisplayBufferMarker serialization.\n. Implemented by #16.\n. I should also join forces with https://github.com/lukesutton/atom-git-status. :zap:\n. :+1: Hell yes. I'll likely wait on rgbkrk/atom-achievements#5 to implement the merging-X-hunks ones, though.\n. - Selfish: Accept only your side for an entire merge.\n- Low Self Confidence: Accept only their side for an entire merge.\n- Voltron: Resolve a conflict as \"both\".\n- Author: Edit a conflict in-place before you accept it.\n- No, That's Not Right: Revert an edit back to its original form and accept it.\n- Mouse-Averse: Resolve an entire conflict using only the keyboard.\n- Ambidextrous: Resolve an entire conflict using only the mouse.\n- Just So: Use a non-default keybinding for a merge-conflicts action.\n- Orderly: Resolve all hunks in a conflict in a single pass.\n. I bet @atiaxi could come up with some great ones here. Terrible puns are right up his alley.\n. Well, that was easy.\n. Done. :zap:\nAs a side benefit, if another packages resolves a file by broadcasting merge-conflicts:resolved, ConflictMarker will handle resetting the EditorView back to its natural state.\n. You now get a dialog prompting you to save and stage files after you've solved all of the conflicts. :point_up: \n. > Firstly, this tool is awesome!\nThanks! :blush: \n\nSecondly, if running inside an inner directory of the root folder, clicking on one of the search results does not open the file. It just opens an empty file.\n\nHmm! Yeah, that is a problem -- I've been assuming that the git repo root and Atom's project path coincide, which clearly isn't necessarily true. I'll look into normalizing paths more carefully.\n. Okay, that should take care of things.\n- All events merge-conflicts:resolved and merge-conflicts:staged events use the full paths to the files.\n- The conflict set (as reported by git status --porcelain) uses repository-relative paths. These are also the paths that you'll see in the MergeConflictsView. (I wasn't sure how to show conflicts outside of the project path, otherwise.)\n- The repository base is used as the current working directory for all of the GitBridge operations.\n- atom.workspace.open is given the full path, which works even if it's outside of the project directory.\n- Git.relativize is used to translate full paths to repository-relative ones where appropriate, and path.join atom.project.getPath(), repoPath is used to translate repository-relative to full paths.\nIt'll be in the next release; let me know if you hit any other edge cases. :smile: \n. It must be. git-utils is used to show the branch name and ahead-behind indicators in the status bar and all of the other git integration.\n. Fixed by #29.\n. Fixed.\n. I've noticed this too, but I wasn't sure if it was related to this package or not. :frowning: \n. Well, this just happened to me again this morning. I noticed that it also failed to delete the ref banner for the \"theirs\" side twice.\nWeird :worried:\n. Okay, if I can reproduce this reliably, this should probably be in 1.0.\n. Looks like it happens when you edit a hunk in-place. :thought_balloon: \n. Hmm! Yeah. There's a method on EditorView that calculates the left: coordinate of a particular column within a row, for cursor placement. It uses a cache so the problem is intermittent. When there's a cache miss, my DOM additions seem to be interfering with the calculation of the new position -- it logs different numbers before and after I activate conflict resolution.\n. Before you activate merge-conflicts, it's measuring an empty space as 8 pixels. After, it's measuring an empty space as 10 pixels. o_O\n. Hah! It's measuring client rects two pixels off... because I'm adding a two pixel border.\n. Yep. I took the .line borders out of the stylesheet and the cursor tracked just fine again.\n. There! You can start and stop resolving a bunch of times and you no longer see multiplying dialog boxes. Also, all of the CoveringViews are disposed of properly when you click \"quit\", too.\n. Oh, that's true! Is there a graceful way to rename a package that won't stop people who've already installed it from getting upgrades, though?\n. Asked in a Discourse thread.\n. I'm mainly concerned about people (like me) who generally use apm upgrade to bulk-update their packages. If you don't see the README, you won't know to switch.\nBut, I guess that's a reason to do the switch before the beta progresses further, to limit how many people get stuck with the old name. :notes: \nAny suggestions for a name to settle on? I'd rather not make it super long just for SEO purposes. \"git-merge-conflicts\"? \"merge-git-conflicts\"? \"git-merge-resolver\"? \"git-resolver\"?\n. Okay... I think I'm going to namesquat on git-merge-conflicts with a README that links here until the Atom team comes up with a decent renaming strategy. A fair number of people have already installed it with this name, and it seems rude to the existing install base to do it any other way.\n. Reserved: https://atom.io/packages/git-merge-conflicts\nAnd if you install the wrong one, you get this on load:\n\n. > Also, damn would I be annoyed to see this.\nHahaha. Is it too annoying? Also, that's why I didn't want to do this on merge-conflicts to do the move :wink:\n\nYou should just make the description for the placeholder point to merge-conflicts.\n\nGood point. I'll publish a new version here in a minute.\n. Alrighty - closing this for now. I'll reopen if a good channel for doing this comes up.\n. The same problem happens with rebases.\n. Well that's no good. I'll try to replicate here.\nI don't suppose you had a stack trace or an exception in the console when it opened?\n. I just did a fresh install on 0.79.0 and activated it without a problem.\nDo you have another package installed that might be interfering somehow? Is the buffer in a weird state?\n. Oh! Okay, I know what's wrong: Atom can't find the git executable. You can change the git path in the settings panel:\n\nSet that to wherever git happens to be installed on your system. You can find that out by typing which git in a Terminal. If you don't have git installed (or if you're using a non-command-line git client and it bundles its own,) I recommend using homebrew and running brew install git.\n. I am planning to use git-utils eventually, by the way, which uses a bundled libgit2 installation.  For the moment though I'm just shelling out to git to check status and stage files. I apologize for the clunkiness.\n. No worries! This is a fairly common OS X environment thing, I think, I've seen similar issues on other packages that shell out. I'll close this now, but don't hesitate to let me know if something else breaks :grin:\n. Hey, awesome, thanks!\n. Yeah, this is a ${PATH} issue. See #38 for a discussion of what's going on and how to fix it.\nQuite a few plugins are running into this issue. It'd be nice to be able to catch the ENOENT and display a more friendly error message, but thus far there doesn't seem to be a clean way to do it. @rgbkrk, did your .process.on 'error' workaround do the trick?\n. Made a nicer error for this. :arrow_right: \n. Ah, great question. Unfortunately you can't, yet, but it would be great to be able to.\nThis'll be a bit tricky to implement because mergetool expects a certain protocol for conflict resolution that merge-conflicts doesn't implement. Specifically, it expects to invoke the mergetool command once for each conflicting path and uses the exit status to determine whether or not a particular merge succeeded. Also, I believe git launches the tool instead of attempting to merge itself, although I haven't used it myself and I could be wrong. merge-conflicts processes all conflicts throughout the repository at once and relies on git to do the actual merging.\nHere's how I might be able to make this work anyway:\n- Read the ${BASE}, ${LOCAL}, ${REMOTE}, and ${MERGED} environment variables to tell that we're in \"mergetool mode.\" Automatically invoke merge-conflicts:detect on load.\n- If git doesn't actually write its own merge result to ${MERGED}, invoke git merging porcelain commands (assuming they exist) to do so.\n- Create an empty dotfile somewhere consistent (/home or /tmp).\n- As each file is resolved, write its path into the dotfile.\n- On subsequent launches, check for the existence of the dotfile. If the ${MERGED} file is listed, immediately exit(0). Otherwise, launch and continue resolving as before.\nI think that'll let you stop and resume resolving, but also not launch Atom over and over. If I can hook into Atom's startup before it starts loading and rendering its chrome, all the better, but I don't think I can run that early.\nAs an enhancement, I also think it'd be cool to have a package option you can check or uncheck to handle registering Atom with git.\n. > AFAIK from using p4merge and kdiff3 it tries to merge by itself but if it bumps to conflicts it does not give you the state where it left off. Therefore we would have to get some automatic merge resolution (possibly git can do that) and then give the user a way to resolve the conflicts by hand.\nOkay, I thought that might be the case. I'll investigate and check around the porcelain, then. :mag: \n\nAs to exit codes why not use a proxy script that would eat the protocol, pass variables to Atom and then emit the required exit code after getting feedback? I hate the workflow where the editor gets spawned for each resolution though it makes sense if you use vim ;).\n\nOh, hey, that's a much better idea. Any idea where I could host it? I wonder if packages know where they are in the filesystem... I could leave it in lib/ and install it on request.\n\nCheck/uncheck would require editing ~/.gitconfig by Atom. This does not sound too safe to me, though having it as an option would be a considerable improvement over changing it by hand.\n\nWell, I'd probably shell out to git config --global. Also, you don't edit your .gitconfig by hand? :wink:\n. > As a user I was pretty surprised that merge-conflicts didn't support git-mergetool integration. Disappointed :-/\nIt's on my radar! As you can see above, it's a little more involved than you might expect at first glance.\nIn the meantime, I do accept pull requests :wink:\n. > Yeah understood, just wanted to +1 didn't mean to be a downer. Thanks for creating this, I just don't know how to really use it without merge tool support so I was disappointed\nHehe, no worries. Consider it +1'd.\nGenerally, when I'm merging, I already have Atom open on the project I'm working in. I run git merge or git rebase in a terminal, and if I see conflicts in the output, I ctrl-command-m (or pick Detect Conflicts from the command palette) in Atom to kick things off. Once everything is resolved, I flip back to the terminal and git commit or git rebase --continue to finish it off.\n. Hmm, I'm not sure why I didn't get an email for this one... ? Strange.\nAnyway, yeah, you found the workaround. The long-term solution is #12, but in the meantime you can use the package setting.\n. Done in #57. Works seamlessly across React and Classic flavors. :boom:\n. Yeah, I'm not seeing an obvious chord prefix. Let's go for a Ctrl-m chord prefix.\n. Done in #56.\n. Hmm! Well that's no good.\nmerge-conflicts uses the output of git status to enumerate conflicting paths. Would you mind posting your git status output here, so I can see what it's missing?\n. Oh, I think I see. All of the conflicts listed there are \"both added\" conflicts, instead of \"both modified\" ones... meaning, those files are all absent in the common ancestor and have been added in gh-pages and in 0.3.0. At the moment, I check explicitly for \"both modified\" conflicts; see #10.\nI'd held off on implementing the other ones because it's less obvious how to display them (like when one side has deleted a file, say, or if one side has a file with the same name as the other's directory).  In your case it looks like I should be able to handle \"both added\" the same way I do \"both modified\".\nI'll investigate when I get back to this. Thanks for the report!\n. @frk1705: Well that's a new one. Yours has to be a problem with the status parsing function, but I'm not sure what.\nAny way you could add a breakpoint in that function and see what chunk, line, and m look like? I was assuming that chunk would be passed as one or more complete lines, from the BufferedProcess documentation, but I wonder if that's not always the case...\n. Oh, wait - that is a different issue. The bits I was asking you to debug were involved with parsing which files to include in the Conflicts view, but the dialog you're seeing is related to parsing actual conflict markers out of an individual file once you've opened it.\nThat bit is in Conflict.all, which uses the [CONFLICT regex](https://github.com/smashwilson/merge-conflicts/blob/master/lib/conflict.coffee#L7) to find the markers.\nIs there a chance you \\r\\n line endings in that file instead of \\n ones?\n. > I'm on windows, I suppose they are \\r\\n by default?\nOh! Yes, they would be - so that's what's wrong. Adding \\r? in that regex should fix it for you, then.\nHopefully I'll get a chance to poke at this later today, and take care of both of these problems...\n. Ah, that's a good point.\nIdea: the \"Mark Resolved\" dialog should have a \"No Thanks\" or \"Not Right Now\" button, too. You should be able to summon it from a control on the merge conflict status panel that appears in the place the checkmark does once the file is resolved.\nSound good?\n. Awesome, thanks! Looking forward to it :grin:\n. I like the behavior here a lot! Other than my standard nitpickiness comments it looks great.\nYou are missing one very important bit though -- be sure to add yourself to the contributors in package.json! Here's what it looks like in another package if you need a reference.\n. > I rebased onto 23e3cc4. Do you want me to add documentation for \"my\" new methods?\nThanks for the rebase!\nNah, don't worry about documentation. I haven't been super strict about it so far, and this looks great as-is. I'll merge once I get the green check :+1: \n. Merged, noted in the CHANGELOG and released. Thanks again!\n. :metal:\nThanks!\n. :+1:\n. Since I'm changing the keybindings, I should probably bump a minor on the next release.\n. Almost there:\n\n. :checkered_flag: :checkered_flag: :checkered_flag: \n. \n. That ought to do for now.\n. Hmm, true.\nShould be an easy fix - I'd just need to change the class on the panel header.\n. Whoops! That's what I get for changing the bindings without actually testing on a Mac.\nIf I change it to Ctrl-M, it'll actually be consistent across all three platforms, too.\n. That should do it. As of the next release it'll use Ctrl-M chords everywhere.\n. > Maybe I am dumb but your description does not match the patch. You use Cmd-M prefixes only now which makes the hotkeys unusable on windows and linux?!\nD'oh! You're absolutely right. I kept the wrong ones.\nThanks a million for the catch. I'm really glad now that I didn't push a release with this!\n. If you start typing in either the \"ours\" or \"theirs\" sections, that section should change color (to yellow).\n\nYou can then accept that section by any of the normal mechanisms and your edits should be accepted as the resolution. If that's not happening for you then it's a bug!\n\nAlso, once I've finished editing, what do I do to get rid of the highlights and mark the conflict as resolved?\n\nYou can either:\n- Click on the \"use me\" button for that chunk:\n  \n- Press the keystroke indicated on that button;\n- Position the cursor in the side that you want to accept and invoke \u2318-M Enter to \"resolve current\";\n- Right-click inside either part of the conflict and choose one of the Resolve: options for ours, theirs, or current.\nIf you're doing one of these and it isn't working, it's a bug! Let me know which one you're trying, what platform you're on, and whether or not you have \"Use React Editor\" checked in your settings.\n\nPerhaps there could be a \"Resolve: manual\" option that falls back to the raw conflict for situations like this.\n\nYou can actually \"quit\" the conflict resolution process if you prefer doing it by hand, then invoke Merge Conflicts: Detect again to continue.\n. Oh! I see what you're trying to do. You're supposed to be able to get the resolution you're looking for by choosing \"Resolve: Theirs Then Ours\" from the right-click menu within the conflict hunk.\n\nChoosing that option should get rid of the conflict decorators (lines 4, 9, and 13) and keep both sides of the conflict as-edited in that order.\nUnfortunately, it looks like you're rebasing, and as per #45 those resolutions aren't working properly when you rebase! During a rebase, the \"ours\" and \"theirs\" sides are actually flipped and I think the code doesn't handle that properly yet.\nThat bug is on my list for the next release, but I'm not sure when I'll have time to take a stab at it (I now have a three-week old daughter :wink:).\n\nWhile it's great to be easily able to choose to take changes as a unit, a lot of the time I think people will want to edit them. It'd be nice if this use case was handled in a nicer way than quitting the extension.\n\nYep yep, that was just a workaround.\n\nAlso, note that the blue section didn't change to yellow when I edited it.\n\nNow that's a new one on me. Am I doing a case-insensitive string compare there by mistake? I'll make a new issue for that one so I don't forget about it.\n. The build is already failing in master and I didn't actually touch any source here, so I'm just going to merge this.\n. Hrm. Offhand I'd guess that this is a result of b1264de...\n. I'm trying to think of an alternative to this that might not be so CPU-hungry. The issue that commit addresses is that typing within a DisplayMarker doesn't fire a marker event, which I was using to detect \"dirty\" hunks within a conflict.\nOne idea is that I could check cursor positions and only run detectDirty on those CoveringViews that have a cursor within their bounds, to save unnecessary, potentially expensive String comparisons.\nBefore I start going down that route I'd love to confirm that that's really the issue. Do you have a particular, public conflict handy that triggers this? I know that Atom / Chromium has a bunch of cool profiling tools built-in, but I haven't had a chance to use them yet.\n. > By 'dirty' you mean the user modifying the content of a theirs or ours block?\nYeah, that's it exactly -- \"dirty\" is what I call that in the code.\n\nI lied (I didn't wait until after work) This repo reproduces the bug. To reproduce clone this bad boy, snag all three branches. Then attempt to merge develop into feature/bug run your awesome tool and watch the cpu climb ^_^\n\nAwesome, thanks! I'll check it out when I get the chance.\n. > ... I located this noting the @subscribe @statusBar, 'active-buffer-changed', @updateCursorPositionText and the subsequent updateCursorPositionText() would it be possible to limit this detecting dirty to an active tab by checking if cursor position is in the range of the marked area? Or maybe i'm really tired and way off base.\nThat is my suspicion too! I want to confirm that that's the real problem with some performance testing before I start yanking it around, though, to get a baseline to compare to.\nAlso apologies for letting this sit so long. I haven't forgotten :wink:\n. I just published version 1.2.4, which:\n1. Uses the new Decorations API instead of fussing around with .line elements by hand, which should be a big performance gain.\n2. Only activates dirty detection for SideViews that have at least one Cursor within their marked regions.\nWhen you get the chance, could you upgrade and let me know if you still see it peg your processor?\n. > I'm getting ready to have to merge a large feature i've been working on into our dev branch so i am expecting a large scale test of your new release later today, i'll let you know how it goes.\n:thumbsup: Thanks!\nIf it's still an issue I'll try to dive deeper into the Chromium profiling tools, so we can get some more insight into what's going wrong.\n. Okay, I'm definitely seeing this now, myself. As soon as I activate merge-conflicts one of the Atom Helper processes spikes up to ~15-20% CPU usage and stays there.\nI did some profiling while I activated the plugin and what's weird is that I'm not seeing anything expensive going on in the call stack.\n\nMaybe it's the shell-out to git? I'll keep :mag_right: \n. Well that's no good. I wonder if I'm assuming something bad about the EditorView... thanks for the detailed report.\n. Yep, I was using an instanceof check to tell the react editor from the classic one. I changed it to use a CSS class, which should be a bit more stable.\nI replicated and fixed it in 1e7c126, and pushed it as version 1.2.5. Please re-open if you're still seeing this once you update.\n. Hmm, that is strange! The keymaps should work cross-platform.\nCan you launch it from the command palette, instead? Look for the \"Merge Conflicts: Detect\" command and invoke that.\nTo catch errors (which would be very helpful), you can open the developer console: \"Window: Toggle Dev Console\" in the command palette, or View -> Developer -> Toggle Developer Tools from the menu, and choose the \"console\" tab. If there's a stack trace on package activate (which this sounds like) it'll show up in red there.\n. You can change it in the Settings view rather than messing around with the source directly:\n\nHave you tried using C:\\Program Files (x86\\Git\\bin\\git.exe? I'm not sure how well process spawning works on Windows these days, especially with spaces in the path, but it's worth a shot.\n. Ah! Thanks for the heads-up.\n. Well, that's not good. I suspect that this is related to #68, but we were never able to nail down what the problem was, there. :thought_balloon: I'm trying to think of a way to pull a stacktrace here...\n. Yep. EditorComponent::becameVisible is called after the EditorView attachment event is sent:\nlineHeight: null covering-view.coffee:37\nbufferTailPosition: (2, 0) screenPosition: (2, 0) clipped: (2, 0) lineHeight: null top: 0 covering-view.coffee:45\nRef: 0 Anchor: 36 Repositioning to: 36 covering-view.coffee:47\nlineHeight: null covering-view.coffee:37\nbufferTailPosition: (4, 0) screenPosition: (4, 0) clipped: (4, 0) lineHeight: null top: 0 covering-view.coffee:45\nRef: 0 Anchor: 36 Repositioning to: 36 covering-view.coffee:47\nlineHeight: null covering-view.coffee:37\nbufferTailPosition: (6, 0) screenPosition: (6, 0) clipped: (6, 0) lineHeight: null top: 0 covering-view.coffee:45\nRef: 0 Anchor: 36 Repositioning to: 36 covering-view.coffee:47\nBecoming visible!\n. On Windows, you'll need to set the absolute path to the git binary on the Settings page, here:\n\n. Well, ultimately I'd like to do everything natively with the bundled git library (see #12), or use a different set of node libgit2 bindings...\n. Oh, yikes, that looks pretty broken. I'll have a look as soon as I get the chance...\n. I appear to be able to reliably trigger this when a file has multiple conflicts and it's long enough to require scrolling, which is of course the case for most real merge conflicts, but not for the samples I was using to live-test.\nInvestigating :mag_right: :footprints: :footprints: \n. Ah, I believe I've tracked down what's going on. My calculations for the positioning of SideViews (the bars that show the \"use me\" buttons and so forth) is now completely wrong if you've scrolled. Accepting a conflict side, or certain edits elsewhere, will invalidate the marker and force a repositioning call, which moves the views to the entirely wrong places.\nThere must be some kind of offset I can yank to take scrolling into account...\n. I think that I've partially fixed this in #87, which is pushed as part of v1.2.8. SideView positioning is still a bit off, though, I've had to kick it to reposition by adding and removing text. I'm hopeful that #93 will improve it further once overlay decorations land in Atom 0.147.0, too.\n. Overlay decorations are live :tada: They'll be included in the next release. The right-hand side of the control bars can be a little off because the vertical scrollbar width doesn't seem to be accurate. It'll do, though.\nI'm now doing much less evil DOM hackery myself, and using a more stable API. I'm hopeful that it should hammer our CPUs less, too.\n. I'm :-1: on preventing edits outside of the conflict areas. Sometimes, resolving conflicts sensibly requires you to edit other parts of the file, to keep the semantics of the surrounding code intact. I'd rather not impose a limitation like that.\nPreventing manual edits to the conflict markers is a good idea, though :+1:. I'll have a look at how to do that the next time I'm hacking on this!\n. Now that's strange: it sounds like the editor events aren't firing properly. I did just update how I handle event subscriptions to deal with a host of deprecations - could you retry with 1.2.8 and let me know if it's still happening?\n. I've touched up a fair number of other bugs since you've submitted this. Are you still seeing this on 1.3.1? If so, any stack traces showing up in your console?\n. I'll close this for now because I've changed a ton since this came up. Let me know if it's still a problem on a recent Atom and merge-conflicts :smile:\n. That's pretty cool - but it would basically involve doing a total rewrite, plus a lot more. Also, as you can tell, the time I'm able to give this package waxes and wanes with my other demands.\nI think there's ample space for different kinds of conflict resolution packages in Atom. Have you considering making a kaleidoscope package of your own? If there's functionality we could share, I'd be happy to refactor out the commonalities into an npm package, for example - although I'm not sure how much of merge-conflicts you'd be able to re-use, honestly.\n. The problem is, on a Mac it isn't. If you launch a Mac application from the launch bar, it doesn't inherit your bash PATH or other environment settings, which (notably) include everything that you install with homebrew. So, merging this would actually break the package for every Mac user for whom it's working today.\nI would love to have it work out of the box on Windows and Linux as much as possible, though. Because there's no one setting that would work cross-platform, how would you feel about using some simple logic to attempt to find a git binary, instead? I'm thinking that we could remove the default setting and probe a few standard locations (checking the PATH first) to find the right one. Of course a manually entered path should take precedence. Hmm.\n. Here's the event-kit link because I keep having to re-search for it :point_up:\n. Actually, Emitter is now bundled with Atom.\n. Done with #104. :sparkles:\nI still don't think I'm disposing of subscriptions everywhere I should be, though.\n. > On my laptop, Git is installed at %appdata%/../Local/Programs/Git/bin/git.exe (might just because I installed Git early on, don't know if the default installation path changed since then). The ../ is there because %appdata% resolves to C:/Users//AppData/Roaming, when Git is in fact installed in AppData/Local. Don't know if my installation path is unique or whether or not other Windows Git users also have this.\nIs that where it's installed if you're using GitHub for Windows? If so, yes, that's worth adding to the search paths. (I have git installed directly from the git site, which I believe put it in Program Files (x86).) I'm not sure if BufferedProcess will expand \"%appdata%\", though. Does it work for you if you specify that as your git path in the merge-conflicts settings?\n\nAlso, shouldn't the Windows one search for git.exe and not git?\n\nGood point, I'm not sure - I didn't boot up my Win7 machine to check.\nI'm testing paths by attempting to execute each with --version in a BufferedProcess and checking the exit status. I'm pretty sure the unadorned \"git\" will work alright if it's on your %PATH%, but now that you mention it I don't know if it'll find the exe with a full path. Would you mind opening me an issue so I remember to investigate the next time I'm working on this? Alternately, if you're feeling ambitious, can you investigate and send me a pull request? :wink:\n. > The styles for merge-conflicts don't work on most themes because it relies on imported ui-variables from the dark/light default theme.\nWell, I am using the styleguide - not every theme specifies every variable, but some of them do customize those. Any variable or color that I chose would look off on somebody's theme, so I'd rather rely on an \"official\" one rather than specify my own.\nPersonally I use pen-paper-coffee, which doesn't look too bad:\n\nIf you'd like, you could submit a pull request to your style of choice with .ui-site-N colors that match :smile:\nIf you don't want to go that far, you can also add a section to your user stylesheet (Application: Open User Stylesheet from the command palette, Atom -> Open Your Stylesheet from the menu, or just open ~/.atom/styles.less) to apply custom styles to those components:\n``` less\n.editor.conflicted {\n  // The \"our changes\" overlay\n  .side.ours {\n    background: red;\n  }\n// Style applied to the editor lines of \"our\" changes\n  .line.conflict-ours {\n    background: #f88;\n  }\n// The \"their changes\" overlay\n  .side.theirs {\n    background: blue;\n  }\n// Style applied to the editor lines of \"their\" changes\n  .line.conflict-theirs {\n    background: #88f;\n  }\n}\n```\n(At least some of the other positioning issues you're seeing should be fixed as of 1.2.8, by the way.)\n. Er, this doesn't quite work.\n\nPart of this is not being able to apply a width: 100% style to the overlay DOM elements, which contain the merge-conflict controls. But I'm not sure why it isn't tracking the position properly. If I understand overlays, they should position themselves directly over the decorated text.\n. Nope! By default, overlays are just below the marked text, for things like the autocomplete box. I'm using a negative margin to put them in the right place:\n\nThere are still a few positioning issues with certain styles. It seems like the stylesheet can cause the vertical scrollbar width to not be accurate:\n\n. Good enough for now! Much less wonky than it was.\n. @ilanbiala I agree that click-to-dismiss is annoying and disruptive, but I don't like timeout-dismiss either, especially for git newcomers who need to reference the commands to commit the merge or continue the rebase. I'd rather not make it a race to flip to the terminal and run the right command.\nPersonally I'd prefer hotkey-to-dismiss (probably ESC) in addition to click-to-dismiss. Keyboard natives can quickly get rid of the notice without lifting their hands, mouse users can still do their thing, and git newcomers can keep their reference visible as long as they need it.\nSound sensible? I can have a look the next time I bring this package up to date :notes:\n. As an update: there is an experimental API for notifications in Atom that I've been keeping an eye on. I'd much rather use the built-in support than the half-baked thing I rolled up for this, but I'd rather not port everything over until it's stable.\nIf those don't have some kind of keyboard shortcut support, I'll PR that upstream to Atom :wink:\n\n@smashwilson can you think of anyone who would use Git from within a text editor and not be familiar with it?\n\nI have taught git to a large number of developers, from novice to veteran, some subset of whom were using Atom, so... yes, I personally know many such people! I've even helped set up an event that introduced high school students to programming -- the first code these students have ever touched -- and they were using Atom. It's actually quite accessible as a first editor, and its audience is much larger than \"experienced GitHubbers.\"\n. It's tough to set up package development on Windows! I couldn't get it working properly. so I had to poke around in the console and guess.\nThe first thing that I noticed is that you don't need the .exe extension, after all:\n\nThe second is that environment variables, delimited with %, are interpolated, but not well:\n\nIf you quote them, it works properly:\n\nI can add your %APPDATA% path, then, and it's likely a better practice to use %PROGRAMFILES% for the path that's already there anyway. #109 takes care of both.\nThanks again for bringing this up! I don't use Atom on Windows often, so your feedback is most welcome :bow:\n. I was able to replicate this almost every time when you first posted this, but now I can't replicate it at all. My guess is that there was an Atom git-utils call that wasn't cleaning itself up properly before, but now it is.\nI'll leave this open - let me know if you're still able to replicate once 1.2.9 is out.\n. I've definitely seen this a ton, now. It doesn't happen every time but it's pretty frequent - at least on the Mac. That smells like a timing bug to me.\nMaybe it would help to use the git-utils call to stage the file, rather than shelling out?\n. And now I haven't seen this for a long time. I'm guessing it was an upstream problem that's since been corrected.\n. There's more discussion on #98, so I'll mark this one as the dup, even though you were first. :bow: :point_right:\n. Hmmm, thanks. I think I saw this one myself today.\n. Strange, I can't replicate this one, now. I'd definitely seen it myself a few times, too.\nMy suspicion is that DisplayBuffer.getMarker() is returning a null marker, which must mean that there's some way that Side.marker is being populated incorrectly - with a marker that doesn't correspond to the right DisplayBuffer. I'm not seeing how that could happen, though. Those markers are created by Conflict.all, which uses the same TextEditor instance throughout.\nI'll keep an eye out for this, because if I can replicate it reliably then I can dump what markers are being used where and figure out what's going wrong. For now, though, I don't want to hold up the Shadow-DOM release with this, because it's pretty broken and I want to push a functional release out soon-ish.\n. Actually, I have a hunch: I suspect that the detectDirty handler is being invoked for a Side that has already deleted its marker. I should null it out when it's destroyed and test for that in detectDirty.\n. I haven't seen this for a while, now - that might have done it. I'll close this for now.\n. Hmm, I think I tried it out earlier when the shadow DOM was first introduced and noticed similar breakage. I didn't investigate further then because I believe an API or two that I wanted to use were still in development. I'll have a look the next time I spend a day on this, thanks :space_invader: \n. Er, this is now rather more urgent. Fortunately I believe #93 might address this, but I'll need to test. I should have time in a day or so.\n. Well well. #93 ended up being more work than I was hoping it would be. Let's see if I can fix just the shadow DOM bits, instead, to unbreak things quickly.\n. Back in business!\n\nStill a few visual issues, but we're up and running again. The next release should be operable again.\n. Ah, this is related to #99: merge-conflicts doesn't work with the shadow DOM, yet. I'm having a look presently. In the meantime, I'll close this as a duplicate :point_right: \n. Related to #99. I'm noticing some other broken behavior, so I won't close that issue just yet.\n. Closer!\n. :tada: Progress!\nI'm doing some evil things as a temporary workaround: namely, publishing and subscribing to arbitrary events on atom.emitter. It would be better practice to have an Emitter attached to the package object for those, and to pass it around accordingly. That's more work, though, so it gets done the quick way, for now.\n. Hey, @alex!\nYeah, there are currently a ton of deprecation warnings that I'm working through, little by little. I took care of the deprecated CSS selectors in 01b4fbc92, but there are a bunch of other problems related to basic functionality that make the last release nigh unusable on current Atom versions. master is almost working again, but it's still just broken enough that I don't want to push another one until I can get it limping the rest of the way.\nIf you're feeling adventurous and want to verify that I took care of all of these, you can run from master:\ngit clone https://github.com/smashwilson/merge-conflicts.git\ncd merge-conflicts\napm install .\n. No more deprecated selectors in master. The next release will be clean:\n\n(It's hard to take a screenshot to show the absence of something, isn't it?)\n. Replicated and corrected. :dart: Silly mistake, this one will be fixed in the next release.\nThanks for the reports! :bow:\n. @ginus I actually derive everything from the ui-site-color Less constants to keep the coloring as theme-agnostic as possible, but it doesn't always work. Naturally, I can't ensure that everything looks good (or even legible) on all themes.\nIf the theme you prefer doesn't play nicely, though, you can actually tweak it however you like by adding rules to your custom stylesheet like so:\n``` less\natom-text-editor.conflicted::shadow {\n  // Style the editor lines for \"our\" sides of conflicts\n  .line.conflict-ours {\n    background: #f88;\n  }\n// Style the editor lines for \"their\" sides of conflicts\n  .line.conflict-theirs {\n    background: #88f;\n  }\n}\natom-overlay {\n  // Style the \"our changes\" control overlay\n  .side.ours {\n    background: red;\n  }\n// Style the navigation control separator\n  .navigation {\n    background: #ccc;\n  }\n// Style the \"their changes\" control overlay\n  .side.theirs {\n    background: blue;\n  }\n}\n```\n. Part of the work in #165 might have corrected this. Can you replicate on 1.3.3?\n. > Comparing the stack traces I realised that this is probably a completely different error should I open another issue?\n@Eschon Ah, yes, I think I see what's going on in that one, and it is a different issue. If you see this before I get to a fix, a new issue would be fine :smile:\n\nConfirmed with 1.3.3 here as well.\nThe \"Stage\" label present as well on the file causing trouble.\n\n@georgiana-gligor Can you double-check which stack trace you're seeing - @Eschon's, or @gmeral's? Basically look for MergeConflictsView or ResolverView in the top few stack frames.\n. Looking at the original stack, #165 (released as part of v1.3.3) should indeed deal with this. If you can still replicate on 1.3.4, let me know :grin:\n. :unamused: Nuts.\nI have a suspicion that #98 is the root cause here - the exception there is raised during conflict resolution, which prevents the unchosen conflict sides from deleting their marked lines properly. I don't suppose you see a stack trace in the console?\n\nYep. This package hasn't worked properly for a while now +1\n\nMy apologies for that - an unfortunate consequence of having one primary contributor and sitting on top of a fast-evolving API. The good news is that I'm on more stable parts of the Atom API now. For a long time, I had to muck around with injecting DOM nodes into the EditorView and all kinds of other fragile things.\n. Hmm, I can reproduce easily. No stack trace. Checking it out now.\n. > Hey @smashwilson . No complaints. I LOVE your package and the work you put into it. Hopefully now that they announced 1.0 there shouldn't be as much breaking changes to deal with. I hope you feel the love. We love this package.\nHaha, thanks. I greatly appreciate everyone who reports these issues, too, by the way. Occasionally I have stretches of time where I'm most working on projects alone, which means fewer conflicts, which means that left to my own devices I wouldn't even notice that it was broken for a long time - so thanks to you and @ronakrrb for bringing this up!\nAlso, I think that I really need a better set of conflicts to test with - my artificial, trivial conflict sample isn't cutting it. The bugs I'm seeing now are related to scrolling or timing issues that only happen on \"real\" files.\nI think that I've tracked this one down, by the way - I was wrong about it being premature marker destruction. Looks like I'm unsubscribing from events in a detached hook that's being called every time you scroll off-page, not just when I'm actually destroying the element! I should have a PR that fixes this up soon :mag: :footprints: \n. I'll close this for now, since I'm pretty sure I found this specific issue - re-open (or open new issues) if you see anything like this again. :bow:\n. Hmm, good point.\nOne approach may be to \"float\" the controls in if the editor view is horizontally scrollable. Another would be to not right-justify them at all, but keep them to the left, with some padding.\nHonestly I haven't been thrilled with the way the buttons are positioned for a while now. I'll play around with it a bit and see if I can come up with something nicer that's better behaved, especially in this case.\n. Isn't the caption already \"Use Me\"?\nThey are <button> elements with the btn- classes applied to them - I think it's hard to tell what they are because I have to use the smallest version, which makes the \"pressability\" a little less obvious. I'm not sure how to improve that, though, because I don't have a ton of vertical space to work with.\n. On closer inspection, this looks like a lifecycle problem with overlay decorations that's since been fixed. Decoration.destroy now checks for duplicate destruction, which it looks like the problem was here.\nIf you can replicate on v1.3.4 and a recent Atom, let me know :smile:\n. :+1: Sounds good to me.\nIt'll take a bit of work so I doubt I'll get to it in the next release or so -- I've been focusing on knocking out some quick fixes for stacktraces people have seen first.\nPersonally I think I'll put it in the MergeConflictsView, and just hide the progress bar and show the usual merge overview dashboard thingy once everything is loaded.\n\nI thought there was nothing happening when doing Ctrl + M D at first, so I tried it multiple times. Then a little later, I ended up with five stacked panels containing the found conflicts.\n\nThat sounds like a race condition, actually. I've got a guard in to prevent multiple MergeConflictViews from spawning, but I bet I'm checking it too late. Hmm.\n. It looks like your gitPath is set to a directory, not the git binary itself:\n{\n  \"merge-conflicts\": {\n    \"gitPath\": \"/usr/local/git/\"\n  }\n}\nTry setting it to /usr/local/git/bin/git (on the merge-conflicts settings page) and give it another shot.\n. @shreeshkatyayan Hmm, looking at the source it shouldn't have a default at all:\ncoffeescript\n    gitPath:\n      type: 'string'\n      default: ''\n      description: 'Absolute path to your git executable.'\nAnd the default search paths all look like they point the binary too:\njavascript\n  let search = [\n    'git', // Search the inherited execution PATH. Unreliable on Macs.\n    '/usr/local/bin/git', // Homebrew\n    '\"%PROGRAMFILES%\\\\Git\\\\bin\\\\git\"', // Reasonable Windows default\n    '\"%LOCALAPPDATA%\\\\Programs\\\\Git\\\\bin\\\\git\"' // Contributed Windows path\n  ];\nWhere are you seeing /usr/local/git/bin? Does the Settings view specify that as the default... ? I'm not sure where that could be coming from \ud83e\udd14 . @bprosnitz Hmm, thanks for the extra info.\n. Alright, the next release includes a fix for the general case where you attempt to detect conflicts in a project that doesn't have a git repository at all. The underlying issue is atom/atom#2203; once that's fixed merge-conflicts should handle non-project-root git repositories as it is. Thanks for the reports, and especially the diagnosis and the stack trace! :sparkles:\n. I bet that #132 took care of this one for you. Can you retry with merge-conflicts 1.3.0?\n. As far as I know, merge-conflicts should be ready for Atom 1.0. Open me a new issue if you see this again with 1.3.2 or greater!\n. Oh hey, you're absolutely right. I usually close and re-open my open editors to clear them, but the right thing to do would be to clean up all of the live markers and decorations when the didQuitConflictResolution or didCompleteConflictResolution are emitted.\nI'll have a look and see if I can get this working properly for 1.3.1.\n. @Ingramz Awesome, thanks!\n. @mnquintana Right, the 1.0 API lockdown is on the way.\nv1.3.0 has been published. :bow:\n. This should be fixed in the next release. Let me know if it still pops up for you after 1.3.1 ships :smile:\n. Huh, that's a cool idea. I didn't even know you could do that.\nCan you give more details on how this would work, exactly? This is my first thought:\n- Open file A in an editor.\n- Invoke merge-conflicts:manual-compare (or whatever)\n- Choose file B from a dialog.\n- Run something like git diff --no-index file-a file-b > file-a ( :question: )\n- Detect \"conflicts\" now marked in file A and allow \"resolution\"\n. > Unfortunately I can't seem to make git diff output '<<<' conflict markers instead of '-' and '+' lines, so I guess some additional work would be required in terms of modification detection.\nAh - that is a problem.\ngit's merge process uses a three-way diff (with a common ancestor) rather than a two-way diff to produce its output -- it's one of the reasons merging in git is as smooth as it is. git diff by necessity will be only two-way. I wonder if there's some way you can invoke a plumbing-level command for the merge machinery and manually supply the three inputs. (This came up in #43, too.) Of course, then you have the question of what you use as the \"common ancestor...\"\n. Nice! That's just what I was hoping for (and hadn't had time to look for). :metal:\n\nI tried using an empty file as ancestor and the output seems to be the expected one.\n\n:+1:\n. Oh wow, that's kind of nuts.\n\nA solution could be that the file list is re-sizable with its own scrollbar.\n\n:+1: Seems reasonable to me.\n\nI also noticed that the merge conflict markers are drawn above of the file list (and above atoms tab bar).\n\nThat's... strange. The conflict markers are implemented as overlay decorations installed in the editor itself - I'm not doing my own rendering there. That might actually be an Atom bug, although I'd want to investigate before filing it as such.\n. Oh, it is like an enhanced version of a three-way diff marker - I hadn't thought of that.\nDiff3 markers show you the content from the common ancestor, while this would ideally show you each commit on both sides, including the commit messages and any other changes that were made at the same time. I've wanted this personally (and replicated it with a bunch of git log calls) to try to put the changes that introduced a specific conflict into context and figure out what the correct resolution is.\nSupporting diff3 is far less work, so it would certainly be higher priority for me :smile: And it's quite possible that I won't want this as much once that's in place.\n. I certainly still think it'd be cool and useful :grin:\nIt is a big expansion of scope, though. It might be better to find (or write) a git log package that exposes a service and integrate with that.\nWith that being said: I work on this project in pretty short bursts, as time and energy permit, so I really don't want to raise hopes or commit to any sort of timeline :wink:\n. Dealt with somewhat in #152.\n. Thanks! This should be fixed in #144, which was just released in 1.3.2.\n. This sounds pretty reasonable to me. One question though: what does this let you do that \"Resolve: Ours Then Theirs\" and editing the resolved lines doesn't? The only difference that I can think of is that \"Resolve: Ignore\" would leave the conflict marker lines (<<<<, >>>>) in place, while \"Resolve: Ours Then Theirs\" deletes them. It's quite possible I'm just being thick, though :wink:\n\nI started working on this, but having never worked with either CoffeeScript or an Atom package, I didn't get any further than destroying the conflict markers. [...] I feel a little out of my depth with CoffeeScript's syntax, emitters, callbacks, etc. Someone else could probably get this done much faster, but I can work on it if no one else volunteers (and if you guys think this is a good feature to have?).\n\nOh wow, thanks for giving it a shot!\nIt's not you - this package was my learning project for CoffeeScript, Node.js, and Atom, and I've been applying band-aids to keep up with the Atom API since the earliest days of the Atom beta, so the source is more than a little murky and disorganized. I've got #140 open as a start to refactoring and reorganizing things to make it a bit cleaner. Hopefully that'll make things a little easier.\n. > This is useful if the conflict is longer than a few lines on each side. Otherwise it's easy to lose track of where the conflict actually was, and accidentally change something outside of the conflict.\nAh, gotcha :+1:\nYou can edit the diff content on either side before you resolve, of course, including copying and pasting bits from the other side and mixing them together.\nI also like this as a safety valve for conflicts that are misparsed for whatever reason, or that cause crazy graphical glitches, or for bits of your README that look like conflict markers but are actually intended to be there :grin:\n\nMaybe the best way to do this would be to hide the graphical conflict markers, but keep a \"Mark as resolved\" button? That way the conflict wouldn't really be \"ignored\", but it would allow for manual conflict resolution. This would also keep the progress bar as-is, the total amount of conflicts wouldn't suddenly change, etc.\n\nI think I like the original idea better: invoking the Resolve: Ignore action \"un-detects\" a conflict entirely (and having another action to ignore entire files at a time). If I'm remembering things right it should be a bit easier to set up, too.\nI am definitely on board with this, by the way :+1: I can tackle it the next time I'm hacking on this, but they may not happen for a while, so if anyone beats me to it with a PR I'd be happy to review and such.\n. Oh yeah, this is part of the problem in #138.\nThanks for the report :smile: I'll have a look the next day I'm hacking on this.\n. Hmm, this may have been fixed upstream:\n\nI tried to reproduce with a variety of themes and I couldn't. It may be a consequence of the editor tiling?\nCan any of you still see this in a recent Atom? I'm on 1.0.2, for reference.\n. I'm going to close this for now. If any of you still see this happening, ping me here and be sure to let me know what UI and syntax themes you have active so I can try to reproduce it.\n. :+1: Awesome, thanks!\n. > I guess this is because my project is located on a remote linux machine \\dev that I access over SAMBA, isn't it ?\nThat seems likely!\nCan you run things like git status from the command-line in that directory okay?\n. Ah. I'm afraid there's not much merge-conflicts can do for you, then - it shells out to git to enumerate conflicts, mark conflicts as resolved, and a few other key things.\nDo the other git-centric features of Atom work as expected? (Gutter decorations for changes, the current branch and ahead/behind display in the status bar, and so on.) If so, #12 might be what you need.\n. > The plugins just use git commands doesn't it ? This should be closed\nYah, I suppose so. :bow:\nThanks for the report just the same!\n. Ah ha, it looks like TextEditor has an API that lets you specify what an \"undo\" is. I should wrap all of the resolution code in undo transactions so that undo and redo work properly.\nGood idea, I'm on board with adding it. :+1:\n. Just a wild guess - do you have multiple Project Folders open in the left panel?\n. Oh! Sadly, yes. When support for multiple projects shipped, I didn't devote the time to handle it properly. There's a lot of atom.projects.getRepositories()[0] going on.\nI'm tracking this one in #91 if you want to subscribe over there.\nCan you attempt to reproduce with a single project open, and close the issue if you can't?\n. I think this is in a decent place right now. The shutdown vs. cleanup consolidation in ConflictedEditor makes me a little nervous but the tests are green and hacking around by hand still works.\nThere's more I want to do (always :wink:) but I'll do that in follow-on PRs.\n. :wave: Same deal - this one was patched in #111 and released in 1.2.9, it looks like. :smile:\n. What version of merge-conflicts are you using? This was fixed in 1.3.0 (#132).\n. This was also corrected by #132 and released in 1.3.0.\nThank you for the reports, though, it's good to double-check these things :grin:\n. @pavlo-yuriychuk: I'm going to close these issues because I've verified that all of the deprecations have been addressed in more recent package versions. If I'm wrong and you're still seeing any of them, even on 1.3.2, please re-open and we can investigate further to figure out why. :bow:\n. Hi, thanks for the report! I'm closing because this is a dup of #154.\n. Oh, so it does! Using Alt-M chords instead sounds reasonable to me. :+1: I'll change them in the next release; if you don't want to wait that long, you can add the following to your keymap:\n``` coffeescript\n'atom-text-editor.conflicted':\n  'alt-m down': 'merge-conflicts:next-unresolved'\n  'alt-m up': 'merge-conflicts:previous-unresolved'\n  'alt-m enter': 'merge-conflicts:accept-current'\n  'alt-m r': 'merge-conflicts:revert-current'\n  'alt-m 1': 'merge-conflicts:accept-ours'\n  'alt-m 2': 'merge-conflicts:accept-theirs'\n'atom-workspace':\n  'alt-m d': 'merge-conflicts:detect'\n```\n@aurelienbottazini: Are the alt-m chords open on Mac as well? I could also make the cmd-m for Mac, instead. (I could also check myself when I'm on my Mac again.)\nI am a little nervous about yanking the keybindings around and messing with everyone's muscle memory like this, but since we've been breaking bracket-matcher I think that's a cost we'll have to pay.\nHonestly, I've become reluctant to specify keybindings within a package at all, because I can't predict what other packages a user will have active and conflicts seem inevitable for someone. When I made my other package, I made it a \"bring your own keybinding\" one instead. It's a little less nice to set up as a beginner (you need to read the README and edit your keymap and so on) but it saves us trying to hunt for chords that aren't taken by other core or popular packages.\n. Oh hey, this will do nicely! Thanks! :bow:\n. merge-conflicts uses a file's status in the git index to determine whether or not conflicts exist, so this line in your status output is a hint about the problem:\nrebase in progress; onto [commit redacted]\nYou are currently rebasing branch [branch redacted] on [commit redacted].\n  (all conflicts fixed: run \"git rebase --continue\")\nDid you run git add config/routes.rb before attempting to detect conflicts? If you did, you told git (and therefore this package) that you've already dealt with any conflicts in that file, so there's nothing more to resolve!\nI believe you can restore the \"unresolved\" bit in the index by running:\nbash\ngit update-index --unresolve config/routes.rb\n. Weird! Yeah, ping me here if and when you reproduce.\nIf you also happen to see this on a repository that's public, it would also be helpful to have the URL of the repository and the SHAs of the commits that you're rebasing from and to.\n. @Glavin001 Hmm. Can you share:\n1. The output of git status?\n2. The repository URL and current SHAs of the branches you're trying to merge, if the repository is public?\n. @Glavin001 Odd, that one should have been detected as conflicting. You can tell by these lines in your status output:\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\nNotice how the original reporter's status, instead, says (all conflicts fixed: run \"git rebase --continue\"), which indicates that git doesn't think there are any conflicts to detect, which is what I'm using as a source of truth. If you want to verify the exact output that merge-conflicts is interpreting, you can run git status --porcelain instead; the UU lines are the ones that it interprets as conflicted files.\nAnother thing I thought of to check: Is the root of the git repository (namely, the .git directory) at the root of the project in Atom? Otherwise, Atom currently doesn't detect the project as having a git repository at all (see #129).\n. Ah - the BufferedProcess API had changed and I hadn't noticed it. This was fixed in #163 and shipped in 1.3.3. An upgrade should deal with this for you :sparkles: \nSidenote: the keymaps have been changed to use alt-m chords instead of ctrl-m ones, and some are reporting errors using the old keybindings after upgrading and before restarting Atom.\n. It's alt-m d to detect conflicts. You can also run \"Merge Conflicts: Detect\" from the command palette, or check the keybinding resolver to see if something is conflicting - I just shuffled them from ctrl-m chords in #157 because those conflicted.\n. #167 should deal with @Eschon's original problem; there was a bit of dead code that was triggering that stacktrace. I'm not entirely certain how a bad marker slipped into the @markers collection but looking at the source we shouldn't need to track them there anyway.\nThis should be fixed in the next release :sparkles: \n. Huh, this one's strange. Looking at that line from the trace, it's just calling a method on GitBridge... but GitBridge is already defined and imported properly. I also can't seem to reproduce. This is happening for every merge-conflicts:detect invocation?\nI'll keep looking :mag_right: :footprints: \n. Oh, wait, \"ctrl-M D\"? 1.3.3 actually changes the keymap entries to \"alt-M D\" to avoid a conflict (#157).\nIs there any chance that merge-conflicts has been updated, but Atom hasn't been relaunched? I'm wondering if a live update to 1.3.3 is leaving obsolete callbacks registered that reference dead code.\n. @tvandervorm, @vasyan: Ah! That's a different bug, but a pretty easy one. (I missed a call site in one of my refactorings.)\n. @tvandervorm, @vasyan: Replicated locally, fixed in #173, and released as 1.3.5. :sparkles:\n. This is a little more reasonable:\n\n. Nuts. I hadn't seen this one for a long time, so I was speculating that it had been fixed upstream, but I suppose not! The original issue was #96, but I'll keep this one open.\n. I have a potential fix that'll be included in the next release (1.3.7). Once that's out, I'd appreciate it if those of you who can reproduce reliably can let me know if you still see this! (I'm planning to push it in the next hour or so.)\n. Nice! This one's been bugging me for forever, and it only repros for me very, very occasionally.\n@exwar You mentioned that it happened every single time for you - if you get a chance, would you mind trying 1.3.7 and seeing if it's still cropping up?\n. Nuts - if #193 is any indication, there's still a way this one can happen. :rage:\nAt least I've fixed it for some of you!\n. I think my next stab at trying to address this will be using atom/atom#9213 once it's merged, by the way. My best guess is that the git operations we're using are colliding with something that Atom itself is doing with the repository. If I can get rid of GitBridge entirely and use a libgit2-backed object from the official Atom API, maybe it'll resolve this?\n. > atom/atom#9213 seems to have been merged.\nExcellent. Reworking GitBridge to use that might make a difference. This is top of my queue the next time I get a chance to do a merge-conflicts hacking day.\n\nOut of curiosity are any of you encountering this when Github Desktop is also open on the repo?\n\nThat's an interesting question. Having another git client open on the same repo polling for status or whatnot could be causing problems.\n. The last time I had a chance to work on this package, I did get the native bindings from nodegit working, but they've only shipped in Atom's Beta channel for now.\nWith that being said, that won't help the case where another git client is open on the same repository and, presumably, polling status or doing some other operation that locks the index.\nOne thought I've had is to catch the error and retry (with a spinner?) until the index addition goes through. Hacky, but it might do the trick.\n. > If I'm not merging and I hit merge-conflicts:next-unresoved, is there any reason it doesn't just run merge-conflicts:detect?\n:+1: Yeah, that would be a good idea.\n\nAnd, if I'm in the last merge conflict in a file, I wish hitting merge-conflicts:next-unresolved would jump to the first conflict in the next file. (and similar for merge-conflicts:previous-unresolved).\n\nThis one will be trickier to implement, but I like the idea a lot.\n. A more thorough developer might have written a spec to catch the original crash. Oh well, too late, :shipit:\n. Well that's no good.\nCan you update from the command line?\nbash\napm install merge-conflicts\n. This one was related to settings-view/apm bug, which I've seen sporadically myself. Thanks for the report!\n. Ah, submodules are an area that I haven't even tried to address yet. That's kind of a weird failure case, though - I'm a little surprised it finds conflicts inside the submodules at all!\n. You know, you're absolutely right! I gave it a shot in #178.\n\nMe for example, I don't get how to use both versions of a conflict.\n\nTo answer your specific question: if you right-click within an active conflict chunk, you'll see \"Resolve\" options in the context menu:\n\n(\"Current\" is the one your cursor is in, which is more useful if you're using it with a hotkey.) Of course, you can also do it by hand, by copying and pasting one side at the end of the other.\n. I'll close this for now, since we have some kind of usage section there, now. Let me know if there's anything I didn't cover.\n. > This error occurs to me when i open a file listed on the conflicts list on the bottom of atom.\nHave you tried with 1.3.7? I thought I resolved this with #192, but I could have missed something. If you're still seeing a stack trace, can you paste it here?\n\nAfter the error i choose to use ours or theirs, the conflict markers are not removed, neither the colored areas.\nVery annoying, this makes the package unusable.\n\nAh, that's a different issue, and just an oversight on my part. I thought someone had filed that one but I can't find it now. Noted :+1:\n. @marcioc0sta, can you double check your merge-conflicts version? In 1.3.7, the top line in your stack trace is a comment.\nIf you aren't on 1.3.7 yet, an upgrade and (possibly) an Atom restart should fix things up for you.\n. You can manually configure a path to your git executable in the settings for the package if it's not in any of the places we're looking at right now.\nThat does seem like a reasonable path to add to the search paths, though.\n. Cool, thanks!\n. Shipped as v1.3.6... I think.\n$ apm publish patch\nPreparing and tagging a new version \u2713\nPushing v1.3.6 tag \u2713\nPublishing merge-conflicts@v1.3.6 \u2717\nsocket hang up\n$ apm publish --tag v1.3.6\nPublishing merge-conflicts@v1.3.6 \u2717\nCreating new version failed: Version exists\n$ apm update\nRequest for package information failed: socket hang up\nIt looks like atom.io is having some problems right now, probably related to the S3 outage. Once things are stable again, I'll make sure this went out properly.\n. Thanks :100: for the report and the patience :bow: This fix will ship as part of 1.3.7.\n. Weird. That certainly sounds like a parsing bug. Was there a stack trace in the console?\n. It already exists :grin:\nRight-click anywhere in the conflict and you can choose to resolve \"ours then theirs\" or \"theirs then ours\" from the context menu.\n. Yah, I've been thinking about revisiting the conflict-marker UI a little, and this is one of the considerations. Maybe a gear that exposes the menu for \"other resolutions\"?\n. Nope, sorry, I haven't had chance to allocate time to this for a while now (day job, you know).\n. Well, the view that owns the controls is SideView; I've highlighted the markup generation. The resolution commands are defined and implemented in ConflictedEditor. That should get you started, I think?\n. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom. We have \"ours then theirs\" and \"theirs then ours\" options in a drop-down menu on the conflict itself, so hopefully it'll be a bit more discoverable.. That's strange. I can't reproduce this, and looking through the source, I don't see how that method couldn't be defined.\nDoes this happen every time? If so, can you try keeping your dev tools open while you're activating the package, to see if something is going :boom: during package load?\n. Interesting! I wonder if the installation was corrupted somehow on that machine. I don't suppose you've tried uninstalling and reinstalling it?\nOther than that, launching it with the dev tools open is probably our best bet right now. Something else might be causing a parsing failure on that file for some reason, and I'm hoping that that would show the error.\n. Yeah, looks like I was relying on a private method that was removed. I'll see what I can do :wrench: \n. Okay, this'll be fixed by the next release, modulo some unfortunate visual artifacts:\n\nBut at least it won't :boom: as soon as it's launched, so, progress!\n. @nanorepublica Have you restarted Atom since the merge-conflicts upgrade? That stack trace is still referencing source that doesn't exist any more.\n. :+1:\nThanks for the report :smile:\n. Hmm, it isn't doing this for me:\n\nWhat themes were you using?\nThe version of Atom may effect this as well, if the z-index of overlay decorations was changed in core somehow. Once I publish 1.3.7, can you confirm that this is still happening on 1.1.0?\n. Oh hey, I didn't know about Project::repositoryForDirectory.\nI've also been keeping an eye on atom/atom#9213, which would let me :hocho: GitBridge entirely in favor of using the bundled, asynchronous nodegit for git operations instead. I suspect that'll take a while to make it in (and no idea when I'll have side-project bandwidth once it does) so a PR like this would be :+1:\n. @emileber: Try opening an editor for any file in the project folder with conflicts, then running merge-conflicts:detect-conflicts :wink:\n. Oh, interesting. Would you mind opening that as a separate issue? I'd rather keep this one around for the \".git directory doesn't align with project root\" cases.\n. Nuts. This looks like the same bug as #171; I'll close this in favor of that one to keep discussions centralized.\n. This looks like it's related to #171 which has been puzzling me for some time.\n. Closing as a duplicate; please subscribe on that issue for updates.\n. Oh, neat! Polling for file changes does feel a little hacky, but because of the way that mergetool works, I'm not sure we can do much else.\n\nAs long as you get an absolute path for the atom_merge script or add it to the path, that guy should work fine... I probably won't have time to find a 'install' method for this script, but it does the heavy lifting. Maybe you could trick git into asking apm for a path to the merge-conflicts install dir?\n\nI think we can derive the install dir from __dirname, but I'm fine doing that in another PR.\n. Is git aware that the file has conflicts, or is there a chance it was erroneously marked as resolved?\nTry running git status (and git status --porcelain) at the command-line to check. If the path in question is showing up as conflicted and the package just isn't detecting it, paste the git status --porcelain output here and I can try to figure out why it isn't.\n. Interesting. Thanks for doing the detective work to narrow it down!\nI wonder what the conflict is? I'll watch the other issue to see if it's something that needs to be fixed on this end...\n. My first thought is that some of the normalization that it's doing is interfering with the regexp we're using to match conflict areas, but we are already handling \\r\\n... hmm.\n. > After hard closing atom, and reopening (with editorconfig disabled) it does work as expected. However, even with editorconfig enabled, I can do what you see in the gif to get it to work. Essentially the files that have conflicts need to be open already before you detect the changes, and then it works \nIf you disable or update editor-config, you will need to fully quit and re-open Atom for the change to take effect; otherwise, the conflicting callback will remain registered.\nIt appears that sindresorhus/atom-editorconfig#79 should correct our problem. Can any of you:\n- Install editor-config >= 1.3.0 (it looks like 1.4.0 is the latest)\n- Fully quit and restart Atom\n- Verify that conflict detection is working properly now?\n. > Reporting of same issue here. I don't have editorconfig package with me. So the culprit may be something else. I tried to disabling all of my community package but still not working\n@ardhipoetra, are you on Windows? #227 may be the same issue that you're encountering.\n. Hey!\nFirst of all: the Atom package doesn't actually place the conflict hunks - it just parses the conflict markers that git's native merge algorithm leaves in each file when conflicts exist.\nAre you saying that you're seeing the conflict marker controls disappear and change positions after you edit and accept? That's weird and would definitely be a major bug. Is there any chance you have a case that reproduces this in a public repository?\n. This is likely a duplicate of #171.\nIs it consistently on the second and later attempts? That's a new one.\n. Do you have editor-config installed as well? See #196 for details if you do.\nAre you on Windows? If so, #227 may be what you're encountering instead.\n. Yup, this is a duplicate of #188; please subscribe there for updates.\n. This looks like a corrupted installation. Try re-installing to see if the dependencies are installed correctly.\n. This is a duplicate of #171 which has been confounding me for a long time, now.\n. Duplicate of sindresorhus/atom-editorconfig#65 and #196. Please subscribe to those issues instead for updates.\n. There's already been a script created for this in #195, but it isn't exposed in any obvious way yet.\n. It is indeed possible to personalize! Choose \"Keymap...\" from your Atom menu and add CSON to set the keybindings to whatever you wish. You can copy and paste this and change the keys to whatever you prefer:\n``` cson\n'atom-text-editor.conflicted':\n  'alt-m down': 'merge-conflicts:next-unresolved'\n  'alt-m up': 'merge-conflicts:previous-unresolved'\n  'alt-m enter': 'merge-conflicts:accept-current'\n  'alt-m r': 'merge-conflicts:revert-current'\n  'alt-m 1': 'merge-conflicts:accept-ours'\n  'alt-m 2': 'merge-conflicts:accept-theirs'\n'atom-workspace':\n  'alt-m d': 'merge-conflicts:detect'\n```\nThe Atom docs have basic and advanced guidelines describing the syntax.\nIf it won't open for you, you may have conflicting keybindings from another package. Check the \"Keybindings\" tab in your Settings page and explore with the keybindings resolver (run Key Binding Resolver: Toggle from the command palette or use the hotkey to launch it, \u2318 . on a Mac).\n. I'm adding a section on this to the README in #230. :sparkles:\n. I notice that merge-conflicts doesn't appear in your \"Installed Packages\" summary, which strikes me as odd. Was the installation interrupted or corrupted somehow?\nTry deleting the ~/.atom/packages/merge-conflicts directory and re-running apm install merge-conflicts.\n. This looks like a truncated installation to me. Try uninstalling merge-conflicts, restarting Atom competely, then reinstalling.\n. From your configuration, you have gitPath set to /usr/bin/git/ with a trailing slash, so merge-conflicts is interpreting it as a directory instead of a file. Try setting it to /usr/bin/git (or unsetting it entirely, that should be on your PATH already).\n. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. !!!\nThat's awesome!\n. ~/code/merge-conflicts docker:dev (master=) \n$ apm publish minor\nPreparing and tagging a new version \u2713\nPushing v1.4.0 tag \u2713\nPublishing merge-conflicts@v1.4.0 \u2713\n. > oh.. sorry for intermittent PRs.\nNo worries at all, thanks for the help! By the way, I've made you a contributor - feel free to self-merge and apm publish when I'm not around. :smile:\nThe only thing I'd ask is to try to keep the CHANGELOG up to date as you work (although I'm guilty of forgetting it myself pretty often).\n. Oh, nice! :shipit:\n. @mostafaeweda: I've added you to the repository as a collaborator.\n. I'm closing this as a duplicate of #227. Please subscribe over there for updates :bow:\n. Do you have editor-config installed as well? See #196 for details if you do.\nAre you on Windows? If so, #227 may be what you're encountering instead.\n. Just verified that this works properly in 1.4.2:\n\n. This is a duplicate of #188. Please subscribe there for updates. :bow:\n. This is likely a result of the ConflictParser changes that were made recently to recognize diff3 output. I think we're outgrowing the hacky mechanism that I'd been using to parse conflict markers. I've got a branch locally where I've been refactoring that into something more maintainable; hopefully I'll catch the problem here along the way.\nA few questions to clarify what's going on:\n- Does it occur with a specific project or file, or have you seen it happen in different places?\n- What platform are you on? If you're on Windows, do you have \\r\\n line endings?\n- If you can, can you provide a sample of a file (sanitized) with the conflict markers that isn't getting the overlay correctly, especially if it does work on other files?\n. Sounds good. I'm most suspicious about those \\r\\n endings right now; the local smoke tests I do don't cover those yet.\n. > But that's always been the case and it used to work when I first tried this package.\nYeah, a recent change that modified that regular expression which is a likely culprit; regular expressions are notoriously tricky and this one's growing in complexity.\n\nI am running Atom 1.8.0-b2 on Windows 10 but the file in question has on LF line endings (everything we do is LF-only).\n\nOh weird. I'll have to do some testing downstairs on the Windows machine to see if I can replicate that one. Thanks for the data point :100:\n. > I just tried with 1.4.2 (uninstalled and installed a fresh merge-conflict package). Atom 1.8.0-beta2. Unfortunately, it is still failing to detect the markers or something.\nNuts, I was hoping that #229 would take care of this without needing more complicated diagnostics :smile:\nI just gave this a shot on my Windows 10 machine downstairs and... couldn't replicate it. I'm not using Atom Beta there yet, though. I'll give that a try later and see if there's a regression there.\n. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom where we have a bunch of logic to follow the \"active\" project (use a single project if there's only one, follow the active pane, etc). If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. Published as v1.4.3 :rocket:\n. @MattRiesterer: That looks like a partial or corrupted install. Try apm uninstall merge-conflicts && apm install merge-conflicts at a terminal to reinstall from scratch.\n@nelson6e65: That's a different problem: your Atom is too far out of date! The Chromium build with native arrow function support was included a while ago, but more recently than 1.0.11. Try installing the latest Atom build.\n. You could try backporting to v1.3.7 - that was the last release before I started working in natively-supported ES2015. I think that's just:\nbash\napm uninstall merge-conflicts\napm install merge-conflicts@1.3.7\n. > This is a nice package! :smile: \nThanks!\n\nBut I'm using Ubuntu x86, so there is not .deb available in order to update Atom (Or there is it?).\n\nHmm, yeah, I only see an amd64 .deb on the releases page. Unfortunately, I suspect that's because Chromium itself dropped 32-bit support a while ago...\n. Fantastic! Glad to hear it. :tada:\n. Your version of Atom is out of date! What version do you have?\nIf you're unable to upgrade to a newer Atom, you can downgrade merge-conflicts to 1.3.7:\nbash\napm uninstall merge-conflicts\napm install merge-conflicts@1.3.7\n(I should have modified the engine field in my package.json when I started using arrow functions, but I didn't. Sorry for the inconvenience!)\n. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom, where we do intelligent serialization of git operations in an async queue and only permit one writing operation to proceed at once. If you do see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. Oh hey, is it that simple? Thanks!\n. Published as v1.4.3 :rocket:\n. :+1: Excellent catch. :shipit:\n. > I tried to test whether nodegit handles well windows paths, but atom errors out with USE_NODEGIT=1. Is nodegit available on atom 1.7.x? Would we have slash problems for windows there?\nInteresting, I'll have to check that out. The way I'm accessing nodegit is a little... non-public, so I wouldn't be surprised if something else is going wrong :grin: Hence the feature flag. It's quite likely though.\n. Published as part of v1.4.3 :rocket:\n. :+1:\n. Done:\n~/code/atom/merge-conflicts (master=) \n$ apm publish patch\nPreparing and tagging a new version \u2713\nPushing v1.4.4 tag \u2713\nPublishing merge-conflicts@v1.4.4 \u2713\nBy the way, I believe that you can do apm publish too because you're a collaborator on this repo. No need to wait for me if I'm not around :smile:\nThe only extra release work I do is (a) try to bring the CHANGELOG up to date with the work that's about to :shipit: and (b) copy and paste the latest CHANGELOG entry into a new release for the tag that gets pushed.\n. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom which uses block decorations rather than overlay decorations and JavaScript fussiness for its conflict controls. If you do see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom because there's no stage button. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom; at least, we have more reliable tests for our git integration. If you do see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. You actually already can! It's kind of hidden, though. Right-click within a conflict marker and you'll see a Resolution submenu that lets you choose \"ours then theirs,\" \"theirs then ours,\" and so on.\n. I like the idea - I was thinking about adding a cog menu to the navigator (the bar between the sides of the diff) for example.\nUnfortunately me spending time on this package these days is... sporadic and burst-y at best. \ud83d\ude1b \nOh, also, see the existing discussion in #185. Mind if I close this issue as a duplicate of that one?\n. :+1:\n. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nI don't think this applies to the new git and GitHub package for Atom. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis issue still applies to the new git and GitHub package for Atom, so I've refiled this one at atom/github#816. Subscribe there for updates :sparkles:. Good catch :+1:. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom - the conflict controls are block decorations, so they should resize to fit the buttons. If you still see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. Duplicate of #256, and this repository is being deprecated, so I won't be getting to this one here.\nIt should be taken care of by the new git and GitHub package for Atom. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom (in fact, I specifically tweaked the markers there to be sure that it would handle this.) If you still see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. Duplicate of #262.. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nI don't think this one applies to the new git and GitHub package for Atom. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis issue still applies to the new git and GitHub package for Atom, so I've refiled this one at atom/github#813. Subscribe there for updates :sparkles:. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. This was actually fixed in smashwilson/merge-conflicts#265, I just, uh, never actually did the release. \ud83d\ude05  I just pushed 1.4.5 with that PR merged, but completely untested because, as some of you have noticed:\n\nI just don't see any movement on this repo.\n\n:sparkles: This repository is being deprecated :sparkles:\nThe full announcement is there, but the short version is that there's a better core package now that eclipses the functionality in this one :grin:\n. This looks like a duplicate of #243. Can you confirm your version of merge-conflicts, and provide the output of running git status --porcelain on the command line?. Ah, if git status --porcelain has no output, then git itself doesn't think that this file contains conflicts. (This package uses the git index to determine that a merge is in progress, not the contents of the file. git status will list the file as \"modified by both\" and git status --porcelain will list its path with a prefix like UU.)\nHow did you get these conflict markers? Were they accidentally committed from a previous merge?. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom, which uses block decorations (and CSS written by someone who knows what they're doing) to render the resolution controls instead. If you see something similar, please file an issue there to let us know. Thanks \ud83d\ude47. Looks like the test failures are due to good, old-fashioned code rot. :shipit:. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis issue still applies to the new git and GitHub package for Atom, so I've refiled this one at atom/github#813. Subscribe there for updates :sparkles:. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis issue still applies to the new git and GitHub package for Atom, so I've refiled this one at atom/github#812. Subscribe there for updates :sparkles:. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom. If you see something similar there, please file an issue to let us know. Thanks \ud83d\ude47. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis one should be taken care of by the new git and GitHub package for Atom. We have \"ours then theirs\" and \"theirs then ours\" options in a drop-down menu on the conflict itself, so hopefully it'll be a bit more discoverable.. :wave: Thanks for taking the time to file an issue here! Unfortunately, this repository is being deprecated, so I won't be getting to this one here.\nThis issue still applies to the new git and GitHub package for Atom, so I've refiled this one at atom/github#809. Subscribe there for updates :sparkles:. That sure is an assumption that I made the whole time I was putting this together!\nUseful methods:\n- atom.project.getRepo():\n  - .getWorkingDirectory(): Root of the git repo\n  - .getPath(): Root of the .git directory.\n  - .relativize(path): take a full filesystem path, return the relative path within the repo\n. I'm not fond of this: there's a lot of repetition here and it's going to be fragile to DOM changes, namely, it'll break if for whatever reason we ever add children three deep beneath the <li>.\nI think what you were looking for is .closest('li'), so something like:\ncoffeescript\np = $(event.target).closest('li').find('.path').text()\nThat should work for handling events any depth underneath the list element.\nNice catch, though! I missed the possibility that $(event.target) might not be the li itself here.\n. :thought_balloon: Do we need to think about this for the first /r?/n, too?\nI guess not -- there's no way the \\r could match without the following \\n.\n. To answer your question from before: instance is used to keep MergeConflictsView.detect from spawning more than one MergeConflictsView at a time. Otherwise, you could actually fill your window with merge conflict views by spamming the command.\n. This wipes the progress bar for this file if you close and re-open it after resolving all of the conflicts. Would you mind changing this to total: 1, resolved: 1? That'll keep the bar full.\n. 1. I've been preferring dash-delimited names for my CSS classes, to be consistent with the built-in ones. How about stage-ready or btn-ready instead of bReady?\n2. You can use the eq() method to reduce a jQuery collection to a single element, without returning a non-jQuery element like the [0]-indexing does:\ncoffeescript\n@pathList.find(\"li:contains('#{p}') .stage-ready\").eq(0).show()\n. (Same thing here.)\n. :thought_balloon: If I'm reading this right, then this will do strange things if you don't have an editor open on the file when you trigger stageFile. Namely, it'll always save the active editor, and it'll raise an exception if you have an active view that isn't an editor, like the styleguide!\nYou should be able to delete line 115 here, return null explicitly, and handle the null case up the call chain with ?. calls instead.\n1. See my note from #54 about using the .closest('li') instead of the .parent().parent() stuff for a less brittle way of finding the path.\n2. There's a relativize() method on atom.project.getRepo() that you can use to find the absolute path a little more cleanly. Something like:\ncoffeescript\n   filePath = atom.project.getRepo().relativize repoPath\n3. The return on 126 isn't necessary, and doesn't work anyway since GitBridge.add executes its callback asynchronously. You shouldn't need the fat arrow => there either, then.\n. :+1: Yes, thanks! Good call making it clean up more nicely from Quit.\n. Er. Strike 2 up there: you're not relativizing, you're de-relativizing.\n. Sorry, I messed you up here. relativize goes the wrong way - you had it right, we want filePath to be an absolute path, not a relative one. The path.join bit I suggested replacing was a perfectly fine way to do it. My bad.\n. I can't do this: it would apply to all overlays, everywhere.\nI'll need to send a PR to Atom adding an option to apply custom classes to each created overlay.\n. Wow, yeah, that can get kind of crazy. I wonder if it can nest arbitrarily with multiple criss-cross merges... ? In that case we'd probably need some kind of recursive descent parser just to identify marked conflicts in the first place.\n. ",
    "NickMele": "Yeah a context many would be nice. I know when i was trying it out i right clicked on the file in the list of conflicted files. It would be nice to have an option that says use mine, than theirs or vice versa.\nI have only used this once, so it may be there already but another nice feature would be to know how many conflicts there are currently in the file. \n. That would be awesome. \n. ",
    "rgbkrk": "\nYou can never leave.\n\nMaybe the package is so good you would never want to.\nToggle from cmd-shift-p, a hotkey, or a fancy button?\n. This pull request is seriously lacking in animated GIFs of functionality.\n. :trollface: \n. Not offhand.\nA quick search showed issues mentioning merge conflicts, including a PR built off another branch to avoid conflict https://github.com/ipython/ipython/pull/4478.\nHow are you going to manage it as an example? Keep a git submodule that you can muck with that isn't part of the actual repo?\n. Well you'll be a :star: for doing that!\n. Haha, those are so much better than the ones I came up with.\n. :+1: This is most requested feature that I have added a thumbs up to on this repo today.\n. Does the use of git-util mean that Atom is packaging up libgit2, in case the user doesn't have the bindings on their system?\n. Yeah, I disabled the package and restarted Atom. All was fine afterward.\nStill awesomesauce.\n. One workaround I accidentally discovered is to use another name you like and re-direct them:\n\nThat one happened because I wrote the python runner first then abstracted to a generic runner after. I think it's been helpful in helping people find script instead.\n. the-git-merge-conflicts\nI'm only kidding.\ngit-merge-conflicts is probably the best. The annoying thing would be telling old users to migrate to your new package.\n\nUser installs the latest update, gets hit with a dialog box:\n\n\nAll that makes me want to stick with the old name, which worked just fine (didn't help people with svn merge conflicts though :wink:).\n. Love it.\nAlso, damn would I be annoyed to see this.\n. You should just make the description for the placeholder point to merge-conflicts.\n\n. Are you launching Atom from the terminal or clicking the Atom icon?\n. Yeah, I did that in https://github.com/rgbkrk/atom-script/pull/87. I didn't provide an animated gif for it though. ;)\n@bufferedProcess.process.on('error', (node_error) =>\n      @output.append(\"<h1>Unable to run</h1>\")\n      @output.append(\"<pre>#{_.escape(command)}</pre>\")\n      @output.append(\"<h2>Is it on your path?</h2>\")\n      @output.append(\"<pre>PATH: #{_.escape(process.env.PATH)}</pre>\")\nNote that the execvp will still show up, but it will be after the useful error message.\n. That's it!\n. I'm so late to the game.\nI think it would be better if the title text\n\ngit can't be found at /foo/bar/wrong!\n\nwasn't in red.\n. Done. It was tempting to use text-highlight though.\n. Nice, that would be great for adding debugger support as well.\n. Does this mean I have to update atom achievements?\n. @ilanbiala Maybe submit a PR that provides it as an option? The default should be click-to-dismiss in my opinion for the sake of newcomers. Advanced users can be forced to set a configuration option.\nIt's hard to estimate the user base at large and my own experience differs, but I've recommended Atom as a good starting editor for large swaths of new comers in workshops and teaching environments. Some of these folks (largely Windows users) are used to a click-flow and Windows is still the dominant desktop.\n. What does the developer console show (Ctrl+Alt+I)?\n. Maybe paste what the conflicts look like along with any output in the Developer console?\n. Well done.\n. Ran into this just now while using git cherry-pick.\n. Glad to know this is an option. We both have been spoiled by opening atom from the roots of our projects, where .git exists and paths are relative to that base. :mask:\n. :innocent: \n. The last bit (\\r?\\n?) should probably be a non-matching group so it doesn't catch \\r by itself with no \\n. Likely? No, but that's the pattern we want.\nThe very end should be (?:\\r?\\n)?\n. ",
    "chibicode": ":+1: I use this setting and would love to see it on Atom!\n. Happened to be on 1.4.1 (GitHub Desktop was open (cc @esetnik), didn't try it when I don't use it). @smashwilson https://github.com/atom/atom/pull/9213 seems to have been merged.\n. ",
    "malexandre": "I love this plugin, but I need the three way merge to work. On a real bad conflict, I can't get my head around it without it. Can't wait to see this done!\n. It's sort of the same as the #9 no? I mean the three way merge is actually here to be able to compare to the origin.\n. ",
    "ypresto": "+1\n. I did it!!! :smiley: \n. oh.. sorry for intermittent PRs.\n. Thats great! Thank you!!! :D\n. Thanks..!!!\n. It seems markers are detected correctly, but headers are misplaced. It perhaps happen without diff3.\n. It has same color to background. So it looks missing but is actually shown there.\n. It can be confirmed by that only one = is shown (and rests are overlapped with header).\n. very complex format :confused: \n. ",
    "rjmunro": "+1 - I often can't make sense of a merge without the diff3 option, so this plugin is not very useful to me unless it supports it.\n. ",
    "dkarter": "+1 can't live without the three way merge on those complex merges\nAll you'll need to do is detect the ||||||| merged common ancestors section and remove it when the merge is complete.\n\n. ",
    "rbrochot": "+1 \nI can't understand why this setting isn't more widely used/supported.\n. ",
    "mbidewell": "Adding this would be awesome!\n. ",
    "mokkabonna": "+1\n. ",
    "dorian-marchal": ":+1:\n. :+1:, of course\n. ",
    "ryanhiebert": ":+1:\n. ",
    "iest": ":+1: \n. ",
    "tlarevo": "\nHi, this is the error I get in the console I have disabled all other non-core packages and still I'm getting this, may be I'm doing it wrong...\n. Could it be a permission issue ?\n. I see , cool thanks :) it worked , I must have installed the git before installing brew , I guess better to include this situation in the documentation. thanks again for the help and for the cool package, cheers!\n. ",
    "zamber": "AFAIK from using p4merge and kdiff3 it tries to merge by itself but if it bumps to conflicts it does not give you the state where it left off. Therefore we would have to get some automatic merge resolution (possibly git can do that) and then give the user a way to resolve the conflicts by hand.\nAs to exit codes why not use a proxy script that would eat the protocol, pass variables to Atom and then emit the required exit code after getting feedback? I hate the workflow where the editor gets spawned for each resolution though it makes sense if you use vim ;).\nCheck/uncheck would require editing ~/.gitconfig by Atom. This does not sound too safe to me, though having it as an option would be a considerable improvement over changing it by hand.\nNevertheless there will always pop up some use case where that would introduce chaos and mayhem. Rule of thumb - stick to your environment dotfiles ;). \n. I usually do it by hand. I feel more comfortable in an editor when I can see what I'm changing to what and how it relates to the rest of the configuration ;).\n. ",
    "searls": "As a user I was pretty surprised that merge-conflicts didn't support git-mergetool integration. Disappointed :-/\n. Yeah understood, just wanted to +1 didn't mean to be a downer. Thanks for creating this, I just don't know how to really use it without merge tool support so I was disappointed\n. ",
    "ilkka": "Just noticed the same, when rebasing doing \"ours then theirs\" made both changes disappear and left ==== in the code.\n. ",
    "magbicaleman": "\n\n. Got it working, on my Terminal I did \"which git\" copied that path and added it to the package setting; https://github.com/smashwilson/merge-conflicts/issues/38\n. ",
    "bjankord": "Sure thing,\nBelow is my terminal output with running git status\n```\nOn branch gh-pages\nYour branch is up-to-date with 'origin/gh-pages'.\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\nChanges to be committed:\nnew file:   build/css/client_icons/PortalIcons.css\nnew file:   build/css/client_icons/PortalIcons.eot\nnew file:   build/css/client_icons/PortalIcons.svg\nnew file:   build/css/client_icons/PortalIcons.ttf\nnew file:   build/css/client_icons/PortalIcons.woff\nnew file:   src/assets/css/client_icons/PortalIcons.css\nnew file:   src/assets/css/client_icons/PortalIcons.eot\nnew file:   src/assets/css/client_icons/PortalIcons.svg\nnew file:   src/assets/css/client_icons/PortalIcons.ttf\nnew file:   src/assets/css/client_icons/PortalIcons.woff\nmodified:   src/img/unused/dashboard_banner.png\nnew file:   validation-report.json\nnew file:   validation-status.json\n\nUnmerged paths:\n  (use \"git add/rm ...\" as appropriate to mark resolution)\ndeleted by us:      .DS_Store\nboth added:         Gruntfile.js\nboth added:         build/appointments1.html\nboth added:         build/appointments2.html\nboth added:         build/appointments3.html\nboth added:         build/appointments4.html\nboth added:         build/css/main.css\nboth added:         build/css/old-ie.css\nboth added:         build/custom-pages.html\nboth added:         build/documents.html\nboth added:         build/health-profile.html\nboth added:         build/img/logo-2x.png\nboth added:         build/img/logo.png\nboth added:         build/img/logo.svg\n\n```\n. Ok cool, thanks for the quick feedback on this!\n. ",
    "nshtg": "I'd like to bring this back up, I have the same problem but with \"both modified\":\n\ngit status --porcelain:\n``` bash\ntest master* $ git st\nmaster\nUU test.txt\n```\ngit status:\n``` bash\ntest master* $ git status\nOn branch master\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\nUnmerged paths:\n  (use \"git add ...\" to mark resolution)\n    both modified:   test.txt\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n```\n. I'm pretty sure its possible to make fancier breakpoints but I don't know how so I made this:\ncoffee\n@_statusCodesFrom: (chunk, handler) ->\n    console.log \"Chunk: \" + chunk.toString()\n    for line in chunk.split(\"\\n\")\n      m = line.match /^(.)(.) (.+)$/\n      console.log \"Line: \" + line\n      console.log \"m: \" + m?.toString()\n      if m\n        [__, indexCode, workCode, p] = m\n        handler(indexCode, workCode, p)\n```\nChunk: UU test.txt\nLine: UU test.txt\nm: UU test.txt,U,U,test.txt \nLine:\nm: undefined \n```\n. I think it does know the conflicts are not solved:\n\nOnce I \"solve\" one of those it gets a dash, too.\n. I'm on windows, I suppose they are \\r\\n by default?\n. Sounds good! I already hooked the dialog to the quit button, I'll try my luck with the button and open a pull request later. :)\n. If you like the pop-up version more I can remove the last commit. :wink:\n. I rebased onto 23e3cc42cbaa8903504a6be2d2c415be684fb5e4. Do you want me to add documentation for \"my\" new methods?\n. Thank you for your amazing project, I'm happy to help! :+1: \n. That way?\n. Maybe I am dumb but your description does not match the patch. You use Cmd-M prefixes only now which makes the hotkeys unusable on windows and linux?!\n. ",
    "btm1": "I'm also having this issue mine are all modified:\n```\n    'Unmerged paths:\n    (use \"git add ...\" to mark resolution)\nboth modified:   web-app/css/bf.css\nboth modified:   web-app/js/controllers/revWaterfallCtrl.js\nboth modified:   web-app/less/styles.less'\n```\nBut it tells me there is nothing to merge\n. ",
    "dmnd": "Thanks for the detailed explanation! I thought about what happened and it's a bit of a special case.\nHere is something similar to the conflict I ran into:\n\nIt differs from your example because the easiest way to resolve it by making edits to both sets of changes.\n\nBut once I was finished editing, I was confused:\n1. How do I get rid of line 9?\n2. How do I tell merge-conflicts that I want to keep stuff from both parts of the conflict?\n3. I haven't deleted the HEAD and branch changes lines yet - how do I do that?\nWhile it's great to be easily able to choose to take changes as a unit, a lot of the time I think people will want to edit them. It'd be nice if this use case was handled in a nicer way than quitting the extension.\nAlso, note that the blue section didn't change to yellow when I edited it.\n. Ah, that makes sense. Thanks for explaining. \n45 and #63 cover everything I ran into, so I don't think there's a reason to keep this issue open. Closing!\n. ",
    "dotmilk": "I don't have a public one handy, but after work today i could whip one up. \n. By 'dirty' you mean the user modifying the content of a theirs or ours block?\n. I lied (I didn't wait until after work) This repo reproduces the bug. To reproduce clone this bad boy, snag all three branches. Then attempt to merge develop into feature/bug run your awesome tool and watch the cpu climb ^_^\n\n. I spent a little time looking over your code, while proficient in coffee, I have undefined experience messing around with atom. So for what it is worth, in doing a little digging I located this noting the @subscribe @statusBar, 'active-buffer-changed', @updateCursorPositionText and the subsequent updateCursorPositionText() would it be possible to limit this detecting dirty to an active tab by  checking if cursor position is in the range of the marked area? Or maybe i'm really tired and way off base. \n. I'm getting ready to have to merge a large feature i've been working on into our dev branch so i am expecting a large scale test of your new release later today, i'll let you know how it goes.\n. So i know it isn't code profiling from atom...but i'm not so sure the update worked, this is just a one file highlight.\nDuring\n\nAfter resolved\n\n. See that was the problem, I thought I was using the profiling tool wrong since i couldn't find anything expensive in it, but clearly something is pegging out the cpu. Where are you shelling out to git? That shouldn't be expensive as you only need to do anything when a file is saved right?\n. ",
    "aronj": "Faulty settings with \"\" enclosed git path\n. ",
    "kavykun": "I am getting error, how to fix?\n. ",
    "richrace": "Just had this issue and after updating it works :+1: Thanks.\n. ",
    "adrianiskandar": "yep, now it works, thanks for the quick fix.\n. ",
    "rdhaliwal": "Ah okay! I think it can't find git:\n\nI did a bit of digging around, and in merge-conflicts.coffee, there's a default config gitPath of /usr/local/bin/git. I've installed git on windows using msysgit and it's located in C:\\Program Files (x86)\\Git\\bin (this is on my System Path variable). \nI've tried messing around with this gitPath variable, but I'm just not quite sure what to change it to. Any ideas?\n. YES! Thank you so much! :D :D\n. ",
    "wayneseymour": "If it happens again, I'll see if I can get some info for you.\n. ",
    "mark-hahn": "Thanks.  I didn't notice that in the read-me.  I'm not good at RTFM.  Maybe\nyou could check and do a pop-up for idiots like me?\nOn Fri, Oct 17, 2014 at 1:31 PM, Ash Wilson notifications@github.com\nwrote:\n\nOn Windows, you'll need to set the absolute path to the git binary on the\nSettings page, here:\n[image: selection_002]\nhttps://cloud.githubusercontent.com/assets/17565/4685624/760180c6-563c-11e4-81c5-907cc61bfb37.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/smashwilson/merge-conflicts/issues/78#issuecomment-59571462\n.\n. \n",
    "stevemckenzie": "I'm experiencing this as well. It also seems like sometimes it doesn't properly detect all conflicts in a file and has similar visual issues like this when that happens.\nThis is a JSX (with React) file for the record.\nReally nice looking plugin though :) Excited to use it instead of the crappy tool that Apple provides. Thanks for making it!\n. ",
    "burabure": "Something very similar happens to me also on files with multiple merge conflicts\n. Nice!!\n. ",
    "haberbyte": "Thank you, greatly appreciated! :+1: \nAnd looking forward to overlay decorations :-)\n. Sweeeeeet!! Thank you so much!\n. ",
    "ronakrrb": "Hey,\nThanks for the update. I haven\u2019t come across any merge conflict but will surely reply back if the issue still exists with stack traces.\nBest wishes,\nRonak Bhandari\nData Artist, pykih.com http://pykih.com/ | +91-99309-90332\nNeed beautiful Javascript Charts? Use our open source library http://pykcharts.com http://pykcharts.com/\n\nOn 12-Apr-2015, at 8:16 pm, Ash Wilson notifications@github.com wrote:\nI've touched up a fair number of other bugs since you've submitted this. Are you still seeing this on 1.3.1? If so, any stack traces showing up in your console?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/smashwilson/merge-conflicts/issues/81#issuecomment-92075472.\n. \n",
    "emcek": "Agreed, sound like a plan.\n. ",
    "50Wliu": "Pretty late to this, was just checking to see the changelog when updating to 1.2.8.\nOn my laptop, Git is installed at %appdata%/../Local/Programs/Git/bin/git.exe (might just because I installed Git early on, don't know if the default installation path changed since then).  The ../ is there because %appdata% resolves to C:/Users/<user>/AppData/Roaming, when Git is in fact installed in AppData/Local.  Don't know if my installation path is unique or whether or not other Windows Git users also have this.\nAlso, shouldn't the Windows one search for git.exe and not git?\n. Thanks!\nAlso, this might be a bit late, but I believe %localappdata% does the same thing as %appdata%/../local/.  At least Squirrel references that in its README.\n. Hi @nobalmohan, what were you doing when this happened?\n. From @nobalmohan on May 26, 2016 18:2\n@50Wliu  I am using this plugin https://atom.io/packages/merge-conflicts, it happened after I resolved my merge conflict and saved the changes ( click of Stage button ). \n. ",
    "auxiliary": "Maybe you can use \neditor = atom.workspace.getActivePaneItem()\nfile = editor?.buffer.file\nto get the current selected file and choose the repo that contains it using atom.project.contains(). \nI am not very familiar with Coffeescript to make the changes. \n. ",
    "ilanbiala": "@smashwilson any thoughts?\n. I think most using Git in Atom aren't newcomers, so timeout dismiss should be fine.\n. @smashwilson can you think of anyone who would use Git from within a text editor and not be familiar with it?\n. ",
    "EthanML": "I agree, I'd like to see keyboard shortcuts to access 'stage', 'mark as resolved', etc. - or at the very least a button to dismiss the window as @smashwilson mentioned above. Anything to avoid taking my hands off the keyboard all the time.\n. ",
    "dotnetCarpenter": "I just got the same exception with atom -v 0.165.0\nIt happen just after I resized the editor...\n. ",
    "michaeljcalkins": "Uncaught TypeError: Cannot read property 'onDidDestroy' of undefined\nc:\\Users\\Michael J. Calkins\\AppData\\Local\\atom\\app-0.166.0\\resources\\app\\src\\decoration.js:44\nHide Stack Trace\nTypeError: Cannot read property 'onDidDestroy' of undefined\n  at new Decoration (c:\\Users\\Michael J. Calkins\\AppData\\Local\\atom\\app-0.166.0\\resources\\app\\src\\decoration.js:44:49)\n  at DisplayBuffer.module.exports.DisplayBuffer.decorateMarker (c:\\Users\\Michael J. Calkins\\AppData\\Local\\atom\\app-0.166.0\\resources\\app\\src\\display-buffer.js:1204:20)\n  at TextEditor.module.exports.TextEditor.decorateMarker (c:\\Users\\Michael J. Calkins\\AppData\\Local\\atom\\app-0.166.0\\resources\\app\\src\\text-editor.js:1216:33)\n  at SideView.module.exports.SideView.decorate (c:\\Users\\Michael J. Calkins\\.atom\\packages\\merge-conflicts\\lib\\side-view.coffee:36:29)\n  at SideView.module.exports.SideView.detectDirty (c:\\Users\\Michael J. Calkins\\.atom\\packages\\merge-conflicts\\lib\\side-view.coffee:61:6)\n  at ConflictMarker.module.exports.ConflictMarker.detectDirty (c:\\Users\\Michael J. Calkins\\.atom\\packages\\merge-conflicts\\lib\\conflict-marker.coffee:81:7)\n  at c:\\Users\\Michael J. Calkins\\.atom\\packages\\merge-conflicts\\lib\\conflict-marker.coffee:49:37\n  at Emitter.module.exports.Emitter.emit (c:\\Users\\Michael J. Calkins\\AppData\\Local\\atom\\app-0.166.0\\resources\\app\\node_modules\\text-buffer\\node_modules\\event-kit\\lib\\emitter.js:82:11)\n  at c:\\Users\\Michael J. Calkins\\AppData\\Local\\atom\\app-0.166.0\\resources\\app\\node_modules\\text-buffer\\lib\\text-buffer.js:1142:25\nI right clicked and clicked Resolved: theirs, atom froze and this error came up.\n. ",
    "danielmahon": "thanks!\n. ",
    "clarkritchie": "I also see this error.\n. ",
    "rgcalsaverini": "I experience this aswell.\n. ",
    "cloudbring": "I have seen this error as well.\n. ",
    "krmaxwell": "Occurred for me when accepting changes during merge conflict resolution.\n. ",
    "Eschon": "Edit: Comparing the stack traces I realised that this is probably a completely different error should I open another issue?\nI Just got this in 1.3.3\nFor me it happened when I clicked the Quit-Button on the merge-conflict panel at the bottom\n\nEvery time I click it this happens and it won't disappear.\nAtom Version: 1.0.2\nSystem: Mac OS X 10.10.4\nThrown From: merge-conflicts package, v1.3.3\nStack Trace\nUncaught TypeError: undefined is not a function\n```\nAt /Users/egon/.atom/packages/merge-conflicts/lib/view/merge-conflicts-view.coffee:122\nTypeError: undefined is not a function\n  at MergeConflictsView.finish (/Users/egon/.atom/packages/merge-conflicts/lib/view/merge-conflicts-view.coffee:122:7)\n  at MergeConflictsView.quit (/Users/egon/.atom/packages/merge-conflicts/lib/view/merge-conflicts-view.coffee:86:6)\n  at HTMLButtonElement. (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/atom-space-pen-views/node_modules/space-pen/lib/space-pen.js:220:36)\n  at HTMLButtonElement.jQuery.event.dispatch (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/jquery/dist/jquery.js:4435:9)\n  at HTMLButtonElement.elemData.handle (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/jquery/dist/jquery.js:4121:28)\n```\nCommands\n-4:55.5.0 command-palette:toggle (ol.tree-view.full-menu.list-tree.has-collapsable-children.focusable-panel)\n     -4:53.7.0 core:confirm (atom-text-editor.editor.mini.is-focused)\n     -4:53.7.0 merge-conflicts:detect (ol.tree-view.full-menu.list-tree.has-collapsable-children.focusable-panel)\n     -4:31.3.0 core:save (atom-text-editor.editor.conflicted.is-focused)\n 12x -4:16.8.0 core:backspace (atom-text-editor.editor.is-focused)\n     -4:02.4.0 snippets:previous-tab-stop (atom-text-editor.editor.is-focused)\n     -4:02.4.0 editor:outdent-selected-rows (atom-text-editor.editor.is-focused)\n     -4:00.6.0 snippets:previous-tab-stop (atom-text-editor.editor.is-focused)\n     -4:00.6.0 editor:outdent-selected-rows (atom-text-editor.editor.is-focused)\n     -3:59.3.0 core:save (atom-text-editor.editor.is-focused)\nConfig\njson\n{\n  \"core\": {\n    \"themes\": [\n      \"one-dark-ui\",\n      \"solarized-dark-syntax\"\n    ]\n  }\n}\nInstalled Packages\n``` coffee\nUser\natom-handlebars, v1.0.0\natom-ternjs, v0.6.8\nlinter, v1.2.4\nlinter-clojure, v0.0.5\nlinter-csslint, v0.0.14\nlinter-jscs, v1.12.0\nlinter-jshint, v1.0.5\nlinter-rubocop, v0.2.7\nlinter-xmllint, v0.0.7\nmerge-conflicts, v1.3.3\npretty-json, v0.4.1\nDev\nNo dev packages\n```\n. @maaarghk have you compared the stack traces? Undefined is not a function is somewhat generic so it could happen for a completely different reason.\n. ",
    "georgiana-gligor": "Confirmed with 1.3.3 here as well.\nThe \"Stage\" label present as well on the file causing trouble.\n. ",
    "erikdonohoo": "Yep.  This package hasn't worked properly for a while now +1\n. Hey @smashwilson .  No complaints.  I LOVE your package and the work you put into it.  Hopefully now that they announced 1.0 there shouldn't be as much breaking changes to deal with.  I hope you feel the love.  We love this package.\n. @smashwilson Awesome.  Thank you!\n. I have the same issue.  I have editorconfig installed as well, but even with ALL my community packages disabled, I still have the problem.  For me, it is fixed if I immediately quit and restart the package.  It only fails when I turn it on, and then click a file name in the gutter to open it to view the conflicts.  It shows the highlighting briefly and then fails.  Here is what I am seeing\n\nEDIT\nAfter hard closing atom, and reopening (with editorconfig disabled) it does work as expected.  However, even with editorconfig enabled, I can do what you see in the gif to get it to work.  Essentially the files that have conflicts need to be open already before you detect the changes, and then it works\n. ",
    "mishak87": "I have not realised they were buttons you can click on! Maybe changing caption to Use would communicate their function clearer.\n. Sorry I was not paying attention to the readme gif. IMO is too fast for how much information it shows. Maybe it would be better to split them into more gifs with longer delays and add description of what is going on.\nRegarding the \"Use Me\" buttons, you are right, that was my mistake.\nWhat about using links along with buttons. Now there is // our|their changes. Adding link between // and text would work grammatically and would partially solve out of view buttons.\n// use their changes or // their changes - use.\n. ",
    "Nikita240": "+1\n. ",
    "shreeshkatyayan": "@smashwilson thanks for bringing that to notice. Also, the default is set to /usr/local/git/bin. Why not set it to the binary itself?. ",
    "bprosnitz": "I hit this as well at .atom/packages/merge-conflicts/lib/git-bridge.coffee:66\n. This seems to occur when the atom project isn't rooted at a git repo (e.g. has git repos inside). This is user error, but it would be useful to have an error message explaning.\n. ",
    "oobenland": "Same for me. I tried to edit a remote file (using remote-edit). \n. ",
    "sdornan": "Also happened to me when hitting Detect on a file with merge conflicts.\nAtom Version: 0.190.0\nSystem: Mac OS X 10.10.3\nThrown From: merge-conflicts package, v1.3.0\nStack Trace\nUncaught TypeError: Cannot read property 'getPath' of null\n```\nAt /Users/sam/.atom/packages/merge-conflicts/lib/git-bridge.coffee:66\nTypeError: Cannot read property 'getPath' of null\n  at Function.GitBridge._repoGitDir (/Users/sam/.atom/packages/merge-conflicts/lib/git-bridge.coffee:66:53)\n  at Function.GitBridge.isRebasing (/Users/sam/.atom/packages/merge-conflicts/lib/git-bridge.coffee:168:13)\n  at Function.module.exports.MergeState.read (/Users/sam/.atom/packages/merge-conflicts/lib/merge-state.coffee:20:21)\n  at Function.MergeConflictsView.detect (/Users/sam/.atom/packages/merge-conflicts/lib/merge-conflicts-view.coffee:137:16)\n  at /Users/sam/.atom/packages/merge-conflicts/lib/merge-conflicts.coffee:25:28\n  at /Users/sam/.atom/packages/merge-conflicts/lib/git-bridge.coffee:42:9\n  at BufferedProcess.triggerExitCallback (/Applications/Atom.app/Contents/Resources/app/src/buffered-process.js:63:47)\n  at ChildProcess. (/Applications/Atom.app/Contents/Resources/app/src/buffered-process.js:85:18)\n  at emitTwo (events.js:87:13)\n  at ChildProcess.emit (events.js:169:7)\n  at Process.ChildProcess._handle.onexit (child_process.js:1057:12)\n```\nCommands\n-0:27.3 fuzzy-finder:toggle-file-finder (atom-text-editor.editor)\n     -0:25.1 editor:consolidate-selections (atom-text-editor.editor.mini)\n     -0:25.1 core:cancel (atom-text-editor.editor.mini)\n     -0:19.6 fuzzy-finder:toggle-file-finder (atom-text-editor.editor)\n     -0:16.9 editor:consolidate-selections (atom-text-editor.editor.mini)\n     -0:16.9 core:cancel (atom-text-editor.editor.mini)\n     -0:02.3 merge-conflicts:detect (ol.tree-view.full-menu.list-tree.has-collapsable-children.focusable-panel)\nConfig\njson\n{\n  \"core\": {\n    \"themes\": [\n      \"one-dark-ui\",\n      \"monokai\"\n    ]\n  }\n}\nInstalled Packages\n``` coffee\nUser\nautocomplete-plus, v2.9.0\ncolor-picker, v1.6.0\neditorconfig, v0.3.3\nlanguage-jade, v0.3.0\nlinter, v0.12.0\nlinter-jshint, v0.1.1\nlinter-less, v0.3.1\nlinter-pep8, v0.1.0\nmerge-conflicts, v1.3.0\nminimap, v4.7.6\nmonokai, v0.13.0\ntabs-to-spaces, v0.9.2\ntravis-ci-status, v0.13.0\nDev\nNo dev packages\n```\n. ",
    "mnquintana": "@smashwilson Are you going to be publishing a new release soon?\n. ",
    "Arlanthir": "That sounds right. Alternatively you could right click a file and have 'Compare with current file' in the context menu.\nUnfortunately I can't seem to make git diff output '<<<' conflict markers instead of '-' and '+' lines, so I guess some additional work would be required in terms of modification detection.\n. What about using\n\ngit merge-file -p file1.txt ancestor.txt file2.txt\n\nI tried using an empty file as ancestor and the output seems to be the expected one.\nMore documentation: http://git-scm.com/docs/git-merge-file\n. ",
    "infinityCounter": "Bump :+1: \n. ",
    "axelson": "Is this still planned? I do love diff3 but I think a feature like this is even better.\n. ",
    "kankaristo": "I didn't mean to say that the code is bad, it's not; it's mostly CoffeeScript's syntax, which seems a bit alien to me (I'm mostly used to C++ and Lua). I should probably go through a couple of tutorials. ;)\nYes, this would be essentially the same as \"Resolve: Ours Then Theirs\" except it would leave the conflict markers (text, not graphical) in place.\nThis is useful if the conflict is longer than a few lines on each side. Otherwise it's easy to lose track of where the conflict actually was, and accidentally change something outside of the conflict.\nMaybe the best way to do this would be to hide the graphical conflict markers, but keep a \"Mark as resolved\" button? That way the conflict wouldn't really be \"ignored\", but it would allow for manual conflict resolution. This would also keep the progress bar as-is, the total amount of conflicts wouldn't suddenly change, etc.\n. ",
    "itsjustmath": "Awesome. Thanks for the hard work!\n. ",
    "rmariuzzo": "@itsjustmath thanks for reporting this, I just noticed that same interface.\n. Thanks @smashwilson for the input and the honesty. \n. ",
    "zwacky": "+1\n. also happens every time for me.\n. ",
    "cyrilchapon": "\nWhat does the developer console show (Ctrl+Alt+I)?\n\nAn error\n```\n\"Error: abnormal git exit: 128\n'\\dev\\cch\\www\\rfidlocator-api'\nCMD.EXE a \ufffdt\ufffd d\ufffdmarr\ufffd avec le chemin d'acc\ufffds comme r\ufffdpertoire en\ncours. Les chemins d'acc\ufffds UNC ne sont pas prise en charge. Utilisation\ndu r\ufffdpertoire Windows par d\ufffdfaut.\nfatal: Not a git repository (or any of the parent directories): .git\nat exitHandler (C:\\Users\\Cyril\\.atom\\packages\\merge-conflicts\\lib\\git-bridge.coffee:123:26)\nat triggerExitCallback (C:\\Users\\Cyril\\AppData\\Local\\atom\\app-0.209.0\\resources\\app.asar\\src\\buffered-process.js:213:47)\nat ChildProcess.<anonymous> (C:\\Users\\Cyril\\AppData\\Local\\atom\\app-0.209.0\\resources\\app.asar\\src\\buffered-process.js:235:18)\nat emitTwo (events.js:87:13)\nat ChildProcess.emit (events.js:169:7)\nat Process.ChildProcess._handle.onexit (child_process.js:1057:12)\"\n\n```\nI guess this is because my project is located on a remote linux machine \\\\dev that I access over SAMBA, isn't it ?\n. > Can you run things like git status from the command-line in that directory okay?\nNope. I use git from an ssh in the same directory.\n. Thining of this, it makes sense. The plugins just use git commands doesn't it ? This should be closed\n\nDo the other git-centric features of Atom work as expected?\n\nIt depend on many things, including repo config and carrier returns.\n. ",
    "jamiecollinson": "+1\nAtom Version: 1.0.0\nSystem: Microsoft Windows 8.1 Pro\nThrown From: merge-conflicts package, v1.3.2\nStack Trace\nUncaught TypeError: Cannot read property 'appendToTop' of undefined\n```\nAt C:\\Users\\jamie.collinson.atom\\packages\\merge-conflicts\\lib\\error-view.coffee:32\nTypeError: Cannot read property 'appendToTop' of undefined\n  at module.exports (C:\\Users\\jamie.collinson.atom\\packages\\merge-conflicts\\lib\\error-view.coffee:32:23)\n  at C:\\Users\\jamie.collinson.atom\\packages\\merge-conflicts\\lib\\merge-conflicts.coffee:24:16\n  at C:\\Users\\jamie.collinson.atom\\packages\\merge-conflicts\\lib\\git-bridge.coffee:48:9\n  at triggerExitCallback (C:\\Users\\jamie.collinson\\AppData\\Local\\atom\\app-1.0.0\\resources\\app.asar\\src\\buffered-process.js:213:47)\n  at ChildProcess. (C:\\Users\\jamie.collinson\\AppData\\Local\\atom\\app-1.0.0\\resources\\app.asar\\src\\buffered-process.js:235:18)\n  at emitTwo (events.js:87:13)\n  at ChildProcess.emit (events.js:169:7)\n  at Process.ChildProcess._handle.onexit (child_process.js:1057:12)\n```\nCommands\n6x -2:35.3.0 vim-mode:delete (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n 42x -2:33.3.0 vim-mode:move-down (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n     -2:30.8.0 vim-mode:move-up (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n  2x -2:30.3.0 vim-mode:move-down (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n  3x -2:29.6.0 vim-mode:delete (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n  2x -2:29.1.0 vim-mode:move-up (atom-text-editor.editor.vim-mode.is-focused.operator-pending-mode)\n     -2:27.9.0 vim-mode:move-down (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n  2x -2:27.8.0 vim-mode:delete (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n 25x -2:27.3.0 vim-mode:move-up (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n  4x -2:25.7.0 vim-mode:delete (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n  5x -2:24.1.0 vim-mode:move-up (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n 25x -2:23.3.0 vim-mode:move-down (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n     -2:21.6.0 core:save (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n 19x -2:20.8.0 vim-mode:move-down (atom-text-editor.editor.vim-mode.is-focused.command-mode)\n  2x -0:55.4.0 window:toggle-dev-tools (atom-text-editor.editor.vim-mode.command-mode.is-focused)\n     -0:03.9.0 merge-conflicts:detect (atom-text-editor.editor.vim-mode.command-mode.is-focused)\nConfig\njson\n{\n  \"core\": {\n    \"themes\": [\n      \"seti-ui\",\n      \"seti-syntax\"\n    ],\n    \"audioBeep\": false,\n    \"disabledPackages\": [\n      \"autocomplete-python\",\n      \"autocomplete-plus-python-jedi\"\n    ]\n  },\n  \"merge-conflicts\": {}\n}\nInstalled Packages\n``` coffee\nUser\nmerge-conflicts, v1.3.2\nseti-syntax, v0.4.0\nseti-ui, v0.7.1\nvim-mode, v0.54.0\nDev\nNo dev packages\n```\n. ",
    "Braunson": "Error\n```\nUncaught TypeError: Cannot read property 'appendToTop' of undefined\nC:\\Users\\braunson.atom\\packages\\merge-conflicts\\lib\\error-view.coffee:32\n```\nStack Trace\nTypeError: Cannot read property 'appendToTop' of undefined\n  at module.exports (C:\\Users\\braunson\\.atom\\packages\\merge-conflicts\\lib\\error-view.coffee:32:23)\n  at C:\\Users\\braunson\\.atom\\packages\\merge-conflicts\\lib\\merge-conflicts.coffee:24:16\n  at C:\\Users\\braunson\\.atom\\packages\\merge-conflicts\\lib\\git-bridge.coffee:48:9\n  at triggerExitCallback (C:\\Users\\braunson\\AppData\\Local\\atom\\app-1.0.0\\resources\\app.asar\\src\\buffered-process.js:213:47)\n  at ChildProcess.<anonymous> (C:\\Users\\braunson\\AppData\\Local\\atom\\app-1.0.0\\resources\\app.asar\\src\\buffered-process.js:235:18)\n  at emitTwo (events.js:87:13)\n  at ChildProcess.emit (events.js:169:7)\n  at Process.ChildProcess._handle.onexit (child_process.js:1057:12)\n. ",
    "rudygunawan": "+1 same here.\n. ",
    "tdbs": "i might have had multiple folders open, is this an issue?\n. Ok, thank you for your input, next time i have a conflict i'll try to sort this out, and close the issue if i can\n. ",
    "cristianounix": "Ok \nI did not find #154 \nThanks man !\n. ",
    "aurelienbottazini": "Ctrl-M is also in conflict on mac.\n. @smashwilson Yes alt-m is open on mac.\nCmd-m on mac is binded to application minimize.\n. ",
    "forivall": "Hopefully, either the atom team or someone in the community works out a solution to this keybinding problem once and for all; conflict resolution, a simple ui to rebind them, etc. (cough avoiding the bugs that kde's keybinding resolution has cough)\n. ",
    "astorije": "Hi @smashwilson,\nNop, the git status above is the first thing I did after the git rebase that showed us the conflict. No git add. I had to manually pursue anyway so I can't run any more tests, but I'll keep this issue open to reproduce it next time I have a conflict, which should be soon enough.\n. I keep seeing this inconsistently, BTW. Unfortunately, it's most of the time on private repos and at times when \"dammit I need to commit/rebase/else these ASAP!\" so I didn't take the time to build a nice report yet. I am keeping that issue in mind whenever I can though.\n. ",
    "Glavin001": "I am also experiencing this bug.\nThe merge conflict format is the same:\n```\n<<<<<<< HEAD\n  [Their lines]\n=======\n  [My lines]\n\n\n\n\n\n\n\n[Commit redacted]\n```\n. For sure.\n\n\n\n\n\n\n\n1.\n```\n\u279c  api git:(glavin) git status\nOn branch glavin\nYour branch is ahead of 'origin/glavin' by 1 commit.\n  (use \"git push\" to publish your local commits)\nnothing to commit, working directory clean\n\u279c  api git:(glavin) git pull origin matt\nFrom github.com:Skilltapper/api\n * branch            matt       -> FETCH_HEAD\nAuto-merging config/routes.js\nCONFLICT (content): Merge conflict in config/routes.js\nAuto-merging config/policies.js\nCONFLICT (content): Merge conflict in config/policies.js\nAuto-merging api/models/User.js\nAuto-merging api/controllers/UserController.js\nCONFLICT (content): Merge conflict in api/controllers/UserController.js\nAutomatic merge failed; fix conflicts and then commit the result.\n\u279c  api git:(glavin) \u2717 git status\nOn branch glavin\nYour branch is ahead of 'origin/glavin' by 1 commit.\n  (use \"git push\" to publish your local commits)\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\nChanges to be committed:\nmodified:   api/models/Recommendation.js\nmodified:   api/models/User.js\nmodified:   api/services/JobQueueService.js\n\nUnmerged paths:\n  (use \"git add ...\" to mark resolution)\nboth modified:   api/controllers/UserController.js\nboth modified:   config/policies.js\nboth modified:   config/routes.js\n\n```\n1. No, the repository is not public.\nLet me know if there's anything else I can help with. I have since resolved the merge conflicts manually, however.\n. ",
    "art-divin": "I am seeing this as well. Happens a lot during merging.. Usually what helps is: to restart atom editor completely.\n. This has been happening for me as well, but once I started to save file before trying to stage it from merge-conflicts popup, I was able to workaround this issue.\nProbably the problem is that I have code formatter attached to \"save\" event. When pressing \"stage\" button from the aforementioned popup, it always shows \"128\" error code.\nBut if to separate formatting of the code (pressing CMD+S) from \"Stage\" event - then everything works OK.\n. ",
    "SirZach": "got it. i'll close for now. i didn't realize i had to run a command although i'm pretty sure i tried alt+m d. thanks for the response!\n. ",
    "maaarghk": "I'm getting the same error when using the Detect function. Seems to continue without issue though.\n. Yeah, sorry - good point, it does look completely different. I'll open another issue / do a search.\nAtom Version: 1.0.2\nSystem: Mac OS X 10.10.4\nThrown From: merge-conflicts package, v1.3.3\nStack Trace\nUncaught TypeError: undefined is not a function\n```\nAt /Users/mark/.atom/packages/merge-conflicts/lib/view/merge-conflicts-view.coffee:158\nTypeError: undefined is not a function\n  at Function.MergeConflictsView.detect (/Users/mark/.atom/packages/merge-conflicts/lib/view/merge-conflicts-view.coffee:158:22)\n  at /Users/mark/.atom/packages/merge-conflicts/lib/main.coffee:27:28\n  at /Users/mark/.atom/packages/merge-conflicts/lib/git-bridge.coffee:42:9\n  at triggerExitCallback (/Applications/Atom.app/Contents/Resources/app.asar/src/buffered-process.js:213:47)\n  at ChildProcess. (/Applications/Atom.app/Contents/Resources/app.asar/src/buffered-process.js:235:18)\n  at emitTwo (events.js:87:13)\n  at ChildProcess.emit (events.js:169:7)\n  at Process.ChildProcess._handle.onexit (child_process.js:1057:12)\n```\nCommands\n-4:13.5.0 core:confirm (atom-text-editor.editor.mini.is-focused)\n     -3:59.2.0 editor:newline (atom-text-editor.editor.is-focused)\n 47x -3:55.6.0 core:backspace (atom-text-editor.editor.is-focused.autocomplete-active)\n     -2:54 core:move-right (atom-text-editor.editor.is-focused)\n     -2:53.7.0 core:backspace (atom-text-editor.editor.is-focused)\n     -2:51.8.0 editor:newline (atom-text-editor.editor.is-focused)\n  2x -2:49.4.0 core:backspace (atom-text-editor.editor.is-focused)\n     -2:44.5.0 editor:newline (atom-text-editor.editor.is-focused)\n     -2:39.9.0 snippets:next-tab-stop (atom-text-editor.editor.is-focused)\n     -2:39.9.0 snippets:expand (atom-text-editor.editor.is-focused)\n     -2:39.9.0 editor:indent (atom-text-editor.editor.is-focused)\n     -2:38.8.0 core:save (atom-text-editor.editor.is-focused)\n     -1:22.9.0 fuzzy-finder:toggle-file-finder (atom-text-editor.editor.is-focused)\n     -1:21.4.0 core:confirm (atom-text-editor.editor.mini.is-focused)\n     -0:04.7.0 application:minimize (atom-text-editor.editor.is-focused)\n     -0:00.9.0 merge-conflicts:detect (atom-text-editor.editor.is-focused)\nConfig\njson\n{\n  \"core\": {\n    \"themes\": [\n      \"unity-ui\",\n      \"monokai\"\n    ]\n  },\n  \"merge-conflicts\": {}\n}\nInstalled Packages\n``` coffee\nUser\nSFTP-deployment, v1.0.0\natomatigit, v1.5.3\nauto-indent, v0.5.0\nlanguage-apache, v1.3.0\nlanguage-ini, v1.11.0\nmerge-conflicts, v1.3.3\nmonokai, v0.15.0\nproject-manager, v1.15.11\nunity-ui, v2.0.11\nDev\nNo dev packages\n```\n. That's certainly possible. I will relaunch and see if I can reproduce after.\n. Either upgrading the plugin or relaunching atom solved the issue for me. (Probably the latter!)\n. ",
    "Knetic": "+1 I'm getting this too. I had conflicts, rolled back changes in a shell, now can't get rid of the merge conflict pane in atom because of this.\n. Can confirm, my case (same as Eschons, given the line numbers) doesn't repro anymore. :+1: \n. ",
    "brodock": "same here\n. ",
    "radko93": "Same!\n. ",
    "lazdmx": ":+1: \n. ",
    "kcaulkins": "I'm getting this when trying to press \"Quit\" after fixing conflicts\n. ",
    "brunoric": "Same here.\n. ",
    "tvandervorm": "Got the same error after pressing the 'stage' button while I'd already staged using the command line. Trace is slightly different but my guess is it's the same issue. Installed merge-conflicts today, so should be latest version, running on linux (Fedora).\nTypeError: undefined is not a function\n  at Function.GitBridge.add (/home/tvandervorm/.atom/packages/merge-conflicts/lib/git-bridge.coffee:194:28)\n  at MergeConflictsView.stageFile (/home/tvandervorm/.atom/packages/merge-conflicts/lib/view/merge-conflicts-view.coffee:147:15)\n  at HTMLButtonElement.<anonymous> (/usr/share/atom/resources/app.asar/node_modules/atom-space-pen-views/node_modules/space-pen/lib/space-pen.js:220:36)\n  at HTMLButtonElement.jQuery.event.dispatch (/usr/share/atom/resources/app.asar/node_modules/jquery/dist/jquery.js:4435:9)\n  at HTMLButtonElement.elemData.handle (/usr/share/atom/resources/app.asar/node_modules/jquery/dist/jquery.js:4121:28)\n. Still happens for me too, also happens when I click \"stage\" in the progress overview. After clicking 3 or 4 times it usually works.\n. ",
    "vasyan": "Me too. After click on 'stage'. OSX.\nTypeError: undefined is not a function\n  at Function.GitBridge.add (/Users/vasyan/.atom/packages/merge-conflicts/lib/git-bridge.coffee:194:28)\n  at MergeConflictsView.stageFile (/Users/vasyan/.atom/packages/merge-conflicts/lib/view/merge-conflicts-view.coffee:147:15)\n  at HTMLButtonElement.<anonymous> (/Users/vasyan/Downloads/Atom.app/Contents/Resources/app.asar/node_modules/atom-space-pen-views/node_modules/space-pen/lib/space-pen.js:220:36)\n  at HTMLButtonElement.jQuery.event.dispatch (/Users/vasyan/Downloads/Atom.app/Contents/Resources/app.asar/node_modules/jquery/dist/jquery.js:4435:9)\n  at HTMLButtonElement.elemData.handle (/Users/vasyan/Downloads/Atom.app/Contents/Resources/app.asar/node_modules/jquery/dist/jquery.js:4121:28)\n. ",
    "JacopoGobbi": "Ok! Thank you @smashwilson. I'm using Atom 1.0.2 on OS X Yosemite 10.10.4 (14E46) if that can help\n. Just happened again. I confirm that If you press stage button more times with a delay of 1-2 seconds it's working after a while... D:\n\n. Anyway, it worked immediately this time for me! I hope you will be able to fix the other issue...\n. ",
    "danqing": "Just saw this and unfortunately it didn't solve itself for me... O.O\n. ",
    "wolfgang42": "I'm also seeing this occasionally. Once I'm done merging a file it offers to stage; when I click the stage button I get this message. The dialog stays up and if I click stage again it works fine.\n. ",
    "martimatix": "+1\n. @smashwilson It's working for me now. Thanks for the fix! :+1: \nEdit: it was happening every single time for me prior to 1.3.7\n. ",
    "pietrovismara": "+1\n. This error occurs to me when i open a file listed on the conflicts list on the bottom of atom.\nAfter the error i choose to use ours or theirs, the conflict markers are not removed, neither the colored areas.\nVery annoying, this makes the package unusable.\n. ",
    "numaanashraf": "+1\n. ",
    "hamishtaplin": "+1\n. ",
    "exwar": "+1 Happens every time for me\n. ",
    "p-j": "+1 first time using the merge conflicts plugin, first file processed entirely, impossible to stage.\n. ",
    "simonlayfield": "+1\nI've noticed that if I click 'Maybe Later' in the dialog prompt, then click 'Stage' button in the list of conflicts I don't get this error.\n. Hey @smashwilson - sure.\nThis is still happening for me. I'm using:\nAtom v1.1.0\nMerge Conflicts v1.3.7\nTheme: One Dark\nSyntax: One Dark\n. ",
    "wundo": "+1\n. ",
    "sriharshakappala": "Happening on clicking Stage button after resolving a conflict!\nAtom Version: 1.1.0\nSystem: Ubuntu 14.04.3\nThrown From: merge-conflicts package, v1.3.7\nStack Trace\nUncaught Error: The index is locked. This might be due to a concurrent or crashed process\n```\nAt /home/harsha/.atom/packages/merge-conflicts/lib/git-bridge.coffee:250\nError: The index is locked. This might be due to a concurrent or crashed process\n  at Error (native)\n  at Function.GitBridge.add (/home/harsha/.atom/packages/merge-conflicts/lib/git-bridge.coffee:189:15)\n  at ResolverView.resolve (/home/harsha/.atom/packages/merge-conflicts/lib/view/resolver-view.coffee:61:15)\n  at HTMLButtonElement. (/usr/share/atom/resources/app.asar/node_modules/atom-space-pen-views/node_modules/space-pen/lib/space-pen.js:220:36)\n  at HTMLButtonElement.jQuery.event.dispatch (/usr/share/atom/resources/app.asar/node_modules/jquery/dist/jquery.js:4435:9)\n  at HTMLButtonElement.elemData.handle (/usr/share/atom/resources/app.asar/node_modules/jquery/dist/jquery.js:4121:28)\n```\nCommands\n-0:38.2.0 editor:move-to-end-of-screen-line (atom-text-editor.editor.is-focused)\n     -0:37.8.0 editor:select-to-beginning-of-word (atom-text-editor.editor.is-focused)\n     -0:37.6.0 editor:select-to-end-of-word (atom-text-editor.editor.is-focused)\n     -0:37.2.0 core:delete (atom-text-editor.editor.is-focused)\n  2x -0:36.8.0 core:save (atom-text-editor.editor.is-focused)\n  3x -0:36.4.0 core:move-up (atom-text-editor.editor.is-focused)\n     -0:35.7.0 editor:move-to-first-character-of-line (atom-text-editor.editor.is-focused)\n  3x -0:35.4.0 core:select-down (atom-text-editor.editor.is-focused)\n     -0:34.7.0 editor:select-to-end-of-line (atom-text-editor.editor.is-focused)\n     -0:34.3.0 snippets:next-tab-stop (atom-text-editor.editor.is-focused)\n     -0:34.3.0 snippets:expand (atom-text-editor.editor.is-focused)\n     -0:34.3.0 editor:indent (atom-text-editor.editor.is-focused)\n  5x -0:33.7.0 core:save (atom-text-editor.editor.is-focused)\n     -0:23.4.0 command-palette:toggle (atom-text-editor.editor.is-focused)\n     -0:21.2.0 core:confirm (atom-text-editor.editor.mini.is-focused)\n     -0:21.2.0 merge-conflicts:detect (atom-text-editor.editor)\nConfig\njson\n{\n  \"core\": {\n    \"disabledPackages\": [\n      \"atom-beautify\",\n      \"linter\"\n    ]\n  }\n}\nInstalled Packages\n``` coffee\nUser\nSublime-Style-Column-Selection, v1.3.0\natom-pair, v2.0.10\nfile-icons, v1.6.11\nlanguage-haml, v0.23.6\nlanguage-rust, v0.4.5\nmerge-conflicts, v1.3.7\nminimap, v4.16.0\nDev\nNo dev packages\n```\n. ",
    "thomasfedb": "I'm experiencing this issue.\n. ",
    "AlbertoFdzM": "+1\n. ",
    "IanVS": "This is happening for me on Atom 1.3.0-beta5.\n. I am using GitX.\n. ",
    "keithgordon": "+1\n. ",
    "jackbrown": "Getting the same error clicking 'stage' after resolving conflicts\nAtom Version: 1.3.1\nSystem: Mac OS X 10.11.2\nThrown From: merge-conflicts package, v1.3.7\nStack Trace\nUncaught Error: The index is locked. This might be due to a concurrent or crashed process\n```\nAt /Users/jackbrown/.atom/packages/merge-conflicts/lib/git-bridge.coffee:189\nError: The index is locked. This might be due to a concurrent or crashed process\n    at Error (native)\n    at Function.GitBridge.add (/Users/jackbrown/.atom/packages/merge-conflicts/lib/git-bridge.coffee:189:15)\n    at ResolverView.resolve (/Users/jackbrown/.atom/packages/merge-conflicts/lib/view/resolver-view.coffee:61:15)\n    at HTMLButtonElement. (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/atom-space-pen-views/node_modules/space-pen/lib/space-pen.js:220:36)\n    at HTMLButtonElement.jQuery.event.dispatch (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/jquery/dist/jquery.js:4435:9)\n    at HTMLButtonElement.elemData.handle (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/jquery/dist/jquery.js:4121:28)\n```\nCommands\n-0:22.8.0 merge-conflicts:detect (atom-text-editor.editor.is-focused)\nConfig\njson\n{\n  \"core\": {\n    \"projectHome\": \"/Users/jackbrown/git\",\n    \"themes\": [\n      \"one-dark-ui\",\n      \"slime\"\n    ]\n  }\n}\nInstalled Packages\n``` coffee\nUser\nStylus, v1.2.1\ncolor-picker, v2.0.14\nemmet, v2.3.17\nfile-icons, v1.6.13\nfold-lines, v0.1.0\nfoldername-tabs, v0.1.6\njs-refactor, v0.6.0\nlanguage-babel, v2.6.0\nlinter, v1.11.3\nlinter-eslint, v5.2.6\nlocal-history, v3.2.3\nmerge-conflicts, v1.3.7\noverscroll, v0.1.0\npigments, v0.19.3\nrefactor, v0.6.0\nslime, v1.4.0\nDev\nNo dev packages\n```\n. ",
    "jacobmischka": "Still happening for me as well\n. > Out of curiosity are any of you encountering this when Github Desktop is also open on the repo?\nI don't have any git client installed besides this atom package and the command line utility.\n. Unless atom/git-diff or one of the other builtin git packages would cause it I really don't think that's the problem. I've never had another git cilent open and this happens to me over 50% of the time I try staging using this package. \n. ",
    "andreas-venturini": "Workaround for me is to click on \"Maybe later\" and then on the \"Stage\" button in the progress overview.\n. ",
    "esetnik": "I have the same issue. Out of curiosity are any of you encountering this when Github Desktop is also open on the repo?\n. ",
    "rm-code": "Just happened to me too (Atom-Beta 1.5.0 beta1). Fixed itself after I clicked the button again.\n. Just like @chrisbelyea I use SourceTree with Atom all the time on OSX 10.11.3 and it seems like the conflict resolves itself when I close SourceTree.\n. ",
    "chrisbelyea": "I ran into this issue when I had the repository open in SourceTree on OS X 10.11.3. After closing SourceTree, the merge could complete.\n. ",
    "bronson": "I'm getting this too.  Not using any apps.  Manually checking the repo for lockfiles doesn't turn up any.\nWhen I dismiss the error dialog and click \"Stage\" again, it works.\nAny chance there's a code path that fires up two operations async?  That might explain the intermittent nature.\n. Just noticed something...  Sometimes this package opens multiple dialogs saying \"Merge Complete!  Press Stage to stage file\", both on the same file...\nIs there a chance that a previous, hidden dialog has locked git, so the visible one can't actually stage anything?\nThat would explain what I'm seeing anyway.\n. ",
    "markogresak": "\nSometimes this package opens multiple dialogs saying \"Merge Complete! Press Stage to stage file\", both on the same file...\n\nI believe that's due to multiple conflicts in the same file and the plugin wants to stage each of the conflicts separately. I'm not 100% sure about this, but it's the pattern I noticed. \n. ",
    "codeVerine": "+1\n. ",
    "gustaflindqvist": "@smashwilson I was able to use:\napm update merge-conflicts\nThen Atom updated the package to 1.3.5. :+1: \n. ",
    "j2emanue": "i cant figure out how to use it either. \n. ",
    "raeffu": "@smashwilson great thx for your work! :+1: It's now easier to understand. I'm missing only a short explanation what the resolve options are. For example it isn't obvious what \"ours then theirs\" does.\n. ",
    "djnugent": "I have this same issue\n. ",
    "calebmeyer": "I ran into the same issue for a text file. \n. ",
    "lithrel": "Same issue, Atom 1.0.11, Ubuntu 14.04, git 2.5.1\n. ",
    "marcioc0sta": "Same here @smashwilson i'm posting the stack trace below:\nTypeError: undefined is not a function\n    at SideView.CoveringView.attached (/home/marcio/.atom/packages/merge-conflicts/lib/view/covering-view.coffee:38:21)\n    at SideView.attached (/home/marcio/.atom/packages/merge-conflicts/lib/view/side-view.coffee:61:35)\n    at space-pen-div.View.element.attached (/usr/share/atom/resources/app.asar/node_modules/atom-space-pen-views/node_modules/space-pen/lib/space-pen.js:164:63)\n    at space-pen-div.CustomElementPrototype.attachedCallback (/usr/share/atom/resources/app.asar/node_modules/atom-space-pen-views/node_modules/space-pen/lib/space-pen.js:51:55)\n    at OverlayManager.module.exports.OverlayManager.renderOverlay (/usr/share/atom/resources/app.asar/src/overlay-manager.js:77:21)\n    at OverlayManager.module.exports.OverlayManager.render (/usr/share/atom/resources/app.asar/src/overlay-manager.js:17:16)\n    at TextEditorComponent.module.exports.TextEditorComponent.updateSync (/usr/share/atom/resources/app.asar/src/text-editor-component.js:226:15)\n    at TextEditorComponent.module.exports.TextEditorComponent.becameVisible (/usr/share/atom/resources/app.asar/src/text-editor-component.js:278:21)\n    at TextEditorComponent.module.exports.TextEditorComponent.checkForVisibilityChange (/usr/share/atom/resources/app.asar/src/text-editor-component.js:810:16)\n    at atom-text-editor.TextEditorElement.attachedCallback (/usr/share/atom/resources/app.asar/src/text-editor-element.js:98:22)\n. Hi @smashwilson my version is 1.3.7, i've removed and installed again and the problem persists :/\n\nand thanks for the quick response\n. ",
    "adam-knights": "Running atom as an administrator makes this issue go away, not sure whether this is expected, or should it be ok without running as administrator?\n. ",
    "seriema": "Hmm sorry I didn't check. I remember some \"report bug\" feature in Atom and looked for it but didn't find it. So this is all I've got unless there's some logs I can find or if you want help in reproducing it?\n. ",
    "adamreisnz": "+1\n. Yes, I do have editor-config installed. I will have a look soon and see if it's still happening with the latest versions of both packages.\n. I don't know, I can't manage to test this. I've tried to create merge conflicts in two files, but then it only picked up one of the files. I'll wait till I have an actual real merge conflict in multiple files happening and will then retest again.\n. ",
    "al-the-x": "Ah, good to know! It wasn't immediately obvious, though... Maybe an auxiliary button in the UI that indicates that other actions are available would be nice? Happy to submit some more concrete ideas (pics and code), if you're interested...\n. :+1:\n. Interested in a PR for this? Point me in the right direction...\n. Ping @smashwilson: Any progress on a UI improvement for \"Keep Both\" as suggested in this thread?\n. Totally. Point me in the right direction for a PR?\n. Thanks, yes. That demystifies a lot. I haven't done any work on an Atom plugin yet, but I'm eager to learn. I'll fork and open a PR this week.\n. FYI, this is just a TODO in the code so I don't forget about it. Care to assign to me, @smashwilson?\n. @smashwilson See notes on my recent commits. Some insight would be helpful, if you have the bandwidth.\n. ",
    "philipgiuliani": "I also didn't knew about this option and missed it so often. Cool that it exists. Maybe it should be a button. Its not so obvious that you have to right-click in the conflict :/\n. ",
    "nemccall": "Hey! Thanks for getting back to me on this. Your package works phenomenally\nwell so far for the workstation I use at work and my desktop at home. The\nlaptop I carry around was the only one that can generate this bug, I can't\nreproduce it on any of my machines either. So far, yes any time I try to\ndetect merge conflicts with the plugin it throws that error (again, just on\none machine) so I'm convinced its something environment specific on the\nlaptop (running Ubuntu 15.10). I'll try to generate a merge conflict\nscenario on one of my repos and play around with the dev tools to see what\ncomes up. Any other information I can try to collect for you?\nOn Mon, Nov 2, 2015 at 12:19 PM, Ash Wilson notifications@github.com\nwrote:\n\nThat's strange. I can't reproduce this, and looking through the source, I\ndon't see how that method couldn't be defined\nhttps://github.com/smashwilson/merge-conflicts/blob/master/lib/git-bridge.coffee#L76\n.\nDoes this happen every time? If so, can you try keeping your dev tools\nopen while you're activating the package, to see if something is going [image:\n:boom:] during package load?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/smashwilson/merge-conflicts/issues/186#issuecomment-153145140\n.\n. \n",
    "ssundkvist": "Getting the same error in Atom version 1.1.0\n. ",
    "matiasfh": "me too.. same version\n. ",
    "gzamboni": "same error here. \n[Enter steps to reproduce below:]\n1. Open Git Merge Conflicts List\n2. Open a conflict\nAtom Version: 1.1.0\nSystem: Mac OS X 10.11.1\nThrown From: merge-conflicts package, v1.3.6\nStack Trace\nUncaught TypeError: this.editor.verticallyScrollable is not a function\n```\nAt /Users/zamboni/.atom/packages/merge-conflicts/lib/view/covering-view.coffee:36\nTypeError: this.editor.verticallyScrollable is not a function\n  at SideView.CoveringView.attached (/Users/zamboni/.atom/packages/merge-conflicts/lib/view/covering-view.coffee:18:32)\n  at SideView.attached (/Users/zamboni/.atom/packages/merge-conflicts/lib/view/side-view.coffee:26:5)\n  at space-pen-div.View.element.attached (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/atom-space-pen-views/node_modules/space-pen/lib/space-pen.js:164:63)\n  at space-pen-div.CustomElementPrototype.attachedCallback (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/atom-space-pen-views/node_modules/space-pen/lib/space-pen.js:51:55)\n  at OverlayManager.module.exports.OverlayManager.renderOverlay (/Applications/Atom.app/Contents/Resources/app.asar/src/overlay-manager.js:77:21)\n  at OverlayManager.module.exports.OverlayManager.render (/Applications/Atom.app/Contents/Resources/app.asar/src/overlay-manager.js:17:16)\n  at TextEditorComponent.module.exports.TextEditorComponent.updateSync (/Applications/Atom.app/Contents/Resources/app.asar/src/text-editor-component.js:236:15)\n  at TextEditorComponent.module.exports.TextEditorComponent.becameVisible (/Applications/Atom.app/Contents/Resources/app.asar/src/text-editor-component.js:278:21)\n  at TextEditorComponent.module.exports.TextEditorComponent.checkForVisibilityChange (/Applications/Atom.app/Contents/Resources/app.asar/src/text-editor-component.js:929:16)\n  at atom-text-editor.TextEditorElement.attachedCallback (/Applications/Atom.app/Contents/Resources/app.asar/src/text-editor-element.js:87:22)\n  at atom-pane.PaneElement.activeItemChanged (/Applications/Atom.app/Contents/Resources/app.asar/src/pane-element.js:131:24)\n  at Emitter.module.exports.Emitter.emit (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/event-kit/lib/emitter.js:86:11)\n  at Pane.module.exports.Pane.setActiveItem (/Applications/Atom.app/Contents/Resources/app.asar/src/pane.js:247:22)\n  at Pane.module.exports.Pane.activateItem (/Applications/Atom.app/Contents/Resources/app.asar/src/pane.js:311:21)\n  at /Applications/Atom.app/Contents/Resources/app.asar/src/workspace.js:474:16\n  at process._tickCallback (node.js:365:9)\n```\nCommands\n-0:22.3.0 command-palette:toggle (atom-text-editor.editor.is-focused)\n     -0:20.2.0 core:confirm (atom-text-editor.editor.mini.is-focused)\n     -0:20.2.0 merge-conflicts:detect (atom-text-editor.editor)\nConfig\njson\n{\n  \"core\": {\n    \"themes\": [\n      \"one-dark-ui\",\n      \"base16-tomorrow-dark-theme\"\n    ],\n    \"packagesWithKeymapsDisabled\": []\n  },\n  \"merge-conflicts\": {\n    \"gitPath\": \"/usr/bin/git\"\n  }\n}\nInstalled Packages\n``` coffee\nUser\nangularjs, v0.3.3\nangularjs-boilerplate-snippets, v0.3.1\natom-trello, v0.3.0\nbuild, v0.48.0\nbuild-gulp, v0.2.0\nfile-icons, v1.6.11\nlanguage-jade, v0.6.2\nmerge-conflicts, v1.3.6\nminimap, v4.15.2\nproject-manager, v2.6.5\ntree-view-git-status, v0.2.2\nDev\nNo dev packages\n```\n. Working fine here! thanks @smashwilson!!!! :clap: \n. ",
    "rthijssen": "Yep same error here\n. ",
    "Victoor": "Same here :/\n. ",
    "cometeer": "here too!\n. ",
    "xtrasmal": "Here too. Never used the plugin before.\n. ",
    "arbourd": "Thanks for the fix today @smashwilson \n. ",
    "nanorepublica": "Hi still getting this issue\n[Enter steps to reproduce below:]\n1. run the command from the control palette\n2. getting multiples of everything (list of files bits in each file)\n\nAtom Version: 1.1.0\nSystem: Mac OS X 10.11.1\nThrown From: merge-conflicts package, v1.3.7\nStack Trace\nUncaught TypeError: this.editor.verticallyScrollable is not a function\n```\nAt /Users/andrew/.atom/packages/merge-conflicts/lib/view/covering-view.coffee:18\nTypeError: this.editor.verticallyScrollable is not a function\n  at SideView.CoveringView.attached (/Users/andrew/.atom/packages/merge-conflicts/lib/view/covering-view.coffee:18:31)\n  at SideView.attached (/Users/andrew/.atom/packages/merge-conflicts/lib/view/side-view.coffee:26:5)\n  at space-pen-div.View.element.attached (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/atom-space-pen-views/node_modules/space-pen/lib/space-pen.js:164:63)\n  at space-pen-div.CustomElementPrototype.attachedCallback (/Users/andrew/.atom/packages/jsonlint/node_modules/atom-message-panel/node_modules/space-pen/lib/space-pen.js:51:55)\n  at OverlayManager.module.exports.OverlayManager.renderOverlay (/Applications/Atom.app/Contents/Resources/app.asar/src/overlay-manager.js:77:21)\n  at OverlayManager.module.exports.OverlayManager.render (/Applications/Atom.app/Contents/Resources/app.asar/src/overlay-manager.js:17:16)\n  at TextEditorComponent.module.exports.TextEditorComponent.updateSync (/Applications/Atom.app/Contents/Resources/app.asar/src/text-editor-component.js:236:15)\n  at TextEditorComponent.module.exports.TextEditorComponent.becameVisible (/Applications/Atom.app/Contents/Resources/app.asar/src/text-editor-component.js:278:21)\n  at TextEditorComponent.module.exports.TextEditorComponent.checkForVisibilityChange (/Applications/Atom.app/Contents/Resources/app.asar/src/text-editor-component.js:929:16)\n  at atom-text-editor.TextEditorElement.attachedCallback (/Applications/Atom.app/Contents/Resources/app.asar/src/text-editor-element.js:87:22)\n  at atom-pane.PaneElement.activeItemChanged (/Applications/Atom.app/Contents/Resources/app.asar/src/pane-element.js:131:24)\n  at Emitter.module.exports.Emitter.emit (/Applications/Atom.app/Contents/Resources/app.asar/node_modules/event-kit/lib/emitter.js:86:11)\n  at Pane.module.exports.Pane.setActiveItem (/Applications/Atom.app/Contents/Resources/app.asar/src/pane.js:247:22)\n  at Pane.module.exports.Pane.activateItem (/Applications/Atom.app/Contents/Resources/app.asar/src/pane.js:311:21)\n  at /Applications/Atom.app/Contents/Resources/app.asar/src/workspace.js:474:16\n  at process._tickCallback (node.js:365:9)\n```\nCommands\n-6:01.4.0 snippets:expand (atom-text-editor.editor.is-focused)\n     -6:01.4.0 editor:indent (atom-text-editor.editor.is-focused)\n  2x -6:01.0 core:save (atom-text-editor.editor.is-focused)\n  2x -3:43.8.0 core:select-all (ol.tree-view.full-menu.list-tree.has-collapsable-children.focusable-panel)\n     -3:41.1.0 core:copy (atom-text-editor.editor.is-focused)\n     -2:34 command-palette:toggle (ol.tree-view.full-menu.list-tree.has-collapsable-children.focusable-panel)\n     -2:32.3.0 core:move-down (atom-text-editor.editor.mini.is-focused)\n     -2:32 core:confirm (atom-text-editor.editor.mini.is-focused)\n     -2:32 merge-conflicts:detect (ol.tree-view.full-menu.list-tree.has-collapsable-children.focusable-panel)\n     -2:02.8.0 settings-view:open (atom-pane.pane.active)\n  2x -1:08.1.0 core:backspace (atom-text-editor.editor.mini.is-focused)\n     -0:39.8.0 command-palette:toggle (atom-workspace.workspace.theme-monokai.theme-seti-ui.scrollbars-visible-when-scrolling.find-visible)\n     -0:38.3.0 core:backspace (atom-text-editor.editor.mini.is-focused)\n     -0:37.5.0 core:move-down (atom-text-editor.editor.mini.is-focused)\n     -0:29.2.0 core:confirm (atom-text-editor.editor.mini.is-focused)\n     -0:29.2.0 merge-conflicts:detect (atom-workspace.workspace.theme-monokai.theme-seti-ui.scrollbars-visible-when-scrolling.find-visible)\nConfig\njson\n{\n  \"core\": {\n    \"disabledPackages\": [\n      \"syntax-tree\",\n      \"about\"\n    ],\n    \"themes\": [\n      \"seti-ui\",\n      \"monokai\"\n    ],\n    \"projectHome\": \"/Users/amiller\"\n  },\n  \"merge-conflicts\": {\n    \"gitPath\": \"/usr/bin/git\"\n  }\n}\nInstalled Packages\n``` coffee\nUser\nangularjs, v0.3.3\nangularjs-snippets, v0.10.18\natom-cli-diff, v1.1.0\natom-django, v0.3.0\natom-jinja2, v0.5.0\natom-justify, v0.4.1\nautocomplete-paths, v1.0.2\nbrowser-plus, v0.0.54\nbuild, v0.48.0\ncolor-picker, v2.0.13\ncommand-logger, v0.23.0\ncucumber, v0.5.0\ndjango-templates, v0.5.0\neditor-stats, v0.17.0\neditorconfig, v1.2.2\ngist-it, v0.8.0\ngit-blame, v0.4.7\ngit-go, v1.0.1\ngit-grep, v0.9.0\ngit-log, v0.4.1\ngit-plus, v5.5.6\ngo-plus, v3.5.1\ninline-autocomplete, v1.1.0\njsonlint, v1.1.2\nlanguage-django, v0.1.1\nlanguage-docker, v1.1.3\nlanguage-ini, v1.14.0\nlanguage-puppet, v0.15.0\nlanguage-python-django-templates, v0.1.0\nlanguage-rst, v0.2.1-0\nlinter, v1.10.0\nlinter-pep8, v1.0.1\nlinter-puppet, v1.0.0\nlinter-pylint, v1.0.3\nmerge-conflicts, v1.3.7\nminimap, v4.16.0\nminimap-color-highlight, v4.1.4\nminimap-find-and-replace, v4.3.2\nminimap-git-diff, v4.1.8\nminimap-highlight-selected, v4.3.1\nminimap-selection, v4.3.1\nmonokai, v0.18.0\nopen-recent, v4.0.1\npretty-json, v0.4.1\nproject-colorize, v0.2.0\nproject-manager, v2.6.5\nset-syntax, v0.3.0\nseti-ui, v0.8.1\nsort-lines, v0.12.0\nsvg-preview, v0.6.1\nsync-settings, v0.6.0\ntravis-ci-status, v0.18.0\nwordcount, v2.4.0\nyoutube-pane, v1.5.0\nDev\nNo dev packages\n```\n. I probably hadn't, have just restarted but I no longer have any conflicts to test, feel free to close this again  :smile: \n. ",
    "hughker": "@smashwilson this just happened to me too\u2026\natom v1.1.0\nmerge-conflicts v1.3.7\nTheme: Atom Light\nSyntax: Solarized Light\n\nIf you need any other info, just let me know.\n. ",
    "maxkazar": "Add into atom styles.less file:\nless\natom-text-editor {\n  overflow: hidden;\n}\nIt helps me.\n. ",
    "thibauds": "I've the same issue with :\nAtom v1.2.4\nMerge Conflicts v1.3.7\nTheme: One Dark\nSyntax: One Dark\n. ",
    "bhtruong93": "Thanks @maxkazar. In case anybody can't get to styles.less, it's in preferences -> config folder -> styles.less, and add the snippet that he posted.\n. @andersryanc  can you post your styles.less file?\n. I don't think there's anything wrong with your stylesheet.  What's also odd is that your issue is a bit different from the previous ones.  Yours is off in the x-direction, but the 'fix' seemed to have remedied the y-direction.\n:\\\n``` css\n/\n * Your Stylesheet\n \n * This stylesheet is loaded when Atom starts up and is reloaded automatically\n * when it is changed and saved.\n \n * Add your own CSS or Less to fully customize Atom.\n * If you are unfamiliar with Less, you can read more about it here:\n * http://lesscss.org\n /\n/\n * Examples\n * (To see them, uncomment and save)\n /\n// style the background color of the tree view\n.tree-view {\n  // background-color: whitesmoke;\n}\n// style the background and foreground colors on the atom-text-editor-element itself\natom-text-editor {\n  // color: white;\n  // background-color: hsl(180, 24%, 12%);\n}\n// To style other content in the text editor's shadow DOM, use the ::shadow expression\natom-text-editor::shadow .cursor {\n  // border-color: red;\n}\natom-text-editor {\n  overflow: hidden;\n}\n```\n. You're absolutely correct.  I have the same issue haha.\nNote: At a small enough width, it snaps back into place (it's too small a width though).\n. ",
    "andersryanc": "same thing is happening for me, it's overlapping everything\n\nAtom v1.3.2\nMerge Conflicts v1.3.7\nTheme: One Dark\nSyntax: One Dark\n. The overflow trick helps, but still looks a little odd when only parts of the UI overlap the line numbers\n\n. I had to add \"atom-text-editor\" to line 15 (probably could have just replaced the class really - my styles file must be outdated)\n``` less\n/\n * Your Stylesheet\n \n * This stylesheet is loaded when Atom starts up and is reloaded automatically\n * when it is changed.\n \n * If you are unfamiliar with LESS, you can read more about it here:\n * http://www.lesscss.org\n /\n.tree-view {\n}\natom-text-editor, .atom-text-editor {\n  overflow: hidden;\n}\n.atom-text-editor::shadow .cursor {\n}\n/ !- Taken from Seti-UI /\n.icons(@icons) when (@icons = true) {\n  @import \"styles/icons\";\n}\n/\n * Set below to false to not import Seti-UI icons.\n * Requries View -> Reload after changing value.\n * Mainly to use with file-icons package.\n/\n.icons(false);\n```\n. My guess would be that the other posts just didn't try scrolling left/right or had soft-wrap on or something so they couldn't.\n. ",
    "rajashekar007": "https://github.com/smashwilson/merge-conflicts/issues/188#issuecomment-159723232 worked :+1: \n. Yes, on scrolling left it's overlay is on top of number line.\n. Yes, I came here to report the same thing. :+1: \n. #188 covers this, duplicate bug.\n. ",
    "henrebotha": "+1.\nAtom 1.7.0\nmerge-conflicts 1.4.1\nOne Dark UI theme\nOceanic Next syntax theme\nOSX 10.11.3\nEDIT: Actually, it's worse. If the window loses focus, the UI here starts flickering like crazy. https://gyazo.com/8dfe2579a181366af614b1721f99785b\n. ",
    "immuzov": "\nSame issue.\nAtom 1.7.3\nMerge-conflicts 1.4.2\nOne dark (UI theme)\nOceanic next (Syntax theme)\n. ",
    "emileber": "In fact, it doesn't work if there are no conflicts in the first project folder.\n. Nope, even if the file with conflicts is opened, I get the following notification (on version 1.4.1):\n\nNothing to Merge\nNo conflicts here!\n\nIf I remove the first project folder (the one without conflicts, leaving the one with conflicts alone) and then I add it again, making it the second project folder and I use merge-conflicts:detect-conflicts, it detect correctly.\n. View issue #228\n. I'm on windows and I know for sure that I'm using LF line endings on my projects as I'm enforcing it through git, and Atom confirms that. With version 1.3.7, both line endings work.\nI encountered the problem with different projects and different file types, I remember mostly js.\nI made a test:\n- Updated merge-conflicts to 1.4.1 \n- created a new text file. LF endings, on windows 10.\n- I created a conflict\nAaaaannnd it worked well...\nSo I made a second test, this time with a js file, and I got the problem.\n\n. I also tried disabling all other installed community packages and the problem was still present.\n. It's cool, thanks for taking the time to inform me. I didn't really needed to use multiple projects per atom instance and instead used multiple atom instance, one for each project.. ",
    "grushetsky": "Sure.\n. ",
    "abhsri": "i have same problem how do i solve this\n. ",
    "prchando": "Same problem even after restarting the system. ",
    "rkarne": "same problem even after restarting visual studio. ",
    "dudymas": "Please note I've only tested this on OSX... might not behave the same on BSD or linux since stat might have different flags\n. ",
    "msheaver": "Hi Ash,\nThanks for the quick k reply; my guess is that is was indeed marked as resolved by the GUI I am using. I am using SourceTree on a Windows 7 desktop (work) and am getting some really strange behavior. I would add a single contiguous block of code to my clean file Git-wise and it would cause a whole host of merge conflicts on that file. I have never encountered such craziness using Git on my home Mac; this causes me to suspect that something in Windows is causing this.\nI will try your suggestions below tomorrow and let you know how it goes.\nCheers,\nMichael\n\nOn Dec 28, 2015, at 9:55 AM, Ash Wilson notifications@github.com wrote:\nIs git aware that the file has conflicts, or is there a chance it was erroneously marked as resolved?\nTry running git status (and git status --porcelain) at the command-line to check. If the path in question is showing up as conflicted and the package just isn't detecting it, paste the git status --porcelain output here and I can try to figure out why it isn't.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/smashwilson/merge-conflicts/issues/196#issuecomment-167584031.\n. \n",
    "yskkin": "I have same problem and git is indeed aware of conflict.\n```\ngit status\nOn branch feature/xxxxxx\nYour branch is ahead of 'origin/feature/xxxxxx' by 2 commits.\n  (use \"git push\" to publish your local commits)\nYou have unmerged paths.\n  (fix conflicts and run \"git commit\")\nChanges to be committed:\nmodified:   View/xxxxxxx\nmodified:   webroot/xxxxxx\n\nUnmerged paths:\n  (use \"git add ...\" to mark resolution)\nboth modified:   View/yyyyyyyyy\nboth modified:   webroot/yyyyyyyy\n\n```\ngit status --porcelain\nUU View/yyyyyyyy\nM  View/xxxxxx\nM  webroot/xxxxxx\nUU webroot/yyyyyyyy\nThe package is detecting paths in conflict panel, but highlighting is not performed.\n. ",
    "SerbanC": "Same problem. The plugin worked fine for the first several times, then started failing consistently. The files are definitely in conflict. This takes away most of the appeal of the plugin, since the only functionality left is file detection which isn't hard to do. Hope it gets fixed sooner rather than later.\n. I checked all my community packages and, in my case, it is indeed because of EditorConfig, as mentioned in #202. My full list of packages is:\nemmet\nfile-icons\nhighlight-selected\nimdone-atom\nlanguage-babel\nlanguage-nunjucks\nlanguage-vue\nlinter\nlinter-esline\nmerge-conflicts\npigments\ntabs-to-spaces\neditorconfig\nWith all of them enabled except Editorconfig, it's working fine. I'll check for/submit an issue on that repo.\n. ",
    "ghost": "I'm also having this issue. Seems very inconsistent in terms of when it fails and when it works. I can't pin it down to a conflict with any particular package. But it does seem to work 100% of the time when all community packages are disabled.\n. Closing as I was mistaken in thinking it was a conflict with this particular package. \nThis is related to issue #196\n. ",
    "hellochar": "I'm seeing it consistently fail. When I click the erroneous file after alt-m d the file appears and flashes the green/blue highlights in the appropriate places for a split second, then immediately disappears. The hotkeys and commands don't work either, and git is aware of the merge conflicts\n. ",
    "dpo": "Same issue. No conflict detected. Git is aware of them because I'm in the middle of a rebase.\n. ",
    "ardhipoetra": "Reporting of same issue here. I don't have editorconfig package with me. So the culprit may be something else. I tried to disabling all of my community package but still not working\n. nope, I'm in Ubuntu 16.04. With (currently) atom 1.7.2\n. ",
    "garygreen": "Bump. I'm getting the same problem, \"No conflicts here\" on version 1.4.5, on Windows 10.\nThere definitely is conflicts as git status --porcelain is showing\n\nUU src/Http/Controllers/GalleryController.php\n\nRestarting atom has no effect. Very frustrating !. ",
    "SlimeQ": "oops, this is probably user error, my bad\n. ",
    "smiffy6969": "No no examples in public... my merge is huge and will take a few days, i \nwill know by then when i commit if markers are lost or not (or wif \nsource tree is just doing something wierd... will update then\n. ",
    "steelbrain": "@smashwilson Yes it's consistently on second and later attempts, it works for the first time\n. ",
    "ardean": "any news?. ",
    "markcol": "After setting the path explicitly in .config.csonn, can edit the path in the settings pane.\n. ",
    "jolsen71": "I was able to work around this issue by adding this registry entry:\n[HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Command Processor]\n\"DisableUNCCheck\"=dword:00000001\nMarking this closed.\n. I just tried to use this module for the first time with a merge conflict yesterday. It detected the file that had conflicts, but when I opened it, it simply displayed the file with the normal git markers in it. I am running Atom 1.8.0-b2 on Windows 10 but the file in question has on LF line endings (everything we do is LF-only). I haven't been able to test it more than this one particular merge conflict which was only a single file. I found this existing reported issue when researching the problem. Unfortunately, though, I didn't keep a sample of the conflict marker area. Anyhow, I just wanted to chime in and say at least for me, I had the problem with just LF endings on a Windows platform. \n. I just tried with 1.4.2 (uninstalled and installed a fresh merge-conflict package). Atom 1.8.0-beta2. Unfortunately, it is still failing to detect the markers or something. This test file is UTF-8, LF endings, and Ruby language. \n\n. Possible duplicate of #223 and #196\n. ",
    "Globegitter": "@smashwilson is there an issue about this on the atom repository? Might be good to get some discussion started there about this.\n. ",
    "laughedelic": "Any news here?. Duplicate of https://github.com/smashwilson/merge-conflicts/issues/185?\nAlso there is some progress in https://github.com/smashwilson/merge-conflicts/pull/200.. ",
    "jdinartejesus": "I'm also having the same issue as @adambuczynski and i'm using Atom 1.5.4 and OS X. \n. ",
    "trainerbill": "+1 same issue on 1.5.3 on ubuntu \n. ",
    "MoOx": "same. I started a rebase from cli, and continue from atom, then after having choose their changes, I clicked on the modal \"Stage\" button, and boom.\n. ",
    "ToxEn": "Yes, it's just weird, i just spam this stage button, and few moments later, it works ! I don't know why it's working instantly sometimes and take 2min to stage other time !\n. ",
    "creekpld": "ok reinstall worked, thx ;)\n. ",
    "miclaus": "@smashwilson cannot uninstall (see #241)\n. ",
    "rezaarifian": "same me too,, i am using gitkraken on mac os high sierra and get error message.\ncannot push every change file.. ",
    "varemenos": "thank you very much for this! \n. ",
    "mostafaeweda": "thanks a ton :+1: \n. Can I get a version bump release to have this be in apm install merge-conflicts?\n. Great, will do that next time \ud83d\udc4d \n. ",
    "saidmoya12": "Same issue with the last update\n. ",
    "bfrazier2": "Same issue\n. ",
    "batjko": "Same here.\nIt lists the conflict, but clicking on a file does not result in the conflict areas being highlighted to work on.\nNo idea how long it's been in this state, as I haven't used the package in a while.\n. Happened to me with two different projects, one javascript, one custom file type.\nWindows 10.\nUnfortunately, I have already gone through corrections. Next time I encounter this, I'll save a copy and post it.\n. Well I can tell you that my files are both written and committed with Windows line endings, e.g. something like this:\n\nBut that's always been the case and it used to work when I first tried this package.\n. ",
    "nelson6e65": "I'm getting this related issue:\n1. Startup Atom.\nAtom Version: 1.0.11\nSystem: Ubuntu 12.04.4\nThrown From: merge-conflicts package, v1.4.2\nStack Trace\nFailed to load the merge-conflicts package\n```\nAt /home/jeahm/.atom/packages/merge-conflicts/lib/git/shellout.js:15\n    .then((results) => {\n                    ^^\nUnexpected token =>\n/home/jeahm/.atom/packages/merge-conflicts/lib/git/shellout.js:15\n    .then((results) => {\n                    ^^\nSyntaxError: Unexpected token =>\n  at exports.runInThisContext (vm.js:53:16)\n  at Module._compile (module.js:435:25)\n  at Object.defineProperty.value [as .js] (/opt/atom/resources/app.asar/src/compile-cache.js:169:21)\n  at Module.load (module.js:347:32)\n  at Function.Module._load (module.js:302:12)\n  at Module.require (module.js:357:17)\n  at require (module.js:376:17)\n  at Object. (/home/jeahm/.atom/packages/merge-conflicts/lib/git/index.js:10:20)\n  at Module._compile (module.js:452:26)\n  at Object.defineProperty.value [as .js] (/opt/atom/resources/app.asar/src/compile-cache.js:169:21)\n  at Module.load (module.js:347:32)\n  at Function.Module._load (module.js:302:12)\n  at Module.require (module.js:357:17)\n  at require (module.js:376:17)\n  at Object. (/home/jeahm/.atom/packages/merge-conflicts/lib/main.coffee:4:12)\n  at Object. (/home/jeahm/.atom/packages/merge-conflicts/lib/main.coffee:1:1)\n  at Module._compile (module.js:452:26)\n  at Object.defineProperty.value [as .coffee] (/opt/atom/resources/app.asar/src/compile-cache.js:169:21)\n  at Module.load (module.js:347:32)\n  at Function.Module._load (module.js:302:12)\n  at Module.require (module.js:357:17)\n  at require (module.js:376:17)\n  at Package.module.exports.Package.requireMainModule (/opt/atom/resources/app.asar/src/package.js:759:34)\n  at /opt/atom/resources/app.asar/src/package.js:190:28\n  at Package.module.exports.Package.measure (/opt/atom/resources/app.asar/src/package.js:167:15)\n  at Package.module.exports.Package.load (/opt/atom/resources/app.asar/src/package.js:181:12)\n  at PackageManager.module.exports.PackageManager.loadPackage (/opt/atom/resources/app.asar/src/package-manager.js:405:14)\n  at PackageManager.module.exports.PackageManager.loadPackages (/opt/atom/resources/app.asar/src/package-manager.js:369:14)\n  at Atom.module.exports.Atom.startEditorWindow (/opt/atom/resources/app.asar/src/atom.js:667:21)\n  at Object. (/opt/atom/resources/app.asar/src/window-bootstrap.js:12:8)\n  at Object. (/opt/atom/resources/app.asar/src/window-bootstrap.js:23:4)\n  at Module._compile (module.js:452:26)\n  at Object.defineProperty.value [as .js] (/opt/atom/resources/app.asar/src/compile-cache.js:169:21)\n  at Module.load (module.js:347:32)\n  at Function.Module._load (module.js:302:12)\n  at Module.require (module.js:357:17)\n  at require (module.js:376:17)\n  at setupWindow (file:///opt/atom/resources/app.asar/static/index.js:82:25)\n  at window.onload (file:///opt/atom/resources/app.asar/static/index.js:35:9)\n```\nCommands\n\nConfig\njson\n{\n  \"core\": {\n    \"disabledPackages\": [\n      \"php-getters-setters\",\n      \"line-ending-selector\",\n      \"linter-scss-lint\",\n      \"linter-eslint\",\n      \"php-debug\",\n      \"phpunit\",\n      \"autoclose-html\"\n    ],\n    \"packagesWithKeymapsDisabled\": []\n  }\n}\nInstalled Packages\n``` coffee\nUser\natom-text-transformer, v0.7.0\nauto-detect-indentation, v1.0.0\nauto-indent, v0.5.0\nautocomplete-php, v0.3.7\ndocblockr, v0.7.3\ndocs-snippets, v0.8.0\nexception-reporting, v0.38.1\nhtml-entities, v0.4.0\nindentation-indicator, v0.6.0\nline-ending-converter, v1.3.2\nlinter, v1.11.4\nlinter-bootlint, v1.0.2\nlinter-coffeelint, v1.1.2\nlinter-csslint, v1.3.2\nlinter-htmlhint, v1.1.4\nlinter-pep8, v1.2.1\nlinter-php, v1.2.0\nlinter-phpcs, v1.3.2\nlinter-shellcheck, v1.2.0\nlinter-xmllint, v1.3.4\nmerge-conflicts, v1.4.2\nmetrics, v0.53.1\nminimap, v4.23.1\npigments, v0.26.0\nsync-settings, v0.7.2\nDev\nNo dev packages\n```\n. @smashwilson Yes, I know. But I'm using Ubuntu x86, so there is not .deb available in order to update Atom (Or there is it?).\nI installed Atom time ago from some kind of PPA repo, but it's outdated (like everything in ~~Ubuntu~~).\nI don't like Ubuntu, because all it's a problem to compile everything and I'm not able to build Atom myself in this machine.\nThere is not a version of this package compatible with this Atom 1.0.11 that I can use instead?\n. Thank you! It's working.\nThis is a nice package! :smile: \n. Neither .rpm for Fedora x86. But in my own PC I can build Atom for 32-bit easily in fedora. Actually, I made a build helper for Fedora.\n. I'm running into the same issue:\n1. Edit file with conflicts\n2. Click Stage button \nAtom Version: 1.7.3\nSystem: Unknown Windows Version\nThrown From: Atom Core\nStack Trace\nUncaught TypeError: Illegal invocation\n```\nAt C:\\Users\\nmartell\\AppData\\Local\\atom\\app-1.7.3\\resources\\app.asar\\src\\buffered-process.js:87\nTypeError: Illegal invocation\n    at Socket. (C:\\Users\\nmartell\\AppData\\Local\\atom\\app-1.7.3\\resources\\app.asar\\src\\buffered-process.js:87:13)\n    at emitOne (events.js:77:13)\n    at Socket.emit (events.js:169:7)\n    at readableAddChunk (_stream_readable.js:146:16)\n    at Socket.Readable.push (_stream_readable.js:110:10)\n    at Pipe.onread (net.js:523:20)\n```\nCommands\n-8:49 tree-view:show-in-file-manager (span.name.icon.icon-file-directory)\n     -7:49.8.0 merge-conflicts:detect (ol.tree-view.full-menu.list-tree.has-collapsable-children.focusable-panel)\n     -4:59.3.0 core:paste (atom-text-editor#merge-conflicts.gitPath.editor.mini.is-focused)\n     -1:39.4.0 merge-conflicts:detect (atom-text-editor.editor.is-focused)\n  2x -1:14.8.0 core:undo (atom-workspace.workspace.scrollbars-visible-always.theme-one-dark-syntax.theme-one-dark-ui)\n  6x -1:02.3.0 core:backspace (atom-text-editor.editor.conflicted.is-focused)\n     -0:43.5.0 core:save (atom-text-editor.editor.conflicted.is-focused)\n     -0:36.3.0 merge-conflicts:detect (atom-text-editor.editor.conflicted.is-focused)\nConfig\njson\n{\n  \"core\": {\n    \"disabledPackages\": [\n      \"php-debug\"\n    ]\n  },\n  \"editor\": {\n    \"invisibles\": {},\n    \"preferredLineLength\": 100,\n    \"showIndentGuide\": true,\n    \"softWrap\": true,\n    \"tabLength\": 24\n  }\n}\nInstalled Packages\n``` coffee\nUser\natom-text-transformer, v0.7.0\nauto-detect-indentation, v1.0.0\nauto-indent, v0.5.0\nautoclose-html, v0.23.0\nautocomplete-php, v0.3.7\ndocblockr, v0.7.3\ndocs-snippets, v0.8.0\nhtml-entities, v0.4.0\nindentation-indicator, v0.6.0\nlanguage-blade, v0.25.2\nlanguage-latte, v0.3.1\nline-ending-converter, v1.3.2\nlinter, v1.11.4\nlinter-bootlint, v1.0.2\nlinter-coffeelint, v1.1.2\nlinter-csslint, v1.3.2\nlinter-eslint, v7.2.2\nlinter-pep8, v1.3.0\nlinter-php, v1.2.0\nlinter-phpcs, v1.4.0\nlinter-xmllint, v1.3.4\nmerge-conflicts, v1.4.3\nminimap, v4.23.5\nsync-settings, v0.7.2\nDev\nNo dev packages\n```\n. ",
    "MattRiesterer": "@smashwilson you were right with the corrupted install. After reinstalling everything works fine. This fixes the issue for me.\nThank you\n. ",
    "keyboSlice": "My apologies - I have just noticed a separate issue for this\n. ",
    "web-snake": "Thanks,\nit works fine with a more modern Atom install.\n. ",
    "rzeigler": "I should note that this is an intermittent issue. It usually happens after I start the merge or perform some other git operation (like successfully staging a file when it does work).\n. ",
    "orioltf": "Nice! :)\n. ",
    "ftaurino": "same here, on linux, almost same packages list.\n. ",
    "vischlatter": "Same here, running on Windows 10.\n. ",
    "jacobnbrum": "I am having the same issue, though it is not only the footer bar, it does the same in the header bar, and sidebar for me as well.\nUsing Atom 1.7.2, Merge conflicts 1.4.2, Ubuntu 14.04\n. ",
    "mattmeng": "I'm experiencing this as well.  The conflict UI coloration is weird and when you have the pane split down, the conflict UI is drawn over the opposing pane.\n\n. ",
    "superlin": "+1\n. ",
    "counterbeing": "+1 But, great package!\n. ",
    "nprintz": "+1\n. ",
    "virginc": "+1\n. ",
    "OJFord": "This is an Atom bug, see the discussion at atom/atom#11464\n. ",
    "PierreGUI": "Cool!\nMerge-conflit was a must have, switching to github-atom today ;)\nCheers. ",
    "gcaracuel": "Same for me, file clearly show merge conflict marks.\nI hadd to rollback plugin to 1.3.7 because of this: https://github.com/smashwilson/merge-conflicts/issues/231\n. ",
    "magnli10": "Same issue here\n. ",
    "JaguarDown": "Same issue for me. Windows 10, Atom 1.10.2, merge-conflicts 1.4.4. Please fix! I really want to use this package! Sorry if I failed at this bug report, first one I've ever done.\n. ",
    "abelta": "Same thing is happening for me.\n. ",
    "gaopin1534": "same here with a swift project\nmerge-conflicts 1.4.4\natom 1.12.6. ",
    "jglovier": "Ah, awesome!\nWhat do you think about making that more obvious with a little menu icon or something?\n. Sounds good. \ud83d\udc4d \n. ",
    "Swivelgames": "This would definitely be a huge plus. Currently I'm working with a diff that has a change of over 100 lines, which makes it difficult to process when they're top vs bottom.. ",
    "guilhermejcgois": "That is a cool feature, any news about?. I think that the merge-conflicts dialog (if this isn't the name, sorry) needs to be auto-closed in that cases, by the way isn't explicited the file that will be staged.... ",
    "sergeysova": "@ypresto and missed header for  ====== \n. ",
    "burkhardr": "@smashwilson Same issue here. Could these be text links instead?\n. ",
    "pingshunhuangalex": "+1, same issue here for material-ui theme (dark).\n. ",
    "kmer1224": "+1, same issue here.\natom 1.12.5\nmaterial-ui  (dark)\nbase16 tomorrow dark\nmac os. ",
    "ClydeDroid": "+1 same issue\natom 1.12.6\natom-material-ui theme\none dark syntax\nubuntu 16.04. ",
    "mateosss": "Thanks for your work in this package! it was very useful, and indeed they solved this issue, so I suppose I should close this. . ",
    "thisolivier": "I can confirm the same issue with different themes.\n\nAtom 1.12.7\nUI Theme: Seti UI\nSyntax Theme: Fictus Light. Related to issue #251 I think. . ",
    "pranshu1992": "Assigning custom properties to a marker when creating/copying it is deprecated. \nPlease, consider storing the custom properties you need in some other object in your package,   keyed by the marker's id property.\nFunction.extractParams - /Applications/Atom.app/Contents/Resources/app.asar/node_modules/text-buffer/lib/marker.js:43:14\nMarkerLayer.markRange - /Applications/Atom.app/Contents/Resources/app.asar/node_modules/text-buffer/lib/marker-layer.js:196:71\nDisplayMarkerLayer.markBufferRange - /Applications/Atom.app/Contents/Resources/app.asar/node_modules/text-buffer/lib/display-marker-layer.js:90:62\nTextEditor.markBufferRange - /Applications/Atom.app/Contents/Resources/app.asar/src/text-editor.js:1753:38\nConflictVisitor.markSide - /Users/prkumar/.atom/packages/merge-conflicts/lib/conflict.js:308:38\nConflictVisitor.visitOurSide - /Users/prkumar/.atom/packages/merge-conflicts/lib/conflict.js:264:27. ",
    "WaKeMaTTa": "Assigning custom properties to a marker when creating/copying it is deprecated. Please, consider storing the custom properties you need in some other object in your package, keyed by the marker's id property.\nFunction.extractParams - /opt/atom/resources/app.asar/node_modules/text-buffer/lib/marker.js:43:14\nMarkerLayer.markRange - /opt/atom/resources/app.asar/node_modules/text-buffer/lib/marker-layer.js:196:71\nDisplayMarkerLayer.markBufferRange - /opt/atom/resources/app.asar/node_modules/text-buffer/lib/display-marker-layer.js:90:62\nTextEditor.markBufferRange - /opt/atom/resources/app.asar/src/text-editor.js:1753:38\nConflictVisitor.markSide - /home/wakematta/.atom/packages/merge-conflicts/lib/conflict.js:308:38\nConflictVisitor.visitTheirSide - /home/wakematta/.atom/packages/merge-conflicts/lib/conflict.js:301:29\nSpecs:\n\nUbuntu 16.04 LTS\nAtom 1.13.0. \n",
    "ryanpatiency": "same here. ",
    "mikemerritt": "Yes, it seems this is related to #251 . ",
    "pdf13": "This issue is also related to #261 . ",
    "nerdgore": "Also related to #264. ",
    "bhushangahire": "+1. ",
    "ItamarGronich": "Me two +1. ",
    "danfoley": "+1. ",
    "jasondibenedetto": "+1. ",
    "amoghesturi": "+1. ",
    "fh250250": "+1. ",
    "g0ody": "+1. ",
    "jurmarcusallen": "+1. ",
    "emiilsd": "+1. ",
    "patrickml": "+1. ",
    "ibcWillJust42": "+1. ",
    "Andor-Z": "+1. ",
    "criswilk": "+1. ",
    "erasmus": "+1. ",
    "timfallmk": "+1. @pichouk I think the suggested solution was in the first message of this issue. I just don't see any movement on this repo.. ",
    "enygmatik": "+1. ",
    "HermanBergner": "+1. ",
    "Nrohtgnohp": "+1. ",
    "shillem": "+1. ",
    "towen": "+1. ",
    "pichouk": "Instead of just adding \"+1\" (did you know you can just thumbsup the first message ?) until the end of time, does anyone understand the issue/have an idea of how to fix this ? . ",
    "nobleach": "merge-conflicts version: 1.4.4\nAtom version: 1.15.0\ngit status --porcelain returns no output.. It's very possible that I resolved all but one file, then committed most of the resolved files. That would make sense.. "
}