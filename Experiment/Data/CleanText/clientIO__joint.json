{
    "DavidDurman": "Fixed in JointJS v0.6.\n. Thanks for feedback. I took a look at the flowchart serialization of ajax.org. I saw they use xml for serialization, that's not exactly what I want. I just submitted new version (0.2) with JSON serialization support. Anyway, there's still a need for a converter of my JSON serialization to some XML formats (e.g. Dia, Visio, ...). In other words, I consider the JSON as a base, from which it can be converted to other formats.\n. Thanks. Fixed in version 0.3.\n. Not valid for JointJS >v0.6.\n. Fixed in commit a3a60028a1d7ecb8940201cfbcd2df4a72978382.\n. fixed in commit a009987d06e1e6a3e39db2544d127cd9b3504beb.\nscale is used to resize complicated arrows (hand, flower) which can \ncause problems when zooming (in future). all arrows resizing should be unified!\n. fixed in 81e5afc5c9e8f1f1396aeddf61838c0e3e6700c7.\n. The DEVS diagram is different in a sense that it uses special Elements for the ports. So the labels you see belong ports, not joints. But this func. is on the top of my TODO list and actually easy to implement. Even the API doesn't have to be changed since all methods setting label or label attributes will also accept array of labels/label attributes. any comments are welcome!\n. multiple labels are implemented in commit ac1884a7ad8644d1f401 (multilabels branch).\nneeds to be tested (run: utests/run.html?unit=label).\n. basic usage:\n\npaper.circle(50, 950, 20).joint(paper.circle(720, 950, 30), {\n    label: ['label 1', 'label 2', 'label 3', 'label 4'],\n    labelAttrs: [\n        { position: 50, fill: '90-green-red', 'font-size': 15 },\n        { position: 1/3, fill: 'blue', 'font-size': 15 },\n        { position: 2/3, fill: '90-green-red', 'font-size': 15 },\n        { position: -50, fill: 'red', 'font-size': 15 }\n    ],\n    labelBoxAttrs: [\n        { fill: 'lightgray' },\n        { fill: 'yellow' }\n    ]\n})\n\nposition < 0: position = connection_length + position  (subtracted from the end) => fixed position (label doesn't move when connection gets longer)\n0 < position <= length: position = connection_length * position  (variable position)\nposition > length: position = position (added to the beginning)\n. fixed in commit 50c6a63a28fa477b00916d38d92d8be5eb685a5b.\n. This is implemented in the SelectionView plugin: http://jointjs.com/plus\n. Hi Diogo,\nThanks for the report. Just pushed a fix. The shadow was not removed in remove() and liquidate() methods.\nCheers,\nDavid\n. IE 8 not supported anymore in JointJS >v0.6.\n. IE 8 not supported anymore in JointJS >v0.6\n. IE 8 is not supported anymore in JointJS >v0.6.\n. Thanks Dario! Would love to see some screenshots of your diagrams...\n. Easy to do in JointJS >v0.6\n. Not on Github but Figurepool uses JointJS as an underlying diagramming engine: Check out the editor http://figurepool.com/editor\n. no, that's certainly not a good idea taking into account it's my site ;-)\n. Another UI for JointJS is at http://jointjs.com/rappid\n. Nope. It's not. It's a part of a bigger project we're working on.\n. A quick tutorial can be found here: http://www.jointjs.com/tutorial.html, documentation is here: http://www.jointjs.com/api.html. I have to admit that the documentation could be better. I'd appreciate any help with this, e.g. a blog post.\n. I'd be very interested to see a combination with Backbone. I'm actually using JointJS + Backbone in Figurepool http://figurepool.com/editor and I have to say that it's quite application specific. \nIn Figurepool, Backbone is used to control the editor application, toolbar, popup editors, stencil and other widgets. One Backbone View is also associated with every element (rectangle, ellipse, ..., UML objects, charts, ..) and serves as a proxy to the underlying JointJS element. This view also shows the icon tools around a selected element together with the info box with position/dimension of the element.\nPopup editors (those that open when clicking some of the icon tools like text editor, attributes editor, ...) are also Backbone Views that are created when the icon tool gets clicked. These editors get passed a JointJS element and change its properties whenever one of the inputs inside the editor changes. The same goes for links. When links are clicked, a popup editor opens (a Backbone View) that gets passed a Joint() object, this time, representing a link between objects.\nThe application object takes care of diagram serialization (using the JointJS JSON serializer) and sends it to the server whenever needed.\nI hope it helps a little bit. I don't have a simple code example unfortunately. The code of the Figurepool editor is not very suitable for demoing purposes.\n. JointJS 0.6 is based on Backbone, i.e. MVC is built-in.\n. Thanks Lior, great fix.\n. Clicks can be detected in various ways. One of the is defining a custom view and overriding the pointerdown() method.\nArbitrary IDs can be assigned to any cell in the graph. var rect = new joint.shapes.basic.Rect({ id: 'myID' });\nHTML markups are not allowed for labels in the current state. This can be workedaround though by redefining the link makrup and using the SVG  element.\n. Joint.dia.Paper object has now a scale() method in JointJS >v0.6 effectively implementing the paper zoom in/out.\nThe editor looks nice! Would love to see that in JointJS v0.6...\n. Fixed, thanks for pointing that out!\n. fixed in v0.6.1\n. Fixed in v0.6.1  (which is downloadable from http://jointjs.com)\n. fixed in v0.6.1\n. Fixed in commit 40fe048\n. Fixed in v0.6.4\n. This works nicely but only if the target is on the right of the source. Try to open the demo/links.html, set in the console e.g. link1.set('smooth', true) and move the first box to the right of the second box.\n. Looks good to me. Thanks!\n. Looks great. The code is much more readable now.\n1. This should never happen but the checks don't hurt I think.\n2. The naming is ok.\n3. No need to make the dist. We do that before every new release (git tag).\n4. We noticed this too. We'll give it a closer look.\nThere is two little things missing that I'll do just after I merge your pull request. But please correct me if I'm wrong. \n1. When setting positions on JointJS elements, a check whether a node is dummy must be made, otherwise set() might be called on an undefined value:\nlayoutGraph.eachNode(function(u, value) {\n       if (!value.dummy) { // NEW\n           graph.get('cells').get(u).set('position', { x: value.x, y: value.y });\n       }\n   });\n2. The same goes for edges:\nlayoutGraph.eachEdge(function(e, u, v, value) {\n           var link = graph.get('cells').get(e);\n           if (link) link.set('vertices', value.points);\n       });\nI guess this is because of the dummy nodes and their connections used in the layout algorithm?\n. There is no need to inline the _prepareDate() function. How exactly are you calling the layout() method? This seems like it is called with a wrong context.\n. Looks like a good check to me. Have three comments:\n- throwing an exception is better than console.log() as one can react on that outside the embed() method (something like throw new Error('Recursive embedding not allowed.'))\n- there is no need to cache cellId and parentCellId into separate variables in my opinion (for better code readability)\n- 'batch:start'/'batch:stop' should only wrap the code that actually makes the change to the embeds/parent\nCould you make a pull request so that I can put it in?\n. Great suggestion though I'd suggest to keep the toFront()/toBack() in the API and let it accept the number of levels the element should travel back/forth as a parameter. Also, your implementation is actually not correct. Elements can have arbitrary z levels. One can even set a z directly: cell.set('z', 5);. This means that there can be a sequence of elements with e.g. these z values: [0, 3, 100, 210]. Therefore, increasing/decreasing z by one does not necessarily move the element one level up/down.\n. Perfect. Thanks!\n. Hi Andy, does it need to be browserified in the first place? It's originally written for browsers.\nHowever, I think I see where the problem is. The require()s that you see in the JointJS files are meant for NodeJS environment only, for browsers, all is in the joint namespace and bundled within the joint.js file.\n. Also, take a look at these special attributes that you can use in the attrs object in your elements: http://jointjs.com/api#SpecialAttributes\n. This looks like it has something to do with 'lodash' library (an underscore library alternative). Do you use that library (underscore/lodash) somewhere on the page? Do you have a simple use case we could try it on?\n. Somehow, I cannot even load underscore on its own. I'm a node-webkit beginner so please point me to the right direction if you can.\nindex.html:\nhtml\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>Hello World!</title>\n    </head>\n    <body>\n        <script>\n           var _ = require('underscore');\n        </script>\n    </body>\n</html>\npacakge.json:\njson\n{\n    \"name\": \"nw-demo\",\n    \"main\": \"index.html\"\n}\ndirectory tree:\n.\n\u251c\u2500\u2500 app.nw\n\u251c\u2500\u2500 index.html\n\u251c\u2500\u2500 node_modules\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 underscore\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 LICENSE\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 README.md\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 underscore-min.js\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 underscore.js\n\u2514\u2500\u2500 package.json\nWhen I run: zip app.nw index.html package.json and then nw app.nw I get:\n[12659:0119/133836:INFO:CONSOLE(340)] \"Uncaught Error: Cannot find module 'underscore'\", source: module.js (340)\nFrom what I understood from here: https://github.com/rogerwang/node-webkit/wiki/Using-Node-modules#example-async, this should work.\n. Hi all,\nSorry for the delay. I'm not a node-webkit expert but I gave it a shot today and were able to run JointJS inside it. Here is my files:\nindex.html\n``` html\n<!DOCTYPE html>\n\n\nHello World!\n\n\n\nJointJS in node-webkit!\n    We are using node.js document.write(process.version)\n<div id=\"paper\"></div>\n\n<script src=\"./lib/jquery.js\"></script>\n<script src=\"./lib/lodash.js\"></script>\n<script src=\"./lib/backbone.js\"></script>\n<script src=\"./lib/vectorizer.js\"></script>\n<script src=\"./lib/geometry.js\"></script>\n<script src=\"./lib/joint.clean.js\"></script>\n\n<script src=\"./index.js\"></script>\n\n\n\n```\npackage.json\njson\n{\n  \"name\": \"JointJS\",\n  \"main\": \"index.html\"\n}\nindex.js (the Hello World app from: http://jointjs.com/tutorial)\n``` javascript\nvar graph = new joint.dia.Graph;\nvar paper = new joint.dia.Paper({\n    el: $('#paper'),\n    width: 600,\n    height: 200,\n    model: graph,\n    gridSize: 1\n});\nvar rect = new joint.shapes.basic.Rect({\n    position: { x: 100, y: 30 },\n    size: { width: 100, height: 30 },\n    attrs: { rect: { fill: 'blue' }, text: { text: 'my box', fill: 'white' } }\n});\nvar rect2 = rect.clone();\nrect2.translate(300);\nvar link = new joint.dia.Link({\n    source: { id: rect.id },\n    target: { id: rect2.id }\n});\ngraph.addCells([rect, rect2, link]);\n```\nImportant note: Use the edge version of Lodash, otherwise, you'll be seeing errors like the following:\n\"Uncaught TypeError: Cannot read property 'each' of undefined\"\nYou can get the edge version here: https://github.com/lodash/lodash/blob/master/dist/lodash.js.\nAlso, you might have noticed that I'm using the clean version of JointJS (without jQuery, Backbone, Lodash, Geometry and Vectorizer). You can get this version here (together with Vectorizer and Geometry): http://jointjs.com/download.\nEverything works like a charm and I can see an interactive graph in node-webkit!\n. Great to hear you got it working! As to the dependencies, JointJS requires Lodash, Underscore is not enough. JointJS uses Lodash features so we cannot simply switch to Underscore. As to Backbone, we keep upgrading it and Backbone 1.1.2 used currently in JointJS is the newest. The reason why we stick to a specific version is that if we didn't, we couldn't guarantee that JointJS works as it should. It happened to us in the past that a slight change in Backbone caused problems in JointJS.\n. Thanks for this! And sorry for the delay. Looks good. We'll merge this before the release of JointJS v0.9 that we plan in the coming weeks. (defultLinks typo will be fixed too :) )\n. The build commit is not necessary as one can always make a build with Grunt. We might .gitignore the dist directory in the 0.9 version.\n. Do you have any use case where this happens? Let's fix the root cause of the issue, not patch it.\nCheers\n. Thanks for the contribution. Can you put a use case of this? Note that the x-alignment and y-alignment attributes should only offset the element relative to its own position, not relative to the referenced element. For the latter, ref-x, ref-y, ref-dx and ref-dy should be used. You should be able to align text elements already using those attributes. In any case, we'd be curious if you found a positioning that you couldn't achieve with those attributes.\n. x-alignment and y-alignment now accept negative numbers so it is possible to achieve text alignment via the set of attributes @yoyoworms suggested.\n. Thanks for finding that out. It would be great to have a use case when this actually happens and fix the cause rather than patch it. For example, if the scalableBbox.width is undefined, that it probably does not make sense to set the transform attribute at all.\n. JointJS requires the Lodash library (http://lodash.com). Note that Lodash actually contains the _.merge method which is different from the _.extend method as _.merge is a deep version of _.extend.\n. Duplicate of #79 \n. Strange. Could you please create a use case and put it e.g. on jsfiddle.net for us to see?\n. Fixed in commit 96a0843, 2b895af and 51efadc\n. This is a bit trickier than it might seem. We'd going to have to check with every update of every link whether there is an overlap of the link tools and if yes, offset all the overlapping link tools so that they do not overlap anymore. We're still thinking on how to make this so that it doesn't affect performance while giving a good result. As a quick alternative though, we can at least provide an API for setting the link tools offset from the beginning/end of the link. This is currently hardcoded as 40px for normal links and 20px for short links in joint.dia.LinkView.prototype.updateToolsPosition.\n. You're faster that I can keep up with replying :) I was about to write this is a brilliant solution. We'll put this in behind some flag to make this optional. Great job!\n. Fixed in Rappid v1.5 (and the associated JointJS version)\n. batch:start and batch:end are events marking start and end of composed operations. These are used by other JointJS plugins (e.g. the CommandManager Rappid plugin implementing undo/redo). In the CommandManager in particular, this is useful when the undo/redo manager wants to treat certain changes in batches so that it can undo them in one go. For example, when an element is being dragged around the paper, many change:position events are triggered but when the user clicks undo, he wants to undo the the whole move of the element, not only the last one 1px translation. There are more use cases outside the CommandManager where batch:start and batch:end are useful.\n. The options array of the select type must be either an array of strings ['apple', 'pear'] or an array of objects of the form { value: [value], content: [what is displayed] } (the second notation is missing in the docs - we'll fix it). If you want to react on changes in the Inspector (the event hook that you mentioned), you can do that by creating an event listener for the change event on the rendered HTML <select>:\njavascript\ninspector.on('render', function() {\n   inspector.$('[data-attribute=\"my/property\"]').on('change', function() {\n       // do something\n  })\n})\nThe render event is triggered by the inspector whenever it (re-)renders its content. The data-attribute of the HTML inputs rendered by the inspector contains the path to your property, for example, for the basic.Rect shape and its text font-family, it would be 'attrs/text/font-family'.\n. Pull requests are welcome but please bear with us, we have to make sure that any possible extensions (towards AMD) would be aligned with our plugins in Rappid as well so acceptance might take a little longer.\n. Strange, could have been a glitch somewhere along the way to our server. Didn't notice anything strange in our logs and the service running the site didn't experience a downtime. Closing the issue now. Thanks for reporting though, please let us know if you still have issues.\n. Hi Jeremy, thanks, really appreciate it! We thought about it as well and it's something we'd really like to do. The same goes for the Geometry library (http://jointjs.com/api#g). Both libraries are completely standalone, without any dependencies and deserve to be extracted. Well, if you'd be up to it and wanted to help us creating/designing separate sites for any of these libs or create some demos, that'd help a lot.\n. Cleaning up issues. Is this still open? @tahirnawaz do you still have the type error? If yes, could you please create a test case on jsFiddle for us to see?\n. I would suggest to draw an SVG port underneath your HTML icon for that port and set pointer-events: none in CSS for the HTML button so that events propagate to the SVG port element. It is recommended to use SVG wherever possible in JointJS.\n. This is due to the fact that the JointJS Paper is populated before it is in the live DOM. This is not supported. The reason is that before the SVG elements are in the live DOM, their position and dimension is not known yet. Many of the features of JointJS rely on knowing position and dimension of SVG elements in the paper.\n. Closing this as a duplicate of #58 \n. Indeed!\n. Good points! We've already started incorporating these and they will be ready in the upcoming v1.0 release.\n. No, d3 is definitely not a dependency of JointJS. It was a typo, a leftover from a ported function. Nicely spotted! This is fixed in commit 76c4bbc\n. Do you have an example of the call?\n. Right. We'll have a look at this. We should fix the cause rather than patch getByPath() to cope with wrong parameters. The first parameter to getByPath() must be an object, not a falsy value. Thanks for reporting!\n. Right, I see. We'll look into this. I believe we can just replace all the find() calls on SVG elements with the Vectorizer alternatives (http://jointjs.com/api#v:findOne and http://jointjs.com/api#v:find).\n. Good stuff!\n. Do you have an example when this happens? Just want to see how come that the parent cell ID is stored while the cell is not in the collection anymore.\n. Do you have an example of when FF crashes on this? I think we should fix the core of the problem rather than patching it. It is assumed one calls getPointAtLength() with valid integer number. If that doesn't happen somewhere, it should be fixed there.\n. Hey Ales, could you please elaborate a little bit on what you mean by \"wrong behavior of native querySelector\"?\n. That's strange! Can you debug what is the end.selector and el and post a screenshot of that as well?\n. Hi Kevin, we have this on our list. It will come very soon.\n. That's the plan. It's definitely not far out. We still have couple features to implement though. The plan is to go out with new JointJS, new Rappid, new site and my.client.io in one go.\n. Pretty nice indeed. JointJS also has metro style routing. Try this demo: http://jointjs.com/demos/routing and click on Rounded/Metro. It is possible to achieve the same effect as in the noflo's UI by giving the links a bit better look.\n. Vectorizer does not delegate to jQuery for these kind of methods. See: https://github.com/clientIO/joint/blob/master/src/vectorizer.js. It uses browser native methods. Vectorizer is actually totally standalone (except that it uses the geometry library - which it will not in the near future) and is not dependent on jQuery.\n. I don't think that should be checked. The breakText() function expects a string as the first argument. Actually, that is the only mandatory and most important argument. If you pass an undefined value instead of text, than that means that it's an error in your code. It should not be \"masked\" by the breakText function.\n. That is the good way. You should not pass arguments of a different type than expected by functions (even though JS is loosely typed). If breakText() should check undefined values, why not check if text is of type function? Or object? If you pass a wrong argument to a function, it should yell as soon as possible instead of trying to do some magical conversions. That would only mean it would hide errors that would go undiscovered until you're in production where it hurts much more.\ntext is simply a mandatory (not optional) argument which must be a string. Calling breakText() without a text does not make much sense.\n. @nomeata good point! However, the thing is that one does not have to have a port defined but still want a link to be connected to a 'magnet', where magnet is in our terms any SVG element that a link can \"stick\" to. In other words, you can mark any SVG subelement of your shapes a 'magnet' (by setting the 'magnet' attribute - http://jointjs.com/api#SpecialAttributes:magnet) which makes it possible to connect links to it. The magnet must somehow be identifiable in the link models so that the diagram can be reconstructed. Now we use 'selector' with a complete (and therefore unique) path to that magnet.\nOne thing I'd like to point out is that it is in our roadmap for JointJS v1.0 to make it easy to work with ports in any shape. As part of that, we will most likely introduce a more robust and better way to identify ports/magnets.\n. This can and should be fixed inside JointJS. We should be fine by calling evt.preventDefault() in joint.dia.element.js when the dragging starts (in pointerdown() or pointermove() methods).\nBefore that, you can set user-select to none in your CSS e.g. for the body or paper container as @chill117 pointed out.\n. Done. Here's a direct link: http://jointjs.com/api#joint.dia.Paper:options.linkPinning\n. The UML shapes are not auto-sizing based on the text inside. This must be done manually. You can take advantage of the Vectorizer's bbox() method to find the bounding box of texts: http://jointjs.com/api#v:bbox. In the future, we do plan to make the UML shapes a bit more clever in this sense. If you create a better UML shape, we'd be happy if you could share it with us.\n. This is currently not supported. What you mean is a negative scale (http://stackoverflow.com/questions/23899718/scale-and-mirror-svg-object) which we don't support yet. However, it is definitely an interesting feature worth researching.\n. +1. shouldn't this be called setLayoutPosition()? I guess we have \"getters\" and \"setters\", not \"getters\" and \"storers\".. ",
    "jonny64": "Hi!\nIt would be nice if you implement some kind save/load API to allow serialize diagram state.\nI've done some research on diagramming field and found similar solutions.\nYou can look for example at ajax.org flowchart component source for serialization ideas && routines.\nThey have good save/load capabilities but their arrowing mechanizm  compared to yours sucks.\n. ",
    "rsperberg": "Just beginning to learn to use Joint. This is one of my requests (although it looks like the DEVS diagram does something like this).\nRoger S\n. ",
    "DiogoAzevedo": "Hey once again, \nafter analyse the attributes that each concepts has I realized what the problem was. Since, the concepts have an attributed for shadows, so I just put shadows: false. Additionally, after deleting a concept there are no more shadows just a clean paper :D\nBest Regards, \nDiogo Azevedo\n. ",
    "xalien": "I think that the problem is in .js \"min\" version. I did the following test:\n-with only joint.all.min.js it doesn't work\n-with joint.all.min.js and joint.dia.erd.min.js it doesn't work\n-with joint.all.min.js and joint.dia.erd.js it work!\n. ",
    "MiguelBluetab": "i have the same problema but i dont get any solution :S\nThanks for this library is amazing!!\n. ",
    "Eraser666": "Hello,\nI discovered that the error might be in Raphael.\nAll values are available at debug in Joint and I suppose that there is an error in positioning text in Raphael - especially IE\n. ",
    "osallou": "This is a matter of document load.\nThe script was played before div is loaded.  Script must be played only after document is loaded....\n. ",
    "shimondoodkin": "yes I saw it, but I feel it is is not ok to rip-off JavaScript from their site\n. it rappid is open source?\n. ",
    "loicknuchel": "Thank you for your quick answer.\nI have seen theses resources but I have trouble to navigate in api documentation and the tutorial is too short to learn your lib.\nI didn't see that your demos and you source code were published. I think this could help me a lot to understand how to use joint.\nMay I suggest you to tell, at the end of the tutorial, that demos and their source code could be a good start to understand how to use joint ?\n. ",
    "xbl": "\u540c\u95ee\uff01 up\uff01\n. ",
    "kumilingus": "How to detect a click on an object you can find out here.\n. It's fixed and will be part of our next release that comes tomorrow.\n. Won't fix as the DirectedGraph plugin works with dia.Graph not with dia.Paper.\nNote that you can set the paper dimensions based on the layouted graph content size once layout done.\n. It's fixed and will be part of our next release that comes tomorrow.\n. Please use setVertices option set to true.. Hi Alberto,\nthis is a chrome-specific error and it's been fixed in the following commit.\nhttps://github.com/DavidDurman/joint/commit/a2e2119a78cbc2e7be580497ffadcd1432c9bfb2\nRegards\nRoman\n2013/12/2 albertoferrazzoli notifications@github.com\n\nHi,\nI am using JointJS 0.7 and some time when i select a rectangle in the\npaper, the selected object is not detached and remains attached to the\nmouse pointer. The Chrome console show the error enclosed:\nUncaught illegal access at 21832 joint.js\n[image: jointjs illegal access]https://f.cloud.github.com/assets/5681596/1654818/96b86efc-5b55-11e3-9a6e-8118ea0d4185.PNG\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/DavidDurman/joint/issues/52\n.\n. Any chance using dy instead? i.e. <text dx=\"10\" dy=\"100\">\n. Let's say that was fixed https://github.com/clientIO/joint/blob/master/src/vectorizer.js#L372-L375\n. Thanks for the suggestion!\n. It's fixed and will be part of our next release that comes tomorrow.\n. Can not be reproduced anymore.\n. It's fixed and will be part of our next release that comes tomorrow.\n. Sounds right. Could you make a pull request, Kevin?\n. Hi Kevin,\n\nthanks for suggestion.\nIt will be part of a next release.\nI made just one little change. The usage will be following:\npaper.toSVG({ preserveDimensions: true })\nThis way it will be easier to add more options later.\nRegards\nRoman\n2014-02-04 Kevin Mansel notifications@github.com:\n\nWould love to see this kind of option integrated into the SVG output\nplugin.\nSample code -\nTop of the function :\njoint.dia.Paper.prototype.toSVG = function(preserveDimensions) {\n    preserveDimensions = preserveDimensions || false;\nLine 40ish :\n// When all elements are shifted towards the origin (0,0), make the SVG dimensions as small\n    // as the viewport. Note that those are set in the viewBox attribute rather then in the\n    // width/height attributes. This allows for fitting the svg element inside containers.\n    if (preserveDimensions) {\n        V(svgClone).attr('width', viewportBbox.width);\n        V(svgClone).attr('height', viewportBbox.height);\n    } else {\n        V(svgClone).attr('width', '100%');\n        V(svgClone).attr('height', '100%');\n    }\nThis works great on my side with testing the implementation.\n\nReply to this email directly or view it on GitHubhttps://github.com/DavidDurman/joint/issues/62\n.\n. Thank you!\n. Hi elbowz, It sounds like a problem, which has been already fixed in https://github.com/DavidDurman/joint/commit/3a093050f98a90735e8bc7d755f8e6c10db6b039.\n. No problem. The next update is going to be released in 2-3 weeks time.\n. Hi,\nthat's been fixed and pushed to the repository. That extra space was\ngenerated in Vectorizer (methods translate(), scale() and rotate()).\n\nRegards,\nRoman\n2014-05-22 5:38 GMT+01:00 Shreyas N notifications@github.com:\n\nJust a quick note. My sense is that this happens when certain browsers\ninterpret the spaces in values of the attributes.\nThe easiest workaround for this, is basically, to trim the value if it is\na string before setting it in the attribute.\nI have been able to patch this by fixing setAttribute function from\nelse {\n            el.setAttribute(name, value);\n        }\nto the following\nelse {\n          if (typeof value == \"string\") {\n            value = value.trim();\n        }\n        el.setAttribute(name, value);\nAs David said, this is a workaround. The real question is, why is there an\nextra space generated while building up the transform string.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/DavidDurman/joint/issues/68#issuecomment-43847882\n.\n. Hi Mavarazy,\n\nit's not related. I suggest to take a look at this thread https://groups.google.com/forum/#!topic/jointjs/JXCm0P2a3U0.\n\nCould it be that you create the paper on a container that is not in the live DOM yet? Note that browsers don't give elements a dimension till their in the RenderTree (similar to DOM tree but contains only elements that are to be rendered on the screen, also associates CSS styles and other information with elements).\n\nRegards,\nRoman\n. An option for now is to use SVGMarkers for the arrowheads. Please see this JSFiddle.\n. v1.1 will have built-in markers. Please refer to sourceMarker and targetMarker attributes.. Hi Remi,\nd7b81970ef83fb4db89fabcceeacdccdc8e07394 fixes the root of the problem. Your patch is also useful e.g \"translate(10,10) scale(2,2)\" produces \" scale(2,2)\" at the moment.\nThanks\n. hi elbowz,\nsounds like Mozilla bug #612118 (See the conversation here https://bugzilla.mozilla.org/show_bug.cgi?id=612118).\n\nHere is another JSFiddle, which shows that the problem occurs even if the display:none is outside the SVG element (i.e. if the <svg> element is inside a <div> with display:none). http://jsfiddle.net/qZYrK/\n. I have played with you jsfiddle. A solution I came up with is to create/destroy the paper every time the user asks to show/hide the overview (It's not perfect as it uses paper private methods).\n\nhttp://jsfiddle.net/RFf6r/1/\n. I'm glad that helps. I think we should not insert the paper into elements which are not  in the render tree (https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction) otherwise we can get an error (FF) or zero sized bounding box (Chrome) when we ask for an element dimension.\n. That also means that you can replace display: none with visibility: hidden in your jsFiddle example.\n. Hi,\nFF doesn't like an element with size equal to { width 0, heigh: 0 } apparently (and you have changed default size of devs.Atomic to 0x0 in your example!).\nTo fix this use model size at least { width: 1, height: 1 } or even better use basic.Circle shape instead of devs.Atomic.\nnew joint.shapes.basic.Circle({ attrs: { circle: { magnet: true }}});\nRegards,\nRoman\n. Hi patS, joint.dia.Cell requires id to be a string.\n. Hi Zivl,\nmaybe you can use raphael getTotalLength() implementation (https://github.com/DmitryBaranovskiy/raphael/blob/master/raphael.js#L4190).\nOr stop using smooth option on links in FF until they fix this.\n. As not using the option smooth: true doesn't really fix the issue, I would leave it open. Thanks.\n. Hi guys,\n84ac556dce8ef88264f5568cfd4abf12d1b30e18 lets the linkView to skip the label update if it can't get the connection length. It seems like FF manage to return the correct connection length in the most cases (at least in FSA demo) so it's better than let it crash.\n. It's fixed and will be part of our next release that comes tomorrow.\n. Hi Mario,\nthat has been fixed in ea3182953737498c3a2915d44442d87d325c8e61.\nThanks\n. fixed in c77599b5e5991e690c85469c8b8b70249c2da28c\n. Hi,\nare you using SVG filters or clip-paths on the node? Best if you can provide us with an example.\nThanks\n. Your example is not a link.\n. That's better! Thanks\n. Hi Mario,\nplease take a look at the following JointJS+ issue:\nhttps://github.com/clientIO/JointJS_plus/issues/29\nBasically you had two options how to deal with this. One was to disable `outline' property and add some custom styles.\n```\n.element.highlighted {\n    outline: none;\n}\n.element.highlighted rect {\n    stroke: red;\n    stroke-opacity: 0.8;\n}\n```\nThe other was to add filterUnits: objectBoundingBox attribute in the filter definition and play around with its arguments.\nfilter: {\n    name: 'dropShadow',\n    args: { dx: 2, dy: 2, blur: 1 },\n    attrs: { filterUnits: 'objectBoundingBox' }\n}\nHope that helps.\nRegards,\nRoman\n. Hi Mario,\nthank you, we're glad you like the library.\nTo get rid of those outline artefacts you might try the following.\n\nThe second method almost works. It correctly outlines a node when\nselected, but unhighlight() leaves part of the outline in place that as\nsoon as I move the node disappears.\n\n```\n // original outline\n.highlighted {\n    outline: 2px solid #FF0000;\n }\n// outline artefacts fix\n.element:not(.highlighted) {\n    outline: 2px solid rgba(0,0,0,0);\n}\n```\nRegards,\nRoman\n. Rounding removed in 2a5cc19d9845c7a2c7b4e3a13bef8ca743f8836a.\n. Fixed in v0.9.1 (it can be downloaded from https://github.com/DavidDurman/joint/tree/master/dist)\n. Fixed with joint.util.shapePerimeterConnectionPoint(linkView, view, magnet, ref).\n. Fixed in #135.\n. Hi,\nvar svg = V('svg').node;\ncreates a SVG element and sets the namespace attribute automatically (<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" />, https://github.com/DavidDurman/joint/blob/master/src/vectorizer.js#L41).\nsvg.getAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns')\nreturns \"http://www.w3.org/2000/svg\" correctly.\nsvg.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', 'http://www.w3.org/2000/svg')\nreplaces the xmlns attribute with the identical one. I can't see any problem here. Please, can you be more specific?\n. Hi, can you provide us with an test case?\n. No problem.  From what you've posted I am not able to see anything wrong about findViewsFromPoint(). I've created a simpler test case (your example contains lots of code that is not related to this issue).\n``` javascript\nvar graph = new joint.dia.Graph;\nvar paper = new joint.dia.Paper({\n    el: $('#paper'),\n    width: 650,\n    height: 400,\n    gridSize: 20,\n    model: graph\n});\nconsole.log(paper.findViewsFromPoint({ x: 30, y: 30 }));\nnew joint.shapes.basic.Rect({\n    position: { x: 10, y: 10 },\n    size: { width: 100, height: 40 }\n}).addTo(graph);\nconsole.log(paper.findViewsFromPoint({ x: 30, y: 30 }));\n```\nCould you extend this code in order to show the bug?\n. Are you changing id attribute on the model anywhere in your code? e.g\njavascript\ncircle.set('id', 'Join');\n. Well, code you have sent works fine for me. I won't get \"Uncaught TypeError: Cannot read property 'el' of undefined\" unless I add circle.set('id', 'Join'); at the end.\n. Please use Google Groups or Stackoverflow in order to get an advice on this. Cheers.\n. Please use Google Groups or Stackoverflow in order to get an advice on this. Cheers.\n. Hi, please note that uml.Interface extends the uml.Class so it inherits all the methods & attributes.\n. See #716.. Hi,\ndeclare the rect as the magnet\ntextBlockModel.attr('rect', { magnet: true });\nand disallow the foreign object to become the target of mouse events via css\n.fobj { pointer-events: none; }\nAlternatively do this\ntextBlockModel.attr({\n    'rect': { magnet: true },\n    '.fobj': { 'pointer-events': 'none' }\n})\n. Fixed in next release.\n. For 3.: implemented in 63c0616abc3aa011d87fa08db1d52e82bc80f50f. Please check the linkPinning paper option. When set to false no unconnected links are permitted.\nWe're about to release v0.9.5 next week.\nWe're planning to come out with v1.0 this year.\n. Fixed in next release.\n. Hi Jose,\ncould you please provide us with the inspector input type definition?\n. Thanks. I can't reproduce what you've described. The first item of the array built by Inspector is always an object.\n{ input: '', operation: 'GroupBy', output: ''}\nHowever I noticed that if I set config attribute manually to [null] this error occurs.\nIt's been fixed as you proposed with a tiny difference.\nwhile (keys.length) {\n                key = keys.shift();\n                if (Object(obj) === obj && key in obj) {\n                    obj = obj[key];\n                } else {\n                    return undefined;\n                }\n             }\nWe don't want joint.util.getByPath([null], '0.property') to return null but undefined instead (similar to joint.util.getByPath([], '0.property')).\njoint.util.getByPath([5], '0.property') also threw an error. That's why we are checking if obj is an object (Object(a) ===  a).\nCheers!\n. Fixed in #135.\n. Would this change only work for you?\njoint.dia.Graph.prototype.parse = function (json, opt) {\n       this.fromJSON(json, opt);\n       return null;\n };\n. Fixed in c55fc4099585b2afe93bd9d6c8fe96f6c9cdafd7.\n. The solution introduced by this PR is breaking the JointJS to run in NodeJS environment. (try make stest).\nPS: we are working on this issue and should be able to release it in a week or two.\n. Duplicate of #135.\n. Hi Kevin,\nwe suggest to allow users specify the percentage for all ref's instead of multiplier (as in CSS). e.g.\n{ 'ref': '.body', 'ref-x': '300%', 'ref-y': '50%' }\n// equivalent to '3x' and '0.5'\nWhat do you reckon?\n. Users will be able to specify all ref attributes as a percentage of the referenced value (e.g. 'ref-x': '300%') in very next JointJS release. Thanks for suggestion Kevin.\n. Please use jQuery version < 2.1.1 for now or => 3.0 once released.\n. I suggest to use jQuery v2.2.1 if possible. If this is not an option a polyfill is needed. e.g.\n``` javascript\nif (SVGElement.prototype.contains === undefined) {\n    SVGElement.prototype.contains = function(el) {\n        return $.contains(this, el);\n    };\n}\nif (SVGElement.prototype.getElementsByClassName === undefined) {\n    SVGElement.prototype.getElementsByClassName = function(className) {\n        return this.querySelectorAll('.' + className);\n    };\n}\n``\n. Hi Jeffrey,\nwhen you have some spare time please try to create a testcase. We are not able to reproduce, what you just described. No errors occur.\nAlso note that we are not able to merge your PR as it does not satisfy our code styling rules (Runmake cstest) and as the code indentation has been fixed long time ago,  the PR has to be rebased with master branch first.\n. Thanks @rarous for pointing this out.\n. Fixed in 96ff19fe9c781a534ca487476206f2e479b8a55d.\n. Not that easy right now. It's on our roadmap though.\n. Implemented in Rappidv1.7`.\n. Hi Juan,\nmake sure that all your elements are defined in joint.shapes.yourNamespace.\nI suggest to read this thread\nhttps://groups.google.com/forum/#!topic/jointjs/juO8r3-BtpU.\nRegards,\nRoman\nOn 16 March 2015 at 05:59, Juan Carlos Fiorenzano notifications@github.com\nwrote:\n\nI did the following:\nI made a function called saveScene and other called loadScene\nsaveScene: function()\n {\n     this.prueba = graph.toJSON();\n }\nand great in prueba there is a very pretty JSON, but when I did this:\nloadScene: function()\n {\n     graph.fromJSON(this.prueba)\n }\nthe following message appear in my console:\nUncaught Error: properties.markup is missing while the default render()\nimplementation is used.\nThis is a recurrent problem in google group. But the answer is make my own\nfromJSON function. I don't want to do my own function, this function\nare already defined by you, then tell me why don't work. In some post say\nthat some elements are not defined, but how these is possible I only push a\nbutton called saved, and after I push a button called load, nothing change\nall elements are defined, then how is possible that message appear.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DavidDurman/joint/issues/122.\n\n\nRoman Br\u00fcckner\nCTO at client.io\n+420 776 504 406\nroman@client.io\n. Thank you!\n. Please use Google Groups or Stackoverflow in order to get an advice on this. Cheers.\n. Hi Marc,\nthe graph attribute should be called model.\nvar defaultPaperOptions = {  el: target, width: target.width(),\nmodel: graph, interactive: true, gridSize: 1 };\nRegards,\nRoman\nOn 13 April 2015 at 08:45, Marc Teichtahl notifications@github.com wrote:\n\nI am currently refactoring my jointJS code out of the main js code and\ninto a module\nI an exporting the following (with paper and graph module variables)\n\"create\": function (graphTarget,options) {\ntarget = $(window.document.getElementById(graphTarget));\nif (graph === undefined)\n  graph = new joint.dia.Graph();\nvar defaultPaperOptions = {\n  el: target,\n  width: target.width(),\n  graph: graph,\n  interactive: true,\n  gridSize: 1\n};\noptions = _.extend(defaultPaperOptions, options);\npaper = new joint.dia.Paper(options);\nreturn this;\n}\nHowever, I get the following JS errors - ore.js?v=1428907215:61030\nUncaught TypeError: Cannot read property '_listenId' of undefined'\nThis is occuring when new joint.dia.Paper(options) is being called\nI have checked target which is\n[div#schemaChart.text-center.ibox-content, context:\ndiv#schemaChart.text-center.ibox-content, jquery: \"2.1.3\", constructor:\nfunction, selector: \"\", toArray: function\u2026]\n0: div#schemaChart.text-center.ibox-content\ncontext: div#schemaChart.text-center.ibox-content\nlength: 1\nproto: jQuery[0]\nAny guidance would be appreciated\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DavidDurman/joint/issues/128.\n\n\nRoman Br\u00fcckner\nCTO at client.io\n+420 776 504 406\nroman@client.io\n. Hi Mark,\nthis error can occur when a link points (via source or target) to an\nelement which is not part of the graph (or there is no view rendered on the\npaper for this element).\nYou saying the code works fine when is transposed out of the module, so I\nexpect the error is not related to an inconsistent adjacency list.\nCould you send me an example that I can run and debug?\nCheers,\nRoman\nOn 13 April 2015 at 23:53, Marc Teichtahl notifications@github.com wrote:\n\nAny advice would be helpful\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DavidDurman/joint/issues/128#issuecomment-92511542.\n\n\nRoman Br\u00fcckner\nCTO at client.io\n+420 776 504 406\nroman@client.io\n. I mean a working example of the app (html + js) that I can run in browser\nand see where it fails. Cheers.\nOn 14 April 2015 at 14:13, Marc Teichtahl notifications@github.com wrote:\n\nRomance\nA copy of the adjacency list?\nOn Tue, Apr 14, 2015 at 3:44 AM -0700, \"Roman Bruckner\" \nnotifications@github.com wrote:\nHi Mark,\nthis error can occur when a link points (via source or target) to an\nelement which is not part of the graph (or there is no view rendered on the\npaper for this element).\nYou saying the code works fine when is transposed out of the module, so I\nexpect the error is not related to an inconsistent adjacency list.\nCould you send me an example that I can run and debug?\nCheers,\nRoman\nOn 13 April 2015 at 23:53, Marc Teichtahl notifications@github.com\nwrote:\n\nAny advice would be helpful\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DavidDurman/joint/issues/128#issuecomment-92511542.\n\n\nRoman Br\u00fcckner\nCTO at client.io\n+420 776 504 406\nroman@client.io\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DavidDurman/joint/issues/128#issuecomment-92786478.\n\n\nRoman Br\u00fcckner\nCTO at client.io\n+420 776 504 406\nroman@client.io\n. @mteichtahl an access to your repo will do I guess.\n. Thx Marc, I'll have a look.\n. Hi Mark,\nI'm actually having problems to get it running (vagrant up spits out an error with funny characters T\u2424\u240a SSH \u240c\u23ba\u2514\u2514\u2592\u253c\u240d \u23bc\u240a\u23bd\u23bb\u23ba\u253c\u240d\u240a\u240d \u252c\u240b\u251c\u2424 \u2592 \u253c\u23ba\u253c-\u2265\u240a\u23bc\u23ba \u240a\u2502\u240b\u251c \u23bd\u251c\u2592\u251c\u2524\u23bd.). Could you make your server available via ngrok and send me an url to roman@client.io?\n. Thanks for finding this out. You've done a good job here! We'll start working on this soon.\nBased on what are saying the safest way might be to make selectors in the following way:\n[model-id=\"ID\"] > g:nth-child(1) > g:nth-child(3) > g:nth-child(1) > g:nth-child(1)\nAnd keep in mind that these selectors are meant to be used with querySelector only (not jQuery).\n(We'd like to get rid of jQuery dependency eventually anyway)\nUsing pseudo-class :scope would be also an interesting solution.  Unfortunately it's not supported across all browsers yet.\n:scope > g:nth-child(1) > g:nth-child(3) > g:nth-child(1) > g:nth-child(1)\n. Fixed in 96ff19fe9c781a534ca487476206f2e479b8a55d.\n. Thanks James for this PR! The issue made manhattan routing almost unusable with embedded elements.\nPlease let me know if you are going to implement the getAncestors() method I proposed. I would merge it as it is and do it myself later on otherwise. Cheers!\n. One more comment about code styling :) Can you run jscs src/joint.dia.cell.js and jscs plugins/routers/joint.routers.manhattan.js, fix the code styling issues and push the changes.\nYou can even run jscs -x filename to automatically fix issues. It should handle most of them. Other needs to be fixed manually.\nSorry, I do realize that it is quite a new thing and it has not been documented yet.\n. No way! It's the most beautiful code I've seen for a long long time! :) But..\nIt's different.\nIt's different from the rest of the library.\n. N1 James! Thanks.\n. A unit test would be also nice. But who can ask for that, right? ;)\n. A test is there. I've also changed that line to find a parent cell. Thx once again.\n. Hi James,\nI like the idea. But I'm getting some unpleasant results in some cases.\nPlease open demo/basic.html and the web inspector. Run the following code.\ngraph.on('batch:start', function() { console.log('start'); });\ngraph.on('batch:stop', function() { console.log('stop'); });\nAnd now\n1) Create a new link by drag and drop a port. You can see start, start, stop printed in the console. And also there is an unwanted vertex created just next to the port.\n2) Remove a link by clicking the remove button on the link. You can see start, start, stop printed in the console (means that there is one pending batch).\n. Thanks!\n. Can not reproduce. Can you create a JSFiddle? What browser do you use?\n. Fixed in 14c96c184f3f52adb1980e5caf012e695136557e (ports reimplemented).\n. No 1. Thx!\n. Great! Thank you!\n. Hi, the tutorial is not meant to work with the manhattan router. It's just an example how to display multiple links with a simple router. Note that the demo doesn't even allow you to create vertices.\n. Thank you Kevin for pointing that out. The fix is now implemented in #502.. We'll announce a breaking change in the next release. Hope not many developers will get affected (you are right - only those using custom markups for ports with no port-body class). This PR is in line with original idea to select ports by a class name and not by specific tag. Thx!\n. Duplicate #3.\n. Make sure you have all the DirectedPlugin dependencies included. i.e. graphlib & dagre.\n. Thx!\n. Fixed in 8cb951e391781812e574d9558d979aeea52e75b8.\n. Hi Randy,\nNote that vectorizer supposed to have no geometry dependency at all. Your changes and the test is a perfect solution before making vectorizer standalone takes a place.\nThumb up for all changes you've made. Thank you.\n. Seems useful. Thank You!\n. Implemented in 8cb951e391781812e574d9558d979aeea52e75b8.\n. We're working on it as we speak. Bear with us please.\n. It's live again. We do apologize for any inconvenience this may have caused.\n. Hi Mickey,\nthe issue you mentioned did exist (Not sure why updating the jointjs helped in your case though). Fixed in bdf4940647f8f4680dfb846fb09a70a55f497ce4. Thanks for pointing that out!\n. What JointJS version are you using? Does joint.g and joint.V work for you?\n. Well, that makes sense. Thank You!\n. Fixed in 62b444f0b1473331b7758a95c83c8c05a35d5722.\nIt's possible now to pass a function to elementView/linkView paper option and decide what view to use based on the model.\nvar paper = new joint.dia.Paper({\n  elementView: function(cell) {\n    if (cell instanceof joint.shapes.foo.Bar) {\n      return joint.shapes.foo.barView\n    }\n    return joint.dia.Element;\n  }\n})\nIt also introduce custom namespaces for cells and cellViews (doesn't have to be joint.shapes necessary).\n```\n    var paper = new joint.dia.Paper({\n      cellNamespace: {\n         foo: { barView: FooView, bazView: BazView }\n      }\n    })\nvar graph = new joint.dia.Graph({ graphName: 'MyGraph' }, { cellNamespace: {\n       foo: { bar: FooModel, baz: BazModel }\n   }});\n```\nThe cell type is basically a path with '.' delimeter. e.g.\n{ type: 'foo.bar.baz' } // ==>\nnamespace = `{ foo: { bar: { bazView: [will use this view] }}}`\nPlease check the commit for more informations. There is no documentation yet.\nThank you for your contribution.\n. Thank You!\n. Merged.\n. Well spotted. Thank You.\n. Ok, here it is.\n1. (bunch of changes, dist files was not updated) d45983f65d02cf10a510a281032848ba2fffce75 the test failed.\n2. (only dist updated) bf1c2eb03ecb84b74ce2cd4e8878999b8fc359c5 the test succeed.\n. Thank You!\n. It seems this happens when an svgPath has invalid or no d attribute.\nIE returns an empty bounding box.\n<g>\n  <path d />\n  <rect width=\"100\" height=\"100\" x=\"10\" y=\"10\" />\n</g>\nIE returns { x: 10, y: 10, width: 100, height: 100 }\n<g>\n  <path d=\"M 10 10 100 100\" />\n  <rect width=\"100\" height=\"100\" x=\"10\" y=\"10\" />\n</g>\n. Please always make sure there is a valid d attribute on all SVGPath elements.\nFixed in d45983f65d02cf10a510a281032848ba2fffce75.\n. Fixed in v2.1.3.. It's definitely a good way to go - wrapping the manhattan. I am closing the issue.\n``` javascript\n// as @nomeata suggested\njoint.routers.wrappedmanhattan = (function (){\nvar manhattan = joint.routers.manhattan;\nreturn function(vertices, opt, linkView) {  \n    var startDirections = ['right']; // somewhat sensible default\n    var endDirections = ['left']; // somewhat sensible default  \n    if (this.sourceMagnet) {\n      startDirections = [this.sourceMagnet.getAttribute('orientation')];\n    }\n    if (this.targetMagnet) {\n      endDirections = [this.targetMagnet.getAttribute('orientation')];\n    }\n    var args = {\n      paddingBox: function () {return {x: -5, y: -5, width: 10, height: 10}},\n      startDirections: startDirections,\n      endDirections: endDirections\n    }\n    return manhattan.call(this, vertices, _.extend({},args,opt), linkView);\n  };\n})();\n```\n. Fixed in v0.9.6.\n. Thanks for the info. We'll add it ASAP.\nhttps://github.com/clientIO/joint/blob/master/src/joint.dia.paper.js#L89-L91\n. Hi Valery, looks good. Could you please make it as one commit?\n. Hi,\ncould please check out this thread:\nhttps://groups.google.com/forum/#!topic/jointjs/QKSkIKbecSs.\nBest,\nRoman\nOn 17 September 2015 at 22:29, Mickey notifications@github.com wrote:\n\nI have a derived DEV shape:\njoint.shapes.devs.SBModel = joint.shapes.devs.Model.extend({\n    portMarkup: '',\n    defaults: joint.util.deepSupplement({\n        type: 'devs.SBModel',\n        attrs: {\n            '.body': {stroke: 'blue', fill: 'lightblue'}\n        }\n    }, joint.shapes.devs.Model.prototype.defaults)\n});\njoint.shapes.devs.SBModelView = joint.dia.ElementView.extend(joint.shapes.devs.ModelView);\ninitializing it:\nvar m1 = new joint.shapes.devs.SBModel({\n    position: { x: 50, y: 50 },\n    size: { width: 90, height: 90 },\n    inPorts: ['in1','in2'],\n    outPorts: ['out'],\n    attrs: {\n        '.label': { text: 'Model', 'ref-x': .4, 'ref-y': .2 }\n    }\n});\ngraph.addCells([m1]);\nThe ports are not rendered:\n[image: image]\nhttps://cloud.githubusercontent.com/assets/220427/9945047/b248ac44-5d93-11e5-9cb2-46dfb1db0e23.png\nand the markup shows that the ports are not rendered at all:\n[image: image]\nhttps://cloud.githubusercontent.com/assets/220427/9945067/cb04125a-5d93-11e5-9546-9ba49125d048.png\nAm I doing something wrong? It worked in v0.9.4.\nThank you.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/clientIO/joint/issues/184.\n\n\nRoman Bruckner, CTO\nclient IO\nhttp://client.io http://www.client.io/\nhttp://jointjs.com\n+420 776 504 406 <%2B420%20774%20346%20225>\n. Hi,\nok I see.\nBackbone.View.extend(function() {}) does not do anything.\ntry the following:\njoint.shapes.devs.SBModelView = joint.shapes.devs.ModelView;\nBest,\nRoman\nOn 17 September 2015 at 22:58, Mickey notifications@github.com wrote:\n\n@kumilingus https://github.com/kumilingus, I have tried it, but it\nstill does not work.\nHere is a jsFiddle demosntrating the derived vs original models:\nhttps://jsfiddle.net/mickeyvip/g9etgzew/\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/clientIO/joint/issues/184#issuecomment-141226574.\n\n\nRoman Bruckner, CTO\nclient IO\nhttp://client.io http://www.client.io/\nhttp://jointjs.com\n+420 776 504 406 <%2B420%20774%20346%20225>\n. Fixed in v1.0.1 - caused by joint.shapes.basic.PortsModelInterface (deprecated now).\n. Will be part of the JointJS v0.9.6.\n. Thanks a lot!\n. Right. Each time an Element model triggers the change:size event, the associated ElementView(s)  executes the resize() method.\n. Answered on SO.\n. Not possible. Note that one cell can have multiple views.\ne.g. http://jointjs.com/tutorial#multiple-papers\nYou have to explicitly tell which view do you want to find.\n. Could you please try to change type attribute of the joint.shapes.devs.Container to devs.Container (not to devs.TooledModel).\n. Hi, width and height are not numbers but strings in your JSON.\n. You are welcome.\n. Hi, we should really reset _mousemoved on pointer down. Thank you for reporting this.\n. Fixed in v0.9.6 (_mousemoved counter is alwyas reset on mousedown event).\n. please try to instantiate the paper after you define all your custom elementViews.\ne.g.\nvar paper = new joint.dia.Paper({ ... });\n joint.shapes.html.ElementView = joint.dia.ElementView.extend({ ... });\nreplace with\njoint.shapes.html.ElementView = joint.dia.ElementView.extend({ ... });\nvar paper = new joint.dia.Paper({ ... });\nThis bug was introduces in 0.9.5. Will be fixed in the following release.\n. Hi Kevin, thanks for this. I've made minor changes so all the tests pass.\n. A workaround for time being that might help someone.\n. Here's yet another workaround (using a custom attribute).. Duplicate of https://github.com/clientIO/joint/issues/198\n. In JointJS v1.0.2 it should be possible to simulate stopPropagation by setting evt.data.guarded = true.\nhttps://github.com/clientIO/joint/blob/master/src/joint.dia.paper.js#L1008-L1010\n. Fixed by 48db61cd85b9360558e365263fcaf0164908d1ff.. Hi,\nUnfortunately, a new version of Chrome (48) removes a feature that is core to JointJS/Rappid. We prepared a polyfill to make sure your applications will work with all future versions of Chrome. Before we release a new version of JointJS/Rappid, please include the following lines before you load your application JavaScript:\nSVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function(toElement) {\n    return toElement.getScreenCTM().inverse().multiply(this.getScreenCTM());\n};\nYou can alternatively use the most recent version of JointJS from the GitHub repository ('dist' folder).\n. \nI am not sure here. It's necessary to use no-break spaces otherwise IE would collapse all spaces into one. Where does it actually cause problems?\nNote that if you need to convert a DOM Subtree to a text (e.g data uri (data:image/svg+xml;) you can post-process it. \n\n. Looks good.\n1. Please rebase.\n2. Could you update README.md?\n. > There are merge commits. Are you sure about that?\nPositive. There are merge commits with master. Rebase against master. git rebase upstream/master\n. Is grunt dist in README.md?\n. Nice!\n. For automatic layout please use one of the layouts provided\n- DirectedGraph (wrapper for Dagre library)\n- TreeLayout (proprietary). Does it happen on IE only? It could have something to do with default style attribute values. Setting the text color explicitly should resolve the issue.\njavascript\nlabels: [{ position: 0.5, attrs: { text: { fill: '#f6f6f6' }}}]\n. I like that. I would call methods startBatch() and stopBatch() though (verbs).\n. Fixed in v1.0.1.\n. That's handy. Thanks.\n. joint.shapes.basic will be deprecated soon. Use joint.shapes.standard instead.. Carlo, thanks for your time. It's a really great help.\n. I'm glad to hear that!\nBtw I'd like to pull this PR first and test it manually before merging. For that I'll try find some time tomorrow.\n. Hi Carlo, sorry for the delay. Could you please rebase commits into a single commit? So it doesn't pollute the history that much. Thanks.\n. Thank you!\n. That should be out before end of the March. I think we are going for 0.10.0 though as there were some new features added.\n. Could you install JointJS from Master branch directly?\nnpm install git+https://git@github.com/clientIO/joint.git --production\nOr in package.json\ndependencies: { jointjs: \"git+https://git@github.com/clientIO/joint.git\" }\n. Definitely. https://github.com/clientIO/joint/pull/285/files\n. Hi Peter,\nit's a very good point. I would move joint.dia.LinkView.prototype.can() to joint.dia.CellView and use it in joint.dia.ElementView as you suggested.\nWe could also introduce a new feature called e.g. createLink just for this case.\ninteractive: { createLink: true, pointerdown: false }\nThat would disables translating but allows link creation.\nBest, Roman\n. I can imagine there could be a unit test that would add elements in a batch and sinon would spy on paper.sortViews to make sure the method was called just once.\n. @B3rn475  ready to be merged?\n. Thanks again!\n. Note there is an API proposal ( #407 ) that should help to solve the issue. Please bear with us.\n. See #407 . You might want to use the oneSide router. \njavascript\nnew joint.dia.Link({ router: { name: 'oneSide', args: { side: 'right' } }});\n. Can we add this router as default to the paper?\nhttps://github.com/clientIO/joint/blob/master/src/joint.dia.paper.js#L84\n. Thx Carlo, I'm waiting for the rebase.\n. ~~Flashing fixed in #632.~~\nThe issue still presists.. Ready for merge now.\n. See #407.. Sure, done.\n. Hi Asher,\nyou can prevent this by using guard paper option. For instance:\njavascript\nvar paper = new joint.dia.Paper({\n    el: $('#paper'),\n    width: 650,\n    height: 400,\n    model: graph,\n    guard: function(evt) {\n        // guard the event when the second (usually right) button is pressed.\n        return evt.button === 2;\n    }\n});\n. Hi Asher,\nI think the event default preventing should happen only when there was a preceding pointerdown event, that was not guarded. i.e.\njavascript\n    pointermove: function(evt) {\n        if (this.sourceView) {\n            evt.preventDefault();\n            evt = joint.util.normalizeEvent(evt);\n            // Mouse moved counter.\n            this._mousemoved++;\n            var localPoint = this.snapToGrid({ x: evt.clientX, y: evt.clientY });\n            this.sourceView.pointermove(evt, localPoint.x, localPoint.y);\n        }\n    },\nWould that solve your problem? Please note that it might be also necessary to override user-select CSS rule on the viewport.\nBest,\nRoman\n. There is something wrong with the indentation inside the code blocks.\n\n. - [x] remove character entities from code blocks\n\n- [x] fix links dia.Element.getBBox -> dia.Element.prototype.getBBox and  dia.Paper.cellViewNamespace -> dia.Paper.options.cellViewNamespace.\n. \ud83d\udc4d \n. Hi Albert,\nI think the slowness is caused by the linkConnectionPoint: joint.util.shapePerimeterConnectionPoint paper option. This shapePerimeter utility internally uses sampling method to determine the connection point. And that is incredible slow.\n. Hi @albertmarkish & @kiragona, are you saying that setting paper.options.linkConnectionPoint = null does not improve the performance? Or that not using shapePerimeterConnectionPoint is not an option for you?\n. How about the following workaround?\n1.  Make the link connection point always be the center of an element/port.\njavascript\npaper.options.linkConnectionPoint = function(linkView, view, magnet) {\n    return g.rect(V(magnet || view.el).bbox()).center();\n}\n1. Make sure that z index of a link is smaller than element's one.\njavascript\nlink.set('z', -1);\n. I suggest to use a different approach. All the connection points could be calculated in pure Javascript. Here you can find the changes made to ERD demo to make the dragging much faster.\n. Fixed with link's connectionPoint set to  boundary.. @GeorgiyZhuravlev do you experience the same problems with Rappid v1.7.2?\n@sbowler yes, we would be open to a PR (lodash v4.x). Note there is a Dagre fork repository (DirectedGraph plugin dependency) that uses also v4.x that might be needed. Bundling should still take a place afterwards though.\n. JointJS/Rappid is now compatible with lodash v4. For the integration details please see https://github.com/clientIO/joint/tree/master/demo/lodash4.. Hi, would you mind create a PR for this?\nSorry for late responses to your issues. We are currently incredibly busy with Rappid v2.0 release and other projects. Cheers.\n. A pull request.\n. Implemented in #442. Thank you for the suggestion.\n. It has been resolved in v1.0.1. There is a separate logic for port ids and labels now. Please refer to JointJS docs.\nNote this does not apply for joint.shapes.devs.Model as this aims to simplify the ports API only and keep the backwards compatibility. Overriding this method would be also a way to go though.\n. This is the place. Thank You! Fixed in 9368a96404e7979fc31de0a9b233f770b33a1e57.\n. Hi,\nyou can use foreignObject in the markup to render HTML inside the SVG elements (not supported in IE).\nOther than that HTML can be either above or under the SVG. i.e. some of the HTML components could be appended and the others prepended (https://github.com/clientIO/joint/blob/master/demo/html/html.js#L74).\n. Hi Matthew, any chance you start using the latest JointJS (the Master branch) ? There is a brand new API for ports, that would definitely solve the problem. You would need to build the documentation and learn it from there though.\nUsing [port=<port_id>] in selectors seems not to be reliable right now (ports DOM Elements does not have port attribute at the time of querying). We need to take a deeper look into it. I can think of some workarounds how to set a single port color, but they are no good. \n- using a class name in the selector instead i.e. elem.attr('.port1 circle/fill', 'rgb(200,200,0)');. (bad if you add & remove ports) \n- create a style tag dynamically and append it to the DOM <style>[model-id=\"<model.id>\"] [port=\"<port.id>\"] { fill: rgba(200,200,0); }</style>.\nWhat is your use-case?\nThank You,\nRoman\n. Please see the following SO thread:\nhttp://stackoverflow.com/questions/39249034/creating-dynamic-links-on-pointerdown-event-jointjs/39299645#39299645\n. Hi Matthew,\nI think you have pointed at a deficiency here. In order to change a specific port attributes, one has to get the index of the port first and then build the path and set the value.\nWe should probably introduce another API method that would help with these cases.\nFor instance:\njavascript\n    element.portProp('port-id', 'attrs/.port-body/fill-opacity', 1);\n    // alternatively\n    element.portProp('port-id', 'attrs/.port-body', { 'fill-opacity':  1 });\nThank you for the feedback.\n. Fixed in 75914231b41b8c8bb23000041dde3644447a45ce.\n. Hi, it was indeed a defect. You never knew which attribute would be used if both ref-x and ref-dx were used at the same time. They now add up instead (none of them being ignored).. There are no plans migrating JointJS to React/Redux. We might create some examples showcasing integration between JointJS and React though (or make the integration smoother, if there are any issues).. KitchenSink application along with React is part of Rappid v2.4.0.. Links & Elements (as defined now) needs to be visible when being rendered / updated due to the size measuring.\nYou might try to use the following link definition though (using SVGMarkers for arrowheads).\nhttp://jsfiddle.net/kumilingus/fjzvqhhk/\n. Can we also document the second option parameter in joint.dia.ElementView.prototype.highlight / joint.dia.ElementView.prototype.unhighlight please?\n. In place since v1.0.0.\n. Fixed.. Hi, this was already fixed in the master branch of the repository (Please see demos/erd/index.html). In an older version you should avoid using joint.util.shapePerimeterConnectionPoint for the linkConnectionPoint paper option.\n. Hi Avneesh,\nplease note that an arbitrary element can have ports now (using the new Ports API) and a special view for rendering ports is no longer required (dia.ElementView takes care about rendering now).\nIn your example you are extending the devs.Model shape. It is a specific shape, which simplifies the current ports API by introducing inPorts and outPorts array attributes that held the ports. \nThose are missing in your JSFiddle. For more info please see http://resources.jointjs.com/docs/jointjs/v1.0/joint.html#shapes.devs.\nIn order to fix the issue you should inherit from e.g. basic.Generic shape instead of devs.Model. Please see the updated JSFiddle.\nhttps://jsfiddle.net/fjhv8L6f/2/\n. Hi\nYes, we call it embedding in JointJS. Please see joint.dia.Element.prototype.embed / joint.dia.Link.prototype.embed docs for more info.\nDEMO\n. joint.dia.Link is deprecated. Use joint.shapes.standard.Link together with joint.linkTools (touch events for Vertices tool works as expected now).. Hi, using percentages for element position or size is not supported. What is your use-case? Can you use numbers instead?\n. > Oh... interesting. It works to position them. I am trying to layout a non-interactive flow-chart style diagram.\nWell, it does not even position elements (it might position the HTML elements rendered above the paper, but definitely not the SVG elements - that's why you saw console errors).\n\nWill changing those elements' dimensions, just automatically update the paper's view?\n\nRight. ElementViews listen to their underlaying models and updates automatically.\nAnother option is to use html.Element definition from this demo and zoom the paper based on the window size.\nNote that there is no html.Element defined in JointJS itself, so the implementations might vary.\n. Thanks!\n. Right. jQuery v2.4.4 can not handle setting classNames on SVGElements.\n. Hi, the TreeLayout plugin (part of the Rappid) is capable of laying out elements this way. I'm using bottom-right (BR) layout in the image below.\n\nNote that hiding links or having buttons as part of the shape is also possible in JointJS. \nhttp://resources.jointjs.com/demos/tree\nhttp://resources.jointjs.com/demos/orgchart\nAdditionally you can integrate the TreeLayoutView plugin to enable drag & drop functionality.\n. > Can i use Json to generate this tree?\nYes. Please see graph.toJSON() & graph.fromJSON().\n\n\n\nThis use-case is well supported by JointJS.\n. Duplicate of #485.. For the bounding I suggest to use the paper restrictTranslate option. Here you can return a rectangle in which the element can move.\nIn Rappid v2.0.0 there is data-lane-path attribute added to every lane SVGElement. You can for instance store the path (e.g. lanes/sublanes/1) to the lane on each element you'd like to restrict its movement and implement restrictTranslate using this path like below.\n``` javascript\npaper.options.restrictTranslate = function(cellView) {\nvar cell = cellView.model;\n  var embeddedInLane = cell.get('embeddedInLane'); // for example \"lanes/sublanes/1\"\n  var parentId = cell.get('parent');\n  if (!embeddedInLane || !parentId) return false; // no restriction\n// find the parent view (pool)\n  var paper = cellView.paper;\n  var parentView = paper.model.getCell(parentId).findView(paper);\n  // find the lane node\n  var vLane = parentView.vel.findOne('[data-lane-path=\"' + embeddedInLane + '\"]');\n// restrict translate to the bounding box of the lane\n  return vLane.bbox(false, paper.viewport);\n}\n```\nSimilary for the element positioning inside a specific lane.\n. Hi,\nThat is something, what is not supported by the Dagre itself. There is not much, we can do about it unfortunately.\nI suggest to post your issue directly to the Dagre Repository (even so the repo is currently not being actively maintained).\nThe only way I can think of how to approach this issue now is to omit the links between containers when calling layout.\nExample:  https://jsfiddle.net/pgu8acfn/6/\nDagre-d3 Issue: https://github.com/cpettitt/dagre-d3/issues/261\n. This is possible. Our unit tests are run via phantomjs.. The joint- prefix is added elsewhere. Specifically here.\nPlease make sure you are using recommended jQuery version (not all versions support adding/removing classNames to SVG Elements).\n. What do we need to change in JointJS to make DirectedGraph play well with AMD/RequireJS? Cheers.. Good catch! Thank You.. Yes. Please run npm install; grunt build:all first.\nDemos - just open the html file in a demo directory (usually index.html).\nDocs - start a web server (e.g. http-server from NPM) on port 8080 from the JointJS root directory. Open http://localhost:8080/build/docs/joint.html.. Duplicate of #455.. Hi,\nsetLinkVertices option  is a boolean - telling whether you want the layout to set the vertices on the links or not.\nsetVertices option is a method to set actual vertices on links. For instance you can use transitions here to change the positions of vertices in animated manner.\nWith your solution one would have to pass a \"no operation\" method as setVertices when setting vertices is not desired  i.e.  setVertices: function() { /* noop */ } \n. I see! The docs are wrong. We should update them instead. Or change the behaviour little.\nsetLinkVertices: false - do not set vertices\nsetLinkVertices: true - set vertices using default approach\nsetLinkVertices: function() {} - use the function. Related to https://bugs.chromium.org/p/chromium/issues/detail?id=5212. Fixed by emitting a synthetic click event on pointerup.. Hi, could you please create a JSFiddle which demonstrate the issue? Do you use anything unusual in your shape definition ( filters, gradients )? Is this happening also in any of our online demos?\nThank You,\nRoman. Hi, I am now able to reproduce the issue (or similar) in our KitchenSink online demo (http://resources.jointjs.com/demos/rappid/apps/KitchenSink/index.html).  We'll look into it.. Not 100% sure that's related but in Safari one have to wait for document ready event before rendering the paper (especially when some external resources (fonts) are included on the page).. Hi, what version of chrome do you use? What shapes (types) are in the graph at the time of taking the screenshot?. Hi Issac, we are not able to reproduce it using the exact same version of Chrome. Could you try to remove the shape-rendering attribute on the Navigator SVG document and see if it helps?\n\n. I am sorry @issacjxjx for the delay. Is this still an issue?. Fixed in #491. We keep the jump naming to maintain the  backwards compatibility.. Changing the markup and using special attributes will be possible in the next release. See https://github.com/clientIO/joint/pull/502.. Hi Mike, in a week time. Note that JointJS v1.0.3 is already compatible with jQuery v.3.1.1.  So feel free start using the latest jQuery now.. What type of element do you use? How do you call the breakText method. Are you passing the font-size attribute within the styles parameter?. Fixed in #502.. Here's a simple demo on how to collapse/expand children elements and links.\nhttps://jsfiddle.net/kumilingus/o02p83mf/\nThe issue itself seems to be more complex. The demo does not cover:\n1. nested embeds (children within children)\n2. inbound/outbound links connecting a child but having the other end pinned to another \"outer\" element\nAd1) We would need to store the relationships between children and parents in order to reconstruct the subgraph later (The parent and embeds references are wiped out from cells when removed from the graph).\nAd2) On collapse, we can keep references to the collapsed descendants and reconnect the links to the container element. On expand, we can reconnect the links to the descendants based on the references stored.\nI am not sure if creating such API would be generic enough for other use-cases though. Or whether we should leave this on the application level (supported by demos) and add some graph methods (e.g subgraphToJSON, subgraphFromJSON) to make this easier.. Hi, please make sure you have joint.css stylesheet linked to your HTML document.. I see. jQuery v2.1.1 does not handle setting classNames on SVGElements. Thanks.. Hi Luis, I believe this is not an issue anymore. The grid calculation has been rewritten recently (https://github.com/clientIO/joint/blob/master/src/joint.dia.paper.js#L1543-L1572).\n. Hi, sorry for the delay. Is the Halo rendered in the DOM? Try document.querySelectorAll('.joint-halo'). Does it exists? If so could you check the CSS applied. Are the buttons hidden or not rendered at all?. element.portProp('id-old', 'id', 'id-new') will not trigger port:removed and port:added. Is that intended behaviour? What about element.prop('ports/items', [{ id: 'x' }, { id: 'y' }], { rewrite: true }) when there were 2 ports already defined.. Can you please give us some more info? The stack trace and the class definition of your shape you getting the error for? Cheers.. \nCan we create grid like that? e.g. every n-th line is thicker.. Hi, Could you send us the stack trace? It seems there is a place in your application when an SVG markup is not defined as a string. When the error occurs what is the html value?. The SVGTransformList API is broken in Chrome Canary and here is a workaround for now. It'll be handled in the next release (March).\n```javascript\nV.matrixToTransformString = function(matrix) {\n        matrix || (matrix = true);\n        return 'matrix(' + [\n            matrix.a || 1,\n            matrix.b || 0,\n            matrix.c || 0,\n            matrix.d || 1,\n            matrix.e || 0,\n            matrix.f || 0\n        ] + ')';\n    };\nV.prototype.transform = function(matrix, opt) {\n    var node = this.node;\n    if (V.isUndefined(matrix)) {\n        return (node.parentNode)\n            ? this.getTransformToElement(node.parentNode)\n            : node.getScreenCTM();\n    }\n\n    if (opt && opt.absolute) {\n        return this.attr('transform', V.matrixToTransformString(matrix));\n    }\n\n    var svgTransform = V.createSVGTransform(matrix);\n    node.transform.baseVal.appendItem(svgTransform);\n    return this;\n\n};\n```\nGoogle Group conversation: https://groups.google.com/forum/#!searchin/jointjs/canary%7Csort:relevance/jointjs/RsTRa2ICSYY/TPFNxQ8KBAAJ. Next week.. It's been confirmed @arifhussain353 case was not related to this issue.. Hi, has package.json been commited here by a mistake?. Good point! I've moved all the logic to V.rectToPath.. This could be overriden with setPosition option.\njavascript\njoint.layout.DirectedGraph.layout(graph, {\n  setPosition: function(el, bbox) {\n    el.translate(bbox.x, bbox.y);\n    // el.position(bbox.x, bbox.y, { deep: true }); v1.2+\n  }\n});. Hi, what is graph.getCell('7ae74634-1d15-4531-ab4f-ab31cda37728').toJSON() ?. You might try to position the label via offset property instead.\ncell.label(i, {\n            position: {\n                distance: .5,\n                offset: { y: y }\n            },\n            attrs: {\n                rect: { fill: 'white', class: 'link-title' },\n                text: { fill: 'black', text: label || '' }\n            }\n        });\nI'll take a look at the changes in the meantime.\nBest,\nRoman\n. Thank you. Fixed in https://github.com/clientIO/joint/pull/567.. Hi, are you sure this was not an issue in v1.0.3? Looking at the changes the x always defaulted to 0. Cheers.. https://github.com/clientIO/joint/blob/v1.0.3/src/vectorizer.js#L329\nhttps://github.com/clientIO/joint/blob/v1.0.3/src/joint.dia.element.js#L465-L468\nWould you mind posting here the custom element definition of yours here, so I can investigate further?. Hi @alp82, here is a workaround for the time being. I am sorry I am way too busy this week.\njavascript\n'.label': {\n                transform: 'translate(40,0)',  // instead of `x: 40`,\n                y: 20,\n                'ref-x': null,\n                'ref-y': null,\n                'y-alignment': null,\n                'font-size': 12,\n                'text-anchor': null\n            },. Also what is proposed here by @luis-carlos-campos looks good to me (at least it works well on Chrome). Would you mind creating a PR?. Fixed in #625.. Are you sure joint.css exists? It seems the CSS file is not loaded at all. Do you have any error in console?. No, JointJS is a subset of Rappid.\nIs source instance of joint.shapes.devs.Model? Are you sure you have used JointJS v1.0 and not an older version? We have introduced new port API on joint.dia.Element in v1.0 and getPortSelector was not needed anymore and therefore removed.\n. Could you wrap the paper with a container element instead?\njavascript\nvar paperContainer = document.getElementByID('paperContainer');\nvar paper = new joint.dia.Paper({\n  width: divPaperContainer.clientWidth - 5,\n  height: divPaperContainer.clientHeight - 5,\n  model: graph\n});\npaperContainer.appendChild(paper.el);. The Halo plugin triggers various events. One of them is action:link:add that can be used here.\njavascript\n    var halo = new joint.ui.Halo();\n    halo.on('action:link:add', function(link) {\n        if (link.graph) {\n            // link is part of a graph i.e. was sucesfully added\n            halo.removeHandle('link');\n        }\n    });. Hi, that was intentionally. positionRelative supposed to be a private method. If that was/is part of the TS definition it's a mistake. We are still in the process of fine-tuning the definition files.\nWhat was your use case? The attributes have been massively refactored in the latest version (keeping the backwards compatibility though). It's now possible to define your own attributes (not documented yet) and the calculation of relative attributes is improved (performance, bugs).. It's published now (dist folder on master branch).. You can install npm package directly from the JointJS repository (\"git+https://github.com/clientIO/joint.git\") . We'll publish to the npm repository when v1.1.1 is finished.. Fixed in v2.0.0.. Duplicate of #506.. Hi, you must include both the Dagre and Graphlib libraries as dependencies if you wish to use the layout.DirectedGraph plugin (http://resources.jointjs.com/docs/jointjs/v1.1/joint.html#layout.DirectedGraph).. \nYeah, you are missing dagre.min.js and graphlib.min.js.. I see. The depencies (dagre.min.js and graphlib.min.js) have to be loaded before joint.min.js.. You probably can not use \"This is\\nan element\" for an element/link id property. I think it does not like the newline character.. Related to https://bugs.chromium.org/p/chromium/issues/detail?id=5212.. Fixed in v2.1.3.. It should. Good catch!. Note for PR #626: When the link is removed or reverted we still have to clean other elementViews in the paper (in case magnetAvailibility/elementAvailibility option set to true).  Triggering of link:pointerup event stay untouched - even if the link is not part of the graph anymore.. Fixed in https://github.com/clientIO/joint/pull/752.. How about the Element/ElementView? Both Element and Link inherit from Cell. Is this necessary? Thanks.. It makes totally sense to me. If you can explicitly add both ElementView and LinkView to the definition I am happy to merge this. Thank You.. Thanks!. Please do not use devs.Model if you do not want to use addInPort() and addOutPort() API. We keep devs.Model here to maintain the backwards compatibility, where ports are controlled via inPorts and outPorts attributes. \nNote that any joint.dia.Element (e.g. joint.shapes.basic.Rect) can have ports.. Hi, what version do you use? There was a bug indeed, that was fixed by https://github.com/clientIO/joint/commit/04fb384c0438db1aaef18bf936f4f4ca033d816a.. I can not reproduce. Would you mind creating a JSFiddle demonstrating the issue? Thank You.. I've identified 2 issues with the current port API. Both can be easily overcome though.\n\n\nPort markup wrapped with <g/>. In this case the port won't be saved to the model. We should probably climb up the DOM and find the first element with attribute port set (https://github.com/clientIO/joint/blob/master/src/joint.dia.link.js#L1715).\n\n\nPort attrs are not applied when a port is having a group set, which is not defined under ports/groups. It's a good practice to define all the port groups before you start using them.\njavascript\nports: {\n  groups: { in: {}}, // always define group used below\n  items: [\n    { id: 'in1', group: 'in', attrs: { rect: { fill: 'red' }}}\n  ]\n}\nThe code below works fine for me. \n\n\n```javascript\nvar createOutPort = function() {\n    var markup = '';\n    var port = {\n        id: 'outId',\n        group: 'output',\n        args: {},\n        markup: markup\n    };\n    return port;\n};\nvar createInPort = function() {\n    var markup = '';\n    var port = {\n        id: 'inId',\n        group: 'input',\n        args: {},\n        markup: markup\n    };\n    return port;\n};\nr.addPort(createOutPort());\nr2.addPort(createInPort());\npaper.model.addCells([r, r2]);\npaper.on('link:connect', (cellView) => {\n    console.log('source', cellView.model.get('source').port);\n    console.log('target', cellView.model.get('target').port);  \n});\n``\nSetting the attributemagnetis already possible throughattrsattribute. Moving the definition to the port top-level won't work well in case you wish to setmagnet` to a nested element.\n<g><rect/><circle magnet=\"active\"/></g>\njavascript\nattrs: { circle: { magnet: 'active' }}\n. Fixed in v2.2.0.. this.paper.mouseclick() is protected method not meant to be called directly. To attach event handlers please use paper.on('cell:pointerclick', function() { /* your handler */ });.. Thanks!. Right, it's more an ad-hoc release. The dist directory will be updated when there is a new release by running grunt dist.. Hi, this is a bug. The custom connection point and perpendicular feature does not work at the same time. This needs to be addressed in the JointJS\n (https://github.com/clientIO/joint/blob/master/src/joint.dia.link.js#L1152-L1260). \nThe V.prototype.findIntersection() method needs to be capable to find the intersection from a target to an arbitrary point inside the element bounding box - not only to the center if the bbox. (https://github.com/clientIO/joint/blob/master/src/vectorizer.js#L853).\n. Fixed in v2.1.0. Please refer to the anchor and connectionPoint documentation.\nnew joint.dia.Paper({\n  defaultAnchor: { name: 'perpendicular' },\n  defaultConnectionPoint: { name: 'boundary', args: { stroke: true }}\n});\n. You have to update the JointJS or downgrade the jQuery I'm afraid.  v0.9.6 is not compatible with newest jQuery because of the selector property being removed for jQuery object.\n\n.selector property on jQuery objects\nThe remaining purpose of the deprecated .selector property on a jQuery object is to support the deprecated .live() event. In 1.9, jQuery no longer attempts to maintain this property in chained methods, since the use of chained methods was never supported with .live(). Do not use the .selector property on a jQuery object. The jQuery Migrate plugin does not attempt to maintain this property.. Hi, unfortunately href attribute on SVG image element is not supported by Safari yet (see Puzzle demo for instance).. More of a Safari bad :) Thank you anyway.. See https://github.com/clientIO/joint/pull/838.. You are going to need to add some vertices to the links (force them to route the desired way) or create a custom router (https://resources.jointjs.com/docs/jointjs/v2.1/joint.html#routers.custom).. Any luck with this one?. Duplicate of #568.. JointJS is now compatible with lodash v4. Here's an example how to integrate the ciena-dagre with lodash v4 - https://github.com/clientIO/joint/tree/master/demo/lodash4. TS definitions improved in JointJS v2.0. Please feel free reopen the issue if you find any definition missing/inaccurate in the current implementation.. I believe this issue was fixed by https://github.com/clientIO/joint/pull/586. It will be part of the next release at the end of September.. Please make sure the browser cache is cleared. I've tested the latest version and the issue is not there anymore (and there was not that many changes made in the way attributes work). If the cache is not the issue I'll keep digging what exactly made the issue disappear. Thanks.. I was wrong. The issue was actually fixed by https://github.com/clientIO/joint/commit/a3c939264eb08947947d2c09dfcc2ba9ffcae7cd.. Sounds good. Could you please also make paper.findViewByModel() not throwing an exception when called with a falsy value? Thank You.. Hi, how do you load cells into the graph when the error occurs? graph.fromJSON() ?\n. It seems, the problem will be in the DirectedGraph layout positioning elements one by one. At the time the link between Evaluator and TextFormatter is being updated (calculates manhattan) the SingleKeyMemory element has the default position (0,0) i.e. it's not an obstacle for the link yet.\n\nHere's what I suggest.\njavascript\nvar tmpGraph = new joint.dia.Graph;\ntmpGraph.addCells([el1, el2, ..., elN], { dry: true });\ntmpGraph.addCells([l1, l2, ..., lM], { dry: true })\njoint.ui.DirectedGraph.layout(tmpGraph);\ngraph.resetCells(tmpGraph.getCells());\n. As JointJS is built on Backbone, setting the attribute value that is already stored on the model triggers no events.\njavascript\nvar model = new Model({ x: 5 });\nmodel.set('x', 6); // triggers `change:x` and `change`\nmodel.set('x', 6); // triggers no events\nIn your case the second layout sets the same elements' position as the first layout. Therefore no events are triggered and LinkViews do not update.\nThis should also do the trick (manually update the LinkViews).\ngraph.getLinks().map(paper.findViewByModel, paper).forEach(view => view.update());\n. Maybe something like below would work (not tested).\n\n\nA naive solution\njavascript\njoint.layout.DirectedGraph.layout(graph, {\n  setPosition: function(element, glNode) {\n      element.set({\n        position: {\n          x: glNode.x - glNode.width / 2,\n          y: glNode.y - glNode.height / 2\n        },\n        refresher:  (element.get('refresher') || 0) + 1\n     });\n  }\n});\n\n\nHacky, but performant solution.\njavascript\njoint.layout.DirectedGraph.layout(graph, {\n  setPosition: function(element, glNode) {\n      element.set('position', {\n         x: glNode.x - glNode.width / 2,\n         y: glNode.y - glNode.height / 2\n      }, { cacheOnly: true /* will not update links yet */ });\n  },\n  setVertices: function(link, points) {\n      var vertices = points.slice(1, points.length - 1);\n      // trigger view update manually \n      link.unset('vertices', { silent: true });\n      link.set('vertices', vertices);\n  }\n})\nThis scenario is definitely something to have in mind when we work on refactoring the links (after v1.2 JointJS release). To define better control of how/when links are updated.\n. It sounds like the markAvailable paper option was switched on. Could you please double check?. As far as I know, there were no changes to this feature. What version are you trying to upgrade from?. The highlighting of elements/links was changed in v2.0. It's now calling highlight for every available-to-connect element with { magnetAvailability: true } flag to enable you to choose a custom highlight method vs. adding hard-coded class name prior v2.0.. The stack control in JointJS can be controlled via z attribute (A cell with greater stack order is always in front of an element with a lower stack order). In case 2 cells shares the same z value, the cell added later to the graph will be in front of the other.\n\n\nYou have several options here.\njavascript\n// 1. adding cells in proper order\ngraph.addCells([pool, chore]);\n// 2. using `z` attribute.\nvar chore = new joint.shapes.bpmn.Choreography(); chore.prop({position: { x: 20, y: 240 }, z: 2 });\nvar pool = new joint.shapes.bpmn.Pool(); pool.prop({position: { y: 200 }, z: 1 });\npool.embed(chore);\ngraph.addCells([chore, pool]);\n// 3. calling `toFront()`\npool.toFront({ deep: true })\nNote, that in the embedding paper mode ({ embeddingMode: true }) the elements along with their descendants are brought to front automatically when the user drags them.\n. Hi Nico, I've identified the issue and create a fix. It's caused by a leftover attrs property on the model. When you look at CellView.model.attrs for { div: { html: 'leftover text' }} this rule wins over { '.content': { 'new text' }}.\nThe following can temporarily solve the issue.\njavascript\ncellView.model.prop('div/html', null);\ncellView.model.prop('content', 'new content');\nThe actual fix will be part of the next release v2.2 (next week). If you'd like to patch it now please email me at roman@client.io.. The workaround is even more ugly for now :)\njavascript\ngraph.getCell('b2797827-0135-4c4d-8958-4b8bcd7144e9').removeAttr('div/html');\ngraph.getCell('b2797827-0135-4c4d-8958-4b8bcd7144e9').prop('content', 'new content');\n// fix participants rendering\nv = graph.getCell('b2797827-0135-4c4d-8958-4b8bcd7144e9').findView(paper);\nv.participantsAttrs = undefined;\nv.update();\n. Fixed in Rappid v2.2.0.. Hi Nico, I had no luck reproducing this issue. What version of FF do you use? Could you also send us some screenshots please. Thank you.. It seems it's specifically Windows - Firefox problem (I can't reproduce this on OS X). Let us investigate more and we get back to you about this. Thank you for reporting this.. It's a regression. Please update the following rule in bpmn.css.\ncss\n/* Hide \"empty\" paths as firefox returns a huge bounding box for them. */\n  @-moz-document url-prefix() {\n    .joint-theme-bpmn .joint-link .marker-source[d=\"M 0 0\"],\n    .joint-theme-bpmn .joint-link .marker-target[d=\"M 0 0\"] {\n          display: none;\n    }\n  }. Fixed in Rappid v2.2.0.. Fixed in v2.0.0.. Hi Michael, I also like the 3rd option the most.Where it makes sense we can define options more precisely as shown below.\njavascript\nposition(x: number, y: number, options?: { parentRelative?: boolean, deep?: boolean, [key: string]: any }): this;. @mmacfadden I am happy with this. Feel free to make the changes. Thank you.. > I also make paper.findViewByModel() not throwing an exception when called with a falsy value.\nTo fulfil the above we might change it to the following:\njavascript\nvar id = (joint.util.isString(cell) || joint.util.isNumber(cell)) ? cell : (cell && cell.id);. Thank you!. Hi, you can use the Port API directly on arbitrary shape. Do not use devs plugin.\nDocs: https://resources.jointjs.com/docs/jointjs/v2.0/joint.html#dia.Element.ports\n```javascript\nvar YourElement = joint.dia.Element.define('your.Element', {\n  attrs: {\n    rect: {\n      refWidth: '100%',\n      refHeight: '100%',\n      stroke: 'black',\n      fill: 'lightblue'\n    }\n  }\n}, {\n  markup: 'rect'\n});\nvar el = new YourElement;\nel.resize(200,200);\nel.position(100, 100);\nel.addPort({\n  attrs: {\n    circle: {\n      'magnet': true,\n      'stroke': '#31d0c6',\n      'stroke-width': 2,\n      'fill': '#ffffff'\n    }\n  },\n  yourData: {\n    x: 'y'\n  }\n});\nel.addTo(graph);. The problem is that we don't know if the paper element is in the DOM (it's currently required for the elements and links to be correctly rendered).\nconst paper: joint.dia.Paper = new joint.dia.Paper({\n  model: this.graph, // existing graph\n  gridSize: 1,\n  interactive: false\n});\n// cellViews are rendered incorrectly now\npaper.$el.appendTo(document.body);\nWe are currently investigate the way to measure DOM elements in pure javascript (no need for cellViews to be in the DOM).\nThere is also an API proposal that would fix this issue by moving the paper off-screen during init phase (https://github.com/clientIO/joint/issues/407).. We could. This does not help in the example I provided though. The existing graph cells end up not being rendered again. So it'd be only a partial solution for this issue.. Hi Michal, the problem is that Rappid currently missing TS definitions for Chart shapes. Before we add the definitions I suggest to do the following:\njavascript\nlet chart = shapes['chart']['Knob']({ /* ... */ }). Fixed in Rappid v2.3.3.. How comes that the paper's options does not contain the height and width value? There are some default values set at init https://github.com/clientIO/joint/blob/master/src/joint.dia.paper.js#L8-L9.\nIt makes kind of sense that scale returned is 0,0 if he paper has zero dimension.. Added minimum scale value in f40c4f2fe0e344afed759e5c964deb0f466583d7 (1e-6).. Hi Randy,\n1. Here's fix for the highlighters typo https://github.com/clientIO/joint/pull/755\n2. Navigator's updateCurrentView() method is not meant to be public. Is there any specific case where calling this method is necessary?\nThank You.. I see, that make completely sense. We'll make the method public. Thank You.. Please use the paper's interactiveoption { arrowheadMove: false }.\nhttp://resources.jointjs.com/docs/jointjs/v2.0/joint.html#dia.Paper.prototype.options.interactive. Check out v2.1.0 where is up to you to decide what tools (arrowheads, vertices, segments you wish to make available for your users).. Hi Carlo, thanks for the PR.  We're in the middle of a transition to remove the Lodash dependency. We do not call lodash methods directly since v2.0 . Please use joint.util.*() instead (https://github.com/clientIO/joint/blob/master/src/core.js#L1423-L1452) or even better use ES5 only. i.e.\njavascript\n// head\narray.slice(0, count)\n// tail\narray.slice(-count)\nAlso, the start and the end of the batch can be triggered only if there is a change in z.\n. Hi Carlo, sorry for the delay.\nIs it necessary to loop over all cells in the graph to get the highest z-index?\njavascript\nvar z = this.graph.getCells().reduce(function (maxZ, cell) {\n  return Math.max(maxZ, cell.get('z'));\n}, -Infinity);\nAll the cells in the graph are sorted by z already.\njavascript\nvar z = this.graph.getLastCell().get('z') || 0;\nThank you.. We are not querying maxZIndex inside the to-front/to-back batch.\nhttps://github.com/B3rn475/joint/blob/296192607e361759032d707ced1990730d3c1748/src/joint.dia.cell.js#L201-L209\nThe situation you have described can happen only if someone starts to-front batch manually.\njavascript\n// cells are sorted\ngraph.startBatch('to-front');\nel1.toFront({ deep: true });\n// cells not sorted\nel2.toFront({ deep: true })\n// cells not sorted\ngraph.stopBatch('to-front')\n// cells sorted\nSo el1 and el2 will be sent to front, so their z-indexes will be larger then all other cells. el1 and el2 will have the same indexes, which I find acceptable.\nAm I missing something?\nMoving the logic to the paper might work as well (listening to batch:stop and call sortViews). We will be sorting the graph after every z change though.\nThere is POC which makes the paper to render/update/sort views in animation frames (render loops) and introducing a new concept of z-index pivots avoiding the need for sorting views.\nhttps://github.com/kumilingus/joint/blob/links/src/joint.dia.paper.js\nThis is the way we would like to go. Because no such an optimazation (e.g with batches) will be required.\n. Hi Carlo, I like it. Can you add minZIndex() to the documentation and to the TS definition file? Also hasActiveBatch() signature has changed and therefore updated in TS. Thank you.\n. Nice, Good job! Thanks. Thanks @B3rn475 , I'll fix this now.. Hi @denisemauldin, is this still an issue?. @Thunkar please see https://github.com/clientIO/joint/issues/937. You need to specify a particular SVGPath to be highlighted (by default it highlights the entire view i.e. SVGGroup) .\nlinkView.highlight('.connection');. It will be resolved in the upcoming patch release.. Fixed in Rappid v2.3.2.. Hi, how is this different from the current code ?. It does not depend on values of x and y. Maybe element.position(0, 0) did nothing because the position was already set at 0,0? Note that a single change of the position can trigger multiple views to update (e.g. element view itself and all the link views connected updates). . Hi Michael,\nright, the body tag is not needed indeed. A single <div/> with the following CSS also centres the text inside the div both horizontally and vertically (I think that was the reason, we used the  body tag - extra container - in the first place).\ncss\ndiv {\n    width: 100%;\n    height: 100%;\n    position: static;\n    background-color: transparent;\n    text-align: center;\n    margin: 0px;\n    padding: 0px 5px;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}. Please use standard.TextBlock or the workaround @mmacfadden suggested above. Won't fix in basic.TextBlock.. You can get the previous port id from the magnet element the link was disconnected from.\n```javascript\npaper.on('link:disconnect', function(linkView, evt, elementView, magnet) {\n    var portId = magnet && magnet.getAttribute('port');\n    if (portId) console.log('previous port:', portId);\n});\npaper.on('link:connect', function(linkView, evt, elementView, magnet) {\n    var portId = magnet && magnet.getAttribute('port');\n    if (portId) console.log('new port:', portId);\n});\n``. It might have something to do withfill=\"none\"attribute on the connection path. E.g.fill=\"none\"does not capture pointer events as oppose tofill=\"transparent\"`.\nDoes the link look ok visually?\nDid you customize the look of the link in any way?\nDo you apply some custom CSS rules to the paper?. Hi, sure, we'll upgrade Lodash version for the upcoming release.. Fixed in v2.2.0.. Angular 6 demo will be part of the next Rappid release (October).. KitchenSink application along with Angular 6 is part of Rappid v2.4.0.. It's part of the Rappid package (apps/KitchenSinkAngular6). If you are not a license holder yet, you can download a trial package at https://www.jointjs.com/rappid-trial.. Did you have a look at apps/KitchenSinkAngular6/src/app/app.component.ts?. I am not sure, this might be what you are after. The Rappid plugins are initialized in services folder.\ne.g. apps/KitchenSinkAngular6/src/services/kitchensink-service.ts. I see. You would like to load a diagram at the start (add elements and links to the graph).\nYou can add the following snippet at the end of startRappid() in apps/KitchenSinkAngular6/src/services/kitchensink-service.ts.\njs\nthis.graph.fromJSON( '{\"cells\":[{\"type\":\"standard.Polygon\",\"position\":{\"x\":435,\"y\":225.50000000000003},\"size\":{\"width\":160,\"height\":98.99999999999994},\"angle\":0,\"id\":\"bbbd5104-4965-4b86-bcb1-1552bfbb04d6\",\"z\":88,\"attrs\":{\"body\":{\"refPoints\":\"50,0 100,50 50,100 0,50\",\"stroke\":\"#7c68fc\",\"fill\":\"transparent\",\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":15,\"fill\":\"#7c68fc\",\"text\":\"Auto alarm\\\\nactivated?\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Ellipse\",\"position\":{\"x\":475,\"y\":82},\"size\":{\"width\":80,\"height\":80},\"angle\":0,\"id\":\"6374dec5-83d1-4e31-832a-ac24755672a2\",\"z\":89,\"attrs\":{\"body\":{\"stroke\":\"#fe854f\",\"fill\":\"transparent\",\"width\":50,\"height\":30,\"strokeDasharray\":\"10,5\"},\"label\":{\"fontSize\":16,\"fill\":\"#fe854f\",\"text\":\"Fire\\\\nIncident\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Bold\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"6374dec5-83d1-4e31-832a-ac24755672a2\"},\"target\":{\"id\":\"bbbd5104-4965-4b86-bcb1-1552bfbb04d6\"},\"id\":\"56dc6e7b-916d-42fa-8d5b-0942474383e5\",\"z\":90,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#8f8f8f\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"standard.Ellipse\",\"position\":{\"x\":375,\"y\":260},\"size\":{\"width\":30,\"height\":30},\"angle\":0,\"id\":\"064747aa-f153-43bd-af2d-76e5b9a63a8c\",\"z\":91,\"attrs\":{\"body\":{\"stroke\":\"#7c68fc\",\"fill\":\"transparent\",\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":11,\"fill\":\"#7c68fc\",\"text\":\"No\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"bbbd5104-4965-4b86-bcb1-1552bfbb04d6\"},\"target\":{\"id\":\"064747aa-f153-43bd-af2d-76e5b9a63a8c\"},\"id\":\"4c3c6d56-4c5e-4def-93f7-953972f65086\",\"z\":92,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#7c68fc\",\"strokeWidth\":2,\"targetMarker\":{\"d\":\"M 0 0 0 0\"}},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"standard.Ellipse\",\"position\":{\"x\":500,\"y\":351},\"size\":{\"width\":30,\"height\":30},\"angle\":0,\"id\":\"3fd6a2d5-959c-4124-aa18-cc9cdc33cd3a\",\"z\":94,\"attrs\":{\"body\":{\"stroke\":\"#7c68fc\",\"fill\":\"transparent\",\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":11,\"fill\":\"#7c68fc\",\"text\":\"Yes\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"bbbd5104-4965-4b86-bcb1-1552bfbb04d6\"},\"target\":{\"id\":\"3fd6a2d5-959c-4124-aa18-cc9cdc33cd3a\"},\"id\":\"627c93be-f5f9-4a06-bf62-cfdc8eec3df2\",\"z\":95,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#7c68fc\",\"strokeWidth\":2,\"targetMarker\":{\"d\":\"M 0 0 0 0\"}},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":660,\"y\":248},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"0619ff3d-7bb1-4d5f-94e3-2b359b545077\",\"z\":96,\"attrs\":{\"body\":{\"stroke\":\"#fe854f\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"10,5\"},\"label\":{\"fontSize\":15,\"fill\":\"#fe854f\",\"text\":\"Activate\\\\nevacuation\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"bbbd5104-4965-4b86-bcb1-1552bfbb04d6\"},\"target\":{\"id\":\"0619ff3d-7bb1-4d5f-94e3-2b359b545077\"},\"id\":\"bcaae721-b040-4916-815d-6abe67f9119f\",\"z\":98,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#8f8f8f\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":250,\"y\":339},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"cb9a597f-ea84-4b2f-bd50-0581c27ec557\",\"z\":99,\"attrs\":{\"body\":{\"stroke\":\"#31d0c6\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#31d0c6\",\"text\":\"Employees\\\\ninforms\\\\nprimary\\\\ncontact\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"064747aa-f153-43bd-af2d-76e5b9a63a8c\"},\"target\":{\"id\":\"afc095b8-452b-4833-bb8f-ead56dfbf64e\"},\"id\":\"249acf5d-3c8a-4ec1-b730-410d637f9dbd\",\"z\":100,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#7c68fc\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":100,\"y\":248},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"8cdadca1-587b-47f1-a9af-1ea813e098ea\",\"z\":101,\"attrs\":{\"body\":{\"stroke\":\"#fe854f\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"10,5\"},\"label\":{\"fontSize\":15,\"fill\":\"#fe854f\",\"text\":\"Activate\\\\nevacuation\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"afc095b8-452b-4833-bb8f-ead56dfbf64e\"},\"target\":{\"id\":\"8cdadca1-587b-47f1-a9af-1ea813e098ea\"},\"id\":\"93eb8c3b-2256-468f-8516-032b413c7e81\",\"z\":102,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#8f8f8f\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":250,\"y\":248},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"afc095b8-452b-4833-bb8f-ead56dfbf64e\",\"z\":103,\"attrs\":{\"body\":{\"stroke\":\"#31d0c6\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#31d0c6\",\"text\":\"Employees\\\\nmanually\\\\nactivates alarm\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"afc095b8-452b-4833-bb8f-ead56dfbf64e\"},\"target\":{\"id\":\"cb9a597f-ea84-4b2f-bd50-0581c27ec557\"},\"id\":\"46200e2d-4bd2-46db-844f-772ef273cbe5\",\"z\":104,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#31d0c6\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"standard.Polygon\",\"position\":{\"x\":435,\"y\":411},\"size\":{\"width\":160,\"height\":98.99999999999994},\"angle\":0,\"id\":\"1eaf6c3a-520f-41c7-9ac7-7008c5cc3e44\",\"z\":106,\"attrs\":{\"body\":{\"refPoints\":\"50,0 100,50 50,100 0,50\",\"stroke\":\"#7c68fc\",\"fill\":\"transparent\",\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":11,\"fill\":\"#7c68fc\",\"text\":\"Alarm monitoring\\\\nservice provider\\\\ncontacts organization?\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"cb9a597f-ea84-4b2f-bd50-0581c27ec557\"},\"target\":{\"id\":\"1eaf6c3a-520f-41c7-9ac7-7008c5cc3e44\"},\"id\":\"b5f09409-0526-4252-9289-739a24fd7839\",\"z\":107,\"labels\":[],\"vertices\":[{\"x\":295,\"y\":460.5}],\"attrs\":{\"line\":{\"stroke\":\"#31d0c6\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"3fd6a2d5-959c-4124-aa18-cc9cdc33cd3a\"},\"target\":{\"id\":\"1eaf6c3a-520f-41c7-9ac7-7008c5cc3e44\"},\"id\":\"70d38b87-d427-4da8-82ed-c98fb6f290dd\",\"z\":108,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#7c68fc\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"standard.Ellipse\",\"position\":{\"x\":500,\"y\":542},\"size\":{\"width\":30,\"height\":30},\"angle\":0,\"id\":\"d61f5f92-b2c1-46fb-8677-40426f2db2a8\",\"z\":109,\"attrs\":{\"body\":{\"stroke\":\"#7c68fc\",\"fill\":\"transparent\",\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":11,\"fill\":\"#7c68fc\",\"text\":\"Yes\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Ellipse\",\"position\":{\"x\":625,\"y\":495},\"size\":{\"width\":30,\"height\":30},\"angle\":0,\"id\":\"8167630c-8740-4bdc-bae2-2b85127eec04\",\"z\":110,\"attrs\":{\"body\":{\"stroke\":\"#7c68fc\",\"fill\":\"transparent\",\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":11,\"fill\":\"#7c68fc\",\"text\":\"No\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"1eaf6c3a-520f-41c7-9ac7-7008c5cc3e44\"},\"target\":{\"id\":\"d61f5f92-b2c1-46fb-8677-40426f2db2a8\"},\"id\":\"a34c60c4-af41-4a47-a45d-3c02e9b7cf2a\",\"z\":111,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#7c68fc\",\"strokeWidth\":2,\"targetMarker\":{\"d\":\"M 0 0 0 0\"}},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"1eaf6c3a-520f-41c7-9ac7-7008c5cc3e44\"},\"target\":{\"id\":\"8167630c-8740-4bdc-bae2-2b85127eec04\"},\"id\":\"10230441-e15f-4202-b37c-6aed52911f23\",\"z\":112,\"labels\":[],\"vertices\":[{\"x\":640,\"y\":460.5}],\"attrs\":{\"line\":{\"stroke\":\"#7c68fc\",\"strokeWidth\":2,\"targetMarker\":{\"d\":\"M 0 0 0 0\"}},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":468,\"y\":607},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"d08f5ece-f171-4bbe-a7ee-ffd4b262ad92\",\"z\":115,\"attrs\":{\"body\":{\"stroke\":\"#31d0c6\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#31d0c6\",\"text\":\"Primary\\\\ncontact\\\\nconfirms fire\\\\nincident\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":468,\"y\":691},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"2c44a2f3-ab10-49c7-9ff2-74b74ef55253\",\"z\":116,\"attrs\":{\"body\":{\"stroke\":\"#31d0c6\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#31d0c6\",\"text\":\"Service\\\\nProvider\\\\ncontacts Fire\\\\nDepartment\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":468,\"y\":775},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"3d91727c-6b73-4ee7-b74a-dbba705654a8\",\"z\":117,\"attrs\":{\"body\":{\"stroke\":\"#31d0c6\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#31d0c6\",\"text\":\"Fire Engines\\\\narrives\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":468,\"y\":859},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"1a9926a7-7dc6-47ba-bfce-6c1c77b709f6\",\"z\":118,\"attrs\":{\"body\":{\"stroke\":\"#31d0c6\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":10,\"fill\":\"#31d0c6\",\"text\":\"Crisis\\\\nManagement\\\\nTeam Leader\\\\nbriefs\\\\nBattalion Chief\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":243,\"y\":802},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"0a0a1a4d-b66c-4e8e-a1cc-5fe9fd62a7e3\",\"z\":119,\"attrs\":{\"body\":{\"stroke\":\"#31d0c6\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#31d0c6\",\"text\":\"Crisis\\\\nManagement\\\\nTeam directs\\\\nfuture actions\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":243,\"y\":718},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"803a2245-1f1c-48e0-93c5-ea9326d5012c\",\"z\":120,\"attrs\":{\"body\":{\"stroke\":\"#31d0c6\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#31d0c6\",\"text\":\"Fire Department\\\\ngives All-Clear\\\\nsignal\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":243,\"y\":635},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"ad56b0f5-490d-4991-adc7-4141c210e368\",\"z\":121,\"attrs\":{\"body\":{\"stroke\":\"#31d0c6\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#31d0c6\",\"text\":\"Fire Department\\\\nbecomes Incident\\\\nCommander\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":595,\"y\":563},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"d4981a4a-d934-4ce5-9db4-13fe98e28a86\",\"z\":122,\"attrs\":{\"body\":{\"stroke\":\"#8f8f8f\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#8f8f8f\",\"text\":\"Primary\\\\ncontact\\\\ncontacts Fire\\\\nDepartment\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":595,\"y\":647},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"81010a6e-d5de-4b96-b665-f45bc2aa7ba9\",\"z\":123,\"attrs\":{\"body\":{\"stroke\":\"#8f8f8f\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#8f8f8f\",\"text\":\"Primary contact\\\\ninforms\\\\nEmergency\\\\nResponse Team\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":595,\"y\":731},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"878b7e3d-5079-4277-992c-4c0a7c39d3e8\",\"z\":124,\"attrs\":{\"body\":{\"stroke\":\"#8f8f8f\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":10,\"fill\":\"#8f8f8f\",\"text\":\"Emergency\\\\nResponse\\\\nTeam informs\\\\nCrisis\\\\nManagement Team\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":786,\"y\":381},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"c850d5e9-95e2-4d90-a4ed-934a693a98cf\",\"z\":125,\"attrs\":{\"body\":{\"stroke\":\"#8f8f8f\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#8f8f8f\",\"text\":\"Evacuees report\\\\nto Gathering\\\\nPoint / Safe Area\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":786,\"y\":465},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"832f2c60-da26-4fff-8db4-5ea087bbeef7\",\"z\":126,\"attrs\":{\"body\":{\"stroke\":\"#8f8f8f\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":12,\"fill\":\"#8f8f8f\",\"text\":\"Roll call taken by\\\\nteam leads\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":786,\"y\":549},\"size\":{\"width\":90,\"height\":54},\"angle\":0,\"id\":\"df93397c-c309-4ebe-9a33-51d51ea5b4fd\",\"z\":127,\"attrs\":{\"body\":{\"stroke\":\"#8f8f8f\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":10,\"fill\":\"#8f8f8f\",\"text\":\"Floor Marshals\\\\nbrief Crisis\\\\nManagement\\\\nTeam using floor\\\\nplans\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"0619ff3d-7bb1-4d5f-94e3-2b359b545077\"},\"target\":{\"id\":\"c850d5e9-95e2-4d90-a4ed-934a693a98cf\"},\"id\":\"ee81ac0d-f8de-420b-8ac0-8b9df5ee279b\",\"z\":128,\"vertices\":[{\"x\":831,\"y\":275}],\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#8f8f8f\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"c850d5e9-95e2-4d90-a4ed-934a693a98cf\"},\"target\":{\"id\":\"832f2c60-da26-4fff-8db4-5ea087bbeef7\"},\"id\":\"3e742db6-c6f5-412f-b9ff-0b93a371145f\",\"z\":129,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#8f8f8f\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"832f2c60-da26-4fff-8db4-5ea087bbeef7\"},\"target\":{\"id\":\"df93397c-c309-4ebe-9a33-51d51ea5b4fd\"},\"id\":\"5ffee384-4c12-4664-bd9b-0b6e62eb4498\",\"z\":130,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#8f8f8f\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"df93397c-c309-4ebe-9a33-51d51ea5b4fd\"},\"target\":{\"id\":\"1a9926a7-7dc6-47ba-bfce-6c1c77b709f6\"},\"id\":\"c21b9ac0-f7c8-436e-a1a9-61611b7993cb\",\"z\":131,\"labels\":[],\"vertices\":[{\"x\":831,\"y\":886}],\"attrs\":{\"line\":{\"stroke\":\"#8f8f8f\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"normal\"},\"source\":{\"id\":\"d4981a4a-d934-4ce5-9db4-13fe98e28a86\"},\"target\":{\"id\":\"81010a6e-d5de-4b96-b665-f45bc2aa7ba9\"},\"id\":\"fc83084d-8d59-43a4-8478-787b0a889a82\",\"z\":132,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#8f8f8f\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"normal\"},\"source\":{\"id\":\"81010a6e-d5de-4b96-b665-f45bc2aa7ba9\"},\"target\":{\"id\":\"878b7e3d-5079-4277-992c-4c0a7c39d3e8\"},\"id\":\"0a11f6cb-95fd-4ef6-8d8c-fc7edf69f7d5\",\"z\":133,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#8f8f8f\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"8167630c-8740-4bdc-bae2-2b85127eec04\"},\"target\":{\"id\":\"d4981a4a-d934-4ce5-9db4-13fe98e28a86\"},\"id\":\"63362a6d-8f77-47a7-a6a3-67c1769348b4\",\"z\":134,\"labels\":[],\"vertices\":[],\"attrs\":{\"line\":{\"stroke\":\"#7c68fc\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"1a9926a7-7dc6-47ba-bfce-6c1c77b709f6\"},\"target\":{\"id\":\"ad56b0f5-490d-4991-adc7-4141c210e368\"},\"id\":\"f8eb10ae-a4a3-4f82-aaeb-72eef7c87108\",\"z\":135,\"labels\":[],\"vertices\":[{\"x\":401,\"y\":886},{\"x\":401,\"y\":605},{\"x\":288,\"y\":605}],\"attrs\":{\"line\":{\"stroke\":\"#31d0c6\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"ad56b0f5-490d-4991-adc7-4141c210e368\"},\"target\":{\"id\":\"803a2245-1f1c-48e0-93c5-ea9326d5012c\"},\"id\":\"a901a6e9-3c1d-4029-ac52-0aa962b5904a\",\"z\":136,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#31d0c6\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"803a2245-1f1c-48e0-93c5-ea9326d5012c\"},\"target\":{\"id\":\"0a0a1a4d-b66c-4e8e-a1cc-5fe9fd62a7e3\"},\"id\":\"080e362f-019c-4c3c-a0f6-599689eb218d\",\"z\":137,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#31d0c6\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"d61f5f92-b2c1-46fb-8677-40426f2db2a8\"},\"target\":{\"id\":\"d08f5ece-f171-4bbe-a7ee-ffd4b262ad92\"},\"id\":\"c57b02c8-1e1c-4c64-8641-052814b248bf\",\"z\":138,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#7c68fc\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"d08f5ece-f171-4bbe-a7ee-ffd4b262ad92\"},\"target\":{\"id\":\"2c44a2f3-ab10-49c7-9ff2-74b74ef55253\"},\"id\":\"71b59998-e319-4a93-b830-87f57850f8db\",\"z\":139,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#31d0c6\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"2c44a2f3-ab10-49c7-9ff2-74b74ef55253\"},\"target\":{\"id\":\"3d91727c-6b73-4ee7-b74a-dbba705654a8\"},\"id\":\"4153a528-afd7-4ced-80f3-d0d6205dcd18\",\"z\":140,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#31d0c6\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"app.Link\",\"router\":{\"name\":\"normal\"},\"connector\":{\"name\":\"rounded\"},\"source\":{\"id\":\"3d91727c-6b73-4ee7-b74a-dbba705654a8\"},\"target\":{\"id\":\"1a9926a7-7dc6-47ba-bfce-6c1c77b709f6\"},\"id\":\"88e395df-0004-4e67-9d50-dca0bce3ac77\",\"z\":141,\"labels\":[],\"attrs\":{\"line\":{\"stroke\":\"#31d0c6\",\"strokeWidth\":2},\".connection\":{\"stroke\":\"#222138\"},\".marker-target\":{\"fill\":\"#222138\"},\".marker-source\":{\"fill\":\"#222138\"}}},{\"type\":\"standard.Rectangle\",\"position\":{\"x\":100,\"y\":110},\"size\":{\"width\":230,\"height\":50},\"angle\":0,\"id\":\"f7d17de6-0af5-4b03-836b-0d465e9a2285\",\"z\":142,\"attrs\":{\"body\":{\"stroke\":\"transparent\",\"fill\":\"transparent\",\"rx\":2,\"ry\":2,\"width\":50,\"height\":30,\"strokeDasharray\":\"0\"},\"label\":{\"fontSize\":24,\"fill\":\"#4b4a67\",\"text\":\"Emergency Procedure\",\"fontFamily\":\"Roboto Condensed\",\"fontWeight\":\"Normal\",\"strokeWidth\":0},\"root\":{\"dataTooltipPosition\":\"left\",\"dataTooltipPositionSelector\":\".joint-stencil\"}}}]}');. Resolved by #826 .. > Both el and model don`t exists in typings file.\nThese are inherited from the Backbone's typings (Backbone.View).. It's defined on the Backbone.View. The CellView is an abstract class. The actual render() methods are implement on the LinkView and ElementView.. The onChangeAttrs() method is defined on joint.dia.CellView and not on joint.dia.Cell.. Can we close the issue?. Thank you a lot!. Hi Paul, no. 2 is correct. We are currently in the process of dropping the scalable group usage in favour of special attributes (refWidth, refHeight,refRx, refRy, refD. refPoint, ...).\nYou can check out new shape definitions using this approach in the master branch (https://github.com/clientIO/joint/blob/master/plugins/shapes/joint.shapes.standard.js).. The new standard shapes use JSON markup (this is a new feature for the next release). If you replace the markup with serialized XML and CSS selectors inside attrs, you can make it work (with one exception shapes.Circle, which uses a new refR attribute).. a) Here's an idea how to define a cylinder shape without paths.\njavascript\njoint.dia.Element.define('standard.Cylinder', {\n    attrs: {\n        path: {\n            strokeWidth: 1,\n            stroke: '#000000',\n            fill: '#FFFFFF'\n        },\n        body: {\n            refY: '10%',\n            refHeight: '80%',\n            refWidth: '100%',\n            fill: 'white',\n            stroke: 'black'\n        },\n        bodyStrokeCover: {\n            refY: '90%',\n            y: -1,\n            x: 1,\n            refWidth: -2,\n            height: 2,\n            fill: 'white',\n            stroke: 'white'\n        },\n        top: {\n            refCx: '50%',\n            refCy: '10%',\n            refRx: '50%',\n            refRy: '10%',\n            fill: 'white',\n            stroke: 'black'\n        },\n        bottom: {\n            refCx: '50%',\n            refCy: '90%',\n            refRx: '50%',\n            refRy: '10%',\n            fill: 'white',\n            stroke: 'black'\n        },\n        label: {\n            textVerticalAnchor: 'middle',\n            textAnchor: 'middle',\n            refX: '50%',\n            refY: '50%',\n            fontSize: 14,\n            fill: '#333333'\n        }\n    }\n}, {\n    markup: [\n        {\n            tagName: 'ellipse',\n            selector: 'bottom'\n        },\n        {\n            tagName: 'rect',\n            selector: 'body'\n        },\n        {\n            tagName: 'rect',\n            selector: 'bodyStrokeCover'\n        },\n        {\n            tagName: 'ellipse',\n            selector: 'top'\n        },\n        {\n            tagName: 'text',\n            selector: 'label'\n        }]\n});\nb) For your actual question. It's not possible right now (unless read c). I think we should introduce more options for refD and refPoints attributes.\n- preserveAspectRatio: would scale the path uniformly\n- scaleX: either number for absolute scaling (1 equals do not scale in x axis) or percentage to scale the path to the ratio of the width.\n- scaleY:  either number for absolute scaling (1 equals do not scale in y axis) or percentage to scale the path to the ratio of the height.\nc) It's possible to define your own attributes. It's powerful, not yet documented though.\nBuilt-in attributes:\nhttps://github.com/clientIO/joint/blob/master/src/joint.dia.attributes.js\nCustom attributes examples: https://github.com/clientIO/joint/blob/master/demo/shapes/src/custom-shapes.js\n. FYI the cylinder will become a member of built-in standard shapes (https://github.com/clientIO/joint/pull/820).. @fingerartur  It's good enough also for us :)  https://github.com/clientIO/joint/pull/853. Thanks!. Thank you @randy-stad, fixed in https://github.com/clientIO/joint/pull/834.. Ahoj Honzo,\napparently, undefined group (group a in your case) causes the port attributes not to apply at all. Here's a workaround for now. Please define the groups before you start adding ports. We'll review this (we'll either update the example or make it work even if the group is not defined).\n```javascriprt\n// Single port definition\nvar port = {\n    id: 'abc',\n    group: 'a',\n    args: {},\n    label: {\n        position: {\n            name: 'top',\n            args: {}\n        },\n        markup: '',\n    },\n    attrs: { text: { text: 'port1' }},\n    markup: ''\n};\n// a.) add a port in constructor.\nvar rect = new joint.shapes.basic.Rect({\n    position: { x: 50, y: 50 },\n    size: { width: 90, height: 90 },\n    ports: {\n        // !!! DEFINE EMPTY GROUP !!!\n        groups: { a: {}},\n        items: [port]\n    }\n});\nrect.addTo(graph);\n```\nThank you for reaching out!\nRoman. Docs fixed in v2.1.0.. Hi @koenhandekyn,\nthanks for reporting this. The fix below should resolve the issue.\njavascript\nif (!isNaN(property)) return; // do not add property to `customStyle` object\nNote, you don't have to use computed styles by passing useComputedSyle: false. You can also provide your own stylesheet as a string with the stylesheet: '' option. This is much faster.. Fixed in Rappid v2.3.1.. Hi, I think the logic here is wrong. We should bring links to front based on the elements they were connected to.. @nico-onmap this PR should resolve the issue.. Fixed with https://github.com/clientIO/joint/commit/a2375aa876b6887857b01833d9e5f4c6b8640a23.. Hi Rasmus, a possible fix can be found here. Requires further testing though.. Fixed in https://github.com/clientIO/joint/pull/890.. Hi Paul,\ngood catch! Here's a PR which should resolve the issue.\n. Even if the ref is a port node, the refView should be found. What is your exact use-case? Can you share some code please?. Hi, I am not able to reproduce the issue. I can imagine this can happen if the port node is not in the DOM though. I had made the resolveRefAsBBoxCenter safer here (https://github.com/clientIO/joint/pull/869). Does this also resolve the issue in your case?\nIf can still create an example, this would be great!\nThank you,\nRoman. I was not able to reproduce the issue with various connectors and routers. I'm closing the issue.. Thanks @ricochet1k !. It might be also nice if the method removes all ports when called with no parameter.\n\n\nThe first parameter is an aray\njavascript\nremovePorts(ports: Array<Element.Port|string>, opt?: Cell.Options): this;\n\n\nOtherwise\njavascript\nremovePorts(opt?: Cell.Options): this;. Thank you for patience and your work @brisberg.. ```\n\n\nbasic - async: addCells\nMessage: Test took longer than 5000ms; test timed out.\nfile:///home/travis/build/clientIO/joint/node_modules/qunitjs/qunit/qunit.js:1980:18\npaper - async paper.addCells() should not throw on non-flat array\nMessage: Test took longer than 5000ms; test timed out.\nfile:///home/travis/build/clientIO/joint/node_modules/qunitjs/qunit/qunit.js:1980:18\npaper - async paper.addCells() should not throw on non-flat array\nMessage: Expected 2 assertions, but 1 were run\nfile:///home/travis/build/clientIO/joint/test/jointjs/paper.js:65:15\n```\n\n\n\n\nAdding cells in async mode does not work anymore (might has something to do with opt.position flag)\n\ngraph.addCells([cell1, [cell2, cell3]]) used to work previously\n. Hi @thorikawa, fair enough. I have created an issue, so we can go back to this later and investigate further.\n\nYou might improve the performance by redefining your shapes and links (check out shapes.standard definitions for best practices;  new standard links without the tools included in the markup but rendered on-hover via linkTools)\nThank you for the contribution.. The paper events are undelegated on pointerdown event in from v2.1.0. This causes the contextmenu event not to fire.\nHere's a workaround for the time being. It prevents pointerdown event from firing when the right mouse button is pressed.\npaper.options.guard = function(evt) {\n  return (evt.type === 'mousedown' && evt.buttons === 2);\n};. Fixed in https://github.com/clientIO/joint/pull/889.. It's been fixed in v2.1. Also linkConnectionPoint is now deprecated. Please use defaultAnchor and defaultConnectionPoint instead.. Duplicate of #262.\nThe issue does not exist for joint.shapes.standard shapes for several reasons.\n\nShapes are defined without scalable group inside their markup.\nShapes do not use yAlignment, xAlignment and resetOffset attributes. (these internally perform measuring on DOM elements).\n\nShapes do not use ref attribute referencing another DOM element (same reason as no. 2).. Hi Doron,\n\n\nEvent\n\n\nif the link:pointerdown and cell:pointerdown events not firing, it's a bug. Please apply the fix below (after you load JointJS/Rappid, before the application logic).\n```javascript\njont.dia.LinkView.prototype.onlabel = function(evt, x, y) {\n    // trigger the pointedown events\n    joint.dia.CellView.prototype.pointerdown.apply(this, arguments);\n    this.notify('link:pointerdown', evt, x, y);\n\n    this.dragLabelStart(evt, x, y);\n\n    var stopPropagation = this.eventData(evt).stopPropagation;\n    if (stopPropagation) evt.stopPropagation();\n},\n\n```\nNote, it would be nice if clicking the label would fire another event (e.g. link:label:pointerdown). It's currently not easy to distinguish between clicking the link path and the label inside the link:pointerdown event handler.\n\nColor\n\nCould you please send me the link's model definition and value of the label attribute?. Hi @dorsha, were you able to fix the label color?. We're about to release a patch. @dorsha, any chance sending me some code so I can reproduce the label text issue? (roman@client.io). Thank You.. Right. How did you add the label to the link? Could you paste here the JavaScript code? e.g.\njavascript\nlink.label(0, { attrs: { text: { text: 'yes' }}});\nDid you change the label markup?. Hi @dorsha, the issue was introduced in JointJS v2.0.1 with this PR. It's fixing another issue in IE. Previously the fill color of the SVGText was inherited from its parent SVGGroup (\".label\"). This has changed as the fill color is now set directly on the SVGText. Could you set the desired fill on SVGText?. Did the solution I mentioned earlier (https://github.com/clientIO/joint/issues/882#issuecomment-389819530) work for you? I've already commited the changes. These will become part of the patch release.. Hi @orius123,  both cell:pointerup and link:pointerup works for me (they are triggered, when I stop dragging a label. What scenario does not work for you?\nWe are planning to release the new version this week.\nFor the deltas, these private properties have been removed from the CellVIew. You have 2 options.\n1. Keep track on deltas yourself or use x and y from the handlers arguments.\njavascript\n// a\npaper.on({\n  'cell:pointerdown': (cellView, event, x, y) => {\n     event.data = { x, y };\n   },\n  'cell:pointermove': (cellView, event, x, y) => {\n    console.log(x - event.data.x, y - event.data.y);\n    event.data.x = x;\n    event.data.y = y;\n  }\n});\n// b\npaper.on('link:pointermove', (linkView, event, x, y) => { /* use x and y */ });\n2. Don't use deltas at all :) \njavascript\n// reseting offset\npaper.on({ 'link:pointermove': (linkView) => {\n  linkView.model.label(0, { position: { offset: null }});\n}});. Fixed in v2.1.3.. Hi, thank you for reporting this.\nThere is a new property end.magnetreferencing the magnet by its unique selector defined in the JSON markup.\n// markup: [{ tagName: 'circle', selector: 'my-port' }]\nmagnet === 'my-port'\nThe end.selector property referencing the magnet by a CSS selector. This does not work correctly when the markup of the element changes dynamically + it's slower and ugly.\nselector === 'g:nth-child(1) > text:nth-child(2)'\nIn the latest version, we don't include selector unless is necessary (missing unique selector).\nIt seems the issue is caused inside _createValidateConnectionArgs(), where we don't take the magnet property into account. \nFix: #888 . Fixed in https://github.com/clientIO/joint/commit/8a6d13350e1fbb62fa5657a6f6c72504d2e8fa3e.. Duplicate of https://github.com/clientIO/joint/issues/797.\nYou are missing Backbone typings.\nnpm install @types/backbone --save-dev. I've replaced alert() calls with console.log() in your fiddle and I can see both events to trigger as expected. What is the scenario to see the event not to fire? Thank You.. What are your steps to reproduce? https://jsfiddle.net/quhxk6yc/1/\nFor instance, if I grab a link and reconnect it from a port to another both events were fired.. For the time being please listen to the graph instead.\njavascript\ngraph.on('remove', function(cell) {\n  if (cell.isLink()) { /* do your logic */ }\n});. Hi Alex,\nthe problem is that two instead of one magnet are actually found. Meaning the result determined by the selector is ambiguous.\nFor the selector\ng:nth-child(1) > circle:nth-child(2)\n and the following structure\n'<g class=\"composed-task\">' +\n    '<g class=\"shape\">' +\n    '<circle class=\"inner\"/>' +\n    '<circle class=\"outer\"/>' +\n    '<text class=\"label\"/>' +\n    '</g>' +\n    '<circle class=\"input-port\"/>' +\n    '</g>',\nboth .outer and .input-port circles are found.\nThe solution would be to change the selector to this.\n```\n\ng:nth-child(1) > circle:nth-child(2)\n```\n\nFix (I'll create a PR soon)\n```javascript\njoint.dia.Cell.prototype.getSelector = function(el, prevSelector) {\n    var selector;\n\n    if (el === this.el) {\n        if (typeof prevSelector === 'string') selector = '> ' + prevSelector;\n        return selector;\n    }\n\n    if (el) {\n\n        var nthChild = V(el).index() + 1;\n        selector = el.tagName + ':nth-child(' + nthChild + ')';\n\n        if (prevSelector) {\n            selector += ' > ' + prevSelector;\n        }\n\n        selector = this.getSelector(el.parentNode, selector);\n    }\n\n    return selector;\n\n}\n```\n\nI suggest using JSON markup (https://resources.jointjs.com/docs/jointjs/v2.1/joint.html#dia.Cell.markup) instead of serialized XML.\nIf you define the selector property (a unique string) in the JSON Markup for a particular magnet, this will be used later for finding this magnet. This is faster, it allows you to target subelements of a port and does not pollute the link's model with ugly CSS g:nth-child(1) > circle:nth-child(2) selector.\n. Fixed with https://github.com/clientIO/joint/commit/bfd2024f69e13979cc3010d4d9fc43a5348b29aa.. Hi Alex,\nlooking at the changelog, there was indeed plenty of new code added (e.g. geometry 11Kb -> 50Kb).\nYou can use joint.core.min.js (287Kb), which contains only basic and standard shapes.. Hi Eliya,\nExport the PNG with a stylesheet including the font converted to data URI.\nhttps://stackoverflow.com/a/11438280/2921495\npaper.toPNG(callback, {\n  stylesheet: '@font-face {  font-family: \"My Font\";  src: url(\"data:application/octet-stream;base64,BASE64FONT\") format(\"svg\");'\n}\n\nI was actually able to make the FontAwesome font work only with woff format.\njavascript\nconst base64 = 'PASTE_BASE64_HERE'. // e.g. cat node_modules/font-awesome/fonts/fontawesome-webfont.woff | base64 | pbcopy\nthis.paper.openAsSVG({\n  useComputedStyles: true,\n  stylesheet: '@font-face { font-family: \"FontAwesome\"; src: url(data:application/x-font-woff;charset=utf-8;base64,' + base64 +'); font-style: normal; font-weight: 400; }'\n});. Have you tried the joint.dia.Graph.prototype.resizeCells() yet? You pass cells you wish to resize (in your case an element with its embeds) and desired width and height.. Does the overlay need to be interactive? You could set pointer-events=\"none\" on the overlay.. Hi Paul,\nplease try to override the getCellsBBox() graph method as follows.\n```\njoint.dia.Graph.prototype.getCellsBBox =  function(cells, opt) {\n    return joint.util.toArray(cells).reduce(function(memo, cell) {\n        if (cell.isLink()) return memo;\n        var rect = cell.getBBox(opt);\n        var angle = cell.angle();\n        if (angle) rect = rect.bbox(angle);\n        if (memo) {\n            return memo.union(rect);\n        } else {\n            return rect;\n        }\n    }, null);\n};\n\n. Hi, could you please create a JSFiddle to demonstrate the issue? I could not reproduce this (https://resources.jointjs.com/demos/paper). Thank you.. The issue is caused by `[Intervention] Unable to preventDefault inside passive event listener due to target being treated as passive. See https://www.chromestatus.com/features/5093566007214080`.. Temporary workaround.javascript\njoint.dia.ElementView.prototype.pointerdown = function(evt, x, y) {\n       var data = this.eventData(evt);\n        if (data.stopPropagation) return;\n        joint.dia.CellView.prototype.pointerdown.apply(this, arguments);\n        this.notify('element:pointerdown', evt, x, y);\n        this.dragStart(evt, x, y);\n    };\n``. We'll leave this open until this gets fixed in JointJS. Thank you.. Fix inv2.2.0`.. You are right. This is a bug. A workaround for the time being below.\n```javascript\njoint.dia.Paper.prototype.pointermove = function(evt) {\n    evt.preventDefault();\n\n    // mouse moved counter\n    var data = this.eventData(evt);\n    data.mousemoved || (data.mousemoved = 0);\n    // FIX FOR POINTERCLICK\n    this._mousemoved = data.mousemoved;\n    var mousemoved = ++data.mousemoved;\n\n    if (mousemoved <= this.options.moveThreshold) return;\n\n    evt = joint.util.normalizeEvent(evt);\n\n    var localPoint = this.snapToGrid({ x: evt.clientX, y: evt.clientY });\n\n    var view = data.sourceView;\n    if (view) {\n        view.pointermove(evt, localPoint.x, localPoint.y);\n    } else {\n        this.trigger('blank:pointermove', evt, localPoint.x, localPoint.y);\n    }\n\n    this.eventData(evt, data);\n\n}\n``. Hi Francois,  try to find and replace alljQuerywithJQueryin therappid.mind.d.ts. We have to address this issue in the very next patch release. I'm sorry for inconveniences.. Fixed inRappid v2.4.0`.. > certainly there is a gap between image and bounding box\nThere is a gap if the image ratio does not match the model's size and preserveAspectRatio SVG attribute is set to something other than none.\n\nLinks are \"sticked\" to the bounding box, and how to make links \"stick\" to the image? Can the end points of links move freely(not stick at the edge centers, for example)?\n\nYes, it's possible.\njavascript\n// connection point is at always at the anchor point\njoint.paper.defaultConnectionPoint = { name: 'anchor' }\n// an example of a custom position of the anchor\njoint.paper.defaultAnchor = { name: 'left', { args: { dx: 10 }}}\nThe anchor point can be also changed via UI with Source Anchor link tool (https://resources.jointjs.com/docs/jointjs/v2.1/joint.html#linkTools.SourceAnchor).\n. preserveAspectRatio is an SVG attribute (https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio). Maybe you don't actually want the image to loose its aspect ratio? Could you send some screenshot?\nvar image = new joint.shapes.basic.Image({\nposition : {\nx : 50,\ny : 40\n},\nsize : {\nwidth : 16,\nheight : 16\n},\nattrs : {\n  image : {\n    \"xlink:href\" : \"images/background.png\",\n    preserveAspectRatio: \"none\",\n    width : 16,\n    height : 16\n  }\n}\n});\n. That was just an example. See more about anchors here and connection points here.. The CSS styles are not loaded. Could you create a JSFiddle that demonstrates the issue?\nAlso if possible use joint.shapes.standard.Link over joint.dia.Link (legacy). These require no external stylesheet and are much faster.. I am not really a react guy. I hoped the community can help here.\nYou said that import 'jointjs/css/themes/default.css'; was applied correctly (default.css  contains only colours). Why is the whole area blank when you use  import 'jointjs/dist/joint.css';? Can you investigate (see the web inspector and check the DOM)? Thanks. Fixed in v2.2.0.. Hi Alex,\nyou can try to override joint.util.deepClone with _.cloneDeepWith (https://lodash.com/docs/#cloneDeepWith) and use some customizer that takes your object into account. Or override the joint.dia.Cell.prototype.removeProp (https://github.com/clientIO/joint/blob/master/src/joint.dia.cell.js#L540) to use _.merge({}, this.get(property)).\nTo be on the same page, the attrs attribute suppose to store only the SVG presentation attributes. It's a hash, where keys are the selectors to an SVGElement and values are SVG attributes, which will be set to the SVGElement. Any other model-related data are meant to be stored outside the attrs object.\njavascript\n// a presentation attribute <text fontSize=16></text>\n// element.attributes.attrs.label.fontSize\nelement.attr('label/fontSize', 16);\n// a custom data\n// element.attributes.myData\nelement.prop('myData', { test: true });\n// WRONG\n// <text my-data=\"[object Object]></text>\"\nelement.attr('label/myData', { test: true });\nSo unless your tsObj getters dynamically return presentation attributes, you can avoid this issue by storing your data outside the attrs object.\nNot, the cloning is necessary so the Backbone triggers a change event. In this case of removeProp() though, a simple shallow copy should also does the trick (I think).\n. try to call evt.stopPropagation() inside the onAddAnswer handler.. I see. Try to listen to mousedown and touchstart in the events object (click comes after pointerdown). I bet, this is happening in the Chrome browser only (\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=5212). Altenatively, you can use the event attribute (https://resources.jointjs.com/docs/jointjs/v2.1/joint.html#dia.attributes.event).. Hi, could you send us an example of how you use it?. We can introduce a method for getting paper dimensions. If the value is percentage we ask the DOM for the size. if it's a number we return this number.\nIn the meantime, you might also experiment with getters/setters as shown below.\n```js\nObject.defineProperty(paper.options, 'width', {\n  get: function() { return $(this.el).width(); }\n});\npaper.$el.css('width', '100%');\npaper.scaleContentToFit();\n```\n. Fixed by f40c4f2fe0e344afed759e5c964deb0f466583d7. Fixed by 099509fa70145d029079103793ebb49a006b8471. Fixed by ff249e00c8827a24a9adf219eb9557759d9b387b. Fixed in v2.2.0.. Could you please elaborate more? Do you use async option as shown here.\n. What error do you see, when you use async option? Is that a Typescript error?. I don't understand how adding async: null to the default options may help. Could you create a JSFiddle or send me an example, where async: true option does not work?. render:done is triggered after addCells() and resetCells() as mentioned in the  docs.\nhttps://jsfiddle.net/kumilingus/5esyt7hn/. It's triggered on the paper (not on the graph).\njs\nvar paper = new joint.dia.Paper({ async: true });\npaper.on('render:done', function() {\n    console.log('xxx');\n});\ngraph.resetCells([el1, el2]);. It seems like you were setting magnet: true attribute on a circle element. When you changed the markup, you hid the circle with an image (user can't reach the circle with a pointer). You can try setting pointer-events: none on the image element.\njs\ndecisionCell.portProp('no', 'markup', '<g><circle r=\"20\" fill=\"#4B525C\" cx=\"-100\" cy=\"27\"/><image class=\"port-body\" pointer-events=\"none\" xlink:href=\"images/automation/thumbs-down-white.svg\" x=\"-116\" y=\"11\" height=\"32px\" width=\"32px\"/></g>');. Could you send me the definition of your shape or a demo? Do you have any connection validation in place (validateConnection or validateMagnet)?. Thanks!. Thanks @gricey432 . Fixed in v2.2.1.. How do you define your shape? There is probably an issue with the type attribute.\n. Right, it's something to be aware of. There is a static method joint.dia.Element.define(type, defaults, prototype, static) which makes sure the type is properly set on the model. It can't be used with Typescript though, as the new class has no TS definition.\njs\nvar MyClass = joint.dia.Element.define('myShapes.MyClass');\nvar myClass = new MyClass();\nmyClass.addTo(graph);\nassert.ok(myClass.get('type') === `myShapes.MyClass`);\nassert.ok(joint.shapes.myShapes.MyClass === MyClass);\n. joint.shapes.html is not part of JointJS (it was only mentioned in the tutorial). You have to define the typescript definition on your side. You can import joint.shapes.html.ElementView separately and pass it to the paper via elementView option.\n. Please try to set paper.options.clickThreshold = 10 and test again. It's probably because there is a mousemove event between mousedown and mouseup.. When you start dragging a magnet a link is added to the graph with the source set to the magnet elment and the target set to a point under the pointer.\nIn order to get the target property after a link was connected to a target (mouse was released over another magnet), you should listen to the paper's link:connect event.\njs\npaper.on('link:connect', function(linkView, evt, elementViewConnected, magnet, arrowhead) {\n  // if arrowhead === 'target' then linkView.model was connected to elementViewConnected.model\n});. You can listen to link:connect and link:disconnect paper event.\npaper.on('link:connect', function(linkView, evt, elementViewConnected, magnet, arrowhead) {});\nhttps://resources.jointjs.com/docs/jointjs/v2.2/joint.html#dia.Paper.events. Hi, I think the way you had used extend was not correct. define is just syntactic sugar for extend,  that make sure the shape type is correctly set on the model and attributes are merged with the parent class.\nhttps://github.com/clientIO/joint/blob/master/src/joint.dia.cell.js#L719-L729. When you use extend make sure to store the class under the path based on the type.\ntype: \"standard.Rectangle\" -->  namespace: joint.shapes.standard.Rectangle = joint.dia.Element.extend(/ .. /)\nIf you are using TS and extend you will have to create your own namespace and pass it to the graph and paper via cellNamespace resp. cellViewNamespace options.. Hi, please try this one.\n```js\nfunction zoomOnMousewheel(x, y, delta) {\n    var MIN_ZOOM = 0.2;\n    var MAX_ZOOM = 4;\n    var currentZoom = paper.scale().sx;\n    var newZoom = currentZoom + delta * 0.2;\n    if (newZoom > MIN_ZOOM && newZoom < MAX_ZOOM) {\n        paper.translate(0, 0);\n        paper.scale(newZoom, newZoom, x, y);\n    }\n}\npaper.on('blank:mousewheel', function(evt, x, y, delta) {\n    evt.preventDefault();\n    zoomOnMousewheel(x, y, delta);\n});\npaper.on('cell:mousewheel', function(_, evt, x, y, delta) {\n    evt.preventDefault();\n    zoomOnMousewheel(x, y, delta);\n});\n``. No,joint.ui.PaperScroller` is part of Rappid (commercial extension).\nA nice solution of yours. Works perfectly!. You can pass the id attribute when you creating a new shape/link.\njs\nnew joint.shapes.standard.Rectangle({ id: 'my-id-1234556' });\nOtherwise, you would need to override the initialize method (https://github.com/clientIO/joint/blob/master/src/joint.dia.cell.js#L77-L89).. Hi Mariusz,\nI see.  The cloneCells method is not that easy to adjust. I think we should create a new dia.Cell method e.g. generateId() => joint.util.uuid() and use this instead of calling joint.util.uuid() directly at multiple places. Then, you will be able to override a single cell method to change the ID generation strategy.\n. Thanks, this is indeed a bug. \nhttps://github.com/clientIO/joint/blob/master/src/joint.dia.element.js#L1043\nShould be changed to joint.dia.CellView.prototype.pointerdown.apply(linkView, evt, x, y);. There is a built-in event for magnets - element:magnet:pointerclick (https://resources.jointjs.com/docs/jointjs/v2.2/joint.html#dia.Paper.events).\n. paper.on('element:mouseover', function(view, evt) {\n  var port = view.findAttribute('port', evt.target);\n  if (port) {\n    console.log(port)\n  }\n});. Thanks, Ben!. No, you can't do this with the HeaderedRectangle, because the body of this shape is an SVGRectangle (<rect/> element won't recognize d attribute).\nCreate a custom element based on the HeaderedRectangle instead.\nYou need to take the source code of the standard.HeaderedRectangle, copy it, rename it to e.g. standard.HeaderedPath, change the markup so the body is an SVGPath,  define TS for this shape. Now you can use refD attribute within the shape.\nWe have currently no plans adding this element to the standard namespace.. Hi @Supamiu,\nyeah, using blank:pointerdown is the right way to go. Please check out the code below.\njs\npaper.on({\n    'blank:pointerdown': function(evt, x, y) {\n        var graph = this.model;\n        var origin =  new g.Point(x, y);\n        var element = new joint.shapes.standard.Rectangle();\n        graph.startBatch('add_element');\n        element.position(x, y);\n        element.resize(1, 1);\n        element.addTo(graph);\n        evt.data = { origin: origin, element: element };\n    },\n    'blank:pointermove': function(evt, x, y) {\n        var origin = evt.data.origin;\n        var element = evt.data.element;\n        var current = new g.Point(x, y);\n        var diff = current.difference(origin);\n        var bbox = element.getBBox();\n        if (diff.x > 0) {\n            bbox.width = diff.x;\n        } else if (diff.x < 0) {\n            bbox.x = origin.x + diff.x;\n            bbox.width = -diff.x;\n        }\n        if (diff.y > 0) {\n            bbox.height = diff.y;\n        } else if (diff.y < 0) {\n            bbox.y = origin.y + diff.y;\n            bbox.height = -diff.y;\n        }\n        element.set({\n            position: { x: bbox.x, y: bbox.y },\n            size: { width: bbox.width, height: bbox.height }\n        });\n    },\n    'blank:pointerup': function() {\n        this.model.stopBatch('add_element');\n    }\n});.  You're adding a link to a graph, which is not connected to any paper. That's why no linkView is rendered and could be found.\nSpecifically, you should not do this this.graph = new joint.dia.Graph();\nYou should do something like that link.addTo(this.model);\n. This is not supported yet. We're working on this though and hopefully this will be ready for the next big release.\nRight now, you would need to create a tiny element between masterClass2 and LookUpClass2, which would be connected to the masterClass too.. How do you set the vertices on links?\n// plain object\nlink.set('vertices', [{ x: 100, y: 100 }]);\nor\n// g.Point\nlink.set('vertices', [new g.Point(100, 100)]);\n. Yeah, that would be the other way round. You should not use a g.Point() for vertices. It was just a guess. Could you create a simple JSFiddle, which demonstrates the issue?\n. Could you try to define the vertex as a plain JSON? It worked in my case.\nvar linkTypes: LinkType[] = [new LinkType(\"myLink\", eleTypes[0].id, eleTypes[1].id, 'red', [{ x: 400, y: 200 }])];. Hi Kevin, are you missing length here by any chance? i.e. elAttrs['ref-x'][elAttrs['ref-x'].length-1]\nelAttrs['ref-x'][elAttrs['ref-x']-1] is always undefined (except for elAttrs['ref-x'] = \"1\").\n. It's not necessary to compute the excludeAncestors array for every single element. All ancestors can be found in outer scope (source and target of the link stays the same). Note that performance matters in this case.\n. Would be nice if we could have getAncestors() method on the joint.dia.Cell prototype itself. Returning an array of ancestor cells (or [] if the cell has no parent).\nPS: I would rather use an iteration (while (parent) { .. }) instead of a recursion.\n. this.collection is a Backbone collection. So we can call directly this.collection.get(parentId) here.\n. Is this actually working for you? Doesn't seem to me that you are exporting the jointjs library here (but the namespaces only).\n. Are you able to add some dummy clientX and clientY to synthesized events in your unit test?\n. Can we change this to if (evt.target.getAttribute('magnet') != null) return; to prevent unnecessary indenting?\n. Here we are missing a batch now. A new link is added to the graph with no previous batch start resulting that one user action (from pointerdown to pointerup) it's not entirely wrapped in a batch.\nI'm not sure what are you using batches for, but one of the usage might be a history (undo/redo) implementation, where creating a link, dragging its arrowhead and then connecting it to an element should be an atomic action.\n. and batch:stop here. Once I merge this PR I'm going to add names for the batches. e.g.\nthis.model.trigger('batch:stop', { batchName: 'add-link' });\nwhich might be useful not only for debugging purposes.\n. If joint.dia.cell.js doesn't have to be changed after all. Can you please remove this extra lines?\nAnd once everything else is finished and ready for merging to the upstream can you merge all your commits into a one so we keep the history clearer and better to read?\ngit rebase -i HEAD~[number-of-commits]\n. I see, but I don't think it is unnecessary. The problem is that batch:start is triggered way to late now. Suppose you are listening to graph on all events and you create a link by dragging & dropping a port.\nadd, batch:start, change:target, change:target, change:target, batch:stop is what you see.\nbatch:start, add, batch:start, change:target, change:target, change:target, batch:stop, batch:stop is what you want to see (or alternatively batch:start, add, change:target, change:target, change:target, batch:stop, but an extra batch is not an issue here).\nIf you add some batch names it starts making more sense I think.\n- cell batch:start/stop :  { batchName: 'pointer' }\n- element (a valid magnet branch) batch:start/stop : { batchName: 'add-link' }\nbatch:start(add-link), add, batch:start(pointer), change:target, change:target, change:target, batch:stop(pointer), batch:stop(add-link)\n. James I think you've kind of done what you described. I can not see any double calls anymore.\n- A batch named pointer can be triggered by a link or element. That's why it's handled on the cellView.\n- A batch names add-link can be triggered by an element only. That's why it's handled on the ElementView.\n- Note also there is a bunch of other batch:start/batch:stop triggered on the model (to-front, to-back, embed, unembed, resize, remove, clear). \nI'm very happy with what you've done here. I think it's ready now. Do you mind run git rebase -i HEAD~10 and squash commits before we merge it? Cheers.\n. delta argument missing?\n. Note that this context is not a joint.dia.Element but joint.dia.Graph here.\nBatches in general doesn't have to be related to a single element. It could be related to a set of elements and links (e.g subgraph removal).\nI suggest not to mention the element attribute here at all.\n. Batches makes sense only if an element is part of a graph. I would take advantage of the fact, that startBatch is already defined on the graph. i.e.\njavascript\nif (this.graph) {\n  return this.graph.startBatch(name, _.extend({ element: this }, opt));\n}\n. Can we fallback to a default batch name if no batchName is provided? i.e\n``` javascript\ninitialize: function() {\n   // ...\n   this.on('batch:start', this.onBatchStart, this);\n   // ..\n},\nonBatchStart: function(opt) {\n  opt = opt || {};\n  var batchName = opt.batchName || default;\n  this.activeBatches[batchName] = (this.activeBatches[batchName] || 0) + 1;\n}\n``\n. There is nostopBatchmethod defined oncollection` now. It's a legacy code anyway and this should be changed in the following way.\n``` javascript\nif (this.model.graph) {\n  this.model.startBatch('pointer');\n  this._graph = this.model.graph;\n}\nif (this._graph) {\n  // we don't want to trigger event on model as model doesn't\n  // need to be member of graph anymore (remove)\n  this._graph.startBatch('pointer');\n  this._graph = null;\n}\n``\n. Handlers does not have to return a value + I would rather not to use constructs likea && b()butif (a) { b() }` instead\njavascript\nif (!this.hasActiveBatch('to-front') && !this.hasActiveBatch('to-back')) {\n  cells.sort();\n}\n. Great, well spotted.\n. With your approach batchName with undefined value and null falls into different categories.\n{ 'undefined':  1, ' null': 1 }. But the meaning is kind of the same.\nHow about this?\nvar batchName = opt.batchName != null ? opt.batchName : 'undefined';\n. Maybe we should get rid of this element attribute equals this here.\nThe joint.dia.Cell.prototype.startBatch can add attribute cell equals this to the option object for all calls.\n. For the sake of completeness I would add option { cell: this.model } here.\n. Oh yeah. We've missed this.\n. Could you please do some check here that data are not undefined? I had problem with some compatiblity issues when an application was triggering batch:stop without data {}.\nAlso we started calling it data instead of e or opt.\n. Well instead of triggering a new event (sorted) just for the purpose of tests I would rather use sinon in the following way.\nvar spy = sinon.spy(this.paper, 'sortViews');\n// later\nassert.equal(spy.callCount, 1);\n. Not completely. If an app uses the old approach i.e. graph.trigger('batch:stop'); (not graph.stopBatch();) this code throws an exception.\n. Note that batch names were added much later than batches themselves.\n. Can we use V.rectToPath here and take rx & ry from highlightOptions?\n. It's better to do var className = _.result(this, 'className'); here. If the className is a function it will be executed in this context (that is also what Backbone does).\n. The entire block can be rewritten as follows.\njavascript\nthis.$el.addClass(className); //  jQuery `addClass()` does it all.\n. Can we introduce here a new feature e.g. elementMove and simply use if (this.can('elementMove')) { /* move element */ }?\n. Can we get rid of this check here and again introduce a new feature? This time e.g toolsUse and use it here instead?\n. First of all I think we should avoid using this construct var interactive = _.isFunction(this.options.interactive) ? this.options.interactive(this) : this.options.interactive; on multiple places. As It is already implemented in the CellView.prototype.can() method.\nWhen you look at the pointerdown method, it stops executing the method rigth at the beginning when interactive=false. If there was not such a check the method would carry on executing and terminates with no effect at some other place where can('feature') would return false (because can('feature') always return false if interactive=false).\n. Right. Not there but here. This is only part that is not inside a feature check. can('useLinkTools') should be used here.\n. Sure :)\n. Does this[end + 'Magnet'] || this.el do the same job?\n. This should be evt, arrowhead, elementView, magnetEl. Not evt, arrowhead, elementModel, magnetEl.\n. This is not safe enough. e.g. a change is detected for { id: 'a', port: null } ==> { id: 'a' }.\n. Oh yeah. How about this[end + 'View'].el?\n. Good point :)\n. find first then clone\n. do not clone\n. do not clone\n. do not deep clone, just shallow clone\n. do not deep clone\n. _.eachRight(ports, function(groupPorts, groupName) { /* .. */ }, this)\n. Can we define this method on prototype?\n. g.Ellipse does not exist, right? only g.ellipse?\n. Can we please add a test for this?\n. Can we please add a test for the absolute option?\n. Please ignore this. The g.Ellipse alias for g.ellipse has been added.\n. Note that if path starts with / it points to a different property in an object.\n'a/b'    { a: { b: 'value' }\n'/a/b'   { '': { a: { b: 'value' }}\n. Sure. The / has to be there in any case. Even if the path already starts with /.\nvar portPath = ['ports/items/', index, '/', path].join('');\n. The same applies here. You can not trim last /, as you would change the path meaning.\n. Can we add a list of all types of interactions with a short description?\n. indexOf() compares using strict equality (===) i.e. no two points (object references) will be equal here. Try g.line('0 0', '10 10').intersect(g.rect(0,0,10,10)).. Do you have any special reason why you do not use ['attrs'].concat(path) here? It's not slower (https://jsperf.com/array-unshift-vs-prepend/5) and easier to read IMO.. Can we move \"dot\" logic to default options as  gridPattern and updateGridPattern? . Please always expose SVGElement|HTMLElement not Vectorizer element nor jQuery element.. The method supposed to remove multiple attributes i.e. removeAttrs(paths, opt).  If paths is a string do not remove single attribute. That's why removeAttr() is there.. magic! :). Definitely. I'll make changes.. typo curve.toPoint(). Using cells.some()might be more efficient here. (It should be supported from IE9+).. typo var. add toolView argument to TS def. already defined as a function argument . already defined as a function argument . I would prefer to filter the ports once, but search multiple times.\njavascript\nvar remainingPorts = currentPorts.filter(cp => !portsForRemoval.some(rp => portsEquals(cp, rp)));. bindAll not omit. deprecated (not meant to be mentioned in the docs). Let's store this.length() into a variable here as it's calculated twice.\n. ",
    "cpettitt": "Thanks!\nWhen the layout algorithm completes there should be no dummy nodes or edges in the output, thought it is possible they are being leaked as a bug. If you know of an input that triggers that condition I can do some investigation. Regardless, the checks you added are a reasonable safety measure.\n. ",
    "norm2782": "I'm calling window.joint.layout.DirectedGraph.layout(graph, args)\nThe context is somewhat more complex than usual. We're compiling Clean [1] down to JS and we can interact with existing JS libraries, so we're calling the above from within our custom runtime system.\n[1] http://wiki.clean.cs.ru.nl/Clean\n. To give you an impression, below is a snippet of generated code where layout is called:\nfunction __pref_layoutGraph(__g_0, __world_1) {\n    var ___x_1_0_1 = [__pref_jsEmptyObject, [__world_1]],\n        __obj_1_1_1 = [___predefined_tupsels2v0, [___x_1_0_1]];\n    return ___predefined_tupsels2v1([__pref_callFunction$eval, [\\\"joint.layout.DirectedGraph.layout\\\",[0,___predefined__Cons$n,[__pref_toJSArg,[__g_0]],[0,___predefined__Cons$n,[__pref_toJSArg,[__obj_1_1_1]]\nAs you can see \"joint.layout.DirectedGraph.layout\" is passed as a string and is evaluated later in __pref_callFunction$eval.\nMy previous comment still holds to an extent, but there is a lot more bookkeeping code around it that probably gets in the way first.\nWhile I recognise that this is probably not the first use case you had in mind when writing JointJS, it does highlight that JointJS is sensitive to JavaScript's dynamic scope for the \"this\" keyword, which currently limits the use cases for JointJS. We haven't run into this particular problem with jQuery and the Google Maps API, which suggests that it is possible for libraries to exercise more control over the scope of \"this\".\n. Seems like you can already explicitly tell the layout algorithm to lay things out horizontally by providing a 'rankDir: \"LR\"', solving my particular problem. Still, it would be nice if the layout algorithm could take the paper size into account.\n. ",
    "mulderp": "A browserified approach might be handy if you would start working on larger projects. You could then organize sub-graphs in modules, and re-use modules across different projects too. It would be even possible to create a diagramming library and require standard components with npm. Mayb @substack can list more advantages. I still have to get started with jointjs, but so far it looks great. Thanks for sharing this project!\n. ",
    "mbektimirov": "+1 for full npm/Browserify support. All Joint modules should be well formed to work with node style module loading, now it is not.\n. ",
    "jbueza": ":+1: \n. @RapSolutions awesome! :+1:  \n@DavidDurman we able to absorb this in? I can update my current project to include this, which makes my life easier with the app I'm building. :o)\n. :+1:  @RapSolutions  totally works better with defaultLink :cat: \n. :+1: \n. :+1: \n. Seems up now?\n. ",
    "shotlom": ":+1: \n@DavidDurman love your work.\nOver on stackoverflow you mention you can send JSON to the client. \nstoreToDBOrSendToClient(graph.toJSON())\nI'm struggling to do this (example would be great) but would browserifying make this a little easier?\n. ",
    "serapath": "I just tried to install npm install jointjs and it gives me outdated version 0.8 which doesnt even work properly when i browserify and require it.\nThen i tried with installing directly from github, but that fails too.\nIn package.json there should be a main property that tells where to enter the library.\nThere are a lot of files in that project and i tried now to require('jointjs/dist/joint) but even that fails because paths are wrong.\nThere is actually an index.js in the project root which seems to be there just for browserify, but its missing some stuff, because i cannot follow this demo example because it cannot find joint.dia.paper.\nIt would be easy to fix if i would know what is all the stuff that is supposed to be on the joint object.\n. See #115 \n. thx @marksyzm :-) i hope this gets merged back into the original project. For now i'm using my fork.\nYou can install it using npm install serapath/joint --save instead of npm install daviddurman/joint. The npm install jointjs is outdated anyway and still uses version 0.8.0\n. i dont know what keeps it from beeing merged.\nthe repo owner said he would take a look. i guess he is busy.\n. puh, @marksyzm what exactly did you change? You removed a lot of code that was added to make the browserify thing work. Did you do the changes ON TOP of my fork or the original fork and then just created a PR to my fork?\n@kumilingus maybe you can check out HEAD~2, the commit is called \"FIX commonJS browserify support\" and remove everything that comes after. Does it then work for you?\n. ",
    "chill117": "Browserify support added by PR #135, which has been merged.\n. The major issues with IE have been fixed by PR #159.\nThere are still probably some issues, but most functionality works now in IE.\n. I think this PR can be closed.\n. I am not able to reproduce this problem. Could you provide a code sample which replicates the problem?\n. Duplicate of PR #136 \n. I think if such a thing would be done, the best way to start would be to first create a shim that includes only the jQuery methods that joint uses (in core, plug-ins, and tests).\n. This is on the road-map for the second half of this year.\n. Manipulating the viewport SVG element directly should be avoided. Instances of joint.dia.Paper store the origin internally and when you use the paper.scale() method to set the scale of the paper, the origin might also need to be scaled. In this case, the internally stored origin are used and will overwrite the translate property that has already been set on the viewport element.\nSetting the origin of the paper should be done with paper.setOrigin().\n. Fixed by PR #139 \n. I have re-registered the jointjs package with bower. You can now  install the latest jointjs via bower like this:\nbower install --save joint\nYou may need to run the following to clear your bower cache:\nbower cache clean\n. Should work again now. You may need to run the following to clear your bower cache:\nbower cache clean\n. Thanks for the effort here. We corrected the documentation to match the actual behavior, rather than change the behavior. You can see the change here.\n. Could you create a JSFiddle with your sample code that isn't working?\n. When using joint as a node module, you should include the main index.js file like this:\nhtml\n<script src=\"node_modules/jointjs/index.js\"></script>\nI will try a test integration of node-webkit tomorrow and report back my results here.\n. Unfortunately, the latest version of jointjs will not work with node-webkit because of issues with lodash 2.x and node-webkit. Lodash 3.x fixes the node-webkit problems, but there will need to be substantial changes to jointjs to get it to work with lodash 3.x.\n. The npm module needs to be updated to the latest release. Hopefully this is something I can do today.\n. I am currently blocked from doing this by a few outstanding issues. Will keep this issue updated.\n. The jointjs npm module has now been updated to the latest version (0.9.4).\n. I have added a comment to your stackoverflow question. I will close this issue now, as there is no content here.\n. This has been fixed by PR #159.\n. The libs directory is created by running bower install from the project root. But there are some demos that aren't working, as I've been making changes to build processes and the build files (in the dist directory). I have been working on this the last couple days. I will update this issue again once I am sure that all demos are functioning properly again.\n. There might be more changes needed to make jointjs work well with CSP. I'll add this to my to-do list.\n. @mike-goodwin I've updated jointjs with fixes that will allow you to use the content-security-policy header  without unsafe-eval. These changes will be included in the next jointjs release (0.9.8). Here's the CSP header that will work with jointjs:\nadd_header Content-Security-Policy \"default-src 'self'; img-src 'self' data:;\";\n. Keep your eyes open for the next time you run into problems with grunt-newer. If I can reproduce the problem, I might be able to find a definitive fix for it.\n. Joint uses Backbone's functionality quite extensively. At this time it's just not possible to use joint without it.\n. I did these steps:\n- Opened http://www.jointjs.com/demos/logic\n- Click + hold the left mouse button at the center of the paper\n- Drag the cursor outside of the edge of the paper\nThis results in a selection occurring on HTML elements outside the paper element. This exact behavior happens in Chrome, Firefox, and Internet Explorer. What is the expected behavior?\n. > Note that with Firefox, if you click and hold an element, it will not select any of the HTML elements outside the paper. I would consider that the expected behaviour.\n~~I was not able to reproduce the case where no HTML elements are selected outside the paper (the case you describe as the desired behavior). I tried these browsers:~~\n- ~~Firefox 41 on Ubuntu~~\n- ~~Chrome 46 on Ubuntu~~\n- ~~IE 10 on Windows 7~~\n- ~~Firefox 38 on Windows 7~~\n- ~~Chrome 46 on Windows 7~~\n- ~~Opera 33 on Windows 7~~\n~~In all browsers, HTML elements are selected outside the paper.~~\nEdit:\nI see now what you're saying. You must click and hold on an element from the paper, not just anywhere. I am able to reproduce this now.\n. I've looked at this closely. I don't know if this is something we can/should fix within joint itself. Since it's not any joint HTML/SVG elements being selected, but your UI elements outside the paper. Have you tried using user-select for the UI elements being selected?\n. Fixed this upstream. Should be included in the next joint release.\n. @elyas-bhy Sure thing\nChange the following:\n``` js\n    pointerdown: function(evt) {\n    evt = joint.util.normalizeEvent(evt);\n\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n\n    var localPoint = this.snapToGrid({ x: evt.clientX, y: evt.clientY });\n\n    if (view) {\n\n        this.sourceView = view;\n\n        view.pointerdown(evt, localPoint.x, localPoint.y);\n\n    } else {\n\n        this.trigger('blank:pointerdown', evt, localPoint.x, localPoint.y);\n    }\n},\n\n```\nTo:\n``` js\n    pointerdown: function(evt) {\n    evt = joint.util.normalizeEvent(evt);\n\n    var view = this.findView(evt.target);\n    if (this.guard(evt, view)) return;\n\n    evt.preventDefault();\n\n    var localPoint = this.snapToGrid({ x: evt.clientX, y: evt.clientY });\n\n    if (view) {\n\n        this.sourceView = view;\n\n        view.pointerdown(evt, localPoint.x, localPoint.y);\n\n    } else {\n\n        this.trigger('blank:pointerdown', evt, localPoint.x, localPoint.y);\n    }\n},\n\n```\nThat should do the trick.\n. Good catch. I'll look into fixing this.\nReferences:\n- String.prototype.replace()\n- String.prototype.search()\n- String.prototype.match()\n. This has been fixed upstream and will be included in the next release.\n. Can you provide some sample application code that highlights the specific problem?\n. I looked at the fiddle. I see this error in the console:\nUncaught TypeError: Cannot set property 'variable' of undefined\nLooking at the line that error referenced, I can see this:\njs\n_.templateSetting.variable = 'data';\nThis means that _.templateSetting is undefined. Which makes sense. If you look at the lodash documentation you can see that it is supposed to be _.templateSettings with an s at the end. I made the change to your fiddle and now it works:\nhttps://jsfiddle.net/x5kh10o2/2/\n. Can you provide some sample application code that you've written that is problematic for you?\n. It sounds like you're saying that the joint.shapes.uml.Class is not auto-resizing to fit its inner text when changing its name, methods, or attributes and that this would be the expected behavior?\nReference:\n- http://jointjs.com/demos/umlcd\n. I've updated the npm package to the latest release (v0.9.5)\n. I am not able to reproduce this problem. Could you provide exact steps to reproduce the issue?\n. Just checking in. Are you still experiencing the issue?\n. I tried multiple different ways to reproduce this, and I still cannot. Can you provide a JSFiddle or some sample code (with JointJS version number)?\n. Yes, you can use element.rotate(180).\n. Unfortunately none of us here have had time to tackle this issue just yet.\n. Have a look at the directed graph plugin. The site groups it with the Rappid (commercial) plugins, but it's part of JointJS and is free to use.\n. I don't see any error message. Can you copy/paste the exact error message you're seeing here?\n. Closing this issue because it looks like you solved the problem.\n. Adding a deprecated warning via the make script feels pointless. The warning gets buried by an avalanche of other messages from the build / test tasks.\n. There are still some dev dependencies installed via bower, which could not be removed just yet. I will close this issue for now; can revisit later.\n. > 1. Please rebase.\nThere are merge commits. Are you sure about that?\n. @kumilingus All set ;)\n. > Is grunt dist in README.md?\nIt is now :)\n. Maybe you're looking for something like tree layout? There have been a lot of improvements made to that plugin recently that are not visible in the demo. For one, it is now possible to have the tree layout go in any direction (up->down, left->right, mix between).\n. See the comment thread on PR #243 for one place that could benefit from these new batch methods. Also, be sure to look closely at the logic involved with that use-case.\n. Thanks for the contribution. It looks good. I've tested it with both JointJS and Rappid, and everything is working.\nI will merge it now, but with the plan of refactoring what you've done into a proper API on the graph model so that we can replace the following:\njs\n        //In order to avoid multiple sort during toFront and toBack deep operations\n        //The change:z event is disabled during batch:start and reactivated when all the batches have stopped\n        var activeBatches = 0;\n        this.on('batch:start', function(e) { if ((e.batchName === 'to-front') || (e.batchName === 'to-back')) { ++activeBatches; }});\n        this.on('batch:stop', function(e) {\n            if (activeBatches > 0 && ((e.batchName === 'to-front') || (e.batchName === 'to-back'))) {\n                this.sort();\n                --activeBatches;\n            }\n        }, this);\n        // Backbone automatically doesn't trigger re-sort if models attributes are changed later when\n        // they're already in the collection. Therefore, we're triggering sort manually here.\n        this.on('change:z', function() { return activeBatches === 0 && this.sort(); }, this);\nwith:\njs\n        // Backbone automatically doesn't trigger re-sort if models attributes are changed later when\n        // they're already in the collection. Therefore, we're triggering sort manually here.\n        this.on('change:z', function() { return !this.hasActiveBatch() && this.sort(); }, this);\nHave a look at issue #239 for more info about the batch-related improvements that we have in mind.\n. How about this?\njs\nthis.on('change:z', function() { return !this.hasActiveBatch('to-front') && !this.hasActiveBatch('to-back') && this.sort(); }, this);\nThe hasActiveBatch method will accept an optional name (batch name) argument.\nEdit:\nI see what you're saying. I'll have to look at the toFront() and toBack() methods more closely to see how we could refactor this.\n. > I don't want to be a pain in the neck, but this performance issue is what makes my project unusable in many situations.\nYou are not being a pain in the neck. It is important to hash out things clearly so that we implement a solid solution. We've already merged your changes, so the performance improvement will be there for the next release. Now I am just trying to figure out a way to make doing things with batches (like you needed to do) a bit easier / clearer.\n. Yes, that is a bit cleaner. I think we will want to add some unit tests for these cases when the code is refactored. I'll link to this thread from the issue I mentioned.\n. Thank you for taking the time to put this list together. Re-organizing (and improving) the documentation is definitely on the road map for this year.\n. Fixed.\n. I've experienced a similar issue before. The problem is that the methods for getting the bounding box of an HTML/SVG element only work when the element is in the DOM and is visible. Instead of using visibility: hidden try position: absolute; left: -99999em on the div container element.\n. Other than the typo, it looks great :)\n. I think it's ok to remove the test samples for scaling; at least until we find a solution to the normalization problem.\n. Currently the DOM is unavoidable (especially when using links). I suggest appending your paper to the body with the following CSS:\ncss\n.your-offscreen-paper {\n  position: absolute;\n  left: -99999em;\n  top: 0;\n}\nSetting display: none on the paper element doesn't work because then the dimensions of the graph elements/links are not calculated correctly.\nThis is definitely something we will be looking at fixing in the second half of this year (within the next 6 months). Since as you noted, using the DOM for this sort of thing is unnecessarily slow.\n. Could you add a test for this? :)\n. There is a problem in the pipes demo when using a newer version of lodash. Specifically with the following line:\njs\n            this.pattern = V(_.template(this.patternMarkup, { id: this.id }));\nThe correct usage (with newer versions of lodash) is this:\njs\n            this.pattern = V(_.template(this.patternMarkup)({ id: this.id }));\nChanging that line only will allow your implementation to work as well.\n. I updated the demo code so that it will work for newer versions of Lodash.\n. Hi!\n\nIn IE if the container element is removed via jquery\n\nWhich DOM element did you remove exactly?\n\n.. the pointerup event is not removed from the events and you have to call paper.remove() manually to clear it up\n\nJointJS is built on Backbone, so it expects that you will use the view.remove() method to remove a view's DOM element(s). This allows it to automatically unbind all related events for you.\nI think the solution here would be to add to the documentation some high-level explanation about the relationship between JointJS and Backbone.\n. I am closing this issue now because the JointJS docs do currently explain some of the necessary information about how Backbone.js is used.\n. Can you explain a specific use-case in which this fixes a problem/bug you were having? This will inform me as to what new test (if any) to write for this case.\n. Upgrading backbone will likely be a matter of changing the version number. Lodash would require a lot of changes. Also, we are planning to remove Lodash as a dependency in the 2nd half of this year. So spending time and energy upgrading to version 4 doesn't seem worth it.\nEdit:\nUpgraded backbone to 1.3.\n. @kumilingus Ready for review!\nnpm install\ngrunt build:docs\nSelf-contained docs will be at build/docs/\n. > There is something wrong with the indentation inside the code blocks.\nOkie dokie. I'll try to figure it out.\n. @kumilingus Ready!\n. @kumilingus Ready, again!\n. This is a performance problem with the <polygon> SVG shapes in Vectorizer (V.prototype.findIntersection specifically). This has been fixed in the master branch, but hasn't made it into a release yet.\n. Here are some of my notes:\n- In the \"default settings\" example (demo/port-layouts.html) - making a single link from a port to the target element and then removing all the ports results in the link staying but still being connected to both elements. But if I make more than one link, all the links are removed (except for the last one).\n- Could you add some tests for any backwards compatibility that we want to keep? I don't remember exactly which APIs we wanted to keep, but I remember Roman saying there were some.\n- Once you are polishing up this PR, could you redo the existing demo/ports.html demo to use the new API?\n. Looks fine to me.\n. What version of node and npm are you using? And when are you seeing the above errors - during npm install, npm update, or when using JointJS in a node script?\n. So the errors are happening when you try to use webpack to create a bundle including JointJS? Are you using webpack directly or are you using a gulp/grunt wrapper module as well?\n. Great to hear that you got it resolved. I think it might be a good idea for us to include the webpack bundle use-case in the documentation somewhere. I'll create an issue :)\n. We have a separate repository for the Rappid plugins, but it is structured similarly to this one (JointJS). In our unit tests for both Rappid and JointJS, we include some sanity checks for webpack and browserify bundles. You can see how we build the webpack bundle here. We are using grunt-webpack with webpack version 1.13.1. The end result is exactly what you are describing - a totally self contained version of Rappid or JointJS that only exposes joint on the global namespace.\n. This has been fixed in v0.9.10\n. @mike-goodwin Could you provide some kind of code sample (or small sample project) that would show me how you're using joint with browserify? We have some tests for browserify, but they are clearly missing some use-case. I'd like to add a new test to catch the problem you have cited.\n. Thank you for the information. I will make the fix and add a new test to ensure that JointJS continues to function with browserify in the future.\n. This has been fixed in v0.9.10\n. Thank you for the PR, but I am already in the process of fixing the issue.\n. I was not able to reproduce your issue. Can you provide the following information?\n- Node version\n- Exact usage of webpack (the command used)\n. I am still not able to reproduce your error. Can you provide a full example app that reproduces the error?\n. We don't have any plans to migrate JointJS to Lodash 4.x. I have been pushing the team to move towards bundling all of JointJS' dependencies (including Lodash 3.x) so that these version conflicts aren't an issue anymore.\n. I think that typescript definition was created by someone outside of the JointJS team.\n. Could you elaborate on this? I don't quite understand how JointJS could \"[use] React and Redux\".\n. Hmmm. Ok. That would require quite a bit of work. And I am not sure I see much benefit. Is there a specific use-case that is not possible for you right now?\n. Good idea. I think having both minified and un-minified versions of the bundle(s) would be a good approach here.\n. I don't think this is a defect with the bundle(s). The entire point of the bundle files is to only expose a single variable (joint) to the global scope. Perhaps this could somehow be made clearer in the documentation instead?\n. Looks good to me: all tests still pass and all internal usage of those four methods has been removed.\nAre you we waiting with this for some reason?\n. > Can we also document the second option parameter in joint.dia.ElementView.prototype.highlight / joint.dia.ElementView.prototype.unhighlight please?\nSure, I'll add this.\nI am also going to add Cell and CellView to the docs, because highlight() and unhighlight() are actually methods of CellView, not ElementView.\n. Thank you for the efforts you've put into this. I don't have much experience with typescript. Slightly off-topic:\nHow would you recommend adding tests for the type definitions in this project?. I like this. But I would like tests too :)\nI might name it applyToPoints instead of applyOnPoints.\n. For consistency, I think this should be a separate method called graph.resize() which resizes all the cells in the graph. graph.resizeCells would behave similarly to graph.addCells.\n. Can we rename this to _batches? I don't think we need to explicitly say that these are \"active\", and I want it to be clear that this is an internal variable.\n. Typo. Should be transform() not transfrom().\n. I don't quite understand what you want. I don't know enough about the logic within this method to add a useLinkTools check as you are suggesting.\n. Okie dokie. So just remove the var = interactive .. line? Don't add any new can() instances there?\n. I still don't understand what you want me to change here. Can you merge this PR then do what you want in a new PR?\n. Defining functions within functions should be avoided. Can this instead be defined on the prototype or within a closure (around the whole class/prototype)?\nEdit:\nMaybe this is ok in this instance. It is better this way than having an anonymous function defined within the loop.\n. I don't think these lines are needed anymore.\n. Could this be set via the extend method a few lines above - like this?\n``` js\n    _.extend(joint.dia.ElementView.prototype, {\n    portContainerMarkup: '<g class=\"port\"/>',\n    portMarkup: '<circle class=\"base-port\" r=\"10\" fill=\"#000000\"/>',\n    portLabelMarkup: '<text class=\"label\"/>',\n\n    _portElementsCache: {},\n    // ..\n\n```\nI like to know all the keys that are used on the object's namespace.\n. Sure :)\n. ",
    "laurentj": "dx and dy work, thanks. However this is strange to force a value for y, from my point of view. We should have the control of our SVG content. It could break some SVG we import into the graph.\n. ",
    "heat": "(like)\n. Is the build commit totally unnecessary ?\n. Maybe we should finding the root of the problem.\n. ",
    "fletchgqc": "Noticed the same\n. ",
    "JoseGoncalves": "+1\n. Any ETA for a solution to this issue?\n. I think a better solution (at least for my test case) is to duplicate the link tools near the link's destination end, if the link is long enough to render two link tools. Is this not easily feasible? In this way you could add to the API a flag to enable this link tools duplication.\n. Its easily feasible because even I was able to implement a basic solution :smile:\nThe following patch duplicates the link tools if the link length is above some predefined threshold.\nSome improvements can still be made, i.e., add a flag to enable the duplication through the API and adjust the duplicate tools offset position when the link end connects vertically, to have the same separation from the shape that it has when the link end connects horizontally.\n``` patch\nIndex: joint.nojquery.js\n===================================================================\n--- joint.nojquery.js   (revision 1047)\n+++ joint.nojquery.js   (working copy)\n@@ -12376,7 +12376,8 @@\n options: {\n\n\nshortLinkLength: 100\nshortLinkLength: 100,\n\nlongLinkLength: 160\n     },\ninitialize: function() {\n@@ -12546,11 +12547,13 @@\n     var $tools = $(this.V.linkTools.node).empty();\n     var toolTemplate = .template(this.model.get('toolMarkup') || this.model.toolMarkup);\n     var tool = V(toolTemplate());\n+        var tool2 = tool.clone();\n\n\n$tools.append(tool.node);\n\n\n$tools.append(tool.node, tool2.node);\n // Cache the tool node so that the `updateToolsPosition()` can update the tool position quickly.\n this._toolCache = tool;\n\n\n\nthis._toolCache2 = tool2;\nreturn this;\n     },\n@@ -12736,9 +12739,10 @@\nvar scale = '';\n var offset = 40;\n+        var connectionLength = this.getConnectionLength();\n// If the link is too short, make the tools half the size and the offset twice as low.\n-        if (this.getConnectionLength() < this.options.shortLinkLength) {\n+        if (connectionLength < this.options.shortLinkLength) {\n     scale = 'scale(.5)';\n     offset /= 2;\n }\n@@ -12747,6 +12751,14 @@\nthis._toolCache.attr('transform', 'translate(' + toolPosition.x + ', ' + toolPosition.y + ') ' + scale);\n\n\n\n\nif (connectionLength >= this.options.longLinkLength) {\n\ntoolPosition = this.getPointAtLength(connectionLength - offset - 15);\nthis._toolCache2.attr('transform', 'translate(' + toolPosition.x + ', ' + toolPosition.y + ') ' + scale);\nthis._toolCache2.attr('visibility', 'visible');\n} else {\nthis._toolCache2.attr('visibility', 'hidden');\n}\n+\n         return this;\n     },\n\n``\n. The situation was not directly caused by me, but from using the Inspector plugin with a list of objects configured as custom data. Adding two items by clicking in the plus button and then filling only the input(s) in the second item causes an array of 2 objects were the first one is set tonull. After that If i click on my shape with this custom data attached,joint.util.getByPath()` is called and crashes.\n. Sure;\n``` javascript\n    var CommonInspectorInputs = {\n        description: {\n            type: 'textarea',\n            label: 'Description',\n            group: 'data',\n            index: 1\n        },\n        descAsTip: {\n            type: 'toggle',\n            label: 'Description as Tooltip',\n            group: 'data',\n            index: 2\n        },\n        tooltip: {\n            type: 'text',\n            label: 'Tooltip',\n            group: 'data',\n            when: {\n                eq: {\n                    'descAsTip': false\n                }\n            },\n            index: 3\n        },\n    };\nvar CommonInspectorGroups = {\n    data: {\n        label: 'Operator',\n        index: 1\n    }\n};\n\njoint.shapes.oper.InspectorDefs = {\n    /* ... */\n    'oper.Aggregation': {\n        inputs: _.extend({\n            attrs: {\n                '.oper-label': {\n                    text: {\n                        type: 'text',\n                        label: 'Name',\n                        group: 'data',\n                        index: 4,\n                        attrs: {\n                            input: {\n                                pattern: '[_a-zA-Z][_a-zA-Z0-9]*',\n                                required: 'required'\n                            }\n                        },\n                    }\n                }\n            },\n            config: {\n                type: 'list',\n                label: 'Aggregations',\n                group: 'data',\n                index: 5,\n                item: {\n                    type: 'object',\n                    properties: {\n                        input: {\n                            type: 'text',\n                            label: 'Input',\n                            attrs: {\n                                input: {\n                                    required: 'required'\n                                }\n                            },\n                        },\n                        operation: {\n                            type: 'select',\n                            label: 'Operation',\n                            options: ['GroupBy', 'Count', 'Sum', 'Avg', 'Max', 'Min'],\n                        },\n                        output: {\n                            type: 'text',\n                            label: 'Output',\n                            attrs: {\n                                input: {\n                                    pattern: '[_a-zA-Z][_a-zA-Z0-9]*',\n                                    required: 'required'\n                                }\n                            },\n                        }\n                    }\n                }\n            }\n        }, CommonInspectorInputs),\n\n        groups: CommonInspectorGroups\n    }\n\n};\n\n```\n. ",
    "destan": "seems like an old bug, any plans to solve it?\n. ",
    "insolite": "Yes, I have underscore.js as a dependency for another node.js module. I've created simple empty project, where underscore.js is not used, but when I put joint.js there, an error appears:\nUncaught Error: Cannot find module 'underscore'\nThe use case is pretty simple:\nindex.html:\n``` html\n<html>\n<head>\n    <script type=\"text/javascript\" src=\"joint.js\"></script>\n</head>\n<body>\n</body>\n</html>html\npackage.json (for node-webkit):\n{\n    \"name\": \"joint-nw\",\n    \"main\": \"index.html\"\n}\nThe same example works in chromium, but in pure node-webkit gives an error described above.\n``````\n. ",
    "aamarcha": "Hello,\nI have exactly the same problem. can you, please, tell me how did you resolve it ? \nregards\n. Hello,\n( I just found  out a explaination) \nThe node REPL uses the underscore ( _ )  variable too, so you have a conflict...Choose another name!\n. ",
    "justindujardin": "@DavidDurman For my use case that exhibits this problem, I include scripts in the page directly after installing them with bower, like this:\nbower.json\njson\n{\n  \"name\": \"nw-demo\",\n  \"dependencies\": {\n    \"joint\": \"~0.9.2\",\n    \"underscore\": \"~1.7.0\"\n  }\n}\npackage.json\njson\n{\n    \"name\": \"nw-demo\",\n    \"main\": \"index.html\"\n}\nindex.html\nhtml\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>Hello World!</title>\n    </head>\n    <body>\n        <script src=\"./bower_components/underscore/underscore.js\"></script>\n        <script src=\"./bower_components/joint/dist/joint.js\"></script>\n    </body>\n</html>\nThis errors because of the use of _.merge which does not exist in Underscore, but is exposed by Lodash.\nOutput:\n```\nUncaught node.js Error \nTypeError: Object function (obj) {\n    if (obj instanceof ) return obj;\n    if (!(this instanceof )) return new _(obj);\n    this._wrapped = obj;\n  } has no method 'merge'\n    at joint.dia.Cell.Backbone.Model.extend.constructor (file:///nw-demo/bower_components/joint/dist/joint.js:19607:23)\n    at new child (file:///nw-demo/bower_components/joint/dist/joint.js:16764:41)\n    at eval (file:///nw-demo/bower_components/joint/dist/joint.js:22387:22)\n``\n. A further complicated example includes backbone and jquery for other third party dependencies, and then tries to usejoint.nobackbonenojquery.js`.\nbower.json\njson\n{\n  \"name\": \"joint-node-webkit\",\n  \"dependencies\": {\n    \"joint\": \"~0.9.2\",\n    \"underscore\": \"~1.7.0\",\n    \"backbone\": \"~1.1.2\",\n    \"jquery\": \"~1.7.1\"\n  }\n}\npackage.json\njson\n{\n    \"name\": \"nw-demo\",\n    \"main\": \"index.html\"\n}\nindex.html\nhtml\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>Hello World!</title>\n    </head>\n    <body>\n        <script src=\"./bower_components/underscore/underscore-min.js\"></script>\n        <script src=\"./bower_components/backbone/backbone.js\"></script>\n        <script src=\"./bower_components/jquery/jquery.min.js\"></script>\n        <script src=\"./bower_components/joint/dist/joint.nojquerynobackbone.js\"></script>\n    </body>\n</html>\nOutput:\n```\nUncaught node.js Error \nTypeError: Object function (n){return n instanceof h?n:this instanceof h?void(this._wrapped=n):new h(n)} has no method 'merge'\n    at joint.dia.Cell.Backbone.Model.extend.constructor (file:///nw-demo/bower_components/joint/dist/joint.nojquerynobackbone.js:2807:23)\n    at new child (file:///nw-demo/bower_components/backbone/backbone.js:1566:41)\n    at eval (file:///nw-demo/bower_components/joint/dist/joint.nojquerynobackbone.js:5587:22)\n```\n. @DavidDurman I'm glad that there is a configuration of this that does work in nw.\nMy issues seem to be around the fact that I use Bower to install Joint.   The bower package does not list the specific versions of Backbone/Lodash/JQuery that it requires.  I have incompatible versions (Joint depends on Backbone 1.1.2 pretty specifically) and the bower install succeeds without error. \nYou could remove the lib/backbone.js from your git repo and install it with bower (via bower.json), which would allow you to specify which version Joint depends on, and would give me an error when I have an incompatible peer dependency.\nFor now I will look at the feasibility of using Backbone 1.1.2 in my project, and using Lodash as a replacement for Underscore.   In general I think it would be better if Joint did not depend so much on Lodash vs Underscore or very specific Backbone versions.  Regardless, it's a nice library--thanks for sharing it.\n. I managed to get it working, but I had to compromise on a few things:\n1. Underscore.JS has to be replaced with Lodash unreleased HEAD build.\n2. Backbone needs to be ~1.1.2, not considerably newer.\nFor my use-case this is okay; Lodash maintains the Underscore API, and I don't use enough backbone to be inflexible on its version.  So I locked the backbone and lodash versions in bower.json.   \nHere's the whole example:\n\nbower.json\njson\n{\n  \"name\": \"nw-demo\",\n  \"dependencies\": {\n    \"lodash\":\"037c58c2719aabbb21aef84b8649f6e4ee298be0\",\n    \"backbone\":\"1.1.2\",\n    \"jquery\": \"~1.7.1\",\n    \"joint\": \"~0.9.2\"\n  }\n}\npackage.json\njson\n{\n    \"name\": \"nw-demo\",\n    \"main\": \"index.html\"\n}\nindex.html\nhtml\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>nw-demo</title>\n        <link rel=\"stylesheet\" href=\"./bower_components/joint/dist/joint.css\">\n    </head>\n    <body>\n        <div id=\"paper\"></div>\n        <script src=\"./bower_components/lodash/dist/lodash.min.js\"></script>\n        <script src=\"./bower_components/jquery/jquery.min.js\"></script>\n        <script src=\"./bower_components/backbone/backbone.js\"></script>\n        <script src=\"./bower_components/joint/dist/joint.nojquerynobackbone.min.js\"></script>\n        <script src=\"./bower_components/joint/dist/joint.shapes.devs.min.js\"></script>\n        <script src=\"./index.js\"></script>\n    </body>\n</html>\nindex.js (from DEVS demo)\n``` javascript\nvar graph = new joint.dia.Graph;\nvar paper = new joint.dia.Paper({\n    el: $(\"#paper\"),\n    width: 800,\n    height: 600,\n    gridSize: 1,\n    model: graph\n});\nvar connect = function(source, sourcePort, target, targetPort) {\n    var link = new joint.shapes.devs.Link({\n        source: { id: source.id, selector: source.getPortSelector(sourcePort) },\n        target: { id: target.id, selector: target.getPortSelector(targetPort) }\n    });\n    graph.addCell(link);\n};\nvar c1 = new joint.shapes.devs.Coupled({\n    position: { x: 260, y: 150 },\n    size: { width: 300, height: 300 },\n    inPorts: ['in'],\n    outPorts: ['out 1','out 2']\n});\nvar a1 = new joint.shapes.devs.Atomic({\n    position: { x: 360, y: 360 },\n    inPorts: ['port XY'],\n    outPorts: ['x','y']\n});\nvar a2 = new joint.shapes.devs.Atomic({\n    position: { x: 50, y: 260 },\n    outPorts: ['out']\n});\nvar a3 = new joint.shapes.devs.Atomic({\n    position: { x: 650, y: 150 },\n    size: { width: 100, height: 300 },\n    inPorts: ['a','b']\n});\ngraph.addCell(c1).addCell(a1).addCell(a2).addCell(a3);\nc1.embed(a1);\nconnect(a2,'out',c1,'in');\nconnect(c1,'in',a1,'port XY');\nconnect(a1,'x',c1,'out 1');\nconnect(a1,'y',c1,'out 2');\nconnect(c1,'out 1',a3,'a');\nconnect(c1,'out 2',a3,'b');\n```\n:+1: \n. For a working example, see #58 \n. ",
    "kmansel": "Issued.\n. Ah good point.  Thanks for the quick response. \n. +\u221e\n. Hi David,\nWhat does the timeline look like is on this enhancement?\n. Fantastic David!  Would this be coming on your next release of the joint code base?  I am guessing a new release is not far out?\n. Thank you Roman.\n. +1 please.  this would be a great feature to have.  Can we get it on the roadmap?\n. Any news on this little guy?\n. Yes you're right!  Adding update right now.\n. ",
    "elbowz": "yeah, you have right!\nWhen do you think this patch was released on main trunk?\nhowever I have fixed my file, Thanks!!\n. thanks Ciao!\n. thanks for your answer kumilingus...\nThe solution it's not bad :)\nNow I see that also in Chrome there is a similar problem:\nWhen paper is \"hidden\" debug console spews errors \"Error: Invalid value for  attribute transform=\"scale(Infinity,Infinity)\"\nhowever, all it solved with your solution.\n. visibility: hidden takes up space in the layout, and this is not good for me. I'll try your above solution!\nthanks again\n. ",
    "ronnierap": "I came across a typo today, defultLink works better when changed to defaultLink ;-)\n. ",
    "justshrey": "Hi David,\nYou can see the error in any of the demo included in jointjs \n1) Open basic.html ( I have checked in the latest chrome beta build:  35.0.1916.114)\n2) Look at the console , you should see the following\n```\nError: Invalid value for  attribute transform=\" \" joint.js:16886\nsetAttribute joint.js:16886\n```\nI think this is quite a critical error, as it does affect toJson() function too.\nA point to note is that the error is not present in Firefox 29.0.1\n. Just a quick note. My sense is that this happens when certain browsers interpret the spaces in values of the attributes.\nThe easiest workaround for this, is basically, to trim the value if it is a string before setting it in the attribute.\nI have been able to patch this by fixing setAttribute function from  \njs\n else {\n            el.setAttribute(name, value);\n        }\nto the following\njs\n     else {\n              if (typeof value == \"string\") {\n                value = value.trim();\n            }\n            el.setAttribute(name, value);\nAs David said, this is a workaround. The real question is, why is there an extra space generated while building up the transform string.\n. ",
    "mavarazy": "Not sure this is related, but I'm getting something similar:\nError: Invalid value for  attribute transform=\"scale(Infinity,Infinity)\"\n. I debugged my issue, the problem was in resize function in joint.dia.element\nscalableBbox had height and width set to 0, which caused division by zero and Infinity result\nI've updated it manually from\nscalable.attr('transform', 'scale(' + (size.width / scalableBbox.width) + ',' + (size.height / scalableBbox.height) + ')');\nto\nscalable.attr('transform', 'scale(' + (size.width / (scalableBbox.width == 0 ? 1 : scalableBbox.width)) + ',' + (size.height / (scalableBbox.height == 0 ? 1 : scalableBbox.height)) + ')');\nWhat is wrong in my use, that I had to do this?\n. Have the same problem with joint.clean.js\nUncaught TypeError: Cannot read property 'getStrokeBBox' of undefined joint.clean.js:3100\njoint.dia.LinkView.joint.dia.CellView.extend._sourceBBoxUpdate joint.clean.js:3100\n. ",
    "drewnoakes": "Is this fix in a released version? Looks like it was fixed in d7b81970ef83fb4db89fabcceeacdccdc8e07394 which doesn't appear to be in version 0.9. Am I mistaken?\nAlso this page lists 0.8.1 as the latest release, yet this page references 0.9.0.\n. ",
    "etangreal": "Hi I'm getting this error in chrome (Version 36.0.1985.125)\nError: Invalid value for  attribute transform=\" \" \non line: 16886\n          el.setAttribute(name, value);\nStrange thing is its only using chrome - firefox is fine ... \n. ",
    "hugoruscitti": "Hi, i only get this error when i use a 'canvas' element in chrome. When i use a 'div' element it's \nworks fine. I use chrome and the jontjs 0.9.0 release.\nSee this examples:\nFails (with canvas element):\n- http://jsfiddle.net/qs7svnrt/\nWorks (with div element):\n- http://jsfiddle.net/tn89nfxn/\n. ",
    "yoyoworms": "Thanks for the response.\nref-x, ref-y, ref-dx, and ref-dy can only decide the  text element's start position according to the size of the referenced element.\nHowever, in middle and right alignment, the start position is also related to the length of the text.\nIf I want to align text by using current code, I should write like this:\nLeft \ntext:{\n    'ref-x': 0,\n    'ref-dx': undefined,\n    'x-alignment': undefined,\n}\n\nMiddle \ntext:{\n    'ref-x': 0.5,\n    'ref-dx': undefined,\n    'x-alignment': -0.5, // Currently negative number is not accepted \n}\n\nRight \ntext:{\n    'ref-x': undefined,  \n    'ref-dx': 0,\n    'x-alignment': -1.0,  // Currently negative number is not accepted \n}\n\n\nHowever, currently negative x-alignment is not accepted. For middle alignment, I can use 'middle'. But I think it is impossible to realize right alignment.\nI see you use 'middle' keyword in the 'x-alignment', so I add 'left' and 'right' keyword for quick setting. So that there is not need to set 'ref-x' and 'ref-dx'. \n. ",
    "Toilal": "It didn't test, but this fix may be useless after d7b81970ef83fb4db89fabcceeacdccdc8e07394 ...\n. ",
    "emailkarthikbr": "\nI have attached the zip file by renaming it as .png Download the file & rename it to \".zip\" to find the files.\nYou can simply run the MyTree.html once you have extracted the files.\n. There are many code changes because of which I have uploaded in this format. Please check the code and let me know.\n. ",
    "davidzchen": "+1\n. ",
    "mmnaseri": "Seconded.\n. ",
    "damoreno": ":+1:\n. ",
    "zivl": "I think I've found the root cause of the bug.\nIt comes from Mozilla's Firefox version 28+:\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=972515.\nAny suggestions to overcome this issue?\n. thanks kumilingus,\n changing that smooth: false currently solved the problem.\nI now wonder if this issue shall stay opened or not?\n. ",
    "dmatuki": "Hi,\nPlease note that this can be reproduced in the JointJs Finite State Machine demo: \nhttp://jointjs.com/demos/fsa \nJust drag the nodes in FF 30 and the bug will occur breaking the graph.\n. ",
    "crystalfp": "Here is the example. Click on a node and see red nines all over the \ngraph. If you uncomment the line in graph-editor.css the problem disappears.\nAnd yes, I use filter to add shadow to the node.\nThe problem happens in Chrome but not in Firefox.\nThanks a lot!\n            mario\nOn 09-Jul-14 11:58, Roman Bruckner wrote:\n\nHi,\nare you using SVG filters or clip-paths on the node? Best if you can\nprovide us with an example.\nThanks\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DavidDurman/joint/issues/84#issuecomment-48451014.\n\n\nIng. Mario Valle\nSwiss National Supercomputing Centre (CSCS) | http://mariovalle.name/\nv. Trevano 131, 6900 Lugano, Switzerland    | Tel: +41 (91) 610.82.60\n. https://dl.dropboxusercontent.com/u/2571325/GraphEditor.zip\nIs this OK?\nLet me know.\nBest\n        mario\nOn 09-Jul-14 12:22, Roman Bruckner wrote:\n\nYour example is not a link.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DavidDurman/joint/issues/84#issuecomment-48453142.\n\n\nIng. Mario Valle\nSwiss National Supercomputing Centre (CSCS) | http://mariovalle.name/\nv. Trevano 131, 6900 Lugano, Switzerland    | Tel: +41 (91) 610.82.60\n. Thanks Roman!\nThe second method almost works. It correctly outlines a node when \nselected, but unhighlight() leaves part of the outline in place that as \nsoon as I move the node disappears.\nThe first method is basically what I use. Only I change the fill color \ninstead of the node border color.\nThanks for your help! And thanks for the library.\nmario\nOn 09-Jul-14 13:40, Roman Bruckner wrote:\n\n|attrs: { filterUnits: 'objectBoundingBox' }|\n\n\nIng. Mario Valle\nSwiss National Supercomputing Centre (CSCS) | http://mariovalle.name/\nv. Trevano 131, 6900 Lugano, Switzerland    | Tel: +41 (91) 610.82.60\n. ",
    "guotie": "Thanks.\n. ",
    "kra3": "\u200bAh, inspector too got events.\nAll the while I was trying to bind to the select element after inspector is rendered. Obviously, it doesn't work after the first change (because by then my call back made some changes to the underlying object which prompted inspector to re-render).\nFinally, I settled on to have that select widget created manually and placed above inspector widget with some css styling to look same. It works well in my case, because I can't change the object array to both format given by you for select (sans the binding part, which is more cleaner with a binding to inspector's render event). \nMine are array of complex objects coming from another system, so an ideal way should be an option to give a 'render callback' to inspector's select configuration, which will do the rendering of objects into select elements. \nJust some thoughts, if you are interested in adding such an option :smiley:\nI can't give a patch or something as they aren't an OSS component :wink: \nThanks for the possible solutions @DavidDurman :+1: \n. ",
    "nkolban": "I too would very much like to use JointJS through AMD.  If assistance is needed in coding/testing, I'll be willing to assist.\n. David, thanks for the quick response.  If \n. ",
    "jeremyckahn": "Awesome, thanks! :+1:\n. Hi David, I'm glad you're open to the idea!  I'm not much of a designer, so I don't think I'd be a lot of help in the design effort.  However, I'd be happy to create a new repo for Vectorizer and set it up for the various package managers.  In which case, it should probably belong to either you or a JointJS Github organization.  If you want to set up such an org, it would be easy to transfer ownership of the repo from my user to that.  Would you be willing to create the Github organization?\n. ",
    "josegonzalez": "Yeah its up now, all good. Thanks for checking :)\n. ",
    "vkairys": "6707af4c4a48553a41b7184d7076d7d29a26e889 fixed the issue\n. ",
    "tahirnawaz": "sorry about formatting I never posted code on github.\n    var graph = new joint.dia.Graph;\nvar element1=false;\nvar paper = new joint.dia.Paper({\n    el: $('#workFlow'),\n    width: '100%',\n    height: '98%',\n    model: graph,\n    gridSize: 1\n});\npaper.on('cell:pointerclick',\n    function(cellView, evt, x, y) {\n        //when user clicks on element we can get here stage \n        console.log(x +\" : \"+y);\n        $scope.cellView=cellView;\n        stageService.getStage(cellView.getAttributes()._id);\n        if(cellView.model.attributes.type!='link'){\n            if (!($('#edge').hasClass('active-edge')))\n            {\n                var stageType=cellView.model.attributes.attrs.rect.stageType;\n                $scope.changeDataSourceWindow(stageType);\n            }\n            else{\n                if(element1){\n```\n                var link = new joint.dia.Link({\n                    source: { id: element1.model.id },\n                    target: { id: cellView.model.id },\n                    attrs: { '.marker-target': { d: 'M 4 0 L 0 2 L 4 4 z' } }\n            });\n            graph.addCells([link]);\n            element1=false;\n            // $('#edge').attr('checked',false);\n        }\n        else{\n            element1 =cellView;\n        }\n    }\n}\n\n}\n```\n);\npaper.on('blank:pointerdown', function(cellView, x, y){\nconsole.log(paper.findViewsFromPoint({x:30,y:30}));\n});\n. Your addToGraph function was working but let suppose I add by code below below now in event  'blank:pointerdown' I want to get element view on  a specific point and its showing the same error again.\nvar graph = new joint.dia.Graph;\n    var paper = new joint.dia.Paper({\n        el: $('#workFlow'),\n        width: 650,\n        height: 400,\n        gridSize: 20,\n        model: graph\n    });\n    paper.on('blank:pointerdown', function(cellView, x, y){\nconsole.log(paper.findViewsFromPoint({ x: 30, y: 30 }));\n});\nvar circle = new joint.shapes.basic.Circle({\n    position: { x: 100, y: 30},\n    size: { width: 40, height: 40 },\n    attrs: { text: { text: '' }, circle: { 'stroke-width':'3.5','stroke':'#666666' },_id:'Join' },\n    name: 'earth'\n});\ngraph.addCell(circle);\n. Absolutely not I have commented all the code. and code above is all I have.\n. Found it \ngraph.on('remove', function(cell) { console.log(cell.id); /houseKeep(cell);/ });\nThanks\n. I am using the code below working fine , however when I remove an element associated with link it removes both link and element and goes to first if condition as if only link is removed. When an element is removed I want to get id of link ,element and id of that element associated with the link removed (target or source)\n graph.on('remove', function(cell) {\n        //if user removes links\n```\n    if(cell.attributes.type=='link') {\n}\nelse{\n    //if user removes cell\n    console.log(\"cell\");\n    console.log(cell);\n}\n\n});\n```\n. you guys are in hibernate mode or what??? I am using your api and I am taken aback with no response from your side.\n. My code is here for viewing\nhttp://stackoverflow.com/questions/31283895/joint-js-drag-and-drop-element-between-two-papers\n. Hi, I will really appreciate if any one could answer this question?\n. or at least tell me its possible or not.\n. at least this question deserves some kind of discussion?\n. Thank you.\n. I know its not relevant here but I have been lingering in a problem related to joint js. Can you  please help me here with this? Really appreciate one of you guys tried to help. But still the solution sugessted is not complete. \nhttp://stackoverflow.com/questions/31368160/joint-js-add-custom-ports-with-path-class-for-custom-elements?noredirect=1#comment51166890_31368160\n. ",
    "LiorZ": "try to use paper.resetCells(graph.get('cells'))\n. ",
    "ryankurte": "I just came across the same issue.\nThe page loads happily in a browser, but not at all in node-webkit.\nTried moving everything into $(window).load() to make sure joint.js had actually loaded prior to my calls, to no effect. As well as the NPM package, with the missing DIA module.\n. ",
    "jankazemier": "Gee, that's a speedy response! Keep up the good work, thanks!\n. ",
    "ColinFrick": "I have the same requests. With 0.9.3 just released, any ETA for 1.0?\n. Thats great. In the mean time, I have created an issue on the sizzle project: https://github.com/jquery/sizzle/issues/322\nThis should be fixed in jQuery 3.0.\n. I fixed my problem with the commit ColinFrick/joint@7f3f873b5c205379e7803a6ce1ae33be511c9e2e\nCould you give it a glance? Maybe you see a problem with this solution.\n. ",
    "elyas-bhy": "+1\n. For some inspiration, here is an overview of noflo's old UI. Love their metro-style routing!\n. @chill117 can we get a hotfix for this issue in 0.9.5? When is the expected date for the next release?\n. ",
    "rafalt": "https://github.com/mbostock/d3/wiki/Formatting#d3_round\n. ",
    "leungwensen": "I know about d3js and its helper functions, but is d3js one of the dependencies of jointjs? Is it necessary to load d3js before I can use jointjs?\n. ",
    "marksyzm": "I second this notion. Just about to correct it with a fork - will link in a mo\n. Ahhh I really hope this goes in soon! Just working on a large commercial project where we're about to pay for support and I'm switching over to use browserify. I'll use your repo for now until this gets merged as I'm struggling to get this all connected on the 8.0 version with browserify shims. \n. @serapath So close! Manhattan joints not working: \nTypeError: Cannot read property 'manhattan' of undefined\n    at joint.dia.LinkView.joint.dia.CellView.extend.findRoute (joint.dia.link.js:870)\n    at joint.dia.LinkView.joint.dia.CellView.extend.update (joint.dia.link.js:463)\n    at bound [as update] (lodash.js:1318)\n    at joint.dia.LinkView.joint.dia.CellView.extend.render (joint.dia.link.js:277)\n    at joint.dia.Paper.Backbone.View.extend.addCell (joint.dia.paper.js:372)\n    at bound [as addCell] (lodash.js:1318)\n    at joint.dia.Paper.Backbone.View.extend.onAddCell (joint.dia.paper.js:362)\n    at triggerEvents (backbone.js:209)\n    at Backbone.Events.trigger (backbone.js:148)\n    at triggerEvents (backbone.js:210)\nI'll see if I can fork your branch and work out the issue, unless you get there first...\n. Fixed: https://github.com/serapath/joint/pull/1\n. Yeah, I was trying it out and thought \"okay, I'll just fork it and... oh, there's all this stuff in here for the 9.3.0 version...\" and was stumped for a bit because of all the algorithm stuff, then found this pr! Brilliant - I would have had to faff around with this for a good couple of hours if it weren't for the fix. Looks okay to me for a release to 9.3.1 but what do I know :)\n. \u200bI wonder if that should/could be a separate require\n. @serapath I didn't remove anything? Do you see any red lines here? https://github.com/serapath/joint/commit/f3f6ed57a2019d1a69d5f8ecd90d3f58d04ff104\n. I would suggest we wait for them to fix the issue themselves, anyway. They've got a lot of stuff going on. only changed this to fix my needs but I was also using rappid and that has so many issues with browserify that I just ended up using jointjs and rappid as a global.\n. ",
    "kokorin": "Code below makes fetch method work\n```\n            joint.dia.Graph.prototype.parse = function (json, opt) {\n                this.fromJSON(json, opt);\n                return this;\n            };\n        joint.dia.Graph.prototype.set = function (key, val, options) {\n            if (this == key) return this;\n            Backbone.Model.prototype.set.apply(this, arguments);\n        }\n\n```\n. ",
    "dlcwalkoff": "And need add support all plugins. For example DirectedGraph.\n. ",
    "dylanvorster": "+1 For it all working first time. Tried a number of other forked repos that tried to do a similar thing, and this really did the trick. That said, whats still preventing this from being merged in? The plugins? @dlcwalkoff has also done some nice work trying to clean it up. His remaster branch keeps things simple and leaves the packaging up to the end user.\n. ",
    "RupenAnjaria": "Is this issue have been resolved? Can we still use latest JoinJs with jQuery 2.1.3?\nThank you.\n. ",
    "msiadak": "@kumilingus jQuery 3.0 did not resolve this issue for me, but your polyfill above did.  Thank you!\n. ",
    "jefsnare": "No this can't be closed and is an issue.\nI don't have the time to create a testcase for now, but if you create two elements, one parent one child. and you remove the parent, an error occurs.\n. ",
    "rarous": "I was using Dagre plugin. When I called resetCells before layout it crashed. It started after FF36 release, older releases were fine.\n. It selected input port instead of output one. Here you can see the difference: http://screencast.com/t/H5rWIjULbBup\n. There is a repro of the issue. The magnet on Http Input does not highlight when I drag new Link from newly created Document Manager. When I add Archive back and create new DC it will work as expected.\nThe selector is correct http://screencast.com/t/XqxhEjoQsk\nSVG code:\n<g class=\"rotatable\" id=\"v-458\" transform=\"rotate(0,60,60)\">\n  <g class=\"scalable\" id=\"v-467\" transform=\"scale(1,1)\">\n    <rect class=\"body\" id=\"v-462\" stroke=\"transparent\" fill-opacity=\"0\" fill=\"#FFFFFF\" width=\"120\" height=\"120\"></rect>\n  </g>\n  <g class=\"whatewa\">\n    <rect class=\"harbor\" id=\"v-463\" stroke=\"transparent\" fill-opacity=\"1\" fill=\"transparent\" width=\"80\" height=\"80\" transform=\"translate(20,0)\"></rect>\n  </g>\n  <g class=\"inPorts\">\n    <g class=\"port port0\" id=\"v-468\" transform=\"translate(6,40)\">\n      <circle class=\"port-body\" id=\"v-471\" r=\"5\" magnet=\"passive\" stroke=\"transparent\" fill=\"transparent\" type=\"input\" port=\"DocumentCreator0.4661794165149331_In1\"></circle>\n    </g>\n  </g>\n  <g class=\"outPorts\">\n    <g class=\"port port0\" id=\"v-469\" transform=\"translate(112,20)\">\n      <circle class=\"port-body\" id=\"v-472\" r=\"5\" magnet=\"true\" stroke=\"transparent\" fill=\"transparent\" type=\"output\" port=\"DocumentCreator0.4661794165149331_Out1\"></circle>\n    </g>\n    <g class=\"port port1\" id=\"v-470\" transform=\"translate(112,60)\">\n      <circle class=\"port-body\" id=\"v-473\" r=\"5\" magnet=\"true\" stroke=\"transparent\" fill=\"transparent\" type=\"output\" port=\"DocumentCreator0.4661794165149331_Out2\"></circle>\n    </g>\n  </g>\n</g>\n. ",
    "timoxley": "@chill117 great :sparkles: \n. ",
    "mteichtahl": "Roman,\nthank you. This did work\nHowever, interestingly enough I now have the following issue.\nSee https://gist.github.com/mteichtahl/591aa36bb03b7ae23ff8 for the module code.\nI am calling this module as below\n```\n   if (rbacDiagram === undefined) {\n        rbacDiagram = diagram.create('schemaChart');\n      }\n  if (rbacPaper === undefined) {\n    rbacPaper = rbacDiagram.paper({interactive: false});\n  }\n\nrbacDiagram\n        .buildGraphFromAdjacencyList(data)\n        .addCells()\n        .layout();\n```\nThe first time this is called, everything works well. However, subsequent calls (with a different adjacency list) result in a\nUncaught TypeError: Cannot read property 'el' of undefined\nWhich happens on\nvar magnetElement = view.el.querySelector(selector);\nThe code in gist, when transposed out of the module, works fine.\nIm hoping you may be able to shed some light on this ?\n. Any advice would be helpful \n. Romance\nA copy of the adjacency list?\u00a0\nOn Tue, Apr 14, 2015 at 3:44 AM -0700, \"Roman Bruckner\" notifications@github.com wrote:\nHi Mark,\nthis error can occur when a link points (via source or target) to an\nelement which is not part of the graph (or there is no view rendered on the\npaper for this element).\nYou saying the code works fine when is transposed out of the module, so I\nexpect the error is not related to an inconsistent adjacency list.\nCould you send me an example that I can run and debug?\nCheers,\nRoman\nOn 13 April 2015 at 23:53, Marc Teichtahl notifications@github.com wrote:\n\nAny advice would be helpful\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DavidDurman/joint/issues/128#issuecomment-92511542.\n\n\nRoman Br\u00fcckner\nCTO at client.io\n+420 776 504 406\nroman@client.io\n\u2014\nReply to this email directly or view it on GitHub.\n. Romance\nIt's quite.a beast to share. I'd be happy to give you repo access or alternatively to find a suitable time and give you remote access to my development machine. Would either of those work for you?\nOn Tue, Apr 14, 2015 at 5:38 AM -0700, \"Roman Bruckner\" notifications@github.com wrote:\nI mean a working example of the app (html + js) that I can run in browser\nand see where it fails. Cheers.\nOn 14 April 2015 at 14:13, Marc Teichtahl notifications@github.com wrote:\n\nRomance\nA copy of the adjacency list?\nOn Tue, Apr 14, 2015 at 3:44 AM -0700, \"Roman Bruckner\" <\nnotifications@github.com> wrote:\nHi Mark,\nthis error can occur when a link points (via source or target) to an\nelement which is not part of the graph (or there is no view rendered on the\npaper for this element).\nYou saying the code works fine when is transposed out of the module, so I\nexpect the error is not related to an inconsistent adjacency list.\nCould you send me an example that I can run and debug?\nCheers,\nRoman\nOn 13 April 2015 at 23:53, Marc Teichtahl notifications@github.com\nwrote:\n\nAny advice would be helpful\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DavidDurman/joint/issues/128#issuecomment-92511542.\n\n\nRoman Br\u00fcckner\nCTO at client.io\n+420 776 504 406\nroman@client.io\n\u2014\nReply to this email directly or view it on GitHub.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/DavidDurman/joint/issues/128#issuecomment-92786478.\n\n\nRoman Br\u00fcckner\nCTO at client.io\n+420 776 504 406\nroman@client.io\n\u2014\nReply to this email directly or view it on GitHub.\n. Roman\nI have added you to my repo\nOn Tue, Apr 14, 2015 at 6:17 AM -0700, \"Roman Bruckner\" notifications@github.com wrote:\n@mteichtahl an access to your repo will do I guess.\n\u2014\nReply to this email directly or view it on GitHub.\n. Roman\nyou will need to go to site/login. Please use admin@foo.com / admin as the username and password then go to administration->authentication\nif you have vagrant, simply run vagrant up and a working VM on 192.168.99.2 will come up\nyou will need to run grunt install build\n. Roman\nIm available if you need assistance getting this running or using a remote desktop to my dev platform\n\nMarc Teichtahl\nmarc@teichtahl.com\nPh: +61 434 100 259\nhttp://www.teichtahl.com\n\nOn 15 Apr 2015, at 12:38 am, Roman Bruckner notifications@github.com wrote:\nThx Marc, I'll have a look.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/DavidDurman/joint/issues/128#issuecomment-92882181.\n. Will do shortly\n\nOn Wed, Apr 15, 2015 at 5:10 AM -0700, \"Roman Bruckner\" notifications@github.com wrote:\nHi Mark,\nI'm actually having problems to get it running (vagrant up spits out an error with funny characters T\u2424\u240a SSH \u240c\u23ba\u2514\u2514\u2592\u253c\u240d \u23bc\u240a\u23bd\u23bb\u23ba\u253c\u240d\u240a\u240d \u252c\u240b\u251c\u2424 \u2592 \u253c\u23ba\u253c-\u2265\u240a\u23bc\u23ba \u240a\u2502\u240b\u251c \u23bd\u251c\u2592\u251c\u2524\u23bd.). Could you make your server available via ngrok and send me an url to roman@client.io?\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "TrueBrain": "Oops, didn't see #120. This is also a way to fix the issue, by using JQuery, as JQuery does seem to start from the cell itself, instead of from the root element (what querySelector seems to do). In my opinion, the fix I suggest is better, as that is the suggested intention (using DIRECT children, not ANY children). But I am sure you guys know much better what you meant :)\n. Some more fiddling why JQuery does work as intended, and querySelector doesn't, I finally figured out what happens. querySelector does something different than I expected:\nIt runs the CSS selector you give (from the ROOT document, not based on the element itself!). Then it finds a child within the selector that is also a child of the element you run it from (as by specs btw).\nExample to demonstrate the non-expected behavior (but possible how it was intended etc):\nhttp://jsfiddle.net/fco3c75b/\nHopefully that makes it a bit more clear why this happens and why it is broken :)\nAnd possibly a better example:\nhttp://jsfiddle.net/fco3c75b/1/\n(mind you that the 2 children are also selected, but querySelector only returns the first match, which is also the parent of the 2 children).\n. ",
    "automagic": "You mean to say my code isn't beautiful? ;)\n. To me the batch events look correct, i am getting a start on link.pointerdown, a start/stop on model.toFront and a stop on link.pointerup.  However the extra vertex is definitely an issue, i need to fix.\n. Ok, it should not be creating the extra vertex.   The batch start and stop are paired correctly... there is one less than before, as I removed the arrowhead start / stop on 1108.  I guess I am not sure what the nested batches are for, so I can add it back.\ntry adding: \npaper.on('link:pointerdown', function() { console.log('pointerdown'); });\npaper.on('link:pointerup', function() { console.log('pointerup'); });\nin addition to the batch start/stop logging and let me know what you think.\n. Commits squashed and rebased\n. Yes good point, I will move it\n. Will do.\n. The batch:start is getting called in CellView.prototype.pointerdown, duing both Element:pointerdown and Link:pointerown; adding it back here causes a extra unnecessary bactch:start;  For adding a link it becomes Element:batch:start- Link:batch:start; but since you are really just passing the pointerdown to the link handers on magnet click, it seems unnecessary;\nSince the batch:start/stop is necessary in the CellView prototype due to having to deal with those events on delete, in my opinion they are not necessary in the derived.  In this implmentation we are relying on the CellView prototype to handle the batch start/stop, which is why they aren't present in LinkView or ElementView pointer down/up\n. If this is the approach you want to take, then it makes more sense to add it back in (since they are now named), but in my implementation, batch start is called once on LinkView models' pointerdown (via its protoype) and same for ElementView. \n. The problem I am trying to solve with the batch:start and batch:stop is the double call, once in the derived class  and once in the base class (ElementView.pointerdown   / CellView.pointerdown).   Since the base class call is essentially inlined (by applying this) the event is triggered twice on the same model- e.g. this.model.trigger('batch:start') where this.model is Element.   Since we are always invoking the base class event, it seems correct to just handle it there.\n. I do see your point about the 'add' happening before the batch, however.. I will add it back in\n. ",
    "madvas": "Is this resolved? When I run bower install joint I still get \nbower joint#~0.9.3                  ENORESTARGET No tag found that was able to satisfy ~0.9.3\nNo versions found in git://github.com/DavidDurman/joint.git\n(I ran bower cache clean)\n. ",
    "MamadouDjigo": "It's not resolved yet, i ran bower cache clean too but i still having the problem\n. ",
    "aadrian": "Physical ERD Symbols still missing :(  (and that's what most users want ERDs for)\n. ",
    "aborg0": "Related issue on webjars: https://github.com/webjars/webjars/issues/1105\nLess related issue is https://github.com/clientIO/joint/issues/151\n. ",
    "JanisGruzis": "So what I found out was that node-webkit has two global variables window(from browsers) and global(from node.js). What happens is there is chance that libraries will go mad and assign their variable to window or global and its not standartized. Each library does as it wishes. It happened so that lodash sets its _ on global and other libraries set their variables on window. Since I primarily use window I used clear joint.js version and assigned window. = global.\n<script src=\"node_modules/lodash/dist/lodash.min.js\"></script>\n<script>\n             window._ = global._;\n</script>\nMore about this can be red here - https://github.com/nwjs/nw.js/wiki/Transfer-objects-between-window-and-node\nI think this isnt problem of joint library but the special case of window, global variables existing side by side. If you think It can be solved neatly, that would be nice. Else this problem can be closed.\n. Yes. But dirty fix in my previous post worked for me (joint v0.9.3). Will wait for compatibility fix in future. :) But for others this can be a workaround till then. Thank you for effort and answer.\n. ",
    "randallion": "Just as a follow up for the sake of other WebPack users.  The imports-loader would have worked to inject that dependency as well.  I ended up using that to include the DirectedGraph layout module on its own to the clean build bundle using this include:\nrequire('imports?joint&_=lodash!jointjs/dist/joint.layout.DirectedGraph.js');\n. ",
    "pablopareja": "There still is the same problem...\nHave a look for instance at this demo: https://github.com/clientIO/joint/blob/master/demo/links.html\nIt's trying to load resources from a lib folder that does not exist on the master branch...\n. cool thanks ;)\n. ",
    "mickeyvip": "Thank you for the quick response!\nI was debugging and somehow stepped into jQuery's addClass.\nAfter playing some more I cannot reproduce it, but I found another problem.\nNow I do:\njavascript\n// this.element is jQuery wrapped <g> element\nvar rect = V(this.element).find(\"rect\");\nrect.addClass(\"my-class\")\nand here I get an exception:\nconsole\nTypeError: rect.addClass is not a function\nStepping into code I see that V.prototype.find() is mutating the nodes array:\njavascript\nfind: function(selector) {\n  var nodes = this.node.querySelectorAll(selector);\n  // Map DOM elements to `VElement`s.\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i] = V(nodes[i]);\n  }\n  return nodes;\n}\nThe problem is that nodes array is not changed. \nIt is happening in Chrome v44, Safari 8, Firefox 39 on MAC.\nThe following change makes it work:\njavascript\nfind: function(selector) {\n  var nodes = this.node.querySelectorAll(selector);\n  var vNodes = [];\n  // Map DOM elements to `VElement`s.\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    vNodes[i] = V(nodes[i]);\n  }\n  return vNodes;\n}\nor even:\njavascript\nfind: function(selector) {\n  var nodes = this.node.querySelectorAll(selector);\n  var tempVNode];\n  // Map DOM elements to `VElement`s.\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    tempVNode = V(nodes[i]);\n    nodes[i] = tempVNode;\n  }\n  return nodes;\n}\nThank you.\n. Updated to 0.94 and the last problem gone, although the code seems to be the same.\nSorry for the trouble and thank you.\n. Thank you!\n. Thank you.\n. @kumilingus, I have tried it, but it still does not work.\nHere is a jsFiddle demonstrating the derived vs original models: https://jsfiddle.net/mickeyvip/g9etgzew/\n. @kumilingus, thank you.\nThis was as a leftover from my error/trials before. Using the joint.shapes.devs.SBModelView = joint.shapes.devs.ModelView did rendered the ports.\nAnd I realized now that I should use myModel.prop() instead of myModel.set() in order to update the ports after initializing the model.\njavascript\nvar sbModel = new joint.shapes.devs.SBModel({\n        position: {\n            x: 50,\n            y: 50\n        },\n        size: {\n            width: 90,\n            height: 90\n        },\n        attrs: {\n            '.label': {\n                text: 'Model',\n                'ref-x': .4,\n                'ref-y': .2\n            }\n        }\n    });\nsbModel.prop({\n        inPorts: ['in1', 'in2'],\n        outPorts: ['out'],\n});\nNow it works.\nThank you.\n. ",
    "mike-goodwin": "Is there any plan to merge this into master? It would be nice to remove unsafe-eval...\n. @chill117 : Thank you - I'll upgrade to 0.9.8 as soon as it is released!\n. I installed jointjs using npm. I have an application file app.js that i want to use to create a client side bundle.  App.js contains a single line:\nrequire('jointjs');\nIf I then do browserify app.js -o bundle.js the output file looks like this:\n```\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&requireif(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&requirefor(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n},{}],2:[function(require,module,exports){\n(function (__dirname){\n'use strict';\nvar fs = require('fs');\nvar possiblePaths = ['./build/joint.js', './dist/joint.js'];\nvar filePath;\nwhile ((filePath = possiblePaths.shift())) {\ntry {\n    fs.statSync(__dirname + '/' + filePath);\n} catch (error) {\n    // Try another path.\n    continue;\n}\n\n// Found a path that exists.\nbreak;\n\n}\nif (!filePath) {\n    throw new Error('JointJS build file not found.');\n}\nmodule.exports = require(filePath);\n}).call(this,\"/node_modules\\jointjs\")\n},{\"fs\":1}],3:[function(require,module,exports){\nrequire('jointjs');\n},{\"jointjs\":2}]},{},[3]);\n```\nBasically it is the content of index.js. This fails at runtime because the paths ./build and ./dist do not exist relative to the location of bundle.js. Note that the require towards the end of the file is not recursively processed by browserify because it is using a variable name, not a literal string.\nPreviously, the index.js contained only the require whcih was recursively processed by browserify so that the output file contained the main .dist/joint.js file.\nI hope this is clear enough :)\n. This could be fixed (for me at least) by adding  \"main\": \"./dist/joint.min.js\" to package.json.\n. As explained in this StackOverlfow answer, there is a breaking change, but the new API supports backward compatible behaviour by specifying a highlighter in the call the highlight() and unhighlight().\nThanks for the help and for providing a great library :)\n. Do you have an expected date for the v1.1 release? My CI checks are reporting an XSS vulnerability in the jQuery version in JointJS v1.0.3. Also, this is a great library - thanks!. ",
    "nomeata": "One solution seems to be to add joint.shapes.foo.bazView = joint.shapes.foo.barView;, i.e. replicate the model object inheritance tree on the view side.\n. Ok, I was somehow expecting that the port attribute is optional and hence this behaviour.\nIncidentially, I am right now writing my own custom View with custom port shapes, by overriding renderMarkup. It felt too wrong to have view-related data (markup, attrs) in the model...\n. Note that with Firefox, if you click and hold an element, it will not select any of the HTML elements outside the paper. I would consider that the expected behaviour.\n. No, I didn\u2019t do any work on this, sorry.\n. ",
    "josenberg": "I use this function about 23 time in my code, every time I need to do a conditional to see if the \"text \" is undefined, then pass the value \"\" to it.\nIs there a better way?\n. ",
    "rickbutton": "I believe that this is the offending line:\nhttps://github.com/clientIO/joint/blob/62cb53bb00913555d16580be4e279e9cedc37fdb/src/joint.dia.link.js#L1153\nI submitted a fix via PR #172 \n. ",
    "B3rn475": "It seems really similar tu expressjs use method.\nYou can support both by:\njavascript\nembed: function () {\n    var args = _.values(arguments),\n          opt,\n          cells;\n    if (args.length > 1) {\n        if (!(_.last(args) instanceof joint.dia.Cell)) { opt = args.pop(); }\n    }\n    if (args.length) {\n        cells = _.flatten(args);\n        // do the magic trick\n    }\n}\n. In the end I added a regular expression that fixes this and other problems.\n\nI am not sure here. It's necessary to use no-break spaces otherwise IE would collapse all spaces into one. Where does it actually cause problems?\nNote that if you need to convert a DOM Subtree to a text (e.g data uri (data:image/svg+xml;) you can post-process it.\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/clientIO/joint/issues/205#issuecomment-189698645\n. I've made this Pull Request because I often call toFront({deep: true}) on Elements with tens of descendant.\nIn this situation every time a z changes all the elements in the paper are sorted.\nGiven n (the number of descendants) and m (the number of operations required to sort the paper).\nRight now the complexity of a toFront({deep: true}) is O(n * m).\nAfter my changes it becomes O(n + m).\n. No problem for the refactoring, but watch out that it is not the same.\nIf you do that it will not sort anymore after a toFront or a toBack.\nDue to the toFront implementation no change:z will be triggered when there are not ActiveBatches.\nI think that the right solution would be\njavascript\n        // Backbone automatically doesn't trigger re-sort if models attributes are changed later when\n        // they're already in the collection. Therefore, we're triggering sort manually here.\n        var hasToBeSorted = false;\n        this.on('change:z', function() {\n            if(!this.hasActiveBatch()) {\n                hasToBeSorted = false;\n                this.sort();\n            } else {\n                hasToBeSorted = true;\n            }\n        }, this);\n        this.on('batch:stop', function() { return hasToBeSorted && this.sort(); }, this);\n. The problem is the following.\nThe implementation of toFront is\njavascript\nthis.trigger('batch:start', {batchName: 'to-front'});\n// change the z of the elements even recursively\nthis.trigger('batch:stop', {batchName: 'to-front'});\nIn this situation a 'change:z' will be triggered only during a batch and so no sorting will be triggered anymore.\nTo fix this\njavascript\nthis.on('change:z batch:stop', function() { return !this.hasActiveBatch('to-front') && !this.hasActiveBatch('to-back') && this.sort(); }, this);\nBut you will still sort after a batch that is not of tipe to-front or to-back.\nTo avoid this a solution can be\njavascript\n // Backbone automatically doesn't trigger re-sort if models attributes are changed later when\n // they're already in the collection. Therefore, we're triggering sort manually here.\n this.on('change:z batch:stop', function() {\n       if (e.batchName === undefined || e.batchName === 'to-front' || e.batchName === 'to-back') {\n           return !this.hasActiveBatch('to-front') && !this.hasActiveBatch('to-back') && this.sort();\n      }\n }, this);\nI don't want to be a pain in the neck, but this performance issue is what makes my project unusable in many situations.\n. Mixing the solutions up we can do this.\njavascript\nthis.on('change:z', function() { return !this.hasActiveBatch('to-front') && !this.hasActiveBatch('to-back') && this.sort(); }, this);\nthis.on('batch:stop', function() { return (e.batchName === 'to-front' || e.batchName === 'to-back') && !this.hasActiveBatch(e.batchName) && this.sort(); }, this);\nWhat do you think about?\n. Thank you too.\nYour amazing library saved me days of work.\nI think it is right to give some time back. ;-)\n. Done\n. Are there any info regarding the release of version 0.9.8?\n. Are you going to release some alpha versions via npm? semver\nIt would be great for automatic testing of dependent libraries or applications.\n. Due to #258 I wasn't able to do that, as soon as downloaded the crash of the postinstall script force npm to revert back.\nRight now I've created a tarbar with a fix for that and linked to it.\nAs soon as 0.10.0 comes out I will revert back to the official version.\nThank you for your time.\n. Added sinon tests\n. Yes\n. Removed polyfill and added check for null\n. Done\n. And Chrome is sending a warning about the method used for the animation.\n\nSVG's SMIL animations (, , etc.) are deprecated and will be removed. Please use CSS animations or Web animations instead.\n. I refactored as requested.\n\nI've also added some tests regarding the change.. @kumilingus any update?\nIf you have any other comment I'll be happy to address them.. I see now that there is a method maxZIndex on the Graph object to do it already, so I should probably use it.\nhttps://github.com/clientIO/joint/blob/b1c5763ae5d1887644a9a0ac1c4845a7edfe2b5a/src/joint.dia.graph.js#L296\nThe problem is related to batches.\nThe cells are sorted at the end of the batch so if we query the \"last cell\" during an already running batch it may not be the correct value we were expecting.\nhttps://github.com/clientIO/joint/blob/b1c5763ae5d1887644a9a0ac1c4845a7edfe2b5a/src/joint.dia.graph.js#L108\nThey are actually sorted at the end of the batch for performance reasons.\nI think that a possible solution is to use maxZIndex remove the optimization on cell sort and add the optimization on the paper itself.\nhttps://github.com/clientIO/joint/blob/b1c5763ae5d1887644a9a0ac1c4845a7edfe2b5a/src/joint.dia.paper.js#L309\nBy checking even for to-front and to-back batches.\nWhat do you think?. I do have the exact same situation in one of my projects.\nWhen an event occurs, for graphical reasons I need to toFront a set of links which can be relatively big and are not children of the same element.\nNot sure about giving the same z-index to many elements.\nIt can potentially give unexpected results.\nIf I do have elements in the order [e1, e2, e3] and I toFront first e3 and then e1 I would expect the elements to be sorted [e2, e3, e1] but due to the fact that .sort() is stable they will end up in the wrong order [e2, e1, e3]. I've erroneously added the dist folder in the commit.\nIf you will accept the changes I'll remove it during the squash.. Done ;-). @kumilingus I was doing a double check and I've noticed that I forgot to updated the implementation of toBack with the new minZIndex.\nhttps://github.com/clientIO/joint/blob/cc25144ed9a05b57cc913b739108d68080fd0083/src/joint.dia.cell.js#L216-L218\nCan you fix it? or should I send you another PL?. Without setting a default, 'undefined' would be the default.\nWith this modification not only undefined but anything that is convertible to false like null, 0 and '' would be reset to default, but not 1 for example.\nWhat is the expected behavior?\n. That was a \"copy and paste\" error.\nSorry\n. Implemented.\nEven though with a modification\njavascript\n    startBatch: function(name, opt) {\n        if (this.graph) { this.graph.startBatch(name, opt); }\n        return this;\n    }\nThe return is important because we would return the Graph and not the Cell instead, breaking chaining operations.\n. Fixed\n. Done\n. done\n. I think it was already fixed in #255\n. Sorry I misunderstood the comment. It should be fixed in the last commit.\n. done. ",
    "validol-ekb": "Done!\n. ",
    "kerwitz": "It seems I still included jQuery 3.0.0 when I ran into the above errors. Downgrading to 2.0.3 as suggested by the docs fixed them. \nSo I take it - there's no jQuery 3x support with Joint.\n. For future reference, the second error above is caused by invalid node ids.\nIn my case I passed numbers in wheras joint expects them to be strings.\nSimply make sure you always provide strings as node ids.\n. ",
    "DontShootMe": "here a fiddle where you can see that nothing is rendered because we've changed the _.templateSettings.variable = 'data'; \n\nSorry but i haven't seen in my first message  I had written : \n\n_.templateSettings.data\n\nbut i was talking about : \n_.templateSettings.variable \n. here is a fiddle (click to resize , and over the first div ) with two problem :\nThe first one is related to the bad formating of transform() attribute.\nThe second is about the joint.shapes.uml.Class.\nWhen you change the name, methods or attributes of the class, an update and resize of the elementView should occur.\nEven if this occur there is no modification visible, to have any modification you have to use the resize from the element without arguments.\nAnd here we fall in the first problem.\n. yes it would be the expected behaviour.\nIn the demo everything is fixed by code, not any auto-sizing.\nI can auto-resize the shapes using the ( backbone.model ) element.resize.\nBut it was hard to track the difference with elementView.resize wich must do the job ??\n( if not, is the code source  false ???)\nAt first i was thinking about  the bad formating of transform() attribute, but it seems to be another problem, not linked ??\n. @DavidDurman \n\nThe UML shapes are not auto-sizing based on the text inside\n\nmmm... ??? are you sure ?\nlet me ask you :\nfrom joint.shapes.uml.Class = joint.shapes.basic.Generic.extend\nwe have the initialize function :\n``` javascript\ninitialize: function() {\n    this.on('change:name change:attributes change:methods', function() {\n        this.updateRectangles();\n        this.trigger('uml-update');\n    }, this);\n\n    this.updateRectangles();\n\n    joint.shapes.basic.Generic.prototype.initialize.apply(this, arguments);\n},\n\n```\nWe listen to the changing on name, attributes and methods then we call this.updateRectangles(); \n``` javascript\n    updateRectangles: function() {\n    var attrs = this.get('attrs');\n\n    var rects = [\n        { type: 'name', text: this.getClassName() },\n        { type: 'attrs', text: this.get('attributes') },\n        { type: 'methods', text: this.get('methods') }\n    ];\n\n    var offsetY = 0;\n\n    _.each(rects, function(rect) {\n\n        var lines = _.isArray(rect.text) ? rect.text : [rect.text];\n        var rectHeight = lines.length * 20 + 20;\n\n        attrs['.uml-class-' + rect.type + '-text'].text = lines.join('\\n');\n        attrs['.uml-class-' + rect.type + '-rect'].height = rectHeight;\n        attrs['.uml-class-' + rect.type + '-rect'].transform = 'translate(0,' + offsetY + ')';\n\n        offsetY += rectHeight;\n    });\n}\n\n```\nand after that we trigger an event this.trigger('uml-update');\nThis event we found it in joint.shapes.uml.ClassView = joint.dia.ElementView.extend\nPrecisly :\n``` javascript\ninitialize: function() {\n    joint.dia.ElementView.prototype.initialize.apply(this, arguments);\n\n    this.listenTo(this.model, 'uml-update', function() {\n        this.update();\n        this.resize();\n    });\n}\n\n```\nSo my question is : \nAre you sure that is not auto-resizing ??\nwhat  this function chain are for ? \n\nIf you create a better UML shape, we'd be happy if you could share it with us\n\nIf i can have good information about how the resize work, i could certainly  improve the uml shapes,\nand add some others.\nBut i can't trace any part of code to found how it work (it is a hard work , lot of time).\nWhat piece of code get in touch with the resize process ?\n. Why when i call this.resize from  joint.shapes.uml.ClassView nothing happend ?\n But if, instead, i call this.model.resize() the shape is resized ?\nI thought that the model handles the size and the view render it ?\nSo we set the size on the uml.Class and if we call resize from an instance of uml.Class in the backround we use the resize of the uml.ClassView instance attached to the model ??\nis it like that ?\nI presume there is an event triggered calling the resize on the  uml.ClassView ?\nBut i haven't spent more time to look for what the goal of batch:start , batch:end etc ... \n. Ha ok !  I understand now !\nThanks.\n. @edi9999 \nYou should check your LoDash Version, i think your problem is linked to a new version of LoDash.js.\nIf you use JointJs 0.9.6 try with LoDash 3.10.1 !\n@chill117 \nYou can reproduce this in your browser : \n-  create new HTML file\n- insert Lodash 4+\n- insert Backbone\n- insert JointJs\n  You will have an error  : \nTypeError : this.mixin is undefined\n. ",
    "wkit23": "Thanks!\n. ",
    "ajp-scipax": "Well... that was easy, and I'm not that sharp. Fixing that worked like a champ. Thanks much.\n. ",
    "charnog": "@kumilingus, @chill117, can't reproduce it as described by @BoykoAlex, but if I start to drag something and drag it out the window or SVG container (for example) _mousemove won't be cleared! So the next mouseclick won't be fired for one time.\nUPDATE\nAlso reproduced as @BoykoAlex described.\n. ",
    "ophite": "Thanks. All worked. \n. ",
    "ttcpu": "Thanks, I suffer for the same problem, I suggest to update the document http://www.jointjs.com/tutorial/html-elements\n. ",
    "mkzaker": "there is a different between flip that i want to use and rotate(180)\ni want a case like mirror that change element direction but in rotate,element turn around a point\ni want to flip horizontal and vertical\n. +1 please\n. ",
    "elquimista": "Tried with the latest joint.core.min.js and it works now :)\n. ",
    "codeHatcher": "yeah, funny how in the past couple release chrome as been \"breaking\" a few things from different libraries\n. ",
    "dylandechant": "+1 Also seeing this\n. ",
    "botev": "I think this would require an algorithm for graph visualization, similar to the one found in Graphviz. This is not so trivial, but I agree it would be nice if the authors have some time for this.\n. ",
    "jmls": "it's all to do with bower, and wiredep. If you bower install backbone, it also installs underscore, which then overrides lodash.\nYou can override the behaviour by changing the order in bower.json.\nmine now looks like this\n```\n  \"dependencies\": {\n    \"angular-animate\": \"~1.4.2\",\n    \"angular-sanitize\": \"~1.4.2\",\n    \"angular-messages\": \"~1.4.2\",\n    \"angular-aria\": \"~1.4.2\",\n    \"angular-resource\": \"~1.4.2\",\n    \"angular-ui-router\": \"~0.2.15\",\n    \"angular-material\": \">0.11.0\",\n    \"jquery\": \"~2.2.0\",\n    \"angular\": \"~1.4.2\",\n    \"lodash\": \"3.10.1\",\n    \"backbone\": \"1.2.3\",\n    \"jointjs\": \"^0.9.7\"\n},\n```\nand it seems to fix the problem\nedit: you also seem to need to add\n\"overrides\": {\n    \"backbone\": {\n      \"dependencies\": []\n    }\n  }\nto bower.json as well\n. I have npm installed jointjs and @types/jointjs - but I am struggling with the syntax for importing the library\njavascript\nimport * as joint from 'jointjs'\ngives the message \njavascript\nFile '/home/ubuntu/workspace/node_modules/@types/jointjs/index.d.ts' is not a module.)\nif I look at the file index.d.ts, there is a namespace defined, but not exported\n```\ndeclare namespace joint {\n    export var g: any;\n    export var V: any;\nnamespace dia {\n\n```\nwhereas backbone has the following\njavascript\nimport * as Backbone from 'backbone';\nand the backbone index.d.ts has \n```javascript\nexport = Backbone;\nexport as namespace Backbone;\nimport * as _ from 'underscore';\ndeclare namespace Backbone {\n```\nand there are no errors for the backbone import\n. so, if I add \nexport = joint;\nexport as namespace joint;\nto the start of index.d.ts , the app compiles without error. \nI guess this is a problem with the @type library then ?. mm, ok. I am getting some nasty errors while trying to use jointjs in a component. The code is :\n```typescript\nimport { Component, OnInit, Input } from '@angular/core';\nimport * as $ from 'jquery';\nconst joint = require('jointjs/dist/joint.js');\n@Component({\n  selector: 'my-component',\n  template: <div id=\"_wrapper_\"><div id=\"_content_\" ></div></div>\n})\nexport class MyComponent implements OnInit {\n  graph:any;\n  paper: any;\nconstructor() {}\nngOnInit() {\n    this.graph = new joint.dia.Graph();\nthis.paper = new joint.dia.Paper({\n  el : $('#_content_'),\n  width : '100%',\n  height : '99%',\n  model : this.graph,\n  gridSize : 1\n});\n\nthis.graph.addCell(new joint.shapes.uml.Class({\n  size : {\n    width : 200,\n    height : 100\n  },\n  name : \"foo\"\n}));\n\n}\n}\n```\nWhen trying to show this diagrm, I get these errors:\njavascript\nTypeError: this.findBySelector is not a function\n    at joint.js:6872\n    at lodash.js:4944\n    at baseForOwn (lodash.js:3001)\n    at lodash.js:4913\n    at Function.forEach (lodash.js:9359)\n    at child.update (joint.js:6867)\n    at child.wrapper [as update] (lodash.js:4968)\n    at child.render (joint.js:7192)\n    at child.protoProps.render (joint.js:4260)\n    at child.protoProps.render (joint.js:4260)\n    at child.renderView (joint.js:9888)\n    at child.onCellAdded (joint.js:9866)\n    at triggerEvents (backbone.js:371)\n    at triggerApi (backbone.js:356)\n    at eventsApi (backbone.js:155)\nWould just like to know [where I am going || what I am doing] wrong. Frustrated... ok, so two weeks later I come back to the same problem.\nIn a nutshell, has anyone been able to get jointjs loaded into an angular-cli project ? . unbelievable ... the second I post this, the bloody thing starts to work ;)\nensure all correct versions of libs are npm installed (lodash has to be v3)\n```\nimport * as $ from 'jquery';\nimport * as _ from 'lodash';\nimport * as Backbone from 'backbone';\nconst joint = require('jointjs/dist/joint.js');\n[snip]\n var graph = new joint.dia.Graph;\nvar paper = new joint.dia.Paper({\n    el: $('#canvas'),\n    width: 600,\n    height: 200,\n    model: graph,\n    gridSize: 1\n});\n\nvar rect = new joint.shapes.basic.Rect({\n    position: { x: 100, y: 30 },\n    size: { width: 100, height: 30 },\n    attrs: { rect: { fill: 'blue' }, text: { text: 'my box', fill: 'white' } }\n});\n\nvar rect2 = rect.clone();\nrect2.translate(300);\n\nvar link = new joint.dia.Link({\n    source: { id: rect.id },\n    target: { id: rect2.id }\n});\n\ngraph.addCells([rect, rect2, link]);\n\n}\n```\nworks for me ;)\n. bugger spoke too soon. :(\nOk, so the basics work fine, as described above. However, there are some odd problems .\nFor example the available-magnet class seems to affect the connector as in\n.available-magnet {\n    fill: blue;\n}\nmakes the connector blue.\nAlso, when defining a defaultLink, with this code:\n```\n        this.paper = new joint.dia.Paper({\n            el: $(this.element),\n            height: \"100%\",\n            width: \"100%\",\n            model: this.graph,\n            gridSize: 1,\n            snapLinks: { radius: 75 },\n            markAvailable: true,\n        defaultLink: () => {\n            let link = new joint.dia.Link({\n                attrs: { '.marker-target': { d: 'M 10 0 L 0 5 L 10 10 z' } },\n            });\n\n            return link;\n        },\n       defaultConnector: { name: 'rounded', args: { radius: 20 }},\n       defaultRouter: {name: \"manhattan\"}\n    });\n\n```\n gives me this result when drawing a link ...\n\nwhat's going on ?. ok, so, part of what's going on is that I didn't include the jointjs.css ;) now my chart lines look right. . ",
    "pathikdevani": "Hi @chill117 ,\nWhat logic or algorithm is used for tree layout?. Hi Vladimir,\nIt is exactly what I need.\nThanks . Still getting the same issue.\ncheck link between node id 1 and 5, 1 and 6. Also, a link is not started and ended from center of port (a link between 1 and 7).\n@vtalas am i missing something here?\nhttps://jsfiddle.net/pathikdevani/8qkLbxad/\n  .  paper.snapToGrid  is working fine in this problem. \nThanks @vtalas . ",
    "kfeine-FR": "Hi,\nSame problem here, is there another way to fix this now ?\nI need to manage graphs in many tabs and only the visible tab displays graphs properly.\n. ",
    "RGD1505": "The sendToken api has a little delay in the beginning of the animation making the element appear (flash) at coordinates <0,0> before starting the animation.\nAnd in IE the token stays at coordinates <0,0>.\n. ",
    "christopherbauer": "\nWhich DOM element did you remove exactly?\n\nI dynamically loaded the graph on to a popup div on the page, then removed the popup div. The behavior was confusing because Edge, Chrome, and FF all disposed of the events automatically but IE did not.\nI agree that perhaps users may not know about the use of backbone or may not be familiar enough with it that they know to call remove without some direct attention being drawn to it.\n. ",
    "AsherGlick": "The guard attribute works perfectly. I used the following code to limit dragging to only the left mouse button\njavascript\n    guard : function(evt){\n        // guard the event when the second (usually right) button is pressed\n        evt = evt || window.event;\n        if (\"buttons\" in evt) {\n            return evt.buttons !== 1;\n        }\n        var button = evt.which || evt.button;\n        return button !== 1;\n    },\n. I made this change locally and text selection works\n. ",
    "albertmarkish": "So, if I download /dist/joint.js from the repo, the fix will be there ?\n. Hello!\nDoes anyone know what's the status of this issue?\nAre Firefox aware of it?\nIs there anything that can be done? (the comments above were not helpful)\n. ",
    "kiragona": "Hi, when do you plan to insert the fix for this issue?\n. Is workaround exist?\n. join to Albert\n. Hello @kumilingus  Thank you for response. In our case not using shapePerimeterConnectionPoint is not an option. Moreover even with paper.options.linkConnectionPoint = null, moving shapes inside graph is not smooth\n. Hi  @kumilingus, \nAfter investigation I found some kind of workaround that improves performance in firefox.\nStill it is slower than in other browsers, but nevertheless...\naccording to the comment above V.prototype.sample method:\n   // Interpolate path by discrete points. The precision of the sampling\n    // is controlled by interval. In other words, sample() will generate\n    // a point on the path starting at the beginning of the path going to the end\n    // every interval pixels.\n    // The sampler can be very useful for e.g. finding intersection between two\n    // paths (finding the two closest points from two samples).\nV.prototype.sample = function(interval) { }\nSo once call this method with interval > 1, we still need perform a tuning for suitable number in our case, we have improving of performance.\nWhat do you think about this workaround?\nDo you have some suggestion for the interval value?\nAre there additional configuration settings that could improve the issue?\nThanks in Advance\n. Hi, some updates?\n. ",
    "dat20002000": "Hi, is there any solution for this issue? \n. ",
    "vtalas": "\nHere are some of my notes:\n- ~~In the \"default settings\" example (demo/port-layouts.html) - making a single link from a port to the target element and then removing all the ports results in the link staying but still being connected to both elements. But if I make more than one link, all the links are removed (except for the last one).~~\n\nfixed - when port is removed, link is removed as well\n\n\nCould you add some tests for any backwards compatibility that we want to keep? I don't remember exactly which APIs we wanted to keep, but I remember Roman saying there were some.\n\n\nnot sure about this one either, however the old implentation should not be affected\n\n\n~~Once you are polishing up this PR, could you redo the existing demo/ports.html demo to use the new API?~~\n\n\ndone\n. Hi, \nyou don't have to compute anything joint.layout.DirectedGraph.layout(graph, opt) is what you need. For more info visit (http://jointjs.com/rappid/docs/layout/directedGraph)\nVladimir\n. We've been finishing a new API for manipulation with ports, restriction you've described is sorted out there. Approach of creating ports by exentendig joint.shapes.basic.PortsModelInterface, is going to be marked as deprecated. \n. Hi,\nI affraid there is no such a padding optioin for router, however setting\nthe option 'startDirections', 'endDirections' in your case might improve\nyou graph a bit.\nhttp://jsfiddle.net/L2f73cbf/58/\nRegards,\n2016-06-23 2:18 GMT+02:00 Naiyin notifications@github.com:\n\nI have customized port size. it is much larger than the default port.\nIf I use smart router, the link will overlap the port.\nI want to increase the padding of the smart router's link\nI wonder if there is any configuration or any walk around?\nHere is what I'm doing:\nhttp://jsfiddle.net/tianxu0836/L2f73cbf/55/\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/clientIO/joint/issues/348, or mute the thread\nhttps://github.com/notifications/unsubscribe/AA4mEvcxohIBn7rWGkCE83qBVkwU77asks5qOdC6gaJpZM4I8WCG\n.\n. sorry for disinformation, there is such an option - paddingBox, it's\npadding applied on the element bounding boxes, used as follows\n\nhttp://jsfiddle.net/L2f73cbf/59/\nRegards,\nVladimir\n2016-06-23 7:16 GMT+02:00 Vladimir Talas vladimir.talas@gmail.com:\n\nHi,\nI affraid there is no such a padding optioin for router, however setting\nthe option 'startDirections', 'endDirections' in your case might improve\nyou graph a bit.\nhttp://jsfiddle.net/L2f73cbf/58/\nRegards,\n2016-06-23 2:18 GMT+02:00 Naiyin notifications@github.com:\n\nI have customized port size. it is much larger than the default port.\nIf I use smart router, the link will overlap the port.\nI want to increase the padding of the smart router's link\nI wonder if there is any configuration or any walk around?\nHere is what I'm doing:\nhttp://jsfiddle.net/tianxu0836/L2f73cbf/55/\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/clientIO/joint/issues/348, or mute the thread\nhttps://github.com/notifications/unsubscribe/AA4mEvcxohIBn7rWGkCE83qBVkwU77asks5qOdC6gaJpZM4I8WCG\n.\n. Should be working, as the metro is extended from manhattan, both paddingBox and start/end directions are defined there, in manhattan router. Manhattan/metro could deal with edge cases differently. I updated the padding box, it's looks better, doesn't it ? http://jsfiddle.net/L2f73cbf/60/\n. Good to hear it's going well. You can define your own groups easily like this: \n\n\n```\nvar rect = new joint.shapes.basic.Rect({\n    position: { x: 425, y: 60 },\n    size: { width: 200, height: 100 },\n    attrs: {\n        text: { text: 'left', fill: '#6a6c8a' },\n        rect: { stroke: '#31d0c6', 'stroke-width': 2 }\n    },\n    ports: {\n        groups: {\n            'in': {\n                position: 'left',\n                label: {\n                    position: 'left'\n                },\n                attrs: {\n                    text: { fill: '#000000' },\n                    circle: { fill: '#ffffff', stroke: 'green', 'stroke-width': 2, r: 10, magnet: 'passive' }\n                }\n            },\n            'out': {\n                position: 'right',\n                label: {\n                    position: 'right'\n                },\n                attrs: {\n                    text: { fill: '#000000' },\n                    circle: { fill: '#ffffff', stroke: 'red', 'stroke-width': 2, r: 10, magnet: true }\n                }\n            }\n        }\n    }\n});\nrect.addPort({ group: 'in', attrs: { text: { text: 'in1' } } });\nrect.addPort({ group: 'in', attrs: { text: { text: 'in2' } } });\nrect.addPort({ group: 'out', attrs: { text: { text: 'out1' } } });\nrect.addPort({ group: 'out', attrs: { text: { text: 'out2' } } });\nrect.addPort({ group: 'out', attrs: { text: { text: 'out3' } } });\n```\n. you can pass ports directly throuht the constructor as well ....  \n``` javascript\nvar rect = new joint.shapes.basic.Rect({\n    position: { x: 425, y: 60 },\n    size: { width: 200, height: 100 },\n    attrs: {\n        text: { text: 'left', fill: '#6a6c8a' },\n        rect: { stroke: '#31d0c6', 'stroke-width': 2 }\n    },\n    ports: {\n        groups: {\n            // groups definition \n        },\n        items: [\n            { group: 'in', attrs: { text: { text: 'in1' } } },\n            { group: 'in', attrs: { text: { text: 'in2' } } },\n        { group: 'out', attrs: { text: { text: 'out1' } } }\n    ]\n}\n\n});\n```\n. Hi, \nhm interesting.. seems it took the default (left). Both definitions are valid, position: 'top' as well as the position: { name: 'bottom' }  Here is a prepared fiddle you can play with \nhttps://jsfiddle.net/vtalas/scw093tv/ \n. link:disconnect is triggered only when the link is disconnected from the element and stays is graph (e.g. when you change source/target).  In other words, when you delete the link you need to listen the remove event on the graph \n```\ngraph.on('remove', function (cell) {\nif (cell.isLink()) {\n    // ...\n}\n\n});\n```\n. Hi Micheal, \nFirst of all -  thank you for a great job of creating these definitions.\nI've managed to get running a basic demo, however, I had to put back the index.d.ts definition. Without that, I wasn't able to compile the demo example in demo/ts-demo. Could you please provide an example or a snippet how do use it without the index.d.ts?   \nmy demo solution is in the https://github.com/vtalas/joint/tree/ts. I refactored it slightly, at the moment it seems it's working. \nI have a usage of the joint.d.ts, something like \n```\nimport * as joint from \"../../dist/joint\";\nimport * as $ from \"jquery\";\nconst graph = new joint.dia.Graph;\nconst paper = new joint.dia.Paper({\n    el: $('#paper'),\n    width: 650,\n    height: 400,\n    gridSize: 20,\n    model: graph,\n    markAvailable: true,\n    linkConnectionPoint: joint.util.shapePerimeterConnectionPoint\n});\nconst a = new joint.shapes.basic.Rect({\n    position: {x: 50, y: 50},\n    size: {width: 100, height: 40},\n    attrs: {text: {text: 'basic.Rect'}}\n});\ngraph.addCell(a);\n````\nIn your PR you removed the index.d.ts file. I'm curious how do you use the dist/joint.d.ts as I wasn't able to get it working without the export statement.\n. JointJS comes with own Typescript definition since v1.1. The problem you've described should be fixed\nthere. Also, there are some more TS based fixes on master branch (pre-1.2 version).    . would be great to (re)write unit tests in TS. oh yes, good point! it totally makes sense leave these there, check out my latest updates, protected could be the right way, what do you think? \n. >Ok. If I do npm install -D @types/jointjs then it stops throwing the 'model' does not exist in type 'PaperOptions' error, but it throws a bunch of other errors:\n\nnode_modules/jointjs/dist/joint.d.ts(49,21): error TS7006: Parameter 'c' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(49,24): error TS7006: Parameter 'a' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(49,27): error TS7006: Parameter 'b' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(101,23): error TS7006: Parameter 'distance' implicitly ...\n\ntsc compile option --noImplicitAny=false should solve this. \n\nIndeed, if you open node_modules/jointjs/types/joint.d.ts the interface PaperOptions does not contain model. How do I fix this?\n\nthe model property is defined on the parent of the PaperOptions : \ninterface PaperOptions extends Backbone.ViewOptions<Graph> { ...\nI'm not sure what could go wrong... \ntypescript definition file for jointjs is in the first version, there are still some bugs which will be hopefuly fixed in the following release. Please note the @types/joinjs is not needed, the most recent version should always come with the JointJs release (located in the dist/joint.d.ts) \n. It's already there, waiting for the next release. It's fixed in the master branch.. hi, there shouldn't be any magic, it's weird your ports are not \"reconstructed\" correctly.  I tried it on this code and it worked fine: \n```\nm.addPort({ id: \"xxx.x\", attrs: { circle: { magnet: true, stroke: '#31d0c6', 'stroke-width': 2 } } });\nm.addPort({ attrs: { circle: { magnet: true, stroke: '#31d0c6', 'stroke-width': 2, fill: '#ffffff' } } });\nm.addPort({ attrs: { circle: { magnet: true, stroke: '#31d0c6', 'stroke-width': 2, fill: '#ffffff' } } });\nm.portProp('xxx.x', 'attrs/circle/fill', 'red');\ngraph.addCell(m);\nvar json = graph.toJSON();\ngraph.clear();\nsetTimeout(function() {\n    graph.fromJSON(json)\n}, 1000);\n``. the thing is thedevs.Modelis quite special. It has an extra API to be compatible with the new implementation of ports. You either use thedevs.Modelapi  - instead of them1.addPortuse them1.addOutPort('label')/m1.addInPort('label')or don't use thedevs.Model` at all (recommended). Ports can be added to any shape, e.g.: \n```\nvar m = new joint.shapes.basic.Rect({\n    position: { x: 20, y: 100 },\n    size: { width: 100, height: 100 }\n})\nm.addPort({ id: \"xxx.x\", attrs: { circle: { magnet: true, stroke: '#31d0c6', 'stroke-width': 2 } } });\nm.addPort({ attrs: { circle: { magnet: true, stroke: '#31d0c6', 'stroke-width': 2, fill: '#ffffff' } } });\nm.addPort({ attrs: { circle: { magnet: true, stroke: '#31d0c6', 'stroke-width': 2, fill: '#ffffff' } } });\nm.portProp('xxx.x', 'attrs/circle/fill', 'red');\ngraph.addCell(m);\nvar json = graph.toJSON();\ngraph.clear();\nsetTimeout(function() {\n    graph.fromJSON(json)\n}, 1000);\n``. Yes, updating tutorials is on the schedule. Thank you to pointing this out. . fixed by #608 . fixedby #608 . please use themergeWithwhen it's necessary - only whencustomizeris passed into (https://lodash.com/docs/4.17.4#mergeWith)   . from the JointJS v2.0 you can use the static methoddefine` in typescript as well: \n```\nimport * as joint from \"../../build/joint\";\n// declare a new shape using the define\nvar Html = joint.shapes.basic.Rect.define('html.Rect', {\n    attrs: {\n        rect: {fill: 'purple'}\n    }\n});\n``\nThedefineextends the namespaceshapesand you can use theHtml` shape right away: \nlet rect = new Html()\n    .position(150, 50)\n    .size(50, 50)\n    .addTo(graph);\nThis step is not neccesary, but you can also let TS know about this change on the shapes namespace: \ndeclare module '../../build/joint' {\n    namespace shapes {\n        namespace html {\n            class Rect extends joint.shapes.basic.Rect {}\n        }\n    }\n}\nThen, you're able to us the shape as let recX = new joint.shapes.html.Rect() without TS compilation errors. @coroiu  joint.shapes.logic.Note is totally a bug, missing cell.graph as well, thank you for reporting it. The definition file is still not in good shape, but thanks to people like you, it's getting better and better. We appreciate your feedback! \ncell.ports is part of the deprecated functionality, this property is subject to removal. It will be removed most likely in the v2. There is an api for the ports: http://resources.jointjs.com/docs/jointjs/v1.1/joint.html#dia.Element.ports\n. hi this already fixed in the master branch, it will also be part of the JointJS v1.2.   . There is another product - RappidJs based on the JointJs library. In RappidJS, there are some extensions made on the dia.Paper, e.g. : \njoint.dia.Paper.prototype.print = function(opt) {\n...\nthe motivation for all of this \"interfacing\" was to make the dia.Paper extendible in another d.ts file. TS does not support partial classes (https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/partial-classes-and-methods)\nhowever, interfaces can be defined partially, this definition is valid:\ninterface Paper {\n  a: void; \n}\ninterface Paper {\n  print: void\n}. this isn't an optimal solution, interfaces reverted by #711.. Works as a charm! thank you for that. . It turns out that even with type [key: string]: any you'd be able to pass an instance e.g. new Date() etc.. object and [key: string]: any seems the same for me.  . It totally makes sense. Also the Object wasn't god choice at all. I'm closing the issue, thanks for your help.. Hi,\nAre you able to run the joint/demo/ts-demo app? Is the error occurring there as well?\ncd demo/ts-demo\nnpm install \nnpm start \n. you can run the npm install & grunt in the joint root, then go back and run the npm start again... This is not very pleasant indeed.\nI've made a PR which simplify the process a little bit:\nhttps://github.com/clientIO/joint/pull/770\nIt copies the joint.d.ts, joint.js, joint.css from the dist to the demo/ts-demo/build then you're able to work with the ts-demo without having the whole jointjs built.. cpx is meant to be a cross-platform way how to copy files from the dist folder... hmmm\nI've noticed the command should be wrapped in quotation marks :\n https://github.com/clientIO/joint/pull/770/commits/16cb99e5c829a0badee492e87678ce1dcc4e8532. \nI've tested it with the npm v5.5.1, on Windows and Ubuntu and surprisingly it worked well even without quotes.\n. Thank you for pointing this out, we've updated the ts definition file (#785 ) for ports and port groups. \nThe paper width, however, remains with the numeric type as the width defined in percentage is not fully supported - e.g. paper.getArea() doesn't give the right values.. Hi,\nthis can be sorted out by setting the right options, for more information\nvisit this thread\nhttps://groups.google.com/forum/#!msg/jointjs/KdtV-jWT3k4/31H9iy6_BwAJ\nIn short: try to match the values of gridSize on paper and step for the\nmanhattan router :\nrouter: {\n                name: 'manhattan', args: {step: 5}\n            }\nthen set the gridSize: 5. You'll see an instant improvement.\nRegards,\nVladimir\n2018-01-05 12:16 GMT+01:00 PathikDevani notifications@github.com:\n\nTwo React element with top, bottom, right, left ports and one elements\nare connected via link. Here i am using manhattan router. But i am not\ngetting line segment 100% vertically & horizontally.\nElements port configuration\n...\nports: {\n    groups: {\n        'left': {\n            position: {\n                name: 'left'\n            }\n        },\n        'bottom': {\n            position: {\n                name: 'bottom'\n            }\n        },\n        'top': {\n            position: {\n                name: 'top'\n            }\n        },\n        'right': {\n            position: {\n                name: 'right'\n            }\n        }\n    }\n}...\nLink configugration\n...\nsource: {\n    id: iBlock.id,\n    port: 'top'\n},\ntarget: {\n    id: bBlock.id,\n    port: 'right'\n},\nrouter: {\n    name: 'manhattan',\n}...\nDemo: https://jsfiddle.net/pathikdevani/8qkLbxad/\nExpected result: link should be collection of orthogonal(horizontal &\nvertical) segments.\nJointJS version: 2.0.1\nBrowser : Google Chrome, Mozilla Firefox\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/clientIO/joint/issues/786, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA4mEtNXxBgaTTJ6Wiphcuxint4EvQ1vks5tHgSVgaJpZM4RUUpp\n.\n. I forgot to mention one more thing... In your example, there are node positions off the grid. When you have the grid size === 10, then you should have the nodes positions dividable by 10 as well. \n\nYou don't need to care about this, just call the paper.snapToGrid function, it will adjust the position to be on the actual grid. So in your code, you would have: \n(~line 380)\nblock.set(\"position\", paper.snapToGrid(node.position.x , node.position.y));\nalso, you can visualize the grid - check the http://resources.jointjs.com/docs/jointjs/v2.0/joint.html#dia.Paper.prototype.options.drawGrid\n. @exonianp the \"static\" version is not ported correctly to the Angular6/React/Ts version of the demo. You can fix this using this gist https://gist.github.com/vtalas/70820bcbf65fabe5e45b20a79f41b016. thank you @exonianp  for pointing this out. I believe this could be the right search option:\n'*': ['type', 'attrs/text/text', 'attrs/root/dataTooltip', 'attrs/label/text'],\n'org.Member': ['attrs/.rank/text', 'attrs/root/dataTooltip', 'attrs/.name/text']\nas the the org.Member hasn't got the attributes aliases set. . Could you please elaborate more on the \"clear/print/layout nuisances\"? it seems it's working fine. @MrBra1nwash this is most likely the magnet attribute related. \nhttps://resources.jointjs.com/docs/jointjs/v2.0/joint.html#dia.attributes.magnet\nmagnet value could be \n- true - you can create links from the port \n- passive - you can connect links, but cannot create links from the port\n- false (default) \na simple usage could be found here\nhttps://stackoverflow.com/questions/44697985/joint-js-prevent-a-specific-element-to-be-linked/44718201#44718201\n. Hi, yes, the devs.ModelView has been removed as the shape dev.Model has been rewritten using the port API. With this API you don't need to define a custom view - ports can be added to any shape. \nIf you need a custom view, you can still create one: \n```\njoint.shapes.devs.ModelView = joint.dia.ElementView.extend({\n});\n``. Hi, check thets-demoapp in the demo folder, it covers this. Extending is described in thecustom.ts`  (https://github.com/clientIO/joint/blob/master/demo/ts-demo/custom.ts)\nUsing the define is not enough, you also need to declare a new type:\nimplementation using define\ntypescript\njoint.shapes.basic.Rect.define('app.CustomRect', {\n    attrs: {\n        rect: {\n            fill: 'red'\n        }\n    }\n}, {\n    test: function () {\n        console.log(\"test\");\n    }\n}, {\n    staticTest: function () {\n        console.log('staticTest');\n    }\n});\nand \"tell\" the typescript about the new implementation of app.CustomRect\n```typescript\ndeclare module './build/joint' {\n    namespace shapes {\n        namespace app {\n            class CustomRect extends joint.shapes.basic.Rect {\n                test(): void;\n            static staticTest(): void;\n        }\n\n        class Link extends joint.dia.Link {\n        }\n    }\n}\n\n}\n```\nthen you should be able to use the joint.shapes.app.CustomRect without TS error. Hi, even the doc is updated, good job. I'm not sure why isn't removePorts there from the beginning....  . hi, there are some failing tests, all seems to be addCells related. You can find instructions how to run the tests in the readme file. Also please do not modify anything in the dist folder. Anyway, your effort is highly appreciated, keep going! . Hi, I wasn't able to reproduce this issue. I've tried the demo/ts-demo (using the typescript@2.5.3), all seems to be ok. Can you provide a code snippet, please?  . hi, thank you for reporting this, contextmenu event is not fired on paper. Tested in Chrome, Firefox in Ubuntu . Hi, thank you for pointing this out, there is already a fix for that (https://github.com/clientIO/joint/pull/917).  You can expect a hotfix release during this week.. Hi, is it possible you've got the snaplines options enabled? \n\nIn that case alignment to adjacent shapes has the higher priority than alignment to the grid. . hi @RanaProgrammer , \nIn Rappid v2.4 there is a demo in integrated with the Angular. I believe you can do something similar to this: \n```\nimport * as joint from '../../vendor/rappid';\nimport * as $ from \"jquery\";\nexport class InspectorService {\ncreate(cell: joint.dia.Cell): joint.ui.Inspector {\n\n    const { groups, inputs } = this.getInspectorConfig()[cell.get('type')];\n    const inspector = joint.ui.Inspector.create('.inspector-container', {\n\n        renderFieldContent: function (options: { [key: string]: any }, path: string, value: any): string | JQuery | HTMLElement {\n            switch (options.type) {\n\n                case 'my-button-set':\n\n                    var $buttonSet = $('<div/>').css('margin', 20);\n                    var $yes = $('<button/>').text('Say YES!');\n                    var $no = $('<button/>').text('Say NO!');\n                    $buttonSet.append([$yes, $no]);\n                    $buttonSet.data('result', value);\n                    // When the user clicks one of the buttons, set the result to our field attribute\n                    // so that we can access it later in `getFieldValue()`.\n                    $yes.on('click', function () {\n                        $buttonSet.data('result', 'YES');\n                        inspector.updateCell($buttonSet, path, options);\n                    });\n                    $no.on('click', function () {\n                        $buttonSet.data('result', 'NO');\n                        inspector.updateCell($buttonSet, path, options);\n                    });\n\n                    return $buttonSet;\n            }\n            return null;\n        },\n        cell,\n        groups, inputs\n    });\n    return inspector;\n}\n\n``. Note thatjoint.ui.PaperScroller` has the ready-made solution for this: \npaper.on('blank:mousewheel', function(evt, x, y, delta) {\n    paperScroller.zoom(delta * 0.2, { min: 0.2, max: 5, grid: 0.2, ox: x, oy: y });\n});\nhttps://resources.jointjs.com/docs/rappid/v2.4/ui.html#ui.PaperScroller\n. I'd suggest the absolute port layout for this scenario.\nI'm having an element with groups greens and blacks\nset the absolute positioning in the group definition \n```\ngreens: {\n    position: 'absolute',\n},\nblacks: {\n    position: 'absolute',\n},\n```\ncatch the event when a port(s) is added\n```\ngraph.on('ports:add', function(element, addedPorts) {\n// get desired groups, sort the output if necessary\nconst inputs = element.getPorts().filter(function(item) {\n    return item.group === 'greens' || item.group ==='blacks';\n});\n\nconst size = element.size();\nlet elBBox = g.Rect(0, 0, size.width, size.height);\n\n// use the port layout function\nconst positions = joint.layout.Port.line(inputs, elBBox, { start: elBBox.origin(), end: elBBox.topRight() });\n\npositions.forEach(function(port) {\n    element.portProp(port.id, 'args', {\n        x: port.x,\n        y: port.y\n    })\n})\n\n});\n``\nthen, you should see ports from both groups evenly distributed on the top of the element after calling theelements.addPorts([{group:'blacks'},{group:'greens'}]). most likely you need thegraph.on('add' ... )`.\nSmall debugging hint: with paper.on('all', console.log) or graph.on('all', console.log) you'll be able to catch all events.. Hi, \nThank you for pointing this out, TS versions of KitchenSink (KitchenSinkTS, KitchenSinkReact, KitchenSinkAngular6) are missing some pieces. That's actually a bug and it will be fixed in the following release. \nMeanwhile, you can update your app using this gist: https://gist.github.com/vtalas/70820bcbf65fabe5e45b20a79f41b016\n. shapes like standard.Polyline or standard.Path in the joint.shapes namespace may fit your needs perfectly. Get some inspiration from the demo solutions e.g. here https://github.com/clientIO/joint/blob/v2.2.1/demo/shapes/src/standard.js. Hi, setting the grid dynamically is not straightforward, indeed. \nYou need to call the setGrid and also the drawGrid aftewards. Where setGrid arguments follow the options.drawGrid structure (https://resources.jointjs.com/docs/jointjs/v2.2/joint.html#dia.Paper.prototype.options.drawGrid )\nso, for example:\npaper.setGrid('doubleMesh').drawGrid();\nor with an extra args:\npaper.setGrid({\n    name: 'doubleMesh',\n    args: [\n        { color: 'red' },\n        { color: 'green', thickness: 10, scaleFactor: 8 }\n    ]\n}).drawGrid();\nNote, that you can define your own pattern, for inspiration check the built-in patterns implementations at joint.dia.Paper.gridPatterns namespace \n. leftover, will be removed\n. this.el is link element in this case, we need source/element\n. yes that could works as well :+1: \n. in this case at least one / has to be there, as the path is just a part of the 'result' path, \nvar portPath = ['ports/items/', index, path].join('');\n. set seems to me that it could affect the port position, in this case value is just stored for later use, port position is not affected. . i'v changed it to set anyway .... good point, totally agreed, I'll change it in method attrs as well . ok, it will throw an error path is not an array, also path should be attrs instead. Yes, it will be better. I was trying to minimize  upadatePattern call, However, there is upadtePattern even for the default  'dot'. . ok\n. _.isFinite does the both checks . where did  pathArray come from?. what is this package for? . please remove the .idea as it's not related to joint js, you can put this record into excludes instead (.git/info/exclude). opt?: {[key: string]: any}. opt?: {[key: string]: any}. opt? . opt?: {[key: string]: any}. wouldn't be better to have something like:\nnamespace Paper {\n    export interface Options {\n        // ...\n    }\n    export interface GridOptions {\n        // ...\n    }\n    export interface BackgroundOptions {\n        // ...\n    }\n}\n?. wouldn't be even faster if the filter weren't here, in every iteration? . ",
    "quentin-sommer": "Thanks!\n. Hi, I'm trying as well to make jointjs work with webpack, my problem I get the error\nModule not found: Error:\nCan't resolve 'fs' in '/proj/node_modules/jointjs' @ ./~/jointjs/index.js 3:9-22\nI guess because jointjs tries to load node's fs module:\n``` javascript\n'use strict';\nvar fs = require('fs');\nvar possiblePaths = ['./build/joint.js', './dist/joint.js'];\nvar filePath;\nwhile ((filePath = possiblePaths.shift())) {\n    try {\n        fs.statSync(__dirname + '/' + filePath);\n    } catch (error) {\n        // Try another path.\n        continue;\n    }\n    // Found a path that exists.\n    break;\n}\nconsole.log('hey',filePath);\nif (!filePath) {\n    throw new Error('JointJS build file not found.');\n}\nmodule.exports = require(filePath);\n```\nI have tried these workarounds:\njavascript\nnode: {\n    fs: 'empty'\n  },\njavascript\nnode: {\n    fs: true\n  },\nBut neither worked as the first mocks the module (and then make the code fail) and the other make webpack output Error: No browser version for node.js core module 'fs' available\nHow can I work around this to use jointjs ? @chill117 \n. ",
    "dddomin3": "WARNING in ./~/jointjs/index.js\nCritical dependencies:\n25:17-34 the request of a dependency is an expression\n @ ./~/jointjs/index.js 25:17-34\nWARNING in ./~/jointjs/CHANGELOG\nModule parse failed: /home/my_username/projects/my_project/node_modules/jointjs/CHANGELOG Invalid number (1:3)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Invalid number (1:3)\n    at Parser.pp.raise (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:920:13)\n    at Parser.pp.readNumber (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:2951:146)\n    at Parser.pp.getTokenFromCode (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:2768:19)\n    at Parser.pp.readToken (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:2508:15)\n    at Parser.pp.nextToken (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:2500:71)\n    at Parser.pp.next (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:2449:8)\n    at Parser.pp.parseExprOp (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:168:12)\n    at Parser.pp.parseExprOps (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:153:15)\n    at Parser.pp.parseMaybeConditional (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:133:19)\n    at Parser.pp.parseMaybeAssign (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:110:19)\n    at Parser.pp.parseExpression (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:86:19)\n    at Parser.pp.parseStatement (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:1753:23)\n    at Parser.pp.parseTopLevel (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:1648:21)\n    at Parser.parse (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:1616:17)\n    at Object.parse (/home/my_username/projects/my_project/node_modules/webpack/node_modules/acorn/dist/acorn.js:882:44)\n    at Parser.parse (/home/my_username/projects/my_project/node_modules/webpack/lib/Parser.js:902:15)\n    at DependenciesBlock. (/home/my_username/projects/my_project/node_modules/webpack/lib/NormalModule.js:104:16)\n    at DependenciesBlock.onModuleBuild (/home/my_username/projects/my_project/node_modules/webpack-core/lib/NormalModuleMixin.js:310:10)\n    at nextLoader (/home/my_username/projects/my_project/node_modules/webpack-core/lib/NormalModuleMixin.js:275:25)\n    at /home/my_username/projects/my_project/node_modules/webpack-core/lib/NormalModuleMixin.js:259:5\n    at Storage.finished (/home/my_username/projects/my_project/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:38:16)\n    at /home/my_username/projects/my_project/node_modules/graceful-fs/graceful-fs.js:78:16\n    at FSReqWrap.readFileAfterClose as oncomplete\n @ ./~/jointjs ^.\\/.*$\nThis is probably why actually\n. Sorry for the lack of information! I've tried it on 4.1.2, and 6.2 i believe. Using Webpack, and \n'import joint from 'jointjs'' (ES6)\nI saw jQuery dependency go away during the npm update.\n. ",
    "bhoriuchi": "working with @dddomin3 on this.\nwe are using a vue-cli webpack template with no grunt/gulp\nthe main source for errors seems to be the new index.js code in the root of the module. if we replace that file with the older version that simply exports ./dist/joint webpack packages everything w/o error\nfor the current index.js code a few things happen in our environment. First, we get an error that the fs module cannot be resolved which is strange since it is included with node. it is looking for the module in the jointjs node_modules directory so myproject/node_modules/jointjs/node_modules/fs\nit also seems that the file path is not being found as even when installing fs manually into jointjs/node_modules we still get all the same errors except the one about not being able to resolve fs\nversion 0.9.7 gives us no issue.\nUPDATE: using a webpack alias eliminates errors on webpack build\nalias: {\n  'jointjs': path.resolve(__dirname, '../node_modules/jointjs/dist/joint.min')\n}\nThanks,\nBranden\n. ",
    "edi9999": "$ node -v\nv6.2.1\nThe webpack command : \nNODE_ENV=development webpack-dev-server -d --inline --hot --progress\n. Ok, probably, we have decided to use an other library for our diagrams now.\nThanks for the help anyway @DontShootMe .\nIt would be good for jointjs to be compatible with lodash 4.x\n. ",
    "bcarson1": "Had the same problem.  Its probably a Lodash version problem, I just switched from 4.13.1 to 3.10.1 and it worked.\n. ",
    "sbowler": "We have also been stuck using 3.10 because of this dependency. It would be great to remove it or bundle it so there's not version conflicts like this. IMO, there should probably be a new issue created to do one or the other so people interested can follow what is happening regarding it.\nOr would you guys be open to a pull request updating everything to lodash 4.x?\n. ",
    "devalfrz": "JointJS is an awesome library and I have been using it for a while now. Updating it has been troublesome, so I hope this gets fixed soon. While this happens, this is the setup that works for me now:\njquery v2.2.4\nbackbone v1.3.3\nlodash v3.10.1\njointjs v0.9.10\n. ",
    "GeorgiyZhuravlev": "having the same problem on an empty project with rapid.js\nbower.json\n\"dependencies\": {\n    \"jquery\": \"2.2.4\",\n    \"backbone\": \"1.3.3\",\n    \"lodash\": \"3.10.1\",\n    \"angular\": \"1.5.8\"\n  }\nindex.html\n<script src=\"bower_components/jquery/dist/jquery.js\"></script>\n<script src=\"bower_components/lodash/lodash.js\"></script>\n<script src=\"bower_components/backbone/backbone.js\"></script>\n<script src=\"jointjs/js/rappid.js\"></script>\n<script src=\"bower_components/angular/angular.js\"></script>\nRappid v1.7.0\nline 2411:\nif (this.mixin.deep && (Object(copy) === copy)) {\n\n. ",
    "40rn05lyv": "Actually, mouseover and mouseout works ok. We just need to have mouseenter/mouseleave events.\nMy solution is following:\n```\nvar CustomPaper = joint.dia.Paper.extend({\n  events: function() {\n    return _.extend({}, joint.dia.Paper.prototype.events, {\n      'mouseenter .element': 'cellMouseenter',\n      'mouseenter .link': 'cellMouseenter',\n      'mouseleave .element': 'cellMouseleave',\n      'mouseleave .link': 'cellMouseleave',\n    });\n  },\n  cellMouseenter: function(evt) {\n    evt = joint.util.normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (view) {\n      if (this.guard(evt, view)) return;\n      view.mouseenter(evt);\n    }\n  },\n  cellMouseleave: function(evt) {\n    evt = joint.util.normalizeEvent(evt);\n    var view = this.findView(evt.target);\n    if (view) {\n      if (this.guard(evt, view)) return;\n      view.mouseleave(evt);\n    }\n  }\n})\njoint.dia.CellView.prototype.mouseenter = function(evt) {\n  this.notify('cell:mouseenter', evt);\n}\njoint.dia.CellView.prototype.mouseleave = function(evt) {\n  this.notify('cell:mouseleave', evt);\n}\n```\nNow, we can create CustomPaper and set listeners:\nvar paper = new CustomPaper({ ... });\npaper.on(\"cell:mouseenter\", function(cellView, evt) {\n  alert(\"mouse entered!\")\n})\npaper.on(\"cell:mouseleave\", function(cellView, evt) {\n  alert(\"mouse left!\")\n})\n. I think it worth adding this to the next release.\n. What is PR?\n. Even if I increase height for breakText function by 1.25 it still doesn't work properly, because breakText measures lh only for <text><tspan></tspan</text> and then multiply it on number of lines.\nHowever, in reality <text><tspan></tspan</text>.getBBox().height*2 is NOT equal to <text><tspan></tspan<tspan></tspan</text>.getBBox().height`.\n. Can be fixed with something like this:\n```\nvar oldBreakText = joint.util.breakText;\njoint.util.breakText = function(text, size, styles, opt) {\n  var height = size.height;\n// Call old break text, but without height\n  var brokenText = oldBreakText(text, { width: size.width }, styles, opt);\n  var lines = brokenText.split('\\n');\nopt = opt || {};\n  var svgDocument = opt.svgDocument || V('svg').node;\n  var textElement = V('').attr(styles || {}).node;\n  textElement.style.display = 'block';\n  svgDocument.appendChild(textElement);\n  if (!opt.svgDocument) {\n    document.body.appendChild(svgDocument);\n  }\nfor (var i = 0; i < lines.length; i++) {\n    var textSpan = V('').attr({ x: 0, dy: '1em' }).node;\n    var textNode = document.createTextNode('');\n    textNode.data = lines[i];\n    textSpan.appendChild(textNode);\n    textSpan.style.display = 'block';\n    textElement.appendChild(textSpan);\n    if (textElement.getBBox().height > height) {\n      // remove overflowing lines\n      lines.splice(i);\n      break;\n    }\n  }\nif (opt.svgDocument) {\n    // svg document was provided, remove the text element only\n    svgDocument.removeChild(textElement);\n  } else {\n    // clean svg document\n    document.body.removeChild(svgDocument);\n  }\nreturn lines.join('\\n');\n}\n```\n. ",
    "Supamiu": "see https://github.com/clientIO/joint/issues/396, shows a better definition files in the comment.\n. ",
    "tianxu0836": "Even the example in \"Working with Ports\" is not working with this case.\nWhat is the solution?\nIt won't make sense that input can't have same name with output....\n`(function() {\n```\nvar graph = new joint.dia.Graph;\nvar paper = new joint.dia.Paper({\n    el: $('#paper'),\n    width: 650, height: 200, gridSize: 1,\n    model: graph,\n    defaultLink: new joint.dia.Link({\n        attrs: { '.marker-target': { d: 'M 10 0 L 0 5 L 10 10 z' } }\n    }),\n    validateConnection: function(cellViewS, magnetS, cellViewT, magnetT, end, linkView) {\n        // Prevent linking from input ports.\n        if (magnetS && magnetS.getAttribute('type') === 'input') return false;\n        // Prevent linking from output ports to input ports within one element.\n        if (cellViewS === cellViewT) return false;\n        // Prevent linking to input ports.\n        return magnetT && magnetT.getAttribute('type') === 'input';\n    },\n    // Enable marking available cells & magnets\n    markAvailable: true\n});\nvar m1 = new joint.shapes.devs.Model({\n    position: { x: 50, y: 50 },\n    size: { width: 90, height: 90 },\n    inPorts: ['a','b'],\n    outPorts: ['a','b'],\n    attrs: {\n        '.label': { text: 'Model', 'ref-x': .4, 'ref-y': .2 },\n        rect: { fill: '#2ECC71' },\n        '.inPorts circle': { fill: '#16A085', magnet: 'passive', type: 'input' },\n        '.outPorts circle': { fill: '#E74C3C', type: 'output' }\n    }\n}).addTo(graph);\nvar m2 = m1.clone().translate(300, 0).attr('.label/text', 'Model 2').addTo(graph);\n```\n})()`\n. Can anyone provide a working example for me to support this case?\nThe document is very unhelpful, I can't find anything related to how to use port, except the \"Working with Ports\" document, with doesn't support same input/out name neither.\n. This solution seems like it is working for metro router, but doesn't work well for manhattan router.\n. ",
    "matthewatabet": "Any suggestions here? Let me know if you need more details. Thanks!\n. Ping :) Thanks. This is becoming a critical issue and any advice would be appreciated. Let me know if you need any info from me.\n. Thanks! I think we can do that. I'll look into the latest port api this week and let you know how it goes. Cheers!\n. p.s. More details about the use case:\nI'm building support on our application for nested subnetworks. The user can assemble select a group of nodes and collapse them into a subnetwork which appears as a single node in the parent network. This node then has a dynamic set of ports -- as the topology of the contained network changes, the dynamic ports on the parent node need to update to reflect the new inputs and outputs of the subnetwork.\n. So, so far so good. The latest jointjs dropped in easily with just a few tweaks to css selectors.\nRe the port api -- I read through the api but it wasn't clear how to designate a port as an input or an output. Any pointers?\nPreviously, this was done by setting 'inPorts' and 'outPorts.' Thanks!\n. Hello! I've gotten enough code converted over to the new api to confirm that this fixes the port coloring problem I was having. Thanks a bunch!\nI'm going to close this ticket. When should this new api be available via npm? Thanks!\n. The solution here was to find the port within the element's nested props:\nelement.prop('ports/items/2/attrs/.port-body/fill-opacity', 1)\nWorks like a charm. Thanks!\n. I had custom port markup. So, I needed to set magnet: true on the desired selector element. Problem solved! Thanks.\n. Sure -- this might not be practical, but I've been looking for a node graph which uses React for rending components and Redux for storing the graph topology. IMHO, this could allow for much simpler client code. I say this might not be practical because such a thing would require migration away from backbone. But, I at least wanted to open an issue so folks would know there was interest in such a thing.\n. ",
    "moebiusmania": "@kumilingus I agree with maitaning JointJS \"standalone\", but it would be great to see some examples of integrations with JS framework, in first instance React.\nOra maybe to publish some wrappers for frameworks.. ",
    "capitanjacksparrow": "I've just solved the problem by implementing only the 'cell:pointerclick' callback. \nThe callback waits a certain time before executing the click function, if during this time another click happens it executes the double click function.\nAs suggested here:\nhttp://stackoverflow.com/questions/6330431/jquery-bind-double-click-and-single-click-separately/7845282#7845282\n. ",
    "Siriah": "I'd be really excited about more complete Typescript definitions for JointJS. When searching for jointjs Typescript definitions using the 'typings' tool, these show up as well: https://github.com/CaselIT/typings-jointjs They are more complete than what's available in the DefinitelyTyped repository, but there are still some bits missing.\n. ",
    "miltonbsn": "Thank you @kumilingus \n. ",
    "pskala": "removed to jointjs_site\n. ",
    "yadav-avneesh": "Thank you.\n. ",
    "brassard": "Oh... interesting. It works to position them. I am trying to layout a non-interactive flow-chart style diagram.\nI switched over to numbers for now, basically calculating the percentage positions manually. I was trying to use percentages so that the objects would scale when the page is resized, which seems to work, albeit without any lines present.\nI can work around it in general. Is there an easy way to make all elements redraw themselves? Is there a call like paper.redraw() or something?\nThanks for the response.\n. Was just thinking... I guess I may just need to track the window resizing and change the sizes of the graph's elements when it happens. Will changing those elements' dimensions, just automatically update the paper's view?\n. Thanks. I ended up just clearing the graph and redrawing when I needed to adjust for window size changes.\n. ",
    "mperktold": "After checking the website again, I noticed that now jQuery version 2.4.4 should be used, which fixes the above issue.\nMaybe this should be mentioned in the changelog or some migration guide...\n. ",
    "sastrygunnu": "Thanks for quick updates Can i use Json to generate this tree?\n. Basically we are trying to build layout like this below I'm stile not sure this is possible with this or not just today i started working with this frame work .. your help really appreciate to decide and buy\n\n. ",
    "doender": "I have the feeling that the positioning doesn't work in my code (as opposed to the fiddle) because there is something off with the scaling. If I define a module like this:\nvar m = new joint.shapes.basic.Rect({\n       size: {width: 120, height: 60}\n}\nI get a gigantic rectangle. It seems the numbers aren't interpreted as pixel sizes. This is the resulting html (in Chrome dev tools):\n<g class=\"rotatable\" id=\"v-6\" transform=\"\">\n   <g class=\"scalable\" id=\"v-7\" transform=\"scale(120,60)\">\n      <rect id=\"v-8\" fill=\"#4db6ac\" stroke=\"#000000\" width=\"100\" height=\"60\"></rect>\n   </g>\n</g>\nSo the width/height are interpeted as scaling factors instead of pixel sizes. \nHow can I fix this?\n. Ah, I just found out that it's due to this bug: https://github.com/clientIO/joint/issues/262\n. Thanks, just found the same solution a minute ago :)\n. I don't whether this is useful for you, but I had the following errors with an existing project (working in 1.0.2) but trying to use the typescript definitions:\n```\nProperty 'TextBlock' does not exist on type 'typeof basic'.\nProperty 'extend' does not exist on type 'typeof Link'.\nArgument of type '{ setLinkVertices: boolean; }' is not assignable to parameter of type 'LayoutOptions'.\n  Types of property 'setLinkVertices' are incompatible.\nType 'boolean' is not assignable to type '(link: Link, vertices: Position[]) => void'.\nArgument of type '{ el: any; model: any; width: string; height: number; gridSize: number; drawGrid: { color: string...' is not assignable to parameter of type 'PaperOptions'.\n  Object literal may only specify known properties, and 'drawGrid' does not exist in type 'PaperOptions'.)\nProperty 'model' does not exist on type 'CellView'.\n. In my app, this code\njoint.layout.DirectedGraph.layout(this.graph, {\n   setPosition: (el, bbox) => el.position(0.1 * bbox.x, 0.1 * bbox.y);\n});\nruns 100 times slower as this:\njoint.layout.DirectedGraph.layout(this.graph, {\n   setPosition: (el, bbox) => el.position(10 * bbox.x, 10 * bbox.y);\n});\n```\nMaybe in my particular app updating the position somehow does depend on the position itself, although I cannot see how. For now I have the following workaround:\nthis.graph.resetCells(cells.concat(links));\njoint.layout.DirectedGraph.layout(this.graph, {\n   setPosition: (el, bbox) => {\n      // Instead of setting position, set attributes directly and then reset cells afterwards\n      el.attributes.position.x = bbox.x;\n      el.attributes.position.y = bbox.y;\n   }\n});\nthis.graph.resetCells(cells.concat(links));\n. ",
    "alirezamirzaeiyan": "Much obliged! :+1: \nThis approach works without any problem :)\n. ",
    "discoverrajeev": "I am also facing the same issue.\nI tried even using script but no success.\nAny clue to make it success?\nThanks. Thanks javitank for the solution.\nI am currently using graphlib which is there in Rappid version 2.0.1. ",
    "javitank": "Hi @discoverrajeev,\nI'll tell you how I've done it, by taking advantage of 'map' option of requireJS. \nYou can tell requireJS that instead of loading, for example, the backbone dependency of jointjs, to load another module, so I made a tiny module that returns the real backbone while loading graphlib and dagre in the window object.\nThat is something like:\nExample of my requireJS config:\n```\n{\n    paths: {\n        'lodash-3.10.1': 'path/to/lodash-3.10.1',\n        'backbone': 'path/to/backbone-1.3.3',\n        'graphlib': 'path/to/graphlib-2.1.1',\n        'dagre': 'path/to/dagre-0.7.4',\n        'jointjs': 'path/to/joint-1.0.3',\n        'jointjs-loader-hack': '../scripts/connectivity/jointjs-loader-hack',\n},\nmap: {\n    'jointjs': {\n        'backbone': 'jointjs-loader-hack',\n        'lodash': 'lodash-3.10.1',\n    }\n}\n\n}\n```\nAnd the module jointjs-loader-hack.js\n```\ndefine(['backbone', 'graphlib', 'dagre'], function(backbone, graphlib, dagre) {\n    window.graphlib = graphlib;\n    window.dagre = dagre;\nreturn backbone;\n\n});\n```\nNotice I use a recent version of graphlib, because the recommended by jointjs gives an error that I don't remember now.\n. > What do we need to change in JointJS to make DirectedGraph play well with AMD/RequireJS? Cheers.\nNot completely sure, but I think is missing a define block for 'graphlib' and 'dagre', similar to the one used for backbone, lodash, etc., in https://github.com/clientIO/joint/blob/v1.0.3/dist/joint.js#L14. ",
    "steve-heine": "this still seems to be broken. ",
    "lialosiu": "Yeah, I see...\nI just try to use setLinkVertices just like document usage, and found it not work, so I doubt of it is a bug or not.\n. ",
    "altersign": "Has passed quite a while, but if it's still an issue for you, at least a temporary solution can be found on Stackoverflow.\nI would also note that I had similar issue in Chrome only. In Firefox it works for me without any changes in constructor arguments.. ",
    "AuHau": "I already solved it in different way, but thanks for heads up!. ",
    "sacheth003": "@kumilingus I unfortunately can't create a JSFiddle as it's part of a more complex project, but I'll see what I can do. Meanwhile, are you aware of anything that may cause issues on Safari and not on Chrome and Firefox?. ",
    "issacjxjx": "Chrome version is 55.0.2883.87 (64-bit). Sorry for the wrong link, you can go here to see the graph.. Actually the document does not have this attribute. I'll look into the source code.. No. I modified the content of the svg and it was ok. Thank you!. ",
    "urstruly": "@kumilingus Fixed the indexOf logic and added a test case for line.intersect with various lines in opposite directions. (Also squashed the commits into one.). Fixed it in https://github.com/clientIO/joint/pull/497/commits/a5f2bda1fb24d123e923edc8fbf998830f6b9334. Will look at the line intersection logic next.. ",
    "clarkejm": "Never mind. Not a Joint issue (directly) other machines with Chrome not having the same issue and restarting chrome appears to have solved the issue... ",
    "CoconutTheSlayer": "Hello there, no you just have to render all the divs necessary for joint and you are good to go. \nRegarding the joint you have to use const joint = require('pathtojointjs'); or update the types as you suggested.. great to hear that:-). Hi @uroti checkout this repo, it's working, if you have any questions don't hesitate to ask me.\nhttps://github.com/CoconutTheSlayer/jointangular2. Well, my angular class implements OnInit to be able to call ngOnInit. The most important change is in the package.json, i'm referencing the github repo of the jointjs to get the latest version with updated definition files:-) anyway, is the code I provided working for you?. great:-). Can you show me the code?. I didnt run the code but you are importing backbone types, just import backbone itself. @Waanders Well I was just about to write you that I will take a look tomorrow, I'm glad that it works now :-). ",
    "TaylorPzreal": "i have a wrong.\nUncaught TypeError: Cannot read property 'assign' of undefined\n    at eval (eval at ./node_modules/jointjs/dist/joint.js (polyfills.04c45c0\u2026.js:548), <anonymous>:2995:17)\n    at Object.eval (eval at ./node_modules/jointjs/dist/joint.js (polyfills.04c45c0\u2026.js:548), <anonymous>:18:20)\n    at eval (eval at ./node_modules/jointjs/dist/joint.js (polyfills.04c45c0\u2026.js:548), <anonymous>:19:11)\n    at eval (eval at ./node_modules/jointjs/dist/joint.js (polyfills.04c45c0\u2026.js:548), <anonymous>:45:2)\n    at Object../node_modules/jointjs/dist/joint.js (polyfills.04c45c0\u2026.js:548)\ni import like this:\nimport * as _ from 'lodash';\nimport * as Backbone from 'backbone';\nconst joint = require('jointjs/dist/joint.js');\n. ",
    "uroti": "I'm trying to integrate jointjs in an Angular 2 component, I saw your code but I have problem with it:\n`import { Component } from '@angular/core';\nimport * as joint from 'jointjs';\nimport * as $ from 'jquery';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  graph:any;\n  paper: any;\nconstructor() {}\nngOnInit() {\n    this.createGraph();\n    //console.log(this.graph);\n  }\nprivate createGraph(){\nthis.graph = new joint.dia.Graph();\n\nthis.paper = new joint.dia.Paper({ el: $('#body'), width: 500, height: 500, model: this.graph });\n\nlet rect = new joint.shapes.basic.Rect({\n  position: { x: 100, y: 100 },\n  size: { width: 70, height: 30 },\n  attrs: { text: { text: 'my rectangle' } }\n});\n\nlet rect2 = new joint.shapes.basic.Rect({\n  position: { x: 250, y: -100 },\n  size: { width: 70, height: 30 },\n  attrs: { text: { text: 'my rectangle2' } }\n});\n\nlet link = new joint.dia.Link({\n  source: { id: rect.id },\n  target: { id: rect2.id }\n});\n\nthis.graph.addCells([rect, rect2, link]);\n//this.graph.addCell(rect);\n\n}\n}\n`\nNo problem with the jointjs import but it doesn't work.This is the error:\nEXCEPTION: Error in :0:0 caused by: this.addCell is not a function  vendor.bundle.js:81229:9\nORIGINAL EXCEPTION: this.addCell is not a function  vendor.bundle.js:81231:13\nORIGINAL STACKTRACE:  vendor.bundle.js:81234:13\njoint.dia.Graph<.addCells/<@http://localhost:4200/vendor.bundle.js:109741:22040\narrayEach@http://localhost:4200/vendor.bundle.js:53633:11\nforEach@http://localhost:4200/vendor.bundle.js:62455:14\njoint.dia.Graph<.addCells@http://localhost:4200/vendor.bundle.js:109741:22006\njoint.util.wrappers.cells/<@http://localhost:4200/vendor.bundle.js:109741:16545\n[500]/AppComponent.prototype.createGraph@http://localhost:4200/main.bundle.js:84:9\n[500]/AppComponent.prototype.ngOnInit@http://localhost:4200/main.bundle.js:64:9\nanonymous/Wrapper_AppComponent.prototype.ngDoCheck@/AppModule/AppComponent/wrapper.ngfactory.js:20:40\nanonymous/View_AppComponent_Host0.prototype.detectChangesInternal@/AppModule/AppComponent/host.ngfactory.js:26:3\nAppView.prototype.detectChanges@http://localhost:4200/vendor.bundle.js:100746:9\nDebugAppView.prototype.detectChanges@http://localhost:4200/vendor.bundle.js:100941:13\nViewRef_.prototype.detectChanges@http://localhost:4200/vendor.bundle.js:82539:9\nApplicationRef_.prototype.tick/<@http://localhost:4200/vendor.bundle.js:36983:58\nApplicationRef_.prototype.tick@http://localhost:4200/vendor.bundle.js:36983:13\nApplicationRef_.prototype._loadComponent@http://localhost:4200/vendor.bundle.js:36958:9\nApplicationRef_.prototype.bootstrap@http://localhost:4200/vendor.bundle.js:36946:9\nPlatformRef_.prototype._moduleDoBootstrap/<@http://localhost:4200/vendor.bundle.js:36758:82\nPlatformRef_.prototype._moduleDoBootstrap@http://localhost:4200/vendor.bundle.js:36758:13\nPlatformRef_.prototype._bootstrapModuleFactoryWithZone/</</<@http://localhost:4200/vendor.bundle.js:36710:21\nZoneDelegate.prototype.invoke@http://localhost:4200/polyfills.bundle.js:6262:17\nNgZone.prototype.forkInnerZoneWithAngularBehavior/this.inner<.onInvoke@http://localhost:4200/vendor.bundle.js:26951:28\nZoneDelegate.prototype.invoke@http://localhost:4200/polyfills.bundle.js:6261:17\nZone.prototype.run@http://localhost:4200/polyfills.bundle.js:6058:24\nscheduleResolveOrReject/<@http://localhost:4200/polyfills.bundle.js:6611:52\nZoneDelegate.prototype.invokeTask@http://localhost:4200/polyfills.bundle.js:6295:17\nNgZone.prototype.forkInnerZoneWithAngularBehavior/this.inner<.onInvokeTask@http://localhost:4200/vendor.bundle.js:26942:28\nZoneDelegate.prototype.invokeTask@http://localhost:4200/polyfills.bundle.js:6294:17\nZone.prototype.runTask@http://localhost:4200/polyfills.bundle.js:6098:28\ndrainMicroTaskQueue@http://localhost:4200/polyfills.bundle.js:6461:25\nCan you help me?. If I change from this.graph.addCells([rect,rect2,link]) to this.graph.addCell(rect) I have your old error:\nTypeError: this.findBySelector is not a function\n    at joint.js:6872\n    at lodash.js:4944\n    at baseForOwn (lodash.js:3001)\n    at lodash.js:4913\n    at Function.forEach (lodash.js:9359)\n    at child.update (joint.js:6867)\n    at child.wrapper [as update] (lodash.js:4968)\n    at child.render (joint.js:7192)\n    at child.protoProps.render (joint.js:4260)\n    at child.protoProps.render (joint.js:4260)\n    at child.renderView (joint.js:9888)\n    at child.onCellAdded (joint.js:9866)\n    at triggerEvents (backbone.js:371)\n    at triggerApi (backbone.js:356)\n    at eventsApi (backbone.js:155)\n. Hi @CoconutTheSlayer, \nthank you for the answer. I don't see difference with my code. How have you install and set jointjs?\nThis could be the only one difference.\nRegards \n. I downloaded your project, installed jointjs(I done only npm install jointjs and not npm @types/joints) and now it works!...but I don't understand which is the problem in my project. . Now I have problems to use elements of joint.shapes.devs, I have this error Property 'devs' does not exist on type 'typeof shapes'. I solved the previous problem, now the project starts but in the console I have this error:\nTypeError: Backbone is undefined[Learn More]  scripts.bundle.js%20line%2014%20%3E%20eval:37:13\n    <anonymous> http://localhost:4200/scripts.bundle.js%20line%2014%20%3E%20eval:37:13\n    <anonymous> http://localhost:4200/scripts.bundle.js%20line%2014%20%3E%20eval:8:2\n    [325]/module.exports http://localhost:4200/scripts.bundle.js:14:3\n    [345] http://localhost:4200/scripts.bundle.js:23:1\n    __webpack_require__ http://localhost:4200/inline.bundle.js:53:12\n    [615] http://localhost:4200/scripts.bundle.js:52:18\n    __webpack_require__ http://localhost:4200/inline.bundle.js:53:12\n    webpackJsonpCallback http://localhost:4200/inline.bundle.js:24:23\n    <anonymous> http://localhost:4200/scripts.bundle.js:1:1\n@CoconutTheSlayer Do you have this error ?. No idea? I need this library.... This is the component:\n``import * as jQuery from 'jquery';\nimport * as _ from 'lodash';\n import * as Backbone from '@types/backbone';\n//I use one of them to import jointjs, both work well I think\n//import * as joint from 'jointjs';\nconst joint = require('../../node_modules/jointjs/dist/joint.js');\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\ngraph: any;\n  paper: any;\nngOnInit(){\n    this.createGraph();\n  }\nprivate createGraph() {\n    this.graph = new joint.dia.Graph();\n    this.paper = new joint.dia.Paper({ el: jQuery('#paper'), width: 500, height: 500, model: this.graph });\nlet rect = new joint.shapes.basic.Rect({\n  position: { x: 100, y: 100 },\n  size: { width: 90, height: 30 },\n  attrs: { text: { text: 'Rect1' } }\n});\n\nlet rect2 = new joint.shapes.basic.Rect({\n  position: { x: 250, y: 300 },\n  size: { width: 90, height: 30 },\n  attrs: { text: { text: 'Rect2'  } }\n});\n\nlet link = new joint.dia.Link({\n  source: { id: rect.id },\n  target: { id: rect2.id }\n\n});\n\nlet m1 = new joint.shapes.devs.Model({\n      position: { x: 50, y: 50 },\n      size: { width: 90, height: 90 },\n      inPorts: ['in1','in2'],\n      outPorts: ['out'],\n      ports: {\n        groups: {\n          'in': {\n            attrs: {\n              '.port-body': {\n                fill: '#16A085'\n              }\n            }\n          },\n          'out': {\n            attrs: {\n              '.port-body': {\n                fill: '#E74C3C'\n              }\n            }\n          }\n        }\n      },\n      attrs: {\n        '.label': { text: 'Model', 'ref-x': .5, 'ref-y': .2 },\n        rect: { fill: '#2ECC71' }\n      }\n    });\nthis.graph.addCells([rect, rect2,m1,link]);\n\n}\n}`\n```\nThis is my package.json\n``{\n  \"name\": \"jointangular\",\n  \"version\": \"0.0.0\",\n  \"license\": \"MIT\",\n  \"angular-cli\": {},\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"test\": \"ng test\",\n    \"lint\": \"ng lint\",\n    \"e2e\": \"ng e2e\"\n  },\n  \"private\": true,\n  \"dependencies\": {\n    \"@angular/common\": \"^2.4.0\",\n    \"@angular/compiler\": \"^2.4.0\",\n    \"@angular/core\": \"^2.4.0\",\n    \"@angular/forms\": \"^2.4.0\",\n    \"@angular/http\": \"^2.4.0\",\n    \"@angular/platform-browser\": \"^2.4.0\",\n    \"@angular/platform-browser-dynamic\": \"^2.4.0\",\n    \"@angular/router\": \"^3.4.0\",\n    \"@types/jquery\": \"^2.0.40\",\n\"core-js\": \"^2.4.1\",\n\"jointjs\": \"^1.0.3\",\n\"jquery\": \"^3.1.1\",\n\"rxjs\": \"^5.1.0\",\n\"zone.js\": \"^0.7.6\"\n\n},\n  \"devDependencies\": {\n    \"@angular/cli\": \"1.0.0-beta.32.3\",\n    \"@angular/compiler-cli\": \"^2.4.0\",\n    \"@types/backbone\": \"^1.3.33\",\n    \"@types/jasmine\": \"2.5.38\",\n    \"@types/jointjs\": \"^1.0.3\",\n    \"@types/lodash\": \"^3.10.1\",\n    \"@types/node\": \"~6.0.60\",\n    \"backbone\": \"^1.3.3\",\n    \"codelyzer\": \"~2.0.0-beta.4\",\n    \"install\": \"^0.8.9\",\n    \"jasmine-core\": \"~2.5.2\",\n    \"jasmine-spec-reporter\": \"~3.2.0\",\n    \"karma\": \"~1.4.1\",\n    \"karma-chrome-launcher\": \"~2.0.0\",\n    \"karma-cli\": \"~1.0.1\",\n    \"karma-coverage-istanbul-reporter\": \"^0.2.0\",\n    \"karma-jasmine\": \"~1.1.0\",\n    \"karma-jasmine-html-reporter\": \"^0.2.2\",\n    \"lodash\": \"^3.10.1\",\n    \"npm\": \"^4.5.0\",\n    \"protractor\": \"~5.1.0\",\n    \"ts-node\": \"~2.0.0\",\n    \"tslint\": \"~4.4.2\",\n    \"typescript\": \"~2.0.0\"\n  }\n}\n``\nThe project runs but I have this error in the console web : TypeError: Backbone is undefined. Thank you, now it works, I unistalled the backbone types. I solved the previous problem, now the project starts but in the web console I have this error:\nTypeError: Backbone is undefined\n    <anonymous> \n    <anonymous> \n    __webpack_require__ \n    __webpack_require__ \n    webpackJsonpCallback \n    <anonymous>\nDo you have ideas?. Nobody can help me?. ",
    "SaltyDH": "Referring to the problem above:-\n\nEXCEPTION: Error in :0:0 caused by: this.addCell is not a function vendor.bundle.js:81229:9 ORIGINAL EXCEPTION: this.addCell is not a function vendor.bundle.js:81231:13 ORIGINAL STACKTRACE: vendor.bundle.js:81234:13 \n\nI created a brand new Angular2 app using the v1.0.0-rc0 cli. Copied the app.component.ts source code from https://github.com/CoconutTheSlayer/jointangular2 and the above behaviour was immediately present. Digging deeper I found that the lodash dependency that was automatically installed was v4.17.4.\nTo clarify, JointJS specifically asks for v3.10.1 in the dependency list. For lodash v4, 'this' in the call to _.each in the stack trace above refers to the global window object rather than the parent scope.\nGoogling issues with 'npm wrong version' seems to show a history of issues where npm ignores devDependencies when making version hoisting decisions and a variety of inconsistencies.\nIf in setting up your new project you've accidentally stored your JointJS dependency into dev dependencies (as I did) you may hit a similar issue.\nI ran an npm cache clean and deleted my node_modules folder and noted that on a second npm install the correct v3 version of lodash was installed. Everything started working from there.\nOther tidbits that might help\nnpm version: 4.1.2\ndependencies added to package.json\n\"jointjs\": \"git+https://github.com/clientIO/joint.git\",\n    \"jquery\": \"3.1.1\",\nHope this saves someone an hour :). ",
    "Waanders": "I tried all combinations of the above suggestions, but somehow cannot get it to work :(. @CoconutTheSlayer , the same goes for a fresh clone of your project, I keep getting the following error:\nArgument of type '{ el: JQuery; width: number; height: number; model: any; }' is not assignable to parameter of type 'Options'.\n  Object literal may only specify known properties, and 'el' does not exist in type 'Options'.)\nAny thoughts? \n\nNever mind, it works now!. Thanks for sharing your project @CoconutTheSlayer !\n. ",
    "Dragomir-Ivanov": "@Waanders How did you managed to resolve the issue:\nArgument of type '{ el: JQuery; width: number; height: number; model: any; }' is not assignable to \n    parameter of type 'Options'.\n      Object` literal may only specify known properties, and 'el' does not exist in type 'Options'.). ",
    "nishantshahakar": "My bad , using jquery version 2.1.1 instead of 2.2.4. ",
    "webmutation": "That looks like a JSDom issue (JSDOM does not support certain SVG APIs, so be aware of that). You should open an issue on their tracker and reference this one.\n. ",
    "mmacfadden": "Ok, I think this roughly works. Everything that was in the definitely typed version is included here plus a lot more that was missing.  There is still a bunch of the API that is not typed, and I suspect that we will need to go through the API for consistency.  But I think this is a good start.. @kumilingus This would work, but one other small change would be required as well.  The package.json would need the following entry.\n\"types\": \"./dist/joint.d.ts\"\n. @kumilingus Oh wait.  I think we already added that.  I forgot that the package.json sits in the root of the project, not in the dist folder.. Actually, I am still experimenting with this.  It might be worth a conversation before merging this.. Thanks, I will update the typescript definitions.. Hello. I just saw this comment. Did you figure it out or do you still need some help?. There seem to be a lot of missing things in the Typescript definitions. I contributed the original attempt at them (which had several issues). There seems to have been a lot of refactoring that removed some functionality.. I also noticed that the paper class's type definition actually looks like this:\nclass Paper extends Backbone.View<Graph>\nBut this is not actually true, since the actual code is like this:\njoint.dia.Paper = joint.mvc.View.extend({\nSo there is inconsistency between the type defs and the code.  We had been extending joint.mvc.View in our code so that we could render items onto the paper with support for theming. Simply extending Backbone.View would cause problems.\n. @vtalas I see what you are trying to do now. I will have to think about it a little bit. The reason why interfaces become problematic is because in typescript you cannot do \"instanceof\" on an interface. So if we define them that way the following code would not compile:\nTypeScript\nif (foo instanceof joint.dia.Paper) {\n}. @vtalas I think you want to use class augmentation via interfaces.  So for example this is perfectly valid:\n```TypeScript\nexport class Paper {\n  public bar(): void {\n  }\n}\nexport interface Paper {\n  baz(): void;\n}\nconst paper: Paper = new Paper();\npaper.bar();\npaper.baz();\n```\nPaper is defined as a class but I then augment the paper definition with an interface, and the declarations are merged, but the end result is a class. This could happen in different files, so perhaps in joint, you define the class, and in rappid you augment with an interface?\nhttps://www.typescriptlang.org/docs/handbook/declaration-merging.html. @kumilingus I agree. I think if we start by just replacing Object with [key: string]: any, then things will \"work\" for now. Then we can circle back to create more specific options when we have time.. @vtalas you are correct from a compiler error stand point. Just about anything you could call an object can be passed in to a {[key: string]: any} argument. This is because ALL javascript objects are essential string-to-any maps. \nHowever, the intent of the function is much clearer to the developer using the index signature approach. If I say object to the user it is not clear how I am intending on using that object. If you pass in new Date() to options, perhaps somehow the date itself is used as the option. When you specify the index signature approach you are more clearly telling the user you are expecting something like {foo: bar}. They can still pass any other kind of non-primitive value in, but I have told them I am going to treat that thing like a JSON object and just look at the key value pairs, rather than care about the type of the object or use any \"prototype\" functions.\nThat said, if the TS Defs had used object, I probably would not have bothered changing them since they are similar as you say. But they were using \"Object\" which wasn't working :-)\nI suppose we can close this issue now?. I see. Couldn't you use something like:\nJavaScript\ndocument.body.contains(this.$el);\ninside the paper to determine if the element is in the current DOM?. True.. It turns out that this happens if the fittingBox option is not provided AND the paper's options does not contain a heigh and width value. The width of the box to find winds up being non-sensical in the code. Scaling does occur but the sx/sy values wind up 0 some how. I might recommend adding some error checking somewhere for this.. I took a look at the code and somehow the height and width were set to undefined.  Interestingly if you do this: \nJavaScript\nconst paper = new joint.dia.Paper({});\nthe paper will have the default height and widths.  If you do this:\nJavaScript\nconst paper = new joint.dia.Paper({height: null, width: null});\nI think you get an error.  However, if you do this:\nJavaScript\nconst paper = new joint.dia.Paper({height: undefined, width: undefined});\nJavaScript\nlet height; // somehow these variable wind up undefined.\nlet width;\nconst paper = new joint.dia.Paper({height: height, width: width});\nThere is no error and the paper winds up having no height or width, however CSS can actually still cause the paper to be a certain dimension, so things still render fine, but you have an odd situation.  If you omit a key, Backbone uses the default.  However it seems like when the key is in the attributes passed in, but is undefined, it still replaces the default value, but with undefined.\n. @kumilingus , thanks!  In fact, in our element I over road the \"markup\" property to basically do just that and it resolved our issue. So I can verify that, that would work, but there is work around for now!\nTypeScript\nexport const TextBlockMarkup: string = [\n  `<g class=\"rotatable\">`,\n  `<g class=\"scalable\"><rect/></g>`,\n  (joint as any).env.test(`svgforeignobject`) ?\n    `<foreignObject class=\"fobj\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"content\"/></div></foreignObject>` :\n    `<text class=\"content\"/>`,\n  `</g>`\n].join(``);. Yes, you definitely need to install the backbone types. We should probably put this in the dev dependencies of the npm package or something.. At a minimum, I believe this line needs to be:\nTypeScript\ninterface View<T extends Backbone.Model> extends Backbone.View<T>, Backbone.Events {\nWe still need mvc.View to be generic, because the Paper class needs to extend Backbone.View with the Graph object for its model, not a generic Backbone.Model.\nThe other concern is that this is not an interface, it is a class.  Why are we defining it as an interface?\nTypeScript\nclass View<T extends Backbone.Model> extends Backbone.View<T>, Backbone.Events {. Paper is not an interface, it is a class.  Also if we make mvc.View generic (see below) this should be:\nTypeScript\nclass Paper extends mvc.View<Graph> {. If we revert this back to a class, then we don't need this, and should put the constructor back.. ",
    "madasaca29": "Hello, I found the error in the application, it is not an issue, sorry, it's right the SVG markup was not defined as a string, the .join ('') was missing  in the labelMarkup.\nThank you very much for your help!. ",
    "alp82": "That looks like something that should be asked on Stackoverflow. Correct me if i'm wrong.. Yes i am sure that issue was new when upgrading from 1.0.3 to 1.1.0. Maybe something else caused this? Where was that x used in 1.0.3?. I will, but cannot do until Monday.. Woah, i am sorry for not responding. I completely lost track of this issue.\nOur base node class is very large, with many custom methods. I'll only put the (hopefully) relevant bits in here that are related to rendering the node.\nThe model:\n```\njoint.shapes.cam.Control = joint.shapes.devs.Model.extend({\n    defaults: joint.util.deepSupplement({\n        type: \"cam.Control\",\n        markup: [\n            '' +\n            '' +\n            '' +\n            '' +\n            '' +\n            '' +\n            '' +\n            '' +\n            '' +\n            '' +\n            ''\n        ].join(),\n        wrapper: null,\n        controlType: null, / name of the control type, i.e. foreach, get, parser /\n        configItemExports: [], / /\n        config: {}, / currently set config on the control /\n        portConfigs: {},\n        label: null, / label of the control /\n        icon: \"resource/pem/material/ic_settings_white.svg\", / icon next to the label /\n        primaryColor: \"#586F7C\", / main color, used as background /\n        secondaryColor: \"#ffffff\", / support color, use as text color /\n        orderIndex: 600,\n        editor: null, / classname of editor which will be instantiated on demand and allows editing the value of the control /\n        description: \"A visual editor control. Right click for options.\",\n        size: {width: 150, height: 32},\n        inPortProperties: null,\n        outPortProperties: null,\n        hasCustomScript: false,\n        outPortContexts: {},\n        portPropertyDescriptors: null,\n        attrs: {\n            '.': {\n                cursor: 'pointer'\n            },\n            '.body': {\n                fill: 'white',\n                stroke: 'grey'\n            },\n            '.header-body': {\n                ref: '.body',\n                'ref-width': 1,\n                'ref-height': 1\n            },\n            '.icon': {\n                x: 6,\n                y: 4,\n                width: 24,\n                height: 24\n            },\n            '.label': {\n                x: 40,\n                'ref-x': null,\n                'ref-y': null,\n                y: 20,\n                'y-alignment': null,\n                'font-size': 12,\n                'text-anchor': null\n            },\n            '.drop-target': {\n                'port-group': 'drop-target',\n                display: 'none',\n                'ref': '.body',\n                'ref-x': 0.5,\n                'ref-width': -2,\n                'x-alignment': 'middle',\n                height: 30,\n                y: 30,\n                fill: 'orange',\n                cursor: 'pointer'\n            },\n            '.edit-button': {\n                text: '[ edit ]',\n                display: 'none',\n                'ref': '.body',\n                'ref-x': 0.5,\n                y: 45,\n                'x-alignment': 'middle',\n                height: 20,\n                'font-size': 10,\n                fill: '#444444',\n                cursor: 'pointer'\n            }\n        },\n        ports: {\n            groups: {\n                'in': {\n                    attrs: {\n                        '.port-body': {\n                            magnet: 'passive',\n                            fill: 'white',\n                            stroke: 'grey',\n                            r: 5\n                        },\n                        '.primary-key.port-body': {\n                            fill: 'lightgoldenrodyellow',\n                            r: 0\n                        },\n                        '.port-label': {\n                            opacity: 0,\n                            'font-size': 10\n                        }\n                    }\n                },\n                'out': {\n                    attrs: {\n                        '.port-body': {\n                            fill: 'white',\n                            stroke: 'grey',\n                            r: 5\n                        },\n                        '.port-label': {\n                            opacity: 0,\n                            'font-size': 10\n                        }\n                    }\n                }\n            }\n        }\n    }, joint.shapes.devs.Model.prototype.defaults),\n[...]\n\n});\n```\nand the corresponding ElementView:\n```\njoint.shapes.cam.ControlView = joint.dia.ElementView.extend({\nevents: {\n    \"mouseover\": \"onpointerover\",\n    \"mouseout\": \"onpointerout\"\n},\n\ninitialize: function () {\n    this.__highlighted = {};\n    joint.dia.ElementView.prototype.initialize.apply(this, arguments);\n\n    this.listenTo(this.model, 'change:config', this._recalculateSize, this);\n    this._recalculateSize();\n\n    this.listenTo(this.model, \"change:validation\", this._onValidationChanged, this);\n    this._onValidationChanged();\n},\n\nonpointerover: function (e) {\n    this.highlight();\n    var validation = this.model.get('validation') || {};\n    if (this.model.get('isMenuMode') || this.model.get('enableTooltip') || validation.severity) {\n        this.showTooltip(e);\n    }\n},\n\nonpointerout: function () {\n    this.unhighlight();\n    this.hideTooltip();\n},\n\n\n_onLabelChanged: function () {\n    var label = this.model.getLabel();\n    this.model.attr({\n        '.label': {\n            text: label\n        }\n    });\n},\n\n_onIconChanged: function () {\n    var icon = this.model.getIcon();\n    this.model.attr({\n        '.icon': {\n            'xlink:href': icon\n        }\n    });\n},\n\n_onPrimaryColorChanged: function () {\n    var primaryColor = this.model.getPrimaryColor();\n    this.model.attr({\n        '.header-body': {\n            fill: primaryColor\n        }\n    });\n},\n\n_onSecondaryColorChanged: function () {\n    var secondaryColor = this.model.getSecondaryColor();\n    this.model.attr({\n        '.label': {\n            fill: secondaryColor\n        }\n    });\n},\n\n_onDescriptionChanged: function () {\n    if (this._tt) {\n        this._tt.innerHTML = this.model.get('description') || '';\n    }\n},\n\n_recalculateSize: function () {\n    var newSize = this._calcSize();\n    this.model.set(\"size\", newSize);\n},\n\n_onValidationChanged: function () {\n\n//        var validation = this.model.get('validation') || {};\n        this._onPrimaryColorChanged();\n    },\n_calcSize: function () {\n    var serverModel = this.model.get(\"serverModel\");\n    var inportcount = (this.model.get(\"inPorts\") || []).length;\n    var outportcount = (this.model.get(\"outPorts\") || []).length;\n    var offsetTop = this._getOffsetTop();\n    var offsetBottom = this._getOffsetBottom();\n\n    var maxPortCount = Math.max(1, inportcount, outportcount);\n    var height = offsetTop + maxPortCount * 20 + offsetBottom;\n\n    var width;\n    if (this.model.get('isMenuMode')) {\n        width = Math.max(110, (this.model.get(\"size\") || {}).width);\n    } else {\n        var label = this.model.get(\"label\") || \"\";\n        width = Math.max(110, label.length * 7 + 55);\n    }\n\n    var size = {\n        width: width,\n        height: height\n    };\n    return size;\n},\n\n_getOffsetTop: function () {\n    return 5;\n},\n\n_getOffsetBottom: function () {\n    return 5;\n},\n\nshowTooltip: function (e) {\n    var description = this.model.get('description');\n    var validation = this.model.get('validation') || {};\n    if (description || validation.severity) {\n        if (!this._tt) {\n            /* body mouse listener for placing the dragged element */\n            var bodyListener = function (e) {\n                this.__ttPosX = e.clientX;\n                this.__ttPosY = e.clientY;\n            }.bind(this);\n            document.body.addEventListener(\"mousemove\", bodyListener);\n\n            var container = this._tt = document.createElement(\"div\");\n            container.setAttribute('style', 'position:absolute; top: ' + (e.clientY + 15) + 'px; left: ' + (e.clientX + 15) + 'px; ' +\n                'max-width: 200px; background: #fafafa; color: black; z-index: 9999999; font-family: Tahoma, Verdana, sans-serif; ' +\n                'padding: 5px; font-size: 12px; border: 1px solid #ddd; display: none;');\n            document.body.appendChild(container);\n        }\n        this._tt.innerHTML = validation.severity ? validation.severity + ': ' + (validation.content || validation.label) : description;\n        this.__ttDelayId = setTimeout(function () {\n            this._tt.style.display = 'block';\n            window.requestAnimationFrame(this.__animateTooltip.bind(this));\n        }.bind(this), 200);\n    }\n},\n\nhideTooltip: function () {\n    clearTimeout(this.__ttDelayId);\n    if (this._tt) {\n        this._tt.style.display = 'none';\n    }\n},\n\n__animateTooltip: function () {\n    if (this.__ttPosX == null) {\n        return;\n    }\n    this._tt.style.top = (this.__ttPosY + 15) + \"px\";\n    this._tt.style.left = (this.__ttPosX + 15) + \"px\";\n    if (this._tt.style.display !== 'none') {\n        window.requestAnimationFrame(this.__animateTooltip.bind(this));\n    }\n},\n\nhighlight: function () {\n    var selector = typeof arguments[0] === \"string\" ? arguments[0] : '.body';\n    var elem = typeof arguments[0] === \"object\" ? arguments[0] : this.el.querySelector(selector);\n    if (elem) {\n        if (this.__highlighted[elem.id]) {\n            return;\n        }\n        this.__highlighted[elem.id] = {\n            stroke: elem.getAttribute(\"stroke\") || \"black\",\n            strokeWidth: elem.getAttribute(\"stroke-width\") || 1\n        };\n        elem.setAttribute(\"stroke\", \"orange\");\n        elem.setAttribute(\"stroke-width\", 3);\n    }\n},\n\nunhighlight: function () {\n    var selector = typeof arguments[0] === \"string\" ? arguments[0] : '.body';\n    var elem = typeof arguments[0] === \"object\" ? arguments[0] : this.el.querySelector(selector);\n    if (elem) {\n        var originalData = this.__highlighted[elem.id];\n        if (!originalData) {\n            /* not yet highlighted */\n            return;\n        }\n        elem.setAttribute(\"stroke\", originalData.stroke);\n        elem.setAttribute(\"stroke-width\", originalData.strokeWidth);\n        this.__highlighted[elem.id] = null;\n    }\n},\n\nrender: function () {\n    var serverModel = this.model.get(\"serverModel\");\n    if (this.model.get('isMenuMode')) {\n        var title = this.el.querySelector(\"title\");\n        if (title) {\n            title.textContent = \"Doubleclick to add.\";\n        }\n        this.model.set(\"inPorts\", []);\n        this.model.set(\"outPorts\", []);\n    }\n\n    joint.dia.ElementView.prototype.render.apply(this, arguments);\n}\n\n});\n```. Any news here? Would love to revert my code changes to the joint.js sources.. ",
    "mahald": "yea just started to use it with angular 4.1 and the typedefinitions seems to be hardly lack of several functions and features.. u need to add backbone.js to your angluar-cli.json in the scripts section (if ur are using angular-cli).\nu can either install it using npm or dowload it from here https://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.3.3/backbone.js.\nif u are not using the cli u just need to import this script in your html\nnote: u also need the other dependencies as seen here:\nhttps://www.jointjs.com/opensource#Download-JointJS\n. to keep it simple im going to fork and pull request it. ok it's wrong anyways, it would have to be: \"ElementView | LinkView\".\nimho if using typescript it should return precise types and not kinda base class. \nfor sure u can cast it but then u as good could use any as type.\ncurrently i have to do it as follows:\nlet x = paper.findViewByModel(links[i]) as joint.dia.LinkView;\n        x.update(null, null);\ni would prefer:\npaper.findViewByModel<joint.dia.LinkView>(links[i]).update(null, null);\ninstead\nthe big advantage in the second case is, the editor is going to tell me what types are possible (intelli Sense). In the first case i got to consult the manual or guess it.\njust my 2 cents. Ok updated. . ok im puzzled now.\nnone of them get restored:\nm1.portProp('test123', 'attrs/.port-body/fill', '#00FF00');\n    m1.addPort({ id: 'test', group:'out'});\nmy (totaly) stripped down test-code looks as follows:\n```\n <!DOCTYPE html>\n\n\njoint test\n\n\n\n\n\n\n    .available-magnet { fill: yellow;  }\n    .available-cell rect { stroke-dasharray: 5, 2; }\n  \n\n\n\n",
    "picninim": "my var x was actually:\nvar x = **Some calcs** -  cell.attributes.size.width/2;\nfor some reason, accessing the cell.attributes was causing the bug. I pretty sure I was just accessing the width property and not modifying it. But changing that solved the issue.. ",
    "chihuahua": "Fyi, it seems like JointJS JS logic is generating bad SVG transforms in Chrome > 57.\nI made a JS fiddle out of the above demo's SVG: https://jsfiddle.net/fcufnyj8/3/\nNotice that the fiddle's output looks the same in both Chrome 56 and 57. This points to some JointJS JS logic that differs between 56 and 57 as the culprit. The SVG itself is rendering as expected.. Thank you! That workaround seems to nicely suffice for now.. ",
    "ram4nd": "ETA on the release?. ",
    "arifhussain353": "I did change these lines of code in joints.js but still not working.Is there any other file need to be change ?. Right now i am using joint.js version 1.0.3 and my old code lines \n```javascript\n   V.prototype.transform = function (matrix, opt) {\n        if (V.isUndefined(matrix)) {\n            return (this.node.parentNode)\n                ? this.getTransformToElement(this.node.parentNode)\n                : this.node.getScreenCTM();\n        }\n\n        var transformList = this.node.transform.baseVal;\n        if (opt && opt.absolute) {\n            transformList.clear();\n        }\n\n        var svgTransform = V.createSVGTransform(matrix);\n        transformList.appendItem(svgTransform);\n        return this;\n    };\n\n``\nReplaced above lines of code with below lines of code  and also addedmatrixToTransformString`  with jointjs transform function.Not working for me chrome 57.\n```javascript\nV.matrixToTransformString = function(matrix) {\n        matrix || (matrix = true);\n        return 'matrix(' + [\n            matrix.a || 1,\n            matrix.b || 0,\n            matrix.c || 0,\n            matrix.d || 1,\n            matrix.e || 0,\n            matrix.f || 0\n        ] + ')';\n    };\nV.prototype.transform = function(matrix, opt) {\n    var node = this.node;\n    if (V.isUndefined(matrix)) {\n        return (node.parentNode)\n            ? this.getTransformToElement(node.parentNode)\n            : node.getScreenCTM();\n    }\n\n    if (opt && opt.absolute) {\n        return this.attr('transform', V.matrixToTransformString(matrix));\n    }\n\n    var svgTransform = V.createSVGTransform(matrix);\n    node.transform.baseVal.appendItem(svgTransform);\n    return this;\n\n};\n```\n. ",
    "danbilauca": "For me it worked like a charm. I've added the matrixToTransformString to V and the if default jointjs transform function.. ",
    "FBeuselinck": "Yes, i think that's a mistake. I can't recall that I changed the package.json in the root folder. I did however add a package.json file to the \"types\" folder.. Oh, i didn't notice this. I was using the version from the NPM repository. As i understand this is not the same as the version on Github (I'm quite new to all of this).\nIf i use the Github version and manually build the dist folder, the issue is indeed fixed. So all should be good with the next release.\nThank you for the quick response and keep up the good work!. ",
    "nico-onmap": "Actually all 3 labels are present, but get overwritten by the previous one.\nI was using this to add my labels:\n        cell.label(i, {\n            position: .5,\n            attrs: {\n                rect: { fill: 'white', class: 'link-title' },\n                text: { fill: 'black', text: label || '', y: y }\n            }\n        });\n\nIncrementing y for each label so that a label do not overwrite the previous oen. It seems this doesn't work anymore: y property is set on the text element but it seems the label tag gets a transform property which basically inverts the value of y I have set so every label appear at the same y position.. Thanks, that fixes the problem.. Yes, I had markAvailable enabled.\nThe question is: has the behavior of this option changed? In the previous jointjs version this didn't call highlight on each element.. I'm updating from rappid 1.7.0.. > Note, that in the embedding paper mode ({ embeddingMode: true }) the elements along with their descendants are brought to front automatically when the user drags them.\nI think that if this option is set, elements should be brought to front automatically when dragging them, but also on the initial rendering of the graph.\nI already tried to call toFront on each direct children of my graph but it was slowing down the initial rendering too much. I'll see if updating the z property instead is enough.. Thank you for the quick answer. The workaround doesn't seem to work though.\nTyping this in the bpmn demo doesn't update the view:\njs\ngraph.getCell('b2797827-0135-4c4d-8958-4b8bcd7144e9').prop('div/html', null);\ngraph.getCell('b2797827-0135-4c4d-8958-4b8bcd7144e9').prop('content', 'new content');. I tried with Firefox 57b and latest official release, as well as with version 50.\nHere are two screenshots of Chrome & Firefox showing the BPMN demo after calling paperScroller.zoomToFit():\n\n\nAs you can see the zoomLevel isn't the same and the graph appears smaller in Firefox, although both browser windows have the same size. Depending on the model this can make a huge difference, and while the graph appears readable on Chrome, it's so small that it's not readable on Firefox.. @kumilingus any update on this?. ",
    "luis-carlos-campos": "I've got the same problem here. +1\nI'm not sure if this is the expected behavior but when V.prototype.text returns the <text/> object, it does not contain the x attribute. It is set after the <tspan/> was already created with a static x value, so it does not get updated at the time <*text/> is.\nIn v1.0.3 both <text/> and <tspan/> used to have the same x value.\nIf you use the workaround proposed by @alp82, we will never get a x coordinate for the <*tspan/> object. It will work since it will use its parent x, unless you use breakText because it will need a x value to calculate the coordinates.. @kumilingus Have you had a chance to take a look at it?. I don't think its the proper solution, but if you have a multiple lines text and you need to make it work, you can do something like that:\n    var x = this.attr('x');\n\n    if (lines.length > 1) {\n        x = x || 0;\n    }\n\nCheers,. @kumilingus Sorry about the PR, I was travelling. Thank you so much for the fix.\nRegards,. I fixed it already. I was wondering if I should change that method for another or just avoid using.\nI appreciate your time.\nRegards,. Thank you Roman. ",
    "AChakraborty1982": "I am able to resolve this, most like joint.css was not loading.. please see the jointSample.html page in jointSample.zip, I have included them both.  . \nThe screenshot you sent is commented out. \n. ",
    "tanakaworld": "The error was the cause using v9.x interface. I solved it by using v1.1 interface.\nI used JointJS v0.9.7 :(\n\"source\" is the instance from joint.dia.Graph.prototype.getCell \nI have used port selector in order to make the instance of joint.dia.Link.\n```javascript\nconst source = graph.getCell('source-id');\nconst target = graph.getCell('target-id');\n\u2022\u2022\u2022\nnew joint.dia.Link({\n        source: { id: source.id, selector:  source.getPortSelector('source-port-id')},\n        target: { id: 'target.id, selector: target.getPortSelector('target-port-id')'}\n});\n```\nI updated to following code.\n```javascript\nconst source = graph.getCell('source-id');\nconst target = graph.getCell('target-id');\n\u2022\u2022\u2022\nnew joint.dia.Link({\n        source: { id: source.id, port:  'source-port-id'},\n        target: { id: target.id, port: 'target-port-id'}\n});\n```\nThank you.\n. ",
    "ChrisMoran": "@chill117 No problem! \nI've not added tests before for type definitions like this, but I would think having typescript code that calls the type definitions would be a good start. If there's something missing or incorrect, then the typescript compiler will complain about it and not compile or, at the very least, emit warnings.. Don't you need some of these methods defined if you wanted to extend this class in typescript?. To clarify what I mean, say you wanted to create a custom Element and ElementView like:\n```\nclass CustomElement extends ElementView {\n  markup = ''\n  ...\n}\nclass CustomElementView extends ElementView {\n  mouseover: (evt: Event) => {\n    if (evt.target.classList.contains('special')) {\n      this.notify('cell:mouseoverspecial', evt);\n    } else {\n      super.mouseover(evt);\n    }\n  }\n}\n```\nNow the Typescript compiler wouldn't see the mouseover method on ElementView, and the above wouldn't compile.. Protected makes much more sense, thanks for updating! This change \ud83d\udc4d . ",
    "tiaguinho": "Ok, there is something wrong in generated file.\nI check the files under types/ and the params are typed, but in the generated file aren't.\nI think just compile the files again will fix the bug.\nThanks for your attention.. ",
    "jnbarchan": "I have done some further playing, trying to find a workaround but not succeeding.  Something has been changed at v1.1.0, such that the enclosing container DIV is being resized (by altering its style=\"width: ...; height: ...;\") as the JointJS Paper changes size, even at runtime.  Making it impossible for the container to have scrollbar(s), which was all working fine at v1.0.3?. I'm impatient, so I had a look at differences between v1.0.3 & v1.1.0.  Would I be right in saying that the cause of this change of behaviour is that in Paper.setDimensions():\nIn v1.0.3:\nline 9595: V(this.svg).attr({ width: width, height: height });\n\nIn v1.1.0:\nline 10304:         this.$el.css({\n        width: Math.round(width),\n        height: Math.round(height)\n    });\n\nSo you used to set dimensions on the <svg> element but now you set them on the container element (my <div>)?  But you haven't told us of that change?  And because it sets the container's width/height to exactly the Paper's width/height there can no longer be any room for any container \"furniture\"?. Your post beat me to it!!\nI just came here to say I have amended my HTML (only, no change to my code) to:\n<div id=\"divPaperWrapper\" style=\"width: 640px; height: 590px; overflow-x: hidden; overflow-y: scroll;\">\n  <div id=\"divPaper\" style=\"width: 100%; height: 100%;\">\n  </div>\n</div>\n\nSo you are changing divPaper's width/height, and I have moved the size & scrolling out to divPaperWrapper.  Seems to work OK.  You would want me to change over to this, right?\nYou might want to document somewhere that you are now taking control of the outside world's container's width/height, because this was a change in behaviour.  May I ask why you did it, what you wanted to achieve?  (Was it to do with introducing background colouring?). My workaround:\nI need this addressed now because it is unusable as it is at present.  I do not want to alter JointJS code, though I have looked through its code to see what I can do given its present behaviour.\nThe best I have come up with is to dynamically alter the return value of Paper.options.interactive() when user clicks on a LinkView depending on which button is being clicked:\n\nDefine a Paper.options.interactive(cellView) function, to control interaction setting, delegating to a LinkView.interactive() handler when user clicks on a LinkView.  If that returns false, interaction is prohibited, i.e. a vertex will not be created on the LinkView.\nHandle the (new, undocumented? but useful) link:pointerdown event, which is passed the JavaScript event object, to store what button is being clicked.  I am storing this as a property on the LinkView object itself, so that...\n...Define a LinkView.interactive() handler which examines that property and returns false if it was not a left-click.\n\nIf anyone wishes to suggest a better/less ugly workaround I would welcome it!\nThis complexity is why I believe JointJS should handle right-click-context-menu-instead-of-add-vertex itself, where it would be so much easier.\nOutline of Code:\n```\njoint.dia.LinkView.extend({\n  interactive: function ()\n  {\n    // return whether allowed to \"interact\" (perform a certain action) on progression\n    // Paper.options.interactive() is set to call this when cell is a LinkView\n    // see onLinkPointerDown() for explanation\n// if onLinkPointerDown() has been called and set that the pointerdown button was middle/right\n// forbid the action\nif (this.linkPointerDownButton === 1 || this.linkPointerDownButton === 2)\n  return false;\n\nreturn true;\n\n},\n// Event Handlers\n  onLinkPointerDown: function (evt, x, y)\n  {\n    // Event: pointer down on progression\n// Yuck:\n// JointJS performs actions on links (vertexAdd, vertexMove, vertexRemove, arrowheadMove)\n// on pointerdown regardless of which button is pressed\n// This means that when user right-clicks for context menu\n// he almost always gets a vertex created at point, prior to getting so far as to call onCellContextMenu() :(\n// To prevent that, we set \"link:pointerdown\" (which is an early event on a link) to call this function\n// Here we have to note what button was pressed on the LinkView\n// Then, when LinkView.interactive() is called later on in the processing (via Paper.options.interactive())\n// it can look at this and decide whether to allow/block the link view action\n\nthis.linkPointerDownButton = evt.button;\n\n},\nonCellContextMenu: function (evt, x, y)\n  {\n    // ....\n  }\n});\njoint.dia.Paper.extend({\n  interactive: function (cellView)\n  {\n    // return whether cellView is allowed to \"interact\" (perform a certain action)\n// for a LinkView call its interactive() function to decide\n// see LinkView .interactive() & LinkView .onLinkPointerDown()\nif (cellView instanceof joint.dia.LinkView &&\n    typeof(cellView.interactive) === 'function')\n  return cellView.interactive();\n\n// else always allow interaction\nreturn true;\n\n}\n});\npaper.options.interactive = paper.interactive;\nlinkView.on('link:pointerdown', linkView .onLinkPointerDown);\nlinkView.on('cell:contextmenu', linkView .onCellContextMenu);\n```. ",
    "CaselIT": "I've added a pr to fix this issue so the DT types can be deprecated . @vtalas I've removed the changes to dist. I think @andy-ms meant to the npm repository. ",
    "andy-ms": "These changes still need to be published.. ",
    "denisemauldin": "Ok.  If I do npm install -D @types/jointjs then it stops throwing the 'model' does not exist in type 'PaperOptions' error, but it throws a bunch of other errors:\nnode_modules/jointjs/dist/joint.d.ts(49,21): error TS7006: Parameter 'c' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(49,24): error TS7006: Parameter 'a' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(49,27): error TS7006: Parameter 'b' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(101,23): error TS7006: Parameter 'distance' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(101,33): error TS7006: Parameter 'angle' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(101,40): error TS7006: Parameter 'origin' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(112,9): error TS7010: 'changeInAngle', which lacks return-type annotation, implicitly has an 'any' return type.\nnode_modules/jointjs/dist/joint.d.ts(112,23): error TS7006: Parameter 'dx' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(112,27): error TS7006: Parameter 'dy' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(112,31): error TS7006: Parameter 'ref' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(125,14): error TS7006: Parameter 'ref' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(125,19): error TS7006: Parameter 'distance' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(155,21): error TS7006: Parameter 'x' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(155,24): error TS7006: Parameter 'y' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(155,27): error TS7006: Parameter 'w' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(155,30): error TS7006: Parameter 'h' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(240,19): error TS7006: Parameter 'x' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(240,21): error TS7006: Parameter 'y' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(240,23): error TS7006: Parameter 'w' implicitly has an 'any' type.\nnode_modules/jointjs/dist/joint.d.ts(240,25): error TS7006: Parameter 'h' implicitly has an 'any' type.. If I delete the node_modules/jointjs/dist/joint.d.ts file then it builds with no errors.. Well, backbone 1.3.3 doesn't seem to include a Backbone.ViewOptions.  There is a viewOptions inside of Backbone.View.  Maybe ViewOptions is something in a newer version of Backbone?  Maybe ViewOptions is a plugin (https://github.com/rotundasoftware/backbone.viewOptions) that needs to be installed but isn't mentioned on the Joint website? Maybe it's a part of the types file at node_modules/@types/backbone/index.d.ts?  \nAlso, I don't think that ignoring implicit any is a good strategy.  I'll submit a PR with updates to the joint.d.ts file.. So the latest version of graphlib (2.0.0) includes lodash 4.13.1, which then overwrites the lodash that's manually included.  You have to use graphlib 1.0.7.  npm install graphlib@1.0.7 --save \nAfter this there's an error where the \"This is\\nan element\" fails with:\nUncaught DOMException: Failed to execute 'querySelector' on 'Element': '[model-id=\"This is\nan element\"]' is not a valid selector.\n    at n.onEndModelChange (https://localhost:8443/static/libs/jointjs/joint.js:9091:45)\n    at n.wrapper (https://localhost:8443/static/libs/lodash/index.js:3592:19)\n    at n.watchEndModel [as watchSource] (https://localhost:8443/static/libs/jointjs/joint.js:9039:27)\n    at n.render (https://localhost:8443/static/libs/jointjs/joint.js:8585:14)\n    at n.protoProps.render (https://localhost:8443/static/libs/jointjs/joint.js:4699:26)\n    at n.renderView (https://localhost:8443/static/libs/jointjs/joint.js:10603:14)\n    at https://localhost:8443/static/libs/lodash/index.js:2874:23\n    at https://localhost:8443/static/libs/lodash/index.js:3049:15\n    at Function.<anonymous> (https://localhost:8443/static/libs/lodash/index.js:3346:13)\n    at n.resetViews (https://localhost:8443/static/libs/jointjs/joint.js:10649:15)\nIf you remove that element then the graph renders fine.  . ```\nnode_modules/jointjs/demo/ts-demo > npm start\n\n@ start node_modules/jointjs/demo/ts-demo\nwebpack\n\nts-loader: Using typescript@2.5.3 and node_modules/jointjs/demo/ts-demo/tsconfig.json\nHash: 6c7a1358a12afdf69f28\nVersion: webpack 3.7.1\nTime: 3347ms\n          Asset    Size  Chunks                    Chunk Names\nbuild/bundle.js  274 kB       0  [emitted]  [big]  main\n   [0] ./index.ts 1.37 kB {0} [built] [2 errors]\n   [1] ./custom.ts 1.78 kB {0} [built] [2 errors]\n    + 1 hidden module\nERROR in ./index.ts\n(1,24): error TS2307: Cannot find module '../../build/joint'.\nERROR in ./index.ts\n(3,20): error TS2307: Cannot find module '../../build/joint'.\nERROR in ./custom.ts\n(1,24): error TS2307: Cannot find module '../../build/joint'.\nERROR in ./custom.ts\n(4,16): error TS2664: Invalid module name in augmentation, module '../../build/joint' cannot be found.\nERROR in ./index.ts\nModule not found: Error: Can't resolve '../../build/joint' in 'node_modules/jointjs/demo/ts-demo'\n @ ./index.ts 3:12-40 5:14-42\nERROR in ./custom.ts\nModule not found: Error: Can't resolve '../../build/joint' in 'node_modules/jointjs/demo/ts-demo'\n @ ./custom.ts 13:12-40\n @ ./index.ts\nnpm ERR! Linux 3.10.0-514.10.2.el7.x86_64\nnpm ERR! argv \"/usr/bin/node\" \"/usr/bin/npm\" \"start\"\nnpm ERR! node v6.10.0\nnpm ERR! npm  v3.10.10\nnpm ERR! code ELIFECYCLE\nnpm ERR! @ start: webpack\nnpm ERR! Exit status 2\nnpm ERR!\nnpm ERR! Failed at the @ start script 'webpack'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the  package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     webpack\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     node_modules/jointjs/demo/ts-demo/npm-debug.log\n```\ncat npm-debug.log\n0 info it worked if it ends with ok\n1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'start' ]\n2 info using npm@3.10.10\n3 info using node@v6.10.0\n4 verbose run-script [ 'prestart', 'start', 'poststart' ]\n5 info lifecycle @~prestart: @\n6 silly lifecycle @~prestart: no script for prestart, continuing\n7 info lifecycle @~start: @\n8 verbose lifecycle @~start: unsafe-perm in lifecycle true\n9 verbose lifecycle @~start: PATH: /usr/lib/node_modules/npm/bin/node-gyp-bin:node_modules/jointjs/demo/ts-demo/node_modules/.bin:/usr/local/lib/npm/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin\n10 verbose lifecycle @~start: CWD: node_modules/jointjs/demo/ts-demo\n11 silly lifecycle @~start: Args: [ '-c', 'webpack' ]\n12 silly lifecycle @~start: Returned: code: 2  signal: null\n13 info lifecycle @~start: Failed to exec start script\n14 verbose stack Error: @ start: `webpack`\n14 verbose stack Exit status 2\n14 verbose stack     at EventEmitter.<anonymous> (/usr/lib/node_modules/npm/lib/utils/lifecycle.js:255:16)\n14 verbose stack     at emitTwo (events.js:106:13)\n14 verbose stack     at EventEmitter.emit (events.js:191:7)\n14 verbose stack     at ChildProcess.<anonymous> (/usr/lib/node_modules/npm/lib/utils/spawn.js:40:14)\n14 verbose stack     at emitTwo (events.js:106:13)\n14 verbose stack     at ChildProcess.emit (events.js:191:7)\n14 verbose stack     at maybeClose (internal/child_process.js:877:16)\n14 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5)\n15 verbose pkgid @\n16 verbose cwd node_modules/jointjs/demo/ts-demo\n17 error Linux 3.10.0-514.10.2.el7.x86_64\n18 error argv \"/usr/bin/node\" \"/usr/bin/npm\" \"start\"\n19 error node v6.10.0\n20 error npm  v3.10.10\n21 error code ELIFECYCLE\n22 error @ start: `webpack`\n22 error Exit status 2\n23 error Failed at the @ start script 'webpack'.\n23 error Make sure you have the latest version of node.js and npm installed.\n23 error If you do, this is most likely a problem with the  package,\n23 error not with npm itself.\n23 error Tell the author that this fails on your system:\n23 error     webpack\n23 error You can get information on how to open an issue for this project with:\n23 error     npm bugs\n23 error Or if that isn't available, you can get their info via:\n23 error     npm owner ls\n23 error There is likely additional logging output above.\n24 verbose exit [ 1, true ]\nThere is a build directory created, but it is in the current directory (node_modules/jointjs/demo/ts-demo) and it only has the file bundle.js in it.\n. If I copy your PR and npm install, npm start (without doing npm install & grunt in the joint root) then I get:\n```\nnode_modules/jointjs/demo/ts-demo (dev) > npm start\n\n@ start node_modules/jointjs/demo/ts-demo\nnpm run build && live-server ./ --open=index.html --cors\n@ build node_modules/jointjs/demo/ts-demo\nnpm run cp-libs & webpack\n@ cp-libs node_modules/jointjs/demo/ts-demo\ncpx ../../dist/joint.{d.ts,js,css} build\n\nUsage: cpx   [options]\nCopy files, watching for changes.\n\n    <source>  The glob of target files.\n    <dest>    The path of a destination directory.\n\nOptions:\n-c, --command <command>   A command text to transform each file.\n-C, --clean               Clean files that matches <source> like pattern in\n                          <dest> directory before the first copying.\n-L, --dereference         Follow symbolic links when copying from them.\n-h, --help                Print usage information.\n--include-empty-dirs      The flag to copy empty directories which is\n                          matched with the glob.\n--no-initial              The flag to not copy at the initial time of watch.\n                          Use together '--watch' option.\n-p, --preserve            The flag to copy attributes of files.\n                          This attributes are uid, gid, atime, and mtime.\n-t, --transform <name>    A module name to transform each file. cpx lookups\n                            the specified name via \"require()\".\n-u, --update              The flag to not overwrite files on destination if\n                          the source file is older.\n-v, --verbose             Print copied/removed files.\n-V, --version             Print the version number.\n-w, --watch               Watch for files that matches <source>, and copy\n                          the file to <dest> every changing.\n\nExamples:\ncpx \"src/**/*.{html,png,jpg}\" app\ncpx \"src/**/*.css\" app --watch --verbose\n\nSee Also:\n    https://github.com/mysticatea/cpx\nnpm ERR! Linux 3.10.0-514.10.2.el7.x86_64\nnpm ERR! argv \"/usr/bin/node\" \"/usr/bin/npm\" \"run\" \"cp-libs\"\nnpm ERR! node v6.10.0\nnpm ERR! npm  v3.10.10\nnpm ERR! code ELIFECYCLE\nnpm ERR! @ cp-libs: cpx ../../dist/joint.{d.ts,js,css} build\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the @ cp-libs script 'cpx ../../dist/joint.{d.ts,js,css} build'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the  package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     cpx ../../dist/joint.{d.ts,js,css} build\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!    node_modules/jointjs/demo/ts-demo/npm-debug.log\nts-loader: Using typescript@2.5.3 and node_modules/jointjs/demo/ts-demo/tsconfig.json\nHash: 6dd0a9e3274a0d512d42\nVersion: webpack 3.7.1\nTime: 3598ms\n          Asset    Size  Chunks                    Chunk Names\nbuild/bundle.js  274 kB       0  [emitted]  [big]  main\n   [0] ./index.ts 1.36 kB {0} [built] [2 errors]\n   [1] ./custom.ts 1.78 kB {0} [built] [2 errors]\n    + 1 hidden module\nERROR in ./index.ts\n(1,24): error TS2307: Cannot find module './build/joint'.\nERROR in ./index.ts\n(3,20): error TS2307: Cannot find module './build/joint'.\nERROR in ./custom.ts\n(1,24): error TS2307: Cannot find module './build/joint'.\nERROR in ./custom.ts\n(4,16): error TS2664: Invalid module name in augmentation, module './build/joint' cannot be found.\nERROR in ./index.ts\nModule not found: Error: Can't resolve './build/joint' in 'node_modules/jointjs/demo/ts-demo'\n @ ./index.ts 3:12-36 5:14-38\nERROR in ./custom.ts\nModule not found: Error: Can't resolve './build/joint' in 'node_modules/jointjs/demo/ts-demo'\n @ ./custom.ts 13:12-36\n @ ./index.ts\nnpm ERR! Linux 3.10.0-514.10.2.el7.x86_64\nnpm ERR! argv \"/usr/bin/node\" \"/usr/bin/npm\" \"run\" \"build\"\nnpm ERR! node v6.10.0\nnpm ERR! npm  v3.10.10\nnpm ERR! code ELIFECYCLE\nnpm ERR! @ build: npm run cp-libs & webpack\nnpm ERR! Exit status 2\nnpm ERR!\nnpm ERR! Failed at the @ build script 'npm run cp-libs & webpack'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the  package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     npm run cp-libs & webpack\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     node_modules/jointjs/demo/ts-demo/npm-debug.log\nnpm ERR! Linux 3.10.0-514.10.2.el7.x86_64\nnpm ERR! argv \"/usr/bin/node\" \"/usr/bin/npm\" \"start\"\nnpm ERR! node v6.10.0\nnpm ERR! npm  v3.10.10\nnpm ERR! code ELIFECYCLE\nnpm ERR! @ start: npm run build && live-server ./ --open=index.html --cors\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the @ start script 'npm run build && live-server ./ --open=index.html --cors'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the  package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     npm run build && live-server ./ --open=index.html --cors\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     node_modules/jointjs/demo/ts-demo/npm-debug.log\n```\nnode_modules/jointjs/demo/ts-demo (dev) > ls ../../dist/joint*\n../../dist/joint.core.css                     ../../dist/joint.min.js               ../../dist/joint.shapes.fsa.min.js\n../../dist/joint.core.js                      ../../dist/joint.nowrap.js            ../../dist/joint.shapes.logic.js\n../../dist/joint.core.min.css                 ../../dist/joint.nowrap.min.js        ../../dist/joint.shapes.logic.min.js\n../../dist/joint.core.min.js                  ../../dist/joint.shapes.chess.js      ../../dist/joint.shapes.org.js\n../../dist/joint.css                          ../../dist/joint.shapes.chess.min.js  ../../dist/joint.shapes.org.min.js\n../../dist/joint.d.ts                         ../../dist/joint.shapes.devs.js       ../../dist/joint.shapes.pn.js\n../../dist/joint.js                           ../../dist/joint.shapes.devs.min.js   ../../dist/joint.shapes.pn.min.js\n../../dist/joint.layout.DirectedGraph.js      ../../dist/joint.shapes.erd.js        ../../dist/joint.shapes.uml.js\n../../dist/joint.layout.DirectedGraph.min.js  ../../dist/joint.shapes.erd.min.js    ../../dist/joint.shapes.uml.min.js\n../../dist/joint.min.css                      ../../dist/joint.shapes.fsa.js. We went back to the older version of jointjs.  As far as I know we're still getting the node_modules/jointjs/dist/joint.d.ts(1034,34): error TS2702: 'JQuery' only refers to a type, but is being used as a namespace here. error with our app,  but I'll see if I can find time to test again this week. . ",
    "dorsha": "We got the same issue.\nAfter upgraded to chrome 58 (windows machine), any click on the element doesn't work  (cell:pointerclick doesn't work, while cell:pointerup and cell:pointerdown work). \nLatest JointJS version.. Not yet, we cruelty staying with version 2.2.0.. Yep, below you can see the labels part, there is no fill for the text, I guess I can provide a fill.. but the question is what has changed that cause the text color to be black?\n\n. I only set the fill attribute, did not touch the text attribute.\nHere is the code, I hope you will understand the flow:\njoint.dia.Paper creation:\n\n\n. Yes, I will set the color myself.. What about the label click issue?. I tried, but had a problem, so could not test it. Will wait for the patch.. ",
    "Marais": "I also have this problem with devs.Model. The port is not populated when i fetch it.. I upgraded to version 1.1 and then it started to occur.. It happens when the port markup has a group defined.\nhttp://jsfiddle.net/6umUH/178/\nIf I remove the group tag, it works again. . Btw: Unrelated to the topic. It will be nice if you can define magnet: active/passive on the port api:\nE.g.\nport = {\n            id: id,\n            group: 'input',\n            args: {},\n            markup: markup,\n            magnet: \"passive\"|\"active\"|\"off\"\n        };\n. Thanks, for now I don't need a group element. So I can continue.. ",
    "pruggia": "Thanks for the approval. Quick question, the one in the dist directory still has the typo, will that get automatically fixed when you do a new release or I should have fixed that one too?\nAlso, do you have a fixed release cycle or you do adhoc releases when there are enough features/fixes that makes it worth it?. ",
    "trongdung258": "Any update @kumilingus?. ",
    "ladever": "I've faced with same problem. @kumilingus Do you have any update?. ",
    "ylzsmallsun": "Got it. Thank you kumilingus so much!. ",
    "GooseNinja": "I didn't know that. My bad :). ",
    "fandomfilms": "Would like this as  well. ",
    "aschwietert": "+1 Need to know, too.. ",
    "Shadowlauch": "+1 Same issue here.. ",
    "sunrock": "Same issue. I extend a custom shape\nexport class myElem extends joint.shapes.basic.Rect {\n}\nbut I don't know how to define the ElementView of myElem.. ",
    "claymfinley": "instead of (joint.shapes as any).html.Element\nyou can always do: joint.shapes['html'].Element. ",
    "p-salido": "No change on my end so far.. ",
    "sdiemert": "I was able to fix this issue for my own application by falling back on Graphlib 1.0.7. \nAdjusting the layout to work with Graphlib 2.0.0 would be nice to avoid this issue for others in the future. . ",
    "vspinu": "Perfect. Thanks!. ",
    "coroiu": "Apparently the are some other TS definition discrepancies. There are some missing member variables like joint.dia.Cell.graph that are available in the chrome inspector but not in TS. joint.dia.Cell.ports is also missing but that one seems to (?) be accessible through a joint.dia.Cell.getPorts method. However, I'm not sure if these are supposed to be private variables, but in that case, having a getGraph() method would be nice. Or maybe adding them to the definition as 'private' so that there is no confusion.. ",
    "warpdesign": "I applied the commit patch to the 2.1 release I have and the problem is still there.. I did clear the cache so I don't think it is the issue.. ",
    "munepom": "Thank you for merge \ud83d\udc4d. oh! null or undefined check is needed \ud83d\udca6 \nI'll fix it.. Thank you for fast review!\nChanged\n\ncheck null or undefined to avoid exception. \n",
    "elmart": "It seems like a view refresh issue.\nIf I do graph.fromJSON(graph.toJSON()) after relayout, everything gets as expected.. Sorry I didn't answer before. For some reason, I didn't receive a notification on your answer, and I haven't manually looked until now.\nNo, I'm not using graph.fromJSON() to load cells initially. I don't have the json to load from.\nI'm automatically generating a graph from a more abstract structure which I call serverModel by using a builder which first clears the graph then adds units, then adds links. This is:\n```javascript\nloadContext(serverModel) {\n          new ServerModelGraphBuilder().buildGraph(this.graph, serverModel);\n          this.layoutDirectedGraph();\n}\nclass ServerModelGraphBuilder {\n  buildGraph(graph, serverModel) {\n    graph.clear();\ngraph.set({\n  id: serverModel.id,\n  name: serverModel.name,\n  type: 'app.Context',\n  templateFormat: serverModel.templateFormat\n});\n\nthis._buildUnits(graph, serverModel);\nthis._buildLinks(graph, serverModel);\n\n}\nbuildUnits(graph, serverModel) {\n    for (const unit of serverModel.units) {\n      graph.addCell(.assign({}, shapes[unit.type], {\n        name: unit.name,\n        unitConf: _.merge(\n          getUnitTypeDefaultConf(unit.type),\n          this._transformServerConfToClientConf(unit.conf)\n        )\n      }));\n    }\n  }\ntransformServerConfToClientConf(conf) {\n    return .cloneDeep(conf, (value, key) => {\n      if (.isString(key) && (key.match(/^(inPorts|outPorts|bounds)$/))) {\n        const result = {};\n        result[key] = .cloneDeep(value);\n        return result;\n      }\n    });\n  }\n_buildLinks(graph, serverModel) {\n    const elements = graph.getElements();\nfor (const link of serverModel.links) {\n  graph.addCell({\n    type: 'app.Link',\n    source: {\n      id: elements.find(\n        element => element.get('name') == link.source.name\n      ).get('id'),\n      port: `out-${link.source.port}`\n    },\n    target: {\n      id: elements.find(\n        element => element.get('name') == link.target.name\n      ).get('id'),\n      port: `in-${link.target.port}`\n    }\n  });\n}\n\n}\n}\n```\nAs I said before, the strange thing dissappear if after loading this way, I do graph.fromJSON(graph.toJSON()).. I understand why a first layout would fail (when positioning the wrong link, there are some units that will become obstacles that are not still there). Why I don't understand is why running layout a second time (once all nodes are already positiones) doesn't fix the wrong link.\nWhat is it that gets done differently between running layout a second time, and resetting cells?. Exactly. That's why I said this seemed to be a view refresh issue.\nTo me, the ideal solution would be for link elements to change some attribute (so that their view refreshes) when the physical routing path would change, even if source and destination remain the same.\nDo you think that's feasible?. None of the above approaches worked.\nFirst one didn't produce any noticeable change.\nSecond produced the following:\n\nIn any case, it's ok for me by now, as far as this is taken into account for 1.2 release, as you indicated. Do you want me to add some kind of tag so that it doesn't get forgotten?. ",
    "ujjawalhub": "Use fitEmbeds() instead of toFront().\nMy case ->\nrect.embed(child);\ngraph.addCell(rect, child);\nrect.position(10,10, { parentRelative: true });\nrect.fitEmbeds({deep : true ,padding: { top: 30, left: 10, right: 10, bottom: 10 }});. ",
    "dragosbulugean": "Ok. For anyone else encountering this problem, you can have a npm postinstall script - rm node_modules/jointjs/dist/joint.d.ts to temporarily fix until the release comes through, and import using require('jointjs'). Closing this.. ",
    "mkolasinski": "Hi thanks for your suggestion. \nAfter using that, I don't show errors ( so it's okay ) but I don't create a simple chart. \nMaybe I have a problem with import {dia, shapes} from 'jointjs' ?\nRegards,. ",
    "randy-stad": "Thanks Roman.\nThe use case for needing updateCurrentView() is I need to programmatically\nchange the size of the PaperScroller associated with the Navigator (I have\na slider that allows the user to change the size of the paperscroller and a\nsidebar).  If I do not call updateCurrentView() on the Navigator, it\ndoesn't recognize the new size of the PaperScroller (I programmatically set\nleft and right values).\nRandy\nOn Thu, Nov 9, 2017 at 8:03 AM, Roman Bruckner notifications@github.com\nwrote:\n\nHi Randy,\n\nHere's fix for the highlighters typo #755\n   https://github.com/clientIO/joint/pull/755\nNavigator's updateCurrentView() method is not meant to be public.\n   Is there any specific case where calling this method is necessary?\n\nThank You.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/clientIO/joint/issues/754#issuecomment-343181661, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AGfFCwS9bJfKW3PFEawr8T6ot9_GbY-vks5s0xRXgaJpZM4QYE9I\n.\n. \n",
    "henrychen0220": "Found out the issue, the issue is with the styling where the style aren't properly append to the template string. ",
    "duarte171183": "hi, i have that problem, you can publish the solution of the issue or you can help me please!!! . Hi, the solution is add css in update box function\n```\nupdateBox: function() {\n            // Set the position and dimension of the box so that it covers the JointJS element.\n            var bbox = this.model.getBBox();\n            // Example of updating the HTML with a data stored in the cell model.\n            //this.$box.find('label').text(this.model.get('label'));\n            this.$box.find('input').css({\n                'pointer-events': 'auto'\n            });\n            this.$box.find('button').css({\n                color: 'white',\n                border: 'none',\n                'background-color': '#C0392B',\n                'border-radius': '20px',\n                width: '15px',\n                height: '15px',\n                'line-height': '15px',\n                'text-align': 'middle',\n                'position': 'absolute',\n                top: '-15px',\n                left: '-15px',\n                padding: 0,\n                margin: 0,\n                'font-weight': 'bold',\n                cursor: 'pointer',\n                'pointer-events': 'auto'\n        });\n\n\n\n        this.$box.css({\n            left: bbox.x,\n            top: bbox.y,\n            transform: 'rotate(' + (this.model.get('angle') || 0) + 'deg)',\n            position: 'absolute',\n            background: '#3498DB',\n            'pointer-events': 'none',\n            '-webkit-user-select':' none',\n            'border-radius': '4px',\n            'border': '2px solid #2980B9',\n            'box-shadow': 'inset 0 0 5px black, 2px 2px 1px gray',\n            padding: '5px',\n            'box-sizing': 'border-box',\n            'z-index': 2,                 \n        });\n    },\n\n```. ",
    "Thunkar": "Hi, I'm also having this issue in a very similar scenario. Adding:\nimport * as JQuery from \"jquery\";\nAt the top of the node_modules/jointjs/dist/joint.d.ts file allows me to compile my code.. Ok, so that didn't work. Typescript exhibited a weird behavior and randomly failed compilation with the same error...\nI had a workstation that never failed and made a diff with the failing computer's node_modules. The most obvious difference is that the module @types/jquery that the new one installed was a different version (1.10.34 vs 3.3.0). Forcing the installation of @types/jquery@3.3.0 solved the issue for me. Looks like backbone installed the older version, maybe the v3.3.0 should be forced by jointjs deps?. @Wildfirefox try this:\nnpm i --save-dev @types/jquery@3.3.0. The issue only seems to be happening on Linux systems, regardless of browser (which seems pretty strange, but there's that).\nI've tried debugging the copy of joint.js that angular bundles with my code and the event is never fired internally (options.preventContextMenu is never checked). I'm currently looking through the refactored paper events code, but have yet to find a clue. Reverting to 2.0.1 is the only way I can make it work.. ",
    "Wildfirefox": "Hello everyone,\nim facing the same error, since today. Is there any solution yet? Im using joint.js in version 2.0.1. I also tried to downgrade the version to version 2.0.0, but with no success. Maybe someone out there would like to share a proper solution? \nEDIT: A downgrade to version 1.1 seems to work, but i look forward to get a solution for a version above,   hoping to get some performance improvements.. @Thunkar Ty for your fast response. I will test it today and give you a response then!. @Thunkar Your command worked very well for my project, thank you! \nBTW: Is there any guide to update from version 1.1 to 2.0.0 / 2.0.1? Im getting some others errors, regarding to JQuery.Events right now.... ",
    "andRave": "I have solved this but there another problem with link highlighters.\n\nHave you any idea how to solve it?. Thanks a lot! It works fine.. ",
    "bolognesi": "Thanks for the answer.\nYes, I applied a custom CSS rule on paper ( paper.$el.css('pointer-events', 'all'); ), for enable users to play with elements of the diagram (previously the diagram was only read-only (paper.$el.css('pointer-events', 'none'); ).\nI used this new rule:  paper.$el.css('pointer-events', '');  and all it is works.\nThanks\n. ",
    "jpsfs": "Hi!\nThis is indeed very important for security reasons. Related with #945.\n@kumilingus can you please help?\nBest,\njpsfs. ",
    "wdunn001": "In the mean time I made this...\nhttps://github.com/wdunn001/Rappid-Angular-Demo. ",
    "tech4242": "Anyone? This has been open for over a year. What's the official status on Angular 4+ and the joint/rappid stack? . \n@kumilingus thanks for the quick reply! I am going to test it tomorrow with the current release to see where the current implementation stands as I need it for a project that starts soon with Angular 6. ",
    "PraveenBiradar": "\nKitchenSink application along with Angular 6 is part of Rappid v2.4.0.\n\nwhere i can find the actual demo source code of KitchenSink application along with Angular 6?. apps/KitchenSink/index.html  has these lines\n\n        joint.setTheme('modern');\n        app = new App.MainView({ el: '#app' });\n        themePicker = new App.ThemePicker({ mainView: app });\n        themePicker.render().$el.appendTo(document.body);\n        window.addEventListener('load', function() {\n            app.graph.fromJSON(JSON.parse(App.config.sampleGraphs.emergencyProcedure));\n        });\n    \nbut apps/KitchenSinkAngular6 doesnot have this render code.......how to implement this in  app.component.ts of KitchenSinkAngular6?. > Did you have a look at apps/KitchenSinkAngular6/src/app/app.component.ts?\nyes,i have seen....but there is no rendering code available.... \n\ni want to render a diagram like kitchensink in kitchensinkangular6....... how to do this?. > \n\n\ni want to render a diagram like kitchensink in kitchensinkangular6....... how to do this?\n\nany update???. How to add custom images to joint.shapes.app.ts of  angular6 project?. > How to add custom images to joint.shapes.app.ts of angular6 project?\nany update on this?\n. ",
    "exonianp": "Hello. I just installed angular6 version but the inspector is not working for the links; the inspector for links works fine on the \"static\" version. Any ideas?. Thanks! \nA minor correction has to do with search in the stencil-service.ts\nPlease change lines 38-39 to\nsearch: {\n                 '*': ['type', 'attrs/text/text', 'attrs/root/dataTooltip', 'attrs/label/text'],\nSo that it actually searches under angular6 on text, descriptions and labels\nI am unsure as to whether org.Member in line 40 may need to be changed as well.\n. Yeap. \nI believe that after fixing the clear/print/layout nuisances the angular6 solution will be perfect. \nPlease point out to us the best/recommended approach of using jointjs for connection to databases/dynamic json description. Is typeorm.io recommended?\n. \n\nThe three icons do not display in both the material and the dark themes.\nWhereas it works fine (same core code) for the default (modern) theme.\n\n. Thank you but perhaps, I failed to make myself clear:\nOne can easily overload the standard.image and standard.cylinder, body with refD and have an svg path in the body.\ne.g. you can copy paste the standard.image rename it to standard.path as follows:\n` {\n                     type: 'standard.Path',\n                     size: { width: 100, height: 100 },\n                     attrs: {\n                         root: {\n                             tabindex: 4,\n                             dataTooltipPosition: 'left',\n                             dataTooltipPositionSelector: '.joint-stencil'\n                         },\n                         body: {\n                             fill: 'transparent',\n                             fillOpacity: 0.5,\n                             refD: 'M 0 5 10 0 C 20 0 20 20 10 20 L 0 15 Z'\n                         },\n                         label: {\n                             text: 'Path',\n                             fontFamily: 'Roboto Condensed',\n                             fontWeight: 'Normal',\n                             fontSize: 11,\n                             fill: '#c6c7e2',\n                     }\n                 }\n             },`\n\nAnd you get the shape as defined in the refD.\n\nSimilarly you can do the same for cylinder:\n`{\n                     type: 'standard.Cylinder',\n                     size: { width: 40, height: 45 },\n                     attrs: {\n                     root: {\n                         dataTooltip: 'Cylinder',\n                         dataTooltipPosition: 'left',\n                         dataTooltipPositionSelector: '.joint-stencil'\n                     },\n                     body: {\n                         fill: 'transparent',\n                         stroke: '#31d0c6',\n                         strokeWidth: 2,\n                         strokeDasharray: '0',\n                         refD: 'M 0 5 10 0 C 20 0 20 20 10 20 L 0 15 Z'\n                     },\n                     top: {\n\n                         fill: 'transparent',\n                         stroke: '#31d0c6',\n                         strokeWidth: 0,\n                         strokeDasharray: '0'\n                     },\n                     label: {\n                         text: 'cylinder',\n                         fill: '#c6c7e2',\n                         fontFamily: 'Roboto Condensed',\n                         fontWeight: 'Normal',\n                         fontSize: 11,\n                         strokeWidth: 0\n                     },\n                 }\n             }\n         ],`\n\nBut you cannot do this in rectangle/headeredrectangle.\nSo the key is to go rappid.d.ts and change the SVGRectAttributes with the SVGPathAttributes for body.\n` \ninterface HeaderedRectangleSelectors {\n            root?: attributes.SVGAttributes;\n            body?: attributes.SVGPathAttributes;\n           // body?: attributes.SVGRectAttributes;\n            header?: attributes.SVGPathAttributes;\n            headerText?: attributes.SVGTextAttributes;\n            bodyText?: attributes.SVGTextAttributes;\n        }\n    class HeaderedRectangle extends dia.Element {\n        constructor(\n            attributes?: dia.Element.GenericAttributes<HeaderedRectangleSelectors>,\n            opt?: dia.Graph.Options\n        )\n    }`\n\nBut this doesn't work as well because there is no support for refD/custom body border shape in the core for the \"rectangular\" shape.\nCan we have it please?\n. Thank you very much Roman. Thank you for the solution; this is what we are going to do. \nWe will post our code here if you like so that others may use it as well; it ought to be a great addition to the project.. ",
    "noemi-salaun": "Maybe I can help and submit a PR. Your types are writed by hand ? Or are they generated from the JS code automatically ?\nAll your types are in the types directory ?\nDo you use external types, for Backbones or other libraries for example ?. It looks like every Backbone types are ignored.\nProperty 'on' does not exist on type 'Paper'.. Installing the Backbone typings npm install --save-dev @types/backbone seems to solve the problem.\nI'll continue my test, and close this issue if it solves all the problem.. So, there is still some little incompatibility.\nModelAttributes\nObject literal may only specify known properties, and 'id' does not exist in type 'shapes.devs.ModelAttributes'.\nPaper.Options\nThe signature of Options.interactive is \nts\ninteractive?: ((cellView: CellView, event: string) => boolean) | boolean | CellView.InteractivityOptions\nBut in the case of interactive being a function, its return can be a CellView.InteractivityOptions too\n. ",
    "Siddharth-dubey": "@vtalas @mmacfadden Hey , the project is still not having compatible Typescript definitions\nGetting same error as the OP:\n\nArgument of type '{ el: any; width: number; height: number; gridSize: number; model: Graph; }' is not assignable to parameter of type 'Options'.\n  Object literal may only specify known properties, and 'el' does not exist in type 'Options'.\n\nBoth el and model don`t exists in typings file.\nIs there any expected ETA for this issue? or I can have a PR for the same?. @kumilingus  Thanks . \nnpm install @types/backbone --save-dev\nsolves the issue. You can close it. ",
    "Paul-Kijtapart": "Solved by creating a custom HTML [\"https://resources.jointjs.com/tutorial/custom-elements\"]. Update:\nThis is actually because of \"vector-effect= non-scaling-stroke\" not working in Internet Explorer.\n. Thank kumilingus for the quick response. I will check your link right away.. Install joint.shapes.standard\nI noticed that jointjs \"^2.0.1\" from \"yarn add jointjs or npm install jointjs\" does not come with plugins \"joint.shapes.standard.js\".\nSo I decide to copy the joint.shapes.standard.js file from the master branch and import it in \"import ./jointjs.shapes.standard\".\nI am able to create a shape from joint.shapes.stand (e.g. new joint.shapes.standard.Rectangle() works properly.)\nIssue\nHowever, when I tries to add the shape to the paper (i.e. graph.addCell(new joint.shapes.standard.Rectangle()), i run into  \"TypeError: html.replace is not a function\" from joint.js.\nPossible solutions\nCould this be caused by markup in standard plugin (jointjs is not able to parse this markup)?\nCould the solution be to, instead of using jointjs from npm, I need to build dist jointjs from the master branch to ensure jointjs is at latest version?\nAgain, thank you for your help.. Updated:\njoint.shapes.standard is amazing. \nThe shapes are now updated without scaling the strokes.\nThank kumilingus for pointing this out.. Thank kumilingus for taking the time to answer the question.\nThe above code works.\nI will research more into defining custom attributes.. Update\nAfter looking at joint.dia.Cell.js, this is what i found:\nBy setting 'z' value when creating a shape/link, even thought the shape is displayed correctly on the graph, its 'z' value does not change. \nUse Case:\n1. create A at (0,0) with z = 1\n2. create B at (0,0) with z = 1\n3. B is on top of A since it is created after.\n- At this point, the highest z should be 2 (since there are only 2 shapes)\n- However, even though B is on top of A, both shapes have z = 1\n- so, this.graph.maxZIndex() returns 1 instead of 2\n\nthis, then, make 'shouldUpdate' flag = false => No toFront action\n\nExpect solution\nFrom above use case, at step 3 when B is created on top of A, I was hoping that the 'z' value of B will be updated instead of using the passed-in 'z' value. This would make the later steps work properly.\nCurrent solution\nI comment out the 'shouldUpdate' flag to ensure that toFront and toBack are always triggered.\n. Thank @kumilingus  for the quick response. \nUpdate\nI have just done manual tests for both creating shape/link and graph.fromJSON(). \ntoFront and toBack are now working for both cases. . Hi @vtalas ,\nThank you for the quick response.\nYes, I enabled 'Snaplines', as it provide some indicators on aligning shapes together.\nYour explanation makes sense, as some items are not placed perfectly at the grid ( i.e. some corners of a shape are not at the Grid's dot)\nThoughts\nI believe, in order to take full advantage of the 'Snaplines' and 'Grid', I need to ensure the size of each shape fits in to the grid (all corners are at some Grid's dot).\n. Update\nI ended up going with 'Snaplines' off.. Hi @kumilingus ,\nThank you again for taking the time to help.\nYes, joint.dia.Graph.prototype.resizeCells() is definitely what i was looking for. \nin case anyone runs into similar issue:\njavascript\ngraph.resizeCells(width, height, cells, opt); // will resize all selected cells proportionally\n. Hi @kumilingus ,\nThank you for the quick response.\nMy goal is to make the interaction with an Parent element with some children (i.e. embedded elements) to be similar to the interaction used in PowerPoint.\nReferring to this jsFiddle, https://jsfiddle.net/2zrtuqbm/61/, \nplease notice that a click-move on child will actually move the whole group. This is because the Parent element has higher 'z' value than the child. This is an expected behavior, as I want a regular click on any child to be delegated to the parent.\nHowever, if user instead perform double-click, I hope that the action will now be on the child. \nCurrently , this can be done via \n1. adjusting 'z' value (as described in the first post)\n\napply 'pointer-events=\"none\"' on the parent. \ni believe i need to add field 'isClicked' to my custom parent element.\nthe action double-click = first pointerdown will toggle this 'isClicked' and apply 'pointer-events=\"none\"'. This would allow later clicks on this groups to be on the children.\nif a user click on other elements/blank outside of this group, i just have to toggle the 'isClicked' status of the parent to make parent be interactive again ( 'pointer-events=\"auto\"')\nthe 'z' values of all elements in the group would remain the same.\n\nThought\nthe 2nd way seems simple and makes more sense to me.\n. solved with 2nd way. Hi @kumilingus,\nThank you very much!\nit's working perfectly. \nThe parent element is now wrapping around its embedded components after change in size/position/rotate.. ",
    "xunonxyz": "@kumilingus  but the cell class is not inhereit from the Backbone.View class, it is inhereit from the Backbone.model, so i think maybe there have a bug. ",
    "melbourne2991": "Same error in 2.7.2. ",
    "jan-lastovicka": "Ahoj Romane,\nd\u00edky za \u0159e\u0161en\u00ed.\nHonza\n\n\n\n\n2018 v 15:51, Roman Bruckner notifications@github.com:\n\n\n\nAhoj Honzo,\napparently, undefined group (group a in your case) causes the port attributes not to apply at all. Here's a workaround for now. Please define the groups before you start adding ports. We'll review this (we'll either update the example or make it work even if the group is not defined).\n// Single port definition\nvar port = {\n    id: 'abc',\n    group: 'a',\n    args: {},\n    label: {\n        position: {\n            name: 'top',\n            args: {}\n        },\n        markup: '',\n    },\n    attrs: { text: { text: 'port1' }},\n    markup: ''\n};\n// a.) add a port in constructor.\nvar rect = new joint.shapes.basic.Rect({\n    position: { x: 50, y: 50 },\n    size: { width: 90, height: 90 },\n    ports: {\n        // !!! DEFINE EMPTY GROUP !!!\n        groups: { a: {}},\n        items: [port]\n    }\n});\nrect.addTo(graph);\nThank you for reaching out!\nRoman\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/clientIO/joint/issues/830#issuecomment-370152944, or mute the thread https://github.com/notifications/unsubscribe-auth/AjNmDlV1DmETqUAlxn8xIYKNeOVWhw9nks5taq35gaJpZM4SWn8P.\n\n\n. ",
    "MrBra1nwash": "You missed something, it doesn't work still. Port is added but it is not active, you can't drag link from it. Can you provide a jsfiddle please?. ",
    "zbynekstara": "Note that the CDN links used in hello-world.html anticipate JointJS version to increase to 2.1.0.. Hello @bidatacoder you should just call npm install --save jointjs. No jQuery, Lodash, or Backbone necessary (they are already packaged with jointjs). Then, node_modules will have the structure the demo expects.\nAlso make sure that the copy-pasted hello_world.html is a sibling to the generated node_modules folder, ie.\nhello_world\n- hello_world.html\n- node_modules. @Thaval I'm investigating your problem. I suspect there is a similar conflict between the dependencies installed and expected by npm install --save jointjs and dependencies you installed otherwise. Try to require the other dependencies from node_modules similarly to how you require jointjs:\nconst $ = require('../../../../../node_modules/jquery/dist/jquery.js');\nconst _ = require('../../../../../node_modules/lodash/index.js');\nconst Backbone = require('../../../../../node_modules/backbone/backbone.js');\nconst joint = require('../../../../../node_modules/jointjs/dist/joint.js');\nLet me know if that helps.. Replaced by #943 . Cheerio version 0.22.0 is required to keep <> tags encoded for Prismjs.. needs to accept a precision option for points and angle comparison. Resolves issue #1031 . typo: closestPointNormalizedLength(). should use - instead of :. should use - instead of : . ",
    "koenhandekyn": "this might be relevant as an alternative solution\nhttps://stackoverflow.com/questions/46077237/how-to-solve-css2properties-doesnt-have-an-indexed-property-setter-for-0-erro. ",
    "j-schmidberger": "Within JointJs Version 2.2 tokens in places are rendered fine.. ",
    "jmesa-sistel": "@kumilingus \nI am connecting 2 joint.shapes.devs.Model ports with a link\nMy example is very complex, if you cannot reproduce I can try to create a reduced example. @kumilingus \nYes, now works fine with your patch\nCreate the example is really hard, it is a jira plugin with angular embbeded and I have a angular wrapper to manipulate jointjs objects.\nI am using\nperpendicular: true,\nconnector: { name: 'rounded' },\nrouter: { name: 'manhattan', args: { step: 12, perpendicular: true } }\nin joint.dia.Link attributes, maybe helps to reproduce. ",
    "brisberg": "Awesome, I was considering adding a 'removeAllPorts' call next, but I like folding it into this call to reduce API sprawl.\nPushed up those changes with the alternate call signature, should be ready for rereview.. Thanks, and no problem on the wait. It seems like you guys were busy with the latest release.. Do you have psudocode for another way to do it?\nI wasn't able to find any better ways to do \"array subtraction\" in javascript. Thanks, yeah that worked very cleanly.. ",
    "thorikawa": "It turns out that just updating to v2.1.0 and calling addCells() at once  improved performance a lot. My change still improves a bit, but as the test result said, my change broke async option of paper and I didn't come up with better solution, so decided to close it. Thank you for commenting.. ",
    "swenmeeuwes": "Hi vtalas,\nFirst I stripped down my project to only use TypeScript en JointJs.\nAfter still getting the error I compared my project with the demo project and spotted a difference in tsconfig.json.\nThis line was the villain:\n\"strictNullChecks\": true,\nSetting it to 'false' fixed the issue.\nAlthough I'd rather leave this setting on for code safety reasons.\nIs there going to be support for this in the future?\nTo reproduce you can just use the ts-demo and add \"strictNullChecks\": true to the tsconfig.json.. ",
    "zuozhiw": "@swenmeeuwes In tsconfig.json, you can set \"skipLibCheck\": true to let Typescript skip checking the libraries in strict mode, and you can add back \"strictNullChecks\": true, or maybe even \"strict\": true.\nOne suggestion to JointJS Typescript declarations regarding strictNullChecks in Typescript. Some of the type declarations are not strict.\nFor example:\ngetCell(id: string | number | Cell): Cell;\nBut when the id doesn't exist, this function returns undefined, so it's better to write\ngetCell(id: string | number | Cell): Cell | undefined;\n. ",
    "orius123": "@kumilingus hi, I tried your fix but it doesn't support cell/link:pointreup event. any suggestion how to add support for this as well?\nwhen will the patch be released?. also in cell:pointermove event argument I don't longer have _dx and _dy any way of getting them? \nWe use it for our labels to move only on the link.\njs\npaper.on('cell:pointermove', (event) => {\n    // this code handle label movements on the link\n    if (event.targetView && paper.options.interactive && linkHasLabels(event)) {\n      const clickPoint = { x: event._dx, y: event._dy };\n      const lengthTotal = event.sourcePoint.manhattanDistance(event.targetPoint);\n      const length = event.sourcePoint.manhattanDistance(clickPoint);\n      let position = round(length / lengthTotal, 2);\n      if (position <= 0.9 && position >= 0.1) {\n        position = clamp(round(length / lengthTotal, 2), 0.1, 0.9);\n        event.model.label(0, { position });\n      }\n    }\n  });. ## Expected:\n\nActual:\n\n. Works like a charm!\nThanks for the help!!. ",
    "janhmueller": "Thanks for creating the patch. I reworked the definition of the ports and added selector fields to the markup and I applied the patch. It works now.. ",
    "nags178": "can i see the resolution how it was fixed. I am unable to do right click in paper. ",
    "MRxiongyu": "link:disconnect  event can't trigger . 1. Click the link to delete the button\n2. paper.on('link:disconnect', function(evt, x, y) {\n  console.log('link:disconnect')\n})\nNo trigger. ok , thank you . ",
    "Zilvinaskli": "same issue for me. ",
    "bidatacoder": "I have similar issue. If I follow the instructions from installation tutorial examples to use node_modules file:\n```npm\nnpm init\nnpm i -S jquery lodash backbone jointjs\n...\n+ backbone@1.3.3\n+ jquery@3.3.1\n+ lodash@4.17.10\n+ jointjs@2.1.3\n...\n```\nI cannot run the installation tutorial examples with errors (from Chrome Developer Tool):\nUncaught ReferenceError: module is not defined\n    at index.js:1\nbackbone.js:382 Uncaught TypeError: Cannot read property 'extend' of undefined\n    at backbone.js:382\n    at backbone.js:31\n    at backbone.js:34\njoint.js:37 Uncaught TypeError: Cannot set property '$' of undefined\n    at joint.js:37\n    at joint.js:44\n(index):28 Uncaught ReferenceError: joint is not defined\n    at (index):28\n\nBut if I replace with cdn files such as the following, both examples run well.\n```html\n    \n\n\n\n\n```. ",
    "rostrowicki": "An angular-cli.json file should contains following declarations. I bet @Thaval had it without backbone related part because it leads to reported issue.\n\"scripts\": [\n    \"../node_modules/jquery/dist/jquery.js\",\n    \"../node_modules/lodash/index.js\",\n    \"../node_modules/backbone/backbone.js\",\n    \"../node_modules/jointjs/dist/joint.js\"\n  ]\nPlease have a look: https://stackoverflow.com/a/44175354/737602\n. ",
    "BoykoAlex": "Thanks!-)\nI consume jointjs as npm package dependency... It's unclear how to point to a joint.core in npm world... There is no jointjs-core package (or similar) published on npm, right?. @kumilingus thank you! Should have thought about overriding joint.util.deepClone myself :-) I'll find time to move out properties from attrs outside of it somewhere. Thanks again! . ",
    "vatz88": "I think I made some mistake in understanding the terminology, is it like parent - child relationship is defined in jointjs only through bounding box?\nCan anyone confirm it?\nAlso, if that is the case, what is the best way to access the node (source node) which is connected to a node (destination node) with link if I have the reference to the destination node? graph.getPredecessors is one, but that gives full array, so if there any other better way.. Ok, I got it.\nthis.graph.getNeighbors is what I wanted :sweat_smile:. ",
    "Armaldio": "I couldn't reproduce with a fiddle so I dig the issue in my code\nIt was caused by a mix of position: fixed and position: absolute between the grid and the paper\nI've cleaned my css and all is fine now.. ",
    "ctzurcanu": "this workaround worked for me. thanks. I am not sure if I should close the issue. Your decision.. ",
    "wwshunan": "var image = new joint.shapes.basic.Image({\nposition : {\nx : 50,\ny : 40\n},\nsize : {\nwidth : 16,\nheight : 16\n},\npreserveAspectRatio: \"xMidYMax meet\",\nattrs : {\nimage : {\n\"xlink:href\" : \"images/background.png\",\nwidth : 16,\nheight : 16\n}\n}\n});\nThanks for your reply.  I add preserveAspectRatio like above and the gap still exist. Could you correct the error of the above code?. \n{\n                position: {\n                    x: start,\n                    y: 10\n                },\n                size: {\n                    width: 100,\n                    height: 100,\n                },\n                attrs: {\n                    image: {\n                        'xlink:href': 'RFQ.jpg',\n                        width: 100,\n                        height: 100,\n                        preserveAspectRatio: \"xMidYMid meet\",\n                    },\n                },\n            },\n. Sorry, I mislead you meaning. After I set preserveAspectRatio to none. It's correct now. Thank you!. Hi kumilingus, the link line just crossed through the image using your method \"joint.paper.defaultAnchor = { name: 'left', { args: { dx: 10 }}}\" and they overlapped.. Hi kumilingus, I finally get it work by appling link.source and link.target. Thank you!. ",
    "candronikos": "I was able to use the joint.shapes.standard.Link as you suggested and that did fix the issue since it doesn't rely on CSS.\nNot sure how to reproduce since I was using create-react-app to begin development. From there, importing the other CSS files seems to work, it's just that it fails when using import 'jointjs/dist/joint.css'; in the waydescribed above. Any news on this @kumilingus?. Hi @vtalas, that worked.\nIs there an analogous event like ports:add on a node model I can add in the node definition block? Would be easier if I need to add libraries of nodes that add ports in different ways.. ",
    "telmotrooper": "I'd like to reiterate @kadosh1000's question, since anyone would like to avoid introducing vulnerabilities in their applications, especially through code they haven't written themselves and don't have the understanding to easily fix.... ",
    "xcorail": "Hi @kumilingus \nHappy you found it useful.\nSome precisions:\n Our recommended usage is to activate automated code review: LGTM will analyse immediately your Pull Requests, and report any new problem directly within the pull request. This is a one click operation\n Otherwise LGTM will poll your repo daily and analyse all new commits, most recent first\nRegards. ",
    "MarcDelp": "It does not work.\nIn fact, the onAddAnswer method is not even called when I am doing a single click on the \"+\" button.. You are right, it only happens on Chrome.\nThank you, changing the events listened to in my view solved the problem.. ",
    "ReccaFlames": "joint.dia.Paper in options doesn't have async parameter. When i add it manually functionality related to this option starts work.\n`\n    className: 'paper',\noptions: {\n\n    width: 800,\n    height: 600,\n    .\n    .\n    .\n    //Async render\n    async: null\n},`\n\nThis is how I used it\nvar paper = new joint.dia.Paper({\n  el: document.getElementById('myholder'),\n  model: graph,\n  width: 600,\n  height: 100,\n  gridSize: 1,\n  async: true,\n  interactive: true,\n  background: {\n    color: \"#eee\",\n  },\n});\nI am using joint.js version v2.1.4 . I have no error occurring when I am setting this property to true or false. I diagnoze that because when I try to catch event render:done with a async property set to true, according to the documentation, It doesn't fire anyway. . Here is an example \nhttps://jsfiddle.net/rahdpkw6/16/. ",
    "shukiAnavi": "Thanks for the response.\nUnfortunately, that does not solve the problem.\nWhen I added the:\npointer-events:none\nNone of the ports can be linked.\nIn the original question, both of the ports were active when not connected to other elements.\nOnce I link one of them to an element, the other port is cannot be linked.\nIn this example, I successfully connected the 'thumb-up' port to another:\n\nWhen the linking that described in the image above is done,\nthe 'thumb-down' port will be no longer act as an output port.. @kumilingus \nThe problem was in the implementation of the validateMagnet ...\nThanks. \ud83c\udf7a . ",
    "sysdevmike": "\nHow do you define your shape? There is probably an issue with the type attribute.\n\nThis was causing an issue for me. It wasn't clear to me from the docs that the type had to be the same key used on the joint object.\nFor those running into similar issues:\nIf you have a shape defined as joint.shapes.customShape = CustomShape, the type needs to be customShape\n. ahh that explains it, thanks!. ",
    "chipit24": "We're currently working around this bug by listening to pointerdown instead of pointerclick.. Thanks! I was testing with 2.1.4 locally, but using 2.2.1 with clickThreshold works well.. ",
    "wangsen1989": "\nYou can listen to link:connect and link:disconnect paper event.\npaper.on('link:connect', function(linkView, evt, elementViewConnected, magnet, arrowhead) {});\nhttps://resources.jointjs.com/docs/jointjs/v2.2/joint.html#dia.Paper.events\n\nThank you !\nThe method paper.on('link:connect', function() {});can not be triggered when I use\n  ```js\n const link = new joint.dia.Link({\n        source: { id: xxx},\n        target: { id: xxxx, },\n  }); \n  this.graph.addCell(link);\n```\nIt only works when I manually connect a line to another port.\nBut I solved it in another way.\nindex.js\njs\n    const links = graph.getLinks();\n    _.forEach(links, link => {\n      const target = link.target(); //{id: \"xxx\", port: \"xxxPort\"}\n      const source = link.source();\n      _.forEach([target, source], (element = {}) => {\n        const { id, port } = element;\n        const hasLinkedPort = document.querySelector(\n          `[model-id='${id}'] [port=${port}]`\n        );\n        hasLinkedPort.classList.add(\"has-linked-port\");\n      });\n    });\n  };\nindex.less\nless\n        .has-linked-port {\n          path {\n            d: path(\n              \"M24.778,21.419 19.276,15.917 24.777,10.415 21.949,7.585 16.447,13.087 10.945,7.585 8.117,10.415 13.618,15.917 8.116,21.419 10.946,24.248 16.447,18.746 21.948,24.248z\"\n            );\n          }\n        }\n. ",
    "Renhj90520": "@kumilingus  Hi, thank you for your reply, I notice that the method define has this line:\njoint.util.setByPath(joint.shapes, type, Cell, '.');\nMaybe this is the key.. @kumilingus  I got it. Thank you very much.. ",
    "TaiAivaras": "Doesn't seem like an ideal solution, since this translates view-port to coordinate origin. \nTo anyone else wondering, I got my desired behavior like this:\n```\n    handleCellMouseWheel = (cellView, e, x, y, delta) =>\n        this.handleCanvasMouseWheel(e, x, y, delta);\nhandleCanvasMouseWheel = (e, x, y, delta) => {\n    e.preventDefault();\n\n    const oldScale = this.paper.scale().sx;\n    const newScale = oldScale + delta * .1;\n\n    this.scaleToPoint(newScale, x, y);\n};\n\nscaleToPoint = (nextScale, x, y) => {\n    if (nextScale >= MIN_SCALE && nextScale <= MAX_SCALE) {\n        const currentScale = this.paper.scale().sx;\n\n        const beta = currentScale / nextScale;\n\n        const ax = x - (x * beta);\n        const ay = y - (y * beta);\n\n        const translate = this.paper.translate();\n\n        const nextTx = translate.tx - ax * nextScale;\n        const nextTy = translate.ty - ay * nextScale;\n\n        this.paper.translate(nextTx, nextTy);\n\n        const ctm = this.paper.matrix();\n\n        ctm.a = nextScale;\n        ctm.d = nextScale;\n\n        this.paper.matrix(ctm);\n    }\n};\n\n```\nI'll be closing the issue.\n. Is that in JointJS?. ",
    "mkopacz": "Thank you for your response.\nUnfortunately, I do not create new elements on my own. I implemented a copy-paste functionality in which I used: dia.Graph.prototype.cloneSubgraph to copy the elements of my diagram. This function uses dia.Element.prototype.clone internally.\nThe best solution for now, that I could come up with is sth like this:\n```\nconst originalUuid = overrideUuid();\nconst clonedSubgraph = process.asGraph().cloneSubgraph([cell], { deep: true });\nrestoreUuid(originalUuid);\nfunction overrideUuid(): () => string {\n  const originalUuid = joint.util.uuid;\n  joint.util.uuid = () => copy_${originalUuid()};\n  return originalUuid;\n}\nfunction restoreUuid(originalUuid: () => string) {\n  joint.util.uuid = originalUuid;\n}\n```. ",
    "rohit-ravikoti": "Okay perfect! I was able to use that event to detect if it was clicked. How about mouseover a magnet?. Okay, makes sense. Thanks!. ",
    "EmaSciacca": "I'm using link.set('vertices', [{ x: 100, y: 100 }]);. Using g.Point doesn't resolve this issue. js-fiddle-link\nEven thought the code in this JSFiddle follows the same pattern of  the one I use in my application, the behavior obtained is slightly different with respect to the one described in the issue. The vertex inserted initially in the model is drawn. However, if you try to move it, it is drawn in its new position only after a change is made to the paper (an element is moved, a vertex is added etc). Behavior for vertices inserted by clicking the link on the paper is regular. These vertices are added to the link model in the callback subscribed to the event change:vertices in order to make them persistent with respect to paperReload() function. However, after the execution of this function, the first vertex is still not behaving normally while the other ones can be moved correctly.\nSo, in both the case described in the original post of this issue and the one in JSFiddle there seems to be a mismatch between the link cell and its view.\nWhat could the cause of this mismatch be? \nAm I adding the first vertex to the model in a wrong way?\nAm I updating the link cell in a wrong way?. Ok, I tried your solution and using let converted_string = JSON.stringify(my_vertices_object_array) and then link.set('vertices', JSON.parse(converted_string)) solves my issue. \nThanks for your help.. "
}