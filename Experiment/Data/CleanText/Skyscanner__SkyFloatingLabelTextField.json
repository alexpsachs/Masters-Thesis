{
    "gergelyorosz": "@wolffan  I wonder if we can write a test that crashes in the original case, and not with the fixed one?\n. @intonarumori this one good for a review.\n. @Dershowitz011 thanks for the PR! Just one tiny comment on specifying the language for Objective C, and then good to merge.\n. :boom: thanks very much!\n. Thanks for sharing your use case. I see this as something valid that the control should either support out of the box, or allow some simple extensiblity (e.g. subclassing) to achieve.\nI'm thinking of whether introducing the showErrorMessageOnEmptyText would still keep the API generic enough. Another option would be to allow overriding e.g. the titleVisible property, where a subclass can change it as they see fit.\nAnother issue that came up - as I was testing your proposed solution - is that currently the textfield clears the error message when it gets focus (== becomes the first responder). This also feels wrong to do for this specific case - you should be able to create a textfield with an error message, and show this message from the start, when it's first displayed.\nI'll do some more playing with the code to see if there's a simple way we could support this.\n. Very true! Good point - I'll look into fixing both at the same time. I'm still a bit unsure about donig it with a property or subclassing - my gut tells me you shouldn't have to subclass to be able to support this use case.\nI'll create a patch for this and mention you as well, so you can take a look as well.\n. It did feel wrong to me to add a new property to support this edge cases.\nIn the end I reviewed how the error message clearing works - and what felt really wrong is why there's some \"magic\" clearing in the first place. If a developer sets the errorMessage, I would expect that to be visible until it is cleared.\nSo I ended up solving this issue you've experienced by removing this \"automatic\" resetting of errorMessage, as well as addressing the things you've mentioned (like the frame not calculating). This is the PR for the change, and hopefully it will be merged soon, with a new pod version coming out.\n. This issue should be fixed in v1.2.0. Please let me know if you still see any issues, and I can reopen this. Closing this one for now.\n. Thanks very much for noticing and fixing @AndrewSB!\n. Closing this PR, with the other PR upgraded to XCode 7.3 already. Thanks @Dershowitz011 for raising this!\n. Thanks for the detailed description! This is definitely unwanted behaviour. Let me look into if / how this can be prevented (or fixed).\n. Yes, you're right that it's not good practice to manually invoke the UITextField delegates. We originally did this to support a bit convoluted use case around resetting the errorMessage.\nIn this PR I've addressed this issue - which should fix the blinking. Once reviewed, tested and merged, I'll create a new version for the control.\nThanks again for taking the time to raise this issue!\n. Thanks for the fixes!\n. @ahmad-atef +1 for the suggestion by @intonarumori . If you execute the following code, the font should be changed:\nmyTextField.font = UIFont(name: \"Verdana\", size: 20)\nI just tested this code, and the main text is changed. Please let us know if this works for what you'd like to achieve.\n. Closing this issue - please let us know @ahmad-atef if you couldn't set the font size using the provided workaround.\n. Hi @zdenektopic! We created this control to make text input easier - essentially an extension to UITextField. UITextView is for text displaying: I don't see the use case for creating something similar there.\nA lot of the functionality added on top of UITextView applies when having a keyboard. E.g. the placeholder disappearing, and the title changing when typing text, or the style being different when the textbox has focus, vs when it does not. With UITextView these use cases don't exist quite like this.\nWhat problem are you looking to solve with a customized UITextView? What functionality would you expect from such a component?\n. Thanks @intonarumori, my bad on missing the editing part. So the use case would be for multiline text then, which is fair.\nI think it's a reasonable request - the unfortunate part is that most of the code would have to be re-implemented and tested, both for the version without, and the one without icons. I can't see us adding this in the immediate future, but keeping this request open, so we get around to this.\n. I'll close this issue as there is not an immediate plan to add UITextView support. I do agree it would make sense though, however I see this being very much down the line - not the least because at Skyscanner we're only using the UITextField version of this control.\n. Superb change @pichirichi, thank you for contributing them back! I only have two small comments. Would you be able to address those please - and I'll be happy to merge.\n. @pichirichi of course! Please feel free to change that - we wrote the tests without taking localization into account. Thanks very much for the improvements you're making! \ud83d\udca5 \n. All looks good, merging. Thanks a lot again @pichirichi for this excellent change! \ud83c\udf89 \n. Superb, thanks very much for the fix! \ud83d\udc4d \n. Seems like the project compiles with Swift 2.2 as well (with XCode 7.3). I say this is good to merge then. Agree @wolffan ? \n. Thanks for this fix @Peterek! All looks good: merging.\n. Thanks for both reports. I've started to look into this and am working on a fix. It seems the root of the issue is that in the current implementation there's a titleVisible property and an isTitleVisible() method - that sometimes return different values. \nAlso, when highlighted is set to true, the title is shown for a short while. I thinks this latter behaviour might cause the issue. I'm still investigating, and looking for a fix that would make the control more straightworward (both for the implementation, and the API).\nHopefully I'll have a proposed fix in 1 or 2 days.\n. @danlozano thanks for the report. We've just very recently fixed this, and I've created a new release, 1.2.1. If you upgrade to this one, this bug should no longer be present.\n. Hi! This use case is not supported out of the box - however you can definitely do this by extending the control. You could either subclass SkyFloatingLabelTextField, and draw the icon to the right size. You can check how displaying an icon on the left side is implemented in SkyFloatingLabelTextFieldWithIcon (see source here.\nAlternatively, you could also try subclassing SkyFloatingLabelTextFieldWithIcon, and move iconLabel to the right side. You would need to override layoutSubviews, textRectForBounds, editingRectForBounds and placeholderRectForBounds to place the textfield to the right location (and the right size).\nPlease let me know if this helps. We designed the control so when subclassing, you can change the layout programmatically, like in this case.\n. That's a good point @intonarumori . @reeichert - would you mind letting us know if you are using the textfield with right-to-left text (e.g. Arabic or Hebrew), or with left-to-right text (e.g. English or Spanish).\nShowing the icon on the other side with right-to-left, as Daniel said, should be something we could add to the control. Configuring which side the icon is displayed is also potentially something we could add by just adding an additional property to specify the icon location in SkyFloatingLabelTextFieldWithIcon.\n. @pichirichi good point on those potential values, as well as thinking of the \"force\" options. I'll give the implementation a go the next few days \ud83d\udc4d \n. Thanks @pichirichi . I'll try to squeeze some time in by tomorrow as well. Sounds like it will be a simple change then! (Just finishing another fix first)\n. Closing as this PR needs some more work.\n. Hi! In ShowcaseExampleViewController.swift at line 82 if I add this line:\nself.emailField.text = \"Hello World\"\nThen I see the text being set as expected:\n\nCan you share an example on where you can't get the text property to work? Without being able to reproduce it, I won't be able to help unfortunately.\n. I'll get this merged soon - see if I can get a reviewer. Otherwise I'll do the merge.\n. Nice change! Would you mind adding a unit test for this change as well, that verifies this value is set after initialization? You can follow the naming of the tests as the existing ones in SkyFloatingLabelTextFieldTests.swift\n. Let me give a hand with this. The tests look good, nice job with those! I'll see if I can repro what's going on...\n. I just checked and the test_whenSettingInitialTextAligment_thenTextFieldTextAligmentIsNatural test case fails on the build machine. Locally the test passed on my machine, running on iOS 9.2 (with XCode 7.2), however the build machine is running iOS9.3 (with XCode 7.3). \nI'm getting this installed locally and will check why the test fails - perhaps the default value is different on iOS 9.3? I'm not sure.\nOnce we can repro the test failing locally, it should be straightforward to fix it.\n. If iOS8 default RTL support has a bug, I think it's valid for us to fix it (so people won't have to do this). The point of using this control would be to not have to do this bugfixing for others using this control - may that be iOS8 issues or not.\nIf we can limit te alignment setting to iOS8, I would be happy with this \ud83d\udc4d  - as it would also make it easier to drop this config, once we remove iOS8 support later down the line.\nThanks @pichirichi for being super helpful with this one!\n. thanks for going to this depth for both of you.\nI'm happy to fix this issue - together with the other reported RTL issue as well, and perhaps @pichirichi you could review this fix, to make sure the changes I did are correct? I can issue a PR later today - at least I'll also get my head around RTL.\n. Thanks for this improvement @amarcadet ! \ud83d\udc4d \n. Hi @arashdoescode . Your code is validating all of the textfields, whenever any one of these are changed. If you only want to validate the textfield that is being changed, you can follow the ShowcaseExampleViewController.swift example and check the instance of textField that is being passed in textFieldDidEndEditing().\nSo in your code:\n```\nfunc textFieldDidEndEditing(textField: UITextField) {\n    if (textField == firstnameTextField) {\n            // firstnameTextField has been changed. Validate this field\n            if (firstnameTextField.text) == \"\") {\n                        firstnameTextField.errorMessage = \"You must enter your firstname\"\n            } else {\n                  firstnameTextField.errorMessage = \"\"\n            } \n    }\n    else if (textField == lastNameTextField) {\n       /* And so on... */\n    }\n}\n\n```\nIf you want to validate on every single type, then use func textField(textField: UITextField, shouldChangeCharactersInRange range: NSRange, replacementString string: String).\nAlso, validating SkyFloatingLabelTextField can be done exactly the same way as validating UITextFields. We deliberately had SkyFloatingLabelTextField inherit from UITextField to make common tasks like this easier. If you google around, hopefully you'll find solutions that will also work.\nPlease let me know if this helps.\n. Perfect, thanks for the improvement @acecilia \ud83d\udc4d !\n. @intonarumori good point. I've changed this to editingOrSelected instead.\n. thanks for noticing the missing language specifier :+1:  In this case, this code is Objective C. Could you please change this to objc over swift?\n. I would suggest removing this commented out line.\n. These changes are made by Interface Builder when frames get out of sync. I wonder if those frames could be updated - or changes to this file could be undone? Seems to me that apart from IB updating the xib, no other changes have happened.\n. @pichirichi the changes to this file then were probably made by XCode. (it happens sometimes when opening the project in my experience). Would you mind excluding this file from the PR / or reverting it to the original version, please? (as there are no real changes made here)\n. @pichirichi ah - in that case - don't worry! I'll sort this later - it's fine to go in like this \ud83d\udc4d  All good for this change then.\n. +1 on what @RuiAAPeres said. Could you remove this empty else {} please, and it will be good to go \ud83d\udc4d \n. ",
    "wolffan": "This is a bot!\n. @Dershowitz011 thanks for the PR! \nUnfortunately this improvement makes tests break, we need to udate tests before doing this (or while we do this).\nMind opening an Issue for that?\n. Hello all.\nApologies, it's not \"exactly\" holiday \ud83d\ude35. I'll dedicate some time this week and look at the swift 3 PR's.\n. @hyerra Thanks for your time on this.\nI'll use the above PR for swift that has all checks green. During the day I'll do the review + merge\n. @joshpc Thanks for your time. I'll use the existing PR that has all checks passing for updated swift 3 version\n. @shwetsolanki I'll close this one as I'll prioritise the other PR that has all checks failed.\nThanks for your time on this!\n. @DenHeadless  Hello! Thanks for this. I haven't had time to look at this.\nMy plan is though: migrate first the 2.3 PR -> https://github.com/Skyscanner/SkyFloatingLabelTextField/pull/69\nThen do a major version changes for this one.\nNot sure I'll have time to do both today. But It's going to happen.\nThanks for your work and patience\n. Merged 2.3!\nCan we resolve conflicts :) ?. We'll merge the other swift 3 branch, thanks @mcousillas6 . we'll merge the other swift 3 branch, thanks for the work @jeksys . Hello @okipol88 could you explain this one?\n. ",
    "coveralls": "\nCoverage increased (+1.2%) to 100.0% when pulling d1c823a4f52fcb8869adc7967fb35d0fc6ac120e on reimplement-with-subclassing into e74f4e192a30fad8251ae92da37d48b30a83213b on master.\n. \nCoverage increased (+1.2%) to 100.0% when pulling be472f187eee0f8c1f1672716fe37243ebf3e5c4 on reimplement-with-subclassing into e74f4e192a30fad8251ae92da37d48b30a83213b on master.\n. \nCoverage increased (+1.2%) to 100.0% when pulling 447a1102aa1427930d1bce2f51be732e6be7d622 on reimplement-with-subclassing into e74f4e192a30fad8251ae92da37d48b30a83213b on master.\n. \nCoverage increased (+1.2%) to 100.0% when pulling 4799e7eebaa21a180b80014075f6c7510929c07c on reimplement-with-subclassing into e74f4e192a30fad8251ae92da37d48b30a83213b on master.\n. \nCoverage remained the same at 99.532% when pulling 3bf1577c0c2d2b7a6534db675addcd7a639f5e2b on javiertejero:patch-1 into 5f06088a1703b4d2fc8e1805d4730020cac1f29c on Skyscanner:master.\n. \nChanges Unknown when pulling 8df113b38488a7174b11e43b218b4d80f97508eb on Dershowitz011:patch-1 into * on Skyscanner:master*.\n. \nCoverage remained the same at 99.532% when pulling a5874572829d67d0f79c8b82330411ae371a724d on AndrewSB:patch-1 into 02d6b71e2e9b0e6a65d6c0b30deafc9b5f50fef0 on Skyscanner:master.\n. \nCoverage remained the same at 99.532% when pulling f7a213e425a197d10880182f801fc238c46f4d8d on highlighted-bugfix into 739843a0d4da1057acbf1bcdaf7e89c56b08a339 on master.\n. \nCoverage increased (+0.5%) to 100.0% when pulling 1d79c651dff06fa1a0c6298d8bb93216bb8ecd49 on clean-up-errormessage-behaviour into e7e877a1aade779531bdaebbb166076638953209 on master.\n. \nCoverage increased (+0.5%) to 100.0% when pulling 6c802220679ad8e71807a8345b1dbd764c2dba0f on clean-up-errormessage-behaviour into b653b56844e621599f9e594ed0cc6da8015525ed on master.\n. \nCoverage remained the same at 99.532% when pulling af5b4857df839cb225145676009208683caa757b on deandungo:master into e7e877a1aade779531bdaebbb166076638953209 on Skyscanner:master.\n. \nCoverage decreased (-0.8%) to 99.174% when pulling fc3e585799ef7153e29f850c785e826966201563 on pichirichi:master into 20734bb7545959fe81cc624a275177bba1a1e306 on Skyscanner:master.\n. \nCoverage decreased (-0.8%) to 99.174% when pulling 3ad73156368a8b83860ccc4b6c468d9b76de6e82 on pichirichi:master into 20734bb7545959fe81cc624a275177bba1a1e306 on Skyscanner:master.\n. \nCoverage decreased (-0.8%) to 99.174% when pulling 76090f0a9d5a12b7fea6f77d91c470cd9670a65a on pichirichi:master into 20734bb7545959fe81cc624a275177bba1a1e306 on Skyscanner:master.\n. \nCoverage remained the same at 99.174% when pulling 1452eeafbce84153034dd0d57ef47e59eb946b7c on pichirichi:master into b69d37b48cef6c524e6fb2e45bffe07f6c765148 on Skyscanner:master.\n. ",
    "intonarumori": "Thanks @javiertejero , merging.\n. In the first implementation we had a default behaviour for text clearing:\n- you can set the error message\n- once the text is changed or cleared, the error get's cleared too\nTo create a custom behaviour we had clearsErrorOnTextChange property. If set to false the error wouldn't be cleared automatically and you could handle it yourself.\nI liked this setup since most of the time this is what you want and you don't have to implement it for every single text input, it's easier for newcomers. For more complex behaviour you could always turn off the clearsErrorOnTextChange flag.\nLet me know what you think.\n. Updated build script to Xcode 7.3 and fixed the build here: https://github.com/Skyscanner/SkyFloatingLabelTextField/pull/35\n. @ahmad-atef Since it is a subclass of UITextField you can use the regular font property to set the input text font.\n. @gergelyorosz  UITextView is for displaying and editing multiline text.\nIt would probably be a little bit more complex because of scrolling text, but essentially all of our implementation could be applied to UITextView.\n. I can confirm that when textfield is selected the title first animates in then immediately animates out.\nTo reproduce you can use following setup in the first example:\n\n. Maybe we should consider accomplishing the icon placement with UITextFields leftView property.\nIn right-to-left context UITextField places leftView on the right, so we could achieve this with very little effort.\nFrom the documentation:\n\nYou can use the left overlay view to indicate the intended behavior of the text field. For example, you might display a magnifying glass in this location to indicate that the text field is a search field. The left overlay view flips automatically in a right-to-left user interface.\n. Why don't we just not set the text alignment explicitly and rely on the system?\niOS will set the alignment for both the label and textfield correctly, and it will hardly change in the future.\nIt seems like we are trying to fight the system here.\n. I think it's a better idea to just let iOS decide the default for us, and don't explicitly change it in our implementation. This way we will always be consistent with the rest of iOS.\n\nIf you want to get a specific alignment you can always do that in your own setup code, or in a subclass, but in general we shouldn't add this to the base implementation.\nTo me it seems that if we do this we will just get the proper alignment out of the box, without adding any logic.\nEdited: have to check your use case, it seems like a valid bug. My comment is mostly about setting alignments initially, maybe bug occurs in update logic.\n. My idea here is to keep additional logic to a minimum while following iOS behaviour as close as possible.\nRight now I'm looking into removing all explicit alignment settings. This way we end up with the same behaviour that you would have with the basic UILabel, UITextField classes.\nDo you have to do workarounds with those classes?\n- if not, then my idea should work, maybe there's a bug somewhere, but I would rather fix that than to add explicit setters\n- if yes, then this class is no different than the rest of iOS, so whoever works with RTL would probably know about what to do since they have to do it already with the base classes.\nIf you could provide a sample code of what you are trying to do and your workaround, I could understand it better, thanks.\n. @pichirichi thanks for the additional info.\nCould you please link those radars, so we can add it here for future reference?\nIn the meantime I'm testing in iOS8 simulators and check the alignments.\nIf there are indeed iOS8 bugs, then yes let's add the fixes and link to the radars for reference in the code.\n. @pichirichi thanks, unfortunately I cannot find it on radar, maybe it was deleted since.\nIs there a Stackoverflow or similar answer about the problem and the fix that we can include?\n. I did couple of tests with the iOS8.3 simulators and I see multiple issues with our RTL implementation:\n- setting UILabel text alignment to Natural doesn't have an effect on iOS8.3.\n  Based on this and the radar issue the title label is always left aligned, the fix in this PR probably has no effect on the title label.\nprint(label.textAlignment.rawValue) // 0\nlabel.textAlignment = .Natural\nprint(label.textAlignment.rawValue) // 0\n- I set the simulator language to Arabic, but our input alignment was still Left-to-Right, so our current alignment setting is probably wrong:\n  \n- Then I disabled the content of updateTextAligment and set self.textAlignment = .Natural.\n  In this case the alignment seemed to be good for the input.\n  \nTo summarise:\n- self.textAlignment = .Natural is sensible, we can use it for iOS<9.0\n- we should revisit our current RTL implementation, especially updateTextAligment and UIApplication.sharedApplication().userInterfaceLayoutDirection\n- titleLabel.textAlignment = .Natural, in my tests this didn't have any effect, so we should investigate it more.\n. Ok, I'm starting to get confused.\nMostly because a simple UITextField with text alignment set to Natural did change to RTL with the Arabic setting.\n. There are multiple use-cases for a UITextField to be RTL:\n- LTR layout, RTL language (ex. using Arabic with the example project)\n- RTL layout, RTL language (ex. using Hebrew with the example project)\n- In both cases iOS would use RTL for the textfield, but in our current implementation on master we determine the direction by using UIApplication.sharedApplication().userInterfaceLayoutDirection == .LeftToRight and setting the alignment explicitly. We should rework this.\n- I tested your PR code, and titleLabel.textAlignment = .Natural has no effect on iOS8.3.\n  You can test it after the setter it will still be .Left. We can remove this line.\n- self.textAlignment = .Natural is sensible, please add the condition for iOS8 and move it to init_SkyFloatingLabelTextField.\n. @pichirichi you are 15 commits behind master right now.\nI think you will see the same once you are up to date.\n. Can we get some context of why we needed this, can we link an issue?\nThe preferred way to check API availability is respondsToSelector not hardcoding ios versions, is there any reason not to use it here?\nhttps://www.raywenderlich.com/42591/supporting-multiple-ios-versions-and-devices\n. @RuiAAPeres Thanks for the link, seems less articulate to me but you are right this is the way forward.\nShouldn't we just use it for the whole method then?\nOnly having the super call in the condition seems weird to me, especially since super is required to be called.\nUsing it on the whole func would articulate the intent better imho.\n@available(iOS 8, *)\noverride public func prepareForInterfaceBuilder() {\n        super.prepareForInterfaceBuilder()\n        self.selected = true\n        _renderingInInterfaceBuilder = true\n        self.updateControl(false)\n        self.invalidateIntrinsicContentSize()\n    }\n. @lifemoveson : SkyFloatingLabelTextField is a subclass of UITextField, so you can use it the same way you would use a simple textfield.\nWhich of these delegate methods did you implement? (https://developer.apple.com/reference/uikit/uitextfielddelegate)\n. +1000\n. @Downstairz \nCheck the titleFormatter property. By default it will convert the given string to uppercase, but you can set it to anything you like.\nhttps://github.com/Skyscanner/SkyFloatingLabelTextField/blob/master/Sources/SkyFloatingLabelTextField.swift#L144\n. @Rufy86  If you add the source files to the project you shouldn't need any @imports.\nIt will be compiled just as all of your other classes.\nPlease create a new project, add the source files to that project and try to use it without imports. It should compile and work without any issues. But if it doesn't please send me that clean project so we can take a look.. \n@Rufy86 \nHere's the fixed version:\nprova.zip\nI had to change two things:\n- when you use Swift code from Obj-C you have to import the automatically generated header file which in your case is prova-Swift.h. Not to be confused with the bridging header which is used when you want to use Obj-C code from Swift\n\nin the build settings I had to change Use Legacy Swift Language Version from yes to no since SkyFloatingLabelTextField is a Swift 3.0 project.\n\n. \n@Rufy86 If you feel that guide is missing nothing stops you from writing it and contributing yourself.\nAfter I fixed your example and gave you advice about Swift/Obj-C interoperability I believe you have all the information needed.\nPlease be proactive and contribute, this is an open-source project.. Hey @ryanwaggoner , thanks for taking the time to contribute.\nI'm afraid we cannot accept the PR in the current form.\nIf you look at the files changed tab it's evident that you have switched to space based tabbing.\nIt's impossible to see the real changes this way, basically the whole file is one block of change.\nWould you mind fixing this issue?\nEdit: sorry, the other way around, you are using tabs while the project uses spaces.. \n@ryanwaggoner  Thanks.\nOne more thing, let's use titleFont in createTitleLabel like we do with titleColor.\n. @ryanwaggoner  Thanks.\nDo you think we could get rid of the change in the project file? It seems you just disabled tab based white spacing for that one file.\nIt would be nice to get that removed and really just have the changes in the SkyFloatingLabelTextField class.\n. @ryanwaggoner Great, many thanks.\nI have to double check what happens if you change the titleFont to a smaller or larger one, and how the title label font height might affect the placement of other view components.\nThis might take a while so I will get back to you with my review and hopefully PR approval.\n. @ryanwaggoner \nI've been looking at our test cases and just realised that you can set the title font already by using textField.titleLabel.font = yourCustomFont. Maybe that solves your current use cases and you can use it straight away.\nI have to do some more investigations to determine if leaving titleLabel exposed or adding the titleFont property is a better choice in the long term. I get back to this PR with my findings.\n. @bennokress Thanks for the contribution.\nYour argument is valid, we should add @discardableResult to be consistent with the iOS SDK.\nMy personal preference would be to move @discardableResult to a separate line for readability. I looked around on Github and this seems to be the case with the majority of Swift developers as well.\nWould you mind doing that change?. @bennokress Thanks \ud83d\udca5 \ud83d\udc4d \n@k0nserv I think this one is safe to merge.\n. Thanks guys for reporting, I can take a look.\nIf you can provide a sample project to reproduce it would make it much faster to track it down.\nThanks.. Calling layoutIfNeeded is usually needed when you want to animate constraint based layout changes. It's usually not required before regular UIView animations.\nCan you provide a stripped down example to demonstrate the problem?\n. Can you provide an example project / code to demonstrate the issue?. - Subclass, then in the init overrides set the titleFormatter to your desired code.\n- Use your own subclass in your code. I'm not so sure about altering the original textfield behaviour here.\n. I agree, and the previous code was even worse, but since I linked to the source and this is not mission critical code I think this is the easiest way for us.. Actually what you suggest would also be some type of regex and would also accept invalid emails. How about I expand on the NOTE explicitly saying that this regex is not suggested in production use and is for demonstration purposes only.. Added the extended note explaining the regex validation and a better description of the source and further reading link.. ",
    "Dershowitz011": "Done.\n. ",
    "ffittschen": "I just discovered that the positioning of the errorMessage would also be wrong, because the titleLabel.frame gets calculated using self.hasText() instead of self.editingOrSelected\n. ",
    "dcaunt": "Thanks for the quick response. I've looked into this briefly and I'm not sure that manually calling the UITextField delegate methods is a good idea in general, because you can't be sure what side effects will occur as a result. \nIn my brief testing, adding a target to each field, listening for .EditingChanged events and performing validation there seems to avoid the flashing issue, but I wonder if you're aware of problems this approach might have.\n. I've tested this against my use case, and it appears to be working nicely, so I'll close this issue. Thanks again!\n. ",
    "justinswart": "Something about the change in 1.2.0 vs 1.1.1 is causing the placeholder text to appear and immediately disappear on becomeFirstResponse(). I've rolled back to 1.1.1 for now, seems to fix it.  No other code changes on my side, will investigate further soon as I have a chance.\n. ",
    "ThoseGuysInTown": "Any plans for this yet?. Never mind! Setting constraints up fixed this. Good thing I did, I almost just used another lib. \n\n. For those that want to change the title font go to \"SkyFloatingLabelTextField.swift\" in the pod files \nand at line 287 set it equal to self.font or whatever font you want to use. \ud83d\udd25. ",
    "k0nserv": "To my knowledge we are no logner actively using SkyFloatingLabelTextField internally and I as the primary maintainer don't work on iOS in my primary role. I'm open to this being contributed from the community, but it's unlikely we'll implement it ourselves.. Closing due to being outdated. I will review the current RTL implementation as per the above. This is a 2.3/2.2 issue I believe? It will be fixed in the next version since #69 has been merged now.. Hey everyone, sorry this has taken such a long time. This project lost its maintainer when gergelyorosz left Skyscanner, but me and @wolffan are looking at releasing the Swift 3 version in the next few days. We are also likely to add someone from the community as a contributor to reduce dependency on the two of us.. 1.3.1 is out with Swift 2.3 support. Focus now is to get the changes in #67 released as 2.0. #67 is merged now, if someone wants to point their pod version at master and check if that works well that'd be great. I'm preparing the 2.0 release . That's 2.0 released with Swift 3 support. Please raise any bugs as a new issue.\n\nhttps://cocoapods.org/pods/SkyFloatingLabelTextField. Yes since it inherits from UITextField it supports everything that a UITextField will do including resigning first responder. Hey @slxl this looks good. We are merging #67 into master soon so it'll probably have to be updated to Swift 3 after that point. @slxl #67 is merged now if you wanna rebase this. @slxl Ping on that rebase :). No problem the same on my part :). Closing due to inactivity and the answer from @intonarumori . Hey @DenHeadless can you rebase this on master?. I'll run them locally too, restarted travis as well. Might be a fluke. Right tests, pass locally for me as well. @bogren might have fixed the travis issue in #76 if you wanna try and rebase again. That did it, thanks @bogren \ud83d\udc4d  Just gotta finish up the work on 2.3 then we can merge this. Great thank you for all the help @DenHeadless . We can always rebase ourselves, no need to do it . Massive thanks for this PR @DenHeadless :). Yeah, I'm working on that at the moment. See #81. I don't believe so currently. My assumption is that the label container is only as big as it needs to be to fit the label and thus alignments have no effect. I've not looked at the code though so just speculating now. You are talking about the label right? I can center the placeholder and text with \nswift\nfield.textAlignment = .center\nWithout value\n\nWith value\n\nHere the label is not aligned with the rest of the content which is the problem\n. Is this what you are looking for?\nswift\nfield.textAlignment = .center\nfield.titleLabel.textAlignment = .center\n\n. Great, happy it helped :). Thanks for the contribution @okipol88 \ud83c\udf89 . See #55\nClosing this so we have a single issue to track this.. I'll have a look at this at some point, but if you wanna send a PR after we merge the Swift 3 branch in #67 that'd be awesome . Woho \ud83c\udf89 . @intonarumori you are on here too. Are you okay with that or do you wanna be removed?. I'll merge this for now, please ping me if you'd like to be removed @intonarumori . Swift 3 is only supported under Xcode 8 is that correct? Since master will be Swift 3 only after we merge #67 this PR seems reasonable then. Otherwise we should consider matrix builds.. This should be fixed in 3.1.0. No reason to increase the minimum deployment target IMO.. This would be a breaking change and since we've just released a major version I want to avoid releasing another one anytime soon. What you can do however is the following\nswift\ntextfield.titleFormatter = { $0 }\n. Cool, if this is a common pattern in your app you can add a subclass or extend the control with a factory function so you don't have to repeat the logic everywhere. I'm not sure on this. I haven't read the code well enough to know if this should be possible or not. My gut feeling from the quick look I have had is that it's not changeable at the moment. I can have a thorough look when I find the time, but feel free to look at the code yourself. If it's changeable it should be in here https://github.com/Skyscanner/SkyFloatingLabelTextField/blob/master/Sources/SkyFloatingLabelTextField.swift. Glad it worked out \ud83d\udc4c\ud83c\udf89. The placeholder in the field itself? . Have you tried setting the placeHolderFont property?. Hmm, I'l have to have a try later then. @bogren any ideas?. This should work out of the box with just\nswift\ntextField.secureTextEntry = true\nor\nObjective-C\ntextField.secureTextEntry = YES;\nin Objective-C. My bad in Swift 3 it would be \nswift\npasswordTextField.isSecureTextEntry = true. Could you include some more error output and code to illustrate the problem?. Is this actually causing any problems? From this Stackoverflow question it seems like it should be causing any problems and is only a harmless log message. Can I see your code? It might be a different problem. How are you integrating the project? Are you using CocoaPods? Can you paste your config here please.\n@bogren any ideas?. @Rufy86 can you confirm that the fix from @intonarumori works?. We encourage the use of a package manager such as CocoaPods or Carthage. This is the reason that the instructions for manual integration are sparse, we expect people performing the manual integration to have sufficient expertise in integrating third party project to sort it out themselves. With that said we'll consider it, but I'd recommend you use a package manager instead.. Closing as #141 was merged. How are you integrating the project? I suppose you are using manual integration since you are getting errors related to the project file? If so can you verify that changing the value for release to NO solves the problem?. Thanks, I'll change that an issue a new release.. This just went out in release 2.0.1. Thanks for reporting and helping find the fix @vytautasgimbutas . I suspect this is due to the font not being found. I'm unfamiliar with it myself, can you create a small project that reproduces this?\n@bogren any ideas?. Fixes #95. Grat contriubtion, thanks @bennokress. Could you please rebase on master and add a change log entry in CHANGELOG.md following the general pattern in that file too.. No problem :)\n\nAdd it under the Master(Unrealsed) section. note I just added this so you will not see it in your fork until you've rebased\nNo I'll tag and release a version after the merge\nSo you need to make sure you are rebasing on this remote e.g Skyscanner/SkyFloatingLabelTextField not your own bennokress/SkyFloatingLabelTextField. You probably don't have this repo configured as a  remote. You do this with git remote add upstream git@github.com:Skyscanner/SkyFloatingLabelTextField.git. When you've added this repo as a remote you can run git fetch --all do fetch all changes from all remotes. Then on master run git rebase upstream/master, this should apply cleanly(if anything goes wrongs or looks weird just do git rebase --abort to start over). Finally your branch will have diverged from what is on bennokress/SkyFloatingLabelTextField so you'll need to force push to overwrite the remote. You do this with git push origin master --force-with-lease. Did you push your last commit? I can't see the CHANGELOG.md commit either. You can use the http git url for the upstream if you'd like. I prefer SSH urls personally.. > Sorry for causing trouble, I'm just really unexperienced with this. \n\nNot all, everyone starts out not knowing about things.\nYou just messed up the order of the add and the commit. You tried to commit before doing the git add. If you look closely it says \"no changes added to commit\".\nAlso don't use --force-with-lease unless you have just rebased or is required for some other reason. Force pushing is a destructive action, you are essentially telling the server that you know the result of the action will cause loss of data(which is fine when you are rebasing for example). You should be careful about force pushing in general, but it has some good use cases.. Brilliant \ud83d\udc4d Thanks for the contribution. Just released version 2.0.1 with this change. Thanks again @bennokress for the contribution, great job! \ud83d\udc4c. As @moogle19 identified the fix in #101 broke animations so I reverted it. I'll take a stab at investigating this case further and finding a fix that doesn't break animations . Closing due to inactivity. Feel free to reopen . Leaving this one to @bogren and @intonarumori . @bogren What are your thoughts on this?. Thanks for investigating @moogle19. We should revert this change then?. Great work @intonarumori \ud83d\udc4d . The NOTE: was a good idea and this is still a big improvement over what we had before. \ud83d\udc4d . Hmm. I wonder if I couldn't get one of our designers to create something small for this that is also on brand. I'll check tomorrow. There isn't currently any first party support for this, but we are open to PRs contributing it.. Is this the only pod you are using? See https://github.com/CocoaPods/CocoaPods/issues/6240 about issues that can arise when different libraries try to use different versions of Swift.. Glad it worked out! Best of luck with your app :). You can also put the swift version in .swift-version in the root of your repo and CocoaPods will pick it up.. I think this might relate to the fact that we explicitly set alignment rather than using natural alignment. Thanks for the PR @Mehrdadmaskull, can you retest against master?. The PR from @Mehrdadmaskull is merged and was released as part of 3.1.0. Please try this version. @bogren care to comment. I don't exactly remember the details of iOS localization anymore. Make sure the id matches the id of the textfield is all I can think of. That seems wrong yes. Is this behaviour documented anywhere ie only calling the completion block when the animation does complete?. I think we should still be calling the completion, but passing along the completed value in the event of a canceled animation. @bogren thoughts?. Cool, I have an in progress implementation of that. I'll finish it up tonight and release a new version.. This has been released as 3.0.0. Hi \ud83d\udc4b\nA few question to pinpoint the issue\n\nHow did you install SkyFloatingLabelTextField? \nIf you're using CocoaPods did you open <Project>.xcworkspace?\nHave you specified the module where the class is located?. Hmm. I'm unfortunately not at all familiar with Carthage, but I'll try and have a look at this. @bogren are you more familiar maybe?. This works for me. See the attached zip.\n\nI had to do a few things to make this work.\n\nAdd the copy files steps as described here\nMake sure the swift standard library embded as described here\nUse module SkyFloatingLabelTextField and class SkyFloatingLabelTextField in interface builder\n\nTestIssue111.zip\n. Does the project from the attached zip work for you?. @craigotis did you get it working?. Okay :) Best of luck \ud83d\udc4d . Resolves https://github.com/Skyscanner/SkyFloatingLabelTextField/issues/110. This will be released as 3.0.0 since it's a breaking change. That's a good idea for sure! I'll have a look at it at some point, but we're open to anyone contributing it as a PR.. There's an open pr for this now #118 . Fixed in #118 . Looks good :) Thanks for the fix. Thanks for the PR @z3bi I'll add a note in the changelog to credit you. Hi,\nYup M_PI is deprecated in 8.3. This was fixed in https://github.com/Skyscanner/SkyFloatingLabelTextField/pull/116 by @z3bi, but I haven't released a new verison with this change yet. However you should still be able to build as this is only a warning, you can silence all warnings from all pods with \nruby\ninhibit_all_warnings!\nin your Podfile or you can silence only warnings from SkyFloatingLabelTextField with\nruby\npod 'SkyFloatingLabelTextField', '~> 3.0.0', inhibit_warnings: true\nI'll release 3.0.1 after checking that there are no other changes required for Xcode 8.3. Brillaint work @mwfire. Thanks for the PR, I'm gonna have a look at it later today . Thanks @mwfire I'm gonna close this PR and perform the merge outside of git so I can clean up some of the commits and resolve the conflicts. Hey @kmuddapu, \nunfortuantely it's unlikely that we'll ever support UITextView. . At most we can consider a PR that implements this, but honestly it might be better to make a separate project instead.. Hey @maasim94 you're right that variable has not been opened up. I will do that now :). I'll release a new pod version. Hi @ezar! You sure can \ud83d\ude80\nswift\ntextfield.titleFormatter = { $0 }\nor if the source title is uppercase\nswift\ntextfield.titleFormatter = { $0.lowercased() }\n. I'll release a new version soon. Just waiting for #118 to be merged first.. This is great \ud83d\udc4d I've been thinking about swiftlint recently and this looks like a good step in that direction. Feel free to add it to this PR if you feel inclined, otherwise I'll do it on the back of your work. . Also please credit yourself in CHANGELOG.md under the master section. I think I prefer this style\naddErrorButton?.setTitle(\n    NSLocalizedString(\"Add error\",\n    tableName: \"SkyFloatingLabelTextField\",\n    comment: \"add error button title\"), for: .normal\n)\n@bogren opinions?. This is how I would write it\naddErrorButton?.setTitle(\n    NSLocalizedString(\n        \"Add error\",\n        tableName: \"SkyFloatingLabelTextField\",\n        comment: \"add error button title\"\n    ),\n    for: .normal\n). Thanks a bunch for the PR @moogle19 . Yeah looks good, thanks a lot @Mehrdadmaskull  \ud83d\ude00. Hey @Mehrdadmaskull I had not gotten the time to release yet, however I've just done so. Give 3.1.0 a whirl and see if that doesn't work :). @iamir4g You need to have your phone in Persian for RTL to kick in . It's already optional as you can override the titleFormatter to return whatever casing you want\nswift\ntextField.titleFormatter = { $0 }. No it's not currently possible directly via storyboard. You can create a custom subclass that overwrites titleFormatter and use that in Storyboard however. Neat totally missed those. Thanks \ud83d\ude4f . Hey @Iniyarajan, what version of SkyFloatingLabelTextField are you using? It shoud be compatible with 3.1 already. What line is the above error on?. swift\ntextfield.placeholderFont = UIFont(name: 'YourFont', size: 16)\nSee this SO answer for instructions around how to add custom fonts to your app. https://stackoverflow.com/questions/24708401/how-do-you-stylize-a-font-in-swift. Hey,\nTo better understand what's going wrong I need to know how are you integrarting SkyFloatingLabelTextField in your project? . When you used CocoaPods did you remember to open <Project>.xcworkspace after running pod install instead of opening <Project>.xcproject? I'd recommend you stick with CocoaPods it'll be simpler for you in the long run.\nI see in your screenshot that you now have both pods and the source files integrated which could create problems in itsel. What's the full error when it crashes?. I don't see an import statement for SkyFloatingLabelTextField in there. If you add\n@import SkyFloatingLabelTextField\nDoes that solve it?. Are you sure you've connected the outlet correctly that looks like the value is nil. I'd put a breakpoint and verify that the value gets set correctly. There are a bunch of other things that could be wrong. Did you specify the module when setting the class in IB for example? \nI made a small example project that integrates SkyFloatingLabelTextField using CocoaPods and then connects a SkyFloatingLabelTextFieldWithIcon via IB like you are.\nTestIssue132.zip\n. @Iniyarajan did you resolve this?. What method of integration are you using?. Can I see your podfile?. TestIssue134.zip\nWorks for me..\nWhat version of Xcode are you using? What's your base SDK and deployment target?. @Maryom How are you getting on?. Can you reproduce it in a small example project?. I think we should start setting textAlignment to NSTextAlignmentNatural everywhere and get rid of the custom RTL stuff. Since iOS 9.0 this should be the solution. I can look at this, but if anyone wants to PR it I'd be happy. Thanks for the contribution @xuaninbox . Yeah this is definitely something that could be worth considering. We need to keep ability to use UITextFieldDelegate directly in combintation with validations however. \nSomething like this with a few built in and the ability to add new ones yourself maybe?\nswift\nprotocol Validator {\n  bool isValidForValue(value)\n}\n. This seems to contain a lot more than what you've stated in the PR title/description please only include the revelant changes to the README.md. I don't understand? From the title I only expect usage instructions for disabling upper casing to be in the PR. However I see a bunch of other stuff including a whole new class SearchTextField. I'm sorry to say that suggestions feels outside the scope of this project. I don't think I will merge these changes. Instead I'd suggest you make it a generic extension that can work with any UITextField or subclass thus making it possible to use alongside SkyFloatingLabelTextField. Alternatively use it from your fork.\n. Looks good @rubenadlm can you add an entry to CHANGELOG.md under the master section crediting yourself and explaining the change?. Thanks a bunch for your contribution \ud83d\ude04. Not directly, but it can be achieved with a subclass. I'll have a look at this soon, but if you can upload a reproducible case that'd be helpful. I can't reproduce this albeit in Xcode 8.2.1. . @adrianodiasx93 Did you make this work?\n. Thanks for raising that doesn't seem corret at all. I wonder how it ever worked \ud83e\udd14 . No not out of the box. You can achieve it via subclassing though. Have a look at https://github.com/Skyscanner/SkyFloatingLabelTextField/blob/master/SkyFloatingLabelTextField/SkyFloatingLabelTextFieldExample/Example4/IconTextField.swift and adapt it to use a UIImageView instead of a UILabel for the icon. You are very correct :) Thanks for reporting that, I'll get it fixed. Yeah I suppose we should take all values from superRect?. Done. @bogren Does this look good now?. No it's not been resolved yet. More details here https://github.com/Skyscanner/SkyFloatingLabelTextField/issues/73\nWe welcome any PRs fixing it. Hey :) What's your version of swift, deployment target and xcode version?. and Xcode?. Does this help https://stackoverflow.com/questions/34225213/uiapplication-sharedapplication-not-available? . and this is a regular iOS app not an extension or module?. @bradlgray01 can you reproduce this with a blank project? I'm on 8.2.1. I'll update and report back. @bogren which version are you on?. Okay :) Please let me know if you figure it out :). I suspect this is not an issue with SkyFloatingLabelTextField, but your constraints causing this behaviour. There's very little code that deals with the outer bounding box of the field in SkyFloatingLabelTextField . Hi @kushaseum this looks like a question rather than a bug report/feature request. If it is one of those please fill out the template otherwise ask on Stackoverflow. Hey @hemangshah did you solve this issue?. Glad it worked all though I recommend you use CocoaPods for integration instead of doing it manually. This would not be backwards compatible with Swift 3 right? Xcode 9 can compile both Swift 3 and 4 in the same project as I understand it. Seems like the value of upgrading to Swift 4 is small . Closing in favour of a5fe9c9 please try this. Hey @Matic1993,\nI think this should be more general. Instead of having a single protocol with many checks it should be a protocol with a single unified interface.\nswift\ntypealias Valdiator = (text: String) -> (Bool, String)?\nand then concrete implementation of validators that have the above signature for example\n```swift\nfunc validateAlphabeticalValue(text: String) -> (Bool, String)? {\n    let valid = !text!.isEmpty && text!.rangeOfCharacter(from: CharacterSet.letters.inverted) == nil;\nguard valid else {\n    return (false, \"Invalid number\")\n}\n\nreturn nil\n\n}\n``\n. So the idea is that each instance ofSkyFloatingLabelTextFieldwill have an optional validator function(Validator?`). \nswift\ntypealias Validator = (_ text: String) -> ValidationResult\nValidationResult is just a simple enum encapsulating either that the value is valid or an error with a string to describe the error.\nswift\nenum ValidationResult {\n    case ok\n    case error(String)\n}\nEverytime the text changes we can run the Validator if it exists and then set the errorMessage as appropriate. We need to make sure we listen to text changes in a transparent way that still lets the consumer set a custom delegate. See attached playground \nValidator.playground.zip\n. Closing due to inactivity. Feel free to reopen or open a new PR if you wish to continue working on this. This looks like Swift 4 changes right @bogren?. Sorry if my understanding of this is incorrect, but shouldn't Xcode 9 be able to build both Swift 3 and Swift 4 libraries as part of the same target?\nRelated aren't the implications of this that if we upgrade to Swift 4 it can no longer be used in Swift 3 projects. Given that isn't it better to leave the code in Swift 3 syntax for the time being?. This seems related to this issue in CocoaPods. https://github.com/CocoaPods/CocoaPods/issues/6791\nI'm having a look at supporting both Swift 3.2 and Swift 4, but for now the workaround there should resolve the issue of Swift 4. Can you try it?. Yeah the approach I want to look at is something similar to PromiseKit using conditional code paths to support both Swift 3 and Swift 4. The time I can dedicate to SkyFloatingLabelTextField is a bit limited unfortunately, but I've started hacking on it. I've just pushed a new commit(a5fe9c9) that adds support for both Swift 3.2 and Swift 4 at the same time. Can everyone please test this with\nruby\npod 'SkyFloatingLabelTextField', git: 'https://github.com/Skyscanner/SkyFloatingLabelTextField/'. Just released 3.2.1 with this fix. Closing the issue now. Hey @PedroAnibarro1 sorry about not getting back, I've been off on holiday. This looks good to me now could you please add a changelog entry crediting yourself though?\n. Released as 3.4.0. Yeah this looks like a bug to me. Thanks for the excellent report \ud83d\udc4d \n. Happy to accept a PR if you already have a fix in mind. Hey I had a closer look at this and I can't reproduce this with the demo project attached. Tapping on the fields work as expected and the selected style is only on the that's the first responder. If you manually set isHighlighted you should manually set it to false, but for normal stuff this isn't required at all as the control will change when it becomes first responder/resigns first responder. Right closing as a dupe of #161 then . Hey @sirioz thanks for the PR as per the comments in https://github.com/CocoaPods/CocoaPods/issues/6791 I wanna look at supporting Swift 3 and Swift 4 in parallel instead of just dropping support for swift 3. I'm having a look at this, but I'd be happy for you to do it too. Closing in favour of a5fe9c9 that was just merged. @sirioz can you test this?. This doesn't seem like the right solution, disabling code coverage is not desirable as we still want that. Would it be possible to create a release schema without code coverage and use that when integrating via Carthage?. See #158. Both the options you've mentioned should work to solve your problem. Can you share a project that illustrates this?. Hey @ImranIB can you reproduce this outside of your own project? It's hard to gague what the issue might be without a runnable project. This functionallity feels like it shouldn't be in SkyFloatingLabelTextField as it might be desirable not to clear the message until a later point. In it's current state can't this be achied via the delegate in userland code?. What integration method are you using?. Did you use the post_install hook from https://github.com/Skyscanner/SkyFloatingLabelTextField/issues/158 to change the version?. Sure, see this comment on the thread linked in #158 https://github.com/CocoaPods/CocoaPods/issues/6791#issuecomment-320028044. Yeah. Yeah. I've just pushed a Swift 3/4 compatible fix in a5fe9c9 can you try point directly to git for SkyFloatingLabelTextField per the comment in #158 ?. I take it that worked?. Great stuff, I'll look at releasing this in the coming week. In the meantime you can keep running against master. Try setting a higher line height on the font you are using. Hey @kanjanaSi this looks really neat :) Can you post some screenshots of this as well?. Awesome :) Would you be up for updating the README.md with documentation and the example project? . This control is confusing\n\nIt seems to be doing the opposite for me i.e when it's \"disabled\" the text fields is actually enabled and vice versa. Hey @zarzonis yeah I'll do that right away :). That's it released. Thanks a bunch @kanjanaSi for the awesome contribution \ud83c\udf89 . No I believe @IBInspectable does not support UIFont atm so it's not possible. Hmm that's super strange. Thanks for investigating. A sample project would be great . Just tested this on master with the example project. I'm seeing deinit being called on iOS 11.1 for all cases. That's super strange. I'm not seeing it with that example either. Both the second view controller and the two fields are getting deinited for me. I'm on Xcode 9.1(9B55) with the iOS 11.1 iPhone 8 Plus simulator. @bogren can you be a third person here?. You are right. It seems like UIkeyboardImpl is keeping a reference to the instances after the view is removed. \n\n. I can replicate this with a regular UITextField. I think this is a iOS bug rather than a SkyFloatingLabelTextField specific issue.\n\n. Hi, do you have a reproducible example for this you could share?. Thanks, I just realised that I don't have Xcode 9.3 and cannot install it since I'm still on Sierra. What's the error you are seeing?. Bump. @remingtonchan You should have to assing the module with Carthage I believe because Carthage imports the project as a framework. Can you share the method you are using? This should work the same as for UITextField since SkyFloatingLabelTextField just inherits from it. Hey, there's https://github.com/Skyscanner/SkyFloatingLabelTextField/pull/159 which is currently not merged. Waiting for @PedroAnibarro1 to get back to me, however I might just merge it if don't here from them. It is now, just released version 3.4.0 with support for this. Thanks to @PedroAnibarro1 . What error are you getting?. I have very little experience with XCUITest and no experience with XCUITest for SkyFloatingLabelTextField unfortunately. SkyFloatingLabelTextField inherits from UITextField so if you google for this but use UITextField instead of SkyFloatingLabelTextField any answer you find should be applicable to both.. cc @bogren . I screwed up the release it seems. Notes are still in CHANGELOG.md though https://github.com/Skyscanner/SkyFloatingLabelTextField/blob/master/CHANGELOG.md#v340. Hmm are you setting the font yourself our relying on the system font being set by the OS? I agree that the force unwrap is not ideal, however what you would do in its absence is a big question. Just using a line height of 0 is likely not what you'd want. Has this cropped up again or are you any closer to reproducing it?. Yeah I'll have a think about it and see if I can figure out something better. I've added 9c50bbe just to make sure we can avoid this happening. I'll release it in a while as 3.5.1. Published as 3.5.1. @henrique2601 a PR would be absolutely wonderful :). SKYFloatingLabelTextField is a subclass of UITextField so any method that works for UITextField will work for SKYFloatingLabelTextField too.. Setting a higher line height for the text field might help here. Hey @SYAM1263 I don't quite know what you mean by this, there is no Objective-C code as this is a Swift pod. Hey @InbarSletean this looks pretty good generally. Could you add an entry to CHANGELOG.md under the master section and possibly squash the commits? If you are not comfortable with squashing I can do it instead. I've cherry picked the commit and will merge it in #208 . Released in 3.5.0. Hey @lawgimenez ,\njust set the titleFormatter to a function that does not modify the title and you're good. Hi @arjun011, \nyes Swift 4 is supported since version 3.2.1.. This was just released in v3.4.1 thanks @canaksoy  . Hey @invinciible, \nI'm not sure if Xcode maintains order when setting User Defined Runtime Attributes, if it does moving iconTypeValue before iconImage should remove the warning. If it doesn't I think there might be no way around this. Brilliant @behdad-keynejad! Can you please add an entry in CHANGELOG.md under the master section?. Released in 3.5.0 just now. Sorry about the delay. Hey everyone. That doesn't sound too good. Does reverting to 3.4.0 solve the issue for the time being. I'll have a look at what changed between 3.4.1 and 3.4.0, but my hunch is that nothing changed which would cause this.. I had a look and there's nothing in 3.4.1 that I think would have caused this. Can everyone please try this https://stackoverflow.com/questions/40110392/required-code-signature-missing-for-a-library. Also please refrain from +1 comments as they make the thread hard to read, use reactions instead. Here are the changes between 3.4.0 and 3.4.1.\n@musbaalbaki, @xRena, @dcw008, @eitanaviv, @ahmedhatem003, @Samrat555  I've deleted your +1 comments to keep the thread clear. @bludginozzie That's a possibility for sure. I'll have to have a look and see if there are any actions for library authors under 1.5.0. Seems like it might be related to https://github.com/CocoaPods/CocoaPods/issues/7606. For the time being I would downgrade CocoaPods and possibly Xcode or use the workaround \n```ruby\nWorkaround for Cocoapods issue #7606\npost_install do |installer|\n    installer.pods_project.build_configurations.each do |config|\n        config.build_settings.delete('CODE_SIGNING_ALLOWED')\n        config.build_settings.delete('CODE_SIGNING_REQUIRED')\n    end\nend\n```. @merlin910 I'm not quite sure how to disable custom scripts when Carthage is used.. Hey @dharani-123. This is currently not supported, but if you want to contribute this functionality it'd be very appreciated . I don't think this is the correct solution to this problem, the highlighted animation relies on this code path  I think . Hey D-Mx, \ndo you have a log from the build as well? . That's very strange. Nothing about the project itself changed between 3.4.1 and 3.5.1 \ud83e\udd37\u200d\u2642\ufe0f Glad it worked out though. Hey @ambujshukla99 I cannot reproduce this. I copied a value and pasted it back in and got the same result. Can you provide more detail?. Hey @connorcowling, this is such a basic case that I suspect it might be something with your config. Can you provide a reproducable example?. Yeah this is covered in https://github.com/CocoaPods/CocoaPods/issues/7606 and https://github.com/Skyscanner/SkyFloatingLabelTextField/issues/201. Hey @ajoykarmakar459 please see #201 . Hey @tester87, unfortunately this is not possible because the underlying UI component would have to be configurable. UITextField which SkyFloatingLabelTextField is based on can only handle a single line. @antonmedstorta Did you figure this out since you closed the issue?. Thanks @alextov this looks good, can you add a line to CHANGELOG.md crediting yourself too?. Hey @abhijitpp can you give some more details on this? The component is an extesions of UITextField so any method that works for centering text in a UITextField should be applicable. Hey sorry I've not had time to look at this yet. Can you check that it still works on Swift 3.2 projects?. I haven't setup a matrix build so I doesn't actually run against Swift 3 I believe. I should do that though. I don't think this maintains support with all Swift versions. I've created #239 which should still work with all Swift versions. The matrix build is in place now. This was done in #239. Never the less thanks for pushing me to do it. Hey @lesyaVorozhbyt thanks for the PR. Can you add an entry in CHANGELOG.md and fix the failing tests please?. Thanks :). #220 already exists for this. Hey @mhNirob, SkyFloatingLabelTextField inherits from UITextField so you can just set autocapitalizationType to whatever you need. This has been reverted. Hey, since SkyFloatingLabelTextField inherits from UITextField the answer is the same as for UITextField i.e.\nswift\nfield.textAlignment = .center\nor\nobjective-c\nfield.textAlignment = NSTextAlignmentCenter;. RIght my bad, I think the issue here is that you are setting the background color. The text is centered inside the textfield itself, however the control allocates space above for the floating label which is why it looks off-center. If you remove the background color it should look okay.. No there isn't really another solution for it, SkyFloatingLabelTexeField is intended to sit on the bg of it's parent view rather than have a custom background.. Please full in the full template if you believe this is a bug. Is this reproducible in a barebones project? Can you attach an example project if so?. This is not really in scope and can be done via subclassing as show here. If you want to keep a fork or new pod with this code that'd be good. However I think this behaviour should live outside the project itself.. Thanks @nekrich . Hey @jlaws, thanks for the report. Let me download the GM and have a look. #236 is in progress for Swift 4.2 support. Please give 3.6.0 a try which has Swift 4.2 support. Actually given that we support many different versions let's not set this at all.. Hey @davidseek you see to have some errors. I've expanded the CI to have a more featureful matrix build. Can you rebase this branch and fix the errors?. Closing in favour of #239 thanks for the push to get this done David. Hey @neetrath can you please cleanup some of the whitespace changes in this PR? It's very hard to review with so many unrelated changes. Hey @Michele404 there's a PR open https://github.com/Skyscanner/SkyFloatingLabelTextField/pull/236 that needs a few more fixes before it can be merged.. I've just released 3.6.0 which supports Swift 4.2. Super odd... It should be fine and the syntax is 4.2 compatible. It still compiles I assume? . We can set swift_version in the podspec, but if you do that I believe the pod will stop working for other versions. Might be worth looking through the CocoaPod issues? It should be possible to write a post_install hook in your Podfile to change the SWIFT_VERSION build setting for the target. Try\nruby\npost_install do |installer|\n  installer.pods_project.targets.each do |pod_target|\n    pod_target.build_configurations.each do |config|\n      if pod_target.name == 'SkyFloatingLabelTextField'\n        config.build_settings['SWIFT_VERSION'] = '4.2'\n      end\n    end\n  end\nend. And even forcing the target to 4.2 doesn't make Xcode stop warning? . That sucks :( Don't think there's anything we can do then. Thanks :)\n. Hey @sunkumar you can change this behaviour by setting the titleFormatter property. Hey, no there's isn't support for that at the moment. I am not sure if it's a good idea to support that as it will cause they UI to \"jump around\" if the label itself is a single line. I think it would be better to add a shorter error and include something more complete elsewhere in your UI. Hey @vijayasaiatyam do you have a more details on this, maybe a stacktrace?. Hey @ajijoyo, I've been thinking about validation and there have been previous PRs looking at it(#157). However if we are going to support first class validation I would like to have a more generic/extensible system. Something like what I described in https://github.com/Skyscanner/SkyFloatingLabelTextField/pull/157#issuecomment-317719062 is what I think we should go for. . Hey @RowanG1, no there currently isn't anything like that, but you could create an instance and take the colors from there \nswift\nlet defaultField = SkyFloatingLabelTextField(frame: CGRect.zero)\n// defaultField.titleColor\n. Thanks @devmjun \ud83d\udc4d . Hey @Shawnees this isn't currently possible. Hey @anonymouz4. It's unlikely that we'll ever have macOS support. I think that would be better in a separate project in any case.. Hey @HermanKayy can you try using a subclass for this?. We'd need to update the active title when the titleFormatter changes to support this. If you submit a PR for it we can include it or just set the title from code as a workaround. Hey @fadiBlessedTree any chance you can send a PR for this? Thanks a bunch. Since SKYFloatingLabelTextField is just a subclass of UITextField it should work without anything special having to be done to SKYFloatingLabelTextField. Hey @AmirFT RTL should be supported. I am not using this library in production though. Do you have a minimal reproduction case you could share?. Hey @neetrath this should really use a UIEdgeInsets instead and I am a bit concerned about feature creep so it might be better to include this in a subclass in your project. Good catch, thank you. Please fill out the template and open a new issue. Hey \ud83d\udc4b I am a bit concerned about feature creep. There's more and more PRs that add custom variations and I am concerned that all these variants will decrease maintainability and increase the risk of introducing bugs. Because of this I'd ask if we can consider whether this can be implemented as a subclass rather than a variant. Thanks a bunch @taher-mosbah . Hey @taher-mosbah CI still seems to have issues here. Do you want to continue looking at it or should I pick it up?. This looks good, can you add an entry to CHANGELOG.md too? CI is failing, I think we need to make some adjustments for different verisons of Swift. Pelase put a space before { on this line.. I'd actually prefer if we changed the email validation to only look for some characters and an @ sign.\nSomething like .+@.+. Correctly validating emails using regexes is notoriously difficult and I'd prefer if we didn't contribute to the idea that validating emails addresses with regex is a good idea.. The note is a good middleground and yes my regex would be valid for some invalid email address, but I think that's preferable to locking out people with valid addresses. The only real way to validate an email address is to send it an email after all.. The note is a good middleground and yes my regex would be valid for some invalid email address, but I think that's preferable to locking out people with valid addresses. The only real way to validate an email address is to send it an email after all.. I haven't done any UIAppearance customization with Swif, but isn't there a need for a marking such as UI_APPEARANCE_SELECTOR in Objective-C to inform the run time that this can be customized via UIAppearance?. Neat :). Suppose this should be superRect.size.height instead of bounds.size.height. Please get rid of redundant new lines at the start and end of blocks . Get rid of all the redundant new lines here, but leave one line between set and get. Add a space after the colon. This logic is repated in several places could we deduplicate it in a function?. Why Adapter? Wouldn't it be better to call this iconType and then call the internal enum _iconType?. Please remove all space like this at the begining and end of blocks. We should log a warning or error somehow if the user tries to an image when the type is .font or iconText when the type is .image. You forgot to set the iconTypehere. I'm not crazy about this option either come to think of it. Can we call it iconTypeValue to indicate it's a value representation of iconType. Also open to any suggestions you might have too. Please cleanup this indentation to match what it was before.. I think you should remove this Swiftlint disable call. Per the error on Travis\nSuperfluous Disable Command Violation: SwiftLint rule 'identifier_name' did not trigger a violation in the disabled region. Please remove the disable command. (superfluous_disable_command). self is redundant here. . Different project mate ;). It's still there, but it's being deprecated. Shouldn't this only be done if templateImage is true?. ",
    "saranya-chandran": "Any update on this?. ",
    "pichirichi": "I see two error in the automatic tests but I don't understand the failure reason.\n. it seems that the following line is failing the tests.\nXCTFail(\"Call timed out %@\", error.localizedDescription)\nthere is a build error \"cannot convert value type 'String' to expected argument type 'static string'\".\nMay I suggest this replacement? \nXCTFail(\"Call timed out \\(error.localizedDescription)\")\n. I think that ignorer to support this request and keep the RTL support intact iconSide should have the following states:\n- .Left & .Right - Will be flipped when switching to RTL language (right will become left and vice versa)\n- .LeftForce & .RightForce - language orientation won't change the alignment (RTL will use the same value for alignment)\nSo the enum should have:\n1. .Unspecified (whet we have today, will be flipped for RTL).\n2. .Left\n3. .Right\n4. .LeftForce\n5. .RightForce\n. @gergelyorosz the alignment to right is already available from the RTL support, all is required is just the property and referencing it. I might have time tomorrow to look into it if you want.\nthe only problems there are no enums in inspectable and it will be a problem in the storyboard (making it readable)\n. I found the problem for issue 2, this was happening since the placeholderFont initialisation was done in the view did load, when it was moved to viewWillLayoutSubviews problem was resolved.\nStill no lead on issue 1 (why it is not visible in the storyboard).\n. The latest update solved the problem, thanks!\n. When do you think this change will be merged?\n. I don't understand how a new test case cause a previous test case to fail :-/\n. iOS 9 does it but iOS 8 is not doing this setting, we can add an if to do this setting only for iOS 8 but I thought there is no harm in changing it for all iOS versions.\nIn iOS 8 in RTL language the title of the field will be justify to Left instead to the right.\n. If you don't do that you can mark our the RTL support from the pod. If you need to set extra configuration to support RTL the pod is not RTL compliance. I have an workaround that I can do on my project but other users won't know how to do that. It is up to you, you can reject the change.\n. I have several open radars on RTL and I'm in direct touch with the Apple team working on RTL.\nLets face it, iOS 8 bugs won't be fixed and the RTL behaviour is not correct on UILabels. \n.Natural value for UILabels was introduced just in iOS 9 (until then was only available for AttributedLabels).\nWe can limit the alignment to iOS 8 only. Will this work for you?\n. This is the relevant radar for this fix:\n- [18334130] Plain text UILabel are not adjusted correctly for RTL languages (Right To Left)\n  closed/duplicate/fixed for iOS9\nWhen an App support RTL languages such as Hebrew or Arabic and the user device is set to this language the whole UI is transformed to present the content from right to left.\nUILabels that are using plain text are not behave in such manner only UILabels that are attributed text support the UI change.\n. 1. http://stackoverflow.com/questions/18744447/autolayout-rtl-uilabel-text-alignment\n2. http://iphonemithun.blogspot.co.il/2014/03/how-to-set-alignment-from-rtl-or-ltr-of.html\n. the test implementation has no Arabic support so it won't change the UI to RTL. Change the device to Hebrew and you'll see the change. iOS change App UI for RTL only if the application indicates it support the language.\nYou must have lproj for Arabic like I set to Hebrew when I committed the RTL support.\n. RTL is not that straight forward (no pun intended) for those who speak/write LTR languages so I understand the confusion. I speak Hebrew so it was easier to adjust our App to RTL and identify bugs and problems with iOS and this is the experience I brought when I've suggested the addition to your pod.\nThis is an Hebrew screen capture on how the pod sample code work in Hebrew (note where the battery indicator is compared to your screen capture):\n\n. There are two issues I'm trying to solve with this change:\n1. how the title look on the field when you start to edit text.\n2. how the text input behave (cursor direction) when you enter text.\nThis is what happen on iOS 8 when only  self.textAlignment = .Natural is set.\n\nThis is what happen on iOS 8 when only self.titleLabel.textAlignment = .Natural is set.\n\nand this is what happen when both are set to .Natural:\n\n. You are right that I was few commits behind and now I see the problem:\n```\n    private func updateTextAligment() {\n        if(self.isLTRLanguage) {\n            self.textAlignment = .Left\n        } else {\n            self.textAlignment = .Right\n        }\n    }\n```\nThis block of text is not correct, to support multilingual you use .Natural and you never force Left/Right according to language unless you expect a specific alignment for all languages (you can look on WWDC session regarding RTL support (RTL link) and the Internationalisation page (link)). When you set the alignment to .Natural iOS will handle it out of the box without any change in the code or checking the user language interface direction. This block wasn't part of my RTL updates commit.\nAlso you need to remember the following:\n- iOS 8 and iOS 9 don't behave the same with their RTL support.\n- Changing language via project schema doesn't the exact behaviour like changing the device language.\nIf you guys want we can do a Skype call and I'll give you a quick overview on RTL in iOS.\n. Add a tag to each textField and validate according to the tag. the nested validation above will be hard to maintain.\nFor length validation I usually use: shouldChangeCharactersInRange\n. I don't see such problem on my App in RTL languages.\n\nDo you have a sample code that reproduce this problem?. I don't think it will make a different. Can you provide a sample code?. This is a great idea, I'm sure most of those who implemented SkyFloatingLabelTextField are already running few validations on their code.\nI think that the regex approached is also a good idea.\nthere are few projects for more complex validations such as credit-card or phone numbers where simple regex won't be enough but for the simpler cases it will work.. I didn't mage any changes in interface builder. Unless it is Xcode changes when I've asked for localisation on the storyboard.\n. I'll check it locally since I think that the changes are references to the language file that was generated by Xcode.\n. ",
    "danlozano": "I did NOT have this problem with version 1.1.1, ironically after updating to version 1.2.0 (which was meant to fix this problem, that I personally did not have) now I DO have the problem \ud83e\udd14, weird.\nDowngraded back to 1.1.1 and I no longer have the title flashing problem.\n. Awesome! Thanks for the great POD \ud83d\udc4d\n. ",
    "reeichert": "Thanks for reply. \nI'm using LTR text, if you can add and additional property like iconSide = .Left will be awesome!\nThis is what I'm trying to do: \n\nWith icon on left side\n\n. up\n. ",
    "alelevinas": "Hello everybody.\nI was looking for something like this \n\nA responsive icon on the right ;)\nAnyone did an extension or something you can help me with. If not I'll try @gergelyorosz  suggestion.\nThanks in advance. ",
    "anitaa1990": "Hey guys, is there an option added to the library to add icon to the right instead of the left?\n. ",
    "chejarla-venkatesh": "There is no option to set iconImage to Right or Left. Still you can achieve this by coding.\nJust make the textFiled class as SkyFloatingLabelTextField and add this two lines to your code\ntextField.rightViewMode = UITextFieldViewMode.always\ntextField.rightView = UIImageView(image: UIImage(named : \"imageName\"))\nWith this no need to use SkyFloatingLabelTextFieldWithIcon. ",
    "kwstasna": "@chejarla-venkatesh yes but if the text is too large, then the letters are above the image.\nAnd a workaround is the following\n```\nimport SkyFloatingLabelTextField\nextension SkyFloatingLabelTextField {\n    /*\n     Calculate the rectangle for the textfield when it is not being edited\n     - parameter bounds: The current bounds of the field\n     - returns: The rectangle that the textfield should render in\n     /\n    override open func textRect(forBounds bounds: CGRect) -> CGRect {\n        super.textRect(forBounds: bounds)\n        let rightViewWidth = self.rightView?.bounds.width ?? 0.0\n        let rect = CGRect(\n            x: 0,\n            y: titleHeight(),\n            width: bounds.size.width - rightViewWidth,\n            height: bounds.size.height - titleHeight() - selectedLineHeight\n        )\n        return rect\n    }\n/**\n Calculate the rectangle for the textfield when it is being edited\n - parameter bounds: The current bounds of the field\n - returns: The rectangle that the textfield should render in\n */\noverride open func editingRect(forBounds bounds: CGRect) -> CGRect {\n    let rightViewWidth = self.rightView?.bounds.width ?? 0.0\n    let rect = CGRect(\n        x: 0,\n        y: titleHeight(),\n        width: bounds.size.width - rightViewWidth,\n        height: bounds.size.height - titleHeight() - selectedLineHeight\n    )\n    return rect\n}\n\n}\n```\n. So what's going on with the swift 3 version!?! Hope to see it soon \ud83d\udc4d \n. ",
    "TomikeKrasnay": "Make the textFiled class as SkyFloatingLabelTextField and add this code\nself.textField.rightViewMode = .always\n let imageView = UIImageView()\n let image = UIImage(named: \"icon\")\n imageView.frame = CGRect(x: 0, y: 0, width: 20, height: 20)\n imageView.image = image\n self.textField.rightView = imageView. ",
    "bhanushalilinesh": "@TomikeKrasnay Thank you, your answer worked properly\n. ",
    "Deub27": "You can add the IBInspectable attribute to any property in a class declaration, class extension, or category of type: boolean, integer or floating point number, string, localized string, rectangle, point, size, color, range, and nil.\nUIFont seems to be not eligible to @IBInspectable. ",
    "pleasantlight": "Hi Gergely,\nSorry man, my bad! I'm doing something weird with a UICollectionView in which the text fields are located, this caused the problem.\nPlease close and ignore!\n. ",
    "amarcadet": "After few more tests it occurs that this bug only happens when you dismiss the keyboard with the first touch on the text field and drag down from that point. \nOnce the text field is in that state, it's not possible to go back to the normal state, the title stay selected even if I dismiss the keyboard without touching the text field.\nI don't know if the use case is clear enough, if not I'll try to add a sample project and gif.\n. ",
    "jakunico": "I was facing a similar issue and solved it by setting highlighted = false on resignFirstResponder():\nswift\nclass CustomTextField: SkyFloatingLabelTextField {\n    override func resignFirstResponder() -> Bool {\n            let result =  super.resignFirstResponder()\n            if result {\n                highlighted = false\n            }\n            return result\n    }\n}\n. ",
    "cooler333": "+1\n. @jakunico This doesn't fix it. This help to remove highlight state, but sometimes, title stay highlighted.\n. ",
    "maarek": "I am seeing an issue where I have SkyFloatingLabelTextField's on a UITableViewCell and while clicking and dragging to scroll the tableview over other cells seems to somehow set the highlighted state on the textfields (maybe its an issue in cell reuse). I've tried resetting highlighted state but this seems to come later that when I can inject/change it. Selecting the text field and deselecting doesn't seem to get it out of the highlighted state. I'm not sure where to proceed but there seems to be some issues using highlighted.\n. ",
    "joaovbalmeida": "Same thing happening here, i have a view with 4 textfields, if i start filling them by tapping on the first one and proceeding trough them by the keyboard next button, just the one that i tapped stays with the selection color, the rest turns back to the normal color. After analyzing, i realized that only the fields that you tap stays with the selection color after populated, if you populate a field by getting to it trough the next button, the selection color does not stick to it.. Managed to fix by setting highlighted on viewdidload\ntextField.isHighlighted = true. Same thing happening here, i have a view with 4 textfields, if i start filling them by tapping on the first one and proceeding trough them by the keyboard next button, just the one that i tapped stays with the selection color, the rest turns back to the normal color. After analyzing, i realized that only the fields that you tap stays with the selection color after populated, if you populate a field by getting to it trough the next button, the selection color does not stick to it.. Managed to fix by setting highlighted on viewdidload\ntextField.isHighlighted = true. ",
    "acecilia": "As a suggestion, why don't you try validating it applying reactive programming? Right now I am using RxSwift for validating my textFields. There are lots of examples, for example this\n. Sure! Hell, how I missed that xD\n. ",
    "arashdoescode": "Thank you gergelyorosz  for helping me\n. ",
    "hlung": "You can use self.emailOrUsernameTextField.addTarget(self, action: #selector(textFieldDidChange), for: .editingChanged) and func textFieldDidChange(textField: UITextField) { ... } to trigger validation after every character change.\n. ",
    "kylejm": "This looks like it could fix #40.\n@gergelyorosz did you ever get time to look into this like you mentioned in #40? If not, I'm happy to work on a PR for this :)\n. ",
    "RuiAAPeres": "You can remove the else {}. \n. @intonarumori that article is from 2013. From Apple's blog: \n\nAvailability: Using the latest SDKs ensures you get access to new features and information about platform changes. But sometimes you still need to target an older OS, and Swift makes doing so much easier and safer. The Swift compiler now shows an error when you use an API that is too new for your target OS, and #available blocks can safely wrap lines of code to only run when on the right OS versions.\n. \n",
    "danipralea": "Yes you can. You have a plethora of options\n\n. ",
    "pprevalon": "fixed. i had to add FontAwesome to the app\n. ",
    "codytwinton": "Love you library! Can you please enable a swift3 branch we can create pull requests for.\n. @wolffan - Is there anyway a swift3 branch could be created so we can make pull requests there?\n. @k0nserv - Thanks for making this happen!. +1\n. ",
    "ossmalpha": "When it is planned to release the converted (to Swift 3) branch? \n. ",
    "rolmaz": "Swift 3 branch?\n. ",
    "Tibb": "No activity on Github or any social network since July... Hope he's just on extended holidays :)\n. @wolffan Sorry about that, the latest commit was from gergelyorosz, who is the only profile I quickly checked.\nThanks a lot for your answer and good luck \ud83d\udc4d \n. @kwstasna @codytwinton @lfarah Until the DenHeadless pull request is accepted or until @wolffan develops his own, you can use it like this in your Podfile:\npod 'SkyFloatingLabelTextField', git: 'https://github.com/MLSDev/SkyFloatingLabelTextField.git', branch: 'swift3'\nIt compiles and seems to work great so far.\n. Thx guys but all the credit goes to @DenHeadless who create the pull request. I'm just indicating how to integrate it in your project with CocoaPods ;)\n. Hi @DenHeadless, could you consider putting your pull request on a public repo? Then we'll be able to integrate it with cocoapods and use it a temporary solution at least. Thanks a lot!\n. @DenHeadless Well, I might have made a mistake in the path in my podfile when I tried to use your branch... :/ Thanks for the tip, seems to work \ud83d\udc4d \n. Same here - I'm based on the MLSDev fork for almost 2 months. Everything is great. This could definitely be pulled into the main branch. @fadylateef the master branch is on Swift3.\nFirst paragraph on the README: \n\nFrom version 2.0 onwards only compatible with Swift 3\n\n;). ",
    "lfarah": "Hey, I'd love to see this lib available in Swift 3 so I can implement it in my project.\nThanks \ud83d\ude04 \n. Thanks @Tibb, you're awesome! \ud83c\udf89 \n. Hey @k0nserv, let's talk! I'd be more than happy to start contributing more and help you guys out. @k0nserv you're awesome!!!!!!!!!. ",
    "wagnercasey": "@Tibb for real awesome! thanks! running great.\n. Agree with above - the MLSDev swift 3 fork has been flawless. Should definitely get pulled in to main branch.. @lawgimenez set the formatter like this\ntextField.titleFormatter = { $0 }. ",
    "nazrdogan": "+1. ",
    "smdulgeroglu": "+1 can't wait thanks a lot. ",
    "davros1970": "I went in to all the CGRect() ctor's and subtracted 6 from the y. Seems to make everything visually align then with the clear button. Total hack, but did the trick.. ",
    "slxl": "pardonne moi delay :). ",
    "MOMMH2008": "same Problem with me \n. ",
    "ndrewh": "This appears to be an issue with Swift 2.3 and Xcode 8. If you let Xcode convert the code to Swift 3 it will work. The converter actually does a pretty good job for the files in this Pod.\n. ",
    "MaximeChaillou": "You can add the path /Applications/Xcode.app/Contents/Developer/Toolchains/Swift_2.3.xctoolchain/usr/lib/swift/iphonesimulator to the LD_RUNPATH_SEARCH_PATHS setting on the target of SkyFloatingLabelTextField if you use Cocoapods. It worked for me. No error anymore.\nSource : https://forums.developer.apple.com/thread/63237\n. ",
    "skerkewitz": "Did the LD_RUNPATH_SEARCH_PATHS setting fix the problem for anybody else? Because for me it is not working.\nEDIT: I take that back: it works fine. You have to do it on the correct target! Sorry for the fuss.\n. By the way: you can add the fix into your Podfile as post install hook. So you don't have to do it every time you do a pod update or pod install:\npost_install do |installer|\n  installer.pods_project.targets.each do |target|\n    target.build_configurations.each do |config|\n      if target.name == \"SkyFloatingLabelTextField\"\nconfig.build_settings['LD_RUNPATH_SEARCH_PATHS'].push('/Applications/Xcode.app/Contents/Developer/Toolchains/Swift_2.3.xctoolchain/usr/lib/swift/iphonesimulator')\n      end\n    end\n  end\nend\n. I have the same problem. @mania3908 did you found a solution?\nTo be honest: this is a bug in SkyFloatingTextField for me and I should not worry to workaround it.. I can fix my issues by adding a simple layoutIfNeeded() before the animation block in -[SkyFloatingLabelTextField updateTitleVisibility:completion:]. As far as I know you should add such a call in front of an animation block anyways.\nSee http://stackoverflow.com/a/12664093/5385140 - unfortunately the Apple link is down.\n@mania3908 can you give it a try and check if your problem is also gone?\nPull Request: https://github.com/Skyscanner/SkyFloatingLabelTextField/pull/101\n. Hmm, I never notice that it breaks the animation. But I took another look and you are right.\nWould be nice to find a solution that solve both animation problems.. ",
    "KiGi": "Just wanted to say that worked for me also, but I'm really adding this note so that Google can see the error relates to the symbol TMps13OptionSetType - googling for that finds nothing at all!\n. ",
    "hyerra": "Also, I wanted to mention it does fail the travis-ci build but that is because I'm using Swift 3.\n. Yeah, we really need Swift 3 support for the library.\n. @TwiterZX Good point! I didn't realize that because my deployment target was set to iOS 8. Thanks for bringing the issue up.\n. ",
    "mirzadelic": "+1\nAny news about swift branch?\n. ",
    "sagar-vaholiya": "Swift 4.2 , Xcode 10 or later\n@k0nserv,  I am trying to call textFieldShouldReturn one of delegate method of UITextfield as following. But not working. Here txtDegree is type of SkyFloatingLabelTextField\n func textFieldShouldReturn(_ textField: UITextField) -> Bool {\n\n       if textField == self.txtDegree {\n\n              return false\n      }\n      else {\n            return true\n    }\n\n}.\n",
    "DenTelezhkin": "@Tibb What do you mean by public repo? It is public, we are using it in CocoaPods, like so:\nruby\npod 'SkyFloatingLabelTextField', git: \"https://github.com/MLSDev/SkyFloatingLabelTextField.git\", branch: \"swift3\"\n. @gergelyorosz @intonarumori Guys, just pinging you in case you haven't seen this PR. I understand that's an open-source, and you don't owe us anything, but any hint on when this could be merged or not merged would be nice, since already 20 days have passed since PR was opened.\nAs i've said, we'll be happy to help if any other assistance is needed with Swift 3 migration.\n. @wolffan Thanks! No worries, take your time! \ud83c\udf7a \n. @k0nserv Sure, rebased.. Travis failure seems completely unrelated to code changes in PR. Tests pass locally on my machine. iOS CI as always, incredibly stable =). Sure, let's give it a shot =) Rebased once more.. Rebased once more =). Yep, edits from maintainers is on =) Please just let me know when you are ready to merge, and i can rebase one final time =). Thank you guys! This is great news! Are you planning 2.0 release for CocoaPods?. ",
    "chungbd": "I've just used this lib for my application, so I really so interested in updating code to Swift 3.0.\n@wolffan  you met an obstacle, didn't you? Let's know it, may everybody can help you. Thanks\n. ",
    "ctews": "+1\n. ",
    "bogren": "Awesome! \ud83d\udc4f  No problem \u263a\ufe0f . Sorry, you have to rebase again \ud83d\ude07  . Correct. Currently there are some issues with travis. . \ud83d\ude80 . Swift 3 is compatible with iOS 8. With Swift 3 comes the opportunity to also move to iOS 9+ imo.  . CocoaPods \ud83c\udf89 . \u261d\ufe0f  As mentioned, versioned 2.0 is compatible with Swift 3. Link to the docs Docs/installation. Is your project updated to use Swift 3? If not, I suggest you convert to the lastest syntax. There shouldn't be any code changes if all your pods are supporting Swift 3. . Try pod update SkyFloatingLabelTextField to pull the lastest version. If that doesn't work you can try to remove the pods folder e.g rm -rf Pods/, update the repo pod repo update and then reinstall your pods pod install. . I can reproduce the issue \ud83d\udc4d  . I'm not sure why Xcode prompt the migration - probably since the project is not setup with Swift. What I did, I choose to migrate, end up with a few errors but the project build and the errors are gone after the build completes. Instead of pushing the changes in Pods/SkyFloatingLabelTextField you can delete the pod and reinstall. Your project is going to end up with Swift 3 support, and you'll get a working copy of SkyFloatingLabelTextField \ud83d\ude03 . You can use textField.placeholderFont to set the placeholder, place make sure the font is imported and available in your project if it's not a default font. \nUse the font property of the title label if you want to edit the font of the text shown above the field. e.g. textField.titleLabel.font = UIFont(name: \"MavenPro-Bold\", size: 11). Again, please make sure your custom font is imported and is available.\n. To answer your first question: If you link with iOS 10 you must declare access to any user private data types. You do this by adding a the key and description to your app's Info.plist. Here is a list of frameworks: Contacts, Calendar, Reminders, Photos, Bluetooth Sharing, Microphone, Camera, Location, Health, HomeKit, Media Library, Motion, CallKit, Speech Recognition, SiriKit, TV Provider.\nThis is probably why you see the warning message in the debugger, and your app is going to crash if it's trying to use one of the frameworks. \n. I need more info to be able to answer your second issue. You can try to set the titleColor using the designables. \n\n. I need more info the be able to help :( . Ah, I found this a annoying as well. I'll take a closer look. If you find a solution before I do, submit a PR! \ud83d\ude0a. As you mentioned, you can use iconMarginBottom to adjust the icon. In addition, I think you can override textHeight() to get the behaviour you want.. Hey! Following up here, did you manage to solve the issue?. Hey, there is a few thing you can do to make the title visible. Best result imo, is if you implement the two delegate methods for textFieldDidBeginEditing(_ textField: UITextField) and textFieldDidEndEditing(_ textField: UITextField). You can use this method to hide or show the title. Here is an example to show the title, set the completion to nil to make it stay, and hide the title again if needed in textFieldDidEndEditing(_ textField: UITextField) by passing false to the method \ud83d\ude0a. You can use the yourTextField.titleLabel to edit properties of the titleLabel, e.g titleLabel.font or titleLabel.textColor.. Make sure the font is added to the plist or if you're using one of the pods that the file using the font imports the pod. As Hugo mentioned, if you upload a small project that reproduces the issue we can take a look \ud83d\ude0a\n\n. The pod you're using is not the same thing as we use in SkyFloatingLabelTextField. I have a few options for you: you can get the font.ttf and add it to your project, or try this pod. With the pod I linked, you can use something like this: (I did a quick test in your sample \u2705)\nsomeTF.iconFont = UIFont.fontAwesome(ofSize: 15)\nsomeTF.iconText = String.fontAwesomeIcon(name: .plane)\n If you really want to use the pod you used in your sample project I suggest you read the readme again, the pod can't be used the same way as it's in SkyFloatingLabelTextField. \nExample form their project. Please note I did not test the following code: \nlabel.setFAIcon(icon: FAType.FAGithub, iconSize: 12)\nlabel.setFAIcon(icon: FAType.FATwitter, iconSize: 12)\n. Yes, run pod install, and import the pod in the class where you want to use it import Font_Awesome, and you should be able to use the code form the snippet I posted \u261d\ufe0f . You can try to empty the queue of waiting layout operations with layoutIfNeeded and use it again when you try to grow your view. . Yes I think so, if you need to clear the animation pipe I think you should do it before animating instead of relying on the framework. . Hey, I played around with SkyFloatingLabelTextFieldWithIcon you can set the variable iconMarginBottom to position the icon. Here is the code SkyFloatingLabelTextFieldWithIcon#L65-L71. I think you have to do it manually atm. SkyFloatingLabelTextFieldWithIcon sets the frame based on the variable. I think aligning the icon and label make sense, I can see what I can do. Please submit a PR if you find a solution :) . Hey :) I need more info to be able to help. Are you using any other pods? What version of cocoapods are you running? Try running pod repo update before install. . As far as I understand ios_language_manager swaps out the bundle files but doesn't set the properties of the language LTR = true. I found this property of UIView semanticcontentattribute. Either you make a pull request the ios_language_manager to make sure the lib can handle LRT languages or as you change language in your app you set the semanticcontentattribute property. I think this works UIView.appearance().semanticContentAttribute = .forceRightToLeft :). Ah okay. I'm looking at some of the previous issues we have reported, I'll try to read up on what is not working with LTR for SkyFloatingLabelTextField. If you find a solution to fix please submit a PR :). The M_PI fix is available on the master branch and will be included in the next version \ud83d\ude42. Or like this? \ud83d\ude03\naddErrorButton?.setTitle(NSLocalizedString(\"Add error\",\n                                           tableName: \"SkyFloatingLabelTextField\",\n                                           comment: \"add error button title\"),\n                         for: .normal\n)\nI think I prefer @k0nserv suggestion but put the next parameter below as well :)\naddErrorButton?.setTitle(\n    NSLocalizedString(\"Add error\",\n                      tableName: \"SkyFloatingLabelTextField\",\n                      comment: \"add error button title\"),\n    for: .normal\n) \n. Hey thanks for the contribution, can you also add a note in CHANGELOG.md under the master section with a reference to the PR, and feel free to reference yourself.. Hey, awesome! Please include this commit in your PR previous instead #126 \ud83d\ude0a. Hey, did you get it to work? Make sure you successfully import FontAwesome in your project.. When is \"BcR-hT-edQ.placeholder\" = \"\u064a\u0631\u062c\u0649 \u0625\u062f\u062e\u0627\u0644 \u0628\u0631\u064a\u062f\u0643 \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a.\"; set? You have placeholder set the Storyboard and then set it again in code? Remove the line in your screenshot. . Ah now I understand your setup and your problem. Can you provide sample code? . Does it work for other languages? Is other labels and test translated? If you create a sample project and upload here with the same setup I can take a look at the code.. hmm.. \ud83e\udd14  I'll try to setup a demo project. . Thanks for the contribution. LGTM! \ud83d\udc4d . Hey, are you still experiencing issues installing SkyFloatingLabelTextField? . Yes I think that would be better :) . Swift version? . Yes, building for 3.2 works fine in Xcode 9. I suggest we create a swift-4branch  \ud83d\ude42. Can you share the code you tried? See #139. How are you laying out the views? As @k0nserv said, are you able to reproduce this outside of your project? Are both fields affected when scrolling? I suspect there is an issue in how you setup the constraints. . That should not be a problem. We're using SkyFloatingLabelTextField in storyboard in Objc. How do you install SkyFloatingLabelTextField, CocoaPods, Carthage?. ",
    "dinarajas": "+1. ",
    "mosn": "Yup, That's exactly what I was looking for. \nThanks . ",
    "Downstairz": "@intonarumori thank you!\n. ",
    "ManiaChamp": "Can you please remove upercase by default if somebody needs it he can put it up ? . ",
    "andreaseckner": "@Rashesh-Bosamiya There is a fork of the repo with an existing Swift 3 branch available. Just look at https://github.com/MLSDev/SkyFloatingLabelTextField.\nYou can easily integrate it with CocoaPods with this one-liner:\npod 'SkyFloatingLabelTextField', git: \"https://github.com/MLSDev/SkyFloatingLabelTextField.git\", branch: \"swift3\"\n. ",
    "borut-t": "+1\n. ",
    "jcarrharris": "+1\n. ",
    "eliasturbay": "+1\n. ",
    "jaredegan": "I've been using the MLSDev fork for a while and it's been working like a charm. Hope you can add Swift 3 support in this repo directly to simplify Podfile & podspec dependencies.. What do you think @k0nserv?. Actually, the new public/open vars are missing documentation blocks as comments.. The textColor of errorLabel does not get updated in updateColors.. It is necessary. If a user of this class changes the errorColor after initialization, the color of errorLabel will not be updated and it will still be red.. Copy paste error, you meant to paste in errorLabel here.. ",
    "Frankenstein666": "I Have a Problem as well with validation. In my case i have put a validation in one of my skyFloatingLabelTextfield so that the entered text must be at least 5 character long. The Validation is Working fine as expected for the first time , but However, if i delete a character it is still showing the field as correct one. i'd like to immediately show error on this field as soon as the character is deleted. I'm doing the validation using the delegate method as shown in example.. ",
    "JkThakurMiracle": "Hi \nI am facing the same problem. \nActually what i need is. I need my application in RTL. I have changed the appearance of my application from RTL. \nNow i am using textfield with SkyFloatingLabelTextField,  and set its textAllignment to .right.\nBut when i use to run my app from Xcode it is showing the floating placeholder at the right.\nand if i use to run app from device then it makes the floating placeholder at left position.\nPlease give me the reason.\nThanks. Thanks\nI found the solution.. ",
    "lipesouto": "I understood, thank so much for your help!!\n2016-12-07 17:03 GMT-02:00 Hugo Tunius notifications@github.com:\n\nThis would be a breaking change and since we've just released a major\nversion I want to avoid releasing another one anytime soon. What you can do\nhowever is the following\ntextfield.titleFormatter = { $0 }\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Skyscanner/SkyFloatingLabelTextField/pull/82#issuecomment-265540051,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AJzpvUp5fkFg0PXxUp0hRi9AK-CS0eJpks5rFwMCgaJpZM4LG7Vb\n.\n\n\n-- \nFellipe Souto21 97166-4931\n. ",
    "sebyddd": "In Objective-C, this would translate to:\ntextField.titleFormatter = ^(NSString *format){ return format; };\nJust in case anyone needs to save a few minutes. . ",
    "dexcell": "My podfile already set to version 2.0.0\nBut the this confirmation window still shown for me (using objective c)\nConvert to Current Swift Syntax?. It's a new xcode project (objective c though), should be using swift 3 by default.\nAs shown here that some of the SkyFloatingLabelTextField code developed with earlier version of swift\n\nClick convert will end up throwing errors.\n. I even tried to specify git and download the master branch but no luck,\ni think you can try to reproduce it, by creating new xcode project with objective c language.\nHere is the screenshot again:\n\n. thanks man \ud83c\udf7a . I found out that you need to explicitly set SWIFT_VERSION to 3.0 in your project build settings, if you are using objective c project.\nor you can add these script on your cocoapod file, then xcode wont ask you to convert the code.\npost_install do |installer|\n    installer.pods_project.targets.each do |target|\n        if target.name == 'SkyFloatingLabelTextField'\n            target.build_configurations.each do |config|\n                config.build_settings['SWIFT_VERSION'] = '3.0'\n            end\n        end\n    end\nend. Hi,\n\nInstalled it using carthage -> add github/SkyFloatingLabelTextField to Cartfile and do  carthage update SkyFloatingLabelTextField\nIf using cocoapod, everything is working properly, Interface builder can detect class SkyFloatingLabelTextField.\nModule and class not detected in interface builder when using carthage.\n\n. ",
    "patchthecode": "seems it was a cocoapods issue.. ",
    "pmbfish40": "When placeholder animated on top of the text it remains with same size. Will be better if we can set the size of that as well. I tried this but nothing changed there\nemailField.placeholderFont = UIFont(name: \"MavenPro-Bold\", size: 11). ",
    "ImranIB": "\n. Actually i am using SkyFloatingLabelTextFieldWithIcon class to show icons in text field.Any help?. Thanks! It worked fine.. First download that font from the link. https://github.com/FortAwesome/Font-Awesome/blob/master/fonts/fontawesome-webfont.ttf. Include it in your project. Add font in info.plist. In xcode use it like that \nemailTextField.iconText = \"\\u{f003}\"\n. iconMarginBottom set icon position from the bottom as u see in above image, but how I can I align label with icon?. Thanks for the response.. Resolved the issue by using textField.titleFormatter = { $0 }. Just add multiple text fields in a scroll view and do the Autolayout part. Check if the text fields show properly in the scroll view using autolayout.. ",
    "PiyushSanepara": "\n2016-12-21 15:15:26.941776 FloatLabelDemoNew[309:43804] [MC] System group container for systemgroup.com.apple.configurationprofiles path is /private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles\n2016-12-21 15:15:26.946414 FloatLabelDemoNew[309:43804] [MC] Reading from public effective user settings.\n. \n\nSee the screen, i am setup Title Color(Green) for both field (Email and Password), but it work for password only.\n. I am using this with attribute inspector see: \n\n. @bogren i try designables but it doesn't work\n. ",
    "yatanadam": "@bogren @PiyushSanepara me too.. ",
    "hellohelloye": "I met the same problem, it crashed in session.dataTask function. I added the privacy key words but somehow it did not work. the error message you quoted is actually just a warning message not the cause of the crash. The actual cause of the crash is a EXC_BAD_ACCESS due to an improper conversion between Error and NSError because of the transaction of swift version to 3.0. ",
    "LukA888": "Ok! Thanks, I'll try it ^^. ",
    "harrisrap": "FYI, the link to that method and examples take me to unrelated code. I think I figured it out anyway. I call setTitleVisible(true) in textFieldDidBeginEditing. But now I have the title twice - one as the placeholder and the small one above it. How do I get it to just show the small one above, and have the placeholder blank?. ",
    "Rufy86": "I'm not using CocoaPods, because I don't like it. in the readme file you write:\"You can download the latest files from our Releases page. After doing so, copy the files in the Sources folder to your project.\"\nI've done this, but when I write @import SkyFloatingLabelTextField; Xcode give me an error and ask the framework. so I have to import also the framework but when archive for AppStore, Xcode give me the error written above.\nI've done some search in the internet and I've found that I have to archive the framework and import to the project. I've done this and work. now I've send to itunesconnect but all this is not written in readme file. and it's not so intuitive.. @k0nserv I've tried and give me some error.\nprova.zip\ni've had to make some edit to build setting. but nothing. don't work.\nmaybe I don't make something. I don't know\n. @k0nserv yes. confirm that the fix from @intonarumori works. I'm sorry for late. but, please! Write correctly how to install manually this framework.. I understand, but not all people use or want use CocoaPods or Carthage. In fact I hate this package manager. I prefer or make all code or install it manually. If you insert this information, you make your project more complete about the information.\nBut it only a suggest.\n\nIl giorno 17 gen 2017, alle ore 18:34, Hugo Tunius notifications@github.com ha scritto:\nClosed #93 https://github.com/Skyscanner/SkyFloatingLabelTextField/issues/93.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/Skyscanner/SkyFloatingLabelTextField/issues/93#event-926176505, or mute the thread https://github.com/notifications/unsubscribe-auth/ARDGoGzrw4XmVNORqzqguRjtBKEa6gLGks5rTPuhgaJpZM4LdvFg.\n\n\n. ",
    "ryanwaggoner": "Fixed. Ah yeah, I had that originally, and missed it when going back to spaces. One min.. Done. ",
    "Fawxy": "It's nice having it as an @IBInspectable. ",
    "vytautasgimbutas": "I'm integrating it via Carthage.\nI can confirm that after changing the values to NO in release for constants GCC_GENERATE_TEST_COVERAGE_FILES, GCC_INSTRUMENT_PROGRAM_FLOW_ARCS, rebuilding the framework (without checking it out) I was able to upload successfully the binary to iTunes connect. I found that some people also got around this issue with setting bitcode to NO, but in my project it is set to YES and maybe that's why no one else encountered the problem yet.\nI found this in Realm changelog, although not mentioned why, but I assume for the very same reason:\n```\n0.93.2 Release notes (2015-06-12)\n=============================================================\nBugfixes\n\nFixed an issue where the packaged OS X Realm.framework was built with\n  GCC_GENERATE_TEST_COVERAGE_FILES and GCC_INSTRUMENT_PROGRAM_FLOW_ARCS\n  enabled.. \n",
    "Hsanka6": "@bogren  I have tried that as well as adding the pod. Ill post a repo with an example soon\n. does the pod import the ttf file?. https://github.com/Hsanka6/samp. i added the plist thing and pod still didnt work. is this the pod you used ? @bogren  pod 'FontAwesome.swift' and did you have the pod and ttf file?. I did what you asked imported font_awesome but my project cant find it and i added the font provided in info.plist. I updated my project on github. Can you check why it's still not working. ",
    "Reedyuk": "To anyone who might get the same issue as i did, with fontawesome swift, some of the selectable fonts are only in certain styles.\nIf you get the question mark, then try the styles, .solid, .regular, .brands\nOne of those should then appear.. ",
    "bennokress": "done ;). i'm new to pull requests (this is my first approved one), so i'm asking before doing commands:\n\nFor the changelog: should I add a new version (v2.0.1) or add the description to v2?\nIf I'm making it v2.0.1 should I run git tag as 2.0.1?\nRebasing is also new to me: is there more to it other than executing git rebase master in Terminal?. ok, I hope I did everything correctly (had to add an SSH key first to fetch --all). I can't see my latest commit (CHANGELOG.md) in my own repo now, so let me know if everything worked ;). Yes, I did. git push was executed before i commented here, git push origin master --force-with-lease after your last answer. Maybe you see what I'm doing wrong here:\n\n\nSorry for causing trouble, I'm just really unexperienced with this.. I see, now it's working :). happy to help \ud83d\udc4d . ",
    "moogle19": "@bogren @k0nserv @skerkewitz \nThis breaks the titleLabel disappearing animation in the example application:\nWith layoutIfNeeded before the animation block:\n\nWithout layoutIfNeeded / with layoutIfNeeded inside the animation block :\n\nCalling layoutIfNeeded inside the animation block would also work for the animation but probably not with #99 . @k0nserv \nI added swiftlint as a Build Phase (not sure if should run automatically on build or manually?) and fixed the errors and warnings generated by swiftlint.\nI used the default swiftlint settings (not sure if something specific should be enabled/disabled).\nTo fix the line length warnings (120 characters) I used this style of indentation.\naddErrorButton?.setTitle(NSLocalizedString(\"Add error\",\n                                           tableName: \"SkyFloatingLabelTextField\",\n                                           comment: \"add error button title\"), for: .normal)\nI hope this is okay or is there a preferable style?\nLet me know when something is wrong or needs change.\n(There also was a commit I did not intend to push which I reverted afterwards). ",
    "msilva": "Found the answer to my question here: \nDoing something like this defaults the text without capitalization:\nfloatingTextLabel.titleFormatter = { (text:String) -> String in\n        return text\n      }. ",
    "ugenlik": "I have used iconMarginBottom for now but it would be nice to autoalign this.. Thanks. ",
    "eliasbellido": "Any solution for this already?. ",
    "iosappshub": "@k0nserv I figure out that it required to update the cocoapods. I updated cocoapods and everything worked fine. Thanks for your help.. ",
    "ibhavin": "@bogren  Placeholder change only after I close the app and restart it but other UI displays RTL without restart the app. I have tried  UIView.appearance().semanticContentAttribute = .forceRightToLeft when I change to arabic from english but issue is not solved.\n. ",
    "Mehrdadmaskull": "I'm having the same issue too. With or without setting the alignment.. Sorry for the other PR. Everything good now?. I just tried using SFLTF in yet another project, but couldn't find the recent changes to the master branch on the latest version installed from Cocoapods.. Yea @k0nserv, it works now! Thanks for the release. ",
    "Maryom": "Hey,\nThanks for this helpful issue. I have a problem: in Main.strings (Arabic) I wrote:\n\"YGo-es-Lf5.placeholder\" = \"\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631\";\nBut as you can see in the image below the field didn't change! how can I change it?\nThanks.\n\n. When I shutdown and open my MacBook again all warning disappeared :). Thanks for your reply, I set placeholder values in storyboard, Do you think that I have to set them programmatically ?. Hey, \nI set all the attributes in storyboard as you can see in the below image:\n\nThen, I connected it: @IBOutlet weak var loginEmailInputView: SkyFloatingLabelTextField!\nAfter that I wrote: \"BcR-hT-edQ.placeholder\" = \"\u064a\u0631\u062c\u0649 \u0625\u062f\u062e\u0627\u0644 \u0628\u0631\u064a\u062f\u0643 \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a.\"; in Main.strings(Arabic) file.\nAny help?\nThank you so much.\n. @bogren Thanks for your reply.\nYou have placeholder set the Storyboard and then set it again in code?\nI just set it in Storyboard for English language. Then I wrote this \ud83d\udc47\ud83c\udffc line in Main.strings(Arabic) file to localize it:\n\"BcR-hT-edQ.placeholder\" = \"\u064a\u0631\u062c\u0649 \u0625\u062f\u062e\u0627\u0644 \u0628\u0631\u064a\u062f\u0643 \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a.\";\nStill it doesn't work :( Any help?. @bogren I set all the attributes in storyboard.\nThen, I connected it: @IBOutlet weak var loginEmailInputView: SkyFloatingLabelTextField!\nAfter that I wrote: \"BcR-hT-edQ.placeholder\" = \"\u064a\u0631\u062c\u0649 \u0625\u062f\u062e\u0627\u0644 \u0628\u0631\u064a\u062f\u0643 \u0627\u0644\u0625\u0644\u0643\u062a\u0631\u0648\u0646\u064a.\"; in Main.strings(Arabic) file.. Does it work for other languages?\nI just need Arabic and English.\nIs other labels and test translated?\nYes all localization work perfectly, except SkyFloatingLabelTextField :(\n. @bogren Thank you so much \ud83d\ude4f\ud83c\udffc. @k0nserv Thanks. I got busy with other projects and I didn't check it again. but all the needed information are provided above, what extra information you need?. I will try ASAP. Thank you.. @neatree Thank you \ud83d\ude4f\ud83c\udffc. ",
    "shaileshnparkhi": "Hi all,\nI am having the same issue , when I change Language from arabic to english or vice versa SkyFloatingLabelTextField is not updating according to LTR or RTL.After restarting the app LTR and RTL is working for SkyFloatingLabelTextField,but when I am changing language, runtime it is not updating.\nMy xcode version : 10.1\nSkyFloatingLabelTextField version : 3.6.0\n. ",
    "miradesne": "@k0nserv Yes it should still call the completion closure, but should pass the flag over so that we know how to update UI when we cancel the animation... Thanks! . ",
    "craigotis": "I'm seeing the same issue as described by @dexcell . Hi @k0nserv, thanks for checking back, but unfortunately I moved to a different framework/implementation for this sort of thing! Hope this is/gets resolved for you guys!. ",
    "CrisBarreiro": "It might be a bit late to comment on this issue, but using module SkyFloatingLabelTextField fixed the issue. ",
    "waveatom": "Apparently I had auto capitalization disabled on the device....closed. ",
    "mwfire": "Sry, my version of changelog was not up-to-date. :/. Annotating properties withdynamic is sufficient to support UIAppearance in Obj-C as well.. ",
    "ahmedsafadii": "+1. +1. ",
    "hardikamal": "+1. ",
    "HariNarayanan777": "I am also need this.. +1\n...  Please. the error was gone after i paste the below code in my pod file. and install the pod once again.\n# Workaround for Cocoapods issue #7606\npost_install do |installer|\n    installer.pods_project.build_configurations.each do |config|\n        config.build_settings.delete('CODE_SIGNING_ALLOWED')\n        config.build_settings.delete('CODE_SIGNING_REQUIRED')\n    end\nend\nthank you @k0nserv \n. ",
    "fadizant": "+1. ",
    "maasim94": "will I need to copy resource files to make changes or pod version will updated?. Thanks a lot. ",
    "fishfisher": "Aa, I see! Perfect, thanks\ud83d\ude0a\ud83d\udc4d\ntor. 6. apr. 2017 kl. 16.30 skrev Emil Bogren notifications@github.com:\n\nThe M_PI is available on the master branch and will be included in the\nnext version \ud83d\ude42\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Skyscanner/SkyFloatingLabelTextField/issues/123#issuecomment-292192513,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFHFOelpdCx4Ujh1Y7Scu5mdyHO3ACGwks5rtPcZgaJpZM4M1qLq\n.\n. \n",
    "iamir4g": "hi \nmy language phone is US but my app language Persian(RTL) how to change text alignment and placeholder? \n. ",
    "chlebta": "On 3.1.0 the placeholder is always uppercased, is it possible to disable that from storyboard?\n. ",
    "Aishly": "select on from storyboard, it will work\nextension SkyFloatingLabelTextField{\n    @IBInspectable var changeSelectedTitleFormat: Bool{\n        get{\n            return self.changeSelectedTitleFormat\n        }\n        set (isChange) {\n            if isChange{\n                fix(textField: self)\n            }\n        }\n    }\n  func fix(textField: SkyFloatingLabelTextField) {\n    textField.titleFormatter = { $0 }\n}\n\n}\n. ",
    "vishalhmonpara": "I'm using 3.0 version of SkyFloatingLabelTextField in swift 3.1 and getting the same error.. ",
    "Iniyarajan": "Initially I added by cocoa pods, On doing it not detect the headers\nSo I downloaded the source file and added inside the project folder.\nNow it works for SkyFloatingLabelTextField, and it crashes while using  SkyFloatingLabelTextFieldWithIcon.\nMay I know , what is correct flow of using this class ? \nWhat I'm doing wrong ?\nThanks,\nIniyarajan\n\n. Yes, I used the xcworkspace, But It shows error as below screenshot.After removing the source in project only with cocoa pods.\n\n. Now, I added and the error as below,\n\n\n. Yes, i checked all the outlets are connected correctly.But it works for SkyFloatingLabelTextField, it crashes only while using SkyFloatingLabelTextFieldWithIcon. ",
    "kmuddapu": "Im also facing same problem. Below are IBDesignables errors in Example App . Same thing happens in my project. \n\n. I just downloaded the library and run the example .In my project I used Cocoapods. Sure, \n\n. ",
    "ngthduy90": "I have the same problem of @kmuddapu. . ",
    "cph2117": "@k0nserv Also not working for me. Xcode 8.3.3, most recent SkyFloatingLabelTextField via Carthage.. ",
    "xZeok": "please fix this... last version in Xcode 9.3 Swift 4.1. ",
    "zhiyilee": "Fixed this issues ???\nSame issue  on xcode 9.3 Swift 4.1. ",
    "dancemonkey": "Darn, was excited to try this but also having the same issue. It's the latest XCode beta so I can try on the last stable release for now, but could really use it working with the latest upcoming version.\nEDIT: wait these are really old comments and I'm having the same issue! Is there a resolution or workaround for this problem?\nEDIT 2: nvm, fixed, wasn't correctly importing the framework and the @IBOutlet was still a UITextField.. ",
    "phinguyenterralogic": "For Ojective-C:\ntextField.titleFormatter = ^(NSString* text){\n        return text;\n    };. ",
    "RowanG1": "If you wonder why the titleformatter does not work, you have to update the title for the formatter to take effect.. ",
    "neatree": "I had a same problem. when you open the attributes inspector, you can see two placeholders. don't input the first one, use the second Placeholder on the Text Field section. It simply worked for me.. ",
    "ebeem": "I can confirm that this issue exists, and @neatree 's solution works perfectly. ",
    "hendksoliman": "Hello there , I have the same problem . when the app started and i choose Arabic language to be the app language, the skyfloating textfield still exists on the left not on the right. but i noticed that when i close the app and open it again everything works well at its place. Any Help please ?\nThanks in advance. ",
    "Matic1993": "That is what I do now. I have validation code in my project. \nBut when you use SkyFloatingLabelTextField in many View Controllers you have to make some sort of manager that will have validation logic or you must implement validation logic in any View Controller. \nSo I was thinking why not put that logic in SkyFloatingLabelTextField. Then the validation will be like one liner in your code.. Hey @k0nserv \nthank you for your suggestion - do you know for any tutorial where I can check your idea?\nI will implement your suggestion.\nThank you for your help.. ",
    "ChrisGriffiths": "@kalmurzayev you can set the closure to a different value like below, as titleFormatter is stored as a var\nlet textView = SkyFloatingLabelTextField(frame: .zero)\ntextView.titleFormatter = { (text: String) -> String in\n    //Or what ever you want\n    return text.lowercased()\n}. ",
    "kalmurzayev": "@ChrisGriffiths Oh so you just change the value of titleFormatter property. Thanks, man.. ",
    "trr-amsiq": "The title is correct just a bunch of fixes. Yes it is suggestions. Can you delete PR than?. ",
    "rubenadlm": "Done, thanks @k0nserv . ",
    "PedroAnibarro1": "I did a PR to support images. Just set the icon type to image and set the image. \nPR: #159 . Hi @k0nserv! I just pushed the requested changes. Let me know. Thanks.. I'm sorry dromerobarria, I need to fix some tests. If you want, you can use it from my repository. It's working. I just need to fix some minor things for the PR. I will be doing it this weekend. . Hi @k0nserv. I made all the requested changes. Let me know if you need something else. Thanks!. @k0nserv Hi! Sorry for the delay. I added the changelog. If you need anything else please let me know. Have been a pleasure to collaborate in this project.. Hey @k0nserv, apparently the Travis CI build is failing because of some Swiftlint rule that is failing... I do not see the error locally. Do you have any idea of what the cause may be? . Done. Tests were not building because of swxftlint identifier_name rule. I disabled that rule in the declaration of _iconType.. Done. Let me know if you see any more redundant lines. . In my experience I have always see either _iconType format or iconTypeAdapter format. Though, iconTypeValue makes sense. I changed it to that last one.. Nice catch! Thanks! . ",
    "bradlgray01": "yes\nFrom: Emil Bogren notifications@github.com\nReply-To: Skyscanner/SkyFloatingLabelTextField reply@reply.github.com\nDate: Tuesday, June 20, 2017 at 12:58 AM\nTo: Skyscanner/SkyFloatingLabelTextField SkyFloatingLabelTextField@noreply.github.com\nCc: Brad Gray Brad.Gray@hudsonandmarshall.com, Author author@noreply.github.com\nSubject: Re: [Skyscanner/SkyFloatingLabelTextField] Shared is unavailable: use view controller based solutions where appropriate instead. (#150)\nSwift version?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/Skyscanner/SkyFloatingLabelTextField/issues/150#issuecomment-309675129, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AYT6NUd0fkeVdJjaed_uMlSkIrbGFJBZks5sF3uvgaJpZM4N-61C.\n. I'm using swift 3, deployment 10.2. I'm using the current version of Xcode, NON-beta. . xcode 8.3.3. And I think I'm actually using Swift 3.1 as that is what is needed on Xcode 8.3.3. Unfortunately no. I just checked, and my my Only App Extension is set to no. . yep. Hmm... It works on a fresh project. So strange. I guess it's my end that something is gone awry. It's fine I'll, I'll do some more research to see whats going on in my end. . Will do, and thanks for your help, much appreciated .. ",
    "mmmahajan": "Hi I solved this problem.\nSet to Allow API Extension to No to particular framework who gives this e\nerror like IQKeyboardManager\nConsider you facing this issue for IQKeyboardManager and you installed this framework using Pod. Then your project click on Pod -> CLick on IqkeyboardManager.\nAnd set Allow API Extension to No\n. ",
    "alvincrisuy": "@mmmahajan You rock! Your suggestion works like a charm! . ",
    "niclaughter": "So interestingly, @mmmahajan's solution worked for me to silence the error in the pod I installed, but in the module I'm trying to access shared from the same error is popping up now. I've verified that this setting is set to \"NO\" in the project file as well.. ",
    "nitrochaien": "Thank you so much @mmmahajan, u just save my life man. ",
    "prakashraman": "Sorry, my bad. It is working fine. \nPlease delete this issue.. ",
    "hemangshah": "@k0nserv, Yes, I have solved this issue. \nhttps://stackoverflow.com/questions/44904556/use-of-undeclared-identifier-in-xcode-9-0/44905219?noredirect=1#comment76788221_44905219\nI was creating a folder name 'SkyFloatingLabelTextField' and then putting all the source inside it. I changed the folder name and it worked for me.. ",
    "KrLx1994roller": "I downloaded this branch with CocoaPods and it is working fine ;). Then what do I have to do to be able to use it using CocoaPods?. This is also happening with password fields. When you delete just one character in a password field, iOS automatically deletes the entire password. It is then when the title disappears.. ",
    "Babelfisch": "The error only occurs if I install SkyFloatingLabelTextField als Cocoa Pod. The test project from GitHub itself works fine in Xcode 9 beta 3.. \ud83d\udc4d for swift-4 branch. ",
    "nalexander50": "Swift 4 user here. Can we get an ETA on the Swift 4 branch? Looked like there were a couple PRs that just haven't been merged yet. Having to unlock and edit the framework manually is making me feel dirty!. I didn't realize this was an on-going, open issue for the Cocoapods team. Looks like the post install hook should work well enough for now -- I will try it when I get home. It's not pretty but it's less ugly than unlocking and manually editing the framework. Hopefully Cocoapods can come up with an elegant solution to this problem for the future. Similarly, it would also be nice if I could get Xcode 9 to stop nagging me about migrating Pod code to Swift 4 syntax -- having a single phantom warning is really irritating.\nI agree that you should avoid making a breaking change when it's not necessary; however, there is something to be said about not burdening users who are using the latest versions (not that adding some copy-paste lines to the Podfile is really a burden, just an expression). Granted, it would become unwieldy to maintain N branches to support N versions of Swift as the years go by. I noticed that PromiseKit uses some #if swift(>=4.0) checks to help with compatibility but that can really make your codebase look ugly and may not be the best solution in some cases. This is definitely an interesting problem and I'm curious to see how Cocoapods addresses it.\nAt any rate, thanks for the prompt response. I'll try out that post install hook.. Looks like it's working just fine.. ",
    "DaRkRaGe": "It's working now with this pod: SkyFloatingLabelTextField', git: 'https://github.com/Skyscanner/SkyFloatingLabelTextField/'. ",
    "dromerobarria": "Any news with this?. ",
    "Mycose": "You can fix it by removing || isHighlighted from fileprivate func updateTitleColor(). ",
    "shaharukhs": "Its work after removing || isHighlighted for now. Thank you.. ",
    "vCrespoP": "It would be really nice to include this, as if we modify the code but then update the dependencies, this bug would be back again.\nThanks!. ",
    "aashishtamsya": "Try on deployment target: 10.3.3, device: iPad. ",
    "sathamkhussain": "How to change the placeholder color? . ",
    "nestorAppsolutely": "Hello, I tried your suggestion bogren and it worked. Thanks! . ",
    "danya0365": "Me too.. ",
    "AbdulazizAlmohsen": "Pod. No I actually haven't figured out how to use. Can you please guide me . Just this in my pod file ?\npost_install do |installer|\n    installer.pods_project.targets.each do |target|\n        if target.name == 'SkyFloatingLabelTextField'\n            target.build_configurations.each do |config|\n                config.build_settings['SWIFT_VERSION'] = '3.2'\n            end\n        end\n    end\nend. This is what my pod looks like. Is that correct ?\n```\npod 'OneSignal', '>= 2.5.2', '< 3.0'\npod 'RQShineLabel'\npost_install do |installer|\n    installer.pods_project.targets.each do |target|\n        if target.name == 'SkyFloatingLabelTextField'\n            target.build_configurations.each do |config|\n                config.build_settings['SWIFT_VERSION'] = '3.2'\n            end\n        end\n    end\nend\nend\ntarget 'OneSignalNotificationServiceExtension' do\n  use_frameworks!\npod 'OneSignal', '>= 2.5.2', '< 3.0'\nend\n```. I'm sorry but it's not installed with the other pods. Can you please check the pod structure for me. First time to use the hook :) . thank you . Yeah . ",
    "nodahikaru": "Yes, sorry, it was my mistakes due to other problem. \n. ",
    "dagi12": "Hey I accidentally use appearance proxy again on UiTextField after above code. Problem is gone.. ",
    "pbhatt-mphrx": "Hi, Any update. I am having same requirement.. ",
    "iain-reid": "If you set a height constraint (larger than default) for the text field it will lay out the line, field and title label with more spacing. . ",
    "kanjanaSi": "@k0nserv \n\n. \ud83c\udf89\ud83c\udf89\ud83c\udf89\ud83c\udf89\ud83c\udf89. Fixed!. ",
    "zarzonis": "@k0nserv Hi Hugo. Do you have any plan to release this? I was ready to implement this feature and I just found out this PR.. ",
    "robertodias180": "@k0nserv here is an example . @k0nserv if I open and close the view it calls deinited but if you select any of the fields or write any text on them and then click back it does not. . that makes things worst since we can't fix it...\nthanks for the help @k0nserv \ud83d\ude03 . ",
    "MauricioDomenech": "test.zip\nHere you have an example, with Xcode 9.3, the app crash when I try to set the title manually.. ",
    "remingtonchan": "@k0nserv \nI encounter the same scenario in Xcode 9.4.1. \nThis is the error I get:\nUnknown class SkyFloatingLabelTextField in Interface Builder file.\nI installed the library through Carthage.\nAnother issue that's potentially related is being unable to assign the module under the Custom Class in the Interface Builder.\n. @k0nserv \nI drag the framework to Linked Frameworks and Libraries.\nAnd I do not encounter an error when I reference an object of the SkyFloatingLabelTextField type.\nBut for the module under Custom Class in the Interface Builder, nothing shows in the drop down. Manually typing in the module name (SkyFloatingLabelTextField) also yields the same error.\nEDIT:\nI found out that I also cannot jump to SkyFloatingLabelTextField's definition, encountering this error:\n```\nCouldn't Generate Swift Representation:\nError (from SourceKit):\n\"Connection Interrupted\"\n```\nEDIT 2:\nI ended up copying the files under the Sources folder manually to resolve my issue.\n. ",
    "SzadyDesigns": "I'm having the same issue.  I'm pre-filling the text for a textField with fetched data from an API call, and the text isn't shrinking to fit.  I've added textFieldName.adjustsFontSizeToFitWidth = true as well checking the box in IB and nothing seems to fix it.  Help?. ",
    "Tovkal": "Apparently UITextField will only go down to a minimum font size of 14. If you set the minimum to 10, it will only reach 14. \nSource: https://stackoverflow.com/a/30881385/1283228. ",
    "joyalserrao": "Hello @k0nserv  I have done with icon color with image. is it right way ??? but it work well\n```\n    let img: UIImage = UIImage(named: \"user_id\")!\n    let imgSize: CGSize = self.password.iconLabel.frame.size\n\n    UIGraphicsBeginImageContextWithOptions(imgSize, false, 0.0)\n    img.draw(in: CGRect.init(x: 0, y: 0, width: imgSize.width, height: imgSize.height ))\n    let newImage: UIImage = UIGraphicsGetImageFromCurrentImageContext()!\n    UIGraphicsEndImageContext();\n    self.password.iconLabel.backgroundColor = UIColor(patternImage: newImage)\n\n```. ",
    "dennytwix": "Hi @ksadowski \nThe problem is that titleLabel is a child of textField and they both have accessibility enabled, so titleLabel is not accessible in this case. \nThere is a workaround if you use accessibility only for UI tests \u2013 to disable accessibility for textField:\n```\ntextField.isAccessibilityElement = false\ntextField.accessibilityIdentifier = \"test-field\"\ntextField.titleLabel.isAccessibilityElement = true\ntextField.titleLabel.accessibilityIdentifier = \"test-field-title\"\n```\nLater in UI tests you can access both of them:\nlet testField = elementsQuery.textFields[\"test-field\"]\nlet testFieldTitle = testField.staticTexts[\"test-field-title\"]\n. ",
    "drjasonharrison": "It is likely that the crash will be very hard to reproduce, however removing the force unwrap is an improvement that will reduce the cause of the crash.. We're setting the font ourselves, it's not a zero point font size. And it's only been seen once. Possibly a race condition in the UIKit autolayout vs storyboard resource loading.. Haven't seen it again. Going to close this as unreproducible though the use of forced unwrapping in production code continues to bother me.. ",
    "henrique2601": "You can easily create a normal text field than set de Class and module as SkyFloatingLabelTextField in your storyboard.\n\nAfter that you can set any custom field that you want in your textfield:\n\nMaybe the author can add it on readme, maybe I will create a PR for that :). ",
    "ximeft29": "Hi! I am actually trying with the storyview but my textfield, I get kind of a big space between the textfield and the text that is being written. Here's  what I see in my builder\n\nCan this be solved via code or through the storyboard?. ",
    "SYAM1263": "Please Upload Objective C Code. ",
    "InbarSletean": "@k0nserv I've added the changes to the CHANGELOG.md and squashed commits\n. ",
    "freakdragon": "I didn't like it too. That's why I've changed the \"needToUpperCasePlaceholder\" function and added \"needToUpperCasePlaceholder\" variable:\n@IBInspectable dynamic open var needToUpperCasePlaceholder: Bool = false {\n        didSet {\n        }\n    }\nopen var titleFormatter: ((Bool, String) -> String) = { (needToUpperCasePlaceholder: Bool, text: String) -> String in\n        return needToUpperCasePlaceholder ? text.uppercased() : text\n    }\nWhen I changed it I had to change the \"updateTitleLabel\", \"titleOrPlaceholder\" and \"selectedTitleOrTitlePlaceholder\" functions:\n```\nfileprivate func updateTitleLabel(_ animated: Bool = false) {\n    var titleText: String? = nil\n    if hasErrorMessage {\n        titleText = titleFormatter(false, errorMessage!)\n    } else {\n        if editingOrSelected {\n            titleText = selectedTitleOrTitlePlaceholder()\n            if titleText == nil {\n                titleText = titleOrPlaceholder()\n            }\n        } else {\n            titleText = titleOrPlaceholder()\n        }\n    }\n    titleLabel.text = titleText\n\n    updateTitleVisibility(animated)\n}\n\nfileprivate func titleOrPlaceholder() -> String? {\n        guard let title = title ?? placeholder else {\n            return nil\n        }\n        return titleFormatter(needToUpperCasePlaceholder, title)\n    }\nfileprivate func selectedTitleOrTitlePlaceholder() -> String? {\n        guard let title = selectedTitle ?? title ?? placeholder else {\n            return nil\n        }\n        return titleFormatter(needToUpperCasePlaceholder, title)\n    }\n```. ",
    "prasanth270": "Like @k0nserv suggested, we can use titleFormatter:\nself.password.titleFormatter = { (text: String) in\n           return text\n   }. ",
    "ohayon": "Worth noting - this needs to be set before the title itself is set, otherwise the titleFormatter block doesn't get called. \ud83d\ude80 . ",
    "commando24": "@k0nserv i think  you mention that.It will be really helpful for other users.. ",
    "behdaad": "@k0nserv I updated CHANGELOG.md according to previous entries. . ",
    "ahmedhatem003": "Thank you @k0nserv \nI'll use reactions next time\nI went through solutions in the link but couldn't find _CodeSignature folder in SkyFloatingLabelTextField.framework in finder\n. ",
    "bludginozzie": "No, rolling back to 3.4.0 does not fix the issue.  Could it be an incompatibility with Cocoapods 1.5? I noticed it has some updates for static libraries that maybe causing this issue? http://blog.cocoapods.org/CocoaPods-1.5.0/. Thank you, the workaround works great.. ",
    "merlin910": "I also have this same issue when integrating via Carthage the log file points to the .swiftlint.yml file and when I try to build manually I have to comment out that script to get it to build.\n/Library/Caches/org.carthage.CarthageKit/DerivedData/9.3_9E145/SkyFloatingLabelTextField/v3.4.1/Build/Intermediates.noindex/ArchiveIntermediates/SkyFloatingLabelTextField/IntermediateBuildFilesPath/SkyFloatingLabelTextField.build/Release-iphoneos/SkyFloatingLabelTextField.build/Script-0AA2E1E11E9F54E0007B6FEC.sh: line 6: 73578 Abort trap: 6           swiftlint lint --config .swiftlint.yml. ",
    "D-Mx": "I ran carthage again to post the log but with version \"v3.5.1\" worked, I don't know if that changed anything but it has finally built. Sorry for the inconvenience.. ",
    "ambujshukla99": "Hi @k0nserv , thanks for checking the issue. So did you copy paste the string which includes spacing means after putting the text in the textfield. Or did you just copy a string which has no space and then pasted.\nBecause I have copied the string which have no space and then paste on the skyfloatinglabeltextfield but not able to get the formatted string.\nPlease inform if anything unclear.. Please check the screenshot, I need to do like this. I have increased the fonts to achieve this.\n\n. It is working fine. It's my bad, I was doing something wrong:(. ",
    "tester87": "Solved. Sample code as below:-\n- (BOOL)textField:(UITextField )textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString )string {\nif (textField == txtEmail)\n{\n    if (txtEmail.text.length >= 12 && range.length == 0)\n    {\n        return NO;\n    }\n    if(![txtEmail.text containsString:@\"@\"])\n    {\n        txtEmail.errorMessage = @\"Invalid Email\";\n    }\n    else\n    {\n        txtEmail.errorMessage = @\"\";\n    }\n}\n\nreturn YES;\n\n}. Hi k0nserv, noted with thanks!. ",
    "antonyjamese": "@connorcowling Did you import the class?. We can decrease the textfield height so that it will become closer. Hi, The function is working fine. But still a char is visible partially.. ",
    "tarikstafford": "found the problem here: github/CocoaPods/CocoaPods#7606. ",
    "antonmedstorta": "I did. Maybe I should've commented and said so, sorry. The solution was quite simple in the end, really. As I had previously created the textfield it was linked to the ViewController as a UITextField Outlet, and not as a SkyFloatingLabelTextField. After I re-linked it from the Interface Builder and got all my files in order it found the definition and I was able to change the titleLabel property. \nThanks for checking in!. ",
    "alextov": "@k0nserv Done.. ",
    "JasonGreenAmerica": "sky ignores the alignment property of the base textfield.. +1. ",
    "m3rLin0WoRK": "It should appear like this\n(Watch vertical centering) \nThank you!. ",
    "djbe": "@k0nserv That's what the Travis build is for \ud83d\ude04 \nWe can't add Xcode 10 yet as a variation on TravisCI, but we should once it's available.. Ah, right, I read too quickly through your comment. . Pretty sure this was still compatible with older swift versions, I made similar PRs for a bunch of other projects. But whatever works \ud83e\udd37\u200d\u2642\ufe0f, glad this project supports 4.2 now. . ",
    "lesyaVorozhbyt": "@k0nserv Thanks for your review, I have already fixed tests, please see again.. ",
    "HadiYaac": "I believe you are trying to change the color property from the Interface builder right?\nAlthough it seems to be a bug not changing the colors if changed from the IB, but it's still working if you tried to change that programmatically.\nYou can try to access the selectedTitleColor property for your textfield after connecting your outlet.\nYou may need to import SkyFloatingLabelTextField in the viewController you are working in.\nHope that helps you \ud83d\udc4d . ",
    "olerich": "The property you have to set is called \ntitleColor\n. ",
    "mojtaba-almoussawi": "I'am talking about the vertical alignment of placeholder not about the horizontal alignment!! As you can see i have already make it to be centered horizontally , but the placeholder is nearly at the bottom of the textfield , so my question was is there a way to keep it in middle of the textField.\nThat what i have done :\n\nAnd that what i want:\n\n. Yes you are right, but i need to set the background color. The only solution i have so far is to make the textFields a subview in UIView, then clear the color of texFiled to be as you have mentioned, and set the background color of UIView. Is there another way to achieve that? thx . Ok @k0nserv, thanks. . ",
    "pratyushpratik": "have anyone found the issue yet?. ",
    "Dalein": "Sorry, it was my mistake. I incorrectly connected IBOutlets.. ",
    "emreond": "This is what I was looking for. Thank you!\nBtw, when I give top anchor of below view to message textviews' bottom anchor. Bottom view moves down a little bit. Cuz I was init textview without error message. So change messageLabelTopMargin with below code;\nprivate var messageLabelHeightWithTopMargin: CGFloat {\n        return (messageLabelHeight == 0) ? messageFont.lineHeight + topMargin : messageLabelHeight + topMargin\n    }. ",
    "jeffreyjackson": "lol, all good man. ",
    "bojanstef": "I'm having a similar issue with Xcode Version 9.4.1 (9F2000)\nSkyFloatingLabelTextField Version: pod 'SkyFloatingLabelTextField'\nDeployment Target: iOS 11\nBase SDK: iOS 12\nMethod of Integration: CocoaPods\n```\nbojanstef@mbp$ pod install \nInstalling SkyFloatingLabelTextField (3.4.1)\n[!] Error installing SkyFloatingLabelTextField\n[!] /usr/local/bin/git clone https://github.com/Skyscanner/SkyFloatingLabelTextField.git /var/folders/_y/fmccqc9j7md7422mvvmgf9_m0000gn/T/d20180913-72525-1j0sjnk --template= --single-branch --depth 1 --branch v3.4.1\nCloning into '/var/folders/_y/fmccqc9j7md7422mvvmgf9_m0000gn/T/d20180913-72525-1j0sjnk'...\nfatal: unable to access 'https://github.com/Skyscanner/SkyFloatingLabelTextField.git/': Could not resolve host: github.com\n```. Nevermind, I got mine to work. Was weird terminal settings on my local. . ",
    "Abdul-Hannan": "Fails with swift 4.2. ",
    "jlaws": "Works great, thank you!. ",
    "larryonoff": "@k0nserv done. ",
    "newmanw": "Still getting a warning in xcode to convert to Swift 4.2 when trying to use version 3.6.0.\n\n. After a little more research it looks like xcode is really bad at recognizing when multiple versions of swift are supported:\n\nIs there any way to \"force\" xcode to ignore this type of thing, would be nice not to have the \"you need to update your swift projects warning\"\n. My swift version is already set to 4.2.  This still doesn't prevent xcode from seeing code that is not compat (the code in your else statement) with swift 4.2 and thinking it needs to be converted.  Since that code will not run its not a big deal, just more fun with swift and xcode.. Correct.  Xcode is picking up code that is not compat with 4.2 and it wants to update that code.. ",
    "sandeepbol": "I also have the same issue but with another third party library called 'UICircularProgressRing'. I think the problem is not related to the particular library but may be a bug with Xcode 10.. Can you be a little more specific for it to be help to others as well? I tried reintegrating and reinstalling the Pods. updated all the pods. I still have the error. Thanks.. Where is Valid architectures setting in Xcode 10? I couldn't find it.\n\n. It might help others. I did following things - don't know what helped but I was able to archive my app\n1) Remove armv7 from valid architectures of a private dynamic framework that I was using.\n2) Converted my project code to Swift 4.2 (It was swift 4 before).\n2) Deintegrate/Integrate Pods again (Manually set the swift version to 4 for those that do not support swift 4.2 yet).\nI still don't have an option of setting valid architectures for my Xcode project.. ",
    "LastSprint": "Yes. I reincluded all my source code files and this error dissappeared . ",
    "ealmada90": "\nI also have the same issue but with another third party library called 'UICircularProgressRing'. I think the problem is not related to the particular library but may be a bug with Xcode 10.\n\n@sandeepbol Any luck with this issue? I have the same problem can't Archive i get 'Abort Trap: 6' error in 'UICircularProgressRing' \nUPDATE:\nfound a solution by removing armv7 from Valid Architectures of project build settings. Here is a link were i found the solution/explanation:\nhttps://stackoverflow.com/questions/52389664/xcode-10-not-being-able-to-archive-project\n. ",
    "ahmed-sal": "@sandeepbol , you need to select the All tab in the build settings (right next to the Basics tab that is selected in the screenshot). That will make the valid architectures show up.. ",
    "NupendraVerma": "\nHey @sunkumar you can change this behaviour by setting the titleFormatter property\n\nThank You sir . ",
    "KompoD": "@k0nserv, it's interesting question. Please answer as soon as u can :). ",
    "promehul": "how can we use it as label in xcode?\n. ",
    "Tom-Fox1": "This would be a great, any chance of it getting implemented? I could try making a PR but have no knowledge of the code for this library.. @alex02rt thanks for sharing this - I have adjusted it slightly for my use case by adding right padding and moving down the title label. The result and source code is attached below in case anyone is interested:\n\nclass TomsFloatingLabelTextField: SkyFloatingLabelTextField {\n\n    private let leftPadding = CGFloat(6)\n    private let rightPadding = CGFloat(6)\n\n    override open func placeholderRect(forBounds bounds: CGRect) -> CGRect {\n\n        let rect = CGRect(\n            x: leftPadding,\n            y: titleHeight(),\n            width: bounds.size.width - rightPadding,\n            height: bounds.size.height - titleHeight() - selectedLineHeight\n        )\n\n        return rect\n\n    }\n\n    override func textRect(forBounds bounds: CGRect) -> CGRect {\n\n        let rect = CGRect(\n            x: leftPadding,\n            y: titleHeight(),\n            width: bounds.size.width - rightPadding,\n            height: bounds.size.height - titleHeight() - selectedLineHeight\n        )\n\n        return rect\n\n    }\n\n    override func editingRect(forBounds bounds: CGRect) -> CGRect {\n\n        let rect = CGRect(\n            x: leftPadding,\n            y: titleHeight(),\n            width: bounds.size.width - rightPadding,\n            height: bounds.size.height - titleHeight() - selectedLineHeight\n        )\n\n        return rect\n\n    }\n\n    override func titleLabelRectForBounds(_ bounds: CGRect, editing: Bool) -> CGRect {\n\n        if editing {\n            return CGRect(x: leftPadding, y: 5, width: bounds.size.width, height: titleHeight())\n        }\n\n        return CGRect(x: leftPadding, y: titleHeight(), width: bounds.size.width, height: titleHeight())\n    }\n\n}. The only issue is that I would like to centre the placeholder (which I can do) however I don't know how to move it to the location where the user will type (further down) when the text view becomes the first responder.\n\nAny ideas?. ",
    "alex02rt": "I have same problem, this is my current solution. Hope it helps.\nclass CustomTextField: SkyFloatingLabelTextField {\n    private let leftPadding = CGFloat(6)\n    override open func placeholderRect(forBounds bounds: CGRect) -> CGRect {\n        let rect = CGRect(\n            x: leftPadding,\n            y: titleHeight(),\n            width: bounds.size.width,\n            height: bounds.size.height - titleHeight() - selectedLineHeight\n        )\n        return rect\n    }\n    override func titleLabelRectForBounds(_ bounds: CGRect, editing: Bool) -> CGRect {\n        if editing {\n            return CGRect(x: leftPadding, y: 0, width: bounds.size.width, height: titleHeight())\n        }\n        return CGRect(x: leftPadding, y: titleHeight(), width: bounds.size.width, height: titleHeight())\n    }\n}. I have same problem, this is my current solution. Hope it helps.\n```\nclass CustomTextField: SkyFloatingLabelTextField {\n    private var _titleFormatter: (String) -> String = { (text: String) -> String in\n        return text\n    }\n    override var titleFormatter: ((String) -> String) {\n        get {\n            return _titleFormatter\n        }\n        set {\n    }\n}\n\n}\n```. ",
    "itsfelipesan": "I think that is not the better solution, but I solved the problem by creating the following function:\n```\nfunc putCaretAtTheEnd()\n    {\n        if(selectedTextRange?.end == endOfDocument)\n        {\n            let arbitraryValue: Int = text!.count - 1\n            if let newPosition = position(from: beginningOfDocument, offset: arbitraryValue) {\n                selectedTextRange = textRange(from: newPosition, to: newPosition)\n                textAlignment = .left\n            }\n        let arbitraryValue2: Int = text!.count\n        if let newPosition2 = position(from: beginningOfDocument, offset: arbitraryValue2) {\n            selectedTextRange = textRange(from: newPosition2, to: newPosition2)\n            textAlignment = .left\n        }\n    }\n}\n\n```\nIt's called inside the editingChanged() in SkyFloatingTextField.swift:\n@objc open func editingChanged() {\n        updateControl(true)\n        updateTitleLabel(true)\n        putCaretAtTheEnd()\n    }. ",
    "fadiBlessedTree": "I found the problem \nyou have to remove \n~~rect.origin.x -= CGFloat(iconWidth + iconMarginLeft)~~\nfrom textRect too like editingRect\nClass : (SkyFloatingLabelTextFieldWithIcon)\nFunction : (textRect(forBounds bounds: CGRect) -> CGRect)\nFull function after fix the problem :\nruby\noverride open func textRect(forBounds bounds: CGRect) -> CGRect {\n        var rect = super.textRect(forBounds: bounds)\n        if isLTRLanguage {\n            rect.origin.x += CGFloat(iconWidth + iconMarginLeft)\n        } else {\n            // don't change the text field X position for RTL languages\n        }\n        rect.size.width -= CGFloat(iconWidth + iconMarginLeft)\n        return rect\n    }\nhope we get this fix in next release.\nThanks \ud83d\ude0a\n. ",
    "ahmediosDeveloper": "\nI found the problem\nyou have to remove\nrect.origin.x -= CGFloat(iconWidth + iconMarginLeft)\nfrom textRect too like editingRect\nClass : (SkyFloatingLabelTextFieldWithIcon)\nFunction : (textRect(forBounds bounds: CGRect) -> CGRect)\nFull function after fix the problem :\nruby\noverride open func textRect(forBounds bounds: CGRect) -> CGRect {\n        var rect = super.textRect(forBounds: bounds)\n        if isLTRLanguage {\n            rect.origin.x += CGFloat(iconWidth + iconMarginLeft)\n        } else {\n            // don't change the text field X position for RTL languages\n        }\n        rect.size.width -= CGFloat(iconWidth + iconMarginLeft)\n        return rect\n    }\nhope we get this fix in next release.\nThanks \ud83d\ude0a\n\ni try that but still have same issue. ",
    "dseehof": "Hi Martin - did you find anything or even ported parts of this library to MacOS. I'm also quite interested.. ",
    "martindufort": "I've created a fork and started the port.\nUnfortunately this is not a high priority for now so it's moving slowly.\nBut it's on the radar.\nOn Fri, Feb 8, 2019 at 04:06 dseehof notifications@github.com wrote:\n\nHi Martin - did you find anything or even ported parts of this library to\nMacOS. I'm also quite interested.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Skyscanner/SkyFloatingLabelTextField/issues/262#issuecomment-461735894,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AbmB8fZkRcjltng8J1T0duMeLiKi5CC_ks5vLT3-gaJpZM4ZYfSU\n.\n. \n",
    "Bernix01": "See #274 added a little implementation supporting tint color, it works.. It's done. merge pls?. Change added. Although not doing so has no side effects. ",
    "fbernardo": "I believe there's already a way of doing this. My bad \ud83d\ude28 . ",
    "spencerdiniz": "\nThe textColor of errorLabel does not get updated in updateColors.\n\nIs this necessary?\nerrorLabel.textColor is always errorColor, which is set in createErrorLabel().. Issues addressed and branch updated.. > It is necessary. If a user of this class changes the errorColor after initialization, the color of errorLabel will not be updated and it will still be red.\nFixed and pushed.. Hi. We did consider implementing this as a subclass, but that would require us to refactor a lot of our existing code that uses the current class. That\u2019s why we decided to include the feature in the class itself and not subclass. \nAlso, when we considered adding this feature through subclassing, we found out the some of the properties and methods are private, which doesn't allow us to override them.. ",
    "taher-mosbah": "Will update CI script as soon as Xcode 10.2 is available.. Hey @k0nserv I won't have much time coming days, feel free to pick it up, really sorry for that.. ",
    "tzzen93": "Opp! Great! it is working well. Thank you so much bro!. ",
    "okipol88": "@wolffan \nSorry was absent for some time.\nThe level is, as what i recall, the suggestion of xCode8 build settings.\n. ",
    "shaundon": "I thought we weren't on Xcode 10 yet?. So is this something that was part of string in Swift prior to 4.2 but now isn't necessary?. Haha fair!. Noice. "
}