{
    "yyx990803": "This is intended - 0.0.0.0 listens to localhost and in addition exposes the app over the local network so that you can test it with mobile devices etc.\n. This has been fixed in vue-cli@1.1.2.\n. It's explained in the comments in Hello.vue.\n. This is caused by a build script regression of vue@1.0.14. Releasing a patch release soon.\n. This is expected - only CSS in the initial entry chunk is extracted. Any async-loaded chunks CSS is dynamically inserted. This is actually recommended because you don't want to load all the CSS in your async chunks on initial load.\nSee http://webpack.github.io/docs/stylesheets.html#separate-css-bundle\n. You can do that if you want to, just remove the vue-style-loader argument on these lines: https://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.prod.conf.js#L27-L30\n. Oh I guess I misunderstood your last comment. See this section: http://webpack.github.io/docs/stylesheets.html#styles-in-commons-chunk\n. \u8bf7\u8bf4\u5177\u4f53\u4e00\u70b9\u3002\u6211\u8fd9\u91cc build \u7684\u56fe\u7247\u662f\u5e26 hash \u7684\u3002\n. \u56fe\u7247\u6587\u4ef6\u540d\u672c\u8eab\u4e0d\u5e26 hash\uff0c\u4f46\u662f\u4f60\u6a21\u677f\u91cc\u7684 url \u662f\u5e26 hash \u7684... \u56e0\u4e3a\u8fd9\u91cc\u7684 hash \u662f url \u8bf7\u6c42\u7684 query \u800c\u4e0d\u662f\u6587\u4ef6\u540d\u7684\u4e00\u90e8\u5206\u3002\n. It's working properly for me... any compilation errors? Can't help without a reproduction.\n. Did you notice the lint warnings in the console after you do npm run dev? You need to fix the lint errors for the bundle to compile.\n. The template comes with pre-configured ESlint linting. You can either tweak it to your own preference or disable it by removing eslint in here and here.\n. \u8def\u5f84\u662f\u6b63\u786e\u7684\uff0c\u6784\u5efa\u540e\u7684\u6587\u4ef6\u662f\u6574\u4e2a\u628a dist \u6587\u4ef6\u7528\u9759\u6001\u6587\u4ef6\u670d\u52a1\u5668 serve \u4e86\u624d\u80fd\u770b\u3002\n\u5982\u679c\u4f60\u60f3\u6539\u8def\u5f84\uff0c\u5e94\u8be5\u4fee\u6539 webpack config \u91cc\u9762\u7684 publicPath.\n. This should be a vue-loader issue. I think I closed vue-hot-reload-api's issues due to spamming a while ago, but it's not related to CSS hot reloading anyway.\n. https://github.com/vuejs-templates/webpack/commit/e9060388463e29bb52ba45a5dbeec830863b2e72\n. Thanks @chrisvfritz for the explanation :)\n. The built file needs to be served over HTTP.\n. Thanks for the detailed report. So after investigation, this is actually caused by ESLint/espree monkey-patching Acorn (which is in turn depended by Jade)... it has already been fixed in espree and should expect a new patch release any time: https://github.com/eslint/espree/issues/250\n. espree@3.0.2 is out, update your eslint and it should work :)\n. In https://github.com/vuejs-templates/webpack/blob/master/template/src/main.js#L7 we are mounting the root instance onto <body>, with a child component named App - which will be rendered into the <app></app> tag.\n. Thanks! Ran into an issue where it would complain about sourceMap position not found in some cases, tracked down the problem and almost ready to submit a PR to fix it... then found this: https://github.com/karma-runner/karma/issues/1274\nSurprisingly it has been there for over a year and was just fixed just 8 days ago...\n. If you have errors thrown inside a *.vue file you will see that warning. (It still works though)\n. Awesome! Thanks a lot :)\n. You should think of css as module dependencies when using webpack. You can import css or sass directly inside *.vue files using <style src=\"...\" lang=\"...\"></style>.\n. <img> inside Vue templates will be processed by vue-html-loader which will serve the target file correctly on the dev server (and inline/copy the file during production build).\nFor JavaScript you should really install them through npm and just import instead of thinking about script tags.\n. You need to use the router before calling Vue.extend.\n. I forked it to provide better source map support for injected style tags during development, but other than that they are largely the same.\n. Hmm, I just personally never had the need to import html snippets when using Vue. But it doesn't hurt to have it pre-configured.\n. Yeah, I'm starting to think maybe we need to make some parts of the template optional via CLI prompts.\ne.g. do you want eslint? do you want coverage? do you even want tests?\n. Sorry for not getting this merged - I ended up making some big refactoring to the template, and included coverage config in those changes. Really appreciate raising the issue though!\n. The default webpack config inlines images < 10kb as base64 strings to save HTTP requests. Load the built page and you will see the image is there.\n. Fixed, thanks!\n. @jpokrzyk can you confirm adding .exe makes it work?\nIt'd be nice if Nightwatch can intelligently handle the correct extension on Windows, ~~so it's worth opening an issue there~~. But in the meanwhile we should probably look for a way to make it work as-is.\n. Ok, this should do it - chromedriver's npm bin detects the correct platform handling: https://github.com/vuejs-templates/webpack/commit/0ccbc85bc09ab1a485f2eab4e6ed63516ca6acf9\n. Let's see if this does it: https://github.com/vuejs-templates/webpack/commit/58c9d5c9710229c8c2cbe5a65b3744c842907044\n. :tada: \n. @chrisvfritz awesome, thanks in advance! :D\n. Wow, we're on to something, finally\nOn Fri, Apr 8, 2016 at 4:32 AM Joseph notifications@github.com wrote:\n\ni find out all the error report have html with their project path \ud83d\ude02\nissue by @sunny-rajkotiya\nhttps://github.com/vuejs/vue-cli/issues/19#issue-127014316\nissue by @cnicodeme\nhttps://github.com/vuejs-templates/webpack/issues/41#issuecomment-196744276\nissue by @voigt\nhttps://github.com/vuejs/vue-cli/issues/19#issuecomment-182891406\nissue by @2eron\nhttps://github.com/vuejs/vue-cli/issues/19#issuecomment-195166949\nand i try vue init webpack haha in a html folder and npm run build\nthe error again \ud83d\ude02\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/41#issuecomment-207313425\n. @oaleynik ooohhhhh ok I'll look into it!\n. Thanks to everyone who helped out locating the issue! It's fixed in vue-loader@8.2.3.\n. Well I guess it doesn't hurt to have a version, given that you can just press enter for the default value. In the meanwhile this avoids people running into problems with cmder. Another option is removing the prompt but leave the version in there.\n. dev \u6a21\u5f0f\u4e0b\u6ca1\u5fc5\u8981\u62bd\u53d6... \u90a3\u4e2a\u9009\u9879\u4e0d\u662f\u7ed9\u4f60\u6539\u7684\u3002\n. See https://webpack.github.io/docs/usage-with-bower.html\n. \u5177\u4f53\u62a5\u9519\u4fe1\u606f\uff1f\n. This is not a typo :)\n. @Astray-git what exactly is being removed? Example? Repro?\n. This seems like an html-minifier bug, but those options are not needed for Vue templates anyways. Fixed in vue-html-loader@1.2.1.\n. This is because one of the dev dependencies has transitive dependency on jade, and with npm3 it can be directly required. However you should still explicitly npm install jade --save-dev.\n. This is a vue-loader issue - I think you have the right guess, probably need to do some SourceMap line number hacking in there. Please open issue at vue-loader's repo instead.\n. \u57fa\u672c\u4e0a\u662f\u56e0\u4e3a\u4f60\u7684 npm install \u6709\u95ee\u9898\uff0c\u91cd\u88c5 node_modules \u770b\u770b\u3002\n. \u91cd\u65b0\u5b89\u88c5 ok \u4e86\uff1f\u5173\u6389\u4e86\u554a\n. I think it's better to keep App.vue as-is and add the note in the pre-render section of the README. Since replace: false doesn't actually do anything if no pre-render is used.\n. You need to disable eslint in webpack's preLoaders.\n. This is a module import order issue - because your main.js depends on other modules, those other modules are evaluated before main.js. In ES6, all import statements are hoisted, so even if you import other modules after Vue.use(VueResource), they still evaluate before that.\n\nOne work around is using require() instead of import which is not hoisted; another solution is to have a \"bootstrap file\" where you install all Vue plugins and export Vue again.\nFinally, I think it's probably better to re-design vue-resource so that it can be imported and used individually without relying on the global Vue.use().\n. Thanks for the PR - I do think this change makes sense, although there's one problem: if the user wants to change the sub-directory where built files are placed, they now have to change multiple places in the config instead of one.\nAlso, the build script relies on the sub-directory name to copy files in /static to the right place: https://github.com/vuejs-templates/webpack/blob/master/template/build/build.js#L14\nSo we probably want to extract the static assets sub-directory name into a variable so that the user only need to change it in one place if they ever need to.\n. What we primarily want to consider is how can we make the setup easy to integrate with an existing backend app.\nIdeally, this is what the user needs to do in webpack.prod.conf.js:\n1. Change output.path to the root of the backend app;\n2. Change the variable mentioned in previous comment (let's call it staticPath?) to the sub-directory where static assets are supposed to be placed in for that backend app. E.g. /public for laravel/rails apps  (not in app/assets because webpack essentially does the job of the asset pipeline).\n3. They probably don't have to change publicPath in most cases.\nDoes this make sense?\n. @pespantelis thanks a lot for the follow up - unfortunately, it turns out this problem is more complicated than I thought, and your updates was quite different from what I had in mind. I eventually decided to make some pretty big changes, so sorry for not being able to merge this PR. Really appreciate the effort though.\n. Sounds weird. OS, Node, npm versions?\n. I thought this was clear enough?\nAlso, in production you are seeing a full reload, not a hot reload. The hot reload preserves your current application state.\n. You can disable that rule for the file using inline eslint-disable comments.\n. Thanks!\n. In dev mode, no file is written to disk, everything is served directly from memory by the dev server. You should use the dev server and proxy requests to your PHP app during development.\n. You should not be proxying everything - the proxys have highest priority and this would render your dev server useless. Only proxy API requests.\n. You do... dev server serves your frontend (index.html and static assets) at localhost, and it proxies API requests to your PHP app (which can be remote or local)\n. The config assumes your HTML file is pure. In your case you may need to instead proxy all static assets to the dev server on your PHP end!\n. I don't you guys are running into the same issue - but could you please try upgrading vue-cli to the latest version and confirm that things are fixed with a fresh project?\n. @Hemric good to know!\n. Shouldn't these be extracted in production build too? I think these two should reuse the same dev/prod settings.\n. @Grafikart beat you to it in #84 - sorry Chris ;)\n. This is a template for vue-cli. You're not supposed to use it directly.\n. Nice job!\n. vue-loader actually already does autoprefixing for component CSS: http://vuejs.github.io/vue-loader/features/postcss.html\nBut yeah it doesn't get applied to non-component CSS, so I like your proposal, we can turn off vue-loader's own stuff and centralize it inside cssLoaders() and config.js.\n. \u9519\u628a dist branch \u7684 commit merge \u5230 master \u4e86...\n\u987a\u4fbf\u5347\u7ea7 vue-cli \u5427\n. You need to rebase against the latest dist branch because the previous merge was squashed.\n. Just put it in static and directly reference it in index.html. You don't want to pack it with your app code because jQuery never changes and would be better cached if loaded separately.\n. Use scss if you are using the CSS superset syntax.\n. If you are executing the build step, then you need to install full dev dependencies.\n. There's nothing we can do until the deps update for v6 compatibility, so stick to v5 for now!\n. I think this is the only template that uses Phantom 2, but thanks!\n. \u8fd9\u662f\u4f9d\u8d56\u7684\u95ee\u9898\uff0c\u8981\u7b49\u4ed6\u4eec\u66f4\u65b0...\n. Hmm I'm not able to reproduce this with a fresh install. What's your OS/Node version?\n. The exclude pattern didn't work properly on Windows, it's fixed now.\n. Production source maps are separate from the js files. There is obviously something wrong, possibly related to the recent babel-runtime upgrade (we are using 6.x now). Built js from a fresh install is only 88kb.\n. What do you mean?...\n. vue-loader still uses postcss internally (when using scoped styles), so I think this would cause postcss to be run twice on Vue component CSS in some cases.\nWhat I think would be more ideal:\n1. Only chain postcss-loader for non-Vue CSS (probably by adding an option to the cssLoaders function)\n2. Disable autoprefixer in Vue config, and let both vue-loader and postcss-loader share the same Array of postcss plugins.\n. @Grafikart thanks!\n@chrisvfritz would appreciate you taking a look at this\n. Looks good - can you add a section in the docs for this feature?\n. \ud83d\udc4d thanks!\n. Mind doing this for dist branch instead? That is what CLI 2.0 is pulling.\n. This should theoretically save a file read (since webpack no longer needs to read main from Vue's package.json) and also save the parse time for the entire Vue.js file. The difference is probably not easily noticeable but seems nice to have.\n. Let's merge as long as it works properly.\n. CSS source map is disabled by default due to the tradeoffs described here: https://github.com/webpack/css-loader#sourcemaps\nYou can easily turn it on by forking the official template.\n. @hekigan it's mostly about the \"relative paths are buggy\" part. I haven't personally run into that bug, but I don't want people to be surprised by bugs caused by a default configuration.\n. \u7b2c\u4e09\u6b65 ctrl c \u5e94\u8be5\u4e0d\u5f71\u54cd\u5b89\u88c5\u3002\u7b2c\u56db\u6b65\u53ea\u662f\u4e2a\u8b66\u544a\uff0c\u4e5f\u4e0d\u5f71\u54cd\u3002\u5982\u679c\u5176\u4ed6\u90fd\u6b63\u5e38\uff0c\u5e94\u8be5\u53ef\u4ee5\u8dd1\u3002\n. OS, Node \u7248\u672c\uff1f\n. \u73b0\u9636\u6bb5\u8fd8\u4e0d\u5efa\u8bae\u7528 Node v6\uff0c\u56e0\u4e3a\u6709\u4e9b\u4f9d\u8d56\u5728 win \u4e0a\u9762\u7f16\u8bd1\u53ef\u80fd\u6709\u95ee\u9898\u3002\u6362\u56de v5 \u8bd5\u8bd5\n. Because the imagePath is only rendered by Vue at runtime, Webpack has no chance of rewriting it.\nIn your JS, use require('~assets/' + this.country.name + '.jpg') instead. This allows Webpack to return the correct static path.\n. js\nimagePath: function () {\n  return require('~assets/' + this.country.name + '.jpg')\n}\n. Selenium is still absolutely necessary, because Electron is only Chromium and we want to run tests in multiple environments. The default runs in Chrome & Firefox but the user can configure it to run in even more browsers.\nThe phantomjs usage is mostly for headless testing on CI environments. There are two concerns though: \n1. Electron's download size seems to be even heavier. (Phantom 17mb vs Electron 30~40mb)\n2. Electron is not a pure-browser environment, with Node and it's own special globals. This may cause unexpected problems for user code that are solely intended for browser environments.\n. Ideally we want the whole codebase to adhere to the chosen code style, but it's kind of a PITA to have to maintain two versions of the build/config files (which means we have to modify both versions for every change).\nA clever solution is using ESLint's --fix flag to convert between the formats during scaffolding - the two most decisive differences between the two styles (semi and comma-dangle) are both auto-fixable.\n. Serving gzipped content will be server-dependent, so it's better to be behind a config flag.\n. I'm not sure - feels clunky to have so many .eslintrc lying around. Although I don't have a better idea at this moment - will take a look later.\n. Hey thanks for the PR - can you submit it against the dist branch instead?\n. Yes please\n. Thanks!\n. This is caused by a bug in vue-loader@8.5.1, upgrade to vue-loader@8.5.2 and it should be fixed.\n. Hmm, cannot reproduce this, because it should resolve correctly: https://github.com/vuejs-templates/webpack/blob/dist/template/build/webpack.base.conf.js#L16 (.vue extension is included)\nCan you provide the OS/Node/npm/webpack versions?\n. LGTM\n. Hmm not sure if beta makes sense for an option - if Airbnb's new config is still causing trouble, can we just revert to using the old, although deprecated, but maybe still available config?\n. file-loader config inlines any images smaller than 10k bytes as data-URI: https://github.com/vuejs-templates/webpack/blob/dist/template/build/webpack.base.conf.js#L67\nThis is more efficient for an extra HTTP request for a tiny image.\n. I cannot reproduce this. Note the file only gets copied if it is somehow referenced in your templates. If it still happens for you, please provide a reproduction repo.\nAs for CSS, they are auto-extracted into standalone files for production builds, I'm not sure what you mean by \"a problem sooner or later\".\n. Embedded CSS is not inline and it has no specificity difference from external CSS. The only thing that may affect specificity in this case is occurence order.\nThe build system does know when you reference assets in templates (they are turned into require calls by html-loader). Same for urls in your CSS. In JavaScript you reference assets using require (causing it to be resolved by file-loader). It's in fact a good thing to not copy things that you never used, so again, unless you have a reproduction case showing it's not working properly, I don't know what your problem is.\nI suggest you do some reading on Webpack and the documentation of this template. If you simply disagree with how it is set up, then just roll your own.\n. Use plain <link> tag to include bootstrap. You don't need Webpack to process it anyway.\n. Rough idea is extracting the core configuration into an npm package, and allow users to override certain sections in the template. This is not easy though, due to how complex the config for this template has become.\n. The default components never intend to work with IE9. You are responsible for whatever content you create yourself.\n. @KingMario the components you see when you scaffold a new project. They are meant to be replaced by your code, so it doesn't matter what browsers they support.\n. Remove the leading slash: /[name].css will cause webpack trying to create the file at the root directory of your entire system.\n. Are you running this from Atom's console or something other than the terminal?\n. Imo it's not a good idea to mix pug includes with Vue's own component composition. If you need composition, just make them components instead. This is why vue-loader's template part don't support pre-processor imports.\nIf you really want it, you'll have to use pug-loader and configure vue-loader to use pug-loader per docs here. In addition, pug-loader returns a compiled template function, not the raw HTML, so you need to chain a custom loader after pug-loader to invoke that function and return the value.\n. Hey, thanks for the PR... but I think it's obvious that we can't merge this as-is.\nThere's no easy way to cherry-pick individual bits out of big PRs. Instead, I'd suggest open PRs that change one thing at a time.\n. You need https://github.com/webpack/json-loader\n. As the message suggests... read more here about the runtime only build.\nTo solve it you need to either add the following to your Webpack config:\njs\nresolve: {\n  alias: {\n    vue: 'vue/dist/vue.js'\n  }\n}\nOr, make sure that all your components are defined in *.vue files, because they are pre-compiled.\n. Likely because of this: https://github.com/vuejs-templates/webpack/blob/dist/template/build/webpack.base.conf.js#L53 which makes babel-loader skips anything from node_modules.\nYou can try adding vue-datepicker to the include array so that it's \"whitelisted\" to babel-loader.\n. @kkomelin this is because most npm modules export pre-compiled JS, but vue-datepicker is exporting raw *.vue files. If we apply babel to every npm module it will be hugely inefficient, so it's not something the template itself can accommodate for.\n. GitHub probably had internal server errors during that period - seems to be working fine now.\n. ES6 -> ES5 transpilation only handles syntax transformation, not polyfills (these are more like runtime features). You can either use babel-polyfill (which includes all ES6 related polyfills) or just es6-promise.\n. @DevanB polyfills are not webpack specific https://github.com/stefanpenner/es6-promise. I'd add that to the top of your entry file. Closing due to inactivity. I think it's better to leave this up to users to decide.. dependencies means you use it only in your application code.\ndevDependencies means you use it in build scripts.\nIt's true that the distinction isn't really that useful - technically, everything is devDependency because the final build output is static files. That said, this PR doesn't seem to help with that either because npm install --production is a Node server only concept.\n. I still hold my original opinion (also elaborated by @LinusBorg ) - if you want to build or test, you should always do a full npm install. FYI, you can simply overwrite NODE_ENV with npm install --production=false.. I tested on the latest branch with Webpack 2 and other projects using Wepback 2, and it seems there's no difference at all after adding this plugin... but thanks for the PR!. This template doesn't include server-side rendering - I'm not sure where you got the impression that it does.\nThere is currently no official template for server-side rendering, because SSR has a lot to do with your server setup and how your app is structured. The official reference implementation is https://github.com/vuejs/vue-hackernews-2.0\nAnd as @ianwalter pointed out: it's inappropriate to just mention random contributors to help you with a problem.\n. Hey thanks for the PR - however, the port is needed in e2e tests and need to be determined before running the tests. The async-ness of detect-port also makes dev-server.js no longer export the server instance. I think it's probably ok for the user to ensure the port is available.. Closing since this shouldn't be necessary with proper node/npm versions.. @pksunkara apologies that I didn't pay more attention to your PR earlier - it does look very similar to this one. That said, it by no means indicate that your contribution was not welcome - it's mostly that my thoughts on what the template should include do change over time. At the time of your PR the 2.x router wasn't considered very stable but now it is - so I'm more confident in including as part of the default options now than I was a few months ago. Hope that explains it.. You should quote your strings or call JSON.stringify on the strings:\njs\nmodule.exports = merge(prodEnv, {\n  NODE_ENV: '\"development\"',\n  GLOBAL_VAR1: {\n    PROP1: JSON.stringify(\"someValue\")\n  }\n})\nUsing a string for DefinePlugin will result in something like this:\njs\n{NODE_ENV:\"production\"}.NODE_ENV !== \"production\"\nAnd will cause minifier optimization to fail.. I'm not sure if this is necessary. The build code is only needed in build.js, it's not reusable/reused, so I'd rather keep it where it's actually used. Thanks for the PR though!. If you happen to use Webpack's code-split feature, all lazy-loaded components will need to dynamically inject their styles, which relies on vue-style-loader. If not then this may indeed be a bug.. Oh god, I'm so sorry I didn't see this earlier (I turned off notifications for this repo). I happened to work on the exact same thing without knowing this PR existed... now they are conflicting in like a million files :/\n@patrick91 thank you so much for the effort put into this - I took some notes from your changes and incorporated into the current master branch, but unfortunately we do have some duplicated efforts here...\nApologies again. \ud83d\ude47\ud83d\ude47\ud83d\ude47. Removed in latest webpack 2 updates. Thanks for the PR though!. Cannot reproduce on a fresh install. What's your Node/npm version?. I'd suggest simply avoid doing that then... as this seems to be very unconventional. And if it's a webpack issue this is not really the place to resolve it.. Hey all - hate to say it but I have to revert this. The reason is that once you configure target browsers, some ES6 features will be left untouched, and it would break UglifyJS. The alternative is to use babili for minification, which is unfortunately ~3 times slower than UglifyJS, and would make builds significantly slower.\nI think for now we will use babel-preset-latest instead.. @graingert you can't just apply it to your application source code - you need to minify the entire bundle, so using it via a Babel preset won't fly. Instead we'd have to use babili-webpack-plugin, which in my local testing results in 100% slower build.. Thanks for the PR, but I don't really think it's a good idea to add another eslint config... It's already getting quite hairy making sure template files adhere to different configs. I think we'll stick with the two we have for now.. I don't think we should add more questions to the scaffolding process, because there will always be more of them. I'd rather make it easy to add whatever is needed after scaffolding. And I'm planning a rewrite of the webpack template in the next few weeks.. Thanks for the great work @Igogrek - this is actually quite helpful as I am designing the architecture for the next iteration of vue-cli. The core problem of this template right now, is that there are multiple options, and each option has its changes scattered all over the template (e.g. the number of files touched for adding minimal TS support), and each file involves conditional blocks added by many options, so it becomes more and more difficult to maintain over time. Hopefully we'll be address that in the next version of the CLI so all TS-related changes can be centralized and maintained in a single place.\nIn the meanwhile, I think the complexity introduced by this PR is manageable for the period of time before the new CLI is available.. this will point to the browser instance, I believe it's a convention for most of the callbacks in nightwatch. I'd preserve it for the sake of compatibility.. Looks good to me on first glance - good to merge with one additional person testing it locally to make sure it works as intended.. webpack imports the ES modules build, not the UDM build.. @codeofsumit FYI that's exactly how the env loading in vue-cli-next is handled.\nYou can have as many modes as you want, and each mode specifies its own env variables. So you do something like vue-cli-service build --mode=internal which loads env vars from .env.internal and .env.internal.local. And all env vars that start with VUE_APP_ will be available in your client side code via webpack.DefinePlugin.. Thanks, can you remove the blank lines here? Just keeping things consistent.\n. This could just be /* eslint-env shelljs */\n. path is in fact used below (see output.filename)\n. this loader also handles fonts\n. yeah that's what I would do\n. ",
    "TheDutchCoder": "I'm a complete moron. Sorry!\n. While on this topic (no need to open a new issue for this I think): it would be nice if the steps would also include modules like Vuex (Flux) or Revue (Redux) for state management, as well as Vue Resource.\nIs there a list somewhere that contains what is planned for the modules? Maybe people could contribute there ;)\n. I'm an idiot, #app gets replaced obviously.\nNothing to see here :|. Sorry to add to a closed issue, but how well is this tested?\nThis part of the configuration doesn't seem to do anything. I can change it, or comment it out, but the results stay the same.\nExample:\njs\nconst srcContext = require.context('../../src/framework/components/warning/src', true)\nsrcContext.keys().forEach(srcContext)\nThis doesn't do coverage for only the one component, it still does coverage for pretty much everything in my project.\nUnless I'm missing something obvious, this is just not doing anything?. ",
    "nicolas-t": "w00t!\nFixed it like this : \n``` javascript\n// webpack.dev.conf.js\nconfig.devServer = {\n  ...\n  watchOptions: {\n    aggregateTimeout: 300,\n    poll: true\n  }\n}\n```\nsource & info: http://stackoverflow.com/a/32164525/1609338\nThanks a lot, you can close :3\n. You're probably using vue-cli 3\nIf so you should have a vue.config.js at the root of your project, containing a devServer Object.\nRelated documentation : \nhttps://cli.vuejs.org/config/#devserver. ",
    "thinsoldier": "\njs\n// webpack.dev.conf.js\nconfig.devServer = {\n  ...\n  watchOptions: {\n    aggregateTimeout: 300,\n    poll: true\n  }\n}\n\nWhere exactly does this go? I don't have a file named webpack.dev.conf.js after running $> vue create hello-world. Thanks. vue.config.js did not exist by default. Created it and it worked.. ",
    "DarKDinDoN": "Consider the same example as vuejs/vue-loader#139 with vue-router and lazy-load to switch between ComponentA and ComponentB.\nEach component has its own chunk (0.js = ComponentA & 1.js = ComponentB) and each chunk contains the same CSS.\nEach chunk has its own piece of css, but each chunk is bigger. It would be best if the CSS was extracted in a file that is required along with the chunk. This way, if the CSS is already in cache, the new chunk use it. \n. Still the same with vue-loader-style removed.\nEach chunk contains the required CSS. Even if the CSS code is exactly the same.\n. :+1: thank you sir !\n. ",
    "hanai": "bash\nvue init webpack tmp\n\u62ff\u4e00\u4e2a\u5927\u4e00\u70b9\u7684\u4e0d\u4f1a\u88ab\u8f6c\u6362\u6210base64\u7684\u56fe\u7247\u66ff\u6362\u6389 src/assets/logo.png\uff0c\nbash\nnpm run build\n\u7ed3\u679c\u5982\u56fe\n\nlogo.png \u6ca1\u88ab\u6dfb\u52a0 hash\n\u4f46\u662f\u5728 npm run dev \u7684\u65f6\u5019\u662f\u6709 hash \u7684\n\n. css \u662f\u7531js\u91ccrequire\u7684\uff0c\u800c\u4e0d\u5e94\u8be5\u8fd9\u6837\u5199\u5230html\u91cc\u3002\n. repro add. ",
    "jondcallahan": "+1 reproduced this just a few minutes ago\n. ",
    "ebuchmann": "https://github.com/ebuchmann/VueRouterIssue\nHere you go. It's the basic install with vue cli using webpack. In the build/webpack.dev.con.js file I've commented out an older version of the file that I had, which seems to work fine. Right now it just says Cannot GET / and doesn't show anything else in my browser that may help. No errors in the terminal other than linting issues with spaces.\n. Interesting. Didn't think it would be so picky about leaving a warning about having four spaces instead of two. Thanks!\n. ",
    "chrisvfritz": "@wei-ones Sorry it took a while to look at this PR! I haven't used browser-sync before. Can you share more information about it and how it would improve the workflow of everyone using this template?\n. @wei-ones Thanks! We'll investigate this. :smiley: \n. After some more research, I'm glad I know about browser-sync now, but worry it might not belong in this template. I believe it could be very useful when manually testing across many browsers and devices, but  in apps where it's important to test that different visitors do not see the same thing, it could get in the way. Thank you again though for bringing this tool to our attention @wei-ones!\n. @jbruni This sounds like a feature request for another project, rather than a bug in this one. I recommend closing and opening a new issue in one of these:\n- vue-loader\n- vue-hot-reload-api (which seems to have issues turned off - is that on purpose @yyx990803?)\n@yyx990803 should have a better idea of where that belongs.\n. @GitYong fsevents is an API available only on OS X. Since it's an optional dependency for at least one of the included packages, the failure should not kill the install. Since I haven't experienced this issue on Ubuntu, I don't think it's a bug in this project, but rather an npm or system quirk. \nMy recommendation would be to close this issue and open up a question on Stack Overflow.\n. @b44rd I think in your case for LESS, you might have just needed @import '../src/less/theme.less (relative importing, rather than absolute from the project root). As for getting lang=\"scss\" working and possibly some other issues, I believe #29 should fix a lot.\n. Ah, interesting. This thread has some people reporting a similar issue. Do any of their proposed solutions work for you?\n. @OEvgeny It's unclear. :confused: The problem seems to be specific to LESS - that much we know. The maintainers of less-loader are pretty sure it's not their problem (hence the issue being closed), some are saying it's an issue with Webpack, and some are saying fixing it requires special configuration in .babelrc. Then someone else said updating and configuring postcss was the way to fix it.\nEither way, if you find something that works for you, please let us know! This is an odd situation, where the problem definitely isn't specific to this project, but it's not very clear where the problem is originating. So while the LESS ecosystem is figuring it out, I think it makes sense to keep this issue open and then incorporate a patch once we find one.\nIn the meantime, would you mind renaming this issue based on our discussion? I'm thinking something like LESS imports not respecting Webpack resolve alias.\n. Thanks @mbensch! @OEvgeny, can you confirm whether that solution works for you?\n. @dolphineor When you say, \"it seems like the router doesn't work\", what code specifically is not working? And instead of the expected behavior, what is happening instead? Literally nothing, an error in the JS console, or something else?\nAdapting the vue-router Basic Usage docs, below is a minimal setup that should work within this boilerplate. Once you have that set up, v-link, this.$router.go, etc should work within all your components.\nMinimal vue-router setup\nsrc/index.html\nhtml\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Vue App</title>\n  </head>\n  <body>\n    <div id=\"app\">\n      <!-- route outlet -->\n      <router-view></router-view>\n    </div>\n    <!-- built files will be auto injected -->\n  </body>\n</html>\nsrc/main.js\n``` js\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport configureRoutes from './routes'\nVue.use(VueRouter)\nconst router = new VueRouter({\n  history: true,\n  saveScrollPosition: true\n})\nconfigureRoutes(router)\nrouter.start(\n  Vue.extend({}),\n  '#app'\n)\n```\nsrc/routes.js\nThe below assumes the referenced Vue components exist in a src/pages directory, which I often use for top-level page components.\n``` js\nimport NotFound from './pages/not-found'\nimport Home from './pages/home'\nimport About from './pages/about'\nexport default router => {\n  router.map({\n    '/': {\n      component: Home\n    },\n'/about': {\n  component: About\n}\n\n'*': {\n  component: NotFound\n}\n\n})\n}\n``\n. @dolphineor Awesome!\n. @iugo Can you provide more detail into what's going on in your case? Do you have an example project you can link to?\n. @iugo I'm closing due to inactivity. I'm happy to re-open though if @jbruni's suggestion doesn't work and you can provide more information about the failure and the system you're experiencing it on.\n. @zjhiphop Check out [the docs forsass-loader](https://github.com/jtangelder/sass-loader#apply-via-webpack-config). You'll need to add a loader for SCSS to use SCSS in their own files, outside of components. The only difference is that instead of thestyleloader, you'll usevue-style`. Let me know how that works out for you. :smiley: \n. @zjhiphop Just checking in. Have you had a chance to see if the suggestion above worked for you?\n. @chrispappas Almost. I believe this would be what you want:\njs\n{\n  test: /\\.scss$/,\n  loaders: [ 'vue-style', 'css', 'sass' ]\n}\n. @yyx990803 forked style-loader to fix some issues with it. I don't know a lot about that - I've just always used vue-style-loader and never had issues. :smiley: Evan will be able to better explain the history behind that decision and whether it matters for you in this case.\n. @chrispappas Excellent. Even though this is resolved, I want to keep the issue open for now. I'm considering implementing something similar to this, so that CSS preprocessor files just automatically work if the loader is installed, similar to how they do in components.\n. Resolved in #84.\n. I'll try to reproduce and fix this in the next few days on my Linux box.\n. @yyx990803 Wasn't able to reproduce this, unfortunately.\n- ubuntu 15.10 64-bit\n- linux 4.2.0-16-generic\n- npm 3.7.3\n- node 5.8.0\nI'm happy to dig in further though, with more information about the systems this fails on.\n. Thanks @cnicodeme! :smiley: I'll try to replicate this in a Docker container and see what happens. In the meantime though - can you try deleting the extract-text-webpack-plugin in your node_modules, then re-running npm install? Knowing if that fixes the problem could be useful.\n. @cnicodeme Wow, that's great information and should definitely help narrow it down! I'll let you know if I'm still not able to reproduce it or have any other questions.\n. No worries - you've already been a huge help!\n. Darn, I'm still having difficulty reproducing this, even on Fedora. :confused: I've run out of ideas currently, but I'll leave this open to see if someone else might be able to find a solution. @cnicodeme Thank you again for all your help narrowing it down! If you haven't already, I'd also open an issue in extract-text-webpack-plugin, now that we have more information.\n. @cipas @cnicodeme I'd open an issue in extract-text-webpack-plugin detailing your issue. If you find a solution to your problem, please let us know back here!\n. @pratyushbarik Thanks for adding new information. If you happen to find a way to get the plugin to work without disabling it, please do post back here. :smiley:\n. @funkyLover, I love your funk! Thank you for putting that together like a master detective. \ud83d\ude04 I'll investigate this and see if I can figure out what's going on.\n. @yyx990803 I hate to say this after-the-fact, but I'm actually wondering whether this shouldn't be reverted. :disappointed: While the docs do say a version is required, that information is actually out of date, because it doesn't really make sense for projects that will never be published as a module. So this just creates extra work at the start of a project for no gain.\n@jpokrzyk The real problem is in cmder and will be fixed in version 1.3. You can follow that link for instructions to get the fix early if you want. :smiley: \n. @jpokrzyk You definitely did the right thing. The maintainers of NPM have just chosen to keep a known oversimplification in the docs in an attempt to keep them simpler for package maintainers - at least until they come up with a nice, concise way to explain the exception.\n@yyx990803 Given those options, my personal preference would be to skip the prompt and just automatically add a version to package.json. I wonder if \"version\": \"*\" would be a good compromise? I'm thinking the advantage there is it doesn't imply versioning in a project where it probably won't apply.\n. Should really, really fix https://github.com/vuejs/vue-cli/issues/56 :stuck_out_tongue: \n. Sounds like it is possibly related. @esahione @Astray-git I'd open an issue in extract-text-webpack-plugin detailing your issue. If you find a solution to your problem, please let us know back here!\n. I'm pretty convinced this is indeed the same issue as #41, so closing as duplicate for now.\n. @Astray-git I unfortunately wasn't able to reproduce the problem with that example. :confused: Could you link to an example project demonstrating the issue?\n. @Astray-git Thanks for the link! That helped a lot. :smiley: From the Vue docs:\n\nThe Array syntax for v-bind:style allows you to apply multiple style objects to the same element:\n\nThat means column.styles should be an object rather than a string. For example:\njs\ncolumn: {\n  width: '10px',\n  styles: {\n    textAlign: 'center'\n  }\n}\nIs your issue resolved after making that change?\n. Root-relative paths like this will work if you're visiting the page in the context of a real web server. For example, try this from your project folder:\nnpm install -g live-server\nlive-server dist\n. @tiaod That looks like an eslint error. Try removing the following from module.preloaders in webpack.base.conf.js:\njs\n{\n  test: /\\.vue$/,\n  loader: 'eslint',\n  exclude: /node_modules/\n},\n. @ickeep Can you share the contents of your .eslintrc file?\n\u4f60\u53ef\u4ee5\u5206\u4eab\u4f60 .eslintrc \u6587\u4ef6\uff1f\n. I felt compelled to add a comment explaining the replace: false, which could be an indication that it's not worth adding... I'm on the fence.\n. @yyx990803 Yeah, I think that's a good call. Updated. Doc reference looks good?\n. This is working as intended. See the vue-resource docs for example usage.\n. The reason Vue.resource does not exist in the module is because it's a module. You're importing a fresh copy of Vue, because that other copy only exists within main.js. Vue.use(Resource) in main.js adds vue-resource to the context (this) of every component included from the App component.\n. In the module that you want to use vue-resource in, is it still not working after Vue.use(Resource)?\n. @OEvgeny I wouldn't recommend adding Vue to globals anyway. Calling Vue.use within each module is the correct way to do this. Glad to hear that it's working for you. :smiley: \n. Thanks @azamat-sharapov!\n. Thanks for the PR @pespantelis! Could you explain what the advantage of this change is? It looks like config is just moved around a little. Does it work better somehow or prevent other problems?\n. @silvestreh I think what's \"sane\" is very subjective in this case. We're shipping with rules from a community-developed standard, so it's not arbitrary. The good news is that you can use your own fork with vue-cli, with eslint rules that fit better with the coding style you'd like to enforce. :smiley: Or you can turn off eslint completely.\nIn the future, we're planning on making linting and some other features optional when generating a new project.\n. @miquelangel-castillo Changing values in data don't trigger a reload because those values are only the initial state for the component. When a component has already been initialized, changing that initial state has no effect. One important difference between hot reloads and a refresh are that reloads maintain the current state of components.\nIf you add method or computed functions and change those, does the hot reloading work then?\n. @miquelangel-castillo Glad to hear it! And glad you're enjoying Vue. \ud83d\ude00\n. @SystemZ That's what I would do. \ud83d\ude42 We're planning on eventually making features such as linting optional when generating a new project, so that should help in the future!\n. @rob-balfre We're currently working on a more modular build process that will allow people to opt in or out of certain features, such as tests and eslint, when creating a new project. I think that would be a great time to add optional vue-router integration as well. \ud83d\udc4d \n. @KevinNTH I recommend checking out the examples and the docs.\n. @KrishnaPG Those are usage/support questions, while the issues are reserved solely for bug reports and feature requests. I recommend posting your question on either the forum or the Gitter chat.\n. @unhealthy @Hemric Does the latest master with path.resolve instead of path.join fix the problem?\n. @yyx990803 Resolves #33.\n. Yeah, probably. I only use external files for branding variables that are imported into style elements in .vue components. I'll update.\n. That's fantastic! I'll never complain when someone does work so I don't have to. \ud83d\ude04\n. @Grafikart I recommend forking the template, then you can run vue init Grafikart/webpack name-of-test-project to generate a new project using your fork.\n. @Grafikart Just pinging on this. Anything we can do to help?\n. @erguotou520 I believe this is a Cordova configuration issue, rather than a problem with the template. Does this fix your problem?\n. @erguotou520 Just to give you an update, we're considering changing all the generated paths to relative rather than root-relative. Just exploring first whether there are any edge cases where this wouldn't work.\n. @erguotou520 So in a Cordova, can use of the base tag solve your problem?\n. @erguotou520 What about if location.href is updated to:\njs\nlocation.protocol + '//' + location.host\n. OK, turns out I didn't really understand how the base tag works. \ud83d\ude1e  For one thing, it apparently doesn't work at all on absolute URLs. But I just tested a modified build script in package.json:\njson\n\"build\": \"node build/build.js && sed -i .bak -e 's/href=\\\"\\\\//href=\\\"/g' dist/index.html && sed -i .bak -e 's/src=\\\"\\\\//src=\\\"/g' dist/index.html && rm dist/index.html.bak\",\nIt just removes the starting slash from any absolute URLs in the generated index.html. And it seems to work in one of my apps that I just tested it with! If you're on Windows, I believe you'd want to make sure you're using Git Bash or some other POSIX compliant shell.\n. Well you can do regex substitution with sed no matter what the file is. There'd likely be other ways you'd want to address the problem though, depending on where the absolute URLs are coming from. I'd need more information. \ud83d\ude15 \n. I've looked into this a bit more and some are claiming there are SEO concerns when using relative rather than root-relative paths, so this is starting to look like a wontfix. However... for mobile development, you may be interesting in weex, which very much inspired by Vue and is being actively developed by Alibaba Group, which is one of the largest tech companies in China.\n. @runarhk Thanks for sharing this! Can you explain a little more about the implications of a change like this? I understand it's creating an empty mock of these node modules, but after looking at the docs, I'm still unsure why or when this is necessary. I'm also not sure what potential problems mocking these modules could cause (I imagine there's probably a reason it's not default behavior).\n. @runarhk Thanks for the follow-up! I'm a Webpack power user, but by no means a complete Webpack expert, so I'll leave this open with the help wanted tag until someone can enlighten us. \ud83d\ude03 \n. Since this issue has been stale for a while and no one else has reported it, I'm closing for now. Happy to reopen pending new information or others indicating that it's a problem for them as well.\n. @lee134134134 Is this happening on a freshly generated, unmodified project? My suspicion is you may have modified .eslintrc to a configuration that does not allow modules.\n. @SiegfriedEhret Thanks for the confirmation and additional information! :tada:\n. This is correct. build.js is a script that's used to build the production site, but its dependencies are not included in the static files generated in the dist folder. What errors exactly are you getting on Heroku? And what is your setup? Do you have a backend that you've integrated this into, or are you trying to deploy a static site?\n. @thatandyrose Heroku is great for dynamic sites that include an integrated backend server, but for this template (which produces a purely static site), I'd actually recommend using static site hosting such as Surge or Netlify.\nWhat's probably the simplest possible deployment process would look like this:\nFirst, add the surge package to the dev dependencies in your package.json and install it with:\nnpm install --save-dev surge\nThen you can add these two lines to the scripts section of package.json:\njson\n\"predeploy\": \"npm run build\",\n\"deploy\": \"surge --project dist --domain whatever-subdomain-you-want.surge.sh\"\nAnd... now you're done. \ud83d\ude04  Whenever you run npm run deploy, your site will deploy to Surge, for free. The first time, it'll prompt you to create an account with an email and password and on subsequent runs, it'll just deploy.\nLet me know if that works for you!\n. @ChrisCates I just tested this with a fresh project and am not experiencing this. \ud83d\ude15  I'm guessing our dependencies have already released updates for node 6 compatibility, but you don't have them installed yet. Have you tried npm update in your project?\n. @plantvsbirds I'd be open to taking a look at a PR with what you have in mind.\n. Haven't heard any reports of this problem for a while, so closing for now - happy to reopen pending new reports or especially a proposed PR that would resolve it. \ud83d\ude04 \n. Duplicate #97\n. @ericjim It's not recommended to use @import in CSS, for these reasons. What I would instead recommend is using SCSS, which is a superset of CSS and will allow you to use imports the way you want to here.\nTo use SCSS, you'll need to:\n- npm install --save-dev sass-loader node-sass\n- rename .css files to .scss\n- add the lang=\"scss\" attribute to style elements in .vue components\n. Duplicate #98 \n. Hi @facesea. \ud83d\ude03  Beyond dependencies that you explicitly import/require, some other things that will contribute to the size of your project:\n- Your own code (obviously) \ud83d\ude1b \n- Webpack's code to tie everything together\n- Images that are small enough to be base64 encoded and inlined\nIf you still think something strange is going on, would you be able to host a demo project on GitHub that demonstrates the discrepancy you're observing?\n. @facesea Can you confirm whether upgrading to babel-runtime 6.x fixes your issue?\n. @facesea Possibly. Can you publish a project demonstrating what you're seeing?\n. This has been open for a while without repro, so I'm closing. Happy to reopen if someone provides a minimal example of a new project demonstrating the issue. \ud83d\ude03 \n. This is something I'd be open to if someone finds a good solution that compresses images losslessly (at least by default).\n. @TheDutchCoder I really like the idea of out-of-the-box, lossless image compression, but having just done a little more research into this problem, it looks like it won't be that simple. \ud83d\ude15\n- The quality (and sometimes availability) of binaries for various image compressors seems to vary wildly.\n- Depending on how images are used in a project, I worry that the optimal size/quality tradeoff will be quite different from project to project.\n- The types and quality of compressions possible are very different for each image format, likely making the results of image compression difficult to predict for users of the template.\n@mdsb100 Beyond the above concerns, I'd also really like to avoid increasing the complexity of the build process by introducing more build tools.\nClosing for now, but open to revisiting this in the future, pending better and more predictable tooling that can default to lossless compression.\n. @phanan What's your typical strategy for Laravel integration? I can explain what I do for Rails and I'm guessing the general strategy should transfer, but Laravel-specific instructions would probably be more helpful. \ud83d\ude42\n. @mariaczi I actually just published this, which demos 3 different Vue integrations with Rails, including one that uses this template and includes Bootstrap. What may be of particular interest to you is the proxyTable config and how Bootstrap is included via bootstrap-sass. \nI hope that helps! Anything Laravel-specific I can't be of much help with unfortunately. \ud83d\ude15 \n. @mariaczi I'm moving this issue to the forum, as it looks like someone has found a good solution and is able to answer questions about it.\n. My personal preference would actually be to avoid this right now. I worry that others might see let and const and think, \"Oh, I can write in ES6!\" when in fact, there's only very limited support and will be for the foreseeable future, as we don't plan on dropping support for node-v4 anytime soon.\n. Thanks @CodinCat!\n. I might be misunderstanding, but isn't the implication of \"generated\" that it is done generating?\n. @wklc2014 Are you on Windows by any chance? I've noticed that using Git Bash and sometimes other Windows terminals that many commands fail to quit properly (not just with vue-cli).\n. Yes, that's what I recommend.\n. This seems to work. @yyx990803 Does this look like it'll play well with vue-loader?\n. This looks really great. I just submitted a PR to your PR \ud83d\ude1c with a slight refactor. I changed the strategy used a little bit, so would love to hear your thoughts on that. Afterwards, it should be good to merge. \ud83d\ude04 \n. Except the example in the docs uses pathRewrite:\njs\npathRewrite: {\n  '^/api': ''\n }\n. Since this is neither a bug nor a feature request, I recommend posting your question on either the forum or the Gitter chat.\n. To fix the linting issues or turn off the linter?\n. Since this is neither a bug nor a feature request, I recommend posting your question on either the forum or the Gitter chat.\n. Some dependencies still don't seem compatible with node v6. I would recommend sticking with node v4 or v5 until they have a bit more time to update.\n. Thanks @vtrrsl! \ud83d\ude04  @ErickPetru @Async0x42 Can either of you confirm whether adding that to .eslintrc.js  fixes the issue on Windows x64?\n. Fixed in https://github.com/vuejs-templates/webpack/commit/a20a796f4c9733d3379ecab9301a154fcc6820d2. Thanks for the troubleshooting and feedback everyone!\n. @Vasiliy-Bondarenko Unfortunately, I think that project structure is just inherently problematic. It's quite common for modules to try to detect the presence of optional dependencies, so this likely won't be the last issue it causes. If you're using buble for the backend, I recommend having side-by-side frontend and backend directories, which each have their own package.json. This way, they can't interfere with each other.\n. @markusha @Continuum81 The issue originally reported here has been fixed. It sounds like you're both seeing a separate, but similar issue. I can't reproduce this unfortunately, so I think you'll have to do a little more investigating to figure out when exactly it's happening. For example, does it still happen when:\n- Using a different operating system?\n- Using an older or newer version of Node?\n- Choosing different options during project generation?\nI've personally confirmed it works on Windows 10, with Node 4, 5, 6, and 7, and several different configurations.\n. Ahh, I see that now. On it.\n. You also need:\nnpm install --save-dev node-sass\n. @yyx990803 Should we go ahead and merge this then or is it not worth the added configuration complexity?\n. @ryerh On a fresh project, I'm getting\nUncaught ReferenceError: process is not defined\non this line. Does this PR need an update for the latest dist branch?\n. Huh. Just gave a stab at diagnosing this issue and I can't reproduce it anymore. I'm assuming I somehow did something wrong and this is actually fine, so merging. \ud83d\ude03 \n. Nevermind. Shortly after I merged, someone reported the same issue I experienced earlier. Looks like it may be an intermittent issue, possibly related to https://github.com/webpack/webpack/issues/2312? Just reverted.\n. @ryerh Still open to a new pull request if you happen to figure out what causes the issue sometimes. When it was working for me, I did notice faster build times by ~1.5s on average. \ud83d\ude03 \n. @hekigan @PrimozRome Source maps for CSS aren't enabled by default in development. Does changing this line to:\nloaders: utils.cssLoaders({ sourceMap: true })\nhave the effect you desire?\n. I'd eventually like to go through and add a lot more comments and links to documentation in the build files, so I'll add a note about development source maps as well. \ud83d\ude42\ud83d\udc4d\n. @aristidesfl This is an issue to bring up with css-loader. While they still have this warning, we don't want to risk exposing users to difficult-to-diagnose bugs in development.\n. @simplesmiler Yeah, this definitely looks like the same node6 problem as #116.\n. It looks like something is already running on port 4444. You'll have to end whatever that process is first.\n. Very interesting! I'd never considered this use case for electron. It certainly does seem to have its benefits.\nWhile I do feel some hesitation to switch from the devil I know, I think it might be worth the loss of Chrome + Firefox testing. I'm always developing in Chrome already and I can't remember the last time a test failed only in Firefox, honestly. The quirks usually result in things I'm not testing for, like the alignment of an SVG node. I'd be curious to hear others' experiences.\nThe speed of tests on the other hand, is a pain I definitely have felt on large applications. \ud83d\ude42 If I could cut those build times down by half or a third, that'd be... amazing!\n. @guidobouman jsdom isn't a full browser implementation, so is probably more likely to cause failures for features that do in fact work in real browsers.\n. It seems that this isn't the right time to move away from phantomjs, due to the concerns @yyx990803 mentioned. It could well be that electron's node environment doesn't really cause problems in practice, but we probably don't want Vue users to be the guinea pigs in this experiment. When there are more examples of large projects using electron to test against, we can revisit this. \ud83d\ude03 \n. This is something we're aware of and I should be able to take time to fix it in a few days. PRs welcome if folks want it sooner! \ud83d\ude42\n. I was planning on conditionals in the test files, then probably an overriding .eslintrc.js in the build directory so that it always uses standard.\n. @rhysburnie @dufus-proxy We have the beginning of a new potential strategy for linting here. It's still a work in progress, but even in its current state, will at least eliminate unnecessary linting errors in editors with ESLint integration. Would love to hear either of your thoughts on it.\n. I believe this should be fixed now. If anyone notices something we missed, please open another issue.\n. @SNiels Are you sure you're not using an older version of the template? The latest webpack.prod.conf includes this:\njs\nutils.assetsPath('css/[name].[contenthash].css')\nrather than:\njs\npath.join(config.build.assetsSubDirectory, '[name].[contenthash].css')\n. Hmm, I can't reproduce this personally (on OS X 10.11.4, node 5.11.1). What's your OS and node version?\n. Ah, would updating to type=\"text/babel\" fix it? I think that also works with Webstorm.\n. @devboxr In the settings for Atom's ESLint package, you have to check a box to enable Linting within HTML files.\n. @yyx990803 This is still a work in progress, but I'd love to hear what you think about this general direction.\n. My biggest problem with it is that most of those .eslintrcs obliterate the project's main linting rules with \"root\": true. I'd love a linting-package-agnostic way of disabling entire classes of rules, with something like this:\njson\n\"parserOptions\": {\n  \"ecmaVersion\": 5\n}\nBut it seems to have no effect. \ud83d\ude1e \n. The most significant pain for AirBnb users has been resolved with the addition of .eslintignore, so closing. \n. @ianwalter The method you describe of creating a testing config for Webpack sounds logical to me. I'd love to hear others' thoughts on whether this kind of change would be a good fit in the template.\n. There hasn't been any community desire for this it seems, so I'm closing for now.\n. @haozime Can you link to a simple example project with the problem?\n. This is working as intended. What you did is update the initial value of that data property, but after the component is loaded, hot reloading maintains the current state, so that change in initial state makes no difference.\n. Thanks! \ud83d\ude04 \n. This seems like a bug in airbnb/javascript, since Webpack is indeed able to resolve the path to the module. What would be the ideal solution for users of this linting config? A few ideas:\n- Specifically disable that rule in .eslintrc.js\n- Add .vue to those import statements, which may fix the problem\n- File an issue in the linting config so they can work better with Webpack\n. I've just disabled the rule, since Webpack will already let you know if a module can't be resolved. a5008e6d608093bd02cb1eb33b3e4f82ee31eae4\n. Thanks!\n. @jaschweder This is a known issue with the Airbnb linting config - is that what you're using? It's actually a bug on their end (and frankly, I think an overreach, since module bundlers already report errors if they can't find a module).\n. Duplicate #144.\n. Thanks for the PR, but I just disabled the rule, since Webpack already does a great job of notifying users when there's an unresolved module.\n. The forum or the Gitter chat are actually better places for questions like this, as we try to reserve the issues for feature requests and bug reports.\n. @yyx990803 Does this look OK to you? I have gzipping default to off, as many popular static hosts such as Surge or Netlify already gzip all static assets as part of their deployment process.\n. @vird Thanks for reporting this. I believe this may be an intermittent issue caused by https://github.com/vuejs-templates/webpack/pull/122, which I just reverted. Can you confirm that the problem no longer exists for you on a fresh project?\n. It's not the new config specifically, but the fact that Airbnb's config isn't really a first-class citizen yet. When generating a new project, many files in the project folder - such as everything in the build folder - don't actually follow the enforced style. This causes a flurry of linting errors in editors with ESLint integration and also just feels yucky. \ud83d\ude41  We've gotten a few complaints about it, so this was an attempt to better manage expectations.\n. This has since been resolved by the addition of .eslintignore.\n. @blake-newman Sorry, will take another look at this soon. \ud83d\ude05  I took some time off to attend a wedding earlier this week and am still trying to catch up.\n. Got this error when trying to use stylelint in a new project:\nvue-cli \u00b7 stylelint doesn't match eslint - 16:68\n. @blake-newman Excellent! Will take a look at this soon, though maybe not this week, as I want to focus on getting those docs done if possible. \ud83d\ude04 \n. @blake-newman Just took another look at this and was still getting errors after generating a fresh project. \ud83d\ude15 \nI'm also concerned about users of unsupported preprocessors, such as stylus, less, or postcss. As far as I can tell, there isn't currently a way for stylelint to only parse style elements with an appropriate lang attribute and I'd hate for builds to start failing when someone adds one of these languages to a project. I just opened an issue for this, in case you want to take a stab at fixing it. \ud83d\ude03 \n. Huh, it looks like the HTML parsing has been deprecated, so a different strategy entirely may be in order. Possibly by using the stylelint postcss plugin and using it as the first loader for supported languages?\n. @rdpascua @XaroRSA Can both of you share your OS and node version?\n. @XaroRSA What about the node version (node -v)?\n. I still have no idea why the brace-expansion module is throwing Unhandled rejection on some systems. It doesn't seem to be a known issue. But it wasn't too hard to just removed the dependency that relies on that module, so I'm thinking all should be well now. @XaroRSA @rdpascua Can either of you confirm the fix?\n. Thanks!\n. This is not a bug. It's just how css-loader works.\n. @thany A couple other items worth noting:\n- Webpack will process files referenced from anywhere in your build system, including not only templates, but your JavaScript and CSS as well.\n- If you just want some files to be copied over, rather than handled by Webpack's file-loader, you can put them in the static folder. This is rarely the right solution, but an example where it's appropriate is a CNAME file that surge (the hosting provider) looks for to assign a custom domain.\n. Thanks! \ud83d\ude04\n. The component you linked to seems to work fine in a fresh project, so something else may be going on. Are you getting any warnings/errors in the JS console?\n. Closing this, as I'm guessing you may have resolved it and it also sounds likely to be an issue with the specific project, not the template.\n. @mul14 It looks like you found a bug in Vue itself! I just opened an issue for you there.\n. It looks like those are running through sass-loader, because you're getting Undefined variable errors. It just can't find where you've defined that variable. Can you provide a minimal project that demonstrates the problem you're seeing?\n. You can host a minimal example reproducing the problem on GitHub and then link to it.\n. Not sure why everything in the src directory would be bundled - that shouldn't happen. My guess is you have a glob import or dynamic require somewhere which is matching everything.\n. So there are a few things going on here. First, it looks like through deleting files, you've partially removed some features from the template, such as ESLint and Babel - but only partially. The .eslintrc.js file for example was deleted without removing the ESLint preloaders from webpack.base.conf.js. .babelrc was also deleted, breaking Babel integration.\nAs for your SCSS errors, when the unit tests run, (almost) all the modules in the in src directory are loaded to calculate test coverage. Since the template assumes the src directory contains independent modules, your tightly coupled SCSS raises errors. In _base.scss for example, you get an unknown variable error because the module assumes some global state created by main.scss. You could reorganize all of your SCSS into independent modules - or as explained in the comment here, you can update the regex to match a smaller subset of files, so that SCSS files are not tested for coverage. In your case, you could only test coverage for .js and .vue files like this:\njs\nvar srcContext = require.context('../../src', true, /^\\.\\/(?!main\\.js$).+\\.(js|vue)$/i)\nSome recommendations for the future:\n- To better understand Babel, Webpack, Karma, and many other technologies in this template, I recommend checking out egghead.io. They have a lot of great video tutorials on how these technologies work and building up that knowledge base will help you a lot!\n- When you want to remove a feature such as ESLint, first run a search through the project for the word eslint, so that you can gain greater perspective on how it's being used.\n- Before deleting files, definitely make sure you know what they do! .babelrc is necessary for Babel to work. Since you're still using the ES2015+ syntax in JavaScript files throughout the project, I assume breaking Babel was not intentional.\n- This last item is especially important. This was not a minimal example. A minimal example of the problem would have been one where the minimum number of changes have been made to a fresh project in order to reproduce the problem. In most projects, they simply would not help you when providing an example like this. And even here, going through code with so many changes that have nothing to do with the problem means it takes longer for me diagnose an issue, which means I have less time to help people. \ud83d\ude15 \nI hope this helps.\n. Duplicate https://github.com/vuejs-templates/webpack/issues/123.\n. This is a feature of css-loader. From their Usage docs:\n- url(image.png) => require(\"./image.png\")\n- url(~module/image.png) => require(\"module/image.png\")\nNote the imoprtant ~ prefix to reference installed packages. Using bootstrap-sass in SCSS, this is what I use:\n``` scss\n// -------------------\n// BOOTSTRAP VARIABLES\n// http://getbootstrap.com/customize/#less-variables\n// -------------------\n// add any variables you want to override here\n// ---------\n// BOOTSTRAP\n// ---------\n$icon-font-path: '~bootstrap-sass/assets/fonts/bootstrap/';\n@import '~bootstrap-sass/assets/stylesheets/bootstrap';\n```\n. I wouldn't want to convert all my styles to a different language either. Fortunately, you don't have to. I use SCSS, so that's the example I had on hand, but a similar technique should work just as well for LESS. I do believe Bootstrap 4 will be SCSS-only, so that transition may be inevitable if you'd like to upgrade. \ud83d\ude1e \nAs for modifying the Bootstrap source code - that's not what we're doing here. This isn't even a hack. These Bootstrap variables are made to be overridable. This is especially apparent in the SCSS version, where the variables all use !default, meaning that value should be assigned to the variable only if it hasn't been previously defined.\n. In that first example I provided, I'm overriding $icon-font-path by declaring it before the main Bootstrap import. In LESS, I believe variables are lazy-loaded, so you may have to declare that variable after the main Bootstrap import.\n. Not sure, sorry. \ud83d\ude15  Haven't used the LESS version or LESS itself really. This issue on css-loader may have better information.\n. Ahh, those are called quotes. A semicolon is this: ;. HTML without quotes is actually valid in certain contexts and we strip the quotes in production to minimize the size of the HTML.\n. I've been thinking about that problem, but we do actually have a significant number of people changing files in the build directory. For example, I always add a prerendering step. Sainsbury's process is different enough that they maintain a separate template and pick and choose updates from the main one. I've toyed with a few potential solutions, but all of them so far come with significant drawbacks. \nRest assured, this is something we're thinking about!\n. Closing to consolidate future discussion into this new issue.\n. That sounds like a workable plan. \ud83d\udc4d It's similar to what I do. I diff my non-source files with my initial commit, so I can see any customizations I've made to the build, then make those same modifications to a new project if necessary and then copy over my source files.\n. Thanks for the report @178220709. I was unable to reproduce this on my OS X system, but please let me know what other information you're able to gather as you do further testing!\n. @178220709 Any progress resolving this? I unfortunately still haven't been able to reproduce the issue. \ud83d\ude15 \n. This sounds like a general Babel/ESLint question, rather than a bug / feature request with the template, which is what we try to reserve the issues for. I recommend posting something in a forum or chat dedicated to those two technologies.\n. Why not delete the master branch and rename dist to master?\n. If you do really need another branch though, you can reference it with my-username/webpack#dist\n. What you are describing is prerendering, which is outside the scope of this build. You can however use prerender-spa-plugin to add this functionality. It's been tested with Vue and works very well!\nThe vendor.js file is where we keep common dependencies that will not change very often, such as Vue. The app.js file is for your actual application code. Then the manifest.js file is required by Webpack so that they can correctly work together and bust caches properly.\n. As a primary maintainer of both this template and that plugin, trust me - it's what you're looking for. \ud83d\ude09 This template produces a SPA and if you want the \"correct production outcome\" written to index.html, you have to prerender it.\n. I'd say this probably even qualifies as a duplicate of #75.\n. There's not a lot of information here, but you may want to check out https://github.com/vuejs-templates/webpack/issues/98. Does that address your problem?\n. Hi @ivomarsan. It looks like something strange is happening with this PR. It's coming from \"unknown repository\" and seems to include some commits that are already in the repo. \ud83d\ude15 \n. Thanks @hekigan!\n. Since the welcome page uses a flexbox layout and all versions of IE have a large number of flexbox bugs, that probably explains the alignment being off. Can you investigate why the icon isn't appearing?\n. @ttoinou May I ask, why would you want to disable the hash?\n. @ttoinou Ah, I see. In general, webpack-simple may be a better template for library work, as there's a lot in this template that assumes one is building a SPA.\n. Yeah, NPM is having some issues right now. We just have to wait. \ud83d\ude15 \n. Thanks for this @nickspiel. Looks good to me! \ud83d\ude03 \n. Thanks @morficus! As @LinusBorg mentioned, since these templates are not very modular or easily testable at the moment, a bunch of major version bumps all at once makes me a little uncomfortable, but I would like to bring this in soon - possibly in an \"edge\" branch for this repo, where it would be more acceptable if something broke temporarily.\nTo ease development for the future and when some other work for 2.0 slows down a bit, I'd also like to completely rewrite the templates for 2.0 with a full test suite, so that in the future we'll just be able to say, \"Tests pass, looks good, merge\" for contributions like this.\n. Closing for now, as we'll either replace this template with a testable one or update dependencies one-by-one. \n. I believe this was just fixed in #188.\n. @LinusBorg What would you think about a rename from developmentSourceMap to cssSourceMap? Since it's under config.dev, the \"development\" part already seems implied to me, but I would like to specify that this only applies to CSS.\nI also see a couple more small typos we can fix. \ud83d\ude09 \n\n// In our experience, they generally work as ~~expexted~~ expected,\n// ~~just~~ but be aware of this issue when enabling this option.\n\nAnd then I know it was my idea, but what would you think about just removing those last two lines of the comment?\n\n// Repated issue in the templates repository:\n// https://github.com/vuejs-templates/webpack/issues/123\n\nI feel like linking to css-loader is probably enough when I think about it more. \ud83d\ude03 \n. @LinusBorg Regarding 2, the fact that it's already under the dev options scopes it specifically to the development build and unlike the productionSourceMap option, this one only affects CSS source maps (not JS), so I think it would be good to make that more clear in the name. \ud83d\ude03 \n. All you should need to do is update test/unit/index.js. This is probably the regex you're looking for:\njs\n/^\\.\\/(?!main\\.js$|routes\\/subRoutes).+\\.(js|vue)$/i\n. @AnthonySendra If that isn't working, the only explanation I can think of is you're requiring security.js through a test (even if indirectly). For an exclude through a karma config, you'll have to research that. It sounds like there's nothing specific to Vue or this template here, so closing.\n. No, we're not interested in adding 3rd-party libs that would only be used by a small subset of users.\n. @Coffcer I don't think I understand. Is the template not working as it should out of the box or are you looking for help modifying the template?\n. I'm still not sure why you'd want to, but you can disable it by removing any lines that mention hotMiddleware in build/dev-server.js.\n. babel-core/register is actually near deprecation. From the source:\njs\n// TODO: eventually deprecate this console.trace(\"use the `babel-register` package instead of `babel-core/register`\");\nmodule.exports = require(\"babel-register\");\nThis file and the surrounding files also follow the ferross/standard style, so no unnecessary semicolons please. \ud83d\ude03 \n. @ianwalter Thanks! I know this sounds like a nitpick, but in package.json, the babel-register dependency should be also be placed in alphabetical order. (It's still functional the way you have it, but people are used to scanning their dependencies list with this in mind.)\n. Thanks @noraesae. This looks like a great PR! The detail, demo, and links you provided are very helpful. I'll try to take a closer look later today so that we can get it merged in.\n. Duplicate of https://github.com/vuejs-templates/webpack/issues/126.\n. @zhangxin840 I believe that was originally added because it was required for code splitting. Have you checked that code splitting still works when it's not set?\n. I can add that note, though first I'd love to hear what other templates people are using and enjoying for mobile/electron. I'd like to add a few alternatives rather than just saying, \"No!\" \ud83d\ude04 \n. This was fixed in #198.\n. Any files required here are included for test coverage. See the require.context docs for more information about requiring groups of files.\n. benbria/karma-coffee-coverage might be useful\n. @aristidesfl No unfortunately. \ud83d\ude15  I haven't personally used CoffeeScript in a Vue project.\n. We do have some dependencies that we'd like to update 1-by-1 soon, but your problem is unrelated to them. The vital line is:\nError: listen EADDRINUSE :::8080\nThat means another application on your system is already bound to port 8080. I don't remember if this also works on Linux, but on OS X, I usually run lsof -iTCP -sTCP:LISTEN -n -P and it'll give you a list of all the processes bound to ports. Find the one that's bound to 8080 then kill -9 PROCESS_PID (replacing PROCESS_PID with the actual PID of the process).\n. @Doogiemuc You're correct that the ready hook is not fired, since we're not actually adding this element to the DOM, but the test doesn't require the ready hook to be fired. It works as expected as it is. Did it fail for you?\nBy the way, the rewrite you proposed is not only slower and more verbose, but I think it would actually fail, since you've now made the test asynchronous without adding a done callback to the it block.\n. Closing due to lack of activity.\n. @funkyLover Thanks for the heads up - just fixed it. It's also my fault for not taking more than a cursory glance at the change.\n. This looks to be a vscode-specific problem, so it's unfortunately their bug rather than anything wrong with our configuration. @summitxf Thanks for documenting a fix for other users!\n. Can you please link to an example repo showing the problem?\n. I believe this should be working now. @ttquoccuong @cn-wang @UncleBill Can any of you confirm?\n. @divmgl These lines in the .eslintrc.js should prevent the error. Can you confirm that they're present? If they are, I think we'll need a repo with a failing example as our next step, as I just tried to replicate the issue with with the environment you described, but was unable to. \ud83d\ude15 \n. @divmgl Any update?\n. @ianwalter This might be useful with an extremely limited set of rules to catch common errors, such as an unpaired tag. I think I'd like to stay away from any stylistic rules for now though.\n. We'd consider a PR then. \ud83d\ude42\n. @Aladdin-ADD Once eslint-plugin-vue is stable, it'll solve this problem. \ud83d\ude42 . @aristidesfl No, PascalCase is one of the acceptable options and either way, those conventions do not apply to file names.\n. The documentation explains why the conventions exist and what Vue is doing, so that if you think about it, there would be no reason for them to apply to file names. And as I said before, it's a moot point anyway. Even if you chose to interpret file names as having to conform to the same conventions, PascalCase IS one of the acceptable options listed.\n. @zigomir I'm happy to take care of this. Since this is the most-used template, I think it might also be helpful to display a little message reminding people that this is Vue 2.0, with a link to the 2.0 docs and instructions for using the 1.0 template instead. Beyond that, is there anything else you can think of beyond just making the minimal updates to things working?\n. Ah, got it - sorry for missing that.\n. @matt-sanders That is not how $refs work. See the docs.\n. Agreed with @Gomah - I can see cases where someone might want one, but not the other. I very much like that you started with just one rule though, as each one we add probably deserves its own discussion. \ud83d\ude03 \n. I'm thinking it would also be good to include a note that people will see when running vue init webpack my-project. For example, perhaps another prompt before everything else. @zigomir What do you think?\n. @zigomir Yeah, it's a tough balance. \ud83d\ude15  Part of me would like to only support the Standard config, but the AirBnB config is much more popular. Supporting it does make maintenance a bit more difficult, but it also means we don't have to respond to many issues complaining about a lack of support for it - I'm not sure which is more of a pain. \ud83d\ude03 \n. @zigomir Just realized, since the new vue-loader no longer includes autoprefixing, we'll also need to add that to the base build with:\njs\nvue: {\n  postcss: [\n    require('autoprefixer')({\n      browsers: ['last 2 versions']\n    })\n  ]\n}\nAlong with this, autoprefixer will have to be added to the devDependencies.\n. @zigomir It's because css-loader depends on cssnano which depends on autoprefixer. (To figure that out, I ran npm list | grep -B 10 autoprefixer, which looks for autoprefixer in our dependency tree and shows that line and the 10 before it.) Since this is really an implementation detail though (cssnano might update to no longer depend on autoprefixer or css-loader might update to no longer use cssnano), it's good for us to explicitly include it in our devDependencies too.\nI'm also happy to investigate the hot reload stuff. \ud83d\ude03  I've already spent a lot of time hitting my head against the Webpack wall, so may as well get some use out of it!\n. Hmm, hot reloading seems to be working for me. So... I guess I fixed it? \ud83d\ude1c \n. No problem - and feel free to let me know if you come across more Webpack-specific things I can help with. I'm happy to save you the frustration if I can. \ud83d\ude42\n. I agree with you. \ud83d\ude03  master is my vote.\n. @marines That comment seems unrelated to this thread \ud83d\ude15 , but yes it does. It allows you to get  stack traces with accurate files and line numbers when debugging an error that happens in production.\n. More information on \"errors galore\" would be helpful.\n. We haven't had this reproduced by anyone in a month, so I'm assuming it's either fixed or something specific a single machine. Will reopen if we get other repros.\n. @rizkyramadhan Did you just upgrade an old project to Vue 2?\n. @rizkyramadhan OK - can you open a new issue with more details then (e.g. options you chose during install, whether you modified any files after the project was generated, versions of Node and NPM you're using)? I'd rather not re-use this issue for any errors that happen to appear on a fresh install.\n. @wakecoder It sounds like a VSCode problem then. \ud83d\ude15  I would look there.\n. @andre-dw If your primary concern is limiting the size of the build, Webpack's code splitting should be what you want.\n. A few solutions have been provided there's been no further discussion, so closing.\n. Since this is neither a bug nor a feature request, I recommend posting your question on either the forum or the Gitter chat.\n. Is this a fresh project install? And are you getting any errors in the terminal?\n. Thanks for reporting back! It doesn't sound like anything we can do in our end, so I'll close this for now.\n. We'll have to add conditional semi-colons and a conditional trailing comma to the file, similar to files in the src directory. If anyone wants to do this in a PR, it'd be welcome!\n. passPerPreset can also break other configurations, so it's good to know about that fix for this case, but we have to leave it out of the template for now.\n. Having all the templates pre-compiled will also offer better performance.\n. @connor11528 When you run both servers locally for development, you'll also want to make sure to proxy to your development API.\nYou don't necessarily have to keep them separate though. You could use something similar to these Express or Hapi configurations, where the frontend is served out of a frontend directory.\n. If you're installing from NPM, you can do something like this to reference the file in node_modules, which is absolutely fine.\n. LGTM!\n. LGTM!\n. @brendonthiede is correct. Vue itself uses Sauce Labs to test in a wide variety of browsers. They also provide the option to test in many different platforms, including mobile.\n. I don't think this is a good idea, as the transpiled code sometimes behaves slightly differently from native implementations - especially in terms of performance characteristics. There would also be no way to test real behavior for older browsers in development.\n. You can use watch mode as a configuration setting. This is a Webpack usage issue, rather than specific to this template.\n. I think this is a great idea!\n. @zigomir I just added this to the 2.0 branch. Not sure which other branches might also need updates. I see that 1.0 is now ahead of dist - is it now deprecated? If so, should we update the default branch to 1.0?\n. Got it. I guess this is a discussion including @LinusBorg as well then, since I see the 1.0 branch has received some commits that the dist branch has not. My understanding is that the dist branch is currently the default for this template though. Is that correct @zigomir? I just want to make sure we're all on the same page. \ud83d\ude04  Once we are, it would probably also be a good time to delete any branches we don't want.\n. I think I'd prefer to just remove the dist branch, since the other templates don't have one. We should probably keep it in the CLI though, in case other templates are relying on the behavior.\n. This should be done now.\n. Unfortunately, moving all the config to a JSON file wouldn't be possible, as we need JavaScript features that aren't part of JSON.\n. This is a usage question that would be best suited to either the forum or the Gitter chat. Or since it's Karma-specific, rather than to do specifically with Vue, you could use resources in that ecosystem.\n. @zigomir What do you think? Good to merge?\n. See this discussion for why this is necessary.\n. Does updating this exclude to an include with an array of folders you do want fix it? See this issue for more info.\n. Closing due to inactivity.\n. I'm not sure I understand the question. This template does have a dev server that supports hot reload.\n. There aren't currently any loaders set up for video extensions, only images and fonts. A PR would be welcome though.\n. @chovy You're welcome to submit a PR if it's urgent for you. Videos (or any other file type) can also still be referenced as static assets.\n. I think you meant to submit a PR to the 2.0 branch?\n. This template is not compatible with Webpack 2.0 yet.\n. With beta.19 it might not fail right away, but last time I checked, many of the companion libraries had not yet been updated to work with 2.0 yet, so I still recommend putting off that upgrade.\n. This will be simplified when we release Vue 2.0, but in the meantime for 3rd-party templates, master is the default directory while your changes are on dist. So you'll want to:\ngit checkout master\ngit reset --hard dist\ngit push origin master\n. I also know dozens of people personally (including myself) who use this kind of setup to test on external devices and also to share prototypes with other people on a team, especially during meetings. It's a feature, not a bug. \ud83d\ude09  For those who are very worried about accidentally leaking something in a coffee shop, I think it's up to them to take their own security measures. For example, it's not uncommon for companies require all remote development work to be done on a secure VPN.\n. Please provide a minimal example that demonstrates the issue. Stylus is working fine for me. \ud83d\ude15\n. If it doesn't break the other NPM scripts, I'd be OK making it conditional.\n. I believe at one point E2E tests used a superset of the production config, so I don't think that line should be necessary anymore since they're based off the base config now. Unfortunately, the way to test whether the NPM scripts will still work is to just test them manually right now.\nIt's on my list to refactor (or possibly rewrite) this template and add build tests, so that we can say with a greater degree of certainty whether something will have unintended side effects or not. Until then we do our best. \ud83d\ude05 \n. Ah, yep - didn't find it in a quick search earlier.\n. Oh, OK - I see what you're asking now. That can be accomplished with a custom handlebars helper - specifically, something like this.\n. @zigomir Do you know what's going on here? Did something change since this commit?\n. Can you please provide more information about your system (e.g. OS, node version), as well as a minimal example project that reproduces the issue? If you changed any configuration after generating the project, that's also important.\n. Haven't heard anything, so assuming this is resolved.\n. @zigomir can take a look at this later, as he knows more about the reasons for removal, but I'll just merge this for now.\n. @anishkny Is the current version not working for you?\n. Thanks for the explanation!\n. I took a quick look on my phone and it looks good from a quick glance! I'll try to do a more thorough review later today or tomorrow.\n. To keep things simple, I'd actually prefer a separate PR after this for Vuex.\n. I'm open to this change, though would prefer to just have static always compile to root, rather than providing an option. @linusborg @zigomir Thoughts?\n. @Sarke Options are a bad thing if they don't actually open up any new options, as each choice we force users to make adds cognitive load. They also make template maintenance more complex. If static assets always compiled to root, then it would allow everyone to do what they want. Users could build out their desired folder structure inside of that folder.\n. > I would feel that most people would want to put static file into a subdirectory as well.\n@LinusBorg I'm not sure that assumption is correct - for example, I think most people prefer to have files like favicons in the root (and actually, that's where they should go). So it could even be argued any configuration except for copying to root would be \"wrong\", unless users are also configuring server-side redirects for paths like /favicon.ico.\n. @Sarke Well, netlify and surge (two of the most popular services for static hosting) do actually support redirects, but yeah - it'd be easier for people to just be able to place a file somewhere and not have to configure anything (anywhere) to get it to go where they want.\n. This is something we've been considering. In the meantime you may enjoy vbuild, which was developed by a member of the Vue team.\n. Probably after it's officially released. It's still in beta right now.\n. No problem. We are actually using v2 in the webpack-simple template by the way. It's a bit safer, since it's a much less complex configuration, but even that we had to lock down to a specific version because of breaking changes.\n. It sounds like you're adding this to your other PR, so we can leave it out here.\n. @guidobouman Have you confirmed that the AirBnB config still works with these updates? If so, I'm happy to merge. Just want to make sure it's been at least manually tested. \ud83d\ude03 \n. Sure! Thanks.\n. Yep, thanks for providing the link @jbruni!\n. @plcosta That's what the src directory is for. The static directory is only for files that you specifically don't want to go through your build process.\n. I can understand the reasoning, but I'm not sure it causes enough pain currently to be worth the pain of the transition (for both maintainers and users). When I search for vue templates in Google (with no user signed in, in incognito mode), the first 3 links are this organization, then the components guide, then the syntax guide. That seems pretty ideal to me. No matter what people actually have in their heads, they can find it in the first 3 results.\nAlso to some extent, \"what's done is done\" - even if boilerplates might have been a better name to start with, current users may search for vue templates expecting to find this organization, but then end up confused when it stops appearing in search results.\n. Does this also happen for you on a freshly-generated project?\n. Are you sure you're actually serving the compiled files in the dist directory?\n. The static folder is for assets that don't change - you can instead compile to the assets folder and require the CSS file from there. I wouldn't recommend this workflow however. Everything will work better and more as you expect if you let Webpack handle everything, rather than running multiple simulataneous build systems.\n. @LinusBorg Is this still work-in-progress or ready for review?\n. Yes, as this template is for single-page applications, Vue Router would be the correct option to achieve multiple routes.\n. Since this is a usage/support question, rather than a bug report or feature request, I recommend posting this on either the forum or the Gitter chat.\n. I have not experienced this - hot reload works no matter where I put files. Could you provide an example repo?\n. @LinusBorg @zigomir Thoughts?\n. @LinusBorg Yeah, I like that idea a lot!\n. Closing due to lack of response.\n. We could add the code below to the template's package.json. That way, people would be warned if they're not using at least Node 4.\njs\n{ \"engines\" : { \"node\" : \">=4.0.0\" } }\n. I'll put together a preinstall script to check versions of Node and NPM.\n. While I like the idea, it looks the plugin isn't very reliable. I think not invalidating often enough would actually be worse than invalidating too often.\n. I agree with @LinusBorg. \ud83d\udc4d  Out of scope.\n. Oh, no problem! Please take your time - it's definitely not urgent. \ud83d\ude04  And sorry, forgot you were on vacation. \ud83d\ude2c \n. Btw, mostly for GitHub's record, this fixes #325.\n. Sounds good to me! Thanks for the review. \ud83d\ude42 \n. Thanks!\n. @MatthewOverall Docs have just been updated for using prerender-spa-plugin with this template. That one should now be a very simple integration. \nSSR, on the other hand, is a bit more complex and will be highly dependent on what you're using for the backend. If you want to build something with SSR, I'd first ask, \"Do you really need it?\" If you just need to prerender some marketing pages, stick with prerender-spa-plugin. And even if you need dynamic prerendering for a content-driven site, I would personally prefer to use Prerender.io or Netlify's dynamic prerendering before reaching for SSR, as they'll be much less complex.\nIn cases where it's important that prerendered pages always render the very most up-to-date data, I think it's likely it shouldn't be a SPA in the first place. If you're sure it should be a SPA and only SSR will do, then I'd use the hackernews project as a template, simply deleting anything hackernews-specific. Then you can selectively copy over whatever you need from this build. I know it's not ideal and we do want to improve the friendliness of SSR in the future, but that's where we currently stand.\n. This is a known limitation unfortunately - added or removed styles won't trigger a hot reload. There's an issue open for it if you'd like to add anything or take a stab at a PR.\n. Adding new packages usually won't involve touching Webpack (and shouldn't in this case). It's the same as any NPM-managed project. For further assistance on using NPM or Webpack though, I recommend posting your question on either the forum or the Gitter chat, as we try to reserve the issues for bugs and feature requests.\n. As I said, adding and using another package (Vue-related or not) does not involve anything unique to Vue or Webpack and we simply don't have to capacity to teach people how to use all the technologies in the JavaScript ecosystem. Here are some external resources you may find helpful:\n- Installing packages with NPM\n- Importing modules with Babel\n. Nope. See this template's docs for everything it handles.\n. Usage questions are best suited to either the forum or the Gitter chat, as we try to reserve issues for bugs and feature requests.\n. This is a feature, not a bug. \ud83d\ude09  See the docs.\n. This should work:\n``` js\nimport { directives } from 'src/directise/directiveOne'\nexport default {\n  // ...\n  directives: {\n    'directive-one': directives.directiveOne\n  }\n}\n```\nThough I'd recommend just exporting the directive config directly, rather than under a directives property in a parent object. \nFor future usage questions, I request that you post them on either the forum or the Gitter chat, as we try to reserve the issues for feature requests and bug reports.\n. Can you please provide more information about when this happens for you and on what kind of system? It's also worth looking through closed issues to see if what you're noticing is reolved there.\n. Agreed. A PR is definitely welcome in browserify-simple. We've also discussed changing the default build and that's still on the table. It's just a tricky transition to manage.\n. Since there's nothing we can do in this repo however, I'll close this. You're welcome to open a new issue (or just submit a PR at browserify-simple).\n. Glad to see a community project providing this!\n. @gkatsanos No, it's obviously not \"pointless\" or no one would use this template. You can see this discussion for more details on trade-offs we're trying to balance. Please keep criticism polite and constructive.. There unfortunately isn't a one-size-fits-all viewport setting for all apps. If the app isn't responsive for example, this would be undesirable. I'm honestly not sure if most users of this template are building responsive apps for not, so I'll leave this open for now in case other @vuejs-templates/collaborators have thoughts.\n. Just updated!. @iAlexanderMoon That's half right. \ud83d\ude04  More details in the comment here.. I definitely wouldn't add it yet, but when it's released, I think the default ESLint config should be vue/essential (currently only available in a PR), which only catches errors. That would also be good to include along with Standard/Airbnb, if the user chooses those options. In Vue CLI 3, vue/essential will probably be the out-of-the-box linting, since it's very non-offensive. It only halts the build if you'd actually get an error or unexpected behavior anyway - there are no style preferences.. Hmm, I'm honestly not sure. I haven't personally used the official Vue config for a big client project yet - mostly just small official or semi-official Vue projects. If there are folks in the community that are using it successfully, then I think we can go for it. I believe eslint-plugin-html should be unnecessary with eslint-plugin-vue though.. Heh, so actually, it's true that eslint-config-vue has been deprecated, but it will be replaced by rules embedded directly into eslint-plugin-vue. At the moment, it's being reworked to include many more rules and embedded configs.\neslint-plugin-vue-libs is what we'll be using for official Vue repos from now on, so it's not meant for user projects.\nSorry for the confusion! \ud83d\ude05 . @gucong3000 I think we should probably also extend from stylelint-config-css-modules, since vue-loader supports them out of the box.. @gucong3000 Does it work already? I thought we were still waiting on this PR being merged and for a new version of Stylelint to be released with that change.. I think it couldn't hurt, though I'd change build_config to build-config, since we're using kekab-case for all other folder and file names.. @adi518 @LinusBorg Another potential option is we could set an environment variable here with the port number, that is later read by Nightwatch.. @LinusBorg How's this looking to you?. @LinusBorg Sorry, forgot you were on vacation! \ud83d\ude05 . @LinusBorg Could extract-css-chunks-webpack-plugin provide a possible solution?. I don't think this is actually a good idea. The real problem is that vue-material has listed Vue as a dependency, which means they specifically want to package their own version of Vue into the library. This is most likely a mistake and what they really want is to list Vue as a peer dependency. That's the correct way to avoid bundling the same package twice.. @blake-newman I think there should be a comma here, instead of on line 41.\n. It looks like stylelint can also lint scss and less, but it needs to be run again specifying that extension and syntax. See these usage examples.\nAnother question - what will happen with if .vue files use a transpile-to-css language?\n. Should be .stylelintrc.js?\n. Should say stylelint, correct?\n. The changes in this file should no longer be necessary. They were a workaround for a bug that used to exist in vue-loader, but it's been fixed now.\n. Should this be /build/webpack.base.conf.js?\n. Won't the above 3 lines be unnecessary if the standalone version is the default export?\n. That's a good point! Then maybe we should merge this even before a decision is made, since it future-proofs users of the 2.0 branch against any possible changes of the default export.\n. We're not using the routes export for anything, so I believe we can actually simplify lines 11-17 to:\njs\nexport default new VueRouter({\n  routes,\n  mode: 'history'{{#if_eq lintConfig \"airbnb\"}},{{/if_eq}}\n}){{#if_eq lintConfig \"airbnb\"}};{{/if_eq}}\n. With the change below, we can simplify this line to just:\njs\nimport router from './router'{{#if_eq lintConfig \"airbnb\"}};{{/if_eq}}\n. Hmm... this is a tough situation. On the one hand, if we're going to include Vue Router, I'd like to also set up some scalable conventions and demonstrate more router features, like including navigation with <router-link> above. As it is, <hello> is also a bit silly as a page-level component. I'd prefer a <home> component and one other component - maybe <about>. I also typically recommend that people only use the components folder for reusable components, rather than page-level components. I think it's better to have pages and layouts directories, where wrapper components from layouts are used as the root for page-level components in pages. \nAdding all this would mean a great deal more complexity for this template however. @zigomir @LinusBorg What are your thoughts? I'm worried that with this proposal, the people who would really benefit from out-of-the-box Vue Router integration would still be left with most integration questions unanswered, as they could probably get this far just from copying and pasting from the Getting Starting guide in the router docs. But adding a more complete Vue Router integration would be a maintenance nightmare.\nMaybe we should just have a separate template that includes Vue + Vue Router + Vuex?\n. I'm thinking since it's the dev server, NODE_ENV should always be overwritten here. Could we also place it a little lower and use the value from the config? For example:\njs\nprocess.env.NODE_ENV = config.dev.env\n. \ud83d\udc4d \n. Good point. I still think it'd be a good idea to set to config.dev.env though, instead of directly to 'development'.\n. This can be a bit dangerous actually, as any tasks relying on the exit code from npm run lint would have it suppressed. Users would have to look very carefully to see that this was happening. I think what you actually want is npm run lint -s, which silences NPM's useless error messages. Or, you can run these with yarn: yarn run produces only 2 additional lines when a command fails:\nerror Command failed with exit code 1.\ninfo Visit http://yarnpkg.com/en/docs/cli/run for documentation about this command.\n. Does this have anything to do AirBnB linting errors?\n. This can be shortened to:\nrender: h => h(Hello){{#if_eq lintConfig \"airbnb\"}},{{/if_eq}}\nBecause parentheses-less single argument arrow functions are acceptable in both linting configs.\n. @LinusBorg Just pinging on this. I think once we update this one bit, it should be good to merge. \ud83d\ude42 \n. It's up to users how they want to handle this, but swallowing the exit code isn't acceptable here. Either way, this change doesn't actually have to do with the title of the pull request.\n. \ud83d\udc4d \n. @mbicknese Just pinging on this. \ud83d\ude42 \n. ",
    "wy-z": "@chrisvfritz, thanks for your attention.\nIt will be a good experience to combine webpack-dev-server with browser-sync, especially when you have to combin with an existing server.\nThe PR should be seemed as a suggestion, because of lack of adequate testing.\n. ",
    "t2thec": "if anyone else stumbles on this...\nI have found that you don't need BrowserSync to test on devices on your network. As the dev server is set up to localhost: var uri = 'http://localhost:' + port, you can simply enter your dev machines IP and port to a mobile device and get all the goodness of hot reloading with this webpack setup.\nEG: http://192.168.1.1:8080 Just change the IP to your machine hosting the dev server.\nA simple gem that most people probably know, but useful to those who don't.. ",
    "graysheeep": "\u4e86\u89e3\uff0c\u591a\u8c22\u6307\u5bfc\uff01\n. ",
    "AnyGong": "@yyx990803  \u7528vue-cli\u6784\u5efa\u4e4b\u540e\uff0c\u5199 vue\u6216js\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u8981es2015\u7684\u8bed\u6cd5\u5417\uff0c\u6211\u5199\u4e86CommonJS\u8bed\u6cd5\uff0c\u4e00\u76f4\u8fd0\u884c\u62a5\u9519\uff0cCouldn't find preset \"es2015\" relative to directory\u3002\u6211\u53bb\u6389\u4e86 webpack.base.conf.js \u4e2d\u7684\u914d\u7f6ebabel\u914d\u7f6e\u9009\u9879\uff0c\u8fd8\u662f\u62a5\u9519\u3002\n. ",
    "KillianKemps": "Alright, my mistake. I ran http-server at the root project instead of the dist folder\n. ",
    "jbruni": "If you do exactly the same steps above, but instead of using the latest vue-webpack-template, you use a past version, it will work. As I have done a tiny pull request recently, GitHub automatically created a fork. The master branch of my fork \"is 16 commits behind vuejs-templates:master\" at this moment. So, in the \"steps to reproduce\" above, you can simply change vue init call to:\n$ vue init jbruni/webpack my-project\nPerforming the exact same steps, this is the successfull result:\n```\n\nmy-project@ build /home/jbruni/TT/boo/my-project\nrimraf dist && webpack --progress --hide-modules --config build/webpack.prod.conf.js\n\nHash: b08bd5b8691a16fbc7a1\nVersion: webpack 1.12.13\nTime: 4838ms\n                                       Asset       Size  Chunks             Chunk Names\n                 app.98c111ddf2117c6910d3.js    83.6 kB       0  [emitted]  app\n    app.6b590370d011a33cd6d0437256238024.css  106 bytes       0  [emitted]  app\n             app.98c111ddf2117c6910d3.js.map     656 kB       0  [emitted]  app\napp.6b590370d011a33cd6d0437256238024.css.map  303 bytes       0  [emitted]  app\n                               ../index.html  290 bytes          [emitted]\nChild extract-text-webpack-plugin:\n``\n. Hey... I just found that if I **remove the preLoaders** fromwebpack.base.conf.js`, the result is successful.\nAnd if I add !eslint back to the loaders, I get the linting back, up & running, and the result is also successful.\n{\n        test: /\\.vue$/,\n        loader: 'vue!eslint'\n      },\n      {\n        test: /\\.js$/,\n        loader: 'babel!eslint',\n        exclude: /node_modules/\n      },\nSo, the issue is related to linting in the \"preLoader\" phase.\nI've read the rationale at http://vuejs.github.io/vue-loader/workflow/linting.html, but I will revert https://github.com/vuejs-templates/webpack/commit/bab75ff42a34b25237f83b89033db7df5865b0d0 in my project until this is resolved.\nThank you.\n. Indeed. It works now. Great! Thanks.\nMeanwhile, I've faced another (unrelated) issue, which made me remove \"plugins\": [\"transform-runtime\"] from .babelrc (at least temporarily, while they don't fix it): https://phabricator.babeljs.io/T7127\n. @iugo Maybe you are calling npm run dev from this repository root folder? If this is the case, you should follow the main README instructions, because this repository is a vue-cli template:\n$ npm install -g vue-cli\n$ vue init webpack my-project\n$ cd my-project\n$ npm install\n$ npm run dev\nYou may change my-project to another folder name, suitable to your project.\n. As far as I know, out-of-the-box support for PostCSS already exists:\nhttp://vue-loader.vuejs.org/en/features/postcss.html\n. In my opinion, this sounds like a very particular need that may be configured for an individual project, rather than a general use case to be applied for everyone by changing the vuejs-webpack template itself.\n. Sounds good, in my opinion. I regret the suggestion didn't come earlier... I wonder how many changes to tooling is necessary to support this name change...\n. ",
    "b44rd": "Add this to the array loaders inside build/webpack.base.conf.js:\n{\n        test: /\\.less$/,\n        loader: \"less-loader\"\n     },\nThen npm install less-loader. \n. Managed to reproduce the error. It actually turns out I only get it to work with scss, but not with less. I haven\u00b4t used less too much, so I don\u00b4t know weather the error could be due to less or not. This is the code I\u00b4m currently running. \nWithin Hello.vue:\n<style lang=\"sass\">\n  @import \"src/styles/somefile\";\n  .somestyle { \n    color: $somecolor;\n  }\n</style>\nNote: My somefile uses .scss extension, not .sass :) \nI don\u00b4t know weather the following actually is necessary to add, but I\u00b4ve also added this to the loaders array within build/webpack.base.conf.js: \n{\n        test: /\\.sass$/,\n        loader: \"sass-loader\"\n      },\nI\u00b4ve also installed sass-loader. \n. @chrisvfritz Yes, relative path works fine in both less and sass/scss. However, the issue is that the \"src\" alias doesn't work in less (as it do in sass/scss). \nGlad to see that #29 specify a difference between sass and scss though! :)\n. ",
    "OEvgeny": "Thanks but didn't work for me:\n```\nERROR in ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-94e51594&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/Hello.vue\nModule build failed: Cannot resolve 'file' or 'directory' ./src/less/theme.less in /project/src/components\n @ /project/src/components/Hello.vue (line 2, column 0)\n near lines:\n@import \"src/less/theme\";\n@ ./~/vue-style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-94e51594&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/Hello.vue 4:14-279 13:2-17:4 14:20-285\n``\n. @chrisvfritz I didn't find really good solutions in that thread. Is it webpack problem? I see issue is closed...\n. @chrisvfritz thanks, got it!\n. What if I need to use vue-resource directly fromVuebecause I perform some request out of my components? It is supported by vue-resource. I mean you can do it in a way I described abowe, but it's not working correctly with webpack because of modularity.\nTo work around this I tried to define Vue globally withprovidePluginbut is seems to not work too.\n. It looks like with Vue in globals it's not working too (seeProvidePluginconfig for details). But when I callVue.use` in each module where I using resource directly it works.\n. @chrisvfritz I think it is not recommended, because I need to do it for each module where I use it. I moving my project into this boilprate, so before it was working well with webpack.\nI also tried to export resource directly from main.js, and than import it in modules what depends on resource. It does not work too.  Looks like mian module evaluates after another ones what need it because I found resource to be undefined.\n. @yyx990803 sorry for mention you, but I think it can be important\nI created a repo with my issue:\nbash\nvue init OEvgeny/webpack test\ncd test\nnpm i\nnpm run dev\nThan follow console log in localhost:8080. My output:\nThere is no resource: undefined\nResource is defined and exported: function Resource () {...}\nApi is not defined undefined\n. @yyx990803 Thanks for explanation Evan!\n. ",
    "mbensch": "I have a similar issue and got it solved by explicitly adding the .less extension to my alias, like this:\njavascript\nalias = { 'uikit.less': '/path/to/uikit/index.less'}\nThen I can import my library in my other less files like this:\nless\n@import '~uikit';\nI wish there'd be a better way but for now that worked well for me.\n. ",
    "al3x-huang": "Having the same issue here. Did anyone ever figure out the solution?. Having the same issue as well, I think the problem is that in import, less loader prepends import paths with ./ so if we had an alias src and @import src/.../style.less then the error would always be something along the lines of cannot resolve './src/.../style.less'. Perhaps if it tries to resolve src/.../style.less it would work? Just an idea if anyone more familiar with the source can see if this might be an issue. . @davieghost Thanks. This should be made more explicit in the documentation (specifically using aliases since the doc only suggest this to import from node_modules). Also suggesting that \"The less-loader applies a Less plugin that passes all queries to the webpack resolver\" makes me think that I shouldn't need the ~ to make imports behave as expected. . ",
    "dogbot": "I am having the same issue\n`This dependency was not found:\n\n!!vue-style-loader!css-loader?{\"minimize\":false,\"sourceMap\":false}!../../node_modules/vue-loader/lib/style-rewriter?{\"id\":\"data-v-7074dcac\",\"scoped\":false,\"hasInlineConfig\":false}!less-loader?{\"sourceMap\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./section02.vue in ./src/components_project/section02.vue\n\nTo install it, you can run: npm install --save !!vue-style-loader!css-loader?{\"minimize\":false,\"sourceMap\":false}!../../node_modules/vue-loader/lib/style-rewriter?{\"id\":\"data-v-7074dcac\",\"scoped\":false,\"hasInlineConfig\":false}!less-loader?{\"sourceMap\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./section02.vue`. ",
    "bluehaha": "If your project is from vue-cli.\nRun:\nnpm install --save-dev less less-loader\nAnd and add this code in your xxx.vue\n\n\n...\n. \n",
    "gvost": "@dogbot @al3x-huang, so it looks like in order to remove the ./ (which turned out to be the problem for me) from the path in the .less file's @import statement you add only the ~ to the beginning of the path.\nIn my case my original @import was:\nless\n@import 'src/App/asset/incl/global/variable.less';\n& the import statement that wound up working was:  \nless\n@import '~src/App/asset/incl/global/variable'; \nthat was all I had to do in the end.\nHope that helps, cheers.. @al3x-huang, no problem at all. I fully agree, all fronts i see no benefit for the use of a ~ to remove non-standard behavior, it just stands to confuse folks. ",
    "junen0511": "@davieghost Thanks\uff01 do work for me. this is my code\nalias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@src': resolve('src'),\n      '@assets': resolve('src/assets'),\n      '@components': resolve('src/components'),\n      '@views': resolve('src/views'),\n      '@styles': resolve('src/styles')\n    }\n<style lang=\"less\" scoped>\n@import \"~@styles/mixin.less\";\n</style>. ",
    "aldencolerain": "@al3x-huang  I agree I don't think its standard/expected webpack to have to add the ~ in-front of your alias, doesn't that normally indicate to the css-loader you are loading from a node package? @chrisvfritz  Should we open an issue to update the documentation with this workaround somewhere so people don't need to google this github issue for the solution?  Or should the loader recognize all the aliases without the ~?  I think a global sass/scss/less import is a very common use case.  It seems like this issue isn't really resolved, there is just a good work around.. I was able to get this to work, but it took some time sifting through all of them comments and incompatibilities.\nInstall:\nnpm install chai-as-promised --save-dev\nTo use in my test added at the top:\njs\nconst expect = require('chai').use(require('chai-as-promised')).expect;\nAnd in my test case:\njs\nexpect(promisefunc()).to.eventually.equal(123);\nkarma.conf.js:\nadded:\n```\ncomplete file:js\nvar webpackConfig = require('../../build/webpack.test.conf');\nmodule.exports = function (config) {\n  config.set({\n    browsers: ['PhantomJS'],\n    frameworks: ['mocha', 'sinon-chai', 'phantomjs-shim'],\n    reporters: ['spec', 'coverage'],\n    files: ['../../node_modules/babel-polyfill/dist/polyfill.js',\n            './index.js'],\n    preprocessors: {\n      './index.js': ['webpack', 'sourcemap'],\n      require.resolve('chai-as-promised'): ['webpack'],\n    },\n    webpack: webpackConfig,\n    webpackMiddleware: {\n      noInfo: true,\n    },\n    coverageReporter: {\n      dir: './coverage',\n      reporters: [\n        { type: 'lcov', subdir: '.' },\n        { type: 'text-summary' },\n      ]\n    },\n  });\n};\n```\nwebpack.test.conf.js\nchanged:\nrules: utils.styleLoaders().concat([\n      {\n        test: require.resolve('chai-as-promised'),\n        use: 'babel-loader'\n      }\n    ])\ncomplete file:\n```js\n// This is the webpack config used for unit tests.\nvar utils = require('./utils')\nvar webpack = require('webpack')\nvar merge = require('webpack-merge')\nvar baseConfig = require('./webpack.base.conf')\nvar webpackConfig = merge(baseConfig, {\n  // use inline sourcemap for karma-sourcemap-loader\n  module: {\n    rules: utils.styleLoaders().concat([\n      {\n        test: require.resolve('chai-as-promised'),\n        use: 'babel-loader'\n      }\n    ])\n  },\n  devtool: '#inline-source-map',\n  resolveLoader: {\n    alias: {\n      // necessary to to make lang=\"scss\" work in test when using vue-loader's ?inject option\n      // see discussion at https://github.com/vuejs/vue-loader/issues/724\n      'scss-loader': 'sass-loader'\n    }\n  },\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': require('../config/test.env')\n    })\n  ]\n})\n// no need for app entry during tests\ndelete webpackConfig.entry\nmodule.exports = webpackConfig\n```\n. @DRL9 I'm not exactly sure why your example isn't working, I eventually found that using async/await was significantly easier and less difficult than using chai-as-expected.  I just created a utility function to handle checking rejected promise errors.  Here are some examples from my code:\n```js\nit('should return an empty object if we got a good response with no payload', async function() {\n  expect(await request('GET', '/')).to.deep.equal({});\n});\nit('should throw api request error with empty fields and alert user on a network error', async function() {\n  const error = await rejection(() => request('GET', '/'));\n  expect(error).to.be.instanceof(Error);\n  expect(error.message).to.equal('API Request Error');\n});\n```\nHere is my utility function for checking rejected promises:\nasync function rejection(func) {\n  try {\n    await func();\n  } catch (error) {\n    return error;\n  }\n  return null;\n}. ",
    "up9cloud": "similar issue here (import node_modules less file)\nmy solution:\n1. npm install --save-dev less less-loader (https://github.com/vuejs-templates/webpack/issues/25#issuecomment-288287910)\n2. webpack.base.conf.js (http://vue-loader.vuejs.org/en/options.html#loaders)\njs\n// vue-loader options\n...\nloaders: {\n      less: 'vue-style-loader!css-loader?sourceMap!less-loader?sourceMap'\n}\n3. import file with ~ prefix (https://github.com/vuejs-templates/webpack/issues/25#issuecomment-293128337, https://github.com/webpack/webpack/issues/1789#issuecomment-277024235)\nvue\n<style scoped lang=\"less\">\n@import \"~spectre.css/src/variables.less\";\n@import \"~spectre.css/src/timelines.less\";\n</style>. Memo for manually switch\n\nUsing Runtime + Compiler should be...\n\njs\n// src/main.js\n...\nnew Vue({                       \n  el: '#app',\n  router,                  \n  template: '<App/>',                                     \n  components: { App }        \n})\njs\n// build/webpack.base.conf.js\n...\n  resolve: {\n    extensions: ['.js', '.vue', '.json'],\n    alias: {\n      'vue$': 'vue/dist/vue.esm.js',\n      '@': resolve('src'),\n    }\n  },\n...\n\nUsing Runtime-only should be...\n\njs\n// src/main.js\n...\nnew Vue({\n  el: '#app',\n  router,\n  render: h => h(App)\n})\njs\n// build/webpack.base.conf.js\n...\n  resolve: {\n    extensions: ['.js', '.vue', '.json'],\n    alias: {\n      '@': resolve('src'),\n    }\n  },\n.... ",
    "leandro980": "Similar issue\nresolve:{\n        alias:{\n            \"boooya\": path.resolve(__dirname, 'app/Resources/public/boooya')\n        }\n    }\nIn less file i have to use ~boooya. \nMy problem is that i'm using theme with hundreds of files that imports each other by using relative paths and the only way to manage that is using aliases (i could to add it in css-loader alias options). \nFolder structure\n+ app/Resources/public/boooya/\n    + css/\n        + components/\n             - app-heading.less\n        - styles.less\n    + img/\n        - bg.png\n```\n// app/Resources/public/boooya/css/styles.less\n@import \"components/app-heading.less\"\n// app/Resources/public/boooya/css/components/app-heading.less\nbackground: url(../img/bg.png) top left no-repeat \n```\n So i can compile webpack only by defining aliases for ../img that resolve to app/Resources/public/boooya/img \nBut how can i do that?\n. ",
    "icaife": "You can see less-loader,it work fine for me.\nJust prepend them with a ~ which tells webpack to look up the modules.. ",
    "hybridwebdev": "I'm sure i'm late to the party, but this thread helped me solve this exact problem. For anyone else that may come across this, just throwing my solution out there in case it helps...\n@import '~@/assets/less/editor.less';\nwhich resolves to {root}/src/assets/less/editor.less.\nUsing just @ (which is aliased in my webpack) wasn't sufficient. It's only when i prefixed the tilde that it worked. Might be a bit dirty, but it beats having to use relative paths. . ",
    "zarkin404": "it works for me, thanks for saving my time!!!!!!!!!! @hybridwebdev. ",
    "lavenderx": "@chrisvfritz Thanks! it's my fault, I provide an error value for transition property in <router-view></router-view>\nNow, it works.\n. ",
    "posva": "That's interesting, I ran into other errors that may be missleading. I'm interested in the code you where running to get those errors. Mind sharing it?\n. I see, thanks for the explanation\n. Yep, having some optional features could be great. We would need to add some way of customizing it through the templates\n. @ameesters I added a comment on the forum just for the record\n. @yyx990803 Cool! I like the refactoring you did\n. It doesn't matter it doesn't get merged ofc :smile: \n. @vance  Can you please elaborate a bit more?. It doesn't fail. The cp command fails to copy because there's nothing on your static folder. But nothing you should worry about. You may want to improve the output. In that case, a PR is welcome \ud83d\ude09 \n@zigomir Can be closed. @LinusBorg There's another thing that we should use. I'm looking into it \ud83d\ude06 \nedit: https://github.com/deepsweet/istanbul-instrumenter-loader\nedit2: i'm looking into it. @blake-newman I tested the other lib but it doesn't work well. The babel plugin is the recommended way: https://github.com/istanbuljs/istanbul-lib-instrument\nThe last thing we can try is fork the project and update the dependencies but we're probably not going to update it. IMHO I prefer having an official plugin that is more likely being maintained that syntax colours in the coverage report. WDYT?. @LinusBorg @blake-newman  LGTM!. Having the error twice is really annoying, indeed \ud83d\ude06 . does this help: https://github.com/webpack/css-loader/issues/38. duplicate of #401 . @kazupon can be closed because of 0b8051f. as @asumaran said, this is a duplicate of #478 . As seen in https://github.com/vuejs/vue/issues/4907 @smolinari Can you close it please? \ud83d\ude1b . What if the user wants to pass something that is not a string?. the problem is actually the toBe call which is from jasmine. you need to use something like to.be(...) because we're using chai \ud83d\ude42 . Can you close the issue, please \ud83d\ude1b ?. Looks like you somehow did npm install --production and installed dependencies only but you need to install the dev dependencies as well. Mmmh, I wonder if it's a good idea to use a CDN when bundling your app with webpack because you may want to put vue+vue-router+vuex together into the same file.\nI also think this should be disabled by default (haven't tested yet). what do you mean by hacking for performance?\nI'm actually asking myself the same question for CDN \ud83d\ude06 Maybe it's starting to be a good time to start using them again. Yeah, to a certain degree:\n\nThere is still a protocol overhead for each request compared to a single concatenated file.\nThe compression of the single large file is better than many small files.\nServers are slower serving many small files than a single large file.\n\n(from https://medium.com/webpack/webpack-http-2-7083ec3f3ce6). I'll share with the team. If a user adds vuex while using the CDN feature, he'd expect to use the CDN version as well. What plugin? \ud83d\ude05  I literally wrote the code for you, I didn't test it but it should be working\nThe reason to include vuex is that it's also an official Vue plugin. Oh, but it's unrelated to the plugin, we're passing on the packages ourselves. Even if vuex is not part of the template we can make the experience much better by providing support for it (since it's an official Vue plugin)\n```js\nvar cdnPackages = [{\n    name: 'vue-router',\n    var: 'VueRouter',\n    path: 'dist/vue-router.min.js'\n}, {\n    name: 'vuex',\n    var: 'Vuex',\n    path: 'dist/vuex.min.js'\n}]\npackages = packages.concat(cdnPackages.filter(({ name }) => name in dependencies))\n``. no, building the array is unrelated to the plugin. How the array looks like **is**. I even wrote you the code.... Actually, this is not necessary once #913 is merged. @blake-newman Thanks! I didn't know it also worked that way. Can you keep it 2 spaces and add the default values as well: { img: 'src', image: 'xlink:href' }. this should be added only if vue-router is selected though.\nI think we could do something smarter that checks if the packagesvue-routerandvuexare present in the package.json and build thepackages` array at runtime. Can you make it dynamic instead? checking if vue-router and vuex are in the package.json file?. yes. yes, but here you're adding vue-router if vuex is in the dependencies. It could be something like:\n```js\nvar cdnPackages = [{\n    name: 'vue-router',\n    var: 'VueRouter',\n    path: 'dist/vue-router.min.js'\n}, {\n    name: 'vuex',\n    var: 'Vuex',\n    path: 'dist/vuex.min.js'\n}]\npackages = packages.concat(cdnPackages.filter(({ name }) => name in dependencies))\n```. As this is still true, can you leave something similar like:\nYou can change the port at `config/index.js` as well if you don't want to pass the option every time. if you don't want to pass the option every time. I think you forgot to remove this log \ud83d\ude42 . You should move this line outside of unit so it always gets installed. We need to remove line 38 and 39 from build/webpack.dev.conf.js\njs\n    // https://github.com/glenjamin/webpack-hot-middleware#installation--usage\n    new webpack.HotModuleReplacementPlugin(),\nThe --hot is the only one needed. ",
    "airyland": "But how can I include a image using <img src=\"\"/> or include a common js like zepto?\n. +1\n. @moonou I agree. . I wonder why not use default value true or remain unchanged as people can just edit the config? Now with value:false  I have to add a tip in my components document for how to import VUX with webpack template: setting symlinks to true first. \nYou may know cnpm is the largest npm mirror in China, after using cnpm install, every npm module will be a symlink.  And for VUX components, I need to add babel-loader for node_modules/vux/src/**/*.js, but loader will not work if  symlink  is set to false.\nnpm run build will get:\n\n. @LinusBorg \nyes, symlinks: false\nhttps://github.com/LightmakerCanada/webpack/blob/bc864770a6e8361b509f517e4a88f7fc040d8a0f/template/build/webpack.base.conf.js#L30. @MaxMilton \nI can still see that line:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.base.conf.js#L30. ",
    "chrispappas": "I am trying to do this literally right now - saw your last comment pop up in real time!\nIf you can help with an example snippet that would be helpful. I'm trying to do:\nrequire('src/assets/scss/main.scss')\ninside my App.vue component\n. I actually might be on the right track here already, added the following to my webpack.base.conf.js file in the loaders array (although getting other unrelated errors so I can't quite confirm):\n{\n        test: /\\.scss$/,\n        loaders: [\"css\", \"sass\"]\n      },\n. Nice, I had actually added the stock style-loader and prepended style to the loaders array, which seems to work great. Should I replace it with vuejs/vue-style-loader instead? This seems to work just fine for my purposes at this point with the stock style-loader plugin.\n. Thanks for the help guys, much appreciated.\n. ",
    "miljan-aleksic": "Thanks :)\n. Why not merge it, then? :). ",
    "ameesters": "For acceptance in enterprise/corporate environments have coverage is crucial. I work for a big world-wide company and am currently pushing for Vue, but coverage is very important for us due to audits from 3th parties before using our software.\nSo i am really excited seeing this happen!\nOfftopic: i also asked a question about it on the forum for a demo application in vue: http://forum.vuejs.org/topic/3081/test-coverage-report \n. ",
    "alexcheninfo": "@yyx990803 Oh, didn't know that. Thanks for the info. \n. ",
    "jpokrzyk": "This still fails on windows with chrome. https://github.com/vuejs-templates/webpack/blob/master/template/test/e2e/nightwatch.conf.json#L12 needs a .exe after it.\n@phromo I'm a little confused where to actually do a PR or report an issue. Nightwatch? \n. @yyx990803 Nice find with 0ccbc85. I looked around for a chrome driver CMD before making my earlier comment and couldn't find it. I'm still pretty new to node and very new to npm. I should have looked harder ;)\nThis didn't completely resolve e2e on windows though. Now it just hangs when trying to launch the chrome driver. It looks like the js runner nightwatch uses internally uses regular spawn instead of cross-spawn like @phromo mentioned in the original post.\nAnd to answer your earlier question: yes, if I just add the .exe to the end of \"webdriver.chrome.driver\": \"node_modules/chromedriver/lib/chromedriver/chromedriver\" everything works as expected. \nSo now I should definitely raise an issue with nightwatch right? I'm surprised no one brought it up over there. I could find anything in their issue log or PRs. \nThanks for providing all of this. Nightwatch looks pretty awesome.\n. Yea sweet. Completely working now.\n. Duplicate. See #40 for a real fix.\n. I didn't put it in there specifically for me or cmder. That's just how I noticed it. It was a required field per the docs so I thought I should add it. I don't have a strong opinion to have it in there though.\n. ",
    "phromo": "@jpokrzyk nightwatch just passes the path on to java, so it's actually the call from java (inside selenium) that's not being called with a shell, thus not picking up the .cmd. For me, just changing the path in the conf works. I guess it should either be fixed in selenium or have nightwatch build a workaround (looking for the .cmd and passing that).\n. ",
    "cnicodeme": "I don't have much experience on Webpack but since I'm having this issue I can help.\nI'm running Fedora 22, with Node v5.3.0 and NPM v3.3.12 and I'm having the following issue : \n\nUncaught Error: Cannot find module \"-!./../../../../..!./../../../node_modules/vue-loader/lib/style-rewriter.js!./../../../../../../../../project/manager/node_modules/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"extract\":true,\"remove\":true}!vue-style-loader!css-loader!./../../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./login.vue\"\n\nIf you need more info, I'll be happy to provide them :)\n. For information, I'm working on my project on two different computer, the second one is an Ubuntu installation : \nbash\n$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 14.04.2 LTS\nRelease:        14.04\nCodename:       trusty\nAnd the npm run build works correctly.\nOn that computer, here's the different versions : \nbash\n$ node -v\nv4.1.1\n$ npm -v\nv2.14.4\n. (I wrongly posted this in the old tickets, so I'm copying it here) :\nHi tested something on my installation : \nI initiated a new project using vue-cli and webpack, and did npm install && npm run build and I got this error : \n\nERROR in ./src/App.vue\nModule not found: Error: Cannot resolve 'file' or 'directory' ./../../../../../../test/node_modules/extract-text-webpack-plugin/loader.js in /var/www/html/test/src\n @ ./src/App.vue 2:0-321\nChild html-webpack-plugin for \"../index.html\":\n\nI had this issue without modifying anything.\nMaybe that would help, but despite the fact that I've installed vue-cli as root using npm install -g vue-cli, I don't have any vue command in my $PATH so I did the following : \n\n/opt/node/5.3.0/lib/node_modules/vue-cli/bin/vue init webpack test\n\nAnd odly, it correspond to the number of .. in the above error message.\nHoping that this could help! :)\n. (I wrongly posted this in the old tickets, so I'm copying it here) :\nI updated Node & NPM : \nbash\n$ node -v\nv5.8.0\n$ npm -v\n3.8.1\nAnd retried a build on my app, without any luck. The problem remain.\n. Since I tested a fresh installation on vuejs, I seriously doubt removing the extract-text-webpack-plugin in node_modules will fix the issue, but to be sure, I'll try.\n...\nAnd it did not fixed the issue, unfortunately.\nI'll see if I can find more details, but for now, I'd say it's related to Fedora\n. Feel free to ask, I'm concerned about this problem :)\nI'm sorry I can be of much help regarding the package in question, I'm quite new to Node and I couldn't narrow where the problem is in extract-text-webpack-plugin.\n. Yeah nice! :)\n. ",
    "cipas": "same issue as @cnicodeme \n. ",
    "pratyushbarik": "The error seems to occur due to \nif (options.extract) {\n  return ExtractTextPlugin.extract('vue-style-loader', sourceLoader)\n} else {\n  return ['vue-style-loader', sourceLoader].join('!')\n}\nin css-loaders.js.\nSpecifically in return ExtractTextPlugin.extract('vue-style-loader', sourceLoader).\nWithout it npm run build executes without any issues. If you set extract to false in webpack.base.conf.js, it works fine.\nI am on eOS Freya.\n. ",
    "funkyLover": "@chrisvfritz  same issue, and unfortunately, on OSX El Capitan 10.11.4\n~ node -v\nv4.4.0\n~ npm -v\n3.8.2\nbut someting weird\nI have tried create two project with vue-cli\nvue init webpack haha & vue init webpack html\nand within project haha\nnpm install\nnpm run build\nit work fine!\nbut in project html, it will get error\n```\nERROR in ./src/App.vue\nModule not found: Error: Cannot resolve 'file' or 'directory' ./../../../../../node_modules/extract-text-webpack-plugin/loader.js in /Users/funkyLover/Desktop/html/src\n @ ./src/App.vue 2:0-294\nERROR in ./src/components/Hello.vue\nModule not found: Error: Cannot resolve 'file' or 'directory' ./../.. in /Users/funkyLover/Desktop/html/src/components\n @ ./src/components/Hello.vue 2:0-335\n```\nis it possible caused by the folder name? \ud83d\ude02\n. i find out all the error report have html with their project path \ud83d\ude02\nissue by @sunny-rajkotiya\nissue by @cnicodeme\nissue by @voigt\nissue by @2eron\nand i try vue init webpack haha in a html folder and npm run build\nthe error again \ud83d\ude02\n. sorry, I make wrong step with pr.... \n. @noraesae thank! this help me out of issue#173\n. @chrisvfritz \nI must to say sorry because i got mistake with this pr\u00a0\ud83d\ude30...\nit should be assetsSubDirectory not the assetsPublicPath...\nI didn't realize this fault until I received the merge pr email...\nshould it be reverted or open a new pr? please let me know...\n. ",
    "oaleynik": "@yyx990803 @chrisvfritz @funkyLover https://github.com/vuejs/vue-loader/blob/master/lib/loader.js#L14 - this regex matches html word. So, if project path contains html word somewhere - https://github.com/vuejs/vue-loader/blob/master/lib/loader.js#L99 will separate path with bang right after the html word\n. @yyx990803 PR with fix https://github.com/vuejs/vue-loader/pull/205\nI didn't find a way how to compose proper regex to skip absolute paths with html and css words in it, so I went another way - I do split loader string by ! and inject rewriter into each part separately. If part contains path.sep I consider it as filesystem path and skip injection.\n. @yyx990803 @azamat-sharapov Have no idea how I went into wrong branch (jet leg probably after recent trip). I have new PR for this https://github.com/vuejs-templates/webpack/pull/80. Sorry for inconvenience \n. @yyx990803 thanks, did not know that it exists \ud83d\udc4d \n. In master branch it is filename: utils.assetsPath('[name].[chunkhash].js'),. Master branch is set as default branch in this repo. Is it correct?\n. ",
    "YasuoSop": "@yyx990803 \u5c24\u5927\u5927 \u8bf7\u95eeiview\u600e\u4e48\u96c6\u6210\u5230asp.net\u9879\u76ee\u4e2d\uff1f. ",
    "vabatta": "And how should I import them? For example, I added jquery or font-awesome dependency into bower.json. Where should I add the script tag or the link/style tag to import it? Like, font-awesome I should have it in every page, so I would normally link it to the index.html, but it doesn't work.\n. ",
    "hq5544": "Failed to parse SourceMap: data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiI3MS5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n\u4e0b\u9762\u7684\u94fe\u63a5\u70b9\u5f00\u53ef\u4ee5\u89e3\u6790\u6210\uff1a\n{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"file\":\"71.js\",\"sourceRoot\":\"\"}\n. \u6211\u91cd\u65b0\u5efa\u4e86\u4e00\u4e2a\u9879\u76ee\uff0c\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e00\u5207\u987a\u5229\u3002\u4f46\u662f\u7a81\u7136\u6709\u51fa\u73b0\u4e86\u4e0a\u9762\u4e00\u6837\u7684\u95ee\u9898\u3002\n\n\u7279\u522b\u7a81\u7136\uff0c\u6beb\u65e0\u5f81\u5146\u3002\n\u672c\u6765\u662f\u5728\u5bf9 vue-resource \u8fdb\u884c\u5c01\u88c5\uff0c\u4f46\u662f\u7a81\u7136\u5c31\u53d1\u73b0\u4e0a\u9762\u7684\u63d0\u793a\u3002\n\u662f\u4e0d\u662f\u6211\u7528\u7684\u4e0d\u5bf9\u5462\uff1f\u5f53\u65f6\u53ea\u6539\u4e86\u4e00\u4e0b\u4e24\u6bb5\u3002\n``` js\nimport utils from '../tools/utils'\nconst ajax = utils.ajax\nexport default {\n    // \u6ce8\u518c\u65f6\u83b7\u53d6\u9a8c\u8bc1\u7801\n    getRegistCode (tel) {\n        const param = {}\n        param.tel = tel\n        ajax('user/getTelCodeToRegister', param, true)\n    },\n    // \u63d0\u4ea4\u6ce8\u518c\u4fe1\u606f\n    regist (name, tel, openid, unionId, identify) {\n        const param = {}\n        param.tel = name\n        param.tel = tel\n        param.tel = openid\n        param.tel = unionId\n        param.tel = identify\n        ajax('user/register', param, true)\n    },\n    // \u83b7\u53d6\u7528\u6237\u8eab\u4efd\u8ba4\u8bc1\u4fe1\u606f\n    getVerifyInfo () {\n        ajax('user/getVerifyInfo')\n    }\n}\n```\n``` js\nimport Vue from 'vue'\nimport store from '../store/store'\nimport {\n    showPopup,\n    settingPopup\n} from '../store/actions'\nconst utils = {\n    alert (content) {\n        // alert \u5f39\u7a97\n        const settings = {}\n        settings.content = content\n        settingPopup(store, settings)\n        showPopup(store)\n    },\n    confirm (content, title, btnList) {\n        // confirm \u5f39\u7a97\n        const settings = {}\n        settings.content = content\n        settings.title = title\n        settings.btnList = btnList\n        settingPopup(store, settings)\n        showPopup(store)\n    },\n    ajax (url, param = null, ignoreToken) {\n        // ajax \u7684\u5c01\u88c5\n        let tokenParam = ''\n        if (!ignoreToken) {\n            tokenParam = ?token=${store.token}\n        }\n        return new Promise((resolve, reject) => {\n            Vue.http.post(url + tokenParam, param).then((response) => {\n                if (response.code === 200) {\n                    resolve(response.object)\n                } else {\n                    utils.alert(response.message)\n                    reject(response)\n                }\n            })\n        })\n    }\n}\nexport default utils\n```\n. \u66f4\u65b0\u4e86 Chrome 50.0.2661.66 beta (64-bit)\uff0c\u6ca1\u95ee\u9898\u4e86\u3002\n. ",
    "esahione": "So... I disabled the extract-text-webpack-plugin and now it's working.\n. ",
    "Astray-git": "I have the same issue if build on Debian (build config works fine on OSX and Windows).\nMay be related to #41 ?\n. Well, in my situation, the problem is not related to extract-text-webpack-plugin.\nI find out the minifyCSS option for html-minifier will remove some :style biding code. (tested on  Ubuntu 15.10)\n\u2018minifyCSS' is set to true by default in vue-html-loader:\nhttps://github.com/vuejs/vue-html-loader/blob/master/index.js#L78\n. code:\nhtml\n<th\n  :style=\"[\n    column.styles,\n    { width: column.width }\n  ]\">\nbuild without minifyCSS:\nhtml\n<th :style=\"[\\n            column.styles,\\n            { width: column.width }\\n          ]\">\nbuild with minifyCSS: \nhtml\n<th :style=\"\">\n. @chrisvfritz Try this hello.vue .\n I can reproduce the bug in a fresh webpack-template project.\n. @chrisvfritz Sorry, that's a mistake in my test code.\nwith a correct style object, the style biding template is still built to :style=\"\"\n. ",
    "tiaod": "But I had already install coffee-script and coffee-loader,  It doesn't works.\n```\nwebpack built 3dfcf2ef9a16589d32fa in 4098ms\nHash: 3dfcf2ef9a16589d32fa\nVersion: webpack 1.12.14\nTime: 4098ms\n Asset     Size  Chunks       Chunk Names\napp.js  1.04 MB       0       app\nERROR in ./src/components/Hello.vue\nerror    Parsing error: Unexpected token :\n  /home/xmrg/share/wechat-anonymous-moments/src/components/Hello.vue:9:7\n    data:->\n         ^\n\u2716 1 problem (1 error, 0 warnings)\nChild html-webpack-plugin for \"index.html\":\n         Asset     Size  Chunks       Chunk Names\n    index.html  21.1 kB       0     \nwebpack: bundle is now VALID.\n```\nHello.vue:\n```\n\n\n{{ msg }}\n\n\n\nmodule.exports=\n  data:->\n    msg:123\n\n```\n. Thank you !!!!!!!\n. https://webpack.js.org/configuration/resolve/#resolve-mainfields. Some package has a browser version which specify by browserify field. And the main field is for node.js version.. ",
    "azamat-sharapov": "Basically, current version of vue-router initiates Vue instance for you, you don't need to do it by yourself, just pass component. Here is \"mixed\" code for you:\n```\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport App from './App'\nimport { configRouter } from './route-config'\n// install router\nVue.use(VueRouter)\n// create router\nconst router = new VueRouter({\n  history: true,\n  saveScrollPosition: true\n})\n// configure router\nconfigRouter(router)\nrouter.start(App, '#app') // don't forget to have id=\"app\" container in HTML\n``\n. Check out [shimming modules docs](https://webpack.github.io/docs/shimming-modules.html). I personally use ProvidePlugin, if there is Semantic UI or something similar in project, because that's easiest way to inject jQuery (or other dependency) into tons of JS files.\n. And question isn't stupid, just make sure to ask it on forums or chat, issues are for bugs or feature requests.\n. You should clarify - is this dev build or production? For dev builds, it's normal, I think, because [sourcemaps](https://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.dev.conf.js#L13) add a lot of text.\nBut for production build, [sourcemaps are enabled by default](https://github.com/vuejs-templates/webpack/blob/master/template/config.js#L10) too.\n.npm install sass-loader --save-dev`\n. You are writing SCSS, not SASS.\n. It should be:\nhtml\n<style lang='scss'>\n$blue: #1875e7;\u3000\ndiv {\n    color: $blue;\n}\n</style>\n. And note, that require('~assets/' + this.country.name + '.jpg') will take all image names (or maybe all file names) and keep it in build files. So, if you have ten thousand images in ~assets/, be ready for this.\n. path is used in latest master: https://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.prod.conf.js#L14-L15\nAlso, you should probably rebase your branch..\n. ",
    "SystemZ": "It's working now :smile: \nThanks!\n. Commenting out this block in build/webpack.base.conf.js seems to work. It there any other way?\njs\npreLoaders: [\n      {\n        test: /\\.vue$/,\n        loader: 'eslint',\n        include: projectRoot,\n        exclude: /node_modules/\n      },\n      {\n        test: /\\.js$/,\n        loader: 'eslint',\n        include: projectRoot,\n        exclude: /node_modules/\n      }\n    ],\n. ",
    "ppq1991": "\u9047\u5230\u8fc7\u540c\u6837\u7684\u95ee\u9898\uff0c\u5e94\u8be5\u662f\u56fd\u5185\u7f51\u7edc\u73af\u5883\u7684\u9505\uff0cnpm install \u7684\u65f6\u5019\u67d0\u4e00\u6b65\u6302\u4e86\uff0c\u5220 node_modules \u5f00\u4ee3\u7406\uff0c\u91cd\u65b0 install \u5c31\u597d\u4e86\u3002\n. ",
    "ickeep": "\u91cd\u65b0\u5b89\u88c5 \bOK\n. ",
    "TheDeveloperTom": "@yyx990803 Thanks!. ",
    "emanuelmutschlechner": "@TheDeveloperTom you should definitely check out Evans post about retiring vue-resource https://medium.com/the-vue-point/retiring-vue-resource-871a82880af4. @dasDaniel \neslint is already a dev dependency template/package.json#L34 and template/build/webpack.base.conf.js#L46. @rowild What lint configuration do you use? \n standard\n airbnb\n* none. Semicolons are enforced by the airbnb style https://github.com/airbnb/javascript/blob/master/README.md#semicolons\nThere is a simple and quick fix to most eslint problems:\nbash\nnpm run lint --fix\nor\nbash\nyarn run lint --fix. No, I've never contributed to this project yet.. Looking at the source code, there is a message with that lint fix tip. https://github.com/vuejs-templates/webpack/blob/4f564a2715dd9ca39307c5603a3b91f0523f1f67/utils/index.js#L95. angular/cli is totally unrelated to this repo. ",
    "cakebake": "I understand Issues, but thanks anyway! ;)\n\nIf someone has the same problem: bradstewart/electron-boilerplate-vue#14\n. \n",
    "pespantelis": "@chrisvfritz @yyx990803 Thanks for your responses :smile: \n@yyx990803 I tried to implement your suggestions.\nPlease check my solution and let me know your concerns.\n. Yeah, of course!\n. I just added the section to docs. Could you check it? :)\n. Oh you are right, I missed that. Maybe we can split into 2 loaders?\n. ",
    "silvestreh": "Yes, it's kind of subjective. That's why I was hoping to have rules that don't enforce a style, but rather print errors and warnings for actual errors and warnings. Is having a different setting for indentation an error? I don't think so.\nI believe that, at least for now, the fork option is the best one. Thanks!\n. @gazpachu Nope, I ended up not worrying too much about it, especially with the partials that don't produce CSS output (like variables), I include those over and over again.\nIn the case of third party stuff, like Animate.css, or partials that do produce CSS output, I avoid @importing them within scoped styles because I'll end with duplicated code.\nIf you include partials that do produce CSS output, or third party stuff, within a regular <style> tag in your .vue component, duplicate code will be removed upon minification when you build your app for production environments.. ",
    "miquelangel-castillo": "I'm working with:\nOS: Ubuntu 14.04\nNode: 5.9.1\nnpm: 3.6.0\nvue-cli: 1.4.0\nI updated node and npm to latest versions:\nNode: 5.10.1\nnpm: 3.8.5\nand try a fresh install of vue-cli webpack template. \nSeems only affects the javascript reload, if I change some of the Hello.vue component on html template, refresh the browser with hot-reload, but no with the script section, if I change some literal of data msg, the browser doesn't change...\nAnd if change the config to production=true, the hot-reload works fine with all.\nI hope this helps, thanks!\n. @chrisvfritz I tried with methods and computed properties, and hot-reload works fine as expected :))\n@yyx990803 thanks for the explanation, it has become very clear to me\nThanks so much and congratulations for this great project!\n. ",
    "andrewhu": "Updating node and npm also fixed my problem. The vue dev tools chrome extension rocks! thanks. ",
    "xinchaobeta": "The file cause eslint throw error is ./build/dev-client.js \nI think if someone use npm run dev, the eslint should not check the ./build directory \n. ",
    "petervojtek": "in vue 2.8.1 there is no preLoaders section in build/webpack.base.conf.js, I had to remove this content to get rid of eslint terror:\n{\n        test: /\\.(js|vue)$/,\n        loader: 'eslint-loader',\n        enforce: \"pre\",\n        include: [resolve('src'), resolve('test')],\n        options: {\n          formatter: require('eslint-friendly-formatter')\n        }\n      },. ",
    "eric-burel": "Shouldn't eslint linting on build be turned off by default ? \nNot because it's a bad idea, but because eslint is still too buggy and hard to integrate to a text-editor, especially when working with other 3rd party solutions like Flow (some packages are not found etc.). \nI don't want to be unable to launch the app in develop mode because my Atom linting package just updated with a minor bug and my code is indentend with 4 spaces instead of 2.... Full edit : just to be more precise for Vue beginners like me, you need to register the imported components in the parent component that actually imports them (givem @erdiegoant answer I thought for a second you had to register all components in the App root...).. Hi, this sould not be closed, my client just had the same issue after trying to launch the application on  Gandi Simple Hosting (I can't reproduce though, I don't have access to his server).\nI guess the npm install did not install chalk since its a dev dependency, but then the server tried to build the app and failed. Maybe I missed something  about the production deployment process ?\n. @leodutra To solve this for now we simply built the app as static files (index.js, index.html, index.css or smth like that) and hosted them on the server. The issue was caused by trying to build on a production server (so no devDependcies) and still trying to launch the server provided by the template (which is a dev server and rely on devDependencies).. ",
    "sschadwick": "\nI don't want to be unable to launch the app in develop mode because my Atom linting package just updated with a minor bug and my code is indentend with 4 spaces instead of 2...\n\nI second this. Would love to see more control over eslint. I hate when vue crashes in dev because I forgot a semicolon, however this would be acceptable (if not desired) behavior when building for production.. ",
    "YavorK": "This is how to stop it in current Nuxt.js. A bit offtopic but was searching and google and the only thing I found was this thread. Hope it helps someone other searching for the same.\nsee extend()\n\n. ",
    "veratechnz": "I trawled Google and eslint docs & established this eslint options setup. Place it in your .eslint.js file within the vue project root dir. \nMan, that tab and space restriction is brutal.....\n'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0,\n\"no-mixed-spaces-and-tabs\": [0],\n\"no-tabs\": 0,\n\"skipBlankLines\": 0,\n\"ignoreComments\": 0,\n\"no-trailing-spaces\": [2, { \"skipBlankLines\": true }]\n\nThe Road To Customization:\n1. List of eslint rules and how to turn them off:\nLink Here\nUsing the link above to apply new settings on the rootDir/.eslint.js file should meet most of your needs.\n2.  Single file comments inside your javascript syntax to modify eslint config/behaviour (Didn't try but was within the eslint docs and looks handy):\nAt the top of one of your js files place this comment to say........ turn of undefined variable linting:\n/* eslint no-undef: 0 */\nalso a scoped format:\n```\n/ eslint-disable no-alert, no-console /\nalert('foo');\nconsole.log('bar');\n/ eslint-enable no-alert /\n```\nThis was sourced from: Link Here\n3. Ignore files via eslintignore:\nYou can simply ignore entire files or dir's from linting. Not ideal on those late night benders ;)\nbuild/*.js\nconfig/*.js\nbuild/*\n// The line below means to include this one file in eslint from the above instruction to ignore the entire dir: \n!build/index.js\n4. Possible helpful info at eslint\nGeneral Config Info\nList of Rules\nI am using es6 imports and have lots of variables and functions that are declared on one file then invoked on another. Was thinking of applying eslint to the bundled app.js file only, but didn't get that far. If anyone can help or has gone a similar route, would be great to hear from you. \n. Totally agree @LinusBorg \nJust make an effort to modify and then work with lint. I think the vue cli is a nice platform to work off. . ",
    "samayo": "ESLINT is the worst thing to have ever happened since WW2, I think there should be an option to wipe it out entirely. I spent more time counting spaces and tabs than coding.  Peter's answer finally did the trick. . How can we do the same for js scripts? . ",
    "Frondor": "Eslint is fine, what really sucks here is the dumbass who came out with all these stupid rules, like no spaces before function parenthesis and trailing comas EVERYWHERE. FFS!\n  . You can always use some Style CI services to format the code for you and your team. So you don't waste tons of time linting, when you should be spending every second on coding.\nDon't go full fanboy mode, please. Evangelism is counterproductive.. To be honest, this is quite annoying:\n\nIt messes up my own debugging workflow with logs. Is there any way to disable those messages? @LinusBorg . Switched it to \"error\" and worked just fine!. ",
    "jaxondu": "One quick way is to add a line of \"**/*\" to .eslintignore. Which will ignore all files. Or \"**/*.js\" and  \"**/*.vue\".. ",
    "snarlynarwhal": "If I wanted to use CoffeeScript for some .vue files and JavaScript in others, can I somehow keep ESLint on, but have it ignore templates that use CoffeeScript?. ",
    "FrancescoMussi": "-- So what do you do for living?\n  -- I count spaces, position parenthesis and check for trailing commas all day long. ",
    "gangsthub": "Please use ESLINT. Edit the rules if you please. It's totally configurable. I also don't like some of them. And as @jaxondu commented, .eslintignore is your friend in case you need to add some third-party script or exclude some files.... Use ESLINT or use any other technique to format your code and keep it clean. But I disagree. \n\nis totally useless\n\nSorry, sir, but, it ain't that way. ESLINT does its job. And you should keep your code clean. IMHO.\nI agree with @LinusBorg.. @ignacio68 that made it! Thanks. ",
    "SmashedBird": "@gangsthub ESLINT is totally useless; WAY TOO NITPEAKY. I spend my time adding spaces, making sure my lines are less than 100 characters long.... Removing it all together is the best thing to do. . ",
    "LinusBorg": "If you want it to be less nitpicky, create your own, smaller set of rules.\nWriting code that doesnT follow a clear style is counterproductive in teams, it increases the cognitive load necessary to navigate other people's code.\nIf you work alone, that's not a big deal, but it's not good general advice. No, not to my knowledge (I'm the main maintainer atm).\nA bit more detail would be helpful. Could you open a fresh issue? . @vaske The comment by @chrisbraddock covers writing SCSS in .vue files. \nIf you ask about where toput actual .scss files and how to inlcude those in the app, outside of .vue files, the answers top those two questions are:\n anywhere you want, I would suggest a subfolder in /src\n import './src/scss/your-sass-file.scss' anywhere in main.js will do the job.. This will be resolved with vue-cli v3, please follow the kick-off discussion here: https://github.com/vuejs/vue-cli/issues/589. You added a bunch of major version bumps, which means breaking changes. This should be throughly tested.\n. Hi Chris,\n1. Already fixed the typos, must found them myself around the time you wrote this. Sometimes I think i'm dyslexic or something :)\n2. Renaming it to cssSourceMap is of course possible, I simply chose the current name to match the productionSourceMap in the prod config settings. Maybe it's more obvious which does what when we leave them like this, with distinctive names?\n3. We can of course remove that last line, only added it for you anyway :-P\nWill make the changes for 1. and 3. later\n. Ok, agreed.\nSorry for not having pushed the changes yet, I messed up with a rebase on my end and have to correct it this evening after work.\n. @chrisvfritz I applied all changes as discussed.\n. publicPath != assetsPublicPath\nwithout an absolute public path, webpack fails to load split chunks when the url has changed (e.g. from using vue.router).\n. Yes, but we are not discussing assetPublicPath here. \n. when you use vue-router (or change the url history any other way), a relative publicpath (and most likely, also assetPublicPath will break your build. \nAt least I personally experienced that webpack will try to fetch chunks (from code splitting) relative to the current URL if public path is not absolute - which will fail if you are not in the root.\n. have you used code-splitting?\n. > This is still a bug \nI fail to see why a config setting's default value should be considered a bug, just because it does not fit your specific usecase.  If you need another value, change the config setting, that's what it is for.\n\nEverything builds correctly in both situations.\n\nDid you test with vue-router? Because relative asset Paths will break paths to your assets when using vue-router in history mode, which is a very popular usecase (or manipulate history API any other way): When you navigate from '/' to '/users', an asset's path will change with it, i.e. from './logo.png' will now point to  './users/logo.npg' - and the file won't exist at that path, of course.\n. When you build for production, it even tells you that the result is not intended to be used from file://.\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/build.js#L14\nIt's not a bug. It's a default value that you have to change if you want to do something that the default is not intended for. \n. And, as explained at the very beginning of this issue, an absolute path is required for code splitting. That's a fact. \nIf you need a relative path for cordova, no problem . Change the setting, done. \n. The question which is the bigger standard is not as important as the question what the default purpose of the template is. \nWhich is single file web applications, potentially big ones, which need code splitting (we advertise for it in various locations of our docs).\nThis template is simply not meant for mobile applications first and foremost. (and eg for electron there are templates provided by the community that are far better suited as a starting point than this one)\nHowever,, note in the config can never be a bad idea., so I will reopen this issue for that. \nBut someone else will have to pick up as I'm on vacation for the next ten days. \n. Yeah,  guess we should change it.. We accept PRs :). That sounds good so far, but I think there's one testcase still missing:\nLazy-loading a component in a nested route. The reason that this could be a special case is that for lazy-loaded components, styles are not extracted into the seperate .css file - instead they are injected into the page's head section when the component is loaded.\nThat means that with lazy-loaded routes, you may end up with CSS in your <head> that points to a wrong bakground-image etc.\nAs I said, paths in webpack can be very tricky... :/\n\nI agree with @mixedCase that history mode is used less often than a) serving an app out of a subdirectory (i.e. building to /app/dist and serving /app) b) serving from file:// (especially Cordova)\n\n\nTo serve from a subdirectory, just change the assetsPath. We should improve the docs for this (no matter what path we take in the end -pun inteded), though, and make it easy to customize it during build with an ENV variable or something.\nI don't agree with the sentiment that history mode is used more often. I get nearly zeroi questions about cordova on SO and our forums, and some about subdirectories, but many more about history mode. Also, this template is not built with cordova, electron or any other wrapping technology in mind. It's built for websites first and foremost, and I don't think it would be a good idea to turn it into a \"one size fits all\" mutant-beast.\n\nThat is not to say that we can't switch to relative paths at all - we still have to do some tests.\nBut if relative paths have problems with lazy-loaded routes and other edge cases, I would rather vote for staying with defaults that work best for a typical webapp, rather than something like cordova, which is not a focus of this template.. Please don't highjack issues to ask support questions. I saw you already asked on the forum.. I will close this because it's been too long and the template went through a multitude of changes. If such a problem persists, please open a new issue. Closing for inactivity.\n. That doesn't help. Open a new issue and provide details on your setup and steps you took. . See my previous reply, right above yours.. I will close this, eslint-plugin-vue is practically around the corner.. the default branch now uses Vue 2.0, so we can close this I think :)\n. I just added a couple ofg things to the 2.0 branch, and it works fine.\nBut we still should add a prompt/warning that this template now uses 2.0 by default - that is still missing.\n. closing for inactivity.\n. @mightlylal is this still current? What version of node & npm do you use?\n. ...and this is still happening on a fresh install with the latest vue-cli? Which OS?\n. seems to be something different in your case - different error message.\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/build.js#L23\nthis command does not seem to work on windows.\n. ...but this template does have a babelrc file... \n. fixed\n. fixed\n. import the config module just like in the webpack files, and read the port from it.\n. Yeah we should probably do that.\n. added PR #255 / #257\n. Merged \n. Idea: Maybe we should even add it as an option to the install process: \nWhich build of Vue should be used?\n[] runtime-only: smaller filesize, not templates in HTML files (templates in .vue files work fine)\n[] standalone: slightly bigger filesize, but templates from HTML files can be parsed.\n. added PR #256 \n. Exactly\n. Use -s to supress the npm errors. These will always show when the called script (eslint or whatever) exits with a code that is not 0\nnpm run lint -s\n. As described, it uses the port from the config file, not from ENV\n. This is a nice idea, but was not what I understood as the requested functionality from your issue #241 .\nCan you open a new issue for this? As the e2e tests use the dev server as well, we will have to change server.js to support both at the same time with different ports. \n. No, this still exists in the 2.0 branch (which is identical to the 1.0 branch except for changes nessessary to make it work with 2.0, which are very few).\nThe point is, it has to be added to the changes in nightwatch.conf.js of this PR as well. Can do that right now I guess.\n. Done\n. Yep\n. this is a webpack problem, googling this error message brought many results, the usual solution is appearantly to add this to the webpack conf:\nnode: {\n  fs: \"empty\"\n}\n(See here, for example: https://github.com/pugjs/pug-loader/issues/8#issuecomment-55568520)\n..which was already suggested in the previous issue #91. Did you actually try that?\n. That might be the problem as it can't work... \nClosing this as a \"solution\" was identified ;)\n. Well, you replaced fs with an empty module, so any fs methods will not work.\nYou cannot use fs in the browser, there is no solution to this, it's techincally impossible.. Well I don't really know what a CEP VM is, it's definitely not the usecase this template was built for. \nAnd generally this is a webpack problem, Vue won't solve that. . Hi @bluedarker,\nthanks for this PR. This looks very interesting but at the same time, makes the template config even more complex.\nWe will have to discuss weither this is something we want.\nPS: it would help if you added the two things (mutli-HTML vs. SVG-sprite) in two seperate PRs)\n. where do you keep those images before build?\nThe problem likely is: this \n- For non-bound src attributes Webpack (or more specifically: html-loader) can read those src paths and copies the files from the specified path to the assets directory in the build folder.\n- For dynamic, bound paths, webpack can't do that, of course. \nSo you will have to put those images into /<your project root folder>/static/ instead of placing them somewhere in /src/assets., because /static will be copied into /dist/ as-is.\n. Honestly I wasn't sure weither to add the two PRs of mine into dist, so I targeted 1.0 instead. \nOnce we switch to the 2.0-version as the default template, (which should be right around the corner, right?) we could merge 2.0 into dist and I think we can leave 1.0 as it is.\n. ...which would mean that old vue-cli versions will throw an error, or won't find the template anymore, right?\n. Well you linked to the source yourself above... \n. Oh.. Wait. If no dist it returns the template without a branch tag, which should download the defAult branch? \nThen we should be fine. \n. closing for inactivity.\n. This shouldn't be too hard:\n1) add a file-loader for video file extensions to this array\njs\n{\n  test: /\\.mp4$/,\n  loader: 'file',\n},\n2) to have html-loader replace src paths on <source> and <video> elements (by default it only does that for <img>), we have to add this as a config for the vue loaders here:\njs\nvue: {\n    // the template auto-generates the css loaders. \n    // since we want to change the default loader for HTML,\n    // we have to add it to that object.\n    loaders: utils.cssLoaders().html = 'html?attrs[]=img:src&attrs[]=video:src&attrs[]=source:src',\n    postcss: [\n      require('autoprefixer')({\n        browsers: ['last 2 versions']\n      })\n    ]\n}\n@rodzzlessa24  give it a try and let us now how it works.\n. Yeah, my code was a bit thrown together from the top of my head, but the assignment inside of an object definition was not a bright moment.\nYou have to do something that looks more like this I think:\n``` js\n// all of those requires for the webpack configs \n// at the top of the file are here. Insert this right after:\nvar vue-loaders = utils.cssLoaders().html = 'html?attrs[]=img:src&attrs[]=video:src&attrs[]=source:src'\nmodule.export = {\n  // other weboack configs\n  vue: {\n    loaders: vue-loaders,\n    postcss: [\n      require('autoprefixer')({\n        browsers: ['last 2 versions']\n      })\n    ]\n  }\n}\n```\n. That's a strange error. Can I see the component? Are you linking to a scss file in the template or something?\ncan you console.log the \"vue-loader\" variable?\n. What the hell, I realized my one-liner was crap, but why is that last thing not working?\n. I fixed this myself because I got this reported from someone else. as well.\nTherefore closing this.\n. what node and npm version are you using?\nvue-style-loader is a devDependency of vue-loader, so this should be fine normally, and in fact works fine for me.\nIf you still use npm < 3.0, you might have this problem though. As explained in the README, this template is meant to be used with Node  >=4 and NPM >=3 and is not tested with versions below that.\n. Please use the forum for usage questions and support, not old, closed bug issues.\nforum.vuejs.org. Thanks @vuchl :)\n. Please don't take this too seriously, but I  just came across this tweet a day ago:\nhttps://twitter.com/slicknet/status/782274190451671040\n. @chrisvfritz After thinking about this again: \nI don't know. I get the basic point that subdirectories make any 'target' directory possible, but:\n1. (-) Copying them to root by default seems a bit strange, since all other content besides index.html is in some subdirectory. So I would feel that most people would want to put static file into a subdirectory as well. \n2. (+) True, you can do that with a subdirectory in /static/, but:\n3. (-) But if people want to do that in most cases anyway, having them create a subfolder each time seems unnessessary work.\n4. (+) So a config option with a default value of /static/ would cover the default usecase (have static assets somewhere else, but not in root) and enable people to change this location if they want to.\n. Good points ... \n. This is a problem with your connection to github.\n. If you have a limited number of assets that you later want to dynamically require, you will have to use webpack's require.context feature to make that possible.\n. We were considering switching the default export to the standalone build shortly before the 2.0 release, and to prepare for either situation, we added aliases for both.\nthe runtime-only one can be removed now, that's correct. I will push the change soon, have some  other fixes/tweaks in the works to go with that.\n. this was solved with #314 \n. > just tried a blank out of the box project and run: npm run dev \n\nthere is a problem with .vue files\n\nThe issue that you commented on is not about problems with npm run dev, it's about the production build.\nIf you have a problem with the dev process, please open a separate issue. and add more information than \"there is a problem with .vue files\".\n. I just generated a new project, ran npm run build and started http-server in /dist/\nDefault page shows without any problems.\n\n. I will close this now. If you can provide a reproduction, we can re-open.\n. @chrisvfritz We should update the hint on the \"installation\" page of the guide accordingly.\n. Damn, sorry. \nMy fork must have gotten messed up when I tried to merge to upstream after 2.0 got merged into master\nWill have to re-do this tomorrow.\n. Seems I was missing some recenrt commits from the github repo?\nEdit: Perfect end to this shitty day: seems I messed up my local master branch somehow ...\n. No. We only want to add that alias to the webpack config if the user wants to use the runtime-only build. \nThe question could be changed into a \"yes/no\" question, but it is required one way or the other.\nI think it is working just fine this way. \n. The runtime build is the default export of the vue package, so you simply do import Vue from 'vue'.\nIf you select the standalone build, we add the alias to the webpack config for you, so import Vue from 'vue' now gives you standalone instead of runtime-only.\nDoes that help?\n. @chrisvfritz  It's ready \n. HtmlWebpackPlugin does that: \nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.prod.conf.js#L45-L60\n(Don't let the template strings ({{#...}}) from the template install options don't confuse you).\n. Also can't reproduce this, I have components in various folders and HMR works correctly.\n. Please provide at least the full index.html (preferably as it looks in the /dist folder when you ran npm run build) and main.js\nHowever, I assume properly registering the plugin with  Vue.use(...) will not work this way, because vue-loader also loads vue as a module to do it's job, and so you end up with two versions of Vue in the process.\nIf you use a build system, including the main lib that your app is relying on via CDN is probably a very bad idea generally.\n. I'm pretty sure my reasoning is correct. The same thing happens when someone decides to do:\nimport Vue from 'vue/dist/vue' \nbecause he wants to load the standalone build (why is this  bad idea (read the warning at the end) ?) \nFurther explanation: Vue-loader needs to import vue as well, to use the template compiler for turning templates into render functions. \nIt will assume that Vue is imported like this: import Vue from 'vue', and you, therefore, end up with 2 versions of Vue in the bundled result.\nIn your case, you end up  one version of Vue in the global namespace (from CDN), and one required by vue-loader. The router is added to the first one (used in main.js) while all your .vue components are referring to the second one (bundled with webpack).\nSo: Don't include Vue (and possibly neither the router) via CDN if you want to use vue-loader, I don't think that will work reliably.\n. Also, as a (very important) sidenote: this effect only happens in dev mode, where vue-loader requires 'vue' to be used in HMR:\nhttps://github.com/vuejs/vue-loader/blob/master/lib/loader.js#L220\na production build or a dev build with HMR disabled would be fine. But who wants to develop without HMR? :D\nA possible solution would be to define vue as an external in the production config for webpack.\nSo in development, you import vue from node_modules via webpack, but when building for production, webpack assumes import Vue from 'vue' points to an external global and inserts it accordingly. \n. Looks fine.\nAdditionally (but not nessessarily in this PR), we could replace the render function in main.js with a template?\n. babel-runtime does not have to be defined as a devDependency. \nThis template works as it should for me, without it. \nPlease provide the following information:\n1. node version\n2. npm version\n3. Operating System\n4. Is there a .babelrc file in your project's root directory, and does it look like this:\njs\n{\n  \"presets\": [\"es2015\", \"stage-2\"],\n  \"plugins\": [\"transform-runtime\"], // this is why you don't need babel-runtime\n  \"comments\": false\n}\n. You run on npm 1.4 ? Current version is 3.8.*\nthat might probably be the problem. you should be using version 3.\nAs explained in the readme, this template is not tested with npm <3\n. I closed this as it is not a problem of this template.\nWe can't cater towards any problem that (highly) outdated tools may have with this setup.\n. LGTM\n. Hello ..\nThank your for your suggestion. Honestly, I think SSR is not within the scope of this template. It only makes sense when also adding the server, which would inflate the boilerplate significantly and at the same time, it won't help many people much as they would rather use koa/hapi/sails/feathers/adonis (... we could go on here...) than naked express.\nMaybe we create a separate template sometime, but probably won't add it to this one.\nAbout getting help: We encourage you to ask your questions on the forum  , Stack Overflow or on gitter and are happy to help you out there. Github issues are not the right place for support.\n. > but It will not work in some OS\nplease be more specific. an absolute path should work with every browser and HTTP server.\nIf you mean it doesn't work if you open the file locally - that's expected and mentioned in the console output during the build process.. > However, say, your production is served under a sub-directory of your domain\n...then you change the assetsPath to that sub-directory.\nThat's how webpack works, it has hardly anything to do with this template.. The problem with relative paths is that they don't work well with code-splitting and the router. . Hm, in that case i might have to re-test this. In my experience, .lazy-loading a Route component from a route like /users  (instead of /) will fail, because webpack will try to load the file from /users/static/js/.... instead of /static/js/.... @shah-newaz dropbox and similar synced folders are a problem as well. . Please use our forum or ask in the epo for vue.formular. \nWe can't provide support for individual plugins in this repository.. Sorry, this PR is to outdated. Will close this for now. Also want to clean up dependencies soon.. I guess what Evan means is that there is no real usecase for npm install --production when using it with frontend project like project like this one:\n- If you clone this repo, you chances are you want all dependencies because you intend to work on this project.\n- If you install this project as a depenency from e.g. NPM registry, npm will only install dependencies anyway. And since all the code is bundled, the best thing would be none of the (dev)dependencies would be installed.\nSo the smartest thing would be to leave everything in devDependencies, so that it's not installed in the latter case.\n. I'll re-open this for discussion for now. Still not convinced.\nWouldn't it be preferable to add the tested, build bundle files to the repo and simply pull from there instead of risking build failures on the production server?\n. Oh, that's my mistake, seems i didn't test this thoroughly enough in a recent commit. \nI'll fix it later.\nThanks!\n. it's fixed some time already, forgot to close.. It isn't. it's using ^2.0.1, which basically means \"the latest version that matches 2.0.*, but at least 2.0.1\". So new installations of this template would, right now, install 2.0.5.\nYou may want to familiarize yourself with semantic versioning and semver with npm\nHint: If you want to update an existing project folder that used this template, simply run npm install vue --save again.\n. well, the config you showed is only for vue-loader, which only takes care of .vue files.\nYou will have to add the same kind of config to the module: { loaders: config for /\\.css$/ files.\nSee postcss-loader docs: https://github.com/postcss/postcss-loader\nPlease ask in our forum.vuejs.org for further support - github issues are for bug & feature requests.. Well, since the error explicitly states that the port is already used, there's not much we can do. I can certainly not reproduce this. . > According to this post, the HTML will still be minified by the loader even if you turn off the minify option.\nI don't think that's what the README says. minification would only be activated if we had an HTML loader specified, which we don't. The index.html is interpreted through the default EJS loader, in which case there's no minification, according to the readme.\nThe issue should be something else.. > What is the reason for this decision?\nWe like it this way.\n\nCreate-react-app puts the *.test.js files next to the src files in the src/ folder.\n\nsome prefer it this way, no problem.\n\nLooking at the boilerplate the only thing holding this back is test/unit/index.js which includes all /src files for code coverage. Is adding an exclude to *.spec.js enough to include my tests in the /src folder?\n\n... it would apper so, yes. Have you had any problems with this?. Seems useful! Is the improvement noticable?\nI found other issues like this one that actually saw slowdowns: https://github.com/webpack/webpack/issues/979. Alright, I will test this on a project and will report back here.. This template is not meant to be tightly integrated into a Laravel project. For a tight integration, there's e.g. laravel-elixir-vue-2.\nIf you simply want to have it in a subfolder, just put it there, I'm not sure what guide is nessessary for this.\nIf you want to use the laravel app as the API server, make sure to proxy requests to it from the devServer.. check out /config/index.js, please. ou can change the publicPath there easily.. > eslint-config-standard@6.2.1 requires a peer of eslint-plugin-promise@>=3.3.0 but none was installed.\n\nin package.json, the version of eslint-plugin-promise is set to ^2.0\n\nThen we should adjust the dependencies in package.json and test weither that breaks anything.\n\nIs it necessary or possible to set the version of such dependencies to latest?\n\nThis might work in this specific case, but generally this is a very shaky subject, can make builds ver unreliable.\n. Well, feel free to remove the line if that does not suit your usecase. It's a template, you should adjust it to your needs.\nWe feel that opening the window is a nice helper for most scenarios, so I don't see a reason to remove this.\n. That behaviour is customizable since Nov 12, 2017 in /config/index.js. I don't understand whan the problem is, exactly. Can you explain please?\n. Wouldn't this setting solve this?\nhttps://github.com/vuejs-templates/webpack/blob/master/template/config/index.js#L10\nJust change it to either '' (relative path), or '/repo1/'\nBe caureful with relative paths, they stop working if you have nested pages.\n. Do you have the same problems when you try using it outside of vagrant?\nSeems it's related to vagrant - a guide to reproduce this would be helpful.. closing for inactivity.. You seem to have mixed a lot of other changes into this PR, like an update to webpack 2 etc. \nWe can't merge this in this state.. it's all good. If you still can reproduce the original fix, even as a new PR, I'm, happy to merge it.. this does seem to be entirely webpack-related and not so much about this specific template.\nAlso, we have a dedicated place for support questions (as opposed to bug reports): our forum at fourm.vuejs.org.. For future visitors: The \"WatchOptions\" config is now reachable in the template's config/index.js in the form of the pollproperty. Setting that to true will switch polling on in the dev-server's watchOptions. \nhttps://github.com/vuejs-templates/webpack/blob/develop/template/config/index.js#L21. Sorry, we won't update to webpack to yet.. > Some projects don't require dealing with CSS. It could become optional, as tests are.\nWhjat kind of sohisticated website/SPA does not have to deal with CSS?\n\nSimilarly, some projects only need Unit Tests and not e2e tests. Again could be optional.\n\nThat is already the case.\n\nDev code could be separated from build to a new dev folder (webpack.dev.config.js, dev-server.js, dev-client.js, index.html). And the same folder could be used to store project specific dev related code.\n\nMight be useful: Please Make a suggestion how exactly that should look, and define an easy to follow rule to help users decide what goes where.\n\nAdding more options would make it easier to start other projects than SPA.\n\nThe template is already quite large and complicated for the options it supports right now. I think it would be better to create new templates for totally different purposes (electron, multipage). Closing for inactivity.. Thanks! :) Will take this for a testride tomorrow, then probably merge it.. I will close this assuming @CodinCat's suggestion resovles this. Please open another issue if you still have probelms.. Hello\nHowever, your issue is a usage/support question, and the issue tracker is reserved exclusively for bug reports and feature requests (as outlined in our Contributing Guide).\nWe encourage you to ask it on the forum  , Stack Overflow or on gitter and are happy to help you out there.. This was already updated somewhere else meanwhile. Sorry to have to close this.. Hello @erguotou520 \nThank your for your interest in this project.\nHowever, your issue is a usage/support question, and the issue tracker is reserved exclusively for bug reports and feature requests (as outlined in our Contributing Guide).\nWe encourage you to ask it on the forum  , Stack Overflow or on gitter and are happy to help you out there.. Thanks, just push the changes to your branch then I can merge them.. Hey @neiled \nsomeone else was faster than you (), so you can #399 save those adjustments and I close this PR, ok?. How did that lead to any errors for you? I have never had these errors .... @jiakeqi what npm version are you useing? I don't have such errors with npm >=3. Hello @znck\nThank your for your interest in this project.\nHowever, your issue is a usage/support question, and the issue tracker is reserved exclusively for bug reports and feature requests (as outlined in our Contributing Guide).\nWe encourage you to ask it on the forum  , Stack Overflow or on gitter and are happy to help you out there.. We are thinking about /working on it. Closing this since this contains no further input.. @vance any update on this?. you have to tell vue-html loader to parse these attributes.\nHow to do this is explained here, and you have to insert those options in your wenpack files after this line:\nNot tested but should look something like this:\n```javascript\nvue: {\n  html: {\n    query: {attrs: \"img:src img:srcset\"}\n  }\n  loaders: //....\n}\n``. It seems thatsrcset` specifically is not currently supported by HTML-loader. There was an attempt to add this as a feature, but it was reverted: webpack/html-loader#79\nSo I guess you have to do this manually, by importing the impages in the Javascript and using a templatze literal:\n```javascript\nvar photos = {\n  1: require('./assets/photo.jpg'), \n  2: require('./assets/photo@2.jpg')\n}\nexport default {\n  // ...component stuff\n  computed: {\n    photos() { return photos }\n  }\n}\nhtml\n\n```\nIf your webpack config has a limit for the url-loader and you want to prevent inline data-urls, you may have to overwrite the loader:\njavascript\nrequire('!!url-loader?limit=0!./assets/photo.jpg')\n. @benjamincrozat is this still an issue? I know that for me, that nightwatch / selenium has problems with timeouts every once in a while, but nothing I could pin to this template.. Okay, will close this then. . I think instead of manually patching the generated HTML, we should update the docs by generating new files with the latest changes.\n/ping @chrisvfritz . Yeah our team has to do that.. removing double quotes is fine, but why add quotes to keys that don't need any? which eslint rule/preset does require this?. Thanks!. @posva @blake-newman What's the status on this?. @blake-newman @posva I think Blake's approach would be nice - but would take some time, right?\nCould we add the babel-plugin for instanbul for now with this PR, and work on the 'babel-vue-script-parser' idea after that?. (Sidenote: use 3 backticks oto format blocks of code. I edited your comment accordingly.). LGTM. Hello @DomenicRoti \nThank your for your interest in this project.\nHowever, your issue is a usage/support question, and the issue tracker is reserved exclusively for bug reports and feature requests (as outlined in our Contributing Guide).\nWe encourage you to ask it on the forum  , Stack Overflow or on gitter and are happy to help you out there.. The /dist folder contains the built content that will be deployed. This is practically \"default\" behaviour for frondend builds in the industry right now.\nHave you read the docs? https://vuejs-templates.github.io/webpack/\nI don't see any issue with that. Do you have a specific problem with it?\n. I would rather change this line:\njavascript\n// from:\n  assetsRoot: path.resolve(__dirname, '../dist'),\n// to:\n  assetsRoot: path.resolve(__dirname, '../docs'),\nand then use this option for github pages:\n\nOtherwise, all your source code etc will be accessible through github pages as well, which you don't really want, I guess.. closing because it's deprecated, webpack has this as a real plugin now.. I assume you use vue-router? Anyway, you provide too little information.\n. Well, some code would be helpful. Also, you should see error messages in your Terminal if the devserver can't serve what you request.\nOr maybe you are just using the router in history mode and tr to access an url by hand through the adress bar? What exact steps did you take that lead to this error?\nI just tested this with a fresh project and had no problems:\n. @Vasiliy-Bondarenko \nAh, just remembered something: The devServer uses connect-history-api-fallback to serve index.html for any route.\nThis package doesn't like dots in paths:\n\nSpecifically, it will change the requested location to the index you specify (default being /index.html) whenever there is a request which fulfills the following criteria:\n\nThe request is a GET request\nwhich accepts text/html,\nis not a direct file request, i.e. the requested path does not contain a . (DOT) character and\ndoes not match a pattern provided in options.rewrites (see options below)\n\n\nThere's an Option to disable it:\nhttps://github.com/bripkens/connect-history-api-fallback#disabledotrule\nApply it here:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/dev-server.js#L49\n... but I wonder weither that could lead to problems with static assets (images etc) that have dots in their path.. Hello @laahs,\nThank your for your interest in this project.\nHowever, your issue is a usage/support question, and the issue tracker is reserved exclusively for bug reports and feature requests (as outlined in our Contributing Guide).\nSince this question does not seem to be answerable with a \"one-liner\" here, we encourage you to ask it on the forum  , Stack Overflow or on gitter and are happy to help you out there.. 1. Update your dependencies in package.json to these values:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/package.json#L16\nand\nhttps://github.com/vuejs-templates/webpack/blob/master/template/package.json#L85-L87\n\n\ndelete /node_modules\n\n\nnpm install. > rewriting @import './index.less'; again?\n\n\nThat's what you have to do, yep.. Nothing. This is a closed issue, the question was answered. \nYou may want to look at this, though: \nhttps://github.com/shakacode/sass-resources-loader/blob/master/README.md. Then why the screaming? :D. Thanks!. I think stage-2 is far enough from the current standard for a default template. Whoever decides to go beyond that should do so on their own, IMHO. > Can I just npm run build and copy over the dist folder or something?\nExactly. all you have to upload is the /dist folder. \nNow, I don'T know the config panel of Heroku, so I don't know weither you can reference a folder within a repo.\nIf that is possible, I would remove /dist from the .gitignore file, build the release, push the changes to github and reference /dist from Heroku.\n . If you want to build on the production server, you should run the tests on it as well, so you have to install everything anyway. \nIf you just want to deploy the already built files, you don't have to install anything, the built bundle includes all runtime dependencies. . Well, that starts a development server, which is meant to be used during development only, as the name, indicates. I assume that you want to use heroku for a production or staging deployment, in which you would never run a development server - you will want to serve the previously built application from the /dist folder. \nThis is a common pattern for webpack based apps, and not specific to Vue. . Well, you can build in your CI environment and deploy from there, it doesn't have to be checked into git.. I don't think it's  good idea to not have eslint run when you build for production.\nYes, you can run it independently with npm run lint - but currently, building is not coupled to that. If we move the webpack linting config from base to dev, this would make it possible to build production code with linting errors. Not a possibility I would want for this template.. I like this.. Because I haven't come around to test this locally. And since there are no automated tests for this, I won't merge before I (or someone else) have done that. . Feel free to remove these lines if you don't like this:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/dev-server.js#L74-L76\nPersonally, I like that starting the dev server brings me to the website immediately. Yeah, this looks great. Thanks!. Seems resolved to me.. We use HTMLWebpackPlugin to inject this into index.html, and as far as I know, this Plugin can't do what you ask.\nSo you can\n\nrequest this as a feature for this plugin, or:\nMake the changes manually. Yep. . As a word of warning about @myst729'S idea: Without hashes in the filenames, cache-busting won't work. Wrong repository.. closing for inactivity.. Watching is The job of webpack-dev-middleware. \n\nYou can see the poll option in the example config here: \nhttps://github.com/webpack/webpack-dev-middleware/blob/master/README.md. @necevil does that answer your question?. wrong repo. already reported in the vue-loader repo.\nanyway, you should HTML-escape those chars properly with &lt and &gt. Those two plugins serve different purposes, as I understand it. We should definitely keep CommonsChunkPlugin in the production build, but the DLLPlugin can be useful in the dev build, I agree.\nHowever I also share your hesitation about the beginner-friendliness. In particular, I think that users who work on apps large enough to profit from this setup will have to be proficient with webpack anyway. and can easily add it, whereas users who use the template for prototyping or playing around may feel that this makes it more complicated than it already is.\nIf you have an idea how to incoprorate the DLLPlugin into the development experience while making it easy for users to deal with it, i'm all ears. :). > Now when you open the index.html\nBy that you mean that you opened with directly in your browser without any HTTP server, right?\nIn that case, the behaviour is expected, and can't bve changed by this template. \nWhen opening HTML files from the file system, the browser requires relative paths to read included files like scripts and images propertly. publicPath: '/' sets results in absolute paths, though.\nThis is the default because\n\nThis template is not meant to be used directly from the file system, but server over HTTP (it even  tells you about it in the console during build).\nabsolute paths are nessessary for code splitting and async components to work properly, especially when vue-router is involved.. This probably means that babel has not converted your code to ES5.\n\nDo you have a .babelrc file in the project root? This one:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/.babelrc\nIf this file is missing, that's probably because vue-cli did not have the permissions required to create it.. @learntoswim Your problem results from the fact that babel-loader is configured to transpile js files in /srconly, and you seem to have your mock files outside of that folder.\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.base.conf.js#L66-L68\nJust adjust the config to include the mocks folder and you are fine.. Closing because of inactivity of OP. @siempa So I ask you as well:\n\nDo you have a .babelrc file in the project root? This one:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/.babelrc\n\nAnd also; is the file with the error in the /src folder or outside of it?. Hm. Honestly, I have no further ideas. All I can say is that it seems that Windows 10 often play the role of a troublemaker in a lot of cases :(. > As you can see the alias for vue$ should now be set to vue.common.\nIt is:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.base.conf.js#L27\nNot sure what else can be done?. I would assume that you worked on an older project that was created before we updated the template?. It seems you are using a service worker? \nThat's not part of this template, so in don't see how this repository has anything to do with it. . @davidmoshal I still have no idea where this service worker is coming from. Have you found out more? . Ah that would make sense :). I'm sorry but this repository has nothing to do with angular or OneSignal, so i have no idea why you are asking here.\nThe only tipp I can give you is to check your chrome devtools under the \"Application\" tab when on localhost, and kill all service workers that may still be running.. Hi @faisalhakim47 \nThatnks for the PR, but I will close this in favor of #457, which includes this change amongst others necessary for webpack 2.2. closing in favor of #454 . you have to actually import the image in JS. then webpack knows about it as a depenency and can manage the path.\njavascript\nimport Image from './assets/image.jpg'\n// `Image` will not be a string, pointing to  '/static/img/img.1e7c8df.jpg'. Well, that's how webpack works for dynamic assets. You still have options, though.\n\nuse the /static folder as explained here.\nUse a dynamic require to make webpack require all images in one call, as explained here\n\nI won't go into much detail (for that we have forum.vuejs.org).. Please use the forum, as I mentioned in my last reply. \nThis is a closed isssue. . can't reproduce this.. Looking back at this, it's obvious: during unit tests, no dev-server is running, so there's nothing to do the proxy-ing. You will have to either mock the requests or change the paths with some environment variable during unit tests.. It's under consideration (#436). Not at all. :). https://webpack.github.io/docs/usage-with-bower.html. Not tested, but wouldn't it be enough to add this to the middleware?\n```javascript\n// devServer.js\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\n  headers: { \"Access-Control-Allow-Origin\": \"*\" } \n  // ... other options.\n})\n```. Can we take a step back and re-evaluate the problem so I'm sure I don't miss something? I'm not sure that I understand your problem anymore. CORS is something that drives me nuts everytime I have to deal with it.\nSo: Where is the CORS requirement coming from? You wrote..\n\n.. except that it's not always so simple when facing Access-Control header restrictions, which often requires the API/Data/Backend server to configure CORS.\n\nI'm not sure what your actual problem is here. Does your backend API send a CORS header with its response that does not include localhost:8080? Or what exactly is causing the problem?\nShouldn't the Backend then simply send a different CORS header in dev mode?\nOn the client your typically don't have to do much for CORS to work, do you? . Since this issu eis quite old, and we will switch to webpack-dev-server in the coming days, I wil close this. If this still needs further discussion, please open a new issue with a reference to this one and we will see how to resolve this in the new envorinment with webpack-dev-server, if necessary.. 1. Test runs from us \n2. Taking the chance and generallt. Improving the webpack config's structure. . is this Windows 10?. Is your port 8080 already in use, perhaps?. Please try moving the project out of the dropbox folder. \nWebpack watch mode / hot reloading often has issues with it. . Agreeing with Toilal, adjust the include paths for babel-loader to transpile the E6 code from the node_modules subdirectory in question.. > I basically want my 'dist' folder to have a server.js file that I can run to serve my SPA.\n\n[...] My first thought would be to have a separate project that I could just drop the dist code into, but this seems a bit tedious. \n\n\nIf it's  an app that runs completely in the browser, then you don't need a server in your dist folder - just use static hosting like surge.sh\nIf it uses some kind of backend server (for a database and stuff), then yes, it's better to roll this as a seperate project, because it will have its own requirements and can hardly be crammed into the frontend template.\n\n. Please limit issues in this repo to stuff that is directly related to the template.\nFeel free to ask broader questions on our forum at forum.vuejs.org \n\nhint: you might want to npm run build and then serve the app from the /dist folder.. This is probably something that has to be addressed in the vue-loader repository, not here . Hello ..\nThank your for your interest in this project.\nHowever, your issue is a usage/support question, and the issue tracker is reserved exclusively for bug reports and feature requests (as outlined in our Contributing Guide).\nWe encourage you to ask it on the forum  , Stack Overflow or on gitter and are happy to help you out there.\nAlso, when posting there, please:\n\nformat your code using markdown\nprovide information how you actually use this bootstrap-webpack loader in your project. Just show the code for this:\n\n\nI am importing 'bootstrap-webpack' in my main.js at the top of the file before anything else.... Commenting on old, closed issues has a high risk of going unnoticed. If you experience this problem, please open a new issue with a proper reproduction of the problem. . Please see discussion here: https://github.com/vuejs/vue-loader/issues/808\n\nIn will lock this issue now, since that's vue-loader related.. > When i try to use axios, the requests are sent to http://localhost:8080 and not to http://jsonplaceholder.typicode.com.\nWell, the request will of course be sent to localhost:8080, which will then send the request to http://jsonplaceholder.typicode.com - that's what proxys do.. vue-loader 10.1.2 should fix this, please upgrade.. Is .babelrc in your project's root folder?. Is this still a problem?. @jaredreich is that supposed to mean that the Babel polyfill doesnt work or that you don't have that option for some reason? \n@DevanB so including the es6-promise polyfill in main.js as explained in #260 did not work? . The Problem is that import statements always get hoisted to the very top of the file, before any other code.\nSo while the require comes first in your code, it runs after the import for Vuex has run. \nSolution: use require() for Vuex as well. . 1. The babel polyfill is really heavy, and polyfills much more than the Promise object required by vuex. I would rather use es6-promise.\n2. Vuex is not included in this template, so why should we include a polyfill that it needs? Smae goes for \"other stuff\"\n3. Not everyone develops for <IE11, many don't anymore.  I would rather have people developing for older browsers to include their polyfills themselves than forcing people developing for modern browsers to actively remove unnessessary polyfills.\n. @graingert Thanks fpr the PR. I think we should do the switch to babele-env, but I think we can improve a couple of things further:\nPolyfills\nAdd a new option to meta.json: \"Include polyfills?\" If yes, we should add import 'babel-polyfill' to main.js, which env will transform to only include what's required for the target browsers.\nDefault Targets\nMaybe we could include a default browser target definition to .babelrc so people can see that it's easy to change? maybe [\"kast 4 versions\", \"not IE <9\"] ? Just an idea, will be thankful to have someone with a better knowledge about browser support suggest something.. Thanks!. can you verify that the .babelrc file is in your project's root folder and has the correct contents?. How would that look from a usage perspective?\nI don't see the advantage from how you describe it. Currently, you can add more than one variable to the *.env.js files if you need to. Wouldn't that be enough?. So this never went on, right? I'm in the last steps of merging #975 which will bring a few new config options for the things you mentioned. \nHave a look and open a a new issue if you still think this config can be improved.. Did you change the webpack config that came with the template very much? \nEven if you did, the easiest way would probably be to simply create a new project, copy the build files over, and update\n\nwebpack\nwebpack-dev-middleware\nwebpack-hot-middlewar\nextract-text-webpack-plugin\n\nto their latest versions, then re-apply any changes you had done to the old webpack config.\nAlso, the migration guide on the webpack website is pretty extensive and very helpful:\nhttps://webpack.js.org/guides/migrating/. > but users may confuse if they create some new directories in src and some of them conflict with npm packages' name.\nValid point ...\nI have no real argument for keeping it, so would vote to remove it. Anyone else?. I think we already have an alias for src. That could also be a problem when someone uses a package named src (didn't check but I assume one exists :D).. Created  a PR #516 . What plugin does this setting belong to? . closing for inactivity.. @squirmy Oh, that's a valid concern of course. Suggestions for a better character?\nWill have to try out $ or #. Doesnt that conflict with asset paths in css-loader? . I mean, in cssl loader, ~ is a special charater to make css-loader aware that the asset path is a node_module path:\nfrom the README:\n```\nTo be compatible with existing css files (if not in CSS Module mode):\n\nurl(image.png) => require(\"./image.png\")\nurl(~module/image.png) => require(\"module/image.png\")\n```\n. I think @simplesmiler 's  suggestion is probably the best.. @squirmy Thanks! that would have thje added benefit of eslint support.  Or would the eslint plugin also work without the babel one?\n\nWill have a testrun with it!. Ok then, I think that's good enough for me, will use @ -> /src. Sorry that this is still unfinished, had a busy week. Hope to finish this in a quiet minute in the next days.. Changed to @, but not tested locally yet.. Finally came around to testing this.. ~@/assets/img.png. We should probably adjust the docs a little to reflect that, even though the included aliases where never thoroughly documented in the first place. . No, it won't. The alias woeks on paths like @/components, not @components. . We're open to suggestions. As you can see in the previous comments on this PR, we discussed a few.. 1. As you can read in the docs of webpack itself, source maps in chrome are generally wonky and nightmarish. They link this issue: https://github.com/webpack/webpack/issues/3165\n2. If something can be done to improve this general situation, it's not in this template repository\n3. I personally added #cheap-module-eval-sourcemap as a default to this template because it is a recommendation from the webpack docs and did work well for all tests that I did (around the time that I closed the issue), but that may differ for others because of 1.\n4. I closed the issue since a resolution to OPs problem was provided by two different people.\nBasically, we can try and switch the template's default to something that seems to work at the time, but mostly it's trial and error for everyone because sourcemaps suck. . Sorry, will have to close this PR. \nFor now, the absolute path will stay, because relative paths cause vArious problems with vue-router (mostly in history mode) and lazy loading. \nWe should rather introduce documentation that explains when to use absolute or relative paths and what to watch out for. . But main is already in the default value for resolve.mainFields. \nSo I don't understand your request. Can you clarify?\n. Well, browserify is not a standard field for that usage, and the next thing to a standard for this is the browser field, which is supported by webpack by default:\nhttps://github.com/defunctzombie/package-browser-field-spec\nWe can't support every strange vairation some projects may require, and this one won't make it into the template.. Hey, thanks for this! \nI think we won't merge this yet as we still are not sure what test support lib we want to add - a few different ones for vue were repressed recently, and we want to evaluate all of them before we decide. \nWill report back when we know more, ok? . Closing because we will be using github.com/vuejs/vue-test-utils once they are officially released.. This template is deprecated in favor of vue-cli 3. We will not add any new features or major updates to it.. vue-cli 3 does everthing this template does and more out of the box. \nhttps://cli.vuejs.org. Will add this to the default config.. Change this after merging #501 . done.. Wouldn't that break when we use vue-router in history mode? as soon as we navigate to some route, the relative path be wrong.... Related PR: #541 . > because the font's URL is relative to the CSS file\nOh, right. Still wanna test it to be sure, webpack can be ticky with paths and stuff :D. I'm currently setting up a test with lazy-loading routes, asking for a little more patience. thanks :). So I tested it, and it's like I thought: When using history mode for the router, CSS stops working with this change for these scenarios:\n\ndirectly visiting a subroute (refresh the browser while on a subroute) (this also breaks in dev, because the relative link to the css file in the <head> is wrong now)\nusing lazy-loaded routes (\"only\" breaks in production, because of the following:)\n\nWhen we are at /test1/subtest1, then the SubTest1 component injects its CSS into the head in a <style>tag, with tese relative paths, e.g. ../fonts - which now points to /test1/fonts - which doesn't exist.\nSo, to summarize:\n\nIf we leave absolute paths for assets, those don't work with relative publicPath in webpack if the app is served from a subdirectory.\nIf we change it to relative paths, then lazy-loaded route components with vue-router produce invalid CSS paths to assets.\n\nNeither are optimal. But if I have to choose, I would vote to stay with absolute paths (for both assets and publicPath). Why?\n\nWith absolute paths, every app can be made to work in any subdirectory with a change of the assetsPublicPAth to match the subdirectory and a rebuild.\nBut with relative paths, Someone working at an app that is working great in dev, would have to somehow switch over from relative to absolute paths as soon as he wants to use lazy-loaded routes (which is a very common usecase for any bigger app).\n\nUnless we find a way to make the second scenario much more user-friendly than it is now, I think we have to stay with absolute paths, or find a way to offer both ways as an easy to switch configuration option.. have the repo locally, will upload it to GH tonight.. Wanted to, but had trouble to reliably replictae the scenarios. Either way, relative paths seem to be brittle at best.\nWill probably upload the repo tonight anyway - I hop you can find your way around the codebase with a few pointers in the readme.. So here's the repo: https://github.com/LinusBorg/webpack-template-test-relative-paths\nEdit: renamed the repo to remove stupid typos :D. Hm, that seems odd.. No, that should work fine.. Vuex uses Promises, so those have to be polyfilled it one wants to support browsers that don't support them natively yet (read: IE <=11).. @simplesmiler Yeah we are aware of that.\n@sudo most of the stuff that tranform-runtime would might polyfill (especially Promises) is available in modern browsers, but might fail in IE11 or even safari. No, that's not what I meant. What I mean is:\nIf we remove the tranform-runtime (or deactivate the automatic polyfill feature it provides), then you, the developer, have to manually keep track of the polyfill-requiring ES6 features you use include those polyfills if you want to make your app work with out-of-date browsers.\nI think we can counter-balance that by switching the es2015 preset for babel-preset-env, especially this feature of that preset, so users can easily add the polyfills that their target browser needs. Maybe that could even be a new option in the setup process.. I'm not sure yet weither we want to remove it completely. the helpers part of the plugin is useful, leaving it ouot could clutter the transpiled modules with duplicated helper code.. @sudo-suhas \nthe ignore polyfill: false option should be fixed in babel since March, according to the issue you linked.\nBut I'm not sure the underlying issue is resolved. we switched to babel-preset-env, but still use transfrom-runtime. \nTBH I simply haven't looked into this for months and am not 100% sure what's going on under the hood right now concerning polyfills.\nDo you have any further results you can share?\n. I think we will leave this to userland for now. I don't want to further complicate loader configurations at the moment. It's on the watchlist to re-evaluate at a later time, but off the table for now imho.. I agree with @limichange.. I will close this since dev-server.js will be replaced with webpack-dev-server in the coming days (#975) - if this problem persists with the new setup, please open another issue and reference this one in it.. The first version could lead to mismatche for this alias because it would also match vue/src/...\nThe second one is better because it only matches require('vue). @xereda Which OS?. Closing for inactivity.. I will close this since this doesn't seem to be a serious or well-prepared PR, but likely a mistake?. If this is a bug related to thescoped` feature, the vuejs/vue-loader  repo is probably a better place for it.\nAlso, a reproduction besides screenshots would be helpful.. Hi there!\nI close this issue because of inactivity. If you want to follow up on this issue, please open a new one, and provide the necessary information (a working reproduction etc.) in that issue.. change the assetsPath config to ./ or /dist\nhttps://github.com/vuejs-templates/webpack/blob/master/template/config/index.js#L10. Since you closed the issue I assume the problem is solved. Great :). Hello @hanai,,\nthank you for your filing this issue.\nPlease follow the guidelines on how to report an issue. In particular, provide an example on www.jsfiddle.net (or a similar service) that reproduces the problem. If necessary, create a repository for us to clone with a minimal reproduction. repositories of actual projects will generally not be accepted.\nThank you.. thanks. That is working as expected. Since all 3 of your route components require moment.js, and its up to the visitor to decide which route to go to first, webpack has to put it into each of the async bundles.\nif you want to extract dependencies that are shared amongst your extractred asynv bundles, you have to create another instance of the commonChunks Plugin:\nI think it should look like this:\njavascript\nplugins: [\n // other plugins...,\n  new webpack.optimize.CommonsChunkPlugin({\n    name: 'commonsasync.js',\n    async; 'commonsasync',\n    min: 2,\n  })\n]\nCoincidentally, I learned about this just yesterday through this article:\nhttps://medium.com/@adamrackis/vendor-and-code-splitting-in-webpack-2-6376358f1923#.jyz1nf7v2\n...and haven't tested it. Try it out and see if that works as intended.. @hanai If that solves your problem, please consider closing this issue.. Note: index.html is also referenced here:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.dev.conf.js#L29\nand here:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.prod.conf.js#L54. the router has a base: option, check it out in the docs.. Since we switched to webpack-dev-server, this no longer applies afaics. Since this has no replies since Febuary, I will close it.. Well, you could simply point to another template for the index.html file here:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.prod.conf.js#L54. Are you runing anything else on Port 8080, by any chance?. Sorry, no idea what that error means then. :(. Closing in favor of #1021 . Honestly, I have no idea where this could be coming from.. node-sass and sass-loader have to be installed by you.. https://github.com/vuejs/vue/tree/dev/dist#explanation-of-build-files. When apps grow, the number of routes grows, with beforeEnter hooks and so on, so you might want to put thta in a separate file, or files.\nWith a subdirectory you can keep this all in one place without bloating one router.js file.. > Something about Uglify cannot parse es6?\nProbably. Can't say with this little information.. > Why this issue is closed?\nBecause the OP didn't react to my request for more information for several months, and an appearant solution was provided by someone else.\nPossible solution for your problem:  adjust include paths for babel-loader to include the library that appearantly is wirtten in ES6. since the component is in the /components directory, the path should be:\n../assets/images/background_test.jpg (notice the two dots). Well, your component is nested 2 folders deep (/components/pages), so you need ../../ to get back to /src.\nPlease read up on relative paths.. > Module not found: Error: Can't resolve '../../images/background_test.jpg'\nStill sounds like the path is incorrect - but as I don't know your project, I can't tell.. This is a variation of this technique: \nhttps://webpack.js.org/guides/code-splitting-libraries/#manifest-file\nPlease read up on it.. You can't make webpack require a resource that is only an expression (which is only evaluated at runtime) - which makes sense, because the require could end up being anything, includeing a node_modules package, and webpack shouldn't pre-load all of those possibly hundreds of megabytes of files, right?\nYou can however use a partly dynmaic require string:\nhttps://webpack.js.org/guides/dependency-management/#require-with-expression. it's added now.. It's using webpack 2, so yes.. Thanks fpr the fix - but I think we want to keep this in package.json. We have more than enough cnofig files in the template root already.\n@chrisvfritz @zigomir ?. Outdated, this lib is not part of this template anymore.. because the component is called 'app': components: { App }\n. components: is just making it aware of those components. The template defines which components to render. . Your source files and config would be more helpful... Closing for inactivity.. This was solved by another PR recently. Sorry ;/. fixes #583. Just fixed with #582 . To be perfectly honest, I suspect that we won't find time to do this anytime soon, there's a lot of other stuff to do that has a higher impact. At least I won't have the time, personally - can't speak for the rest of the guys with certainty.\nWe are open to PRs though, so the community might help out :). I don't understand your reproduction description, could you just upload a repository with the settings required for the error?. Eslint itself only supports the official standard. And The Object rest spread operator is not standard yet, but widely used, e.g. with vuex' map* helpers. . Thanks! . Sorry, merged a different PR thgat does something similar (#854). Since this doesn't seem to be well-tested I will close this and not merge the PR.. Hm, that's weird. Postcss is active for .css files since yesterday, so airport fixer should be applied. I will check this out. . We didn't properly version for the longest time, but recently started adding a version number to the top of /config/index.js. I have a suspicion, but can't verify until tonight. However I already made a PR that aims to solve this or something related.\nhttps://github.com/vuejs-templates/webpack/pull/1053/files\nYou might try to give this a spin. The PR itself is also not thoroughly tested et (it's WIP), but maybe it just works :-P. Thanks. Will apply that PR tonight hopefully.. fixed by adding postcss-loader for all .css files as well.. On second thought: Wouldn't any and all CSS be extracted into app.css anyway in production, since we use ExtractTextPugin?\n@ronjuch your thoughts? Am I missing some use case?. Geez forgot about this. Want to test it myself before merging, but makes sense!. I'm really embarassed that this hasn't been reviewed (and hopefully merged) yet, butit just slipped my mind over and over, and I want to test it out for myself before merging, not because I don't trust you, but because I want to understand what's going on, and I'm a practical learner.\nSo I will definitely try to do this within the next 10 days. Feel free to ping me if I let it slip again.. @ronjouch I just re-read the issue #598 and now I'm a bit confused - should we include .vue files in the check or not? which variant has been \"battle-tested\"?. that's a very helpful comment.\nOn a serious note I don't understand what the problems were that people were having, both @import in style blocks and require() calls in the javascript simply work. This template is preconfigured for that, and always has been.. FUC can normally only happen if you write some markup in index.html.  if you write everything in components (including App.vue), that should not happen. . This would mean that we now have a folder static/root that behaved differently than other directorys. \nI don't really like this as a feature for the template. \nThere would have to be a widespread use case to warrant this. . I'll close this for inactivity . just do npm run unit --no-single-run (or was it npm run unit -- --no-single-run ?)\nIt's a Karma option: https://karma-runner.github.io/1.0/config/configuration-file.html. Edit : redacted . tildes are not necessary for urls in templates. They are a special syntax used by css-loader.. The alias works like @/assets. And in CSS, it would be ~@/assets\nPlease ask further questions on forum.vuejs.org. Furthermore, tildes are only useful in CSS. . Makes sense! :D. @chrisvfritz eslint-plugin-vue will soon be ready, so I'm thinking about this.\nSince that plugin only comes with vue-related stuff, should we really add it as a choice like \"standard\" and \"airbnb\"? It can exist with both.\nI'm currently in favour of simply adding it whenever eslint is chosen, period.. Can you share a repo? this usually works exactly like that.. You likely set the same class somewhere else, with z-index: 1\nDuring production, all CSS is extracted in one file and minified, which also removes duplicate definitions - and in this case, the duplicate with z-index: 1 was the \"survivor\".. > For example, I set z-index:  2 in a.js, then I import it at b.js, and override z-index:  3 , it wouldn't work.\nThis is exactly what I am talking about, though. If you override global styles in a component without using the scopedfeature, the latest one will override all other versions. CSS is global by default.\nIf you still disagree, please provide a repository with a minimal reproduction for me to check out.. Ah I see, so at the root, this is an issue with css-loader / cssnano default settings.\nI think we should be able to fix this in the webpack config for css-loader.\nThanks for investigating! :). Hm, I'm currently trying to test my fix, but I can't reproduce the problematic behaviour, even if I set minimize: { zindex: true } in the css-loader's options.... Oh, I missed that, thanks for the pointer!. This is fixed in vue-loader 11.3.2. Sounds like this is solved?. Env variables in vue-cli are only used during build time (npm run dev/ npm run build), not runtime. So when you add any env variables in your server and expect them to be accessible to the JavaScript when your app runs in production, you are mistaken. . They are written before the command, not after it. Not sure what to do about that, closing.. Hi guys! \nWe are aware that keeping up is a problem with the current setup.. It that will always be the case for a \"template\". \nWe are thinking about how to best solve this with something similar to react-scripts or inferno-script s, but so far haven't found the time to really work on this. . Just as a small note: We ware actively planning a rewrite of this template that will extract the (webpack) config into a dependency, which will make updates more painless.\nSince this is being worked on, I will close this for now.. I think when work is actually going ahad to something wotrh noting, we will open a new issue.. I haven't come across this error, how did this happen for you? \nIt's by design that css is not extracted in dev mode, and in dev mode, the extract loader should also not be applied. . Well then we should investigate why that happens - simply adding this plugin even though we don't want to use it in dev mode is not an appropriate solution. \nWould you be so kind to open an issue for th8s problem so we can track it? Thanks. . Thanks. . The point is that webpack is handling the import paths in the @import 'Debug' - and it uses node's module resolution, which probably picks up Debug.vue, when really you want it to pick up Debug.scss. \nTry adding the file extension.. Works well here:\n\nSo I Would assume this is a problem with your atom plugins/config. Which pluign are you using? I use linter-eslint.\nMaybe you just haven't enabled this setting, which is necessary to make linter-eslint work with .vue files:\n\n. Please consider asking on our forum at forum.vuejs.org\nThis template usually works very well with es6 and  IE, and by default all ES6 code is transpiled to ES5, so the problem is likely something specific to your setup or usage.\nThe issue tracker is not the right place for this.. From what I found through googling this error message, this seems indeed to be connected to the Java version. . Closing this as I don't think we can do anything about this.. Also, I can't really understand how this fixed your problem. . Mabe you just need to change the watch mode of webpack-dev-middleware in dev-server.js?\nSee watchOptions -> Polling\nhttps://github.com/webpack/webpack-dev-middleware. Well, polling is not a default in webpack-dev-middleware for a reason. \nI'm rather thinking about making this an option you can activate in /config. 1. no idea why tests failed.\n2. Now I can't reproduce the original problem ... darn. not needed, Evan optimized this elsewhere. This is not enough information, I don't understand your problem. With this template, Babel should transpile classes to ES5. Your error sounds like you did this:\njavascript\nvar something = YourClass()\nWhere you should do this:\njavascript\nvar something = new YourClass(). Closing for inactivity.. Thanks! . Since we will shortly switch to Jest (#817), this is soon obsolete.. Thanks for this suggestion.\nHowever, we currently don't want to make the template heavier by adding more questions in the initial setup. Also, Service Workers would rather be a topic for a special \"PWA\" template.\nWe will overhaul this template soon anyway, hopefully in the coming weeks, so I will close this request for now. This feature should be added in another template.. Hi @maoberlehner,\nThanks for contributing. However I don't think that we should add PWA support to this template - primarily because vue-cli 3 will come with (opt-in) support for it anyway. \nSo my general strategy for this template would be to not add any more bigger features, especially when they are covered by the new cli. \nI will make an exception for typescript support mainly because I wanted to merge the OR for this for about half a year and didn't get around to it... . Personally, I see provideplugin as a solution for some scenarios, but it can be abused quite easily. Injecting global variables is not a good idea most of the time, so I do t think that out template should actively encourage it but adding it as a \"feature\". Closing for inactivity.. > Well, semantic-ui kind of needs it real bad.\nWhy, exactly? \nI can understand that you want to use it because it saves you from typing import $ from 'jquery', but I know of no reason why it is needed. Others might say that this saves typing but creates code that relies on \"fake\" globals that aren't really globals, so it depends on webpack to work, which is why it should be avoided.\nA correction of my expressed view notwithstanding, your personal preferences are not a good enough reason to add another configuration layer to this template that people have to understand before deciding wether or not they want to use it.\nAlso, this plugin is 'really* easy to configure, so adding a convoluted config feature around it doesn't seem worth it.. This setting was added because webpack2 can handle ES modules itself - Babel doesn't have to transpile them. \nSo this won't affect browsers in any way. . Inject-loader can't work with ES modules,, which we probably want to use in our tests to mock dependencies - so for tests, we have to let babel convert to commonjs.\nOtherwise, modules: false can be used always, yes.. Thanks! . Hi @goncy, \nthanks for this suggestion.\nHowever, I think this is a niche functionality for deploys like Github pages, and would only add another config options for all users of the template that they rarely need, but have to understand/learn to know what it does.\nSo I don't think that we should add this to the template.. @chrisvfritz I think this makes sense, doesn't it?. Given Chris' explanation I will close this PR in favor of adding eslint-plugin-vue as soon as v3.0.0 is officially out.. \n\nillegal operation on a directory, open \n\nPlease move the project out of dropbox and try again. \nOr it may ha e something to do with folder permissions. . Closing for inacivity. This doesn't seem to be related to this template.. Thanks :). Fixed, thanks for the PR. Ok I think we can merge this, looked fine in my test as well.. Will merge later when I have a chance to redeploy docs as well. . Thanks!. You still haven't given any explanation as to why your approach here is better than simply using pug-loader.\nWithout such an explanation I don't see  reason to consider this feature, sorry.. Oh, thanks!\nWell, this looks much better.\nI'm still a bit unsure weither we even want to give this choice in the initial setup, as commented here:\n\nHowever, I think we generally don't want to add special support for any template engine or pre processor.\n\n/ping @vuejs-templates/collaborators WDYT?. As I already answered somewhere else, you will have to use Object.assign() to combine the results of Vuex.mapState() with the normal computed property functions.. Thanks.. Thanks!. Can you specify what exactly you mean with \"the configurations\":\n\na simple and usual JS object for the configurations \n\nIt seems you are talking about environment variables(?), but that's not really clear to me.\n. ...and what does your propose change would look like? I don't really see how we would get around the need for quoting strings twice - or do you suggest to turn .env.js files into JSON files?\nIf so, that's not a good idea, as it would be very limiting.. Sure!. I'm, working on improving config with #1178. Will close the issue since further discussion can happen on the PR. e2e tests need to know the port on which the devserver is running. This change would make the port \"random\", possibly making e2e tests fail.. No idea how to reproduce this, sorry. Is this still an issue for you?. That's weird, but seems to be a windows&node/npm problem at its core.... Not sure what we can do about this :(. How big is your app? this process usually  works quite fast.\nOnce your app hits a certain size, things can get slow. There are quite some things one can do to improve slow dev builds:\n\nHappypack\nwebpack's DLLPlugin\nvaching compiles from babel-loader\n\nThis, hoewever is a topic to be discussed on forum.vuejs.org or Stack Overflow etc., so i will close this.. Closing for inactivity.. This should simply work, provided that sass-loader is installed. \nThe code line you changed certainly was and is scss: generateLoaders('sass'), so i don't know why yours was scss: generateLoaders('css') as you say.\nBut good that it works for you now.. Thanks!. That env variable you created is only available in the node process that runs webpack and its config. \nIn order to make webpack aware that this env variable should be defined during bundling for your scripts, you have to add it here:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/config/dev.env.js\nlike this:\n```javascript\nvar merge = require('webpack-merge')\nvar prodEnv = require('./prod.env')\nmodule.exports = merge(prodEnv, {\n  NODE_ENV: '\"development\"'\n  API: JSON.stringify(process.env.API) // necessary so tht webpack injects the value including the \"\" quotes, as astring.\n})\n```\n...and similarly, in the other env files of the /config directory.\nIf you need further support, please open a thread on forum.vuejs.org.\nGithub should be used for bugs/features. I won't reply here. Thanks for understanding.. Go to forum.vuejs.org and ask there, please. \nUnless you can reproduce with a fresh install of the template, in that case, open a new issue with a reproduction. . I'm not sure about this.\nWhen people use vuex, they have to add a promise polyfill in their app anyway, so adding that polyfill here might at best be unnecessary and at worst conflict with their choice the made in their app code (like bluebird).\nThe template itself doesn't support vuex as an init option (yet), so I don't think we should add that.. We could certainly be more specific in vuex docs, feel free to open an issue for this in vuex' repository.. @nothingrandom Not a bad idea at all. HMR doesn't like brackets / parethesis as well. Would be a nice hint to give users.. In /test/unit/index.js you find this piece of code on the bottom:\njavascript\nconst srcContext = require.context('../../src', true, /^\\.\\/(?!main(\\.js)?$)/)\nsrcContext.keys().forEach(srcContext)\nIt uses webpack's require.context() to require all modules in a folder (and subfolders). This function accepts a regex, we use it to exlcude main.js, but you could use it to exclude /components as well.\nIf you need further assistance, please consider asking on out forum.vuejs.org so Github issues can focus on bugs, thanks!\n. It's supported insofar as webpack is proceonfigured to handle it as well as less, postcss, stylus, but we don't install all of those loaders by default.. > what is the reason to assume that pre-configured sass supporting\nThis it's documented here for everyone to know\n\nwhy just put it into devDependency to avoid confusion for users.\n\nas I said, we don't want to install unnecessary dependencies.\n\nPeople who use template may be even not familiar with webpack and sass-loader.\n\n\nThis template has extensive docs, users should read them.\nThis template is not a framerwork that aims to keep you from learning webpack. It's only a starting point to set up projects quickly.. you should look into the \"externals\" option of webpack. That will keep these depencencies out of the bundle.\n\nBut you would have to add them to index.html yourself.. I'm not aware of any webpack plugin or similar tool that will do this for you, so I don't think we can easily make this possible in this template.\nMaybe ask on our forum.vuejs.org to see what other people can come up with.. > I wonder why not use default value true or remain unchanged as people can just edit the config? Now with value:false \nWhat value are you talking about? where do you set this?\nEdit: Oh, you mean this? No idea why that's set to false, actually (wasn't added by me). \nPlease open a new issue so we can track this while I try to clarify with the other why this was set and if we can change it.. Will revert his. I already tried to revert this PR, but failed to remove the symlinks line. Just gimme a sec.. >  e2e tests can not be done with the unit test stack?\nExactly.. This issue is outdated.. So if I understand this correctly, this will only require .js and .vue files for coverage?. I don't see how this has anything to do with this template. Please ask on our forum.vuejs.org or Stack Overflow and similar places.. Closing this as version is already surpassed.. Looking at #200, #530, 541 this is not as simple as it looks. It's ok for a simple app but needs thorough testing for apps using vue-router and/or lazy loading of code-split components.\nSince local usage is not the focus of this template, we will rather keep settings in place that work well with those technologies, which we expect most devs will use when writing a biger app with this template.\nSince this topic is already discussed in the other mentioned issues and PRs, I will close this as a duplicate.. I'm not too convinced that we should add another config file to the template people have to know about (\"what is this for? should I do something with it?\"), especially when it's about something like ternjs (which is a great project, but ...) which is not required to use this template's functionality and olny used by a fraction of developers.. Since this is already being discussed on the forum, I will close this:\nhttps://forum.vuejs.org/t/using-vue-cli-webpack-template-how-to-change-publicpath-correctly/10485. That's now a setting in /config.... https://github.com/MoOx/eslint-loader#fix-default-false. We will re-write the testing story soon, vue-test-utils will be added to this template and we will switch the test runner to jest.\nI will close this for now, But rest assured that the upcoming changes will cover this better.. This is a question to ask on our forums.\nhttps://forum.vuejs.org\nOr Stack Overflow etc.. in /build. I will close this since I don't think we will add anything of the sort to this template. \nIf you need help with implementing this for yourself, go to forum.vuejs.org or chat.vuejs.org. This template doesn't use webpack-dev-server, it uses a custom express server with webpack-dev-middleware.\nSo you have to enable https in that express server.\nThe code of that server is found in /build/dev-server.js\nA tutorial about how to use HTTPs with express can be found here:\nhttp://blog.mgechev.com/2014/02/19/create-https-tls-ssl-application-with-express-nodejs/\nFurther questions should be asked on our forum @ forum.vuejs.org. eslint-loader is configured for .js and .vue files, so I don't see what should not be working. Can you elaborate?. > You can quickly try it yourself and see it doesn't work.\nPlease at least name the package that you loaded the .vue file in question from, as well as the file itself.\nBecause I haven't come across such a problem yet, and the vue-loader config does not exclude node_modules (which the config for babel-loader does, for example), so it should work.. Seems like this is resolved and can be closed, great! . /config/index.js is not the webpack config, it's just a small config file for paremters used in the webpack config.\nThe webpack config can be found in the /build directory, and this is where you have to add this plugin.. We will definitely consider this. The question not if, just when.. We'll shortly be switching to Jest (#817) so Karma will only coexist as a \"deprecated\" alternative for a while.. seems resolved in karma.. > Actually, I think the Babel's comment configuration is not necessary because the Uglify plugin will do that on the later stage.\nYeah, that makes sense and will update the .babelrc config accordingly.. In my opinion, There's no need to add it to the docs because it's the default value. \nBack when this issue was relevant, we had comments: false in the Babel config, but that was months ago. \nAdding something about this to the doc would be starting a list of \"don't do this\" about general webpack features. . This is likely not related to yarn, but some other environment you use (dropbox /docker / vagrant ...) which interfers with webpacks default way of watching files for changes. \nHowever, polling is not a very performant way to watch files, so we should make this optional. I just submitted a PR for that (#946 ), before finding yours.\nI hope it's ok if I close yours in favour of mine, which adds a more flexible config option.\nGreets, Thorsten.. It seems some other PR already implemented this. Sorry :/. See comments in #743 . I would change this line to:\njavascript\nif (!process.env.NODE_ENV) {\n  process.env.NODE_ENV = 'production'\n}\nThen you should simply be able to run\n```\nNODE_ENV=development node build/build.js. I don't know what you mean by \"multi compiler\".. I don't feel like merging this if \n\nIt can lead to accidentally removing used CSS\nthe project doesn'T seem to be well-maintained.\n\nI also don'tt think an opt-in is a solution, since in my opinion, people should only add this if they know what they are doing. Asking them ahead in the questionnair leads to people generating projects with this tool even though they don't know about its limitations.\nBut thanks for your work on this!. Well, I simply don't know this tool and don't plan on learning it extensively. SO to merge a PR that adds this, I would reuire extensive tests for:\n\nusage with normal CSS\nusage with scoped CSS enabled\nusage with CSS-modules enabled\nwith and without ExtarctText\n\nOtherwise I will be left with a template containing a tool I don't know, and not knowing what to do if the inevitable issues pop up about \"CSS is wrongly left out in case X\". I haven't really understood in what context this is useful.... This won't be an issue after #975 I assume. Please be so kind to open a new issue / PR if this persists after #975 has been merged. W already merged another PR that does something similar.\nPlease review the changes we made -if you think those can be further improved, we welcome a nother PR from you.. I'm sorry but this has nothing to do with this template. I suggest to ask the node / npm guys on StackOverflow or a similar place.. this repository uses CircleCI, yes.\nThe projects created from this template don't have any CI solution preconfigured or anything, though.. There's still some plugins that we rely on that have to release compatible versions (` extract-text-webpack-plugin andhtml-webpack-plugin` among them) so we will wait for those issue to resolve before we make the jump.. Do you know what issues exist with inject-loader with webpack 3?. Thanks for the heads-up! I guess we should be looking to upgrading this template now. . So I was looking into this again, and it seems that there is a general problem with that html-webpack-plugin:\nhttps://github.com/jantimon/html-webpack-plugin/issues/680\nSo think we should implement the workaround of https://github.com/vuejs-templates/webpack/issues/751#issuecomment-309955295 in our template until the problem for that pluign has been resolved by its maintainers.. yep, that's all, pretty much.. I just submitted a PR for webpack 3 here, you can easily check it out with\nvue init webpack#webpack_3\nIt would be great if a few folks could take this for a quick spin and report that everything is working for them.. Tests fail b/c of selenium not starting up. unit tests work, that's good enough in this case.... thanks. Sorry, I already merged another PR that did the same. Thanks for your contribution nontheless!. Thanks!. That Question needs a verb, at least.. Hey, thanks for wanting to help out! \nFirst, let me start by saying sorry that we haven't added everything people wish to this template. It's always a task to balance approachability and complexity. \nThat being said, if you want to start a more broad / sophisticated setup, that's fine. We can also accept it into this organization if it fits, i.e. It's different enough to this template so it's clear what use case the different templates address. \nSo I can't promise anything yet, but if it fits, sure! \nWe did the same for the pwa template recently. . thanks. Thats's probably a question to ask on our forum or in the repository of that plugin.. @nickmessing is this good to merge for you?. Leave have a look  at #1218. I took a bit more ambitious approach to improve the testing story for the template. . Thanks for reporting this! Yes, a PR would be very welcome :). Thanks!. You updated webpack to 3.0.0, but the html-webpack-plugin isn't fully compatible with that version yet, afaik. That's why we didn't update the template yet.\nSee #751 \nSolution: downgrade to 2.6.*. Thanks!. Please use our forum @ forum.vuejs.org for usage questions.. No worries. Will try and help over on the forum when in post and I have a minute. . Please use forum.vuejs.org for support about how to use or extend the template for individual cases.. your project appearantly didn't transpile the arrow functions to  ES5, and uglify can't work with ES6.\nPlease check if you have a .babelrc file in your root directory, like this one:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/.babelrc. I can't reproduce this.\n\n. closed for inactivity. Sure!. I think this makes sense. Sorry for overlooking it for so long.. I suggest to use forum.vuejs.org for support questions instead.. Thanks!. This was done this way because it's shown this way in the README of friendrly-errors-webpack-template\nhttps://www.npmjs.com/package/friendly-errors-webpack-plugin#turn-off-errors\nBut if you don't have any issues with that \"correct\" setting, I can merge it.. It's hard to say what the reason for that would be if all information you can provide is that it happened \"after a enw npm package install\"... :(. added to repo, must re-deploy docs..... I don't think we will add it to this template - maybe it makes sense as a preset in vue-cli (https://github.com/vuejs/vue-cli/issues/589). Thanks!. Damn, merged into the wrong branch. reverted. need a fresh PR.. https://github.com/MorisHarA/app/blob/master/src/store/index.js#L28\nI think you have to provide all module paths, inthat array here.... Hi there!\nI close this issue because of inactivity. If you want to follow up on this issue, please open a new one, and provide the necessary information (a working reproduction etc.) in that issue.. @sudo-suhas I'm not sure about this. I add these to my projects as well, sometimes.\nOn the other hand, I don't want to add too many scripts to the package.json and blow up the list. it should be quite easy for anyone interested in this option to add it, and I'm not even sure if I want to have people use it that haven't even understood what it does.... While I personally like trailing commas, and as a consequence add this rule to every project while using standard otherwise, I agree with nick that we should stick to the defaults of the xonfig the user chose. . Thanks, nice work with the PR description also!. This was done intentionally. Because in unit tests we have to compile ES modules to commonjs if we want to use inject-loader or vue-loader?inject to mock a module's dependencies. \nBut we could certainly add the target definition to the test preset as well.. please provide the repository. This works without any issues for me (provided the vairables exist).. can'T run this right now, but have you tried setting the cwd properkly in launch.json?\n\"cwd\": \"${workspaceRoot}\"\nbut TBH, I doubt that's the issue.. Since we can't do much about this I will close.. This PR doesn'T seem to be about anything, I assume it was made in error.. @nickmessing makes sense to wait for #5887.. Hey everyone. \nWe appreciate the hard work that was put into this  - and I will consider a merge, just have to take it for a spin myself before to get a feel how much complexity it adds. \nWe originally planned a separate template, but that won't happen anymore before we do vue-cli 3.0 - which itself is still in the concept phase. \nSo I understand that an official integration would be welcome by many people, and I don't want to let this work go to waste. \nThe only thing that's might end up in a \"no\" vote would be if this makes the maintenance too complicated - I'll see about that. \nUnfortunately I I'll be travelling this weekend to won't have a chance to check this out with the dilligence that's reuqired. . @ThePlastic then to be \"fair\", packages for all supported preprocessors (sass/scss, less, stylus) should be added - which imho bloats dependencies unnecessarily, but that'S debatable.. I have taken a first look, and it's looking good for the most part. Have some small points/questions but probably won'T be able to write them down till Thursday evening.. More or less, but not really. \n\nthe main entry point has to be .ts\ntsconfig.json should be provided \ntypescript dependencies are not installed\n\nJust check out the diff to see what UP did. \nBTW once #1218 is merged I will merge this next. \nI just wanted to have a flexible testing setup first to test the template with and without typescript in CI. . Thanks!. Note: I'm planning on updating all of the eslint dependencies soon, especially eslint 4. Could this have any influence on this feature? I don't think so.... Nope, was on vacation for 10 days, will do the merges this weekeend. . Doesn't seem to be directly related to this template. Plus we will be switching to webpack-dev-server in the coming days (#975), so this would have to be re-evaluated after that.. that's been done now.. Not that I know of. you might be better off asking on forum.vuejs.org or chat.vuejs.org - this question is only tangetially related to this template/repository.. host address will be customizable with #975 soon.. > how can I manage subdomains (subdomain.awesomewebsite.com)? \nCan you explain what you mean by \"manage\" in this conext?. I'm not sure I feel fine with editor-specific settings inside package.json for this template. USers unfamiliar with that atom plugin will wonder what that is about, and it will only clutter the file for anyone not using that editor & plugin.. I understand that this can be a painpoint in a couple of situations, especially when you design tightly coupled components.\nWhat I want to test (but can't right now) is if it works differently with the default stlye-loader instead of our forked vue-style-loader which we use in this template by default and which does the lazy insertion I think (amongst some optimizaitons for SSR, but we don't use SSR in this template by default anyway).\nDefining the order manually is not a viable option I think, far too brittle.. There's ongoing discussion about this in the vue-loader repo: https://github.com/vuejs/vue-loader/issues/808\nSince this has to be resolved in vue-loader, not this template, In an attempt to focus the discussion in one place, I will now lock this issue and ask anyone interested to join us in the issue mentioned above.. @victorhazbun Is this still relevant?. Well, you set NODE_ENV to production, but still run the development webpack condig. \nSwitching the production config won't work perfectly as well, as the Dr server config is in dev. Maybe we can move that to base. . Oh, I usually use http-server when I want to quickly serve the built files locally. . You have my vote :-P. Okay so we got jest included - go get that 1.0.0 release for vue-test-utils and we can close this :). > I define place of auto injected files before included my.js file\nYou think that this is a placeholder defining where your scripts are injected?:\n<!-- built files will be auto injected -->\nIt isn't, that's not how it works. This HTML comment is just a hint, it has no meaning to html-webpack-plugin, which will simply place them at the very end of the body element.. No. Is there a specific reason that you want this script in a separate tag instead of adding it to your app' code? You could, forg example, add it right after you created your Vue instance:\n```javascript\n// main.js\n// ... stuff\nnew Vue({\n  // ...\n})\nimport '../static/my.js'\n```\nFurther discussion should happen on forum.vuejs.org or chat.vuejs.org\nGH is not a support forum.. When we started this template, webpack-dev-server didn't have all the features /customization options that we would like it to have, so we decided to use webpack-dev-middleware & hot-middleware.\nBut webpack-dev-server has improved other the last couple of months so I guess we could switch to it just as well. But I haven't compared the two setups in detail yet. We will do that sometime, though.. is this well tested with static files? Wouldn't this redirect requests for e.g. images to index.html?. We will shortly be dropping the custom dev server in favor of webpack-dev-server, so this PR, is no longer applicable.. Hey, we have a forum for questions, please use it.\nforum.vuejs.org.. We are aware that there's a need for a template for developing components/packages/plugins as opposed to a full app.\nThis template is meant for the latter. I don't think it makes sense to try and turn it into a template that can also create plugins/packages, because it's not just about some webpack options.\nIdeally, you don't use webpack to bundle packages for production, but rollup, because the runtime overhead of webpack increases the size disroportionally for small libs.\nAlso, ideally you build more than one version for production, at least: \n\nUMD version\nES module version (for tree shaking in bundlers that support it (rollup, webpack >=2)\n\nAs you can see, a proper template for this will work quite a bit differently, so it should be done in a different template alltogether, instead of shoehorning it into this one.\nAbout the question weither we are working on this: Yes and no.\n\nYes, insofar as many of our core team members have set up their own templates for this that are publicly available (see below)\nNo, insofar as for reasons of resources, there currently are no efforts in creating one \"official\" template from these existing solutions.\n\n\nAvailable templates:\n\nhttps://github.com/posva/vue-plugin-template\nhttps://github.com/ktsn/template-vue-component\n...one or two other which I can't find currently :-P. I just edited my OP with some templates. I know there are one or two more, but can't find them in my long list of GH stars at the moment.\n\n@kazupon should have one I think.\n@egoist has a more general template for npm packages not focussed on Vue alone:\nhttps://github.com/egoist/template-nm\n\nI didn't even knew rollup was better suited for this.\n\nSomething to read about that topic: \nhttps://medium.com/webpack/webpack-and-rollup-the-same-but-different-a41ad427058c. yes!. Great work!\nA thought though: I'm not sure if it's a good idea to make a hard switch to jest without any fallback for people that are used to the \"old\" workflow. Essentially, we would force everyone to either use Jest or scrap together a config from their old projects.\nBut we should do the switch sometime, so... I think I want to check out if it's achievable to support both, for a while, through additional/other options in the meta.js file. We could preselect Jest and make people aware that we will deprecate the karma/mocha config soon.. Absolutely!. @eddyerburgh running those tests is indeed a small nightmare. I was having the same problems while trying to switch the template's circleCI config to v2 - the questionnaire just hangs at the first question. \nSo don't worry too much about it, it seems to magically work on circleci v1, for whatever reason. \nI'm stroll looking for ways to automate the fill out of the questionnaire in any other way, so open for suggestions as well. . @sinaa thanks, will give that a spin!. Thanks for the hard work on this @eddyerburgh . That's probably a question to ask the team working on that repository.. Fixed in v 1.2.0 as of today. kagamiChan is right. . Without any exlcude: [] and includes[](!), babel, loader should transform everything coming from your node_modules directory. That would make your ptranspilation process veeeeeeeeery slow though:\nhttps://github.com/babel/babel-loader#babel-loader-is-slow\nSo, since babel / babel-loader doesn't have a mechanism like the one proposed by sindresorhus in the comment you linked to, you will have to add a seperate include path for every package in node_modules that needs transpiling.. You might want to read this guide on the webpack page:\nhttps://webpack.js.org/guides/asset-management/. You are trying to load a commonjs module meant to be used in node or webpack directly into the browser. That will not work. . Generally speaking, we don't want to blow up the questionnaire during init too much, because nobody wants to answer two dozen quesitons, when your answer to most of them is \"the default\" anyway.\nSo new options should have a really noticable benefit. \nConsidering that today, all you have to do to make this work is to install the appropriate loaders, I'm not sure that there's a good enough benefit in this.\nThe only exception would be JSX, which requires additional babel-plugins and config, so I would be open to add a JSX option.. Closing this as this will probably be addressed better with presets in The upcoming vue-cli 3. That element in index.html will be replaced with the one from App.vue when the app mounts. So this is intentional.\nBut nontheless, thanks for you willingness to improve this template!. Relative assets folders don't work well with vue-router in history mode. Particularly, asserts can't be resolved when doing page refreshs for any path but the root. \nBut yes, it's not well suite for dynamic deployment scenarios in subfolders, so we gave you an easy way to change it in the config folder :)\n. > I don't understand why this issue is closed?\nBecause @myst729  explained how to solve the issue.\nThe only general solution in this template would be to have babel transpile all code from /node_modules by default, which would make even small builds incredibly slow.\nFor that reason, we will continue to skip transpilation for anything in node_modules by default.\n\nI got tons of this kind of messages\n\u2838 building for production...[BABEL] Note: The code generator has deoptimised the styling of \"/home/***/Documents/WORK/EXAMPLES/vue-examples/node_modules/lodash/lodash.js\" as it exceeds the max of \"500KB\".\n\nThat's a totally different error (or rather: \"Notes\", as the message itself said) than the one discussed in this issue, so it's expected that @myst729 's solution doesn't \"work\".. Well, the solution was provided, just add the path to babel-loader config.. Thanks!. e2e simply starts a dev server for the tests backend.\nThe webpack config should transpile no matter which env you've set (or not set). . Hey, thanks for digging into this! \nWe should definitely fix this in the template. Will get to it when I find time - maybe we can ref actor these test / testing RMV variables into one. . In #1178 I consolidate the test & testing env variables into test, that should solve this problem once it's merged. Thanks for this. is there any info/docs that I can read up on this behaviour?. Thanks for the background info. Will try this! . @gucong3000 This looks great, but I'm worried that the circleCI tests fail, it seems the vm runs out of memory.\nI don't feel like merging this if it breaks tests :/. Okay, I'll push this as a separate branch to our repo and we'll see from there.. @gucong3000 I want to hold off with this PR until #1133 is merged, is that ok?\n. I know, I know :(\nAll I can say is thank you for being that patient with me so far... \nThese bigger PRs are always a bit problematic for me in terms of finding time to properly testing them. \nI'm also totally unfamiliar  it stylelint, so will have to learn the basics to feel comfort able maintaining it on this template. \nI will merge this and I won't take a moth t month to do so. . We will deprecate the karma setup in the forseeable future in favor of jest.\nFor that reason, I don't think it's  very useful to extend the questionaire with further options, so I have to close this PR.\nThanks for the efforts nontheless!. Thanks for the pointer. \nThere ar enot code changes necessary, but we should update the example in the docs accordingly: \nhttps://github.com/vuejs-templates/webpack/blob/develop/docs/proxy.md. What exactly is the remaining problem? We switched to webpack-dev-server, so we don't use the middleware directly anymore. We use the dev-server's correct api for this, so I see no problem remaining to fix. \nHowever, so if there still is something missing or wrong with our docs or the config, please let us know and I can reopen this. . Well, that's just the internal name in the template. We pass the data specified there to the proxy option of webpack-dev-server which then handles it internally for us.\nSo technically it doesn't matter what we call this field in the /config file. I'm open to rename this to proxy so it's using the same name as the webpack-dev-serveroption, but that's cosmetics.. You dont. That's the while point - you use the production api in you code, and webpack-dev-server proxies those requests to your test backend during development. \nIn production, there should be no need for a proxy. \nIf you want to switch api urls in development and production, you should rather read the template's docs about environment variables. . it should work well if you turn the assetsRootPath in config/ into a relative path.. This template will not add cordova support.\nSo this question might be better asked on our forums or chat:\n\nforum.vuejs.org\nchat.vuejs.org. https://webpack.js.org/configuration/externals/. You have to actually mount to an element.\n\nhttps://jsfiddle.net/a0c1wm6t/1/. @Kunigaikstis you are right, I was mistaken in this. Thanks for double-checking me\nThe real issue probabl has to do with his component failing in mounted because it tries to call this.$store.dispatch(), but this.$store is undefined.\n\n'[Vue warn]: Error in mounted hook: \"TypeError: Cannot read property 'dispatch' of undefined\"\n\nThat is expected if you render a component on its own without a store.\nI can only advise to check out how we do it in the vue-test-utils (currently in beta):\nhttps://vue-test-utils.vuejs.org/en/guides/using-with-vuex.html\nWithout seeing the component in question, there's little more I can say. Since this is a usage question (not a bug), it should be continued on forum.vuejs.org. I can't reproduce this, sorry :/. Im sorry to close rid but there doesn't seem to be anything we can do... . thanks!. thanks. Will merge this to give it a try :). What is vuew build?\nThat's not a functionality of this template . Ah, I think you try and owe vue-cli build?\nNope. Thartemplate has its own build command, have a look in package.json. Please use our forums (forum.vuejs.org) for support a questions, or open a proper bug report issue with a reproduction. . Closing for inactivity.. .js is the default file extension for any javascript app. I don't think that it's a good idea to change that, I feel it would be counter-intuitive for anyone who worked iwith webpack before.\nThis being a boilerplate there's nothing wrong with changing that if it better fits your workflow, but I think the default should be as close to a \"normal\" webpack config as possible.. @chrisvfritz What do you think about this? Might make sense.... thanks :). Babili is still in its early stages, it's not \"battle-tested\" yet. Speed and size reductions are inferior to Uglify.\nThose reasons make me think it's not a good fit for such a widely adopted template as this one.\nBut we could add code comments and/or documentation to make people aware that they can use this when they choose to compile to a different target than ES5.. I'd say that its the responsibility of the package owner to provide a version compiled to ES5. \nOr at least make users aware that its using ES6.\nOtherwise devs who have to serve ES5 to their end users have to transpile all of their node_modules which would be a huge overhead. . Thanks!. Simply removing it is not a good idea, we still want to have an example of how to use environment variables. Could you come up with a small one-liner like we currently do with the debug example?. Perfect, thank you :). you can use this template with yarn.\nWe won't include rollup because it's not suitable for bigger apps (no code splitting), which this template is meant for.\nWe want to create a template for creating Vue libraries, and if we manage to create it, it will certainly use rollup for bundling.. Hey, \nThanks for this PR. However, we are planning to switch to JEst as the preferred test runner. We will keep the current option of running karma available for a while as people are used to it, but I doubt that we want to add a similar alternative like yours to the list.\nHowever, we are in the planning stages for vue-cli 3 (see the vue-cli repository), and for that version, we plan on making something like different presets available. That might be a way to make this an optional \"add-on\" in a future version of our template system.\nBut I will close this PR because it's currently not a fit for where this template itself is going right now.. Hey, thanks for tour contribution. \nHowever we are coherently evaluating if we want to a itch karma for something else, but haven't decided yet. \nSo this issue + PR will have to wait until we have settled on the future solution. . Update: We will swithc to jest (#817), so as explained in #874, this will not be happening.. thanks. Oh damn, that was my mistake for merging it like this. Will correct in a second!\nThanks for reporting it!. Will fix this adap, but might take a couple of hours until I get to a computer . Closing as a duplicate. Hm, maybe we should revert this .... done.. This is a question about express, you might be better of asking on Stack Overflow about this.\nBut generally, to make SSL really work, you would have to create a local certificate.\nhttps://www.kevinleary.net/self-signed-trusted-certificates-node-js-express-js/. You might have more success with your question on forum.vuejs.org. thanks. I have no idea what this PR is meant to do. Can someone help?. Relative assets paths don't work with history node of the router, that's technically impossible, pretty much. \nExample:\n\nyou open ``www.example.com/\n\nbrowser looks for your app at www.example.com/static/js/bundle,js\n\n\nThen you manually change the URL to www.example.com/users\n\nYour webserver also serves your index.html for this URL, so your history mode router can pick up.\nNow the browser will look for you app at www.example.com/users/static/js/bundle.js\n\n...but of course, that path doesn't exist.\nSo you will have to define the subdirectory in which you app runs as an absoulte path in config.js, and as the base: option in the VueRouter options.. Thanks, will check that out! \nMuch apprechiated. . > Do we need the .eslintignore rules at all?\nEditors like atom or visual studio code can run eslint right in the editor. Excluding those files in .eslintignore makes sure that they don't show any errrors for those files after installing the template.. It seems that this is a leftover from a recent change that I had to undo because it caused issue.\nThanks!. I think we will leave the gzip option as it is. /config/index.js has comments that tell users to install that package before setting that option to true, so I think this is covered well enough.\nWe usually like to keep the package.json as light as possible, it's already heavy enough.. tbh I'm not super familiar with Nightwatch, but that change for the callback means that this is now undefined in the callback, which the original code probably intentionally avoided.\n. @vuejs-templates/collaborators Can anybody with more nightwatch experience chime in wether it's imortant to bind this here?. @robwierzbowski There's your answer :). You should try to properly link the package with npm link. I'll close this as it's tracked in #611 . Please check out #1178 and tell me what you think.\n. I don't think that I will finish this PR. The current state is insufficient, and the new vue-cli 3 offers excellent env support.. Have a look at /test/e2e/runner.js - Here, we set NODE_ENV to 'testing', expecting to run the dev server with a production config.\nSo this doesn't seem to be unnecessary.. No idea, sorry.\nHeads up: We will soon add Jest as another option for unit tests, and the current karma setup will be available, but deprecated.. No idea what to do with this, and no one else seems to care, so closing.. Duplicate #906 . Give me a few days, I'm on vacation till 15th, will finish this up that after that. :). I'll close this since its been inactive and 5 months have passed. If this persists, please comment / open a news issue with further details. . This will be solved via #975. this PR won't be mergable after #975 because dev-server.js will be removed.\nSorry to close this :(. @chrisvfritz this would break e2e as nighwatch needs to know the port of the devserver to run the tests. . That would be good, yes. . Great idea. . Will take a final look at the weekend when I'm back from portugal. Hi @erwin16 !\nWhat issues does this prevent?. I will close this since I don't know what the change implies and what problems it is meant to solve. \nWe can re-open this PR anytime if additional information is provided. . Hi @grakic \nCan you elaborate a bit about what situations and problems this prevents? I'm not entirely sure I see the problem this is fixing.. @grakic We will be switching to webpack-dev-server (see #975).\nI will leave this PR open, but set a \"request changes\" block. \nI would ask you to test this issue with webpack-dev-server (you can check the PR's branch out and test it locally, see #975, or after we officially merged it) and either close this PR if the issue doesn't persist, or adjust this PR to apply to the new setup.. I'm sorry, but this change was already done through another PR. Thanks for the contribution nonetheless!. The vue webpack template comes with a babelrc file and it is required for the template to work properly. \nIf you removed it, you broke your setup. . I think this can be impropved upon, primarily by setting the context option and converting a couple of paths to absolute ones.\nWe should look at this after #975 has been merged - using the official webpack-dev-server might solve some of the issues you were having.. Context is now set  properly. \nhttps://github.com/vuejs-templates/webpack/blob/develop/template/build/webpack.base.conf.js#L23\nI hope this resolves this issue... Reason: This template is not designed with typescript in mind.\nSolution: No idea, your problem description doesn't tell me much.. We will do a separate template for typescript towards the end of the year. This one here will not explicitly support it. \nHowever, I know a couple of people who use this template with type script and vue-vlsss-component, and don't have any problems, so I can't tell where your rpoblem is coming from. \nWhat I can do is make an educated guess: are you using any of the following for your project :\n\nDropbox / OneDrive / Google drive etc. \nvagrant \ndocker\nphpstorm or a similar ide \n\nThose are known to interfere with web packs default way of observing file changes. \nThe solution is usually to switch to polling (#946)\nIn phpstorm, I usually have to turn off some weird save protect feature. . Hi @UncleBill \nThanks for your PR. However, I just merged port detection, also you can use the PORT env variable as well as the config. That should provide more than enough options to configure this.\nSo I have to close this PR.. You experience this because vue-loader exports ES modules since version 13.\nSo you have to do: require('youcomponent.vue').default. @ssijak Did you find out anything more about this? I won't change the host to 127.0.0.1 just because it magically fixes this issue - if this is a chrome bug, we should document it.\nAnd if it's just a weird side-effect of one extension you have running, that would be even better and we can close this.. Okay, thanks. I will take a look myself when I find some time. . We will make the host configurable with an upcoming PR, but will not make 127.0.0.1 the default.\nChrome's behaviour as you describe it seems weird, but localhost should stay the default for now.. If you reference all source files from your tests anyway, then this has indeed no effect.\nIf however you tests leave out some source files, then this code would make sure they are still required and therefore taken into account when calculating coverage.\nIf that doesn't work as expected for you, maybe there's a bug?. Hm, good point. PhantomJS doesn't support promises (so I wonder why your first expect didn't fail).\nWe didn't include a polyfill originally because Vue.nextTick didn't support Promises  originally, (no part of Vue requires them).\nSo a better solution to your problem than monkeypatching Vue would be to polypill \"Promise\".\nWe should fix this, even though we probably switch to Jest shortly anyway.. FWIW, I made a PR to the main docs to mention the need for  polyfill:\nhttps://github.com/vuejs/vuejs.org/pull/1180. if (window.location.protocol !== 'https:') window.location.href = 'https://yourdomain.com' \nYou should probably do that from your webserver though, but no idea how possible in heroku. Just commenting to let you know that I intend to look into this, but it wil require to make thorough tests of various scenarios, especially nested routes in vue-router, so see if that fix actually works across all of them.\nSo please be patient, It's not forgotten, but not done with a simple change, at least not if we want the template to be thoroughly tested.. So I tried to reproduce it, but still can't, .   your problem is not a problem related to paths. \nYou are dynamically constructing CSS styles at runtime. Webpack can't recognize that at build time without some help. That help is require().\njavascript\ndata () {\n    return {\n      msg: 'My Driving School',\n      tabIndex: 0,\n      image: require('../../assets/logo.png')\n    }\n  }. remove the Uglify plugin from /build/webpack.prod.conf.js. Those are two different things:\n\nTranspilation\nusing native ES modules.\n\nConcering 1., you can simply adjust your babel config to only support evergreen browsers, as explained in the article. since that's a very easy step, I don't hink this needs special support in the template. \nAbout 2., there are no plans yet. I'm unaware wether webpack-html-plugin supports such a thing.\nSince we recently started discussions about vue-cli 3, I think this would be something we could solve through a preset for v3, but not in this template here.. It's not new, but yes, it's default behaviour. you cna change the path in /config/index.js. Hi,\nI have no real idea since you don't really say what problems/errors you encounter.\nGenerally, it's better to ak question on forum.vuejs.org or chat.vuejs.org anyway. This is for bugs & features.. Please use forum.vuejs.org or chat.vuejs.org. Thanks!. I don't think  that we will do this. This will make the generator much more complicated and will defeat the advantage that people can easily find their way in every project geenrated with this template.\nI understand that the folder structure is not suitable for all use cases, but that's a downside I think we will accept.\nI'm open to discussion about this, but personally am not in favor and will not work on any implementation.. This will be done in #975 . Closing for inactivity. I can't solve it, no one else stepped up .... Hm, no idea from that information .... this might be of interest to you: https://github.com/shakacode/sass-resources-loader. You should probably rather ask on forum.vuejs.org and/or chat.vuejs.org\nAlso, from what you showed, it's not clear what your problem is. You say you want to remove the CSS from the .vue file, yet all your code still has it in them.\nWhat did you try to do to make this error appear?. Hi there!\nThere's no reason to panic, so calm down, take a deep brath and relax.\nThe change you are seeing is only stylistic in nature. We made this change in this example component because  in our recently released Style Guide, we recommend PascalCase for Component tags in templates of Single File Components(!). Read more about it here\nBut this style is:\n\njust a recommendation\nnot a technical change, nothing was broken or anything.\n\nYou can still do both, and you always could:\n<hello-world>this works!!</hello-world>\n<HelloWorld>this works, too!!</HelloWorld>\n`` . Thanks for the hint :). You can simply import them from node_modules in the main file, like you would for a javascript file:javascript\nimport 'bootstrap/dist/bootstrap.css'\n```\nIf you want to cutomize, simply create a main style file and import  that one:\n```scss\n// main.scss\n// addd your vriable overwrites here..\nimport '~bootstrap/scss/bootstrap.scss'\njavascript\n// main.js\nimport './main.scss'\n```\nthe whole bootstrap CSS will then be included in the extracted CSS file in the dist directory. Well, alll solutions have their trade-offs, so it depends what you want:\n\nif you want to be able to update these dependencies by updating a package in  node_modules, you probably also want webpack to add a hash to the file, so updates will cache-bust existing files for your users. In that case, just import them as I showed.\nIf you want you static assets to be really static (i.e. they will likely change (almost) never), it's probably easier to add them to /static, and not a lot of work either.\n\nYet you can of course change the config (here) to also include some files from node_modules, but that won't hash anything. \nEdit: Just realized that would also require some changes to the dev server:\nhttps://github.com/vuejs-templates/webpack/blob/develop/template/build/dev-server.js#L68-L69. Hey @exarus \nWill look into this and probably merge for the next version, this looks like a great and long-needed cleanup!\nThanks!. Hm, that's unfortunate. I wasn't ready to jump to eslint 4 since I wanted to test a bit if every plugin etc. is working well with it, especially eslint-plugin-vue, which will be released soon.\nI will test that asap, and until then, will change the airbnb version back to 11.3, which was till compatible with eslint 3\nThat means I will close this PR, sorry.. Thanks. Seems this was created by a recent dependency upgrade for other deps. \nThis is likely not creating any issues (karma and Simon still work fine), but I'll clear up issue. . It seems that karma-sinon-chai didn't update the peer dependency in a while:\nhttps://github.com/kmees/karma-sinon-chai/issues/50\nBut it still works as intended, so there's not much we can do. You will just have to ignore it.... this will be done with/in #975 . Please ask questions about your own projects on forum.vuejs.org or chat.vuejs.org\nThis issue list should be strictly about issues with the original template, not forks.. Currently, you can't. This is a restriction of webpack's treatment of CSS, not of vue-loader.\nYou can read about plans to improve that here:\nhttps://medium.com/webpack/the-new-css-workflow-step-1-79583bd107d7\n\nThis has a few benefits:\n* We can generate stylesheet files for on-demand-chunks (this was not possible with the extract-text-webpack-plugin). That's because the production build includes source Maps by default:\n\nhttps://github.com/vuejs-templates/webpack/blob/develop/template/config/index.js#L14\nEither deactivate that option or don't serve the sourcemap files that you find in the /dist folder.. I don't know what you are told to change, so I can't say what that means with the new dev server. . Sorry, already fixed this on my own after seeing an issue about it :/. Also, it can't be a let either because this code is injected into the client and not transpiled, so we have to use ES5 (var). Oh, right, I indeed got confused. sorry.. Thanks!. m,aybe include both examples?. Thanks, fixed now.\nWe recently transformed the build config files all to ES6 because the minimum node version supports it.\nBut dev-client.js is inserted into the client-side, and not transpiled, so it should stay in ES5.. Hello @xieminghao \nThank your for your interest in this project.\nHowever, your issue is a usage/support question, and the issue tracker is reserved exclusively for bug reports and feature requests (as outlined in our Contributing Guide).\nWe encourage you to ask it on the forum  , Stack Overflow or on our Discord chat and are happy to help you out there.\n\nThat being said, your code should be transpiled to Es5 by babel-loder - it seems this doesn't work, at least for that file. I suggest investigating in this direction.. Ooops, correction: This was a bug. Explanation here\nhttps://github.com/vuejs-templates/webpack/issues/967\nAlsready fixed now.. Sorry, this won't make it as we will shortly switch to webpack-dev-server ( #964), so it's not a problem anymore.. Hi @dolymood,\ncan you give me a concrete example where it doesn't work with the current setup? I'm not sure I understand the problem, or rather, it would be suprising to find that so far no one reported such a problem with importing stylus files.. Thank you very much, will check it out soon!. That feature isn't even officially documented. Weird.\nBut I don't really see the use - css-loader does that as well, so we don't have to do this in stylus at all.. Thanks, but we are in thge process of switching to webpack-dev-server, so this change won't make it.\nThere will be a config setting for this after the switch though.. Hi @Lanseria \nI assume this was not meant as a Pull request for the original template?\nCan I close this?. Just read the karma documentation:\nBy default, Karma loads all sibling NPM modules which have a name starting with karma-*.. We will switch to webpack-dev-server very soon (#975), so this should not be an issue afterwards.. Thanks. Weird, no idea how that got lost but it's easy to fix :). @grakic I just checked, it's not missing?\n\nBut anyway, I realized that I fixed a specific version which is not necessary, so I will push a small fix.. Hey, thanks for reporting. That may very well. Be the case, it's the dev branch. Some PRe that I merged probably need some refinement, I plan to look into this at the weekend . @Tirke postcss-loader was just added via #1038 and I opened a small PR to fix the sourcemap situation #1039 \nI can't test the PR right now, but you might take it for a spin if you want to :). I think clientLogLevel should be the setting you are looking for.\nI probably should set this to something more reasonable, thanks for the pointer.. Where is that warnign coming from? Webstorm? I would assume that's because Webstorm doesn't understand the webpack alias. Nothing wer can solve on our end.\nIf that is a problem for you, use relative paths instead.. >  I even doesn't see where Uglify comes from in webpack template, I see no related plugins.\nThat would be here\n\nI can't find the answer how to solve it.\n\nYou already commented two different closed issues where solutions were provided. You have to adjust the babel-loader's include paths here so that the source will be transpiled to ES5\n. Babel-loader finds the .babelrc file in that packages folder and tries to use its settings for transpilation, but  that package is not installed because the webapck template uses a different one.\nSidenote: The menu-aim package wasn't the one producing the errror, was it? That package appears to provide an ES5 build (it has a .babelrc file with the es2015 preset, after all...).\nBut: Your OP seems to indicate that vue-particles is the problem, so you should include resolve('node_modules/vue-particles'). As this package has no babel config, you won't have a conflict of  configs like you have with that menu-aim package.\nEdit: I just saw that I already cam across this package before: https://github.com/creotip/vue-particles/issues/7#issuecomment-330031021\nThe best solution would be if the author of the package simply ran npm run build and changed the main file of the package to the built file instead of the source.. Well, then that seems to be a problem of that package - its code isa ppearantly not completely transpiled to ES5, even though it appears it should. . This PR updates much more than just the README and I don't think that was your intention.. Thanks :D :D. > even running \"npm run dev\" again doesnt work.\nI can't image how that could \"not work\" - what does happen when you run it again, it still shows the old content that doesn't exist anymore?. Closing for inactivity from OP.. Thanks!. oh right, good catch. Thanks.. Seems like there was just a download error. Did you try again?. I will close this since it seems to be a problem with your npm connection/mirror, not this template.. I can't help you with that, because I can't reproduce the issue.\nAnd the issue seems to be with the npm mirror (taobao) you are using - it's returning incomplete files.\nIf that's true, they have to fix their files, we can't do anything about this.. Thanks!. Hi, and thanks for the PR.\nCould you explain in more detail what this is fixing, exactly? \n\nWhat is happens without this fix?\nHow does the fix work - is this flag set by default and this overwrites this default?. Closing this since I have no idea what it does or solves.. The main point is that Vue-Router in history mode requires absolute paths to work properly.. > but since I build this project with npm and webpack.config.js is no where to be found\n\nThe webpack config for this template is a bit more complicated than those you encounter in examples, because we cover a lot of features. For this reason, it's spread across more than one file, and those files live in the /build directory.\nThe file you want to edit is named webpack.base.conf.js. In this file, you will find the resolve: alias section that the website is describing. Simply add the described aliased there.\nThen run npm run dev when the description says \"run webpack\". that command will run a development server for this template, which in turn does run webpack for you, so everything should work just fine.\nSidenote: I can only strongly suggest you start reading up on webpack, they have really great documentation by now: webpack.js.org. Hm, that generally happens when comments are stripped, usually but babel. \nWe had a \"comments: false\" setting in .babelrc for a long time(before webpack introduced this feature) which stripped comments from transpiled code and consequently broke this webpack feature.\nBut I removed this from the template back on June 22nd (https://github.com/vuejs-templates/webpack/commit/8563cdb8d8d1e4abaef64f7695697b70957b9490), so that should work, assuming you created your project after this date. \nCould you verify that your .babelrc does not contain this setting?\nEdit: Oh, I see you submitted a PR that changes something else. Nice, will check it out!. Thanks for the PR, will merge it as soon as I found time to take it for a quick spin. . Thanks!. > Are you serious?\nI've seen countless projects that use build to actually \"build\" a the project, because, well - that's what the command does, it builds your project, it doesn't run a \"prod\" server or anything (while the dev command runs the \"dev-server\").\nSo yes, we are serious. :). Sidenote: did a short search on Github:\n\n\"npm run prod\" : 7k results.\n\"npm run build\": 403k results.. Can I ask why you are so upset about the name of a command?. Okay, I'll bite since I have some time to kill.\n\n\nBecause the code is manipulation of names. What, besides the names, contains your code?\n\nI'm not entirely sure I understand what you mean - In case you mean \"names in programming are important, it's what transports the meaning of the code we write\", I completely agree. But these things are often subjective, and there are trade-offs to be considered. Of course they can and should be discussed - constructively.\nOpening a PR with \"Are you serious? I'm sure it MUST be: ....\" basically suggests that we did something obviously stupid, which is not the best way to start a productive conversation with anyone.\nMy reply to this was meant to show you that using npm run build is very, very common in javascript projects, so it can't be something obviously stupid -rather, we can assume that most people familiar with javascript projects already have a good intuition about what it does.\nPeople who are not familiar with npm commands can read the templates documentation to learn quick and clearly about what each command does - that provides a better learning curve than any command name could on it's own, I think. Apart from that, this is advertised as a template for advanced users, not beginners.\n\nWhat if I want to build dev version of a project?\nOr dev version is not building, but constructing or scaffolding?\n\nWell, of course we can have a constructive discussion about which name is probably more or less meaningful to someone at face value. But can quickly end up in endless bikeshedding.\nExample\nYour proposal was to change it to npm run prod - But since npm run dev runs a dev-server, would the user not assume that this also runs a server, but in prouction mode?\nSo we could rename both commands:\n npm run start-dev-server\n npm run build-for-production\nThat's more meaningfull, right? that's communicating very clearly what each command does.\nBut now people will complain about these commands being much too long to type them over and over. See where it goes?\nThe Point\nSo, don't get me wrong: Command names can be discussed and optimized, for sure. But that should be done in a civil manner and with a better argument than \"I am sure it MUST be:\", because there's not an obviously, objectively correct way to do it.\nThe current commands are commonly used commands in the npm ecosystem and are also well documented, so I don't see that your PR had a good argument to change them. Hence, I closed it.\n. The dev server process builds the files in memory, so as far as the developer is concerned? The result of this process is only accessible though the dev server. \nThe build process on the other hand actually produces a tangible output on the /dist folder. \nSo the result of the two are very different, not just the environment flag differs. \nBTW we are now essentially bike's herding about the exact same things I mentioned in my \"example\" above... \ud83d\ude37 . config/dev.env.js & prod.env.js. You should not create  a DefinePlugin instance yourself, the template does that for you. All you have to do is define the name and content of the variable, just like the template shows you for the already existing NODE_ENV variable:\njavascript\n'use strict'\nmodule.exports = {\n  NODE_ENV: '\"production\"',\n  API_URL: JSON.stringify('http://192.168.1.10:8081')\n}. you have toaccess it as process.env.API_URL\nSee also: http://vuejs-templates.github.io/webpack/env.html. (close/reopen to trigger CI). That makes sense, but I'm unsure in which place to keep it. It might fit better in babelrc, but I think I remeber that the browserList field in package.json can be used by other tools? Do you know anything about that?. Thanks. Will merge this tonight when I do some cleanup. . Thanks!. Vue-loader uses buble under the hood to get rid of the with this { ... } code that the template compiler produces.\nYou probably have to set the objectAssign option for buble in the vue-loader config as shown here:\nhttps://vue-loader.vuejs.org/en/options.html#buble\nNote that, as mentioned in that link, you still have to provide a polyfill for Object.assign to support older browsers (IE). You also Set stripWith: false which you certainly should not do. . I don't have a concrete use case for that. It's basically a fallback to the behaviour vue-loader had before webpack 2 came along and all es modules were in strict mode by default. ou probably will never have a use for this option.. What did you do before npm install?\nIt seems you did not install this template  through vue-cli, but instead just cloned the repository or something?\nIn  that case, the template placeholders we use in the template during the installation process with vue-cli will till be there.. Closing for inactivity, and no appearant relevance as a bug.. Hi, and thanks for this PR.\nUnfortunately I don't think we want to focus on that right now. We also attempt to keep this template backward compatible to at least Node 6, which still didn't fully support ES6\nbabel-register allows to get around that, but it slows the process down, so it's not really an improvement from my POV.. What exactly does this do? \"nicer integration\" doesn't say much. I started writing changelogs so it might be helpful to mention what this actually helps with.. Thanks, that's clearer.\nWell, this template doesn't assume people are using a spoecific editor or editor-plugin. IF people do, it's their responsibility to decide what do use and how to make it work.\nSo I would say that I don't think adding the standard package makes too much sense, since using both this and eslint would be uncesessary, would you agree?. Sorry, but that won't happen, this is far too much work for little gain. simply change the desired indentation in eslint and run eslint --fix or something.. I'm not sure if we can consider this plugin production-ready yet. Last time I checked this was still in the early stages, but admittedly that was some time ago.. I doubt that the issue tracker is the right place for questions about Atom configs, but maybe someone can help out.. Closing for inactivity . Thanks, but since this browser is sill in beta, I don't think we will investigate this, especially since it seems to be related to webpack's core HMR functionality, not Vue-specific implementations.\nIf you want to have this tracked, maybe open an issue in the webpack HMR repository. I'd like to merge this, but for that we would have to include a polyfill for Object.assign() as well.\nI'm not against that, but I have a general re-evaluation on the map about of what kind of polyfills we include, so this will be merged sometime, but might take a small while.\nThanks for your patience.. Thanks, will have a look!. Outdated. Hi!\nI'm sorry that the template is not working for you in wechat, but I have no idea how to help you with just one sentence saying \"not show page\" and a screenshot.\nI don't understand what the problem is and cannot test your code to verify anything.. That seems to be a design (CSS) problem, what does this template have to do with it?. So the CSS is from bootstrap-vue, not this template. Maybe ask there.. We only recently added this meta tag to index.html:\nhtml\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\nWhich you probably need.. I'm not sure I can follow. Does your pahge live at robettmain.github.io/portfolio? If so, the behaviour is expected because the default publicPath is an absolute root path.\nYou \"fixed\" it by changing it to an empty string, which essentially is the same as changing it to './' - a relative path.\nThe other solution would be to use change it to /portfolio.\nSo why do we start with an absolute path to begin with? Because many, many apps use vue-Router with history mode, and this mode doesn't play nice with relative assets paths.\nBut since history mode doesn't work on github pages anyway, your solution is fine for your usecase, I think.\nSidenote: This doesn't really have anythign to do with the topic of this issue - it's about other assets path problems.. > Oh, it doesn't? Huh. TIL.\nWell, history mode requires some settings on the webserver, which you can't influence o github pages. the normal navigation works, but refrrshing a page will lead to a 404.. thanks. We will  shortly be switching to webpack-dev-server (#975), so we should revisit this issue after that.\nBecause the config we had to comment out as explained in #751 isn't even available anymore after that switch. So we have to see how that reload functionality can be re-introduced (or maybe it just works, I haven't tested that specifically with the new setup yet).. Can someone translate? I don't really see what this is supposed to solve.. Agreed. This won't be merged.. Hey @mgenware \n, so I looked into this, and I don't think that I want to activate this by default. \nReasoning\nWith the current config, CSS from .vue files that are code-splitted will reside in that async chunk and only be loaded when that async chunk is actually loaded.\nThat means that the app.css file will be lighter and only contain the \"basic\" styles, and stuff you load later comes with its own styles.\nSolution\nI think this option can be useful though, and so I would suggest to add it to the templates config like this:\njavscript\n// set the following options to `true` if you want to extract CSS from\n// codesplit chunks into this main css file as well.\n// this will result in *all* of your app's CSS being loaded upfront.\nallChunks: false\nIf you want to make this change to your branch, I will merge this so you get credit for bringing this to our attention.s. Looks like for some reason, you have set the environment-variable NODE_ENV set to production  or testing in your terminal.. Closing for inactivity from OP.. > after \" npm run build \" dist folder is created but all the references for static files was broken\nPlease be more specific. How were they broken? What should they have been instead? how did you test this?\nBecause this usually works for people.. >  i open index.html file\n@akshayvinchurkar1 Have you looked at your terminal when you build for production? It should tell you this:\n\nTip: built files are meant to be served over an HTTP server.\nOpening index.html over file:// won\\'t work.\n\nThe reasons for that is indeed that we use absolute paths by default. And we do that because vue-router's history mode doesn't work with realtive paths. Using that is a common usecase, while using the files directly in a browser is not. \nYou can switch to relative paths by changing assetsRootPath in config/index.js under the build key.. I'm sorry, I would need some runnable code to say anything about this.\nBecause I'm running a fresh install of the template right now, and changed the import of the default Vue logo into a require, and it works nicely:\n\n\n. I can, just have to find one :D\nI doubt that the result will be different because both imports are done with the same loader config.. Tested, works just fine. Your turn :). Thanks for your PR, but we are in the process of dumping the whole devserver setup (#975) - will merge this tonight and release on the WE I think.\nso this won't be of any use, unfortunately.. There's A Regression concerning HMR in Vue 2.5, but a fix is available. \nPlease see this issue: https://github.com/vuejs/vue-loader/issues/1041#issuecomment-342689466\nI will close this issue here because this problem, if it still exists, is with Vue itself, not this template. . 1. You forgot to show how you actually import that file\n2. This might be better asked on the forum @ forum.vuejs.org. Well, what is the language level of the development environment? That depends on the browser you are using, right? So it's not something we can definitely for you either way.\nBut yes, the karma test setup uses phantomjs by default, which doesn't have modern browser features (just like IE)., so features that run fine during development in chrome can fail in phantomjs because you used some ES6 feature that babel could not transpile and that phantomjs doesn't have natively. That can be a good thing if you want to support IE alongside modern browsers - such a failing test means a polyfill is missing.\nIf you want to test in modern browsers instead, replace phantomjs with karma-chrome-launcher.. I agree that better documentation for that would be helpful.. I merged #975 into develop yesterday - so it doesn't exist anymore in that branch, and will be gone in master as well after the weekend - hopefully. . Hm, thanks for testing it out - https://github.com/vuejs/vue-loader/pull/937 might also be of interest, but:\n\n\nEvan's comment doesn't really apply because the current code applies postcss-loader only to the loaders for style files (*.css etc.), not the loaders for <style> blocks in .vue files.\n\n\nWhile the fix in https://github.com/vuejs/vue-loader/pull/937 seems valid to me, it only applies to scenarios where people use <style lang=\"postcss\"> without having explicitly specified a loader for that lang with vue-loader. In our template, we do explicitly define a loader for postcss blocks, and it doesn't include poscss-loader.\n\n\nSeems some digging will be necessary to make this work. A job for the weekend.. @Tirke I found the issue - it was another mistake in the original PR, a strict false comparison even though options.usePostCSS is undefinedwhen creating the loaders for vue-loader. \nThat resulted in postss-loader being included where it shouldn't.\nThe fix I just pushed should solve this.. Good eye, but that's cosmetics. Will add this later.. That's nothing specific to unit tests. The webpack config for babel-loader skips /node_modules in general - because transpiling every package would be a gigantic performance issue. \nSolution: add specific packages' paths to the include option of the babel-loader config. . We have a forum for general Vue questions. \nforum.vuejs.org. As soon as it has left beta stage we will add it. . You have to mount to an actual element. Create one with document.createElement. > what do you mean? I'm mounting the component with $mount()\nYou are mounting, but not to an element:\njavascript\nconst comp = new Constructor({\n  timeFormat: 'hh:mm a'\n}).$mount(document.createElement('DIV'));\n\nalso document wont't exist in that context (my unit test) surely?\n\nOf course it exists, the unit tests run in a browser with the karma runner.. Oh, well you are calling .textContent on the root element of your template which is a <div> and that element doesn't contain any text - it only contains two <span> elements. so there's no textContent.. There's a very basic guide on the main website, and we have a guide specific to our test utility: \nhttp://vue-test-utils.vuejs.org\nHowever this is still confusing as this should simply work as it is. . Obviously :-P. Nope. I could take a look if you could share a repository, but as far as looking at code snippets goes, I got nothing more to contribute.. That component looks a bit different and there's no spec in the unit folder - are you sure this is the latest commit?. You still need $nextTick if I remember correctly. . $children contains child components. Your component doesn't have any child components. . Can'T say more, couldn't test your app so yet.. You're the first to come across it as far as I'm concerned, so i don't know that \"rest of us\".\nOPs reproduction is no longer avaliable, and I never had such issues.\nIf you can provide a clean repository with a minimal reproduction, open a new issue and I am happy to take a look.. Hi and thanks for the PR.\nI remember discussions abotu this rule - however, we do not have this enabled in the old dev-server (which is still public in the master branch, and I agree that activating it by default now is not a good idea.\nSo we should think about if we want to add this to the /config options, or directly into the devserver-config, but commented accordingly and commented out so it's inactive.. Fixed, thanks!. Yep, postloader somehow got lost during a merge of a feature. I just added it in develop and will push an update shortly.. Just did a quick test, works for me. What's your environment? Inside a VM, a dropbox folder or something like that?\nHMR has problems in various environments, in those situations you can maybe help yourself with the poll option:\nhttps://github.com/vuejs-templates/webpack/blob/develop/template/config/index.js#L21\n. Closing since I doubt this is a problem of the template. If you can provide a reproduction of the issue, I'm happy to re-open.. * no VM?\n no dropbox or other service/tool \"watching\" the folder the project is in?\n special characters in the path? Webpack used to not like those as well ...\nOther than that I don't really have any ideas.. > I think what may have thrown me off is that it is no longer automatically launching a browser.\nThat has nothing to do with Hot Reloading.\nYou can turn this behaviour on again in /config/index.js. >  No hot reload... Sorry reload stopped working.\nI don't understand what exactly stopped working now.. The good old \"have you tried turning it off and on again?\" - never gets out of fashion :). it is, for the notification feature:\nhttps://github.com/vuejs-templates/webpack/blob/develop/template/build/utils.js#L96. Please open a new issue and provide more information  . I will test this specific case when I get home\nThe normal installation works well for me, just tested a could of hours ago for #1054, and HMR works fine for me.\nUntil then: \n can you provide me with details aboiut your environment? Virtual Machines? synced folders  (google drive etc.)?\n Does the poll option fix this for you?. Seems I have to push some changes from dev..... That usually works, it has been the default setting forever, and worked in all of our tests.\nThere must be something specific to your situation, so I don't see a need to change the default.. @eddyerburgh Got an idea?. > but for App.vue not quite...\nAp.vue is doesn'T have any tests, insofar the 0% are correct. However he lines numbers are off, which we will have to fix in vue-jest I assume, right @eddyerburgh ?\nWe should also create a PR for this template to use @akryum's config for windows compatibility.. Awesome, thanks :). Done in deb97b1c42b76aacd05628dc2c222fe7bf7f3761. Hm, you're right. Honestly - no idea where this is coming from :(. Ah, got it. the FriendlyErrorsPlugin is added twice. :D. you can easily change the host in /config/index.js.. Hm, that's very weird. Inside .vue file or inside a .scss file?\nI don't really understand why because SCSS is supposed to take care of those imports so it should be \"gone\" by the time postcss is taking care of the result.\n\nSass builds on top of the current CSS @import but instead of requiring an HTTP request, Sass will take the file that you want to import and combine it with the file you're importing into so you can serve a single CSS file to the web browser.\n\ncan you provide a repo to clone quickly?. Thanks. Will take a look in a few hours, will be on the road until then.. So, I could verify the behaviour, and could also verify that removing the tilde makes it work:\nsass\n@import 'flatpickr/dist/flatpickr.css'\nBut that is not a real solution because people used to sass-loader expect the code to work with the tilde.\nUnfortunately, I'm a bit baffled why postcss-loader even processes this import. sass-loader is supposed to do that, itsn't it?\nBtw, it has nothing to do with vue-loader, as it also happens when loading the file in main.js instead of App.vue.. Note: postcss-import doesn't respect the ~ which loaders, like css-loader or sass-loader use to \"mark\" module imports. That explains reason for the error, at least.\nAs to why postcss-loader is called in the first place: I think sass-loaer hands off loading the .css-file to the loader-config for that file type - which uses postcss-loader. I still don't find it logical that postcss-import is executed in that step (rather than on @imports inside of a .css file only), but that sems to be what happens.\nSo the easy way out would be to simply say: 'don't use tildes when importing .css, but use it for .sass and other preprocessor files', but that won't really be an acceptable solution, we'll have to figure out something else.. No, I don't think that would be promising. I read a couple of issues around this question, and it seems this is the \"postcss\" way of handling imports. \nI will probably attempt use use css-loader's importLoaders option to let css-loader handle the imports, but then still need a solution for vue-loader which applies postcss without postcss-loader, so this option is not on the table. \nMaybe we even need a fix in vur-loader itself. . @jarrodldavis thanks for this. \nWhile I don't think the first point is entirely valid/important (I also reproduced it with an import inmain.js, the second point was the missing piece for me. \nThe behaviour makes much more sense now, thanks. \nI will still try and improve this behaviour, but now I understand what's going on and that it's \"expected\".. Webpack does not process paths of <link> elements in index.html.. It seems you have an old version of that package installed, which tried to get that an from an url that doesn't exist anymore. \nTry npm ls caniuse-db to find out which package's depebdency it is, and upgrade those to their latest versions. . Two things come to mind:\n\nlockfiles: if you still have a package-lock.json or yarn.lock (or whatever it's called) in your project root, that might force the install of an older, out-of-date package with the old url ...\nare you using yarn? Yarn caches packages locally for a while, while npm doesn't, by defaul.\n\nOther than that, no idea at the moment.. Simply set your host to 0.0.0.0. Well that would make your machine Ccessible from outside by default, which I don't feel as a secure default. . I don't understand. What does index.hyml have to do with it, or the comment in that code? . Okay, saw the PR and understand the issue now. Thanks!. merged. Thanks. I will test this locally tonight and then approve & merge.. See #1074 - I think we get Jest running on windows after all :). It seems the new setup will work, I'll close this for now. We can still revert if we come across other problems.. I think there should still be a jest config in package.json, right? that would have to go.. closed in a37bcbb8d0455611e0e16aecccd6f2c9b7f51090. I'm not sure what you mean by \"where to build a serve\".\nIf you want to know how to start a developement server, the command is stil the same as before:\nnpm run dev\nIf that's not what you are asking, you will have to clarify.. See the last section on this page of the docs:\nhttp://vuejs-templates.github.io/webpack/static.html\nhtml\n<img src=\"/static/yourimage.png\". At first, I was abit perplexed, but a quick trial and error showed me that's not so much a problem with \"the\" (postcss-) Autoprefixer (which adds the prefixes), as it is with optimize-css-assets-webpack-plugin, which in turn uses cssnano to minify css, whih removes prefixes based on the browsersupport defined in package.json's browsersList field.\nhttp://cssnano.co/optimisations/autoprefixer/\nWhy exactly does that happen, and which one is right (the autoprexier adding it initially, or cssnano stripping it again afterwards)?\nWhen I look up linear-gradient on caniuse.com, it states that it's supported in all browsers, so there's no need for this prefix at all:\nhttps://caniuse.com/#search=linear-gradient\nHowever When I run your example in my Chrome browser, the background really doesn't show up, and devtools tells me that linear-gradient(left, red, blue) is an invalid property value.\nSo I went to MDN, which made me aware that this comes down to a simply syntax problem:\n\n[the first argument] consists of the word to and up to two keywords: one indicates the horizontal side (left or right), and the other the vertical side (top or bottom). The order of the side keywords does not matter. If unspecified, it defaults to to bottom.\n\nIn other words: your CSS syntax was simply invalid, but that problem was masked by the autoprefixer who turned you invalid CSS into a valid prefixed counterpart.\n\nscss\n// wrong\nbackground-image: linear-gradient(left, red, blue);\n// right\nbackground-image: linear-gradient(to left, red, blue);\n\n\n. I can't reproduce this, no idea how this happens for you.. whats your version of vue-cli?. Oh right, sorry. Still can't reproduce this, though - those helpers are pre-registered in vue-cli, they don't even come from this template:\nhttps://github.com/vuejs/vue-cli#pre-registered-handlebars-helpers\n. Closing as I can't reproduce, and if it's a bug, it's with vue.cli, not this template.. The wording on that page is confusing - we don' need babel-runtime because we transpile our code during build, we don't run babel in production (that would be crazy).. When you set the assetsRootPath in the /config/index.js file to a relative path (./) it should work.\nNote that in this case, vue-router's history mode won't work.. Thanks. Strange, I could swear they already fixed this. It also says so in their README:\n\nBy default, @babel/preset-env will use browserslist config sources [which are:]\n1. Tool options. For example browsers option in Autoprefixer.\n2. BROWSERSLIST environment variable.\n3. browserslist config file in current or parent directories.\n4. browserslistrc config file in current or parent directories.\n5. browserslist key in package.json file in current or parent directories.\n6. If the above methods did not produce a valid result Browserslist will use defaults: > 1%, last 2 versions, Firefox ESR.\n\nand there's no open issue about this that I can find.. Hm, that's really inconvenient. We need browserslist in package.json for autoprefixer, for example. \nSo the middle ground would probably be to import it into babelrc, so we only have to manage it in one place. \nWould you adjust the PR in that regard? . Ah damn, babelrc is json, not js.... . Hm, I'm a bit torn. But I think this could be advantagous.\nOnce we have a babelrc.js (even with this \"hack\" for the time being, until babel v7), we could actually comment the babel config and give some hints about what do do to e.g. add polyfills or whatever.\nSo yeah, let's actually do this.. Yes, the added complexity is sub-optimal.\nHaving two places to edit broswerslist in is sub-optimal as well, especially if we can't add comments in neither of the two places since both are JSON. \nSo I'd say it's a trade-off that's worth it. We just have to Mae sure to make it worth to the users by offering a well commented babelrc.js. @sudo-suhas So I've checked this out and I'm sorry to say that I think I've changed my mind again :(\nI'm a fraid that the new format of the babelrc.js file with the conditional return depending on environment will lead to a lot of confusion for people not familiar with the reasons we did it.\nSo I guess we will have to bite the bullet and revert to having the browserslist in both package.json and .babelrc, and make a note in the docs to make people aware that they have to make changes to browserlist in two places until Babel 7 has landed.\nWould you agree?. > Okay, removing a commit is easy enough. Where do you think I should update the docs?\n@sudo-suhas Let's revert the code first and worry about docs in a second step - we currently don't have a section dealing with the Babel setup at all, so I don't think there's a good place to drop in a quick tipp for the user.\nMaybe in the generated project README?. (close-reopen to trigger CI). npm run dev starts a development server on localhost:8080, and this server directly builds and serves your files in memory. That means no files are created.\nThe script tags for index.html are also automatically inserted etc., so there's nothing you have to do at all. Just run the dev script and visit the URL your command line tells you.. You might want to change the hostr from localhost to 0.0.0.0 in /config/index so it's reachable from outside.\nI don't work with Homestead of Vagrant and don't knopw how they expose their network interface, but I would assume you have ot find out that box's IP and access the server through that.. That would be dangerous in the sense that it could screw up thrird party code that also requires from a /src` folder local to that package. Might be an edge case, but would be a hard-to-trace bug if it happens.\nI think these Mappings should generally only be used for mocks (Style files etc) or to mirror the aliases you defined for webpack.. Closing for inactivity from OP.. 1. You are using the develop branch, I hope you are aware that this branch is not to be considered stable.\n2. I'm not aware of such an issue. The example component HelloWorld.vue uses ES6 exports / imports as well, and tests run fine. \nI would need to see a respository reproducing this.. Can't reproduce. This is your develop reproduction:\n\nThis is from the Jest docs:\n\nNote: If you are using a more complicated Babel configuration, using Babel's env option, keep in mind that Jest will automatically define NODE_ENV as test. It will not use development section like Babel does by default when no NODE_ENV is set.\n\nSo: \n\nJest will set NODE_ENV to 'test'\nBabel will set BABEL_ENV = NODE_ENV since we did not define it\nBABEL_ENV === 'test'\n\n=> Tests run fine\nYou should verify that your shell doesn't have a permanent value set for BABEL_ENV accidentally.\nTry running printenv | grep BABEL in your terminal.. The config file still contains all of the options mentioned, it just received a few additional ones in recent updates. Yes, we have to add those to the docs, but the additional options don't keep you from following the advice on that page.\nI will leave this open as a question for a few days in case some of the visitors can contribute something, but you will probably be better of asking people on forum.vuejs.org or chat.vuejs.org. > I'll wait then for the doc update. \nJust to be clear: That update won't help you much with your task - the new options I added and will document are just convenience stuff for how the development server works. All of them are totally irrelevant with regards to integrating with another backend like WP REST.. * What means \"don't work\"? What error?\n* How exactly did you try to use the polyfill?\nYou don't have to \"polyfill vendors.[hash].js\" - polyfills are applied globally.\nUsually, you just have to add this at the very top of main.js\n```javascript\nimport 'es6-promise/auto'\n```. Thanks!. Makes sense to me in general.. Thanks!. Thanks. that doesn't seem to be a problem withdynamic-import(which is concerned withimport()functions) - it rather seems that ES6 modules weren't transformed to commonjs, which would have been the job of thetransform-es2015-modules-commonjs` plugin.\nThat works for me on OSX, but I'm not sure this is a windows problem - this build was tested by @Akryum on windows as well.\nCould you check out what process.env.NODE_ENV and process.env.BABEL_ENVare set to for you? for that, console.log them in/test/unit/setup.js` (and comment out the import statement so that it won't interefere befor the console had a chance to log).\nI would assume that your BABEL_ENV is not set correctly.. No, babelrc is fine. The problem is that NODE_ENV is dev.\nYou see, normally it goes like this:\n\nJest by defaults sets process.env.NODE_ENV to test, if it's not already set(!)\nif BABEL_ENV is not set, babel falls back to the value of NODE_ENV, so now BABEL_ENV is also dev\nAs the .babelrc config relies on BABEL_ENV to be test so that the correct env configuration is  applied.\nIf you don't mess with any of these env variables at all, everything should work just fine, because BABEL_ENV will be test, like we want it to.\nbut with your setup, it ends up as dev for reasons I don't know, which means babel doesn't convert ES6 imports to commonjs.\n\nSo long story short: \n NODE_ENV should be set to test or not set at all, or, \n if you need NODE_ENV to be dev, then BABEL_ENV should be set to test by you manually.. https://forum.vuejs.org/c/chinese. Have any of you tried the poll option in /config/index.js?. Thanks! That should be fixable on our side.. Wow, I just realized webpack-dev-server seems to use portfinder internally already. That's not really documented... I'll have to test this.\nIf it really looks for free ports on its own already, that means we can remove our extra implementation of portfinder i guess, but that's independent of fixing this bug.. This seems to be an accidental PR, closing..... Hi @joltmode , thanks for this report, this should indeed be easy to fix.\nA PR would be welcome if you are up for it :). Yeah, that's the point - we won't expose the dev-server to the whole network by default, that's for the developer to decide.\nWhat I would accept and merge would be a comment in the config file mentioning that 0.0.0.0 is required for outside access of the dev-server.. Thanks!. That should not be necessary unless you set NODE_ENV to something else besides test - otherwise, Jest will set it to test, and babel will fall back to that value in absence of BABEL_ENV.\nWhat was your setup before?. Maybe we can / should explicitly set BABEL_ENV in test/unit/setup.js. It seems this was a unique problem of OP, . Please provide  way to reproduce this for us, I can't tell what you did to get this error.\nFor starters: Where is this font file saved, relative to the .vue file?. Thanks. It seems that makes sense indeed. If someone wants to do a PR:\n\nextend .postcssrc.js like OP showed\nadd postcss-url to package.json. Becareful\u00f6 not to put it inside a conditional block. That's included now . Is this supposed to be a feature request or how should I label this? :). This also has nothing to do with the proposed feature of this issue. Please stop posting comments to issues that have nothing to do with the original topic. . I'll close this for inactivity. I don't think we will add this to the standard . that will be fixed with #1083 . We can't order dependencies because we have to conditionally add dependencies with a templating language, depending on the answers the developer gave when creating his project.\n\nWe should fix the empty lines, though.. empty line fixed with https://github.com/vuejs-templates/webpack/commit/01a4b646dd4fd92605368070acc23e16e30c5714. You are right that its possible technically, of course. \nMore conditionals are out of the questions for reasons of maintainability / readability. \nBut a sorting function would be possible. I would welcome a PR that introduces such a function. Just be aware that we can't use third-party packages (without hackery) during project generation since vue-cli doesn't run a npm install (and I don't think we want it to). . Thanks for posting this. I have a few questions:\n\nWhat CSS is duplicated? CSS from code-split .vue files is not added to the main app.css file that gets extracted - at least that's how it's supposed to work. Are you sure it's duplicated?\nThe production build generates sourcemaps. I'm not sure weither they should be included in the code-split bundle (to put it another way: if webpack simply behaves this way with sourcemaps for codesplit bundles), and if not, we can do anything about this from within this template (read: this would probably have to be fixed in vue-loader\n\nI'll take as soon as I find some time to really dig into this.. Okay, so I've taken a look. \nMy observations\n\nCSS itself is not \"duplicated\" - css in a codesplit component only lives in the component, not in the main app.css file.\nHowever, CSS Sourcemaps are \"duplicated\" - the codesplit chunk (e.g. 0.js) contains the CSS sourcemap for that chunk's CSS, and the map file for the code split chunk (e.g. 0.js.map) contains it as well. Not good. \nincluding the sourcemap in the chunk is bad for file-size, so we should get it out of there somehow.\nAnd finally: this also happens for \"normal\" .js files that are codesplitted and import a normal .css file - in other words: webpack / style-loader does this, not Vue or vue-loader.\n\nPossible short-term fixes:\n\ndisabling sourcemaps for production in /config/index.js.\nSetting allChunks: true in ExtractCSS extracts all css into app.css, even the CSS in codesplit bundles - this also extracts the sourcemap. But that might also be undesirable because I think by default, we do want the CSS to be in the codesplit bundle, but ideally, want the sourcemap for the CSS to be in a separate file.\n\nThe end goal:\n\nKeep the CSS in the codesplit chunk\nGet the source-map out of the codesplit chunk\n\n..however, I have no idea if that's actually possible with the current webpack tools we have.\nWill investigate further.\nWebpack Experts' help welcome\nThis seems to be a tricky one, so if someone out there has a good trick up their sleeve that they can share, please comment / send PR!. @vuejs-templates/collaborators take a look if you can.. @CharlesKumar Yes, this option allows to select a sourcemap, and we can also disable it there.\nBut as I said abov, disabling sourcemaps in production is not a real solution to the problem we are discussing, it's a quick workaround at best.. @chrisvfritz not on its own. While it extracts css from code split chunks into individual css files (and with them possibly the sourcemaps), it leaves the chunk without runtime code to load that css. \nIt seems to be meant in SSR scenarios specifically. \nI have hit up Sean on Twitter? hoping he has a pointer for us. . Sorry, but that will only compress results, it won't remove the duplicated source maps . Well it's not really duplicated. One is the \"real\" css, one is the source css for the source map, so it's not really used as css during runtime. Still it doesn't belong there of course. . After some discusssion with @chrisvfritz I think we should switch to allChunks: true as the default setting for the ExtractTextPlugin.\nOpinions?. That'sa safari being a dick, and it won't happen anymore since we switched to webpack-dev-server with v1.2.0. See https://github.com/vuejs/vue-cli/issues/263. Hi, and thanks for your suggestions tryon to improve this template.\n\n\nWebpack's tree-shaking is not dependent on any setting that I'm aware of. It's \"always on\", and we do use Es6 static imports.\n\n\nNo, we don't use --optimize-minimize, because it has not use for us. As the webpack docs explain, this flag adds the UglifJS-Plugin, and we already add that ourselves in the production config manually, and with additional options.\n\n\n\nNote that the --optimize-minimize flag can be used to insert the UglifyJsPlugin as well.\n\nIt's not some additional option we can use, we already do what we can here.\n\nbabel-minify with several presets helps this process with lot of options\n\nYes, babel-minify would be an alternative, but at the time of this writing it's considerabley slower than UglifyJS.\nWe however mention it as an alternative in the config. We haven't added it initially because the default setup of this template aims to compile to ES5 anyway, and when doing that, Uglify is as good in terms of minification and much faster - at least that's my latest information, feel free to correct me :)\nBabel-minify doesn't do tree-shaking either.\n\n(see also webpack-closure-compiler)\n\nI don't think that the closure-compiler would be a good addition to this template - closure is a whole other beast of its own.\n\nThe above link has benchmark data (for react.js) with uglify, closure-compiler, betternut, closure-compiler-js and babel-minify\n\nIn those benchmarks, Uglify pretty much \"wins\" each of them, so I think we are good in that regard :)\n\nmany be this enhancement solve this issue\n\nI don't think so - this is not a problem of tree-shaking or minification.. As far as I understand it, the only advantage concerning tree-shaking that babel-minify has is that it can also tree-shake unused classes. \nBut that only works if we don't transpile es6 classes to es5, which we don't want for our default setup. . I think this can be closed for now, we recently switched to the new uglify plugin which also can compress es6.. Seems to solve issues with reltive paths in CSS libs as well, so we need this (see #1199). The correct syntax would be:\njavascript\nthis.$set(this.$data, 'products', dummy)\nBut since products is already a reactive property, that's not necessary at all:\njavascript\nthis.products = dummy. This is not a support forum, please join us at forum.vuejs.org or chat.vuejs.org - we are happy to help there.\nThank you :). ...for what? linting? running tests?. I don't have a nice idea of how to integrate this in a way that offers actual advantage without forcing it on users. Another question in the questionnaire at the beginning is not a good idea, the feature is too \"small\" to justify another question.\nSo I will close this. If someone comes up with a nice concept, open an new issue or send a PR.. Awesome work, thanks!. How does this compare to babel-minify? Any experience with both? . Thanks. What would be the advantage of this? . > there is no question of why this dependence is necessary.\nThen maybe I'm stupid. Enlighten me. \nEdit: ah, got it. I was actually being stupid. . Fixed the merge conflict created by #1118 . Can you be a  bit more precise?\n\nWhich project setup (answers)?\nWhat safari version?\nAny console errors? What does the HTML look like?\n...?. I don't own an iOS device, so I can't debug this, sorry. . Closing for inactivity.. Thanks. the source is uglified, but we also build sourcemaps by default, and you sem to serve those as well. Those sourcemaps are resp\u00fconsible what you are seeing.\n\nSimply don't serve the *.map files  or deactivate sourcemapping for the production build in  /config/index.js. Wow, good find!\nWill check this out this weekend.. @chrisvfritz This would probably also be relevant for the docs.. Hi @chris-schmitz \nThanks for the submission. I see the use this hase for you, but I think that it's not enough to create a new \"syntax\" around resolve. \nThe current resolve is pretty self-explanatory - your version will stump beginners and make them wonder where this is needed.\nSo I don't think we will add this.. Thanks for reporting this. We already fixed this in the develop branch (#1103)\nIt will be published shortly. . I have no idea, and don'T know this browser or how to debug this.\nSince no one seems to answer here, try asking on forum.vuejs.org // chat.vuejs.org. Thanks, but that's not necessary.  vue-loader runs everything through postcss anyway.\nThat's why that option is there in the first place: so we add postcss-loader only for the style-loaders for .css files etc, and not for .vue. You are misunderstanding what I wrote: \nAll css is run through postcss inside of vue-loader. Always. Without any config necessary. \nIt's in the docs, just take a look. . Hey @Toilal \nThanks for the PR. a quick question: host 0.0.0.0 is enough to access from within the same network, right? Like from a mobile phone in my Wifi. Or would that also require this additional option?. Thanks, understood.. (close and re-open to trigger CI). Very good point, thanks. We could change the last question to be a choice:\n\nInstall dependencies for you now (recommended)?\no Yes, use npm\no Yes, use Yarn\no No, I'll do that myself.. Hm, and am bus able stack trace. Dammit :D. Hm, I see you created the project in place instead of defining a sub directory name.  I haven't tested that one tbh. \n\nLet's hope it's related to this and not windows. . :(. I can't give you much. It seems the spawn() of the child process in /utils/index.js fails, but I'm not very familiar with that API. Maybe a problem with the cwd? Maybe we have to specify another type of shell on windows systems because now it uses one where yarn & npm are not in the path? . > btw.. Instead of manually wrapping spawn in a promise, why not use execa? It would handle a lot of edge cases as well.\nBecause that would mean that we have to \n first run an npm install in the temp dirctory where the template was downloaded to, to install execa (otherwise we install in the cwd which probably is undesirable)\n but I don't know if we can reliably know this direcory in the first place.\n say we do, then we can require  exceca from this directory \n and finally we can run npm again in the created proejct folder to install the project dependencies.\nA lot of hoops to jump through for convenience - I would only attempt this if it really was necessary to handle edge cases without excessive boilerplate code.\n\nAre you planning to drop support for node 4?\n\nI would like to, and vue-cli's latest version doesn't support it anymore anyways.\n. Not all need them, but there could be a flag to enable/disable it in meta.json - so yeah, that could make sense.... I would still like to add it to the template first, and then integrate it in vue-cli.\nRelease cycles for he cli are longer, and I can always deactivate it in this tempate quickly once the feature has been integrated into the template.\nthis way, older cli versions can benefit from it as well.... Duplicate of #618 . That's correct, good catch, thanks.. I activated that option - can you push a commit to trigger it?. 1. Why would you build on heroku?\n2. What command did you run on heroku? did you by any chance do this, or something similar?\nNODE_ENV=production npm run dev\n(maybe NODE_ENV=production is set in the environment on heroku by default? I don't use it so don't know)\nThat would start a dev server with a development configuration that breaks because the development config won't work with NODE_ENV=production\nAnd running the dev server on heroku doesn't make any sense anyway.. I can't reproduce this (I'm on OS X though).\nDoes the error tell you where that syntax error is happening?. Hm, that's a weird choice by the maintainers. \nI think we should add this workaround to the template. \nThanks for getting to the bottom of this. . I just pushed that fix to the develop branch, anyone interested can test it out with \nvue init webpack#develop. work fine for me ... you will have to provide more information.\n\n\n. No, I moved it to the static folder.  if it were in the assets folder and handled by webpack, it would also be under static/img, not static/. Hard to say without seeing your actual setup. Your description can't replace that. . Hm, that's weird. I'll have to check out if this is somethign webpack-dev-server does on purpose ... we haven't specified anything particular about what to serve, webpack-dev-server just does this on its own from the root directory.. thanks for the reminder.\nI just did the following:\n\ncreate a new project\nadd a file called test.js in the /static folder. it looks like this:\njavascript\nconsole.log('This was a successful test!')\nadd a script element to import this in index.html\n```html\n<!DOCTYPE html>\n\n\n\n\n\ntest-static\n\n\n\n\n built files will be auto injected \n\n\n```\n....and it works:\n\nSo it works just like expected. \nI will stop researching this unless you can provide a repository that demonstrates the problem with runnable code. And please don't share a whole project that you worked on - just the bare minimum to demo it.\nOtherwise, I will close this issue since a reproduction of your problem is not possible.. Thanks for the analysis. I came to similar conclusions when researching #1176. That issue is probably more related to your problem. \nThis issue here, according to OP, has an assetPublicPath of '/' which should be fine. \nI'm still researching horny invest tackle this with webpack-dev-server. If you have any ideas, please share them (in #1176). I will close this since there's still no reproduction available And I can't see what's supposed to be wrong.\n@goowikns Please open a new issue pointing to this one if you can create a repository that actually reproduces the issue. Hello @jaisrid81 \nThank your for your interest in this project.\nHowever, your issue is a usage/support question, and the issue tracker is reserved exclusively for bug reports and feature requests (as outlined in our Contributing Guide).\nWe encourage you to ask it on the forum  , Stack Overflow or on our Discord chat and are happy to help you out there.\n\nSpecifically, this repository is about the webpack template - you don't use the webpack template, so this issue is not relevant to this repository.. Sure, once it's released as a stable version we will add it asap. . This is not a problem with this template, but with vue-cli (and possibly your connection).. Should be doable. . Hard to say anythign as you don't share the project, or at least the code, its location within the project and where you try to include it.\nI don't see how babel could be the issue since in this template, it doesn't even transpile import - webpack does that itself.\nPlease consider asking questions in proper places like forum.vuejs.org // chat.vuejs.org. Closing for inactivity from OP.. that would probably an issue to report at https://github.com/eddyerburgh/vue-jest - since it only seems to affect .vue files. Otherwise, this is a jest-specific qustion and not related to the template itself.\n/ping @eddyerburgh \nEdit: With mapCoverage:false, the user.js file isn't in the list, with true it is - so just the other way around...\n. @eddyerburgh Please link the new issue here and close this one ok? thanks. See #1022. Remove all of the CommonsChunk Plugin instances in /build/webpack.prod.conf.js. If you find a way to create nice way to integrate a button or something in a way that doesn't look like it's there just for the test, sure!. Hm. I'm not on High Sierra yet, and can't reproduce anything like this on my MBPro .... Closing this since this is not reproducible for me, and I have no Idea what we can do about this,\nIf somone can provide further useful input, feel free to comment or open a new issue.. This is a complete app, basically. We won't debug this here.\nPlease use our forum on forum.vuejs.org or chat.vuejs.org. On what kind of errors does this happen?\nI tried:\n\na syntax error wiht eslint enabled: shows eslint errors\nas syntax error with eslint disabled: shows error with highlighted code-snippet.\na from path on an import: shows \"module not found ...\" error\n\nPlease provide more information.. \n. > Sorry, I forgot one important thing ! The error is caused by ts-loader (i'm running typescript).\nNot an unimportant detail ^^. Please provide a repository with a reproduction, I won't build one myself.. Thanks. Seems ts-loader is a weird beast. In webpack 1, it even made webpack exit with code 0 on a compile error (https://github.com/TypeStrong/ts-loader/issues/108), so getting errors out of ts-loader seems to not be that easy :-P\nSo I played around a little and found that removing children: false is enough to make the error appear again.\nThe thing is that this alone makes the output quite verbose on a successful build. and since this template is not laid out for typescript yet, I would hesitate to make the output verbose for everyone just to accomodate those who implement typescript into that template on their own.\nSo my suggetion would be the following:\n\nAdd a comment in build.js to tip off people using typescript how to fix it.\nIf /when we make typescript an option for the template, with e.g. #797, we can make this option change depending on wether typescript was added or not.\n\nDoes that sound sensible to you?. Oh, thought I had tested that thoroughly enough. Will take a look, thanks.\n\nBTW, last commits are great\n\nThanks :). @Toilal Try this branch:\nvue init webpack#fix_complete_msg_1157. Will change that. . That would probably require some drastic changes, I think you will be better off asking on the forum or the chat (forum.vuejsorg / chat.vuejs.org) or simply build your SCSS with gulp like you are used to.. Hey, \nI have been working on improving the CI tests for some time, and took a very different approach - one that doesn't rely on bash so windows users can run them too.\nPlease have a look at #1218 . Please explain in what cases that can make tests fail. You change breaks the tests as well ...\nThis is a pretty complicated array of possible setups we have to cater to (with/whithout e2e, with/without unit tests, unit test with jest or with karma...) so it's important to know what you think you are fixing, in order to check which other side effects this might have.\nI don't see what\n\nChanging the BABEL_ENV value from test to testing is supposed to do.\nsetting BABEL_ENV for e2e test is supposed to do. e2e tests runa webpack-dev-server with a production config, so I don't see why a different trnaspilation should be required.. > With those changes, it seems to fix my issue. Don't know why the CI fails, it seems unrelated to those changes.\n\nYou didn't change the BABEL_ENV for jest, and jest sets NODE_ENV to test unless specified otherwise - which in turn is the variable babel falls back to if BABEL_ENV isn't specified either.\n\n{{#if_eq runner \"jest\"}}\n  \"unit\": \"jest --config test/unit/jest.conf.js --coverage\",\n{{/if_eq}}\n\nSo your change breaks tests with jest - but the unit command for jest could be adjusted accordingly to fix this.\nHowever, I would like to learn more about what different config/plugins you needed for vabel in e2e tests. Those tests are starting a webpack-dev-server with a production config, so I don't see what special plugins would be required for babel during e2e tests. After all, the dev-server is supposed to behave just like a production build during the 2e2 tests.\nI'm not saying there can't be anything wrong with the setup we currently have, but we might have to change something else entirely depending on the source of the issues you faced. \n. I will close this PR since it triggered me to work on #1163 which will bring some changes to the area affected by this PR and others.. I started working on this today, as a matter of fact. Will push a WIP PR as soon as I have tested it once, hopefully tonight.\nDoing this cleanly requires some rewiring of the webpack configs and adjusting documentation, so I don't think it will be ready in the coming few days, but won't take weeks either.\nSidenote: previous discussions in #903 . If you mean something like \"config as a dependency\", then That's what vue-cli v3 will bring, but that's still in the concept phase. . Oh, that will be part of the PR I'm working on for this template. \nI think we wording is confusing: we have a /config/index file which mostly has general, environment-independent app settings (and a few things overwriteable by env variables). \nWhat is called \"config\" in your link is what I'm trying to improve, and part of that improvement will be .env file support and definition files for webpack  in /config/environments for any number of deploy environments. . Please see #1163. Have a look at /build/vue.conf.js, there's a call to a utils function which has an extract parameter. \nSet this to true.\nJust be warned that this will seriously slow down rebuilds during development, I can't recommend this. . Will close this for now.. There's no easy upgrade path yet -  we aim to solve this with vur-cli 3.\nFor now, the best way to go depends on the level of customization that you applied to the template. \nOf you hardly changed anything, it's actually quite simple to roll out a fresh install of the template, copy all your source files and tests and replace everything in your original project directory with that. \nJust make sure to adjust anything  you changed in  /config and /build afterwards. . This is not a discussion specific to this template, so please use more appropriate places to discuss this (Stack Overflow, forum.vuejs.org or chat.vuejs.org). So it seems The solution was actually pretty simple - something got lost in a merge/rebase.\n1170 by @sudo-suhas should fix this.\n\n@xiejiamiao\n@KyleLehtinenDev\n@IcedKnight\n@songhongjiang\n@lambdakris\n\ncould any of you run this and test it out?\nvue init webpack#develop. The fix is now available though the normal command as well. . Thanks for testing and reporting back!. Ah, damn - totally didn't notice. Seems I somehow lost this during a merge/trebase indeed.. Damn, it seem #1170 might fix the underlying reason, and it was easy so find. I will close this PR, and push another one rebased on that fix.. Closing this as I think we don't need it after all. . 1. target: 'http://localhost:3000/api',\n2. That's because we have set the historyFallback option of the webpack)dev-server, which is required to make vue-router work in history mode. You can read more about that in the router docs. \nFor further such general questions, I would recommend to visit forum.vuejs.org or chat.vuejs.org. 1. See #1140. Will apply that fix in this template later, asap.\n2. Not for me. Did you try the latest template version?. About 1.: I just pushed that fix to the develop branch, you can test it out with \nvue init webpack#develop. I followed exactly your steps and everything works for me. \n\nThis is a pure webpack question and not specific to this template.\nPlease provide an actual repository where this error is reproducible.\nPost this question to the forum or the chat (forum.vuejs.org / chat.vuejs.org). Easy: you added those options to the DefinePlugin, but as you yourself correctly wrote above, you have to use the ProvidePlugin. . First of all, why are you treating them as static assets instead of letting Webpack handle them by putting them into ./assets? that would prevent the whole problem.\n\nIf that's not possible, we will have to work something out, becaue it seems that webpack-dev-server doesn't apply the publicPath setting to static files (but he does to built files) - that's a pity. \nI will investigate a bit more if that's really the case and what to do about that, but for now we will have to work around that.\nWe can do that by generating the static paths dynamically depending on environment:\n```js\n// /config/dev.env.js\nSTATIC_PATH_PREFIX: '\"/\"' \n// /config/prod.env.js\nSTATIC_PATH_PREFIX: '\"/foo/\"' \nThen add a helper to your app:javascript\nVue.mixin({\n  methods: {\n    $toStaticPath(path = '') {\n      return process.env.STATIC_PATH_PREFIX + path\n    }\n  }\n})\nand use it like this:html\n\n``\n. I see how that could provide a workaround, but it would have to copy to a different location, e.g./public, so that it doesn't mess with/dist` - that would have to be docoumented and explained to users.\nSo thanks, I will fall back to this if I don't find a way to make webpack-dev-server serve the files appropriately.. Oh, I just saw this: https://github.com/webpack-contrib/copy-webpack-plugin#this-doesnt-copy-my-files-with-webpack-dev-server\n\nStarting in version 3.0.0, we stopped using fs to copy files to the filesystem and started depending on webpack's in-memory filesystem:\n\nThat could work after all. Thanks!. Hey, thanks for the feedback, that's very valuable. \nI'll add those fixes when I can. . > this fails to account for using the babel-loader for JS. \nThat would be a pretty stupid mistake to make for us. But it's not a mistake, the config is fine. \nReading the vue-loader docs you will find that babel-loader is used by default for the javaScript in .vue files. \nFrom what you write, it seems your problem is more with eslint and less with Babel? But I haven't really understood it. . Closing for inactivity. IF you can provide further info, feel free to open a fresh issue with that info.. Sidenote: The tests are failing because of memory issues on CircleCI. Maybe needs a workaround, but not relevant to this PR.. Looking forward to it :). @codeofsumit thanks for the feedback, I need to find the time for a longer reply, hopefully before the weekend. . I won't finish this. . I won't put much energy into feature development for this template, since vue-cli 3 is already in RC now, and it doesn't make sense to start new projects with this template in my personal opinion. I would assume that this template won't be useful anymore compared to vue-cli 3 within weeks after vue-cli 3 has officially become stable.\nAnd since there is no clean update path for this template from an old version to a new one, new features have very limited use for existing projects as well - you can switch those over to vue-cli 3 at least as easy, probably.\nI'd be happy to merge changes to this template proviced they are tested solidly (which is not easy!) though, so go ahead if you want to improve this.. Well, the error is pretty clear: each component can only gave or root element. Your has multiple: \n\nthe h1 element\none or more p elements. \n\nSolution: wrap everything in a div or any other suitable element. \nPlease read the docs or ask on forum.vuejs.org for further help - this question is not related to this template. . How do static files interfer with your unit tests?. > There are warning when vue refers files in /static/.\nWhat kind of warnings? I still don't see what warnings would appear in unit tests in these cases.. Closing for inactivity. It want explains what problem this PR solves, so I don't see a reason to merge it. . Not really, no.\nBut it seems the current setup has reached its limit. If you read the error, it says \"out of memory\". I have that error as well with a larger PR: #1178 \nI'm currently checking out how to move the tests to circleci v2, which is much more fficient and faster as far as I have experienced. Until then, you are pretty much on your own, sorry.. I'm closing this since the normal banches do build fine for us, and there's no specific setting you have to use. Nothing we an help you with.. thanks. We,, I would simply insert the bugsnag code here:\nhttps://github.com/vuejs-templates/webpack/blob/develop/template/build/build.js#L34\n..and Netlify allows you to set Environment variables, that should allow you to pass in the api key without comitting it to git.. Have you chosen to let the template install dependencies?\n\nIf yes, then it also should run npm run lint -- --fix for you automatically, which will fix these mistakes\nIf no, then there should have been a note in your console to run this command yourself.\n\nIf one of those things didn't happen, we have a bug. In that case, please open an issue and explain exactly what you did and what happened.\nThe PR will be closed though, since as mentioned, we use --fix to adjust the created code to the different eslint presets after the fact. airbnb and standard have a lot of  incompatible rules, so this can't be \"fixed\" in the source of the template.. I assume this was not meant as a PR to this template?. Will make a quick test run with this to see the behaviour when it fails, then I'll merge. Thanks.. So I just tested this. The problem I'm seeing with this is that the error message generated is not as good as it is without that option, at least in case of a missing module which I used as a test case.\nWith bail: true:\n\nThe error states that a module is missing, but yu don'T really learn in what file that error happened.\nWith the current config:\n\nNow that's much more helpful, isn't it?\nMaybe there's a way to get these kinds of error messages with bail: true as well, but I don't know of any.\nIf you (or someone else) can come up with a solution for that, I'm willing to consider switching to bail: true, but I don't think we should accept inferior error messages for a quicker build cancellation when an error is encountered.. Are you sure? \nI was under The impress up that they get replaced... . Are you using jsx in your projects? \nWill test it tonight as well... . Import it at the top of /src/main.js\n`import '@babel/polyfill'. Can confirm. This logo is only used for the notifications you can get on build errors. . Hi and than a for the suggestion, but I don't think we need another plugin to replace two lines of code. \nIf this plugin offered additional advantages I would reconsider, but I don't see them. . I'm sorry, I don't understand \n\nwhat the title has to do with the text\nwhat kind of error message that is\nhow and when this happens for you.. I'm closing this for inactivity - No one seems to know this error and from the message itself, it sound like less of a problem with this template and more a problem with your node/npm installation and Operating system/file system.. I'm actually working on a bigger PR to support this properly across all features / modes of this template in #1178 \n\nchiayutsaipersonal has already mentioned the important part - using dotenv, I just want to make clear that this only gets you the API key into the node process that's running (i.e. webpack), not into your app.\nSo to get it into your app, you would have to add it to /config/dev.env.js:\n```javascript\nrequire('dotenv').config()\nmodule.exports = {\n  NODE_ENV: '\"development\"',\n  FIREBASE_KEY: JSON.stringify(process.env.FIRBASE_KEY)\n}\n```. I think the changes we have currently under review in #1115 should solve this. could you test it?. Great, will merge this asap.. It's merged, will publish tomorrow. . It seems the plugin was updated and 1.16 should have this fixed:\nhttps://github.com/webpack-contrib/uglifyjs-webpack-plugin/releases/tag/v1.1.6. That quote alone is no reason to not use this plugin. It is meant to work with webpack 3 just as well - it just won't be included into webpack before 4.0.0\nBut maybe we have to temporarily downgrade because of https://github.com/webpack-contrib/uglifyjs-webpack-plugin/issues/197\nI will take a closer look tomorrow afternoon, won't be on a laptop before that.. Note: downgrading the version won't be enough, as plugin options work differenlty for 0.4 and 1.0.0:\nhttps://github.com/vuejs-templates/webpack/pull/1119. I didn't ignore it. I explained to you how I think you misunderstand it.\n\nThat plugin has a 1.0.0 release - that means it's stable. \nThe note only says \"we will include this in the webpack default plugins starting with webpack 4.0.0\". \nIt does not say \"don't use this plugin, it's not ready yet\". Problem was fixed with v1.16 of the plugin, so we can close this. . @sudo-suhas That actually doesn't work for me, I just get this:\n\n\nit correctly reads the version from pkg.json, but apperantly the helper returns nothing for me :/\nEdit: ah, got it. You accidentally put the template-version outide of the helper: {} object in meta.js. . Don't worry, thanks for the continuing contributions :). > snapshotting doesn't work\nYou state this as a fact and assume that we are familiar with the problem you are facing. I am not. Please clarify.\n(And to clarify on my part: I know what snapshots are, but I don't use them extensively at the moment. I am not aware of a reason why they should not work with this template and believe they worked when I tested them before the official switch to jest).\nEven if that problem exists, however, other reasons for jest include:\n\nvery active development\nall-in-one solution including dependency mocking, coverage etc. \nmuch faster, usually.. So I just tested this out of curiosity, and sure enough it works well:\n\nAdded this test:\njavascript\n  it('should match snapshot', () => {\n    const Constructor = Vue.extend({ ...HelloWorld})\n    const vm = new Constructor().$mount()\n    expect(vm.$el.outerHTML).toMatchSnapshot()\n  })\nResult:\n\nChanging the component's output fails the snapshot test, running with -u updates the snapshot - just as expected.\nIf you have problems using this feature I suggest visiting us on forum.vuejs.org or chat.vuejs.org. Hm, I didn't really document it because didn't know what to document. the only thing to \"know\" is how to get the HTML via vm$el.outerHTML.\nBut maybe we can add a note to the docs somehow.. postcss doesn't transform css vriables by default, you have to inlcude a postcss-plugin that does, i.e. cssnext.\nJust install it and add it to the postcss config file in your project's root.. Since this is marked as a security related option in webpack docs, we won't set it to false by default.. You find the webpack config for the dev-server in /build/webpack.config.dev.js. What specifically is unclear? \nYou need to add a webpack option disableHostCheck) to the webpack-config of the dev server. I told you where to find these settings in your scaffolded project. \nOr did you scaffold your project with the new vue-cli 3, which does not scaffold the webpack config into the project folder anymore? \nIn that case 1)you are in the wrong repository - this repo is about the webpack template for vue-cli 2 - and 2) you can add dev-server options in vue.config.js, which is explained in the docs. . where does this error appear? any more info? line numbers? files? anything?. Closing in favor of #1208 since it has better description of the problem. . Hm. Strange. No idea what's causing that tbh :/\nMaybe I can get my hands on the laptop with IE11 and test this for myself. I would currentl guess that it's a dependency of webpack-dev-server or something causing this . Was fixed with v2.10.1 of webpack-dev-server. Of course not, why should we disable HNR on purpose? \nWhat's confusing me is that you say that happens for old projects as well. Otherwise I would have thought we have a problem with the new webpack-dev-server setup (which works well for me).\nDid you change anything about the environment of your project folders? HNR sometimes has problems with special characters in paths or folders that are controlled by other apps, i.e. Dropbox, Vagrant... In the latter case, using the poll option for webpacks watcher \n. Ah, yes. \nThat part of the devservrr was responsible for reloading the page when index.html changes. \nHowever. the html-webpack-plugin we use to process index.html doesn't play nice with webpack >=3 in that regard, so we had to remove that code when we moved to webpack 3 a while back. \nI assume you moved to webpack 3 on your own... . Yes. As I said we removed it as well. . the html-webpack-plugin does that. You would have to check the README or ask in their github how to fix it.\nAlterntively, ask on forum.vuejs.org or chat.vuejs.org if people now a trick.. HMR often doesn't work in paths that contain special characters (e.g. ( ), or when the project is in a folder controlled by another app / system (e.g. dropbox/googledrive, Vagrant, VirtualBox).\nIf none of that applies, you would have to ask the webpack community how to debug this, we don't really know the webpack internals at pley here.\nClosing this as it's also a duplicate of #1209 . That's what webpack aliases can be used for. The template already comes with one, @/ is an alias for the /src directory. \nSo you can simply do this: '@/assets/img01.png'. Notw that you would have to prepend that with a tilde (~) when used in a template or scss. Normal css files don't require it though - postcss handles this differently. . Thanks. Probably some leftovers from a merge. . I don't think that we will add it to this template, but vue-cli 3.0 support presets - then we can have a storybook preset. . Hey, thanks for wanting to contribute, apprechiated! If you need help, just ask. \nAs a small note, I would not qualify this as as \"bug\" because /config/index.js is not meant to dynamically add any dev server options to the webpack config. It's just a static subset of options that we extracted out of webpack config for easier access. Adding options to this file will do nothing. \nBut adding https support can be considered a worthwhile enhancement, so go ahead :). Oh, I always squash PRs, but this one needs it badly - I fought with circleci config forever \ud83d\ude02\ud83d\ude02 . Oh right, the fact that the test.sh file is still there is an oversight. \nAnd I should add an npm script to run those tests in sequence. \nFor CI we run them in parallel with circleci commands, that's why in haven't added a script yet. \n  . These files don't get loaded individually. \nIn development, they are included in the JavaScript bundle and then injected into the head section. I'm production,  they are bundled together as one css file. \nSo the fact that you don't see any requests for the files is not an issue. And if the files could not be imported during build, webpack would have shown an error. \nDid you receive any errors? \n  . Well, then you will probably be better off asking on forum.vuejs.org or chat.vuejs.org, more people to help out there. \nShare some reproduction code if possible. \nI will close this issue since I don't see how this is a problem with the template specifically . I'll reopen to answer later - short version: since this always worked, no other problems of this kind were reported and no recent changes were made that affect this, I would judge that its rather a usage error than bug, so it's not an issue for github, it's a question for the forum. \n\nHow can I tell from the output or browser, that the CSS file is loaded correctly?\n\nOpen devtools, look at elements tab and look of the styles are there. . So is there anything left here? . I'll have to side with @heinzdmx on this one. The plugin doesn'T seem to be of the kind you should be using without knowing what it does or what risks you are taking by using it.\nAlso, this template does not attempt to provide a setup that will work perfectly for gigantic projects - those will always need individual optimization. \nSo I would argue that this is a kind of plugin that users should add at their own risk, once they actually have a performance problem they need to solve.. Please consider using forum.vuejs.org for project-related questions. This issue is closed, and github issues in general are not supports tickets.. It just means that it gives you a very good deception emu experience because it's configured with many good things that make your development experience better. \nYou can check the rest of the docs to learn what that entails. . That was my phone trying to auto correct \ud83d\ude02 \nI meant \"development experience\" . Are you on windows? I just fixed a bug concerning this for windows users, but haven't pushed it to master yet. You can test the develop branch . Tomorrow late evening at the latest.  may be in the next two hours. I'm on a trip right now, but have my laptop in the hotel. \n  . Give it another try, should work now.. > try to display it in the code, \n\nWhat exactly did you do? \ndoes the Vue logo show up for you? \n\nWhile I'm on mobile atm and can't verify, I can say that I installed the latest template multiple times in the last days and the logo always showes up, which means that images from ./assets do work as expected. . Yeah that never worked that way. \nIf you want to define the path in your js,  it have to use require('. /....'). It may have worked by accident, since the dev server served static content from the project root before the recent update. \nBut it would have broken in production. \nRead The template docs about handling static assets. \n  . Probably related to this: https://status.npmjs.org/incidents/41zfb8qpvrdj. According to npm status, the problem was resolved. Please open a new issue if the problem persists  . We generally have some issues with CI tests, which is why I submitted #1218.\nBut you submitted 2 versions of this PR, can the old one be closed? . Closed it.. by you can close your own PRs yourself I think ;). What's your node version? . Versions look fine, no idea what may cause that on your end. All. Is working fine for me. . Hey, Thanks for your work on this!\nHowever, we already have a longstanding PR open with #797, which I intend to review and merge after #1218\nSo I doub that this PR will make it. However I would appreachiate if you would comment on the work in #797 and add feedback from your experience. Hm, I could swear that this has been iced before. \nMaybe some merge or rebase screwed it up again. \nWill fix it. . If you need to fix it yourself quickly, just change the alias from '@' to '@/'. Hm that doesn't work - why? I swear that worked before. Jesus ...\nWill look at this again tommorrow.. It seems we may have to switch to some other alias. I've seen ~being used in nuxt, but that also has a special meaning in e.g. sass-loader: @import(~bootrap.scss)\nWe could simply use @@ .... looks funny but not that much worse than  a single @. Re-classifying as an enhancement, more fitting imho.. Thanks for the feedback, that's a great list of possible replacements. \nPersonally like $ or #,  but I'm afraid  t least $ could be problematic because it's used as a special chat in aliases, defining the end of the require string. \nI'll play a bit wirh both to check for limitations, and ask everyone who's interested to do the same. . I think we will indeed go with # - I've tested it a bit and it seems to work fine in all scenarios.. Because there might be packages whose name starts with src.. That's to be expected, if I understand your problem correctly. \nJest exits with an exit code of 1 if any tests fail, which npm always interprets as an error. . That would work, yes. . https://forum.vuejs.org/t/vuejs-templates-webpack-change-entry-point/25242. \u00cet is as much (or little) supported as previous versions:\n\nVue itself supports >=IE9\nBut to use some ES6 Javascript features (like Promises) you need to include polyfills.\n\nWhat problems to you have when trying to use IE? Please be more specific.. I don't speak chinese, I can't read this :(. Thanks for The info @hornet-wing.!. upstream issue was fixed with WDS 2.11 (Release log). The template tests require node >=8.\nI'll update the engines field in package.json accordingly. \n. Edit: oh snap, I'm an idiot! \nthat code also runs on normal template installs! And those should of course not require node 8\nI'll fix this in the next hours. . Found a few minutes right now, and it's fixed!\nThanks for the report @TheSirC . Thanks :). What exactly is this about? just the Typescript typo?. duplicate PR. Thanks!. This is not a help forum for webpack questions. Its the issue tracker for bugs and features related to this temnplate only.\nPlease consider asking your question on forum.vuejs.org, chat.vuejs.org or Stack Overflow.. From the webpack docs:\n\nWhen set to true this option bypasses host checking. THIS IS NOT RECOMMENDED as apps that do not check the host are vulnerable to DNS rebinding attacks.\n\nI don't think we should add convenience config options that aren't recommended. If users need them, they should add them themselves and know what they are doing.. Hey @ErickPetru \nThatnks for your help! Unfortunately I'm not really familiar with the whole gitbook setup, and am very short on free time in the coming weeks, so I won't have uch time to look into this. \nCould you create a PR with the new folder structure? That would speed things up, hopefully.. You appearantly use some npm package that was \nwritten with ES6 JavaScript and has not been transpiled to ES5 with Babel. \nIf you can find out which it is, you can add it's path to babel-loader's include option. . Thanks!. Well, you are using import(...) instead of import '.... ', which creates an async chunk that is loaded later. \nSolution: use the right syntax. \nimport '../node_modules/vuetify/dist/vuetify.min.css'. https://github.com/webpack/webpack-dev-server/issues/1278\nThis is essentially caused by a dependency of webpackdev-server\nFor the time being, you can downgrade to 2.9.*. Fixes in webpack-dev-server@2.11.1. Better yet: provide a name: for each component. \nEslint-plugin-vue can help you remind you. \nNot meaning to play the bad parent, but conversations like this are better suited for forum.vuejs.org or chat.vuejs.org. Well, just sharing The built files doesn't allow us to say anything specific about how to solve this for you \nThe issue is generally known, and has to do with vue-loader injecting styles lazily in development (when used with style loader) \nThere's long ongoing discussions a bout this in the vue-loader repository. \nIndependent of that its probably a bad idea to rely on css occurrence order for overwriting styles in components in general. \nI would guess you are importing bootstrap too late in your main.js or something. . Seems to be an upstream issue? https://github.com/vuejs/vue-jest/issues/48. The development setup uses style-loader, it doesn't extract css on purpose because we want hot reloading to work for styles. \nThe error you are experiencing likely has to do with a misconfigured NODE_ENV environment variable. \nOpen an issue and describe your problem. . You should not have this env variable set permanently on your machine. \nThe project commands will choose the right default value for you. . Seems your vue-cli installation is broken. . Not related to this template. . No, the help text for vue init works fine. \nif you read the error stack trace, the error is in: \nusr/lib/node_modules/vue-cli/lib/check-version.js:19:34\nWhich runs before the template is actually downloaded and installed. \nSo it's either a bug in vue-cli or a problem with your local install. \nIt's not related to this template as far as I can see. . I'm not sure whats going on here since this template does not ask you if you want to include if_or or something. \nI also have no what flags you are talking about, can you clarify? . Okay, I understand.\nBut we use a locally installed vue-cli package in all of our automated tests in CircleCI, which also run on docker, and those work fine:\nhttps://github.com/vuejs-templates/webpack/blob/develop/.circleci/config.yml\nSo maybe it's related to the docker image you use, or the npm version installed or something else you do.\n. @adimit I only now noticed that you installed vue-cli with ^1.0.0 version. Why? That would install a very old version which very probably doesn't worm wit this template. \n@MarkProffitt that doesn't apply to yiu, obviously. I would assume your situation is different, what're exactly is happening? \n. > latest: 2.9.2\n\ninstalled: 2.0.2\n\nYour version is outdated. If that helper is missing, you do not use the most recent version. . So vue -v says 2.9.2, yet installing the template fails? \nIn that case: absolutely no idea where to start. \nIf that command doesn't return 2.9.2 even though you did npm install vue-cli@latest -g, then your node npm installation is probably messed up. . Hi jake!\nWe currently don't want to add any more options for specific libraries, so this wont happen.\n. I'm not 100% sure I understand your issue, but;\n\nin which the browser is assuming the assets are on http://localhost/static/[js/css/]/... instead of http://localhost/prodbuild/static/[js/css]/...\n\nthat's the expoected behaviour if you leave the default setting for the assetsPublicPath`in/config/index.jsas it is:/`.\nIt's an absolute path, and this behaviour is intended - it's required for vue-router to work correctly in history mode.\nYou can change the assetsPublicPath under the build: key to something else, e.g. /prodbuild/, or ./ to make it work in your scenario.\n. Hm, In guess the hardcoded import for the font in fontawesome is messing something up.\nWon'T have much time to look into this in the coming days, sorry.. Try chaging this line:\nhttps://github.com/vuejs-templates/webpack/blob/develop/template/build/webpack.base.conf.js#L79\nto this:\njavascript\nname: NODE_ENV === 'production'\n  ? utils.assetsPath('../../fonts/[name].[hash:7].[ext]')\n  : utils.assetsPath('fonts/[name].[hash:7].[ext]'). You don't have to, it should work.\nAsk question on forum.vuejs.org please.. > Ask question on forum.vuejs.org please.. Those are too many different changes at once. Maybe cut not into single features and re-submit them, then we can discuss them . That should indeed not happen, to my best knowledge the config is set up to keep hashes intact in that scenario. \nUnfortunately this would require some sleeper investigation which I might not find time for in the coming 6-7 weeks or so, I'm on holiday and then preparing to move to a new home. \nI welcome any help on this. . Hm, Im not aware that this is a general problem with the plugin. Maybe we have to switch the order up? . The only thing I could find was a supposedly fixed bug in that plugin from 7 months ago... \nhttps://github.com/webpack/webpack/issues/5184. I sonst understand - is /op-ui in node_modules or is it in a sibling directory to /src?\nAnyway, I would assume that there's a different Babel con fig in that folder which gets used instead of yours or. Something. . Okay, now I'm even more confused as to why you are building a project within node_modules, that can't be a good practice, but anyway ...\nI can only assumeit has to do with how babel / babel-loader resolve the babelrc settings depending on the working directrory?\nNo real idea, sorry. Never seen a setup like yours or even thought about it.\nYou might be better of asking on forum.vuejs.org as this is not really a usecase this template was designed for.. I will close this as it's more of a webpoack question that directly related to the intended usage of this template.\nAs suggested, please ask on our forum, Stack OVerflow etc.. Babel should transpile that, and I never came across this.\nAre you sure the .bablerc config is intact?. Could you try and downgrade babel-eslint to  7.*?. I read this: https://github.com/babel/babel-eslint/issues/578\nThere's no answer about this yet but seems that at least on windows, babel-eslint >=8 doesn't work with babel 6. I tested it on OSX and didn't have any problems.\nWould you be interested in making a PR to downgrade babel-eslint in the template?. I found this: https://github.com/angular/angular-cli/issues/9020#issuecomment-354374450\nWhich says that this option doesn'T work for autoprefixer <=7 -  but we have 7.1 in our dependencies.\nCan you check which version is installed in your /node_modules?. > But I'm not sure if that is the problem\nI would assume that's the issue indeed, if autoprefixer <7 doesn't support major.\nhttps://github.com/ben-eb/cssnano/blob/v3.10.0/package.json#L26. Well, it must be something about either autoprefixer or cssnano. None of out code in the webpack config or anwhere else in this template uses the browserslist.  And since npm run dev works (unless I misunderstood), we can assume that autoprefixer works and it must be cssnano (or one of its dependencies), which is the only one of the two running only during build.. I'll leave this open to track it. . I don't see such problems, can you provide a real reproduction for us to evaluate? \nSince EnvironmentPlugin is just a wrapper around the DefinePlugin afaik, I would rather suspect a mistake on your part without such a reproduction . Hi there!\nI close this issue because of inactivity. If you want to follow up on this issue, please open a new one, and provide the necessary information (a working reproduction etc.) in that issue.. Can you provide the stack trace?. Maybe you have to adjust the context setting o f webpack, since you seem to have nested your project in another subdirectory: https://github.com/vuejs-templates/webpack/blob/develop/template/build/webpack.base.conf.js#L23\nNot sure, give it a try.\nIf thatr doesn't help, please upload a repository for me to clone with a minimal reproduction.. Those are much too big/ opinionated changes, sorry. . Have you tried installing it? . Will try to reproduce this tonight, seems very strange.\nThis is the module: https://www.npmjs.com/package/uglifyjs-webpack-plugin\nHere it's defined in package.json: https://github.com/vuejs-templates/webpack/blob/develop/template/package.json#L111\nAnd here it's being imported: https://github.com/vuejs-templates/webpack/blob/develop/template/build/webpack.prod.conf.js#L12\nI really don't see where this should break .... Thanks!. If that really is the case, you should rather open an issue in the main Vue repo. This is not a feature of this template.. I would be open to that if it's  common problem. I personally don't have much experience with that, so I can't tell.. Good point. . So I thought about this some more and agree with @whjvenyl - we should not add this.. There should be nothing for you to do, this template is pre configured to extract all css, from .vue and .js files as well. . Are you talking about dev or build? \nIn build, all css is extracted into one file. \nIf that doesn't work for you, please provide a repository with a reproduction. In dev we inject all styles into head for hot reloading. . Please try this: https://github.com/vuejs-templates/webpack/issues/1266#issuecomment-361201523\nI wilkl look into this further at a later time. I'm very short on free time in the coming days, so it may be a while.. Damnit. This seems to be really tricky. Relative paths are of he devil :D. What exactly is happening instead of the expected behaviour?. Reading the last paragraph of webpack-dev-server's docs for proxy, I think you probably have to do this:\njavascript\nproxyTable: [{\n  context: ['/tf', '/hd', '/activities'],\n  target: 'http:.....'\n}]. Closing for inactivity by OP. This is not a big and not related to the template. \nDevtools don't work by default in production mode. Try setting Vue.config.devtools to true. \nhttps://vuejs.org/v2/api/#devtools. I missed that line, sorry. \nPlease open an issue in the devtoola repository with a reproduction that the guys can run for themselves. \nThe problem is most likely not related to this template. . @pmesgari Any further input? I can't really reproduce this ... Can you provide a repository with a minimal production?. This question is only indirectly related to the template and likely not bug. \nI would kindly ask you to use forum.vuejs.org for way rations like these, to keep the issue tracker focused on bugs etc. . Please open an isssue I the vue-loader repository. . Running npm run build --report\nIt will open a visualization of all the created bundles/chunks and their contents. That was a fat finger mistake. Can you rpovide a bit more info, what does \"does not work\" mean? I can't work on this right now and others might, if the input was more explicit.. Hm, that's because it relies on a special npm env car being set when it receives --report. Firebase is more than 710kb minified, that's half of your bundle right there! \nVue+vuex+router is <100kB minified, so the rest of your bundle must be made up by something else. \nThe map file has nothing to do with bundle-size, no. \nSo use the bundle analyzer to find out what yiur. Bundle is made up of. Please ask this on the forum.vuejs.oeg. We use circle/node:6.12-browsers currently: \nhttps://github.com/vuejs-templates/webpack/blob/develop/.circleci/config.yml#L4. No. I don't know the package you refer to and you didn't share any code about how you used that package or created the worker.\nAlso, we have great forum at forum.vuejs.org for questions like these, (about how to use a 3rd party package with the template).. Well, it doesn't. package.json requires \"^2.5.2\", which is a semver version range and boils down to: \"the latest patch release in the 2.5 version range, but at least 2.5.2\". > Sorry, it doesn't do that.\nHow did you verify that? . Thanks. . This is a known problem with font-awesome and similar laibraries that come with fonts etc.\nTo learn more about it, see this:\nhttps://www.npmjs.com/package/sass-loader#problems-with-url\nAs to the solution:\nfont-awesome (You are still using v4, I think) allows you to set a vairable that tells SCSS where lo look for the fonts:\nhttps://github.com/FortAwesome/Font-Awesome/blob/fa-4/scss/_variables.scss#L4\nIt should be set Like this:\n```html\n\n  // I can remember what was correct:\n  $fa-font-path: \"font-awesome/fonts\";\n  $fa-font-path: \"~font-awesome/fonts\";\n  $fa-font-path: \"./node_modules/font-awesome/fonts\";</p>\n<p>@import '../node_modules/bootstrap/scss/bootstrap.scss';\n  @import '../node_modules/font-awesome/scss/font-awesome';\n\n```. We won't add font-awesome as an option to the template, I don't think so. That's too specific. \nBut I have a feeling we could make this work by adding url-resolve-loader into the loader chain for *css resources . \nI'll look into that. . Has it been deprecated or removed? Is it still required for versions before 22.4?\nWouldn't that be a breaking change? \nWe would at least have to bump the dependency on package.json accordingly. . Thanks. FYI I'm moving this weekend so it might take some days till I get to merge and release this and other prs . Yeah do a PR please . you should pass optios here:\nhttps://github.com/vuejs-templates/webpack/blob/develop/template/build/utils.js#L62\n. Wrong branch . No. No, you misunderstand. dev.env.js is only used to inject variables as \"environment\" variables into the app - they will not be accessible within the node process that runs webpack. \nYou should just set the host directly in config/index.js. . That refers to an actual environment variable set when you run the dev server: \nHOST=0.0.0.0 npm run dev. Or, to repeat myself, change it in config/index.js, you don't have to use an environment variable. . That syntax isn't supported in node 6, which is the minimum node version this template intends or to support. \nI can't merge this for that reason. . It is supposed to be there. It's used in the error notifications if they are activated. . So \n1. This doesn't seem to be the same issue\n2. Please use proper syntax highlighting, see githubs help for instructions \n3. Please provide the actual code that failing. The error is not that useful on its own. . Closing for inactivity. You probably need to read this: \nhttps://router.vuejs.org/en/essentials/history-mode.html. the gh-pages branch is built from the /docsdirectory. Any changes should be made against the develop branch.. Hi, sorry this isn't working for you.\n\nHow can different behaviors on different platforms be possible?\n\nIn most cases, this is related either to paths (\\ vs. /)  or to case-sensitivity (some OS / file-systems are case-sensitive, others aren't).\nSo is the postcss config file written in all lowercase? Where is it stored, did you alter it?\nI'm not quite sure what to look for, to be honest, a runnable reproduction would be helpful, as the error explanation is a bit sparse, a stack trace would be helpful.\n\nI don't know if this is the acceptable solution.\n\nNot really. That option make sure that normal *css files are run through postcss for autoprefixing etc.. Question: why did you add this as a dependency? \n\"postcss-load-config\": \"^1.2.0. No feedback from OP, closing. . > I am using this boilerplate \nWith which options? did you include Vue-router? the urls you show look simply like urls created when using vue-router with its default hash mode.\n\nand whenever I use Vue Router and wants to go any particular URL, it creates issues, by automatically adding \"#\" in URL\n\nwhat issues does it create? What does the router config look like, what does the URL look like that you want to go to, and what goes wrong?\nYou have to give us a little bit more than 2 sentences to enable us to help you - preferably, runnable code.\n. Not easily. Create a new project with testing, and copy the / test die to your current project. \nAlso copy over all additional dependencies to package.json. \nYou might want to have a look at the template for package.json here in this repository to see which dependencies get added if you choose i.e. Jest for unit tests. \nThen run npm install again in your project to install those dependencies. . you're using vue-cli 3 which is a rewrite. The init plugin now lives as a separate plugin.\nYou can find the docs here: https://github.com/vuejs/vue-cli/blob/dev/docs/cli.md#pulling-vue-cli2x-templates-legacy\nI would suggest to use the new cli though.. That will be fixed in vue-loader 15. Please use the forum \nforum.vuejs.org. We might switch this template to webpack 4 in some time. When we do that, we will use rust plugin as well. Please use forum.vuejs.org. We started to write the version into config/index.js sometime last year. . That would only be used when you use a webpack-based test runner, which jest isn't. \nThis is an inconsistency left over from the past where we only supported a karma/mocha setup with webpack. I don't understand what you mean. . Guys, please use the forum for questions about stuff like this. \nForum.vuejs.org. I have no idea what I should do with that description. \nDo you have code or at least a concrete error message so that I can try and understand what you mean? . What does that have to do with this template? . I have no idea to be honest. Evan wrote that css probably 2 years ago . When the path comes from Js, you have to use require():\njavascript\nreturn require(\"../assets/\" + this.card.jpg  + \".jpg\"). Please provide an actual runnable reproduction. No. I'm not planning on adding anything to this template.\nVue CLI 3 has been stable for half a year almost. This template won't be developed any further in favor of Vue CLI 3. I have no  idea what you are talking about . > In fact, I'm not really sure how the new CLI will affect this project. As I see it, the new CLI is more of a paradigm shift than a rewrite. Someone with more experience than I have will have to weigh in on whether this project is even relevant for CLI 3 projects.\nThat's right. vue-cli 2 was basically just pulling templates like this webpack template from github.\nvue-cli 3 doesn't rely on project templates anymore. Instead, it extracted all the config and dependencies for webpack, eslint and so forth into npm packagesthat cn ge integrated into any vue-cli 3 project as plugins.\nPlugins can of course also be written by the community. They can alter the project's configuration, ad dependencies, add files from templates, add npm script commands and much more.\nThat means that there's not really a need for templates such as this webpack template or the pwa template. Instead, everyone can mix and match the feature they need by installing the corresponding plugins.\nSo what does that mean for the future of this template? Personally, I don't see  reason to start a new project with this template anymore. vue-cli comes with all of its features and then some, and it has the advantage of being easily upgradable, which this template isn't.\nBut nonetheless, thanks to @noamkfir for the work on this PR. I will hopefully merge it soon, but that will be the last bigger change that I will make to this template. As a consequence of my explanations about vue-cli 3, I don't see it as worthwhile to put much time into it anymore.\nBut if someone want to take over maintanance, we could certainly talk about this. And there's always the possibility to fork this project :). @Garito every single feature of this template is already included in vue-cli 3.\nAnd if you do a quick search on npmjs.com, you will find that there are already dozens of plugins available for it, including things like vuetify, i18n, Apollo graphql etc. pp. . Far too opinionated, sorry. . You likely installed @vue/cli, which is the 3.0 version and a complete rewrite. \nIt doesn't use templates anymore, and doesnt have an init command anymore, but a create command. \nThe old, 2.* init command was extracted into a plugin package, called @vue/cli-init\nInstall it globally and vue init webpack will work again. But I recommend to just use the new create instead - the new CLI is in RC state already and much better than this template in many ways \nFor further information, please read the docs of the new cli at cli.vuejs.org. This contains stuff we to vuetify, maybe this PR was a mistake? . This is the wrong repository. You are looking for vuejs/vue-cli. Oh, of course it should. \n. Corrected.\n. ...indeed. \n. They will, technically. I thought I leave them in to make things clear and not take any chances of it exporting the runtime-only for some people depending on when 2.0 goes live on npm and reaches the users, and when that export change is done etc. \nBut it's not nessessary. \n. Agreed\n. since this is already mentioned in Line 5 of the README, this should be removed.\n. Lines 20 and 21 can also be removed, this is already explained in Line 5 of README\n. Note: this is not really related to this PR, just some added commenting, might help someone reading it.\n. The sec server is also used for testing. Is it wise to override the 'testing' environment? \n. agreed\n. Thanks for the ping, totally forgot about this over the weekend. Will do it later. \n. @chrisvfritz  Done\n. Fun fact: This typo originated in webpack itself in 1.0.0, and was fixed in Febuary of 2014:\nhttps://github.com/webpack/webpack/commit/48aad3eeee3424e9150cce8df92cb5467213f40c#diff-da313f802aa85bbb07211a9399e04f95R63\nBoth spellings works for legacy reasons.\n. I don't think this is relevant to this PR?. I don't think this is relevant to this PR?. Keys only have to be strings if they contain a hyphen. These changes seem unnessessary.. this file belong in this PR. Why?. ...and this shouldn't be deleted either.\nThere are many other changes that don'T belong here, and I will not comment on all of them.. I think we should priorize .vue over .json, wouldn't you agree?. We don't have to use LoaderOptionsPlugin with vue-loader, you can specify these options in the loader rule:\nhttps://vue-loader.vuejs.org/en/configurations/advanced.html (scroll down to Werbpack 2 section). I think we don't have to use LoaderOptionsPlugin as well:\nhttps://github.com/MoOx/eslint-loader/issues/148\nCan you give it  a try? If we end up having to use LoaderOptionsPlugin, please add a comment explaining that this is temporary until eslint-loader supports webpack2's options syntax.. Can't find webpack2 equivalent resolve.modules in your config:\nhttps://webpack.js.org/configuration/resolve/#resolve-modules. should not be removed - it's just resolveLoader.modules now:\nhttps://webpack.js.org/configuration/resolve/#resolveloader. Oh, right.. Oh, right again :D. That's a bit disappointing but we an deal with it.\nPlease ad the aforementioned comment and it's fine.. I assume it was meant as a safeguard in case people add other paths to the included paths array.\nBut I think we could remove it to trim some fat here.. Why would we want to ignore vue files?!? . Can you explain what the use of this command would be? Pug files or templates in. Vue files should. Be handled by webpack, shouldn't they? . Why is that necessary? . When we talked about adding a check for 'testing' environment, I didn't think about skipping the opn(uri) - I was thinking about skipping the whole portfinder logic.\nThe point is: for e2e tests, we currently try to access the dev-server through the port that is defined in the config (see this line). If the portfinder starts the def-server at a different port because that port is in use, e2e tests will connect to that wrong port anyway.\nSo either we find a way to tell the e2e test runner about the new found port, or we have to skip portfinder completely hen running e2e tests.. 1. Where does option.usePostCSS come from? It's not to be found in /config/index.js, not in any of the webpack config files. This should be documented someway.\nIs the idea to simply add it to the styleLoader code like this?\n```javascript\n// in webpack.base.conf.js:\nrules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap, usePostCSS: true })\n``\n. Oh, right - sorry, I missed that.. I'm not aware of akarma devcommand. What is that?. 1. I think!==` is better, stylistically.\n2. Just thinking: Could this break anything for a relative path ('./')?. Oh, right.  thanks! . Ooops! . Because this piece of code is injected into the client bundle in dev mode and not transpiled - which means it breaks in older browsers.. this (comment above this one for the same line) has to be tested before merge.. @eddyerburgh Since we are leaving the karma setup available, I don't think we should remove this docs section. \nWe should rather leave that docs in, but prepend the page with new infos about jest.. shouldn't that be {{#if_eq runner \"jest\"}}?. You seem to have some leftovers from an older merge conflict.... since we are leaving the karma/mocha setup in place, the eslint config should probably also leave this in.\nIt should be conditional:\njavascript\n{\n  \"env\": {{{#if_eq runner \"karma\"}}\n    \"mocha\": true{{/if_eq}}{{#if_eq runner \"jest\"}}\n    \"jest\"{{/if_eq}}\n  }{{#if_eq runner \"karma\"}},\n  \"globals\": {\n    \"expect\": true,\n    \"sinon\": true,\n    \"jest\": true\n  }{{/if_eq}}\n}. Hm, that merge doesn't look like it's supposed to I think ... the webpack-dev-server is new in the developbranch, while yours was still built on the old dev-server - so the former should stay in and the latter should go out.\nSimilarly, the other additions to package.json down in this file are all \"bringing back\" dependencies of the old dev-server.\nBut we might simply resolve this during / after the merge ... That has to go definitely, it's not required to make object rest spread work - to the contrary, it would probably breka most builds using ES modules in webpack 2 and upwards. . What I mean is that this is the option we want:\nobjectAssign: 'Object.assign',\nand this is the option we don't want:\ntransforms: {  // turn off the `with` removal\n+      stripWith: false\nso the latter should be removed from this PR. We only need the former.. actually I think we don't need this since preprocessors (SASS, LESS, Stylus) will handle @import themselves, so there won't be any left for css-loader to care about.\njavascript\nconst importLoaders = options.usePostCSS && !loader ? 1 : 0\nthat should be enough.. I think that config is only required if e2e || (unit && runner === 'karma') - jest doesn't use webpack.. good catch. Please add  a bold warning that this branch is not considered stable and can contain bugs or not build at all, so use at your own risk.. could you move this line so it's right above autoprefixer? That's where it belongs. Thanks! :). So this want not a bad idea in hindsight - this will break if the user has decided against using eslint during the project init. Will fix it.. This would have to be wrapped in a handlebars conditional {{#if_eq lintConfig 'airbnb'}}. Oh. Sometimes I'm stupid :). I'll merge this and then remove some of the node-spcific exceptions, because this is a frontend-template, and you are likely not gonna write express routes in it - that would be something for a SSR-focussed template.. Hey @gucong3000 Can you explain to me what this post hook does? I'm horrbile with bash.. Reading through a few old node issues (e.g. https://github.com/nodejs/node-v0.x-archive/issues/2318, https://github.com/nodejs/node-v0.x-archive/issues/5841) i think we might just have to add shell: true here to make it run properly on windows.\n@sudo-suhas Maybe you can try that?. Awesome! . There's a call to that function further below in the rules section, that should be wrapped in the same handlebars check. . Right, my mistake. Thanks.. I added these notes to that people get the connection between the commands and the NODE_ENV the set. These define the \"mode\" the app is running in.. See /test/e2e/runner.js: \nHere we set NODE_ENV to test, but for our e2e tests we run the webpack dev server with webpack.prod.conf.js, because the want to run e2e tests against a devserver that serves files like in production. \nTherefore, we have to use a second env variable as a workaround to make the production config behave like NODE_ENV === 'production' for e2e tests.. Since we now aggregate variables and stingify their values in /build/utils, we don't have to stringify them here anymore - so no more '\" \"'double quotes! . we set the NODE_ENV to test in the karma config, so BABEL_ENV will fall back to this.. this can actually be removed, leftover from an experiment.. See /test/e2e/runner.js: \nHere we set NODE_ENV to test, but for our e2e tests we run the webpack dev server with webpack.prod.conf.js, because the want to run e2e tests against a devserver that serves files like in production. \nTherefore, we have to use a second env variable as a workaround to make the production config behave like NODE_ENV === 'production' for e2e tests.. There's a package that makes this even easier imho: gh-pages\nHave you considered it? . Thanks! We still have to add the actual property to /config/index.js file so people can know about the option's existance without studying the webpack files.. ",
    "janzheng": "never used Vue before; using a tutorial but eslint crashes on <Template> which I assume is a basic Vue thing? Is it broken out of the box?\n  . Ok thanks @LinusBorg, I'll play with it a bit more.\nSince I'm just learning Vue, I decided \"turned off\" ESLint temporarily by adding an exception rule * to the .eslintignore file \u2014 figured this would be simplest \"non-destructive\" way of temporarily deactivating ESLint \u2014 so the file now looks like: \n~~~\n/build/\n/config/\n/dist/\n/.js\n/test/unit/coverage/\n\n~~~ . ",
    "gnulnx": "@janzheng   Thank you!\nI understand people wanting code to be formatted a certain way, but I'm kinda tired of 'others' alway's determining what that should be.  My back end is in python and django and I'd like my JS formatted the same way as my python code as it's way less cognitive load to not see things formatted differently.\nWhat I find strange is that I wasn't having any of these lint issues when I first started this project.. now today mysteriously every other line is barking about semicolons, or single quotes instead of double quotes or the number of spaces.. WTF?  maddening to say the least.  @janzheng method was exactly what I was looking for. \nif I joined another team that had different styles I'd conform in a heartbeat, but on projects were it's just me I'd rather linting stay out of the way and let me write code how I want.. ",
    "PhilMDev": "When using the latest version of vue-cli it appears the easiest way to handle this is in config/index.js.  You'll see the following:\n// Use Eslint Loader?\n// If true, your code will be linted during bundling and\n// linting errors and warnings will be shown in the console.\nuseEslint: true,\n// If true, eslint errors and warnings will also be shown in the error overlay\n// in the browser.\n\nDefault is true.  Just set to false.  BTW, I also dislike ESLint.\n. ",
    "shreeve": "Here's a lame hack to eslint-plugin-vue that \"skips over\" coffeescript in *.vue files. This is clearly not a suggested approach, but perhaps we could eventually have a user configurable way to elide ",
    "anoop-ananthan": "What is the big deal? Use if you want. Dont use if you don't want! Personally, I find it useful when team size is kind of more than 4 and each one working from different part of Globe. . ",
    "kyuubi09": "Also there's one more way.....you can add the files which give error in your .eslintignore file in the project.\nLike for all .vue files just add /*.vue.. ",
    "paparyku": "my fix for the vue webpack\nwebpack.base.conf.js\ncomment out these lines\nLINE 43:  // ...(config.dev.useEslint ? [createLintingRule()] : []),\nLINE (11 - 20): \n// const createLintingRule = () => ({\n//   test: /\\.(js|vue)$/,\n//   loader: 'eslint-loader',\n//   enforce: 'pre',\n//   include: [resolve('src'), resolve('test')],\n//   options: {\n//     formatter: require('eslint-friendly-formatter'),\n//     emitWarning: !config.dev.showEslintErrorsInOverlay\n//   }\n// })\n. ",
    "RoelRoel": "How to turn all the errors into warnings? I too want to keep my code clean, but some rules are made up by rediculous authistics and make coding in dev mode very impoductive. . ",
    "chriskasza": "@RoelRoel you can override the severity of the rules in your .eslintrc.js file.\nrules: {\n    'vue/max-attributes-per-line': 'warn'\n  }\nYou just need to know the rule names you're overriding. If you're using the vue/essential style guide, the list of rules can be found here: https://github.com/vuejs/eslint-plugin-vue/blob/master/lib/configs/essential.js.. ",
    "eovensehi": "If vue-cli was used to initiate the project, go to config/index.js and change an attribute in the dev object;\nuseEslint: false,\nOr In build/webpack.base.conf change rules in the module to stop using the createLintingRule function.\nrules: [\n      ...(config.dev.useEslint ? [] : []),\n     /* ...(config.dev.useEslint ? [createLintingRule()] : []),*/\n      {\n        test: /\\.vue$/,\n        loader: 'vue-loader',\n        options: vueLoaderConfig\n}\n. ",
    "EdwinBetanc0urt": "your_project/config/index.js\nchange the value of useEslint from true to false, from line 26, inside: \n```\nmodule.exports: {\n    dev: {\n        useEslint: false\n    }\n}\n```\nnote: I use the vue webpack template, the version of the template is 1.3.1. ",
    "paulsimongb": "Hi tried all of the above and it is still linting. Any other suggestions?. This finally seemed to do it\nIn .eslintrc.js at the top of the rules:{ section put in\n'': 'off' ,\n'*': 'off',\nI won't be using esLint every. Its rules are in my view actually bad layout, and I don't have several days to spend changing the configuration.. ",
    "rob-balfre": "@chrisvfritz That sounds great.\n. ",
    "KevinNTH": "Hi,\nAs the vue-router is not integrated in the template yet, how can I manage to do this by myself ?\nIf you have some clues to give to me, it would be nice. Thanks !\n. @chrisvfritz : Thanks a lot !!! Advanced exemple solves my problem ! \n. ",
    "KrishnaPG": "Not sure how to make the router work with this. Tried the code from the router documentation and it is throwing error Unknown custom element: <router-link> and Unknown custom element: <router-view>\n\nDid like below:\n```\nvar router = new VueRouter({\n    history: false,\n    root: '/',\n    routes: [\n        { path: '/', component: Index },\n        { path: '/person', component: Person },\n    ]\n});\nvar pageApp = new Vue({\n    el: 'app',\n    render: h => h(App),\n    router: router,\n});\n```\nApp.vue\n<template>\n    <main class=\"container body\">\n        <div class=\"main_container\">\n            <tag-sidebar></tag-sidebar>\n            <router-view></router-view>\n            <tag-footer></tag-footer>\n        </div>\n    </main>\n</template>\nSidebar.vue\n<ul class=\"nav child_menu\">\n        <li><router-link to=\"/person\">Person</router-link></li>\n</ul>\nHow to make it work correctly?\nOn some forums there is suggestion to use router.start, but if I use that it is throwing error start is not a valid method of router\n. The problem boils down to this. Would be great if someone could help.\nI am getting the errors with the vue-router if I use <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/vue/2.0.1/vue.js\"></script> in the html page directly (and not use the import Vue inside main.js).\nHowever, if I remove the CDN script tag and use rather use the import Vue from 'vue' inside the main.js then the same above code is working fine without problem.\nTo double check, I have compared the content from the CDN with the local node_module Vue content, and they are same. Loading order is also same.\nWhy is this behavior? How to take advantage of the CDN hosted vue in such cases?\n. Thanks. Wondering, how is the index.html got copied to the output (even though it is not inside the static folder) ? \n. Here is the basic code to reproduce the problem. After creating a sample app based on this webpack template, overwrite the content with below:\nindex.html\n```\n<!DOCTYPE html>\n\n\n\nvue-webpack\n\n\n\n built files will be auto injected \n \n \n\n\n```\nmain.js\n```\n//import Vue from 'vue'       <- comment out the local import\nimport App from './App'\nimport Hello from './components/Hello'\nVue.use(VueRouter);\nvar router = new VueRouter({\n    mode: 'history',\n    saveScrollPosition: true,\n    routes: [\n        { path: '/', component: Hello },\n    ]\n});\n/ eslint-disable no-new /\nnew Vue({\n  el: '#app',\n  render: h => h(App),\n  router: router\n})\n```\nApp.vue\n<template>\n  <div id=\"app\">\n    <router-view></router-view>\n  </div>\n</template>\nYou should see error\n[Vue warn]: Unknown custom element: <router-view> - did you register the component correctly?\nNote that both Vue-Router and Vue are loaded from CDN. \nIf instead of loading through script tag, if you load the vue through import in the main.js it will work fine (with vue-router still being loaded from CDN)\nNote sure two copies of vue... reasoning is correct. Because, in both cases vue-router is loading from CDN. Not sure how loading the vue with import will make the vue-router from CDN not load the 2nd copy.\nIf vue-router needs a copy of vue internally, it will always need it, irrespective of if vue is being loaded from CDN or not. May be something else is going wrong (unless the vue npm version is coming packed with vue-router that is some how overwriting the vue-router from the CDN so as to not create 2 copies - but that is not the case. If you remove the vue-router script tag from the HTML, it will throw vue-router undefined error, which means no other packed vue-router is overtaking it)\n. Thanks - the dev vs production info is what was missing. As long as it works in production, its great. Thanks for the external tip. Will look into it. It is helpful.\n. ",
    "kazupon": "Close (vie-router already included). support build command of vue-cli at v2.8.0. Close (inactivity)\nIn webpack 2.2 based, support css extracting via ExtractTextPlugin.. Close (in-activity)\nThe issue list only accepts bug reports and feature requests. Questions should be posted to the Gitter chat room,  forum or StackOverflow.\nThanks.. Close (in-activity). Sorry, I don't have a merge permission. \ud83d\ude1e \n/ping @chrisvfritz @posva @LinusBorg @zigomir \nWhat do you think about it?. Close (in-activity). Close (inactivity). Thank you so much for the effort. \ud83d\ude47 \nFixed with https://github.com/vuejs-templates/webpack/commit/0b8051f9b60270cd6883ad39f643da977d050e06. Fixed with 0b8051f. Thank you so much for the effort. \ud83d\ude47\nFixed with #490 . @posva thanks . Duplicate #479. Thank you so much for the effort. \ud83d\ude47\nFixed #478 . Duplicate #479. Thank you so much for the effort. \ud83d\ude47\nFixed with 0b8051f. Close (due to not provide reproduce repo). This issue is not webpack template.\nI guess that this issue is server setting.\nSee the vie-router docs\nhttps://router.vuejs.org/en/essentials/history-mode.html. This issue is not webpack template.\nI guess that this issue is vue-loader.\nPlease register it if you could reproduce.\nhttps://github.com/vuejs/vue-loader/issues. I think so, we should remove src directory from resolve.modules.\n@ktsn mentioned, users may confuse.\nIn generaly, I think users prefered that control app module code with own.. The issue list only accepts bug reports and feature requests. Questions should be posted to the Gitter chat room,  forum or StackOverflow. \n\nMaybe, you can resolve SVG spite the below loader:\nhttps://github.com/kisenka/svg-sprite-loader\nThanks.. The issue list only accepts bug reports and feature requests. Questions should be posted to the Gitter chat room,  forum or StackOverflow.\nThanks.. Close (inactivity). I checked at my boilerplate too.\nIt's works! \ud83d\ude80 \nunit test:\n\ne2e with ngihtwatch:\n\nWe should be used Chrome headless instead of PhantomJS. \ud83d\ude09 . ",
    "billcolumbia": "The other thing is I'm not sure how the dev server works. It emits these new files but where do they go? They seem to be some runtime reference or something and not actually saved to the file system. Maybe the browser isn't connecting to webpack to get those modified sources?\n. Ok cool that's what seemed like was happening. Here's the config.js - I am proxying all requests to it as far as I can tell and have tested:\nApp Structure:\n- vue\n  - build\n  - src\n  - test\n  - config.js\n- View\n  - Layouts\n    - default-source.ctp\n    - default.ctp\n- webroot\n``` js\n// see http://vuejs-templates.github.io/webpack for documentation.\nvar path = require('path')\nmodule.exports = {\n  build: {\n    index: path.resolve(__dirname, '../View/Layouts/default.ctp'),\n    source: path.resolve(__dirname, '../View/Layouts/default-source.ctp'),\n    assetsRoot: path.resolve(__dirname, '../webroot'),\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/',\n    productionSourceMap: true\n  },\n  dev: {\n    port: 3000,\n    proxyTable: {\n      '/': {\n        target: 'http://directory.dev',\n        changeOrigin: true\n      }\n    }\n  }\n}\n``\n. Oh alright. I just get the index.html file in the vue directory when I hit localhost if I just proxy the API. So in this case do I not dev with localhost?\n. Ok so the issue I'm having then is thedefault.ctp` has PHP in it that needs to be rendered, so the dev server can't render that. But this is the same as how Laravel or Rails would do it. So that's why I get confused, as I have followed the directions in http://vuejs-templates.github.io/webpack/backend.html but still get output with PHP tags - how does webpack dev server account for the PHP needing to be rendered on the app? I've now set my config like this: \n``` js\n// see http://vuejs-templates.github.io/webpack for documentation.\nvar path = require('path')\nmodule.exports = {\n  build: {\n    index: path.resolve(__dirname, '../View/Layouts/default.ctp'),\n    assetsRoot: path.resolve(__dirname, '../webroot'),\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/',\n    productionSourceMap: true\n  },\n  dev: {\n    port: 3000,\n    proxyTable: {\n      '/api': {\n        target: 'http://directory.dev',\n        changeOrigin: true\n      }\n    }\n  }\n}\n```\n. Ah ha crazy stuff marrying an old back end to a modern build system. Looking into this. Thanks so much :) I assumed it might be an overlook in docs - sorry for the bother.\n. ",
    "chenzhutian": "I met a similar issue today. When I run npm run dev and open localhost:8080, it always show a 404 error says that '/static/logo.png' does not exist\nI modified the dev-server.js file to fix this problem.\nin line 56, change\nvar staticPath = path.join(config.build.assetsPublicPath, config.build.assetsSubDirectory);\napp.use(staticPath, express.static('./static'));\nto\njavascript\nvar staticPath = config.build.assetsPublicPath + config.build.assetsSubDirectory;\napp.use(staticPath, express.static('./static'));\nit seems this problem results from that path.join() would change '/' to '\\' in windows.\n. @yyx990803 well my problem has been fixed in the new version vue-cli, thanks very much!\n. Sorry for the lack of information.\nOs:Windows10\nNode: 5.0\n. Thanks very much!\n. ",
    "Hemric": "@unhealthy indeed ... but this didn't work for me\n@chrisvfritz  I tried to use path.resolve as shown, but it didn't seemed to fix the problem\n@yyx990803 I just updated vue-cli and refresh all the config files and ... everything seems to work perfectly now, in dev and in the production build ! \nthank you very much guys :+1:  !\n. ",
    "collapsarzhang": "I thought it's due to ordering, so I did a separate entry for vendors and require bootstrap inside vendors.js.\nBut it's still not working, again, I can see bootstrap inside vendors.js\n. thanks @Grafikart, your pr works perfectly\n. k, thanks Evan.\n. ",
    "Grafikart": "Basically this template is not configured to import CSS outside of .vue component. \nYou can edit config to add your custom loader \n{\n        test: /\\.css$/,\n        loaders: ['style', 'css']\n      },\nI just did a pull request with a solution to this problem : https://github.com/vuejs-templates/webpack/pull/84\n. Ok I'll work on it tomorrow. I'll close this issue when the PR is submitted\n. I did this feature for a project but I didn't add this to the template. Is there a way to test a local template @yyx990803 ? I don't want to make a broken PR :)\n. No it's fine I just did the missing commits \n. Strange, I have no idea why Github wants to replay older commits. \nBasicallty I applied styleLoaders for the karma configuration (otherwise it won't be able to parse style files for the coverage)\n. Thanks it worked :+1: \n. Ok I see what you mean, I'll try to implement your idea\n. @hekigan I removed mqpacker since it was only merging mediaquery from the same file (so it was quite useless to add it :( )\n. @yyx990803 I just did the changes you requested\n. I'm now wondering if all this work worth it. I mean webpack is not designed for CSS and I think we could achieve the same result doing postcss transform when webpack extract text plugin finish. \nWe build => webpack generate assets => postcss is used on compiled CSS (remove duplicates, autoprefix, mergemediaqueries...)\nThis design could make things simpler. \n. ",
    "vaske": "Is there any document which describes where to put scss files and how to include them in app? . @chrisbraddock thanks, @LinusBorg yeah this was useful. . @LinusBorg yeah I have it as well. . @LinusBorg yeah I drop win completely and continue with it on Mac. . ",
    "chrisbraddock": "http://vuejs-templates.github.io/webpack/pre-processors.html. I spent last week wrestling with this. I ended up hacking something custom in (I'm sure in a sub-optimal way) and running my builds like @robwierzbowski suggests. I'll have to check out minimist.\nWould love for something built in/officially supported.. If dev config is: autoOpenBrowser: false this evaluates to true. I went with var autoOpenBrowser = config.dev.autoOpenBrowser !== false. Thanks for attempting to get this in. It's the first thing I toggle off. :). ",
    "shentao": "@Grafikart how is it going? Just stumbled on this problem myself. \n. @Grafikart Thanks a lot! \ud83c\udf7a \n. ",
    "guidobouman": "You can actually import an external stylesheet in your top-most (App) component. That gets parsed as well, right? One implementation to rule them all.\n. That's what they're working on here.\nFor now you could import it in your topmost component. That way you don't need another entry. \n. Autoprefixer is in the latest template release. This can be closed. \n. So, what about jsdom for unit testing?\n. It does, just tested it in a fresh project.\nA note though: I'm not sure if this was already an issue, or that the most recent version of AirBnB's config makes this an issue. But as stated in #300, AirBnB base balks on leaving out the .vue extension.\nThis is solved with adding the following to the .eslintrc.js:\n{{#if_eq lintConfig \"airbnb\"}}\n    // don't require .vue extension when importing\n    'import/extensions': ['error', 'always', {\n      'js': 'never',\n      'vue': 'never'\n    }],\n    {{/if_eq}}\nShould I add that to this PR?\n. @chrisvfritz There you go. This should make everything work nice and dandy.\nJust tried on a local new project.\n. Cool, I can work on some enhancements as well. As I'm working with this template on a regular basis nowadays.\nIs there a specific list of items to pick up, or is that just the Github issue list? Maybe add a github project to make contributing a bit easier?\n. ",
    "heygambo": "I've added a new entry for other sass files that I don't want to go into a vue component directly. Unfortunately another sass entry doesn't get the autoprefixing. Is that something that can be added easily? I'm trying to figure this out for hours now.\nAdding sass directly to the webpack modules hash breaks everything unfortunately.\n. ",
    "pksunkara": "@Grafikart Do you need any help on this?\n. @chrisvfritz Do I still need this file when I haven't asked for tests to be added. I wasn't sure if I need to remove it.\n. @chrisvfritz I am not sure what will break because of them which is why I was asking you.\n. I am more concerned about why we are checking for testing environment in production configuration file. https://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.prod.conf.js#L10\n. I think E2E tests are still using it. Check these 3 lines, https://github.com/vuejs-templates/webpack/blob/master/template/test/e2e/runner.js#L1-L3\n. But the issue is karma tests will also be somehow using this and I didn't find a way to do {#unit or #e2e} which is why I am looking for some help on this.\n. @chrisvfritz Here's the PR then. https://github.com/vuejs-templates/webpack/pull/294\n. @chrisvfritz Would you be reviewing this?\n. I am currently adding Vuex to this too. \n. Okay then. This is ready to be merged. I would add Docs in a separate PR before the next release.\n. By the way, please use \"Create a Merge Commit\" option when merging the PR. The \"Squash and Merge\" option is not contributor friendly and makes serial contributing more complex than needed.\n. Any update on this?\n. Well, it depends on what we are dealing it. Here, a decision needs to be made by the Vue core team on whether to follow this route or not. And sometimes, these are not done on github but on other channels of communication.\n. Looks like I will be closing this. If anyone wants an extended web pack template with router, vuex etc.., check out https://github.com/pksunkara/spoiler\n. @gkatsanos You can directly use the repo I mentioned above. I have all these changes and more in my template.. And also, I am regularly keeping it up-to-date with this template.. The commits are messed up here.\n. Shouldn't you be removing the runtime option from meta.js too?\n. So, If I want to require runtime library, I still do import Vue from 'vue';? Or should I do import Vue from 'vue.common';?\n. Ah, understood now.\n. Apparently, the maintainers want to keep this template simple without the router and store. #296 \n. I did make an earlier pull request for this at https://github.com/vuejs-templates/webpack/pull/296#discussion_r82073211 but the maintainers rejected it.\n. @nickmessing I had given up and started on https://github.com/pksunkara/spoiler\n. Definitely \ud83d\ude04 \n. Heh. Looks like I was too early with my vue-router PR. https://github.com/vuejs-templates/webpack/pull/296\nSeriously don't understand why it wasn't accepted then but is accepted now.. @yyx990803 No problem. If you can, please read through this comment on that PR and tell me what your thoughts are about it. Thanks.. You can use the ignorePropertyModificationsFor array for no-param-reassign and add state to it instead of disabling it completely. I had the same thought but realised we should start the discussion somehow.\n. To be honest, this is a good enough start with the vie-router integration. Sure, Hello is a placeholder component, but the App component is setup and people can replace the Hello component.\nBut I also agree with the complete setup path. Adding a template with vue-router, vuex, vue-mdl.\n. > If adding vue-router or vuex is hard to this template, I'd start fixing router or vuex (or their docs) instead.\nIt's not that adding them is hard, it's that we are introducing them in the template but not really going deep with them is the concern here.\n. ",
    "erguotou520": "@chrisvfritz It's better to build sources to relative rather than absolute in Cordova project, so I can both run in browser and my phone.\n. I have tried to add this script in index.html:\nhtml\n<script>\n  var $base = document.createElement('base');\n  $base.href = location.href;\n  document.head.insertBefore($base, document.querySelector('meta'))\n</script>\nIt works in dev environment, but after build and run on Android, the sources using /static/xxx(absolute path) got 404.\n. Not worked, even worse.\n\n. If the absolute static path is not in index.html? Maybe in app.js?\n. I know your solution, maybe it's really a compromise way currently.\n. Yeah, but this project started before weex is opened... and not going on these days...\n. ",
    "yozman": "@erguotou520\nu can do like this\nhttps://github.com/sth-cool/000/commit/e1927fdd0d80183daa2ae65cf85128329da6c7c3. @chrisvfritz \nbut the source is on package primer-markdown not mine,\nprimer-markdown require primer-support,\ncould u tell me what can I do in my project ?\n. @LinusBorg \nthe folder is like this\n|- node-modules\n|- packages\n  |- op-ui\n    |- component.js(use jsx)\n  |- op-ui-preview(generate by `vue init webpack`)\n    |- build\n      |- webpack.base.conf.js(change code to include `resolve('../op-ui')`)\n    |- node_modules\n    |- .babelrc\n    |- ...\nI'm sure there is no other Babel config in op-ui\nand I start app use npm run dev at op-ui-preview. @LinusBorg \nyeah, it's a webpack question, but also a bug report for this template, because of\n\nA full-featured Webpack + vue-loader setup with hot reload, linting, testing & css extraction.\n\nwhy am I building a project within node_modules ?\nbecause I use monorepo with lerna. ",
    "runarhk": "Adding \nnode: {\n    console: 'empty',\n    fs: 'empty',\n    net: 'empty',\n    tls: 'empty'\n  }\nto the webpack.base.conf.js fixes the problem\n. Sorry, but I am still learning the loops in webpack. I had a problem, googled it and found a solution that worked for me. I am not able to explain more about the implications, but it would be nice if you guys had a look at it.\n. Experienced same problem. Wanted to use output for an Apache Cordova app running on android. Had to change the assetsPublicPath from '/' to '' to get it running on android device. But when I did this, it would no longer work on dev server. The solution was to fix it like explained in issue #103 . Should the config support two different assetsPublicPaths out of the box?\n. ",
    "tvld": "Still getting this problem as well:\nModule not found: Error: Cannot resolve module 'fs'.\nWhen I run some script with node test.js module fs works perfectly. So with vue I can not use fs !!  I actually think this is a breaking bug for vue. \nOn Gitter @dodas mentioned it works on prod, jsut not on dev. Did not test prod myself\n(Ubuntu 16.04 / npm 3.10.3 node v6.4.0 )\n. Excellent. Thank you. All the deprecation warnings put on the wrong foot.\nIndeed lsof -i :8080 showed that I had syncthing-gui running on that port. Setting that one to different port and now... Vue welcomes me ;)\nThanks !\n. Problem same for vue init webpack and vue init webpack-simple\nVery simple test:\nvue init webpack testapp\ncd testapp\nnpm install\nadd a line to main.js:\njs\n const fs = require('fs')\nand npm run dev\nAm I really the only one with this issue ?\n. yes.. I tried that,  and although webpack no longer complained, it still did not work...\nBut you know what? I realized I was trying to use 'fs' in...the browser... oops... should that be the problem? fs in server makes more sense  ;)\n. Was an Nginx issue, not Webpack's. All files were there but my Nginx conf file was missing:\nhttp {\n  default_type application/octet-stream;\n  include  /etc/nginx/mime.types;\n [...]\n}\nSorry to bother here...\n. Got the same issue: pure and fresh install on Ubuntu 17.04 (node v6.12.0), all clean and new   ( default on all vue init questions):\nvue init webpack my-project \ncd my-project\nnpm install\nnpm run dev\nChanging and saving \"HelloWorld.vue\" does not hot reload. But in terminal Ctrl-C and again nmp run dev shows changes.\n@LinusBorg  Indeed, setting poll: true  in index.js makes hot reloading working though. - no VM, docker or whatever, just on my new Dell XPS 15\n- no other watchers that I am aware of\n- ~/Websites/Company/websites/my_project\n. @boltonomous what OS you use?. Just double checked again, from scratch, and now with Chrome instead of Firefox... same isseu. No hot reload... Sorry reload stopped working. It worked for me in the past without  issues on my other pc. > No hot reload... Sorry reload stopped working. <\nJust meant to say same, no hot module reload when I leave the poll: false\nIn Chrome webdev console it says though: [HMR] Waiting for update signal from WDS... so the waiting is ok, just webpack never signals unless it forced to poll. \nMy version by the way:\nnpm list webpack\n[...]\n\u2514\u2500\u2500 webpack@3.8.1. After restarting my PC, hot reload works as intended, so also with poll: false.  Double checked and created a new project from scratch and HR fine. Could this be an access right issue for webpack? No idea...\nMy two cents: try to restart PC if hot reload does not work...\n. And cheered too soon... stopped again :-( \nLogout/Login did not resolve\nRestart solved it again, but now I wonder for how long ? \nBaffled.... @LinusBorg  FYI sudo npm run dev does work, so it must be something in my system regarding to permissions. \n I suppose you were right closing the issue here. But I still need to figure out how to solve this... maybe some group membership or something missing? Maybe because I downgraded from node v8 to v6 something was screwed up...? Anyway, if I find it, I will report ). Seems I finally found it: my $cat /proc/sys/fs/inotify/max_user_watches was on 8192  and this helped me:\necho 100000 | sudo tee /proc/sys/fs/inotify/max_user_watches\nNow Vue hot reload works without sudo and without poll ! ))))\nReally closed ;))\n. @p01ymath you're welcome... ). @cgillions  you see the changes if you Ctrl-F5 in Chrome?. @cgillions then your problem must be not related to this thread. I would suggest to try other browser and check if your code has no sticky errors.... ",
    "eroncastro": "Im my case, I found the solution here:\nhttps://github.com/webpack-contrib/css-loader/issues/447. ",
    "mlyknown": "Code without Babel translation?\n. ",
    "SiegfriedEhret": "Hello @lee134134134,\n@chrisvfritz is right about the eslint thing.\nI just got the same issue, I chose to configure the eslint myself (no standard, no airbnb).\nSo I have this .eslintrc.js file after the vue init webpack my-project:\njavascript\nmodule.exports = {\n  root: true,\n  // required to lint *.vue files\n  plugins: [\n    'html'\n  ],\n  // add your custom rules here\n  'rules': {\n    // allow debugger during development\n    'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0\n  }\n}\nYou need to add this to enable ES modules:\njavascript\nparserOptions: {\n  sourceType: 'module'\n}\nSo your file is now:\njavascript\nmodule.exports = {\n  root: true,\n  parserOptions: {\n    sourceType: 'module'\n  },\n  // required to lint *.vue files\n  plugins: [\n    'html'\n  ],\n  // add your custom rules here\n  'rules': {\n    // allow debugger during development\n    'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0\n  }\n}\nMy npm run dev output is now:\n```\nsiegfried@home ~/dev/vue-people (git)-[develop] % npm run dev                                              :(\n\nvue-people@1.0.0 dev /home/siegfried/dev/vue-people\nnode build/dev-server.js\n\nListening at http://localhost:8080\nwebpack built da12e0ee4af97cbde1cd in 715ms\nHash: da12e0ee4af97cbde1cd\nVersion: webpack 1.13.0\nTime: 715ms\n     Asset       Size  Chunks             Chunk Names\n    app.js     275 kB       0  [emitted]  app\nindex.html  220 bytes          [emitted]\nChild html-webpack-plugin for \"index.html\":\n         Asset     Size  Chunks       Chunk Names\n    index.html  21.4 kB       0     \nwebpack: bundle is now VALID.\n```\nAll good !\n. ",
    "thatandyrose": "@chrisvfritz hey dude, thanks for the reply.\nBasically I'm using this article to deploy the app on Heroku:\nhttps://medium.com/@sagarjauhari/quick-n-dirty-way-to-deploying-vue-webpack-apps-on-heroku-4ab964ee536#.1qjrrs6jy\nMy set up is the same as the article EXCEPT in the build property in the webpack file I've left it as it is in the webpack template, which is to use build.js.\nI think the issue is... build.js references dependencies that aren't loaded in production.\nWhen the code is pushed to Heroku, Heroku run build.js with the env set to Production and it then throws an error saying it can't find any module that's only defined in the devDependencies.\nDoes that make sense?\n. @chrisvfritz (FYI I'm totally new to Webpack, node, ES6, express and all that so excuse the ignorance)\n. @chrisvfritz sorry, some extra info. This is from the Heroku build logs:\n```\n-----> Node.js app detected\n-----> Creating runtime environment\n   NPM_CONFIG_LOGLEVEL=error\n   NPM_CONFIG_PRODUCTION=true\n   NODE_ENV=production\n   NODE_MODULES_CACHE=true\n\n-----> Installing binaries\n       engines.node (package.json):  unspecified\n       engines.npm (package.json):   unspecified (use default)\n   Resolving node version (latest stable) via semver.io...\n   Downloading and installing node 5.10.1...\n   Using default npm version: 3.8.3\n\n-----> Restoring cache\n       Skipping cache restore (new runtime signature)\n-----> Building dependencies\n       Pruning any extraneous modules\n       Installing node modules (package.json)\n   > the-100-mile-client@1.0.0 postinstall /tmp/build_17d3fe9944e0b6e4f078f45187434413/thatandyrose-the-100-mile-client-5dd0787c0434e15666cb0590f3e9c7301e673a41\n   > npm run build\n\n\n   > the-100-mile-client@1.0.0 build /tmp/build_17d3fe9944e0b6e4f078f45187434413/thatandyrose-the-100-mile-client-5dd0787c0434e15666cb0590f3e9c7301e673a41\n   > node build/build.js\n\n   module.js:341\n   throw err;\n   ^\n\n   Error: Cannot find module 'shelljs/global'\n   at Function.Module._resolveFilename (module.js:339:15)\n   at Function.Module._load (module.js:290:25)\n   at Module.require (module.js:367:17)\n   at require (internal/module.js:16:19)\n\netc etc etc.\n```\n. @yyx990803 thanks Evan! (Also thanks for Vue!!!). Could you point me to best practices for deploying vue apps.... it's not very clear for newcomers to this js-only world! Thanks so much.\n. @chrisvfritz wow awesome! Thanks so much Chris! I'll try that out. THANK YOU!\n. ",
    "CovertIII": "I ran into the same issue.  Here's how I fixed it. \n(Copied below in case the link ever breaks)\n\ndevDependencies\nWe set NPM_CONFIG_PRODUCTION to true by default to install production dependencies only. If you would like to install devDependencies, you can disable production mode:\n$ heroku config:set NPM_CONFIG_PRODUCTION=false\nHowever, since you usually don\u2019t want all development dependencies in your production builds, it\u2019s preferable to move only the dependencies you actually need for production builds (bower, grunt, gulp, etc) into dependencies.. \n",
    "ChrisCates": "FYI V5 works perfectly fine! :)\n. @chrisvfritz I did it on a fresh project. I'll let v6.0.0 simmer a bit until deps update.\n. ",
    "rayzang8": "I met the same issue(file issue #103), and I modify the default configuraion to solve it.\n. ",
    "yupferris": "@chrisvfritz: I've also run into this problem, and like @runarhk, I was able to fix it as explained by @rayzang8 in #103. The explanation there might not be a PR, but it's pretty close :)\nIn either case, this still seems to be a problem, and at least one of these tickets should be re-opened until it's resolved.\n. ",
    "hekigan": "Actually I have a related issue.\nI am completely fine developing in the root directory when in dev environment.\nProblem arise when the production folder is in a sub (ex: www.site.com/event/party).\nThe biggest issue I have right now is the fonts.\nThe css are parsed with postcss (which is fine), but the utils.js that has the generateLoaders function kind of prevents me to easily add other plugins to postcss.\nMy goal was to use something like postcss-fontpath to fix the path issue.\nIn the current situation I can not have a relative path for my fonts. It's always relative to the root folder whatever I do.\nBasically it would be great to have the possibility to have all assets relative to the current folder, or being able to specify the absolute path to set in prod environment. One or the other would solve my problem I think.\nAnyone else with this kind of problem?\n. Hi guys,\nI think that this is good stuff, but I am concern with adding mqpacker to the build process for the following reason:\nhttps://github.com/hail2u/node-css-mqpacker/issues/16\n. Hi!\nSame thing for me using SASS.\nin App.vue I have:\n<style lang=\"scss\" src=\"assets/sass/app.scss\"></style>\nThis file calls other dependent files in a sub-folder (ex: assets/sass/components/_header.scss).\nBut in the dev environment (Chrome in this case), only <style></style> shows up which is basically useless for debugging and finding the proper source.\nIt's possible to reproduce that with the current repo as I did not change anything in the build files.\nAnyone has found a way around that?\nThank you for your time  :)\n. @PrimozRome , I am guessing that some adjusting will be needed in the webpack config for the dev environment.\n. @chrisvfritz that's perfect! Thanks\n. Coming back to the topic, now that we know about the solution (thank you again for that), would it be possible to implement it for this repository for the dev environment by default?\nWhen working as a team, this is a huge benefit. \nEven if you work alone, if the project grows or you get back to it after a long time, having the source map is a huge help in DEV environment.\n. @yyx990803 I totally understand that. It is why I was suggesting to enable it only in the DEV environment. On build, it should not be there by default due to performance reasons.\nIs there any other issue if being enabled in the webpack.dev.conf.js file?\n. @yyx990803 Mmm, right.\nI should look into that. I never encountered that issue either.\nI will follow the link and try to see if I can replicate the issue and maybe help fix that.\nThank you for your answer and thanks again for a great framework, it's very helpful!\n. Hi, this was discussed previously: #123 \n. Ok, so the problem lies with the plugin html-minify.\nit needs this specific way of writing the comment:\n<!--[if gt IE 9]><!-->\n    <div id=\"app\"></div>\n<!--<![endif]-->\n. @nickspiel , I tried your fix and it mostly behave as it should.\nBut when I have fonts in the static folder and the build \"final\" folder is in a sub-directory (ex: site.com/events/party/static/fonts), the path in the css is still site.com/static/fonts.\nJust to specify a bit more the settings:\nApp.vue:\n<style lang=\"scss\" src=\"assets/sass/app.scss\"></style>\n...\nin a file imported in app.scss, _typography.scss:\n...\n@font-face {\n    font-family: 'my-font';\n    src: url('~/static/fonts/my-font.eot?5bfcg7');\n    src: url('~/static/fonts/my-font.eot?5bfcg7#iefix') format('embedded-opentype'),\n         url('~/static/fonts/my-font.ttf?5bfcg7') format('truetype'),\n         url('~/static/fonts/my-font.woff?5bfcg7') format('woff'),\n         url('~/static/fonts/my-font.svg?5bfcg7#my-font') format('svg');\n    font-weight: normal;\n    font-style: normal;\n}\n...\nin config/index.js:\nbuild: {\n    env: require('./prod.env'),\n    index: path.resolve(__dirname, '../dist/events/party/index.html'),\n    assetsRoot: path.resolve(__dirname, '../dist/events/party'),\n    assetsPublicPath: '/events/party/',\n    assetsSubDirectory: 'static',\n    productionSourceMap: false\n}\n. Since I did not want to fiddle too much with the core of the template, I wrote an extra file fixpath.js in the build folder:\n```\nvar fs = require('fs');\nvar config = require('../config');\nfunction getFiles (dir, files_){\n    files_ = files_ || [];\n    var files = fs.readdirSync(dir);\n    for (var i in files){\n        var name = dir + '/' + files[i];\n        if (fs.statSync(name).isDirectory()){\n            getFiles(name, files_);\n        } else {\n            files_.push(name);\n        }\n    }\n    return files_;\n}\nfunction replaceContent(filePath, stringToReplace, newString) {\n    if (!filePath || !stringToReplace || !newString) {\n        return console.log('some parameters are missing');\n    }\nfs.readFile(filePath, 'utf8', function (err,data) {\n  if (err) {\n    return console.log(err);\n  }\n  var re = new RegExp(stringToReplace,\"g\");\n  var result = data.replace(re, newString);\n\n  fs.writeFile(filePath, result, 'utf8', function (err) {\n     if (err) {\n        return console.log(err);\n     }\n  });\n});\n\n}\n// Get all CSS files of the project\nvar fileList = getFiles(${config.build.assetsRoot}/${config.build.assetsSubDirectory}/css);\nfileList.forEach((file) => {\n    replaceContent(file, /${config.build.assetsSubDirectory}/fonts, ${config.build.assetsPublicPath}${config.build.assetsSubDirectory}/fonts);\n});\n```\nAnd in package.json in the scripts part:\n...\n\"build\": \"node build/build.js && npm run fixpath\",\n \"fixpath\": \"node build/fixpath.js\",\n...\nNot the best solution since I think it would be better to do something about it through postcss or something like that, but it does the trick for the moment.\n. It automatically gets the ${config.build.assetsPublicPath}${config.build.assetsSubDirectory} path from either dev or prod?\n. You have to import like that:\nimport * as d3 from 'd3';\n. @Awakening-j : basically, if you look at the D3 package.json in the node_modules folder, you would see which file is being called as 'main'.\nI am not 100% sure, but it looks like depending if you are using ES5 or ES6, you have to use either import * as d3 from 'd3'; or import d3 from 'd3';\nSo I don't think it is related to Vue cli   :)\n. ",
    "ericjim": "Oh I see, the vue-loader docs (http://vuejs.github.io/vue-loader/start/spec.html) state that I must import these in the following way:\n<!-- import a file from the installed \"todomvc-app-css\" npm package -->\n<style src=\"todomvc-app-css/index.css\">\nWhich in my case translates adding the following to App.vue:\n<style src=\"basscss/css/basscss.css\"></style>\n<style src=\"basscss-flexbox/css/flexbox.css\"></style>\n. I wish instructions for this were explicit somewhere in the starter, but after some investigation it's clear how I can add basscss (or other npm libraries). @yyx990803 \n. ",
    "facesea": "@chrisvfritz can not fixes my issue when i upgraded babel-runtime, own code just have 400kb(include all static assets),maybe the problem is method that i used Vue is wrong.\n. ",
    "peterchaula": "@facesea & @chrisvfritz the issue should be coming from the webpack config. I removed #inline-source-map and my build was down to  197kb\n. ",
    "mdsb100": "hybird \nuse gulp?\n. @chrisvfritz \nHello.vue change script like \nmsg: 'Hello World!'\nto\nmsg: 'Hello World!!!!!!!!!!!!!!!'\nIt does not reload.\nIf change template\nhtml\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n  </div>\n</template>\nto\nhtml\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}123456789</h1>\n  </div>\n</template>\nIt will reload\nDefault Template can show this.\nIs this issue?\nPS: I have to use cmd+R to refresh current web page, if I want to watch new changing when I modify script in Hello.vue\n. Could you use browser-sync replace express?\n. ",
    "murbanowicz": "@chrisvfritz Interactions with server/templates, also I am using bootstrap components which are using bootstrap CSS etc.\nWhat's your suggestions?\n. ",
    "phanan": "Hey, sorry I missed this. I've never tried Vue Webpack + Laravel combo before actually, but will try to find some time this weekend to look at it.\n. ",
    "vinicius73": "Thanks for the feedback.\nAnyway, you can close the PR if it considers that this is not the time. :)\n. ",
    "wklc2014": "I mean I have to manually press CTRL + c to stop the command line, and command \ncd project-folder-name && npm install\nto next steps or open new cmd window to perform the above command.\n. @chrisvfritz  Thank you very much, so I stop it press CTRL + c and go on.\n. ",
    "keepgoingwm": "sorry, forget it.\n. ",
    "midascodebreaker": "solve it ... by trying it in node\ngot it ...\nindex: path.resolve(__dirname, '../../../../views/vue.blade.php'),\n    assetsRoot: path.resolve(__dirname, '../../../../../public'),\n. ",
    "Async0x42": "I'm running on Windows 10 x64 also, and the issue appears randomly. Sometimes I can close all windows, run the command again and it works. Other times I've deleted and reinstalled all node modules and it works.\nQuite often I'm able to run without any issues though. (Haven't tried pre-6.0)\n. The issue was sporadic before, but I haven't encountered the problem since making that change to .eslintrc and using Node 6.2.1 on Win10 x64\n. ",
    "vtrrsl": "Using Node 6.2.1 on OS X, adding this to .eslintrc solves my problem after getting Parsing error: The keyword 'import' is reserved on npm run dev\njavascript\n'parserOptions': {\n  'sourceType': 'module'\n},\n. Great, I'm glad that it seems to work.\n. ",
    "ErickPetru": "@chrisvfritz, good news: everything running very well now with Node 6.2.1 on Windows 10 x64 Build 14361 and the suggested lines at .eslintrc.js. It seems to be a good solution for now.\n. @LinusBorg, the #1294 pull request adressed the new folder structure and also included our first version of the brazilian translation.. ",
    "Vasiliy-Bondarenko": "I'm getting same error again on clean install with different node versions.\n\"Uncaught SyntaxError: Unexpected token import\"\nnode v6.2.1 / npm 3.9.3\nOS X 10.11.6\n\nvue init webpack _clean\ncd _clean\nnpm install\nnpm run dev\n\ninstalled new node...\nnode v6.8.1 / npm 3.10.8\n\nrm -rf node_modules\nnpm install\nnpm run dev\n\nsame issue again...\n\nnvm use 5.11.1\nNow using node v5.11.1 (npm v3.8.6)\nrm -rf node_modules\nnpm install\nnpm run dev\n\nno luck. same issue again...\nlooks like issue is somewhere else... i can not even guess where it can be... :)\n\ninstall config:\n? Project name clean_complete\n? Project description A Vue.js project\n? Author Vasiliy Bondarenko vabondarenko@gmail.com\n? Vue build standalone\n? Use ESLint to lint your code? No\n? Pick an ESLint preset Standard\n? Setup unit tests with Karma + Mocha? No\n? Setup e2e tests with Nightwatch? No\nalso i've tried installing with ESLint=Yes - with the same result...\n. i've found the issue.\nit goes from here: https://github.com/vuejs/vue-loader/blob/70ca3ff64c1ae69bb4b93a142e937fccd2f06c89/lib/loader.js#L62\ni have front-end project directory  inside directory with bigger project which had buble installed. so vue-loader tried to use buble, while it was not properly configured to transpile files. \nnpm lookes for required packages in the parent folders - so it found buble and tried to use it.\nwhen i deleted buble from upper node_modules folder vue-loader started to work as expected.\nit took many hours to find it. i think it's better to include configuration for buble in this package or reverse the check in vue-loader and use properly configured babel by default.\n. yes. i use vue-router. what else can i provide? let me know. i'm not professional in JS/Node.. ",
    "markusha": "Same problem here.\nSystem: Windows 7 x64\nnode --version: 6.3.1\nnpm --version: 3.10.6\nvue --version: 2.4.0\nvue init webpack my-project\nVue build standalone\nUse ESLint to lint your code? No\nSetup unit tests with Karma + Mocha? No\nSetup e2e tests with Nightwatch? No\ncd my-project\nnpm install\nnpm run dev\nResult in browser: Uncaught SyntaxError: Unexpected token import.\nAlways reproducible. And I don't have any node_modules in any ancestor directories of my-project.\n. ",
    "Continuum81": "This is still an issue and should be re-opened as an active bug.\n. ",
    "leocflam": "@chrisvfritz @Vasiliy-Bondarenko \nYes I have the same issue too.\nThe initial installation of vue-cli is just fine.\nBut when I put it inside Laravel project sharing the same Package JSON and node modules, \n(Laravel's Elixir uses buble)\nimport is then unexpected when I compile in vue-cli (while compiling in Elixir is fine)\nWhen I go to node modules and remove all buble folders,\nit works again.\nIs there really no chance vue-cli share the same package.json with other compilation framework?\nI'm really into a scenario where they should share the same directory and config. My temporary fix is to go to vue-loader/libs/loader.js\nand comment out\nvar hasBuble = false\n// try {\n//   hasBuble = !!require('buble-loader')\n// } catch (e) {}\nto make it never try to find buble\nso both Elixir and Vue-cli can compile in babel.. ",
    "wishinghand": "I'm confused about the usage. Where in a vue-webpack project would I set the Environment variable, \nVue.API_URL = process.env.API_URL for an example like pespantelis originally posted about?\n. I figured it out. In the config/dev.env.js and config/prod.env.js files I added my key:value pair (API_URL: '\"URL_GOES_HERE\"' and then just referenced them in my .Vue files like this: process.env.API_URL. \nFor future people who find this thread: pay attention to the double quotes inside of the single quotes. It threw me off for another 20 minutes.\n. ",
    "lauhakari": "I have a question here though.\nMany of us propably have a dev -stage - production setup. But as the env vars are \"hardcoded\" in the file, how would I tell the build to use for example a stage.env.js instead of prod.env.js.\nWould love it if I could just set some environment variable on the server which the app picks up.. ",
    "dtsao": "For future people who find this thread: you have to stop (ctrl-c) and restart the webpack dev server (npm run dev) for changes to config/dev.env.js to take effect. (I am so used to using HMR, I expected the changes to take effect automatically when I saved my changes.). Thanks @LinusBorg for the suggestion. FYI - I assigned a unique name: for the components with duplicate file names, but Chrome's sources tab still shows only one MyComponent.vue entry when expanding webpack:// folder. The debugger displays the file name, not the name from the name: attribute. The code runs OK, but I can't use the debugger in the second instance of the component with the same file name. . ",
    "iawia002": "yeah, thank you\ni got another error:\n``` css\n",
    "davestewart": "I had the same issue with WebPack straight off the bat, here's the full solution:\nnpm install node-sass sass-loader --save-dev\nThen you MUST stop and rerun your npm task :)\n<style lang=\"scss\">\n// didn't seem to matter if lang was scss or sass\n</style>\n. ",
    "OmarMakled": "try this \nnpm i sass-loader node-sass -D. ",
    "jgonzalezd": "I get sass-loader@6.0.6 requires a peer of webpack@^2.0.0 || >= 3.0.0-rc.0 || ^3.0.0 but none was installed when I run npm install sass-loader --save-dev.. ",
    "djdeo": "when i install sass-loader, i get error\nnpm WARN prefer global node-gyp@3.6.2 should be installed with -g. ",
    "doriandarren": "Hi, \ni am try with:\n$ npm install sass-loader node-sass style-loader --save-dev\n. ",
    "PrimozRome": "@hekigan I was searching for solution but so far haven't found one. I have virtually same situation like you... I hope we can solve this as it is really annoying to debug CSS in Chrome.\n. @chrisvfritz many thanks for the solution!\n. Hmm a little bit confused... Works fine locally with npm run dev. \nI will look into it definitely but I'm pretty sure I should have problems locally to for what you are saying right.... You were right... This was changed in v2.1.0... The way I used it was from v.2.0 pre-release from the example. I Guess this was changed later on.\n. ",
    "franciscolourenco": "In development source maps are inlined, what would the problem with be with relative paths? It has been working fine for me.\n. yes, it was a hidden browser window which still had the hmr version loaded.\n. The problem are .vue with lang=\"coffee\" no coverage for that code\n\nOn 21 Jul 2016, at 17:41, Chris Fritz notifications@github.com wrote:\nAny files required here are included for test coverage. See the require.context docs for more information about requiring groups of files.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. @chrisvfritz any example on how to use it with vueloader and .vue files?\n. @chrisvfritz the documentation uses kebab-case file names and doesn't say the convention doesn't apply to them.\n. Vue explains the technical reasons why the convention exists, but that is not the only reason a convention might exist.\n\nIf the section of the documentation which talks about technical enforced conventions exemplifies naming of related things (file names) which could also benefit from a convention they are relevant even if for a different reason.\nPascalCase does NOT seem to appear in any of the examples of the section. Many other naming conventions would also be acceptable. But maybe using case insensitive file names isn't such a bad idea because of file system incompatibilities and version control.\nNevertheless, maybe it is not a good idea for the documentation to promote a different convention than the one used in the official templates, whichever that convention ends up being.\n. > ... um, dist branch. What's up with master here? :)\n+1 What is the logic behind this naming scheme?\n. @chovy that doesn't use the port from the configuration, only from the environment variables.\n. So, no ideas on how to do it without repeating the logic. Should we fix this in the template?\n. Is it possible in this version to specify a port via env variable?\n. Wouldn't being able to specify the port from env be desirable? The use case is being able to easily run tests in a different port than the one used for dev, without having to mess a lot with the configuration. This allows you to run the dev server and the tests in different ports at the same time for example.\n. The code I referenced in #241 supports both dev config and env variables: https://github.com/vuejs-templates/webpack/blob/1.0/template/build/dev-server.js#L11\nHas this been removed in more recent versions? I didn't fully understand what is the relationship of the branch dist with 1.0 and 2.0.\n. Great, thanks! \ud83d\udc4d \n. ",
    "Andre741": "I changed the web pack.base.conf.js and it didn't work, after reading this thread further I changed this option (https://github.com/vuejs-templates/webpack/pull/193) and nothing, still doesn't work as expected. ",
    "zwl1619": "@yyx990803 \nwin 10 x64\nNode 6.1\n. ok\n. ",
    "simplesmiler": "Probably related to https://github.com/vuejs-templates/webpack/issues/116\n. To my knowledge, there are no semicolons in HTML.\nCan you please give more details?\n. See prompts. Depending on your answer during the initialization of the project, vue-cli may include the {{#unit}}...{{/unit}} section (and other sections alike) into your package.json.. Regarding fsevents, it is unrelated.\nEACCES means you don't have permissions to listen on the given address. I would guess it's due to firewall/antivirus settings. Try listening on a different port (e.g. 8079) or different host (e.g. localhost or 127.0.0.1).. Also https://webpack.js.org/guides/migrating/#automatic-loader-module-name-extension-removed. I agree.\nFor convenience we could add something like @ as an alias to the src directory, so that @/somehting would resolve to path_to_src/something.. How about '@': resolve('src')? It will be '@/src' in the code, which is just one symbol more then '@src', and is distinguishable from the scoped modules.. A side note, es6-promise and es6.promise.js from core-js are different modules, it's not the same module exported twice.. The bundler can not detect the dependency this way. Instead you should do:\n``` js\ndata() {\n  return {\n    img: require('./assets/image.png'),\n  };\n},. ",
    "Jdruwe": "I am not sure where to place this require?\n. This gives me:\nModule not found: Error: Cannot resolve module '~assets' in /Users/jdruwe/Personal/VueJs/travel-vue/src/components\n\n. ",
    "ryutamaki": "I can not use dynamic image path in template.\nDoes anyone have any suggestion for this problem?\nThe problem looks like, image names(paths?) are translated to base64 name and it refer to \"translated path\" if I use static image path.\nHowever, I was using dynamic image path, that does not refer to translated image path.. Here is what template-compiler did\njson\n----------------- BEFORE -------------------\n{ type: 1,\n  tag: 'img',\n  attrsList: [ { name: ':src', value: 'item.src' } ],\n  attrsMap:\n   { ':src': 'item.src',\n     ':class': '[item.isActive ? \\'active\\' : \\'non-active\\']' },\n  parent:\n   { type: 1,\n     tag: 'a',\n     attrsList: [ [Object] ],\n     attrsMap: { ':href': 'item.href' },\n     parent:\n      { type: 1,\n        tag: 'li',\n        attrsList: [],\n        attrsMap: [Object],\n        parent: [Object],\n        children: [Object],\n        for: 'list',\n        alias: 'item',\n        plain: true },\n     children: [ [Circular] ],\n     plain: false,\n     hasBindings: true,\n     attrs: [ [Object] ] },\n  children: [],\n  plain: false,\n  classBinding: '[item.isActive ? \\'active\\' : \\'non-active\\']',\n  hasBindings: true,\n  attrs: [ { name: 'src', value: 'item.src' } ] }\n{ name: 'src', value: 'item.src' } 'src'\n----------------- AFTER -------------------\n{ type: 1,\n  tag: 'img',\n  attrsList: [ { name: ':src', value: 'item.src' } ],\n  attrsMap:\n   { ':src': 'item.src',\n     ':class': '[item.isActive ? \\'active\\' : \\'non-active\\']' },\n  parent:\n   { type: 1,\n     tag: 'a',\n     attrsList: [ [Object] ],\n     attrsMap: { ':href': 'item.href' },\n     parent:\n      { type: 1,\n        tag: 'li',\n        attrsList: [],\n        attrsMap: [Object],\n        parent: [Object],\n        children: [Object],\n        for: 'list',\n        alias: 'item',\n        plain: true },\n     children: [ [Circular] ],\n     plain: false,\n     hasBindings: true,\n     attrs: [ [Object] ] },\n  children: [],\n  plain: false,\n  classBinding: '[item.isActive ? \\'active\\' : \\'non-active\\']',\n  hasBindings: true,\n  attrs: [ { name: 'src', value: 'item.src' } ] }\nThis code above is created by adding console.log(el) up and down on the line 20\nhttps://github.com/vuejs/vue-loader/blob/92d97a60e84ef5b96ea27aba71e44953ca369551/lib/template-compiler.js#L12-L28\nUsually, if BEFORE has the static path, AFTER has require statement.\nHowever, if BEFORE has variables it shouldn't.\nThe reason why dynamic path can not be treated by url-loader is variables might be expanded after compile the code.\nHere is my component just FYI\n```vue\n\n\n\n\n\n\n\n\n\n\n\n\nexport default {\n  name: \"test-menu\",\n  props: {\n    list: {\n      type: Array,\n      default: () => {\n        return [{\n          href: \"hello\",\n          src: \"world\",\n          isActive: true,\n        }];\n      },\n    },\n  },\n}\n\n``. I'm usingslot` to avoid this problem for now. Sorry this is my mistake. I close this.. ",
    "Suzukaze-Yoru": "In script , require('imgpath') not require the ~ . ",
    "aisunfeng": "my solution!\n1.<img :src=\"icon_src\" />\n2.import the image at the top level\n   import icon from 'icon.png';\n3. data () {\n            return {\n                icon_src:icon \n            }\n        }\nor computed instead. ",
    "ericbehughes": "this is still broken. I tried both putting the required way in a function and computed property and tried importing from top level and all don't work.. ",
    "jamesgraham10": "The usage of ~ will depend on how your webpack aliases are setup. For example I'm using the vue-cli with the webpack template, which uses @ to resolve the src directory (I think the webpack-simple uses ~). So my solution for this the above was to use require('@/assets/' + this.country.name + '.jpg'). ",
    "makeitTim": "I have the same problem... trying to follow you all but this does not work:\n```\n\n\n{{ item.name }}\n\n\n\n\nexport default {\n  name: 'DataItem',\n  props: ['item'],\n  computed: {\n    path (icon) {\n      return require('../assets/icons/' + icon + '.svg')\n    }\n  }\n}\n\n```\nAlso, should the icon images themselves be separate components? They are quite small and each Item has several.\nThis is what the working images would look like. When I hardcoded these webpack included them as base64 because they are all simple SVG:\n<img src=\"../assets/icons/phone.svg\" />\n    <img src=\"../assets/icons/usb.svg\" />\n    <img src=\"../assets/icons/wifi.svg\" />\nThanks for any help.. ",
    "Overdrivr": "@makeitTim Try putting the path function inside methods instead of computed, it should fix your issue.. ",
    "serkandemirel0420": "with vue-cli none of them works. ",
    "valenber": "<img :src=\"buildLogoUrl(logo)\" :alt=\"buildAltTag(logo)\">\nand \nmethods: {\n    buildLogoUrl(name) {\n      return require(`../assets/images/logo_${name}.png`);\n    },\n    buildAltTag(name) {\n      return `Logo of ${name}`;\n    }\n  }\nworks with vue-cli 3.1.1. ",
    "dufus-proxy": "Is it a matter of making another version of each configure file part that adheres to the Airbnb rules? If so can help. Or do you have something else in mind using lots of conditionals etc?\nI know you could have a standard Js eslintrc ar root and a Airbnb eslintrc at in src and that should work. \nBut that might confuse the mater if you need to edit project files outside of src and have to keep jumping between code styles.\n. ",
    "DragonI": "I'm using Win7 with the latest version of the webpack template. I haven't experienced this problem. I just retested my production build against FF 47.0b6 and 48.0a2 and the script and link tags are properly pathed:\n<link href=\"/static/css/app.36d8b7a1d322a4b6cd3dcb054c72ff4c.css\" rel=\"stylesheet\">\n<script type=\"text/javascript\" src=\"/static/js/app.a548be7550600628533c.js\"></script>\nBTW, I'm using nginx\n. ",
    "Swimburger": "I'm using Windows 10 and FF 44.0.2 and Firebase hosting.\n. I'm using the template that came with Vue 1.0.19. Not entirely sure what version of the vue-cli I had globally installed back then. In that case, this probably isn't an issue in the current version.\nThank you anyways!\n. ",
    "zigomir": "Huh, I see where the problem is now. I'm using <script type=\"text/ecmascript-6\"> to get proper ES6 for WebStorm and this breaks ESLint. Will dig deeper.\n. That was it. With type=\"text/babel\" eslint will work inside .vue files and WebStorm will work with ES6 syntax. Thank you @chrisvfritz ! :)\n. It works through webpack and you can se errors in browser + terminal. But inside editor yep. But I think two places are enough :)\n. No, not really. You mean Vue 2.0 docs or webpack-template specific 2.0 docs?\nPlease see this PR: https://github.com/vuejs-templates/webpack/pull/225. Minimal(istic) note about version is already there.\n. @niallobrien yes :) and that's because 2.0 isn't merged yet. See https://github.com/vuejs-templates/webpack/pull/225\n. Closing due to inactivity.\n. @chrisvfritz yeah, it certainly can be done. I'll prepare something soon and ping you for feedback.\nTBH, I know this isn't this discussion, but I find this template a bit bloated ... especially airbnb styling conditionals etc. Dunno if it's worth the hassle to put all this in a template.\n. @chrisvfritz thanks! I went and edited webpack.base.conf.js so vue key looks like so:\njs\nvue: {\n    loaders: utils.cssLoaders(),\n    postcss: [\n      require('autoprefixer')({\n        browsers: ['last 2 versions']\n      })\n    ]\n  }\nWhat's funny/strange though, is that webpack won't complain at all even though I didn't add autoprefixer to package.json at all. I don't get that, do you?\nAlso, this branch breaks hot-reload and I wasn't able to figure out why ... because I'm a webpack newbie + I kinda started hating on it while trying to make hot reload work. So this is my call for help if someone else wants to pick this 2.0 template up because I'm really not motivated fighting webpack :)\n. Huh, it works for me now too :) Have no idea what happened in between. I added autoprefixer now. Thanks for detailed explanation! :)\n. We just need to remove this if and we'll have it ;)\nhttps://github.com/vuejs/vue-cli/blob/master/bin/vue-init#L109\nOn Mon, Sep 12, 2016, 01:21 Thorsten L\u00fcnborg notifications@github.com\nwrote:\n\nI just added a couple ofg things to the 2.0 branch, and it works fine.\nBut we still should add a prompt/warning that this template now uses 2.0\nby default - that is still missing.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/pull/225#issuecomment-246279718,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA6biVR0S4st7ir0sBlD-1cK0znkM6HAks5qpQuAgaJpZM4JoG3f\n.\n. @chrisvfritz I just tried this branch and to me it all looks and works fine. We only need to decide into which branch we want to merge it (#270). I'm for master ;)\n. Closing in favor of #281.\n. @petervmeijgaard I'm really sorry. We did a force push against dist so this is probably the reason. Can you please re-open it?\n. Yes for the master please. We removed dist branch, because new master is now for Vue 2.0 as all other vuejs-templates. So we might want to merge this commit into master and 1.0 as well.\n. @LinusBorg I think it's safe to close this one, right?\n. @chrisvfritz not really sure what do you mean. Are you asking if dist is deprecated? In any case, I'm not sure, I don't really use or watch webpack template.\n\nI only know we have some extra code in vue-cli just to check if dist branch exists and use it if it does. I think we should remove it since vue-cli supports branches. Sorry, I might be off topic.\n. @chrisvfritz yes, that is correct. dist branch will be used by vue-cli by default (https://github.com/vuejs/vue-cli/blob/master/bin/vue-init#L116).\n. @LinusBorg are you sure? This means that old vue-cli versions have hardcoded dist branch lookup?\n. Yes, and also checkDistBranch is only for official templates so there should be no problem if we remove it.\n. Yeah, for sure. I also always favor explicitness \ud83d\udc4d \n. Less options = less config = better imho.\n. Hi @chrisvfritz! I'll do this tomorrow if it's ok with you? I'm barely from my vacation and had 100 other things to do first.\n. Eh, my fault, actually I forgot to mention anywhere (besides job of course) that I'll be having one.\nFirst thing that comest to mind is, what about yarn? :) But probably we don't need to care about it just yet. \nAnother, more important question that comest to my mind: should we move the logic directly to vue-cli and inform user after download? I know user can use/install vue-cli with different node version, but still, this way all templates could benefit from just adding engines part to package.json.\nOtherwise LGTM (I tried it locally and works fine). If it solves problems I'd merge this and try it out here and maybe later port to vue-cli, if or when it turns out to be useful.\n. @chrisvfritz I agree with you. What we might do instead is to put a comment around viewport and let users uncomment it if they need it. What do you both think about this? cc @anishkny \n. I agree @LinusBorg. One file to rule them all whenever possible.. Thanks! Fixing this now.\n. I agree with @chrisvfritz. I think we should keep official vue templates as simple as possible. If we are going to add router and vuex, I'd definitely do it as a separate template. Although on the other hand this means lot's of copy/pasta boiler plate thats already here (all webpack config and stuff).\nI'd use https://github.com/egoist/vuepack if I'd need full-stack-vue today :)\nI don't know, I'd keep it as simple as possible. If adding vue-router or vuex is hard to this template, I'd start fixing router or vuex (or their docs) instead.\n. ",
    "sergeymorkovkin": "With PhpStorm it doesn't seem to work...\n. Php/WebStorm use stdin to pass source code. And (what in more interesting) some tricky algorithms to detect which files should lint, and which should not.\n. ",
    "devboxr": "Sorry to dig this up - but I also have this issue. Using Atom, normal JS files show inline errors and warnings like this. However, in .vue files this is not the case. I do see the errors in the console and browser, but not inline.\nAny tips? Or is this intended due to limitations?\n. @chrisvfritz Thanks! That did indeed do something, but is being followed by this:\nTypeError: Cannot read property 'map' of undefined\n    at /Users/robin/Development/skappbar.dev/node_modules/eslint-plugin-html/src/index.js:86:39\n    at Array.forEach (native)\n    at Object.postprocess (/Users/robin/Development/skappbar.dev/node_modules/eslint-plugin-html/src/index.js:85:19)\n    at processText (/Users/robin/Development/skappbar.dev/node_modules/eslint/lib/cli-engine.js:252:30)\n    at CLIEngine.executeOnText (/Users/robin/Development/skappbar.dev/node_modules/eslint/lib/cli-engine.js:761:26)\n    at Object.cli.execute (/Users/robin/Development/skappbar.dev/node_modules/eslint/lib/cli.js:181:36)\n    at lintJob (/Users/robin/.atom/packages/linter-eslint/lib/worker.js:35:10)\n    at /Users/robin/.atom/packages/linter-eslint/lib/worker.js:69:20\n    at Emitter.emit (/Users/robin/.atom/packages/linter-eslint/node_modules/process-communication/node_modules/sb-event-kit/lib/emitter.js:70:19)\n    at /Users/robin/.atom/packages/linter-eslint/node_modules/process-communication/node_modules/sb-communication/lib/main.js:22:23\nI'm using a fresh npm installation, all files being the default.\n```\n$ node -v\nv6.3.1\n$ npm -v\nnpm@3.10.3 /usr/local/lib/node_modules/npm\n```\nAny idea?\n// UPDATE: Restarting Atom actually did the trick. No idea why that worked and no idea why I haven't tried this before. Nevermind and thanks a lot!\n. ",
    "yisibl": "https://github.com/lkiarest/eslint-plugin-vuefix\n. I also encountered such a situation.\n. ",
    "jbreuer95": "+1. ",
    "ianwalter": "Sure, I'm guessing I should have based off of dist as well?\n. @chlab The reason for the -- is so that you pass the arguments to the Nightwatch process instead of NPM when you use npm run. Using it, you can pass any argument to Nightwatch, including --test.. Closing thanks to new maintainer of karma-sinon-chai.\n. @chrisvfritz Ok, all set.\n. Np, nitpicks welcome.\n. Yea, thats precisely what I was thinking too.\n. @anlexN I'm not a maintainer of this project. For future reference, It's inappropriate to just mention random contributors to help you with a problem.\n. @vaske Upgrading shelljs to 0.7.6 fixed it for me.. Apologies, temporarily closing until I can fix an issue.. ",
    "chlab": "@ianwalter what's the reason for the -- (npm run e2e --) as the first argument? Just trying to understand.\nAlso, if you guys are interested, I could contribute automatic finding of specific test cases (npm run e2e --test SomeModule).. I updated all the build/ files with the most recent version of things and now it seems to work. @eddyerburgh thanks for this! Was planning on doing the same! I just tried this out and am running into a few issues. This is on a fresh project setup with vue init eddyerburgh/webpack so there's barely any custom code.\n1.\nThere seems to be an issue with loading modules:\nCannot find module './src/vuex' from 'ParticipantsList.vue'\nThe line in ParticipantsList.vue: import { mapState } from 'vuex'\nA similar case:\nCannot find module './src/components/Participant' from 'ParticipantsList.vue'\nThe import statement: import Participant from '@/components/Participant'\n2.\nWhen running npm run unit I also get these errors regarding code coverage:\nRunning coverage on untested files...\n    Failed to collect coverage from src/App.vue\n    ERROR: TypeError: Cannot read property 'fileCoverage' of undefined\n    STACK: TypeError: Cannot read property 'fileCoverage' of undefined\n    at Instrumenter.instrumentSync (node_modules/istanbul-lib-instrument/dist/instrumenter.js:147:39)\n3.\nTo debug this I setup another quick test project with these options:\n? Project name test-setup\n? Project description A Vue.js project\n? Author The Author\n? Vue build standalone\n? Install vue-router? No\n? Use ESLint to lint your code? No\n? Setup unit tests Yes\n? Pick a test runner jest\n? Setup e2e tests with Nightwatch? No\nThis results in an invalid package.json:\n\"unit\": \"jest test/unit/specs --coverage\",\n,\n\"test\": \"npm run unit\"    \"build\": \"node build/build.js\"\n(extra comma between the two script defintions and a missing comma after the test script definition.)\nThanks again for your work!. I justed re-inited my project with the updated template and it looks like the issues I encountered the first time around are all solved \ud83d\udc4f  Thanks @eddyerburgh . ",
    "aflext": "92 \u6211\u548c\u8fd9\u91cc\u7684\u95ee\u9898\u4e00\u6837\uff0c\u7136\u540e\u4e5f\u89e3\u51b3\u4e86\u3002\u591a\u8c22\u4e86~~~\n. @chrisvfritz all my project uses less, its a huge work to transform to sass. And i don't think it's a good idea to modify the bootstrap source code.\n. @yyx990803 Do you mean thant i just link the bootstrap.min.css file in the head of my html ?  What if i want to use the less variables defined in bootstrap less ?\n. @chrisvfritz Thanks a lot for replying, would you mind posting a demo code for using scss with variable override ?\n. @chrisvfritz I did try to override the font path variable in less with ,but the url path of font facc is still the like ./static/fonts/glyphicons-halflings-regular.448c34a.woff2:\nsrc/home/Home.vue:\n<style src=\"./index.less\" lang=\"less\"></style>\nsrc/home/index.less:\n```\n@import '~bootstrap/less/bootstrap.less';\n@icon-font-path: \"~bootstrap/fonts/\";\n```\ndist/static/css/app.326961f0db864479a769a9efc95ceea9.css:\n```\n@font-face {\n    font-family: Glyphicons Halflings;\n    src: url(./static/fonts/glyphicons-halflings-regular.f4769f9.eot);\n    src: url(./static/fonts/glyphicons-halflings-regular.f4769f9.eot?#iefix) format('embedded-opentype'), url(./static/fonts/glyphicons-halflings-regular.448c34a.woff2) format('woff2'), url(./static/fonts/glyphicons-halflings-regular.fa27723.woff) format('woff'), url(./static/fonts/glyphicons-halflings-regular.e18bbf6.ttf) format('truetype'), url(./static/img/glyphicons-halflings-regular.8988968.svg#glyphicons_halflingsregular) format('svg')\n}\n```\nBut i just want this\n```\n@font-face {\n    font-family: Glyphicons Halflings;\n    src: url(../fonts/glyphicons-halflings-regular.f4769f9.eot);\n    src: url(../fonts/glyphicons-halflings-regular.f4769f9.eot?#iefix) format('embedded-opentype'), url(../fonts/glyphicons-halflings-regular.448c34a.woff2) format('woff2'), url(../fonts/glyphicons-halflings-regular.fa27723.woff) format('woff'), url(../fonts/glyphicons-halflings-regular.e18bbf6.ttf) format('truetype'), url(../img/glyphicons-halflings-regular.8988968.svg#glyphicons_halflingsregular) format('svg')\n}\n```\n. ",
    "lazystone": "I get the same. Template with airbnb profile is broken :(\n. ",
    "RXminuS": "+1 ... Not really understand your guide @chrisvfritz? I'm assuming you mean there's an error in 'airbnb-base' which the .eslintrc.js extends?\nIn that case has someone opened an issue, and if so can we reference it here?\n. ",
    "karanssj4": "I created a gist which resolves this\nhttps://gist.github.com/karanssj4/7188528ab36fb4e78c8fc385510f3136. ",
    "jaswdr": "@yyx990803 \nOS: Ubuntu 14.04 LTS\nNode: v4.4.3 (stable)\nWebpack: latest (cloned from branch master)\n@chrisvfritz \nyes I'm using Airbnb\n. ",
    "blake-newman": "Sorry xD buggered that up :P\n. /ping @chrisvfritz @yyx990803\n. Will amend noticed these issues when using today, looks like I missed up my copy paste from other project. Sorry will sort tomorrow morning.\n. @chrisvfritz Updated all should be good now, although i would give it a quick run through as little busy and very tired, so may have made a mistake but all seems okay.\n. Sure no rush!\n. Yeah, closing this PR for now. Will recreate once stylelint becomes a bit more stable. They are doing rapid amount of changes at the moment. Feels like this should currently be user choice, as we don't want to have to depend on stylelint and have to keep on updating.\n. @gucong3000 You can fork and continue developing on feature/stylelint branch.. Please follow the Vue.js issue template. \nBriefly an issue should contain:\n- Dependency versions\n- Steps necessary to reproduce the issue you are running into.\n- A JSFiddle/JSBin/Codepen to demonstrate your issue. You could start with this template that already includes the latest version of Vue.\nIf no information is provided, this issue will be closed within 5 days. If the issue is closed please reopen when relevant information is provided.\nThanks.\n. Feel free to open a PR. With 2.0 update, most packages used will be revised and updated where appropriate.\n. Hello! Please use our forum or Gitter for questions like this. The repo issue list is strictly for bug reports and feature requests.\nThanks.\n. Yeah I'd agree the best library for maintainability. \nHowever the development experience with Vue files is a little raw. Syntax and styling is off.\nTwo solutions:\nFork babel-istanbul-loader and self maintain or\nsee how much effort is required to improve the plugin to support html based files.\nMaybe a quick investigation on the later would be good, as it seems alot of tools seem to use the official version. \nIMO I think creating a babel-vue-script-parser plugin would be nice to extract html. This would be an agnostic solution to parse Vue file script content. \nTools like Ava, Jest, Istanbul ect would really benefit from a plugin like this.\nI would certainly suggest this approach, as Ava is an amazing testing tool. That has alot of React like testing Utils that we could leverage. Like snapshot testing. . /cc @posva. Note this is similar to a piece of.work I did to get stylelint to cover style tags. I could easily create a plugin to mimic this for script tags with babel. . Yeah certainly. @aasheer Please see the new recipe for ava.js and vue, this should help. https://github.com/avajs/ava/blob/master/docs/recipes/vue.md. Looks to me that the issue resides in the order of the helpers for Ava perhaps. Maybe change the setup helper to run last.\nI would need a reproduction if possible to help further.\n\"ava\": {\n    \"babel\": \"inherit\",\n    \"require\": [\n      \"ignore-styles\",\n      \"babel-core/register\",\n      \"./tests/unit/helpers/setup.js\"\n    ]\n},. Additionally there is this PR for vue-loader that solves the use of lang=\"postcss\". \nhttps://github.com/vuejs/vue-loader/pull/1055. But what if you have multiple environments such as staging?\nYou build for then environment, you don't prod for the environment. Also there is nothing stopping you from changing. Good question we can probably have sub conditions for syntax. And as using plugin we could do less. \nScss is supported in node blob for files. \nLess is currently experimental, to i have avoided it currently. Also I think Less is very little used these days. Especially if starting a new project, as scaffolding is for new projects I think we can leave Less behind until stylelint fully supports it.\n. Probably best to use BABEL_ENV\nBabel will use either of these, but will probably be more clear of the use and cause less side affects. ",
    "gazpachu": "@chrisvfritz I think you should reconsider allowing this kind of questions too, as it is quite a relevant topic and with the labels, everything can be correctly tracked and organised.\n@silvestreh did you manage to find a proper way of doing it?. I fixed it with one line of code in build/utils.js:\nscss: generateLoaders(['css', 'sass?data=@import \"~assets/styles/app\";'])\nThen, in src/assets/styles/app, you add all the @imports and voil\u00e0!. @hal0gen thanks. I've updated the stackoverflow thread but in the Vuejs forum, I can't sign-up/login, so if you can, please post it there. Thanks. Yes, this was probably a previous app running on the same port. Thx. @Nayir somehow it stopped appearing. I'm not sure how it happened.. @LinusBorg @Nayir it actually keeps appearing, so it's really something that comes from this package. ",
    "hal0gen": "Apparently this looks like the only solution available, a long discussion about the same issue can be found here: https://github.com/vuejs/vue-loader/issues/328. @gazpachu That's fantastic, I confirm it works! \nThis is a common problem for people using vue-cli, I think it should be mentioned in the documentation. From what I understand, your answer is very relevant for the following issues:\n- https://github.com/vuejs/vue-loader/issues/356\n- https://github.com/vuejs/vue-loader/issues/326\n- https://github.com/vuejs/vue-loader/issues/110\n- https://github.com/vuejs/vue-loader/issues/95\nYou might also want to answer the following questions/issues (I'd do it myself but you solved the puzzle):\n- vue.js: always load a settings.scss file in every vue style section\n- vue-cli webpack with scss undefined scss variable in component style. ",
    "Fleeck": "@gazpachu amazing, big thanks for this!. ",
    "grantcarthew": "Hi, I just want to add to @gazpachu answer above. I used a different syntax for my build/utils.js file like so:\n```js\nlet sassOptions = {\n    indentedSyntax: true\n  }\n  let scssOptions = {\n    includePaths: [\n      '~src/styles'\n    ],\n    data: '@import \"~src/styles/main\";'\n  }\n// http://vuejs.github.io/vue-loader/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(),\n    postcss: generateLoaders(),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass', sassOptions),\n    //  Make custom SASS available to all components https://github.com/webpack-contrib/sass-loader\n    scss: generateLoaders('sass', scssOptions),\n    stylus: generateLoaders('stylus'),\n    styl: generateLoaders('stylus')\n  }\n```\nFor reference, the sass-loader supports all node-sass options. So in the above code you can add any of those options to the scssOptions object.. @alexmccabe When I posted that snippet above I didn't post the generateLoaders function. Checkout vue-foundation for a better example.. Hi @lehni. As stated in my last comment, see the vue-foundation template for reference. Here is the file with the answer for your question:\nhttps://github.com/hal0gen/vue-foundation/blob/master/build/utils.js\n. There should be a reference to vue-foundation here. You don't have to use the template if you don't want to. I created my project using the vue-cli and then copied the relevant parts from the template.. For reference if anyone else finds this issue, read here: #546. I've been thinking on this last night. Rather than some multi-option like changeBaseUrl it would be better just to expose the index file option. Something like this:\n```js\n{\n  defaultDocument: /index.html\n}\n// In the dev-server.js\napp.use(require('connect-history-api-fallback')({\n  index: config.dev.defaultDocument\n}))\n```\nThis then allows the user to set the value to anything rather than just change the sub-path. Couple this with a good documentation example of how to change the Vue application to a sup-path and you are set.\nAlso, an example which mentions nginx and other proxy solutions would help people searching the internet for it.. Ah, thanks @LinusBorg.\nDocumentation on those to extra references: https://github.com/jantimon/html-webpack-plugin\nI don't think I need to change those setting in my use case however I'm not sure how you would want to expose them to a template user through configuration.\nMaybe something like the following config options:\n```js\n{\n  htmlDevServerDefaultDocument: 'index.html',\n  htmlTemplate: 'index.html',\n  htmlBuildFile: 'index.html'\n}\n```\nAnother option would be to not add these configuration options and just document how to change them and what they do?\nI think the browser default document should be added though because in its current state there is no configuration for the 'connect-history-api-fallback' constructor.. @iAlexanderMoon Hi. I didn't know about this change. Thanks for chiming in. I'll try it out however the client seems to be working ok as it is. I am using nginx as a front-end so it might be handling it for me.\n[Edit]\nAh! I was just about to look at this and read the change. I am not having issues because of my nginx config which has this section in it:\n```sh\nlocation ~ ^/__webpack_hmr {\n  proxy_pass http://localnode:2001;\n  proxy_redirect off;\n  proxy_buffering off;\n  proxy_http_version 1.1;\n  proxy_set_header Upgrade $http_upgrade;\n  proxy_set_header Connection \"upgrade\";\n}\n```\nI got this trick in the past from working with browsersync.\nI just tried your change and it is not working. Took out the section of the ngnix config and added the path string. The browser is requesting /app/__webpack_hmr which means the path change has taken effect. It is getting a 404 though.\n. OK, I got it working @iAlexanderMoon. Requires two changes:\n1) dev-client.js add the path as you have shown above:\n```js\n/ eslint-disable /\nrequire('eventsource-polyfill')\nvar hotClient = require('webpack-hot-middleware/client?path=/app/__webpack_hmr&noInfo=true&reload=true')\nhotClient.subscribe(function (event) {\n  if (event.action === 'reload') {\n    window.location.reload()\n  }\n})\n```\n2) In the dev-server.js add the path option:\n```js\nvar hotMiddleware = require('webpack-hot-middleware')(compiler, {\n  path: '/app/__webpack_hmr',\n  reload: true, // <= I changed this. Do we need it?\n  log: console.log // <= I added this. I prefer more feedback in my console.\n})\n```\nNote: The webpack-hot-middleware options came from here https://github.com/glenjamin/webpack-hot-middleware/blob/master/client.js\n. # Change Dev Server Base URL Config Summary\nTo change the base url of the dev-server.js which is used during npm run dev on the template, you need to make the following changes. Note that the changes below assume a child path of /app/.\n\nChange the assetsPublicPath in the config/index.js file like so:\n\n```js\ndev: {\n    env: require('./dev.env'),\n    port: 2001,\n    autoOpenBrowser: true,\n    assetsSubDirectory: 'static',\n    assetsPublicPath: '/app/',\n    proxyTable: {},\n    cssSourceMap: false\n  }\n```\n\nIn the build/dev-server.js file, change the connect-history-api-fallback middleware to support a new index path:\n\n```js\napp.use(require('connect-history-api-fallback')({\n  index: '/app/index.html'\n}))\n```\n\nIn the build/dev-client.js add the path into the option string for the hot module reload client:\n\n```js\n/ eslint-disable /\nrequire('eventsource-polyfill')\nvar hotClient = require('webpack-hot-middleware/client?path=/app/__webpack_hmr&noInfo=true&reload=true')\nhotClient.subscribe(function (event) {\n  if (event.action === 'reload') {\n    window.location.reload()\n  }\n})\n```\n\nIn the build/dev-server.js file add the path option for the webpack-hot-middleware:\n\n```js\nvar hotMiddleware = require('webpack-hot-middleware')(compiler, {\n  path: '/app/__webpack_hmr',\n  reload: true, // <= I changed this. Do we need it?\n  log: console.log // <= I added this. I prefer more feedback in my console.\n})\n```\n\nIf you wish to change the default document from index.html so another name like default.htm then you will need to change the filename/template names in these files and in step 2 above:\n\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.dev.conf.js#L29\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.prod.conf.js#L54\n. @LinusBorg This should be broken up into two problems; default document name and child path.. I could be wrong here however @BafS solution is just proxying. This issue is about child paths.. Doesn't Vuejs use standard already? . Check out vue-foundation . Docs must be out of date. Try the @ instead of tilda. . This is a common problem. I am currently manually updating the vue-foundation template as PRs come in.. @awitherow I've only been working with the template for a few months. So far I have changed the resolve character to @ and a few other minor changes. I am racking up a few issues to do all at once when I am next working on the template.\nCurrent changes needing attention: https://github.com/hal0gen/vue-foundation/issues/10\n. Hey, this sounds great. Is the new dependency going to include #546 ?\n. Checkout vue-foundation as a reference. That template is importing scss files.. Hi @dwikip. I would suggest you break the application up into different projects and use a reverse proxy like nginx to route between them.. Looks like you have a file permissions issue. Check the permissions on the first few js files in the stack trace.. @escawn webpack-dev-server uses express also: https://github.com/webpack/webpack-dev-server/blob/master/lib/Server.js\nThe custom dev-server.js file is pretty simple and easy to customize. They both use express.js behind the scenes.\n. Are you using SASS?\nPut this in your app.scss file:\ncss\n// Load font-awesome\n$fa-font-path: '~font-awesome/fonts';\n@import '~font-awesome/scss/font-awesome';\n. ",
    "alexmccabe": "@grantcarthew for me this didn't work, but if it were to work, would this make variables defined in /styles/main global to be accessed by any .vue component?\nI guess I need to play around more with my config.. ",
    "lehni": "@grantcarthew how do you get the ~ to work in your example? It doesn't work for me. The only way can get this to work currently is by doing this:\njs\n  let scssOptions = {\n    includePaths: [\n      // '~src/styles'\n      path.resolve('./src/styles')\n    ],\n    // data: '@import \"~src/styles/main\";'\n    data: `@import \"~${path.resolve('./src/styles/main')}\";`\n  }\nI should mention that I am on webpack 2. Could this be the reason?. Here how I have this working now for both Sass and Stylus:\n```js\n  var sassOptions = {\n    includePaths: ['./src/styles'],\n    data: '@import \"_main.scss\";'\n  }\nvar stylusOptions = {\n    paths: [path.resolve('./src/styles')],\n    import: ['_main.styl']\n  }\n// https://vue-loader.vuejs.org/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(),\n    postcss: generateLoaders(),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass',\n        Object.assign({ indentedSyntax: true }, sassOptions)),\n    scss: generateLoaders('sass', sassOptions),\n    stylus: generateLoaders('stylus', stylusOptions),\n    styl: generateLoaders('stylus', stylusOptions)\n  }\n```\n. ",
    "woshi82": "I have found that the symbol     ;    is really important in @import \"~${path.resolve('./src/styles/main')}\";. ",
    "ppozniak": "Here's how I managed to get it work:\njavascript\nscss: generateLoaders('sass', {\n      includePaths: ['./src/styles'],\n      data: '@import \"_main.scss\";'\n    }),\nincludePaths is an array of paths that will be looked at when you are doing @import\ndata is a thing, that will be inserted into every sass scope. ",
    "l2aelba": "For LESS, I would do something like :\nhtml\n<style src=\"@/libs/css/global.less\" lang=\"less\"></style>\n<style lang=\"less\">\n  @import (reference) \"libs/css/global.less\";\n  #app {\n    .my-custom();\n  }\n</style>\nThis will not be duplicate even .my-class or .my-class() on Less, Its will use just as reference. ",
    "Love-the-fish-cat": "this way will create more css code,i use cssnano plugin and run npm run dev can't delete more css code.. ",
    "anish000kumar": "https://stackoverflow.com/a/46015906/5013932. ",
    "percy507": "See this one\nhttps://badacadabra.github.io/Using-global-style-rules-in-a-Vue-js-app/. ",
    "vird": "Problem solved.\n. ",
    "gucong3000": "@blake-newman I would like to complete this PR. Any plan for reopen?\n . Related:\nhttps://github.com/vuejs-templates/webpack/pull/842. > A temporary solution is separate your html, (s)css and js files to let PostCSS's plugin stylelint to process.\nI used another solution, postcss-html for stylelint CLI\nshell\nstylelint \"**/*.{vue,htm,html,css,sss,less,scss,sass}\" --custom-syntax postcss-html. New bug of stylelint v8.1.0 block this PR: stylelint/stylelint#2853\n. > ready to go?\nNot yet.\nAnother new bug in stylelint v8.1.0 (stylelint/stylelint#2853)\npackage.json use git url to install stylelint, we'd better wait for stylelint release next new virsion.. @Aladdin-ADD @KarboniteKream\nThis PR is ready to merge.\n . @chrisvfritz\nGreat, We should create a PR to do it.\n. What can I do to help this PR merge?. @chrisvfritz \n\nDoes it work already?\n\nYes.\nstylelint/stylelint#2975 is just make CLI and document more friendly\n . We're all set.\nhttps://github.com/stylelint/stylelint/pull/2975 has been merged into stylelint v8.3.0. > but I'm worried that the circleCI tests fail, it seems the vm runs out of memory.\n@LinusBorg \nI need some help, I can't find the reason for this problem, the master branch has the same problem.\nCould you please try to push this branch to your code base?. @LinusBorg #1138. @LinusBorg Yes, of course.\n. @MaxMilton Thank you for the report.\n\nRunning yarn run dev compiles but does not show any errors.\n\nIt's been repaired here.\n . \ud83d\ude22. Related: https://github.com/stylelint/stylelint/issues/3148. done.. > push a commit to trigger it\nOther PRs can be trigger by close and reopen.\n. I'm waiting for the next release of stylelint that including stylelint/stylelint#2799.\n. https://github.com/stylelint/stylelint/issues/2838\nIt's going to be released in couple of days.. Thank you.\nfixed.. Move files from ./test/*/  to here:\n\nThen we can download them.\n. ",
    "XaroRSA": "+1\n. NPM 3.9.6\nWindows 7 64bit\n. Node 4.2.2\n. ",
    "rdpascua": "I'm using ubuntu 14.04(x64), it was functioning before\nEDIT: node 5.4.1\nSent from my iPhone\n\nOn 8 Jun 2016, at 1:32 AM, Chris Fritz notifications@github.com wrote:\n@rdpascua @XaroRSA Can both of you share your OS and node version?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I can confirm this fixes the issue\n\n``` bash\nListening at http://localhost:8080\nwebpack built 1a6fc33678ed2092d85a in 2222ms\nHash: 1a6fc33678ed2092d85a\nVersion: webpack 1.13.1\nTime: 2222ms\n     Asset       Size  Chunks             Chunk Names\n    app.js    1.06 MB       0  [emitted]  app\nindex.html  237 bytes          [emitted]\nChild html-webpack-plugin for \"index.html\":\n         Asset     Size  Chunks       Chunk Names\n    index.html  21.4 kB       0     \nwebpack: bundle is now VALID.\n```\n. ",
    "johndous": "You don't need to add the ~ in front of primer-support. You can instruct sass-loader to include all node packages in order to be able to resolve primer-support/index.scss properly.\nwebpack config:\n```js\nconst path = require('path');\nconst webpack = require('webpack');\nconst nodeModulesDirectory = path.resolve(__dirname, './node_modules');\nmodule.exports = {\n  .....\n  module: {\n    loaders: [\n       { test: /.css$/, loader: 'style-loader!css-loader' },\n       { test: /.scss$/, loader: style-loader!css-loader!sass-loader?includePaths[]=${nodeModulesDirectory}}\n    ]\n  }\n};\n```\n. ",
    "thany": "When I place a larger file in src/assets, it still doesn't get copied over to the dist package.\n. By \"a problem sooner or later\" I meant that the CSS on dev is embedded (enclosed in the DOM) which has a higher specificity than external CSS (the usual way - referencing files). This makes for a functional difference between the two environments, which may lead to error that occur only on dev and not in the dis package, or vice versa.\nIf I have to somehow reference an asset in a temple in order for it to get copied, then that's a flaw. The script cannot possibly know that I've done, if I have, and it might also be referenced outside of the templates. I suggest to simply copy over all the assets. It cannot hurt to copy too many files, but copying too few files is a potential problem for sure.\n. ",
    "musicformellons": "You mean to send it to you privately, or how do I provide you with the project?\n. The full error output below:\n/home/usr/.nvm/versions/node/v5.11.1/bin/node /home/usr/.nvm/versions/node/v5.11.1/lib/node_modules/npm/bin/npm-cli.js run-script unit\n\nmyproject@1.0.0 unit /home/usr/myproject\nkarma start test/unit/karma.conf.js --single-run\n\n14 06 2016 20:08:26.136:WARN [watcher]: Pattern \"/home/usr/myproject/node_modules/sinon/pkg/sinon-timers.js\" does not match any file.\nHash: 0fe139901933e9ab0ab9\nVersion: webpack 1.13.1\nTime: 3210ms\n   Asset     Size  Chunks             Chunk Names\nindex.js  1.04 MB       0  [emitted]  index.js\nchunk    {0} index.js (index.js) 382 kB [rendered]\n    [0] ./test/unit/index.js 571 bytes {0} [built]\n    [1] ./~/function-bind/index.js 111 bytes {0} [built]\n    [2] ./~/function-bind/implementation.js 1.42 kB {0} [built]\n    [3] ./test/unit/specs .spec$ 177 bytes {0} [built]\n    [4] ./test/unit/specs/Hello.spec.js 602 bytes {0} [optional] [built]\n    [5] ./~/vue/dist/vue.common.js 253 kB {0} [built]\n    [6] ./src/components/Hello.vue 1.38 kB {0} [built]\n    [7] ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-7c86ba76&scoped=true!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/Hello.vue 1.37 kB {0} [built]\n    [8] ./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=_v-7c86ba76&scoped=true!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/Hello.vue 244 bytes {0} [built]\n    [9] ./~/css-loader/lib/css-base.js 1.51 kB {0} [built]\n   [10] ./~/vue-style-loader/addStyles.js 6.24 kB {0} [built]\n   [11] ./~/isparta-loader!./~/vue-loader/lib/selector.js?type=script&index=0!./src/components/Hello.vue 1.89 kB {0} [built]\n   [12] ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-7c86ba76!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Hello.vue 109 bytes {0} [built]\n   [13] ./src ^.\\/(?!main(.js)?$) 1.24 kB {0} [built] [8 warnings]\n   [14] ./src/App.vue 1.25 kB {0} [optional] [built]\n   [15] ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/App.vue 1.25 kB {0} [built]\n   [16] ./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/App.vue 897 bytes {0} [built]\n   [17] ./~/isparta-loader!./~/vue-loader/lib/selector.js?type=script&index=0!./src/App.vue 4.14 kB {0} [built]\n   [18] ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue 1.02 kB {0} [built]\n   [19] ./src/assets/logo.png 9.17 kB {0} [built]\n   [20] ./src/css/custom.css 926 bytes {0} [optional] [built]\n   [21] ./~/css-loader!./src/css/custom.css 4.02 kB {0} [built]\n   [22] ./src/ie10-viewport-bug-workaround.js 2.67 kB {0} [optional] [built]\n   [24] ./src/images/loading.gif 1.17 kB {0} [optional] [built]\n   [25] ./src/images/profile_default.jpg 23.8 kB {0} [optional] [built]\n   [26] ./src/img/loading.gif 1.17 kB {0} [optional] [built]\n   [27] ./src/js/app.vue 1.26 kB {0} [optional] [built]\n   [28] ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/js/app.vue 1.28 kB {0} [built]\n   [29] ./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/js/app.vue 201 bytes {0} [built]\n   [30] ./~/isparta-loader!./~/vue-loader/lib/selector.js?type=script&index=0!./src/js/app.vue 1.93 kB {0} [built]\n   [31] ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/js/app.vue 132 bytes {0} [built]\n   [33] ./src/sass/abstracts/_color-definitions.scss 1.11 kB {0} [optional] [built]\n   [34] ./~/css-loader!./~/sass-loader!./src/sass/abstracts/_color-definitions.scss 864 bytes {0} [built]\n   [35] ./src/sass/abstracts/_functions.scss 1.09 kB {0} [optional] [built]\n   [36] ./~/css-loader!./~/sass-loader!./src/sass/abstracts/_functions.scss 162 bytes {0} [built]\n   [37] ./src/sass/abstracts/_mixins.scss 1.08 kB {0} [optional] [built]\n   [38] ./~/css-loader!./~/sass-loader!./src/sass/abstracts/_mixins.scss 162 bytes {0} [built]\n   [39] ./src/sass/abstracts/_variables.scss 1.09 kB {0} [optional] [built]\n   [40] ./~/css-loader!./~/sass-loader!./src/sass/abstracts/_variables.scss 162 bytes {0} [built]\n   [42] ./src/sass/base/_base.scss 1.07 kB {0} [optional] [built] [1 error]\n   [44] ./src/sass/base/_fonts.scss 1.08 kB {0} [optional] [built]\n   [45] ./~/css-loader!./~/sass-loader!./src/sass/base/_fonts.scss 162 bytes {0} [built]\n   [46] ./src/sass/base/_helpers.scss 1.08 kB {0} [optional] [built] [1 error]\n   [48] ./src/sass/base/_typography.scss 1.09 kB {0} [optional] [built] [1 error]\n   [51] ./src/sass/components/_speeddialbutton.scss 1.11 kB {0} [optional] [built]\n   [52] ./~/css-loader!./~/sass-loader!./src/sass/components/_speeddialbutton.scss 2.71 kB {0} [built]\n   [54] ./src/sass/layout/_footer.scss 1.08 kB {0} [optional] [built]\n   [55] ./~/css-loader!./~/sass-loader!./src/sass/layout/_footer.scss 162 bytes {0} [built]\n   [56] ./src/sass/layout/_header.scss 1.08 kB {0} [optional] [built]\n   [57] ./~/css-loader!./~/sass-loader!./src/sass/layout/_header.scss 162 bytes {0} [built]\n   [58] ./src/sass/main.scss 1.05 kB {0} [optional] [built]\n   [59] ./~/css-loader!./~/sass-loader!./src/sass/main.scss 18.4 kB {0} [built]\n   [61] ./src/sass/pages/_home.scss 1.07 kB {0} [optional] [built]\n   [62] ./~/css-loader!./~/sass-loader!./src/sass/pages/_home.scss 162 bytes {0} [built]\n   [64] ./src/sass/themes/_custom.scss 1.08 kB {0} [optional] [built]\n   [65] ./~/css-loader!./~/sass-loader!./src/sass/themes/_custom.scss 5.17 kB {0} [built]\n   [66] ./src/sass/themes/_default.scss 1.08 kB {0} [optional] [built]\n   [67] ./~/css-loader!./~/sass-loader!./src/sass/themes/_default.scss 162 bytes {0} [built]\n   [68] ./src/sass/themes/_theme.scss 1.08 kB {0} [optional] [built]\n   [69] ./~/css-loader!./~/sass-loader!./src/sass/themes/_theme.scss 669 bytes {0} [built]\n   [71] ./src/sass/vendors/_normalize.scss 1.09 kB {0} [optional] [built]\n   [72] ./~/css-loader!./~/sass-loader!./src/sass/vendors/_normalize.scss 8.22 kB {0} [built]\nWARNING in ./src/images/favicon.ico\nModule parse failed: /home/usr/myproject/src/images/favicon.ico Unexpected character ' ' (1:0)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected character ' ' (1:0)\n    at Parser.pp.raise (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:923:13)\n    at Parser.pp.getTokenFromCode (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2831:8)\n    at Parser.pp.readToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2526:15)\n    at Parser.pp.nextToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2518:71)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:1631:10)\n    at Object.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:885:44)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/lib/Parser.js:902:15)\n    at DependenciesBlock. (/home/usr/myproject/node_modules/webpack/lib/NormalModule.js:104:16)\n    at DependenciesBlock.onModuleBuild (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:310:10)\n    at nextLoader (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:275:25)\n    at /home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:259:5\n    at Storage.finished (/home/usr/myproject/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:38:16)\n    at /home/usr/myproject/node_modules/graceful-fs/graceful-fs.js:78:16\n    at FSReqWrap.readFileAfterClose as oncomplete\n @ ./src ^.\\/(?!main(.js)?$)\nWARNING in ./src/sass/abstracts/README.md\nModule parse failed: /home/usr/myproject/src/sass/abstracts/README.md Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected character '#' (1:0)\n    at Parser.pp.raise (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:923:13)\n    at Parser.pp.getTokenFromCode (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2831:8)\n    at Parser.pp.readToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2526:15)\n    at Parser.pp.nextToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2518:71)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:1631:10)\n    at Object.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:885:44)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/lib/Parser.js:902:15)\n    at DependenciesBlock. (/home/usr/myproject/node_modules/webpack/lib/NormalModule.js:104:16)\n    at DependenciesBlock.onModuleBuild (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:310:10)\n    at nextLoader (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:275:25)\n    at /home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:259:5\n    at Storage.finished (/home/usr/myproject/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:38:16)\n    at /home/usr/myproject/node_modules/graceful-fs/graceful-fs.js:78:16\n    at FSReqWrap.readFileAfterClose as oncomplete\n @ ./src ^.\\/(?!main(.js)?$)\nWARNING in ./src/sass/components/README.md\nModule parse failed: /home/usr/myproject/src/sass/components/README.md Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected character '#' (1:0)\n    at Parser.pp.raise (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:923:13)\n    at Parser.pp.getTokenFromCode (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2831:8)\n    at Parser.pp.readToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2526:15)\n    at Parser.pp.nextToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2518:71)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:1631:10)\n    at Object.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:885:44)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/lib/Parser.js:902:15)\n    at DependenciesBlock. (/home/usr/myproject/node_modules/webpack/lib/NormalModule.js:104:16)\n    at DependenciesBlock.onModuleBuild (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:310:10)\n    at nextLoader (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:275:25)\n    at /home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:259:5\n    at Storage.finished (/home/usr/myproject/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:38:16)\n    at /home/usr/myproject/node_modules/graceful-fs/graceful-fs.js:78:16\n    at FSReqWrap.readFileAfterClose as oncomplete\n @ ./src ^.\\/(?!main(.js)?$)\nWARNING in ./src/sass/pages/README.md\nModule parse failed: /home/usr/myproject/src/sass/pages/README.md Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected character '#' (1:0)\n    at Parser.pp.raise (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:923:13)\n    at Parser.pp.getTokenFromCode (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2831:8)\n    at Parser.pp.readToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2526:15)\n    at Parser.pp.nextToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2518:71)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:1631:10)\n    at Object.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:885:44)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/lib/Parser.js:902:15)\n    at DependenciesBlock. (/home/usr/myproject/node_modules/webpack/lib/NormalModule.js:104:16)\n    at DependenciesBlock.onModuleBuild (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:310:10)\n    at nextLoader (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:275:25)\n    at /home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:259:5\n    at Storage.finished (/home/usr/myproject/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:38:16)\n    at /home/usr/myproject/node_modules/graceful-fs/graceful-fs.js:78:16\n    at FSReqWrap.readFileAfterClose as oncomplete\n @ ./src ^.\\/(?!main(.js)?$)\nWARNING in ./src/sass/layout/README.md\nModule parse failed: /home/usr/myproject/src/sass/layout/README.md Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected character '#' (1:0)\n    at Parser.pp.raise (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:923:13)\n    at Parser.pp.getTokenFromCode (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2831:8)\n    at Parser.pp.readToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2526:15)\n    at Parser.pp.nextToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2518:71)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:1631:10)\n    at Object.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:885:44)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/lib/Parser.js:902:15)\n    at DependenciesBlock. (/home/usr/myproject/node_modules/webpack/lib/NormalModule.js:104:16)\n    at DependenciesBlock.onModuleBuild (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:310:10)\n    at nextLoader (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:275:25)\n    at /home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:259:5\n    at Storage.finished (/home/usr/myproject/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:38:16)\n    at /home/usr/myproject/node_modules/graceful-fs/graceful-fs.js:78:16\n    at FSReqWrap.readFileAfterClose as oncomplete\n @ ./src ^.\\/(?!main(.js)?$)\nWARNING in ./src/sass/themes/README.md\nModule parse failed: /home/usr/myproject/src/sass/themes/README.md Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected character '#' (1:0)\n    at Parser.pp.raise (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:923:13)\n    at Parser.pp.getTokenFromCode (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2831:8)\n    at Parser.pp.readToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2526:15)\n    at Parser.pp.nextToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2518:71)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:1631:10)\n    at Object.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:885:44)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/lib/Parser.js:902:15)\n    at DependenciesBlock. (/home/usr/myproject/node_modules/webpack/lib/NormalModule.js:104:16)\n    at DependenciesBlock.onModuleBuild (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:310:10)\n    at nextLoader (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:275:25)\n    at /home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:259:5\n    at Storage.finished (/home/usr/myproject/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:38:16)\n    at /home/usr/myproject/node_modules/graceful-fs/graceful-fs.js:78:16\n    at FSReqWrap.readFileAfterClose as oncomplete\n @ ./src ^.\\/(?!main(.js)?$)\nWARNING in ./src/sass/vendors/README.md\nModule parse failed: /home/usr/myproject/src/sass/vendors/README.md Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected character '#' (1:0)\n    at Parser.pp.raise (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:923:13)\n    at Parser.pp.getTokenFromCode (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2831:8)\n    at Parser.pp.readToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2526:15)\n    at Parser.pp.nextToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2518:71)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:1631:10)\n    at Object.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:885:44)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/lib/Parser.js:902:15)\n    at DependenciesBlock. (/home/usr/myproject/node_modules/webpack/lib/NormalModule.js:104:16)\n    at DependenciesBlock.onModuleBuild (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:310:10)\n    at nextLoader (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:275:25)\n    at /home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:259:5\n    at Storage.finished (/home/usr/myproject/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:38:16)\n    at /home/usr/myproject/node_modules/graceful-fs/graceful-fs.js:78:16\n    at FSReqWrap.readFileAfterClose as oncomplete\n @ ./src ^.\\/(?!main(.js)?$)\nWARNING in ./src/sass/base/README.md\nModule parse failed: /home/usr/myproject/src/sass/base/README.md Unexpected character '#' (1:0)\nYou may need an appropriate loader to handle this file type.\nSyntaxError: Unexpected character '#' (1:0)\n    at Parser.pp.raise (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:923:13)\n    at Parser.pp.getTokenFromCode (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2831:8)\n    at Parser.pp.readToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2526:15)\n    at Parser.pp.nextToken (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:2518:71)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:1631:10)\n    at Object.parse (/home/usr/myproject/node_modules/webpack/node_modules/acorn/dist/acorn.js:885:44)\n    at Parser.parse (/home/usr/myproject/node_modules/webpack/lib/Parser.js:902:15)\n    at DependenciesBlock. (/home/usr/myproject/node_modules/webpack/lib/NormalModule.js:104:16)\n    at DependenciesBlock.onModuleBuild (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:310:10)\n    at nextLoader (/home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:275:25)\n    at /home/usr/myproject/node_modules/webpack-core/lib/NormalModuleMixin.js:259:5\n    at Storage.finished (/home/usr/myproject/node_modules/enhanced-resolve/lib/CachedInputFileSystem.js:38:16)\n    at /home/usr/myproject/node_modules/graceful-fs/graceful-fs.js:78:16\n    at FSReqWrap.readFileAfterClose as oncomplete\n @ ./src ^.\\/(?!main(.js)?$)\nERROR in ./~/css-loader!./~/sass-loader!./src/sass/base/_base.scss\nModule build failed: \n  color: $brand-color;\n        ^\n      Undefined variable: \"$brand-color\".\n      in /home/usr/myproject/src/sass/base/_base.scss (line 26, column 10)\n @ ./src/sass/base/_base.scss 4:14-128\nERROR in ./~/css-loader!./~/sass-loader!./src/sass/base/_helpers.scss\nModule build failed: \n  max-width: $max-width; /* 1 */\n            ^\n      Undefined variable: \"$max-width\".\n      in /home/usr/myproject/src/sass/base/_helpers.scss (line 21, column 14)\n @ ./src/sass/base/_helpers.scss 4:14-131\nERROR in ./~/css-loader!./~/sass-loader!./src/sass/base/typography.scss\nModule build failed: \n  color: $text-color;\n        ^\n      Undefined variable: \"$text-color\".\n      in /home/usr/myproject/src/sass/base/_typography.scss (line 5, column 10)\n @ ./src/sass/base/_typography.scss 4:14-134\n14 06 2016 20:08:29.389:INFO [karma]: Karma v0.13.22 server started at http://localhost:9876/\n14 06 2016 20:08:29.393:INFO [launcher]: Starting browser PhantomJS\n14 06 2016 20:08:29.620:INFO [PhantomJS 2.1.1 (Linux 0.0.0)]: Connected on socket /#lyp3azbTrAOn0dVIAAAA with id 36085049\nPhantomJS 2.1.1 (Linux 0.0.0) ERROR\n  Error: Cannot find module \"!!./../../../node_modules/css-loader/index.js!./../../../node_modules/sass-loader/index.js!.//home/usr/myproject/test/unit.scss\"\n  at /home/usr/myproject/test/unit/index.js:11056 <- webpack:///src/sass/base/_base.scss:4:0\nPhantomJS 2.1.1 (Linux 0.0.0): Executed 0 of 0 ERROR (0.121 secs / 0 secs)\nnpm ERR! Linux 4.4.0-24-generic\nnpm ERR! argv \"/home/usr/.nvm/versions/node/v5.11.1/bin/node\" \"/home/usr/.nvm/versions/node/v5.11.1/lib/node_modules/npm/bin/npm-cli.js\" \"run-script\" \"unit\"\nnpm ERR! node v5.11.1\nnpm ERR! npm  v3.8.6\nnpm ERR! code ELIFECYCLE\nnpm ERR! myproject@1.0.0 unit: karma start test/unit/karma.conf.js --single-run\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the myproject@1.0.0 unit script 'karma start test/unit/karma.conf.js --single-run'.\nnpm ERR! Make sure you have the latest version of node.js and npm installed.\nnpm ERR! If you do, this is most likely a problem with the myproject package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     karma start test/unit/karma.conf.js --single-run\nnpm ERR! You can get information on how to open an issue for this project with:\nnpm ERR!     npm bugs myproject\nnpm ERR! Or if that isn't available, you can get their info via:\nnpm ERR!     npm owner ls myproject\nnpm ERR! There is likely additional logging output above.\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/usr/myproject/npm-debug.log\nProcess finished with exit code 1\n. Before I do that please bear with me as it might be a simple mistake on my side relating to the project folder structure of its sass files.\nI worked with webpack a little before and then I just required my sass by doing from the main.js:\nimport '../sass/main.scss';\nAnd from the main.scss other scss files where included.\nHowever in this templates' setup it looks like 'everything' in the src folder is bundled which causes some the scss variable issues as I currently have this folder structure. In src folder:\n\nThen in the sass folder:\n\nand finally in the base folder:\n\nSo the order of importing the scss files is then probably messed up and variables can not be resolved. I might try pushing the sass out of src folder and just import them from main.js ?! What is the 'best practice' here?\nThanks!\n. Adjusting the test coverage as you suggested worked. Thanks for all useful recommendations.\n. ",
    "whenthefatladysings": "https://github.com/whenthefatladysings/vuejs_webpack_issue\nafter (in gh folder):\nnpm install\nnpm run unit\nyou will get the error messages mentioned above.\n. mmh, for clarity: 'whenthefatladysings' = alias of 'musicformellons'\n. ",
    "robert-claypool": "\n... your tightly coupled SCSS raises errors. In _base.scss for example, you get an unknown variable error because the module assumes some global state created by main.scss.\n\nThanks for explaining this. I made the same mistake.. ",
    "chmartinez": "Didn't know about the src directory assumption. Thanks @chrisvfritz !. ",
    "thedanotto": "From @chrisvfritz 's comment above:\nvar srcContext = require.context('../../src', true, /^\\.\\/(?!main\\.js$).+\\.(js|vue)$/i);\nI found the code needing to be replaced by the above code in /test/unit/index.js. ",
    "dtnmr": "Hi, \nI guess you want to read Integrating with Backend Framework.\n. ",
    "LucienLee": "Actually, you could overwrite publicPath in ExtractTextPlugin as you want.\nThis template extracts the styles when building and use the same public path as config. Hence, all path would default start like /static/.... In the original case, you got font face path as rootpath/static/css/static/fonts, because you might change the assetsPublicPath to relative path ./. In the stylesheet, your font face would like ./static/fonts/..., but css url would refer from the position of stylesheet. Then, you got this wrong one rootpath/static/css/static/fonts.\nIn this case, you could just add public path here.\nIf you still stick on webpack1, that would be like return ExtractTextPlugin.extract('vue-style-loader', sourceLoader, {publicPath: '../../'}). ",
    "bsqql123": "I agree with @LucienLee \uff0cbut in webpack2\uff0cyou can config app like this\n```\n  // (which is the case during production build)\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader',\n        publicPath: '../../'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n  }\n```\n\n. ",
    "docnoe": "@bsqql123 Thank you for that detailed description! . ",
    "jiayouwyhit": "@bsqql123 @LucienLee Thank you so much for your detailed explanation. It really solves my issues. . ",
    "SuperYun": "\n\n",
    "winwangqi": "@bsqql123 Thank you so much. I've trapped by this problem for a long time.. ",
    "jobsamuel": "Thanks a lot @LucienLee!!! :tada: . ",
    "xiangsongtao": "@bsqql123 Thank you very much! . ",
    "gezichenshan": "@bsqql123  thank you for saving my brain.. @matt-sanders  I think you may lost to add $mount()\nlet vm = new Vue(Reg1).$mount(). ",
    "masterZSH": "@bsqql123  Good choice. ",
    "mx1120": "@bsqql123 , thank you very much, but i can't play the music in project , is there something wrong?. ",
    "liuyangzuo": "\nlink tag,script tag..etc missing semicolons.\n. ",
    "dweldon": "Sorry if this is a silly question, but what is the currently recommended path for upgrading? My plan was to just create an empty project and then manually diff the files with my current project.\n. ",
    "JsonSong89": "I try in win10 .\nstill same problem .\nthe only way to hit break point is\n if (window.globalDebugger) {\n        debugger\n      }\n. I find other boilerplate can work well.\nhttps://github.com/178220709/SpiderShow/blob/master/package.json\nI try to find out  the problem, but I failed.\nI will continuous report this problem.\n. ",
    "baggsie": "Changing devtool: '#eval-source-map' to devtool: '#source-map' in \\build\\webpack.dev.conf.js fixed this for me (win 10/ Chrome 55).. ",
    "ihaichao": "Thanks, add #dist worked, but delete the master branch and rename dist to master would be better\n. I think prerender-spa-plugin is for spa prerendering, what I want is building correct production outcome, do you have any other suggestions?\nMany thanks.\n. I tried your suggestion and it works. \nThanks again for you patient help.\n. ",
    "Gomah": "You can implement vue-router for 'multipage' purpose, also check the issue #75 ;)\n. Not a big fan of having ESLint & HTMLHint linked together, wouldn't be preferable to have an extra condition ?\njson\n\"htmlLint\": {\n  \"type\": \"confirm\",\n  \"message\": \"Use HTMLHint to lint your code?\"\n},\nYou also need to add an extra filter for the .htmlhintrc file:\njson\n\"filters\": {\n  \".eslintrc.js\": \"lint\",\n  \".htmlhintrc\": \"htmlLint\",\n  \"test/unit/**/*\": \"unit\",\n  \"test/e2e/**/*\": \"e2e\"\n},\n. file-loader is definitely necessary!\nurl-loader has file-loader as a peer dependency & it uses file-loader as its fallback.\nAnd as the documentation says, you need file-loader to process & return the resolved path & filename, without it, you won't be able to resolve & build your assets.\n. ",
    "FAOfao931013": "Did you solve this problem?\n. ",
    "KingMario": "When talking about default components, what does that mean?\n. @yyx990803 got it. Thanks.\n. This is the default option, could be omitted.. ",
    "ttoinou": "Hi, thanks for the answer.\nI am not removing the leading slash. The line new ExtractTextPlugin(utils.assetsPath('/[name].[contenthash].css')) actually works (but not without .[contenthash])\n. Remember that i'm calling utils.assetsPath so even without the leading slash it won't point to the root directory.\nThis issue is not closed ; however it might be an issue with webpack and not vuejs-webpack\n. @chrisvfritz Hi, yes of course. I'm using the vuej-webpack for developing a library and I would like the build script to update the dist folder with everything that is needed in order for someone to include my library easily.\n. ",
    "douggrubba": "Figured, thanks for the update.\n. ",
    "str028": "i've encountered the same issue with chromedriver-2.21.4 version\nhttp://chromedriver.storage.googleapis.com/index.html?path=2.24/\n. ",
    "nickspiel": "Sorry I didn't get back to you ssoner, I had a similar problem getting fonts to load (before I had the issue with the build path). I managed to fix it with postcss-import and postcss-url. That portion of mt webpack config looks like the following:\nvue: {\n    loaders: utils.cssLoaders(),\n    postcss: [\n      require('postcss-import')({\n        path: './src/assets',\n        addDependencyTo: require('webpack')\n      }),\n      require('postcss-url')(),\n      require('postcss-cssnext')()\n    ],\n    autoprefixer: false\n  }\nHope that helps.\n. Yeah, that configuration is working for me in both dev and build. Maybe @yyx990803 could provide some better insight? Webpack is still a big black magical box to me.\n. ",
    "brucejcw": "@hekigan Thanks, it works. But it was very strange. I write a simple webpack script, and using import d3 from 'd3', it works, but failed to work in the vue cli project, anyway, thanks for your help\n. ",
    "guoweish": "you can import specific d3 module like this: import {csv} form 'd3-request', instead of import all d3 package with: import * as d3 from 'd3'.  d3 is too large, I always use what i need~~\n. ",
    "morficus": "I'm currently using the bumped version on 2 projects w/o any additional config changes.\nBut I am open to ways of testing these out.\n. ",
    "AnthonySendra": "Hello,\nJuste in addition, we tried in karma.conf.js\nconfig.set({\n    // to run in additional browsers:\n    // 1. install corresponding karma launcher\n    //    http://karma-runner.github.io/0.13/config/browsers.html\n    // 2. add it to the `browsers` array below.\n    browsers: ['PhantomJS'],\n    frameworks: ['mocha', 'sinon-chai'],\n    reporters: ['spec', 'coverage'],\n    files: ['./index.js'],\n    preprocessors: {\n      './index.js': ['webpack', 'sourcemap']\n    },\n    webpack: webpackConfig,\n    webpackMiddleware: {\n      noInfo: true\n    },\n    coverageReporter: {\n      dir: './coverage',\n      reporters: [\n        { type: 'lcov', subdir: '.' },\n        { type: 'text-summary' }\n      ]\n    },\n    exclude: [\n      'src/routes/subRoutes/**/*.js'\n    ]\n  })\nAnd\nconfig.set({\n    // to run in additional browsers:\n    // 1. install corresponding karma launcher\n    //    http://karma-runner.github.io/0.13/config/browsers.html\n    // 2. add it to the `browsers` array below.\n    browsers: ['PhantomJS'],\n    frameworks: ['mocha', 'sinon-chai'],\n    reporters: ['spec', 'coverage'],\n    files: ['./index.js'],\n    preprocessors: {\n      './index.js': ['webpack', 'sourcemap']\n    },\n    webpack: webpackConfig,\n    webpackMiddleware: {\n      noInfo: true\n    },\n    coverageReporter: {\n      dir: './coverage',\n      reporters: [\n        { type: 'lcov', subdir: '.' },\n        { type: 'text-summary' }\n      ]\n    },\n    exclude: [\n      path.resolve(projectRoot, 'src/routes/subRoutes/**/*.js')\n    ]\n  })\nWithout success. Maybe an idea?\nThanks\n. Hello,\nThanks for your answer but it's doesn't work. My test/unit/index.js looks like this now:\n``` js\n// Polyfill fn.bind() for PhantomJS\n/ eslint-disable no-extend-native /\nFunction.prototype.bind = require('function-bind')\n// require all test files (files that ends with .spec.js)\nvar testsContext = require.context('./specs', true, /.spec$/)\ntestsContext.keys().forEach(testsContext)\n// require all src files except main.js for coverage.\n// you can also change this to match only the subset of files that\n// you want coverage for.\nvar srcContext = require.context('../../src', true, /^.\\/(?!main.js$|routes\\/subRoutes).+.(js|vue)$/i)\nsrcContext.keys().forEach(srcContext)\n```\nBut in my test coverage, the list still includes the path src/routes/subRoutes/ with my file security.js in it.\nThere is no easy way to exclude a path? Like with only karma with a configuration?\n. ",
    "dkpalmer": "@jenow @AnthonySendra Did you have any luck with this?. ",
    "Coffcer": "@chrisvfritz Sorry, my English not good. I just wan't to disabled the webpack hot-reload.  How should I do that\n. ",
    "utatti": "If there is anywhere unclear, please feel free to let me know. I will fix it up asap.\n. Regarding this line, please refer to the following links:\n- https://github.com/babel/babel-eslint/issues/316\n- https://github.com/eslint/eslint/issues/6274\n. ",
    "daneric": "Got it! Thanks a lot!\n. ",
    "mixedCase": "I'm a bit new to the whole SPA/JS/WebPack/modern webdev kerfuffle, could I be of help somehow? Building with build.assetsPublicPath set to './' the default template (also adding the  component) works just fine and all scripts seem to be built correctly and load. Is that example too simple to test what you believe may break @chrisvfritz ?\n. @LinusBorg Regardless it fixes the problem. I now am able to run my application over file:// with no issues. Everything builds just fine, I can serve the files just fine.\n. @LinusBorg I think you're losing sight of the problem in favor of the details. In this case @zhangxin840 mentioned the problem explicitly. Changing assetsPublicPath to './' (instead of publicPath) solves the problem and everything seems to work on my end just fine afterwards, which was @chrisvfritz's worry.\nIn any case, how would I go about reproducing the problem you mentioned? Do you mean LiveReload breaks? Because the change is only applied to the build script, not dev.\n. I use vue-router in my project. I have not touched publicPath, only assetPublicPath. As I said, everything builds and works just fine.\n. @LinusBorg I'm using ES6 modules. They compile together just fine.\n. @LinusBorg This is still a bug and should be reopened. In config/index.js changing build.assetsPublicPath to './' and leaving dev.assetsPublicPath fixes serving over file:/// protocol while at the same time allowing the npm run dev webserver to keep working.\nEverything builds correctly in both situations. The files in dist can be used both over file and tested hosting them with python -m http.server and npm's http-server package with no issues found.\nI haven't seen an example using code-splitting to test wether it breaks or not. But not working under Cordova is as much an issue.\n. It's not \"my\" usecase. It's the default config breaking the file:/// protocol. Whenever it started doing that it became a bug. Not to mention that this not only affects Cordova (currently the only way to deploy Vue as a mobile application, at least until Weex starts supporting it) but pretty sure also affects Electron, another huge platform for cross-platform desktop development.\nI'm using vue-router and just tested history mode with nginx. Works perfectly with assetsPublicPath set to './'.\n. I'd say with quite some confidence that the file:/// protocol is a bigger standard than code-splitting and therefore has more merit as a default.\nBut even if the default is not changed, even if there's a consensus among all devs that Electron, Cordova, the Principle Of Least Astonishment and standard local development all together matter less than code-splitting, shouldn't it be acknowledged in some place beside this issue (like the message shown on build you mentioned or an alternative build script that supports the norm of file:/// working) that there's a way to build without breaking the mentioned standard?\n. ",
    "zhangxin840": "@chrisvfritz I set assetsPublicPath to '' and nothing goes wrong(at least in the project). \n. @jamesjieye Tanks for your answer. Adding a style property in entry may solve the problem. But I  think just remove the file type check in minChunks will be better, because you do not need to add anything explicitly.\n. ",
    "asselin": "I ran a simple test on the latest template with code splitting and setting assetsPublicPath to './', and everything seems to work fine.  Take a look at https://github.com/asselin/vue-webpack-codesplit-test.\nDoes this resolve the final concern about changing assetsPublicPath to './' as a default?\nSetting assetsPublicPath to './' fixes Cordova, file://, and serving from a higher directory (e.g. building into test/dist and serving test/), so it would be nice to make it the default if it there are no remaining reasons not to.\ncc: @LinusBorg @chrisvfritz @mixedCase  . @LinusBorg Is there anything I can do to help get this change in?. @LinusBorg Submitted PR #541 for this issue.  Also, could you please take a look at PR #530 at the same time?  It fixes a similar type of path issue loading fonts.\nThanks!. @LinusBorg I tested vue-router history mode, and ran into some issues.  If the URL is only 1 level deep (e.g. /index.html or /menu), everything works fine.  If it's 2+ levels deep (e.g. /user/menu), the relative URLs break.\nHaving said that, I'd still like to make a case for changing the default.\n\nI checked 3 sites that use history mode: Facebook, Twitter, and Blogger.  All 3 sites serve their static assets from absolute URLs from a completely different top level path or domain.  For example, all of Twitter's static assets are served from https://abs.twimg.com, and all of Facebook's are served from https://www.facebook.com/rsrc.php/.  My suspicion is that they did that so that the app servers don't have to serve static resources, and instead they're served by dedicated web servers and/or a CDN.  Since this seems to be common (perhaps best) practice, in production, if you're going to use history mode, you'd wind up changing assetsPublicPath anyway, and not using the default.\nI agree with @mixedCase that history mode is used less often than a) serving an app out of a subdirectory (i.e. building to /app/dist and serving /app) b) serving from file:// (especially Cordova)\nThe template's use of vue-router doesn't enable history mode.  I assume this is done because history mode doesn't work unless you configure your webserver correctly.  IMO, since history mode isn't enabled by default in the template, it's inconsistent to default assetsPublicPath to '/' so that history mode works.  My suggestion is to add a chapter to the documentation \"Enabling HTML history mode\" that has step by step what to do to make it work (e.g. 1. Change assetsPublicPath  2. Add \"mode: 'history'\" 3. Configure your server per https://router.vuejs.org/en/essentials/history-mode.html etc.)\n\nAlternatively, if you're concerned about changing the default and breaking support of history mode, how about a question in the template \"Enable HTML5 history mode?\" that would configure assetsPublicPath to '/' and add mode: 'history' if Yes was selected?. @LinusBorg Thanks for the reply.  I'll take a look at lazy loaded components with assetsPath set to './' and see what's what.\nI agree with you that Cordova isn't a focus for this template; I'm working on a Cordova template that I hope to publish soon.\nThinking about this some more, assuming lazy loaded components work, I think that adding a question at creation time about enabling history mode makes the most sense, that way the generated code is consistent.\nI'll let you know what I find soon.  Thank you!. To be able to use this with cordova, you have to be able to use relative paths, because 1) it uses file://  2) the root is unpredictable.  I agree with @guilhermefelipesilva that this should be fixed.. Looking further, this is a dup of #200 . Relevant to #200 . I think you might be using the webpack-simple template, not the webpack template.  If so, you should open an issue against that repo: https://github.com/vuejs-templates/webpack-simple. @LinusBorg I can give it a test, but I don't think it will break, because the font's URL is relative to the CSS file-- assuming you can load the CSS file, the font's relative URL should be valid.. I tested with vue-router history mode, and it worked fine, no issues. @LinusBorg, would it be possible to merge this one please?. @LinusBorg When I tested history mode with relative paths, I didn't run into any issues, including reloading on a subroute.  Note that for dev, I left the assetsPublicPath as '/', so there was no issue there.\nI haven't tried lazy loaded routes-- do you happen to have a snippet of code or a github repo handy with your test (I'd like to see it in action to see if I can come up with any solutions).  If not, no worries, I'll code something up.\nAssuming it's an issue we can't get around, based on your comment, are you saying that you'd be OK with a PR that adds an additional question (e.g. Do you want to use an absolute or relative base path?) and then configures the template accordingly (webpack config, assetsPublicPath, etc.)?\nThanks!. @LinusBorg Gentle reminder, when you have time, to upload your GH repo.  Thanks!. @LinusBorg Apologies for taking so long to get back on this one (client work!).\nI just sent you a PR to the repo you sent me above.  I think the reason you were seeing an issue with reloads is because you had assetsPublicPath set to './' with history mode turned on.  When I set it to '/', it worked fine.  \nAlso note that this PR only affects the URLs for Fonts, and since fonts are specified in CSS files, their URL is relative to the CSS file, not relative to index.html.\nThanks!. @LinusBorg See https://github.com/vuejs-templates/webpack/issues/200#issuecomment-255557630  I haven't personally tested it, but @mixedCase claims there's no issue running with vue-router in history mode and assetsPublicPath set to './'.. @nickm123 I have a Cordova template for Vue that I put together for a few internal projects for my company here: https://github.com/BlueOakJS/vue-cordova-template\nInterested in collaborating?. ",
    "zannet": "assetsPublicPath setting to  './' not working on Cordova when enabling vue-router lazy loading feature(webpack code splitting), unable to load file:/// resource, how to solve this?. ",
    "cristijora": "Hi everyone. I also think that this can be somehow improved.\nSetting assetsPublicPath: '', allows for local usage, hosting as a static website and as I see in the comments above, cordova apps.\nWhile  assetsPublicPath: '/', covers more use-cases it forces to use some sort of web server to serve your website. \nI think this stuff should be at least very well explained in the docs so it doesn't create confusion\nSide note regarding code splitting: Code splitting works fine when used locally as a static website if the path is set to ''.. Although the blog post is very good I found it easier to:\nHave the server.js file, package.json and the Procfile as described in the post but after that follow these steps:\ncd dist\ngit init\ngit remote add heroku \"https://git.heroku.com/my-app-namegit\"\ngit add .\ngit commit -m \"my commit message\"\ngit push heroku master\nThis approach is somehow easier than subtrees and doesn't require deleting dist folder from gitignore. Also it's a bit more flexible if you want to have several remotes (e.g heroku-dev, heroku-staging, heroku-live) and configure some tasks in the package.json which will run the following commands described above.\n. @moshie Actually it doesn't require those dependencies.\nIf you have vue-router in simple hash mode, you can deploy the files only without anything else\nIf you have vue-router in history mode, you might need some additional stuff \nhttps://router.vuejs.org/en/essentials/history-mode.html\nFor me, the process of deploying with heroku is something like:\nnpm run build\ncd dist\ngit commit -m \"my commit message\"\ngit push heroku master (assuming heroku remote is defined)\nYou can see my comment from above that it's easier to have the dist folder with it's own git remote\nProcess of deploy with now https://zeit.co/now\nnpm run build\ncd dist\nnow (assuming you have installed now globally). ",
    "AbdullaevTimur": "You can solve this problem in the following way (If you are use vue-webpack-template): \n\nIn your config/index.js in build options change your assetsPublicPath on \"\" or \"./\".\nThen in build/webpack.base.conf.js do the next trick in your fonts loaders options (\"url-loader\" or \"file-loader\"): {\n        test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('fonts/[name].[hash:7].[ext]'),\n          publicPath: process.env.NODE_ENV === 'production' ? '../../' : '/'\n        }\n      },\nAnd it is not necessary to use mode: \"history\" in vue-router\n\nThese settings are very useful for building applications using Cordova/Phonegap. ",
    "chamantonio": "@AbdullaevTimur this finally worked for me! Thank you! \nJust so other who the same setup as mine, you can try his points.\nMy setup:\n - vue-webpack wrapped in cordova\nI had the ff issues:\n- working fine when app is ran using webpack-dev-server\n- only the App.vue is displayed , not all my other components called by  when ran using www/dist/index.html --> therefore same behavior for the android build and all other Cordova builds.\nNow working fine!. ",
    "yuu2lee4": "\u5982\u679c\u5728init\u7684\u65f6\u5019  \u4e0d\u9009eslint\u5c31\u6ca1\u4e8b\u3002\u3002\u3002\u3002\n. \u786e\u8ba4\u4e86  \u539f\u6765\u662f\u662fvscode\u7684terminal\u7684\u95ee\u9898  \u7528win\u81ea\u5e26\u7684\u547d\u4ee4\u884c\u5c31\u6ca1\u95ee\u9898\u4e86\n. It seemed like master already upgrade to webpack 2.2.1 . already solved. @Naeemo   just update template with vue-cli. ",
    "muhammadfaizan": "I got the same issue, +1\n\nmain.js?3479:2 Uncaught SyntaxError: Unexpected token import\n(anonymous function) @ app.js:702__webpack_require__ @ app.js:556fn @ app.js:87(anonymous function) @ app.js:587__webpack_require__ @ app.js:556(anonymous function) @ app.js:579(anonymous function) @ app.js:582\n. \n",
    "varHarrie": "\u679c\u7136\u662fvscode\u7684\u95ee\u9898\uff0c \u5c31\u8fde\u5728vscode\u4e2d\u53f3\u952e\u6253\u5f00\u547d\u4ee4\u63d0\u793a\u7b26\u6765\u6267\u884c\u90fd\u4e0d\u884c\uff0c\u5751\u4e86\u5f88\u4e45\u3002\n. ",
    "summitxf": "I got the same issue +1, and I used vscode too.\nmy solution is add the code into webpack.base.conf.js as below:\n{\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        exclude: /node_modules/,\n        query: {\n          presets: ['es2015']\n        }\n      },\n. ",
    "ttquoccuong": "https://github.com/ttquoccuong/webpacktemplatedemo\nthis is repo demo,\nIn config/index.js, i changed assetsPublicPath to empty or ./ for true url when build production\nplease help me check it in console, url in css is wrong\n. thank you so much! i'll check it back with new version.\n. ",
    "cn-wang": "me too.\nnpm run build \nbackground image url is wrong\n. ",
    "UncleBill": "@ttquoccuong @cn-wang\nCould you try this patch\ndiff\n-cp('-R', 'static/', assetsPath)\n+cp('-R', 'static/', config.build.assetsRoot)\nfor build/build.js?\nIt fixed \"static/ path\" errors in my project. If it helps you too, I will send a PR.\n. @posva  updated.. Well, port detection is more intelligent, but my patch is very light without extra dependency, it provides chance to specify a port anytime .. >disabling sourcemaps in production is not a real solution to the problem we are discussing\nAgree. We should split the sourcemap into isolation files, only leave the sourcemap file URL. That will save a lot bits.. ",
    "Grawl": "I have the same issue on my Jew Simulator project.\nIn dev mode all ok, but on GitHub Pages (mapped to my grawl.ru domain) all paths is broken because of subfolder format of page URL.\n(index):1 GET http://grawl.ru/static/css/app.dc454ff2e8238ad1b90c392fa2d58bef.css \n(index):13 GET http://grawl.ru/static/js/vendor.9ebc35085301b3fd2a78.js \n(index):13 GET http://grawl.ru/static/js/app.1c4025e87bc7c5561961.js \n(index):13 GET http://grawl.ru/static/js/manifest.3f7c904ffbdc032d2076.js \n(index):13 GET http://grawl.ru/static/js/manifest.3f7c904ffbdc032d2076.js \n(index):13 GET http://grawl.ru/static/js/vendor.9ebc35085301b3fd2a78.js \n(index):13 GET http://grawl.ru/static/js/app.1c4025e87bc7c5561961.js 404 (Not Found)\nSo I changed build.assetsPublicPath from '/' to '' in config/index.js#L10 and now all assets is loaded.\nBut not images used in CSS url().\nhttp://grawl.ru/static/images/SteamBackground.jpg Failed to load resource: the server responded with a status of 404 (Not Found)\nThere is no grawl.ru/static and I will loose all background-images from CSS so.\nHere it is: https://github.com/Grawl/jew-simulator/blob/master/src/app.sass#L48\nIn hope of underhood magic I change\nsass\nbackground-image: url('/static/images/OdessaModeBackground.jpg')\nto\nsass\nbackground-image: url('../static/images/OdessaModeBackground.jpg')\nAnd I have another problem:\njquery.js:5800 GET http://jew-simulator.local/dist/static/css/static/img/SteamBackground.cad85a4.jpg 404 (Not Found)\nIt's strange how I got dist/static/css/static/img from just ../\n@chrisvfritz. @sndrgb I want to try vbuild. Already migrated and the last part is deploy it on my domain.. @launchriot it's called humor and sarcasm. sorry if it's a bad jokes for you. now I have to store t anywhere else.. ",
    "sndrgb": "Someone resolve this guys?\nI have also the same problem when i run dev.\nI start with:\nvue init webpack project\nand then i only try loading a div with a background-image as INLINE style with the same url of the example logo.png\nsomeone know why?. ",
    "Didel": "I had similar issues, but my fix was quite easy:\nOn line 10 of /config/index.js, I changed the assetsPublicPath from / to ./.  By doing so, the file locations won't be absolute on the server, but relative to the index.html file they are referenced by.\nTo me, this appears to be a better default value as it won't cause the errors I and others have.. ",
    "githoniel": "just modify the publicPath for  url-loader like\ntest: /\\.(png|jpe?g|gif)(\\?.*)?$/,\n loader: 'url-loader',\n options: {\n             limit: 10000,\n             name: utils.assetsPath('img/[name].[hash:7].[ext]'),\n             publicPath: env === 'production' ? '../../' : '/'\n}. DllReferencePlugin does no support to  async load dll js on demand..... disable auto-save feature of your IDE\nuse ctrl + s  to trigger HMR . ",
    "adi518": "@githoniel this fixes a very obvious bug in this template, where the production CSS file generates incorrect assets path. Was this ever PR'd?. I'm using an old version of the template that has this issue and it seemed really peculiar, because I noticed CSS within an SFC style tag gets prefixed, but postcss-loader is not to be found in the template's dependencies. Further investigating revealed that css-loader includes postcss in its dependencies and probably auto invokes it if browserslist is present in your package.json, thus auto-prefixing the CSS as expected. All, but SCSS files imported in a script tag (and perhaps other, similar import variations). From this closed issue, I can only deduce postcss-loader has to be explicit for a complete, multi import-scenario solution.. I'm afraid not. When you come to think of it though, if you make an SPA, you should rarely arrive at a point where you need to import CSS (if that's the case), not to mention going as far as glob-import it. I only needed it to import some of my legacy SASS code, which will be re-factored into something like styled-components eventually. Never meant to use it permanently. Of course, if you plan to use it for something other than CSS, then I guess it could be viable somehow. Despite that, I have more experience with the Vue-Webpack template now so I'll retry to make it work, perhaps this weekend.. For the time being, just import it the boring way. I'll post here if I get it to work, or if you manage yourself, please share. \ud83d\udc4d . I tried, but probably did it wrong. Still in the curve when it comes to Webpack. I'll try that.. @robwierzbowski You are right. It is there, I saw it there and documentation is rather clear about it, but it doesn't seem to affect third-party components. The template as is, doesn't prefix it. It's possible my vue-loader configuration is outdated, but odds are low.. Should I add a condition for testing environment?. I set the variable as suggested by @chrisvfritz.. For re-pro init a Vue project with Webpack, then setup a listener and throw an error right after it:\n```js\nwindow.onerror = function (arg1, arg2, arg3, arg4, error) {\n  console.log(error) // \"Script error\" instead of an error object\n}\nthrow new Error('oh no')\n```\nIt should be intercepted by the listener, which it does, but you don't get the full error (which reflects the stack-trace as seen on the console), because Chrome thinks the script that threw the error is in another domain. I think this is related to source maps and how devTools manages them. It seems however, it can be fixed by some extra Webpack configuration. I'm just not down to what exactly.. I thought we already did that. That is, updating the environment variable read by the e2e config.. ",
    "launchriot": "What the fuck? \"Jew Simulator\"? Did nobody see anything incredibly wrong with that? @Grawl what is your deal, bro?. @Grawl happy to chat about it if you want. you can email me at launchriot@gmail.com.. ",
    "guilhermeaiolfi": "I guess the error persists since doing what @githoniel suggested solved the problem for me. I hope it gets fixed for everybody by default someday.\nEDIT: Actually, it worked for the css file because the image is relative to the css's file path. But if I would like to load a image directly, it would then fail. It's two different scenarios: images inside .css (they are relative to the file) and image elsewhere (they are relative to assetsPublicPath. \nDoes anyone have a solution that would work for both cases?. Any workaround/solution that doesn't end up determining where our files go or creating others problems? Changing the assetsPublicPath won't do it as I explained in my previously comment.\nI've seen that there are other issues opened that are related: #1021, #1284, #1266. But there isn't a perfect solution yet. Just workaround for specific scenarios.  I don't know how more people are not complaining about it.. ",
    "S4mw1s3": "I'm also having the same issue as @guilhermeaiolfi .\nI have assetsPublicPath: './'. \nif we use <img src=\"../assets/logo.png\"> in the template section of our vue component, the path in app.js looks like this: module.exports = __webpack_require__.p + \"static/img/logo.png\"; which is good because the static folder is at the same level of the index.html file.\nHowever, if we put background-image: url('../assets/logo.png'); in the style section of our vue component, we see background-image: url(./static/img/logo.png); in the app.css. Since app.css is in static/css/, it will try to load logo.png relatively from app.css so the resulting path is static/css/static/img/logo.png. This is obviously wrong.\nWe could solve this by putting \npublicPath: process.env.NODE_ENV === 'production' ? '../../' : '/'\nas option for the url-loader, but then the assets from in our template section of our vue components will also get ../../ prefixed, which means the asset is loaded from 2 folders above index.html which is then wrong.\nLooks like the publicPath for assets loaded via the style section of a vue component should be different then the publicPath for assets loaded from the template section of a component.\nMore specifically, only the assets from the style section should have ../../ prefixed, not all the assets...\nedit: our current workaround is to change filename property of ExtractTextPlugin in  webpack.prod.conf.js to: filename: '[name].[contenthash].css', so our css ends up in the root instead of in static/css/... Then we don't need the publicPath: process.env.NODE_ENV === 'production' ? '../../' : '/' trick anymore.. ",
    "DainAgritech": "Workaround that helped me:\n\nI just remove the css/[name]........\nwith ../[name]........\nnow, when run build the css file is right next to the index.html. in the same directory. then it works.\n. ",
    "bradbotcode": "Using the method @S4mw1s3 still gives me issues. Right now, I can either have publicPath: process.env.NODE_ENV === 'production' ? '../../' : '/' for url-loader and my background images work but my template images don't, or I can change filename property ofExtractTextPlugin in webpack.prod.conf.js and my template images work but my background images do not. Anyone ever get a working solution so I can have BOTH work? @LinusBorg, anything I\u2019m missing? I\u2019ve tracked down a few other related issues but couldn\u2019t find a clear solution. . ",
    "divmgl": "This is from the terminal, I'm on zsh\n. ",
    "maxKimoby": "I got the exact same error. Any work around?\nEdit : Hey! I got a workaround, you have to (or can) proxy your dev server to your local server.\nIn index.js, add the following to your proxytable : \nproxyTable: {\n      '/': {\n        target: 'http://localhost:3000',\n        ws: true\n      }\n    },\n. ",
    "thecristen": "I was getting this error too. But I had a few ESLint errors. Fixing those errors cleared up the issue for me.\n. ",
    "MBach": "A fresh clone from latest commit still gives this error. ",
    "black-lotus": "i have same issue. ",
    "amineous": "i have the same problem , can any one help !!. ",
    "brenohq": "any solution?. ",
    "aladdin-add": "now we have eslint-plugin-vue, is this still worthy? @chrisvfritz . thoughts on this? \ud83d\ude04  @LinusBorg . add a file named tsconfig.json. just like this:\njs\n{\n    \"compilerOptions\": {\n        \"experimentalDecorators\": true,\n        \"allowSyntheticDefaultImports\": true,\n        \"module\": \"es2015\",\n        \"moduleResolution\": \"node\",\n        \"noImplicitAny\": true,\n        \"target\": \"es5\",\n        \"lib\": [\"dom\", \"es5\", \"es2015.promise\"]\n    },\n    \"files\": [\n        \"./src/main.ts\"\n    ]\n}\nlearn more >> tsconfig. maybe it's because of missing \"files\" in tsconfig.json, add \"files\": [\"./src/main.ts\"] and try again.\nI just created a PR to support ts(#633, https://github.com/Aladdin-ADD/vuejs-ts-template), hope it can help you~\ud83d\ude3a \n. @githubmann sorry for the delay, I have been so busy these days. so if you have time to give an extra hand, that would be great!. closing, as there is another PR #797 . link #660 . @MaxMilton  I'm fine with the the current behavior. maybe we can just add a comment, letting users have a choice to turn off?. thanks for your response so quickly:(\nI got an error running test on Windows 10.\n\nnode version: v8.1.2\nnpm version: 5.0.3\nos: windows 10.16215. and seems contributors cannot see the test result for now. can we do something?. fixed using dos2unix test.sh. thanks~. there are so many developers use this template. so it is hard to meet all the needs.\n\ncan we give some more people a access to this repo? like @nickmessing \nfor advanced features, it is a superset of the basic, I'm not sure  it is different enough.so there are two options:\na. we can create a new branch(naming like advanced or something);\nb. if a. cannot be accepted, we can create a new fork, and add a linking on this repo. so if someone want advanced features, they can find the fork. this will also decrease the maintaining work on this repo.. I got an error running npm run dev, after adding this loader.\n\n\nthere are two issues here:\n+ showing \"Failed to compile with 1 errors\", it is no much helpful to a user. can we change some config to show more info?\n+ why this error? I just followed the htmlhint-loader's docs, did I forget something?. @nickmessing up to this. I encountered some questions when running test on windows 10. https://github.com/vuejs-templates/webpack/issues/748#issuecomment-309307368. ready to merge. \ud83d\ude80 \n\ud83d\udc4d to replace sh to shelljs, we can finish it in another PR. (I created a new issue #895). can we provide a option like something: \"simple mode\" vs \"advanced mode\":\n\nsimple mode -- gives users the less option and most ofen used configure.\nadvanced mode -- gives users more flexibility.\n. Hmm.. I just saw the webpack-simple, and it is really simple -- I guess it is mostly for learning :(\ncan we add an option webpack-advanced, which gives more options to support meta-language and more? (I'm not sure about this, actually I can see both sides.)\n\n```bash\nSee a list of available official templates\nvue list\n * webpack\n * webpack-simple\n * webpack-advanced\n...\n``. ready to go?. ping @LinusBorg . I don't think it is worthy to change. actually if hasapp.jsandapp.vue, it make more sense to importapp.js`.. I do love it! and this is a strong need.\ncould you share something about how to solve it? \ud83d\ude04 . it's not related to this repo. you can file it in npm.. > There might be someone like me -- the default browser is Safari, and debugging the browser with Chrome.\nI'm slightly \ud83d\udc4e to this -- not everyone have installed Chrome.\n. it is not a good practice, as it disable checking the rule to all files.\na better way is disabling the rule with inline comments.. seems it is not related to the PR(CDN feature)?. what is 'someclass'? what if a user happen to name a same classname?. thanks for explanation. :)\nthis is just an example, and I prefer it being in a comment -- since a user may forget to change this.. right. eyes had deceived me. --.. eslint just released a patch v4.4.1, so better to use it.. sure, however there is a small diffence when has installed eslint@4.4.0.\nand also, seems it is unrelated to the title. maybe it can be in another PR.. ESLint => stylelint. I'm not sure there is a necessary to use github? it has no version control..I think.. an => a. :(. is there any reason to use var, not const?. why using var? it's in strict mode, using const is fine, and recommended! @LinusBorg . ",
    "FranzSkuffka": "Thank you for this info.\n. ",
    "ghprod": "Solution:\nafter upgrading npm with npm install -g npm, then run npm install, then everything is fine..\n. ",
    "dan-gamble": "Awesome thanks Evan, i think it was a combination of my files actually having errors in them as i was trying to get them in a minimal state i forgot i didn't have store as well. \ud83d\udc4d \n. ",
    "netroby": "This is a trap. I got in this trouble. so may you please improve the document ? add \nMake sure that all your components are defined in *.vue files, because they are pre-compiled.\n. http://vuejs.org/guide/components.html#Local-Registration\nThe local registration not working if we do not change webpack configure. and i do not know where to change the webpack configure. would you please past a complete webpack configure file for me ? @yyx990803 \n. I thought there should be a lint tools. like vue-lint or some thing.\njust check the grammar of app.vue and all other vue files. ",
    "tylerbrgr": "@netroby \nIt's in the module.exports section:\nmodule.exports = {\n  entry: {\n    app: './src/main.js'\n  },\n  output: {\n    path: config.build.assetsRoot,\n    publicPath: process.env.NODE_ENV === 'production' ? config.build.assetsPublicPath : config.dev.assetsPublicPath,\n    filename: '[name].js'\n  },\n  resolve: {\n    extensions: ['', '.js', '.vue'],\n    fallback: [path.join(__dirname, '../node_modules')],\n    alias: {\n      'vue': 'vue/dist/vue.common.js',\n      'src': path.resolve(__dirname, '../src'),\n      'assets': path.resolve(__dirname, '../src/assets'),\n      'components': path.resolve(__dirname, '../src/components')\n    }\n  },\nremove 'common' and you're good\n. ",
    "asvae": "It appears for me that many-a-folks, having no idea, as to how to define a root component for runtime-only build, decide to use standalone. Which is not needed... As everything is compiled anyway.\nSo have a solution. Runtime-only and easy-peasy.\n```javascript\nimport Vue from 'vue'\nimport vmApp from './app.vue'\nnew Vue(vmApp).$mount('#app')\n```\n@yyx990803 Probably worth mentioning a thing in docs? I'm somewhat active in chat and have seen a bunch of people using standalone \"just because\".. @tsankuanglee, sure. It's just a single file component. Or do you want to see the router config and stuff like that?. Not sure if that's related, but here's my dev-server config:\njs\n{\n  devServer: {\n    historyApiFallback: true,\n    noInfo: true,\n    proxy: {\n      '*': {\n        target: 'http://my-project.local',\n        changeOrigin: true,\n        secure: false,\n        cookieDomainRewrite: '',\n        onProxyReq: function (request, req, res) {\n          request.setHeader('origin', 'http://my-project.local')\n        }\n      },\n    }\n  },\n}\nWorks with CORS and cookie authentication.. @woozyking could it be you're using absolute urls for you ajax?\nThey should look like this:\n/api/user/create\nAnd not like this\nhttp://project.local/api/user/create\nBecause proxy proxies only requests to localhost.. @woozyking check baseURL in axios config.\nIt should be empty.. @woozyking then I don't get how browser would think you're making request to http://SOME_REMOTE_HOST/path/to/api and not http://localhost:8080/path/to/api. Given you're sitting on http://localhost:8080. \nPlease check Request URL as well as origin and host headers in your console.. @woozyking \nHere are mine:\nRequest URL: http://localhost:8080/api/server/get-project-environment\nHost: localhost:8080\nOrigin: http://localhost:8080\nI wonder if axios thinks host is absent or something.\nBTW, you probably know that, but localhost:8080 and localhost are considered different domains.. ",
    "tsankuanglee": "@asvae could you provide an example of what's inside ./app.vue?. Thank you, @asvae and @cbess . That's what I use, but I've always put it under component so I was a bit unsure about this syntax: Vue(vmApp). This is cleaner. Thanks!. ",
    "cbess": "@tsankuanglee Here is a snippet.\n```js\n// app.js\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport App from './components/App.vue';\nimport Home from './components/Home.vue';\nVue.use(VueRouter);\nconst router = new VueRouter({\n    routes: [{\n        path: '/',\n        name: 'home',\n        component: Home\n    },\n// .. others\n});\nconst app = new Vue({\n    router,\n    render: createEle => createEle(App)\n}).$mount('#app-container');\n```\n```js\n// App.vue\n\n\n\nFoo\nFoo 2\n\n\n\n\n\nexport default {\n    // empty\n}\n\n```\nhtml\n<!-- index.html -->\n<div id=\"app-container\"></div>\nThe browserify example helped me.. ",
    "thovt93": "Simple way, change\njs\nimport Vue from 'vue'\nto\njs\nimport Vue from 'vue/dist/vue.js';\nIt resolved my issue\n. ",
    "michaelize": "@kensupermen Evan pointed out the solution which is to use an alias other than changing the import.\nhttps://github.com/vuejs-templates/webpack/issues/215#issuecomment-238095102. ",
    "evenstensberg": "If the config register alias doesn't work, this might be because you are using webpack merge to merge two configurations together. Webpack merge won't pick up resolve.alias. @nicaisa \u767c\u9001\u914d\u7f6e. \u9700\u8981\u6587\u4ef6. ",
    "Meekohi": "I'm pretty lost as to what the actual problem is here, but @thovt93's solution worked for me. I originally had import Vue from \"../../../node_modules/vue\"; and changed it to import Vue from \"vue/dist/vue.js\";.. I figured out the source of my confusion -- my project does only have single-file VueJS components, but I am using rails-vue-loader, which after a look at https://github.com/kikyous/rails-vue-loader/blob/master/lib/sprockets/vue/script.rb seems to be just dumping the template in as a string (to my surprise). We are trying to move to webpack, but are \"halfway\" through, and I guess the vue.js version dropped in by webpack was being used even for the old sprockets Vue instances.\nP.S. I had of course already read that link in detail!. We've now completely removed rails-vue-loader and are just using webpack, but this error persists when using import Vue from \"vue\". When I break at the warning and look through the stack-trace, it's happening at:\nimport SidepanelAd from \"src/components/sidepanel_ad\"\nvar v = new Vue({ el: \"#sidepanelAd\", components: {'sidepanel-ad': SidepanelAd} });\n<div id='sidepanelAd'>\n  <sidepanel-ad ref='sidepanel-ad'/>\n</div>\nwhich isn't using string templates (it's defined in a sidepanel_ad.vue file). Any suggestions for getting to the bottom of this issue?. ",
    "youfoundKim": "@Meekohi \nI can understand. At first glance, it does not make much sense. However, if you take your time and read the link Evan You posted, it should make much more sense.\nEssentially, Vue.js ships with two builds:\n- Runtime only build\n- Runtime + compiler build.\nThe compiler takes care of converting template strings to render functions. If you're getting this error, it means that you're trying to use the runtime only build while having one or more string templates in your project. \nIf you don't have a compilation step (such as webpack w/ vue-loader) and wish to use string templates, just import Vue from 'vue/dist/vue.js' like you're already doing. There's nothing wrong with that.\nHowever, if you do have a compilation step, you might benefit from converting all your string templates to render functions to remove the compiler overhead while using your Vue.js app. This can be done with webpack + vue-loader + only using Single File Components. You will still be able to use templates, they'll just be converted in the compilation step.\nIf you're unsure on how to render the root Vue.js instance without a string template, this might give you an idea: \n```javascript\n// index.js\nimport Vue from 'vue';\nimport App from './App.vue';\nconst app = new Vue({\n  el: '#app',\n  render: function (h) {\n    return h(App);\n  }\n});\n```\n```javascript\n// App.vue\n\n\nDoes this work?\n{{text}}\n\n\n\nexport default {\n  data: function () {\n    return {\n      text: 'Yes it does!'\n    }\n  }\n}\n\n```\n```html\nindex.html\n\n\n\n\n\n\n\n```. ",
    "vladyslav2": "@youfoundKim method you propose with render function for root components always gives me an error:\nTypeError: Cannot read property 'matched' of undefined\n    at render (vue-router.esm.js:69)\n    at createFunctionalComponent (vue.runtime.esm.js:4051)\n    at createComponent (vue.runtime.esm.js:4241)\n    at _createElement (vue.runtime.esm.js:4411)\n    at createElement (vue.runtime.esm.js:4348)\n    at vm._c (vue.runtime.esm.js:4480)\n    at Proxy.render (App.vue?./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/pug-plain-loader!./node_modules/vue-loader/lib??vue-loader-options:8)\n    at VueComponent.Vue._render (vue.runtime.esm.js:4532)\n    at VueComponent.updateComponent (vue.runtime.esm.js:2783)\n    at Watcher.get (vue.runtime.esm.js:3137)\nI have no idea why\n    \"vue\": \"2.5.17\",\n    \"vue-loader\": \"15.2.6\",\n    \"vue-router\": \"3.0.1\",\n====\nFound an issue, I changed router setup (router list in one file, new VueRouter(..) in other\nand get rid of the error. ",
    "kelp404": "@yyx990803\n\n. ",
    "nsjames": "For those without webpack ( babel only ) and using vue-cli use the runtimeCompiler option.\nhttps://cli.vuejs.org/config/#runtimecompiler\nCreate a vue.config.js file in your project root.\nmodule.exports = {\n    runtimeCompiler:true\n}. @laurensiusadi hmm not sure. It should do both.. ",
    "Shadoworker": "\nSimple way, change\njs\nimport Vue from 'vue'\nto\njs\nimport Vue from 'vue/dist/vue.js';\nIt resolved my issue\n\nThis fixed it for me (I'm working with Onsen) . Thanks a lot. ",
    "BonBonSlick": "What if           vue: 'vue/dist/vue.esm.js', ? Seems work also.\nWhat diff with     vue: 'vue/dist/vue.js', , also why need resolve extensions?      extensions: ['.js', '.vue', '.json'],. ",
    "laurensiusadi": "@nsjames it solves the problem on yarn build but not on yarn serve. Is this as intended?. ",
    "nicaisa": "Uncaught Error: Module build failed: SyntaxError: Unexpected token (10:24)\n    at Parser.pp$4.raise (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:2221:15)\n    at Parser.pp.unexpected (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:603:10)\n    at Parser.pp$3.parseExprAtom (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1822:12)\n    at Parser.parseExprAtom (X:\\vip\\node_modules\\buble\\dist\\buble.umd.js:656:26)\n    at Parser.pp$3.parseExprSubscripts (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1715:21)\n    at Parser.pp$3.parseMaybeUnary (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1692:19)\n    at Parser.pp$3.parseExprOps (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1637:21)\n    at Parser.pp$3.parseMaybeConditional (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1620:21)\n    at Parser.pp$3.parseMaybeAssign (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1597:21)\n    at Parser.pp$3.parseFunctionBody (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:2098:24)\n    at Parser.pp$4.raise (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:2221:15)\n    at Parser.pp.unexpected (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:603:10)\n    at Parser.pp$3.parseExprAtom (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1822:12)\n    at Parser.parseExprAtom (X:\\vip\\node_modules\\buble\\dist\\buble.umd.js:656:26)\n    at Parser.pp$3.parseExprSubscripts (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1715:21)\n    at Parser.pp$3.parseMaybeUnary (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1692:19)\n    at Parser.pp$3.parseExprOps (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1637:21)\n    at Parser.pp$3.parseMaybeConditional (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1620:21)\n    at Parser.pp$3.parseMaybeAssign (X:\\vip\\node_modules\\buble\\node_modules\\acorn\\dist\\acorn.js:1597:21)\n    at Parser.pp$3.parseFunctionBody . \u600e\u4e48\u89e3\u51b3. verbose node v10.13.0\n19 verbose npm  v6.4.1\n20 error code ELIFECYCLE\n21 error errno 1\n22 error @ development: cross-env NODE_ENV=development node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\n22 error Exit status 1\n23 error Failed at the @ development script.\n23 error This is probably not a problem with npm. There is likely additional logging output above.\n24 verbose exit [ 1, true ]. \u8fd9\u4e2a\u5462. ",
    "zhangjune": "\nFor those without webpack ( babel only ) and using vue-cli use the runtimeCompiler option.\nhttps://cli.vuejs.org/config/#runtimecompiler\nCreate a vue.config.js file in your project root.\nmodule.exports = {\n    runtimeCompiler:true\n}\n\nthanks @nsjames ,it works for me.. ",
    "yyynnn": "my god even init is shitty. ",
    "kkomelin": "Thank you @yyx990803 for your piece of advice.\nHowever, it does not look like a plug&play approach if we should hardcode paths of third-party components in our webpack config every time. I want to believe that we can find a better way.\n. @yyx990803 This is the key. Then we should simply pre-compile vuejs-datepicker code and solve the problem. Hopefully. it is possible. I will discuss it with the maintainer of vuejs-datepicker. \nThank you very much for your help!\n. @yyx990803 Thanks for your advice. I think we can close the issue.\n. ",
    "niallobrien": "I'm confused, I switched to the 2.0 branch and followed the instructions in the Readme, and it installs 1.0.21. I'm guessing the Readme hasn't been updated.\nIs there a way to install 2.0 (and all related scaffolding) using Vue-cli?\n. Ah, vue init webpack#2.0 my-project.\n. Thanks @zigomir \n. Hi all, is this good to merge yet?\n. I'm using RC5 with the webpack config with no issues so far. :)\n. You're best to keep these two concerns separate. There are plenty of Express examples & starter projects for building REST APIs.\n. Thanks for clarifying @yyx990803 :+1: \n. Thanks for sharing @atilacamurca :+1: . ",
    "marines": "Webpack generates sourcemaps in production build. Does it have any purpose?\n. ",
    "petervmeijgaard": "Why is this issue closed without an explanation?\n. Haha okay, no problem! What happend with the dist-branch? I will re-create the issue for the master-branch.\n. ",
    "mightylal": "Hello @LinusBorg ,\nI'm using 6.2.2 for node and 3.9.5 for npm.\n. Yes, I just tried it again. Windows 10.\n. Alright, so after deciding to try this again tonight after a couple of months I found the solution to my original problem. Not sure if this will be the same for anyone, but worth a shot.\nFor whatever reason it does not work with Node 6.0.0 or greater. I had 6.2.2, but the post where I found the solution tried 6.0.0 and it didn't work. Here is the post: https://forum-archive.vuejs.org/topic/4011/unexpected-token-import-after-starting-with-vue-cli-and-webpack/5\nI'm using nvm and changed my node version back to 5.11.1 and running npm run build works perfectly.\n. ",
    "rizkyramadhan": "It's happening on my dev machine, Windows 10.\n```\n Built files are meant to be served over an HTTP server.\n  Opening index.html over file:// won't work.\n\nbuilding for production...cp: no such file or directory: static/*\nHash: acb19ce6ab97ae75abd0\nVersion: webpack 1.13.2\nTime: 3524ms\n                                         Asset       Size   Chunks             Chunk Names\n    static/js/manifest.28905c1d722a6a78b807.js  836 bytes     0, 2  [emitted]  manifest\n         static/js/app.de663236067463a7c2e4.js  264 bytes  1, 0, 2  [emitted]  app\n      static/js/vendor.2044b1050eab4285dea0.js   79 bytes     2, 0  [emitted]  vendor\nstatic/js/manifest.28905c1d722a6a78b807.js.map    8.92 kB     0, 2  [emitted]  manifest\n     static/js/app.de663236067463a7c2e4.js.map  449 bytes  1, 0, 2  [emitted]  app\n  static/js/vendor.2044b1050eab4285dea0.js.map  323 bytes     2, 0  [emitted]  vendor\n                                    index.html  362 bytes           [emitted]\n\nERROR in static/js/app.de663236067463a7c2e4.js from UglifyJs\nSyntaxError: Unexpected token: name (Vue) [./src/main.js:1,0]\nDone in 8.66s.\n```\n. Nope, fresh install\nOn Oct 19, 2016 9:44 AM, \"Chris Fritz\" notifications@github.com wrote:\n\n@rizkyramadhan https://github.com/rizkyramadhan Did you just upgrade an\nold project to Vue 2?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/229#issuecomment-254695696,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAHtXT_iNjiH3VaFJJBkBtzzRfAioHIsks5q1YQCgaJpZM4JpIED\n.\n. \n",
    "wakecoder": "Just for reference I was getting the exact same error.  However I only get the error when building in Visual Studio Code. \nThis is a fresh install of the webpack template via vue-cli. Executing 'npm run build' from a command-prompt appears to work but executing it as a task in Visual Studio Code gives the \"'unexpected token\" error.\n. ",
    "andreapavoni": "Same \"syntax error\"  problem here. It's happening with MacOS Sierra on a fresh install. Using Atom and vim editors. It compiles when in build mode, but gives the error when compiling for production\n. II've found a solution without downgrading node or npm: the problem (for me) was caused by the fact that Babel did NOT transpile from ES6 to ES5. That's the reason why the error comes from UglifyJS.\nThe solution: Babel 6.x NEEDS a .babelrc file with the usual query options you normally put in webpack's babel loader section.\nHope this helps ;-)\n. @LinusBorg I forgot to mention that I've included babel-preset-stage-0 (that includes stage-2 too) and wrote my .babelrc like this:\n{\n  \"presets\": [\"es2015\", \"stage-0\"]\n}\nand this is my package.json (written from scratch, tailored for my needs):\n{\n  \"repository\": {},\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"babel-brunch\": \"~6.0.0\",\n    \"babel-core\": \"^6.18.2\",\n    \"babel-loader\": \"^6.2.7\",\n    \"babel-preset-es2015\": \"^6.18.0\",\n    \"babel-preset-stage-0\": \"^6.16.0\",\n    \"compression-webpack-plugin\": \"^0.3.2\",\n    \"copy-webpack-plugin\": \"^4.0.1\",\n    \"css-loader\": \"^0.25.0\",\n    \"extract-text-webpack-plugin\": \"^1.0.1\",\n    \"file-loader\": \"^0.9.0\",\n    \"node-sass\": \"^3.12.5\",\n    \"purifycss-webpack-plugin\": \"^2.0.3\",\n    \"sass-loader\": \"^4.0.2\",\n    \"style-loader\": \"^0.13.1\",\n    \"vue\": \"^2.0.6\",\n    \"vue-loader\": \"^9.9.3\",\n    \"webpack\": \"^1.13.3\"\n  },\n  \"scripts\": {\n    \"build\": \"webpack --progress --color -d --display-error-details\",\n    \"deploy\": \"NODE_ENV='production' webpack --no-color -p\",\n    \"watch\": \"webpack --watch-stdin --progress --color -d\"\n  }\n}\nBTW, if still get errors with UglifyJS:\n- verify that the non-minified output is correctly transpiled to ES5 running a normal/dev build task, that's how I was able to figure out my problem\n- keep in mind that babel 6 gives precedence to .babelrc (ignoring the query option in webpack's config)\n- run npm cache clear\n. ",
    "andredewaard": "Same here.\nListening at http://localhost:8080\nSometimes it will go 1 step further to:\nwebpack: wait until bundle finished: /index.html\nno logs in npm-debug.log\nTested with:\nnode v6.4.0\nvue-cli 2.2.0\nand\nnode v4.5.0\n. ",
    "awhittington-magari": "I can confirm. We have the same problem in both Ubuntu and OS X. \n(Freezing at \"Listening at http://localhost:8080\") \n. ",
    "frieser": "Same here. Fedora 24.\nnode v6.4.0\nvue-cli 2.2.0\n. ",
    "CinKon": "OK, now it works again, after a new npm install\nLooks like the responsible node-module fixed itself...\n. ",
    "reverland": "https://github.com/ampedandwired/html-webpack-plugin can help you with create html files\n. Maybe --production can provide a way, that you can split libraries you really need to build, with others that only useful when you start a webpack dev server?\nI find this useful when I start a CI that help us to build but not wanna install something used to hot-reload.\nDependencies and devDependencies really confusing here. As Evan said, dependencies means you use it only in your application code.. But something like webpack runtime and babel runtime may really be built into your application code. and do them should be in devDependencies?\nThe origin concept for deps/devdeps may not be useful, but I'm not sure, maybe we can use --production when using ci to reduce packages installed...\nSo, I still think this PR useful.. https://github.com/vuejs-templates/webpack/blob/master/template/package.json#L90\nyou may prefer https://github.com/egoist/vuepack which use a rc version webpack2, however, webpack just release its first 2.x version, so the api may be a little different..\nAnd,\nif anyone implement the webpack2 template, can he/she take a look at https://github.com/vuejs-templates/webpack/pull/354 ?\nI don't fully agree with how it devide deps/devdeps. but it helps when you start a ci without the need for hot-reload/express/http-proxy.\n. ",
    "crswll": "Yes, working for me now. I just updated vue-cli to 2.2.0 so the timing was just too perfect.\nThanks!\n. A couple things:\n\nCSS variables should to be set in :root { } http://cssnext.io/features/#custom-properties-var (that won't help your situation with getting the variables shared across components, but it will in @importing the variables in the same component)\nHeader.vue and App.vue aren't exactly aware of each other. What I do is have a shared.css that I @import in components that need access to the same variables (I just have a strict rule not to allow anything to actually output anything in here).\n\nHere's my vue-cli template that sounds like it's set up very similar to what you'd like: https://github.com/crswll/vue-starter/ might be easier to just vue init crswll/vue-starter whatever and take a look at what it outputs.. Good eye!. I believe the path was fine due to:\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.base.conf.js#L34. Don't know if this should be set automatically or not. The more I think about it the more I'm thinking not.... Agreed. I'll remove it.. You can end up with a trailing comma here if you don't include vuex or vue-router.. If you don't include vuex you'll end up with a trailing comma.. ",
    "maxmckenzie": "i'm pretty sure that this has been sorted out in the many months since, however i ran into this problem and hit this post. i've made a gist here of a set up with this template https://gist.github.com/maxmckenzie/6a35c578be703fdc66556b468a2b3237 Basically i did not like the idea of pulling all of the imports into the main.js the code here still uses the App.js to load in components. I've not tested it with multiple routes just with home, but hopefully it'll help. erg wrong fork, sorry.. ",
    "Jordy-A": "Yes, it's a fresh install. And no errors. Really strange.\nEDIT: All other vue-cli template packs are working (webpack-simple, browserify). So I don't think the problem is with my hosts file, Anti Virus or other Windows settings.\n(It isn't working on all components: both App.Vue and Hello.Vue)\nEDIT: tried installing it again (Node 4.5.0, npm 3.10.6). Still not working.\n. Tried it on other Windows 10 machine (fresh Windows 10.1 install, 64 bit), it's not working there too:\n- Installed node v4.5.0.\n- npm install -g vue-cli\n- vue init webpack my-project\n- cd my-project\n- npm install\n- npm run dev\n- running localhost:8080\n- hmr not working\n. I finally found the problem. It's Bitdefender Antivirus that is blocking webpack. I think I have to completely de-install my Anti Virus because whitelisting is not working...\nSo for everyone that has the same issue: if you have Bitdefender it doesn't work with this template. You can either use another Vue Cli template or deinstall the Antivirus -_-\n. ",
    "onlurking": "This happens because the Standard style-guide isn't compatible with the Airbnb one.\nWhere Airbnb favors semicolons, Standard avoids them.\n. closing this one due inactivity \n. ",
    "chovy": "var port = process.env.PORT || 8080;\n...\n.url(`http://localhost:${port}`)\n...\n. typically /vendor/semantic-ui/semantic-ui.min.css from the public directory.\nbut in production typically you would have ./vendor-<hash-id>.css with all the vendor css libs compiled. This is fine at the root public folder. Assuming you have only a few files in there.\n. I am about to start using vue.js for a video app, hopefully this gets resolved soon.\n. I'd be happy to when I get to that part. I haven't started yet so I don't know what the PR would contain.\n. ",
    "Pines-Cheng": "\u78b0\u5230\u7684\u540c\u6837\u7684\u95ee\u9898\uff0c\u6dfb\u52a0option.secure: true/false\u4ecd\u7136\u65e0\u6548\u3002. I found the reason\uff0cIt is the problem of Webstorm. @yisibl @shah-newaz \nJust like the picture under. cancel the last checkbox. \nhope this helps.\n. ",
    "llccing": "@Pines-Cheng \n\n. ",
    "rosong1": "\u78b0\u5230\u7684\u540c\u6837\u7684\u95ee\u9898\uff0c\u6dfb\u52a0option.secure: true/false\u4ecd\u7136\u65e0\u6548\uff0c\u4ecd\u7136\u8fd4\u56de405\u3002. ",
    "connor11528": "Okay noted. So deploy the server using something like digital ocean or heroku and deploy my Vue app to something like github pages or S3? Thank you\n. Thank you very much!\n. ",
    "kim366": "Really, do you need to separate? Because I've now been using jQuery for my frontend and the only server I had was Express. Now, when I want to switch from jQuery to Vue, I suddenly need another server?. Yeah, had to switch back to Windows for the time being, unfortunately.. It's magically working again, smh. Was there some update?. ",
    "cuiyongjian": "that's ok, thank you very much\n. ",
    "nueverest": "Solved by adding this to webpack.conf.\njavascript\n  externals: {\n    foundation: 'Foundation'\n  },\nReferences:\nhttp://stackoverflow.com/a/34611081/1783439 \nhttps://forum.vuejs.org/topic/3567/foundation-6-vue-cli-with-vue-routing/3\nhttps://github.com/zurb/foundation-sites/issues/7386\n. ",
    "scottsawyer": "So, I've been reading this and many other posts for two days and I can't get $(document).foundation() to work.  Assistance is greatly appreciated.\nI am using the vue-cli webpack template, if that makes a difference.\nwebpack.base.conf.js:\n```\nvar path = require('path')\nvar config = require('../config')\nvar utils = require('./utils')\nvar projectRoot = path.resolve(__dirname, '../')\nvar env = process.env.NODE_ENV\n// check env & config/index.js to decide whether to enable CSS source maps for the\n// various preprocessor loaders added to vue-loader at the end of this file\nvar cssSourceMapDev = (env === 'development' && config.dev.cssSourceMap)\nvar cssSourceMapProd = (env === 'production' && config.build.productionSourceMap)\nvar useCssSourceMap = cssSourceMapDev || cssSourceMapProd\nvar ExtractTextPlugin = require(\"extract-text-webpack-plugin\")\n//var css = require(\"!raw-loader!sass-loader!./file.scss\");\n//var css = require(\"./sass/styles.scss\");\nvar pathToFoundation = path.resolve(__dirname, '../node_modules/foundation-sites/scss')\nmodule.exports = {\n  entry: {\n    app: './src/main.js',\n    vendor: ['foundation-sites']\n  },\n  output: {\n    path: config.build.assetsRoot,\n    publicPath: process.env.NODE_ENV === 'production' ? config.build.assetsPublicPath : config.dev.assetsPublicPath,\n    filename: '[name].js'\n  },\n  resolve: {\n    extensions: ['', '.js', '.vue', '.json'],\n    fallback: [path.join(__dirname, '../node_modules')],\n    alias: {\n      'vue$': 'vue/dist/vue.common.js',\n      'src': path.resolve(__dirname, '../src'),\n      'assets': path.resolve(__dirname, '../src/assets'),\n      'components': path.resolve(__dirname, '../src/components'),\n      //'foundation': path.resolve(__dirname, 'foundation-sites/js/foundation.core')\n      'foundation': path.resolve(__dirname, 'foundation-sites/dist/js/foundation.min')\n    }\n  },\n  resolveLoader: {\n    fallback: [path.join(__dirname, '../node_modules')]\n  },\n  externals: {\n    foundation: 'Foundation'\n  },\n  module: {\n    loaders: [\n        { \n            test: /.css$/, loader: ExtractTextPlugin.extract({\n            fallbackLoader: \"style-loader\",\n            loader: \"css-loader\"\n            })\n      },\n      {\n        test: /.vue$/,\n        loader: 'vue'\n      },\n      //{ test: /.scss$/, loader: \"style!css!sass?outputStyle=expanded&includePaths[]=\" + getDir('node_modules', 'foundation', 'scss')},\n      { \n        test: /.scss$/,\n        loader: [\"style-loader\", \"css-loader\", \"sass-loader\"]\n      },\n      {\n        test: /.js$/,\n        loader: 'babel',\n        include: projectRoot,\n        exclude: /node_modules/\n      },\n      {\n        test: /.json$/,\n        loader: 'json'\n      },\n      {\n        test: /.(png|jpe?g|gif|svg)(\\?.)?$/,\n        loader: 'url',\n        query: {\n          limit: 10000,\n          name: utils.assetsPath('img/[name].[hash:7].[ext]')\n        }\n      },\n      {\n        test: /.(woff2?|eot|ttf|otf)(\\?.)?$/,\n        loader: 'url',\n        query: {\n          limit: 10000,\n          name: utils.assetsPath('fonts/[name].[hash:7].[ext]')\n        }\n      }\n    ]\n  },\n  vue: {\n    loaders: utils.cssLoaders({ sourceMap: useCssSourceMap }),\n    postcss: [\n      require('autoprefixer')({\n        browsers: ['last 2 versions']\n      })\n    ]\n  },\n  sassLoader: {\n    includePaths: [pathToFoundation]\n  }\n}\n```\nmain.js:\n```\nimport Vue from 'vue'\nimport App from './App'\nimport VueRouter from 'vue-router'\nimport axios from 'axios'\nimport VueAxios from 'vue-axios'\nimport * as CONFIG from '../config/appConfig.js'\nimport router from './router'\nimport TopBar from './components/TopBar'\nimport Clients from './components/Clients'\nimport About from './components/About'\nimport Blog from './components/Blog'\nimport BlogItem from './components/BlogItem'\nimport Add from './components/Add'\nimport ClientDetails from './components/ClientDetails'\nimport ServicesOverview from './components/ServicesOverview'\nimport Service from './components/Service'\n//import { jQuery, $ } from 'jquery'\nvar $ = require('jquery')\nwindow.$ = $\nwindow.jQuery = jQuery\nrequire('foundation-sites')\nVue.use(VueAxios, axios)\nVue.use(VueRouter)\nnew Vue({\n    router,\n    render: h => h(App),\n    mounted: function() {\n    //$(document).foundation();\n    }, \n}).$mount('#app')\n```\nI've commented out $(document).foundation();, but I get the same $(...).foundation() is not a function error, regardless if it's in mounted, called right after it's required, or anywhere else in my app.\nHere's a weirder part.  In one of my components, I am building a sticky topbar, and I can get it to initialize like this:\n./components/TopBar.vue:\nexport default {\n  name: 'topbar',\n  mounted: function() {\n      var stickyOptions = {\n        stickTo: 'top',\n        stickyOn: 'small',\n        marginTop: 0,\n        topAnchor: 'header:top',\n        btmAnchor: 'main',\n        stickyClass: 'is-stuck'\n      }\n      var stickyHeader = new Foundation.Sticky($('.title-bar'), stickyOptions);\n    this.$nextTick(function(){       \n      $(\".overlay-menu a, .toggle-menu\").on(\"click\", function(){\n        if ($(\".toggle-menu\").hasClass(\"is-open\")) {\n          $(\".toggle-menu\").removeClass(\"is-open\");\n          $(\".overlay-menu\").removeClass(\"is-open\");\n        }\n        else {\n          $(\".toggle-menu\").addClass(\"is-open\");\n          $(\".overlay-menu\").addClass(\"is-open\");\n        }\n      });\n    });\n  }  \n}\njQuery works, the Foundation object is loaded, Foundation.Sticky is working.  \nBut in another component, I am trying to use the Equalizer plugin.  I see the equalizer data attribute on the elements, but it doesn't do anything.  \nanotherComponent.vue ( just the mounted portion ):\nmounted: function() {\n    var equalizerOptions = {\n      equalizeOn: 'small',\n      equalizeByRow: true,\n      equalizeOnStack: true,\n    }\n    var clientHeights = new Foundation.Equalizer($('.client-list'), equalizerOptions);\n    console.log(clientHeights);\n    clientHeights.getHeights(function(f) {\n      console.log(f)\n    })\n    this.$nextTick(function(){\n      var clientHeights = new Foundation.Equalizer($('.client-list'), equalizerOptions);\n      console.log(clientHeights);\n    })\n  }\nthe console.log of clientHeights has my Equalizer object, but I don't get the actual heights ( empty array ).\nSo, Foundation object exists, but I can't do anything with foundation().. ",
    "philliskiragu": "@scottsawyer Did you manage to make the equalizer work?. ",
    "monoc44": "@grantcarthew Awesome! However the grid framework doesn't seem working properly. This code displays 3 lines instead of one, same problem I am facing right now...\n<div class=\"row\">\n  <div class=\"small-2 large-4 columns\">1</div>\n  <div class=\"small-4 large-4 columns\">2</div>\n  <div class=\"small-6 large-4 columns\">3</div>\n</div>. ",
    "DevanB": "Is there any documentation of the process to add the polyfill @yyx990803? I've checked the Webpack template docs, but didn't find anything. My webpack skills aren't strong.. Forgive me, as I'm new to dealing with this scenario. In es6-promise's documentation here, it looks as though I can simply add this: require('es6-promise').polyfill(); to a file. Would it be ideal to add that code in my main.js where Vue is being instantiated, or should something like this go in webpack.prod.conf.js file?\nThanks for the help @yyx990803. I know you are super busy!. Found one half of my problem. I was using the Prerender SPA plugin, which seems to be having the same problems: https://github.com/chrisvfritz/prerender-spa-plugin/issues/16.\nAfter pulling that out and trying both babel-polyfill (and it's instructions) and es6-promise (and it's instructions), I was not able to get the promise polyfill to work on IE10 and below. I hope this makes it on the radar as an issue to at least research into. I will be glad to appropriately document the problem and steps I've taken to resolve it some where, if this isn't the correct place for the discussion.\nThanks @yyx990803 for the help!. The only way I could get this error to stop was by including this in the head of the index.html:\n<!-- Script for polyfilling Promises on IE9 and 10 -->\n<script src='https://cdn.polyfill.io/v2/polyfill.min.js'></script>\nHope there is a better solution, as I'm not pleased with this.. @LinusBorg Yep, I added es6-promise to the top of main.js (like below), but still get the vuex error.\nI tried putting the babel-polyfill in webpack.base.conf.js like below, but that didn't work either.\n```\nrequire('es6-promise').polyfill()\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport store from './store'\nimport { sync } from 'vuex-router-sync'\nimport VueHead from 'vue-head'\nsync(store, router)\nVue.use(VueHead)\n/ eslint-disable no-new /\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  render: h => h(App)\n})\n```\nentry: {\n  app: [\n    'babel-polyfill',\n    './src/main.js'\n  ]\n},. First, thanks for the help @LinusBorg!\nI didn't know that. So import statements have the same \"hoisting\" like variables and would \"out-rank\" a require() statement?\nI changed the require to a ES6 import statement (below), but no luck. So then I replaced the import statements with require statements (like below), and I received a vuex error (I assume having to do because of the require statement solution): \nTypeError: store.registerModule is not a function. (In 'store.registerModule', 'store.registerModule' is undefined)\n```\nimport { polyfill } from 'es6-promise'\npolyfill()\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport store from './store'\nimport { sync } from 'vuex-router-sync'\nimport VueHead from 'vue-head'\nsync(store, router)\nVue.use(VueHead)\n/ eslint-disable no-new /\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  render: h => h(App)\n})\n```\n```\nrequire('es6-promise').polyfill()\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nvar store = require('./store')\nimport { sync } from 'vuex-router-sync'\nimport VueHead from 'vue-head'\nsync(store, router)\nVue.use(VueHead)\n/ eslint-disable no-new /\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  render: h => h(App)\n})\n```. @limichange that worked!\nAgain, thanks @LinusBorg for the help also (and the new knowledge!)\nI'll be glad to put in a PR for some documentation on the process, if wanted. This was the final solution:\n```\nimport 'es6-promise/auto'\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport store from './store'\nimport { sync } from 'vuex-router-sync'\nimport VueHead from 'vue-head'\nsync(store, router)\nVue.use(VueHead)\n/ eslint-disable no-new /\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  render: h => h(App)\n})\n```. This seems to have fixed itself when I upgraded vuex, vue-router, and vuex-router-sync.\nIf anyone finds this problem (hope no one does!) just try updating to the latest dependency version.. ",
    "atilacamurca": "Using Babel polyfill solved the problem. Here are the steps what I did:\nnpm install --save-dev babel-polyfill\nthen include the polyfill file before your source and test files within the files section of your test/unit/karma.conf.js\njs\nfiles: [\n  '../../node_modules/babel-polyfill/dist/polyfill.js',\n  'index.js'\n],\nSource: http://stackoverflow.com/a/40784617/1152679. ",
    "inouetakuya": "In addtion to https://github.com/vuejs-templates/webpack/issues/260#issuecomment-265604710 if you use es6-promise:\njs\nfiles: [\n  'path/to/node_modules/es6-promise/dist/es6-promise.auto.js',\n  'index.js'\n],\n(version of es6-promise: 4.0.5)\n. ",
    "getflourish": "Personal issue. killall node fixed this \n. ",
    "agstover": "Just dropping a note for posterity. I was having an issue with \"npm run dev\" command as well, and the killall node fixed it for me as well.. ",
    "chandrasekarb": "node: {\n  fs: \"empty\"\n}\nUsing this above code error has been solved but \nfs.writeFile('/home/react-hello-world/test.txt', 'aaa', function(err) { alert(err); });\nfs.writeFile is not working please give any solution.. ",
    "sparkdj": "It's not impossible if you are on a CEP VM, like the HTML5 Adobe Extension do.\nThe problem is real. After a lot of tests, I've found a simple solution to use the nodejs on the chrome machine:\nadding this to webpack.prod.conf.js allowed me to use your template to create Adobe extensions: \n{  \n...\n target: \"node-webkit\"\n...\n }\nThey run on a CEF, \"Chromium Embedded Framework\"  (My mistake: not a CEP, not a VM). http://code.google.com/p/chromiumembedded/\nMore info about Adobe CEP: \nhttps://github.com/Adobe-CEP/CEP-Resources/blob/master/CEP_8.x/Documentation/CEP%208.0%20HTML%20Extension%20Cookbook.md#applications-integrated-with-cep\n. ",
    "paglias": "It looks like updating vue-cli fixed the issue\n. ",
    "brendonthiede": "The problem as I see it is that Travis CI doesn't have a desktop environment, so you will need to run tests in a \"headless\" browser.  I would suggest using a PhantomJS driver for Travis.  For true browser testing, Travis CI suggests Sauce Labs.\nReference: https://docs.travis-ci.com/user/gui-and-headless-browsers/\n. ",
    "jesperlandberg": "@LinusBorg I see, thanks for clearing that up for me=)\n. ",
    "dnshi": "This babelrc config depends on developers. Some developers don't care about the differences and older browsers and some others would take it as a consideration. \nThanks. I will close this PR. \n. ",
    "jakobrosenberg": "Is there an example of this in action?. ",
    "pietrovismara": "@jakobrosenberg what worked for me:\nCopied build/build.js in a new file named build/watch.js, then changed it as following:\n```\nconst webpackConfig = require('./webpack.prod.conf')\nconst spinner = ora('building for production...')\nspinner.start()\nconst watchConfig = Object.assign(webpackConfig, { watch: true })\nrm(path.join(config.build.assetsRoot, config.build.assetsSubDirectory), err => {\n  if (err) throw err\n    webpack(watchConfig, (err, stats) => {\n```\nbasically adding the watch property to the existing webpackConfig.. ",
    "rwatts3": "Not sure if this is related or not but you can also pass --watch in your npm scripts.\nI have build and build:watch. And call build:watch in development from another script to roll everything together.. ",
    "xiaoyunchen": "@yyx990803 \u9ebb\u70e6\u7ed9\u770b\u4e0b  3Q\n. ",
    "threeaccents": "@LinusBorg It seems to be working only issue is now it throws errors trying to load scss files\n. @LinusBorg Still loading scss error. Here is how my webpack config file looks like:\nhttps://gist.github.com/rodzzlessa24/035bcc241b3974bccc3970d291ffa446\nError:\nbash\nModule not found: Error: Cannot resolve module 'scss' in /path/to/my/component\n. vue-loader log:\nhtml?attrs[]=img:src&attrs[]=video:src&attrs[]=source:src\nAnd I am importing a .scss file in most my components but even the ones that I'm not I still get the error:\nComponent:\n``` vue\n\n    export default {\n        name: 'FooterBar'\n    }\n\n\n\n\n\n        HONOR THE CRAFT.DRINK RESPONSIBLY.\n      \n\n        Terms of Use | Privacy Policy | Linking Policy | Contact Us\n      \n\n        Lorem ipsum dolor sit amet\n      \n\n\n\n\n    .cc-footer {\n        padding: 70px 30px;\n    }\n\n```\nError pertaining to that component:\nbash\nERROR in ./src/components/FooterBar.vue\nModule not found: Error: Cannot resolve module 'scss' in /Users/rodrigo/work/src/gitlab.fg/brownforman/tourapp/src/components\n @ ./src/components/FooterBar.vue 2:0-219\nSeparate issue when I check which files are being bundled I never see my .mp4 file in there.\nUPDATE:\nI logged utils.cssLoaders().html and that is undefined. vue-loader doesn't seem to have a .html property:\njavascript\nvue-loader { css: 'vue-style-loader!css-loader',\n  postcss: 'vue-style-loader!css-loader',\n  less: 'vue-style-loader!css-loader!less-loader',\n  sass: 'vue-style-loader!css-loader!sass-loader?indentedSyntax',\n  scss: 'vue-style-loader!css-loader!sass-loader',\n  stylus: 'vue-style-loader!css-loader!stylus-loader',\n  styl: 'vue-style-loader!css-loader!stylus-loader' }\nI tried doing this but also does not set a html property on utils.cssLoaders\njavascript\nvar vueloaders = utils.cssLoaders()\nvueloaders.html = 'html?attrs[]=img:src&attrs[]=video:src&attrs[]=source:src'\n. @LinusBorg \nSo when I run the last thing instead can't resolve scss it errors \nbash\nModule not found: Error: Cannot resolve module 'html'\nIs there a chat we can use instead of clogging up everyones notifications?\n. ",
    "Zhangdroid": "@rodzzlessa24 \nYou can just add transformToRequire option like this:\njs\n  vue: {\n    loaders: utils.cssLoaders({ sourceMap: useCssSourceMap }),\n    postcss: [\n      require('autoprefixer')({\n        browsers: ['last 2 versions']\n      })\n    ],\n    transformToRequire: {\n      video: 'src',\n      source: 'src'\n    }\n  }\nSee there: http://vue-loader.vuejs.org/en/options.html. ",
    "gabrielstuff": "The latest solution proposed by @Zhangdroid works perfectly. Thanks !. Here is a demo repository: https://github.com/gabrielstuff/async-await-vue. Ok, thanks. Fixed with creating a whole async function around the await call.\nIt is better to read, but stills, I'm not sure if this is the right way to call:\nasync function asyncFun () {\n  var value = 10\n  return value\n}\n(async () => { console.log(await asyncFun()) })()\nLooks a bit hard to read.\nThe code has been updated.. ",
    "Maopy": "webpack@2.1.0-beta.25\n. @chrisvfritz webpack@2.1.0-beta.19 is ok\n. ",
    "w550": "\u6211\u4e5f\u662f\u8fd9\u4e48bug\n. ",
    "cddsgtc": "@Maopy yes it works,but will this be fixed?or design another way?\nthe webpack@2.2.0 is released, 2.x will be a trending.. ",
    "alamby": "I encountered the same problem,with webpack@2.2.1 and vue-cli@2.8.1,not sure about whether if i downgrade or upgrade.Finally,i downgrade the webpack to 1.13.2 and the following problem solved.But later when i run npm run build,another module named \u2018extract-text-webpack-plugin\u2019 also another error,made me downgrade it to v1.0.1 and problem solved.\n```\nnode_modules\\webpack\\lib\\webpack.js:19\n                throw new WebpackOptionsValidationError(webpackOptionsValidationErrors);\n                ^\nWebpackOptionsValidationError: Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.\n - configuration has an unknown property 'vue'. These properties are valid:\n   object { amd?, bail?, cache?, context?, dependencies?, devServer?, devtool?, entry, externals?, loader?, module?, name?, node?, output?, performance?, plugins?, profile?, recordsInputPath?, recordsOutputPath?, recordsPath?, resolve?, resolveLoader?, stats?, target?, watch?, watchOptions? }\n   For typos: please correct them.\n   For loader options: webpack 2 no longer allows custom properties in configuration.\n     Loaders should be updated to allow passing options via loader options in module.rules.\n     Until loaders are updated one can use the LoaderOptionsPlugin to pass these options to the loader:\n     plugins: [\n       new webpack.LoaderOptionsPlugin({\n         // test: /.xxx$/, // may apply this only for some modules\n         options: {\n           vue: ...\n         }\n       })\n     ]\n - configuration.resolve has an unknown property 'fallback'. These properties are valid:\n   object { alias?, aliasFields?, cachePredicate?, descriptionFiles?, enforceExtension?, enforceModuleExtension?, extensions?, fileSystem?, mainFields?, mainFiles?, moduleExtensions?, modules?, plugins?, resolver?, symlinks?, unsafeCache?, useSyncFileSystemCalls? }\n - configuration.resolve.extensions[0] should not be empty.\n - configuration.resolveLoader has an unknown property 'fallback'. These properties are valid:\n   object { alias?, aliasFields?, cachePredicate?, descriptionFiles?, enforceExtension?, enforceModuleExtension?, extensions?, fileSystem?, mainFields?, mainFiles?, moduleExtensions?, modules?, plugins?, resolver?, symlinks?, unsafeCache?, useSyncFileSystemCalls? }\n    at webpack (xxx\\node_modules\\webpack\\lib\\webpack.js:19:9)\n    at Object. (xxx\\build\\dev-server.js:18:16)\n    at Module._compile (module.js:409:26)\n    at Object.Module._extensions..js (module.js:416:10)\n    at Module.load (module.js:343:32)\n    at Function.Module._load (module.js:300:12)\n    at Function.Module.runMain (module.js:441:10)\n    at startup (node.js:139:18)\n    at node.js:974:3\n```\n. ",
    "marcusjwhelan": "What happens when the error just says \noptions: {\n 23: .... .\n",
    "plrenaudin": "You're right, I'm using \n$ npm --version\n2.15.9\n. ",
    "siempay": "` ERROR  Failed to compile with 1 errors\nThis dependency was not found in node_modules:\n\n!!vue-style-loader!css-loader!./../node_modules/vue-loader/lib/style-rewriter?id=data-v-53c6d8e7&scoped=true!sass-loader?indentedSyntax!./../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\n\nDid you forget to run npm install --save for it?\n\nListening at http://localhost:8080`\n\n$ npm -v\n4.0.5\nhow to fix this? I  installed css-loader with --save-dev and installed vue-style-loader too but nothing. I have the same problem here; I just installed everything and got this error. I'v already read your comments up; I already have the .babelrc just like that one;\nthe file with the error is src/app.js . yes it is @LinusBorg . it is not , at list form me. ",
    "Sarke": "It's not that uncommon I think. Personally I code in one VM and view in another. I think locking down ports is on the user, but an option for which host/ip to listen on would be useful.\n. Options are a bad thing? I disagree.\nWhy even have an option for the name of the assets folder then? Forcing them to use the folder you chose is not better.\nIf your concern is that it will require more configuration at setup, then that's handled by default options.\n. @chrisvfritz One thing to consider is that static file sites like VueJS are getting more commonly hosted on CDN hosting, so redirects wouldn't be possible.\nAnd the older shared hosting only allow redirects through an .htaccess, which would have to be in the root as well.\n. ",
    "chogarcia": "Oh, I have uninstalled npm with brew and install it again with n and it seems to be ok now!\nClosing this for now. It's being really annoying me for a day. I will reopen with a repro if comes back. \n. ",
    "andreixk": "@junerockwell  I had the same problem, adding \"vue-style-loader\": \"^1.0.0\" to the package.json and runing npm install fixed the issue. Thanks!\n. @shagflak you also have to run npm install in that directory to actually get the package installed. you might also need to update the version (current is 3.0.1). ",
    "shagflak": "Hello when i am adding lang=\"sass\" on my App component i get the following error...\n<style lang=\"sass\" >\n  #app {\n    font-family: 'Avenir', Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    margin-top: 60px;\n  }\n</style>\nResulting on this error\n```\nThis dependency was not found:\n\n!!vue-style-loader!css-loader?{\"minimize\":false,\"sourceMap\":false}!../node_modules/vue-loader/lib/style-compiler/index?{\"id\":\"data-v-005435fc\",\"scoped\":false,\"hasInlineConfig\":false}!sass-loader?{\"s\nourceMap\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue in ./src/App.vue\n\nTo install it, you can run: npm install --save !!vue-style-loader!css-loader?{\"minimize\":false,\"sourceMap\":false}!../node_modules/vue-loader/lib/style-compiler/index?{\"id\":\"data-v-005435fc\",\"scoped\":f\nalse,\"hasInlineConfig\":false}!sass-loader?{\"sourceMap\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\n\nListening at http://localhost:8080\n```\n\nI did what @andreixk said about adding vue-style-loader: \"1.0.0\" but i am still unsuccesful on that matter.. @andreixk i ran \"npm install\" on the root of my project the thing i havent't tried it's change the version of vue-style-loader directly on the package.json of the vue-loader subpackage and run npm install from there to see if it helps.\nOn the other hand you mean updating the vue-loader to the 3.0.1 version?\nmy package.json overall looks like this:\n{\n  \"name\": \"test\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Test Project\",\n  \"author\": \"John Doe <a@g.com>\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"node build/dev-server.js\",\n    \"start\": \"node build/dev-server.js\",\n    \"build\": \"node build/build.js\",\n    \"unit\": \"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\",\n    \"e2e\": \"node test/e2e/runner.js\",\n    \"test\": \"npm run unit && npm run e2e\",\n    \"lint\": \"eslint --ext .js,.vue src test/unit/specs test/e2e/specs\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.16.1\",\n    \"bootstrap-sass\": \"^3.3.7\",\n    \"css-loader\": \"^0.28.3\",\n    \"vue\": \"^2.2.6\",\n    \"vue-resource\": \"^1.3.1\",\n    \"vue-router\": \"^2.3.1\",\n    \"vue-style-loader\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"autoprefixer\": \"^6.7.2\",\n    \"babel-core\": \"^6.22.1\",\n    \"babel-eslint\": \"^7.1.1\",\n    \"babel-loader\": \"^6.2.10\",\n    \"babel-plugin-transform-runtime\": \"^6.22.0\",\n    \"babel-preset-env\": \"^1.3.2\",\n    \"babel-preset-stage-2\": \"^6.22.0\",\n    \"babel-register\": \"^6.22.0\",\n    \"chalk\": \"^1.1.3\",\n    \"connect-history-api-fallback\": \"^1.3.0\",\n    \"copy-webpack-plugin\": \"^4.0.1\",\n    \"css-loader\": \"^0.28.0\",\n    \"eslint\": \"^3.19.0\",\n    \"eslint-friendly-formatter\": \"^2.0.7\",\n    \"eslint-loader\": \"^1.7.1\",\n    \"eslint-plugin-html\": \"^2.0.0\",\n    \"eslint-config-standard\": \"^6.2.1\",\n    \"eslint-plugin-promise\": \"^3.4.0\",\n    \"eslint-plugin-standard\": \"^2.0.1\",\n    \"eventsource-polyfill\": \"^0.9.6\",\n    \"express\": \"^4.14.1\",\n    \"extract-text-webpack-plugin\": \"^2.0.0\",\n    \"file-loader\": \"^0.11.1\",\n    \"friendly-errors-webpack-plugin\": \"^1.1.3\",\n    \"html-webpack-plugin\": \"^2.28.0\",\n    \"http-proxy-middleware\": \"^0.17.3\",\n    \"webpack-bundle-analyzer\": \"^2.2.1\",\n    \"cross-env\": \"^4.0.0\",\n    \"karma\": \"^1.4.1\",\n    \"karma-coverage\": \"^1.1.1\",\n    \"karma-mocha\": \"^1.3.0\",\n    \"karma-phantomjs-launcher\": \"^1.0.2\",\n    \"karma-phantomjs-shim\": \"^1.4.0\",\n    \"karma-sinon-chai\": \"^1.3.1\",\n    \"karma-sourcemap-loader\": \"^0.3.7\",\n    \"karma-spec-reporter\": \"0.0.30\",\n    \"karma-webpack\": \"^2.0.2\",\n    \"lolex\": \"^1.5.2\",\n    \"mocha\": \"^3.2.0\",\n    \"chai\": \"^3.5.0\",\n    \"sinon\": \"^2.1.0\",\n    \"sinon-chai\": \"^2.8.0\",\n    \"inject-loader\": \"^3.0.0\",\n    \"babel-plugin-istanbul\": \"^4.1.1\",\n    \"phantomjs-prebuilt\": \"^2.1.14\",\n    \"chromedriver\": \"^2.27.2\",\n    \"cross-spawn\": \"^5.0.1\",\n    \"nightwatch\": \"^0.9.12\",\n    \"selenium-server\": \"^3.0.1\",\n    \"semver\": \"^5.3.0\",\n    \"shelljs\": \"^0.7.6\",\n    \"opn\": \"^4.0.2\",\n    \"optimize-css-assets-webpack-plugin\": \"^1.3.0\",\n    \"ora\": \"^1.2.0\",\n    \"rimraf\": \"^2.6.0\",\n    \"url-loader\": \"^0.5.8\",\n    \"vue-loader\": \"^11.3.4\",\n    \"vue-style-loader\": \"^2.0.5\",\n    \"vue-template-compiler\": \"^2.2.6\",\n    \"webpack\": \"^2.3.3\",\n    \"webpack-dev-middleware\": \"^1.10.0\",\n    \"webpack-hot-middleware\": \"^2.18.0\",\n    \"webpack-merge\": \"^4.1.0\"\n  },\n  \"engines\": {\n    \"node\": \">= 4.0.0\",\n    \"npm\": \">= 3.0.0\"\n  },\n  \"browserslist\": [\n    \"> 1%\",\n    \"last 2 versions\",\n    \"not ie <= 8\"\n  ]\n}. ",
    "bencarter78": "I am also getting this error on a fresh install. I amended App.vue to include my sass file <style src=\"./assets/sass/app.scss\" lang=\"scss\"></style> and I now get the following error...\n```\nThis dependency was not found:\n\n!!vue-style-loader!css-loader?{\"minimize\":false,\"sourceMap\":false}!../node_modules/vue-loader/lib/style-compiler/index?{\"vue\":true,\"id\":\"data-v-544e619c\",\"scoped\":false,\"hasInlineConfig\":false}!sass-loader?{\"sourceMap\":false}!./assets/sass/app.scss in ./src/App.vue\n```\n\nI've run npm install, can't figure out what's wrong. Any help would be greatly appreciated!. Actually, the message in the terminal didn't really help me, but the error showing where the app would be (loading http://localhost:8080) said it couldn't find sass-loader, and then node-sass. Added them and now it works!. I noticed vue-cli was not the most recent version. Updated to 2.8.2 and it's working now.. ",
    "robertjchristian": "Could be conflicts in node_modules folder.  Good idea to make sure it's clean.\nTry:\nrm -rf node_modules && npm install. ",
    "DevilishMan": "npm install node-sass sass-loader. ",
    "NodiraIbrogimova": "After getting update from my teammates in git, I had the same issue in vuejs app. \n1. Deleting package-lock and node_modules\n2. And reinstalling my dependencies (npm install) worked for me . ",
    "craigatk": "I hit this same error as well - thanks for fixing it!\n. ",
    "tkdave": "Resolves Issue #288.\n. ",
    "darenju": "Thanks for merging. I'd be interested in knowing the reasons as well.\n. ",
    "anishkny": "@chrisvfritz yes. \nIf I have a file in static folder say static/1.jpg which I reference in a component template using src=\"static/1.jpg\", and then I execute npm run build, the dist folder contains:\n$ find dist \ndist\ndist/index.html\ndist/static\ndist/static/css\ndist/static/css/app.25ce96f5916d7c45284405632fc01fda.css\ndist/static/css/app.25ce96f5916d7c45284405632fc01fda.css.map\ndist/static/js\ndist/static/js/app.74fbd7b2bb622359ef08.js\ndist/static/js/app.74fbd7b2bb622359ef08.js.map\ndist/static/js/manifest.361d103eeea14378fca7.js\ndist/static/js/manifest.361d103eeea14378fca7.js.map\ndist/static/js/vendor.d51411e26c162045089b.js\ndist/static/js/vendor.d51411e26c162045089b.js.map\ndist/static/static\ndist/static/static/.gitkeep\ndist/static/static/1.jpg        <----- causes 404 in prod version\nThis change seems to fix it without breaking anything else. New dist folder contents:\n$ find dist\ndist\ndist/index.html\ndist/static\ndist/static/1.jpg                 <------- good!\ndist/static/css\ndist/static/css/app.25ce96f5916d7c45284405632fc01fda.css\ndist/static/css/app.25ce96f5916d7c45284405632fc01fda.css.map\ndist/static/js\ndist/static/js/app.d208067752c7dcaa01c8.js\ndist/static/js/app.d208067752c7dcaa01c8.js.map\ndist/static/js/manifest.a871c5db51318bf613a4.js\ndist/static/js/manifest.a871c5db51318bf613a4.js.map\ndist/static/js/vendor.d51411e26c162045089b.js\ndist/static/js/vendor.d51411e26c162045089b.js.map\n. ",
    "gkatsanos": "@pksunkara would you mind having a look at my repo/branch? I am trying to integrate your proposed changes to this template (so, having vue-router) : https://github.com/gkatsanos/gplus/tree/redesign. @pksunkara thank you. I am mostly trying to make it work on my own and understand a bit how it functions.. (I was expecting the integration to be smoother). @chrisvfritz would you mind adding some example or documention on how to include a vue related package and import it with the vuejs-templates?\n. Hold on, I know how to add a package with npm and import it with Babel, but I thought it could be vue-cli's responsibility to help you with bootstrapping the project to have an option to include vue-router or vue-resource (together with the necessary configuration..?)\n. Thanks a lot for this link! I have a question regarding http://vuejs-templates.github.io/webpack/proxy.html - should I make an issue here or in http-proxy-middleware ? \n. Uhm, hold on, I guess my question should be at least towards vue-cli which\nis bootstrapping a Vue.js project and should normally give the possibility\nto choose whether you want a router or a resource?\n. I don't understand what's the point of the \"keeping it simple\" - having a generator which doesn't have a routing system is a bit pointless right? It could be an optional thing, like tests are. . I guess as long as there's a webpack-advanced template, 90% of use cases would be covered :) \nPersonally I don't mind doing things manually at this phase as it's a means for learning. But when you're past the 2nd or 3rd project, automation is basics can accelerate/facilitate the work a lot.\nMy Criticism was maybe a bit sharp, but it was definitely both constructive and polite, unlike some other comments I read which were definitely not constructive. . It would be very nice, I m just starting with vue-router and there's nothing useful in the vue-router documention regarding our webpack setup.\n. Thank you @LinusBorg . I should have closed this earlier - I figured I'd try that and indeed it worked. There's no \"node.js\" / \"express.js\" part used in my application so everything should be static :) . 2 years later, still don't get it. I deploy to heroku, and I set this:\n\"postinstall\": \"yarn build:production\",\n    \"build:production\": \"node build/build.js\",\nin my package.json .\nHeroku properly creates a /dist/ folder with the compiled files . \nSo far so good.\nWould be cool to be able to access this /dist/ from my Heroku domain though :( \nI believe vue-cli deserves a docu that explains the limits of deploying to services like Azure and Heroku. . lets please try to merge this! . what's missing from https://github.com/vuejs/vue-test-utils/ to consider it non-beta?. It just feels this was written for a very particular case and it's not extendable - I don't see the added value of complicating the webpack configuration EVEN MORE than it already is. \n. Thanks :) I forgot to close the issue!. Thank you, unfortunately the complexity of the project is such that I am afraid it will not be possible. I was hoping someone has already witnessed this and there's already a solution. \nPS: we might have been able to solve it by upgrading to Webpack 4. . Filed a bug to https://github.com/webpack/webpack/issues/7199, although I suspect it has to do with something vue specific. . Have you checked that SourceMaps work? (because I think there are issues with mini-css-extract-plugin and sourceMaps) . Since this is not related to the pull request what's stopping us from merging it? . if you don't provide an explicit chunkFileName here you'll get errors when you split several chunks for lazy loading. (something like trying to emmit to the same file). Try having 2 or 3 lazy loaded components using vue-router when each one's using a separate CSS file. . ",
    "adambiggs": "S3 static website hosting doesn't support redirects. Would love to see either one of the proposed solutions implemented.\nFor us, the fix was as simple as setting assetsSubDirectory: './' in config/index.js.. Thanks for the info @heinzdmx, I wasn't aware of that. I think changing assetSubDirectory is an easier fix though.. No idea what I'm doing wrong, but I'm still getting the same error with @DevanB's final solution...\nError: [vuex] vuex requires a Promise polyfill in this browser.\n  at webpack:///~/vuex/dist/vuex.js:214:0 <- index.js:34700\n\nEdit: Got it working by adding es6-promise.auto.js to my karma.conf.js:\njs\n    files: [\n      '../../node_modules/es6-promise/dist/es6-promise.auto.js',\n      './index.js'\n    ]\n...Still not sure why import 'es6-promise/auto' doesn't work in Karma.. I figured out the issue... I'm using vue-awesome, and forgot that I had to modify the webpack config slightly to get it working.\nFor anybody else who might run into this, you need to add vue-awesome to the babel-loader config:\njs\n      {\n        test: /\\.js$/,\n        loader: 'babel-loader',\n        include: [resolve('src'), resolve('test'), resolve('node_modules/vue-awesome')]\n      }. ",
    "heinzdmx": "@adambiggs S3 do support redirects \nYou can define redirect behavior on the object level or at bucket level\nAt object level:\nhttps://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html\nBasically you upload an empty file with \"x-amz-website-redirect-location\" set to the new location\nAt bucket level:\nhttps://docs.aws.amazon.com/AmazonS3/latest/dev/HowDoIWebsiteConfiguration.html. Is this working when running npm run dev? I believe your error is on your router.beforeEach  function\nI think your choice of naming of variables may have confused you. You define the variables as\nrouter.beforeEach((route, redirect, next) => {\nwhereas the documentation define them as:\nrouter.beforeEach((to, from, next) => {\nYou are trying to change the path using redirect but should instead do with with next as per the documentation\nFor example: \nredirect({  path: '/auth/login' }) should be changed to next({  path: '/auth/login' })\nI think that will take care of the first exception, as t is probably the renamed redirect variable.  \nThe last error I am not so sure about, but try commenting out all code in router.beforeEach, except next() and see if that helps.  I would also advice you to try running as development, as it can give some additional clues that build does not give. Then I guess it might have been caused by different dependencies on the Droplet compared to your local machine. As long as it works now I guess :) . Why add this? The documentation for vue-hot-reload states that it is not needed for normal application usage where you use vue-loader is used source\n. You are referencing two icon's with different casing doubanIcon.png and doubanicon.png\nMost filesystems on Linux and Mac are case sensitive so this would two different files. On Windows the filesystem is not case sensitive so this could only be 1 file.\nTo fix it be consistent in the your casing when defining the paths to a filename. . So far as I understand this happens if dependencies are missing or other fatal errors. However the errors are still outputted to the terminal so you should find the errors there. As is documented in the Vue docs  you use the assets the following way (btw they are not under src/assets/ but under assets/) \nAsset Resolving Rules\n\nRelative\nURLs, e.g. ./assets/logo.png will be interpreted as a module dependency. They will be replaced with an auto-generated URL based on your Webpack output configuration.\n\n\nNon-prefixed\nURLs, e.g. assets/logo.png will be treated the same as the relative URLs and translated into ./assets/logo.png.\n\n\nURLs\nprefixed with ~ are treated as a module request, similar to require('some-module/image.png'). You need to use this prefix if you want to leverage Webpack's module resolving configurations. For example if you have a resolve alias for assets, you need to use <img src=\"~assets/logo.png\"> to ensure that alias is respected.\n\n\nRoot-relative URLs\ne.g. /assets/logo.png are not processed at all.. There is already both open issues and pull requests for Webpack 3 support: #751 , #891 . What about solving the original problem first? \n\n\n\nTry setting it up as a routing proxy: https://vuejs-templates.github.io/webpack/proxy.html\nThat way you don't have to worry about CORS and get get it setup rather easily, and get hot reload the like to work as well. My 2-cents on this: \nhard-source-webpack-plugin seems very promising, but looking at https://github.com/webpack/webpack/issues/250#issuecomment-347811223 and the comments on it, it appears that it relies heavily on webpack internals which means that even a semver-minor change could result in breaking hard-source-webpack-plugin\nI woud therefore caution about adding it to this template and instead suggest that it might be added to a readme / added as commented out code. . Take a look at for example https://stackoverflow.com/questions/42936588/how-to-deploy-vue-app\nYour question is not specific to this template, this is very general to how webpack works, so I would suggest you read up on webpack dev/production builds. \nBasically when developing you use npm run dev\nWhen you want to create a production build you run npm run build and that creates standard html, css and javascript that can be run through any HTTP file server. So to answer your question, yes any nginx and apache server can be used. However your development and build machine needs node to create a production build. \nNote if you use Vue router with HTML5 history mode enabled it requires a little more, see Vue router documentation\nThis would probably be better suited as a forum post on https://forum.vuejs.org/ or on stackoverflow as this issue tracker is meant to be focused on bugs or new features for the webpack template, and not support questions. . I don't think this issue tracker is meant to be used as a support option. But itsn't it because of minChunks: 3 in CommonsChunkPlugin. It essentially will only placed it in a seperate chunk if 3 chunks uses it. If only 2 it will not do that. If you setr minChunks to 2 that would probably do it for you. But that could have other consequences. . ",
    "chuckdries": "I'd like to 1up this suggestion as well. I'm working in an app where client and server stuff live together in folders /client and /server. I'm trying to rearrange things so that they play together more nicely, and part of that is pulling the build processes and such out of client and into my project root. \nBut, if I pull out my webpack stuff into /, it only looks for static assets in /static, not /client/static, which means I have to make client and server stuff mingle.. ",
    "zce": "@chrisvfritz Thanks\n. ",
    "boustanihani": "Any updates on this ?\nWebpack is at v2.2.0 right now (https://github.com/webpack/webpack/releases) and they also offer links for documentation and tutorials on the official site :). ",
    "vinceh": "Need to use <style src=\"./assets/css/reset.scss\" lang=\"scss\"></style>\n. ",
    "plcosta": "Right @chrisvfritz, thanks!\n. ",
    "ryandeussing": "All good points.\n. ",
    "ghost": "yes this happen, i try with apache and nginx, and i try to copy paste code to other file still same.\nonly npm run dev show display correctly\n. hey guys, i had the same issue. Blank page for production build even though all files were properly served from the dist folder (including index.html) by nginx. Turns out i was using wrong Vue build for my production build.\nI had \"vue.runtime.min.js\" set as an alias to vue$ in webpack config. Switching it to \"vue.min.js\" resolved my problem. \n. Back link to stackoverflow. I can't get this working with my build.\nhttps://stackoverflow.com/questions/45208186/vue-webpack-2-autoprefixer-for-ie9. Yes it is.. No it is not. webpack-simple works for example.. I tried this template with no errors and NODE_ENV=development, testing and production:\nbrowserify\nPossible related issue: 537\n. Possible related issue: 535. Any further developments to this? I have to suppport IE10.... :( \nGetting the same sourcemap issues as @cycold  has stated.\n. So, when the merge?. It is the magic PR, maintainer (@LinusBorg ) don`t see that. . @oguibueno it fixed it, thanks!. ",
    "kiwina": "just tried a blank out of the box project and run: npm run dev \nthere is a problem with .vue files\n. ",
    "woozyking": "I encounter the same issue from time to time as well, where the manifest gets transferred, but app or other component (by vue-router) js files get \"stuck\", and leads to a forever blank screen.\nNot sure exactly why though. @LinusBorg it doesn't work. Even if it does, I would still feel that a server-to-server based API tunneling is the most reliable choice (and equivalently trivial). Let's say the backend API server does not have explicit CORS header configured, and by default prevents any form of cross-origin client side request, rightly so. So the problem is that we would get complaint (and an error in browser) that says the request hit localhost:PORT but the response actually comes from actual_backend_API_server.com, with no explicit allowance through the CORS headers, no go.\nThat's why I'm proposing to have the default dev-server.js implementation to instead of using the proxy middleware, having a simple middleware to perform a \"server-to-server\" request from dev-server to the designated backend API server(s), retrieve the data stream, and pipe to the response that dev-server sends to the client side (in usual case, a browser). No more CORS configuration and meddling on any layer of the stack, because so long you have access (through authentication, VPN, or whatever other means of protection), a server-to-server HTTP request is never governed by the CORS headers.\nAnd such simple middleware can be done through request library which nicely supports stream piping. But one can easily use axios, or even the raw HTTP module from node.js.. Here's a simple example I used to replace the default one\nnode.js\n// one can easily make this work with the `proxyTable` object to handle multiple configs\napp.all('/api/*', (req, res, next) => {\n  return req.pipe(request({\n    uri: req.path.replace(/^\\/api/, ''),\n    baseUrl: 'http://my.api.server.com',\n    qs: req.query,\n    method: req.method\n  })).on('error', next).pipe(res).on('error', next)\n})\n// this is used to capture the stream errors\napp.use((err, req, res, next) => {\n  console.error(err.stack)\n  res.sendStatus(500)\n}). Thanks for the pointer on the onProxyReq option @asvae. Unfortunately, I would still get browser complaining about CORS:\nXMLHttpRequest cannot load http://SOME_REMOTE_HOST/path/to/api. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:8080' is therefore not allowed access.\nIt's such a puzzle to me right now \ud83d\ude1e . @asvae yes I certainly requested the intended proxy path as such on client side\naxios.get(`/api/campaigns?id=${...}...`).then(...). @asvae I didn't even set it, literally just axios.get('/api/...'). This is what I'm confused about too @asvae as I simply just request on http://localhost:8080/path/to/api it would \"redirect\" to the matching http://SOME_REMOTE_HOST/path/to/api specified in proxyTable.\nAnyway the values are as the following:\n\u23a2 Original URL: /api/endpoint?query=value\n\u23a2 Host Name: localhost\n\u23a2 Origin: undefined\nIt looks like the origin header is not set. @asvae thank you for all the help. I'll dive deeper later on this and report back any new findings.. Thanks @stcqu, I'll experiment with your suggestions and see if that would make things simpler.\nAt the end of the day this is a very minor part of the end product that one may ship. Right now we went as far as building the API proxy as part of the production server because the complexity kind of warrants this structure (especially that in our use case we handle sessions). We then factored the common logics out and have it imported by both the dev-server and production server as a shared middleware.\nI think it comes down to how much logic is utilized and shared between dev server and production server environment (when applicable), as some, or many Vue projects are developed without a production server side.\nI personally think that this issue could be closed as it only troubles a portion of the broader use cases that's not even vuejs-templates/webpack project's main concern (and frankly, shouldn't be).. ",
    "AngeloAnolin": "I think I am also having the same issue as @woozyking is encountering.\nThe only difference is that the dist files after building, I am serving via Windows IIS (Internet Information Services).\nI do have a valid and working web.config file in the dist folder.\nThe project I have tries to call Authentication (via Auth0) and then after checking the authentication, nothing is happening. It seems that the router is not routing or serving the correct routes as required.. ",
    "abotsi": "Hey, \nSame problem as @woozyking here. Does anyone understand what could be happening ?. ",
    "ssshooter": "@AngeloAnolin @abotsi \nstarted http-server and visit 127.0.0.1 is OK,but 127.0.0.1/index.html is blank.\ni think the problem is related to vue-router,\u2018index.html\u2019 must be omitted. ",
    "flickyiyo": "In dist/index.html change every /static/ to  static/. ",
    "martijnhiemstra": "It's just like flickyiyo said, all the url's are absolute and should be relative. Someone at VueJS has made a huge mistake making all the url's absolute. In my case I have Ubuntu on my computer and when I open the index.html the url's to the Javascript files start with / meaning the browser wants to look for the Javascript files on the root of my harddisk. Someone at VueJS really needs to wake up and fix this. Relative url's and nothing else.. ",
    "tiagomatosweb": "Guys, I think you are missing that SPA is not server side rendering. At least for the majority. So, when you access /anything your web server won't redirect it to index.html. However, if you click on any vuejs router link, it will work due to the fact that the javascript got in action, but not the server side.\nTo solve this, use .htaccess and redirect all requests to index.html like so\n<ifModule mod_rewrite.c>\n    RewriteEngine On\n  RewriteBase /\n  RewriteRule ^index\\.html$ - [L]\n  RewriteCond %{REQUEST_FILENAME} !-f\n  RewriteCond %{REQUEST_FILENAME} !-d\n  RewriteRule . /index.html [L]\n</ifModule>\nHope it helps someone!. @IvanRusli777 have you set up the rewrite rule?. thank you!. ",
    "ivanrusli": "im having the same issue, please help this is frustrating. @tiagomatosweb yes, its all working now. my case is solved by changing my nginx server config and directing it to dist folder, so stupid of me . ",
    "wixys": "After I run \"npm run build\", I got this tip in the console:\nBuild complete.\nTip: built files are meant to be served over an HTTP server. Opening index.html over file:// won't work.\nIn my local server, npm run dev works fine, but after upload the project on Apache server, installed node_modules (npm install) and I run \"npm run build\", I got the tip in the console and a blank page, no errors in dev console in my browser\nThe path on the server (Apache) is: /mydomainproject/public/projects files:\nbuild\nconfig\ndist\nnode_modules\nsrc\nstatic\n.babelrc\n.editorconfig\n.postcssrc.js\nindex.html\npackage.json\npackage-lock.json\n.htaccess\nThis is my public/config/index.js\nbuild: {\n    // Template for index.html\n    index: path.resolve(__dirname, '../dist/index.html'),\n// Paths\nassetsRoot: path.resolve(__dirname, '../dist'),\nassetsSubDirectory: 'static',\nassetsPublicPath: '/',\n\nI've changed assetsPublicPath: '/' to assetsPublicPath: './', also I tried assetsPublicPath: './public', but still not work.\nPlease, someone can help me?\nThanks!. I'm really scared, I'm building a web app using VueJs on local server and everything working fine after run \"npm run dev\", but after run build on production server (Apache) I got blank page... nobody knows about this problem... I've changed config/index.js, adding relative paths, ./, /, even absolute path (I never work with absolute paths), I've asked in Stackoverflow, no answers... Also, there are no errors in the console log browser.. I tried with a Vue fresh installation, I got the same blank page and tip in the console after run \"npm run build\" on a production server.\nTip: built files are meant to be served over an HTTP server.\nOpening index.html over file:// won't work.. ",
    "AngelKMB": "Hi,\nI am having the same problem as wixys. Can anyone help?. works fine too. ",
    "Severin-THIRIOT": "I have the same issue, I work on this for 2 days it's very frustrating. ",
    "mirhat": "@Severin-THIRIOT  Did you find cause of this issue?. ",
    "lawrence615": "Pointing the Nginx root to dist directory worked for me as well. Well explained in this tutorial: https://medium.com/@Web_Bailey/deploy-a-vuejs-app-with-digitalocean-fd6e7af07e40. ",
    "neculaionutni": "The best solution I could come up with was to copy the code from dist/index.html to index.html from the root project and then just changed the /static/... path to your_main_folder/static, your_main_folder being the subdirectory from you deployment server. Or if you have it in your root you just have to stick with static/.... Nothing to do with server configuration, as simple as that.. ",
    "schiu-choice": "Under config folder, index.js. update the path to assets. From default \"/\" to \"./\"\nAnd build again! \nworks for me!\n\n. ",
    "fnoori": "If anyone else is having this problem.\nI fixed mine by removing the \"/\" from the assetsPublicPath in config/index.js\n\n. ",
    "vdraceil": "Any other solution besides adding a dot or clearing out build.assetsPublicPath? .. because those two don't work for me.\nHowever, removing mode: 'history' from the VueRouter initialization works, but I do not want hashtags in my URL... ",
    "ManuelSchmitzberger": "My problem was that the webserver was configured wrongly. So the CSS and JS files cannot be found.\nSimple check this via the browser debugger console.\nput that in your nginx.conf::\n```\nhttp {\n   server {\n        listen 80;\n        server_name yourservername.com;\n        root html/path_to_your_project;\n    index index.php index.html;\n\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n}\n\n}\n```. ",
    "wangwenpei": "OK, I found two reason may cause blank display when use build.\nI have tested so many times, and finally found them, it cost me one day! unbelievable!!!\n1. assetsPublicPath,like @schiu-choice said. \n2.  your Router use history mode. disable this feature will works. but I don't know why, wish team member can fix it. I am not familiar with Vue.. close it, I should try pug-loader first.\nI will reopen it if there is some valuation pattern.. Hi, @LinusBorg \n  thanks your suggestion. I upgrade code. please review it.. Hi, @LinusBorg \nI am confused now. I changed my code use your suggest way. \nI use <template lang=\"pug\"> and add templateLanguage choice to let user select prefer template engine.\n. Agree.\nThis feature may need be discuss. for this reason, I set default template engine is still HTML.\nthis PR for me is just a lift a finger. and now I already can use in my team. wish this feature is useful and can help more people.\nThanks Vue, it's awesome!\n. because pug generate code doesn't  have  end line.. In our project we use pug file as template engine.\ngenerate code should be ignore.\nI never used pug-loader. I think I shoud try it first. \nthis PR may not widely enough for community and looks a bad idea,\nsorry for waste your time.\n. ",
    "KazakoffJunior": "I found a solution for build production ver. outside server root folder with history mode:\n1. in assetsPublicPath add dot like @schiu-choice said;\n2. in your vue-router add your specific root folder in all routes.\nExample:\nyour vue production version host in http://test.test/mainVue\nso, your main route:\nroutes: [\n    {\n      path: '/mainVue/',\n      name: 'mainVue',\n      component: mainComponent,\n    }. ",
    "renaudham": "HI\none note for the people putting the dist in a local apache server Xampp/Wampp\nyou need to put your index.html as index.php\nand put your files in the root of you vhost.\nThen all will run well.... ",
    "StudioRyuLLC": "@KazakoffJunior...thank you! Your solution resolved the same issue I was having. :). ",
    "thecyberlord": "Pointing the root location of server to /dist folder in nginx config worked for me.. ",
    "ahmedsamir93": "\nIf anyone else is having this problem.\nI fixed mine by removing the \"/\" from the assetsPublicPath in config/index.js\n\n\nThank you it works well\n. ",
    "3ehrang": "Anyone who uses wamp server you can create virtualhost for the project like these configs and run your lcoalhost http://vueapp.local works for me\n<VirtualHost *:80>\n    DocumentRoot \"E:\\wamp\\www\\vueapp\\dist\"\n    ServerName vueapp.local\n    <directory \"E:\\wamp64\\www\\vueapp\\dist\">\n        DirectoryIndex index.html\n        AllowOverride all\n        Order Allow,Deny\n        Allow from all\n    </directory>\n</VirtualHost>. ",
    "italomaia": "Semantic-ui produces an huge css file. Webpack seems to not handle it very well. That is the reason for this issue.\n. @LinusBorg what do you mean \"as a feature\"? Like, optional? Well, semantic-ui kind of needs it real bad. Other frameworks might too. Maybe documenting the proper usage would do the trick. Personally, I have to add a \"global-modules\" every *amn time. . ",
    "moonou": "umm...., this is a single page application, logic code write in *.vue file, if you need add another html file, add html file to static folder, that location like localhost:8080/static/*.html, but  this has no meaning. maybe you need vue-router\n. I can't reproduce this issue, \n\nif me enter a template of error, vue-cli will return 404\n\n. \u56e0\u4e3a\u8fd9\u4e2a\u9879\u76ee\u53ea\u662f\u4e00\u4e2avue\u5355\u9875\u9879\u76ee\u7684\u6a21\u677f\uff0c\u670d\u52a1\u5668\u6e32\u67d3\u66f4\u591a\u9700\u8981\u670d\u52a1\u5668\u7aef\u7684\u4ee3\u7801\u53bb\u914d\u5408\uff0c\u5e76\u4e0d\u9002\u5408\u505a\u4e00\u4e2a\u751f\u6210\u6a21\u677f\u3002\u5982\u679c\u9700\u8981\u9879\u76ee\u7684\u67b6\u6784\u53ef\u4ee5\u53bb\u53c2\u8003vue-hacknews-2.0\u3002. I can't reproduce this issue by your provide step, do you break files structure?. umm..,that if judgment code is my pr, because e2e test will open browser #345 \nactually. I think this template doesn't need to open browser, open browser should let developer to do. update this dependencies will influence test, run npm run unit  will trigger error\n\u8fd9\u4e2a\u5de5\u5177\u7684\u53d8\u66f4\u4f1a\u5f71\u54cd\u5230\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5982\u679c\u4f7f\u7528babel-plugin-istanbul\u7684\u8bdd\u4f1a\u5bfc\u81f4npm run unit\u9519\u8bef\nsource code\n\n. this dependencies should let user to add\n\u8fd9\u4e2a\u4f9d\u8d56\u5e94\u8be5\u7531\u7528\u6237\u6765\u6dfb\u52a0\n. ",
    "zxc23": "@dejan7 \nYou can access Vuex without going through the Vue instance, e.g.:\n`import store from './vuex/store'\nimport * as actions from './vuex/actions'\nactions.someAction(store, 123)`\nor equivalent with require(). You can probably skip actions as well if you wanted to.. ",
    "ahopkins": "Wow. Hmm.... Sure. I'll upload my repo and send you link when I am back at a computer. If not today, it might be a couple days. Sorry for delay.\n. Okay I am closing this. Seriously, I did absolutely NOTHING to my environment except walking away for 24 hours. Seems to be working fine. Closing. Sorry :-(\n. @jkehler I know you will likely not like my answer, but I scrapped my project folder and started again. Incrementally adding packages back and components to see that nothing broke. The annoying thing is that my two folders (new_project and legacy_project) are identical. One works as expected, the other is the problem above. \nFrustrating? Yes.\n. ",
    "jkehler": "I am encountering the exact same issue you were. As soon as I put my Components inside a nested folder they no longer are being picked up by the hot module reloader. I have no idea how to resolve it.\nI'm using VIM under Linux.\n. I can confirm it's not VIM as I just tried opening Sublime Text and saving a file under a nested folder and HMR did not pick it up. So it must be something with the Linux file watcher.\nupdate\nI found the solution. I had to increase the number of file watchers under Linux using this guide.\nhttps://webpack.github.io/docs/troubleshooting.html\n. ",
    "holic-cl": "i had same issue, but @jkehler answer solve my problem.. Cool, just what I needed.\nThanks. ",
    "AlexandreBonneau": "Well, I first asked in the babeljs slack channel, and it's the only answer that did fix the problem for me.\nHere is the needed info :\n\u00bb npm --version\n1.4.21\n\u00bb nodejs --version\nv4.3.1\n\u00bb uname -a\nLinux Host 4.7.0-1-amd64 #1 SMP Debian 4.7.5-1 (2016-09-26) x86_64 GNU/Linux\n\u00bb lsb_release -a\nNo LSB modules are available.\nDistributor ID: Debian\nDescription:    Debian GNU/Linux testing (stretch)\nRelease:        testing\nCodename:       stretch\n\u00bb cat .babelrc \n{\n  \"presets\": [\"es2015\", \"stage-2\"],\n  \"plugins\": [\"transform-runtime\"],\n  \"comments\": false\n}\nNote:  my OS install is fresh from a few days, so this bug might arise only if you haven't previously npm -g install babel-runtime?\n. Ok, the npm version shipped by Debian is very, very old (cf. bug report).\nI updated npm to 3.* by using npm -g install npm, created a new project with the webpack template, and indeed, I can now use typeof in the component files.\nNote : when using vue-cli, perhaps a warning could be shown when the user is using an old npm version?\n. Or, for people using debian-based system, tell them they could 'fix' the problem by manually installing babel-runtime as a dev dependency, if they do not want to update npm?\n@chrisvfritz this would not change anything since by default on Debian, node version is currently the v4.2.6 (or v4.3.1 on my end since I updated my base install), it's the npm version that needs to be checked to be >=3.0.0.\n. I understand, on the other hand, Debian has many users, and is the base of many popular distros, which means lots of users are by default running that highly outdated tool.\nA simple warning could help those users understand why they get those error messages, and save them the hours I put in finding out their cause.\n. ",
    "MatthewOverall": "@chrisvfritz Thanks for pointing me in the right direction. Since this template doesn't have vue-router built in I was able to follow your other example and get it all put together. I agree SSR is certainly not needed for the project I am working on so prerendering is great. Thanks for your help and contributions! \n. ",
    "StevenBock": "Well I feel foolish - the CSS that the modal uses for animations and overlays was being loaded into it's own standalone file.  As soon as I added that back in, everything worked correctly.  Doh!\n. ",
    "rongself": "Thanks for remind,I'v found the relate issue in closed issues,this can be closed\n. ",
    "jamesjieye": "Yes, it is correct.\nJSON.parse() will return a string if the input is a string. Checkout the doc of JSON.parse() here. \n. You can extract vendor's CSS to a separate file. For example, if you add install bootstrap via npm install bootstrap --save and then add change the entry in webpack.base.conf.js to the following\nentry: {\n    app: './src/main.js',\n    style: ['bootstrap/dist/css/bootstrap.css']\n  },\nAnd after run npm run build, you will get bootstrap css extracted to style.***.css and the generated index.html looks like this.\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=utf-8>\n  <title>vue2-test</title>\n  <link href=/static/css/app.9f3126d1020a92a1452087ee86466a89.css rel=stylesheet>\n  <link href=/static/css/style.cbdcc089559c4313a6b58e73fbff6ae6.css rel=stylesheet>\n</head>\n<body>\n<div id=app></div>\n<script type=text/javascript src=/static/js/manifest.570d754ea257d8a23a41.js></script>\n<script type=text/javascript src=/static/js/vendor.5e94dd09dd36320829c1.js></script>\n<script type=text/javascript src=/static/js/app.93f6391f3f647f5d7ae9.js></script>\n<script type=text/javascript src=/static/js/style.2631fa881c600f1dcfad.js></script>\n</body>\n</html>\nHowever, for me, the problem is that, the vendor's css is placed after the application's css. Still researching how to fix that.\n. Figured out a way to move the style.***.css before app.***.css. In webpack.prod.conf.js, change the HtmlWebpackPlugin to the following.\n```\n    new HtmlWebpackPlugin({\n      filename: config.build.index,\n      template: 'index.html',\n      inject: true,\n      // adding a unique webpack compilation hash to all the included scripts and css files.\n      hash: false,\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: true\n        // more options:\n        // https://github.com/kangax/html-minifier#options-quick-reference\n      },\n      // Use custom ordering for chunks\n      chunksSortMode: function (chunk1, chunk2) {\n        var orders = ['manifest', 'style', 'vendor', 'app'];\n        var order1 = orders.indexOf(chunk1.names[0]);      \n        var order2 = orders.indexOf(chunk2.names[0]);\n        if (order1 > order2) {\n          return 1;\n        } else if (order1 < order2) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }\n    })\n```\nNow, what is left to do is to find a way to skip style.****.js from being injected, even though it doesn't do any harm.\n. Just finished an example with extracted vendor css and excluded style.[chunkhash].js file.\nhttps://github.com/jamesjieye/vue2-example\n. @zhangxin840 Do you have an example with only change the minChunks? \n. Well, it seems PRETTY urgent to you and since no body has replied yet, so I am replying here.\nFirst of all, this template webpack doesn't support server side rendering. What you were running is webpack's dev server.\nSecond, if you want to check out server side rendering, use this example https://github.com/vuejs/vue-hackernews-2.0.\nThird, the correct way to check if the page is server-rendered is \n\nOnce you have it running locally, you can confirm that server-side rendering really is working by right-clicking on the page and selecting View Page Source (or similar). You should see this in the body: <div id=\"app\" server-rendered=\"true\">You have been here for 0 seconds&period;</div> instead of: <div id=\"app\"></div>\n\nAs it is said here https://vuejs.org/v2/guide/ssr.html#Simple-SSR-with-the-Express-Web-Server.\n\n. For anyone who cannot wait and want to try webpack4, use vue init noamkfir/webpack <app name> to bootstrap your app. Not for production. Hi @lucileFievet, \nI'm able to create a brand new application with vue init noamkfir/webpack <app name>. I didn't try it on existing application. . @cngu Thanks!. ",
    "ca01ei": "Hi, it seems to be a bug of zsh, try to use bash instead.. ",
    "shailendher": "This is fixed by #351 .\nPlease close this ticket.. linking #611 . As starting point, perhaps we can provide it as one of the options instead of default? @prograhammer your thoughts?. I tried 'yarn run dev' and it actually works. Perhaps the issue is somewhere else?. Ah! Excuse me. Now I see that in 'check_versions.js' they have an explicit check for it.. Hi,\nI tried this on a newly created project and hot reload seems to work. Or did I do something wrong?\n`D:\\temp\\my app>npm run dev\n\nmy_app@1.0.0 dev D:\\temp\\my app\nnode build/dev-server.js\nStarting dev server...\n\nDONE  Compiled successfully in 5889ms\n\nListening at http://localhost:8080\n\nWAIT  Compiling...\nDONE  Compiled successfully in 343ms`. Hi,\nPerhaps importing the router component will help here? \nHere's what I tried:\nIn Hello.vue:\n<li><router-link :to=\"{'name': ''}\">foo</router-link></li>\nAnd Hello.spec.js\n```\nimport Vue from 'vue'\nimport Hello from '@/components/Hello'\nimport router from '@/router'\ndescribe('Hello.vue', () => {\n  it('should render correct contents', () => {\n    const Constructor = Vue.extend(Hello)\n    const vm = new Constructor({router}).$mount()\n    expect(vm.$el.querySelector('.hello h1').textContent)\n      .to.equal('Welcome to Your Vue.js App')\n  })\n})\n```\nHere is the link for more details: https://forum-archive.vuejs.org/topic/3929/how-to-unit-test-a-router-hook\nI'm still a beginner at Vue.js, so take all this with a grain of salt.\n. ",
    "myst729": "I have the same issue. I always change config.build.assetsPublicPath to './'. But I don't think it's OS related. It's because /static/js/manifest.[hash].js is an absolute path.\nIt's OK in dev environment because the dev server runs at http://localhost:8080/, which is the domain root. In such case absolute path and relative path constructs the same URL.\n```\nhttp://localhost:8080/index.html\n/static/js/manifest.[hash].js -> http://localhost:8080/static/js/manifest.[hash].js\n./static/js/manifest.[hash].js -> http://localhost:8080/static/js/manifest.[hash].js\n```\nHowever, say, your production is served under a sub-directory of your domain, things go wrong. Absolute path tries to construct the URL from domain root, which is 404.\n```\nhttp://asdf.com/vue-app/index.html\n/static/js/manifest.[hash].js -> http://asdf.com/static/js/manifest.[hash].js\n./static/js/manifest.[hash].js -> http://asdf.com/vue-app/static/js/manifest.[hash].js\n```\nI remember once discussed with Evan about it, very long ago. But the conversation was not on GitHub, so I forgot to submit a pull request, should have.. @LinusBorg Not the best solution, in my opinion.\nFor example, I'm developing an open source app. If anyone forks the repo and makes their own change, that's fine.\nHowever, for people who are not familiar with code, or don't want to customize, they could also grab the dist package. In the latter case, I cannot be sure how they serve their deployment. So './' is my choice.\nBut after rethinking, I agree it's quite opinion-based.. It does. The app I mentioned uses vue-router. I also enabled code-splitting (but turned off in a later version) and works fine.. @callumacrae \nThe truth is that dependencies and devDependencies are not so clearly different in NPM. I mean, yes, they are different concepts, and behave differently in a way.\nIn the past we use bower, today everybody laughs at bower. Where's the successor? I don't find one. NPM is trying to take over, but honestly not enough, e.g. your case.\nOn the other hand, I'm also wondering one thing. Is npm install --production && npm run build the right way, even though lots of people do? In my opinion, production ready means the distributable is included for up and running. If you have to build from source code, that means the project is not production ready yet. Then why npm install --production? Or, since Heroku sets NODE_ENV to \"production\" which means it's meant to be a deployment server, why use it like a build server? Or we could argue is Heroku doing the right thing.... Yep. I removed that line too, and added rm('-rf', config.build.assetsRoot) right after spinner.start().. Oops, my bad. It was a batch find-replace, updated to keep only necessary quotes.. Did you noticed that NODE_ENV: '\"development\"' is already stringified?. Then you should probably use single quotes, since in the template eslint is using the standard style by default.. I got an approach, but not sure whether it meets your need.\nYou can remove chunkhash from build/webpack.prod.conf.js. So the bundled files will have fixed names (without the hash, e.g. manifest.js).\n\nThen you could turn off injection in HTMLWebpackPlugin options. This way, bundled files will not be automatically inserted into index.html.\nAfter that, modify index.html at project root, add these files like you wanted to.\nhtml\n  <body>\n    <div id=\"app\"></div>\n    <script type=\"text/javascript\" data-src=\"./static/js/manifest.js\"></script>\n    <script type=\"text/javascript\" data-src=\"./static/js/vendor.js\"></script>\n    <script type=\"text/javascript\" data-src=\"./static/js/app.js\"></script>\n  </body>. @LinusBorg Yep, that's what I meant by \"not sure\". \ud83d\ude03 . Initially the folder is empty (except a .gitkeep). So that's correct - * matches nothing. Once you put something in it, images or whatever, the error may go away.. Looks like the driver for firefox is built-in?. @MaxMilton \nAs you could read from above discussions, Linus and I also share your concerns. That's why I think it needs to be discussed. I'm thinking of maybe an opt-in feature could balance both sides? Like test and lint functionalities the template provides.. After over 9 months I'd rather close the thread. There's a better solution for me right now.\nDllPlugin could avoid unnecessary builds of dependencies, if they don't change at all. But, whenever we update, add, or remove one or more packages in production dependencies, the vendor bundle has to be rebuilt. The whole vendor bundle has to be loaded again on client side because you need to update the cache, even if you just changed a 1KB lib!\nTo make best use of the cache, now I load most of my production dependencies from CDN. That means I don't even have a vendor bundle now. All I need to deploy is my business bundle. When production dependencies update, only the updated packages need to be cached again, others are good as usual. Furthermore, the update could be bypassed too if the packages have already been cached by other sites.\nI've talked with several colleagues and they do have similar thoughts. When I tried to implement the idea, I found tools like webpack-cdn-plugin. Very handy for my use case.. I personally use #source-map. It's only slow at the initial build.\neval-source-map is fast (honestly I didn't feel it) but I found it cannot debug JS in *.vue via Chrome DevTools.. @mdartic \nWell, I don't think it's a good idea. The interactive wizard should focus the high level decisions. Let the detailed configurations stay in the files for manual adjustment. Otherwise the wizard will inevitably turn into a pain.. You can modify the webpack config build/webpack.prod.conf.js:\njs\n  output: {\n    path: config.build.assetsRoot,\n    filename: utils.assetsPath('js/[name].[chunkhash].js'),\n    chunkFilename: utils.assetsPath('js/[id].[chunkhash].js')\n  },\nAs you can see, the bundled file name is constructed with entry name or chunk id, plus the chunkhash. The hash varies if something has changed, so the bundled file name changes too.\nTo get a fixed file name, just remove chunkhash in the config.. You could import babel-polyfill in your main.js. Looks like due to UglifyJS cannot deal with ES6 modules?\nThe project is currently migrating to use webpack 2.x, let's see what happens when they finish the migration.. @kazupon The CI server doesn't even have a GUI, is Chrome headless available there?. Great! Will definitely give it a try.. A well-crafted component, as I understand, should be capsulated. Which mean it won't/shouldn't be manipulated from the outside, unless through exposed hooks. In such case, the order won't/shouldn't matter. If cascading and order does matter in your case, then maybe you are not doing thing the \"component\" way, IMHO.. Well, I retract what I've said before. Because I do encounter this issue recently \ud83d\ude1e.. You're right, './' works for the case.\nA long time ago (before Vue 2.x or so) I had a short chat with Evan about this. But I can't remember why I didn't make a PR. Maybe you could do it.. If you are using an npm package written in ES6, it fails because:\n\nBabel skips JS files under \"node_modules\" folder.\nUglifyJS cannot handle ES6.\n\nPossible solutions:\n\n\nYou can force babel to not skip \"node_modules\", so it could be transpiled to ES5.\nhttps://github.com/vuejs-templates/webpack/blob/master/template/build/webpack.base.conf.js#L51\njs\n  {\n    test: /\\.js$/,\n    loader: 'babel-loader',\n    include: [\n      resolve('src'),\n      resolve('test'),\n      resolve('node_modules') // or a more specific path to the package\n    ]\n  },\n\n\nMaybe you are importing the source code of the package, which is in ES6. You could checkout its docs or readme, to see if the package provides an ES5 bundle.. I use webpack-cdn-plugin in my project to exclude libs from the bundle.. I think the error message is clear enough. package is a reserved keyword, in other words, DO NOT define a variable with such name.. FYI https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Future_reserved_keywords. What do you mean by \"don't get any error in dev machine\"? You said you got this error when running npm run dev.\n\n\nWebpack build automatically inserts 'use strict', which means run code in strict mode.. What is skinName?. Oh I recalled that, you should use @import '~@skin/xxx/xxx.scss'. The trick is ~.\nIn original CSS, you could use URLs like here/there.css or ./here/there.css, both are relative paths. But in context of Node, these have different meanings. A ~ sign hereby explicitly declares \"this is not CSS relative path, resolve it as an alias\".\nThe same when you use background: url(~@alias/...) or <img src=\"~@alias/...\">.\nhttps://github.com/webpack-contrib/css-loader#url. Maybe you should put them in \"/static\" folder. Files under \"/src/assets\" will be handled with webpack.. ",
    "nickmessing": "@pksunkara, It would be awesome if contributors create a repo like webpack-advanced or webpack-complete so we can do vuex/vue-router in there with like lots of options, maybe we should try to convince them it's needed?\n. @pksunkara, hmm, nice, are contributions welcome?\n. @ScratchOs, I've seen at least 2 PRs for Vuex, looks like maintainers of this template don't want to include it. Actually they didn't want to include vue-router for long time too so maybe you have a chance.. @BillyPurvis, the webpack tempalte is kept as simple as possible, things like foundation are not general needs. Even vuex which is a part of vue ecosystem is not included so if you want to have a template with foundation you should keep it in a separate repository.. @thangman22, every once in a while somebody wants to add vuex support, just like me few months ago, webpack template is kept as simple as possible so, unfortunately, vuex is not going to be added.. @myst729, headless means \"without GUI\". @frandiox, same for Mac OS, not for windows yet. @van-nguyen, :+1:, LGTM, but me and @Aladdin-ADD are not members of maintainers so we should ask someone with write access.\nP.S. Maintainers should decide if they want this to be a part of official webpack template too. I think @LinusBorg or @posva could help with that. IMO this is a great improvement and should get merged.. I totally agree with @van-nguyen, that was why CDNs were popular in the first place. If this feature is enabled by default - potentially in long term most websites powered by Vue are going to share same cache making both gzip and file sizes irrelevant.. @Aladdin-ADD, I wanted for long time to maintain a more advanced setup (jsx, prettier, vuex...) but I didn't have motivation, we can start it together if you want.\nP.S. @LinusBorg, is there any chance to make it under vuejs-templates organisation?. @Aladdin-ADD, it's too irresponsible to give write access to some random people from internet. Maintaining community template (not afiliated with vuejs-templates) for vue-cli is not a big deal, there was some idea that I had a while ago which Evan liked but I still didn't have enough time to work on it. Can you message me on gitter so maybe together we can do that?. @Aladdin-ADD, @MaxMilton, I think having a separate option would be better than combining it with eslint since the whole vue ecosystem is non-opinionated and highly configurable, even tho I think nobody will use just one of them.. I think, just like @MaxMilton said, there should be .htmlhintrc and it would be nice to add htmllint src/**/*.vue to scripts in package.json I think.. IMO it's better to add #!/bin/sh to test.sh, chmod +x it and then add ./test.sh as a script because it's sh compatible and there is no need for bash per se.. Just as option, maybe it's worth considering replacing sh with shelljs just like vue?. @Aladdin-ADD, that is fixed by using shelljs which is cross-platform. @LinusBorg, yes, I use only linux based operating systems but this solution will not work on windows. As long as nobody who works on this template uses windows it's fine but if there is requirement to support windows I'd highly recommend rewriting test.sh in .js with shelljs.\nSo it's your call, do you want to support windows or unix is okay? :wink: . LGTM, you can ask some maintainers like @LinusBorg or @posva for review.. @Ffloriel, no, you're in @LinusBorg's hands atm :smirk: . @wuaiwuai, why not keeping them in static folder in the first place?. If you put it in static/posts/text.md it should be accessible on http://localhost:3000/posts/text.md, you can see that here.. Sorry, I was wrong, it should be http://localhost:8080/static/posts/text.md by default, you can find more information in docs.. @zhuxiao2004, it always gets latest template from github. @zhuxiao2004, yes. @MaxMilton, I use that as git commit hook since it fails if there are \"unfixable\" rules failing. I think it's worth a shot to add it as precommit hook but I don't know if we want to make it a part of webpack template. This should be bare minimal webpack template.. @gw0, we have airbnb option that has trailing commas and standard which doesn't, changing this would result in failing eslint on \"standard-formatted\" code. I don't like trailing commas tbh, and forcing them for all developers is not a good idea IMO, if you like them, you can always add that rule after you generate the project or use airbnb that already does that.. @Igogrek, I think we should wait for vuejs/vue#5887 before even considering adding typescript to webpack template, and even then I don't think this will be a valid option since we try to keep this template minimal and even vuex is not here.. @Igogrek, I think with all of discussion around TypeScript we can make a dedicated typescript template, @posva, do you think that's a valid option after vuejs/vue#5887 gets merged?\nP.S. I really think  vuejs/vue#5887 will be a big change for typescript support since it will make it possible to not use vue-class-component. I'm waiting for it for a long time.. @afontcu, you can do that but I'd recommend usign babel-plugin-module-resolver with Jest instead.. @afontcu, for src/ you need to set up resolve.modules in webpack config. @afontcu, with this config you can import MyComponent from 'components/MyComponent.vue'. Don't you need a comma at the end here?. Won't this end up being an empty line when cdn is false and two empty lines when cdn is true?. Looks like @van-nguyen is right, that's used in other files like package.json. I think this should be wrapped in {{#lint}}...{{/lint}} just like eslint-loader or have another key in meta.js something like htmlLint. Same as above comment. This should not be a part of project's .gitignore because it has nothing to do with actual project. If vscode is your main code editor you should add it to your global .gitignore instead.. :+1: but can you add \\n back please? :smile: . Check this file again, looks like you missed a closing bracket here after options, now it is:\njs\n      {\n        test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('img/[name].[hash:7].[ext]')\n        },\n      }, // <-- Missed this\n      {\n        test: /\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$/,\n        loader: 'url-loader',\n        options: {\n          limit: 10000,\n          name: utils.assetsPath('media/[name].[hash:7].[ext]')\n        }\n      },. ",
    "mezka": "I'm not a collaborator but today I lost more than a couple of hours \"debugging\" my media queries because of this omission.. ",
    "shah-newaz": "Not working for me on Mac either. Didn't work on Windows on a vagrant box previously\n. Could it be an issue with Vagrant?\n. Hi @Pines-Cheng , Thanks for the suggestion! However, I don't use Webstorm IDE. Sublime text here with no option as such.\n. Hey @AndrewBogdanovTSS , What OS are you using ?\nFor MacOS and Windows, I had to add watch poll to webpack.\nCan you try something like this on your webpack dev server config file?\nconst devMiddleware = require('webpack-dev-middleware')(clientCompiler, {\n    publicPath: clientConfig.output.publicPath,\n    stats: {\n      colors: true,\n      chunks: false\n    },\n    watchOptions: { \n      aggregateTimeout: 300, \n      poll: true \n    }\n  })\nCheck the,\nwatchOptions: { \n    poll: true \n}\nPart. Hope that helps!. ",
    "duebbert": "This can be fixed by using the OldWatchingPlugin(). Add this line to the plugins section in build/webpack.dev.conf.js: new webpack.OldWatchingPlugin(),\nWould be great to test if we're running on Windows and then add this plugin automatically.. ",
    "AndrewBogdanovTSS": "@Pines-Cheng thanks for your suggestion, but it didn't help. Still no hot reload, no change basically. @shah-newaz my OS is Win10\nI've found what the problem was in my case. I used square brackets [] in the projects directory path. How stupid is that a person can't use brackets in the name of the folder? My path was\nC:\\Projects\\Study[Vue]\\VueCLI\\my-app\nwhen I've changed it to\nC:\\Projects\\Study\\Vue\\VueCLI\\my-app\nit magically started working\nit definitely looks like a bug that should be addressed by a webpack team.. I have my project created into usual directory, no cloud-synced stuff, but still, it doesn't work for me. I just set up a default webpack-simple project. I'm on Windows 10, using WebStorm. My dev command is default one and look like this cross-env NODE_ENV=development webpack-dev-server --open --inline --hot So I guess this issue should be reopened.. @patrickodacre yes I tried that, but it didn't change anything, it's not working as before.. Damn, I've found what the problem was. I used square brackets [] in the projects directory path. How stupid is that? My path was \nC:\\Projects\\Study\\[Vue]\\VueCLI\\my-app\nwhen I've changed it to \nC:\\Projects\\Study\\Vue\\VueCLI\\my-app\nit magically started working\nit definitely looks like a bug that should be addressed by a webpack team. ",
    "sumtui": "For any late arrivers here then I had this same issue on Linux and I spent hours trying to resolve it trying all solutions above to no avail. Then I rebooted and all works fine now. Very strange.. ",
    "CarlosVillasenor": "In my case the It worked for me Increasing the amount of inotify watchers:\nhttps://github.com/guard/listen/wiki/Increasing-the-amount-of-inotify-watchers\n. ",
    "boka18": "@CarlosVillasenor you the man!. ",
    "callumacrae": "Will this be a breaking change?\n. What do you mean by \"npm install --production is a Node server only concept\"?\n. When deploying code written from this template, unless you have a separate build server, you want the dependencies requires to build the code, and usually not the dependencies required to test the code. It's not exactly an uncommon use case\u2014how are you guys deploying your code?\nRight now, this template fails to install when deploying to, for example, heroku, because NODE_ENV is set to \"production\" so only vue is installed\u2014not very useful.\nIs this template for applications or for libraries? Because the system you're using only works for libraries.\n. That's generally not the approach I would take, because then you can't have environmental variables. This template doesn't have them, but it's something I've added to every Vue site I've written: it's super useful for, for example, using one API endpoint on a staging server and another on the production server.\nMy workflow is generally:\n- Run build and tests locally after writing code\n- Commit code and push to github in a PR\n- CI runs the build, and then runs the tests - don't merge if failing. Because the build is also being ran, this tests with updated dependencies, which is good\n- Once merged into master, run tests again before deploying\n- If tests pass, deploy code to staging\n- Build runs on staging\n- Once a week, deploy code to production, build running there\nRunning the build locally, while entirely valid, would restrict what I can change between the four environments I'm deploying to. The config/*.env.js files fall apart when you have more than dev/prod. There's even cases where you'd want multiple different production environments with different production environments with different variables: say, you're deploying a whitelabelled app in different environments, or you're hitting a different API for different locations.\n\nAre there any disadvantages to making this change? Are many people using this template for libraries?\n. That's a specific example of a very large number of use cases. The most common deploy method on any cloud provider or provisioned hosting, in fact.\n. @MillerRen Of course. But is this template for libraries or applications? It seems more for applications, to me, and the case you're describing is for libraries.\n. I mean, it's not just heroku: putting dependencies required to deploy the app in dependencies and dependencies required to develop the app in devDependencies is pretty common.. Yeah, sure!. Ah sorry, misunderstood the error - I'm not supposed to specify the .vue extension. Please ignore!. ",
    "padcom": "The Heroku case is very interesting. Normally what I would do in such a case is I would modify my project according to Heroku-specific requirements. However it'd be great to have that information somewhere (maybe the Readme file is a good place for it?).\n. ",
    "MillerRen": "@callumacrae If other packages depends on this package, it will install all dependencies of this package very time.\n. 847ms -> 256ms in my local machine. Linux has watch files number limit.. ",
    "hpyer": "Thank you for you answer.\nRun npm install vue --save will only upgrade vue, but those dependencies (e.g. vue-template-compiler) wouldn't.\nSo I removed the folder node_modules and run npm install again. (A simple way to upgrade all~ :D)\n. ",
    "Marshane": "specify the minimize property in the loader's options in your webpack.conf.js\n{\n                test: /\\.(html|htm)$/,\n                loader: 'html?minimize=false'\n   }. ",
    "lmk123": "@jamesjieye try change /\\.js$/ to /\\.(js|css)$/ in the minChunks function.\n. I make a PR for it but seems no one interesting... #406. ",
    "rmartins90": "I can't make this work adding *.spec.js to regex. Someone got this working?. ",
    "mcallan83": "Thanks. I was trying to avoid the elixir setup in favor of this one because it offers a lot more out of the box. I settled on keeping this as a separate repo and merging with Laravel on deploy. Thanks for your help!. Thanks... that is just what I am looking for :). ",
    "58bits": "Good example of a Laravel 5.3 and Vue.js 2.0 project...\nhttps://github.com/codecasts/spa-starter-kit. ",
    "peterwilli": "While I agree with @LinusBorg that we everyone is able to make the template fit to their needs, I think this is a bit more complicated than that. For instance, those of us with a Chromebook that run their dev environment in a chroot (with Crouton) will experience the same error as Chrome is not detected from within the chroot. While there are options to open Chrome anyway, I totally understand that Vue will not implement such platform-specific workarounds.\nI do however think it's important that if there is no browser detected, the error will be ignored. . ",
    "TennyZhuang": "suppose that the page is tennyzhuang.github.io/repo1\nthe path in dist are all like /static/js/xxx\nthen browser will request tennyzhuang.github.io/static/js/xxx to find the resource.\nbut the really path is tennyzhuang.github.io/repo1/static/js/xxx\nso it will display a white page on tennyzhuang.github.io/repo1\nI think the better path is static/js/xxx\n. '/repo1/' worked, thanks.\n'' will make the resource in assets not found, it will be better if this will fix (\n. ",
    "necevil": "I had a similar issue in a Docker container that was solved by removing my node_modules directory with and doing fresh npm install\nNot sure if you have tried that yet but its pretty painless and might clear it up without messing with your local environment.. @aankittcoolest Just a heads up, when I ran into a similar issue with Docker it ended up being a permissions problem inside of the container.  I had to add a chown line to my docker compose file to make sure the user running the dev server inside of the container had proper permissions.\nI see that you are working with Vagrant but figured I would chime in and let you know what ended up straightening out my problem (though it could easily be different for you with Vagrant).. @LinusBorg Yep! \nThanks for pointing me in the right direction, the portion that I ended up needing (incase anyone else stumbles on this thread) was to add the following to the webpack-dev-middleware config:\nwatchOptions: {\n        aggregateTimeout: 300,\n        poll: true\n    },\nAs it turned out I was able to make it work WITHOUT the above, but when I went to deploy my same configuration to some of our other team members they required the above polling modification to make the dockerized webpack-dev-middleware server aware of changes to files on the local host / docker volume.  \nWithout the above wdm would not notice the changes and trigger a new build, with the above added everything worked as intended.\nFor those who are confused as to exactly where to add that snippet, it needs to go inside of the dev-server.js file which is located inside of the build directory within this template.  The code block you are looking to modify should end up looking like this (around line 22-24ish):\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\n  publicPath: webpackConfig.output.publicPath, //was publicPath: webpackConfig.output.publicPath,\n  quiet: true,\n  watchOptions: {\n      aggregateTimeout: 300,\n      poll: 1000\n  }\n})\nThanks Linus!. Stoked to hear it @matthewpennell\nHoping took notes to document for the team, hoping to blog it eventually but this is pretty much the nuts and bolts of the tricky portion.. ",
    "aankittcoolest": "I am also facing the same issue!\nHere is the detailed log. I think this can be of some use.\n\n0 info it worked if it ends with ok\n1 verbose cli [ '/usr/bin/node', '/bin/npm', 'run', 'dev' ]\n2 info using npm@3.10.10\n3 info using node@v6.9.4\n4 verbose run-script [ 'predev', 'dev', 'postdev' ]\n5 info lifecycle client_labs@1.0.0~predev: client_labs@1.0.0\n6 silly lifecycle client_labs@1.0.0~predev: no script for predev, continuing\n7 info lifecycle client_labs@1.0.0~dev: client_labs@1.0.0\n8 verbose lifecycle client_labs@1.0.0~dev: unsafe-perm in lifecycle true\n9 verbose lifecycle client_labs@1.0.0~dev: PATH: /usr/lib/node_modules/npm/bin/node-gyp-bin:/home/vagrant/client_labs/node_modules/.bin:/usr/bin:/sbin:/bin:/usr/sbin:/usr/bin\n10 verbose lifecycle client_labs@1.0.0~dev: CWD: /home/vagrant/client_labs\n11 silly lifecycle client_labs@1.0.0~dev: Args: [ '-c', 'node build/dev-server.js' ]\n12 silly lifecycle client_labs@1.0.0~dev: Returned: code: 1  signal: null\n13 info lifecycle client_labs@1.0.0~dev: Failed to exec dev script\n14 verbose stack Error: client_labs@1.0.0 dev: `node build/dev-server.js`\n14 verbose stack Exit status 1\n14 verbose stack     at EventEmitter. (/usr/lib/node_modules/npm/lib/utils/lifecycle.js:255:16)\n14 verbose stack     at emitTwo (events.js:106:13)\n14 verbose stack     at EventEmitter.emit (events.js:191:7)\n14 verbose stack     at ChildProcess. (/usr/lib/node_modules/npm/lib/utils/spawn.js:40:14)\n14 verbose stack     at emitTwo (events.js:106:13)\n14 verbose stack     at ChildProcess.emit (events.js:191:7)\n14 verbose stack     at maybeClose (internal/child_process.js:877:16)\n14 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5)\n15 verbose pkgid client_labs@1.0.0\n16 verbose cwd /home/vagrant/client_labs\n17 error Linux 3.10.0-327.36.2.el7.x86_64\n18 error argv \"/usr/bin/node\" \"/bin/npm\" \"run\" \"dev\"\n19 error node v6.9.4\n20 error npm  v3.10.10\n21 error code ELIFECYCLE\n22 error client_labs@1.0.0 dev: `node build/dev-server.js`\n22 error Exit status 1\n23 error Failed at the client_labs@1.0.0 dev script 'node build/dev-server.js'.\n23 error Make sure you have the latest version of node.js and npm installed.\n23 error If you do, this is most likely a problem with the client_labs package,\n23 error not with npm itself.\n23 error Tell the author that this fails on your system:\n23 error     node build/dev-server.js\n23 error You can get information on how to open an issue for this project with:\n23 error     npm bugs client_labs\n23 error Or if that isn't available, you can get their info via:\n23 error     npm owner ls client_labs\n23 error There is likely additional logging output above.\n24 verbose exit [ 1, true ]\n\n\n. @necevil Thanks for replying!\nI gave a hands on docker, there things are fine and smooth. . ",
    "jingman": "Woah my bad, I've been iterating on this myself in the month since I opened the PR, and I wasn't aware it was spamming you with updates. Sorry to waste your time - thank you for your work on Vue.. ",
    "anlexN": "please reply me as soon as possible..... @jbruni @ianwalter @guidobouman @pksunkara @anvaka @everyone\n. @yyx990803  @jamesjieye \uff0c   because of vue-hackernews-2.0 's diffcults, i don't like it! Could you please tell me how to do that this template webpack does support server side rendering?. ",
    "huixisheng": "I Close this eslint errors.\n// add your custom rules here\n  'rules': {\n    // don't require .vue extension when importing\n    'import/extensions': ['off', 'always', {\n      'js': 'never',\n      'vue': 'never'\n    }],\n    'import/no-unresolved': [0, {commonjs: true, amd: true}],\n    // allow debugger during development\n    'no-debugger': process.env.NODE_ENV === 'production' ? 2 : 0\n  }\nbut I think is'not the best solution.. no, I make new dir and do the step.. It's OK now.  Maybe I make a mistake.  Thanks @moonou . ",
    "kushalpandya": "I'm facing exact same problem after updating to latest template config, directory structure is same as it was before (prior to Webpack 2 update). All my config files are exact same as webpack template of this repo, anything that I'm missing here?. ",
    "lindesvard": "@kushalpandya same error here! Solved it by updating all the eslint dependencies.\n\"eslint\": \"^3.14.1\",\n\"eslint-config-airbnb-base\": \"^11.0.1\",\n\"eslint-friendly-formatter\": \"^2.0.7\",\n\"eslint-import-resolver-webpack\": \"^0.8.1\",\n\"eslint-loader\": \"^1.5.0\",\n\"eslint-plugin-html\": \"^2.0.1\",\n\"eslint-plugin-import\": \"^2.2.0\",. ",
    "ghughes27": "Followed instructions but still facing errors when I npm run dev on Windows 10. Tried reverting to older versions @lindesvard suggested, but still didn't work. Definitely an issue with eslint-airbnb config as setting up with standard works.  \nOptions:\n- runtime + compiler\n- vue-router\n- eslint \n  --airbnb\n```\n ERROR  Failed to compile with 2 errors                     14:08:38\nerror  in ./src/main.js\n\u2718  https://google.com/#q=import%2Fno-unresolved  Casing of vue doe\ns not match the underlying filesystem     \n  src\\main.js:3:17\n  import Vue from 'vue';\n                   ^\n\u2718  https://google.com/#q=import%2Fno-unresolved  Casing of ./App d\noes not match the underlying filesystem   \n  src\\main.js:4:17\n  import App from './App';\n                   ^\n\u2718  https://google.com/#q=import%2Fno-unresolved  Casing of ./route\nr does not match the underlying filesystem\n  src\\main.js:5:20\n  import router from './router';\n                      ^\n\u2718 3 problems (3 errors, 0 warnings)\nErrors:\n  3  https://google.com/#q=import%2Fno-unresolved\n@ multi ./build/dev-client ./src/main.js\nerror  in ./src/router/index.js\n\u2718  https://google.com/#q=import%2Fno-unresolved  Casing of vue doe\ns not match the underlying filesystem                    \n  src\\router\\index.js:1:17\n  import Vue from 'vue';\n                   ^\n\u2718  https://google.com/#q=import%2Fno-unresolved  Casing of vue-rou\nter does not match the underlying filesystem             \n  src\\router\\index.js:2:20\n  import Router from 'vue-router';\n                      ^\n\u2718  https://google.com/#q=import%2Fno-unresolved  Casing of @/compo\nnents/HelloWorld does not match the underlying filesystem\n  src\\router\\index.js:3:24\n  import HelloWorld from '@/components/HelloWorld';\n                          ^\n\u2718 3 problems (3 errors, 0 warnings)\nErrors:\n  3  https://google.com/#q=import%2Fno-unresolved\n@ ./src/main.js 5:0-30\n @ multi ./build/dev-client ./src/main.js\n\nListening at http://localhost:8080\n```\n\n. ",
    "chmln": "I've just spent hours trying to figure this out.\nAfter latest upgrades, changes to .vue files in sublime have no effect.\nOpening the same file in VS Code, making changes = no effect either.\nRebooting, running dev, making changes to a file in VS Code only = works.\nAdditionally, no problems are encountered by using the vue-cli webpack template.\nHowever, simply replacing the src folder with my own, with a similar structure but containing nested single-file components breaks hot reload and hot module replacement, without any errors. Specifying watchOptions for the dev middleware seems to address this problem.\nIn build/dev-server.js:21\njs\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\n  publicPath: webpackConfig.output.publicPath,\n  stats: {\n    colors: true,\n    chunks: false\n  },\n  watchOptions: {\n    aggregateTimeout: 300,\n    poll: 1000\n  }\n}). ",
    "valZho": "I am ready to tear my hair out! Nothing I do will get anything to reload anything (short of quitting and relaunching the process in the terminal). This is just with the base install of the webpack template not even adding anything complicated\u2014just trying to type \"asdf\" into the template on \"Hello.vue\". I've deleted the folder and reinstalled sooooo many times.\nOn Mac OS X 10.12.1. Started off with Node 4 something, upgraded to 7.2.0 now with no change. As reported above, nothing gives me errors, the build works, the page loads... just no auto-refresh or hot reloading.. Holy crap (none of the above were the issue). Ran across this on stack overflow:\nhttp://stackoverflow.com/questions/26708205/webpack-watch-isnt-compiling-changed-files\nLong story short, my project folder was in my OneDrive folder which, I think, is somehow hijacking FSEvents (on the Mac)... even when I force closed all OneDrive-related processes I could find, turned Spotlight off on that whole tree, deleted .DS_Store files in all paths leading to my project, and renamed folders... it still wouldn't work.\nMove it out of the OneDrive directory and everything started working fine. I don't know how many hours were wasted on this stupid problem, but someone should put this as a warning in the repo so others won't have to live my frustration:\n\"Disclaimer: If you try to create your package in a cloud-synced directory (a la OneDrive, DropBox, Google Drive, etc.), you're going to have a bad time. ...and by 'bad time' we mean that the watchers that enable hot reloading probably won't work.\". /project-directory/config/index.js ---> look for port number property. ",
    "patrickodacre": "I have the same issue, but to be fair I have always had this problem with HMR. Definitely not worth it.\nThe suggestion made here may help: https://github.com/vuejs-templates/webpack/issues/349\nI'm using PhpStorm and this seems to have done the trick for me.. I also had my options configured as above, but still had the issue =. Have you tried this https://github.com/vuejs-templates/webpack/issues/349? \nWebstorm and phpstorm would have this setting. It did the trick for me. . ",
    "esttres": "Same issue with parenthesis and spaces in file names.  My path was \nC:\\Section\\ Code\\ \\(Start\\) - Don't hate me, it was from a tutorial\nchanged it to\nC:\\SectionCode\nworks great now!. ",
    "markko1": "Same issue with running Vue inside Docker container in Win10.\nWatchOptions helped!. ",
    "abods": "Same issue no hot reload :(. ",
    "NiceGuyNimni": "Had the same issue.\n@chmln helped me out with the WatchOptions code example.\nTnx man!!!. ",
    "jaryroxas": "same issue\n@chmln 's method works \ud83d\udc4d . ",
    "albttx": "@chmln methods fix hot-reloading for docker. Can't this be update and merged ? \nwatchOptions: {\n    aggregateTimeout: 300,\n    poll: true\n  }\nThis fix hot-reloading for docker container. ",
    "JJEEGG2211": "wow. just wanted to say i can't believe removing the parentheses fixed the issue for.\nThanks!. ",
    "bradocchs": "watchOptions fixed it for me too and I have my project in Dropbox. Thanks!. ",
    "dimitrisnl": "@LinusBorg Awesome, thank you. Interested if you found any solution since it's something that I have encountered too... ",
    "tannguyen3489": "@LinusBorg Awesome, thank you so much. ",
    "ashwinkk": "@LinusBorg That worked. Thanks.. ",
    "thanhtungka91": "for me reinstall vuecli, webpack was running well \nnpm install -g vue-cli. ",
    "ashishmit14": "I was having the same issue with vue-cli-3. I was using CORS extension on chrome. Disabled it and that did the trick.. ",
    "craigpryde": "Abit late to the party, Will hopefully save someone a few minutes in the future.\nIn my case, I had a directory called \"shared\" (components/shared) and I was using the upper case as a name for the folder in my imports: \"import Hello from './int-src/app/components/Shared/Hello.vue'. \nBy referencing the folder as \"Shared\" instead of \"shared\" webpack would compile the Vue file initially but would not detect changes within the file. I renamed the folder \"Shared\" and everything is back to normal.. ",
    "gnanesdct": "Me too have the same issue. after a day spent, I found a solution that in the config folder, I have an index.js file. In that file, I have changed the poll value to true which enable the watch options and now works fine.\nhttps://webpack.js.org/configuration/dev-server/#devserver-watchoptions-\n. ",
    "scottc11": "I had to tweak one of the above answers by @chmln for my own use case but this finally worked for me.  Using webpack@4.17.2 \nmodule.exports = {\n  //...\n  watch: true,\n  watchOptions: {\n    aggregateTimeout: 300,\n    poll: 1000\n  }\n};. ",
    "grafikri": "I think folder name first letter should be lowercase. i had same problem and when i save a file component changed but when i save another file  component not changed.\nI saw folder name that first letter uppercase that component inside the folder . I change first letter of folder name to lowercase and it worked.\nnon-working file path\nsrc/section/Chat/UserInfo.vue\nworking file path \nsrc/components/UserInfoListItem.vue\nsrc/section/Chat/UserInfo.vue path will be src/section/chat/UserInfo.vue\nthis is worked for me\nSorry for my english.. ",
    "misrab": "same issue\n@chmln 's method works +1. ",
    "mdshoeb01": "Maybe somehow the files which were tracking your project changes which webpack looks for got corrupted.\nYou can create them again just by following simple steps.\n1) come out of your project dir. ($: cd ..)\n2) move your project to different directory ($: mv {projectName} {newName})\n3) go into the new dir ($: cd {newName})\n4) start the server and check if it reloads on every file change (it should work in most cases, because now webpack creates new files to watch for changes)\n5) come out of the dir ($: cd ..)\n6) move it back to its original name ($: mv {newName} {projectNam})\nThis worked for me............. ",
    "stefanosandes": "It is a problem with bash: https://github.com/Microsoft/BashOnWindows/issues/468. First, you need to install lodash: npm i --save lodash\nNow you can import: import _ from 'lodash' or import { reduce } from 'lodash'. ",
    "Summerlve": "@stefanosandes So bash on windows is no use now.... Thx for everyone who answered this issue. . ",
    "bradstewart": "The css loader doesn't actually need network interfaces to work. Add this to the top of your webpack config file:\njs\n// Hack for Ubuntu on Windows: interface enumeration fails with EINVAL, so return empty.\ntry {\n  require('os').networkInterfaces();\n} catch (e) {\n  require('os').networkInterfaces = () => ({});\n}\nTaken from https://github.com/Microsoft/BashOnWindows/issues/468#issuecomment-241916426.. ",
    "bruno222": "Windows Bash were updated and this error no longer exists. You can close this issue.. You're right, hermano.. ",
    "jonathancalb": "@bruno222 thats not true. The fix is only on Windows Insider builds for now.\nhttps://github.com/Microsoft/BashOnWindows/issues/468#issuecomment-275516458. ",
    "chasebank": "I just encountered this with a fresh install/update of everything (including Windows), so the fix still hasn't been implemented. Looks like it probably won't be until the Creators Update.\nbradstewart's fix worked perfectly.. ",
    "LauriePaulin": "That was it, thanks for helping a noob :-). ",
    "OmgImAlexis": "It states in the error that something is already running on port 8080. That's your issue.. ",
    "rkrejcii": "Thanks a lot, works when my local Apache is switched off.\nIs there any easy way please how to choose another port number for\nnpm run dev\ni.e. avoiding stop program running actually on :8080?. ",
    "cguirunas": "Try to use the simple webpack template like that:\n$ vue init webpack-simple yourProjectName\n$ cd yourProjectName\n$ npm install\n$ npm run dev. ",
    "zhuyali": "https://github.com/vuejs/vue/issues/4452. ",
    "xudafeng": "Thx team!. https://github.com/ant-ife/vue-biz-app-template/pull/5. @LinusBorg removed.. ",
    "CodinCat": "Update your webpack config, change\njs\ndevtool: '#eval-source-map',\nto\njs\ndevtool: '#source-map',\nthis may help.. I'm working on this, \"if\" the upgrade succeeded, I will open a PR. But don't expect that..\n\nRepo: https://github.com/CodinCat/webpack/tree/webpack2\nBoth run dev and run build will work, but I have some problems with css injection (css file can be built correctly, but is not injected to the index.html), and the test config is not updated yet.\nAny help would be appreciated, debugging webpack config is so painful... I have a fork of this template, which contains basic setups of vuex and vue-router: https://github.com/CodinCat/vue-webpack-plus You can use it before the official webpack template includes vuex. ",
    "think2011": "tks!. ",
    "fei-shen-null": "I turned off source map in prod, still no luck.. @LinusBorg I'm not sure how this worked either, but if I remove include, hotreloading will only work on app.vue, the rest .vue file in subfolders won't even recompile after been modified. I also tried to increase fs.inotify.max_user_watches, but doesn't seem to work. I think its a docker and webpack2 problem, so don't merge it. Just in case someone has the same problem with docker, try to add an include for src and maybe node_modules too. Adding this worked as well\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\n  publicPath: webpackConfig.output.publicPath,\n  quiet: true,\n  watchOptions: {\n    aggregateTimeout: 300,\n    poll: true\n  }\n}). ",
    "adam-hanna": "No worries, glad its been fixed! Ty!\nOn Dec 13, 2016 7:29 AM, \"Thorsten L\u00fcnborg\" notifications@github.com\nwrote:\n\nClosed #388 https://github.com/vuejs-templates/webpack/pull/388.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/pull/388#event-892176039, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AFL2FtcD4FB6NCMKH7MqgrWCX95AHBdxks5rHrnzgaJpZM4K_SkN\n.\n. \n",
    "zjd2035": "In case people see this: the .babelrc file had been in a different directory due to my own error. When moving all contents into a vue directory, all hidden files had returned an error I didn't notice and therefore weren't copied over.\nIf you're getting the Unexpected token import error, check your .babelrc.. ",
    "neiled": "It's a fair question, I literally just did a find/replace, there's no additional quotes, just a conversion from double to single. I'll resubmit with superfluous quotes removed.. ",
    "ericjjj": "Karma not found plugins, I add plugins to karma.conf.js. js\nplugins: [\n       'karma-coverage',\n       'karma-mocha',\n       'karma-phantomjs-launcher',\n       'karma-sinon-chai',\n       'karma-sourcemap-loader',\n       'karma-spec-reporter',\n       'karma-webpack',\n     ],. ",
    "dfdgsdfg": "I try to your recipe. Unfortunately it does not work.\n```javascript\n Example.vue \n\n Renderd \n\n\n Expected \n\n  really? \n``\nAlso I found it related base64 encoding loader(probably url-loader?). But I am not suresrcsetattirbute can parse base64 encoding with multiple image target such as1xor2x.. Seems~assets` alias not working with the latest template. Is this realate with this?\nAlso @/assets does not work.\nhtml\n<-- NOTE: Not work -->\n<img src=\"~assets/img.png\">\n<img src=\"@/assets/img.png\">\nasset resolving rules doc\n. @LinusBorg Thanks. \ud83d\udc4d \n~@/assets/img.png just works fine.. ",
    "AndreKR": "I made a PR. (https://github.com/vuejs/vue-loader/pull/953). ",
    "benjamincrozat": "Seems like I'm doing ok now. I have absolutely no idea why though. . ",
    "pin3da": "@LinusBorg I tried to generate new files but github does not allow me to raise the PR in that way.. ",
    "aasheer": "I know this is closed but I'm pulling my hair out trying to find a solution to what I hope is a related issue. \nWe are building a Vue application using the vue-cli Webpack template. The only change we made was to opt for using Ava for unit testing along with istanbul/nyc as the reporter/coverage tool. Our tests pass, the .vue files show up in the nyc report result but the line numbers are off. By that I mean that nyc is pointing to lines 700, 706, etc. as uncovered but the .vue component being tested only has 400 lines in it. I've been hearing about making sure I have sourceMap: true in my nyc package.json config but I tried setting that and a few other things. Nothing seems to work. \nSo my overall question is:\nWhy is nyc pointing to line numbers that don't exist when I'm testing a .vue component file with ES6 code (and not transpiled files)? If nyc is somehow looking at some transpiled version of my .vue file, how do I map it back (with the correct line numbers) to my .vue component file?. @blake-newman, thanks for the response. yeah a couple of people suggested your recipe. I have the following in my package.json:\n\"nyc\": {\n    \"exclude\": [\n      \"build\",\n      \"config\",\n      \"static\",\n      \"tests\"\n    ],\n    \"extension\": [\n      \".js\",\n      \".vue\"\n    ]\n  },\n  \"ava\": {\n    \"babel\": \"inherit\",\n    \"require\": [\n      \"./tests/unit/helpers/setup.js\",\n      \"ignore-styles\",\n      \"babel-core/register\"\n    ]\n  },\n  \"babel\": {\n    \"presets\": [\"es2015\"],\n    \"plugins\": [\"transform-runtime\"],\n    \"ignore\": \"**/*.test.js\",\n    \"env\": {\n        \"test\": {\n            \"sourceMaps\": \"inline\",\n            \"plugins\": [\"transform-runtime\"]\n        }\n    }\n  },\nI have the following in my setup.js file:\n````\n// Setup browser environment\nrequire('browser-env')();\nconst hooks = require('require-extension-hooks');\nconst Vue = require('vue');\n// Setup Vue.js to remove production tip\nVue.config.productionTip = false;\n// Setup vue files to be processed by require-extension-hooks-vue\nhooks('vue').plugin('vue').push();\n// Setup vue and js files to be processed by require-extension-hooks-babel\nhooks(['vue', 'js']).plugin('babel').push();`\nwhen I run my unit tests \"npm run unit-test\" I get the following error:\n`/local/content/nci-strap-ui/tests/unit/specs/DT4.test.js:1\n(function\u00a0(exports,\u00a0require,\u00a0module,\u00a0__filename,\u00a0__dirname)\u00a0{\u00a0import\u00a0_typeof\u00a0from\u00a0'babel-runtime/helpers/typeof';\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0^^^^^^\nSyntaxError:\u00a0Unexpected\u00a0token\u00a0import\n```\nI'm at my wits end. No clue what I'm doing wrong. I've tried a variety of combinations but to no avail. Any help would be appreciated. \nThank you.. @blake-newman , I really appreciate the help. Still no luck with your suggestion above, but if it helps at all, here is the default Vue-Cli webpack boilerplate .babelrc file code:\n{\n  \"presets\": [\n    [\"env\", { \"modules\": false }],\n    \"stage-2\"\n  ],\n  \"plugins\": [\"transform-runtime\"],\n  \"comments\": false,\n  \"env\": {\n    \"test\": {\n      \"presets\": [\"env\", \"stage-2\"],\n      \"plugins\": [ \"istanbul\" ]\n    }\n  }\n}\nSo that's the last piece. I'm assuming \"babel\":\"inherit\" in the ava package.json config inherits from .babelrc file.\n. @blake-newman, I think I finally got it to work! Although I'm not sure why. The only thing I can definitely put my finger on is that if I put \"babel\":\"inherit\" in my ava package.json configuration, I get the error. What I ended up doing is leaving my .babelrc file as is, and defining a babel config in my package.json file. The working config looks like this:\n\"ava\": {\n    \"require\": [\n      \"ignore-styles\",\n      \"babel-core/register\",\n      \"./tests/unit/helpers/setup.js\"\n    ]\n  },\n  \"babel\": {\n    \"presets\": [\n        [\"env\", { \"modules\": false }],\n        \"stage-2\"\n    ],\n    \"plugins\": [\"transform-runtime\"],\n    \"comments\": false,\n    \"ignore\": \"**/*.test.js\",\n    \"env\": {\n        \"development\": {\n            \"presets\": [\"env\", \"stage-2\"],\n            \"sourceMaps\": \"inline\"\n        }\n    }\n  },\nI have to look into all the stuff for babel config but I got some of the config above from the official Ava code-coverage recipe. That being said, I still have to define it in package.json and not in .babelrc\nNow however, nyc returns actual line numbers that map to my .vue file. If you feel there is anything to add, that I might not be considering, please let me know. Again, thanks for your efforts and the helpful information.\n. ",
    "Nicolapps": "OK, now I understand. I was confused because the docs are not very clear (the dist/ folder is not mentioned in the project structure : http://vuejs-templates.github.io/webpack/structure.html). \nI would like to compile the assets directly in the project root (because I'm using GitHub Pages). How could I modify the config files to do so ?. I'll use Surge, it will be a lot easier ! \ud83d\ude04\nI think it would be worth mentioning the dist/ folder in the documentation.. ",
    "laahs": "I have uploaded the problematic configuration here:\nhttps://github.com/laahs/vuejs_webpack_postcss_lost-grid\nto make it clearer, I just wanted the shortest and easiest way to be able to play with vue.js (ideally .vue files to be able to created reusable, maintainable components), bundle all the js in one single minimized and compressed js, use lost as a grid system (to evaluate if it can replace sass susy for my next projects), aggregate all my css files to one minimized compress css, and uglify html. that is mostly about it ...\n. ",
    "rlam3": "@laahs were you able to figure out how to get this resolved?. ",
    "loatheb": "I see..\nThanks.. ",
    "hellovue2017": "\u6211\u4e5f\u60f3\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u505a\u4e00\u4e2a\u5168\u5c40\u6837\u5f0f\uff0c\u5b50\u7ec4\u4ef6\u4e2d\u65e0\u9700\u5728\u5f15\u5165. ",
    "zhangkun-Jser": "\u6211\u4e5f\u60f3\u5b9e\u73b0. ",
    "davodaslanifakor": "@loatheb \n@LinusBorg \n@hellovue2017 \n@978895036 \n@dotob \nso what happen how solve this problem?. @LinusBorg  Tnx but i found some solution\nthis is beast answered ifond\n. ",
    "carlohcs": "I had the same problem! So, i just tried to put this plugin with the others: https://github.com/postcss/postcss-import\nAnd in my code, I do:\n```\n\n@import 'shared.css';</p>\n<p>@media (--phone) {\n... code\n}\n\n```\nAnd works!. ",
    "colemickens": "Maybe not. I don't really understand how this config is laid out.. ",
    "pholly": "@gkatsanos I added vue-router by following its documentation and didn't have any problems. Other than adding vue-router to package.json by running npm install --save-dev vue-router I didn't change any webpack setup.. Yeah probably best to leave it to Router's default. ",
    "nicksarafa": "Solid blog post on deploying Vue to Heroku here. ",
    "moshie": "Even when you push all of the distribution files up, the template still requires the use of dependencies like chalk and webpack which are not included as a part of the production dependencies?\nWhats the process for deploying? As it's not clear in any of the documentation?. I might have missed the point here as I am fairly new to vue, forgive my ignorance :$\nBut in the package.json file the start script references node build/dev-server.js which has require statements for webpack?\nAlso when going through the setup you can opt out of the vue router as some apps I expect don't need it.\nHeroku has an automatic deploy feature which pulls the latest code whenever it's pushed to git, I would expect the build process to take place on the server not development?\nPushing distribution files to source control feels weird especially if you are working on a large team.\n. This is still an issue and setting NODE_ENV=development is not a fix... It's fundamental this template works setting the node environment to production\nto replicate:\n$ vue init webpack test\n$ cd test/\n$ npm install\n$ npm run build\n$ NODE_ENV=production npm start. ",
    "seenickcode": "Hey guys I had this same prob last week and wrote smth up if it helps anyone:  https://medium.com/@seenickcode/deploying-a-vue-js-2-x-app-to-heroku-in-5-steps-tutorial-a69845ace489. ",
    "zerkz": "@LinusBorg it seems a little odd to just have compiled assets in source control. I'm going to work on a way of maybe having heroku do the building of these compiled assets, I'll report back here with what I find.. ",
    "kcwoodfield": "@seenickcode this worked for me.  Thanks for the write up.. ",
    "egoist": "um what about moving it to prod? eslint errors during development are very annoying \ud83d\ude02. So can we merge this \ud83d\ude03. Imagine that you're using history mode, and ./ will always load resource from relative path, eg: at url  /user/egoist the browser will load /user/egoist/bundle.js which will lead to 404 error.\nSo my suggestion is always using absolute path in publicPath. @asselin you can always change it in the config file, that's why it exists.. seems it's unnecessary to update minor version? It will always install the latest 2.y.z. ",
    "zzhjerry": "@myst729 thanks for pointing it out. I removed the single quote from '\"development\"' and all others in test.env and prod.env.\nI think it's more flexible to define value as plain string or js object than quoting everying into a string. sure, will make the modification right away. ",
    "airt": "'process.env' in test/unit/karma.conf.js#L26\nplugins: [\n    new webpack.DefinePlugin({\n      // also need `JSON.stringify`\n      'process.env': require('../../config/test.env')\n    })\n  ]. ",
    "alex-schmidigital": "Okay so I actually just got it to work a few minutes after posting this issue.\nWe included the postcss-import module into the loader and it works fine \nin webpack.base.conf.js\nvue: {\n    loaders: utils.cssLoaders({ sourceMap: useCssSourceMap }),\n    postcss: [\n      require('postcss-import')(),\n      require('autoprefixer')({\n        browsers: ['> 1%']\n      })\n    ]\n  }\nthe only question that remains is if there is any other way to do this, so that i don't need another module. Help would be great!. ",
    "myronliu347": "If you  require css in js file, it`s no use\njavascript\nimport 'main.css'. Thanks, Looking forward to.... What`s the most important improvement in webpack 2. ",
    "RunningV": "@alex-schmidigital doesn't work for me, i use vue-cli@2.8.1 build the full webpack vue proj, add webpack config in vue-loader.conf.js like this: \nmodule.exports = {\n  loaders: utils.cssLoaders({\n    sourceMap: isProduction\n      ? config.build.productionSourceMap\n      : config.dev.cssSourceMap,\n    extract: isProduction\n  }),\n  postcss: [\n    require('postcss-import')(),\n    require('autoprefixer')({\n      browsers: ['last 5 versions', 'Android >= 2.0']\n    })\n  ]\n}\ni learn to use webpack@2.xx, but not practise, anyone can help? tks. ",
    "zhengjitf": "@RunningV Autoprefixer works ,but 'hot-reload' doesn't work. ",
    "XC-Zhang": "\nInstalling vue-resource via npm \nAdd code in src/main.js\nimport Vue from 'vue'\nimport VueResource from 'vue-resource'\nVue.use(VueResource);\nvue-resource is available in vue instance now: this.$http. \n",
    "tomByrer": "Helpful @egoist; thanks!. I personally believe that it is a best practice to leave in /*! important */ comments since that is typically where source name, version, copyright, & license is held:\n good for devs make it easier to find sources & versions if sourcecode isn't available\n lawyers & CEOs/CTOs need to know who owns what code of a project, especially when project ownership changes hands\n* MIT & other OSS licenses tend to make it mandatory for \"The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\"\nSo IMHO the default { discardComments: { removeAll: false } } is better.  Hard to remember to flip over for legal reasons.. ",
    "ellipticaldoor": "Do you mean after the build to manually change that?. In the end I turned off the injection and used this approach:\n``` javascript\nfunction() {\n    let _scripts = [\n        <% for (key in htmlWebpackPlugin.files.js) { %>\n            '<%= htmlWebpackPlugin.files.js[key] %>',\n        <% } %>\n    ]\ncreateScriptTag()\n\nfunction createScriptTag() {\n    // gets the first script in the list\n    let script = _scripts.shift()\n\n    // all scripts were loaded\n    if (!script)\n        return\n    else {\n        let js = document.createElement('script')\n        js.src = script\n\n        // loads the next script\n        js.onload = (event) => { createScriptTag() }\n\n        let s = document.getElementsByTagName('script')[0]\n        s.parentNode.insertBefore(js, s)\n    }\n}\n\n}\n```. thanks!. Adding this to the package.json solved this problem for me\n\"uglify-js\": \"git+https://github.com/mishoo/UglifyJS2.git#harmony\",. With @ doesn't give an error but I get a 404\nhtml\n<img src=\"@assets/logo.png\">\n\n. Sometimes the hot reload is not working or working very slow. ",
    "yugasun": "@posva Thanks, I have solve the problem.. @myst729 Can you share your configuration of DllPlugin and DllReferencePlugin for webpack template?. ",
    "andreaslarssen": "How?. ",
    "matthewpennell": "Thanks @necevil - your comment seems to be the only place on the entire web that concisely explains how to make this work. \ud83d\udc4d . ",
    "idhamhafidz": "I ignore running npm run dev in vagrant ssh. Just use normal terminal. ",
    "EricBeReal": "thanks @necevil\nCan conform fix worked in my vagrant env as well.. ",
    "alexsandro-xpt": "Thank all, work for me.. ",
    "arthuralmeidap": "@necevil Thanks!! That's worked for me too! . ",
    "ky61k": "Thx.. ",
    "heron182": "Currently running vue-cli v 2.9.1 and what worked for me was setting poll: 500 on conf/index.js\nerrorOverlay: true,\n    notifyOnErrors: true,\n    poll: 500, // https://webpack.js.org/configuration/dev-server/#devserver-watchoptions-\nIf loading your app is taking too long on the browser, set it to a higher number like 1000, 1500. ",
    "splosch": "I'm puzzled by the same behavior.\nThe console output suggests there are files generated, where are those files? I suppose they should be added to the static folder - right?\n.... sorry noob question - I just saw a dist folder is generated ... Just got mislead by the console output.. ",
    "MaxMilton": "Please don't add these types of advanced/complex features to the template. I was recently working on a project which used angular2-webpack-starter and the number 1 feedback I would hear is the build process is too complex. The junior devs struggled enough with webpack in general let alone all the extra complexity with the DLLPlugin.\nOne of the things that attracts me to Vue and the vue+webpack template in particular is its relative simplicity.\nI definitely see the benefits of DLLPlugin/DllReferencePlugin on projects with a large number of dependencies but as it stands this template doesn't have that many dependencies that it significantly slows down rebuilds. An option might be forking this idea into a separate template :). ~I'd prefer to see this as an option during template install rather than the default.~\nUPDATE: I just realised this only runs when you pass the --report argument. Seams pretty reasonable + it's something that should be done on all projects so on second though it's actually quite handy :+1: . Seams to work as expected in my project setups :). I get better results using clean-css vs cssnano (which this plugin uses). So I would prefer if we used clean-css-loader or left it up to the user to do their own advanced optimisations.. +1 \nI've been using babel-preset-env in all my babel projects, the customisability is great!. @airyland that line is already removed in master.. Sorry, you're right! I was looking at the wrong repo \ud83d\ude13. This template doesn't support webpack 3 yet. Double check you're not updating webpack; keep it at version 2.x.x if you need HMR.\nYou can track Webpack 3 status on https://github.com/vuejs-templates/webpack/issues/751. See https://github.com/vuejs-templates/webpack/pull/743. It's look much better now! One last thing I think is necessary is the ability to disable this functionality when not required (I use the template for non SPA apps too which wouldn't be compatible with this setup).\nCould you wrap the webpack.prod.conf.js logic in an if and provide a flag in config/index.js to enable/disable this? It would be exactly the same as CompressionWebpackPlugin.. Just had a go at running this locally and everything works as expected.\nI did have an issue where it removed some used CSS and my webpage didn't look correct. Since developers might be confused when necessary CSS is lost, should this be opt-in/disabled by default (like the productionGzip option)?\nAnyone have thoughts on this?. I like this but I feel it should be optional because on some projects it can flood your terminal with excessive information.. @Aladdin-ADD  that sounds like a decent way to do things. :+1: \nWe could possibly add the value in config/index.js with a comment, that way we're keeping all the configurable options together too.. I played with it a little bit and had problems with webpack-hot-middleware not doing hot updates correctly but rather reloading the whole page. Other than that things worked as expected, however, I didn't do any in-depth testing.. I've opened an issue with inject-loader: https://github.com/plasticine/inject-loader/issues/46\nI believe this is the last package now which needs updating before we can work on our own webpack 3 compatibility.. Update: inject-loader 3.0.1 is now published with webpack 3 compatibility.. @adam-lynch you might have issues with webpack-dev-middleware: ^1.12.0, in my projects I'm keeping it at version 1.11.0 ; \"webpack-dev-middleware\": \"~1.11.0\"\nThis template doesn't have official support for webpack 3 yet so you can't expect it to magically work if you just upgrade all the packages. You can upgrade all packages (other than webpack-dev-middleware) and use the workaround in https://github.com/vuejs-templates/webpack/issues/751#issuecomment-309955295 but understand this will make HMR work at the cost of reduced functionality (no page reload when the html-webpack-plugin template changes).. Can you expand a bit on when this is useful? Why would we set NODE_ENV = production and run the dev server?. Should we provide a .htmlhintrc file with some preset defaults too?\nEdit: Just read https://github.com/yaniswang/HTMLHint/wiki/Usage#how-to-use and saw if .htmlhintrc is missing it will use a default set of rules:\n{\n    \"tagname-lowercase\": true,\n    \"attr-lowercase\": true,\n    \"attr-value-double-quotes\": true,\n    \"doctype-first\": true,\n    \"tag-pair\": true,\n    \"spec-char-escape\": true,\n    \"id-unique\": true,\n    \"src-not-empty\": true,\n    \"attr-no-duplication\": true,\n    \"title-require\": true\n}\nSeems reasonable but maybe we should have a comment with a link to that page? Or to: https://github.com/yaniswang/HTMLHint/wiki/Rules. Also, should this be an option together with ESLint or should it be a separate option during vue-cli init time? I'm not sure which is better to be honest. Thoughts anyone?. Looks like there might soon be a solution for the blank error in friendly-errors-webpack-plugin, see this PR: https://github.com/geowarin/friendly-errors-webpack-plugin/pull/52. Try upgrading to \"html-webpack-plugin\": \"^2.29.0\" which was just recently released. Do you still have the same issue?. Make sure you keep vue-loader at version ^12.2.1 otherwise you'll continue to have HMR issues. I believe you can upgrade to v13 once vue 2.4 has been released.. Have you made any changes to the template?\nWith all the default options I get (build code; minified, gzip'd):\nRuntime + compiler: 28.2 KB\nRuntime only: 19.5 KB\nThe template already comes with webpack-bundle-analyzer which can be used via npm run build --report.. I like this idea in general but how does it fit into the development workflow, when are devs meant to run this command? Is it something that devs are expected to script in their git commit hook or maybe in their code editor save hook? If so, should we also add some documentation for this? Otherwise I suspect people won't use it.. @ferllings did you install the dependencies as mentioned in the docs?\nnpm install sass-loader node-sass --save-dev. I just struggled with issues caused by this. Unless the cache is cleared after each change to the eslint rules (eslintrc file or eslint plugins) the changes are not respected for files already cached.. Could you give some information about your environment?\n\nWhat OS are you using?\nWhat terminal are you running the command in?\nWhich version of Node.js?\nDo you have the same issue with a fresh copy of the template?\nAre you using a command other than npm run dev?. Dup #751 \n\nThis template doesn't support webpack 3 yet.\nYou can track Webpack 3 status on https://github.com/vuejs-templates/webpack/issues/751. Rather than trying to include every possible 'meta language' here I prefer the current approach of including extensive details in the documentation. That way we can provide code samples and background information which is especially useful for new developers.\n\nGive a man a fish, and you feed him for a day. Teach a man to fish, and you feed him for a lifetime.. Stylelint is great! I've been adding it to all my frontend projects. I'd love to see support out of the box in the template.. General support questions are better suited to the forum: https://forum.vuejs.org\n\nTo find out what CSS rules are applied to an element you can use Chrome Devtools. Right click the element and select Inspect. In the Elements tab on the right select the Computed panel. That area shows you all the rules applied. Check in both places and find out what's different.. @gucong3000 love the progress you've made on this so far, however, right now it's broken. I cloned the stylelint feature branch of your repo and initialised a new project but it's not working as expected.\nRunning yarn run lint:stylelint works correctly and linting errors are displayed.\nRunning yarn run dev compiles but does not show any errors.\nI spent quite a bit of time on this in my own project and I havn't been able to debug the cause. It's definitely caused by some dependency but I couldn't figure out which. Have you experience this in your projects?. Just tested and everything works great. Thank you :)\nLooking forward to seeing this as part of the template!. @c0defre4k webpack 3 support is going to be a significant change and definitely should be handled in a separate PR. There's an issue with some background info: https://github.com/vuejs-templates/webpack/issues/751. General support questions are probably better suited for the vue forum: https://forum.vuejs.org/c/help\nWhen you post on the forum be sure to include more information about what you're trying to do, where are you trying to serve the files from? A local system? Electron? Anything else will require at least some type of HTTP server.. /build is pretty standard across most JS projects. I'd see this as more of an edge case. May be best to manually modify the path after initialising your projects.. Personally I just change:\npostcss: generateLoaders(),\nto\npostcss: generateLoaders('postcss'),\nand everything works great.. Since we're making the step to webpack 3 should we also now use webpack.optimize.ModuleConcatenationPlugin()? Or perhaps that should be a separate PR?. I like this but developers new to the whole npm and node thing might expect to be able to run npm start. Perhaps start could just be npm run dev?. EADDRINUSE means that node can't open the port because it'a already being used. Stop anything else that's using port 8888 and it should work.. I believe there's no automated way to do this right now. You'll need to manually run a diff against the changes.\nUse vue init webpack vue-webpack-fresh to get an up-to-date base template and then use a diff tool such as meld to see what the changes are.. +1 for changing the alias.\n@ conflicts with NPM orgs/teams and can be confusing when using both the @/ alias and NPM orgs/teams.\n~ is confusing since it means the users home directory on unix machines.\nWhat does that leave us with that's easy to type on all major international keyboards? There's also the question of whether to include the /.\n\n@@ or @@/ \u2014 actually not that bad\n# or #/\n$ or $/\n% or %/\n^ or ^/\n* or */ \u2014 a bit hard to see in some fonts\n+ or +/\n= or =/\n| or |/ \u2014 not sure this is easy to type on some international keyboards\n: or :/\n; or ;/\n~~? or ?/~~ \u2014 may conflict with webpack inline loaders\n~~//~~ \u2014 means protocol relative url\n\\ or \\/ \u2014 kind of confusing. # or ## would be pretty great now that I think about it. I can't think of any conflicts other than looking similar to an internal target location in a href link, but that shouldn't be an issue with webpack imports (right?).\n\n# is short and sweet, ## feels a lot more explicit and may be a good option for better clarity. I'm happy with either being the default.. It's probably worth adding a comment above here to let the developer's know what this plugin is doing.. Do we really need to whitelist 'someclass'?. I'm not familiar with glob-all but will this match files in subdirectories too? Wouldn't it be better to do something like path.join(__dirname, '../src/**/*.vue'),?\nI create directories for routing (/routing/) and vuex (/store/) so I don't think your globbing rules would match any files in those directories.. Where is this coming from? PurifyCSSPlugin is not referenced anywhere, did you forget to import it? Does it not need packages added to package.json -- purifycss-webpack and purify-css?. Do we not have a way to do globbing already that doesn't need an additional dependency?. You still need to add the dependencies to package.json.... I think since you've been able to combine the glob bellow into a single pattern we no longer need glob-all, we can just use node's built in glob right? :). ",
    "cmal": "Sorry. It seems to be a problem about scss when calculate rems, not about webpack.. ",
    "mdartic": "I agree with @myst729, I use only #source-map, because it allows me to debug in Firefox.\nChrome seems working well with both eval-source-map and cheap-module-eval-source-map.\n@yyx990803 could we imagine that in the cli there is a prompt to ask the user which strategy he wants to use ?. Yep, I understand.. ",
    "yoyo837": "Please keep the following comments\uff1acheap-module-eval-source-map is faster for development, but chrome doesn't stop at breakpoints.. @zWingz \u4f60\u6dfb\u52a0\u4e0a\u53bb\u540e\uff0c\u6ca1\u6709\u6536\u5230PostCSS Loader\u7684\u8b66\u544a\u5417\uff1f\nPrevious source map found, but options.sourceMap isn't set.  In this case the loader will discard the source map enterily for performance reasons.                                                             . @BelinChung \nvar postcssLoader = {\n    loader: 'postcss-loader',\n    options: {\n      sourceMap: true\n    }\n  }\nThe same warning...\nlook at this\ncommit:\nhttps://github.com/postcss/postcss-loader/commit/159b66a\nissues:\nhttps://github.com/postcss/postcss-loader/issues/248\nI switch to a low version postcss-loader@1.3.3. Concern this all the time. Waiting for good news!. 'npm run build' will generate 'dist' directory, copy the directory directly to the server.\nCan you provide more something about this issue?. Using # 544's modifications, it works fine.\nCan you create a repo to show your question?. It is here, I thought it was not so important\n```\nconst env_pro = process.env.NODE_ENV === 'production';\nconst skinName = (env_pro ? config.build.skin : config.dev.skin) || 'default';\n```. That's great.\nIt's work fine .\nscript import with @skin,\nstyle @import with ~@skin.\nThanks! . Waiting for something new.... You can only try again, there is no other way.. ",
    "learntoswim": "I've also started seeing this error using the latest vue-cli install (2.8.0).\n$ node -v\nv6.9.1\n$ npm -v\n3.10.8\n$ vue -V\n2.8.0\n$ vue init webpack my-project\n$ cd my-project\n$ npm i\n$ npm run dev\nThen I attempt to add a module, and I get a browser console error: Uncaught SyntaxError: Unexpected token export\nFiles:\nmock/facebookAuth.js\nexport const facebookAuthMock = {\n  accessToken: ...\n  ...\n};\nsrc/main.js\n``\n// The Vue build version to load with theimport` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nimport App from './App';\nimport { facebookAuthMock } from '../mock/facebookAuth';\nconsole.log(facebookAuthMock);\n/ eslint-disable no-new /\nnew Vue({\n  el: '#app',\n  template: '',\n  components: { App },\n});\n```\n.babelrc\n{\n  \"presets\": [\"es2015\", \"stage-2\"],\n  \"plugins\": [\"transform-runtime\"],\n  \"comments\": false,\n  \"env\": {\n    \"test\": {\n      \"plugins\": [ \"istanbul\" ]\n    }\n  }\n}\npackage.json\n\"devDependencies\": {\n    \"autoprefixer\": \"^6.4.0\",\n    \"babel-core\": \"^6.0.0\",\n    \"babel-eslint\": \"^7.0.0\",\n    \"babel-loader\": \"^6.0.0\",\n    \"babel-plugin-transform-runtime\": \"^6.0.0\",\n    \"babel-preset-es2015\": \"^6.0.0\",\n    \"babel-preset-stage-2\": \"^6.0.0\",\n    \"babel-register\": \"^6.0.0\",\n    \"chalk\": \"^1.1.3\",\n    \"connect-history-api-fallback\": \"^1.1.0\",\n    \"css-loader\": \"^0.25.0\",\n    \"eslint\": \"^3.7.1\",\n    \"eslint-friendly-formatter\": \"^2.0.5\",\n    \"eslint-loader\": \"^1.5.0\",\n    \"eslint-plugin-html\": \"^1.3.0\",\n    \"eslint-config-airbnb-base\": \"^8.0.0\",\n    \"eslint-import-resolver-webpack\": \"^0.6.0\",\n    \"eslint-plugin-import\": \"^1.16.0\",\n    \"eventsource-polyfill\": \"^0.9.6\",\n    \"express\": \"^4.13.3\",\n    \"extract-text-webpack-plugin\": \"^1.0.1\",\n    \"file-loader\": \"^0.9.0\",\n    \"friendly-errors-webpack-plugin\": \"^1.1.2\",\n    \"function-bind\": \"^1.0.2\",\n    \"html-webpack-plugin\": \"^2.8.1\",\n    \"http-proxy-middleware\": \"^0.17.2\",\n    \"json-loader\": \"^0.5.4\",\n    \"cross-env\": \"^3.1.3\",\n    \"karma\": \"^1.3.0\",\n    \"karma-coverage\": \"^1.1.1\",\n    \"karma-mocha\": \"^1.2.0\",\n    \"karma-phantomjs-launcher\": \"^1.0.0\",\n    \"karma-sinon-chai\": \"^1.2.0\",\n    \"karma-sourcemap-loader\": \"^0.3.7\",\n    \"karma-spec-reporter\": \"0.0.26\",\n    \"karma-webpack\": \"^1.7.0\",\n    \"lolex\": \"^1.4.0\",\n    \"mocha\": \"^3.1.0\",\n    \"chai\": \"^3.5.0\",\n    \"sinon\": \"^1.17.3\",\n    \"sinon-chai\": \"^2.8.0\",\n    \"inject-loader\": \"^2.0.1\",\n    \"babel-plugin-istanbul\": \"^3.0.0\",\n    \"phantomjs-prebuilt\": \"^2.1.3\",\n    \"chromedriver\": \"^2.21.2\",\n    \"cross-spawn\": \"^4.0.2\",\n    \"nightwatch\": \"^0.9.8\",\n    \"selenium-server\": \"2.53.1\",\n    \"semver\": \"^5.3.0\",\n    \"opn\": \"^4.0.2\",\n    \"ora\": \"^0.3.0\",\n    \"shelljs\": \"^0.7.4\",\n    \"url-loader\": \"^0.5.7\",\n    \"vue-loader\": \"^10.0.0\",\n    \"vue-style-loader\": \"^1.0.0\",\n    \"vue-template-compiler\": \"^2.1.0\",\n    \"webpack\": \"^1.13.2\",\n    \"webpack-dev-middleware\": \"^1.8.3\",\n    \"webpack-hot-middleware\": \"^2.12.2\",\n    \"webpack-merge\": \"^0.14.1\"\n  },\nThis code works in the same project, but on the previous version of vue-cli\n. @LinusBorg That was it. Silly mistake on my behalf. Thank you.. ",
    "bduffany": "I have the same problem as @vaske . Same npm and node versions.. ",
    "cafe4it": "package.json\n\"vue-loader\": \"^11.0.0\",\n    \"vue-template-compiler\": \"^2.1.10\",\nThis worked for me.. ",
    "limichange": "https://github.com/vuejs-templates/webpack/pull/457. bash\n$ npm run build\nbash\nERROR in ./~/css-loader?sourceMap=true&extract=true!./~/vue-loader/lib/style-rewriter.js?id=data-v-39931be6!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/eslint-loader!./src/App.vue\nModule build failed: TypeError: Path must be a string. Received undefined\n    at assertPath (path.js:7:11)\n    at Object.relative (path.js:1226:5)\n    at Object.<anonymous> (/Users/limi/testCode/vue2webpack/node_modules/css-loader/lib/loader.js:101:19)\n    at Array.map (native)\n    at Object.<anonymous> (/Users/limi/testCode/vue2webpack/node_modules/css-loader/lib/loader.js:99:31)\n    at /Users/limi/testCode/vue2webpack/node_modules/css-loader/lib/processCss.js:200:3\n    at process._tickCallback (internal/process/next_tick.js:103:7)\n @ ./~/extract-text-webpack-plugin/loader.js?omit=1&remove=true!./~/vue-style-loader!./~/css-loader?sourceMap=true&extract=true!./~/vue-loader/lib/style-rewriter.js?id=data-v-39931be6!./~/vue-loader/lib/selector.js?type=styles&index=0!./~/eslint-loader!./src/App.vue 4:14-278\n @ ./src/App.vue\n @ ./src/main.js. @patrick91 Maybe should check the version of karma-webpack.\nbash\n$ npm i\n\nbash\n$ yarn\n\n. @patrick91 \nbash\n$ npm run dev #ok\n$ npm run build # ok\n$ npm run test #ok\n$ npm run lint #ok. haaaa :)\n\n\u8001\u53f8\u673a\u76f4\u64ad\u7ffb\u8f66\n. @jmanuelrosa You can try this\nhttps://github.com/shepherdwind/css-hot-loader. Try again. The template has been updated.. @DevanB \nhttps://github.com/stefanpenner/es6-promise#auto-polyfill\ntry\njs\nimport 'es6-promise/auto'. Look PR #484.\n. This is a bug. \nYou can fix this by remove var eslintFriendlyFormatter = require('eslint-friendly-formatter') at build/webpack.base.conf.js.\n. The PR #483 will fix it.\n:). Look #479 .. This PR isn't better, hope somebody can find better way.. \ud83e\udd14 \nhttps://github.com/webpack-contrib/extract-text-webpack-plugin#extract. You need to config postcss.\n\n```js\n// build/vue-loader.conf.js\nvar utils = require('./utils')\nvar config = require('../config')\nvar isProduction = process.env.NODE_ENV === 'production'\nmodule.exports = {\n  loaders: utils.cssLoaders({\n    sourceMap: isProduction\n      ? config.build.productionSourceMap\n      : config.dev.cssSourceMap,\n    extract: isProduction\n  }),\n  postcss: [\n    require('autoprefixer')({\n      browsers: ['last 100 versions']\n    })\n  ]\n}\n.js\n// config/index.js\ndev: {\n  port: 8080\n}\n``. \u6240\u4ee5\u8bf4\u8fd9\u4e2a\u95ee\u9898\u4f60\u73b0\u5728\u89e3\u51b3\u4e86 :D. \u4f60\u53ef\u4ee5Fork\u4e00\u4e2a\u81ea\u5df1\u7684\u6a21\u677f\u9879\u76ee\u7136\u540e\u6539\u9020\uff0c\u6bd5\u7adf\u8fd9\u5c5e\u4e8e\u5c11\u6570\u7684\u9700\u6c42\u3002. \ud83d\ude06. Do you usemodule.exportsorexport.foonow\uff1f. Can you showstatic/js/app.b786c2a0343b5284c845.js` to me ? give me a link.. Do you use the latest webpack template ? or changed some config ?. @rlog Are you use the latest webpack template ?. https://github.com/shama/webpack-stream/issues/81#issuecomment-243436780\nI will post a PR to fix it.. +1\n```bash\nTest\n$ vue init graingert/webpack#babel-preset-env project\n``. Look #484 . @radicalviva \ud83c\udf7b. @radicalviva If you have solved your problem, please close this issue :D. Upgradeextract-text-webpack-plugintorc3`. :D \n\nit works well\n\nIf you have solved your problem, please close this issue.. Please format your code.. Do you use the latest webpack template ? or changed some config ?. You can try reinstall dependencies.\nbash\nrm -r node_modules\nnpm install. How about ~ ? Like nuxtjs.. All thing is fine.\nlike this.\njs\n  import api from '~api'\n  import avatar from '~components/avatar'. @LinusBorg \nSo, if we want to support most browsers, we need import the two promise polyfill ?. I agree it. babel-preset-env is better.\nhttps://github.com/vuejs-templates/webpack/pull/501. But we need to debug the older browser in the development.. https://vuejs.org/v2/guide/installation.html#Standalone-vs-Runtime-only-Build. @iyangce what happens ?. @ShootToThrill \u8bf7\u518d\u91cd\u65b0\u5c1d\u8bd5\u4e00\u6b21\uff0c\u8fd9\u662f\u7531\u4e8eVue\u7248\u672c\u5bfc\u81f4\u7684\u95ee\u9898\uff0c\u5e94\u8be5\u5df2\u7ecf\u4fee\u590d\u4e86\u3002. @ShootToThrill \u56e0\u4e3aVue\u521a\u521a\u5347\u7ea7\u5230\u4e862.2.0\uff0c\u6784\u5efa\u65b9\u5f0f\u53d1\u751f\u4e86\u4e00\u4e9b\u6539\u53d8\u3002\u8fd9\u51e0\u5929vue\u76f8\u5173\u7684\u5e93\u90fd\u5728\u5347\u7ea7\uff0c\u4f60\u8fd9\u4e2a\u9519\u8bef\u662f\u7531\u4e8evue-hot-reload-api\u6ca1\u6709\u5347\u7ea7\u5230\u6700\u65b0\u5bfc\u81f4\u7684\u3002. \u5982\u679c\u6ca1\u6709\u95ee\u9898\u4e86\u7684\u8bdd\uff0c\u5c31\u53ef\u4ee5\u5173\u6389\u8fd9\u4e2aissue\u4e86\uff0c\u8c22\u8c22\uff1aD. @CaoLeilei \u4f60\u53ef\u4ee5\u5355\u72ec\u5f00\u4e00\u4e2aissue\uff0c\u5e76\u628a\u53d1\u751f\u7684\u6b65\u9aa4\u548c\u64cd\u4f5c\u8bf4\u7684\u8be6\u7ec6\u4e00\u70b9\uff0c\u8fd9\u6837\u6709\u52a9\u4e8e\u95ee\u9898\u7684\u89e3\u51b3\u3002\ud83d\ude03. Do you have installed sass-loader and node-sass ?. https://router.vuejs.org/zh-cn/essentials/history-mode.html. Please upgrade vue.\nbash\n$ npm i --save vue@2.2.2. Link https://github.com/vuejs-templates/webpack/pull/587. @LinusBorg Please close this.. How to fix this warning \ud83e\udd14\nshell\n\u2827 building for production...(node:91029) DeprecationWarning: Chunk.modules is deprecated. Use Chunk.getNumberOfModules/mapModules/forEachModule/containsModule instead.. @sudo-suhas thx!. \u4f60\u53ef\u4ee5\u5728\u53e6\u5916\u751f\u6210\u4e00\u4e2a\u7a7a\u7684\u9879\u76ee\uff0c\u7136\u540e\u628a\u914d\u7f6e\u62f7\u8d1d\u5230\u73b0\u6709\u7684\u9879\u76ee\u3002. https://github.com/webpack-contrib/extract-text-webpack-plugin/releases/tag/v2.0.0-rc.0. https://github.com/webpack-contrib/karma-webpack/releases\n. You are right. I will update it.. get it.. ",
    "graemetait": "Ah, maybe I was just looking in the wrong place then! I had to change this manually in my project in order to get it to work.\nI'll close this now, as it looks like I must have made a mistake somewhere.. Yes, that does seem to be the case. I had thought the project was started a couple of weeks ago, but checking the first commit it was actually started just before the above change. My mistake, sorry, and thanks for your time and patience! :). ",
    "Nayir": "@gazpachu any idea for solve this ? How to kill the previous app service-worker ? Thanks. Someone is using UIkit 3.0 ? Maybe the error comes from UIkit and not Vuejs.. I run this is the console of my navigator (Chrome), and no error message anymore :\nnavigator.serviceWorker.getRegistrations().then(function(registrations) {\n for(let registration of registrations) {\n  registration.unregister()\n} }). @LinusBorg I think it's coming from Vue-Hacker-News example project. And then when you run a new webpack vue-cli project, the service worker is still running for this one.\n. ",
    "davidmoshal": "I have this problem too. How does one kill it?\n. You kill it by unsubscribing the service worker from the local host port \n. ",
    "wangdahoo": "@Nayir it works for me. thanks.. ",
    "maximelafarie": "I apologize for reopening, but I run into the same issue. \nI have an Angular project which use it. I have a OneSignal project for local dev (e.g.: localhost:4200), and another one for the production (e.g.: mywebsite.com).\nI subscribed for the notifications on dev and all works well, but when I want to subscribe to the same notifications but in production environment, it fails with the errors mentioned above. And this is the same for all users who want to subscribe.\nDo I need to kill anything on my server ? Or is there a conflict between my SDKs ? (in dev vs prod). @LinusBorg Oh sorry I didn't look at the repo name... \ud83d\ude05 Thank you and sorry for the off-topic message.. ",
    "satyaram413": "If you're using a local repository then while specifying the URL or path of your file, don't specify the absolute path instead give an absolute path, for example,    is the correct way to do it, so  this isn't the correct way to do it. Well, this worked out for me, hope force may be with you.. ",
    "evenfrost": "To remove previous service worker along with other cache, if using Chrome, open DevTools and long press on 'Refresh button' \u21bb, then select 'Empty Cache and Hard Reload' option.. ",
    "ignacio68": "Chrome=>Dev Tools=>Application=>Service Workers=>Update on reload (selected). ",
    "migueldeguzman": "This error also occured in a reactjs project. same code above resolved it!. > I run this is the console of my navigator (Chrome), and no error message anymore :\n\nnavigator.serviceWorker.getRegistrations().then(function(registrations) { for(let registration of registrations) { registration.unregister() } })\n\nthanks for this dude!. ",
    "LuisEspinosaB": "\n\nI run this is the console of my navigator (Chrome), and no error message anymore :\nnavigator.serviceWorker.getRegistrations().then(function(registrations) { for(let registration of registrations) { registration.unregister() } })\n\nthanks for this dude!\n\nIt really works! Thank you!. ",
    "lilitatd": "\nnavigator.serviceWorker.getRegistrations().then(function(registrations) { for(let registration of registrations) { registration.unregister() } })\n\nIt works for me. Thanks!. ",
    "F-loat": "Your changes seems will only appear in standard.. Sorry, my mistake. I mean set default to true, but seems set to false is more concise. I will pull a new request and close this because the repository is deleted.. Not at all. :). ",
    "thgh": "Nice work! I tried your repo using vue init CodinCat/webpack#webpack2 project and it seems work but couldn't get sass to work. I had to remove the sass imports and the style tags in vue components.. ",
    "darkylmnx": "@LinusBorg  does this seem logical or even easy to reason about ? Let me explain : \nAssuming i have a team page on my web app, i have 50 teammates, it would be anoying to write 50 times a  div + h2 + img + some description.\nSo i would use a loop, my image would go from 1 to 50 so i would dynamically use :src with the index of the loop.\nBUT those images would be in my assets, so are you expecting someone to write 50 times and import for his images ?\nKnowing that we can't loop over an import\n\nhere's a fiddle of what i mean : https://jsfiddle.net/76sythpu/\ni think we need to fin another solution, importing the asset isn't a good idea if you have many dynamic assets.\nCopying a folder of assets to the dist folder maybe the only solution for now... I'd like to re open this issue to discuss about that. ",
    "maximilianfixl": "I hope that I get a answere here, though its closed.\nI can\u2018t understand that I can load an image from the laravel /public/ images directory, but not from /storage/app/public!\nIf image file name and subfolder is dynamic. Could anybody explain it to me? Please!?. I did already\nhttps://forum.vuejs.org/t/get-path-from-storage-directory-inside-vue-component-in-laravel-5-5/21646. ",
    "kaankucukx": "javascript\n<img :src=\"require(`@/assets/${posts.img}`)\" alt=\"\">\n\ud83e\udd47 . @david-saint Hey,\nGo with this.. ;)\njavascript\n<div class=\"left\" :style=\"`backgroundImage: require(assets/img/${image}.png)`\">\nCheck this by Addy. https://developers.google.com/web/updates/2015/01/ES6-Template-Strings. @nicobaguio Hey,\nits ES6 feature called Template Literals. you can check it from the link @nfer mentions. or below one!\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals. ",
    "david-saint": "Hi @kaankucukx ,\nWhat if I want to add it to the style tag like \n<div class=\"left\" :style=\"backgroundImage: require(assets/img/${image}.png);\">\nHow should I go about this?. Thanks @kakahikari \nthis worked\njavascript\n<div class=\"left\" :style=\"{backgroundImage: `url(${require(`../assets/img/${image}.png`)})`}\">\n. ",
    "nicobaguio": "@kaankucukx may I ask what the $ sign means here? This also worked with my Vue app and I don't know what's happening.. ",
    "nfer": "@nicobaguio \n\nTemplate Strings can contain placeholders for string substitution using the ${ }\n\nyou can get more info on link as kaankucukx mentioned: https://developers.google.com/web/updates/2015/01/ES6-Template-Strings. please check you .eslintrc file, do it has below config:\n// disallow reassignment of function parameters\n    // disallow parameter object manipulation except for specific exclusions\n    'no-param-reassign': ['error', {\n      props: true,\n      ignorePropertyModificationsFor: [\n        'state', // for vuex state\n        'acc', // for reduce accumulators\n        'e' // for e.returnvalue\n      ]\n    }],. you can disable this eslint-rule in .vue files or in .eslintrc, they are both not hacks.. ",
    "atilkan": "<img :src=\"require(@/assets/login.png)\" alt=\"\"> \n<img src=\"@/assets/login.png\" />\nsame but shorter. ",
    "rimiti": "@kaankucukx you saved my morning \ud83d\ude80 . ",
    "revolter": "I keep getting the Cannot find module error, even though the path is correct.. ",
    "bigsee": "Note that you can also use the following syntax to avoid needing to remember the relative paths...\njs\n<div\n    class=\"picture\"\n    :style=\"{ backgroundImage: `url(${require(`@/assets/images/${image}`)})` }\">\n...where @ signifies your src folder and image is the full filename.. ",
    "oelbaganwg": "OMG I've been researching this for 3 hours. Finally stumbled on this. Works! Thank you!. ",
    "mu-yu": "I made a repo to reproduce the issue, and sth useful below:\n\nos: Windows 10 | npm: 3.10.10 | node: 7.3.0. \n",
    "anchengjian": "webpack.DllPlugin is wonderful, hope to use it.. \u6211\u7684\u65b9\u6cd5\u662f\u5728 app.vue \u4e2d\u5f15\u5165\u516c\u5171 css\n``` vue\n...\n\n\n  .full-container {\n    width: 100%;\n    height: 100%;\n  }\n\n```. ",
    "patrick91": "@LinusBorg I've started working on this, hope it's not a problem :)\n. @chris check the PR you can already use it :)\nOn Wed, 25 Jan 2017 at 20:30, Chris Schweda notifications@github.com\nwrote:\n\nLooking forward to this. I've got a webpack/vue project that's waiting for\nthe template upgrade! :)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/454#issuecomment-275223941,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAotlY4yND7pXzf0JcnPLK04fzt5YXqtks5rV7DMgaJpZM4LpEWr\n.\n-- \n\nPatrick\n. Will have a look soon! Thanks ;)\nOn Wed, 25 Jan 2017 at 21:48, Chris Schweda notifications@github.com\nwrote:\n\nHmmm. Okay, I installed the vanilla version with Vue cli:\nvue init patrick91/webpack#feature/webpack2\nnpm run dev works great.\nHowever, npm run build and then serve ./dist (with Zeit's serve:\nhttps://github.com/zeit/serve) returns a blank screen. No errors in the\nconsole. Network tab shows bundles are loading. App element is there in the\nminified HTML.\nI made no edits to the template once I installed it (and ran npm install).\nNot sure what to make of this. Anyone else getting a blank screen on the\nbuild?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/454#issuecomment-275243353,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAotlQW7givEkSTsYq_jh5oxSMuSUGQiks5rV8NAgaJpZM4LpEWr\n.\n-- \n\nPatrick\n. @LinusBorg I just tested this and seems fine, will do a more accurate test later.\nCan you have a look at the PR when you've got some time?\n. @LinusBorg done and tested (but another test would be helpful I guess :) )\nHere's the command if someone wants to try it:\nsh\nvue init patrick91/webpack#feature/webpack2 .. Thanks @limichange :) I was trying to fix that yesterday but it was late :D\nShould be some issues with some package version :)\nWill try to do an update soon :) . @limichange @datajohnny can you do another test? :)\nShould be ok now :). My mistake, sorry! Version fixed :). @LinusBorg I'm not ultra happy with the configuration, especially with the fact that we need to declare the vue loader twice. Maybe we can do some refactoring to the configuration, what do you reckon? \nWebpack merge could be helpful, but it is not supporting enforce rules, see: https://github.com/survivejs/webpack-merge/issues/65\nEDIT: also, looks like the postcss loader is not being used, maybe we can refactor that a bit as well. No worries! Thanks @yyx990803 :). yup, but there is already a valid default value:\nmodules: [\"node_modules\"]. same as resolve.modules, the default value is enough :). doesn't work unfortunately :(. ",
    "cschweda": "Looking forward to this. I've got a webpack/vue project that's waiting for the template upgrade! :). Hmmm. Okay, I installedwith Vue cli a few moments ago:\nvue init patrick91/webpack#feature/webpack2\nnpm run dev works great. \nHowever, npm run build and then serve ./dist (with Zeit's serve: https://github.com/zeit/serve) returns a blank screen. No errors in the console. Network tab shows bundles are loading. App element is there in the minified HTML. \nI made no edits to the template once I installed it (and ran npm install).\nNot sure what to make of this. Anyone else getting a blank screen on the build?. Yep. Same errors. Same manual fix.. Yep. Had to npm install eslint-friendly-formatter '--save-dev' for the build to work.. ",
    "servermachine": "I have the same, blank screen.\nThe manifest, app and vendor.js are included, but no chunks are requested and no injection occurs.\nI also have no css generated from .vue files.. ",
    "corbinu": "Looks like this is in master now :). Agreed PhantomJS is no longer being developed. ",
    "albohlabs": "You can have a look at the roadmap of webpack2 to see the improvements.. ",
    "itarafath": "this webpack.base.conf.js file\n`var webpack = require(\"webpack\")\nvar path = require('path')\nvar config = require('../config')\nvar utils = require('./utils')\nvar projectRoot = path.resolve(__dirname, '../')\nvar env = process.env.NODE_ENV\n// check env & config/index.js to decide whether to enable CSS source maps for the\n// various preprocessor loaders added to vue-loader at the end of this file\nvar cssSourceMapDev = (env === 'development' && config.dev.cssSourceMap)\nvar cssSourceMapProd = (env === 'production' && config.build.productionSourceMap)\nvar useCssSourceMap = cssSourceMapDev || cssSourceMapProd\nmodule.exports = {\n  entry: {\n    app: './src/main.js'\n  },\n  output: {\n    path: config.build.assetsRoot,\n    publicPath: process.env.NODE_ENV === 'production' ? config.build.assetsPublicPath : config.dev.assetsPublicPath,\n    filename: '[name].js'\n  },\n  resolve: {\n    extensions: ['', '.js', '.vue', '.json'],\n    fallback: [path.join(__dirname, '../node_modules')],\n    alias: {\n      'vue$': 'vue/dist/vue',\n      'src': path.resolve(__dirname, '../src'),\n      'assets': path.resolve(__dirname, '../src/assets'),\n      'components': path.resolve(__dirname, '../src/components'),\n      'bower': path.resolve(__dirname, '../bower_components/x-editable')\n    }\n  },\n  resolveLoader: {\n    fallback: [path.join(__dirname, '../node_modules')]\n  },\nmodule: {\n    preLoaders: [\n      {\n        test: /.vue$/,\n        loader: 'eslint',\n        include: projectRoot,\n        exclude: /node_modules/\n      },\n      {\n        test: /.js$/,\n        loader: 'eslint',\n        include: projectRoot,\n        exclude: /node_modules/\n      }\n    ],\n    loaders: [\n      {\n        test: /.vue$/,\n        loader: 'vue'\n      },\n      {\n        test: /.js$/,\n        loader: 'babel',\n        include: projectRoot,\n        exclude: /node_modules/\n      },\n      {\n        test: /.json$/,\n        loader: 'json'\n      },\n      {\n        test: /.(png|jpe?g|gif|svg)(\\?.)?$/,\n        loader: 'url',\n        query: {\n          limit: 10000,\n          name: utils.assetsPath('img/[name].[hash:7].[ext]')\n        }\n      },\n      {\n        test: /.(woff2?|eot|ttf|otf)(\\?.)?$/,\n        loader: 'url',\n        query: {\n          limit: 10000,\n          name: utils.assetsPath('fonts/[name].[hash:7].[ext]')\n        }\n      }\n    ]\n  },\n  eslint: {\n    formatter: require('eslint-friendly-formatter')\n  },\n  plugins: [\n    new webpack.ProvidePlugin({\n      $: \"jquery\",\n      jQuery: \"jquery\",\n      \"window.jQuery\": 'jquery'\n    })\n  ],\n  vue: {\n    loaders: utils.cssLoaders({sourceMap: useCssSourceMap}),\n    postcss: [\n      require('autoprefixer')({\n        browsers: ['last 2 versions']\n      })\n    ]\n  },\n  resolve: {\n    modulesDirectories: [\"bower_components\"]\n  },\n  plugins: [\n    new webpack.ResolverPlugin(\n      new webpack.ResolverPlugin.DirectoryDescriptionFilePlugin(\".bower.json\", [\"main\"])\n    )\n  ]\n}`\nComponent page\n\n\n\nimport $ from 'jquery'\n require('x-editable') \n\nBut still i got below error\n\n. ",
    "stcqu": "I'm not 100% sure if I understood your problem.  For me I have a dev server running for my backend api (django) and a the vue dev server running webpack hot reload (express).  The two had different ports and hostnames.  So I had to configure my webpack public path, my webpack hot reloader path and fix express to allow CORS.  Here are the changes I made.  I don't know the best way to close the issue, but I imagine this is a common use case. Is there already documentation for this issue?  If not maybe a comment in the template linking to some docs?\nTo fix __webpack_hmr from not being found (checking the wrong hostname/port)\nfile: build/dev-client.js\n- var hotClient = require('webpack-hot-middleware/client?noInfo=true&reload=true')\n+ var hotClient = require('webpack-hot-middleware/client?noInfo=true&reload=true&path=http://localhost:8080/__webpack_hmr')noInfo=true&reload=true&path=http://localhost:8080/__webpack_hmr')\nTo fix hot-reload.json from not being found / loading an html page from my django server\nfile: config/index.js\n- assetsPublicPath: '/',\n+ assetsPublicPath: 'http://localhost:8080/',\nTo fix the hot-reload.json CORS issue (No 'Access-Control-Allow-Origin' header is present on the requested resource.)\n(npm install cors --save-dev)\nfile: build/dev-server.js\n+ // allows cross domain requests on dev server so hot reload will work between django and vue dev servers\n+ var cors = require('cors')\n+ app.use(cors())\nSome links to the issues you might find useful:\nhttps://github.com/glenjamin/webpack-hot-middleware#client\nhttp://webpack.github.io/docs/configuration.html#output-publicpath\nhttps://github.com/gaearon/react-hot-loader/blob/master/docs/Troubleshooting.md#no-access-control-allow-origin-header-is-present-on-the-requested-resource\nhttps://github.com/expressjs/cors. @LinusBorg You know I just looked at your first comment and that may be simpler than adding the cors middleware express package?  I haven't tried it.. ",
    "datajohnny": "@patrick91 I tried the upgrade but karma says that it can't find webpack when your running the tests.. ",
    "asafyish": "Hi,\nThis looks like a really important step for the webpack template, is there anything preventing it from being merged ?. Hi,\nI solved that by changing build/webpack.prod.conf.js, lines 69-77, from:\njs\n        return (\n          module.resource &&\n          /\\.js$/.test(module.resource) &&\n          module.resource.indexOf(\n            path.join(__dirname, '../node_modules')\n          ) === 0\n        )\n      }\nto:\njs\n        return (\n          module.resource &&\n          (/\\.js$/.test(module.resource) ||\n            /\\.css$/.test(module.resource)) &&\n          module.resource.indexOf(\n            path.join(__dirname, '../node_modules')\n          ) === 0\n        )\n      }\nnotice the \"/.css$/.test(module.resource)) &&\" line.\nThis cause css that are coming from node_modules to be in vendor file.\nLet me know if it's working for you, because I only did minimal testing on it.. ",
    "dragongears": "I am having a very similar experience running on Ubuntu 16.04\n0 info it worked if it ends with ok\n1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'run', 'dev' ]\n2 info using npm@3.10.10\n3 info using node@v6.9.4\n4 verbose run-script [ 'predev', 'dev', 'postdev' ]\n5 info lifecycle webpack@1.0.0~predev: webpack@1.0.0\n6 silly lifecycle webpack@1.0.0~predev: no script for predev, continuing\n7 info lifecycle webpack@1.0.0~dev: webpack@1.0.0\n8 verbose lifecycle webpack@1.0.0~dev: unsafe-perm in lifecycle true\n9 verbose lifecycle webpack@1.0.0~dev: PATH: /usr/lib/node_modules/npm/bin/node-gyp-bin:/home/art/Dropbox/Projects/Vue/webpack/node_modules/.bin:/home/art/Dropbox/android-sdk-linux/tools:/home/art/Dropbox/android-sdk-linux/platform-tools:/home/art/bin:/home/art/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/lib/jvm/java-8-oracle/bin:/usr/lib/jvm/java-8-oracle/db/bin:/usr/lib/jvm/java-8-oracle/jre/bin:/home/art/.npm-global/bin\n10 verbose lifecycle webpack@1.0.0~dev: CWD: /home/art/Dropbox/Projects/Vue/webpack\n11 silly lifecycle webpack@1.0.0~dev: Args: [ '-c', 'node build/dev-server.js' ]\n12 silly lifecycle webpack@1.0.0~dev: Returned: code: 1  signal: null\n13 info lifecycle webpack@1.0.0~dev: Failed to exec dev script\n14 verbose stack Error: webpack@1.0.0 dev: node build/dev-server.js\n14 verbose stack Exit status 1\n14 verbose stack     at EventEmitter. (/usr/lib/node_modules/npm/lib/utils/lifecycle.js:255:16)\n14 verbose stack     at emitTwo (events.js:106:13)\n14 verbose stack     at EventEmitter.emit (events.js:191:7)\n14 verbose stack     at ChildProcess. (/usr/lib/node_modules/npm/lib/utils/spawn.js:40:14)\n14 verbose stack     at emitTwo (events.js:106:13)\n14 verbose stack     at ChildProcess.emit (events.js:191:7)\n14 verbose stack     at maybeClose (internal/child_process.js:877:16)\n14 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:226:5)\n15 verbose pkgid webpack@1.0.0\n16 verbose cwd /home/art/Dropbox/Projects/Vue/webpack\n17 error Linux 4.4.0-59-generic\n18 error argv \"/usr/bin/nodejs\" \"/usr/bin/npm\" \"run\" \"dev\"\n19 error node v6.9.4\n20 error npm  v3.10.10\n21 error code ELIFECYCLE\n22 error webpack@1.0.0 dev: node build/dev-server.js\n22 error Exit status 1\n23 error Failed at the webpack@1.0.0 dev script 'node build/dev-server.js'.\n23 error Make sure you have the latest version of node.js and npm installed.\n23 error If you do, this is most likely a problem with the webpack package,\n23 error not with npm itself.\n23 error Tell the author that this fails on your system:\n23 error     node build/dev-server.js\n23 error You can get information on how to open an issue for this project with:\n23 error     npm bugs webpack\n23 error Or if that isn't available, you can get their info via:\n23 error     npm owner ls webpack\n23 error There is likely additional logging output above.\n24 verbose exit [ 1, true ]\n. ",
    "neutt22": "You can try to use npm3 package instead of npm. ",
    "feiyang0117": "I have this issue when npm run build ,how to resolve it? thanks\nERROR in static/js/app.9e4894e7cc7d1cf43a4f.js from UglifyJs\nUnexpected token: operator (>) [./common/chk.js:294,0][static/js/app.9e4894e7cc7d1cf43a4f.js:1474,65]\n. ",
    "Toilal": "@feiyang0117 this is probably because you have ES6 code inside your app sources, but for some reason babel didn't transpiled it to ES5. UglifyJS only supports ES5 code as input, so transpilling is required.. It should be an option, as some people don't want to use TypeScript.. For people coming here, I have issues with .vue files support when using typescript inside my IDE (IntellijIDEA), so I wrote a fork of this template implementing a TypeScript option, but dropping the vue files in favor of splitted files (js / ts / html / css) => https://github.com/Toilal/vue-webpack-template\nIt still supports Hot Module Reload, it was the hard part of the fork.. Too add more tests, simply copy tests/default.sh into another name, and edit the script to generate the project and test it.. Ho I see ! Thanks for the tip.. Sorry, wrong branch. vue-property-decorator adds more decorators to vue-class-component. In fact, it depends on it.. I understand, in this case it make sense to keep vue-property-decorator out of an official typescript template.\nI maintain a fork of this template, Toilal/vue-webpack-template, that supports TypeScript as an option and also supports components writen with 3 distinct files (HTML, CSS, TS). I've included vue-property-decorator in the TypeScript template, it feels to me that something is missing when this dependency is not added. But it's mainly a matter of opinion :). (FYI Library support is coming soon in this template too).. fork-ts-checker-weback-plugin has been released as 0.3.0 with support for vue SFC files.. When TypeScript is chosen, .vue files should not be processed by eslint as it doesn't natively support typescript. \nMaybe we could try https://github.com/nzakas/eslint-plugin-typescript ? This could allow to run \"eslint --fix\" after generating the project.. fork-ts-checker-webpack-plugin is really better, but it involves more changes. You may have a look to http://github.com/Toilal/vue-webpack-template as it's already implemented among other options. (it's a fork and I try merge as often as possible to minimize changes from official) . For everybody who needs a TypeScript or a Library template, you should try again https://github.com/Toilal/vue-webpack-template. It's merged with current develop branch of webpack template, and now brings 3 new questions on top of it:\n1) Project Type : App/Library. (When you choose Library, sources are splitted in 2 folders, src for the library and app for the demo/docs app.\n2) Which language do you want to use? TypeScript (ts-loader + babel)/ES2015 (babel)\n3) Use Class-Style Components (vue-class-component + vue-property-decorators)? Y/N \nThe template currently use dummy Single File Components with src attributes poiting to external html/css/ts/js files because TSLint doesn't support checking vue files, but I consider adding an option to really use Single File Components like in the official webpack template. For now, It's still possible to manually copy/paste the html/css/ts/js files into vue files.\nFor people who tested this fork months ago, It's now really closer to the official webpack template (it use vue-loader).. @stephan-v Checkout this template :) (It doesn't use rollup, but it tries to do it's best with webpack 3). It should at least be consistent, there's a <router-view> tag just above in the same file.. Setting host to 0.0.0.0 is NOT enough, because dev server check the HTTP host header actually match what's is defined in host parameter. If it doesn't match, it shows an empty HTML page with \"Invalid Host Header\".\nIt can be useful for mobile access or Dockerized yarn/npm installations.. import { Vue } from 'vue/types/vue' instead of import vue from 'vue'. Sorry, I forgot one important thing ! The error is caused by ts-loader (i'm running typescript).. https://github.com/pragmasphere/vue-tree\nIt's fixed in this repository, but you revert those lines\nhttps://github.com/pragmasphere/vue-tree/blob/2302c9b18b7298a0e83ad18f43d2f212bb487078/build/build.js#L22-L24. I think the comment would be ok for now.\nIn fact I realised later the problem was maybe related to ts-loader, so let's close this one, no problem. thanks :). It's OK. for yarn, you can omit run keyword. (yarn lint --fix). For some reason, those tests fails when using the brand new automated \"npm install\", so expect script are written to answer \"No\" to the last question, and bash script runs the commands manually.. After some additions to support vue-class-components with ES2015 scripts, I experienced some errors when running e2e tests. babel plugins declared in test env of .babelrc were not loaded.\nI then noticed that NODE_ENV=testing was declared in the codebase\nhttps://github.com/vuejs-templates/webpack/blob/cc89353be444eee88e7e6480bf186a3cf5bd439f/template/test/e2e/runner.js#L2\nhttps://github.com/vuejs-templates/webpack/blob/17ed63b1b3a0eaaebd3f593c08c32107a7cb7e01/template/config/test.env.js#L6\nbut it was inconsistent with BABEL_ENV=\"test\" declared in package.json scripts for unit tests, and inconsistent with .babelrc env entry\nWith those changes, it seems to fix my issue. Don't know why the CI fails, it seems unrelated to those changes.. Ok I see. \nMaybe the testing occurences could be replaced by test then ? If it's convention for most testing tools, it would make things less confusing (I didn't know about jest adding node_env=\"test\" automatically).\nLong explanation of my particular case:\nI also have a \"Library\" option in my fork that split sources in 2 directories : \"app\", and \"src\". \n\"src\" contains sources of the library that will be included in the production build, and \"app\" contains a UI that can be used to build a docs/demo website from the library, helps the development of the library by providing a UI on top of it.\nProduction build only bundle the entrypoint from \"src\", but E2E tests needs to run against the \"app\", so I have made a change to run E2E tests against the dev configuration.\nBut in fact, I think I should create 2 production builds, one for the lib, and one for the \"app\", and run E2E tests against the production build of the \"app\".\nFeel free to close this one If you don't want to replace the testing occurences to test, else I can update the pull request.. I have update the Pull Request with the proposal of renaming \"testing\" to \"test\". ~I have removed cross-env dependency as it's not used anymore, because NODE_ENV=\"test\" is defined by webpack configuration.~. It's actually far better than expect scripts ! Thanks :)\nIt's a shame inquirer.js doesn't support some kind of automation, the isNotTest variable seems like a hack, but it's still better than expect script that are just *** to build and maintain.. (Don't forget to squash commits :rofl: :lollipop:). It's already wrapped. ",
    "bshandley": "Great! Thanks for the quick feedback! I need to use Nodemailer to send a Contact Us email, so it sound like a separate app is the way to go. Thanks again! . ",
    "mistre83": "Thanks a lot. I will post questions on the forum in future.. ",
    "msokk": "It is a common theme to blacklist node_modules in different loaders such as babel, eslint,etc. Otherwise webpack would have to process tons of files under node_modules.\nYour current modification would allow eslint-loader to lint all files under node_modules.\nYou can use include to explicitly whitelist stuff.. Sorry, I misunderstood you without the context, I didn't notice the include variable. So exclude is not needed. Hopefully that Webpack 2 PR will change this.. Webpack 2 has defaults for exclude? I couldn't find any defaults from documentation: https://webpack.js.org/configuration/module/#rule-exclude. Ah yea, correct, having them both is redundant.. ",
    "gurghet": "\nOtherwise webpack would have to process tons of files under node_modules.\n\nI tried and it does not process the node_modules. I think this is right, you should be able to import other modules from karma .spec.js files, and since the injectors use the require syntax even in webpack 2 this is likely the only feasible workaround.. Also here. Is it really necessary? I think this directory is already excluded... anyways... \ud83d\ude44 . I think that if you don't have exclude it works on a whitelist basis. From the test suite:\nit('should not match if include does not match', function() {\n    var loader = new RuleSet([{\n        test: /\\.css$/,\n        include: /output.css/,\n        loader: 'css'\n    }]);\n    (match(loader, 'style.css')).should.eql([]);\n});.\n",
    "wYhooo": "Missed one thing: if I disabled all style loaders the above things won't happen.. ",
    "tonypee": "This seems to be a bug. I am also experiencing that css is included in a different order in development vs production. Not sure why. seems the same issue - although, unresolved\nhttp://stackoverflow.com/questions/37021225/webpack-build-css-rules-have-different-order-then-in-development. ha. no worries ;P thanks. ",
    "serak": "its the order you are using on main.js, though i dont know why it doesnt matter on npm run dev,\nhttps://stackoverflow.com/questions/43628609/how-do-i-correct-the-css-compile-order-with-webpack-in-vuejs. assetsPublicPath = '' fixed my problem but what about importing font awesome using this import statement and running npm run build\nimport './assets/font-awesome-4.7.0/css/font-awesome.css'\nfinal output\nERROR FROM CHROME\nGET http://localhost/prodvuejs/static/css/static/fonts/fontawesome-webfont.af7ae50.woff2 net::ERR_ABORTED\nno idea why static is repeating ? it should be justhttp://localhost/prodvuejs/static/fonts/fontawesome.... ",
    "puppeteer701": "I would also like to know this, because I moved from vue-resources to axios and proxyTable in webpack is not working anymore. Any suggestions?. ",
    "isjia": "I met the same issue. Now fixed with adding pathRewrite to proxyTable config, like \njson\n......,\npathRewrite:{\n'^/api':\"\"\n}\nI don't know why need this, but it's work for me .. ",
    "Rylai-Zihang": "I also met the same problem that proxyTable not working after replacing vue-resource with axios. Any ideas? . ",
    "pixelbacon": "@isjia: The value is a RegEx. The ^ means \"starts with\".. ",
    "Sathish1390": "I have used Vue proxyTable. And it's working in Firefox. But it's not working in chrome. It throws forbidden error. What is the problem?\nMy code:\n'/api': {\n    target: '**',\n    changeOrigin: true,\n    pathRewrite: {\n      '^/api': '/api'\n    }. ",
    "dcdrawk": "I ran into the same problem after running a fresh npm install. \nSeems like it has something to do with vue-loader. I tried reinstalling an older vesion via npm install vue-loader@10.0.0 --save-dev, which seems to work. Hopefully this can get fixed soon.. ",
    "fernandofsan": "Same problem here.\n@dcdrawk your fix worked.. ",
    "thebrubaker": "dotenv is a good package to solve this problem.. ",
    "shijunti19": "How to support this\uff1a\n@-webkit-keyframes rotate-forever\n    0%\n        transform: rotate(0deg)\n    100%\n        transform: rotate(360deg). ",
    "ydogus": "This error still exists. I think the problem is about babel is not compiling our javascript codes. Because the unexpected token here is 'import' keyword. And as I know those codes should be compiled into a standard JS code by Babel?. ",
    "jaredreich": "Hey Linus thanks for the reply. Babel-polyfill is fine as I use it actively in other non-vue projects. My point was we shouldn't have to do something hacky like inserting a lone/non-stansard require/import at the top of main.js, using the webpack entry property should work. Unfortunately I don't know how this is a problem with vuex's setup, but it's definitely not a webpack or babel-polyfill issue.. If anyone else runs into this issue, I was able to get babel-polyfill working with this syntax:\njs\nentry: {\n  app: [\n    'babel-polyfill',\n    './src/main.js'\n  ]\n},. ",
    "koficodes": "it also works for babel-polyfill.\nfiles: [\n   '../../node_modules/babel-polyfill/dist/polyfill.js',\n   './index.js'\n]. ",
    "nkovacs": "You can also just add import \"es6-promise/auto\" to test/unit/index.js.\n. I'm not sure if I ran into the same problem. I changed assetsSubDirectory to an empty string and that breaks static file serving.\nBefore you switched to using webpack-dev-server instead of your custom dev server, you had this: https://github.com/nickspiel/webpack/blob/b4b8154a7dbcc469069a94b017dc2d56a429e8f2/template/build/dev-server.js#L57\nThis worked fine because it was serving ./static as whatever you decided to rename your assetsSubDirectory to.\nNow it doesn't work any more because webpack serves all files in the working directory. The working directory is set to the project root when you start the dev server with npm run or yarn run, so your entire working directory is served by webpack-dev-server (see https://webpack.js.org/configuration/dev-server/#devserver-contentbase). This means that the default assetsSubDirectory only works because the source directory is also called static. As soon as you change assetsSubDirectory, it breaks.\nHowever, under e2e tests it works because it uses the production config and CopyWebpackPlugin. Using CopyWebpackPlugin in the dev config too instead of relying on contentBase fixes this problem, at least with assetsSubDirectory set to an empty string.. Like I said in #1141, adding CopyWebpackPlugin to the dev config (with the exact same configuration except with config.dev.assetsSubDirectory) fixed my issue. You could try that.. ",
    "terrymun": "Using es6-promise-promise@1.0.0 worked for me in a Webpack setup :)\nnew webpack.ProvidePlugin({\n    Backbone: 'backbone',\n    _: 'underscore',\n    Promise: 'es6-promise-promise',\n    Vue: 'vue',\n    Vuex: 'vuex'\n}). ",
    "rayfoss": "I just used files: ['../../node_modules/babel-polyfill/dist/polyfill.js','./index.js'], in my karma conf. It covered more hard to debug es6 issues. That is, hard to debug in the finicky PhantomJS debug/developer tools.\nIf you don't use SSR/Nuxt, running components independently can lead to unexpected states that you would frequently encounter in unit tests.. @maoberlehner  Some docs on how to retrofit it would be welcome... did you figure it out?. ",
    "popovfreewind": "if you use axios npm install es6-promise. And then before axios scriptput this ---> require('es6-promise').polyfill();. ",
    "ricky11": "Still have the same problem with ie11 SCRIPT 1010: expected identifier app.js (8549,1)\nbelow is my main.js file \nimport 'es6-promise/auto'\nimport 'babel-polyfill'\nimport Vue from \"vue\";\nimport App from \"./App\";\nimport \"bootstrap\";\nimport \"jquerynimport * as firebase from \"firebase\";\nimport { store } from \"../store/store\";\n. Has the large build got some something to do with the map file which is use by devtools to kinda un-minify js code.  my vendor.js file is 1.49MB and it consits of firebase and vuex vue-router.  this is angular size level!. ",
    "zhenfeng-zhu": "I solved it by add babel-polyfill like this:\n```js\nimport Vuex from 'vuex'\nimport Vue from 'vue'\nrequire('babel-polyfill')\nVue.use(Vuex)\nconst store = new Vuex.Store({\n  state: {\n    count: 0\n  },\n  mutations: {\n    increment (state) {\n      state.count++\n    }\n  }\n})\nexport default store\n```. ",
    "igeligel": "You have made a mistake:\nYou should include your css by using the <link> tag. Rather than using <style src=\"/static/oneui/css/bootstrap.min.css\" type=\"text/css\"></style> use:\nhtml\n<link href=\"./static/oneui/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\">\nThe dot in the href will reference the current directory you are in. Since you will write this to the index.html i believe you are in the root directory of the project. Then navigate to your css file.\nRead this source on how the link tag is working.\nEdit:\nTested on Win10 with newest version available.. It is not possible to load any kind of asset into a <style> tag. Read through the documentation of the style-tag here.\nThe <style>-Tag is just used for inline styling inside HTML. In Vue they are also used in this way (in the end your style-tags will be translated into inline style tags of the html).. ",
    "totomakers": "Oh I feel bad ! Thanks for your answer ! Im stupid !\nThanks again !\n. ",
    "aron-bordin": "is it not possible to load static assets with the ",
    "faithyang": "I modify fallbackLoader to fallback\uff0cthere is no first warning.. ",
    "hettiger": "Thank you @limichange . ",
    "amirrustam": "Can confirm the fix works.. ",
    "alfeg": "I have to add one more change - to make webpack 2 happy\n```javascript\n    function generateLoaders(loaders) {\n        var sourceLoader = loaders.map(function (loader) {\n            var extraParamChar\n            if (/\\?/.test(loader)) {\n                loader = loader.replace(/\\?/, '-loader?')\n                extraParamChar = '&'\n            } else {\n                loader = loader + '-loader'\n                extraParamChar = '?'\n            }\n            return loader + (options.sourceMap ? extraParamChar + 'sourceMap' : '')\n        })\n    // Extract CSS when that option is specified\n    // (which is the case during production build)\n    if (options.extract) {\n        return ExtractTextPlugin.extract({\n            use: sourceLoader,\n            fallback: 'vue-style-loader'\n        })\n    } else {\n        return ['vue-style-loader', sourceLoader.join('!')].join('!')\n    }\n}\n\n``useaccept arrays, not a string. So I moved.join('!')` down the road. ",
    "hultberg": "Closing in favour of #479, as mine is a duplicate with the exact same change.. Duplicate of #487. ",
    "asumaran": "heh. I noticed this as well and submitted the same fix https://github.com/vuejs-templates/webpack/pull/478 Hope this get merged soon.. ",
    "mesquka": "Closing due to duplicates.. Pulling up the non-uglified output, I believe I've found the issue:\n/* harmony default export */ __webpack_exports__[\"default\"] = {\n    name: 'feed',\n    data() {\n        return {\n            msg: 'App'\n        };\n    }\n};\nThe data(){ line isn't valid ES5 JSON syntax. Should be data: function(){, this is being pulled in from a .vue file.. None of the config has been modified. I'm using the latest webpack template minus a few commits (2 days?) I'll try pulling the latest again.. NPM v4.1.2\nNode v7.5.0\nAs for the config options, I'm using:\nVue build: standalone (Runtime + Compiler)\nInstall vue-router? Yes\nUse ESLint to lint your code? No\nSetup unit tests with Karma + Mocha? No\nSetup e2e tests with Nightwatch? No. Latest commit seems to work fine.. Reopening because the issue has resurfaced (from latest commit), seems to be an issue with vue-loader not transpiling .vue file javascript. @LinusBorg That's the issue, babelrc was being deleted by something.. ",
    "wenner": "..\u5e76\u4e0d\u662f\u60f3\u5199\u6b7b\u5728config\u91cc\u9762,\u800c\u662f\u8981\u81ea\u52a8\u68c0\u67e5\u5360\u7528\u7684\u7aef\u53e3,\u7136\u540e\u81ea\u589e1...\n\u4e0b\u5348\u627e\u4e86\u4e00\u4e0b..\u4ee5\u524d\u7528ionic\u7684\u5c31\u662f\u81ea\u589e\u7684...\u5b9e\u7528\u7684\u7c7b\u4f3cportfinder.js\n\u6211\u7528portfinder.js\u8bd5\u4e86\u4e00\u4e0b....\u662f\u53ef\u4ee5\u7684 , \u7c7b\u4f3c\u8fd9\u6837\nmodule.exports = (function(){\n  //\u5c06basePort = port;\n  portfinder.basePort = port;\n  //\u5c06hosts\u52a0\u4e0a \" :: \"\n  portfinder._defaultHosts.push(\"::\");\n  //\u67e5\u627e\u4e00\u4e2a\u672a\u5360\u7528\u7684\u7aef\u53e3\n  portfinder.getPort({host:'127.0.0.1'} , function (err, port) {\n    if (err){\n      return;\n    }\n    var uri = 'http://localhost:' + port;\n    devMiddleware.waitUntilValid(function () {\n      console.log('> Listening at ' + uri + '\\n')\n    })\n    app.listen(port, function (err) {\n      if (err) {\n        console.log(err)\n        return\n      }\n      // when env is testing, don't need open it\n      if (process.env.NODE_ENV !== 'testing') {\n        opn(uri)\n      }\n    });\n  });\n})();\n\u4e4b\u6240\u4ee5\u6709\u8fd9\u4e2a\u9700\u6c42\u662f\u56e0\u4e3a\u8fd0\u884c\u597d\u51e0\u4e2a\u9879\u76ee,\u8fd0\u884c\u8d77\u6765\u65f6\u4e3a\u4e86\u53c2\u8003\u524d\u9762\u7684\u9879\u76ee...\u770b\u770b\u6548\u679c\n\u800c\u540c\u65f6\u53c8\u8fd0\u884c\u7740\u5f53\u524d\u6539\u7684\u9879\u76ee..\n. \u7b97\u662f\u5427...\u4e0d\u8fc7\u662f\u4fee\u6539dev-server.js\u7684..\u5982\u679c\u518d\u4ece\u5b98\u65b9\u7684template\u521b\u5efa\u7684\u65f6\u5019\u8fd8\u8981\u6539\u4e00\u4e0b...\n\u4e0d\u77e5\u9053\u5176\u4ed6\u4eba\u6709\u6ca1\u7c7b\u4f3c\u9700\u8981. \u6069.\u6211\u5012\u662f\u77e5\u9053fork...\n\u53ef\u662ffork\u540e\u6211\u4fee\u6539\u4e86,\u7136\u540efork\u7684\u6e90\u4e5f\u6709\u66f4\u65b0\u4e86....\u6211\u518d\u66f4\u65b0\u7684\u65f6\u5019\u603b\u6709\u9519\u8bef....\u7136\u540e\u5c31\u6ca1\u8fd9\u4e48\u64cd\u4f5c\u8fc7\n\u8c22\u8c22\u5566..\u6211\u518d\u8bd5\u8bd5. ",
    "birchb": "I, too, thought that this used to work automatically, but it seems to fail now. Thank you for looking into it.\n\u6211\u4e5f\uff0c\u8ba4\u4e3a\u8fd9\u7528\u4e8e\u81ea\u52a8\u5de5\u4f5c\uff0c\u4f46\u73b0\u5728\u4f3c\u4e4e\u5931\u8d25\u3002 \u8c22\u8c22\u4f60\u770b\u770b\u5b83\u3002. ",
    "scottbedard": "Whoops, closing this PR. It is a duplicate of https://github.com/vuejs-templates/webpack/pull/485 and https://github.com/vuejs-templates/webpack/pull/490\nSorry, should have checked first.. ",
    "UngererFabien": "oops sorry it's a duplicate. ",
    "Ivan-Feofanov": "I am already using Webpack 2.2.1 and got this error. @limichange in project files (/src folder) i use ES6 exports, in webpack config files - modules.export. @limichange Here they are\n```\nmodule.exports = Component.exports\n// }),\n/ 4 */\n/*/ (function(module, webpack_exports, webpack_require) {\n\"use strict\";\nObject.defineProperty(webpack_exports, \"__esModule\", { value: true });\n//\n//\n//\n//\n//\n//\n/ harmony default export / webpack_exports[\"default\"] = {\n  name: 'app',\n  data() {\n    return {};\n  }\n};\n/***/ })\n``\nBuilder send error on line withdata() {`. Latest. I'm sorry. After update to latest template version ploblem was gone.\nThank you for help!. ",
    "rlog": "@Ivan-Feofanov \nwhat are you doing for that?   I have the same issue. ",
    "graingert": "Sure but maybe not in this PR. I think it's worth it to get off ES2015 first . babili when integrated with the rest of the babel pipeline isn't that much slower . ",
    "subic": "It seems that the code does not include the cssnano the documentation implies. You will have to add your own css compressor. You can for example manually add cssnano to your vue-loader-config postcss processors. \nbuild/vue-loader-config.js\nmodule.exports = {\n   ...\n  postcss: [\n    require('autoprefixer')({\n      browsers: ['last 2 versions']\n    }),\n    require('cssnano')() //add this\n  ]\n}\nRequiring the cssnano (and installing it with npm install cssnano --save-dev) in postcss options will now compress your production CSS when running build. You can also pass the cssnano options as an object (same as with the autoprefixer above).\nSee also:\n- Vue loader PostCSS docs\n- cssnano\nEDIT: For an alternative solution see the submitted pull request #484 using optimize-css-assets-webpack-plugin.. ",
    "radicalviva": "@subic I follow you suggestion, i install the cssnanao, and now my css looks like below\n```\n.hello[data-v-92426efa]{background-color:#f6f6f6;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.hello p[data-v-92426efa]{color:#00a0b0}h2 {\n  color: #ff3c4e; }\nh1 {\n  color: blue; }\n/# sourceMappingURL=site.e0104a2f410f57f26be4466bea0b1cfd.css.map/\n```\nIt means worked?. @limichange thank you, it works.. ",
    "TopGrd": "@limichange  it's not work, the errors also occurred. But i found the reason. i printprocess.env.NODE_ENV,\nthat's production, so i change the dev script to \"set NODE_ENV=development&&node build/dev-server.js\", now it's works well. . ",
    "Austio": "Benefit would be that you could specify different options that are not in the dev.env property of teh index.js.  A good example of things that could change which are not currently updatable are the dev.port or autoOpenBrowser.\nIf we did this, I would think it would be similar to the current setup only instead of requiring the environment under dev.env we would require it and then merge it on top of the index.js.\nSo, index.js would then really be more of defaults, and dev/prod/test would be extensions on top of that where you could specify different ports/etc as needed for the different envs.. ",
    "wcarron27": "Will do! Appreciate it very much.. Closing: After I altered my Nginx configuration to transition from relying on a localhost server to serving built files, everything made sense. Had to do it in production though, which was scary.. ",
    "smolinari": "Hehehe..didn't know I could close my own PRs. Learning, learning, learning...\nScott. ",
    "alziqziq": "why its not working for me? @kazupon . ",
    "JeremyGranger": "@jakubsikora Did you ever figure this out? I'm running into the same issue using V2 + Webpack2 + NginX.... Got it, thanks so much! You helped solve a very frustrating problem. Cheers!\nWarmest Regards,\nJeremy Granger\nSoftware Engineer, Data Ductus, Inc.\nAlumni, B.S.C.S. \u201815\ne: jeremy.granger@colorado.edu\nc: 571.247.1432\nOn October 18, 2017 at 2:19:16 AM, Sikora Jakub (notifications@github.com)\nwrote:\n@JeremyGranger https://github.com/jeremygranger I moved it to my DO\nserver and used pm2 + reverse proxy on nginx following\nhttps://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-16-04\nand its working fine.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/511#issuecomment-337499015,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AD_fQTRWfBaIdsd6aw8J6E9g98p99fJYks5stbSCgaJpZM4L-U7o\n.\n. ",
    "jakubsikora": "@JeremyGranger I moved it to my DO server and used pm2 + reverse proxy on nginx following https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-16-04 and its working fine.. ",
    "HACHIMIam": "i have the same issue when i try to serve the index file with live-server . ",
    "Heunsig": "@kazupon Thanks you :). ",
    "mickaelbaron": "Hi,\nI had the same issue. I followed this link: https://gist.github.com/szarapka/05ba804dfd1c10ad47bf\nMickael. ",
    "luis-abeno": "@kazupon Thanks =). ",
    "idsbllp": "solved:\nvue: {\n    loaders: {\n        less: extractTextPlugin.extract(\"css!less\")\n    }\n},\n. ",
    "squirmy": "@LinusBorg \nusing the @ in the alias makes the import statements look they are importing a scoped module.\nhttps://docs.npmjs.com/misc/scope\ni picked this up because I tried it with the airbnb linted which complained they were an extraneous dependency.\nperhaps it would be better to use a different character :). Here's some prior art:\nhttps://github.com/entwicklerstube/babel-plugin-root-import\n. @LinusBorg I think eslint is already happy with the current webpack alias solution. I believe this part of the config is making it work:\njavascript\n  'settings': {\n    'import/resolver': {\n      'webpack': {\n        'config': 'build/webpack.base.conf.js'\n      }\n    }\nWas more hinting at the fact that others have done the same concept as above and used @/ as the 'alias'.\nI think @simplesmiler's suggestion would work well. It requires one alias, and things would be referenced like:\n@/file-at-root\n@/components/file\n@/assets/file\nAny other aliases for further down the tree can be added by the user. :-). ",
    "AlexandreBonaventure": "@LinusBorg \nCheckout: https://www.npmjs.com/docs/orgs/?utm_campaign=2017-03-22%20free%20Orgs&utm_medium=email&utm_source=Eloqua\nFrom now on, npm allows free orgs, we should see more and more the use scope (eg. @org/packgage)\nIt will then enter in conflict with the actual alias @\n. OK, but maybe for the sake of readability (could be misleading for beginners), we should find another symbol. Just saying... Could provide a PR if accepted. My bad, I noticed the subject was brought to the table before. But still I found the @ a bit misleading. Why not & or # as you suggested in the first place ?. ",
    "julienchazal": "ok thanks. ",
    "Naeemo": "@yuu2lee4 would you please tell me how you solved it? Thanks.. ",
    "sudo-suhas": "I also faced issues while trying to debug in chrome with #cheap-module-eval-source-map. I was able to fix it by changing it back to #eval-source-map.. The guide  only mentions separating js and css. It probably makes less sense to keep the html in another separate file if js and css already are. So am I trying to do something that I shouldn't?. @paulvanbladel I tried reproducing the error for js section as a separate file and I think I know what the issue(and the workaround) is. \nWhen I placed a js file in the same folder as my Vue component with the same name(hello.js), I saw the following warning:\nWARNING in ./src/components/Hello.js\nThere are multiple modules with names that only differ in casing.\nThis can lead to unexpected behavior when compiling on a filesystem with other case-semantic.\nUse equal casing. Compare these module identifiers:\n* E:\\Projects\\repos\\vue-test\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\repos\\vue-test\\src\\components\\Hello.js\n    Used by 3 module(s), i. e.\n    E:\\Projects\\repos\\vue-test\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\repos\\vue-test\\test\\unit\\specs\\Hello.spec.js\n* E:\\Projects\\repos\\vue-test\\node_modules\\babel-loader\\lib\\index.js!E:\\Projects\\repos\\vue-test\\src\\components\\hello.js\n    Used by 3 module(s), i. e.\n    E:\\Projects\\repos\\vue-test\\src /^\\.\\/(?!main(\\.js)?$)/\nAnd the tests failed with the following output:\n```\n13 03 2017 09:55:37.445:INFO [PhantomJS 2.1.1 (Windows 8 0.0.0)]: Connected on socket Eo_tCb-w3-ZkzEQyAAAA with id 29354609\nERROR LOG: '[Vue warn]: Failed to mount component: template or render function not defined.\n(found in )'\nHello.vue\n    \u00d7should render correct contents\n        undefined is not a constructor (evaluating 'vm.$el.querySelector('.hello h1')')\n        webpack:///test/unit/specs/Hello.spec.js:8:32 <- index.js:7518:32\n```\nHowever, when I placed the js file in a subfolder(sections), the tests passed. File structure:\n\u251c\u2500\u2500\u2500components\n\u2502   \u2502   Hello.vue\n\u2502   \u2502\n\u2502   \u2514\u2500\u2500\u2500sections\n\u2502           hello.js\nHowever, this still does not fix the errors with HTML seperation.. I tested my app after removing the polyfills and things seem to be working fine. However, note that I am extensively using lodash and not relying on native modules.. Although this doesn't matter if transform-runtime is going to be removed, in a different project, the  \"polyfill\": false directive is not being respected. Could have something to do with this issue but I am not calling super() anywhere.. I extracted the stats for my webpack chunks and modules by enabling profile and using this plugin. Can anybody please help me understand why the polyfill: false directive is being ignored? The stats.json file can be uploaded here for interactive visualization.\n\nBabel config\n```json\n{\n    \"presets\": [\n        [\"es2015\", { \"modules\": false }],\n        \"stage-1\"\n    ],\n    \"plugins\": [\n        \"lodash\",\n        \"syntax-dynamic-import\", [\n            \"component\", [{\n                \"libraryName\": \"element-ui\",\n                \"styleLibraryName\": \"theme-default\"\n            }]\n        ],\n        [\"transform-runtime\", { \"polyfill\": false }]\n    ],\n    \"comments\": false,\n    \"env\": {\n        \"test\": {\n            \"plugins\": [\"istanbul\"]\n        }\n    }\n}\n```\n\nCompressed stats file - stats.json.zip\nEdit: I was able to reproduce the issue of polyfill - false being ignored in a fresh copy of the webpack config.\nWhen async functions are used, transform-runtime adds transformation ./~/babel-runtime/helpers/asyncToGenerator.js which has a dependency ./~/babel-runtime/core-js/promise.js.\nSteps to reproduce:\n```\n$ vue init webpack vue-test\nThis will install Vue 2.x version of the template.\nFor Vue 1.x use: vue init webpack#1.0 vue-test\n? Project name vue-test\n? Project description Playground for Vue!\n? Author Suhas Karanth sudo.suhas@gmail.com\n? Vue build runtime\n? Install vue-router? Yes\n? Use ESLint to lint your code? No\n? Setup unit tests with Karma + Mocha? No\n? Setup e2e tests with Nightwatch? No\nvue-cli \u00b7 Generated \"vue-test\".\nTo get started:\n cd vue-test\n npm install\n npm run dev\n\nDocumentation can be found at https://vuejs-templates.github.io/webpack\n$ cd vue-test/\n$ npm install\n``\nModify.babelrcto have[\"transform-runtime\", { \"polyfill\": false }]`. \nIn main.js:\n```js\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nasync function test() {\n    await Promise.resolve(true);\n}\n/ eslint-disable no-new /\nnew Vue({\n  el: '#app',\n  router,\n  render: h => h(App)\n})\n```\nNow run npm run build --report\n\nI have reported this as an issue with babel folks but they will probably take some time to resolve it.. @LinusBorg My understanding was that it was fixed in babel 7.0 which is still in beta. I will check this again sometime this week.. Apologies for the delay in my response. I tried this out with the latest beta version for babel packages and the issue is not fixed. I have requested that the issue in babel repo be reopened.. > I got an error running test on Windows 10.\nThis might have something to do with git core.autocrlf setting. Read more here. @LinusBorg extract-text-webpack-plugin and html-webpack-plugin have been updated to support webpack 3. inject-loader has still not been updated though.. There was a PR merged in which allowed webpack 3 peer dependency. But not released. . @limichange I think this warning was coming from extract-text-webpack-plugin.\n\nDeprecationWarning: Chunk.modules is deprecated.\n\nLooks to be fixed - extract-text-webpack-plugin/CHANGELOG.md#breaking-changes. @adam-lynch I don't think it is as simple as updating all the package dependency versions. While webpack@3 was a backward compatible release for the most part, there are evidently differences in behavior which are breaking the hot reload. Let's wait for the repo maintainers to update.. The branch has been merged.. No need to specify the branch. My bad. Try vue init webpack#develop. Great! Created the PR - #763 . I usually checkin my vscode files for settings, recommended extensions etc. They aren't transient unlike intellij's .idea. The vscode repo does this too! . I wasn't aware of that. \nI have made a PR to the repo with a similar change - https://github.com/geowarin/friendly-errors-webpack-plugin/pull/57 updating the readme.\nAlthough I doubt there will be any significance to the no-op, let us wait for their response.\nAlso, rebased.. @LinusBorg No activity in the friendly-errors-webpack-plugin repo. This PR is a very minor change so could we please merge it in? . If this is approved, I can make a similar PR to vuejs-templates/pwa. TBH, I use the lint or lint:fix script commands quite rarely. I usually setup pre  commit hooks with lint-staged. But it makes sense to add the fix script if you have the one for linting.. @LinusBorg Shall I close this?. I understand @LinusBorg. Closing. . :smile: Cheers!. ping. There's shouldn't be but, to be sure, I can test it once after eslint is updated.. My aplogies @MaxMilton. I'll try to make a PR to eslint-loader to fix this.. Rebased to fix conflict. Also added 'use strict' directive because of this:\n```\n\u03bb node --version\nv4.0.0\n\u03bb echo let a = 1 > test-node4.js\n\u03bb node test-node4.js\nE:\\Projects\\experiments\\test-node4.js:1\n(function (exports, require, module, __filename, __dirname) { let a = 1\n                                                              ^^^\nSyntaxError: Block-scoped declarations (let, const, function, class) not yet supported outside strict mode\n    at exports.runInThisContext (vm.js:53:16)\n    at Module._compile (module.js:413:25)\n    at Object.Module._extensions..js (module.js:452:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Function.Module.runMain (module.js:475:10)\n    at startup (node.js:117:18)\n    at node.js:951:3\n`` . ping @LinusBorg. Any changes needed from my side?. @LinusBorg I upgraded a project to webpack 3 and while it isn't a through check, things were working as expected. Hot-reloading too forsrccode.. The original PR is this one - babel/babel-preset-env#161 and as you can see in https://github.com/babel/babel-preset-env/pull/161#issuecomment-322135362, the feature was landed in2.0.0-alpha.19but later they moved it to the monorepo and switched to that version(v7.0.0-beta.32is the latest). But yea.. some confusing changes. For example [babel-plugin-transform-es2015-modules-commonjs](https://www.npmjs.com/package/babel-plugin-transform-es2015-modules-commonjs) has been renamed and moved to [@babel/plugin-transform-modules-commonjs](https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-modules-commonjs). I expect they will ease the transition with codemods. In any case, the last released stable version ofbabel-preset-envdoes not load the targets frompackage.json`.. Thanks @jarrodldavis, that's very helpful. \n@LinusBorg I agree that having to define the targets in 2 places is not ideal. However, this issue will be fixed once babel packages are out of beta which I am guessing will be soon. Are you sure you want me to setup .babelrc.js ?. This approach breaks jest \ud83d\ude1e\n```\n\u03bb yarn run unit\nyarn run v1.3.2\nwarning ..\\package.json: No license field\n$ jest --config test/unit/jest.conf.js --coverage\n FAIL  test\\unit\\specs\\HelloWorld.spec.js\n  \u25cf Test suite failed to run\nE:\\Projects\\experiments\\vue-webpack-dev\\test\\unit\\setup.js:1\n({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,global,jest){import Vue from 'vue';\n                                                                                         ^^^^^^\n\nSyntaxError: Unexpected token import\n\n  at ScriptTransformer._transformAndBuildScript (node_modules/jest-runtime/build/script_transformer.js:305:17)\n      at Generator.next (<anonymous>)\n\nTest Suites: 1 failed, 1 total\nTests:       0 total\nSnapshots:   0 total\nTime:        0.872s, estimated 1s\nRan all test suites.\nRunning coverage on untested files...\n    Failed to collect coverage from E:\\Projects\\experiments\\vue-webpack-dev\\src\\components\\HelloWorld.vue\n    ERROR: TypeError: Cannot read property 'fileCoverage' of undefined\n    STACK: TypeError: Cannot read property 'fileCoverage' of undefined\n    at Instrumenter.instrumentSync (E:\\Projects\\experiments\\vue-webpack-dev\\node_modules\\istanbul-lib-instrument\\dist\\instrumenter.js:147:40)\n    at exports.default (E:\\Projects\\experiments\\vue-webpack-dev\\node_modules\\jest-cli\\build\\generate_empty_coverage.js:34:18)\n    at module.exports (E:\\Projects\\experiments\\vue-webpack-dev\\node_modules\\jest-cli\\build\\reporters\\coverage_worker.js:52:94)\n    at handle (E:\\Projects\\experiments\\vue-webpack-dev\\node_modules\\worker-farm\\lib\\child\\index.js:44:8)\n    at process. (E:\\Projects\\experiments\\vue-webpack-dev\\node_modules\\worker-farm\\lib\\child\\index.js:51:3)\n    at emitTwo (events.js:126:13)\n    at process.emit (events.js:214:7)\n    at emit (internal/child_process.js:772:12)\n    at _combinedTickCallback (internal/process/next_tick.js:141:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)\n----------|----------|----------|----------|----------|----------------|\nFile      |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |\n----------|----------|----------|----------|----------|----------------|\nAll files |        0 |        0 |        0 |        0 |                |\n App.vue  |        0 |        0 |        0 |        0 |... 19,20,21,22 |\n----------|----------|----------|----------|----------|----------------|\nerror Command failed with exit code 1.\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n```. Tried it, it does not get loaded during testing.. Thanks @jarrodldavis, that does work. A little concerned about the increased complexity though.. > I'm sorry to say that I think I've changed my mind again :(\nNo problem at all \ud83d\ude04. I honestly appreciate the thought you and the rest of Vue.js team put into maintaining and developing the ecosystem \ud83d\ude47. \n\nI'm afraid that the new format of the babelrc.js file with the conditional return depending on environment will lead to a lot of confusion for people not familiar with the reasons we did it.\n\nI had similar concerns.\n\nSo I guess we will have to bite the bullet and revert to having the browserslist in both package.json and .babelrc, and make a note in the docs to make people aware that they have to make changes to browserlist in two places until Babel 7 has landed.\n\nOkay, removing a commit is easy enough. Where do you think I should update the docs?. I already removed the commit which setup .babelrc.js. I'll be able to update the docs tomorrow. If you prefer I do that in a different PR, this can be merged in now. . I had tried babel-minify a few months back and the bundle size was slightly larger.. Hey @LinusBorg, I'd like to help you with testing this on windows. I'll try it out tomorrow. One suggestion I have is that it should be configurable to install using yarn. npm5 doesn't work very well on windows. . The install step did not work correctly:\n```\n\u03bb vue init webpack#auto-install-deps vue-auto-install-deps\n? Project name vue-auto-install-deps\n? Project description A Vue.js project\n? Author Suhas Karanth sudo.suhas@gmail.com\n? Vue build runtime\n? Install vue-router? Yes\n? Use ESLint to lint your code? Yes\n? Pick an ESLint preset Airbnb\n? Set up unit tests Yes\n? Pick a test runner jest\n? Setup e2e tests with Nightwatch? Yes\n? Should we run npm install for you after the project has been created? (recommended) yarn\nvue-cli \u00b7 Generated \"vue-auto-install-deps\".\nInstalling project dependencies ...\n========================\nevents.js:183\n      throw er; // Unhandled 'error' event\n      ^\nError: spawn yarn ENOENT\n    at _errnoException (util.js:1024:11)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:190:19)\n    at onErrorNT (internal/child_process.js:372:16)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)\n```\nI got the same error with npm as well.. I tried the other way to init:\n```\n\u03bb mkdir vue-auto-install-deps\n\u03bb cd vue-auto-install-deps\\\n\u03bb vue init webpack#auto-install-deps\n? Generate project in current directory? Yes\n? Project name vue-auto-install-deps\n? Project description A Vue.js project\n? Author Suhas Karanth sudo.suhas@gmail.com\n? Vue build runtime\n? Install vue-router? Yes\n? Use ESLint to lint your code? Yes\n? Pick an ESLint preset Airbnb\n? Set up unit tests Yes\n? Pick a test runner jest\n? Setup e2e tests with Nightwatch? Yes\n? Should we run npm install for you after the project has been created? (recommended) yarn\nvue-cli \u00b7 Generated \"vue-auto-install-deps\".\nInstalling project dependencies ...\n========================\nevents.js:183\n      throw er; // Unhandled 'error' event\n      ^\nError: spawn yarn ENOENT\n    at _errnoException (util.js:1024:11)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:190:19)\n    at onErrorNT (internal/child_process.js:372:16)\n    at _combinedTickCallback (internal/process/next_tick.js:138:11)\n    at process._tickCallback (internal/process/next_tick.js:180:9)\n``. Give me some hints. Maybe I can help you fix it.. Okay, I'll look into it.. btw.. Instead of manually wrappingspawnin a promise, why not use [execa](https://github.com/sindresorhus/execa)? It would handle a lot of edge cases as well.. Are you planning to drop support for node 4?. @LinusBorg The functionality that you have added to the template, it could be used by pretty much all templates right. So do you think it would make sense to implement it in thevue-cli` instead?. Lol.. Glad to hear that.. My bad. I had tested it but must have inadvertently introduced the mistake while rebasing and removing conflicts. Very sorry. . I can confirm that this change fixes it.. ",
    "dweremeichik": "I found that I had to use #cheap-eval-source-map due to it ignoring the source maps from loaders. Unfortunately it is transpiled code, but... at least I can trouble shoot what is going on now. For more information on the possible options for devtool see: https://webpack.js.org/configuration/devtool/. duplicate of #520?. ",
    "madebycaliper": "I'm also experiencing this issue in Chrome using the default #cheap-module-eval-source-map and found it's corrected by using #cheap-eval-source-map.\nBut why was this issue closed @LinusBorg ? This thread and the others referenced don't provide any solution, just alternatives that apparently slow down compilation. Or did I miss something? If changing the devtool to #cheap-eval-source-map fixes this issue with no downside maybe vue-cli should be modified? I'm new-ish to Vue + Webpack so I could be misunderstanding.... @LinusBorg understood. Hopefully it'll get resolved upstream in webpack. Thanks for the reply!. ",
    "aspectis": "Unfortunately, this breaks relative CSS imports - an issue with file-loader as well as url-loader which seems to be unresolved.. ",
    "mccxiv": "Solved here\nv-directive='true'. ",
    "lusarz": "@LinusBorg Would you accept pull request with vue-test-utils@v1.0.0-beta.28 configuration if I prepare it ?\nI actually have it configured here, so I can easily apply it here.. Okay, I understand. So where I can found source code of analogous template related with vue-cli 3 ?. I think we need also to \"install\" Chrome. In my projects I have puppeteer added as dev dependency, and line:\nprocess.env.CHROME_BIN = require('puppeteer').executablePath()\n\ninside karma.conf.js.. ",
    "vkruoso": "With this template running npm run build will run webpack and create a production set of static files in the dist folder that you can serve in a common webserver, like Apache or nginx.. That's right. This template will take care of generating all files relevant to the client application. If by server code you mean some API, that is a separate issue. You can serve the static files using express if you like, and proxy API requests somewhere or implement them right there. You can also have the reverse proxy you said with the client and API endpoints running on separate processes. There is lots of possibilities!. ",
    "Flaminator89": "I understand the production build for client code but where would the server code go?  Say I want to swrve my static files over express and do other things on the same port?. I think I understand now.  You are saying that I should be using nginx or apache for a reverse proxy and keeping my server code as a separate package.  Thanks for the info, I will close this now.. ",
    "FilipQL": "Yes, you're right. My bad.. ",
    "paulvanbladel": "@sudo-suhas  If you separate the javascript in a js file and keep the html in the .vue file, the tests ALSO Fail.\nThis is a showstopper for me :( . @sudo-suhas \nThanks for checking that. I tried also several things but due tomy lack of in-depth knowledge about webpack....\n@LinusBorg : when saying \"that should work\", do you mean it works at your side, or do you mean that you would like if it would work :) ? If it works on your side, thanks for providing some pointers.\n. @sudo-suhas  yeah, I confirm that for the .js files it works, when both files have a different name. I can very much live with that. \nI love vue and this brilliant webpack template for the cli.. ",
    "levblanc": "Ran into the same html loader issue today. My setup is a little bit different from yours:\nModule | Version \n--- | ---\nNode.js |   6.9.1\nnpm | 3.10.8\nvue-cli |   2.8.1\nvue |   2.1.10\nwebpack | 1.13.2\nbabel | 6.0.0\nMy project was created using vue-cli, so I think the webpack and karma setups would be pretty much the same as yours.\nIn my project, I separate html, css, and js files then source them in a .vue file. Then I got this html loader issue when running unit tests. This is a little bit wired to me, because the dev config is almost the same as the karma config, except for the source map settings. How come?\nSimply adding a html-loader didn't help. So I went for a tricky work around: \nRename all html files to vue files, that is: Hello.html  -> Hello.tpl.vue\nAlso, remember to change the source file name of <template>  in the actual .vue file.\nBoth dev and test are happy now.\nDoing this will result in having two .vue files under one component or view folder. But writing all the codes in one large file really sucks. There seem to be no other side effects, so I am going to stick with this work around for now. \nHope this helps.\n. ",
    "JonathanSpooner": "If you're using vue-cli's generated project you can change line 11 in webpack.test.conf.js to include an html-loader. The tests will run, however there's some strange output which may or may not have to do with the new rule.\n//line 11 webpack.test.conf.js\nrules: [...utils.styleLoaders(), {test: /\\.html/, loader: 'html-loader'}]. ",
    "AGuyotGenymobile": "Hello,\nI had same probleme with a multiple files component.\nI started Webpack & VueJs recently but here is maybe a solution.\nSetup\n| Module     | Version |\n| --------|---------|\n| Node  | 6.11.0   |\n| npm | 3.10.10   |\n| vue | 2.8.2   |\n| webpack | 2.6.1   |\n| babel | 6.22.1   |\nComponent structure\n\u251c\u2500\u2500\u2500components\n\u2502   \u2514\u2500\u2500\u2500Navigation\n\u2502       \u2514\u2500\u2500\u2500index.vue\n\u2502       \u2514\u2500\u2500\u2500script.js\n\u2502       \u2514\u2500\u2500\u2500template.html\n\u2502       \u2514\u2500\u2500\u2500style.scss\nHere is the index.vue\nHTML\n<template src=\"./template.html\"></template>\n<script src=\"./script.js\" scoped></script>\n<style lang=\"scss\" src=\"./style.scss\"></style>\nWebpack test configuration\nBoth HTML and SCSS failed in test mode until I write in the webpack.test.conf.js : \n```Javascript\n// Note: test conf is merged with base conf, all base rules are present, plus:\n// Line 10\nmodule: {\n    rules: [\n        {\n            // Maybe just use vue-loader on html template files in components directory only \n            // Like /components\\/.*.html$/\n            test: /.html$/,\n            loader: 'vue-loader'\n        }\n    ]\n}\n```\nDoes it work for you?\nWhat do you guys think?. ",
    "Hanruis": "read the code in  test/index.js. it is the karma 'entry' file.  it tells krama to load all files in the src directory execpt the main.js\nconst srcContext = require.context('../src', true, /^\\.\\/(?!(main(\\.js)/);\nso you can eclude all the html file by the regx or add html loader in webpack config. require.context can be found in webpack's doc, you can find more detail. ",
    "georgwittberger": "Thanks for the hint, @Hanruis - the following adjustment in /test/unit/index.js (line 12) resolved the HTML import problems for me:\nconst srcContext = require.context('../../src', true, /^\\.\\/(?!main(\\.js)?$)(?!.+\\.html$)/);\n\nSimply added the negative lookahead (?!.+\\.html$) at the end of the regex pattern.. ",
    "johanbove": "Since I have svg and png files in my src folder I had to use this srcContext:\nconst srcContext = require.context('../../src', true, /^\\.\\/(?!main(\\.js)?$)(?!.+\\.html$)(?!.+\\.svg$)(?!.+\\.png$)(?!.+\\.css$)/);\nWhat would be a better regexp to include only the JS files?\n. ",
    "smyth64": "This would be an awesome improvement cause large-scale apps really need a long time to compile after every save =/. ",
    "lionel-bijaoui": "It does not work reliably on Windows : https://github.com/amireh/happypack#does-it-work-under-windows\nAlso, this is \"only\" an improvement of build time that add a bit of code to the config, making it more difficult to understand (loader are referenced indirectly).\nI have learned Webpack thanks to this template and I'm sure I'm not the only one.\nIf your project is so big that you need this kind of solution, I'm sure you can add it yourself.\nMaybe the README could have a section about further enhancement like this one instead ?\nDon't get me wrong, I'm all for speed and enhancement, but build time are mostly under 5min so this is kind of an overkill IMHO.. ",
    "Lacroute": "NODE_ENV=development fixed the problem for me too.. @Turqueso From command line set NODE_ENV=development and if you're on windows you should take a look at your environment variables ;). ",
    "Turqueso": "Having same problem. Just downloaded the template and get the same error on npm run dev\n@Lacroute where did you add NODE_ENV=development?. ",
    "kerf007": "Problem fixed for me too: NODE_ENV=development.\nI added it in 'dev' script (for windows): \"dev\": \"cross-env NODE_ENV=development node build/dev-server.js\". ",
    "Volcanic-Penguin": "If an unmodified webpack template is giving errors I'd rather just use webpack-simple. ",
    "0123cf": "Having same problem.  my get the same error on npm run build , ought to  where did\nadd NODE_ENV=development ?  @moshie \n. ",
    "victorhazbun": "NODE_ENV=development Should NOT be the solution. Or this template was made for development only?. ",
    "srodriki": "I can confirm the build does not work when NODE_ENV=production is set. \nIn build/utils.js we find the generateLoaders function which seems to be using said plugin, as well as it's used in build/webpack.prod.conf.js \n```javascript\n// generate loader string to be used with extract text plugin\n  function generateLoaders (loader, loaderOptions) {\n    var loaders = [cssLoader]\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: Object.assign({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      })\n    }\n// Extract CSS when that option is specified\n// (which is the case during production build)\nif (options.extract) {\n  return ExtractTextPlugin.extract({\n    use: loaders,\n    fallback: 'vue-style-loader'\n  })\n} else {\n  return ['vue-style-loader'].concat(loaders)\n}\n\n}\n```\njavascript\n// extract css into its own file\n    new ExtractTextPlugin({\n      filename: utils.assetsPath('css/[name].[contenthash].css')\n    })\nI haven't been able to find a solution yet (I'm pretty new on how webpack works) but I'll let everyone know if I ever find one. . @helaili thanks a lot for the fix! Hope your PR is merged soon! I also noticed vue's pwa template has also the same problem so it's likely your fix will help them too. If you don't mind, I might as well do it myself. \nCheers! . ",
    "helaili": "I found out that webpack.prod.conf was not loaded when NODE_ENV === 'production'. I've solved it as followed in dev-server.js : \njs\nvar webpackConfig = process.env.NODE_ENV === 'testing' || 'production'\n  ? require('./webpack.prod.conf')\n  : require('./webpack.dev.conf'). Sure @srodriki, go ahead. . ",
    "lodemuyl": "@helaili  thanx a lot man \n. ",
    "jmbeach": "I'm still experiencing this issue.. ",
    "zeroone001": "I tested it.They're all right.@limichange. Thanks @LinusBorg . ",
    "xereda": "os: mac os sierra 10.12.3 (16D32)\nI was using the outdated vue-cli. I created a new project after updating the vue-cli and now, using webpack 2, I no longer have the problem.. ",
    "matrunchyk": "vue -V\n2.8.1\nIn my code I have:\nVue.config.performance = false;\nVue.config.devtools = false;\nVue.config.debug = false;\nVue.config.silent = true;\nI run yarn run production: \nnode node_modules/cross-env/bin/cross-env.js NODE_ENV=production node_modules/webpack/bin/webpack.js --progress --hide-modules --config=node_modules/laravel-mix/setup/webpack.config.js\nBut it doesn't help. I still able to see VueTools extension in Chrome console.. ",
    "GertTimmerman": "Sorry, got it: https://router.vuejs.org/en/essentials/history-mode.html. ",
    "ShootToThrill": "neither ./ nor /dist ,but /dist/ work. i don't know what happend  \nnow not only that project has this problem \nall of vue init webpack or vue init webpack-simple init project has this error\n\n. \u4e00\u8138\u61f5\u903c.jpg. Vue\u7248\u672c\uff1f  \u6211\u8fd8\u4ee5\u4e3a\u662fnode\u7248\u672c\u7684\u95ee\u9898\u5462 \n\u6211\u628anode\u5347\u7ea7\u52306.10\u540e\u6ca1\u95ee\u9898\u4e86\n\u4e0d\u77e5\u9053\u540e\u9762\u8fd8\u4f1a\u4e0d\u4f1a\u53c8\u51fa\u6bdb\u75c5\n\u4e4b\u524d\u628a\u9879\u76ee\u5220\u4e86\u91cd\u65b0clone\u4e0b\u6765\u518d\u8dd1\u5c31\u6ca1\u95ee\u9898\n\u7136\u540e\u540e\u4e00\u6bb5\u65f6\u95f4\u53c8\u590d\u53d1\n\u4e0d\u77e5\u9053\u8fd9\u6b21\u80fd\u575a\u6301\u591a\u4e45. \u6682\u65f6\u6ca1\u95ee\u9898\u4e86  \u90a3\u6211\u5148\u5173\u4e86. ",
    "cccRaim": "\u4ee5\u524d\u662f\u6570\u7ec4\u7136\u540emap\u6bcf\u4e2aloader\u7684\uff0c\u5982['style', 'css']\uff0c\u53ef\u662f\u4e0d\u77e5\u9053\u54ea\u4e2a\u7248\u672c\u5f00\u59cb\u5c31\u53ea\u80fd\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e86\u3002. ",
    "cycold": "\u6211\u4e5f\u662f\u78b0\u5230\u4e86\u8fd9\u4e2a\u95ee\u9898 \u5728\u5355\u72ec\u7684.scss\u6587\u4ef6\u4e2d autoprefix\u6ca1\u6709\u8d77\u4f5c\u7528 . Yeah, I have the problem too. I have to add postcss-loader to loaders\nNote: need to yarn add postcss-loader -D \n\n. ",
    "shalldie": "\u4f60\u592a\u68d2\u4e86\uff0c\uff0c\uff0c\u603b\u7b97\u8ba9\u6211\u627e\u5230\u4e2a\u53ef\u4ee5\u89e3\u51b3\u7684\u65b9\u5f0f. ",
    "BelinChung": "@yoyo837 \nvar postcssLoader = {\n    loader: 'postcss-loader',\n    options: {\n      sourceMap: true\n    }\n  }. ",
    "SallyOne": "\u4e0a\u8ff0\u4e24\u4e2a\u95ee\u9898\u90fd\u78b0\u5230\u4e86. ",
    "flyher": "@yoyo837 \nThank you.\nI change the version to  postcss-loader@1.3.3, the warning disappeared.. ",
    "mrignacio1231": "@simplesmiler Thanks so much. ",
    "iAlexanderMoon": "Thank you for the direction on getting this going... for me I also had to modify build/dev-client.js to have the __webpack_hmr requesting through the sub path by adding a path argument to the hotclient:\njavascript\nvar hotClient = require('webpack-hot-middleware/client?path=/app/__webpack_hmr&noInfo=true&reload=true')\nWhich if you may also want to consider for your configuration or documentation... Or if there is a better way of accomplishing the above please let me know. \n. FYI: eslint-config-vue was deprecated use eslint-plugin-vue-libs . I left this not note on 611 but it probably should have been here:\nFYI: eslint-config-vue has been deprecated use eslint-plugin-vue-libs. Okay I've made some improvements.\nI included a settings.js in my src directory and load that and use the spread operator to merge the settings and window.environment\nsrc\\settings.js\n````\nconst defaults = {\n    foobar: 'bar',\n    foobaz: 'baz'\n}\nconst settings = {...defaults, ...window.environment}\nexport default settings; \nstatic\\env.js only needs to override when necessary\nwindow.environment = \n{\n    foobar: 'barbaz'\n}\n````\nand now the application can \nimport settings from '@/settings'\nconsole.log(settings.foobar)\nconsole.log(settings.foobaz)\n---- output ----\nbarbaz\nbaz\nThis seems to be working. \nIt would be nice if the static script was injected into the index.html so it could take whatever assetsPublicPath and assetsSubDirectory is set too. \nI'm not sure how to go about that.\n. ",
    "BafS": "How I finally did it (I serve my backend from an other server)\nbuild/dev-client.js\njs\n// add the full path \"path=http://localhost:8080/__webpack_hmr\"\nvar hotClient = require(\n    'webpack-hot-middleware/client?noInfo=true&reload=true&path=http://localhost:8080/__webpack_hmr')\nbuild/dev-server.js\njs\nvar devMiddleware = require('webpack-dev-middleware')(compiler, {\n  publicPath: webpackConfig.output.publicPath,\n  headers: { 'Access-Control-Allow-Origin': '*' }, // add headers for CORS\n  quiet: true\n})\nconfig/index.js\njs\n...\nassetsSubDirectory: 'static',\nassetsPublicPath: 'http://localhost:8080/', // put the full path here too (for hot-updates)\nproxyTable: {},\n.... ",
    "fabiosussetto": "@BafS 's solution should be added to the README. ",
    "acrolink": "Any idea how to make the paths in the router js file respect the base url app ?. ",
    "weituotian": "how to set the baseurl on production?. ",
    "schettino72": "For anyone looking into how to this with webpack-dev-server.\nYou just need to change assetsPublicPath and proxy everything that does not match it.\nassetsPublicPath: '/app/',\n    proxyTable: {\n      '!/app/**': {\n        target: 'http://localhost:5000',\n        changeOrigin: true\n      }\n    },\n. dev-server.js file is injected into client? surprising.... I checked the code and saw no change regarding this. I saw a commit on dev-client.js... wondering if you got confused somehow.\n. ",
    "robert197": "Thanks @schettino72 but i still cant enable hot reloading when using proxy. ",
    "daltonamitchell": "Awesome, thanks @LinusBorg! \ud83d\udc4d . ",
    "pa1nt3r": "No, there is nothing running on Port8080 and i have tried to use other port but get the same result.. FYR,\n  I solved this issue by commented out the first line in build/dev-server.js file (//require('./check-versions')()) then it works fine. \n\nthe check-versions.js seems to return false value.\n. \n",
    "joemanfoo": "So - here's the strangest.  One windows 10 machine works and another doesn't - all pointing to the same exact code.  It's literally the same exact code since its on a network drive.\n@pa1nt3r  mentioned commenting out the require check-versions pointed me to something to look at/into and it seems as though on one machine it cannot run the \"npm --version\".\nI believe the root of the problem is that I've a bad value in my path var and get \"The system cannot find the path specified.\" which is making the:\nrequire('child_process').execSync('npm --version').toString().trim()\nto throw an error.\nI've ran through my PATH var manually and cannot find a reference in there that's bad so something somewhere else is failing.\nStill searching for the culprit but in the meantime folks who are curious can safely comment out that line of code @pa1nt3r mentions above as long as you know you have the node and npm requirements met.\nHope this helps someone - know it's bugged the you know what out of me.\n. I've ran into this same \"issue\" on a completely clean install: vue init webpack\nAnd then running npm run unit on windows.\nReplacing vue-jest to jest-vue-preprocessor \"fixed\" the issue\nversions:\n\"vue\": \"^2.5.2\",\n\"vue-jest\": \"^1.0.2\",\n. ",
    "mikeconstable": "This is an old thread, but if it helps anyone else, I fixed the failing \"npm run dev\" command by  changing the port to 3000 on line 26 in /config/index.js.. ",
    "dimirc": "Maybe its related to an issue I'm also having when running unit too https://github.com/vuejs-templates/webpack/issues/563#issuecomment-283876151. I hava similar issue, when I run npm run dev all is ok, but when running unit test npm run unitI get this error:\n```\nERROR in ./~/css-loader?{\"minimize\":false}!./~/sass-loader/lib/loader.js?{}!./src/assets/styles/main.scss\nModule not found: Error: Can't resolve './assets/img/bg_network_purple.svg' in '/Users/wladimircoka/Documents/Develop/logahub/src/assets/styles'\n @ ./~/css-loader?{\"minimize\":false}!./~/sass-loader/lib/loader.js?{}!./src/assets/styles/main.scss 7:209572-209617\n @ ./src/assets/styles/main.scss\n @ ./src ^.\\/(?!main(.js)?$)\n @ ./test/unit/index.js\n03 03 2017 01:20:52.238:INFO [karma]: Karma v1.5.0 server started at http://0.0.0.0:9876/\n03 03 2017 01:20:52.240:INFO [launcher]: Launching browser PhantomJS with unlimited concurrency\n03 03 2017 01:20:52.251:INFO [launcher]: Starting browser PhantomJS\n03 03 2017 01:20:53.135:INFO [PhantomJS 2.1.1 (Mac OS X 0.0.0)]: Connected on socket zQeZT4atqRJZ8DNgAAAA with id 75929886\nPhantomJS 2.1.1 (Mac OS X 0.0.0) ERROR\n  Error: Cannot find module \"./assets/img/bg_network_purple.svg\"\n  at webpack:///src/assets/styles/main.scss:7:0 <- index.js:16980\nPhantomJS 2.1.1 (Mac OS X 0.0.0): Executed 0 of 0 ERROR (0.187 secs / 0 secs)\n```\nThe problem is with the background image at my main.scss but only when testing not in dev:\n.background-login {\n  background-image: url(assets/img/bg_network_purple.svg);\n} \nPD: Maybe related to https://github.com/vuejs-templates/webpack/issues/208#issuecomment-271698287. @LinusBorg @yyx990803 any chance you could give me some quick hint of where I might need to check to fix this?. I solve my problem making the pattern less permissive since it was checking not only test files but all files and this was causing me the problem . ",
    "CaoLeilei": "\u8fd9\u4e2a\u95ee\u9898\u597d\u50cf\u53c8\u51fa\u73b0\u4e86\nThere are multiple modules with names that only differ in casing.\noutput.js:103\nThis can lead to unexpected behavior when compiling on a filesystem with other case-semantic.\nUse equal casing. Compare these module identifiers:\n* D:\\My Document\\github\\nodeCMS\\node_modules\\_css-loader@0.28.7@css-loader\\lib\\css-base.js\n    Used by 1 module(s), i. e.\n    D:\\My Document\\github\\nodeCMS\\node_modules\\_css-loader@0.28.7@css-loader\\index.js?{\"minimize\":false,\"sourceMap\":false}!D:\\My Document\\github\\nodeCMS\\node_modules\\_element-ui@1.4.7@element-ui\\lib\\theme-default\\index.css\n* d:\\My Document\\github\\nodeCMS\\node_modules\\_css-loader@0.28.7@css-loader\\lib\\css-base.js\n    Used by 2 module(s), i. e.\n    d:\\My Document\\github\\nodeCMS\\node_modules\\_css-loader@0.28.7@css-loader\\index.js?{\"minimize\":false,\"sourceMap\":false}!d:\\My Document\\github\\nodeCMS\\node_modules\\_vue-loader@13.3.0@vue-loader\\lib\\style-compiler\\index.js?{\"vue\":true,\"id\":\"data-v-15375b6e\",\"scoped\":false,\"hasInlineConfig\":false}!d:\\My Document\\github\\nodeCMS\\node_modules\\_vue-loader@13.3.0@vue-loader\\lib\\selector.js?type=styles&index=0&bustCache!d:\\My Document\\github\\nodeCMS\\vue-src\\App.vue\noutput.js:103\n warning  in D:/My Document/github/nodeCMS/~/_vue-style-loader@3.0.3@vue-style-loader/lib/listToStyles.js. ",
    "ArrowBaZ": "~~Same issue,~~\n~~Vue is required by Webpack and expose a default property, not directly Vue~~\n~~console.log(Vue)~~\nObject\n  __esModule: true\n  default: Vue$2 (options)\n~~It's more related to Vuejs than vue webpack template~~\n~~Workarround: use 2.1.x~~\n    ~~\"vue\": \"2.1.x\"~~\n    ~~\"vue-template-compiler\": \"2.1.x\",~~. @wenkanglin add vue in your alias\nmodule.exports = {\n    entry: {\n        ...\n    },\n    output: {\n        ...\n    },\n    resolve: {\n        ...\n        alias: {\n            'vue$': 'vue/dist/vue.common.js',\n            'src': resolve('src')\n        }\n    },. ",
    "wenkanglin": "@ArrowBaZ it does work. But I don't konw what's the difference between vue.common.js and vue.esm.js. ",
    "hackuun": "@ellipticaldoor this doesn't solve anything.\nWhy this issue is closed? How to config to solve this errors? I got this errors with 2 packages already.\nERROR in static/js/vendor.65207c1cf20abf7ff70e.js from UglifyJs\nUnexpected token: punc (() [./~/vue-particles/src/vue-particles/index.js:6,0][static/js/vendor.65207c1cf20abf7ff70e.js:33623,12]. I don't understand why this issue is closed? I have the same error with 2 other packages.\n@myst729 1 solution doesn't work. I got tons of this kind of messages\n\u2838 building for production...[BABEL] Note: The code generator has deoptimised the styling of \"/home/***/Documents/WORK/EXAMPLES/vue-examples/node_modules/lodash/lodash.js\" as it exceeds the max of \"500KB\".\nAnd then I wait 5 minutes and cancel building. It's just freezes. . @LinusBorg cool, but if I add resolve('node_modules/menu-aim') then I got other kind of Error\nERROR in ./~/menu-aim/src/index.js\nModule build failed: Error: Couldn't find preset \"es2015\" relative to directory \"/home/***/Documents/WORK/EXAMPLES/vue-examples/node_modules/menu-aim\". @LinusBorg I had errors with both of this packages. It worked with vue-particles, but menu-aim throws this error. . Thanks, @LinusBorg . ",
    "psycokenisis": "Sorry. My mistake. Closing this PR. I didn't mean to submit a PR to the official repo.. ",
    "gstrobl": "Two dots same error!. Sorry, I copied the wrong error:\n./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=data-v-7d52047c!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\nModule not found: Error: Can't resolve '../../images/background_test.jpg' in 'D:\\webprojects\\gs-portfolio\\src'\n @ ./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=data-v-7d52047c!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue 7:64087-64130\n @ ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js?id=data-v-7d52047c!./~/sass-loader/lib/loader.js!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n @ ./src/App.vue\n @ ./src/main.js\n @ multi ./build/dev-client ./src/main.js\nI think its a webpack problem.\nI imported my main.scss file in App.vue\n\n@import './assets/styles/main.scss';\n. ",
    "vanchisel": "I have a similar error with vue-style-loader. Searches show it is webpack. Cannot find 'module' when trying to load background image from css/scss as @dimirc. It's being HOURS and many searches. I won't why the an example in vue.js package weren't included?. ",
    "joohncruz": "I have the same problem, I tried to replicate the problem in the project https://github.com/joohncruz/poc-vuejs-webpack-global-style.\n\nsrc\nassets\nicons (ico_atalho.png)\n\n\ncomponents\nHello \nBB\n\n\nstyle\nstyles.scss \n\n\n\nstyles.scss \n$auxiliary-color: #1EB6CD ;\n.teste-url {\n  background: $primary-color;\n  background-image: url('./assets/icons/ico_atalho.png'):\n}\nError response: \nurl('./assets/icons/ico_atalho.png'):  Error response\n```\nThis relative module was not found:\n\n./assets/icons/ico_atalho.png in ./~/css-loader?{\"minimize\":false,\"sourceMap\":false}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-059a7fc7\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":false}!./~/sass-resources-loader/lib/loader.js?{\"resources\":\"D://Projetos//github//poc-vuejs-webpack-global-style//src//assets//styles.scss\"}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/Hello.vue\n```\n. \n",
    "kamiyar": "if help\ncheck this out\nhttps://github.com/vuejs-templates/webpack/issues/208#issuecomment-279959781. ",
    "mlachance": "I was having the same problem, until i realised that I need to use a tilde (~/) in all (S)CSS references instead of (./). This is not well documented in the Vue CLI chapter on static assets. . ",
    "eard7": "Had the same issue when integrating vue-styleguide with some components that required some fonts from sass file. The solution provided by @mlachance did the trick for me.. ",
    "skyfore": "\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48 router \u5b9a\u4e49\u7684\u8def\u5f84\u5fc5\u987b\u8981\u52a0\u4e0a /#/ \uff0c\u662f\u4e0d\u662f\u5047\u5982\u8981\u8fbe\u5230 \u53bb\u6389#\u5c31\u9700\u8981\u4f7f\u7528 \u670d\u52a1\u5668\u7aef\u6e32\u67d3\uff1f. \u5341\u5206\u611f\u8c22\uff01. ",
    "jmanuelrosa": "I have the same problem, but with postcss :(. I change this in test/unit/index.js\nconst srcContext = require.context('../../src', true, /^\\.\\/(?!main(\\.js)?$)/)\ninstead of this\nconst srcContext = require.context('../../src', true, /^\\.\\/(?!main\\.js$).+\\.(js|vue)$/i)\nand works good !!!! :smile: . I'm solve it adding this to webpack.test.conf.js\nmodule: {\n    rules: [\n      {\n        test: /\\.pug/,\n        use: [\n          'html-loader',\n          'pug-loader?sourceMap'\n        ]\n      },\n      {\n        test: /\\.css$/,\n        use: [\n          'css-loader?sourceMap'\n        ]\n      }\n    ]\n  },\nbut now, I have another problem with external CSS\nERROR in ./src/assets/css/global.css\nModule not found: Error: Can't resolve './colors' in '/home/jmanuelrosa/Developer/personales/vue-course/movues/src/assets/css'\n @ ./src/assets/css/global.css 3:10-83\n @ ./src ^\\.\\/(?!main(\\.js)?$)\n @ ./test/unit/index.js. I solve it adding more loaders :D\nmodule: {\n      rules: [\n        {\n          test: /\\.pug/,\n          use: [\n            'html-loader',\n            'pug-loader?sourceMap'\n          ]\n        },\n        {\n          test: /\\.css$/,\n          use: [\n            'style-loader',\n            {\n              loader: 'css-loader',\n              options: {\n                importLoaders: 1\n              }\n            },\n            'postcss-loader'\n          ]\n        }\n    }. I solve it with this\nconst Constructor = Vue.extend(MyComponent)\nvm = new Constructor({\n    data: {\n        myProp: 10\n    }\n}).$mount()\nor this\nconst Constructor = Vue.extend(MyComponent)\nvm = new Constructor({\n    propsData: {\n        myProp: 10\n    }\n}).$mount(). ",
    "gera2ld": "OK, I have updated the PR.. ",
    "wangliangyu": "i\u2018m also confused, we have set components as { App },why need set template as '' again?. soga\uff0cthanks\n\u53d1\u81ea\u6211\u7684 iPhone\n\n\u5728 2018\u5e741\u670818\u65e5\uff0c01:35\uff0cThorsten L\u00fcnborg notifications@github.com \u5199\u9053\uff1a\ncomponents: is just making it aware of those components. The template defines which components to render.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "nicholaslee119": "decline. ",
    "amgadserry": "fixed with node ./node_modules/phantomjs-prebuilt/install.js\n. ",
    "gebrits": "Investigating a bit further changing from #cheap-module-eval-source-map to #cheap-module-source-map seems to solve it for now. Leaving this open for a while to see how it goes.. wrong close. ",
    "tsneed290": "Had similar issues. Changed \"#cheap-module-eval-source-map\" to \"#source-map\" in webpack.dev.conf.js and I'm good now.\nI also have this issue when running unit tests in Chrome browser (which uses #inline-source-map). Changing that to \"#source-map\" didn't seem to work. Hoping someone has a good workaround for that case :)\n. ",
    "TheMechanic": "@tsneed290 : I'm not working with Vue currently, but i have a very similar config. I encoutered the same issues. the devTool param is not the same for dev and for test, because test use karma-sourcemap-loader, and I'm pretty sure that prevent to use the same config :(\nFor me breakpoints with \"#inline-source-map\" in test runs, but i have some weird behaviours, and no way to access variables in console, no mapping there.... ",
    "doorkey": "Exactly having the same issue - created a new single-file componenet and cannot import in the router.vue saying that the variable is defined but not used.  Any directions guys?? Thanks :) . ",
    "erdiegoant": "Did you add your NodeList Component in the App component export? Like so:\njavascript\nexport default {\n  components: {\n    NodeList\n  },\n  // Your code\n}. ",
    "imrefazekas": "Had to refine my babel config:\n{\n    \"presets\": [\n        [\"es2015\", { \"modules\": \"commonjs\" }]\n    ]\n}. ",
    "johnathankent": "@Joshfindit \nHere is what you are looking for: http://vuejs-templates.github.io/webpack/backend.html\nThe variable to change for the \"static\" directory name is in:\nconfig > index.js. ",
    "QingWei-Li": "Any progress?. ",
    "ronjouch": "@asafyish looks good to me, and works as expected here. Thanks! Proposing as PR https://github.com/vuejs-templates/webpack/pull/603 with this fix.. > \"When you do this make sure to also include .vue in the regex check, otherwise this will cause issues with css that's extracted from vendor .vue files during build. Found this out the painful way.\"\n@BartCorremans thanks for the tip. Have you been running this without problem for some time? Should I just amend my PR with /\\.(css|js|vue)$/.test(module.resource) and call it a day?. Alright, leaving this without |vue for now. @BartCorremans (or reviewers considering merging this): if you become confident it should be added, ping me here and I will amend the fix.. > \"On second thought: Wouldn't any and all CSS be extracted into app.css anyway in production, since we use ExtractTextPugin?\"\n@LinusBorg no, see below: with the patch, vendor css is indeed separated into vendor.css, and is no longer present in app.css (see sizes below). My understanding of the pipeline is young, so I will be of little help explaining the behavior.\n(Partial) output of webpack for npm run build, before patch:\nstatic/css/app.10c6a273cc2d92109a91a9d5195cfa92.css     139 kB       1  [emitted]         app\nOutput of webpack for npm run build, after patch:\n```bash\n       static/css/app.5c407d2ab1bf358d9d1390d26f4a2fec.css     1.6 kB       1  [emitted]         app\n    static/css/vendor.12f4a531022e30ef8a191af027124cfb.css     138 kB       0  [emitted]         vendor\n``. @LinusBorg nothing has been \"battle-tested\" on my side, sorry, I moved on to other things. Maybe @BartCorremans (who originally suggested addingvue` to the regex) can comment, but I'm afraid I will no longer be very helpful here.. ",
    "BartCorremans": "When you do this make sure to also include .vue in the regex check, otherwise this will cause issues with css that's extracted from vendor .vue files during build. Found this out the painful way.. This is something I just stumbled upon today when importing a third-party .vue file. The generated output seems ok with this change but it's not something that I've been using in production for an extended time.. In my setup I changed the minChunks regex to the following (less optional):\n/\\.(js|vue|css|less)$/\nThis works pretty well for extracting CSS both from third-party .vue files and from standalone CSS files that you require().. ",
    "fvsch": "Possible duplicate of: https://github.com/vuejs-templates/webpack/issues/544\n(I don't read Chinese but it seems similar.). ",
    "matheusgrieger": "Got this problem as well. Importing any SCSS file, though loads them correctly, does not autoprefix them.\nBut above solution by @cycold works like a charm, thank you!. I got it working by moving all variable declarations to a variables.scss file and importing it in every file that makes use of those variables. Not ideal, but works.. I'll check it out, thank you!. ",
    "ozguruysal": "Yes the solution from @cycold works great. However you get a warning pointing to https://github.com/postcss/postcss-loader#sourcemap if you have sourceMap set to false in config/index.js that is the default setting.\nWould be nice if this feature came out of the box as it's kinda expected result.. ",
    "KagamiChan": "~~In @cycold 's code other loaders are pushed to the loaders array, resulting something like [cssLoader, postcssLoader, ...otherStyleLoader], so I try inserting postcssLoader at last place.~~\nEDIT: my code is not correct.. @gluons agreed, you're right, edited my code. IMO published packages are assumed to be transpiled, for your case you may add this package in you babel-loader's config here https://github.com/johnwebbcole/vue-webpack-bable-issue/blob/master/build/webpack.base.conf.js#L47. @johnwebbcole This assumption is not a rule, but if you want your code work out of box on major platforms and benefit from bleeding edge ES at the same time, a transpilation seems necessary. Anyway I agree that things could totally change sometime.\nAs per your issue, you may try appending lib's path in include option, use a custom node module resolve function or simply require.resolve\ninclude: [resolve('src'), resolve('test'), require.resolve('pretty-bytes')]\nAs I don't have IE 11 nor any legacy browsers at hand, I don't know if this eventually works for you, but the arrow function seems disappeared. This often indicates that an error has been thrown during webpack compilation. You may read your terminal output for more detail.. I used to disable this rule by adding eslint-disable for each vuex file, and your config seems better. I think we could use eslint conf's overrides field to make a finer restriction.. Have you tried adding postcss-loader in your build/utils.js?\nSomething like this:\nin exports.cssLoaders\n```js\n...\nvar postcssLoader = {\n    loader: 'postcss-loader',\n    options: {\n      plugins: [\n        autoprefixer,\n      ],\n    },\n  }\n// generate loader string to be used with extract text plugin\n  function generateLoaders (loader, loaderOptions) {\n    var loaders = [cssLoader]\nif (process.env.NODE_ENV === 'production') {\n  loaders.push(postcssLoader)\n}\n\nif (loader) {\n  loaders.push({\n    loader: loader + '-loader',\n    options: Object.assign({}, loaderOptions, {\n      sourceMap: options.sourceMap\n    })\n  })\n}\n\n...\n```. Are you using template literals in your code?\nI don't get the point why you don't need babelrc file, vue-loader itself also uses this file.. ",
    "gluons": "@KagamiChan Your code seems incorrect. @cycold is right. postcss-loader shouldn't be added at the last.\nFrom postcss-loader's docs: \n\nUse it after css-loader and style-loader, but before other preprocessor loaders like e.g sass|less|stylus-loader, if you use any.. #657 may help you. \ud83d\ude42 \nIt helps me too. \ud83d\ude04 . \n",
    "hanzhenlong": "@cycold I tried the solution but did not work\n\nanyone can help? tks. ",
    "diachedelic": "I ran vue init webpack my-project just now, and was able to reproduce @fvsch 's 3rd example:\n```html\n src/App.vue \n\n@import './assets/test1.css';\n.test1b { display: flex; }\n\n\n@import './assets/test2.scss';\n.test2b { display: flex; }\n\n```\nResult:\n```css\n.test1{\n  display:flex\n}\n.test1b,\n.test2,\n.test2b{\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex\n}\n```\nThis is an issue for using 3rd party Vue components which import plain css.. Does vue-cli cache the webpack template, or check for the latest every time?\nHow do I actually check the version/changeset of the template I installed?\n\nOn 14 Nov 2017, at 6:39 pm, Thorsten L\u00fcnborg notifications@github.com wrote:\nHm, that's weird. Postcss is active for .css files since yesterday, so airport fixer should be applied. I will check this out.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub https://github.com/vuejs-templates/webpack/issues/600#issuecomment-344171222, or mute the thread https://github.com/notifications/unsubscribe-auth/AAS8wEt0ZCuhcFmGU6hetmYMyh6GRw-tks5s2UOqgaJpZM4MeO72.\n\n\n. Ah then it is broken in v1.2.1. Yes that fixes it!  \nDiscussion of css-loader's importLoaders option. ",
    "kirkgrover": "@ozguruysal and @tfsimondouglas, I was getting the same sourcemap warning.  Building on @cycold's solution, you can get the warning to go away by adding the sourceMap option to postcssLoader in utils.js:\njs\nvar postcssLoader = {\n    loader: 'postcss-loader',\n    options: {\n        sourceMap: options.sourceMap\n    }\n}. ",
    "zzk220106": "const postcssLoader = {\n    loader: 'postcss-loader',\n    options: {\n      minimize: process.env.NODE_ENV === 'production',\n      sourceMap: options.sourceMap\n    }\n  }\n// generate loader string to be used with extract text plugin\n  function generateLoaders (loader, loaderOptions) {\n    const loaders = [cssLoader, postcssLoader]\n    if (loader) {\n      loaders.push({\n        loader: loader + '-loader',\n        options: Object.assign({}, loaderOptions, {\n          sourceMap: options.sourceMap\n        })\n      })\n    }\neg: my code did not work, help tks!. this code maybe had other problem , i not kook at. anyone can help me ,tks. ",
    "doppelmutzi": "Ok, I found a solution based on this webpack docu page https://webpack.js.org/api/node/#error-handling. With webpack CLI (webpack-simple) no extra work is required. For this template extra work is required because the Node API is used.\nTherefore, I added the following condition to build.js:\nwebpack(webpackConfig, function(err, stats) {\n    // ...\n    if (stats.hasErrors()) {\n        process.exit(1);\n    }\n}\n. ",
    "everystone": "I just keep mine in /static/.\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/static/bootstrap.min.css\">. The problem was webpack not transpiling my module to es5 before PhantomJS tried to load it.\nSolved by adding the package to the includes of babel-loader in webpack.base.conf.js\n  {\n    test: /\\.js$/,\n    loader: 'babel-loader',\n    include: [resolve('src'), resolve('test'), resolve('node_modules/my-package-name')]\n  },\n\n. ",
    "Christilut": "I usually import mine in App.vue in a SCSS style block:\n<style lang=\"scss\">\n@import 'src/assets/css/mycss_lib.css';\n</style>\nYou'll need the scss loader and node-sass for this.. Same here\nNode 8, npm 5.0.2\nStarts fine, after about 10 seconds I get the HMR error:\nGET http://localhost:8080/__webpack_hmr net::ERR_INCOMPLETE_CHUNKED_ENCODING\nReverting back to Node 7.9.0 for now. I have the same thing.\nnpm run dev\npress Ctrl-C\nreload page and its still running\nIn order to really stop it I have to run taskkill /F /IM node.exe\nWindows 10\nGit bash\nnode 8.1.4\nwebpack 2.3.3\nwebpack-dev-middleware 1.11.0\nEdited: meant webpack 2.3.x. ",
    "IvRRimum": "I did it like this:\nmain.js:\n``\n// The Vue build version to load with theimport` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nrequire('../node_modules/bootstrap/dist/css/bootstrap.min.css')\nrequire('../node_modules/font-awesome/css/font-awesome.min.css')\nrequire('../node_modules/simple-line-icons/css/simple-line-icons.css')\nrequire('../node_modules/bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.min.css')\nrequire('./assets/layout3/css/layout.min.css')\nrequire('./assets/layout3/css/themes/default.min.css')\nrequire('./assets/layout3/css/custom.css')\nrequire('./assets/css/components.min.css')\nrequire('./assets/css/plugins.min.css')\n```. ",
    "simonknittel": "Just started using/experimenting with webpack and did install normalize.css with npm install normalize.css and then imported it with import 'normalize.css'; and it's working. Do I understand something wrong here or why do you try to manually find the path to the node_modules directory?. ",
    "dirkraft": "For the record, in a project set up with the vue cli, with\nnpm install --save semantic-ui-css\nI did this in main.js\nes6\nrequire('semantic-ui-css/semantic.css'). ",
    "WowMuchName": "I'm having a lot of difficulties importing stylesheets. I use a pure typescript setup based on this repo. I can see in the webpack output that the stylesheets are packaged into the bundle but they are not applied in the app.\nThe only (non-static) thing that worked was importing them via scss as @Christilut suggested.\nIn my personal opinion webpack can get really complicated and to me it is often unclear why and how the config-snipped I just grabbed from the internet actually works. Letting the scss processor just merge everything together and present it as one unit to webpack seems advantageous to avoid a lot of pitfalls when it comes to configure webpack properly.. ",
    "ErikAGriffin": "If anyone else is trying to import css cleanly and hitting a \"Failed to compile\" error, make sure you've included a loader in your webpack config.\nSo in my main.js I have import 'normalize.css';, and the following less/css loader set up in webpack:\n{\n                test: /\\.(css|less)$/,\n                use: [{\n                    loader: \"style-loader\" // creates style nodes from JS strings\n                }, {\n                    loader: \"css-loader\" // translates CSS into CommonJS\n                }, {\n                    loader: \"less-loader\" // compiles Less to CSS\n                }]\n            }\nThose are three separate packages,\nnpm install style-loader css-loader less-loader --save-dev -E. ",
    "patriciag18": "@WowMuchName Could you provide an example? I am having a similar issue with the styles.. ",
    "rajeevbbqq": "Simply on your component / main.js\n```\n</p>\n<p>require('@/assets/css/main.css')</p>\n<p>\n```\nIf fails,\nnpm install style-loader css-loader\nAt your webpack.config.js\nmodule: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [ 'style-loader', 'css-loader' ]   //  <=  Order is very important\n      }\n    ]\n  }\nAfter that on your main.js\nrequire('@/assets/css/main.css'). ",
    "Euphe": "I was using browserify and no solutions were working.\nI solved it by adding \"../node_modules\" to the path.\nNow my App.vue is like this:\n<template></template>\n<script></script>\n<style src=\"../node_modules/vue-multiselect/dist/vue-multiselect.min.css\"></style>\n<style></style>. ",
    "ajmas": "okay, that helped.. ",
    "jaraddlfisher": "This seems kind of rediculous to have to configure something as simple as a stylesheet.. Sorry Linus, \nI just started looking at Vue only a few days ago, and this is one thing I'm struggling with, as it seems many others have also.\nI agree that the import style blocks \"work\"\nI do experience the \"Flash of unstyled content\" as described  here\nI've followed the loader instructions https://vue-loader.vuejs.org/en/configurations/extract-css.html, \nbut I havent played with it enough to understand if this will load that stylesheet in every component.\nCan you shed some light on this?\n  . I'm certain that's my problem, Thanks!. ",
    "barakat-turki": "In main.js import \"@/assets/sass/app.scss\"\nthen in your app.scss\nimport all css/scss components\nbut make sure you have node-sass sass-loader installed. ",
    "rafaeldiaz21": "I did this in my main.js and it's works:\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport materialize from 'materialize-css'\nimport 'materialize-css/dist/css/materialize.min.css'\nVue.use(materialize)\nnew Vue({\n  el: '#app',\n  router,\n  materialize,\n  components: { App },\n  template: ''\n}). ",
    "raisty": "Can somebody explain differences between @import, import and require in case of this issue (css) and webpack?. ",
    "itaditya": "@import is CSS/SASS syntax to include other files.\nimport is modern ES6 syntax to include modules.\nrequire is AMD/CMD syntax currently used by Node.. ",
    "dnhyde": "I struggled with similar issues in the end what worked for me was importing the css as suggested in Integrating and Using CSS Frameworks with Vue.js.\nIn my case I installed bulma: $ npm install bulma\nand imported it in my main.js file with import './../node_modules/bulma/css/bulma.css';\nHope this helps.. ",
    "crtjr64": "I'm using type script and its not working. Granted I'm very new to Vuejs and have decided to jump into the deep end using Bootstrap-Vue and Typescript, but the Carousel was not working because the css did not seem to be there even though I imported it using\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nAll other css, not in the npm_module is working and when I copied the css reference to the ClientApp folder in a css folder there, then it worked along with the custom css files located there using \nimport './css/bootstrap.css';\nEven though this works, I feel like its a hack, and that there's a better way to do this that's intrinsic to Vue and Bootstrap and TypeScript. Unfortunately, I haven't found it and documentation on this trio together is sparse. So, if anyone else has any ideas, I'd love to hear it.. ",
    "wcjr": "fwiw, here's what worked for me after npm install normalize.css\nwithin main.js:  import 'normalize.css';\nOR\nwithin App.vue:\n<style>\n@import '~normalize.css';\n...\nThe ~ was required in the <style usage.. ",
    "Rivk17": "Adding a required to the main js is also a great way so solve this\nrequire('./app/css/style.css');. ",
    "exmackina": "For Single File Components (with Vue.js v2) : \n<!-- my-component.vue -->\n<template>\n  <div>This will be pre-compiled</div>\n</template>\n<script src=\"./my-component.js\"></script>\n<style src=\"./my-component.css\"></style>\nhttps://vuejs.org/v2/guide/single-file-components.html#What-About-Separation-of-Concerns. ",
    "geabenitez": "\nI did it like this:\nmain.js:\n``\n// The Vue build version to load with theimport` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nrequire('../node_modules/bootstrap/dist/css/bootstrap.min.css')\nrequire('../node_modules/font-awesome/css/font-awesome.min.css')\nrequire('../node_modules/simple-line-icons/css/simple-line-icons.css')\nrequire('../node_modules/bootstrap-switch/dist/css/bootstrap3/bootstrap-switch.min.css')\nrequire('./assets/layout3/css/layout.min.css')\nrequire('./assets/layout3/css/themes/default.min.css')\nrequire('./assets/layout3/css/custom.css')\nrequire('./assets/css/components.min.css')\nrequire('./assets/css/plugins.min.css')\n```\n\n@IvRRimum  Are you using Metronic? this seems like version 4. is it? if so, have you been able to do it with verison 5?. ",
    "iamwwc": "none of these are what I want, I want write css in assets/ folder, and let webpack compile my scss, inject into html... ",
    "arga1234": "simply, you can add the css file that saved in assets with this : \nopen your App.Vue than write this : \n\n@import './assets/your_css_file_name.css';\n\nmake sure that you have install scss or sass loader in terminal with this --> npm install -D sass-loader node-sass\nturn off your node.js first install that loader and turn on it again . ",
    "demiro": "how can I import a dynamically file from environment variables?\nI would like to do something like this:\n<style lang=\"sass\">\n  @import\"./themes/\" + process.env.VUE_APP_CLIENT + \"/assets/scss/theme.scss\";\n</style>\nor\nimport \"./themes/\" + process.env.VUE_APP_CLIENT + \"/assets/scss/theme.scss\";\nHow can I accomplish this?. ",
    "karambafe": "for build: \nassetsPublicPath: '',. ",
    "Caraws": "then i got nothing...  not html not error. it's look like router is not working. thx for goncy . it's work. ",
    "goncy": "In config/index.js, set assetsPublicPath to https://caradelevigne.github.io/yourprojectname under the build key. ",
    "BillyPurvis": "Certain build files reference my name as part of testing, if required, I could remove these references. . @nickmessing A shame, but understandable. Would you prefer me to move the project from the fork to a few repository and continue development? . ",
    "andrebuchanan": "Would like to see an easy way of achieving this via config too. Angular 4 has an assets section for this purpose in .angular-cli.json.\n\"apps\": [\n        {\n            \"root\": \"src\",\n            \"outDir\": \"dist\",\n            \"assets\": [\n                \"assets\",\n                \"favicon.ico\",\n                \"index.jsp\"\n            ],\n         ....\n. ",
    "fvictorio": "Awesome! (It's the second one, npm run unit -- --no-single-run, btw). Thanks a lot.. ",
    "oswaldofreitas": "same here. When using @ or remove tild got 404. https://github.com/vuejs/vue-loader/issues/193#issuecomment-294504754. same here (with node v8 and npm 4.2). @nguyendv just change build/dev-server.js:\nvar hotMiddleware = require('webpack-hot-middleware')(compiler, {\n  log: () => { },\n  heartbeat: 2000 // <== add this line\n}). ",
    "indooorsman": "it doesnot work with less-loader@4.0.0\nless-loader@3.0.0  worked well. less-loader@4.0.2 has fixed this. +1. ",
    "RoamIn": "No, absolutely not.\nI just want to override z-index that setted in other plugin.\nFor example, I set z-index:  2 in a.js, then I import it at b.js, and override z-index:  3 in b.js, it wouldn't  work.. I write a simple demo.\n- npm run dev: You will see the blue sky\n- npm run build: You will see the tan land\n\nMaybe you would ask why set z-index in the DOM, because we cannot guarantee what component will be used. It just like using a component doesn't write with Vue.\n\nzIndexBug.zip\n. I noticed that the webpack/template/build/webpack.prod.conf.js file has been changed by yyx990803.\n\nonly use safe optimizations for css minification\n\nSo everything goes well. By the way, thanks.. ",
    "Vivi-wu": "Just run into the same problem. In my single .vue file, I set the modal-mask 'z-index:999', and alert 'z-index:1000' (both in scoped style tag)\n\nAfter building, they are changed into 1 and 2.\n\nI think it is the same issue as : https://github.com/ben-eb/gulp-cssnano/issues/8\nSince I search in the node_modules folder and find cssnano installed.\n\n. ",
    "jahanzaibsuleman07": "@LinusBorg should this be added in the Readme.md file as well.\nnew OptimizeCssAssetsPlugin({\n          cssProcessorOptions: {\n            safe: true\n          }\n        }),\n. ",
    "keepfool": "I have met this problem also, finally I downgrade my less-loader.. I find the solution. The latest vue-cli contains  a file .postcssrc.js, I think any postcss configuration should be wrote in this file.\nWe don't need to change the  webpack.base.conf.js and vue-loader.config.js, just keep what the vue-cli has generated.\nHere is my steps:\n\nupdate build/utils.js, pass 'postcss' to generateLoaders() for css and postcss.\n\nreturn {\n    css: generateLoaders('postcss'),\n    postcss: generateLoaders('postcss'),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass', { indentedSyntax: true }),\n    scss: generateLoaders('sass'),\n    stylus: generateLoaders('stylus'),\n    styl: generateLoaders('stylus')\n  }\n2. update .postcssrc.js\nmodule.exports = {\n  \"plugins\": {\n    \"postcss-import\": {},\n    \"postcss-css-variables\": {},\n    \"autoprefixer\": {}\n  }\n}\nIn my application, I use two plugins postcss-import and postcss-css-variables.. ",
    "stbaer": "It's fixed in the latest version of less-loader (4.0.2).\nsee issue#177. ",
    "akumatus": "Same here.\n\n. ",
    "ttian226": "same with me. ",
    "guixue": "Refer to https://github.com/vuejs-templates/webpack/issues/619 ,  keep vue-loader to 11.1.4; . ",
    "zdy350": "It still does not work. ",
    "ryan-kite": "Thanks keeping \"vue-loader\": \"11.1.4\", worked for me on this fresh install :). ",
    "damienix": "Using Node 6 instead of 4 helped me.. ",
    "Jack85": "happy to see that\n. ",
    "viktor-ku": "Too bad contributors here are too conservative to add a goddamn vuex. I personally install vuex every single time I am using this template. > webpack template is kept as simple as possible\nThere is webpack-simple template for this, I guess?. ",
    "saintplay": "\nwebpack template is kept as simple as possible\n\nit kinda doesn't make sense having support for \"simple\" features like e2e testing and lint but no vuex support. Also check #1212 . Uglify gave me some problems, for example using  https://github.com/vue-bulma/datepicker UglifyJS won't work because of the ES5 restrictrions. Yeah, sadly it seems like yarn doesn't support environment from cli at this moment\nHowever you can do something like this\n\nAdd this to you package.json scripts\njson\n\"scripts\": {\n    \"build:report\": \"cross-env npm_config_report=true node build/build.js\"\nJust run the script\nbash\nyarn build:report\n. This seems like a forum or Discord question.\nI suggest you to use https://github.com/Justineo/vue-awesome\n  . https://vuejs.org/v2/guide/join.html. You should definitely ask for help in the https://forum.vuejs.org or in https://chat.vuejs.org/. \n",
    "RichardFans": "you may need to upgrade your node, use node 6.10.1 instead.\nsee https://github.com/vuejs/vue-loader/issues/728. ",
    "byr-gdp": "\u521a\u9047\u5230\u8fd9\u95ee\u9898\uff0c\u79fb\u9664\u540e\u5c31\u597d\u4e86\u3002. ",
    "gorshkov-leonid": "Thank you. But I created https://github.com/gorshkov-leonid/vue-experiments/blob/master/test-vue/tsconfig.json but I do not know which settings can help me/ I used \"include\" option. And It is working in https://github.com/gorshkov-leonid/vue-experiments/tree/master/vue-ts-loader, but not working in test-vue. tsconfigs are equal.. I create thread in forum, but quiet yet...\nhttps://forum.vuejs.org/t/vue-webpack-and-typescript/8568. thank you!. ",
    "happilymarrieddad": "@LinusBorg is there a good way to pass env data to the javascript?. @andreiashu thanks so much man!. ",
    "andreiashu": "hi @happilymarrieddad \nfor build time env data passing you can add this line in the module.exports from ./build/webpack.base.conf.js (so it's included in dev, test and prod confs):\nmodule.exports = {\n...\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': {\n        'API_BASE_PATH': JSON.stringify(process.env.API_BASE_PATH)\n      }\n    })\n  ],\n....\nthen in your code you can use it: const apiBasePath = process.env.API_BASE_PATH || 'http://localhost:3333/api/admin'\nIf you want runtime env variable replacement you could build a simple server side script (in nodejs, php or your lang of choice) that serves a config file dynamically. The problem with that is that if you need some bootstrapping related config (like what the host of the API is) you end up in a chicken and egg situation).. ",
    "theoephraim": "Check out https://webpack.js.org/plugins/environment-plugin/ to avoid the awkward JSON.stringify and extra quotes. You can just specify which process.env keys you want to expose to the frontend.\nfor example: new webpack.EnvironmentPlugin(['NODE_ENV', 'DEBUG']). Just running into this in my app now.\nI had been going down the route of using https://webpack.js.org/plugins/environment-plugin/ to set up env vars normally (ie using dotenv or whatever setup the user would want based on which mode they are in) and then just choosing a subset of keys to expose to the front-end. Your approach seems to be more flexible, although a little more verbose (manually mapping \"build\" keys to \"exposed\" ones). Perhaps another config option to just choose which keys to expose could make sense?\nOn a related note - I'm not sure why yet, but the define-plugin does work within vue components while the environment-plugin does not.. Will something else be taking its place instead?\nIf not I think it is important someone work on the config setup.\nI'd be happy to take a crack at it.. Ah - didn't realize vue-cli 3 will be replacing.\nThanks for the info!. What is the reasoning behind the name \"externals\"?\nSince this file is loaded regardless of \"mode\" it seems like the place to store the default values that will get overwritten with mode/env specific values - hence maybe \"defaults\" would make more sense than \"externals\"?. a little nitpicky, but this fn name makes me think that ALL env vars will be stringified and exposed.. The naming of the variables dir here is also a little confusing. Aren't all your env vars and webpack config settings \"variables\"? Maybe config/exposed or config/public would be more clear that these are the variables that will be accessible to the build/browser.\nSimilarly, when I started using this template, I found the fact that config/index.js was mostly build-related configuration a bit confusing. Maybe rename to config/build.js or config/webpack? The more explicit  import would likely make it more clear. It could also be worth a quick review of what config lives in there vs what lives in the build directory in the various webpack config files.\nPerhaps config/index would be the file that loads various files and exposes the formats needed in different places throughout.. typo \"Your\". This flexibility is nice, but don't many people use multiple .env files (for different modes) to solve this problem?\nMaybe worth adding a note about using separate .env files as the \"switch\" rather than remapping in the config/variables files.\n. ",
    "sayhicoelho": "How do you change the environment variable from CLI? Is this possible?\nExample: npm run dev HOST=custom-host.dev PORT=8081. Sure!\nOn Windows you need to do:\n\nSET HOST=custom.dev\nSET PORT=8081\nnpm run dev\n\nThat is all! Thank you!. ",
    "Doeke": "I thought node was up to date but there's a bug in the windows installer so it was still on 4.4. Uninstalling node, and installing everything again fixed it.. ",
    "lethak": "The same is happening to me\nnode 6.9.2\nnpm 3.10.9\nsame node & npm version on Win7 & Debian 7\nnpm run dev > works fine on Windows, but I get a Segmentation fault on debian\nEDIT: I was able to get over it by rebuilding node-sass as mentioned here https://github.com/sass/node-sass/issues/1757. ",
    "awitherow": "@grantcarthew what are your most commonly manual done updates?. @LinusBorg would be great if you could link everything related to the changes you are making in this issue so that when people come here they have an idea of what is going on \ud83d\udc4d . ",
    "gdomaradzki": "I am not entirely sure what causes the problem, but when in dev environment, running npm run dev used to give me \"extract-text-webpack-plugin - loader is used without the corresponding plugin\", also this fixed the same problem to a group of friends.. Of course, will do it as soon as possible \ud83d\udc4d . ",
    "githubmann": "any progress?. ",
    "jsepia": "You were right in that the CSS @import was causing Debug.vue to be re-required as a CSS file. Adding the extension causes a linting error, but I was able to work around this by simply giving each SCSS file a unique filename (e.g. debug-styles.scss).. ",
    "lichinlichin": "I found that diff in .babelrc about 'presets'\nolder version is 'es2015' and the lasted version is 'env',\ninstalled babel-preset-es2015 and changed the .babelrc as older version, still not work.\nany other advice for me? thanks a lot.. Hi.\nI tried delete the 'node_modules' and installed all the package noce again, it works.\nlast but not the least, thank you.\n. ",
    "Ewocker": "I tried Object.assign in my project with the newest template and it did not show any error.\nAre you sure that it is the problem of Object.assign?\nDid you try install the dependency above and restart the dev server?. ",
    "codeofsumit": "argh yes the setting was disabled - thank you!. The more I dig into this, the more I think this feature is simply not named correctly.\nIf I pass \"real\" env vars to the build, for example like this:\n```\n// prod.env.js\nrequire('dotenv').config();\nmodule.exports = {\n  NODE_ENV: '\"production\"',\n  API_URL: process.env.API_URL,\n};\n```\nthe build will fail, I think because of the double quote string thing \ud83e\udd14 .\nI'd also question the name prod.env.js as this has nothing to do with production mode or not, it's simply the config that's included in the built files but shouldn't make an assumption about the environment it's running in. A staging environment will leverage the same build process as a production environment but with a different config.\nI'll spend the day trying to make this work and will spam results into this issue \ud83d\ude1b . Alright I made it work.\nI introduced .env files so I can easily deploy them with now or other cloud providers.\nI got two dotfiles, .env and .env.prod.\nThe files look like this:\n// .env\nAPI_URL='\"https://stage.github.com/api/\"'\n// .env.prod\nAPI_URL='\"https://github.com/api/\"'\nI include the .env file with the dotenv package locally in prod.env.js, which now looks like this:\n```\n// prod.env.js\nrequire('dotenv').config();\nmodule.exports = {\n  NODE_ENV: '\"production\"',\n  API_URL: process.env.API_URL,\n};\n```\nWith a regular build and deployment, I now get the config of .env.\nNow you have all the options to include .env.prod in your build.  The dotenv package will not throw an error, if the file is missing!\nFor example I utilize the environment variable features of now.sh which means I can deploy my app with now --dotenv=.env.prod.\nThis will parse and turn the .env.prod file into environment variables in my cloud instance / docker container / what ever - and then runs the build-process.\nThe build process looks for the .env file but its missing (remember, it's not local, it's in the cloud right now). But process.env.API_URL is getting it's value from the environment now \ud83c\udf89 .\nAnd boom - I got a build with different configs.\nObviously if you don't use now as a cloud, you have to figure out your own way to pass the other env file to your build. But this worked for me. Maybe it helps as a starting point.\nI'd still leave this issue open as I still think this build should provide help with that and make this process a bit clearer.\n. Holy fuck. I know my comment doesn\u2019t add anything useful but damn \ud83d\udc4f\ud83d\udc4f. I\u2019ll check this as soon as I can. Thanks for your work on this!!!. Wow again, I really appreciate you all are looking into this and advancing this template for our needs \ud83d\udc4d \ud83d\udc4f \nWhile I probably can't provide the extensive in depth code review you're looking for (sorry about that), here are some thoughts:\nThe modes are the different ways your app can run:\n\nnpm run build ( = production mode, NODE_ENV='production')\n\nI would recommend to rename \"production mode\" to \"build mode\" or \"shipment mode\". I think sentences like these causes confusion:\n\nRunning in production mode in a staging environment probably requires different environment variable values than in the production environment, etc.\n\nOther than that I agree with the split in modes and environments.\nA bigger topic\n\nStrategies for different build environments.\n\nMaybe I misunderstood but it looks like this setup again limits me to three different configs via .env vars.\nAPI_URL_DEV, API_URL_TEST and API_URL_PROD. And they all go into the same .env file which (in my experience) is not how env vars are used.\nIf the application is built in any other environment than my local computer, the env vars should come from the server/environment and it's the developers/teams job to make them available. There is no .env file in the repo (in fact, it should be in .gitignore by default).\nWhich makes me question the usecase of API_URL_DEV. If I deploy to a development-environment or QA-environment, the mode I run the application in doesn't matter. The app gets it's config via process.env and the environment is providing those configs.\nMode and environment should not be coupled IMO.\nIf a developer choses to build the application always locally and then deploys it to the different stages, THEN the configs need to be available locally - but again, the mode should not matter.\nInstead, a user should create multiple .env files which is a common practice afaik (we do it too).\nFor example:\n- .env for local development\n- .env.prod for a production environment\n- .env.int for an integration environment\n- .env.qa for an QA environment\nNow let's say I want to deploy the app to QA and go through the two options: build locally vs build on the server.\nBuild locally\nI run npm run build/dev --.env.qa which should pass the path of the specific .env file to the dotenv package. No matter which mode, it choses the correct .env file.\nBuild Remotely\nI deploy my app and run npm run build/dev on the server. There are no .env files available. The env vars of .env.qa are in the node process and available via process.env - no matter which mode, the config is correct.\nThis solution eliminates any assumption about how many environments there are and there is no need to namespace anything.\nHope this helps in any way - let me know if I missed something and misunderstood the solution.\nThanks again for your work and get well into the new year!\n  . hmm no. Brand new project, regular file system on a mac...\nIs there a project I can clone where you can verify Hot Module Reloading works? Then I can nail down if it's my project setup or something with my mac.\noh, and have a save and fun new years \ud83c\udf7e \ud83d\ude80 \ud83d\ude0a. @LinusBorg based on this comment I tried commenting out line 41 in build/dev-server.js and HMR is working again \ud83c\udf89 \njs\nhotMiddleware.publish({ action: 'reload' })\nNot sure what that means exactly I just tried what I found during research. Can you make any sense of that?. ah ok. Weird \ud83e\udd14. No I haven't updated myself in that particular project, but in other ones. Anyway:\nCan I remove that line without damage to the setup?. ",
    "ashleahhill": "Possibly related: https://github.com/vuejs/vue-cli/issues/394\n. I think the issue is in /node_modules/electron-to-chromium/index.js\nThey are mixing up full-chromium-versions with full-chrome-versions\nIf you have the luxury of a local build, you can hack it to make the build work.\n. Looks like the dev is releasing hotfixes now: https://github.com/Kilian/electron-to-chromium/commit/ab29cb73d4e24b053a70690bd8fa0b31dc7895f6. https://github.com/Kilian/electron-to-chromium/commit/f7b9b31cfdebfb48c69ede129b4376a3d9eb9f49. @Kilian Can confirm. Thanks. ",
    "Kilian": "Sorry about that. 1.3.2 should fix this.. ",
    "e2tox": "closing . ",
    "charliekassel": "Can you recommend a specific java version or range to use?. ",
    "aaronxie7": "I have the same problem\uff0cand i reinstall java to the latest version, then the error disappear.. ",
    "allgood2386": "I've run straight into this problem and am left guessing which version of java I need for my dockerfile here. I second the suggestion to document this and have a recommended version.. For what it's worth the following worked for me, seems attached to java 9 which is not installed in the default node image. If you are not using alpine this should work with node:8.9.1\n```\nFROM node:8.9.1\nJava Version\nENV  JAVA_VERSION=9.0.1 \\\n     JAVA_BUILD=11  \\\n     JAVA_HOME=/usr/lib/jvm/current-java\nOpenjdk  http://download.java.net/java/GA/jdk9/9.0.1/binaries/openjdk-9.0.1_linux-x64_bin.tar.gz\nRUN  apt-get update -y && apt-get upgrade -y\nRUN apt-get install wget tar bash -y\nRUN cd /tmp && \\\n    wget \"http://download.java.net/java/GA/jdk9/${JAVA_VERSION}/binaries/openjdk-${JAVA_VERSION}_linux-x64_bin.tar.gz\" && \\\n    tar xzf \"openjdk-${JAVA_VERSION}_linux-x64_bin.tar.gz\" && \\\n    mkdir -p /usr/lib/jvm && mv \"/tmp/jdk-${JAVA_VERSION}\" \"/usr/lib/jvm/openjdk-${JAVA_VERSION}\"  && \\\n    ln -s \"openjdk-${JAVA_VERSION}\" $JAVA_HOME && \\\n    ln -s $JAVA_HOME/bin/java /usr/bin/java && \\\n    ln -s $JAVA_HOME/bin/jshell /usr/bin/jshell\nRUN rm -rf $JAVA_HOME/.txt && \\\n    rm -rf $JAVA_HOME/.html && \\\n    rm -rf $JAVA_HOME/man && \\\n    rm -rf $JAVA_HOME/jmods/jdk. && \\\n    rm -rf $JAVA_HOME/include && \\\n    rm -rf $JAVA_HOME/lib/src.zip && \\\n    rm -rf /tmp/\n```\nI used https://github.com/rayyildiz/docker-java9 heavily so they did all the actual hard work =)\nI'm no java expert so I'm not sure if any of this is best practice.. ",
    "code1000": "@LinusBorg thanks you saved my life. ",
    "DRL9": "@aldencolerain \nHello! I can't get your method to work.\nI init a empty vuejs-template/webpack project, and I change the config like you. However, the test result isn't as expected.\nHere is my test code:\n```js\nconst expect = require('chai').use(require('chai-as-promised')).expect;\ndescribe('Test', () => {\n  it('test', () => {\n    //should failed\n    expect(Promise.resolve(1111)).to.eventually.equal(123);\n  })\n})\n``\nWhen I runnpm run unit`, the test pass successfully. . ",
    "maoberlehner": "Hey @LinusBorg,\nI know there is a separate PWA template https://github.com/vuejs-templates/pwa but I don't think this is the best way to handle this feature. Because, although the differences between this and the PWA template are / were very minor, the PWA template is constantly out of sync with this template, which is annoying. I considered to contribute my time to keep the PWA template in sync, but I don't think it would be the best use of my time, to be honest.\nI'd like to work on a pull request which adds (opt-in!) PWA support to this template, similar to how create-react-app handles this in its upcoming release (https://github.com/facebook/create-react-app/pull/3817).\nWould you consider accepting such a pull request, or should I work on the PWA template instead?. Thanks for your quick answer, didn't know about the big changes coming with vue-cli 3, I guess than It's fine :). @rayfoss no, I'm using Vue CLI for everything now.. ",
    "leohxj": "@LinusBorg \nIf we use webpack2 or 3, preset's module options could set  to false always?\n. ",
    "prograhammer": "@shailendher I've been using it successfully in a complex project in development, but the project has yet to be pushed to production. I think it makes most sense as default (since we are in a Vue context) and if any issues come about then of course we have the other linting choices we can use in the mean time. . Oh stupid me, I was extracting the css in the vendor vue component I imported, so of course it wasn't there. So I stopped extracting it in the vendor package and now the css is stuck in the vendor.[hash].js file and is not being included in the parent project's app.[hash].css.. ^ this is probably more ideal though, when thinking about caching. Since likely vendor styles would change less and you don't want that included in your app.[hash].css file which will get rehashed more often. But how would one go about extracting the styles from the vendor js bundle?  It seems the ExtractTextPlugin can't catch the chunks created implicitly from the minChunks function of CommonChunkPlugin as you can see here.. Hi guys,\nThis PR for fork-ts-checker-weback-plugin will TypeCheck and TSLint the typescript blocks in Vue SFCs. We're hoping to merge it in soon but you can test it out with the built repo: npm install git://github.com/prograhammer/fork-ts-checker-webpack-plugin.git#vue --save-dev.\nAlso, use the shorter lang=\"ts\" in the script section (I'll update that later). Check out the first post of that PR for complete information.\nAnd for VSCode there is TSLint Vue which works on your lang=\"ts\" script blocks in Vue files. Although you will still need that Vue declaration file sfc.d.ts for .ts files to understand .vue imports.\ncc @LinusBorg @yyx990803 \n  . ",
    "oskarkrawczyk": "@shailendher do you have npm installed? I don't, which means that it still potentially requires npm to be installed on your OS.. ",
    "visualcookie": "Fixed it myself by adding a directory root/, copying the files over there and extending webpack.prod.conf.js copytask with this:\njs\n    new CopyWebpackPlugin([\n      {\n        from: path.resolve(__dirname, '../static'),\n        to: config.build.assetsSubDirectory,\n        ignore: ['.*']\n      },\n      {\n        from: path.resolve(__dirname, '../root'),\n        to: config.build.assetsRoot,\n        ignore: ['.*']\n      }\n    ]). @askmike Thanks for the response. It did work, but my post is from last year, so yeah... version has changed and such.. ",
    "askmike": "For me the above solution from @visualcookie didn't work, getting this error:\n\nModule build failed (from ./node_modules/babel-loader/lib/index.js):\nError: [BABEL] /Users/pear/projects/gekko-develop/web/vue/src/main.js: .apply is not a valid Plugin property\n\ninstead I had to move the CopyWebpackPlugin config into a new file vue.config.js like so:\nconst CopyWebpackPlugin = require('copy-webpack-plugin');\n\nmodule.exports = {\n  configureWebpack: {\n    plugins: [\n      new CopyWebpackPlugin([\n        {\n          from: '../baseUIconfig.js',\n          to: 'public/UIconfig.js'\n        }\n      ])\n    ]\n  }\n}\n\nSee these docs: https://cli.vuejs.org/guide/webpack.html#simple-configuration\n. I know, I was just commenting my findings for future readers. Took me an\nhour to figure out, so maybe I can save the next person that time (until it\nchanges again).\nOn Wed, 11 Jul 2018, 08:00 Dean Hidri, notifications@github.com wrote:\n\n@askmike https://github.com/askmike Thanks for the response. It did\nwork, but my post is from last year, so yeah... version has changed and\nsuch.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/657#issuecomment-404002546,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AA7MD10DD-oPcGzdgQzCAzvLVX8xqOe6ks5uFUAWgaJpZM4M1sp5\n.\n. \n",
    "Gerben-T": "@askmike Extending the existing CopyWebpackPlugin with\nJS\n{\n    from: path.resolve(__dirname, '../root'),\n    to: config.build.assetsRoot\n}\nworked for me.\nJS\nnew CopyWebpackPlugin([\n        {\n            from: path.resolve(__dirname, '../static'),\n            to: config.build.assetsSubDirectory,\n            ignore: ['.*']\n        },\n        {\n            from: path.resolve(__dirname, '../root'),\n            to: config.build.assetsRoot\n        }\n]),\nVueJS ^2.5.2. ",
    "DanielPe05": "@LinusBorg I have been testing it. I'm using both .vue and .js component files and it seems to be just fine. I will keep testing, but so far so good. . @LinusBorg I'm deploying this to production on my project as it all seems to be working just fine locally. I will let you know if hell breaks loose once it gets there. But hopefully it all goes smoothly. Take it for a spin if you wish.. @jpoechill I ran into the same issue a while back, as I had other apps running simultaneously. I just submitted a PR which will help you with this issue (#669). It might not get merged as this is not something that everybody needs, but you can see what I did there. I hope it helps.. ",
    "mshahbazi": "I managed to make it work this way, however it sound like dirty:\nVuex = require('vuex')\ncomputed:\n  Vuex.mapState ['users']\nthe problem now is I cannot add more functions to computed:\ncomputed:\n   Vuex.mapState['users'],\n   myfunc: () -> this raises error\nobviously raises error. ",
    "ifraixedes": "Sorry, my fault.\nI'm talking about the environment variables which are in config folder, specified with the files ended with .env.js. No, I don't suggest to turn them into JSON.\nThose environment files are read in a few limited places, we only have to make a simple change in those.\nI wanted to check if there is a preference to keep them as they are, because I was thinking that you prefer that people understand that those values are injected in the web application by the Webpack DefinePlugin, but I see that there aren't any such preferences, so if it's fine for you I'll try to send a PR in a couple of weeks with such update and it will be more clear what changes are needed.\n. I thought that, but my rationales is, that those values come from filenames which, due their name, look that are designed to define environment variables, so I would treat them as if they were common environment variables, hence their values are strings.\nI prefer to narrow the options when developing, to avoid the chances to mess the implementation because people have the options of doing so. I'm down for allowing to pass code fragments in the environment variables because for me, such logic should be implemented in the application, hence which is left? Booleans, OK, not a big deal, I can make the change to pass booleans values if that's a concern\nObviously this is a personal opinion, so if you prefer to keep that flexibility, I understand.. ",
    "jpoechill": "Oh, great. Much appreciated :)) @DanielPe05. ",
    "wangpin34": "@LinusBorg I changed vue to older version and also downgraded some of depends packages. And now it could work.  \nBy the way, I tried the template(changed nothing) on my Mac book and it worked fine.. @LinusBorg  It's possible.  But I am not familar about this. \ud83d\ude1e .  Thanks for your kindly reply. . ",
    "XinHuaLuFang": "You should google webpack optimize.\nhttps://medium.com/@khanght/optimize-webpack-production-build-ec594242b222. ",
    "amranidev": "This is the solution.\nGo to build/utils.js and change\n scss: generateLoaders('css')  to  scss: generateLoaders('sass'). @LinusBorg Thanks \nI'm using vue-cli, the code line was css, so I've changed it to sass and it works now.\nbut while compiling, I got errors such like 'unexpected syntax' and stuffs like that, so I realize that I have to install sass-loader, and everything works out in the end.. ",
    "dwikip": "i see, this template is for single-page applications...\nthank you @grantcarthew . ",
    "NikitaLiashenko": "Thanks. ",
    "NoahCardoza": "This doesn't seem to work for me. My process.env is empty no matter what I do... I can't seem to figure it out. any ideas?. Actually, I figured it out, I didn't know WebPack used them like C #define statements. I was setting window.process = process so I could inspect it and inside of the object the env key was an empty object, but when I console.log(process.env) then I got the correct output. Until then I didn't notice it was all being replaced inline...\nThanks anyways!. I am having a similar problem, process.env is empty... even though I haven't touched the config files.... ",
    "Samuelfaure": "Sorry for commenting on a closed thread but this might help people with this issue :\nAs the last comment say, webpack manage process.env like a C #define, so if your process.env is empty you might just need to stop your dev server and restart it.. ",
    "JanCVanB": "I'm not super knowledgable when it comes to webpack and ES6 stuff, so I'll take your word for it! \ud83d\ude04 \nI'm a little confused how I successfully used Vuex multiple times before encountering this problem with the polyfill, and why others seem to get tripped up by it, too (https://github.com/vuejs-templates/webpack/issues/260). Perhaps the promise polyfill should be mentioned in the Vuex docs?\nThanks! Feel free to close this PR.. tuntime typo?\n. ",
    "mpbarlow": "Nevermind, for some reason I assumed it came with Sass support built in. For anyone else with the same question: npm install --save-dev node-sass sass-loader. ",
    "maxisacoder": "@mpbarlow @LinusBorg  what is the reason to assume that pre-configured sass supporting, why just put it into devDependency to avoid confusion for users. People who use template may be even not familiar with webpack and sass-loader. . ",
    "samburgers": "this would be a great thing to add in the Readme, or even as an option to install during the cli setup if possible?. ",
    "juliandavidmr": "You can use the next package vue-test-utils. ",
    "van-nguyen": "I'm aware of the feature, but want to automate and do this only in prod. Using the externals require modification to the index.html file directly which affects both dev and prod.. @LinusBorg If that's the case, than I have just wrote a plugin to do this https://github.com/van-nguyen/webpack-cdn-plugin\nI hope people in the same boat as me will find it useful :). @LinusBorg I have made a pull request for this, can you please take a look? https://github.com/vuejs-templates/webpack/pull/737\nCheers.. @Aladdin-ADD @nickmessing is this good enough to merge? Thanks.. @posva What's the main advantage of having them in the same file besides hacking for performance? Specially when http2 is on the rise.. I mean files are separate by nature and should be called as such. Putting them together and serving them in the same file is a \"hack\" just because of the limitations of http. When you use http2 for the better this actually hurts and you will need to \"unhack\" everything.. While I agree on most parts but by using a CDN you are contributing to the network of caches and in best case scenario your users won't even need to download the file (leaving gzip irrelevant) while helping other sites that uses the same CDN achieve the same. This helps distribute Vue and your other favorite libraries. To me this is huge savings, but I'm happy to leave this off by default. happy to discuss.. @posva I have made the option to default to false, can this please be reconsidered?. But vuex is not even part of the template?. The plugin is not smart enough to do that.. they will have to add it manually. For vue-router it's already part of the template, we can do. As we don't know what the user will add.. it can be anything right? The moment that you start adding stuff not part of the template, you will also be expected to make it work manually yourself because then it's just your own custom build.. please correct me if I'm wrong here?. The plugin is called WebpackCdnPlugin, this PR is mainly for the said plugin. vuex flag does not exist yet? it can be in another PR when it does?. It is related.. the plugin is the only one consuming the array.. and produce the cdn artefacts.. The purpose of this array is providing options for the said plugin.. nothing else... @posva sure, hope it's all good.. Think have to do this to prevent empty lines when #cdn is false.. @nickmessing acknowledged, and has been fixed. Thanks for that, good spot.. I've tested running vue init van-nguyen/webpack seems there is no empty lines, maybe it's smart enough to detect these things.. Good catch, acknowledged. I couldn't find any reference to vuex, however I have fixed for vue-router. Hope it's all good.. I'm confused, thought the {{#router}} switch is meant to do that? Are you suggesting to actually read the packages.json file directly and not by flag?. @posva is this what you meant?. ",
    "ravimittal84": "html-webpack-externals-plugin can be used for this.\nHere's how I used it:\nconst HtmlWebpackExternalsPlugin = require('html-webpack-externals-plugin')\nplugins: [\n  new HtmlWebpackExternalsPlugin({\n      externals: [\n        {\n          module: 'vue',\n          entry: 'https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.2/vue.min.js',\n          global: 'Vue',\n        },\n      ],\n    }),\n  // other plugins\n]. ",
    "YevheniiHerasymchuk": "is it possible to do it for node env? \nI mean, for example, if I have var moment = require('moment'); console.log(moment().format() and in plugin I should set to use moment library not from node_modules but from cdn url\n. ",
    "stenote": "I think it's better to add vue-hot-reload-api devDependencie. ",
    "mikejavier": "sorry, my editor not working. Can close !. ",
    "okxiaoliang4": "\u89e3\u51b3\u4e86\uff0c\u662f\u540c\u4e8b\u6ca1\u6ce8\u610f\u5927\u5c0f\u5199\u95ee\u9898= =. ",
    "jt-wang": "Please refer to this issue https://github.com/babel/babel-eslint/issues/319.\nAs is explained by @hzoo, \n\nyou have to use await in an async function. The former isn't that syntax. You would be calling a function named async with a non-async arrow function.. \n",
    "hzoo": "Yeah, await cannot be used at the top level.\nconsole.log(await asyncFun()) -> asyncFunc().then(v = console.log(v))\n. ",
    "bitkris-dev": "For anyone still finding a solution: I've discovered that the issue was a folder called \"[CODE]\" (yes, I use square brackets to give more priority in Sort by Name) and seems that node or webpack have some issues with special characters in folders' names.\nChanging it to \"Code\" fixed it.. ",
    "Arash-kaffashi": "Now it just worked!  ?!. ",
    "sergeos": "ask for problem in vue forum. ",
    "kevguy": "You're right, thank you! \nexpect(typeof Hello.created).to.equal('function')\nor\nexpect(Hello.created).to.be.a('function')\nboth work!. ",
    "jkryanchou": "@posva Excellent Job! I have searched it for a long time on this issue. I build a project based on the CoPilot Admin Template, I met the issue when i tried to add more tests to it. I dont realize that the project use the assert plugins was chai. . ",
    "panhezeng": "babel-core had babel-runtime. ",
    "JohnnyCrazy": "So I guess this happens because there is no router object on the vue instance, which is injected in main.js. However, that file is not in the test-context. Did you find a way around it yet @doman412?. ",
    "Thavaprakash": "I too getting same warning, please help me to figure it out.. ",
    "codeslubber": "Also getting this.. ",
    "Jak893": "I've managed to resolve the warning, I'm not 100% sure why this works as inside the router it's already calling Vue.use(VueRouter) although maybe it's due to extending rather than newing inside the tests. Either way, after importing BOTH router and Vue Router, the sample test below ran for me fine.\njavascript\n  it('Renders correct subtitle', () => {\n    Vue.use(VueRouter)\n    const Constructor = Vue.extend(FullPageHero)\n    const vm = new Constructor({\n      router,\n      propsData: {\n        title: '',\n        subtitle: 'TEST'\n      }\n    }).$mount()\n    expect(vm.$el.querySelector('.subtitle').textContent.trim())\n      .to.equal('TEST')\n  }). ",
    "philngo": "If you're using the vue-test-utils package (in beta at time of writing), their suggestion is to \"create a localVue, and install Vue Router on that\":\n``` js\nimport { createLocalVue } from 'vue-test-utils'\nimport VueRouter from 'vue-router'\nconst localVue = createLocalVue()\nlocalVue.use(VueRouter)\nshallow(Component, {\n  localVue\n})\nor to stub the `router-link` component js\nimport { shallow } from 'vue-test-utils'\nshallow(Component, {\n  stubs: ['router-link']\n})\n```. ",
    "phillip-haydon": "@posva pretty sure this is broken.\nIt's simple to re-create. \nInstall latest cli, create new webpack project, run npm install then npm run dev and it fails. \nRunning npm run build works fine and creates the app which can run without issue, but the dev build fails on my work computer and my home desktop and laptop. I don't know how many more times I can test it.... ```\nphill@DESKTOP-599M841 E:\\github\\bananatest\n$ vue init webpack banana2\nThis will install Vue 2.x version of the template.\nFor Vue 1.x use: vue init webpack#1.0 banana2\n? Project name banana2\n? Project description A Vue.js project\n? Author Phillip Haydon <.....>\n? Vue build runtime\n? Install vue-router? Yes\n? Use ESLint to lint your code? Yes\n? Pick an ESLint preset Standard\n? Setup unit tests with Karma + Mocha? No\n? Setup e2e tests with Nightwatch? No\nvue-cli \u00b7 Generated \"banana2\".\nTo get started:\n cd banana2\n npm install\n npm run dev\n\nDocumentation can be found at https://vuejs-templates.github.io/webpack\nphill@DESKTOP-599M841 E:\\github\\bananatest\n$ cd banana2\nphill@DESKTOP-599M841 E:\\github\\bananatest\\banana2                                                                                                                                                                                                  \n$ npm install                                                                                                                                                                                                                                       \nbanana2@1.0.0 E:\\github\\bananatest\\banana2                                                                                                                                                                                                          \n+-- autoprefixer@6.7.7                                                                                                                                                                                                                              \n| +-- browserslist@1.7.7                                                                                                                                                                                                                            \n| | -- electron-to-chromium@1.3.10                                                                                                                                                                                                                   \n| +-- caniuse-db@1.0.30000670                                                                                                                                                                                                                         \n| +-- normalize-range@0.1.2                                                                                                                                                                                                                           \n| +-- num2fraction@1.2.2                                                                                                                                                                                                                              \n| +-- postcss@5.2.17                                                                                                                                                                                                                                  \n| |-- js-base64@2.1.9                                                                                                                                                                                                                             \n| -- postcss-value-parser@3.3.0                                                                                                                                                                                                                      \n+-- babel-core@6.24.1                                                                                                                                                                                                                                 \n| +-- babel-code-frame@6.22.0                                                                                                                                                                                                                         \n| |-- js-tokens@3.0.1                                                                                                                                                                                                                             \n| +-- babel-generator@6.24.1                                                                                                                                                                                                                        \n| | +-- detect-indent@4.0.0                                                                                                                                                                                                                         \n| | | -- repeating@2.0.1                                                                                                                                                                                                                             \n| | |-- is-finite@1.0.2                                                                                                                                                                                                                         \n| | +-- jsesc@1.3.0                                                                                                                                                                                                                                 \n| | -- trim-right@1.0.1                                                                                                                                                                                                                              \n| +-- babel-helpers@6.24.1                                                                                                                                                                                                                            \n| +-- babel-messages@6.23.0                                                                                                                                                                                                                           \n| +-- babel-runtime@6.23.0                                                                                                                                                                                                                            \n| |-- regenerator-runtime@0.10.5                                                                                                                                                                                                                  \n| +-- babel-template@6.24.1                                                                                                                                                                                                                         \n| +-- babel-traverse@6.24.1                                                                                                                                                                                                                         \n| +-- babel-types@6.24.1                                                                                                                                                                                                                            \n| | -- to-fast-properties@1.0.3                                                                                                                                                                                                                      \n| +-- babylon@6.17.1                                                                                                                                                                                                                                  \n| +-- convert-source-map@1.5.0                                                                                                                                                                                                                        \n| +-- debug@2.6.6                                                                                                                                                                                                                                     \n| |-- ms@0.7.3                                                                                                                                                                                                                                    \n| +-- json5@0.5.1                                                                                                                                                                                                                                   \n| +-- lodash@4.17.4                                                                                                                                                                                                                                 \n| +-- minimatch@3.0.4                                                                                                                                                                                                                               \n| | -- brace-expansion@1.1.7                                                                                                                                                                                                                         \n| |   +-- balanced-match@0.4.2                                                                                                                                                                                                                        \n| |-- concat-map@0.0.1                                                                                                                                                                                                                          \n| +-- path-is-absolute@1.0.1                                                                                                                                                                                                                        \n| +-- private@0.1.7                                                                                                                                                                                                                                 \n| +-- slash@1.0.0                                                                                                                                                                                                                                   \n| -- source-map@0.5.6                                                                                                                                                                                                                                \n+-- babel-eslint@7.2.3                                                                                                                                                                                                                                \n+-- babel-loader@6.4.1                                                                                                                                                                                                                                \n| +-- find-cache-dir@0.1.1                                                                                                                                                                                                                            \n| | +-- commondir@1.0.1                                                                                                                                                                                                                               \n| |-- pkg-dir@1.0.0                                                                                                                                                                                                                               \n| |   -- find-up@1.1.2                                                                                                                                                                                                                               \n| |-- path-exists@2.1.0                                                                                                                                                                                                                       \n| +-- loader-utils@0.2.17                                                                                                                                                                                                                           \n| | +-- big.js@3.1.3                                                                                                                                                                                                                                \n| | -- emojis-list@2.1.0                                                                                                                                                                                                                             \n| +-- mkdirp@0.5.1                                                                                                                                                                                                                                    \n| |-- minimist@0.0.8                                                                                                                                                                                                                              \n| -- object-assign@4.1.1                                                                                                                                                                                                                             \n+-- babel-plugin-transform-runtime@6.23.0                                                                                                                                                                                                             \n+-- babel-preset-env@1.4.0                                                                                                                                                                                                                            \n| +-- babel-plugin-check-es2015-constants@6.22.0                                                                                                                                                                                                      \n| +-- babel-plugin-syntax-trailing-function-commas@6.22.0                                                                                                                                                                                             \n| +-- babel-plugin-transform-async-to-generator@6.24.1                                                                                                                                                                                                \n| | +-- babel-helper-remap-async-to-generator@6.24.1                                                                                                                                                                                                  \n| |-- babel-plugin-syntax-async-functions@6.13.0                                                                                                                                                                                                  \n| +-- babel-plugin-transform-es2015-arrow-functions@6.22.0                                                                                                                                                                                          \n| +-- babel-plugin-transform-es2015-block-scoped-functions@6.22.0                                                                                                                                                                                   \n| +-- babel-plugin-transform-es2015-block-scoping@6.24.1                                                                                                                                                                                            \n| +-- babel-plugin-transform-es2015-classes@6.24.1                                                                                                                                                                                                  \n| | +-- babel-helper-define-map@6.24.1                                                                                                                                                                                                              \n| | +-- babel-helper-function-name@6.24.1                                                                                                                                                                                                           \n| | +-- babel-helper-optimise-call-expression@6.24.1                                                                                                                                                                                                \n| | -- babel-helper-replace-supers@6.24.1                                                                                                                                                                                                            \n| +-- babel-plugin-transform-es2015-computed-properties@6.24.1                                                                                                                                                                                        \n| +-- babel-plugin-transform-es2015-destructuring@6.23.0                                                                                                                                                                                              \n| +-- babel-plugin-transform-es2015-duplicate-keys@6.24.1                                                                                                                                                                                             \n| +-- babel-plugin-transform-es2015-for-of@6.23.0                                                                                                                                                                                                     \n| +-- babel-plugin-transform-es2015-function-name@6.24.1                                                                                                                                                                                              \n| +-- babel-plugin-transform-es2015-literals@6.22.0                                                                                                                                                                                                   \n| +-- babel-plugin-transform-es2015-modules-amd@6.24.1                                                                                                                                                                                                \n| +-- babel-plugin-transform-es2015-modules-commonjs@6.24.1                                                                                                                                                                                           \n| |-- babel-plugin-transform-strict-mode@6.24.1                                                                                                                                                                                                   \n| +-- babel-plugin-transform-es2015-modules-systemjs@6.24.1                                                                                                                                                                                         \n| | -- babel-helper-hoist-variables@6.24.1                                                                                                                                                                                                           \n| +-- babel-plugin-transform-es2015-modules-umd@6.24.1                                                                                                                                                                                                \n| +-- babel-plugin-transform-es2015-object-super@6.24.1                                                                                                                                                                                               \n| +-- babel-plugin-transform-es2015-parameters@6.24.1                                                                                                                                                                                                 \n| | +-- babel-helper-call-delegate@6.24.1                                                                                                                                                                                                             \n| |-- babel-helper-get-function-arity@6.24.1                                                                                                                                                                                                      \n| +-- babel-plugin-transform-es2015-shorthand-properties@6.24.1                                                                                                                                                                                     \n| +-- babel-plugin-transform-es2015-spread@6.22.0                                                                                                                                                                                                   \n| +-- babel-plugin-transform-es2015-sticky-regex@6.24.1                                                                                                                                                                                             \n| | -- babel-helper-regex@6.24.1                                                                                                                                                                                                                     \n| +-- babel-plugin-transform-es2015-template-literals@6.22.0                                                                                                                                                                                          \n| +-- babel-plugin-transform-es2015-typeof-symbol@6.23.0                                                                                                                                                                                              \n| +-- babel-plugin-transform-es2015-unicode-regex@6.24.1                                                                                                                                                                                              \n| |-- regexpu-core@2.0.0                                                                                                                                                                                                                          \n| |   +-- regenerate@1.3.2                                                                                                                                                                                                                          \n| |   +-- regjsgen@0.2.0                                                                                                                                                                                                                            \n| |   -- regjsparser@0.1.5                                                                                                                                                                                                                           \n| |-- jsesc@0.5.0                                                                                                                                                                                                                             \n| +-- babel-plugin-transform-exponentiation-operator@6.24.1                                                                                                                                                                                         \n| | +-- babel-helper-builder-binary-assignment-operator-visitor@6.24.1                                                                                                                                                                              \n| | | -- babel-helper-explode-assignable-expression@6.24.1                                                                                                                                                                                           \n| |-- babel-plugin-syntax-exponentiation-operator@6.13.0                                                                                                                                                                                          \n| +-- babel-plugin-transform-regenerator@6.24.1                                                                                                                                                                                                     \n| | -- regenerator-transform@0.9.11                                                                                                                                                                                                                  \n|-- invariant@2.2.2                                                                                                                                                                                                                               \n|   -- loose-envify@1.3.1                                                                                                                                                                                                                            \n+-- babel-preset-stage-2@6.24.1                                                                                                                                                                                                                       \n| +-- babel-plugin-syntax-dynamic-import@6.18.0                                                                                                                                                                                                       \n| +-- babel-plugin-transform-class-properties@6.24.1                                                                                                                                                                                                  \n| |-- babel-plugin-syntax-class-properties@6.13.0                                                                                                                                                                                                 \n| +-- babel-plugin-transform-decorators@6.24.1                                                                                                                                                                                                      \n| | +-- babel-helper-explode-class@6.24.1                                                                                                                                                                                                           \n| | | -- babel-helper-bindify-decorators@6.24.1                                                                                                                                                                                                      \n| |-- babel-plugin-syntax-decorators@6.13.0                                                                                                                                                                                                       \n| -- babel-preset-stage-3@6.24.1                                                                                                                                                                                                                     \n|   +-- babel-plugin-transform-async-generator-functions@6.24.1                                                                                                                                                                                       \n|   |-- babel-plugin-syntax-async-generators@6.13.0                                                                                                                                                                                               \n|   -- babel-plugin-transform-object-rest-spread@6.23.0                                                                                                                                                                                              \n|-- babel-plugin-syntax-object-rest-spread@6.13.0                                                                                                                                                                                             \n+-- babel-register@6.24.1                                                                                                                                                                                                                           \n| +-- core-js@2.4.1                                                                                                                                                                                                                                 \n| +-- home-or-tmp@2.0.0                                                                                                                                                                                                                             \n| | +-- os-homedir@1.0.2                                                                                                                                                                                                                            \n| | -- os-tmpdir@1.0.2                                                                                                                                                                                                                               \n|-- source-map-support@0.4.15                                                                                                                                                                                                                     \n+-- chalk@1.1.3                                                                                                                                                                                                                                     \n| +-- ansi-styles@2.2.1                                                                                                                                                                                                                             \n| +-- escape-string-regexp@1.0.5                                                                                                                                                                                                                    \n| +-- has-ansi@2.0.0                                                                                                                                                                                                                                \n| | -- ansi-regex@2.1.1                                                                                                                                                                                                                              \n| +-- strip-ansi@3.0.1                                                                                                                                                                                                                                \n|-- supports-color@2.0.0                                                                                                                                                                                                                          \n+-- connect-history-api-fallback@1.3.0                                                                                                                                                                                                              \n+-- copy-webpack-plugin@4.0.1                                                                                                                                                                                                                       \n| +-- bluebird@2.11.0                                                                                                                                                                                                                               \n| +-- fs-extra@0.26.7                                                                                                                                                                                                                               \n| | +-- graceful-fs@4.1.11                                                                                                                                                                                                                          \n| | +-- jsonfile@2.4.0                                                                                                                                                                                                                              \n| | -- klaw@1.3.1                                                                                                                                                                                                                                    \n| +-- glob@6.0.4                                                                                                                                                                                                                                      \n| | +-- inflight@1.0.6                                                                                                                                                                                                                                \n| | |-- wrappy@1.0.2                                                                                                                                                                                                                              \n| | +-- inherits@2.0.3                                                                                                                                                                                                                              \n| | -- once@1.4.0                                                                                                                                                                                                                                    \n| +-- is-glob@3.1.0                                                                                                                                                                                                                                   \n| |-- is-extglob@2.1.1                                                                                                                                                                                                                            \n| -- node-dir@0.1.16                                                                                                                                                                                                                                 \n+-- css-loader@0.28.1                                                                                                                                                                                                                                 \n| +-- css-selector-tokenizer@0.7.0                                                                                                                                                                                                                    \n| | +-- cssesc@0.1.0                                                                                                                                                                                                                                  \n| | +-- fastparse@1.1.1                                                                                                                                                                                                                               \n| |-- regexpu-core@1.0.0                                                                                                                                                                                                                          \n| +-- cssnano@3.10.0                                                                                                                                                                                                                                \n| | +-- decamelize@1.2.0                                                                                                                                                                                                                            \n| | +-- defined@1.0.0                                                                                                                                                                                                                               \n| | +-- has@1.0.1                                                                                                                                                                                                                                   \n| | | -- function-bind@1.1.0                                                                                                                                                                                                                         \n| | +-- postcss-calc@5.3.1                                                                                                                                                                                                                            \n| | | +-- postcss-message-helpers@2.0.0                                                                                                                                                                                                               \n| | |-- reduce-css-calc@1.3.0                                                                                                                                                                                                                     \n| | |   +-- math-expression-evaluator@1.2.17                                                                                                                                                                                                        \n| | |   -- reduce-function-call@1.0.2                                                                                                                                                                                                                \n| | +-- postcss-colormin@2.2.2                                                                                                                                                                                                                        \n| | |-- colormin@1.1.2                                                                                                                                                                                                                            \n| | |   +-- color@0.11.4                                                                                                                                                                                                                            \n| | |   | +-- clone@1.0.2                                                                                                                                                                                                                           \n| | |   | +-- color-convert@1.9.0                                                                                                                                                                                                                   \n| | |   | | -- color-name@1.1.2                                                                                                                                                                                                                      \n| | |   |-- color-string@0.3.0                                                                                                                                                                                                                    \n| | |   -- css-color-names@0.0.4                                                                                                                                                                                                                     \n| | +-- postcss-convert-values@2.6.1                                                                                                                                                                                                                  \n| | +-- postcss-discard-comments@2.0.4                                                                                                                                                                                                                \n| | +-- postcss-discard-duplicates@2.1.0                                                                                                                                                                                                              \n| | +-- postcss-discard-empty@2.1.0                                                                                                                                                                                                                   \n| | +-- postcss-discard-overridden@0.1.1                                                                                                                                                                                                              \n| | +-- postcss-discard-unused@2.2.3                                                                                                                                                                                                                  \n| | |-- uniqs@2.0.0                                                                                                                                                                                                                               \n| | +-- postcss-filter-plugins@2.0.2                                                                                                                                                                                                                \n| | | -- uniqid@4.1.1                                                                                                                                                                                                                                \n| | |-- macaddress@0.2.8                                                                                                                                                                                                                        \n| | +-- postcss-merge-idents@2.1.7                                                                                                                                                                                                                  \n| | +-- postcss-merge-longhand@2.0.2                                                                                                                                                                                                                \n| | +-- postcss-merge-rules@2.1.2                                                                                                                                                                                                                   \n| | | +-- caniuse-api@1.6.1                                                                                                                                                                                                                         \n| | | | +-- lodash.memoize@4.1.2                                                                                                                                                                                                                    \n| | | | -- lodash.uniq@4.5.0                                                                                                                                                                                                                         \n| | |-- vendors@1.0.1                                                                                                                                                                                                                             \n| | +-- postcss-minify-font-values@1.0.5                                                                                                                                                                                                            \n| | +-- postcss-minify-gradients@1.0.5                                                                                                                                                                                                              \n| | +-- postcss-minify-params@1.2.2                                                                                                                                                                                                                 \n| | | -- alphanum-sort@1.0.2                                                                                                                                                                                                                         \n| | +-- postcss-minify-selectors@2.1.1                                                                                                                                                                                                                \n| | +-- postcss-normalize-charset@1.1.1                                                                                                                                                                                                               \n| | +-- postcss-normalize-url@3.0.8                                                                                                                                                                                                                   \n| | | +-- is-absolute-url@2.1.0                                                                                                                                                                                                                       \n| | |-- normalize-url@1.9.1                                                                                                                                                                                                                       \n| | |   +-- prepend-http@1.0.4                                                                                                                                                                                                                      \n| | |   +-- query-string@4.3.4                                                                                                                                                                                                                      \n| | |   | -- strict-uri-encode@1.1.0                                                                                                                                                                                                                 \n| | |-- sort-keys@1.1.2                                                                                                                                                                                                                         \n| | |     -- is-plain-obj@1.1.0                                                                                                                                                                                                                      \n| | +-- postcss-ordered-values@2.2.3                                                                                                                                                                                                                  \n| | +-- postcss-reduce-idents@2.4.0                                                                                                                                                                                                                   \n| | +-- postcss-reduce-initial@1.0.1                                                                                                                                                                                                                  \n| | +-- postcss-reduce-transforms@1.0.4                                                                                                                                                                                                               \n| | +-- postcss-svgo@2.1.6                                                                                                                                                                                                                            \n| | | +-- is-svg@2.1.0                                                                                                                                                                                                                                \n| | | |-- html-comment-regex@1.1.1                                                                                                                                                                                                                \n| | | -- svgo@0.7.2                                                                                                                                                                                                                                  \n| | |   +-- coa@1.0.1                                                                                                                                                                                                                                 \n| | |   |-- q@1.5.0                                                                                                                                                                                                                               \n| | |   +-- colors@1.1.2                                                                                                                                                                                                                            \n| | |   +-- csso@2.3.2                                                                                                                                                                                                                              \n| | |   | -- clap@1.1.3                                                                                                                                                                                                                              \n| | |   +-- sax@1.2.2                                                                                                                                                                                                                                 \n| | |-- whet.extend@0.9.9                                                                                                                                                                                                                       \n| | +-- postcss-unique-selectors@2.0.2                                                                                                                                                                                                              \n| | -- postcss-zindex@2.2.0                                                                                                                                                                                                                          \n| +-- loader-utils@1.1.0                                                                                                                                                                                                                              \n| +-- lodash.camelcase@4.3.0                                                                                                                                                                                                                          \n| +-- postcss-modules-extract-imports@1.0.1                                                                                                                                                                                                           \n| +-- postcss-modules-local-by-default@1.1.1                                                                                                                                                                                                          \n| |-- css-selector-tokenizer@0.6.0                                                                                                                                                                                                                \n| |   -- regexpu-core@1.0.0                                                                                                                                                                                                                          \n| +-- postcss-modules-scope@1.0.2                                                                                                                                                                                                                     \n| |-- css-selector-tokenizer@0.6.0                                                                                                                                                                                                                \n| |   -- regexpu-core@1.0.0                                                                                                                                                                                                                          \n| +-- postcss-modules-values@1.2.2                                                                                                                                                                                                                    \n| |-- icss-replace-symbols@1.0.2                                                                                                                                                                                                                  \n| -- source-list-map@0.1.8                                                                                                                                                                                                                           \n+-- eslint@3.19.0                                                                                                                                                                                                                                     \n| +-- concat-stream@1.6.0                                                                                                                                                                                                                             \n| | +-- readable-stream@2.2.9                                                                                                                                                                                                                         \n| | | +-- buffer-shims@1.0.0                                                                                                                                                                                                                          \n| | | +-- core-util-is@1.0.2                                                                                                                                                                                                                          \n| | | +-- process-nextick-args@1.0.7                                                                                                                                                                                                                  \n| | | +-- string_decoder@1.0.0                                                                                                                                                                                                                        \n| | |-- util-deprecate@1.0.2                                                                                                                                                                                                                      \n| | -- typedarray@0.0.6                                                                                                                                                                                                                              \n| +-- doctrine@2.0.0                                                                                                                                                                                                                                  \n| |-- isarray@1.0.0                                                                                                                                                                                                                               \n| +-- escope@3.6.0                                                                                                                                                                                                                                  \n| | +-- es6-map@0.1.5                                                                                                                                                                                                                               \n| | | +-- d@1.0.0                                                                                                                                                                                                                                   \n| | | +-- es5-ext@0.10.18                                                                                                                                                                                                                           \n| | | +-- es6-iterator@2.0.1                                                                                                                                                                                                                        \n| | | +-- es6-set@0.1.5                                                                                                                                                                                                                             \n| | | +-- es6-symbol@3.1.1                                                                                                                                                                                                                          \n| | | -- event-emitter@0.3.5                                                                                                                                                                                                                         \n| | +-- es6-weak-map@2.0.2                                                                                                                                                                                                                            \n| |-- esrecurse@4.1.0                                                                                                                                                                                                                             \n| |   -- estraverse@4.1.1                                                                                                                                                                                                                            \n| +-- espree@3.4.3                                                                                                                                                                                                                                    \n| |-- acorn-jsx@3.0.1                                                                                                                                                                                                                             \n| |   -- acorn@3.3.0                                                                                                                                                                                                                                 \n| +-- esquery@1.0.0                                                                                                                                                                                                                                   \n| +-- estraverse@4.2.0                                                                                                                                                                                                                                \n| +-- esutils@2.0.2                                                                                                                                                                                                                                   \n| +-- file-entry-cache@2.0.0                                                                                                                                                                                                                          \n| |-- flat-cache@1.2.2                                                                                                                                                                                                                            \n| |   +-- circular-json@0.3.1                                                                                                                                                                                                                       \n| |   +-- del@2.2.2                                                                                                                                                                                                                                 \n| |   | +-- globby@5.0.0                                                                                                                                                                                                                            \n| |   | | +-- array-union@1.0.2                                                                                                                                                                                                                     \n| |   | | | -- array-uniq@1.0.3                                                                                                                                                                                                                      \n| |   | |-- glob@7.1.1                                                                                                                                                                                                                            \n| |   | +-- is-path-cwd@1.0.0                                                                                                                                                                                                                       \n| |   | +-- is-path-in-cwd@1.0.0                                                                                                                                                                                                                    \n| |   | | -- is-path-inside@1.0.0                                                                                                                                                                                                                    \n| |   |-- pify@2.3.0                                                                                                                                                                                                                              \n| |   -- write@0.2.1                                                                                                                                                                                                                                 \n| +-- glob@7.1.1                                                                                                                                                                                                                                      \n| |-- fs.realpath@1.0.0                                                                                                                                                                                                                           \n| +-- globals@9.17.0                                                                                                                                                                                                                                \n| +-- ignore@3.3.0                                                                                                                                                                                                                                  \n| +-- imurmurhash@0.1.4                                                                                                                                                                                                                             \n| +-- inquirer@0.12.0                                                                                                                                                                                                                               \n| | +-- ansi-escapes@1.4.0                                                                                                                                                                                                                          \n| | +-- cli-cursor@1.0.2                                                                                                                                                                                                                            \n| | | -- restore-cursor@1.0.1                                                                                                                                                                                                                        \n| | |   +-- exit-hook@1.1.1                                                                                                                                                                                                                           \n| | |-- onetime@1.1.0                                                                                                                                                                                                                           \n| | +-- cli-width@2.1.0                                                                                                                                                                                                                             \n| | +-- figures@1.7.0                                                                                                                                                                                                                               \n| | +-- readline2@1.0.1                                                                                                                                                                                                                             \n| | | +-- code-point-at@1.1.0                                                                                                                                                                                                                       \n| | | +-- is-fullwidth-code-point@1.0.0                                                                                                                                                                                                             \n| | | | -- number-is-nan@1.0.1                                                                                                                                                                                                                       \n| | |-- mute-stream@0.0.5                                                                                                                                                                                                                         \n| | +-- run-async@0.1.0                                                                                                                                                                                                                             \n| | +-- rx-lite@3.1.2                                                                                                                                                                                                                               \n| | +-- string-width@1.0.2                                                                                                                                                                                                                          \n| | -- through@2.3.8                                                                                                                                                                                                                                 \n| +-- is-my-json-valid@2.16.0                                                                                                                                                                                                                         \n| | +-- generate-function@2.0.0                                                                                                                                                                                                                       \n| | +-- generate-object-property@1.2.0                                                                                                                                                                                                                \n| | |-- is-property@1.0.2                                                                                                                                                                                                                         \n| | +-- jsonpointer@4.0.1                                                                                                                                                                                                                           \n| | -- xtend@4.0.1                                                                                                                                                                                                                                   \n| +-- is-resolvable@1.0.0                                                                                                                                                                                                                             \n| |-- tryit@1.0.3                                                                                                                                                                                                                                 \n| +-- js-yaml@3.7.0                                                                                                                                                                                                                                 \n| | +-- argparse@1.0.9                                                                                                                                                                                                                              \n| | | -- sprintf-js@1.0.3                                                                                                                                                                                                                            \n| |-- esprima@2.7.3                                                                                                                                                                                                                               \n| +-- json-stable-stringify@1.0.1                                                                                                                                                                                                                   \n| | -- jsonify@0.0.0                                                                                                                                                                                                                                 \n| +-- levn@0.3.0                                                                                                                                                                                                                                      \n| | +-- prelude-ls@1.1.2                                                                                                                                                                                                                              \n| |-- type-check@0.3.2                                                                                                                                                                                                                            \n| +-- natural-compare@1.4.0                                                                                                                                                                                                                         \n| +-- optionator@0.8.2                                                                                                                                                                                                                              \n| | +-- deep-is@0.1.3                                                                                                                                                                                                                               \n| | +-- fast-levenshtein@2.0.6                                                                                                                                                                                                                      \n| | -- wordwrap@1.0.0                                                                                                                                                                                                                                \n| +-- path-is-inside@1.0.2                                                                                                                                                                                                                            \n| +-- pluralize@1.2.1                                                                                                                                                                                                                                 \n| +-- progress@1.1.8                                                                                                                                                                                                                                  \n| +-- require-uncached@1.0.3                                                                                                                                                                                                                          \n| | +-- caller-path@0.1.0                                                                                                                                                                                                                             \n| | |-- callsites@0.2.0                                                                                                                                                                                                                           \n| | -- resolve-from@1.0.1                                                                                                                                                                                                                            \n| +-- strip-bom@3.0.0                                                                                                                                                                                                                                 \n| +-- strip-json-comments@2.0.1                                                                                                                                                                                                                       \n| +-- table@3.8.3                                                                                                                                                                                                                                     \n| | +-- slice-ansi@0.0.4                                                                                                                                                                                                                              \n| |-- string-width@2.0.0                                                                                                                                                                                                                          \n| |   -- is-fullwidth-code-point@2.0.0                                                                                                                                                                                                               \n| +-- text-table@0.2.0                                                                                                                                                                                                                                \n|-- user-home@2.0.0                                                                                                                                                                                                                               \n+-- eslint-config-standard@6.2.1                                                                                                                                                                                                                    \n+-- eslint-friendly-formatter@2.0.7                                                                                                                                                                                                                 \n| +-- extend@3.0.1                                                                                                                                                                                                                                  \n| -- minimist@1.2.0                                                                                                                                                                                                                                  \n+-- eslint-loader@1.7.1                                                                                                                                                                                                                               \n| +-- loader-fs-cache@1.0.1                                                                                                                                                                                                                           \n| +-- loader-utils@1.1.0                                                                                                                                                                                                                              \n|-- object-hash@1.1.8                                                                                                                                                                                                                             \n+-- eslint-plugin-html@2.0.3                                                                                                                                                                                                                        \n| -- htmlparser2@3.9.2                                                                                                                                                                                                                               \n|   +-- domelementtype@1.3.0                                                                                                                                                                                                                          \n|   +-- domhandler@2.4.1                                                                                                                                                                                                                              \n|   +-- domutils@1.6.2                                                                                                                                                                                                                                \n|   |-- dom-serializer@0.1.0                                                                                                                                                                                                                      \n|   |   -- domelementtype@1.1.3                                                                                                                                                                                                                      \n|-- entities@1.1.1                                                                                                                                                                                                                              \n+-- eslint-plugin-promise@3.5.0                                                                                                                                                                                                                     \n+-- eslint-plugin-standard@2.3.1                                                                                                                                                                                                                    \n+-- eventsource-polyfill@0.9.6                                                                                                                                                                                                                      \n+-- express@4.15.2                                                                                                                                                                                                                                  \n| +-- accepts@1.3.3                                                                                                                                                                                                                                 \n| | +-- mime-types@2.1.15                                                                                                                                                                                                                           \n| | | -- mime-db@1.27.0                                                                                                                                                                                                                              \n| |-- negotiator@0.6.1                                                                                                                                                                                                                            \n| +-- array-flatten@1.1.1                                                                                                                                                                                                                           \n| +-- content-disposition@0.5.2                                                                                                                                                                                                                     \n| +-- content-type@1.0.2                                                                                                                                                                                                                            \n| +-- cookie@0.3.1                                                                                                                                                                                                                                  \n| +-- cookie-signature@1.0.6                                                                                                                                                                                                                        \n| +-- debug@2.6.1                                                                                                                                                                                                                                   \n| | -- ms@0.7.2                                                                                                                                                                                                                                      \n| +-- depd@1.1.0                                                                                                                                                                                                                                      \n| +-- encodeurl@1.0.1                                                                                                                                                                                                                                 \n| +-- escape-html@1.0.3                                                                                                                                                                                                                               \n| +-- etag@1.8.0                                                                                                                                                                                                                                      \n| +-- finalhandler@1.0.2                                                                                                                                                                                                                              \n| | +-- debug@2.6.4                                                                                                                                                                                                                                   \n| |-- unpipe@1.0.0                                                                                                                                                                                                                                \n| +-- fresh@0.5.0                                                                                                                                                                                                                                   \n| +-- merge-descriptors@1.0.1                                                                                                                                                                                                                       \n| +-- methods@1.1.2                                                                                                                                                                                                                                 \n| +-- on-finished@2.3.0                                                                                                                                                                                                                             \n| | -- ee-first@1.1.1                                                                                                                                                                                                                                \n| +-- parseurl@1.3.1                                                                                                                                                                                                                                  \n| +-- path-to-regexp@0.1.7                                                                                                                                                                                                                            \n| +-- proxy-addr@1.1.4                                                                                                                                                                                                                                \n| | +-- forwarded@0.1.0                                                                                                                                                                                                                               \n| |-- ipaddr.js@1.3.0                                                                                                                                                                                                                             \n| +-- qs@6.4.0                                                                                                                                                                                                                                      \n| +-- range-parser@1.2.0                                                                                                                                                                                                                            \n| +-- send@0.15.1                                                                                                                                                                                                                                   \n| | +-- debug@2.6.1                                                                                                                                                                                                                                 \n| | +-- destroy@1.0.4                                                                                                                                                                                                                               \n| | +-- http-errors@1.6.1                                                                                                                                                                                                                           \n| | -- ms@0.7.2                                                                                                                                                                                                                                      \n| +-- serve-static@1.12.1                                                                                                                                                                                                                             \n| +-- setprototypeof@1.0.3                                                                                                                                                                                                                            \n| +-- statuses@1.3.1                                                                                                                                                                                                                                  \n| +-- type-is@1.6.15                                                                                                                                                                                                                                  \n| |-- media-typer@0.3.0                                                                                                                                                                                                                           \n| +-- utils-merge@1.0.0                                                                                                                                                                                                                             \n| -- vary@1.1.1                                                                                                                                                                                                                                      \n+-- extract-text-webpack-plugin@2.1.0                                                                                                                                                                                                                 \n| +-- ajv@4.11.8                                                                                                                                                                                                                                      \n| |-- co@4.6.0                                                                                                                                                                                                                                    \n| +-- async@2.4.0                                                                                                                                                                                                                                   \n| +-- loader-utils@1.1.0                                                                                                                                                                                                                            \n| -- webpack-sources@0.1.5                                                                                                                                                                                                                           \n+-- file-loader@0.11.1                                                                                                                                                                                                                                \n|-- loader-utils@1.1.0                                                                                                                                                                                                                            \n+-- friendly-errors-webpack-plugin@1.6.1                                                                                                                                                                                                            \n| +-- error-stack-parser@2.0.1                                                                                                                                                                                                                      \n| | -- stackframe@1.0.3                                                                                                                                                                                                                              \n|-- string-length@1.0.1                                                                                                                                                                                                                           \n+-- html-webpack-plugin@2.28.0                                                                                                                                                                                                                      \n| +-- bluebird@3.5.0                                                                                                                                                                                                                                \n| +-- html-minifier@3.4.4                                                                                                                                                                                                                           \n| | +-- camel-case@3.0.0                                                                                                                                                                                                                            \n| | | +-- no-case@2.3.1                                                                                                                                                                                                                             \n| | | | -- lower-case@1.1.4                                                                                                                                                                                                                          \n| | |-- upper-case@1.1.3                                                                                                                                                                                                                          \n| | +-- clean-css@4.0.13                                                                                                                                                                                                                            \n| | +-- ncname@1.0.0                                                                                                                                                                                                                                \n| | | -- xml-char-classes@1.0.0                                                                                                                                                                                                                      \n| | +-- param-case@2.1.1                                                                                                                                                                                                                              \n| |-- relateurl@0.2.7                                                                                                                                                                                                                             \n| +-- pretty-error@2.1.0                                                                                                                                                                                                                            \n| | +-- renderkid@2.0.1                                                                                                                                                                                                                             \n| | | +-- css-select@1.2.0                                                                                                                                                                                                                          \n| | | | +-- boolbase@1.0.0                                                                                                                                                                                                                          \n| | | | +-- css-what@2.1.0                                                                                                                                                                                                                          \n| | | | +-- domutils@1.5.1                                                                                                                                                                                                                          \n| | | | -- nth-check@1.0.1                                                                                                                                                                                                                           \n| | | +-- dom-converter@0.1.4                                                                                                                                                                                                                         \n| | | |-- utila@0.3.3                                                                                                                                                                                                                             \n| | | +-- htmlparser2@3.3.0                                                                                                                                                                                                                         \n| | | | +-- domhandler@2.1.0                                                                                                                                                                                                                        \n| | | | +-- domutils@1.1.6                                                                                                                                                                                                                          \n| | | | -- readable-stream@1.0.34                                                                                                                                                                                                                    \n| | | |   +-- isarray@0.0.1                                                                                                                                                                                                                           \n| | | |-- string_decoder@0.10.31                                                                                                                                                                                                                \n| | | -- utila@0.3.3                                                                                                                                                                                                                                 \n| |-- utila@0.4.0                                                                                                                                                                                                                                 \n| -- toposort@1.0.3                                                                                                                                                                                                                                  \n+-- http-proxy-middleware@0.17.4                                                                                                                                                                                                                      \n| +-- http-proxy@1.16.2                                                                                                                                                                                                                               \n| | +-- eventemitter3@1.2.0                                                                                                                                                                                                                           \n| |-- requires-port@1.0.0                                                                                                                                                                                                                         \n| -- micromatch@2.3.11                                                                                                                                                                                                                               \n|   +-- arr-diff@2.0.0                                                                                                                                                                                                                                \n|   |-- arr-flatten@1.0.3                                                                                                                                                                                                                         \n|   +-- array-unique@0.2.1                                                                                                                                                                                                                          \n|   +-- braces@1.8.5                                                                                                                                                                                                                                \n|   | +-- expand-range@1.8.2                                                                                                                                                                                                                        \n|   | | -- fill-range@2.2.3                                                                                                                                                                                                                          \n|   | |   +-- is-number@2.1.0                                                                                                                                                                                                                         \n|   | |   +-- isobject@2.1.0                                                                                                                                                                                                                          \n|   | |   +-- randomatic@1.1.6                                                                                                                                                                                                                        \n|   | |-- repeat-string@1.6.1                                                                                                                                                                                                                   \n|   | +-- preserve@0.2.0                                                                                                                                                                                                                            \n|   | -- repeat-element@1.1.2                                                                                                                                                                                                                        \n|   +-- expand-brackets@0.1.5                                                                                                                                                                                                                         \n|   |-- is-posix-bracket@0.1.1                                                                                                                                                                                                                    \n|   +-- extglob@0.3.2                                                                                                                                                                                                                               \n|   | -- is-extglob@1.0.0                                                                                                                                                                                                                            \n|   +-- filename-regex@2.0.1                                                                                                                                                                                                                          \n|   +-- is-extglob@1.0.0                                                                                                                                                                                                                              \n|   +-- is-glob@2.0.1                                                                                                                                                                                                                                 \n|   +-- kind-of@3.2.0                                                                                                                                                                                                                                 \n|   |-- is-buffer@1.1.5                                                                                                                                                                                                                           \n|   +-- normalize-path@2.1.1                                                                                                                                                                                                                        \n|   | -- remove-trailing-separator@1.0.1                                                                                                                                                                                                             \n|   +-- object.omit@2.0.1                                                                                                                                                                                                                             \n|   | +-- for-own@0.1.5                                                                                                                                                                                                                               \n|   | |-- for-in@1.0.2                                                                                                                                                                                                                            \n|   | -- is-extendable@0.1.1                                                                                                                                                                                                                         \n|   +-- parse-glob@3.0.4                                                                                                                                                                                                                              \n|   | +-- glob-base@0.3.0                                                                                                                                                                                                                             \n|   | |-- is-glob@2.0.1                                                                                                                                                                                                                           \n|   | |   -- is-extglob@1.0.0                                                                                                                                                                                                                        \n|   | +-- is-dotfile@1.0.2                                                                                                                                                                                                                            \n|   | +-- is-extglob@1.0.0                                                                                                                                                                                                                            \n|   |-- is-glob@2.0.1                                                                                                                                                                                                                             \n|   -- regex-cache@0.4.3                                                                                                                                                                                                                             \n|     +-- is-equal-shallow@0.1.3                                                                                                                                                                                                                      \n|-- is-primitive@2.0.0                                                                                                                                                                                                                        \n+-- opn@4.0.2                                                                                                                                                                                                                                       \n| -- pinkie-promise@2.0.1                                                                                                                                                                                                                            \n|-- pinkie@2.0.4                                                                                                                                                                                                                                \n+-- optimize-css-assets-webpack-plugin@1.3.1                                                                                                                                                                                                        \n| -- underscore@1.8.3                                                                                                                                                                                                                                \n+-- ora@1.2.0                                                                                                                                                                                                                                         \n| +-- cli-cursor@2.1.0                                                                                                                                                                                                                                \n| |-- restore-cursor@2.0.0                                                                                                                                                                                                                        \n| |   +-- onetime@2.0.1                                                                                                                                                                                                                             \n| |   | -- mimic-fn@1.1.0                                                                                                                                                                                                                            \n| |-- signal-exit@3.0.2                                                                                                                                                                                                                         \n| +-- cli-spinners@1.0.0                                                                                                                                                                                                                            \n| -- log-symbols@1.0.2                                                                                                                                                                                                                               \n+-- rimraf@2.6.1                                                                                                                                                                                                                                      \n|-- glob@7.1.1                                                                                                                                                                                                                                    \n+-- semver@5.3.0                                                                                                                                                                                                                                    \n+-- shelljs@0.7.7                                                                                                                                                                                                                                   \n| +-- glob@7.1.1                                                                                                                                                                                                                                    \n| +-- interpret@1.0.3                                                                                                                                                                                                                               \n| -- rechoir@0.6.2                                                                                                                                                                                                                                   \n|-- resolve@1.3.3                                                                                                                                                                                                                               \n|     -- path-parse@1.0.5                                                                                                                                                                                                                            \n+-- url-loader@0.5.8                                                                                                                                                                                                                                  \n| +-- loader-utils@1.1.0                                                                                                                                                                                                                              \n|-- mime@1.3.4                                                                                                                                                                                                                                    \n+-- vue@2.3.3                                                                                                                                                                                                                                       \n+-- vue-loader@11.3.4                                                                                                                                                                                                                               \n| +-- consolidate@0.14.5                                                                                                                                                                                                                            \n| | -- bluebird@3.5.0                                                                                                                                                                                                                                \n| +-- hash-sum@1.0.2                                                                                                                                                                                                                                  \n| +-- js-beautify@1.6.14                                                                                                                                                                                                                              \n| | +-- config-chain@1.1.11                                                                                                                                                                                                                           \n| | | +-- ini@1.3.4                                                                                                                                                                                                                                   \n| | |-- proto-list@1.2.4                                                                                                                                                                                                                          \n| | +-- editorconfig@0.13.2                                                                                                                                                                                                                         \n| | | +-- bluebird@3.5.0                                                                                                                                                                                                                            \n| | | +-- lru-cache@3.2.0                                                                                                                                                                                                                           \n| | | -- sigmund@1.0.1                                                                                                                                                                                                                               \n| |-- nopt@3.0.6                                                                                                                                                                                                                                  \n| |   -- abbrev@1.1.0                                                                                                                                                                                                                                \n| +-- loader-utils@1.1.0                                                                                                                                                                                                                              \n| +-- lru-cache@4.0.2                                                                                                                                                                                                                                 \n| | +-- pseudomap@1.0.2                                                                                                                                                                                                                               \n| |-- yallist@2.1.2                                                                                                                                                                                                                               \n| +-- postcss-load-config@1.2.0                                                                                                                                                                                                                     \n| | +-- cosmiconfig@2.1.3                                                                                                                                                                                                                           \n| | | +-- is-directory@0.3.1                                                                                                                                                                                                                        \n| | | +-- minimist@1.2.0                                                                                                                                                                                                                            \n| | | +-- parse-json@2.2.0                                                                                                                                                                                                                          \n| | | | -- error-ex@1.3.1                                                                                                                                                                                                                            \n| | | |-- is-arrayish@0.2.1                                                                                                                                                                                                                     \n| | | -- require-from-string@1.2.1                                                                                                                                                                                                                   \n| | +-- postcss-load-options@1.2.0                                                                                                                                                                                                                    \n| |-- postcss-load-plugins@2.3.0                                                                                                                                                                                                                  \n| +-- postcss-selector-parser@2.2.3                                                                                                                                                                                                                 \n| | +-- flatten@1.0.2                                                                                                                                                                                                                               \n| | +-- indexes-of@1.0.1                                                                                                                                                                                                                            \n| | -- uniq@1.0.1                                                                                                                                                                                                                                    \n| +-- vue-hot-reload-api@2.1.0                                                                                                                                                                                                                        \n|-- vue-template-es2015-compiler@1.5.2                                                                                                                                                                                                            \n+-- vue-router@2.5.3                                                                                                                                                                                                                                \n+-- vue-style-loader@2.0.5                                                                                                                                                                                                                          \n| -- loader-utils@1.1.0                                                                                                                                                                                                                              \n+-- vue-template-compiler@2.3.3                                                                                                                                                                                                                       \n| +-- de-indent@1.0.2                                                                                                                                                                                                                                 \n|-- he@1.1.1                                                                                                                                                                                                                                      \n+-- webpack@2.5.1                                                                                                                                                                                                                                   \n| +-- acorn@5.0.3                                                                                                                                                                                                                                   \n| +-- acorn-dynamic-import@2.0.2                                                                                                                                                                                                                    \n| | -- acorn@4.0.11                                                                                                                                                                                                                                  \n| +-- ajv-keywords@1.5.1                                                                                                                                                                                                                              \n| +-- enhanced-resolve@3.1.0                                                                                                                                                                                                                          \n| +-- json-loader@0.5.4                                                                                                                                                                                                                               \n| +-- loader-runner@2.3.0                                                                                                                                                                                                                             \n| +-- memory-fs@0.4.1                                                                                                                                                                                                                                 \n| |-- errno@0.1.4                                                                                                                                                                                                                                 \n| |   -- prr@0.0.0                                                                                                                                                                                                                                   \n| +-- node-libs-browser@2.0.0                                                                                                                                                                                                                         \n| | +-- assert@1.4.1                                                                                                                                                                                                                                  \n| | +-- browserify-zlib@0.1.4                                                                                                                                                                                                                         \n| | |-- pako@0.2.9                                                                                                                                                                                                                                \n| | +-- buffer@4.9.1                                                                                                                                                                                                                                \n| | | +-- base64-js@1.2.0                                                                                                                                                                                                                           \n| | | -- ieee754@1.1.8                                                                                                                                                                                                                               \n| | +-- console-browserify@1.1.0                                                                                                                                                                                                                      \n| | |-- date-now@0.1.4                                                                                                                                                                                                                            \n| | +-- constants-browserify@1.0.0                                                                                                                                                                                                                  \n| | +-- crypto-browserify@3.11.0                                                                                                                                                                                                                    \n| | | +-- browserify-cipher@1.0.0                                                                                                                                                                                                                   \n| | | | +-- browserify-aes@1.0.6                                                                                                                                                                                                                    \n| | | | | -- buffer-xor@1.0.3                                                                                                                                                                                                                        \n| | | | +-- browserify-des@1.0.0                                                                                                                                                                                                                      \n| | | | |-- des.js@1.0.0                                                                                                                                                                                                                          \n| | | | -- evp_bytestokey@1.0.0                                                                                                                                                                                                                      \n| | | +-- browserify-sign@4.0.4                                                                                                                                                                                                                       \n| | | | +-- bn.js@4.11.6                                                                                                                                                                                                                              \n| | | | +-- browserify-rsa@4.0.1                                                                                                                                                                                                                      \n| | | | +-- elliptic@6.4.0                                                                                                                                                                                                                            \n| | | | | +-- brorand@1.1.0                                                                                                                                                                                                                           \n| | | | | +-- hash.js@1.0.3                                                                                                                                                                                                                           \n| | | | | +-- hmac-drbg@1.0.1                                                                                                                                                                                                                         \n| | | | | +-- minimalistic-assert@1.0.0                                                                                                                                                                                                               \n| | | | |-- minimalistic-crypto-utils@1.0.1                                                                                                                                                                                                       \n| | | | -- parse-asn1@5.1.0                                                                                                                                                                                                                          \n| | | |-- asn1.js@4.9.1                                                                                                                                                                                                                         \n| | | +-- create-ecdh@4.0.0                                                                                                                                                                                                                         \n| | | +-- create-hash@1.1.3                                                                                                                                                                                                                         \n| | | | +-- cipher-base@1.0.3                                                                                                                                                                                                                       \n| | | | +-- ripemd160@2.0.1                                                                                                                                                                                                                         \n| | | | | -- hash-base@2.0.2                                                                                                                                                                                                                         \n| | | |-- sha.js@2.4.8                                                                                                                                                                                                                            \n| | | +-- create-hmac@1.1.6                                                                                                                                                                                                                         \n| | | +-- diffie-hellman@5.0.2                                                                                                                                                                                                                      \n| | | | -- miller-rabin@4.0.0                                                                                                                                                                                                                        \n| | | +-- pbkdf2@3.0.12                                                                                                                                                                                                                               \n| | | +-- public-encrypt@4.0.0                                                                                                                                                                                                                        \n| | |-- randombytes@2.0.3                                                                                                                                                                                                                         \n| | +-- domain-browser@1.1.7                                                                                                                                                                                                                        \n| | +-- events@1.1.1                                                                                                                                                                                                                                \n| | +-- https-browserify@0.0.1                                                                                                                                                                                                                      \n| | +-- os-browserify@0.2.1                                                                                                                                                                                                                         \n| | +-- path-browserify@0.0.0                                                                                                                                                                                                                       \n| | +-- process@0.11.10                                                                                                                                                                                                                             \n| | +-- punycode@1.4.1                                                                                                                                                                                                                              \n| | +-- querystring-es3@0.2.1                                                                                                                                                                                                                       \n| | +-- stream-browserify@2.0.1                                                                                                                                                                                                                     \n| | +-- stream-http@2.7.1                                                                                                                                                                                                                           \n| | | +-- builtin-status-codes@3.0.0                                                                                                                                                                                                                \n| | | -- to-arraybuffer@1.0.1                                                                                                                                                                                                                        \n| | +-- string_decoder@0.10.31                                                                                                                                                                                                                        \n| | +-- timers-browserify@2.0.2                                                                                                                                                                                                                       \n| | |-- setimmediate@1.0.5                                                                                                                                                                                                                        \n| | +-- tty-browserify@0.0.0                                                                                                                                                                                                                        \n| | +-- url@0.11.0                                                                                                                                                                                                                                  \n| | | -- punycode@1.3.2                                                                                                                                                                                                                              \n| | +-- util@0.10.3                                                                                                                                                                                                                                   \n| | |-- inherits@2.0.1                                                                                                                                                                                                                            \n| | -- vm-browserify@0.0.4                                                                                                                                                                                                                           \n| |-- indexof@0.0.1                                                                                                                                                                                                                             \n| +-- supports-color@3.2.3                                                                                                                                                                                                                          \n| | -- has-flag@1.0.0                                                                                                                                                                                                                                \n| +-- tapable@0.2.6                                                                                                                                                                                                                                   \n| +-- uglify-js@2.8.25                                                                                                                                                                                                                                \n| | +-- uglify-to-browserify@1.0.2                                                                                                                                                                                                                    \n| |-- yargs@3.10.0                                                                                                                                                                                                                                \n| |   +-- camelcase@1.2.1                                                                                                                                                                                                                           \n| |   +-- cliui@2.1.0                                                                                                                                                                                                                               \n| |   | +-- center-align@0.1.3                                                                                                                                                                                                                      \n| |   | | +-- align-text@0.1.4                                                                                                                                                                                                                      \n| |   | | | -- longest@1.0.1                                                                                                                                                                                                                         \n| |   | |-- lazy-cache@1.0.4                                                                                                                                                                                                                      \n| |   | +-- right-align@0.1.3                                                                                                                                                                                                                       \n| |   | -- wordwrap@0.0.2                                                                                                                                                                                                                            \n| |-- window-size@0.1.0                                                                                                                                                                                                                         \n| +-- watchpack@1.3.1                                                                                                                                                                                                                               \n| | -- chokidar@1.7.0                                                                                                                                                                                                                                \n| |   +-- anymatch@1.3.0                                                                                                                                                                                                                              \n| |   |-- arrify@1.0.1                                                                                                                                                                                                                            \n| |   +-- async-each@1.0.1                                                                                                                                                                                                                          \n| |   +-- glob-parent@2.0.0                                                                                                                                                                                                                         \n| |   | -- is-glob@2.0.1                                                                                                                                                                                                                             \n| |   |-- is-extglob@1.0.0                                                                                                                                                                                                                      \n| |   +-- is-binary-path@1.0.1                                                                                                                                                                                                                      \n| |   | -- binary-extensions@1.8.0                                                                                                                                                                                                                   \n| |   +-- is-glob@2.0.1                                                                                                                                                                                                                               \n| |   |-- is-extglob@1.0.0                                                                                                                                                                                                                        \n| |   -- readdirp@2.1.0                                                                                                                                                                                                                              \n| |-- set-immediate-shim@1.0.1                                                                                                                                                                                                                \n| +-- webpack-sources@0.2.3                                                                                                                                                                                                                         \n| | -- source-list-map@1.1.2                                                                                                                                                                                                                         \n|-- yargs@6.6.0                                                                                                                                                                                                                                   \n|   +-- camelcase@3.0.0                                                                                                                                                                                                                             \n|   +-- cliui@3.2.0                                                                                                                                                                                                                                 \n|   | -- wrap-ansi@2.1.0                                                                                                                                                                                                                             \n|   +-- get-caller-file@1.0.2                                                                                                                                                                                                                         \n|   +-- os-locale@1.4.0                                                                                                                                                                                                                               \n|   |-- lcid@1.0.0                                                                                                                                                                                                                                \n|   |   -- invert-kv@1.0.0                                                                                                                                                                                                                           \n|   +-- read-pkg-up@1.0.1                                                                                                                                                                                                                             \n|   |-- read-pkg@1.1.0                                                                                                                                                                                                                            \n|   |   +-- load-json-file@1.1.0                                                                                                                                                                                                                    \n|   |   | -- strip-bom@2.0.0                                                                                                                                                                                                                         \n|   |   |-- is-utf8@0.2.1                                                                                                                                                                                                                       \n|   |   +-- normalize-package-data@2.3.8                                                                                                                                                                                                            \n|   |   | +-- hosted-git-info@2.4.2                                                                                                                                                                                                                 \n|   |   | +-- is-builtin-module@1.0.0                                                                                                                                                                                                               \n|   |   | | -- builtin-modules@1.1.1                                                                                                                                                                                                                 \n|   |   |-- validate-npm-package-license@3.0.1                                                                                                                                                                                                    \n|   |   |   +-- spdx-correct@1.0.2                                                                                                                                                                                                                  \n|   |   |   | -- spdx-license-ids@1.2.2                                                                                                                                                                                                              \n|   |   |-- spdx-expression-parse@1.0.4                                                                                                                                                                                                         \n|   |   -- path-type@1.1.0                                                                                                                                                                                                                           \n|   +-- require-directory@2.1.1                                                                                                                                                                                                                       \n|   +-- require-main-filename@1.0.1                                                                                                                                                                                                                   \n|   +-- set-blocking@2.0.0                                                                                                                                                                                                                            \n|   +-- which-module@1.0.0                                                                                                                                                                                                                            \n|   +-- y18n@3.2.1                                                                                                                                                                                                                                    \n|-- yargs-parser@4.2.1                                                                                                                                                                                                                          \n|     -- camelcase@3.0.0                                                                                                                                                                                                                             \n+-- webpack-bundle-analyzer@2.8.1                                                                                                                                                                                                                     \n| +-- commander@2.9.0                                                                                                                                                                                                                                 \n| |-- graceful-readlink@1.0.1                                                                                                                                                                                                                     \n| +-- ejs@2.5.6                                                                                                                                                                                                                                     \n| +-- filesize@3.5.9                                                                                                                                                                                                                                \n| +-- gzip-size@3.0.0                                                                                                                                                                                                                               \n| | -- duplexer@0.1.1                                                                                                                                                                                                                                \n| +-- opener@1.4.3                                                                                                                                                                                                                                    \n|-- ws@2.3.1                                                                                                                                                                                                                                      \n|   +-- safe-buffer@5.0.1                                                                                                                                                                                                                           \n|   -- ultron@1.1.0                                                                                                                                                                                                                                  \n+-- webpack-dev-middleware@1.10.2                                                                                                                                                                                                                     \n+-- webpack-hot-middleware@2.18.0                                                                                                                                                                                                                     \n| +-- ansi-html@0.0.7                                                                                                                                                                                                                                 \n| +-- html-entities@1.2.1                                                                                                                                                                                                                             \n|-- querystring@0.2.0                                                                                                                                                                                                                             \n`-- webpack-merge@4.1.0                                                                                                                                                                                                                               \nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.0.0 (node_modules\\chokidar\\node_modules\\fsevents):                                                                                                                                      \nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.1: wanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"win32\",\"arch\":\"x64\"})                                                                                     \nphill@DESKTOP-599M841 E:\\github\\bananatest\\banana2                                                                                                                                                                                                  \n$ npm run dev                                                                                                                                                                                                                                         \n\nbanana2@1.0.0 dev E:\\github\\bananatest\\banana2                                                                                                                                                                                                    \nnode build/dev-server.js                                                                                                                                                                                                                            \nStarting dev server...                                                                                                                                                                                                                            \nevents.js:160                                                                                                                                                                                                                                       \n      throw er; // Unhandled 'error' event                                                                                                                                                                                                          \n      ^                                                                                                                                                                                                                                               \n\nError: listen EADDRINUSE :::8080                                                                                                                                                                                                                    \n    at Object.exports._errnoException (util.js:1022:11)                                                                                                                                                                                             \n    at exports._exceptionWithHostPort (util.js:1045:20)                                                                                                                                                                                             \n    at Server._listen2 (net.js:1262:14)                                                                                                                                                                                                             \n    at listen (net.js:1298:10)                                                                                                                                                                                                                      \n    at Server.listen (net.js:1376:9)                                                                                                                                                                                                                \n    at Function.listen (E:\\github\\bananatest\\banana2\\node_modules\\express\\lib\\application.js:618:24)                                                                                                                                                \n    at Object. (E:\\github\\bananatest\\banana2\\build\\dev-server.js:82:18)                                                                                                                                                                  \n    at Module._compile (module.js:571:32)                                                                                                                                                                                                           \n    at Object.Module._extensions..js (module.js:580:10)                                                                                                                                                                                             \n    at Module.load (module.js:488:32)                                                                                                                                                                                                               \n    at tryModuleLoad (module.js:447:12)                                                                                                                                                                                                             \n    at Function.Module._load (module.js:439:3)                                                                                                                                                                                                      \n    at Module.runMain (module.js:605:10)                                                                                                                                                                                                            \n    at run (bootstrap_node.js:420:7)                                                                                                                                                                                                                \n    at startup (bootstrap_node.js:139:9)                                                                                                                                                                                                            \n    at bootstrap_node.js:535:3                                                                                                                                                                                                                        \nnpm ERR! Windows_NT 10.0.15063                                                                                                                                                                                                                      \nnpm ERR! argv \"C:\\Program Files\\nodejs\\node.exe\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js\" \"run\" \"dev\"                                                                                                                     \nnpm ERR! node v7.2.0                                                                                                                                                                                                                                \nnpm ERR! npm  v3.10.9                                                                                                                                                                                                                               \nnpm ERR! code ELIFECYCLE                                                                                                                                                                                                                            \nnpm ERR! banana2@1.0.0 dev: node build/dev-server.js \nnpm ERR! Exit status 1                                                                                                                                                                                                                              \nnpm ERR!                                                                                                                                                                                                                                            \nnpm ERR! Failed at the banana2@1.0.0 dev script 'node build/dev-server.js'.                                                                                                                                                                         \nnpm ERR! Make sure you have the latest version of node.js and npm installed.                                                                                                                                                                        \nnpm ERR! If you do, this is most likely a problem with the banana2 package,                                                                                                                                                                         \nnpm ERR! not with npm itself.                                                                                                                                                                                                                       \nnpm ERR! Tell the author that this fails on your system:                                                                                                                                                                                            \nnpm ERR!     node build/dev-server.js                                                                                                                                                                                                               \nnpm ERR! You can get information on how to open an issue for this project with:                                                                                                                                                                     \nnpm ERR!     npm bugs banana2                                                                                                                                                                                                                       \nnpm ERR! Or if that isn't available, you can get their info via:                                                                                                                                                                                    \nnpm ERR!     npm owner ls banana2                                                                                                                                                                                                                   \nnpm ERR! There is likely additional logging output above.                                                                                                                                                                                             \nnpm ERR! Please include the following file with any support request:                                                                                                                                                                                \nnpm ERR!     E:\\github\\bananatest\\banana2\\npm-debug.log                                                                                                                                                                                               \nphill@DESKTOP-599M841 E:\\github\\bananatest\\banana2                                                                                                                                                                                                  \n$                                                                                                                                                                                                                                                   \n```. Port 8080 is taken but I just restarted my computer and i get the same error. But running my personal project on 8080 works...\nI'm confused.. ",
    "MatthijsMali": "I did not use npm install --production. As @phillip-haydon states, it's easily reproduced.. @phillip-haydon , this one shows that your port is in use. Maybe you have a different Node instance running on the same port?. Hmm. It appears to be working now. I was working from a terminal in Atom. But it seems that that terminal is a bit errornous when it comes to admin rights. Not all dependencies were installed, nor available.\nI got it working now.. ",
    "MathieuRigard": "@eric-burel : Do you think the problem can arise from a resolution of the address of node_modules. $PATH error or something ? \nIn my case, after having manually installed \"chalk\", the error to start over again with \"semver\", \"shelljs\", \"webpack-merge\"...\n. ",
    "filipembraga": "Error: listen EADDRINUSE :::8080 \nEasy to solve! The port 8080 is in use, you need to find the PID and kill it. Try it:\nFind the PID using the port:\nnetstat -a -o | find \"8080\"\nKill the PID (-f to force the stopping proccess)\ntaskkill /pid [Number of PID found above] /f. ",
    "leodutra": "@MathieuRigard same here.\nAny solution, gentlemen?. @eric-burel I see...\nI confirm the issue in vue webpack and pwa templates ( https://github.com/vuejs-templates/pwa/issues/152 ). \nI know build is not supposed to be run in production, but its common to use NODE_ENV=production in an intermediary CI, when building for production.\nThis causes a common conflict and I think it's relevant.\nMore than that, it will stress more build systems for downloading more deps than necessary... reason why devDependencies exists. I think the real clear solution would be \"buildDependencies\", but thats not a reality on npm or yarn... \nMaybe considering the final environment on build is not so insane and is being done by some devs instinctively.. ",
    "lawsonry": "@eric-burel I am running into this right now as well. Everything is working fine on my laptop, but once I push to a production server and trigger a node build/build.js, it fails and complains about chalk.\nI realized I was putting myself into a recursive loop when I checked for the production flag:\nbash\njesse@nsa.gov$ npm config get production\nfalse\nThen I looked in node modules: \nbash\njesse@nsa.gov$ ls node_modules | grep chalk\njesse@nsa.gov$\nFrustrated, I started poking around and realized that I was using an old version of node. Go figure!\nI updated node to the most recent version like this:\nbash\ncurl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash - && sudo apt-get install -y nodejs\nOnce I did that, everything worked as expected. \nWhy updating node suddenly caused chalk to become available is beyond me, though with some previous comments talking about how manually installing chalk just caused more problems from other packages, I wonder if it's something to do with the node version itself. . ",
    "sowhatdoido": "I'm getting the same problem. Here is the context:\nI'm creating a Component folder Hello/ with 2 files in it: index.vue, and script.js.\nInside the index.vue, I have my template definition as well as <script src=\"./script.js\"></script>.\nWithin the script file, I intentionally added a tab to violate the lint definition and saw that:\n- If the logic is in the external script.js file, no error is thrown and the page renders fine.\n- If the logic is in the external script.js file, I can do npm run build successfully\n- If the logic is in the external script.js file, an error is thrown when running npm run lint\nAll three points fail if the logic is moved into the vue file instead. It seems that for whatever reason, the importing of script.js causes it to ignore the lint rules.\nTo replicate this:\n1. Download this template.\n2. In components, create a folder \"Hello/\"\n3. Move \"Hello.vue\" to \"Hello/index.vue\"\n4. Create \"Hello/script.js\", moving logic from the script tag in \"index.vue\" to this new file\n5. include the new script file with <script src=\"./script.js\"></script>.\n6. change the component import from just \"/Hello\" to \"/Hello/index\" (you could make a change in the webpack to allow index.vue as your default but not necessary).\n7. Intentionally violate lint inside of script.js\n8. Run either npm run dev or npm run build, observe the successful results.\n9. Run npm run lint, observe failed results.. Alright I figured this out: If you have a fresh copy of the vuejs webpack teplate, open up vue-loader.conf.js and add preLoaders: {\n    js: 'eslint-loader'\n  }, to your config file.\nDoing that picks up ESLint when I spit up my script from the main .vue file.\nHope this helps others! Not sure if this should be fixed in the template itself or was intentionally left out.. ",
    "antoster": "Getting the same problem.\nCode that is external to .vue file, i.e. which lives in <script src=\"./index.js\"></script> is not linted when using npm run build or npm run dev scripts. \nIn this case linting is done be eslint-loader with \"some help\" from html-webpack-plugin which parses only inline script of a .vue file and skips code that is referenced like that: <script src=\"./index.js\"></script>.\nA possible solution would be to use some webpack loader (probable write a new special one), that inlines such scripts before passing code to eslint-loader.\n. ",
    "tsarapke": "Specifying lang=\"eslint\" helped me.\nhtml\n<script lang=\"eslint\" src=\"./script.js\"></script>\nAlso if you have using something like object spread, it can throw an error. So, in that case you can pass an babel-loader as addition param of webpack request.\nhtml\n<script lang=\"babel!eslint\" src=\"./script.js\"></script>\nHope it will help for someone. But I don't think that it's a good approach. I would prefer to configure it in webpack config.. Here is webpack 2 config example, which is working for me:\njavascript\n{\n  module: {\n    rules: [{\n      test: /\\.vue$/,\n      loader: 'vue-loader',\n      options: {\n        loaders: {\n          js: 'babel-loader'\n        },\n        preLoaders: {\n          js: `eslint-loader?configFile=${path.resolve(dir.src.eslint)}`\n        },\n        postcss: [\n          autoprefixer({\n            browsers: ['last 2 version', 'ie >= 11']\n          })\n        ]\n      }\n    }, {\n      test: /\\.js$/,\n      enforce: 'pre',\n      use: [{\n        loader: 'eslint-loader',\n        options: {\n          configFile: path.resolve(dir.src.eslint)\n        }\n      }]\n    }]\n  }\n};\n.eslintrc:\njson\n{\n   \"extends\": \"airbnb\",\n   \"plugins\": [\"vue\"],\n   \"parser\": \"babel-eslint\"\n}\nMain packages:\n\n\"babel\": \"^6.23.0\"\n\"babel-eslint\": \"^7.2.2\"\n\"eslint\": \"^3.19.0\"\n\"eslint-config-airbnb\": \"^14.1.0\"\n\"eslint-loader\": \"^1.7.1\"\n\"eslint-plugin-vue\": \"^3.8.0\"\n\"vue-loader\": \"^11.3.4\"\n\"vue\": \"2.3.0\"\n\"webpack\": \"^2.6.1\"\n\n\n\n\n. ",
    "grinnery": "Issue related to opn package. Workaround: \nchmod +x node_modules/opn/xdg-open\n. ",
    "coolguy1990": "I did the following modifications to config/prod.env.js to make dotenv work...\n```\nrequire('dotenv').config();\nlet _ = require('lodash');\nlet env = {};\nenv = _(process.env)\n  .mapValues(value => \"${value}\")\n  .value();\nmodule.exports = env;\n```\nAlthough this approach retrieves all the ENV data from the server.. so we simply prefixed all our ENV fields with some prefix like XY_ and simply filtered them out like\nenv = _(process.env)\n   .pickBy( (value, key) => key.match(/^XY_/))\n  .mapKeys((value, key) => key.substring('XY_'.length))\n  .mapValues(value => `\"${value}\"`)\n  .value();\nDoesn't look pretty but it works for us. :). ",
    "resyin": "I upgraded the vue-cli yesterday. In my previous project (my first installation of vue-cli was probably in January of this year) , the same code is ok in IE11.\ud83d\ude25. ooh! the problem have been solved when i vue init webpack new-project  today.\ud83d\ude40. ",
    "lixuguang1988": "I get the same error and  i use es6-promise,\nerror come from mainfest.js, but es6-promise in vendor.js\n. ",
    "greenbayrocks": "This is still an issue.  Just created mine this morning (vue init webpack new-project), using vue-cli 2.9.1.. ",
    "F1LT3R": "Have you tried using something like bluebird for your promises instead of IEs implantation? I have not tried this, but if it's something that is incorrectly implemented/unimplemented in IE causing the problem, it could help to try bluebird.. ",
    "frandiox": "@myst729 Just install Google Chrome from your CI recipe. CircleCI example here -- latest google-chrome-stable for Linux includes \"headless\" feature, not sure about other OS.. Related #726 . Not sure if the Karma+Mocha option will be deprecated, though.. ",
    "mul14": "When Chrome headless will be part of vuejs webpack template by default?. ",
    "luisdlopez": "I added this PR to this template by mistake, however, I think it won't hurt to ask you what you guys think about this.\nI've been looking for a vue.js project template that includes scripts for building components to be distributed through npm (as well as for development), and I couldn't find any obvious information on this template regarding this use case, and I would be willing to continue working on this to add it to the official template if you think the way I went about doing it is right.. This template includes a index.js that is used as the main package file.\nIt uses this file as the entry point to build the components you want to export by running the command npm run build-dist.\nThe generated file includes all html and css (non extracted) under the folder publish.. ",
    "adrlen": "I got the same error with autobahn. I think it's related to https://github.com/websockets/ws/issues/1010 but I didn't succeed to resolve the problem.\nAnyway, we probably won't find an answer here. This issue can be closed.. If you remove autobahn from your project, npm run test won't fail anymore.. My guess is karma has issues with websockets as you can see here : https://github.com/websockets/ws/issues/1010 & https://github.com/karma-runner/karma/issues/2593\nI just had this error today and didn't have time to investigate further.. ",
    "alexey2baranov": "It works fine after\nnpm run dev\nnpm run build\nBut crashes after\nnpm run test\nSo i think this issue relates to karma, but not to ws or autobahn. Why karma can't start autobahn? Autobahn don't know about karma anything so we should not ask him from my point of view.. Maybe this related with new nodejs. I had this issue first time after node 7.7.2->7.10.0 upgrade.. A workaround that works for me:\nremove old node_modules/\nrun npm install --no-optional. https://github.com/karma-runner/karma/issues/2593. ",
    "6220119": "In your .babelrc config file, make sure comment: true is used.\nIn build/webpack.prod.conf.js file, make sure output.chunkFileName contains [name].\nExample: \n//...\noutput: {\n    path: config.build.assetsRoot,\n    filename: utils.assetsPath('js/[name].[chunkhash:5].js'),\n    chunkFilename: utils.assetsPath('js/[name].[id].[chunkhash:5].js')\n  },\n//.... I was experiencing the same issue as I was trying the Webpack Async Code Splitting feature using dynamic import with vuejs-template/webpack.\nSo I did some searching and I hit your issue reporting, then I checked the generated source from webpack and I saw that the magic comment was removed. So webpack used number (1.js, 2.js, ...) instead.\nThen I assume either the vue-loader or Babel had messed with the comment, then I found the configuration of Babel.\nActually, I think the Babel's comment configuration is not necessary because the Uglify plugin will do that on the later stage.. Yes, I mean the \"dist\" files.\nWell, it is just my guess :) I have checked again on the generated source file and also don't find those magic comments.\nI did read the source code of webpack to figure out that it had never reached the the logic to process the webpackChunkName. See the \\node_modules\\webpack\\lib\\dependencies\\ImportParserPlugin.js . ",
    "MarvinXu": "@6220119 Thx a lot! So the problem is babel-loader removed comments before webpack can find the chunkname. BTW, how did you find out ?. \n\nthen I checked the generated source from webpack\n\nI don't get it. What is \"generated source\"? Do you mean \"dist\" files? But even in the correctly generated output, I didn't see any magic comment (I turned off uglifyjs). @6220119 Thx, I should go learn the source code as well. XD. ",
    "Mouvedia": "\nIn your .babelrc config file, make sure comment: true is used.\n\nPlease add this in the documentation!\nAlso is there any way to make exception for the comment property?. ",
    "nueko": "fixed with #739. ",
    "nguyendv": "How can I get the fixes into an existing project?. Great! Thanks!. ",
    "Matoo125": "I just fixed it with clearing cookies. ",
    "sandrooco": "The case \"Let's run npm run dev and install dependencies.\" is rare and not suitable in my opinion. So this is kind of relevant.. ",
    "thatguychrisw": "Closing issue, will post in forum instead since this is not bug related.. ",
    "TuxBoy": "Ok, thanks so much for your reply.. ",
    "ieixua": "+1 \nI also need this. In my company many applications will share libraries like vue-material, vuejs, vue-router (for example) and I do not want to repeat this code in each application.\nThanks for this good job, @van-nguyen . ",
    "mika76": "I'll give it a try, although I think I tried copying the build.js file and changing that line to be process.env.NODE_ENV = 'development' and that didn't seem to work properly.... ",
    "asmyshlyaev177": "\nt's look much better now! One last thing I think is necessary is the ability to disable this functionality when not required (I use the template for non SPA apps too which wouldn't be compatible with this setup).\n\nI added this in last my commit.. It possible plugin accidentally will not include some css class to resulted css. So whitelist option contains name of classes those will be included forcibly.\n\nwhitelist Array of selectors to always leave in. Ex. ['button-active', '*modal*'] this will leave any selector that includes modal in it and selectors that match button-active. (wrapping the string with *'s, leaves all selectors that include it)\n\nMore detailed description about this plugin\nhttps://github.com/purifycss/purifycss\nhttps://www.npmjs.com/package/purifycss-webpack. I added more detailed description and more options, just in case.. It is example how to do it  just in case. It change nothing if user have someclass or doesn't.. Can make it shorter like this path.join(__dirname, '../*/.+(html|vue)') Will match subdirectories '/routing/' too, but need match only file those can contain CSS classes.\nI added it, tnx for good question.. Add description already.. My bad, fixed it.. Will be not obvious how to change something if go to plugin docs.. Nope, for include few files or subdirectories need glob-all. I tried it, searched also.. Not sure how to do better, seems like i pushed wrong commit for pull request. \nCan i merge all these commits to one or need close this pull request and create a new one?. Not all, most of it.. ",
    "Ffloriel": "My thought on Purifycss is that it's not ready yet to be added by default on a template.\nThere are some issues that are yet to be resolved (purifycss issues).. Purifycss is not actively maintain so I moved away from the project to have more control. I created a similar tool call purgecss.\npurgecss is being used in some laravel, vue, tailwindcss projects now and should be more reliable.. There is also an example with vue in the purgecss repository here\n@LinusBorg I agree with the reason you gave. The tool can remove used css if it is not configured properly.  Since the webpack configuration files are still accessible after vue-init, I think it's better not to include that kind of tools by default. Instead, the tools should give instructions about how to use it with webpack or vue.\n. done. sorry about that. @nickmessing is there something else that needs to be changed?. ",
    "focussing": "Maybe this gives another view on the subject?\nhttps://forum.vuejs.org/t/purifycss-removes-styles-in-single-file-components/12123/3. Thank you, I did. Sorry for the trouble\n. that did the job. my OwnCloud sync did not copy hidden files... so .babelrc file amongst others where not there... \nTHANKS!. So it should update to 2.5.13 after npm install?\nSorry, it doesn't do that.\nNot when creating the project:\n\nNor when I run npm install on the command line again (to be sure).\nCould there be a string comparison error, instead of an integer comparison of the third field?\nString comparison will say that 2.5.2 is newer than 2.5.13 (versus 2.5.02 is not newer than 2.5.13).. I checked the package.json in the ./node_modules/vue folder. At the bottom of that file the version is stated.\nDeleted the node_modules folder and ran npm install again.\nNow the version number is correct.\nSo somewhere I made a mistake. Very sorry for bothering you!. ",
    "philwolstenholme": "For anyone that finds this issue via search, I've just implemented purgecss fairly easily. \n\nInstall purgecss-webpack-plugin: https://github.com/FullHuman/purgecss-webpack-plugin\nInstall node-glob-all: https://github.com/jpillora/node-glob-all\nRequire glob-all and purgecss-webpack-plugin in build/webpack.prod.conf.js:\nconst glob = require('glob-all')\nconst PurgecssPlugin = require('purgecss-webpack-plugin')\nAdd this to the bottom of the plugins section of build/webpack.prod.conf.js:\n\nnew PurgecssPlugin({\n      paths: glob.sync([\n        './index.html',\n        './src/*.vue',\n        './src/**/*.vue'\n      ])\n    }). If you're using Vue transitions with something like vue2-animate you'll need to add the animation class name prefixes to whitelistPatterns, for example:\nwhitelistPatterns: [\n        /^fade-/,\n        /^slideUp-/\n      ]. ",
    "vordimous": "we have multiple applications running under the same domain. in order to have them running locally all under the same port they have to be under different context. ie localhost:8080/app1, localhost:8080/app2 etc. it isn't super necessary for everyone but it don't break the existing functionality and adds new functionality so i figured i would make a pull request.\nAJ Danelz\n\nFrom: Thorsten L\u00fcnborg notifications@github.com\nSent: Saturday, September 2, 2017 11:22 AM\nTo: vuejs-templates/webpack\nCc: Vordimous; Author\nSubject: Re: [vuejs-templates/webpack] make the webpack hot module reloader work with a publicPath set (#744)\nI haven't really understood in what context this is useful...\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/vuejs-templates/webpack/pull/744#issuecomment-326750596, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AC3219PylXHHaFpRZlXGa5PQgT2f7P9eks5seXLEgaJpZM4N4zwS.\n. ",
    "standbyme": "Thanks!. ",
    "slidenerd": "I dont think this template uses SSR, you would have to look into nuxt for that. ",
    "PanJiaChen": "@MaxMilton same problem\nl remove \n// compiler.plugin('compilation', function (compilation) {\n//     compilation.plugin('html-webpack-plugin-after-emit', function (data, cb) {\n//         hotMiddleware.publish({action: 'reload'});\n//         cb()\n//     })\n// });\nnow hot updates is ok. \u624b\u52a8\u5b89\u88c5\u4e00\u4e0b postcss-loader \u5e94\u8be5\u5c31\u597d\u4e86\nshell\nnpm install postcss-loader --save -D. may be same as https://github.com/vuejs-templates/webpack/issues/1140\nsolution\nin ./build/webpack.base.config.js\nbash\n{\n  test: /\\.js$/,\n  loader: 'babel-loader',\n  include: [resolve('src'), resolve('test'), resolve('node_modules/webpack-dev-server/client')]\n}. https://github.com/vuejs-templates/webpack/blob/cd4d7d957c9af3d37092c79bf490b56b8d88b108/template/config/index.js#L20. l have remove it in my company's project and did not find any problem.\nFor safety, it need more testing.\n. I have specially tested the jsx , no problem.. If you set \nhttps://github.com/vuejs-templates/webpack/blob/cd4d7d957c9af3d37092c79bf490b56b8d88b108/template/config/index.js#L20\njs\nnotifyOnErrors: false\nyou will never use it. \nAnd it used only in development env.. Maybe you can focus on  https://github.com/webpack-contrib/uglifyjs-webpack-plugin/issues/197. I think it is easier and safer to migrate directly to vue-cli@3 than to upgrade from this template to webpack4 now.. https://cli.vuejs.org/guide/creating-a-project.html#pulling-2-x-templates-legacy. This is not necessary. In the mode: 'development' is the default configuration.\n. https://webpack.js.org/guides/caching/#module-identifiers\nHashedModuleIdsPlugin is enough. In  mode: 'production', it default enable.. Better with contenthash.\nhttps://github.com/webpack-contrib/mini-css-extract-plugin/issues/135\n. ",
    "adam-lynch": "This still doesn't work from me. Am I missing something?\nI've: \n\nextract-text-webpack-plugin@3.0.0\nhtml-webpack-plugin@2.30.1\nhttp-proxy-middleware@0.17.3\ninject-loader@3.0.1\nwebpack-dev-middleware@1.12.0\nwebpack-hot-middleware@2.18.2\nwebpack@3.4.1 \n\nI assume I shouldn't actually do https://github.com/vuejs-templates/webpack/issues/751#issuecomment-309955295 because it'll break other stuff.\ncc @sudo-suhas @LinusBorg . Does this change anything? Stabilizing webpack 3 (week 18\u201319). @LinusBorg what are the downsides to that exactly? That if you edit index.html (at the root of your project), your app won't reload?. I've been keeping an eye on this issue but it might not receive any more comments so I hope you don't mind but I created #1022 to track when the hot reloading of the root html file will work again. . @LinusBorg sure, updated. ",
    "LeeBelieve": "+1   still have HMR failed problem with the same versions\n. ",
    "txchen": "When I run vue init webpack#webpack_3, I got Failed to download repo vuejs-templates/webpack#webpack_3: Response code 404 (Not Found) \nHow should I fix this, please?. @sudo-suhas but my newly generated project still has \"webpack\": \"^2.6.1\"?. ",
    "aimergenge": "@MaxMilton \nI updated as you say but it doesn't work still.\nThank you however. The downgrading works for me.\nMaybe there is something else blocking you.\nYou can open a new issue if you still can not solve the problem.\n2017-07-04 23:46 GMT+08:00 Adri\u00e0 Fontcuberta notifications@github.com:\n\n@aimergenge https://github.com/aimergenge did downgrading work for you?\nI upgraded to Webpack 3.0 and when I noticed issues related to HMR I ran\ninto this issue and downgraded again to 2.6.1.\nBut HMR is still not working properly (reloads the whole page as happened\nto you) and just warning me in the console:\n[HMR] Update check failed: Error: Manifest request to\n/b1188c7fc17bb438d0f7.hot-update.json timed out. at\nXMLHttpRequest.request.onreadystatechange in handleError @\nprocess-update.js?e13e:122.\nI downgraded by removing node_modules directory, cleaning npm cache and\ninstalling again.\nThanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/764#issuecomment-312908374,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ANKO-EAmwiqjx-Q6ZlahpeDzYVb7G6yoks5sKl5UgaJpZM4OEO3-\n.\n. \n",
    "afontcu": "I downgraded vue-loader and now everything is working. Missed that change. Thanks :) . @nickmessing thanks for your time\nI have a folder for each component, and I use an index.js files to expose the component:\nbash\nsrc/\n  components/\n    ComponentWhatever/\n      index.js\n      ComponentWhatever.vue\n      ComponentWhatever.spec.js\nindex.js just import ComponentWhatever from './ComponentWhatever' and then exports it.\nto avoid having to type something like \njs\nimport ComponentWhatever from '../../ComponentWhatever/ComponentWhatever' \nWhen I try to import a component (from another component or from the tests indistinctly) I cannot use the absolute path (src/components/ComponentWhatever). OTOH it is working fine with the @ alias and with relative paths.\nDoes this even make sense?\nShould I use another architecture for my components folder?\nThank you very much!. Well, looks like I fixed my issue with Jest, just missed this regex pattern in my ModuleNameMapper:\njson\n\"^@[/](.+)\": \"<rootDir>/src/$1\",\nI still don't get why I can't just use src/components/Component/ but since the @ alias is working...\n. Hm, I tried adding\njs\nmodules: [resolve('src'), 'node_modules']\nto my webpack base configuration and absolute paths are still failing. Something else must be wrong... nevermind, since @ is working this is no longer a problem so I'm closing the issue.\nThanks @nickmessing for your time! Appreciate it.. @nickmessing finally! Now I understand, I was adding both the module.exports line and also src/ to every import statement. Thanks!\nThen I added \njs\n\"^components[/](.+)\": \"<rootDir>/src/components/$1\",\nto the ModuleNameMapper object from my Jest config and components/MyComponent worked fine both in dev and test environments.\nKudos to you! \ud83c\udf89. Hi,\nI've created a SPA with this template and it's working fine in an S3 bucket. You just need to upload your dist/ folder to your bucket.\nPro tips:\n\nI used s3-deploy package to automate the deployin process\nMake sure you disable the cache for your index.html, I ran into some issues with this. To do that, I'm uploading the whole folder with no cache flags, and then reuploading the index.html with the --cache 0 flag, like this (package.json scripts):\n\njs\n    \"deploy-s3\": \"s3-deploy --cwd './dist/' --profile YOUR_PROFILE --region YOUR_REGION --gzip --etag  --bucket YOUR_BUCKET\",\n    \"deploy-s3-task\": \"npm run deploy-s3 -- './dist/**' && npm run deploy-s3 -- --cache 0 -- './dist/index.html'\",\n(make sure you npm run build your project before uploading it!)\nHope it helps.. Hi @iharsuvorau, \nthat message only means that you cannot browser to file://whatever/path/you/are/using/index.html and expect your project to work.\nHave you tried uploading it to S3? I just ran npm run build and uploaded the whole /dist/ and everything worked as expected.\nHope it helps!. It might have something to do with windows and hosts... could try changing your host from localhost to 0.0.0.0 in config/index.js? Solved a couple of issues for me.\nHope it helps.. Hm, that's weird. Could you just double check that you are using node 8.8.0? As long as you are on node greater than v4, you should be good to go.\nCould you just describe your environment a little more? node, npm versions, OS, etc.\nAre you running your app from the OS cli or using some IDE?\n. You are completely right, I'd rather stick with the current config. I'm afraid I don't know how to improve bail error output, so feel free to close the PR if you think it's been waiting for help long enough.\nThanks!. Google says that \"This bug seems to be caused by installing a dependency that depends on an old version of NPM\". (source).\nRunning npm config set loglevel warn might solve the issue, which I think is not related to vue-cli or this template.\nHope it helps!. Hi!\nI think autoprefixer is working fine, it's just using browserslist to decide whether or not prefixes should be added. Try adding user-select: none and it will properly add prefixes in your dist files. Transform attribute does not require prefixes in last browser versions.\nIf you change your browserslist config to something like\njson\n\"browserslist\": [\n  \"> 0.5%\",\n  \"last 15 versions\"\n]\nyou'll see more vendor prefixes being added.\n__\nSo the question could be \"why is dev build adding prefixes?\". Is it possible that dev build process ignores browserlist? But... another question: does it even matter? \nhope it helps!. Hi!\nCould you provide some kind of environment info or even better, a repository link? It's hard to know what's going on without context.\nArrow functions should be working out of the box, so it must be something else.. If the error says \"syntax error\", it may be related to the import statement and babel. Check this out.\nhope it helps!. Hi,\nIt's hard to tell what's going on without seeing your package.json file. There's probably a syntax error. Try to lint your JSON file here.\nHope it helps!. Hi,\nI think you'll need to import the mixins file in your components. You can read some alternatives here.\nlong story short: import the file in your component or add it to your webpack configuration.\nHope it helps!. I think he means that this line:\nhttps://github.com/vuejs-templates/webpack/blob/4f564a2715dd9ca39307c5603a3b91f0523f1f67/utils/index.js#L78\nshould take into account the npm/yarn option selection instead of always displaying \"npm run dev\". Here they suggest changing your sourcemap devtool.\nHope it helps!. Hi! Could you provide some sort of environment to reproduce the issue (github repo, codesandbox...)? It looks like a webpack css/sass loader config.. Hi,\nhave you tried this? https://github.com/vuejs/vue-cli/issues/483\nhope it helps.. Hi! Does this file still makes sense? vue-loader config was weird enough to justify its own file, but since now most of its configuration is wiped, should we consider inlining it to webpack.base.conf.js?. ",
    "wuaiwuai": "I have tried putting some files in static/posts/text.md but the sources do not appear when running a local server.\n\nAm I missing something?. @nickmessing thank you for your quick responses,\nI created a new project with vue init webpack vue-webpack and put in a test file at static/posts/text.md\n\nwhen running a local server, the .md file is not present at localhost:8080/posts/text.md. can anyone else confirm this?. @nickmessing this did the trick! Thank you for your help.. ",
    "PierBover": "If anyone stumbles upon this, I fixed it by modifying webpack.prod.conf.js.\nminify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeAttributeQuotes: false\n      },. I created a new project from scratch using the latest version and and I get your numbers.\nThen I tried npm run build --report on my project and the numbers differ from Webpack Visualizer.\nI get these numbers which are closer to what I was expecting, but still higher than what I'm getting when building from a new template.\n\nI guess I should migrate the project to a new version of the template.. Could it be that the variable doesn't exist?\nbackground-color: $nav-dark;\nEven if you import an .scss file in another .vue file that doesn't make your variables globally accessible. You have to import your .scss variables in every .vue file you want to use them as explained here:\nhttps://github.com/vuejs/vue-loader/issues/328. @benmccallum your problem is that you are using type instead of lang.\n<style type=\"scss\" scoped>\nShould be:\n<style lang=\"scss\" scoped>\nDocs: https://vuejs.org/v2/guide/single-file-components.html. For regular CSS you don't need to specify lang, and type is never used for the style tag in vue components.. Here is another shenanigan with SVGs.\nWhen using <img src=\"../../../assets/icon.svg\"> the icon renders fine as a data URL.\nBut when passing the path as a prop <img :src=\"iconPath\"> I get exactly this in the DOM <img src=\"../../../assets/logo.svg\"> which obviously renders a broken image.. Ok I figured it out thanks to this discussion:\nhttps://github.com/vuejs-templates/webpack/issues/126\nI still can't resolve paths directly in the <img> tag though. I don't know if declaring relative paths is worse than declaring computed properties per icon. Probably the best solution is to create a plugin to automate that.. Why not simply go with src?. ",
    "eddyerburgh": "Oops, wrong .gitignore. I've made a PR to replace karma and mocha. I'll make another PR to add vue-test-utils when it's release. I've created a vue jest preprocessor that adds source maps. In light of the patent drama, are we still happy to go ahead with replacing Karma and mocha with Jest?. Yeah you're right, we should get correct source mapping before merging.\nAs you said, jest-vue-preprocessor doesn't return a map or have any logic to produce one. I'm going to play around with the vueify code and jest.. Before we merge we need to create a vue jest preprocessor that adds correct source mapping. There are plans for an official preprocessor, but I'm not sure how long it will be until it is published. @johnsardine I've created a vue jest preprocessor that adds source maps - https://github.com/eddyerburgh/jest-vue. I tried to add to vire's existing library, but found it easier to create a fresh repo.\nIn light of the patent drama, are we still happy to go ahead with replacing Karma and mocha with Jest?. Are people happy for me to fix conflicts and get this branch merged? @LinusBorg . conflicts fixed \ud83d\udc77. Ok, makes sense \ud83d\ude04\nIf I add Jest as the default unit tests option, and include karma and mocha options, will you be happy to merge?. I've updated the PR and fixed the issues  @chlab highlighted.\nI'm banging my head against the wall trying to get the test to run. The yes command doesn't trigger the vue-cli build, and the test hangs. I've tried lots of different ways of passing input to the command, but no luck.\nDoes anyone have any ideas?. I think this PR is ready to merged. If anyone would like to test and give feedback it would be really useful \ud83d\ude00. Yes definitely. It should test every combination if possible. @nirkki can you try running:\nnpm run unit -- --no-watchman\nI'm basing this off a stackoverflow answer.. I'm not sure what to suggest. It looks like Jest has some long standing issues with Windows that I was unaware of. \nAll the issues I have looked at suggest that they won't be fixed by the maintainers any time soon \ud83d\ude15. Sorry @nirkki . We'll probably move back to Karma and mocha as the default because of this issue. @nirkki Can you post the full path of your tests. Does it include parentheses, like C:\\Program \n Files\\tmp (x86)\\project\nI'm pretty sure it has to do with this issue \u2014 https://github.com/facebook/jest/issues/2381. @robertmain could you change the script to this:\njs\n\"unit\": \"jest test/unit --coverage\",\nAnd see if that solves your issue. @nirkki @LinusBorg Yep this is a problem with vue-jest. Can you make an issue @nirkki https://github.com/eddyerburgh/vue-jest/issues?. Related to this issue\u2014https://github.com/facebook/jest/issues/4509#issuecomment-344976940\nI'll look into this issue, I'm unsure whether it's a problem with vue-jest or jest. @maxpou I'm copying your issue to the vue-jest repo. Issue in vue-jest\u2014 https://github.com/eddyerburgh/vue-jest/issues/32\nI don't have permission to close this issue \ud83d\ude09. Yes, you're right @LinusBorg . This PR should update Jest to 22.4.2.. @lben what were the steps you had to follow? We should add any missing config to this template. I though it was used before my changes, but it looks like its switched to use strict and const. I'll change it back \ud83d\udc4d. ",
    "lbssousa": "Good! But what about basing it in vue-property-decorator rather than vue-class-component? The first one provides more (TS-only) decorators than the last.. Maybe you could start with a more basic template, without using classes and inheritance, but still with TS type inferences, as proposed in https://github.com/Microsoft/TypeScript-Vue-Starter. It could be more interesting after https://github.com/vuejs/vue/pull/5887 is merged (related issue: https://github.com/vuejs/vue/issues/478).. ",
    "bmass02": "@lbssousa I chose vue-class-component because it seemed to be a safer option (officially supported and more popular).. @Toilal I guess I didn't explain my choice of only vue-class-component well.\nFor an official template/option, I think that vue-class-component should be added as a convention for TS support where vue-property-decorator should be left as a configuration. \nThe reasons are that it keeps the template lean (one less dependency to worry about) and that extra dependency (vue-property-decorator) isn't officially supported. I also don't think that everyone will necessarily want vue-property-decorators. Maybe if it becomes a more standard way of setting up Vue with TS then it should be added, but as of now it just doesn't seem to be part of the standard.\nAgain, maybe I'm wrong about what the standard is for Vue with TS. But to sum up my reasons, I want to keep the template as simple as possible while also providing the standard way of setting up Vue with TS.. @lbssousa I think that would be great! I'll try to keep track of what is going on with that PR, but anyone is welcome to add to this PR.. I'm going to close this in favor of #797 . ",
    "zhuxiao2004": "You means when I run 'vue init webpack xxx'  ,the npm download zhe latest template from github at the same time\uff1f. Thank youso much !. ",
    "ferllings": "Yes\n\nI installed node-sass and sass-loader. Yes the variable exists and is imported from a scss file before this instruction.\nI'll get back to you in few weeks (I'm on holiday), and provide a repository\nThanks for your help so far.. \n",
    "benmccallum": "I'm getting the same issue. Inspecting the generated CSS in Chrome DevTools the output is just what I've written in my *.vue file, unprocessed. i.e. I'm doing nested styles and the nested structure is spat out to browser.\nShould be able to reproduce with this app I'm playing around with and you can see in components/Home.vue I'm trying to do nesting in my styling like #options { a { ... } that isn't being compiled into proper CSS on front-end.\nHelp much appreciated :) \nEdit: I generated this project about 1 week ago using the vue-cli (v2.8.2) and this repo (webpack) template. . Oh wow, sorry. Huge fail on my part. Had read the docs and all but old habits I guess with typing \"type\". Thanks! Not sure if the OP would consider this closed though :p. ",
    "mdmasumbillah": "But I want to use this style. Code below\ntemplate\n<style type=\"text/css\">\n    body, html {\n        overflow: hidden;\n    }\n</style>\n\n....\ntemplate\nPlease help me.. ",
    "changchengqin": "@LinusBorg \nI am sure,my project's launch.json have a correctly setting.\nI guess It's vscode's bug,because when I type\n\nnode --inspect build/build.js\n\nin terminal under my project workspace,everything is all right.\nIt's just a problem in the debug mode of vscode.. ",
    "Igogrek": "Well that's sad. While I certainly agree on keeping template as minimal as possible - TypeScript is one of the most needed (or at least most discussed) features missing on vue-cli (see https://github.com/vuejs/vue-cli/issues/263)\nhttps://github.com/vuejs/vue/pull/5887 shouldn't break anything but I will double check. @yalishizhude \nThanks. Will think how to do it best after https://github.com/vuejs/vue/pull/6391 is merged.. Updated the fork and dependencies versions.\n@yalishizhude \nI've added unit test TypeScript support. Note that it will need to be changed again as https://github.com/vuejs-templates/webpack/pull/824 likely will be merged soon.\nWaiting for 2.5 for now, to be able to update TypeScript usages properly (definitions are merged already).. @solarhell I've updated PR again to use Vue.extend() now.\nCouldn't find any docs for the new intended TypeScript definition usage, but this approach seems best and autocompletion works great.\nTested different combinations with different ESLint settings and everything seem to work now.. @skray Thanks. Totally forgot to add chai - fixed now.. @njleonzhang \nJust checked - seem to be fine for me.\nI assume you have a warning in IDE, not the project build?. @njleonzhang You're right. Guess I'll need to put back vue-shims for better IDE support.\nFor now put vue-shims.d.ts in src folder with:\ndeclare module \"*.vue\" {\n    import Vue from \"vue\";\n    export default Vue;\n}\nAnd change imports to have a .vue extension:\nimport HelloWorld from '@/components/HelloWorld.vue'\n...\nimport App from './App.vue'\nSince I don't really like leaving this extensions only for TypeScript - I'll try to find other solution which works both for CLI build and IDE too.. @njleonzhang No, sorry can't help with Mixin.\nFor the IDE support - https://github.com/vuejs/vetur/issues/213 indicates that  .vue extension is the only solution for now. Reverted shims back.. @Right2Drive Thanks for the info.\njestpack looks quite complex to setup and very outdated. ts-jest turned out to be just the right tool.\nI've added basic Jest support for now, coverage should be tweaked though (will do later).\nOverall this PR is getting harder and harder for me alone to maintain.\n@LinusBorg is there any chance this getting merged?\n. @sthomp \nI did, but at the time of me checking it TSLint had some issues with .vue files.\nAnd it seems that issue is still open https://github.com/palantir/tslint/issues/2099\nESLint worked ok for me, additionally TS plugin could be installed. But ideally for TypeScript - TSLint should be used.\nI will check again soon.. I've updated the fork again. \nHad some more issues with Jest+TypeScript but resolved them now.\nI've also fixed unit tests so it builds successfully now.\n@LinusBorg since there are unit tests now, can this be merged or not?. I've updated the PR and checked with both TS enabled and disabled - everything seem to be fine.\n@LinusBorg did you have time to look at the PR locally?. @lyonsbp I've added the extension - should not be a problem anymore (was only the case if router isn't installed).. @Toilal \nThat could work, but I think that TSLint via fork-ts-checker-weback-plugin would be much better choice since it can do TSLint too.\nI would've added this plugin already but most likely there will be more issues with specific cases (like I already had with Jest) and I would rather leave this as is for now.\nOr it would be nice if someone could test this out thoroughly.\nPS: fixed conflict, CI error looks quite strange and unrelated to the code.. @LinusBorg \nI'm not completely sure how to fix full and full-karma-airbnb builds as they seem to miss some scripts, namely lint unit and e2e (I assume not in package.json).\nJust updated from develop and it doesn't look like it's caused by my code... @ThePlastic \nPretty sure this is not related to the PR, but with the local environment - most likely global Vue CLI version was updated (3.0?).. @ThePlastic\nIf you downgrade your CLI back to the version 2 it should work.. @mikob\nThis will not work with version 3 - try using default TS plugin for it.\nI will try to update from fresh develop soon to get unit tests fixed but for now I don't have time.. Yes, removed. Thanks.. It is changed via metalsmith - that was the basic idea of the PR. \nSee my initial comment and meta.js. ",
    "yalishizhude": "Hey~you forget unit tests. @LinusBorg \n\nSupport typescript \nIt can auto reload when I\u2018m writing unit test. \n",
    "solarhell": "@Igogrek Vue 2.5.0 already released \ud83c\udf7a. ",
    "aesfer": "For anyone wanting to give this PR a try you can use:\nvue init vuejs-templates/webpack#pull/797/head my-project. ",
    "skray": "@Igogrek did you have plans to convert the included unit test as well? I would find it strange to generate a TS project and to have some of the files still be Javascript.\nI bring this up because if you do convert it over, at a minimum you'll need to include the @types/mocha and @types/chai dependencies, and add import {expect} from 'chai' to the Hello.spec.ts file.. ",
    "njleonzhang": "@Igogrek, \nI get warnings, can you help?\ncan not find module '@/components/HelloWorld'\nimport HelloWorld from '@/components/HelloWorld'\ncan not find module '@/App'\nimport App from './App'. @Igogrek Yeah in vscode. But the build is OK.. @Igogrek Tnx, I also found this solution. As you mentioned. It's not good enough. Hope you can find perfect one. \nBTW, I have a question on typescript and mixin. would you please help to check? \nhttps://forum.vuejs.org/t/typescript-to-restrict-vue-component-instance-must-have-special-properties-or-methods/21709. @LinusBorg Tnx for explanation. I understand now. No bug exists. \nIn my project, I split template code to a independent pug file (for some reason). when run release/dev, no error occurs. But if I run npm run test, the pug file is loaded by above code, which need a pug-loader, error occurs. So I start to look into this test/index.js, and thinking why we need these lines. Now you provide me  a explanation, I understand. tnx again.. @ChadTaljaardt tnx for response. looking forward to next version. \nWhat about typescript?. ",
    "Parasrah": "I know I tried getting this to work with Jest earlier in the month and failed, due to the limited support offered by Vue and Jest for Typescript. Something such as jestpack may offer a solution to this, although I'm not sure if this is as reliable as ts-jest, and definitely less reliable than jest itself. I could see this being a major hurdle in integrating this with #824. ",
    "lsim": "Not sure if this sort of thing is appropriate here, but I have spent a couple of days converting an angular2 project into vue+ts using this template and it's been a very good experience. This a seriously powerful stack - and simple enough in terms of configuration that you can adapt it to your needs - I like the balance it strikes.\nJust wanted to say thanks for the hard work - I hope you get it merged soon!. Yeah, I've seen this too. Vscode wants you to include the  .vue extension when importing components. . ",
    "sthomp": "Have you considered adding tslint to the template?. ",
    "ThePlastic": "@Igogrek take into consideration the idea of adding support to sass and scss, in my case it was enough to add these 2 lines to package.json's dev dependencies:\n\"sass-loader\": \"^ 6.0.6\"\n\"node-sass\": \"^ 4.7.2\"\nand the I can simply use: <style lang=\"scss\"> and it compiles without any problem.. @LinusBorg i can see your point. I wasn't able to try this pull anymore... I got a lot of error and it doesn't ask for any option (i mean, typescript, unit test, linter,  e2e...) . @Igogrek I'm sure it is.\nI've also updated my vue CLI but got the same errors. So this pull is no longer usable until merge?\n. solved same issue with it, thanks @johnellinwood . ",
    "lyonsbp": "First of all thanks for the good work here! So I just installed this with vue init vuejs-templates/webpack#pull/797/head project-name and have a Typescript error in the HelloWorld.vue file.\nCannot find module './components/HelloWorld' (10,24). This is in VS Code if that matters. The code still compiles fine when I run npm dev, but I'd like to get rid of the error if possible. \n. Well I have a different project that is working with .vue files which is why im confused. This is the working project, this is the working project: https://github.com/lyonsbp/vue-typescript-spa \nWhich is just a remake of the official Microsoft Typescript Vue starter, which is here\nI am going to mess around with settings between the 2 setups and ill report back.\nEdit: Well nevermind, I was importing with the extension in the other project. It does look like people are looking into a solution though, here is another issue thread. @Igogrek Could you please add the .vue extension to the App.vue file? I don't know how to make a PR on a PR, new to git sorry.. ",
    "lzl124631x": "can we achieve simply adding <script lang=\"typescript\"> to enable typescript in .vue?. Hi @LinusBorg  Thanks for your reply!\nThe first one actually should be target: 'http://localhost:3000' according to dev-server.\nMy problem was that, after changing the webpack.dev.config.js, I have to ctrl+c to shut down the dev-server and restart npm run dev. The old node application is NOT shut down along with it and occupies port 8080; and the new node application starts at port 8081 (I didn't notice that!). So if I keep visiting localhost:8080 I will get 404 forever; I need to localhost:8081 to get 200.. ",
    "ffxsam": "@Igogrek For what it's worth, feel free to borrow any of my work from this PR: https://github.com/vuejs-templates/webpack/pull/1238\nIt adds TSLint support to the template, with the right configuration to have it work out of the box with VSCode. It was a bit tricky, since TSLint's no-unused-variables seems to fight with the tsconfig noUnusedLocals.. @Patskimoto Why wouldn't you just use the latest vue-cli which has built-in TypeScript support?. @LinusBorg  I'm having the same issue with a fresh project using the webpack template.\nHere's the result of yarn test:\nERROR in ./src/components/HelloWorld.vue\nModule not found: Error: Can't resolve 'ts-loader' in '/Users/samh/Code/ts-test/src/components'\n @ ./src/components/HelloWorld.vue 8:0-130\n @ ./src ^\\.\\/(?!main(\\.js)?$)\n @ ./test/unit/index.js\n30 11 2017 15:30:36.208:INFO [karma]: Karma v1.7.1 server started at http://0.0.0.0:9876/\n30 11 2017 15:30:36.209:INFO [launcher]: Launching browser PhantomJS with unlimited concurrency\n30 11 2017 15:30:36.239:INFO [launcher]: Starting browser PhantomJS\n30 11 2017 15:30:38.018:INFO [PhantomJS 2.1.1 (Mac OS X 0.0.0)]: Connected on socket z19UFgN5G5asK_IUAAAA with id 2626560\n30 11 2017 15:30:38.210:WARN [reporter]: SourceMap position not found for trace: undefined\nPhantomJS 2.1.1 (Mac OS X 0.0.0) ERROR\n  Error: Cannot find module \"!!ts-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0&bustCache!./HelloWorld.vue\"\n  at index.js:72\nAfter adding ts-loader and typescript as dev dependencies, I tried again and got this:\n```\nERROR in /Users/samh/Code/ts-test/tsconfig.json\n[tsl] ERROR\n      TS18003: No inputs were found in config file 'tsconfig.json'. Specified 'include' paths were '[\"*/\"]' and 'exclude' paths were '[]'.\n @ ./src/components/HelloWorld.vue 8:0-130\n @ ./src ^.\\/(?!main(.js)?$)\n @ ./test/unit/index.js\nERROR in ./node_modules/ts-loader!./node_modules/vue-loader/lib/selector.js?type=script&index=0&bustCache!./src/components/HelloWorld.vue\nModule build failed: error while parsing tsconfig.json\n @ ./src/components/HelloWorld.vue 8:0-130\n @ ./src ^.\\/(?!main(.js)?$)\n @ ./test/unit/index.js\n30 11 2017 15:33:01.648:INFO [karma]: Karma v1.7.1 server started at http://0.0.0.0:9876/\n30 11 2017 15:33:01.650:INFO [launcher]: Launching browser PhantomJS with unlimited concurrency\n30 11 2017 15:33:01.653:INFO [launcher]: Starting browser PhantomJS\n30 11 2017 15:33:03.426:INFO [PhantomJS 2.1.1 (Mac OS X 0.0.0)]: Connected on socket PI4l5tSd-DqrrQE0AAAA with id 85387804\n30 11 2017 15:33:03.606:WARN [reporter]: SourceMap position not found for trace: undefined\nPhantomJS 2.1.1 (Mac OS X 0.0.0) ERROR\n  Error: Module build failed: error while parsing tsconfig.json\n  at index.js:12019\n```\nThis is my tsconfig.json, recommended by the official Vue docs:\n{\n  \"compilerOptions\": {\n    // this aligns with Vue's browser support\n    \"target\": \"es5\",\n    // this enables stricter inference for data properties on `this`\n    \"strict\": true,\n    // if using webpack 2+ or rollup, to leverage tree shaking:\n    \"module\": \"es2015\",\n    \"moduleResolution\": \"node\"\n  }\n}\nThe only TypeScript code I've added is in HelloWorld.vue, just as a test:\n<script lang=\"ts\">\nfunction doit(val: string): void {}\nexport default {\n  name: 'HelloWorld',\n  methods: {\n    fake() {\n      doit(123);\n    },\n  },\n};\n</script>. Yep, no longer an issue with Vue CLI 3. Thanks!. @LinusBorg That's great! It wasn't documented at all so I wasn't sure how to go about doing it.. It's a little opinionated as it includes some basic tslint rules. I can remove those if it's an issue.. Strange, nothing looks different when using the --report option.\n```\n$ node build/build.js --report\nHash: 71e8ffbde3298002398b\nVersion: webpack 3.10.0\nTime: 52278ms\n                                                  Asset       Size  Chunks                    Chunk Names\n                 static/fonts/element-icons.6f0a763.ttf      11 kB          [emitted]\n               static/js/vendor.dd83b1b8e4fd1abaaa41.js    3.19 MB       0  [emitted]  [big]  vendor\n                  static/js/app.92cc43da3cf31fe269ca.js     110 kB       1  [emitted]         app\n             static/js/manifest.7eef0b956dce90643db8.js    1.49 kB       2  [emitted]         manifest\n    static/css/app.a6da45ff8c50029eb04cd5330fee1139.css     232 kB       1  [emitted]         app\nstatic/css/app.a6da45ff8c50029eb04cd5330fee1139.css.map    1.25 MB          [emitted]\n           static/js/vendor.dd83b1b8e4fd1abaaa41.js.map    8.53 MB       0  [emitted]         vendor\n              static/js/app.92cc43da3cf31fe269ca.js.map     337 kB       1  [emitted]         app\n         static/js/manifest.7eef0b956dce90643db8.js.map    7.79 kB       2  [emitted]         manifest\n                                             index.html  621 bytes          [emitted]\nBuild complete.\nTip: built files are meant to be served over an HTTP server.\n  Opening index.html over file:// won't work.\n\u2728  Done in 53.97s.\n``. Oh, strange. It doesn't work with yarn, but only works with npm. That seems wrong.. @LinusBorg You closed this issue without any further comments. Just curious, are there plans to address this so it works with yarn?. Sure. It's just that if you runyarn build --report, it does a regular build and doesn't seem to see the--report` option.. ",
    "mikob": "Thanks for your work on this! Unfortunately, I wasn't able to get it to work either, I've tried vue-cli@2.8.1, 2.9.3 and the current 3 version. Errors look like this: \nError when evaluating filter condition: isNotTest\nError when evaluating filter condition: isNotTest\n.... ",
    "Patskimoto": "Just wondering what's the current status on this being merged into master? I am beginning a new project that will eventually be significant in size, I love all the features this package includes and would really like to use TypeScript within the project.. @ffxsam  I have since done just that - thank you.. ",
    "alex996": "@MaxMilton Same setup as @Christilut except I got node 6.11.1 and webpack 2.6.1. Everything else is up to date and the project is brand-new. No other commands are involved. I noticed that this issue doesn't occur with webpack-simple template.. ",
    "KerimG": "I have the same issue.\nWindows 10\nGit bash / cmd \nnode 8.1.4\nwebpack 2.6.1\nwebpack-dev-middleware  1.10.0\nwebpack-hot-middleware 2.18.0\nOnly \"npm run dev\" is used.\n. ",
    "zhaokuohaha": "same issue \n\nos:  windows 10\nterminal: git bash git version 2.14.1.windows.1\nbut It's OK in power shell\nnode: 8.3.0\nnpm: 5.3.0\njs\n    \"webpack\": \"^2.6.1\",\n    \"webpack-bundle-analyzer\": \"^2.9.0\",\n    \"webpack-dev-middleware\": \"^1.10.0\",\n    \"webpack-hot-middleware\": \"^2.18.0\",\n. \n",
    "dwjohnston": "This is very possibly this issue from git for windows: https://github.com/git-for-windows/git/issues/1248. ",
    "Awais-cb": "i had the same issue on windows solved it using the commands below remember these commands will only work in cmd not in gitbash\nthis command will give you the process id of the process running on that specific port\n\n$ netstat -ano | find \":3000 \"\n\nthis command will tell you which program is using this port\n\n$ tasklist /fi \"pid eq {process-id}\"\n\nand this will kill that process\n\n$ taskkill /pid {process-id} /f. or you can simply run task manager and kill node's process. \n",
    "Allenice": "refs: #751 . ",
    "abbrechen": "Oh, yeah. Just to write in my config the name and path of subdomains. No dashboard control.. ",
    "Piterden": "Have you tried rebuild?. What if I want to build dev version of a project?\nOr dev version is not building, but constructing or scaffolding?\nGoogle is like the dominoes.\nHowever, I got it - now is too late for changing it (((. WordPress - About 1,710,000,000 results\nLaravel - About 13,300,000 results\nDoes it mean I should learn WordPress, instead of Laravel? @LinusBorg . piterden 4500\nlinusborg 15900\nYou rock, man!!! :+1: . Because the code is manipulation of names. What, besides the names, contains your code?. Please excuse my rudeness.\nUnfortunately, I haven't so much time to kill, but I have one idea about it:\njs\n{\n// ...\n  \"scripts\": {\n    // ...\n    \"prod\": \"npm run build\",\n    // ...\n  },\n// ...\n}\nIt would make 410k for us.... Sorry, but it means nothing for me\n. You build for development, build for staging, or build for production, isn't it?. I see webpack(webpackConfig, cb) inside build.js command (the only one action there)\nAlso, I see const compiler = webpack(webpackConfig) inside dev-server.js command, together with other actions.\nAh, dev-server can work with production webpack config if the environment would be production or testing.\nDo you absolutely sure I don't have build for development, @Frizi ?\nMay I ask you, what is build? I mean essentially.... That makes sense for me. Thank you for explaining.\nWhat about environments with non-JS backends? Can vue-cli be used for such of?. piterden 4500 -> 19000\nlinusborg 15900 -> 16000\nHowever, me too)) :wink: . ",
    "HauntedSmores": "@Piterden Closing this. I fixed it by replacing the files in my build and config folders with the ones in the template repo. Something must have gotten messed up along my development path.. @Piterden Okay that didnt actually work. Looks like the problem is intermittent. What did you mean by rebuild?. @Piterden npm rebuild didnt work unfortunately. @piehei Hey so thanks for finding that comment, that works for me too. I didnt realize webpack 3 was out, so when I ran npm-check-updates I upgraded.\nStill curious about why we dont need those lines of code anymore. ",
    "piehei": "I'm having the same issue.. This https://github.com/vuejs-templates/webpack/issues/751#issuecomment-309955295 fixed the issue for me too.. ",
    "wqjiao": "What you solved this question\uff1f\n[HMR] Update failed: Error: Manifest request to 169319f72cbe014b6608.hot-update.json failed.\n    at XMLHttpRequest.request.onreadystatechange (http://127.0.0.1:8081/app.js:50:22). @HauntedSmores What you solved this question\uff1f\n[HMR] Update failed: Error: Manifest request to 169319f72cbe014b6608.hot-update.json failed.\nat XMLHttpRequest.request.onreadystatechange (http://127.0.0.1:8081/app.js:50:22)****. ",
    "iharsuvorau": "@afontcu, that doesn't work for me, during the npm run build there is:\nTip: built files are meant to be served over an HTTP server.\nOpening index.html over file:// won't work.\nHow to build and serve plain static files without an HTTP server? For now my /dist/ folder alone doesn't work without some kind of HTTP server as mentioned during the default build process.. ",
    "alexmalkin": "I thought I'd provide a use case example, so others can fully understand what I am getting at here:\nThere are three components, app-image, app-video and app-post. All are vue components with their own HTML/template, css and js in a .vue file. They all can be used independently on their own, but app-video and app-image can also be used within app-post, but app-image cannot be used within app-video (or vice versa) Note I am stripping out any props/bindings etc. as this is concerned with the css classes.\nHere are their templates and styles:\napp-image:\ntemplate\n<img class=\"app-image\" src=\"image.jpg\">\nstyle\n.app-image {\n    width: 200px;\n}\napp-video:\ntemplate\n```\n\n  ...stuff\n\n```\nstyle\n.app-video {\n    width: 300px;\n}\napp-post\ntemplate\n```\n\n\n\n```\nstyle\n```\n.app-post {\n    / styles /\n}\n.app-post-content {\n    width: 100%;\n/* styles */\n\n}\n```\nUsage\n```\n\n\n\n\n\n\n```\nRegistration\nimport appImage from './components/image.vue'\nimport appVideo from './components/video.vue'\nimport appPost from './components/post.vue'\nWithin certain parts of the app, the app-video and app-image are inserted into app-post as shown in the usage above.\nAs you can see, the app-image is given the class app-post-content, making them a BEM 'mix' component, whereby the app-image would have styles app-image and app-post-content applied.\nThe important thing to note, in the css is that app-post-content needs to override whatever it is placed on, so it can control its contents.\nThis is where the problem is, because when running npm dev, the css output in the  (in the form of multiple style tags) seems to be determined by the order the template tags appear, and because app-post is first (because its a parent of the others) its outputted css is first, however when running npm build, the order is in the order of the module imports, which is desired result.\nI am trying to archive where the appearance and output in the dev server is the same as production, as right now this cannot be achieved without forcing the dev server to use extract-text-plugin or use a system sass compiler and not write the components css in the components vue files.\nA few things that could be argued, but here are the counter-arguments\nYou can just use scoped styles\nNo, it would have the same effect, as the app-post would still come before the children, so their styles would prevail. \nPut your css somewhere else and reference it as separate imports\nThis can be done and would solve it, but it is super nice and initiative to have the css alongside the js and html for each component, because like the JS, it is directly coupled to the elements, app-image is not meant to be used on any other combination of html except the above example. In addition the list of css imports would be mirroring in the vue imports, making it double maintainability.\nIn addition, the vue single file components are such as nice and intuitive feature, and enable JS devs to easily see corresponding classes/styles/modifiers that are used.\nBottom line\nThe vue wepback template is outputting css in different orders depending on if the compilation is in build mode or dev mode. Given the nature of css (cascading style sheet), order is very important for css to function correctly, and should be preserved. Those not using the scope feature experience inconsistency and many headaches when the production version doesn't look the same as the dev version or vice versa. Good css is about layering styles in the cascade, unfortunately this is completely broken in this scenario.\nPotential solution \nEnable the dev server to have the option to always use extract-text-plugin / separate css file based on the import list and and inject hashed .css files on file-save in the same way it does with the js files to maintain hot reloadablity.\nI altered the vue-loader.conf and webpack.dev.conf to do this, but it was messy, forced-upon and not worth sharing.\nThe other thing my team was doing was placing separate css files in each component folder, and then using a isolated/native sass compiler to produce a single .css and then get webpack to import the single compiled css, but this required a separate list of includes, again causing repetition/bad maintainability. \nThanks to LinusBorg for his help on Discord.\nI'd attempt to contribute a half decent solution but webpack configuration is not something I've found easy to get into.\n. @autumnwoodberry as mentioned above, scoped styles would have the same effect.\nIn addition, as a CSS developer, I would argue that 'forcing' scoped styles is unnecessary as if your components are properly structured and cascaded, adding specificity is not needed when you can namespace, and adding that specificity with attribute selectors as the webpack template does is bad selector performance, compared to namespaces/cascaded styles. . These aren't global styles though? They are specific to html components (templates), in the css world we call them mix components https://en.bem.info/methodology/key-concepts/#mix\nI feel this issue goes a little deeper and is more to do with CSS being overlooked, I love the idea of Vue single files, but unlike JS imports, CSS is Cascading and order is everything, trying to force JS paradigms for CSS doesn't work, if you're serious about CSS efficiency and design. The simple solution is just for the dev server to output the css based on component import order, because the order doesn't matter for the JS, it would give it purpose for those wanting to control CSS order.\nAs for your selector performance, see https://csswizardry.com/2011/09/writing-efficient-css-selectors/ \nWe may only be talking miliseconds but for large platforms/sites like I am working on this racks up and is not an option, also the selector performance for Vue scoping is even worser than this because its using the attribute selector on each class, meaning the DOM has to search for every class and then every attribute, and then find the multiple. It is so much more efficient to just go btn-icon than [attribute].icon... this is actually a separate issue.. @DimitrisNL I have a working solution for the older version of this template, but the recent update broke the hot-reloading of css changes with this fix, and I'm yet to find a solution. \nPreviously it could be achieved by the following:\nwebpack.dev.conf.js\nAdd to the top of the file\njavascript\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\nWithin the modules object in modules.exports, add extract: true like so:\njavascript\nmodule: {\n    rules: utils.styleLoaders({\n        sourceMap: config.dev.cssSourceMap,\n        extract: true // edit - add\n    })\n},\nWithin the plugins array in the modules.exports, add:\njavascript\nnew ExtractTextPlugin({\n    filename: '[name].[contenthash].css'\n})\nWithin vue-loader.conf.js\nChange extract: isProduction to extract: true in the loaders object\nAs I said, this perviously worked, and meant styles retained the same order in production and development versions. This however longer hot-reloads in the recent update to this template.\n. ",
    "autumnwoodberry": "I am of the opinion that un-scoped CSS does not belong in a component because it becomes global. Importing a module in another module shouldn't affect the global scope.\nI would actually prefer to force all components to scoped styling.. I don't consider selector performance to be an issue, but that is besides the point. The fact is that what you are proposing is contrary to the design and intent of vue components, which are intended to be modular.\nI understand what you are trying to achieve, but I think that putting global style rules into a component is not a pattern I would like to see encouraged.. ",
    "NoRabbit": "becoming a real deal breaker for me.\nCSS is meant for cascading shit. The component, if \"well crafted\" shouldn't impose it's logic on a much lower layer that is CSS.\nMaybe instead of \"scoped\" (which doesn't solve anything for me) we could be able to put a variable to specify the order in which the css should be included, like so:\n\n...\n\n. ",
    "mymtw": "this is still actual\n```\n ERROR  Failed to compile with 1 errors                                                                                                                                   02:07:32\nerror  in ./src/components/HelloWorld.vue\nModule build failed: Error: \"extract-text-webpack-plugin\" loader is used without the corresponding plugin, refer to https://github.com/webpack/extract-text-webpack-plugin for the usage example\n    at Object.pitch (/Users/apple/Developer/vueexample/my-project/node_modules/extract-text-webpack-plugin/dist/loader.js:57:11)\n@ ./src/components/HelloWorld.vue 2:2-373\n @ ./src/router/index.js\n @ ./src/main.js\n @ multi (webpack)-dev-server/client?http://localhost:8080 webpack/hot/dev-server ./src/main.js\npackages.json\n  \"scripts\": {\n    \"dev\": \"NODE_ENV=production webpack-dev-server --inline --progress --config build/webpack.dev.conf.js\",\n    \"start\": \"yarn dev\",\n    \"lint\": \"eslint --ext .js,.vue src\",\n    \"build\": \"node build/build.js\"\n  },\n. I changed my scripts, for production, now I'm running it with command `start`:\n  \"scripts\": {\n    \"dev\": \"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js\",\n    \"start\": \"node server.js\",\n    \"lint\": \"eslint --ext .js,.vue src\",\n    \"build\": \"node build/build.js --prod\"\n  },\nand in `server.js`:\napp.use(express.static(__dirname + '/dist'))\n// handle every other route with index.html, which will contain\n// a script tag to your application's JavaScript file(s).\napp.get('*', function (req, res) {\n  res.sendFile(path.resolve(__dirname, 'dist', 'index.html'))\n})\n```\nEverything ok now. Simply added node.js for testing that production build works, because I don't want to install nginx locally or anything other.. ",
    "vad11": "Yes, I try inject to head\n//inject: true,\ninject: 'head',\nBut vue example of webpack stop work for production.\nCan I define in any way place to injected files ?. ",
    "llwslc": "use this https://webpack.js.org/configuration/dev-server/#devserver-proxy. ",
    "escawn": "@llwslc Sorry, I don'know if I really express clearly...Webpack-dev-server is a bulit-in server of webpack, but we use express in this template instead of use webpack-dev-server directly.I want to know why and what's the consideration of it.\nThank you very much for your reply!. @grantcarthew I think I nearly get the point. I'll study more detaill in source code.\nThanks a lot!. ",
    "robwierzbowski": "@escawn: I refactored my project (built from the webpack vue template) to use webpack-dev-server and it seems to have the same functionality as the dev-server and dev-client scripts. I had to use the node API to run the webpack-dev-server in test/e2e/runner.js, but aside from that I just followed the webpack docs and deleted code when it worked.. I just updated to Webpack 3 on a project scaffolded using this repo. My diffs were:\nUpdate to Webpack 3.5.5: https://github.com/robwierzbowski/rw-vue/commit/d6787debfcd8738ad6bcced81ada5ce5a0caf7eb\nFix the resulting Uglify issue: https://github.com/robwierzbowski/rw-vue/commit/09f58c3790a168faefdc0f86af492cb6a473553f\nMore changes than your current diff, just wanted to let you know. . No problem.. If a project maintainer gives me their preferred direction I'll write a PR. Easiest is probably to remove the .eslintignore \ud83d\ude1b . Unless it's a convention in other webpack projects to have both start and dev I think it's a little redundant. The docs are pretty clear on how to start dev, build, etc. \nIf you think it's important to keep start, I like your idea of one task running the other so the task doesn't need to be copy pasted. I'll revise the PR.. The more I think about it, the more I like the reference to dev in start :). Great suggestion. . Fixed. Thanks!. Side note: I see a lot of templating to add semicolons. I'm converting all of my code to AirBnb style, and I think it might be possible to write the template files so they can be transformed to the user's preferred formatting (Standard or AirBnB) with a post-install lint --fix command. \nHave you tried that / any interest? It could be a lot cleaner than all of the if AirBnB then insert ; statements. I'd be interested in writing a PR. . From what I read in Nightwatch docs, the this binding isn't necessary in the callback. I looked through the history and there aren't any clues to why it was added. I've tested and everything seems to work as expected.\nI'm most interested in making the arguments more clear (c3a2181), so if you'd like to keep the bound callback I can remove the commit that changes it.. OK, commit removed. Very small PR now :). Ah, a peer dependency \ud83d\ude43. That's always confusing. Thanks!. I would suggest adding an options parser like minimist: https://github.com/substack/minimist. Then you could use a command flag like npm run build --env myEnv.. Ah I see. I assumed it would be run with the webpack.test.conf. Closing. . I think postCss is already loaded in CSS loader function: https://github.com/vuejs-templates/webpack/blob/develop/template/build/utils.js#L50\nAutoprefixer is added to postCss with the .postcssrc.js file here: https://github.com/vuejs-templates/webpack/blob/develop/template/.postcssrc.js\nSo it should be working. @adi518, what do you mean by extraneous components? Components that aren't required anywhere?. Updating vue-cli shouldn't have any effect on the project code -- it's just for templating. \nWhat OS is your project on? Is the project in a folder with any special settings that could interfere with operating system events (e.g., Dropbox folder)?. Nice code review. A mistake, fixing now :). ",
    "mikhailian": "\nIs this well tested with static files? Wouldn't this redirect requests for e.g. images to index.html?\n\nSure,  but anyone extending this template should configure web server routing, anyway. A rule that  looks at dot in the path to do it automagically just hides the complexity from developers.\nI'd prefer to be hit with the need to configure the routing upfront rather than needing to figure out why some HTTP requests work and some don't.\nI can suggest to use mime-types induced by Connect for images.  This is slightly better than the dot rule.\n. ",
    "stephan-v": "Thanks for your reply. \nCould you possibly link some templates that are a good example on how to create a production build with rollup and Vue? It would really help me out.\nI guess there would indeed have to be another template that targets development and not extend upon this template.\nIt would also probably be pretty hard to create a generic template for this since the requirements on a per-project-basis are widely different when it comes to creating a build for NPM.\nIt is just pretty hard to figure out best-practices like this though. I didn't even knew rollup was better suited for this.\n. ",
    "tinchox5": "It would be nice and useful to have an official template for plugins. I think the demand will increase because the vue community is growing and also is maturing. For instance, I'm not a pro dev, but recently I 've realized that I need a clear way to create a plugin in order to share what I have learnt. I will try to use one of the templates you suggested above and see what happens, but maybe it is possible to redistribute some resources to prioritize that. I mean as you told there are core team members thats have already their own templates. \nIt is just a wish, you guys are doing awesome things with Vue. ",
    "lucasleelz": "I am looking forward to webpack 3\n. ",
    "johnsardine": "I support this PR, however the coverage report is very poor.\n\nI also tried to implement Jest here johnsardine/vue-jest and the coverage is a little better, however not perfect. I would like you to take a look, if you can.\nI have a fork of jest-vue-preprocessor which provides babel sourcemap to jest-transform.\nI think the coverage should be fixed before this is accepted.\nOn my test, the coverage is off by one line, and this affects the sourcemap on the browser as well. I think the issue must come from the map that babel generates from the extracted .vue file script.\nExample of coverage in pure js file vs .vue file\n\n\nYou can see the coverage execution count is off by one line. It should be one line above.\nI have put some hours into this without any progress other than the one I report here. I'll have to continue trying.. @eddyerburgh Take a look at my fork of jest-vue-preprocessor, I've added (not in the best way, I admit) support for sourcemaps from babel. The thing is, the sourcemap is alright, but the coverage report is one line off, and it affects the source map on the web as well (So maybe the sourcemap is not alright after all). @eddyerburgh This is great, thanks a lot. I was testing it in my vue-jest sample project and so far seems to be working great. Will update a bigger project this week, if I encounter any issues I'll give you more feedback.. ",
    "rit": "Is jest's license the same as the React's license? If it is, what is the implication?. ",
    "matt-oconnell": "@rit Unfortunately, it is. Although there is an open issue to discuss removing it here.. ",
    "michalsnik": "Great idea @eddyerburgh I was about to prepare the same PR :D It's a great step forward, jest simplifies whole unit testing process drastically \ud83d\ude80 \n@rit This so called React's license main purpose is to protect themselves from patent trolls that are suing them for crazy amounts of money each month. Dan explained it recently on twitter and I don't think we should consider it a blocker... ",
    "sinaa": "Sorry if I'm jumping into this issue, but the following should work to get the vue cli to run (not sure if you're already following the same approach):\nbash\necho 'echo' > fill.sh; yes | xargs sh fill.sh | vue init webpack my-project; rm -f fill.sh\nFor me, yes doesn't trigger the vue-cli build, but the \"hack\" above works fine.\nEDIT: just tested this on the test.sh script, and it works fine. Happy to send a PR, but the change is fairly trivial.. ",
    "johnwebbcole": "@KagamiChan I understand that has been typical in the past, but it appears that some module maintainers are deciding to leave that up to the bundler.  See https://github.com/sindresorhus/ama/issues/446 or https://github.com/facebookincubator/create-react-app/issues/1125#issuecomment-264217076\nApparently this can no longer be assumed.\nAlso, as stated in the issue, adding a node_module to the include array does not fix the issue.  If you believe this is a webpack bug, I'll open a ticket there, but I was hoping this was a configuration issue.  Since it appears that none of the node_module files are being transpiled by babel-loader without anything in the excludes: [] section, I was wondering if there was a configuration somewhere removing all of the node_module entries, even if they are in include.. Thanks for everyone's help, I was able to get this example working.  I've updated the example site with my fixes.\nI had to remove the transform-runtime babel plugin.  Apparently it has known issues when compiling additional modules.\nIE 11 also needed babel-polyfill.\nI really appreciate all the help.  Thank you.. ",
    "gowthambalashanmugam": "Is there any idea that how can i achieve the same in angular 6? I have some node modules developed on es6. so after build the npm modules will be part of vendor.js (w/o transpile) so throws error in IE. ",
    "aprilmintacpineda": "\nWithout any exlcude: [] and includes[](!), babel, loader should transform everything coming from your node_modules directory. That would make your ptranspilation process veeeeeeeeery slow though:\nhttps://github.com/babel/babel-loader#babel-loader-is-slow\nSo, since babel / babel-loader doesn't have a mechanism like the one proposed by sindresorhus in the comment you linked to, you will have to add a seperate include path for every package in node_modules that needs transpiling.\n\nI don't have any include or exclude on my test rules. I'm using latest babel-loader and latest webpack (all latest stuff). My test is only for a particular module:\ntest: path.join(__dirname, '../node_modules/fluxible-js')\nI can say that webpack honors the rules because only babel-loader is the one that's not doing it's job, the rest of the loaders defined on the same rule are all working so on WEBPACK's side, it's loaded, but babel-loader is not compiling it.\nhttps://github.com/babel/babel-loader/issues/171\nhttps://github.com/babel/babel-loader/issues/741. ",
    "TheJaredWilcurt": "@LinusBorg \nWell there's a very easy solution to that; just have it ask\nAdd Metalanguage support? (JSX, Sass, Pug, etc.) [y/N]:\nThe default is no, so you can just skip it, but if you want metalanguage support, all of the loaders and dependencies can be handled for you in a manner that has been tested and known to work properly in the .vue single file components (lang attributes).\nThe whole point of a boilerplate is to give you everything you need to get up and running without having to set everything up yourself.. @MaxMilton \nThen why even make this repo. Why not just make a giant tutorial that explains how to do everything from scratch.\nBecause the point isn't to teach, it's to save people time. This is a common feature people would use, so it should just be built in. If people are not interested in it at all, they can just hit enter on the (y/N) to skip it. If they want it, why should they have to manually set it up everytime. Especially when there are stupid gotcha's like how sass doesn't mean sass it means scss, which is obviously something that can be smoothed out once here to save thousands of people the time to research and do trial and error to resolve the same confusing problem.\nYes, I can write my own helper functions from scratch too, but I go use a library to save me time. I don't need to reinvent the wheel to make an ajax request or convert CSV to JSON, etc. We use libraries and tools to save time. If someone wants to learn how to do this stuff on their own, there are plenty of resources. These templates/boilerplates are not the place for education, they exist to smooth onboarding and save time.. @Aladdin-ADD \nWe already have this.\n```bash\nInstall the Vue CLI globally\nnpm install -g vue-cli\nSee a list of available official templates\nvue list\n\nbrowserify\nbrowserify-simple\npwa\nsimple\nwebpack\nwebpack-simple\n\nUse the advanced webpack installer (this repo)\nvue init webpack \nUse the simplified version\nvue init webpack-simple\n```. What else would go in there. There's already multiple testing options in this version.. ",
    "arszp10": "I think that you need to create a new project, where there will be a choice typescript, flow, etc.. ",
    "czerasz": "I use the EventEmitter module and I face a similar issue:\nERROR in static/js/vendor.11a3c006c10e183eb4a0.js from UglifyJs\nUnexpected token: name (EventEmitter) [./~/EventEmitter/src/index.js:16,0][static/js/vendor.11a3c006c10e183eb4a0.js:53528,6]\nI guess it's because of this line - the module uses:\nexport default class EventEmitter. ",
    "alernerdev": "I have the same issue with uid-generator. ",
    "nijikokun": "It appears that the e2e tests are missing BABEL_ENV=test or a transformation plugin.. ",
    "dahrens": "Feels ugly but works for me:\nvar JSON = require('babel-runtime/core-js/json/stringify'). I digged a little deeper and found that BABEL_ENV supports a fallback the points to NODE_ENV which seems intended to be used. But in .babelrc the configured env is called test and the e2e runner.js defines process.env.NODE_ENV = 'testing'.\nI added the missing env testing to .babelrc as it does not need the istanbul plugin which gets loaded in test env for the unit tests.\njavascript\n{\n  \"env\":\n    \"testing\": {\n      \"presets\": [\"env\", \"stage-2\"]\n    }\n  }\n}\nAdditionally I removed the first line require('babel-register') in nightwatch.conf.js and now it works as expected.. ",
    "4eek": "Adding BABEL_ENV=test to the e2e task of package.json as follows worked for me...\npackage.json\n...\n    \"unit\": \"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --single-run\",\n    \"e2e\": \"BABEL_ENV=test node test/e2e/runner.js\",\n    .... ",
    "gaastonsr": "@LinusBorg looking forward to it. ",
    "ai": "Stylelint is used by Facebook, Wikipedia and GitHub.\ncreate-react-app will support it in 2.0.\nRight now it is the most popular CSS linter.. ",
    "iFwu": "A temporary solution is separate your html, (s)css and js files to let PostCSS's plugin stylelint to process.\nAn elegant way to separate these file is using vue-separate-files-loader.. ",
    "EliazTray": "@gucong3000 it\u2018s nice to deal with it.. ",
    "rhythnic": "Not that I know of.  I've never used webpack-hot-middleware or webpack-proxy-middleware.  When looking for documentation, I could only find this tutorial.  He also puts the hot-middleware before the proxy middleware.  I've used react-hot-loader, and I know it is fickle about it's placement in the webpack setup, so I tried changing the order as a fix and it worked.. ",
    "chasegiunta": "@adi518 did you ever figure this out? I'm having a heck of a time. The vue-loader & webpack template docs are out of date, as far as webpack config goes, and I'm having no luck.. @adi518 yeah this was mainly to be used for importing some global app-wide styles.. @LinusBorg I know this is closed and old, but I've been searching this issue for a few days now trying to solve. Theoretically, every npm package pulled into our projects should be polyfilled? Continually getting syntax errors with IE11. The syntax error actually looks like it related to => syntax used in Vue's core code.\nAdded import 'es6-promise/auto as you suggested, but unfortunately didn't resolve the issue.\nIf it helps, my babelrc file looks like this:\n{\n  \"presets\": [\n    [\"env\", {\n      \"modules\": false,\n      \"targets\": {\n        \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <= 8\"]\n      }\n    }],\n    \"stage-2\"\n  ],\n  \"plugins\": [\"transform-vue-jsx\", \"transform-runtime\", \"transform-es2015-arrow-functions\"]\n}\nAnything else I could I attempt? Thanks for your time.. So, apparently this is a somewhat popular issue with babel's relationship to npm packages:\nhttps://github.com/babel/babel-loader/issues/171\nA good catch-all solution I found is https://github.com/sheerun/targets-webpack-plugin but it does add a significant amount of time (and probably size) to your final bundle.. ",
    "emdahlstrom": "Hi! @adi518 @chasegiunta did you guys figure this out? I'm also working with a big legacy sass setup that makes importing individual files cumbersome. . ",
    "Kiniamaro": "I would also need to figure this out for importing plugins inside a folder like so:\njavascript\nimport * as plugins from 'plugins/**/*.vue';\nThe idea is, all you need to do is drop your plugin (which are vue components) inside the plugins folder and have vue load them all up as global components.\n. ",
    "tybruffy": "I think I have this working using import-glob-loader.  I updated build/vue-loader.conf.js to include the following above the loaders: object.\npreLoaders: {\n  css: 'import-glob-loader',\n  scss: 'import-glob-loader',\n},\nThe other caveat is that import-glob-loader doesn't like aliases.  I couldn't get it to work with any of my webpack aliases, but if i use the real path (starting after the src directory) it works like so:\n@import 'assets/styles/utilities/**/*.scss';\n  @import 'assets/styles/animations/**/*.css';. ",
    "benjaminpwarren": "~~That had no effect for me.~~ BitDefender was the culprit.. ",
    "dduenker": "Nice, this works perfectly for me. I wondered, if i had somehow broken something, as it suddenly stopped working.. ",
    "sutra": "Seems I found the answer, just use the config/test.env.js and change one line in build/build.js, and use cross-env NODE_ENV=testing npm run build instead of nom run build to build for QA environment for testing:\n```diff\ndiff --git a/build/build.js b/build/build.js\nindex 6b8add1..04087fc 100644\n--- a/build/build.js\n+++ b/build/build.js\n@@ -1,6 +1,6 @@\n require('./check-versions')()\n-process.env.NODE_ENV = 'production'\n+process.env.NODE_ENV = process.env.NODE_ENV || 'production'\nvar ora = require('ora')\n var rm = require('rimraf')\ndiff --git a/config/test.env.js b/config/test.env.js\nindex 89f90de..5638b9c 100644\n--- a/config/test.env.js\n+++ b/config/test.env.js\n@@ -2,5 +2,7 @@ var merge = require('webpack-merge')\n var devEnv = require('./dev.env')\nmodule.exports = merge(devEnv, {\n-  NODE_ENV: '\"testing\"'\n+  NODE_ENV: '\"testing\"',\n+  ROUTER_BASE: '\"/\"',\n+  BASE_API: '\"https://api.qa.example.com\"'\n })\n``. As I tested, the empty string would be better. So that you can deploy it to any sub directory. And the empty string is the default value of web pack'soutput.publicPath`, see https://webpack.js.org/configuration/output/#output-publicpath\n. ",
    "kgrosvenor": "Does this work for webpack 3?. ",
    "hezhongfeng": "Anybody know why?. @MaxMilton \nthank you, I Check in both places~\n. Thank you.\nI used the base:  option.\nIt's okay.. ",
    "exarus": "Stylelint v8.2.0 is out.. @mismith the browsers can't resolve such expression:\nimport _ from 'lodash'\nBecause they don't know anything about node_modules and actually non-relative non-URL paths are currently not implemented.\nSo we can import lodash in these ways:\nimport _ from 'https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js'\nimport _ from './lodash'\nBoth ways are doesn't fit typical npm+webpack workflow.\nBTW CSS importing is also not supported by browsers.. @LinusBorg Thanks. As far as I understand you suggest to import bootstrap into the bundle. In that case Webpack is going to load it via style-loader and process using postcss (i.e. autoprefixer).\n\nFor existing libraries e.g. Bootstrap or Semantic UI, you can place them inside /static and reference them directly in index.html. This avoids extra build time and also is better for browser caching. (See Static Asset Handling)\n\nQuote is taken from docs to template. I believe that the man who wrote the lines meant that the user can optimize build process by putting boostrap.min.css into /static so that files will be transferred to /dist as-is without piping Bootstrap through webpack pipeline. But this solution lacks automatic version management. Maybe it would be better option to load the file via webpack (in order to get it from node_modules) but do not process via style-loader and autoprefixer (because bootstrap is already built, minified and prefixed). Instead webpack may just copy the bootstrap.min.css as-is to the /dist folder.. Duplicate of #955. ",
    "c0defre4k": "I've removed the ModuleConcatentionPlugin from development config as its of course not needed there.\nI also updated webpack to version 3. Yes, the title of the PR doesn't indicate that. Should I open another PR or just update the title of this PR?. @MaxMilton I see - thanks. I've updated the PR to focus on Karma browserselection. Hi, I don't see this as a bug. In production this shouldn't matter because the chunk is named properly as you can see in the Chunk names column. Only the file is named numeric.\nPlease also note that using name instead of id generates bigger manifest since the mapping for name to id has to be stored somewhere. See here\n\nNote that these filenames need to be generated at runtime to send the requests for chunks. Because of this, placeholders like [name] and [chunkhash] need to add a mapping from chunk id to placeholder value to the output bundle with the webpack runtime. This increases the size and may invalidate the bundle when placeholder value for any chunk changes.\n\nIn this case I'd like to undo this change.\nedit: add quote. As mentioned in my comment in #996 this leads to bigger JavaScript code.\n\nNote that these filenames need to be generated at runtime to send the requests for chunks. Because of this, placeholders like [name] and [chunkhash] need to add a mapping from chunk id to placeholder value to the output bundle with the webpack runtime. This increases the size and may invalidate the bundle when placeholder value for any chunk changes.. \ud83d\ude2fah, i must have overlooked that. Sorry!. Thats right, but since the version string is ^4.4.0 is should always install the newest available version < 5.0.0.. \n",
    "anubhav7495": "I would like to update the docs for this change, but reading through the docs i cannot figure out what should be updated. \n@LinusBorg any pointers?. yeah, browserslist field can be used by Autoprefixer, Stylelint & babel-preset-env.. It already is. Check line 41.. ",
    "lukeify": "Why was this closed? This issue has not been resolved.. @LinusBorg maybe I'm not understanding correctly, but I just pulled down a new copy of Vue-cli@latest with Webpack, and build/webpack.dev.conf is still pulling proxy data from config.dev.proxyTable, which is located in config/index.js, which still has a proxyTable property present. Additionally the docs (here) still suggest using proxyTable?. ",
    "abepetrillo": "I'm still getting to grips with webpack and vue so apologies if this is a dumb question, but how exactly do a specify the proxy, for a production build?\nI thought this would be enough:\nNODE_ENV=production HOST=https://api.production.com PORT=443 npm run build\nBut that didn't seem to work. Am I supposed to ignore the provided build command and write my own that directly works with webpack?. ",
    "jarollz": "Googling about the error points me to a concurrency option in metalsmith module that can prevent EMFILE too many open files error.\nIt turns out that, when copying static assets, this template uses copy-webpack-plugin and like vue-cli it also uses metalsmith. Opening copy-webpack-plugin source in node-modules folder, I found out that It accepts concurrency as options although it isn't stated in its doc. Therefore, after modifying build/webpack.prod.conf.js by changing:\nJS\n// copy custom static assets\nnew CopyWebpackPlugin([\n  {\n    from: path.resolve(__dirname, '../static'),\n    to: config.build.assetsSubDirectory,\n    ignore: ['.*']\n  }\n])\nto\nJS\n// copy custom static assets\nnew CopyWebpackPlugin([\n  {\n    from: path.resolve(__dirname, '../static'),\n    to: config.build.assetsSubDirectory,\n    ignore: ['.*']\n  }\n], {\n  concurrency: 1\n})\nthen the EMFILE error is no more.. ",
    "fjy5314": "\u6c42\u95ee\u4f60\u4e00\u4e0b \u4f60\u662f\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684. ",
    "DarwinniwraD": "\u540c\u4e0a\uff0c\u4f60\u9700\u8981\u5148\u5b9e\u4f8b\u4e00\u4e2avue\u5bf9\u8c61\uff0c\u8fd9\u91cc\u9762\u5305\u62ec\u4f60\u8981\u7528\u5230\u7684vuex\uff0c\u90fd\u8981\u91cd\u65b0\u5f15\u5165\uff0c\u4f60\u5728src\u4e2d\u600e\u4e48\u7528\u7684\uff0c\u5c31\u5728\u8fd9\u513f\u600e\u4e48\u5b9e\u4f8b @fjy5314. you can add the dotenv-webpack plugins in the webpack.base.conf.js, like this:\nfirst, you may need to import the package:\nconst Dotenv = require('dotenv-webpack');\nthen, config the path for it:\nmodule: {\n   ...\n },\n node: {\n   ...\n },\n plugins:[\n    new Dotenv({\n      // set the path for the dot-env, more config information you can visit the official documents \n      path: path.resolve(__dirname, `../.env.${process.env.NODE_ENV}`),\n    })\n  ],\nnext, you need to disable the \nnew webpack.DefinePlugin({\n  'process.env': env\n }),\nin  webpack.prod.conf.js, it would overwrite the dot-env.  \nOne more step, you need to add the basic environmental flag for the build file, because the process.env.NODE_ENV have been set in the build.js file, so you don't need to set it for the production stage, but you need to add the NODE_ENV flag for the development stage in the package.json file, like this:\n...\n\"scripts\": {\n\"dev\": \"NODE_ENV=development webpack-dev-server  --inline --progress --config build/webpack.dev.conf.js\",\n\"start\": \"npm run dev\",\n...\n}\n.... @lefuturiste yes, sorry for missed it, and you'll got the same situation at the webpack.test.conf.js file. . ",
    "Kunigaikstis": "@LinusBorg but this is what the example the webpack template comes with? Would be nice if you'd be able to give a better explanation than that.. ",
    "luismiguelprs": "If I invert the order of attributes that works!\nmodule.exports = merge(prodEnv, {\n  API_BASE_URL: '\"foo\"',\n  NODE_ENV: '\"development\"'\n}). Hi! Probably it was a isolated error... I don't know why but after that, every config that I used simply worked... Can you close this issue? Thanks!. ",
    "zhengkai2001": "Exactly same issue here. Can't use any customized property in *.env.js.\ne.g. in dev.env.js:\n```\nmodule.exports = merge(prodEnv, {\n  NODE_ENV: '\"development\"',\n  ROOT_API: '\"http://127.0.0.1:5000/\"'\n})\n```\nThen,console.log(process.env.ROOT_API)will just give me the same error: \"SyntaxError: missing } after property list\".\nButconsole.log(process.env.NODE_ENV)works well\nAll components are at their latest version - weback 4, vue 2, etc. @luismiguelprs Could you please share your solution to this issue if you found any ...? Thanks!. Just figured out - we need to stop the current process and do a rebuild in order to make the change work. For me, I justctrl+Candnpm run dev`. Sorry for any disturbance. ",
    "mpallante": "Yes it is clear. Indeed I changed package to pkg and everything works fine, but what I don't understand is why I don't get any error in dev machine. From the link you shared, package is only reserved in strict mode code, so that could be the reason. However, I'm not very confident to js and node, so I don't know how to check if there is some difference.. I get the error when I run npm run dev on the staging machine, a Debian 8 VPS. When I run it on my dev machine, a Mac with nodejs and npm installed with macports, it works. Same version for both nodejs\u00a0and npm on the two machines.. ",
    "maurop123": "My mistake!. Oops! I did it again. Ok I'll try this out and report back. Works! All I had to do was add this to bottom of my vue-loader.conf.js\nmodule.exports = {\n  ...\n  buble: {\n    objectAssign: 'Object.assign',\n    transforms: {  // turn off the `with` removal\n      stripWith: false\n    }\n  }\n}\nThanks!. Just made the PR here: https://github.com/vuejs-templates/webpack/pull/1017\nIf it helps, I can make it on the other templates, too.. Understood. In case it helps your evaluation of polyfills, we recently merged a PR on the Vuetify PWA template that added the babel-polyfill npm package to handle an issue with the service worker and vue router when for both hash bang mode and history mode.\nHere's that PR for reference: https://github.com/vuetifyjs/pwa/pull/3/files. I don't understand. Are you saying that the buble block here should NOT be added because it would break most builds? I thought this was what you were suggesting here to make that issue work.. OK I just read your comment here. Is this why you're saying that adding this will break most builds?\nIt seems to suggest that projects built with recent version of the vuejs webpack template should not break. But it is breaking with the current version of the template, at least it was at the time I made that issue.. ",
    "jaubut": "I have the same error when I deploy it on netlify, \"@ ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!\" What I understand is when im in prod env the alias doenst work well.. Is there an option I can add ? Also, when I run in my terminal, yarn run build, it work fine without all thoses errors.. Ive setup my own NODE_VERSION, YARN_VERSION to match the version I got on my machine... ",
    "naderio": "@Aladdin-ADD prioritizing .js is certainly valid for entry point, still that is not the case for components (with src imports).\nanyhow, a workaround for this issue would be to a different naming conversion, but that would be counter intuitive and not practical when used extensively (better have Component.vue, Component.js, Component.css than any other possible alternative), still the workaround would be ok when used just once (in your case just App.vue).. clear enough, closing . ",
    "mariojankovic": "There was a typo in my main.js file. Closing.. ",
    "grakic": "How about this?\n```\nwebpack/\n\u251c\u2500\u2500 build\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 build.js\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 index.js\n\u251c\u2500\u2500 dev.env.js\n\u2514\u2500\u2500 prod.env.js\n```\nAnd for a case when version control is also ignoring subdirs, build can be renamed to webpack-build.\n. Hi,\nIn the config/index.js there is this assetsPublicPath configuration option. By default it is set to a root path. I am working on the application that is deployed to a sub-directory, so in my project I set assetsPublicPath to /panel/. \nThe middleware connect-history-api-fallback is responsible for routing requests to the main /index.html file. You can read more here. Because of assetsPublicPath my main index.html file is not served as localhost:5000/index.html but instead it is served as localhost:5000/panel/index.html.\nWithout this change, when I access localhost:5000/panel/ the request is not rewritten to index.html and I get the error \"Cannot GET /panel/\". Configuring connect-history-api-fallback with the correct index path is fixing this problem.\nFor convenience this change also adds a  redirect from / to /panel (or whatever is set as assetsPublicPath). You can now run the server and access localhost:5000 which would then redirect to the app hosted at localhost:5000/panel/ which shows the index.html content.\nNothing is changed if assetsPublicPath is left at the default value. In that case no redirect is added and connect-history-api-fallback will be configured with /index.html which is the default setting.. Hi @LinusBorg I can confirm that there are no issues with webpack-dev-server now. Only redirect is missing, I've pushed this as #980 . I would check what Chrome extensions do you have enabled. I beleive some is interacting with the page content when it is loaded as localhost. Try testing it with all Chrome extensions disabled.. Package \"node-notifier\" is missing in the list of dependencies in generated packages.json and it is now used in utils.js. ",
    "carere": "Thx for the help, i switched to webpack from brunch, and i didn't saw the command to build assets for dev env, since i use docker with compose and i launch my env with -d, i didn't saw the log.\nnode-sass was missing :)\nI close this. Thx.. ",
    "pronebel": "\u6ca1\u6709\u5145\u5206\u6d4b\u8bd5,\u505a\u5173\u95ed\u5904\u7406\n. are you sure this?\nif it writed as    \npostcss: generateLoaders('postcss'), \nyou can check the var \"webpackConfig\"  of the file \"webpack.prod.conf.js\"\nThe var in   \nin var webpackConfig = merge(baseWebpackConfig\nwill console \n[ \n...\n  { test: /\\.css$/, use: [ [Object], [Object], [Object] ] },\n  { test: /\\.postcss$/, use: [ [Object], [Object], [Object], [Object] ] },\n  { test: /\\.less$/,use: [ [Object], [Object], [Object], [Object] ] },\n  { test: /\\.sass$/,use: [ [Object], [Object], [Object], [Object] ] },\n  { test: /\\.scss$/,use: [ [Object], [Object], [Object], [Object] ] },\n  { test: /\\.stylus$/,use: [ [Object], [Object], [Object], [Object] ] },\n  { test: /\\.styl$/,use: [ [Object], [Object], [Object], [Object] ] }\n...\n ]\nit add \".postcss\" rule, but it don't  add  post-loaders for standalone style files (outside of .vue)\nmy english is poor  ^_^  . ",
    "ckitt": "how about setting autoWatch to be true in karma.conf.js, or using CLI options --auto-watch in the package.json\n// package.json\n\"unit:watch\": \"cross-env BABEL_ENV=test karma start test/unit/karma.conf.js --auto-watch\",\nThis should be the simplest way to achieve the goal\nReferences: http://karma-runner.github.io/1.0/config/configuration-file.html. ",
    "ilearnio": "We did our custom unit testing setup, without karma and webpack so we don't need to wait minutes for building the bundle, launching browser etc. All is working perfectly and fast with just Node, jsdom to simulate browser, Mocha. I wish such setup would be there by default in vue-webpack-template. ",
    "lukaisailovic": "Same issue. Tested on Windows and Linux. Simple as that but fixes it.... ",
    "oguibueno": "I created a directory \"test\" in my project and it worked.\nCheers to @lsgoulart. ",
    "mark-rodgers": "Same issue here on macOS Sierra 10.12.4\nThanks @oguibueno your fix worked.. Whoops, right after posting I found someone else having the same issue #879 . \nNot sure why but found this fix in the comments from the issue mentioned above\n\nI created a directory \"test\" in my project and it worked.\nCheers to @lsgoulart. Error: ENOENT: no such file or directory, lstat '/Users/mrodgers/code/web/local/plantool/my-project/test'\n\nWow, can't believe I overlooked that. Definitely need to start getting more sleep \ud83d\ude34 the answer was literally in my question. Thanks again.\nHopefully this gets patched soon. I know I've used Vues in the past without unit testing and never have this problem.. ",
    "pongoman": "Same issue, windows 8, node 8.4, latest vue-cli.\nThe fix with the test dir worked, thanks.. ",
    "iboldurev": "Please, confirm changes.. Hi, @kemalcany I have eslint version 3.19.0. @kemalcany I did as you advised, it does not solve the problem. ",
    "shaun-sweet": "I think this only applied to projects made without testing invoked via the wizard. ",
    "SirM2z": "Error when dont setup unit tests\n```\nfs.js:1657\n      binding.lstat(baseLong);\n              ^\nError: ENOENT: no such file or directory, lstat 'path\\to\\test'\n``\nI think is the problem offs.realpathSync` with this commit. My directory\n\u00a0.\n\u2514\u2500\u2500 src\n\u3000\u3000\u3000\u251c\u2500\u2500 App.vue\n\u3000\u3000\u3000\u2514\u2500\u2500 assets\n\u3000\u3000\u3000\u3000\u3000\u3000\u2514\u2500\u2500 font\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u251c\u2500\u2500 iconfont.css\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2514\u2500\u2500 iconfont.eot\nIn App.vue\ncss\n@import './assets/font/iconfont.css';\nIn iconfont.css\ncss\n@font-face {\n  font-family: \"iconfont\";\n  src: url('iconfont.eot?t=1510823274364'); /* IE9*/\n  /* ... */\n}\nI do not know exactly what caused it, but it was solved when I added \"postcss-url\": {} in .postcssrc.js\nlike this:\nIn .postcssrc.js\njs\nmodule.exports = {\n  \"plugins\": {\n    // to edit target browsers: use \"browserslist\" field in package.json\n    \"postcss-import\": {},\n    \"postcss-url\": {},\n    \"autoprefixer\": {}\n  }\n}. Hello @LinusBorg \nMy browser generated extra duplicate requests when I added this configuration\njs\nhistoryApiFallback: {\n  rewrites: [\n    { from: /.*/, to: `${config.dev.assetsPublicPath}/index.html` },\n  ],\n},\nbefore modifying:\n\nafter modification:\n\nI found that extra requests are related to favicon.ico.\nBut it can work normally when I change back historyApiFallback: true\n. I have already modified it.. ",
    "zhuss": "thank you. ",
    "eddiemf": "Sorry for asking here (I think this should be addressed in eslint repo), but I just installed the webpack template and this rule does not seem to be working at all. I've tried many different rules apart from the default ones and my parameter reassigns are always lint with error.\nAll the rules works, except for the 'no-param-reassign' one. Is this happening only with me?. ",
    "Finrod927": "Using these versions and this fix for few weeks now, no issues.\nJust need a manual fresh \"page reload\" sometimes, I don't know why, it's probably related to my project.. ",
    "codetheorist": "I feel that a PR to Vue CLI would fix a lot of testing issues.\nI do have one submitted at the moment, for a '--force' flag, which essentially just hit's enter automatically at each prompt, instead of piping the 'yes' command.. PR #1230 fixes this issue, by obtaining this data during the install process, which sets the base URL during the build process and then deploys directly to the gh-pages branch.. Could we not do away with the shell script all together now. If all of the answers are in scenarios, there's technically no need for the yes command.\nWould there be a way to run all scenarios with one command?. The tests failed on this however further investigation revealed issues with a previously merged commit.\nA working demo built using this Webpack template is available on GitHub here.\nThe actual template that is generated is also available on the master branch for the repo here.. # THIS PR NEEDS CLOSING AND THE PR IN #1230 SHOULD BE USED INSTEAD. MY APOLOGIES.. The tests failed on this however further investigation revealed issues with a previously merged commit.\nA working demo built using this Webpack template is available on GitHub here.\nThe actual template that is generated is also available on the master branch for the repo here.\n  . Yeah, I did leave a comment on the old PR with regards to closing it for me please.. I did try to close, but I couldn't for the life of me find how to do it. It was probably right in front of me :). I did consider the gh-pages package, but when checking out both of the packages documentation, gh-pages just seems to make it more complicated than it should be.\nWith the push-dir package, any flags can simply be added to the package.json file, such as --allow-unclean and --force, if required by the end-user.. ",
    "yezongyang": "I am using config module to define configs, but i have to modify the template. @Aladdin-ADD . ",
    "kosmickanga": "Looks similar to Issue #840? This solves the problem by modifying build.js to accept an environment variable, which can then be passed in on the command line. . ",
    "gijo-varghese": "+1. ",
    "victor-ponamariov": "Any news here?. ",
    "fengerzh": "If you meet cross-env command not found, just run yarn add -D cross-env.. ",
    "squidbe": "@luciy , Is there a particular issue that v3 addresses?. ",
    "geniass": "I had the same problem, except it somehow affected all my projects (fresh installs and existing).\nI'm running Fedora 25 and node v6.11.2\nI'm not sure what the actual problem was, but I managed to fix it. I'm a bit surprised this works:\n\nDelete your node_modules/ directory. I also deleted my ~/.npm directory but I'm not sure if this is required\nInstall yarn\nyarn install\n\nAnd now it works. Reinstalling all dependencies with npm didn't work, so it must be doing something wrong.... Actually this issue has reappeared. The fix this time is mentioned in a comment in #378.\nAdding the following to the webpack-dev-middleware config solved the issue this time:\njavascript\nwatchOptions: {\n  aggregateTimeout: 300,\n  poll: 1000\n}. ",
    "JoseOspina": "I changed in config/index.js, under dev from poll: false to poll: 1000, and that worked too. ",
    "toudidel": "geniass's solution (with using yarn) works for me properly. ",
    "jdhartley": "This fixes a bug I was running into, where the dev server was returning\n\nCannot GET /assetsPublicPath/\n\n(where assetsPublicPath is the directory)\nThanks!. ",
    "thumbsized": "Thanks, that seems to be working just fine.. ",
    "alexMugen": "in my code i have classical template in my .vue: \n Inside my div template there is my html \nbelow i have my script \nI said that because in some solutions it suggests to add a file .babelrc with a typical conf  to overwrite the other. I did'nt remove any file \nI did an update and now it's work \nthank you !. In fact , the version of vue webpack when i get it is not the same than now . ",
    "zhouchangshun": "I come cross the same problem,how did you solve this problem?. ",
    "sidonaldson": "Or, it's being called multiple times. In the case of passing webpack an array rather than an object. \ud83d\udc4d . ",
    "silverbackdan": "@ffxsam - You've probably already soled this but for anyone stumbling across this issue, a good template for Nuxt is here:\nhttps://github.com/nuxt-community/typescript-template/tree/master/template\nThis article is good too:\nhttps://frontendsociety.com/writing-single-file-components-vue-files-in-typescript-vue-class-component-vs-vue-extend-c5c1d8e47b7. ",
    "donaldinos": "I think, that you have it correctly, only apostrophe is missing:\njavascript\nnew webpack.ProvidePlugin({\n      ...\n      'Tether': \"tether\"\n    }). ",
    "Ganitzsh": "Thanks for the help! It was actually me doing something very stupid with the file names. I had Hello.vue and Hello.js at the same spot and the import Hello from 'Hello' just didn't know which one to take...\nSorry. It works now!. ",
    "anpegar": "@Ganitzsh Hey there !!\nI am currently having the same problem with jquery and webpack, I am doing the following steps:\nStep 1\n$ vue init webpack my-project\n$ cd my-project\n$ npm install\n$ npm install --save jquery\nStep 2\nAdd jquery into webpack.dev.conf.js so that:\n```\nnew webpack.ProvidePlugin({\n      $: \"jquery\",\n      jQuery: \"jquery\",\n      \"window.jQuery\": \"jquery\",\n    }),\n```\nStep 3\nAdd global vars into .eslintrc.js so that:\n```\nglobals: {\n    '$': true\n  },\n```\nStep 4\nAdd the following code in the file HelloWorld.vue:\nexport default {\n  name: 'HelloWorld',\n  data () {\n    return {\n      msg: 'Welcome to Your Vue.js App'\n    }\n  },\n  mounted () {\n    console.log($('h1').html())\n  }\n}\nStep 5\nExecute npm run dev and the following error appears:\n```\n[Vue warn]: Error in mounted hook: \"ReferenceError: jquery is not defined\" found in\n--->  at src\\App.vue\n       \n```\nWhat's going wrong? \nGanitzsh, do you have a template with vue-webpack + jquery + bootstrap 4?\nAny help will be greatly appreciated.\nThanks in advance.\n. @LinusBorg thanks for your fast reply and I will ask the question in the indicated forum.\nIn the published example I just removed the javascript from the Hello.vue file and put it in the Hello.js file. Once the change is made, I execute \"npm run dev\" opens the browser (Chrome) and the indicated error appears in the console.\nI want to have javascript files in order to use esLint.\nThanks.. Hi @LinusBorg , thank for your fast reply, \nI still have the same error, could you send me or hang the project you have mounted from a repository?\nIn short, I will upload the project that I have mounted to github.\n\n. Here is the repository.\nhttps://github.com/anpegar/testjquery. Ops !! you're right !! \nI think today is not my day :-(.\nI was using new webpack.DefinePlugin instead of new webpack.ProvidePlugin.\nI am very sorry for the time I have been able to make you lose with this topic.. ",
    "rolandszpond": "I would like to add that this is how I've handled all my vue webpack projects and only started having projects recently these past few days. @rhyek Thanks! That works for me, at least temporarily until we find out if it's a bug or something. ",
    "rhyek": "Yeah, same here. Though, through this issue, I decided to try out lazy-loading and it works great!\nTry:\njs\nconst routes = [\n    {\n        path: '/',\n        name: 'Home',\n        component: () => import('@/pages/home')\n    }\n]. @LinusBorg, thanks.. ",
    "botmaster": "Oups wrong repo. ",
    "ssijak": "OK, I figured it out. In dev-server.js server is started with this url var uri = 'http://localhost:' + port\nFor some reason, if you open a page in chrome (and only in Chrome, Firefox and Safari work fine) starting with localhost it ignores viewport meta tag and just slaps some viewport size but if you change the line to var uri = 'http://127.0.0.1:' + port it works as expected. \nShould I put a pull request for it to change the line?. @LinusBorg While testing this I did disable all plugins which did not help. \nI could not connect this to anything but to the problem with chrome, it just slaps different viewport size when the page served by the webserver is opened with localhost in the url. Mind that the CSS and everything was loaded in both cases, only difference was that the chrome set larger viewport for localhost, and I tried all kinds of meta tags for viewport which changed nothing. For example : <meta content=\"width=device-width, initial-scale=1.00\" name=\"viewport\" />. ",
    "fritx": "Now in order to simply await Vue.nextTick in test:\n```js\n  it('view => model', async () => {\n    await Vue.nextTick()\n    expect(vm.model.name).to.equal('')\ninputs[0].value = 'abc'\ntriggerEvent(inputs[0], 'input')\n\nawait Vue.nextTick()\nexpect(vm.model.name).to.equal('abc')\n\n})\n```\nI have to do the trick like:\njs\n// test/unit/index.js\n// ...\n// hack: monkey-patch Vue.nextTick bug as not returning Promise\n// https://github.com/vuejs-templates/webpack/issues/930\nVue.nextTick = (original => {\n  return cb => {\n    if (cb == null) {\n      return new Promise(resolve => {\n        original(resolve)\n      })\n    } else {\n      original(cb)\n    }\n  }\n})(Vue.nextTick). @LinusBorg great work :+1:. @lefuturiste I was using dotenv-cli, hope that helps with you:\nsh\nnpm i -D dotenv-cli\ndiff\n   \"scripts\": {\n-    \"dev\": \"webpack-dev-server --inline --progress --config build/webpack.dev.conf.js\",\n+    \"dev\": \"dotenv webpack-dev-server --inline --progress --config build/webpack.dev.conf.js\",\n-    \"build\": \"node build/build.js\"\n+    \"build\": \"dotenv node build/build.js\"\n   },. ",
    "sikanderv": "Hello, I've a similar issue but in DEV. \nWhen I run 'npm run dev', I get no errors related to the image URL path.  The image simply does NOT display in the background.\nAfter going through the issues related to this problem in detail, I tried all possible paths in hopes of getting it right: \n../../assets/logo.png,\n../assets/logo.png,\n./assets/logo.png,\n/assets/logo.png,\nassets/logo.png, and even\nlogo.png\nbut no luck.  I did modify the 'webpack.base.conf.js' file to include the below line, as suggested by @githoniel in #208 \npublicPath: env === 'production' ? '../../' : './'\nNot sure if this matters, but in the same file, I have for the vue-loader:\n```\n        options: {\n          vueLoaderConfig,\n           loaders: {\n               'scss': 'vue-style-loader!css-loader!sass-loader',\n               'sass': 'vue-style-loader!css-loader!sass-loader?indentedSyntax'\n           }\n         }\n``\n**Image path**src\\assets\\logo.png`\nAppShell.vue\nsrc\\components\\AppShell.vue\nCODE \ntemplate\n<div id=\"logo\" :style=\"{ 'backgroundImage': 'url(\\'' + image + '\\')' }\">\n        <h1> IMAGE SHOULD APPEAR HERE </h1>\n      </div>\nscript \ndata () {\n    return {\n      msg: 'My Driving School',\n      tabIndex: 0,\n      image: '../../assets/logo.png'\n    }\n  }\nCSS\n```\nlogo {\nbackground-position: center;\n  background-repeat: no-repeat;\n}\n```\nThe repo is hosted at https://github.com/sikanderv/vue-projects/tree/master/driving-school if someone would like to take a look at it.\nScreenshot of the page and Dev Tools:\n\n. Thank you very much, this works.  Guess I have some reading to do about Webpack.  :). ",
    "pabloimrik17": "How should i use that same in vue with Typescript?\n`image: require('../../assets/logo.png')\nI have this error:\n\n. ",
    "d9k": "@LinusBorg, excuse me please, I asked question in a wrong project...\nI must've asked at webpack-simple:\nhttps://github.com/vuejs-templates/webpack-simple/issues/137. ",
    "mismith": "Yeah, I guess these could be seen as two parts of the same end goal. As you mention, it's currently totally possible to target only the latest browsers, but like the article mentions, the key part is doing both at the same time, much like a progressive enhancement: new browsers use the latest and greatest, old browsers use the transpiled equivalent.\nvue-cli 3 sounds exciting, and maybe it is the best place for this kind of functionality to be added. I figured it would have to start at the template level instead of the cli tool level though, since this workflow would likely use webpack, and currently not all templates do.\nWhat can I do next? Should this be discussed further or would it just need to gain popularity as an idea before anything happens?. ",
    "eugenefedoto": "I got it working.\n// config/index.js\nproxyTable: {\n      '/api': {\n        target: 'http://localhost:9090',\n        changeOrigin: true\n      }\n    },. ",
    "Oscarz90": "I tried the same but It didnt work, whats the difference between the two options? . ",
    "luckymore": "@Oscarz90 check your config/index.js  dev.host. Is it localhost. ",
    "LongLiveCHIEF": "I've also reproduced this here: https://gitlab.com/HackerHappyHour/wedreg.\nWhat's even more awesome for reproduction purposes, is that my repro is available via a docker image. To reproduce: \ngit clone https://gitlab.com/HackerHappyHour/wedreg.git\ncd wedreg\ndocker build -t wedreg .\ndocker run -it --rm -v `pwd`:/wedreg wedreg install\ndocker run -it --rm -v `pwd`:/wedreg - P wedreg run dev\nThe last 2 commands execute npm install and npm run dev, and result in the same error listed above. You can inspect this static system by running:\ndocker run -it --rm -v `pwd`:/wedreg -P --entrypoint /bin/bash wedreg\nAll files from the project, including node_modules should already be on your local machine in the wedreg folder you cloned to.. ",
    "Tattomoosa": "I'm getting a similar error, and again the dev server is working as expected.\n\u2807 building for production...Error processing file: static/css/app.a9c7f7cf4b2e38c2e4838cd2748640a3.css\n(node:13368) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): SyntaxError: Unexpected token \ufffd in JSON at position 111054\n(node:13368) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.\nIs this the same issue? Any chance anyone knows how to start tracking it down?\nEDIT:  My issue was fixed by importing all CSS into your components styles instead of at the top of .js files. I'm sure that's not the intended behavior but it's a pretty easy workaround at least.. ",
    "YannikG": "I'm getting @Tattomoosa error with the CSS-Framework  \"materialdesignicons\". \nIs there any update in this topic?\n. ",
    "basebandit": "To anyone who might still be facing @matheusgrieger's  issue and is using vuejs webpack template, check out this gist here https://gist.github.com/dc198689/9cf4ecfb4040d0a4564a561c27c81346. Works perfectly.. ",
    "IamManchanda": "Sorry but I strongly disagree and oppose this!\nHTML is preferred kebab-case by developers/designers worldwide!\nHow was this merged without any talks?. Vue automatically converts pascal case HelloWorld to kebab-case hello-world\nThen why??. I prefer this one because its HTML like!\n<!-- Everywhere -->\n<my-component></my-component>\nand not\n```\n In single-file components and string templates \n\n In DOM templates \n\n```\nThat said, The preference is totally personal\nso yeah, I am happy and satisfied\n ... ohk no issue :D . Instead of changing this why not tell people that Vue automatically converts \nHTML is preferred kebab-case by developers/designers worldwide!. ",
    "hootlex": "Thanks for detailed answer @LinusBorg. I also updated the description for future reference.. ",
    "c01nd01r": "I checked the work of eslint v 4.8.0 with the current set of \"Standart\" and \"Airbnb\" configs. It seems that everything works well. \nAnd yes, I probably should have created an issue. In any case, thanks for paying attention to this.. Maybe need to update the vue-template-compilerup to 2.5.2  and vue-loader ?. ",
    "alimirayman": "Thank you. ",
    "HaidongSong": "#  I'm a rookie, and I follow a video to learn to do app, and I edit and modify the dev-server.js in the video. I don't have this document. What do I do?. ",
    "ZhenHe17": "You can fork this repo to create your own boilerplate, and use it with vue-cli:\nbash\nvue init username/repo my-project\nYou can also specify branch:\nbash\nvue init username/repo#branch my-project\nLike this?\nIt's my suggestion.\nYou can close PR anytime as your wish.. ",
    "dolymood": "@LinusBorg  Here i created a repo https://github.com/dolymood/stylus-loader-test \nThe error messages:\nERROR in ./src/common/common.styl\nModule build failed: ModuleNotFoundError: Module not found: Error: Can't resolve './icon.woff'\n. @LinusBorg In stylus executable document  http://stylus-lang.com/docs/executable.html#resolving-relative-urls-inside-imports there is a --resolve-url or -r option to resolve this case.. ",
    "Lanseria": "@LinusBorg yes, you can. such as vue-cli bug. ",
    "Tirke": "I don't know what is going on, but I wanted to try the dev branch with the switch to webpack-dev-server and I had an issue right out of the box. npm run dev was complaining about a missing dependency :\n```\nThese dependencies were not found:\n\n!!vue-style-loader!css-loader?{\"minimize\":false,\"sourceMap\":false}!../node_modules/vue-loader/lib/style-compiler/index?{\"vue\":true,\"id\":\"data-v-7ba5bd90\",\"scoped\":false,\"hasInlineConfig\":false}!postcss-loader!../node_modules/vue-loader/lib/selector?type=styles&index=0&bustCache!./App.vue in ./src/App.vue\n!!vue-style-loader!css-loader?{\"minimize\":false,\"sourceMap\":false}!../../node_modules/vue-loader/lib/style-compiler/index?{\"vue\":true,\"id\":\"data-v-469af010\",\"scoped\":true,\"hasInlineConfig\":false}!postcss-loader!../../node_modules/vue-loader/lib/selector?type=styles&index=0&bustCache!./HelloWorld.vue in ./src/components/HelloWorld.vue\n\nTo install them, you can run: npm install --save !!vue-style-loader!css-loader?{\"minimize\":false,\"sourceMap\":false}!../node_modules/vue-loader/lib/style-compiler/index?{\"vue\":true,\"id\":\"data-v-7ba5bd90\",\"scoped\":false,\"hasInlineConfig\":false}!postcss-loader!../node_modules/vue-loader/lib/selector?type=styles&index=0&bustCache!./App.vue !!vue-style-loader!css-loader?{\"minimize\":false,\"sourceMap\":false}!../../node_modules/vue-loader/lib/style-compiler/index?{\"vue\":true,\"id\":\"data-v-469af010\",\"scoped\":true,\"hasInlineConfig\":false}!postcss-loader!../../node_modules/vue-loader/lib/selector?type=styles&index=0&bustCache!./HelloWorld.vue\n```\nI added postcss-loader because it's not in package.json : npm install postcss-loader --save-dev\nAfter that the dev server is up and running but with annoying warnings :\n```\nPostCSS Loader\nPrevious source map found, but options.sourceMap isn't set.\nIn this case the loader will discard the source map entirely for performance reasons.\nSee https://github.com/postcss/postcss-loader#sourcemap for more\n```\nMaybe I wasn't suppose to add postcss-loader ?. We did have that piece of config which is equivalent to just setting historyApiFallback: true no ?. Sure quite easy : here you go\nEdit : \nForgot to mention there is an additional alias in base conf : 'css': resolve('src/assets/css')\nAdditional info :\nThere is one sass stylesheet importing flatpickr styles using classic node-modules alias.\nThat stylesheet is imported in App.vue :\n<style lang=\"sass\">\n  @import '~css/styles.sass'\n</style>. Thanks for the quick \"hacky\" fix. I do agree that remembering a special case is not ideal though.\nWe may have to reach out to postcss-import maintainers no ?. ",
    "ddiegommachado": "How to solve it? Someone? I have same problem!. ",
    "hstarorg": "I think you should use the vue.esm.js.. ",
    "zhuanyongxigua": "faulty operation. ",
    "hexyxj": "I have reinstalled nodejs and vue-cli, and I tried to init a new project. while excuting npm install, above error showed again.\nMay be my environment matter...\nthanks for you reply! \ud83d\udc4d . ",
    "PeterSamK": "I reinstalled still it pops ups the same error message\n. I solved the issues, It was due to a cache clear error (but *they auto\nrepair) had some data corruption which didn't let the JSON files to parse.\nThank you for the response Thorsten : )\nCheers,\nPeter Sam K\nOn 12 November 2017 at 20:21, Thorsten L\u00fcnborg notifications@github.com\nwrote:\n\nI can't help you with that, because I can't reproduce the issue.\nAnd the issue seems to be with the npm mirror (taobao) you are using -\nit's returning incomplete files.\nIf that's true, they have to fix their files, we can't do anything about\nthis.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/990#issuecomment-343736884,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ARH0420FSAdaU-6g-9ieQw5nZiQtjNP6ks5s1vDJgaJpZM4P7yXJ\n.\n. @cqgsm  Just completely uninstall the Node.js from Programs and Features and Re-install it,Make sure that you completely deleted all the node-modules and npm caches in the Npm folder and not present anywhere else. Yeah\n\nOn Sun, Apr 8, 2018, 8:28 AM \u65fa\u4ed4\u725b\u5976 notifications@github.com wrote:\n\nthings done\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/990#issuecomment-379515533,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ARH040JnsmqyoUIXPGTmf9x1fnMAp9gxks5tmXy6gaJpZM4P7yXJ\n.\n. \n",
    "cqgsm": "@PeterSamK \u4f60\u600e\u4e48\u89e3\u51b3\u7684\u554a\uff0c\u6211\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898. ",
    "gentcdq": "@cqgsm ni jie jue le ma?. ",
    "tudou123xu": "I also encountered the same problem, how do you solve?\n\u6211\u4e5f\u9047\u5230\u4e86\u540c\u6837\u7684\u95ee\u9898\uff0c\u8bf7\u95ee\u4f60\u600e\u4e48\u89e3\u51b3\u7684\uff1f. ",
    "theo4u": "this solved it https://github.com/npm/npm/issues/19072#issuecomment-345555468\n. ",
    "liukaixin01": "I also have the same problem. @tudou123xu npm cache clean --force. ",
    "kwok7": "npm cache clean --force\nthat solved. ",
    "congzhaoyang": "things done. ",
    "amith-cv": "Well I faced a similar issue while doing npm install  --registry <internal-npm-registry> and it returned with the error like \nnpm ERR! Unexpected token < in JSON at position 0 while parsing near '<!DOCTYPE HTML PUBLI...'\nThe problem was with the internal-npm-registry. I had to go to the internal jFrog repository to find out the setup up command to use the correct url. \nAlso there was no need for clearing the npm cache as suggested earlier.. ",
    "Frank14b": "thks @kwok7 solve. ",
    "18811376770": "why there is still \nnpm ERR! Unexpected end of JSON input while parsing near '...hasShrinkwrap\":false,'\nafter i run npm cache clean --force\nand it just stucks here even without showing\nERR! A complete log of this run can be found in:\nnpm ERR!     /Users/apple/.npm/_logs/2018-05-10T02_39_59_805Z-debug.log\nand quitting?\nCan someone help me?. ",
    "cauyyl": "perfect\uff01. ",
    "Un1xMida": "@18811376770 i had the same issue and when i reinstalled the NPM every error i faced has been solved.\n. ",
    "thereisnowinter": "@18811376770 Did yout tried npm cache clean --force? I tried it, but same error occurs.. ",
    "Nditah": "Try clearing the npm cache at C:\\Users\\PC\\AppData\\Roaming\\npm-cache\\\n. ",
    "Shrimant12": "npm cache clean --force\nthis worked for me :+1: . ",
    "yug95": "npm cache clean --force\nthis worked for me. ",
    "anurag-git": "\"npm cache clean --force\" didn't work for me but removing package-lock.json worked.. ",
    "KevinYY": "\nnpm cache clean --force\ntry\nif false\ndelete package.lock.json\ntry again\nif false\nnpm set registry https://registry.npmjs.org/ don't use taobao mirror\ntry again. \n",
    "bolin-L": "@KevinYY  Thanks ,  the last point worked for me!. ",
    "Mikearaya": "thank you. ",
    "Skinyi": "I have the same issue like this when i tried to install \u201dforever\u201c:\n\nnpm ERR! Unexpected token < in JSON at position 0 while parsing near '<!DOCTYPE html PUBLI...'\n\nThe version of my node.js is v8.11.2, npm version is 5.6.0, and my host operation system is CentOS 7\nand i have tried all the solutions mentioned above but it`s still not worked.. ",
    "magigedaniel": "Am experiencing same issue with react native app after upgrading expo:\nthe log does not have any helpful information. ",
    "eladonline": "had the same problem and solved it like this: \nopen a directory and in the url enter this: C:\\Users/\\%username%\\AppData\\Roaming\nsearch for npm-cache and rename it to npm-cache.old\n. ",
    "AdelekeIO": "What is the solution to this error?\nnpm install -g create-react-app reactproject\nnpm ERR! code E404\nnpm ERR! 404 Not Found: reactproject@latest\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     C:\\Users\\user\\AppData\\Roaming\\npm-cache_logs\\2018-07-02T13_07_24_033Z-debug.log. ",
    "DaltonHarvey": "Had the same problem:\nnpm ERR! Unexpected end of JSON input while parsing near '...compat.2.tgz\",\"fileCo'\n    npm ERR! A complete log of this run can be found in:\n    npm ERR!     C:\\Users\\DALTON\\AppData\\Roaming\\npm-cache\\_logs\\2018-07-20T12_47_18_001Z-debug.log\n\nAnd the solution was:\nnpm cache clean --force\n. ",
    "TonyBaiSAP": "run npm cache clean --force working fine to me.. ",
    "gokul123": "The following step worked for me.\n1. Clear npm-cache from /users/{username}/AppData/Roaming/npm-cache\n2. Uninstall node \n3. Reinstall node.\n. ",
    "hkk2016": "npm cache clean --force\nThis worked for me. ",
    "djallas": "I think it was a network issue while downloading the package\ntry\nnpm cache clean --force\n. ",
    "victoralonsopacha": "i had the same error, the best option is uninstall all, node, npm and angular cli, repeat the installation and clean the cache of npm with:\nnpm cache clean --force\nif is necessary for twice you try clean the cache. ",
    "SeynalKim": "Had the same error, I had slow connection and this problem occurred, can't install it. I was thinking this some kind of problem with cache, Luckily I found the command for it so fast npm cache clean --force. then retry to install it with the following command npm install electron --save-dev and done.. ",
    "wangyangsea": "\u6211\u4e4b\u524d\u5c06npm\u9ed8\u8ba4\u4f7f\u7528\u6dd8\u5b9d\u6e90\u4e0b\u8f7d\u4e86\uff0c\u8bd5\u4e86\u4e00\u4e0b\u4e0a\u9762\u5927\u4f6c\u7684\u731c\u6d4b\uff0c\u5c06npm\u91cd\u65b0\u6307\u5411\u4e86\u9ed8\u8ba4\u6e90\uff0c\u5c31\u597d\u4e86. ",
    "anguskwan": "dont use taobao repo, install goes well.. ",
    "atachev": "thanks, @kwok7 ! It works for me also. :) \ud83d\udc4d  . ",
    "camille-zh": "npm cache clean --force\nThis worked for me. @kwok7 Thanks so much!. ",
    "RotondwaMudau": "npm cache clean --force\nThis should do the trick \nMight take time to run depending on the number of packages you have on cache. ",
    "Higher-Stark": "npm cache clean --force really works for me.\nI rerun npm install with Taobao registry, and the error goes away. I assume registry is not concerned with the error.\n@kwok7  Thanks a lot.. ",
    "EmmyMay": "cleaning the cache with force solved the issue for \"unexpected JSON parse error\" when i tried installing vue cli 3. ",
    "maheshankush02": "Remove the node_module  folder from the project repository.\nrun the npm install -g @vue/cli.\nAnd then run the command npm install.\nIts works for me.\n. ",
    "jhchen6": "npm cache clean --force worked perfectly. ",
    "IamSadiq": "this also solved mine\nnpm cache clean --force. ",
    "dwqs": "npm cache clean --force\nit's worked for me. ",
    "Umesh17": "try\nnpm cache clean --force\nand then \nnpm install -g @angular/cli\nIt works for me.. ",
    "kimkyeseung": "\nHad the same problem:\nnpm ERR! Unexpected end of JSON input while parsing near '...compat.2.tgz\",\"fileCo'\nnpm ERR! A complete log of this run can be found in:\n    npm ERR!     C:\\Users\\DALTON\\AppData\\Roaming\\npm-cache\\_logs\\2018-07-20T12_47_18_001Z-debug.log\nAnd the solution was:\nnpm cache clean --force\n\nThanks. ",
    "duprez": "Delete the node_modules and the package-lock.json and then execute the command.\nIn my case:\nnpm install nodemailer or npm install\nThis works for me.. ",
    "maheshkareeya": "npm cache clean --force\n. ",
    "tchouanga123": "please  i  had the ame problem and did npm cache clean  --force but this is what it is showing me now \nnpm WARN registry Unexpected warning for https://registry.npmjs.org/: Miscellaneous Warning ETIMEDOUT: request to https://registry.npmjs.org/connect failed, reason: connect ETIMEDOUT 104.16.22.35:443\nnpm WARN registry Using stale package data from https://registry.npmjs.org/ due to a request error during revalidation.\nnpm ERR! code ETIMEDOUT\nnpm ERR! errno ETIMEDOUT\nnpm ERR! network request to https://registry.npmjs.org/websocket-extensions failed, reason: connect ETIMEDOUT 104.16.21.35:443\nnpm ERR! network This is a problem related to network connectivity.\nnpm ERR! network In most cases you are behind a proxy or have bad network settings.\nnpm ERR! network\nnpm ERR! network If you are behind a proxy, please make sure that the\nnpm ERR! network 'proxy' config is set properly.  See: 'npm help config'\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     C:\\Users\\hp\\AppData\\Roaming\\npm-cache_logs\\2018-09-20T19_36_30_757Z-debug.log\nPLEASE FOR HELP TO SOLVE THAT\n. what does \"npm WARN rollback\"  means  please which error  is that. Thanks il would ne very helpful\nLe ven. 21 sept. 2018 \u00e0 09:58, gitmoin notifications@github.com a \u00e9crit :\n\nMy issue was as following:\nUnexpected end of JSON input while parsing near '...f2f9b8fd5ca9e429747e3'\nMy project was not installing and terminated in middle showing the above\nerror, then googled I tried the following two commands:\nnpm install npm@latest -g\nnpm install --cache /tmp/empty-cache\nwhen I executed the above two commands one after one. And, then I created\nthe project and then I found no issue coming in middle to terminate, my\nproject was successfully installed or created.\nHope this will be helpful to a few persons atleast.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/990#issuecomment-423464389,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ao-XILnhTFDG7fGUqIToQRjloMJsUsPxks5udKovgaJpZM4P7yXJ\n.\n. thanks  it worked\n\nLe jeu. 27 sept. 2018 \u00e0 12:51, pradeep notifications@github.com a \u00e9crit :\n\nnpm cache clean --force\nsolve this problem\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/990#issuecomment-425061231,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ao-XILf8T4ykotLIJcA3jdQzrWEHCNrYks5ufLvBgaJpZM4P7yXJ\n.\n. Ok thanks\n\nLe mer. 3 oct. 2018 \u00e0 07:22, Ovais Ali notifications@github.com a \u00e9crit :\n\nHad the same issue.. Cleaning the cache worked for me.\n\"npm cache clean\"\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/990#issuecomment-426524390,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ao-XII4nl_PZxK4oF4zvEMcb0x_VP9b2ks5uhFeKgaJpZM4P7yXJ\n.\n. Ok thanks\n\nLe ven. 12 oct. 2018 \u00e0 04:36, panw3i notifications@github.com a \u00e9crit :\n\nnpm cache clean --force\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/990#issuecomment-429193838,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ao-XIO22FXXoBF_PKpbyybH912GRU19Tks5ukA5LgaJpZM4P7yXJ\n.\n. \n",
    "gitmoin": "My issue was as following: \nUnexpected end of JSON input while parsing near '...f2f9b8fd5ca9e429747e3'\nMy project was not installing and terminated in middle showing the above error, then googled I tried the following two commands:\nnpm install npm@latest -g\nnpm install --cache /tmp/empty-cache\nwhen I executed the above two commands one after one. And, then I created the project and then I found no issue coming in middle to terminate, my project was successfully installed or created.\nHope this will be helpful to a few persons atleast.. ",
    "pradeepsrawat029": "npm cache clean --force\nsolve this problem . ",
    "RuthenicEye": "Had the same issue.. Cleaning the cache worked for me. \n\"npm cache clean\" . ",
    "Ninon01": "Salut a tous debutant dans le dev web j'aimerais bien apprendre le angular js  et je voudrais savoir quel interface ou IDE pourrais aller le mieux avec ce framework.. ",
    "panw3i": "npm cache clean --force. ",
    "auleki": "\nI solved the issues, It was due to a cache clear error (but they auto repair) had some data corruption which didn't let the JSON files to parse. Thank you for the response Thorsten : ) Cheers, Peter Sam K\n\u2026\nOn 12 November 2017 at 20:21, Thorsten L\u00fcnborg @.**> wrote: I can't help you with that, because I can't reproduce the issue. And the issue seems to be with the npm mirror (taobao) you are using - it's returning incomplete files. If that's true, they have to fix their files, we can't do anything about this. \u2014 You are receiving this because you commented. Reply to this email directly, view it on GitHub <#990 (comment)>, or mute the thread https://github.com/notifications/unsubscribe-auth/ARH0420FSAdaU-6g-9ieQw5nZiQtjNP6ks5s1vDJgaJpZM4P7yXJ .\n\nThis helped me as well!!!!. ",
    "rajkiit116": "To resolve issue, below command worked for me \nnpm cache clean --force\nnpm update\nnpm install\nng build\nng serve. ",
    "yewenjunfighting": "npm cache clean --force\nit works for me. ",
    "alexgred": "npm cache clean --force\nIt's solve for me.. ",
    "zqq198976": "@kwok7 Thanks a lot!. ",
    "DolceLemus": "just a comment, that error sometimes is because you did changes in your packege.json and react cannot read it and when you reinstall npm the package.json works because in building again.. ",
    "Oredunni1": "I am trying to install firebase in my angular project but gotten that same error. Thanks I was later able to solve it by using \"npm cache clean -- force\" and\nafter it was done I input the command again and it works. Thanks\nOn Nov 1, 2018 1:53 PM, \"Muhammad Afzal Khan\" notifications@github.com\nwrote:\nMy issue was as following:\nUnexpected end of JSON input while parsing near '...f2f9b8fd5ca9e429747e3'\nMy project was not installing and terminated in middle showing the above\nerror, then googled I tried the following two commands:\nnpm install npm@latest -g\nnpm install --cache /tmp/empty-cache\nwhen I executed the above two commands one after one. And, then I created\nthe project and then I found no issue coming in middle to terminate, my\nproject was successfully installed or created.\nHope this will be helpful to a few persons atleast.\nThis \"npm install npm@latest -g\" worked for me! I really Thankful :)\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/990#issuecomment-435031481,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ApOBC-bkC_T1EmhHOtW03wTgw8eUI-jgks5uqu64gaJpZM4P7yXJ\n.\n. ",
    "MAfzalKhan1997": "\nMy issue was as following:\nUnexpected end of JSON input while parsing near '...f2f9b8fd5ca9e429747e3'\nMy project was not installing and terminated in middle showing the above error, then googled I tried the following two commands:\nnpm install npm@latest -g\nnpm install --cache /tmp/empty-cache\nwhen I executed the above two commands one after one. And, then I created the project and then I found no issue coming in middle to terminate, my project was successfully installed or created.\nHope this will be helpful to a few persons atleast.\n\nThis \"npm install npm@latest -g\" worked for me! I really Thankful :). ",
    "ceefour": "npm cache's claim:\n\nAll data that passes through the cache is fully verified for integrity on both insertion and extraction. Cache corruption will either trigger an error, or signal to pacote that the data must be refetched, which it will do automatically. For this reason, it should never be necessary to clear the cache for any reason other than reclaiming disk space, thus why clean now requires --force to run.\nThe npm cache is strictly a cache: it should not be relied upon as a persistent and reliable data store for package data. npm makes no guarantee that a previously-cached piece of data will be available later, and will automatically delete corrupted contents. The primary guarantee that the cache makes is that, if it does return data, that data will be exactly the data that was inserted.\n\nBut based on several issues (pretty common I guess), npm cache's \"corruption-proof\" seem to be just assumptions, not reality. :'(\n. I have to agree with @deepakjha14 :\n\nI had to downgrade node and npm to 8.11.0 and 5.6.0 respectively and multiple tries with npm cache clean --force, finally it seems to be working now\n\nFor me even npm cache clean --force \"works\" intermittently. I needed to do several retries (probably catching different error each time) until everything went correctly. It's quite obvious to me that the way npm cache works is not foolproof, there are some conditions (network?) that can corrupt its state.. ",
    "ImCharmainejoy": "thanks  @theo4u it worked for me . :). ",
    "iampkmaurya": "\nnpm cache clean --force\nit's worked for me\n\n. ",
    "PriyankaPungaonkar": "\nnpm cache clean --force \nThis work for me..\nThank you. \n",
    "yelloxing": "\u7b2c\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u548c\u4e0a\u9762\u4e00\u6837\uff1anpm cache clean --force\uff1b\n\u6216\u8005\u4f7f\u7528cnpm.\n\u7b2c\u4e8c\u79cd\u5c31\u662f\uff1anpm -g i npm@v\n\u4e0a\u9762v\u8868\u793a\u7248\u672c\n\uff08\u5176\u5b9e\u5c31\u662f\u7f51\u4e0d\u597d\uff0c\u7f13\u5b58\u5bfc\u81f4\u7684\uff09. ",
    "satishdash": "\nnpm cache clean --force\nthat solved\n\nThat really solves the issue. Thanks @kwok7  :). ",
    "deepakjha14": "I had to downgrade node and npm to 8.11.0 and 5.6.0 respectively and multiple tries with npm cache clean --force, finally it seems to be working now. ",
    "lil-armstrong": "\n@tudou123xu npm cache clean --force. That solved it quite alright. Great help guys\n\n. ",
    "alivesoftsnowman": "\nnpm cache clean --force\n\nYou are right. But I can't understand about bug correctly.. ",
    "Mohammed-Usman": "cleaning cache actually worked \ud83d\udc4d . ",
    "mahendramahi": "npm cache clean --force\nFor window :- got to \n\nC:\\Users\\username\\AppData\\Roaming\\npm-cache \n\nDelete all file and run\nnpm install && npm start. ",
    "suvarapuprasad": "\n\"npm cache clean --force\" didn't work for me but removing package-lock.json worked.\n\nthis worked. ",
    "Remig9": "pls help me am having this error when i tried to create new file \nnpm ERR! code ENOGIT\nnpm ERR! Error while executing:\nnpm ERR! undefined ls-remote -h -t ssh://git@github.com/expo/vector-icons.git\nnpm ERR!\nnpm ERR! undefined\nnpm ERR! No git binary found in $PATH\nnpm ERR!\nnpm ERR! Failed using git.\nnpm ERR! Please check if you have git installed and in your PATH.\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     C:\\Users\\USER\\AppData\\Roaming\\npm-cache_logs\\2019-01-22T05_17_35_372Z-debug.log\n[10:17:35] Process exited with non-zero code: 1\n[10:17:35] Set EXPO_DEBUG=true in your env to view the stack trace.. ",
    "askshinde": "npm cache clean worked for me. ",
    "luizfonseca830": "Thank you, I was having the same problem.. ",
    "eytoo": "Debes eliminar el siguiente archivo  'package.lock.json', luego deberas correr npm install y deberia funcionar correctamente. . ",
    "caldaravi": "\n\"npm cache clean --force\" didn't work for me but removing package-lock.json worked.\n\nfinally I solved it, ty!. ",
    "booyoungchen": "I also made the same mistake. Finally, I solved the problem by deleting all the contents in the cache folder. I hope I can help you.. ",
    "asufshafee": "\n@tudou123xu npm cache clean --force\n\nyou saved my life <3. ",
    "nguyenphi0205": "\nthis solved it npm/npm#19072 (comment)\n\ngod bless you. ",
    "kjym": "npm cache clean --force\nworked for me, thanks. ",
    "ifeanyi-ajimah": "npm cache clean --force \nthis worked for me. thanks a million. ",
    "AdolphKevin": "npm cache clean --force\nthis is my solved. ",
    "nttd2211": "\n@tudou123xu npm cache clean --force\n\nso good. Thank you for solving the problem. Thank you for your interest and\ndedicated guidance via mail.\nThank you so muchhhhhhhhhhhhhhh\nV\u00e0o Th 5, 14 thg 3, 2019 va\u0300o lu\u0301c 18:52 Jack Chen notifications@github.com\n\u0111\u00e3 vi\u1ebft:\n\nnpm cache clean --force\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/990#issuecomment-472820415,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AuAvemLyHRQTMMYHqRffekLmT7FQpp-zks5vWjfrgaJpZM4P7yXJ\n.\n. Yep tks so muchhhh\n\nV\u00e0o Th\u1ee9 S\u00e1u, 15 th\u00e1ng 3, 2019, Vimal Desai notifications@github.com \u0111\u00e3\nvi\u1ebft:\n\nYeah! Thanks.\nnpm cache clean --force and then do what you are doing it's working\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/990#issuecomment-473216587,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AuAveptM2T_0EHXpDlcttwvQIwvqZaogks5vW2fsgaJpZM4P7yXJ\n.\n. \n",
    "chenchangyuan": "npm cache clean --force. ",
    "VimLeSai": "Yeah! Thanks.\nnpm cache clean --force and then do what you are doing it's working. ",
    "CHANDRAMOHANnegi": "it is npm error, i solve it by running this command : npm cache clean --force. ",
    "nimcho": "@LinusBorg I've got it.  When I use Vue-Router with mode: \"history\", relative path to static directory lose its meaning.  Thanks.  . ",
    "cbmaiolo": "Thanks so much! . ",
    "SidKwok": "{\n  \"presets\": [\n    [\"env\", {\n      \"modules\": false,\n      \"targets\": {\n        \"browsers\": [\"> 1%\", \"last 2 versions\", \"not ie <= 8\"]\n      }\n    }],\n    \"stage-2\"\n  ],\n  \"plugins\": [\"transform-runtime\"],\n  \"env\": {\n    \"test\": {\n      \"presets\": [\"env\", \"stage-2\"],\n      \"plugins\": [\"istanbul\"]\n    }\n  }\n}\nThe .babelrc seems fine. And if comments: false setting in .babelrc, the magic comments are not supposed to work. I send a PR and it should solve this issue.. I see, it does have some side effects with [name]. And I agree that it shouldn't matter what the chunk name is in production, if the chunks are group together properly.\nI think it's better to undo this change. @LinusBorg . Happy to help ! :) . how about using 0.0.0.0 by default in the template? it can still use localhost.. You've got a point here. Done. @LinusBorg . ",
    "guanzo": "Well i figured it out, i added a chunks: [\"app\"], property to the assets chunk options, and added 'assets' to the manifest chunks array\nnew webpack.optimize.CommonsChunkPlugin({\n  name: 'vendor',\n  minChunks: function (module, count) {\n    // any required modules inside node_modules are extracted to vendor\n    return (\n      module.resource &&\n      /\\.js$/.test(module.resource) &&\n      module.resource.indexOf(\n        path.join(__dirname, '../node_modules')\n      ) === 0\n    )\n  }\n}),\n//split image and json files into own chunk\nnew webpack.optimize.CommonsChunkPlugin({\n  name: 'assets',\n  chunks: [\"app\"],\n  minChunks: function (module, count) {\n    return (\n      module.resource &&\n      /\\.(png|jpe?g|gif|svg|json)(\\?.*)?$/.test(module.resource)\n    )\n  }\n}),\n// extract webpack runtime and module manifest to its own file in order to\n// prevent vendor hash from being updated whenever app bundle is updated\nnew webpack.optimize.CommonsChunkPlugin({\n  name: 'manifest',\n  chunks: ['vendor','assets']\n}),\nI'm not sure why this worked, if anyone could explain that'd be great.\nI think that without chunks: [\"app\"],, the plugin was only processing the newly created vendor chunk, which didn't have any image/json imports. By adding chunks: [\"app\"],, i forced it to process the app entry file, which contained my image/json imports.. ",
    "Akryum": "Side note: now.sh uses npm run build to build your deployments.. The build command essentially produces compiled files in a dist folder, that you can then upload to a server.\nThe dev command doesn't produce any file and instead starts the webpack development server with development-specific features like watching files and hot-module-replacement.\nThis is all regardless of the value of NODE_ENV.. Here is a working config for Windows 10:\njs\n{\n  rootDir: \"D:\\\\Mes documents\\\\GitHub\\\\livestorm-container\\\\livestorm-app\",\n  roots: [\"<rootDir>/app/frontend\"],\n  moduleFileExtensions: [\n    \"coffee\",\n    \"js\",\n    \"json\",\n    \"jsx\",\n    \"ts\",\n    \"vue\",\n    \"sass\",\n    \"scss\",\n    \"styl\",\n    \"css\",\n    \"png\",\n    \"svg\",\n    \"gif\",\n    \"jpeg\",\n    \"jpg\"\n  ],\n  moduleDirectories: [\n    \"app/frontend\",\n    \"node_modules\",\n    \"app/frontend\",\n    \"app/frontend/packs\",\n    \"app/frontend/common/js/\",\n    \"app/frontend/common/vue\",\n    \"app/frontend/common/vue/components\",\n    \"app/frontend/api\",\n    \"app/frontend/config\",\n    \"config/locales-front\",\n    \"public\"\n  ],\n  moduleNameMapper: { \"^@/(.*)$\": \"<rootDir>/app/frontend/$1\" },\n  transform: {\n    \"^.+.jsx?$\": \"<rootDir>/node_modules/babel-jest\",\n    \".*.(vue)$\": \"<rootDir>/node_modules/jest-vue\"\n  },\n  mapCoverage: true,\n  snapshotSerializers: [\"<rootDir>/node_modules/jest-serializer-vue\"],\n  testPathIgnorePatterns: [\"/node_modules/\", \"/vendors/\"],\n  setupFiles: [\"<rootDir>/test/frontend/jest-setup\"]\n}. FYI, my script is \"test:unit\": \"jest --config test/frontend/jest.config.js\",. @nirkki @robertmain Could you please try with a clean project using vue init Akryum/webpack test-jest?. > We should also create a PR for this template to use @Akryum's config for windows compatibility.\n@LinusBorg There is one. :smile:. Oh yeah, I forgot to remove it.. ",
    "Frizi": "You don't build for development. You run the development server. There is no \"building\" action for dev environment, as opposed to all the rest of them.. All the outcome of dev command happens to land inside webpack's memory-fs, and it's directly served from there via express server. Those files are unusable outside of this context, as those are very big. Usually they contain evaled modules, inlined sourcemaps and hot-reloading logic. You should never use that server as your production environment.\nThat's why we have a build command, a de-facto standard used by many deployment solutions as your default app building hook. It just produces a bunch of ready to serve files. That doesn't mean that it has to run in production though, as you might have many different environments distinct from your main prod servers. All of those targets will use the same script, but having a different value inside NODE_ENV environment variable.\nJust imagine what a disaster would it be if somebody would assume that prod runs only on production environment, and with this in mind added a bunch of cache clearing logic into it.\nNow all your QA builds would influence your real production servers.\nIn case this pattern doesn't fit well into your project (because nothing is a silver bullet), you are free to adjust the files produced by the template as you please.. That's what you have build for again. It just produces a set of files to serve, you don't need JS on server side to deal with them. It's only required on your build machine. I'm commonly using nginx to serve those files later, but you are free to use whatever solution you prefer. Github pages works just as well \ud83d\ude09 . ",
    "itdpong": "but whats wrong with my code? I really don't know whats wrong about it.\n```\n//prod.env.js\n'use strict'\nconst webpack = require('webpack')\nmodule.exports = {\n  NODE_ENV: '\"production\"',\n  plugins: [\n    new webpack.DefinePlugin({\n      'API_URL':  JSON.stringify('http://192.168.1.10:8081')\n    }),\n  ]\n}\n//main.js\nnew Vue({\n  el: '#app',\n  router,\n  template: '',\n  created:function(){\n    console.log('1=',${API_URL});\n    console.log('2=',process.env.API_URL);\n    console.log('3=',API_URL);\n  },\n  components: { App }\n})\n//console\n[Vue warn]: Error in created hook: \"ReferenceError: API_URL is not defined\"\nReferenceError: API_URL is not defined\n```. actually I try it before , but it still prompt the same error.\n\n. thank you so much, finally I make it work!!!\n. ",
    "akaibanana": "For the people arrived here like me, please note that you should run npm run dev again to have the update in dev.env.js to take place.\nThis drove me crazy for hours.... ",
    "francoisromain": "@maurop123 @LinusBorg I added the buble config in my vue-loader config, but I still have an error: \nERROR in ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b7762b10\",\"hasScoped\":false,\"buble\":{\"objectAssign\":\"Object.assign\",\"transforms\":{\"stripWith\":false}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/components/my-component.vue\nModule build failed: SyntaxError: 'with' in strict mode (1:26)\nand I use babel-preset-stage-3 which includes babel-plugin-transform-object-rest-spread.\nIs there anything else I should do to make it work? \nThank you. @LinusBorg it works, thank you. (This was the occasion for me to discover bubl\u00e9). So in which case would you turn off the stripWith option? \n. ",
    "dmitry-saritasa": "For someone who will visit here, this is what worked for me \n./build/vue-loader.conf.js\n```\n'use strict'\nconst utils = require('./utils')\nconst config = require('../config')\nconst isProduction = process.env.NODE_ENV === 'production'\nconst sourceMapEnabled = isProduction\n  ? config.build.productionSourceMap\n  : config.dev.cssSourceMap\nmodule.exports = {\n  loaders: utils.cssLoaders({\n    sourceMap: sourceMapEnabled,\n    extract: isProduction\n  }),\n  cssSourceMap: sourceMapEnabled,\n  cacheBusting: config.dev.cacheBusting,\n  transformToRequire: {\n    video: ['src', 'poster'],\n    source: 'src',\n    img: 'src',\n    image: 'xlink:href'\n  },\n  buble: {\n    objectAssign: 'Object.assign'\n  }\n}\n```\nand example of template of my component\n<template>\n  <!--\n    // replaced @input=\"$emit('input', $event.target.value)\" with\n    // v-on=\"$listeners\", need testing\n    // see more here\n    // http://blog.webf.zone/vue-js-considerations-and-tricks-fa7e0e4bb7bb\n  -->\n  <div>\n    <label class=\"form-label\">{{ getLabel | capitalize }}</label>\n    <input\n      v-tooltip=\"getTooltipContent\"\n      :bind=\"$attrs\"\n      :type=\"type\"\n      :value=\"value\"\n      :placeholder=\"getPlaceHolder\"\n      :class=\"getClass\"\n      class=\"form-input\"\n      data-vv-validate-on=\"none\"\n      v-on=\"{\n        ...$listeners,\n        input: event => $emit('input', event.target.value)\n      }\">\n  </div>\n</template>. ",
    "AnDi1402": "tengo el mismo error! no he podido solucionarlo, alguna idea como solucionarlo??. ",
    "dennisreimann": "If you don't have standard installed globally, the VS Code Standard plugin complains about not being able to find the package (if it's not installed as a devDependency). \nA question I had in mind before proposing this: Does it make sense to do linting via ESLint in case one uses the standard option? To me it feels a bit redundant.. Yeah, that's alright :). ",
    "paulocheque": "Solved: UglifyJs plugin from Webpack 2 wasn't able to minify es2015 js code. So I upgrade my libs to use Webpack 3 and the new plugin: https://github.com/webpack-contrib/uglifyjs-webpack-plugin. ",
    "iMomen": "@myst729 Thanks, that what I have ended up with.. ",
    "agnivade": "Scope hoisting came with webpack 3 which was released in June 19. The template uses 3.6 now. A lot of companies including mine have successfully used scope hoisting now. It was even featured in the Chrome Dev Summit video by @addyosmani.. Well, I guess you should raise an issue in the webpack repo. I just sent this PR because I applied this and noticed good improvements. I am no way an expert in Webpack.. ",
    "kuoruan": "@agnivade Enable this gives me a Error\nUncaught TypeError: Cannot read property 'call' of undefined\n    at r (manifest.3fe6de900fd915a3ce9a.js:1)\n    at Object.NHnr (app.3cf392e250a975da6f37.js:1)\n    at r (manifest.3fe6de900fd915a3ce9a.js:1)\n    at window.webpackJsonp (manifest.3fe6de900fd915a3ce9a.js:1)\n    at app.3cf392e250a975da6f37.js:1\nMy webpack version is 3.8.1. @agnivade OK, thank you. I find the same issue at https://github.com/webpack/webpack/issues/959#issuecomment-310299833. Fixed with: #1140 549078351ef381e9b4cdd73d7aa7a4d57534e4a2. OK, Thx. ",
    "kemalcany": "What version is your eslint?\nI encountered some bugs after the 4.10.0 update so I've downgraded to 4.9.0 and problems resolved.. Thanks for the help Linus, so yes so the BABEL_ENV is undefined. NODE_ENV is dev. \nSetting BABEL_ENV as test or production doesn't seem to solve the issue.\nThe .babelrc that comes out of the box is as follows:\nTo me it looks like a Karma setup but at the command prompt I've chosen Jest as my test runner, could this be the problem?\n{\n  \"presets\": [\n    [\"env\", {\n      \"modules\": false\n    }],\n    \"stage-2\"\n  ],\n  \"plugins\": [\"transform-runtime\"],\n  \"env\": {\n    \"test\": {\n      \"presets\": [\"env\", \"stage-2\"],\n      \"plugins\": [\"transform-es2015-modules-commonjs\", \"dynamic-import-node\"]\n    }\n  }\n}. ",
    "robertmain": "Have you tried mounted instead of created?\nAlso - what does this have to do with wechat?. I'm trying to use Vue to generate a nice portfolio page for me on github pages. I'm just getting a white page and the reason seems to be related to the fact that all the asset paths are wrong:\n\nSee how it's putting in robertmain.github.io/static/whatever.js and basically slicing the URL segment off the end of the URL. Basically it seems to happen if you're not running a vue app in a subdirectory.\nOne temporary hack that appears to fix it (in the .3 seconds I spent playing with it) is to remove assetsPublicPath in config/index.js so that it's just an empty string. Though, I don't know what knock-on effect that may have so.... >The other solution would be to use change it to /portfolio.\nYeah, I'm kind of (ab)using GitHub pages for the time being to host a professional portfolio. The problem with changing it to portfolio would be that it then wouldn't work on my local box. \n\nYou \"fixed\" it by changing it to an empty string, which essentially is the same as changing it to './' - a relative path.\n\nYeah, I bought this up because I wasn't sure if that was likely to screw with other things or if it was an okay thing to do without breaking things..\n\nBut since history mode doesn't work on github pages anyway,\n\nOh, it doesn't? Huh. TIL.\n\nSidenote: This doesn't really have anything to do with the topic of this issue - it's about other assets path problems.\n\nOh, sorry - I thought it was a manifestation of the same issue. That....kind of makes sense now that I think about it, yeah.. @LinusBorg what do you mean? I'm mounting the component with $mount() - also document wont't exist in that context (my unit test) surely?. OK - so it's still coming up as <!-- -->\nAre there some docs somewhere? I feel like I'm maybe missing something obvious.. Right, but in this case comp.$el is still just showing up as <!-- -->...like I said - are there docs?. Yeah, it is weird...\nBtw - vuejd.org is a non-existant domain - did you mean vuejs.org? :). I mention it because I haven't finished my second coffee yet and it took me a good 15 minutes to figure out why it didn't work :P. Either way - I'm not using vue-test-utils...just whatever comes bundled with this template...not sure if that's relevant.... Sure, thanks - repo is here: https://glow.dev.maio.me/impulse/dashboard/tree/sjohn/date-component. Whoops - try now. I committed and pushed\n. OK...so it looks like the test is the problem. My component works just fine in the browser.\nThis prints out the prop data(in this case hh:mm a:\n```js\nconst Constructor = Vue.extend(Clock);\nconst vm = new Constructor({\n    propsData: {\n        timeFormat: 'hh:mm a'\n    }\n}).$mount(document.createElement('div'));\n//eslint-disable-next-line\nconsole.error(vm.timeFormat);\n```\n...however - this:\n```js\nconst Constructor = Vue.extend(Clock);\nconst vm = new Constructor({\n        timeFormat: 'hh:mm a'\n}).$mount(document.createElement('div'));\n//eslint-disable-next-line\nconsole.error(vm.timeFormat);\n```\nJust prints out undefined\nAlso worth noting that if, in the first example - I do this:\n```js\nconst Constructor = Vue.extend(Clock);\nconst vm = new Constructor({\n    propsData: {\n        timeFormat: 'hh:mm a'\n    }\n}).$mount(document.createElement('div'));\n//eslint-disable-next-line\nconsole.error(vm.$el);\n```\nIt prints out <!-- --> ....meanwhile console.log(vm.$el.children) simply produces undefined. Tried that\n```js\nconst Constructor = Vue.extend(Clock);\nconst vm = new Constructor({\n    propsData: {\n        timeFormat: 'hh:mm a'\n    }\n}).$mount(document.createElement('div'));\nVue.nextTick(() => {\n    //eslint-disable-next-line\n    console.error(vm.$children);\n    expect(0).to.equal(0);\n    done();\n});\n```\nI get [] in my terminal. ...oh - I would've thought it would contain child elements...\nEither way - vm.$el is still showing as <!-- -->\nSurely I should have something showing up?. Ah, ok. I did commit the component and it's tests up earlier I think.\nEither way - I appreciate you doing this. I originally thought this was an issue with the testing config in the template...but it seems to be just my understanding of how to test Vue components :). Solved it in the end - ended up upgrading to the latest version of the template and using jest instead of mocha and chai.. Windows 10 user here chipping in. I find it works if I run npx jest but not npm run-script unit. To say I'm confused is an understatement.\nAdditionally, manually running the jest test/unit/specs --coverage command doesn't work. It seems to be interpreting the test/unit/specs as the pattern to search for unit test specs...which doesn't work for some reason. Remove that and it seems to at least find the test suites.. @eddyerburgh I doubt it will since that isn't where my test specs are\n@Akryum See below:\n```\n FAIL  test\\e2e\\specs\\test.js\n  \u25cf Test suite failed to run\nYour test suite must contain at least one test.\n\n  at node_modules/jest/node_modules/jest-cli/build/test_scheduler.js:95:22\n      at Generator.next (<anonymous>)\n      at Promise (<anonymous>)\n      at <anonymous>\n  at process._tickCallback (internal/process/next_tick.js:188:7)\n\nPASS  test\\unit\\specs\\HelloWorld.spec.js\nTest Suites: 1 failed, 1 passed, 2 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        10.432s\nRan all test suites.\n-----------------|----------|----------|----------|----------|----------------|\nFile             |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |\n-----------------|----------|----------|----------|----------|----------------|\nAll files        |     7.69 |        0 |    33.33 |     12.5 |                |\n src             |        0 |        0 |        0 |        0 |                |\n  App.vue        |        0 |        0 |        0 |        0 |... 19,20,21,22 |\n src/components  |      100 |      100 |      100 |      100 |                |\n  HelloWorld.vue |      100 |      100 |      100 |      100 |                |\n-----------------|----------|----------|----------|----------|----------------|\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! test-jest@1.0.0 unit: jest --config test/unit/jest.conf.js --coverage\nnpm ERR! Exit status 1\nnpm ERR!\nnpm ERR! Failed at the test-jest@1.0.0 unit script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     C:\\Users\\robert\\AppData\\Roaming\\npm-cache_logs\\2017-11-16T15_08_14_710Z-debug.log\n``. That's what I don't get though.... I've blown mynode_modulesfolder away multiple times and I'm using the same version as the the newest template uses... Yet it still doesn't work.... Is something cached somewhere or something?. - The lockfile is a possibility - I'll try binning it and re-installing\n- No, I'm not using yarn. My friend is - but I'm not...interestingly, it works fine on the CI server with the exact same lockfile..... Yep - binningnode_modules**AND**package-lock.json` fixed this. Thanks!\nClosing :). FYI: Jest is the only thing that I can get to actually run my tests(albeit not in it's current configuration)\n. @grantcarthew Yeah, that failed. I got this message:\nModule build failed:\nundefined\n^\n      File to import not found or unreadable: ~font-awesome/scss/font-awesome\n@saintplay Do you have the URL of the forum? . Thanks, @saintplay - VueAwesome seems to be working for me :). ",
    "33033624": "OK\uff0cthe question is resolved. i try use babel-pollyfill and the question is resolved. thanks all. yeah\uff0ci think the export is no play. and i use the babel-pollyfill and the questionis resolved. but i thank you.. ",
    "cosimochellini": "i use bootstrap-vue  , 0 css written on my own\nthe template is derived from vue init webpack. Mm also without bootstrap the spa is not responsive , that's a really weird things. Yes, now work, sorry for the inconveniences. ",
    "nikolay-borzov": "I see eslint-config-standard sets these plugins. ",
    "mgenware": "@LinusBorg Just noticed you added a label, sorry for the duplicate PR, I accidentally deleted the remote branch, it was automatically closed now, have to start a new one #1028 . For a quick testing of multiple common chunks, this project may be helpful.. Hi @LinusBorg, thanks for your informative reply. I totally agree, I've committed changes to my branch \ud83d\ude00. For a quick testing of multiple common chunks, this project may be helpful.. ",
    "akshayvinchurkar1": "ok specific issue is when dist folder generate i open index.html file but nothing is working because the static css and javascript links are like\nthis is not working link\n<link href=/static/css/app.ea298c8beb30b3d115fad4c0e0e636b0.css rel=stylesheet>\nthis is working link for me without \"/\" before static folder in windows 7\n<link href=static/css/app.ea298c8beb30b3d115fad4c0e0e636b0.css rel=stylesheet>\nsame thing for javascript files. @rajeevbbqq in template there is no webpack.config.js. where to find that file?. ok so using a http server is necessary still my project is working thanks @LinusBorg . ",
    "nathanaelphilip": "hi @LinusBorg can you try a .svg instead of a .png. fudge! ok, maybe it\u2019s a package conflict. can you show me your package.json :)\nactually, if you\u2019re running a fresh install, i\u2019ll just compare to that! thanks!. i think it may have to do with this package: https://github.com/visualfanatic/vue-svg-loader/issues/14. ",
    "monsdroid": "for me it is atm. thanks scoobah36!. ",
    "gquintana": "Thanks for help.\nAs this template is using ECMAScript++ language features (imports...) I expected it would also ECMAScript++ APIs.\nHere is what I did to fix it:\nnpm install --save babel-polyfill\nAnd then \nimport 'babel-polyfill'\nin src/main.js and test/index.js. Is it appropriate?\nI think you should document it.. ",
    "ignasbernotas": "This is still an issue for the rest of us :(. ",
    "mjvezzani": "Apologies that it isn't a clean repository with a minimal reproduction, but I'm getting the same issue. If you care to look:\nhttps://github.com/mjvezzani/redx_application/blob/master/vue_app/test/unit/specs/ProfileForm.spec.js\nThe console.log(vm.$el) in that test outputs <!---->. Unsure why that is, seeing as I used Header.vue and Header.spec.js as templates for my ProfileForm.vue and ProfileForm.spec.js files. When I console.log(vm.$el) in the Header.spec.js test, I get a set of DOM elements, but that just isn't the case in for ProfileForm.spec.js.. ",
    "kotmatpockuh": "The same error:\n```\nimport BootstrapVue from 'bootstrap-vue';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.css';\nVue.use(BootstrapVue);\n```\n\nThese dependencies were not found:\n\nbootstrap/dist/css/bootstrap.css in ./src/main.js\nbootstrap-vue/dist/bootstrap-vue.css in ./src/main.js\n\nTo install them, you can run: npm install --save bootstrap/dist/css/bootstrap.css bootstrap-vue/d. \n",
    "caolingxiong": "\u5bb3\u4eba\u4e0d\u6d45\u554a\uff0c\u6211\u5c31\u662f\u8bf4\u6628\u5929\u6211\u6309\u7167element-ui\u7684\u5b98\u65b9\u6587\u6863\u505a\u6ca1\u6709\u95ee\u9898\uff0c\u4eca\u5929\u8981\u8fdb\u5165\u6b63\u5f0f\u9879\u76ee\u5c31\u51fa\u95ee\u9898\u4e86\uff0c\u767e\u601d\u4e0d\u5f97\u5176\u89e3\uff0c\u539f\u6765\u662f\u65b0\u6a21\u677f\u7684\u95ee\u9898\uff01\u597d\u50cf\u7206\u7c97\uff01\uff01\uff01\uff01\uff01\uff01. ",
    "Adolph-lh": "\u540c\u6837\u95ee\u9898. ",
    "anotherleon": "it takes me hours to search the reasons , you can do\nnpm install postcss-loader --save -D. ",
    "bailinlin": "@caolingxiong \u65b0\u6a21\u677f\u7684\u95ee\u9898\u73b0\u5728\u89e3\u51b3\u4e86\u4e48. ",
    "ZoeShaw101": "@PanJiaChen \u5b89\u88c5\u4e86npm install postcss-loader --save -D \u4f9d\u7136\u4e0d\u884c. ",
    "boltonomous": "Sorry for the lack of reply...\n\nMac OSX 10.12.2 \nno VMs, watchers or special characters in the paths (other than underscores and dashes)\nvue cli 2.9.1\n\nHowever, I AM seeing it work now.  I think what may have thrown me off is that it is no longer automatically launching a browser.  I update HelloWorld.vue and am seeing it update in Chrome.. Thanks @LinusBorg for setting me straight.  That works in my situation.. ",
    "tesarwijaya": "i have same issue with windows10 environment.\n- OS Win10\n- npm 3.10\n- vue-cli 2.8.1\n- fresh install\nediting App.vue is triggering hot reload but when editting Hello.vue hot reload is not works.\ni also tried run npm run dev using admin powershell but still not works.. ",
    "maitrungduc1410": "I'm now using Ubuntu 16.04 LTS and the solution of @tvld works perfectly :100: . ",
    "CristalT": "The solution of @tvld works for me in Xubuntu 18.04. It happens to me using Quasar Framework, I fix it removing the temp directory that dev server generates, maybe could find a similiar solution with vue-cli. ",
    "egorzot": "@tvld thanks!!!!. ",
    "seb1441": "Solution from @tvld also fixed the issue for me and I'm on a Ubuntu 18.04 vm. Does anyone have an idea of why this happens?\nIt's the second time that I need to fix it.. ",
    "markoaherrera": "Hi, my 2 cents here, I'm using vue cli 3, so after a while and plenty of changes, HMR stops working so after reading this I closed the terminal window where I was executing \"npm run serve\", and it worked using a new terminal window, if it keeps happening I'll give the solution from @tvld a try, I'm using Ubuntu 16.04.. ",
    "p01ymath": "@tvld You just saved my whole day! I won't forget your help ever lol! . ",
    "Zicrael": "@tvld lol, its work. Magic?:D. ",
    "claudiolcastro": "@tvld  well done. thanks!. ",
    "cgillions": "Still not working for me:\nUbuntu 18.04.2 LTS \nWebstorm 2018.3.5\nChrome Version 73.0.3683.75 (Official Build) (64-bit)\nTried restarting, increasing max watchers, disabling \"Use safe write\" in Webstorm.\nWhen I run \"npm run serve\", the website loads and this line is output in the console:\n\"[HMR] Waiting for update signal from WDS...\"\nIf I make changes in a Vue component and save, my terminal session re-compiles the code, but no changes are seen in Chrome.. @tvld - yes. \nAfter \"I make changes in a Vue component and save, my terminal session re-compiles the code, but no changes are seen in Chrome\", I can refresh Chrome and the changes appear.. ",
    "maxiong1": "Why delete css-loader minimize: process.env.NODE_ENV === 'production'.\nI know OptimizeCSSPlugin can compress\uff1b\nbut webpack.prod.conf.js new ExtractTextPlugin({ filename: utils.assetsPath('css/[name].[contenthash].css?v=111111')}),\nCss packaged without compression did not go heavy. ",
    "mprandot": "To me, nothing about HMR is working :\\ \nI have to run \"npm run dev\" every time\n. ",
    "sammkj": "Dell Ubuntu 16.04 LTS is my development environment. after a few trial and errors (rm -rf node_modules, edit webpack config, etc.), I finally got it working. . ",
    "fedegar33": "Same issue on Windows 7.  Tried to run npm run unit -- --no-watchman but the problem persists.. ",
    "nirkki": "Didn't help here either. I also found some notes that Jest has had some issues with Windows paths containing special chars - but my project doesn't have those.\nhttps://github.com/facebook/jest/issues/4467. Tried to troubleshoot this further: installing jest globally didn't make difference on 'npm run unit'\nBut it enabled me to run it from the command line - and here is the result\n```\nC:\\test\\jesting> jest --coverage\n PASS  test\\unit\\specs\\HelloWorld.spec.js\n  HelloWorld.vue\n    \u221a should render correct contents (27ms)\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        1.403s\nRan all test suites.\n-----------------|----------|----------|----------|----------|----------------|\nFile             |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |\n-----------------|----------|----------|----------|----------|----------------|\nAll files        |        0 |        0 |        0 |        0 |                |\n src             |        0 |        0 |        0 |        0 |                |\n  App.vue        |        0 |        0 |        0 |        0 |... 19,20,21,22 |\n src/components  |        0 |        0 |        0 |        0 |                |\n  HelloWorld.vue |        0 |        0 |        0 |        0 |... 39,40,41,42 |\n-----------------|----------|----------|----------|----------|----------------|\nBut if I give a path the result is the same as running npm run unit\n C:\\test\\jesting> jest test/unit/specs --coverage\nNo tests found\nIn C:\\test\\jesting\n  28 files checked.\n  testMatch: /tests//.js?(x),/?(.)(spec|test).js?(x) - 1 match\n  testPathIgnorePatterns: \\node_modules\\ - 28 matches\nPattern: test/unit/specs - 0 matches\n----------|----------|----------|----------|----------|----------------|\nFile      |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |\n----------|----------|----------|----------|----------|----------------|\nAll files |  Unknown |  Unknown |  Unknown |  Unknown |                |\n----------|----------|----------|----------|----------|----------------|\n. Too bad, I'll revert back to Karma-Mocha. At least feel more like home there. Thanks for help!. No paranthesis in the pathC:\\test\\jesting. Here we go! Now the coverage report for HelloWorld looks right, but for App.vue not quite...\nC:\\test\\jest-test> npm run unit\n\njest-test@1.0.0 unit C:\\test\\jest-test\njest --config test/unit/jest.conf.js --coverage\n\nPASS  test\\unit\\specs\\HelloWorld.spec.js\n  HelloWorld.vue\n    \u221a should render correct contents (47ms)\nTest Suites: 1 passed, 1 total\nTests:       1 passed, 1 total\nSnapshots:   0 total\nTime:        3.103s\nRan all test suites.\n-----------------|----------|----------|----------|----------|----------------|\nFile             |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines |\n-----------------|----------|----------|----------|----------|----------------|\nAll files        |     7.69 |        0 |    33.33 |     12.5 |                |\n src             |        0 |        0 |        0 |        0 |                |\n  App.vue        |        0 |        0 |        0 |        0 |... 19,20,21,22 |\n src/components  |      100 |      100 |      100 |      100 |                |\n  HelloWorld.vue |      100 |      100 |      100 |      100 |                |\n-----------------|----------|----------|----------|----------|----------------|\n```. @LinusBorg That's what I meant, the linenumbers. But if that's an vue-jest issue then this looks very promising!\n\n. ",
    "areknow": "@LinusBorg glad its not just me \ud83d\ude05. Thanks for the quick fix!. ",
    "jarrodldavis": "I ran into this same problem yesterday and the issue is because\n\nvue-loader uses PostCSS directly instead of relying on postcss-loader\nsass-loader skips any imports for paths that end with .css\n\nI was able to workaround the issue by omitting the file extension in the import statement. Once Babel 7 lands, you can use a .babelrc.js file if you need to: https://github.com/babel/babel/pull/4892\nHere's a workaround for 6.x in the meantime.. Hmm, since babel-jest does its own .babelrc resolution, I wonder if the relative path is an issue. Try adding a temporary console.log to .babelrc.js to see if it's even being loaded during testing?. Hmm, looks like Jest only looks at env -> test under .babelrc, and even then using the .babelrc.js preset trick doesn't work.. Okay, I've figured it out.\n.babelrc:\njson\n{\n  \"presets\": [\n    [\"./.babelrc.js\"]\n  ],\n  \"env\": {\n    \"test\": {\n      \"presets\": [\"./.babelrc.js\"]\n    }\n  }\n}\n.babelrc.js:\njavascript\nmodule.exports = function () {\n  if (process.env.NODE_ENV === 'test') {\n    return {\n      presets: ['env', 'stage-2']\n    }\n  } else {\n    return {\n      presets: [\n        ['env', {\n          modules: false\n        }],\n        'stage-2'\n      ],\n      plugins: ['transform-runtime']\n    }\n  }\n}\nI also ran jest with --no-cache (as recommended here) to make sure the transformation was fresh.. ",
    "jcastrov": "I have the same issue with Bootstrap SASS files. They use their imports without extension (See Sass Basics) and I get the same error as @Tirke:\n_functions.scss\nsass\n// Normal code\nbootstrap.scss\nsass\n@import \"functions\";\n// More imports\nError message\n```\nModule build failed: Error: Failed to find 'functions'\n  in [\n    project-path\\node_modules\\bootstrap\\scss\n  ]\n    at resolveModule.catch.catch (project-path\\node_modules\\postcss-import\\lib\\resolve-id.js:35:13)\n    at \n@ ./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-04c2046b\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue 4:14-296 13:3-17:5 14:22-304\n @ ./src/App.vue\n @ ./src/main.js\n @ multi (webpack)-dev-server/client?http://localhost:8080 webpack/hot/dev-server ./src/main.js\n```\n. A temporal solution for me was importing main SCSS files in main.js, instead of SASS @import, like this\n```javascript\nimport Vue from 'vue'\nimport App from './App'\nrequire('bootstrap/scss/bootstrap.scss');\nrequire('../src/style/mycustomstyles.scss');\n```\nAnd it works like a charm \ud83d\ude09 . ",
    "dangthang7100": "I have the same issue when use vue-nprogress plugin (Failed to find '~nprogress/nprogress.css'), is there any solution for this issue yet? I dont want to custom this plugin by remove the tilde.. ",
    "robbiemu": "I'm having a more complicated and sticky problem with this.\nvue-multiselect has styles that we would have to clobber with !important rules, unless we import them in scope. But our project uses submodules, and the main project is where package.json is .. so effectively I have to use webpack aliases like:\n```\n@import \"~@fe/node_modules/vue-multiselect/dist/vue-multiselect.min.css\";\n```\nthat works when loaded from main.js in an scss file:\nmain.js\nrequire('sass/app.scss')\n//...\napp.scss\n@import \"~@fe/node_modules/vue-multiselect/dist/vue-multiselect.min.css\";\n...\nbut does not work from the component in the submodule:\n<style lang=\"scss\" type=\"text/scss\" scoped>\n@import \"~@fe/node_modules/vue-multiselect/dist/vue-multiselect.min.css\";\nno other formulation works from the submodule either:\n@import \"@fe/node_modules/vue-multiselect/dist/vue-multiselect.min.css\";\n@import \"~/vue-multiselect/dist/vue-multiselect.min.css\";\n. The error message says post-css. ",
    "meteorlxy": "@robbiemu \nIt may use css-loader to load .css file.. @robbiemu \nFor me, this does work:\nhtml\n<style type=\"text/css\" lang=\"scss\">\n@import 'github-markdown-css/github-markdown.css'\n</style>\nBut this fails:\nhtml\n<style type=\"text/css\" lang=\"scss\">\n@import '~github-markdown-css/github-markdown.css'\n</style>\n. According to the comments?\nWell, in my opinion, this is just a template, you should make your own modification in your project.. ",
    "duckness": "Yeah I had this problem as well in #1065, just set host to 0.0.0.0 in config/index.js\nedit: goddamnit lol. ",
    "zslucky": "\n\ud83d\ude22 . Versions:\nvue-cli: 2.9.1\nos: mac 10.12.6\nnode: 6.11.0\nnpm: 3.10.10\nI have added it in first comment. ",
    "dann95": "And if im not clear, i know \"npm run dev\" but i must have final use (production) without HTTP server... ",
    "sinallcom": "@LinusBorg you mean assetsPublicPath, not assetsRootPath\n ```\n build: {\n    // Template for index.html\n    index: path.resolve(__dirname, '../dist/index.html'),\n// Paths\nassetsRoot: path.resolve(__dirname, '../dist'),\nassetsSubDirectory: 'static',\nassetsPublicPath: './',\n\n```. ",
    "T0miii": "If i do all this under my locale machine windows it works just fine. But in my VM (Homestead) if i npm run dev there is nothing under localhost.\nI think its time to create a dualboot ubuntu system. . ",
    "g1eny0ung": "I create two repo, one for master and another for develop branch\nmaster\ndevelop\nStill occur import error when run npm test. Morning, I confirm it's my env problem and I will try to solve it... I use another laptop and test run fine. Sorry for bothering you and very thanks for you explaining \ud83d\ude3a . I solved it! It's jest cache problem.\nI run ./node_modules/.bin/jest --showConfig | grep cache and rm the cache folder and all work fine!. ",
    "metamn": "Ok thanks, I've did it but can't found a usable answer. I'll wait then for the doc update.. Ok I see. Then I'll find a way on my own to make the integration.. ",
    "WangSZ": "\u64cd\u4f5c\u5931\u8bef\u3002\u3002\u3002. ",
    "brandonaaskov": "@LinusBorg I think this might still be an issue. I opened #1404 and it seems closely related to this.. ",
    "larsmars": "I have the same, updated #1404 . \nFacing simular issue.\nVue-cli: 3.0.0-rc.2\nJest: ^23.1.0\nvue-jest: 1.0.0\nvue: 2.5.16\njest-vue-preprocessor: 1.4.0\"\nwindows: 10\n\n\n. ",
    "squireChuck": "Sorry, this issue wasn't intentional. I was just looking at another issue in this repo, and ended up creating this one because of GH's keyboard shortcuts. >.< Apologies!. ",
    "328480460": "@afontcu  thanks for help ,  i rewrite  host and port ,  HRM comes back; i dont know the reason, bu it dose useful, thanks again!!! \n\n. ",
    "luandro": "I'm also having this problem using this template to develop for the SAFE Browser. A few versions back it used to work, but after a few updates I get error:\n```\nXMLHttpRequest cannot load http://localhost:3000/sockjs-node/info?t=1511445071485. The value of the 'Access-Control-Allow-Origin' header in the response must not be the wildcard '*' when the request's credentials mode is 'include'. Origin 'localhost://p:3000' is therefore not allowed access. The credentials mode of requests initiated by the XMLHttpRequest is controlled by the withCredentials attribute.\nclient?843a:164 [WDS] Disconnected!\n```\nI get the same error using other boilerplates that user HMR. Anyone knows what has been recently updated in Webpacks's HMR config that could cause this?\nI've tried adding headers: { 'Access-Control-Allow-Origin': '*' } to config, but that doesn't help.... ",
    "sgimeno": "What about using ChromeHeadless as suggested here https://stackoverflow.com/a/41561847? It would fit better for CI setups. ",
    "ematipico": "Chrome headless is totally better. ",
    "dalaidunc": "ok it seems I have to set BABEL_ENV=test before running the tests. This was not very clear though.. ",
    "Java-http": "\u4f60\u597d\uff0c\u8bf7\u95ee\u8fd9\u4e2a\u95ee\u9898\u6709\u627e\u5230\u89e3\u51b3\u529e\u6cd5\u4e86\u5417\uff1f. ",
    "xihadandan": "\u8fd8\u6ca1\u6709\u627e\u5230\u4e3a\u4ec0\u4e48\uff01\u5b98\u65b9\u7684\u4eba\u597d\u50cf\u4e0d\u91cd\u89c6\u8fd9\u4e2a\u95ee\u9898\uff01\u6211\u53ea\u77e5\u9053v.1.1.2\u548cv1.1.3\u6ca1\u6709\u95ee\u9898. \u5bf9\uff01\u662f\u90a3\u4e48\u56de\u4e8b\uff01\u4f60\u53ef\u6709\u627e\u5230\u89e3\u51b3\u529e\u6cd5\uff1f. ",
    "iocool": "\u5b89\u5353\u4e0a\u8c8c\u4f3c\u9664\u4e86UC\u6d4f\u89c8\u5668,QQ\u6d4f\u89c8\u5668\u548c\u4f7f\u7528qq\u6d4f\u89c8\u5668\u5185\u6838\u7684\u6d4f\u89c8\u5668\u90fd\u4e0d\u884c,\u9875\u9762\u7a7a\u767d,\u6211\u770b\u597d\u50cf\u662fapp.js\u52a0\u8f7d\u5b8c\u6ca1\u6709\u6267\u884c\u540e\u7eed\u7684\u8bf7\u6c42\u4ee3\u7801,\u5bfc\u81f4\u8def\u7531\u88ab\u963b\u585e\u800c\u9875\u9762\u4e0arouter-view\u6ca1\u6709\u52a0\u8f7d\u51fa\u6765. \u6211\u4e5f\u6ca1\u6709\u89e3\u51b3\u529e\u6cd5,\u6309\u7167\u4f60\u7684\u8bf4\u6cd5,\u6211\u4e0b\u8f7d\u4e86v1.1.3\u73b0\u5728\u6d4b\u8bd5\u6ca1\u6709\u95ee\u9898\u4e86,\u7136\u540e\u6211\u5bf9\u6bd4\u4e86\u4e00\u4e0b\u6700\u65b0\u7248\u548c1.1.3\u7684package\u6587\u4ef6,\u91cc\u9762\u6709\u5f88\u591a\u7ec4\u4ef6\u90fd\u6362\u4e86,\u5e94\u8be5\u662f\u65b0\u7684\u7ec4\u4ef6\u5bf9\u4e8e\u65e7\u7248\u6d4f\u89c8\u5668\u5185\u6838\u652f\u6301\u7684\u95ee\u9898\u5427,\u76ee\u524d\u770b\u6765,\u8fd8\u662f\u7528\u65e7\u7248\u7a33\u5b9a\u4e00\u70b9,\u65b0\u7248\u8fc7\u6bb5\u65f6\u95f4\u5728\u770b\u5427. ",
    "youdianfan": "\u8bf7\u95ee\u8fd9\u4e2a\u95ee\u9898\u600e\u4e48\u89e3\u51b3\u554a?. ",
    "minowu": "\u5e94\u8be5\u662f\u6ca1\u6709\u5f15\u5165 babel-polyfill \u5bfc\u81f4\u7684\u3002\u4f60\u8bd5\u8bd5\u52a0\u5165 babel-polyfill \u53bb\u89e3\u51b3\u517c\u5bb9\u95ee\u9898\u3002http://babeljs.io/docs/usage/polyfill/. ",
    "CharlesKumar": "An opinionated feature request (sort of)\nmay be better than webpackBundleAnalyser/ webpack visualizer\nif you look into the code, a simple react app to analyse the bundles. code\nLet's see how many votes bundle buddy can get when webpackBundleAnalyser is already included in this template\n. Hello developers !!\nwhat about this brotl compression over gzip \nusing this webpack-plugin\nRead this article and share your views on compression techniques\n. In config/index.js \nlook into\n...\nbuild: {\n  ...\n  devtool: '#source-map'\n  ...\n}\nchange this devtool value to configure bundle to whether to include sourcemaps or how to include them \nsee the docs\n. setting productionGzip: true may solve the problem\n// Gzip off by default as many popular static hosts such as\n    // Surge or Netlify already gzip all static assets for you.\n    // Before setting to `true`, make sure to:\n    // npm install --save-dev compression-webpack-plugin\n    productionGzip: false,\na thread from old vue forum\n[[Just a tip to newbies who reading this comment]]. The benchmark data is for react.js \nhow much es6 modules react.js using may play a keyrole here\nbabel-minify has series of plugins to achieve the desired treeshaking \n\nWe however mention it as an alternative in the config. We haven't added it initially because the default setup of this template aims to compile to ES5 anyway, and when doing that, Uglify is as good in terms of minification and much faster - at least that's my latest information, feel free to correct me :)\n\nyes sort of feature discussion to provide better options if we could find. performing code elimination via Babili, transpiling to es5 via Babel and finally minifying via UglifyJS\nor tweaking uglifyjs options to do some unsafe operations [not recommended]\nso its now seems to be a future request... we can get better options in the future . using: vuejs-templates/webpack v1.2.6 \nI couldn't find ./build/dev-client.js\nmy webpack.dev.conf.js\n```\n'use strict'\nconst utils = require('./utils')\nconst webpack = require('webpack')\nconst config = require('../config')\nconst merge = require('webpack-merge')\nconst baseWebpackConfig = require('./webpack.base.conf')\nconst CopyWebpackPlugin = require('copy-webpack-plugin')\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\nconst FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin')\nconst portfinder = require('portfinder')\nconst devWebpackConfig = merge(baseWebpackConfig, {\n  module: {\n    rules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap, usePostCSS: true })\n  },\n  // cheap-module-eval-source-map is faster for development\n  devtool: config.dev.devtool,\n// these devServer options should be customized in /config/index.js\n  devServer: {\n    clientLogLevel: 'warning',\n    historyApiFallback: true,\n    hot: true,\n    host: process.env.HOST ||\u00a0config.dev.host,\n    port: process.env.PORT ||\u00a0config.dev.port,\n    open: config.dev.autoOpenBrowser,\n    overlay: config.dev.errorOverlay ? {\n      warnings: false,\n      errors: true,\n    } : false,\n    publicPath: config.dev.assetsPublicPath,\n    proxy: config.dev.proxyTable,\n    quiet: true, // necessary for FriendlyErrorsPlugin\n    watchOptions: {\n      poll: config.dev.poll,\n    }\n  },\n  plugins: [\n    new webpack.DefinePlugin({\n      'process.env': require('../config/dev.env')\n    }),\n    new webpack.ProvidePlugin({\n      tins: 'tns'\n    }),\n    new webpack.HotModuleReplacementPlugin(),\n    new webpack.NamedModulesPlugin(), // HMR shows correct file names in console on update.\n    new webpack.NoEmitOnErrorsPlugin(),\n    // new CopyWebpackPlugin([\n    //   { from: 'node_modules/vue-material/dist/vue-material.min.css', to: 'static'},\n    //   { from: 'node_modules/tiny-slider/dist/tiny-slider.css', to: 'static'}\n    // ]),\n    // https://github.com/ampedandwired/html-webpack-plugin\n    new HtmlWebpackPlugin({\n      filename: 'index.html',\n      template: 'index.html',\n      inject: true\n    })\n    // new HtmlWebpackIncludeAssetsPlugin({\n    //   assets: [\n    //     'static/vue-material.min.css',\n    //     'static/tiny-slider.css',\n    //     { path: 'https://fonts.googleapis.com/css?family=Material+Icons', type: 'css' }\n    //   ],\n    //   cssExtensions: [],\n    //   jsExtensions: [],\n    //   append: true,\n    //   hash: true\n    // })\n  ]\n})\nmodule.exports = new Promise((resolve, reject) => {\n  portfinder.basePort = process.env.PORT || config.dev.port\n  portfinder.getPort((err, port) => {\n    if (err) {\n      reject(err)\n    } else {\n      // publish the new Port, necessary for e2e tests\n      process.env.PORT = port\n      // add port to devServer config\n      devWebpackConfig.devServer.port = port\n  // Add FriendlyErrorsPlugin\n  devWebpackConfig.plugins.push(new FriendlyErrorsPlugin({\n    compilationSuccessInfo: {\n      messages: [`Your application is running here: http://${config.dev.host}:${port}`],\n    },\n    onErrors: config.dev.notifyOnErrors\n    ? utils.createNotifierCallback()\n    : undefined\n  }))\n\n  resolve(devWebpackConfig)\n}\n\n})\n})\n```\nAlternatively, if you're in chrome, you can unselect \"Info\" in the filter levels\nI used this whenever i can but if have to inspect i have to switch back and forth info in filters [I totally disabled eslint using .eslintignore file, next time i may not install when vue init prompts eslint ]\n\nI think the best you can do is edit line 3 of ./build/dev-client.js to add the quiet param to the require statement\n\nAre you using latest version (beta) of this webpack template\n. That's works great! now the warnings and info is not logged in the console.\nThanks !!!. Compelling reason for upgrading\n\nBetter Defaults\u200a\u2014\u200a#0CJS (Zero configuration - no need for a webpack config file)\nwebpack takes care of dead code elimination (previously done by uglifyjs)\nhuge performance/bundle size improvement over webpack 3.\n\nThings to consider\n\nwebpack-cli is separated\nwebpack 4 has newer plugin system (current webpack 3 plugin system deprecated)\nchanges in common js importing \n\n\nSyntax\n\nimport() always returns a namespace object. CommonJS modules are wrapped into the default export\n    This probably breaks your code, if you used to import CommonJs with import()\n\n\nchanges in module type support (auto, esm, json, webassembly)\n\n\nDefaults\n\nwebpack now looks for the .wasm, .mjs, .js and .json extensions in this order\n\nnodejs 4 support is dropped (expected)\na fork of vuejs-templates/webpack for webpack 4 (until everyone realizes webpack 4 has huge benefits over webpack 3)\n. As I mentioned, webpack 4 has new plugin system\nThe extract-text-plugin is currently in alpha version (there's no stable release for webpack 4 yet)\nplugins are required to rewriiten with webpack 4 compatible API \nplugin users have to keep an eye on releases and issues for smooth update (wait for the right time)\n. ",
    "jakub300": "Hey @LinusBorg, I looked into it and I disagree that you can't solve problem with dependencies order.\nYou could do it either by creating more conditions in right places, for example lint condition is twice in dependencies so at least at some point somebody intended to keep right order.\nYou could also provide complete function that would ordered it properly, probably simpler solution considering number of conditions.. Thanks for quick reaction to issues. By \"duplicated\" I meant that you can see it twice in the js file (for example in the screenshot) not that it's included in both js and css file. Sorry for not being clear enough.. ",
    "mfs780": "Just wondering if this issue is still present when setting allChunks to false.. ",
    "kuil09": "hello, I have a situation like yours. Could you show me how to solve it?. ",
    "wangrongkang": "yahhhh,\nbackground: url(../assets/attribute.png) no-repeat;\nexactitly, it should be this:\nbackground: url(../../assets/attribute.png) no-repeat;\nthe file catalog is wrong!\nnot the module lost;. ",
    "Igorbrands": "Oh Thnks man! I used this.$set(this.products, 'products', dummy) and worked!\nBut only for one product, do you know how the v-for loop can works @LinusBorg ???. ",
    "Fl0pZz": "Or https://github.com/typicode/husky. And https://github.com/okonet/lint-staged\n@LinusBorg  for both of them (linting and tests). ",
    "PowerfulPony": "If you do not use e2e, the unused dependency will not be loaded. When studying the project, there is no question of why this dependence is necessary.. ",
    "lxk1080": "\u540c\u6c42\u65b9\u6cd5. safari version 10.2, there is no console error, I guess the ios version may be too low ..... Alright, thanks for your reply. ",
    "ahulab": "This is something that's handled by the webpack-hot-middleware plugin. \nI think the best you can do is edit line 3 of ./build/dev-client.js to add the quiet param to the require statement\nvar hotClient = require('webpack-hot-middleware/client?noInfo=true&reload=true&quiet=true')\nAs per the plugin documentation\nquiet - Set to true to disable all console logging.\nHowever it will still display errors in the overlay, which is maybe good enough. \n\nAlternatively, if you're in chrome, you can unselect \"Info\" in the filter levels. oh sorry about that, didn't realize how out of date my project was :)\nchange clientLogLevel from warning to error in webpack.dev.conf.js. That should work. \nclientLogLevel: 'error'. alright thanks, I'm interested to see what changes vue-cli 3 will make. I ended up just going thru the main build files in each project and resolving differences. However it's rather tricky to manually remove the unneeded package.json devDeps. ",
    "cshjarry": "thank you very much\ud83d\ude01\ud83d\ude01\ud83d\ude01\ud83d\ude01. ",
    "linjiajian999": "@chrisvfritz get! I think you are right! Thanks for your check out this pr.. ",
    "chris-schmitz": "Gotcha. No problem. I figured it may be too specialzed for my specific use case, just thought I'd offer it just in case. Thanks for considering it.. ",
    "teazean": "Not exactly as you said.\nFirstly in https://github.com/vuejs-templates/webpack/blob/develop/template/build/vue-loader.conf.js#L10\nloaders: utils.cssLoaders({\n    sourceMap: sourceMapEnabled,\n    extract: isProduction\n  }),\nThere's no usePostcss option.\nAnd in https://github.com/vuejs-templates/webpack/blob/develop/template/build/utils.js#L34\n```\nfunction generateLoaders (loader, loaderOptions) {\n  const loaders = options.usePostCSS ? [cssLoader, postcssLoader] : [cssLoader]\n// others\n  // https://vue-loader.vuejs.org/en/configurations/extract-css.html\n  return {\n    css: generateLoaders(),\n    postcss: generateLoaders(),\n    less: generateLoaders('less'),\n    sass: generateLoaders('sass', { indentedSyntax: true }),\n    scss: generateLoaders('sass'),\n    stylus: generateLoaders('stylus'),\n    styl: generateLoaders('stylus')\n  }\n}\n```\nThe default config does not includes postcss-loader.. Yep, thank you for answering.\nhttps://vue-loader.vuejs.org/en/features/postcss.html\nAny CSS output processed by vue-loader is piped through PostCSS for scoped CSS rewriting. \n. ",
    "fokosun": "@LinusBorg \nWhen you deploy to heroku, first the dependencies are installed then start and postinstall commands. My start script runs my server.js which runs express server and the postinstall script run the build command. Problem was the build only created dist/static and didn't create dist/index.html. The error was because dist/index.html was not found. \nFixed it. Thanks. ",
    "bum": "I get over this problem today as follow the \"npm run dev\" command. They use \"process.env.NODE_ENV === 'production'\" to detect running mode, but as I checked npm config get production (get false), but when I check the windows enviroment variables NODE_ENV=development, but it still failed.\nThe problem is that there's another variable named BABEL_ENV=production. I changed it to BABEL_ENV=development and restart windows (to make sure it updated), then everything runs as design.\n. ",
    "Hillkinsh": "OK, my OS is ubuntu 12.04.  node v8.8.0 npm 5.4.2, vue 2.9.2.\nNo one had such a problem before. So confused!!!!!. Well, I use command \"vue init browserify my-bro\", and everything's ok.\nI'll show you everything  that happend on me.\nOps, why can't I paste any picture here?\nI show it in words.\n1,vue init webpack my-pro2 \n   cd my-pro2\n   npm install\n   npm run dev\nand in command line it shows:\n    DONE  Compiled successfully in 15155ms                                 09:50:43\n\n     I  Your application is running here: http://localhost:8080\n\n2,my chrome address in http://localhost:8080/  and show nothing.\n3, F12, and in console :\n     Uncaught SyntaxError: Use of const in strict mode. localhost/:6\n\nThere are all the things I know.. I update my OS to Ubuntu 14.04. (before is 12.04.) and then everything is OK.. ",
    "simll": "I think I got the same error, there are something helpful for me:\nhttps://github.com/webpack/webpack-dev-server/issues/1105\nhttps://github.com/mrdulin/blog/issues/35\nthere are two way to resolved it:\n1. use webpack-dev-server version 2.7.1;\n2. set babel-loader include webpack-dev-server/client/index.js;\nI resolve it like that:\nset ./build/webpack.base.config.js\njs\n{\n  test: /\\.js$/,\n  loader: 'babel-loader',\n  include: [resolve('src'), resolve('test'), resolve('node_modules/webpack-dev-server/client')]\n},. ",
    "XavierShi": "Thank you very much!. ",
    "Olivia2008": "I met the same problem\nand i did it like that\n1\u3001use webpack-dev-server version 2.7.1;\n2\u3001set babel-loader include webpack-dev-server/client/index.js;\nbut it did not work, i dont know how to resolve it\nwho could do me a favor?. ",
    "goowikns": "That works cause the logo (in a new vue projects) resides in the /src/assets folder and not in the /static folder (where I put my javascript files). I don't understand why it doesn't seem to work.\nAs I said, I have 2 js files in my projects-root-static-folder.\nI simply included them in my index.html using: <script src=\"/static/scriptname.js\"></script>\nNow when I run dev mode, the files don't seem to be 'virtually' copied to the static folder. All the rest from the src/assets folder is! Just not the static folder.\nOn building the project, it does work. Can it be there is a bug or something missing from the dev config?. I created a fresh vue project and started testing.\nIt seems scripts and sounds aren't copied at all in dev mode. Pictures like the logo in your example are copied correctly. . I checked their documentation at https://webpack.js.org/configuration/dev-server/#devserver-publicpath-\nIt says \n\nMake sure publicPath always starts and ends with a forward slash.\n\nBut even using the forward slashes doesn't seem to work.. Any update on this issue? Thank you \ud83d\udc4d . ",
    "juicechu": "@nkovacs it works. ",
    "jaisrid81": "sample.txt\n. Thanks @LinusBorg  : I have opened a thread in the forum \"Code Working in Chrome but not in IE, gives vue.js as undefined\". Please see the attached code there and help. ",
    "maxpou": "Thanks guys. Then, I will keep an eye on vue-jest issue.\nClosing, see eddyerburgh/vue-jest#32. ",
    "richardkmichael": "@LinusBorg Thank you, sorry about the dupe.  (I only searched for index.html in the issue tracker.). ",
    "PengLL": "I  also met this problem on win7\uff0cand I guess the reason is that some kind of Application  forbids our program to stop the progress. ",
    "solidevolution": "What we forgot: Separating config from code (build) would be a dream.. @LinusBorg Thanks for fast answers.\nWould be nice if v3 includes this factor: https://12factor.net/config. I followed the development #1178 and it solves multiple builds.\nIn this first step, it doesn't improve the complete idea of an atomic build (no differences between the bundle on all stages, remove config from code)\nFor me an atomic SPA build has minimum the following files:\nindex.html\nfiles/app.css\nfiles/app.js\nstatic/*\nplus some environment dependent files like:\nrobots.txt\nconfig.js\nBut yes, it differs from the idea of multiple builds. The title should be \"Ship builds to multiple stages\". ",
    "alxppp": "@LinusBorg Do you have a test version we could try out?. Thanks @LinusBorg! That has been bugging me for a while now. The latest development branch is working fine for me!\nTwo small hints for others updating from the old dev server:\n Instead of assetsPublicPath: '/abc/' it now has to be assetsPublicPath: '/abc'\n To get browser reloads working again, I had to change history api fallback to:\nhistoryApiFallback: {\n  rewrites: [\n    { from: /.*/, to: `${config.dev.assetsPublicPath}/index.html` },\n  ],\n},. ",
    "BoyardIsBack": "@solidevolution I think @LinusBorg meant #1178 . Typo : \"when running in production mode\". Typo : \"when running in test mode\". ",
    "alessandrotesoro": "Sweet thanks, I'll give it a try later. I need the css to be extracted too just because the app I'm building is being tested in a different environment so I need to reference the js and css files into the files of the app in the other env because js and css injection isn't working for some reason. . ",
    "lambdakris": "@LinusBorg fix works for me, thanks!\n\n. ",
    "songhongjiang": "@LinusBorg Solved the problem by using cmd \"vue init webpack#develop\",  Thank you!. ",
    "xiejiamiao": "\nit work fine on windows 10 by using \nvue init webpack\nTHX. ",
    "jbayona89": "Thank you, I will try to use assets whenever it's possible and Will use this for the rest of my urls. ",
    "matyapiro31": "@LinusBorg There are warning when vue refers files in /static/.\nAlso in my project, some files that is output to /static when building.. ",
    "gengjiawen": "I first run into this problem with https://github.com/gengjiawen/ts-scaffold (use vue-cli as template engine ). It use the same config as this project. I think the main problem is not lies in memory, but with this in test.sh\nbash\nyes \"\" | ./node_modules/.bin/vue init . test\nI ssh into the circle ci machine (ubuntu 14.04), execute the command will stuck.\nIf you execute ./node_modules/.bin/vue init . test in bash, and press enter manually, everything works fine. \nI do some search (https://stackoverflow.com/a/6264618/1713757),  change to \nbash\necho -ne '\\n' | ./node_modules/.bin/vue init . test\nBut it won't generate the test folder. Wonder there is a better way to input enter automatically.\n. ",
    "nicooprat": "Gave it a few try but could get it working... I would have to loop for each generated file and upload it along with its sourcemap, but I'm not webpack-expert enough.\nThen I found this: https://github.com/jmshal/webpack-bugsnag-plugin\nJust works \ud83d\udc4d . ",
    "shanegibney": "In config/index.js\nnotifyOnErrors: false,.\n",
    "66beta": "build/utils.js\njs\nnotifier.notify({\n      title: packageConfig.name,\n      message: severity + ': ' + error.name,\n      subtitle: filename || '',\n      icon: path.join(__dirname, 'logo.png')\n    })\nassets is for your project. ",
    "dlintw": "Does this will pack into final production package? If I don't want it, could I remove this icon line safely?. ",
    "flip111": "This comment solved it for me https://github.com/vuejs-templates/webpack/issues/432#issuecomment-346954884. ",
    "lyh3173": "it's ok when i reinstall the packages, but after a while the warning message above appeared again.\nAnd the Chrome's console window show a error message as below:\nUncaught (in promise) TypeError: Cannot read property 'hot' of undefined\n    at Object.hotApply [as apply] (index.js:582)\n    at cb (process-update.js?2de0:66)\n    at eval (process-update.js?2de0:82)\n    at \nNo one has seen this before\uff1f. ",
    "juniorCitizen": "const dotenv = require('dotenv')\ndotenv.config() // before process.env.FIREBASE_KEY is accessed. ",
    "SSmale": "Awesome thanks. Yes that last part is the bit I was missing to pass the param through. \nKind regards,\nSimon Smale \n\nOn 27 Dec 2017, at 09:56, Thorsten L\u00fcnborg notifications@github.com wrote:\nI'm actually working on a bigger PR to support this properly across all features / modes of this template in #1178\nhiayutsaipersonal has already gotten th important part - using dotenv, I just want to make clear that this only gets you the API key into the node process that's running (ie.e webpack), not into your app.\nSo to get it into your app, you would have to add it to /config/dev,ev.js:\nrequire('dotenv').config()\nmodule.exports = {\n  NODE_ENV: '\"development\"',\n  FIREBASE_KEY: JSON.stringify(process.env.FIRBASE_KEY)\n}\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. \n",
    "karimsqualli": "@LinusBorg worked. thx ;). ",
    "jingle2008": "I googled first and didn't find that one, thanks. ",
    "thinhbuzz": "why do you want to ignore offcial note of plugin?. ",
    "VictorioBerra": "Trying to use ngrok right now, this is really frustrating me. What is the workaround? I have tried to modify scripts -> serve and add vue-cli-service serve --host 0.0.0.0 --public but this does not have any effect, I still get the same error as @italomaia I do not have a way to edit the internal webpack that I can see.. This doesn't really help me as a user. I generated my app with the vue cli. After my app is already scaffolded how do I manipulate the dev server?. I used the new vue-cli 3. I will go read about the vue.config.js. @theckman I gave up and ended up just using my phone over WiFi I believe.. ",
    "theckman": "@VictorioBerra any luck? It doesn't seem to be respecting the devServer settings I'm adding.. @VictorioBerra I figured it out. I had the configuration at the wrong level. I had been putting it under configureWebpack config which was wrong. It needs to be a top-level key:\nJavaScript\nmodule.exports = {\n    lintOnSave: true,\n    configureWebpack: {\n        output: {\n            path: __dirname + \"/cool-build\"\n        }\n    },\n    devServer: {\n        disableHostCheck: true\n    }\n};. ",
    "ploissken": "The disableHostCheck:true fixes the problem when using Traefik too, just in case anyone searched for it (:. ",
    "DespertaWeb": "I've solved this by using serving a https with serveo:\n1 - Go to projects folder and : ssh -R 80:localhost:8081 serveo.net\n2 - Package.json --> Scripts --> dev : \nAdd webpack-dev-server --inline --hot --host 0.0.0.0 --public customname.serveo.net\nSource: https://support.glitch.com/t/invalid-host-header-webpack-compiled-successfully/3639/2. ",
    "vaibhav-kaushal": "@theckman Your comment saved me a hell lot of time (I'm not a NodeJS geek, trying to build something atop VueJS). I had tried so many things and nothing worked. Thanks so much!. ",
    "n3ps": "Using webpack-dev-server v3.1.5 and the error is still there. ",
    "macmonkey": "Same for me with v3.1.10. . ",
    "Herover": "Thank you, I got it working by installing html-loader and adding \n{\n        test: /\\.ejs$/,\n        use: [{\n          loader: 'html-loader'\n        }]\n      }\nto module.rules in the webpackConfig.. ",
    "miladmeidanshahi": "@LinusBorg Thanks\nby changing poll option in config/index.js to true it works.\nIs this the right way?. ",
    "jpikora": "You can also \"re-init\" the template directly in existing project and then resolve the changes. I've done it multiple times, it's not that bad :).. ",
    "bird-cage": "PPS, I've never done it before on an open-source repo, but I will do a pull-request to fix this as suggested above within the next couple of days. ",
    "hanxue": "I don't see any errors, but the CSS is not being applied. @LinusBorg Thanks for your prompt reply. I did share the code and the background of the error. I am asking here because it is not a Vue-specific error. I am using the webpack Vue template, and it is not working as expected. \nHow can I tell from the output or browser, that the CSS file is loaded correctly?\n. ",
    "Anuga": "I've had this problem as well, and it was webpack that was missing style-loader.\nhttps://github.com/webpack-contrib/style-loader\n[Edit] Which is not included in the template. [/Edit]\n[Edit] Oh yea, and the documentation is crap, style-loader says one way of configuring it, and css-loader says another way, but the one that worked for me, was just to load style-loader in the webpack.base.conf.js like this:\nmodule: {\n    rules: [\n      {\n        test: /\\.css$/,\n        loader: 'style-loader',\n      },\n      .... ",
    "soanvig": "@heinzdmx , theoretically, yes, but the webpack template isn't up-to-date with official webpack releases. AFAIK it is always few patches behind official release. By this time hard-source developers should make their release.\nBut You made your point, I'm almost conviced, that there should be note in README. Webpack compilation is really slow at that moment. Some solution is required.. ",
    "sergiocastrovale": "@LinusBorg what kind of optimizations would you suggest? I have a fairly large project that takes 8-10s to rebuild on dev whenever I save anything.. ",
    "311289189": "@LinusBorg Sorry, what is a deception emu experience?. ahh thanks @LinusBorg!. ",
    "AlexSHoffman": "@LinusBorg Yes, I'm on windows, thank you for fixing it. \nJust to make sure, is the vue init webpack projectName command going to get the fixed version of the template as soon as you push it into the master, right? \nDo you think it will take approximately in a few days? Or more like a week?. @LinusBorg yes it does. Thank you for such a quick fix! I think the issue can be closed now (if you think so). I've just created a new project the same way as described above, and changed \nThis default code:\n<img src=\"./assets/logo.png\">\nTo this: \n```\n\n[...]\nexport default {\n  name: 'app',\n  data () {\n    return {\n      image: '../src/assets/logo.png'\n    }\n  }\n}\n```\nWhich gives me this console error:\nGET http://localhost:8080/src/assets/logo.png 404 (Not Found)\nNow if I copy the logo into static folder and change the path it will work:\nexport default {\n  name: 'app',\n  data () {\n    return {\n      image: '../static/logo.png'\n    }\n  }\n}\n  . @LinusBorg sorry, I'm a newbie, but It did work before the template update. I've just copied pasted everything in the new project that I created after the template update. \nI don't understand why did all my images worked without this require('. /....') before? What kind of black magic is this?\n  . ",
    "wowlin": "$ vue init webpack vue-project\nUnknown command init.\nvue-cli \u00b7 Failed to download repo vuejs-templates/[object Object]: Response code 404 (Not Found). ",
    "NigelEarle": "@tianhuil https://status.npmjs.org/incidents/41zfb8qpvrdj\n  . Thanks @ZeroX-DG just downgraded webpack-dev-server to v2.9.7. Works great now!. ",
    "ZeroX-DG": "I'm having the same problem too ! . Look like the problem is in the newest version of webpack dev server\nhttps://github.com/webpack/webpack-dev-server/issues/1259. The problem is in the newest version of webpack dev server (2.10.0) \nSee: https://github.com/webpack/webpack-dev-server/issues/1259\nRight now a simple work around solution is to downgrade to an older version of webpack dev server using the command\nnpm install webpack-dev-server@2.9.7 --save-dev\nOr if you're using yarn\nyarn add -D webpack-dev-server@2.9.7\n  . The problem have been resolved, you can now upgrade to the newest version of webpack (2.10.1).\nSee: https://github.com/webpack/webpack-dev-server/issues/1259\n  . ",
    "lsbyerley": "I too am getting this same error. Was working fine a few days ago. ",
    "justleolee": "I'm having the same problem too ! !!!!!!!!!!!!!!! . ",
    "CocoChen917": "@NigelEarle @ZeroX-DG run this command in my project works great too,Thanks!!!\nnpm install webpack-dev-server@2.9.7 --save-dev\nand change webpack.dev.conf.js  devServer options \ndevServer:{\n  inline:false,\n...\n}\n. ",
    "NovoManu": "@CocoChen917 Thanks!\n. ",
    "chabanov": "Someone found a solution to the problem?. ",
    "srihari-sridharan": "I am facing the same issue. Please post a solution once it is available. Thanks.. ",
    "loicsalzmann": "For those who still stuck on this issue even after changing their version of node and npm, adding this line in my hosts file has solved the problem:\n127.0.0.1 localhost. ",
    "khalilst": "sudo npm run serve worked for me in vue-cli 3.0.5. ",
    "takaroo": "thank you, this helped. ",
    "JoeFu": "Problem solved with npm install webpack-dev-server@2.9.7 --save-dev. ",
    "gspiller67": "This worked like a charm! Thank you!. ",
    "Shiyinq": "This is i use..\nnode -v = v8.9.1\nnpm -v = 4.6.1\nvue -V = 2.9.2\n. I do not know .. I have not found the solution yet, and I still get the same error.\nis this a bug webpack or vue-cli  ? or is there something i missed by me ? Please let me know.. hahha thankyou bro@IlhamWahabiGX this problem solved..  :D . just update npm to version 5.6.0 and then uninstall vue-cli and then install again vue-cli, the last.. vue init webpack my-project and SOLVED.\n.\nthank you verry much  @IlhamWahabiGX\n.\ni can close issue now..\n. ",
    "iwgx": "try to update your npm. ",
    "stephanedemotte": "+1 for #. Same here, need relative path for electron.js, some news about that ?. ",
    "ruanjf": "@LinusBorg Yes\nUse npm run unit --silent -- --coverage=false to ignore error?. @therightstuff thanks. ",
    "therightstuff": "@ruanjf npm run unit --silent works just as well, any reason for specifying the coverage?\nfound the following neat trick for test scripts here:\n{\n  \"scripts\": {\n    \"test\": \"jest || exit 0\",\n   }\n}. ",
    "unclemeric": "yes,i know that Vue supports >= IE9.\ni had install babel-polufill\uff0c\nentry: {\n    app: ['babel-polyfill','./src/main.js']\n  },\nbut it's no use.\nbefore version 2.9.2(the version of use express to run start) can run successful.\nerror message:\n\n. @LinusBorg @Hornet-Wing thank you very much!. ",
    "Hornet-Wing": "I had a similar issue running a clean install of this template in IE11. The source of the bug is webpack-dev-server 2.10.x.\nDowngrading to 2.9.6 fixed the issue for now:\nnpm i webpack-dev-server@2.9.6 -D\nIt looks like its being looked at and fixed here:\nhttps://github.com/webpack/webpack-dev-server/issues/1268. ",
    "bangStweart": "\nBtw, I have got this error on ie11.\n\n. ",
    "TheSirC": "You're welcome! \nYou're doing a wonderful job! Thank you! . ",
    "teevil": "update. ",
    "happy760690": "Thank you. I found a file that was not compiled. The problem has been solved. ",
    "RicoLiu": "@happy760690 I faced the same issue and solved it.. ",
    "Patsky": "Additional note: this issue does not exist when I get CSS directly in index.html ie: \nhtml\n<link href=\"https://unpkg.com/vuetify/dist/vuetify.min.css\" rel=\"stylesheet\"> \nobviously vuetify.min.css is loaded before app.js and all is working fine. \nHowever if I import it in index.js or main.js like\njs\nimport Vuetify from 'vuetify' like this\nimport('../node_modules/vuetify/dist/vuetify.min.css') \nVue.use(Vuetify)\nthen 0.js or 1.js files are created that are loaded after app.js\nI would like to know why #import CSS in webpack results in my initial issue. And whether there is any solution to it?. Ok - now I get this. Thank you @LinusBorg\ud83d\udc4d it works. Really appreciate your help!\nI was following Vuetify current documentation for 0.17 which cleary says:\njs\n// index.js or main.js\nimport('path/to/node_modules/vuetify/dist/vuetify.min.css') // Ensure you are using css-loader\nThey are apparently changing this to \njs\n// index.js or main.js\nimport 'vuetify/dist/vuetify.min.css' // Ensure you are using css-loader\nin their new documentation\nThanks again. \ud83d\udc4d. ",
    "bt404": "use eval-source-map instead of cheap-module-eval-source-map when setting devtool. ",
    "jlucrob": "Adding !important works of course. But having to do that for every style is somewhat annoying.... > I would guess you are importing bootstrap too late in your main.js or something\nThat was it ahah! Easy fix. I'm new to VueJS. That didn't come to mind when I was trying to find the issue. It's weird that it was working while running in dev though...\nThanks for your help!\nI was doing:\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nlet Bootstrap = require('bootstrap')\nimport 'bootstrap/dist/css/bootstrap.css'\nDoing it this way fixed it:\nlet Bootstrap = require('bootstrap')\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'. ",
    "ccamarat": "Yea, I'm sure it is now. I was excited to start using Jest; it is much easier to setup than Jasmine or Mocha, so I was disappointed when it just stopped working. \nDoes this look like a Windows-only thing to you, or is it happening on other platforms?. I was able to throw a couple hours at this one today. I've got a successful (if limited) workaround and was able to determine that the issue was introduced with Jest v22.0.0. I also have some info that may help someone track this down or resolve; I posted them over at the Vue-Jest repo since I'm thinking that's where the fix will be.\nWork Around\nPlace the Jest configuration directly inside package.json following the vue test utils jest-example. If you need any type of dynamic config obviously this won't be very helpful, but maybe it'll help someone.\n. ",
    "mrewers": "Understood. I reverted the changes locally and set my environment variables to development. It took a little trial and error to get the right command (I'm on a Windows machine) but eventually $env:NODE_ENV=\"development\" worked. Thank you for your help.. Okay, makes sense. I will remove the global env variable and figure out how to set the process env variable instead. Essentially, my problem is described in issue #535 but in reverse. When I have some time I'll see if I can find some answers in that thread. Or maybe I need to add something like cross-env. If I can't figure it out I'll open a new issue describing my problem more fully. Thanks again and sorry for the misguided pull request.. ",
    "jagadeshanh": "vue init works fine...\n```\nUsage: vue-init  [project-name]\nOptions:\n-c, --clone  use git clone\n--offline    use cached template\n-h, --help   output usage information\n\nExamples:\n# create a new project with an official template\n$ vue init webpack my-project\n\n# create a new project straight from a github template\n$ vue init username/repo my-project\n\n```\n. ",
    "adimit": "Thanks for your answer, @LinusBorg \nI do have the feeling something is rather wrong in the way I'm trying to set up the template.\nSo I've tried it with vue-cli being installed globally (with npm install -g vue-cli) and it worked as expected. I can reproduce the above behaviour only with a package-local install of vue-cli to node_modules/.bin/vue.\nAs such, the problem is probably not, after all, related to this template in particular, but to vue-cli. I don't know enough about vue to decide that \u2014 but feel free to close this issue if you think it sin't relevant to the template.\nI called the above y/N questions \"flags\" in my report.. Interesting. Maybe I can try to find a way to replicate the problem with your setup. Though for me the problem occurred with a local installation both on my Fedora 27 host machine, and on the official docker node:8 image, so I didn't really have that esoteric a setup.. ",
    "MarkProffitt": "I have the same problem on:\nUbuntu 16.04 \nvue-cli@2.9.2 \nnode v8.9.4\nnpm 5.6.0. vue init webpack wptut\nA newer version of vue-cli is available.\nlatest:    2.9.2\n  installed: 2.0.2\n[ { name: '1.0',\n    commit: \n     { sha: '49b3ac5de552ab82ac6b44f3bb197bfc54063688',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/49b3ac5de552ab82ac6b44f3bb197bfc54063688' } },\n  { name: 'develop',\n    commit: \n     { sha: 'd8fb86400e67be892208cb1d606a9681de949648',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/d8fb86400e67be892208cb1d606a9681de949648' } },\n  { name: 'fix_installerror_1168',\n    commit: \n     { sha: 'a5a47eda8566e900ea24e4b9216216f45c16e133',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/a5a47eda8566e900ea24e4b9216216f45c16e133' } },\n  { name: 'gh-pages',\n    commit: \n     { sha: '73e8b76a64193f291c99dd46daf6fbec46030b7f',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/73e8b76a64193f291c99dd46daf6fbec46030b7f' } },\n  { name: 'improve_env_var_usage',\n    commit: \n     { sha: '4f0f8eb160090879d206a61f023d26b5b52f728f',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/4f0f8eb160090879d206a61f023d26b5b52f728f' } },\n  { name: 'improve_template_tests',\n    commit: \n     { sha: '730f331630051b6fc1ca4913aec4d29cd5a33be6',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/730f331630051b6fc1ca4913aec4d29cd5a33be6' } },\n  { name: 'master',\n    commit: \n     { sha: 'c29ab6a4679f74d970e025bb60c4602542eaff08',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/c29ab6a4679f74d970e025bb60c4602542eaff08' } },\n  { name: 'optimize_CI_recognition',\n    commit: \n     { sha: '1fdcdd976394c671fd98d45e34b29c176203e4fd',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/1fdcdd976394c671fd98d45e34b29c176203e4fd' } } ]\n? name wptut\n? author me\n   vue-cli \u00b7 Missing helper: \"if_or\"\nI've tried uninstalling, installing local and global. I don't know why it's getting that message about the latest version. It randomly comes & goes.  It doesn't matter what version is shows it always get the error \nvue-cli \u00b7 Missing helper: \"if_or\"\nwebpack-simple: works\npwa: fails \nwebpack: fails\n. I get the same error with both versions\nvue init webpack wptut\n[ { name: '1.0',\n    commit: \n     { sha: '49b3ac5de552ab82ac6b44f3bb197bfc54063688',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/49b3ac5de552ab82ac6b44f3bb197bfc54063688' } },\n  { name: 'develop',\n    commit: \n     { sha: 'd8fb86400e67be892208cb1d606a9681de949648',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/d8fb86400e67be892208cb1d606a9681de949648' } },\n  { name: 'fix_installerror_1168',\n    commit: \n     { sha: 'a5a47eda8566e900ea24e4b9216216f45c16e133',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/a5a47eda8566e900ea24e4b9216216f45c16e133' } },\n  { name: 'gh-pages',\n    commit: \n     { sha: '73e8b76a64193f291c99dd46daf6fbec46030b7f',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/73e8b76a64193f291c99dd46daf6fbec46030b7f' } },\n  { name: 'improve_env_var_usage',\n    commit: \n     { sha: '4f0f8eb160090879d206a61f023d26b5b52f728f',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/4f0f8eb160090879d206a61f023d26b5b52f728f' } },\n  { name: 'improve_template_tests',\n    commit: \n     { sha: '730f331630051b6fc1ca4913aec4d29cd5a33be6',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/730f331630051b6fc1ca4913aec4d29cd5a33be6' } },\n  { name: 'master',\n    commit: \n     { sha: 'c29ab6a4679f74d970e025bb60c4602542eaff08',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/c29ab6a4679f74d970e025bb60c4602542eaff08' } },\n  { name: 'optimize_CI_recognition',\n    commit: \n     { sha: '1fdcdd976394c671fd98d45e34b29c176203e4fd',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/1fdcdd976394c671fd98d45e34b29c176203e4fd' } } ]\n? name wptut\n? author me\n   vue-cli \u00b7 Missing helper: \"if_or\"\n. OK, how do I get it I?  I've uninstalled. Installed locally, Installed globally. I've tried sudo. Nothing solves this problem. I just tried installing it again but as I've said it doesn't matter if the version warning happens or not, the vue-cli \u00b7 Missing helper: \"if_or\"  always happens with webpack\nmark@Sputnik:/var/www/html$ npm i -g vue-cli\nnpm WARN deprecated coffee-script@1.12.7: CoffeeScript on NPM has moved to \"coffeescript\" (no hyphen)\n/home/mark/.npm-global/bin/vue-init -> /home/mark/.npm-global/lib/node_modules/vue-cli/bin/vue-init\n/home/mark/.npm-global/bin/vue -> /home/mark/.npm-global/lib/node_modules/vue-cli/bin/vue\n/home/mark/.npm-global/bin/vue-list -> /home/mark/.npm-global/lib/node_modules/vue-cli/bin/vue-list\n+ vue-cli@2.9.2\nupdated 1 package in 17.214s\nmark@Sputnik:/var/www/html$ vue init webpack wptut\nA newer version of vue-cli is available.\nlatest:    2.9.2\n  installed: 2.0.2\n[ { name: '1.0',\n    commit: \n     { sha: '49b3ac5de552ab82ac6b44f3bb197bfc54063688',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/49b3ac5de552ab82ac6b44f3bb197bfc54063688' } },\n  { name: 'develop',\n    commit: \n     { sha: 'd8fb86400e67be892208cb1d606a9681de949648',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/d8fb86400e67be892208cb1d606a9681de949648' } },\n  { name: 'fix_installerror_1168',\n    commit: \n     { sha: 'a5a47eda8566e900ea24e4b9216216f45c16e133',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/a5a47eda8566e900ea24e4b9216216f45c16e133' } },\n  { name: 'gh-pages',\n    commit: \n     { sha: '73e8b76a64193f291c99dd46daf6fbec46030b7f',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/73e8b76a64193f291c99dd46daf6fbec46030b7f' } },\n  { name: 'improve_env_var_usage',\n    commit: \n     { sha: '4f0f8eb160090879d206a61f023d26b5b52f728f',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/4f0f8eb160090879d206a61f023d26b5b52f728f' } },\n  { name: 'improve_template_tests',\n    commit: \n     { sha: '730f331630051b6fc1ca4913aec4d29cd5a33be6',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/730f331630051b6fc1ca4913aec4d29cd5a33be6' } },\n  { name: 'master',\n    commit: \n     { sha: 'c29ab6a4679f74d970e025bb60c4602542eaff08',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/c29ab6a4679f74d970e025bb60c4602542eaff08' } },\n  { name: 'optimize_CI_recognition',\n    commit: \n     { sha: '1fdcdd976394c671fd98d45e34b29c176203e4fd',\n       url: 'https://api.github.com/repos/vuejs-templates/webpack/commits/1fdcdd976394c671fd98d45e34b29c176203e4fd' } } ]\n? name wptut\n? author me\n   vue-cli \u00b7 Missing helper: \"if_or\"\nmark@Sputnik:/var/www/html$ \n. ",
    "johnellinwood": "See workaround for issue 1284. I had the exact same issue using the material-design-icons in this template.  My dev configuration worked, but I had set prod to use relative paths.  A valid workaround is described in issue 200 which has been open since July, 2016. The code for your webpack base font rule should be:\n{\n  test: /\\.(woff2?|eot|ttf|otf)(\\?.*)?$/,\n  loader: 'url-loader',\n  options: {\n    limit: 10000,\n    name: utils.assetsPath('fonts/[name].[hash:7].[ext]'),\n    // workaround for vuejs-templates webpack issue 1266\n    publicPath: process.env.NODE_ENV === 'production' ? '../../' : '/'\n  }\n}\nIncidentally, all I had to do the get material-design-icons working was npm i material-design-icons, add import 'material-design-icons/iconfont/material-icons.css' to the main.js file, and then use the above workaround.\n. ",
    "Mrkisha": "@LinusBorg  How can we do this with latest Vue (vue-cli 3)?. @LinusBorg it does not work.\ngeneratedindex.html file has absolute paths to js and css.\nI need them relative as I'm using domain with path for this app (https://somedoman.com//).\n. ",
    "iCodeBIT": "As far as I know, if I comment out the use of ModuleConcatenationPlugin, which is said to enable scope hoisting, the hash value will be intact, but I don't know why.. ",
    "chuanxd": "ok, I don't understand why my project have this issue.. ",
    "queteparece": "Downgraded babel-eslint to v7.2.3 in package.json.\nAnd it works!\nWhat is happening exactly?. Done!\nhttps://github.com/vuejs-templates/webpack/pull/1283. ",
    "cngu": "I'm using autoprefixer@7.2.5.\nnpm ls autoprefixer also shows that css-loader > cssnano is using an older version:\nnew-template@1.0.0 /Users/c/dev/new-template\n\u251c\u2500\u2500 autoprefixer@7.2.5 \n\u2514\u2500\u252c css-loader@0.28.9\n  \u2514\u2500\u252c cssnano@3.10.0\n    \u2514\u2500\u2500 autoprefixer@6.7.7   <--  old\nBut I'm not sure if that is the problem because the stacktrace suggests that caniuse-api is having issues, but it doesn't use autoprefixer and is using the latest version of browserslist.. I tested this out locally by adding an npm-shrinkwrap.json file to override css-loader > cssnano's version of autoprefixer to 7.2.5.\nUnfortunately I'm still seeing the same caniuse-api stacktrace above.\nAlso note that major is the first and only query I tried and found it not to be working. There could potentially be other broken queries.. Okay, we can try this again when the chain of dependencies have updated.\nI believe this has to wait for...\ncss-nano v4 - ben-eb/cssnano#365 (breaking changes)\ncss-loader v1 - webpack-contrib/css-loader#654\n...and then we can update when they're stable.\nIf there are no other tasks on your end, feel free to close this issue (or do whatever you usually do to track upstream issues). Thanks for the help!. It's being used for node-notifier (in the same commit you referenced).. ",
    "chentao169": "@LinusBorg  I updated my question. There is nothing useful in the stack trace. That's why I didn't paste it at the beginning. Thanks.. I cloned this repo https://github.com/ariera/django-vue-template and it works. so close this issue.. ",
    "fixmylie": "i had the same problem. You need to edit this line https://github.com/vuejs-templates/webpack/blob/develop/template/.eslintrc.js#L39 . ",
    "uonick": "Yes. @gscottqueen nope \ud83d\ude1e . ",
    "gscottqueen": "same error here, digging in this morning but did @uonick find a fix?. @uonick and @LinusBorg fix was reported here https://github.com/webpack-contrib/uglifyjs-webpack-plugin/issues/217, \nnpm update uglifyjs-webpack-plugin\nnpm run build \nworked for me. ",
    "michaelgallaghertw": "for quick reference, the changelogs:\n\nhttps://github.com/webpack/webpack/releases/tag/v3.0.0\nhttps://github.com/webpack/webpack/releases/tag/v4.0.0-beta.0\n\nIn theory there are no backwards compatibility breaks for v3. Points to watch out for from v4:\n\nCommonsChunkPlugin was removed -> optimization.splitChunks\nimport() always returns a namespace object. CommonJS modules are wrapped into the default export\nI'd expect some fallout from this, possibly within the inject-loader\n. \n\n\n",
    "KaelWD": "It's out now: https://github.com/webpack/webpack/releases/tag/v4.0.0. ",
    "jingzheshan": "Not a smooth upgrade with Webpack 4 particular extract-text-webpack-plugin\nhttps://github.com/webpack-contrib/extract-text-webpack-plugin/issues/727\n. I recommend to wait for vue-loader 15 - https://github.com/vuejs/vue-loader/tree/next, to have native support.. vue-loader works great for me. Vue-loader docs and migration guide are very helpful.. ",
    "aozora": "extract-text-plugin is in beta now, and seems almost stable.... ",
    "joaoeudes7": "Webpack Stable! . ",
    "dak": "Would it make sense to switch to mini-css-extract-plugin in place of extract-text-plugin? See: https://github.com/webpack-contrib/extract-text-webpack-plugin/issues/749. I replaced ETWP with Mini-CSS-Extract-Plugin with fairly minimal changes.\n\nI removed the ETWP code from build/utils.js completely (I faced similar problems as @jjyyxx)\nI added optimization config to webpack.base.conf.js:\n\njs\noptimization: {\n    minimize: false,\n    runtimeChunk: {\n        name: 'vendor'\n    },\n    splitChunks: {\n        cacheGroups: {\n            default: false,\n            commons: {\n                test: /node_modules/,\n                name: \"vendor\",\n                chunks: \"initial\",\n                minSize: 1\n            }\n        }\n    }\n}\n3. I replaced ExtractTextPlugin with MiniCSSExtractPlugin in webpack.prod.conf.js:\n```js\nconst MiniCSSExtractPlugin = require('mini-css-extract-plugin'); // import\n// added optimization.minimize: true to settings\noptimization: {\n    minimize: true\n}\n// changed new ExtractTextPlugin({ to new MiniCSSExtractPlugin({ with the exact same param {filename: utils.assetsPath('css/[name].[contenthash].css')} passed as an argument.\n```\n\nRemoved all CommonsChunkPlugin code.\n\nI have changed the build process in my project quite a bit since I used this template, so there may be some differences. I also was seeing two deprecation warnings that I wasn't able to track down, but didn't seem to have any detrimental effect:\n(node:37161) DeprecationWarning: Tapable.plugin is deprecated. Use new API on `.hooks` instead\n(node:37161) DeprecationWarning: Tapable.apply is deprecated. Call apply on the plugin directly instead\nHopefully this helps.\nEdit: I also added mode: 'development' (and cache: true) to the webpack.dev.conf.js file to re-enable incremental compilation and mode: 'production' to webpack.prod.conf.js.. @jjyyxx I set it to always return with the vue-style-loader:\n```js\nfunction generateLoaders(loader, loaderOptions) {\n    const loaders = [cssLoader];\nif (loader) {\n    loaders.push({\n        loader: `${loader}-loader`,\n        options: {\n            ...loaderOptions,\n            sourceMap: options.sourceMap\n        }\n    });\n}\n\nreturn ['vue-style-loader'].concat(loaders);\n\n}\n```\nIt looks like in the code you showed, if options.extract is true, nothing is returned, which doesn't seem to be what you want.. @jjyyxx I wasn't a huge fan of that either, but it wasn't worth it to me to figure out the fix (especially for my usecase, where a single version of an application is being installed in isolation, so I get little benefit out of caching files separately). I'm not even sure there is a good solution (yet).\n@kinsomicrote I believe the errors are coming from the plugins being used. Apparently WebPack 4 is backwards compatible with WebPack 3 plugins, which are where the deprecation warnings are coming from. I saw html-webpack-plugin fixed an issue with that exact deprecation warning in I believe 3.0.6, although I imagine it will take some time for all the plugins used to be fully updated for WebPack 4.. Are you importing the webpack script provided?\njs\n// import PDFJS from 'pdfjs-dist'; // not for webpack\n// import PDFJS from 'pdfjs-dist/webpack'; // webpack script that properly includes worker. Is this debug code?. ",
    "jjyyxx": "It seems the maintainer of ETWP decided to deprecate this plugin on webpack >= v4.0.0 and recommend mini-css-extract-plugin instead. Many issues related to ETWP 4 (with prefix 4.0.0-beta.0) is closed with that notification. Maybe we should consider mini-css-extract-plugin?. The mini-css-extract-plugin, from my perspective, is quite simple with only two options filename and chunkFilename. As the maintainer of ETWP claims, if you only use ETWP to extract css, migration should be very simple. I didn't have time to try the migration out, but I believe it would not be tricky if this template uses ETWP to extract css only.. I just tried updating all the deps to webpack 4 compatible version, and altered the config a bit but UNFORTUNATELY faced with numerous errors :-( \nThe previous build/utils.js calling ExtractTextPlugin.extract is a tricky part to me. I doesn't have sufficient knowledge on how the function works and simply copied related code from ExtractTextPlugin.extract, together with other related code and made a few necessary changes such as changing ExtractTextPlugin.loader to MiniCssExtractPlugin.loader. Eventually, the code could begin to work but reporting Module build failed: ReferenceError: document is not defined with every css file in my project.  \nA typical stacktrace: \nModule build failed: ReferenceError: document is not defined\n    at addStylesClient_addStyle (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\vue-style-loader\\index.js!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\css-loader\\index.js??ref--10-2!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\postcss-loader\\lib\\index.js??ref--10-3!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\element-ui\\lib\\theme-chalk\\display.css:329:22)\n    at addStylesClient_addStylesToDom (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\vue-style-loader\\index.js!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\css-loader\\index.js??ref--10-2!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\postcss-loader\\lib\\index.js??ref--10-3!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\element-ui\\lib\\theme-chalk\\display.css:313:20)\n    at addStylesClient_addStylesClient (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\vue-style-loader\\index.js!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\css-loader\\index.js??ref--10-2!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\postcss-loader\\lib\\index.js??ref--10-3!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\element-ui\\lib\\theme-chalk\\display.css:267:3)\n    at Object.SOZN (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\vue-style-loader\\index.js!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\css-loader\\index.js??ref--10-2!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\postcss-loader\\lib\\index.js??ref--10-3!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\element-ui\\lib\\theme-chalk\\display.css:169:14)\n    at __webpack_require__ (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\vue-style-loader\\index.js!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\css-loader\\index.js??ref--10-2!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\postcss-loader\\lib\\index.js??ref--10-3!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\element-ui\\lib\\theme-chalk\\display.css:21:30)\n    at module.exports.I1BE.module.exports.list (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\vue-style-loader\\index.js!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\css-loader\\index.js??ref--10-2!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\postcss-loader\\lib\\index.js??ref--10-3!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\element-ui\\lib\\theme-chalk\\display.css:70:18)\n    at Object.<anonymous> (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\vue-style-loader\\index.js!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\css-loader\\index.js??ref--10-2!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\postcss-loader\\lib\\index.js??ref--10-3!E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\element-ui\\lib\\theme-chalk\\display.css:73:10)\n    at Module._compile (module.js:649:30)\n    at exec (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\mini-css-extract-plugin\\dist\\loader.js:54:10)\n    at childCompiler.runAsChild (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\mini-css-extract-plugin\\dist\\loader.js:132:14)\n    at compile (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\webpack\\lib\\Compiler.js:238:11)\n    at hooks.afterCompile.callAsync.err (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\webpack\\lib\\Compiler.js:486:14)\n    at AsyncSeriesHook.eval [as callAsync] (eval at create (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\tapable\\lib\\HookCodeFactory.js:24:12), <anonymous>:15:1)\n    at AsyncSeriesHook.lazyCompileHook [as _callAsync] (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\tapable\\lib\\Hook.js:35:21)\n    at compilation.seal.err (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\webpack\\lib\\Compiler.js:483:30)\n    at AsyncSeriesHook.eval [as callAsync] (eval at create (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\tapable\\lib\\HookCodeFactory.js:24:12), <anonymous>:6:1)\n    at AsyncSeriesHook.lazyCompileHook [as _callAsync] (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\tapable\\lib\\Hook.js:35:21)\n    at hooks.optimizeAssets.callAsync.err (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\webpack\\lib\\Compilation.js:957:35)\n    at AsyncSeriesHook.eval [as callAsync] (eval at create (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\tapable\\lib\\HookCodeFactory.js:24:12), <anonymous>:6:1)\n    at AsyncSeriesHook.lazyCompileHook [as _callAsync] (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\tapable\\lib\\Hook.js:35:21)\n    at hooks.optimizeChunkAssets.callAsync.err (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\webpack\\lib\\Compilation.js:948:32)\n    at _err2 (eval at create (E:\\Desktop\\QY Project\\QingyunMusicPlayer-JS\\node_modules\\tapable\\lib\\HookCodeFactory.js:24:12), <anonymous>:20:1)\n @ ./src/main.js\nI think I must make sth wrong, so I hope someone familiar with webpack, ETWP, mini-css-extract-plugin or anything related to text extraction could come to help.. @dak That's nice work. \n\nI removed the ETWP code from build/utils.js completely (I faced similar problems as @jjyyxx)\n\n\nComment these code out leads to other errors as \njavascript\nCssSyntaxError {\n  name: 'CssSyntaxError',\n  reason: 'Unknown word',\n  file: 'E:\\\\Desktop\\\\QY Project\\\\QingyunMusicPlayer-JS\\\\src\\\\components\\\\TmDocContainer.vue',\n  source: 'exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\\n// imports\\n\\n\\n// module\\nexports.push([module.id, \"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\r\\\\n.tm {\\\\r\\\\n  display: block;\\\\r\\\\n  background-color: black;\\\\r\\\\n  padding: 10px;\\\\r\\\\n}\\\\r\\\\n\", \"\"]);\\n\\n// exports\\n',\n  line: 1,\n  column: 1,\n  message: 'E:\\\\Desktop\\\\QY Project\\\\QingyunMusicPlayer-JS\\\\src\\\\components\\\\TmDocContainer.vue:1:1: Unknown word',\n  input:\n   { line: 1,\n     column: 1,\n     source: 'exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\\n// imports\\n\\n\\n// module\\nexports.push([module.id, \"\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\n\\\\r\\\\n.tm {\\\\r\\\\n  display: block;\\\\r\\\\n  background-color: black;\\\\r\\\\n  padding: 10px;\\\\r\\\\n}\\\\r\\\\n\", \"\"]);\\n\\n// exports\\n',\n     file: 'E:\\\\Desktop\\\\QY Project\\\\QingyunMusicPlayer-JS\\\\src\\\\components\\\\TmDocContainer.vue' } }\nDid I miss sth?. So currently CSS has to be bundled within the JS files?\nIn addition, updating other devDeps to newest version, I did not see the DeprecationWarning.. @dak Thanks for your help. It currently works. However, without extracting css leads to no minification (remove comments, etc) of the css declarations, increasing my bundle size by 500kb. \nMy case might be special but I think extraction is necessary for part of the users. Maybe someone could solve this.. https://github.com/vuejs/vue-cli/issues/1205\nvue-cli is currently at beta.9. So the official template may come out soon.. @noamkfir \nI'm sorry to report some issues of the template. This may not connect directly with your template, instead, connect with those plugins, but I'm seeking for your help (and anyone's, of course).\nThe current template has severe memory leak in dev mode. The memory keeps going up every time the dev server recompiled the files. Since my project is relatively big, the memory quickly exceeds the heap after around 10 compilation and exits with code 134.\nI did memory dump with chrome-devtool's node debug feature. Four snapshots are taken after four minimum recompilation (remove a statement/add it back).\n\nI have saved those snapshots. If you think it necessary and would like to analyze it, you can download it from google drive and load it from chrome-devtool.\nsnapshot 1\nsnapshot 2\nsnapshot 3\nsnapshot 4\nIf you need any further information, I'm glad to provide.\nBTW, I updated the devDependencies to newest:\njavascript\n{\n  \"devDependencies\": {\n    \"autoprefixer\": \"^8.5.0\",\n    \"babel-core\": \"^6.26.3\",\n    \"babel-eslint\": \"^8.2.3\",\n    \"babel-helper-vue-jsx-merge-props\": \"^2.0.3\",\n    \"babel-loader\": \"^7.1.4\",\n    \"babel-plugin-syntax-jsx\": \"^6.18.0\",\n    \"babel-plugin-transform-runtime\": \"^6.23.0\",\n    \"babel-plugin-transform-vue-jsx\": \"^3.7.0\",\n    \"babel-preset-env\": \"^1.7.0\",\n    \"babel-preset-stage-2\": \"^6.24.1\",\n    \"chalk\": \"^2.4.1\",\n    \"copy-webpack-plugin\": \"^4.5.1\",\n    \"css-loader\": \"^0.28.11\",\n    \"eslint\": \"^4.19.1\",\n    \"eslint-config-standard\": \"^11.0.0\",\n    \"eslint-friendly-formatter\": \"^4.0.1\",\n    \"eslint-loader\": \"^2.0.0\",\n    \"eslint-plugin-import\": \"^2.12.0\",\n    \"eslint-plugin-node\": \"^6.0.1\",\n    \"eslint-plugin-promise\": \"^3.7.0\",\n    \"eslint-plugin-standard\": \"^3.1.0\",\n    \"eslint-plugin-vue\": \"^4.5.0\",\n    \"file-loader\": \"^1.1.11\",\n    \"friendly-errors-webpack-plugin\": \"^1.7.0\",\n    \"html-webpack-plugin\": \"^3.2.0\",\n    \"mini-css-extract-plugin\": \"0.4.0\",\n    \"node-notifier\": \"^5.2.1\",\n    \"optimize-css-assets-webpack-plugin\": \"^4.0.1\",\n    \"ora\": \"^2.1.0\",\n    \"portfinder\": \"^1.0.13\",\n    \"postcss-import\": \"^11.1.0\",\n    \"postcss-loader\": \"^2.1.5\",\n    \"postcss-url\": \"^7.3.2\",\n    \"rimraf\": \"^2.6.2\",\n    \"semver\": \"^5.5.0\",\n    \"shelljs\": \"^0.8.2\",\n    \"uglifyjs-webpack-plugin\": \"^1.2.5\",\n    \"url-loader\": \"^1.0.1\",\n    \"vue-loader\": \"^15.2.0\",\n    \"vue-style-loader\": \"^4.1.0\",\n    \"vue-template-compiler\": \"^2.5.16\",\n    \"webpack\": \"^4.8.3\",\n    \"webpack-bundle-analyzer\": \"^2.13.1\",\n    \"webpack-cli\": \"2.1.4\",\n    \"webpack-dev-server\": \"^3.1.4\",\n    \"webpack-merge\": \"^4.1.2\"\n  }\n}. Thanks for your reference! Actually I have seen that issue.\nWhat surprised me was that I configured a similar vue-webpack4 project recently and didn't encounter memory leaks (at least, wasn't aware of memory leaks). I switched to this template mainly because my own template has a strange bug when configuring dev-server and copy-webpack-plugin (contentbase to be more specific). This template solved my problem but led to a new one...\nThe differences between my configuration and this one are quite small. Maybe a specific option triggered the problem.. @ChadTaljaardt \nI investigated the previous configuration, and found that replacing the lines in webpack.dev.conf.js\nrules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap, usePostCSS: true })\nto\nrules: [\n  {\n    test: /\\.css$/,\n    use: [\n      'vue-style-loader',\n      'css-loader'\n    ]\n  }\n]\nsignificantly eased the leak. I know it isn't a fix as it drops support for css dialects, but it turned out that something went wrong in the styleLoaders function or the relating loaders.\nThe mem dump:\n\nDescription: Between Row 1 ~ Row 5, one minimum recompilation each time. Between Row 5 and Row 6, invoke a GC operation. So, it seems that other minor leaks exist, but it isn't so severe.\nI would be appreciated if anyone can trace into the styleLoaders and locate the problem.\n. In complement, the return value of \njavascript\nutils.styleLoaders({ sourceMap: config.dev.cssSourceMap, usePostCSS: true })\nis\njavascript\n[\n    {\n        test: /\\.css$/,\n        use:\n            ['vue-style-loader',\n                {loader: 'css-loader', options: {sourceMap: true}},\n                {loader: 'postcss-loader', options: {sourceMap: true}}]\n    },\n    {\n        test: /\\.postcss$/,\n        use:\n            ['vue-style-loader',\n                {loader: 'css-loader', options: {sourceMap: true}},\n                {loader: 'postcss-loader', options: {sourceMap: true}}]\n    },\n    {\n        test: /\\.less$/,\n        use:\n            ['vue-style-loader',\n                {loader: 'css-loader', options: {sourceMap: true}},\n                {loader: 'postcss-loader', options: {sourceMap: true}},\n                {loader: 'less-loader', options: {sourceMap: true}}]\n    },\n    {\n        test: /\\.sass$/,\n        use:\n            ['vue-style-loader',\n                {loader: 'css-loader', options: {sourceMap: true}},\n                {loader: 'postcss-loader', options: {sourceMap: true}},\n                {\n                    loader: 'sass-loader',\n                    options: {indentedSyntax: true, sourceMap: true}\n                }]\n    },\n    {\n        test: /\\.scss$/,\n        use:\n            ['vue-style-loader',\n                {loader: 'css-loader', options: {sourceMap: true}},\n                {loader: 'postcss-loader', options: {sourceMap: true}},\n                {loader: 'sass-loader', options: {sourceMap: true}}]\n    },\n    {\n        test: /\\.stylus$/,\n        use:\n            ['vue-style-loader',\n                {loader: 'css-loader', options: {sourceMap: true}},\n                {loader: 'postcss-loader', options: {sourceMap: true}},\n                {loader: 'stylus-loader', options: {sourceMap: true}}]\n    },\n    {\n        test: /\\.styl$/,\n        use:\n            ['vue-style-loader',\n                {loader: 'css-loader', options: {sourceMap: true}},\n                {loader: 'postcss-loader', options: {sourceMap: true}},\n                {loader: 'stylus-loader', options: {sourceMap: true}}]\n    }\n]\nI did not use any css dialect so maybe it's something related to postcss-loader?. With so many plugins, tracing the root of the leak is really tricky.\nThanks for your efforts anyway @noamkfir. Hope this problem can be solved soon.. ",
    "smiller171": "@jjyyxx @dak Do you know what would be involved in replacing extract-text-plugin with mini-css-extract-plugin?. ",
    "kinsomicrote": "@dak Thanks for sharing how you fixed it.\nI'm also having same warnings. I'm not sure what the cause is. I've tried to trace it using by following the steps mentioned here - https://github.com/webpack/webpack/issues/6568#issuecomment-374871753, but it didn't work for me.. ",
    "jinwyp": "Hi all:\nI have a full demo for webpack 4 vue project , with extracting css and splitChunks. support multipage and entries.  pls check , https://github.com/jinwyp/koa-user/blob/master/frontend-vue/src/config/webpack.base.conf.js\nOutput file size:\n\nI would say it need a bit work to upgrade to webpack4. \n. ",
    "luckyyyyy": "I recommend to wait for vue-loader 15. ",
    "MartinX3": "I recommend to wait for vue-loader 15 to have native support.. Also we should wait for vue-cli v3. ",
    "dakshshah96": "vue-loader v15.0.0 is out now \ud83d\ude80 \nhttps://github.com/vuejs/vue-loader/releases. @LinusBorg Any updates on this?. ",
    "ChadTaljaardt": "@dakshshah96 Vue loader 15 only recently got released, it will most likely take a while to implement it still. . @jingzheshan I haven't looked at the implementation details regarding this but it might be useful to set up a demo repository for reference for everyone else?. @LinusBorg The PR for this seems to be ready. Would you be able to review it?\nhttps://github.com/vuejs-templates/webpack/pull/1369\n. Please follow the thread here: \nhttps://github.com/vuejs-templates/webpack/issues/1280. Thanks for taking the time to do this. . What still needs to be done with this before it can be merged?. @jjyyxx I am getting this too, but I don't think it has to do with this template.\nHere is another issue I am following in regards to this. https://github.com/webpack/webpack/issues/6929. @jjyyxx If your configuration doesn't leak, and this configuration does, would you be able to share your current config so that we might be able to investigate where it could be? It must be in where there is a difference between the config's which makes it easier to narrow down where the issue is. . @aksenovdev I tested this with the pr version and it seems to be working fine. \nvue init noamkfir/webpack test\nthen ran \ncd test\n then ran\nnpm test\n. dupe of https://github.com/vuejs-templates/webpack/issues/1280\nAlso here is a working pr : https://github.com/vuejs-templates/webpack/pull/1369\nYou can use it by running \njs \nvue init noamkfir/webpack#webpack-4 project . Can we close this issue as its a duplicate of the above?\n. dupe of https://github.com/vuejs-templates/webpack/issues/1280\nAlso here is a working pr : https://github.com/vuejs-templates/webpack/pull/1369\nYou can use it by running \njs \nvue init noamkfir/webpack#webpack-4 project . This PR: https://github.com/vuejs-templates/webpack/pull/1369 was only completed 2 days ago, I assume it will be merged very soon, there was just a few small things that needed to be fixed with it. \n. dupe of https://github.com/vuejs-templates/webpack/issues/1280\nAlso here is a working pr : https://github.com/vuejs-templates/webpack/pull/1369\nYou can use it by running \njs \nvue init noamkfir/webpack#webpack-4 project . @snuuve Can we close this issue?. ",
    "noamkfir": "The build for my PR (#1369) is failing. I have a pretty good idea why, and I'd appreciate it if anybody familiar with CircleCI or permissions to manage the official build on CircleCI could take a quick look.\nThe details are here: https://github.com/vuejs-templates/webpack/pull/1369#issuecomment-385192951.\nUpdate: the build is no longer failing. Yay.. I'm trying to get the build to pass. I noticed that the chromedriver being used for the e2e tests is 2.35, which is apparently installed by the image in /usr/bin/chromedriver. It should be using 2.38, which is specified in package.json and located in node_modules.\nThe Dockerfile used for the build tries to install the latest chromedriver, which should be 2.38, but either the script isn't working properly, some cache (maybe CircleCI's?) is returning the older version, or the chromedriver is preinstalled and the script is failing to overwrite it.\nI'm trying to configure a build that is identical to the current build, except that it does not try to install the global chromedriver, by commenting out just the chromedriver installation command. Turns out it's pretty complicated to get that set up and running. I'm working on it, but if anybody knows a faster way to get CircleCI to use a slightly different Dockerfile, I would be obliged :).. # Finally got the build to pass!\nThis mainly involved replacing the prebuilt CircleCI image with a custom image generated using a fork of CircleCI's dockerfile-wizard.\nThe custom image is currently necessary because the prebuilt images install chromedriver globally. For some reason, they install 2.35 instead of 2.38 (not sure why...). The global executable takes precedence over node_modules, causing the build to fail. I think my solution is better: I got rid of the global chromedriver installation altogether. package.json is now the single source of truth for the chromedriver version.\nI also had to add the --headless arg to the chromeOptions property in nightwatch.json, as well as make a few other tweaks. Took me a while to figure out why the container couldn't launch Chrome, and Chrome's and chromedriver's inane error messages weren't very helpful. It was a combination of the browser, webdriver, selenium, and nightwatch versions, each with their own quirks and breaking changes.\nI created a logs folder that the webdrivers write to. CircleCI collects those logs and puts them on the Artifacts tab after a build. Really helps figure out what's going on.\nI'm not sure if this was necessary, but I upgraded to the latest Node 6 image that CircleCI explicitly supports - 6.14.1. I'm guessing Node 8 (and maybe even 10) should work, but I'm not sure why it was downgraded to 6 and didn't want to screw things up now that it finally works.... @ChadTaljaardt, following up on @gkatsanos's review, I noticed that the vendor chunk does not preserve its chunkhash, so the PR probably shouldn't be merged just yet.\nI've fixed it and will try to push the update in the next day or two.. This update:\n simplifies the config by resorting to some default and recommended webpack 4 settings\n unifies the file and chunk naming strategies for js and css files for easier debugging and improved long-term caching\n* stabilizes the chunk hashes, mainly to prevent generating a new chunk hash for the vendor chunk when only app code is modified, but applied generally\nIf all is well, this should hopefully remove any remaining obstacles to merging.. @jjyyxx I was able to reproduce the leak very easily, so I dug into it a bit and I'm pretty sure this isn't related to my changes.\nBasically, I discovered that the leak also occurs in the released version of the template. As far as I can tell, it's the exact same leak, almost certainly the one that @ChadTaljaardt referenced: webpack/webpack#6929.\nI don't think it's the postcss-loader plugin because removing it does not seem to prevent the leak, but I can't rule it out either yet. It's entirely possible that a number of plugins are incorrectly retaining references to the Compilation and/or CachedSource objects between builds.\nI tried to replace module.rules as you suggested and this also didn't seem to prevent the leak. I'm not sure why I'm getting different results than you are but I tried a number of different approaches and still wasn't able to reproduce the improvement.\nOne thing I found interesting was that there's a difference in the memory profile between webpack-dev-server and webpack. It's not completely deterministic, but webpack seems to leak less and more predictably. This is true for both dev and prod modes.. Thanks @miaulightouch! I've merged your PR into mine.. Sorry about the delay. Been a bit busy. I've merged @miaulightouch's PR.. @jacobg and @Dylan-Chapman This PR does not include the PWA support added in Vue CLI 3. In fact, I'm not really sure how the new CLI will affect this project. As I see it, the new CLI is more of a paradigm shift than a rewrite. Someone with more experience than I have will have to weigh in on whether this project is even relevant for CLI 3 projects.\nThis PR essentially updates webpack and vue-loader. It's a pretty big PR because so many packages had to be updated, underlying behavioral changes accommodated, and configurations reconfigured, but a lot of effort was made to avoid changing surface behavior.. Thank for looking over the code @gkatsanos!\nAre you sure, though? The readme says both filename and chunkFilename are optional. And the webpack docs say:\n\nBy default [id].js is used or a value inferred from output.filename ([name] is replaced with [id] or [id]. is prepended)\n\nI'm assuming it's inferred from filename in this case, but haven't verified.\nIf it does break that way, how would I repro this effectively? I'd probably need more than just a long CSS file to test, right?\nIn any case, I was trying to mirror the configuration used for the extract-text-webpack-plugin, and this combination seemed to produce correct results (eyeballed). It's possible we need to reconsider the default settings.. @gkatsanos, they seem to work well on my machine... The CSS file in dist is minified and when I click a selector, Chrome opens the .vue file and highlights the proper line.\nCan you point me to something specific so I can verify?. @afontcu, I think it should stay, but I'm not really sure.\nVue is very new for me, so I don't know how every setting affects the build or the app. I only made changes I felt certain were equivalent to the previous behavior or completely redundant, mainly by following Vue's migration guide, reading docs, and trial and error.\nFor example, I got rid of the loaders property because the new vue-loader explicitly deprecates it in favor of the the webpack loaders configuration. And I renamed the transformToRequire property to transformAssetUrls, based on the guide.\nMy hunch is that it should probably stay for the sake of clarity, even though the usage has changed a bit.\nHaving said that, I haven't checked if the cacheBusting property is used anywhere, and I'm not sure if we should add other properties that are relevant for the new vue-loader.. @gkatsanos Finally found some time to take another look at this. I have to say, you sent me down the rabbit hole with this one...\nFirst of all, I was able to determine relatively quickly that if filename is specified and chunkFilename is not, webpack uses filename by default.\nSecond, I'm pretty sure we don't need [contenthash], which was used by the extract-text-webpack-plugin. The [chunkhash] is probably more suitable for our purposes anyway.\nHowever, that's not the end of the story. Turns out that regardless of the naming strategy used here, the current configuration may generate a new chunkhash for the vendor chunk for any change in the code, even if it is not in node_modules. This is probably a blocker.\nI did a bit of research and played around with different variations of filename and chunkFilename for both output and the MiniCssExtractPlugin using different combinations of placeholders ([name], [id], [contenthash] and [chunkhash]). I also tested with and without explicitly named chunks in dynamic imports for routing (e.g., const SampleComponent = () => import(/* webpackChunkName: \"sample\" */ '@/components/SampleComponent'), which imports a SampleComponent.vue file). And I fiddled quite a bit with the optimization settings.\nThe bottom line is that I've solved it. I have to clean it up a bit, so I hope to push it in the next day or two.. The paths object is not debug code. I intentionally collected all the paths for readability and to simplify the configuration.\nThe console.log is debug code and is extremely useful when trying to figure out why the webdrivers aren't loading.\nI just pushed a small update (ad1999d) that:\n adds a debugTests constant to nightwatch.conf.js\n logs the paths object when it's true\n* sets the nightwatch config object's silent property to !debugTests\nI also cleaned up the file a bit.. I'm not entirely sure if webpack-cli is required, but all the migration guides I looked at said to install it. The CLI code was split out from webpack in v4 and I wasn't really sure how to check if the generator or the templates use any of its functionality anywhere. I had planned to look into it further, but never got around to it.. @zevdg Quoting @thatisuday (https://github.com/webpack/webpack/issues/6647#issuecomment-395078260):\n\nenforce will force modules to split whether or not condition mentioned in splitChunks suitable to modules to split.\n\nIf I recall correctly, I added it to ensure consistent hashing, but I really don't remember the details and, in hindsight, that probably doesn't make much sense :(. I do remember that it took me way too long to solve whatever the problem was because, as you said, there was no documentation for enforce so I didn't know the option existed until I came across it by accident on some unrelated article.\nThe SplitChunksPlugin code basically uses it to arbitrarily set other parameters to default values that guarantee that the chunk will be created.. @PanJiaChen Thanks for the thorough review!\nI did a lot of experimentation before I added the NamedChunksPlugin because the HashedModuleIdsPlugin did not guarantee consistent hashing, especially of the vendor module.\nI found that almost every change I made to any import statement in my code could cause the vendor module hash to change. The NamedChunksPlugin uses the path instead of the arbitrary module id to calculate the hash, and this proved to be far more consistent.\nIt's definitely possible I missed something, or that the behavior improved since webpack 4.6 (it's now 4.16), but I hesitate to reopen this right now as changing this or upgrading to 4.16 might have further consequences. In any case, after this PR is approved, doing that kind of change is a much smaller and far more focused change.. \ud83d\udc4d . You're right about namedModules. I'm removing it.\nHowever, the docs for noEmitOnErrors seem to indicate that it does not have a default value, so I'm leaving it for now.. ",
    "troy351": "vue-cli  beta.10 just released a few hours ago which upgraded to webpack 4. ",
    "sucrete": "@dak your walkthrough really helped me out. thank you!. ",
    "whjvenyl": "Why bootstrap has settled for a precision of 8 instead of 5 (as defined in node-sass) I do not know. But I would avoid from having framework specific tweaks getting into this template.. ",
    "Quadriphobs1": "Yes its extracting the css and add them to the head tag, but i need to extract them and save it in a file, that is working for styles in .vue but not in .js. Well i guess am using dev for now i havent yet tested it on build\nOn Feb 1, 2018 13:59, \"Thorsten L\u00fcnborg\" notifications@github.com wrote:\n\nAre you talking about dev or build?\nIn build, all css is extracted into one file.\nIf that doesn't work for you, please provide a repository with a\nreproduction\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/1282#issuecomment-362258587,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ATSusLPE65A3naVYEEDux8GOe9tj-Wnhks5tQbVBgaJpZM4R1LAP\n.\n. Ohhh okay.\n\nOn Feb 1, 2018 14:10, \"Thorsten L\u00fcnborg\" notifications@github.com wrote:\n\nIn dev we inject all styles into head for hot reloading.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/1282#issuecomment-362261105,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ATSusC_IJq_mUL62k-D5aE2oSVpMXa70ks5tQbfYgaJpZM4R1LAP\n.\n. \n",
    "fatlinesofcode": "I'm using // Template version: 1.3.1. Hi @LinusBorg thanks your help that does fix the path within the Css file, however now the files are emitted to the wrong folder. They are outputted to one level below /dist/ :( . yep, its a pain. Pretty sure postcss-url can solve this issue. I see you've added it to the project, maybe it just needs some additional config?. ",
    "Macavirus": "Having the same issue here.\nThe only thing I've changed from the default config is changing the assetsPublicPath in index.js. I have to do this because my files are not on a webserver but used on an embedded Chrome instance.\njs\n    assetsPublicPath: './',\nI include the fonts in the style tag of App.vue like this:\ncss\n@font-face {\n  font-family: \"Noto Sans SemCond\";\n  src: local(\"Noto Sans SemiCondensed\"), local(\"NotoSans-SemiCondensed\"),\n    url(\"assets/fonts/subset-NotoSans-SemiCondensed.woff2\") format(\"woff2\");\n  font-weight: normal;\n  font-style: normal;\n}\nThe suggested fix by @LinusBorg from here does not work as well. Is there any way to include fonts in the production build? This seems like a pretty common use case.. ",
    "ajithkgshk": "I had the same issue. My development config worked, but my production build did not. Kept getting the wrong path for fonts. In my case, the dir structure was as below\nsrc\n    assets\n        fonts\n.\n.\nwww\n    dist\n        static\n            fonts\nI added the following line to the webpack base config file where it checks for font files.\npublicPath: process.env.NODE_ENV === 'production' ? '../../' : '/'. ",
    "3DEsprit": "I'm just posting to mention this seems to be an actual issue with the webpack url-loader. While I do not use vuejs-templates (but certainly will in the future), I found this exact issue with one of my older React/Electron projects, then finding myself trying to figure out why my production builds were trying to access fonts using an exact development path. \nAt the time of this writing I'm using Webpack 4.10.0, and url-loader 0.6.2. While I haven't tried 1.1.1 just yet, it's probably safe to say it doesn't change anything considering the last post was made 27 days ago in the referenced issue. \nAnyways, I thought I would mention this before anyone spent too much time trying to find the source of this issue in this particular project.\n. ",
    "hugomejia": "I had the exact same issue, so, Just in case somebody is building a Cordova/Phonegap App with Vuej + Vuetify , I confirm the same work around worked for me. Thanks @johnellinwood  !!. ",
    "glomotion": "Ummm. Did you see that line in my main.js?\nVue.config.devtools = true;\nIs there something else I have to set?. Also, as shown in the screenshots, devtools work just fine online. Only the store inspection doesn\u2019t.. ",
    "thezachcannon": "Same is happening to me @pmesgari \nEDIT: I had the wrong syntax for my environment variable...Did you restart your server after adding these variables?. ",
    "pmesgari": "@LinusBorg I have been trying to reproduce this, it might have been an issue with chrome debugger or webpack itself, I did a complete restart of my computer, and now it works. If it happens again, I will let you know.. ",
    "vesper8": "I believe I may be dealing with the same issue. I get process is not defined. I opened an issue here\nhttps://github.com/vuejs/vue-cli/issues/934\nWhich includes a repro repo. ",
    "nocoolyoyo": "\u4e0d\u597d\u610f\u601d\uff0c\u624b\u8bef\u4e86\u3002\u3002\u3002\u3002\u3002\u3002. \u4e0d\u597d\u610f\u601d\uff0c\u624b\u8bef\u4e86\u3002\u3002\u3002\u3002\u3002\u3002. ",
    "Yakima-Teng": "\u8fd9\u79cd\u4e0d\u9002\u5408\u63d0\u4ea4\u5427\u3002\u3002. ",
    "kslstn": "Nevermind, this was me not understanding the relative file path syntax of ./\n./ means relative to the current file. Knowing this, I can see how this totally makes sense.. ",
    "baloodevil": "Like @ffxsam my chunk-vendors.abc.js is too large.  Running npm run build --report just shows the various javascript files with their size (where chunk-vendors.abc.js is just one entry).  I think the question is how to analyze what contributed to the size of what is in one of the javascript bundles.  That question is more specific to webpack than vue.  And for that, webpack-bundle-analyzer could help.. ",
    "tillyboy": "Although I had a different error, I just fixed my Vue/SASS issues by running\nnpm i sass-loader\nnpm i node-sass\n\nHowever since I guess these issues are related, I would suggest to the curators to take a look at this issue. In my case the issue presented as follows:\n% npm run dev\n\n> projectname@1.0.0 dev /path/to/project\n> webpack-dev-server --inline --progress --config build/webpack.dev.conf.js\n\n 94% asset optimization\n\n ERROR  Failed to compile with 1 errors                                                                                                                                                                                                                              \n12:48:08 PM\n\nThis dependency was not found:\n\n* !!vue-style-loader!css-loader?{\"sourceMap\":true}!../../node_modules/vue-loader/lib/style-\ncompiler/index?{\"vue\":true,\"id\":\"data-v-0eaeaf66\",\"scoped\":false,\"hasInlineConfig\":false}!sass-loader?\n{\"indentedSyntax\":true,\"sourceMap\":true}!../../node_modules/vue-loader/lib/selector?\ntype=styles&index=0!./modal.vue in ./src/components/modal.vue\n\nTo install it, you can run: npm install --save !!vue-style-loader!css-loader?\n{\"sourceMap\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\"vue\":true,\"id\":\"data-v-\n0eaeaf66\",\"scoped\":false,\"hasInlineConfig\":false}!sass-loader?{\"indentedSyntax\":true,\"sourceMap\"\n:true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./modal.vue\n^C\\\\\n\n% npm i vue-style-loader\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3\n(node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3:\nwanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\n+ vue-style-loader@3.1.2\nupdated 1 package in 10.387s\n% npm i sass-loader\nnpm WARN sass-loader@6.0.6 requires a peer of node-sass@^4.0.0 but none is installed. You must\ninstall peer dependencies yourself.\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3\n(node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3:\nwanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\n+ sass-loader@6.0.6\nadded 9 packages in 11.31s\n% npm i node-sass\n\n> node-sass@4.7.2 install /home/tfr/Code/project_name/node_modules/node-sass\n> node scripts/install.js\n\nCached binary found at /home/tfr/.npm/node-sass/4.7.2/linux-x64-59_binding.node\n\n> node-sass@4.7.2 postinstall /home/tfr/Code/project_name/node_modules/node-sass\n> node scripts/build.js\n\nBinary found at /home/tfr/Code/tfr-vue-lib/node_modules/node-sass/vendor/linux-x64-59/binding.node\nTesting binary\nBinary is fine\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3\n(node_modules/fsevents):\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3:\nwanted {\"os\":\"darwin\",\"arch\":\"any\"} (current: {\"os\":\"linux\",\"arch\":\"x64\"})\n\n+ node-sass@4.7.2\nadded 105 packages in 14.104s\n\nNow I can npm run dev without issues.. ",
    "gtalarico": "This does not affect running or build, and it's likely not related to template itself, so closing this for now.\n. ",
    "DragonCat1": "@afontcu thanku you are right. ",
    "elektracodes": "Same issue here. The docs of vue-loader don't help much either.. ",
    "burzum": "Thanks a lot @LinusBorg! \nWould be nice if the template contains a note about this in the docs or even asks you if you want to use if and auto adds it for you when creating the template app?\nAnd yes, I'm, using 4 because 5 doesn't seem to be available via npm yet.. ",
    "kshitijmehta": "Hi @LinusBorg  ,\nDid adding the 'resolve-url-loader' made the fonts load up ?\n Mine did not. And it is frustrating :@  . ",
    "psc001": "Hi @burzum, @LinusBorg and @kshitijmehta.\nYou can install fontawesome 5 like this.\nshel\nnpm install @fortawesome/fontawesome-free-webfonts\ntry this.\nenter the path in the $ fa-font-path variable and import all required scss.\n```vue\n\n\n\n            Hello FontAwesome\n            \n\n\n\n\n\n\n\nexport default {\n    name: \"FontAwesome\"\n};\n\n\n    $fa-font-path : \"~@fortawesome/fontawesome-free-webfonts/webfonts\";\n    @import \"~@fortawesome/fontawesome-free-webfonts/scss/fontawesome.scss\";\n    @import \"~@fortawesome/fontawesome-free-webfonts/scss/fa-solid.scss\";\n    @import \"~@fortawesome/fontawesome-free-webfonts/scss/fa-regular.scss\";\n    @import \"~@fortawesome/fontawesome-free-webfonts/scss/fa-brands.scss\";\n\n```\n\nI recommend including the ",
    "wilfredonoyola": "@psc001 This package has been deprecated, Maybe We will need another solution.. ",
    "danielrsantana": "There are another way of solving it without additional packages. I've explained here. To prevent the possibility of broken link, I will post it again:\nHere is how I've solved, considering the solutions posted by (@alexsasharegan and @cchamberlain):\nMy architecture:\nReact 16.7.0\n    Typescript 3.3.1\n    Bulma 0.7.2 (similar to bootstrap)\n    FontAwesome 5.7.1\n1) Package.json (packages I've used. You can switch to far or fal)\n(...)\n    \"dependencies\": {\n        \"@fortawesome/fontawesome-free\": \"^5.7.1\",\n        \"@fortawesome/free-solid-svg-icons\": \"^5.7.1\",\n    };\n   (...)\n2) In your webpack.config (very essential):\n(...)\n    {\n        test: /.(png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$/,\n        use: \"url-loader?limit=100000\"\n    }\n    (...)\n3) In your main scss file :\n$fa-font-path : \"~@fortawesome/fontawesome-free/webfonts\";\n    @import \"./node_modules/@fortawesome/fontawesome-free/scss/fontawesome.scss\";\n    @import \"./node_modules/@fortawesome/fontawesome-free/scss/solid.scss\";\n4) That will allow you to use Font Awesome like this:\n<i className=\"fas fa-check\" />\nJust in time: if you want to use FontAwesome as a component, look at their documentation that well explains how to import the JS files to put it to work.\nhttps://fontawesome.com/how-to-use/on-the-web/using-with/vuejs\nHope it helps and I've posted here because since last message some packages changed.. ",
    "OzzyTheGiant": "If you're using Vue CLI 3, @danielrsantana's method works, with no configuration needed, just add the sass code to your main.scss file. . ",
    "termosa": "Thank you! Fixed.\n@LinusBorg @eddyerburgh . ",
    "coderdiaz": "Sorry. \nError in my config env vars. \ud83e\udd26\u200d\u2642\ufe0f . @binarykitchen missing double quote on var, example: \nError\nAPI_URL: 'http://myservice.com/api'\nCorrect\nAPI_URL: '\"http://myservice.com/api\"'. The file for dev environment is config/dev.env.js. ",
    "binarykitchen": "i'm having this too - which config env var did you have wrong @coderdiaz ?. and where did you define that var @coderdiaz ?. ah ok, thx. ",
    "aflyingbird": "\u6d4b\u8bd5. ",
    "iamnewsea": "webpack4 !!!. ",
    "tecnoloco": "@LinusBorg how would it be the correct way to achive this? because in config/index.js there is a comment that says that host can be overwritten with process.env.HOST. Alright then, thank you for your respond.. ",
    "rubaiet": "Same issue here.. ",
    "Vitormdias": "Same issue here. ",
    "carvalhoviniciusluiz": "I removed the * -lock.json files and it worked, sorry the post. ",
    "marcinlesek": "For everyone looking for solution:\nAfter a bit I found, that changing cacheBusting: true to false in config/index.js help to solve that and now it's possible to change style in Chrome Dev Tools.\n```\n// file: config/index.js\n...\n// If you have problems debugging vue-files in devtools,\n// set this to false - it may help\n// https://vue-loader.vuejs.org/en/options.html#cachebusting\ncacheBusting: false,\n...\n```\nAnother solution here: https://stackoverflow.com/questions/49372717/broke-page-styles-of-vue-js-app-webpack-template-when-live-changing-it-in-chro\nHope this will help anyone! :)\nBest,\nMarcin. ",
    "kranzo": "He included vue-router because without he wont see the the '#'.\n\nLike this: http://localhost:8080/policy#/\n\nI think he is using links like  <a href=\"http://localhost:8080/policy\">Policy</a>   to navigate in his app.\nChanging it to  <a href=\"/policy\">Policy</a> or use router-link components should work properly.\nvue-router documentation (history-mode):\n\nThe default mode for vue-router is hash mode - it uses the URL hash to simulate a full URL so that the page won't be reloaded when the URL changes.\n\nThe url is split by the '#': [ server-request ] # [ in-app-routing ]\nThe docs provide information how to get rid of the '#', including additional server configuration (which will be required! ).\nThe issue is unrelated to the webpack template but the default config of the vue-router.. ",
    "papirovnyk": "add to your routes confog\nmode: 'history'\nexample:\nexport default new Router({\n  mode: 'history',\n  routes: [\n    {\n      path: '/',\n      name: 'yourPath',\n      component: yourComponent\n    }\n  ]\n}). ",
    "JesseDotEXE": "@papirovnyk Thanks that helped!. ",
    "dwfrost": "I also meet this problem, can vue-cli work?\n\n. ",
    "bobpappas": "Doesn't work for me.\nbpappas-281:Code bpappas$ vue init webpack fire-app\nUnknown command init.\nvue-cli \u00b7 Failed to download repo vuejs-templates/[object Object]: Response code 404 (Not Found). ",
    "lben": "If it helps anyone it seems that I had to do more steps detailed here:\nhttps://vue-test-utils.vuejs.org/en/guides/testing-SFCs-with-jest.html\nNow I am able to run the test of the HelloWorld.vue component without problems, nevertheless I am still facing issues on my component due to vuex. I am researching more about it. Ok, from the link I posted I ran all sections except the coverage one at the end of the page.\nOn the Configuring Babel for Jest I didn't replace the default .babelrc content because it started to give me errors (another unexpected token with the spread operator ...mapGetters)\nBut I am still stuck with vuex testing (EDIT: It seems that I solved the issue, I detailed it in the next comments). I created a dummy component and a dummy test to simplify things but I am not able to get values from vuex, if you have any idea of where could be the problem that would be great.\nMy dummy component is:\n```\n\n\nip: {{ ip_terminal }}\n{{ usuario }}\n{{ mi_dato }}\n\n\n\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'prueba-jest',\n  data: function () {\n    return {\n      mostrar: true,\n      mi_dato: 'Prueba Jest'\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'ip_terminal',\n      'usuario'\n    ])\n  }\n}\n\nand my dummy test is:\nimport { shallow, createLocalVue } from '@vue/test-utils'\nimport vuex from 'vuex'\nimport PruebaJest from '@/components/PruebaJest.vue'\nconst localVue = createLocalVue()\nlocalVue.use(vuex)\ndescribe('PruebaJest.vue', () => {\n  let getters\n  let store\nbeforeEach(() => {\n    getters = {\n      ip_terminal: () => '10.1.1.68',\n      usuario: () => 'eddy'\n    }\n  })\nstore = new vuex.Store({\n    getters\n  })\nit('verifies that I can use jest for testing', () => {\n    const wrapper = shallow(PruebaJest, { store, localVue })\n    expect(wrapper.html()).toContain('ip: 10.1.1.68')\n    wrapper.vm.mostrar = false\n    expect(wrapper.html()).not.toContain('ip: 10.1.1.68')\n  })\n})\nbut I am getting the following error:\nError: expect(string).toContain(value)\nExpected string:\n  \"ip:   Prueba Jest\"\nTo contain value:\n  \"ip: 10.1.1.68\"\n    at Object. (/home/bernardo/WebstormProjects/Autorizaciones/test/unit/specs/PruebaJest.spec.js:25:28)\n    at Object.asyncFn (/home/bernardo/WebstormProjects/Autorizaciones/node_modules/jest-jasmine2/build/jasmine_async.js:82:37)\n    at resolve (/home/bernardo/WebstormProjects/Autorizaciones/node_modules/jest-jasmine2/build/queue_runner.js:52:12)\n    at new Promise ()\n    at mapper (/home/bernardo/WebstormProjects/Autorizaciones/node_modules/jest-jasmine2/build/queue_runner.js:39:19)\n    at promise.then (/home/bernardo/WebstormProjects/Autorizaciones/node_modules/jest-jasmine2/build/queue_runner.js:73:82)\n    at \nAs you can see my shallow wrapper does not render the vuex getters on the template, do you have any idea where am I doing things wrong? Thank you!. Updating this issue I had to initialize the store inside the beforeEach in order to access the getters:\nbeforeEach(() => {\n    getters = {\n      ip_terminal: () => '10.1.1.68',\n      usuario: () => 'eddy'\n    }\n    store = new vuex.Store({\n      getters\n    })\n  })\n``\nNow the first expect passes:expect(wrapper.html()).toContain('ip: 10.17.13.68')but after changing the component's data the second expect does not pass:expect(wrapper.html()).not.toContain('ip: 10.17.13.68')`\nMy updated test is the following:\n```\nimport { shallow, createLocalVue } from '@vue/test-utils'\nimport vuex from 'vuex'\nimport PruebaJest from '@/components/PruebaJest.vue'\nconst localVue = createLocalVue()\nlocalVue.use(vuex)\ndescribe('PruebaJest.vue', () => {\n  let getters\n  let store\nbeforeEach(() => {\n    getters = {\n      ip_terminal: () => '10.1.1.68',\n      usuario: () => 'eddy'\n    }\n    store = new vuex.Store({\n      getters\n    })\n  })\nit('verifies that I can use jest for testing', () => {\n    const wrapper = shallow(PruebaJest, { store, localVue })\n    expect(wrapper.html()).toContain('ip: 10.17.13.68')\n    wrapper.setData({ mostrar: false })\n    expect(wrapper.html()).not.toContain('ip: 10.17.13.68')\n  })\n})\n```\nThe first time I call wrapper.html() I get the html as expected but the second time I call html() after the setData call I get undefined. Why is this? Thanks. I am sorry to clutter this issue too much but it seems that it is working now. I got undefined because the v-if didn't rendered anything but I was expecting a comment instead of undefined but updating the component's template to:\n<template>\n  <div>\n    <div v-if=\"mostrar\">\n      <p>ip: {{ ip_terminal }}</p>\n      <p>{{ usuario }}</p>\n      <p>{{ mi_dato }}</p>\n    </div>\n  </div>\n</template>\nshows that when mostrar is false wrapper.html is:\n<div><!----></div>\nso it is working fine, thank you. I think you can close this issue if you want.. ",
    "tzahiba": "solved it by adding chunks in the correct order in the HtmlWebPackPlugin.\nexample: chunks: [\"manifest\",\"vendor\",'dashboard'],. ",
    "josemotanet": "I've created a minimal example here: https://github.com/josemotanet/vue-webpack-bug-subfolder-build . Instructions are in the README.. ",
    "munierujp": "Sorry, It's mistake.... ",
    "rodrigorodriguescosta": "I think this issue is because the app is in subfolder on web server, I changed the config/index.js from assetsPublicPath: '/', to assetsPublicPath: '/mypath', but now showing this error\nI guess this is not related to that config\n\n. ",
    "lavanvickyneshwaran": "@LinusBorg  how to build apk in quasar ? \ni try to \n$npm run build \nnpm ERR! missing script: build\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     C:\\Users\\Thiluxsan\\AppData\\Roaming\\npm-cache_logs\\2018-04-24T07_32_57_586Z-debug.log\nbut i have some error massage\n i can't build whats problam? \nhelp me. ",
    "starzen": "just to add, if i manually fix the index.html file by moving the body section out of the HEAD section and adding a link to the CSS file the site works fine. looks like for some reason the index.html file was incorrect. The  line was commented out for some reason\n. ",
    "loama": "Maybe separating it into different components? 19 levels is a lot.. Sure there is a better solution (cleaner) but you could have a function that changes the Base url depending on the host.\nWhere you are declaring base_url have it inside some ifs or a switch.. ",
    "wasichris": "That's the only thing I can do right now. Actually the HTML is designed by another company, I don't feel it's normal but just wondering if the problem can be fixed or not.. ",
    "Meenakshise": "thanks for the reply. I got a solution in octopus itself and was able to fix it. . ",
    "trusktr": "Oops, I should've posted in pwa template repo.. ",
    "Radiergummi": "@gkatsanos I'm experiencing the same thing, though it seems to be limited to some components in my application. Since I'm currently at 250k lines of code, it's hard to estimate where this is coming from or create a reproduction app.... ",
    "uptownhr": "i am also getting the same problem. I'll try and provide some repo.. in my nuxt.config, i had \nextend (config, {isDev, isClient}) {\n      config.devtool = 'source-map'\n      config.resolve.alias['vue'] = 'vue/dist/vue.common'\n    },\nCommenting out the devtool line fixed the issue for me. Not sure if this is what the OP was referring to as anything but 'eval'. For me, even after commenting this out, I still see my sass sourcemaps\n. ",
    "rogersachan": "CC: @LinusBorg . Just for clarification, use vuepress build when you are in the docs directory. . @LinusBorg Is there anything I need to add to my pull request?. hey @LinusBorg is this still planned to be merged?. ",
    "paulgeisler": "While installation you can choose the package manager. In this case i took yarnbut at the end of installation the instruction says to use npm to start the app not yarn. I think it's inconsistent.\nIn some of my projects while working with other people we often had problems because of switching between npm and yarn. The system should lead devs to use only one package manager from the beginning on.. ",
    "Dylan-Chapman": "Any plans for vue-cli 3 in this?. ",
    "MehmetKursat": "I can't wait for this to be merged, also I wonder if I use the old version and then the new version of this comes, will I have to easily upgrade with npm install or something or is it better to wait for this to be released before i start on a new vue project?. ",
    "lucileFievet": "@jamesjieye ,\nI tried your command :\n\nvue init noamkfir/webpack copy_of_my_old_application\n\non my old application copy and I get this error message : \n\nModule build failed: \n@import './style.scss\"' in myvuefile.vue\n\nThis problem can be solved by setting a sccs  filter after js one in webpack.base.conf.js\ninclude: [resolve('src'), resolve('test'), resolve('node_modules/webpack-dev-server/client')]\n},\n{\n+        test: /\\.scss$/,\n+        include: [resolve('src')],\n+        use: [\n+          'vue-style-loader',\n+          'css-loader',\n+          'scss-loader',\n+          'sass-loader'\n+        ]\n+      },\n+      {\ntest: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/,\nI also tried to set the include: resolve('src') in utils.js  but it didn't worked ...\n```\n exports.styleLoaders = function (options) {\n     const loader = loaders[extension]\n     output.push({\n       test: new RegExp('\\.' + extension + '$'),\n+      include: path.join(__dirname, '..', 'src'),\n       use: loader\n     })\n   }\n```\nNow,  it seems I have a problem with components called by vue-rooting or with props ... ?\n\nThese relative modules were not found:\n\n./Checkbox.vue?vue&type=style&index=0&id=1f980e0b&scoped=true&lang=scss in ./src/components/formElements/checkbox/Checkbox.vue\n\n\nthe Checkbox.vue :\n```\n\n@import '../../../assets/vars/colors.scss';\n@import '../../../assets/mixins/checkbox.scss';\n\n\n\n\n\n\n\n\n\nexport default {\n  name: 'Checkbox',\n  props: {\n    id: [String, Number],\n    nativeValue: [String, Number, Boolean, Function, Object, Array, Symbol],\n    disabled: Boolean,\n    name: String,\n    size: String,\n    trueValue: {\n      type: [String, Number, Boolean, Function, Object, Array, Symbol],\n      default: true\n    },\n    falseValue: {\n      type: [String, Number, Boolean, Function, Object, Array, Symbol],\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'is-primary'\n    }\n  },\n  data () {\n    return {\n      newValue: this.nativeValue,\n      value: this.nativeValue,\n      checkClass: this.initClass()\n    }\n  },\n  methods: {\n    initClass: function () {\n      // console.log('initClass native val: ' + this.nativeValue + ', true val : ' + this.trueValue)\n      if (this.nativeValue === this.trueValue) {\n        return this.type + ' check checked'\n      } else {\n        return this.type + ' check unchecked'\n      }\n    },\n    check: function () {\n      this.checkClass = this.type + ' check checked'\n    },\n    uncheck: function () {\n      this.checkClass = this.type + ' check unchecked'\n    }\n  },\n  watch: {\n    /**\n     * When v-model change, set internal value.\n     */\n    value (value) {\n      this.newValue = value\n    },\n    /**\n     * Emit input event to update the user v-model.\n     */\n    newValue (value) {\n      // console.log('newValue val: ' + value + ', true val : ' + this.trueValue)\n      this.$emit('input', {id: this.id, name: this.name, checked: value})\n      if (value === this.trueValue) {\n        this.check()\n      } else {\n        this.uncheck()\n      }\n      // this.$parent.changeValue(this.id, value)\n    }\n  }\n}\n\n```\n. Hy @jamesjieye ,\nYes and it does work with default application. My code works with webpack 3.9... \nFinaly I don't think it is the router or props ... \nI think it is the way I import external sccs in scoped  style. It doesn't like the @import in style tag. \n(It is worse with vue-cli  :/) \nI 'll try a work arround.\nThanks anyway. ",
    "miaulightouch": "I update this pr to vue-cli 3, babel 7: https://github.com/miaulightouch/webpack\nand I post the pr here: https://github.com/noamkfir/webpack/pull/1\ntry it now: vue init miaulightouch/webpack#develop <project name>. @aksenovdev you can check my CI report here . @babel/runtime is missing for now. please  install @babel/runtime to resolve this issue, I'm inspecting the problem, maybe this is from upstream changes.. babel-core@6 include babel-runtime as dependency, but @babel/core(babel 7) not.\nalso, my CI keep @babel-runtime in workspace from unknown source (maybe previous builds?) and make all test passed, then only new created project would encounter this issue.\nnow, this template would include @babel/runtime if this pr get merged.\n@noamkfir . some of deps still using beta package, I would take time for updating these packages.\nand I would say in some case, like desktop app development, this template is still a good start.. is webpack-cli required for vue template?. ",
    "aksenovdev": "Hello, can someone check tests of project? I've some error when try run npm test in clean @miaulightouch template\ndebug.log\nconsole.log\nError:\n\n. @miaulightouch Yea, that helped, thank you). ",
    "huangsam": "Encountered the same issue as @aksenovdev with two test runners:\nJest:\n\nKarma + Mocha:\n\nErrors were the same regardless of running npm run test or yarn run test.\nNote: I ran vue init noamkfir/webpack test to initialize the project, once for each of the test runners I described above. This was run on a Macbook Pro 2017 with Node 10.4.1 installed via Homebrew.. ",
    "jacobg": "Does this work include the pwa support in vue cli 3.0?. ",
    "Garito": "Hi!\nI should be agree with @LinusBorg about the point of this template\nBut!\nThat doesn't mean that this ends here\nAs I see it you have a good amount of knowledge stacked since this project starts\nWhy don't use it to start small plugins that solves the same features but with the new cli?\nI bet you that you will come up with ideas as soon as you start to check what has been made so far\nI would like to thank you, too, for your work till now (I've started and not gone back till cli3 with the pwa which uses this one as base). I know but there's always something to do\nI'm trying not to be negative only while expressing my agreement with the idea of the obsolescence of this template\nIsn't easy to accept sometimes (we have jumped from project to project several times)\nBut always that I've changed my path because of this I carry new skills which help me start over\nI just can thank you. ",
    "mikeerickson": "As much as I applaud and like projects such as the Vue CLI, there is always room for options. I my case, we have taken the approach of iterating much of our UI forms from PHP to more API based and all new UI work is JS (we have used Angular, React and Vue). ",
    "leo-wj910729": "@LinusBorg  I know that vue-cli has a lot of configuration items, but how can vue-cli ensure that my project public files can exist every time I create them? I need to use some configuration of the meta files in the template to decide whether to use some plugins and file. thank you, you save me!. ",
    "yuicer": "well....will it be merged soon? or it still has some problems to do?\nthanks to all of you \uff1b\uff09. ",
    "ruchern": "Hi @LinusBorg , what is the status of this? It does looks good to merge now.. Old projects might still need this . This PR is great, but Webpack 5 is imminent and I am not sure if this will come effective by then. \nAlso, vue-cli is now v3 and this should be deprecated by now.. Translation: Add Vuex as a default package in the template.. @miaulightouch webpack-cli is required to be installed otherwise you get an error message squawking.. Is this needed since you are already using mode: production? \nAccording to the docs, they have removed UglifyJsPlugin.. ",
    "mjdietzx": "Any update here, would really like to updgrade to webpack4! Thanks for this PR!. @PanJiaChen i've been migrating my project to vue-cli@3 and it's amazing! so i actually don't need this anymore. ",
    "LeFnord": "is where any progress on it, like to have m\u00f6rged it, thanks. ",
    "limistah": "@afontcu I am currently experimenting the suggestion.. I have updated config/index.js and now have the devtool set to:\n...\nmodule.exports = {\n  dev: {\n    ...,\n    devtool: 'cheap-eval-source-map',\n    ...\n}\nSo far, I am having a positive result.\nAs the last resort, I will be using increase-memory-limit package.. ",
    "rowild": "AirBnb. I already adjusted the rc file and it is working now. \nBut for something that should work out-of-the box, there should be some info coming along, when the user selects the options.... Thanks! That is a very good tip! (It should be mentioned in the setup process, but I assume you are not one of the developers, are you?). ",
    "taylorren": "Same issue here. Very strange. . ",
    "lefuturiste": "Same issue. ok, but I have to disable also the DefinePlugin in webpack.dev.conf.js ?. ",
    "akoboy": "changed url to ~@/assets/ and worked. ",
    "giantthinker": "@akoboy you saved a life. \nThank you!. ",
    "chrislandeza": "Getting the same issue on fresh vue init webpack. ",
    "syniavskyi": "While trying ajax call, just do it on /api/test without localhost. ",
    "hgt803": "+1. @vueadmin copy it. ",
    "vueadmin": "@huangbao21 \nnpm install --save-dev prettier@1.12.0\nnpm run dev. ",
    "huangbao21": "@vueadmin copy it. ",
    "snuuve": "@ChadTaljaardt yup.. ",
    "dbwngud0321": "thanks for your comment\nbut, i tried your solution and still got an error. and this command is not available.\nmy node.js version is v8.11.2\nvue.js version is 2.9.3\n. ",
    "kingmario7": "Corrected in vue 2.9.5. ",
    "Doogiemuc": "Fist of all: You shouldn't do this :-)   All Devs in a team should use the same config as far as possible (maybe exept for some local ip adress settings, but even that is normally just \n\"localhost\")\nBut If you really need this, then you can introducee your own  config/local.env.js  file and then tell the dev-server.js to use these settings.  See https://github.com/vuejs-templates/webpack/issues/1410. I was Talking about the preconfigured tests in the /test/e2e/ Directory of this template. \nMeanwhile I found my own solution.  I wrote tests that Fan tun against ans Environment (local or  remote). ",
    "ctf0": "@DarwinniwraD  why not simply use https://www.npmjs.com/package/dotenv-webpack ?. ",
    "jlestel": "Hello did you find a way to resolve this ?\n. ",
    "karimmaassen": "For now, I resolve to mentioning all partial separately, but that should not be needed.\n// Partials\n@import \"partials/cubes\"\n@import \"partials/grid\"\n@import \"partials/game\". ",
    "wqb2017": "\nThe situation is the same as mine. Do you have a solution?. I remove node_modules  the dependencies and reinstall them. \nnpm install \no(\u2565\ufe4f\u2565)o. ",
    "rambavd": "Still no solutions? I am styling over Vuetify  components, and there is a ton of them...\nTo keep my file clean, though, I created a \"vuetify.styl\" file in my CSS folder, in which I imported every file I needed, so I could have a cleaner \"main\" style file.. ",
    "bennol": "Recording my solution here for anyone that might stumble across the same problem:\nI was unable to manually include the css inline into the static pages but I extracted them into a separate file (like it is done when you build for production). \nIn webpack.dev.conf.js I added the ExtractTextPlugin,\nconst ExtractTextPlugin = require('extract-text-webpack-plugin')\n\nSet the style loader extractoption to true\nmodule: {\n    rules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap, usePostCSS: true, extract: true })\n}\n\nAdded the ExtractTextPlugin before the HtmlWebPackPlugin of the static site \nnew ExtractTextPlugin({\n  filename: utils.assetsPath('css/[name].[contenthash].css'),\n  allChunks: true,\n}),\n\nnew HtmlWebpackPlugin({\n  filename: 'imprint.html',\n  template: 'src/assets/pages/imprint.html',\n  inject: false\n}),\n\nIncluded the stylesheet file in the imprint.html template's head\n<head>\n  [...]\n  <% for (var css in htmlWebpackPlugin.files.css) { %>\n    <link href=\"<%= htmlWebpackPlugin.files.css[css] %>\" rel=\"stylesheet\">\n  <% } %> \n</head>\n\nClosing issue.\n. ",
    "daizch": "Take a look at https://webpack.js.org/migrate/4/. I think this will help you.. ",
    "phil294": "Shouldn't this template use Webpack 4 anyway?. ",
    "MaximilianLloyd": "Anyone else successfully upgraded to webpack 4 with this template? Kind of struggling with this. . ",
    "erhansaydam": "I am struggling with this problem too. npm run build does not work. I can not find how to update the webpack.prod.conf.js file which uses CommonsChunkPlugin.\nI would be happy if anyone helps me to resolve this problem.. ",
    "lvzhenbang": "Need to use optimization.splitchunks, please refer to webpack example\u3002. Consider using \u2018code spliting\u2019, using \u2018require.ensure()\u2019  or \u2018import()\u2019  within code blocks.. ",
    "kelvinau": "For anyone who has the struggle of replacing CommonsChunkPlugin. Here is a diff of my working config. MiniCssExtractPlugin is also needed.\n```diff\ndiff --git a/build/utils.js b/build/utils.js\nindex e534fb0..9f2e26b 100644\n--- a/build/utils.js\n+++ b/build/utils.js\n@@ -1,7 +1,7 @@\n 'use strict'\n const path = require('path')\n const config = require('../config')\n-const ExtractTextPlugin = require('extract-text-webpack-plugin')\n+const MiniCssExtractPlugin = require('mini-css-extract-plugin')\n const packageConfig = require('../package.json')\nexports.assetsPath = function (_path) {\n@@ -45,10 +45,9 @@ exports.cssLoaders = function (options) {\n     // Extract CSS when that option is specified\n     // (which is the case during production build)\n     if (options.extract) {\n-      return ExtractTextPlugin.extract({\n-        use: loaders,\n-        fallback: 'vue-style-loader'\n-      })\n+      return [\n+        MiniCssExtractPlugin.loader,\n+      ].concat(loaders)\n     } else {\n       return ['vue-style-loader'].concat(loaders)\n     }\ndiff --git a/build/webpack.prod.conf.js b/build/webpack.prod.conf.js\nindex 8553bb0..a2c388b 100644\n--- a/build/webpack.prod.conf.js\n+++ b/build/webpack.prod.conf.js\n@@ -7,7 +7,7 @@ const merge = require('webpack-merge')\n const baseWebpackConfig = require('./webpack.base.conf')\n const CopyWebpackPlugin = require('copy-webpack-plugin')\n const HtmlWebpackPlugin = require('html-webpack-plugin')\n-const ExtractTextPlugin = require('extract-text-webpack-plugin')\n+const MiniCssExtractPlugin = require('mini-css-extract-plugin')\n const OptimizeCSSPlugin = require('optimize-css-assets-webpack-plugin')\n const UglifyJsPlugin = require('uglifyjs-webpack-plugin')\n const { VueLoaderPlugin } = require('vue-loader')\n@@ -28,6 +28,18 @@ const webpackConfig = merge(baseWebpackConfig, {\n     filename: utils.assetsPath('js/[name].[chunkhash].js'),\n     chunkFilename: utils.assetsPath('js/[id].[chunkhash].js')\n   },\n+  optimization: {\n+    runtimeChunk: 'single', // enable \"runtime\" chunk\n+    splitChunks: {\n+      cacheGroups: {\n+        vendor: {\n+          test: /[\\/]node_modules[\\/]/,\n+          name: 'vendor',\n+          chunks: 'all'\n+        }\n+      }\n+    }\n+  },\n   plugins: [\n     new VueLoaderPlugin(),\n     // http://vuejs.github.io/vue-loader/en/workflow/production.html\n@@ -43,14 +55,8 @@ const webpackConfig = merge(baseWebpackConfig, {\n       sourceMap: config.build.productionSourceMap,\n       parallel: true\n     }),\n-    // extract css into its own file\n-    new ExtractTextPlugin({\n+    new MiniCssExtractPlugin({\n       filename: utils.assetsPath('css/[name].[contenthash].css'),\n-      // Setting the following option to false will not extract CSS from codesplit chunks.\n-      // Their CSS will instead be inserted dynamically with style-loader when the codesplit chunk has been loaded by webpack.\n-      // It's currently set to true because we are seeing that sourcemaps are included in the codesplit bundle as well when it's false, \n-      // increasing file size: https://github.com/vuejs-templates/webpack/issues/1110\n-      allChunks: true,\n     }),\n     // Compress extracted CSS. We are using this plugin so that possible\n     // duplicated CSS from different components can be deduped.\n@@ -80,36 +86,7 @@ const webpackConfig = merge(baseWebpackConfig, {\n     new webpack.HashedModuleIdsPlugin(),\n     // enable scope hoisting\n     new webpack.optimize.ModuleConcatenationPlugin(),\n-    // split vendor js into its own file\n-    new webpack.optimize.CommonsChunkPlugin({\n-      name: 'vendor',\n-      minChunks (module) {\n-        // any required modules inside node_modules are extracted to vendor\n-        return (\n-          module.resource &&\n-          /.js$/.test(module.resource) &&\n-          module.resource.indexOf(\n-            path.join(__dirname, '../node_modules')\n-          ) === 0\n-        )\n-      }\n-    }),\n-    // extract webpack runtime and module manifest to its own file in order to\n-    // prevent vendor hash from being updated whenever app bundle is updated\n-    new webpack.optimize.CommonsChunkPlugin({\n-      name: 'manifest',\n-      minChunks: Infinity\n-    }),\n-    // This instance extracts shared chunks from code splitted chunks and bundles them\n-    // in a separate chunk, similar to the vendor chunk\n-    // see: https://webpack.js.org/plugins/commons-chunk-plugin/#extra-async-commons-chunk\n-    new webpack.optimize.CommonsChunkPlugin({\n-      name: 'app',\n-      async: 'vendor-async',\n-      children: true,\n-      minChunks: 3\n-    }),\n-\n+ \n     // copy custom static assets\n     new CopyWebpackPlugin([\n       {\n```. ",
    "freddysidauruk": "hey i have same issue, how do you solved it ?. ",
    "kamaleshsivaraj": "thank god i solved the issues..by npm cach\n\ne clean --force command ..this what i fixed.. . ",
    "Ahmed-Gamal-Helal": "run the command as administrator and it will be solved.. ",
    "bhavik204": "Node version - 10.14.1\nnpm version - 6.4.1\nCleared cache in cmd as administrator and  also in Powershell as administrator and installed @vue/cli , but showing same error of json input.. ",
    "shayneo": "Same issue here, was able to resolve by adding\ntestEnvironment: 'node' to jest.config.js. ",
    "scriada": "Based on the link in @bigtunacan 's original comment I was able to resolve this by adding:\njs\ntestURL: 'http://localhost'\nto the jest.conf.js file. \nI also noticed that this filename doesn't match the default jest config filename (should be test.config.js) so jest won't pick it up without an explicit --config argument.. ",
    "agirorn": "When I added testEnvironment: 'node' as @shayneo suggested to a new project. I got the tests running but the following error.\n```shell\n\nvue-webpack@1.0.0 test /home/agirorn/code-play/vue-webpack                                                                                                                                                                                \nnpm run unit && npm run e2e                                                                                                                                                                                                                 \nvue-webpack@1.0.0 unit /home/agirorn/code-play/vue-webpack                                                                                                                                                                                \njest --config test/unit/jest.conf.js --coverage                                                                                                                                                                                             \n\n\u25cf Deprecation Warning:                                                                                                                                                                                                                        \nOption \"mapCoverage\" has been removed, as it's no longer necessary.                                                                                                                                                                         \nPlease update your configuration.\nConfiguration Documentation:\n  https://facebook.github.io/jest/docs/configuration.html\nFAIL  test/unit/specs/HelloWorld.spec.js\n  HelloWorld.vue\n    \u2715 should render correct contents (14ms)\n\u25cf HelloWorld.vue \u203a should render correct contents\nTypeError: Cannot read property 'querySelector' of undefined\n\n   6 |     const Constructor = Vue.extend(HelloWorld);\n   7 |     const vm = new Constructor().$mount();\n>  8 |     expect(vm.$el.querySelector('.hello h1').textContent)\n   9 |       .toEqual('Welcome to Your Vue.js App');\n  10 |   });\n  11 | });\n\n  at Object.querySelector (test/unit/specs/HelloWorld.spec.js:8:19)\n\n```\nBut when I add the testURL: 'http://localhost' as @scriada suggest everything runs fine.. ",
    "Tiboonn": "I have fixed the problem.\nI updated to the new Vue cli 3.0 and started from scratch with my project.. ",
    "EventTarget": "\u4f60\u628a\u4f60\u7684\u914d\u7f6esass\u90a3\u6bb5\u5220\u6389\u5c31\u597d\u4e86. ",
    "pixelass": "I'm not sure if all features still work with these changes. I use this and it works great for my needs. \nI updated my .babelrc to this: \njson\n{\n    \"presets\": [\n        \"@babel/env\"\n    ],\n    \"plugins\": [\n        [\n            \"@babel/plugin-proposal-decorators\",\n            {\n                \"legacy\": true\n            }\n        ],\n        [\n            \"@babel/proposal-class-properties\",\n            {\n                \"loose\": true\n            }\n        ],\n        \"@babel/proposal-object-rest-spread\",\n        \"babel-plugin-transform-vue-jsx\",\n        \"@babel/plugin-transform-runtime\"\n    ]\n}\nand my package.json: \njson\n{\n  \"devDependencies\": {\n    \"@babel/core\": \"7.2.2\",\n    \"@babel/plugin-proposal-class-properties\": \"7.2.3\",\n    \"@babel/plugin-proposal-decorators\": \"7.2.3\",\n    \"@babel/plugin-proposal-object-rest-spread\": \"7.2.0\",\n    \"@babel/plugin-transform-runtime\": \"7.2.0\",\n    \"@babel/polyfill\": \"7.2.5\",\n    \"@babel/preset-env\": \"7.2.3\",\n    \"babel-helper-vue-jsx-merge-props\": \"2.0.3\",\n    \"babel-jest\": \"23.6.0\",\n    \"babel-loader\": \"8.0.5\",\n    \"babel-plugin-dynamic-import-node\": \"2.2.0\",\n    \"babel-plugin-syntax-jsx\": \"6.18.0\",\n    \"babel-plugin-transform-vue-jsx\": \"3.7.0\",\n    \"@babel/register\": \"7.0.0\",\n  }\n}\n. ",
    "lee-alderdice": "Having this issue today too.  So if I read that right the vm has not mounted correctly and therefore the class and element are not available?. ",
    "bzsozsy": "I have the same issue. Any solution?. ",
    "sayyes566": "use yarn serve. @mtbotherd \nsudo apt-get update && sudo apt-get install yarn.\nyarn global add @vue/cli. ",
    "mtbotherd": "When using yarn serve I get command not found.. ",
    "cristiangiagante": "this is still bugged, some news about it?. ",
    "jonashackt": "With the new Vue CLI 3, the templates of Vue.js are now legacy (this should be somehow noted in the README of this project here!).\nA shift to the new Plugin architecture of Vue CLI 3 (see https://cli.vuejs.org) will automatically do the upgrade to webpack 4.x etc.. If you want to have a full blown example, you can have a look at https://github.com/jonashackt/spring-boot-vuejs - where I only recently updated to Vue CLI 3 and webpack 4, mainly in this commit: https://github.com/jonashackt/spring-boot-vuejs/commit/61778f66ca33ae9fba814ab12884611d72642724. ",
    "lovetingyuan": "well, thanks. ",
    "sylhare": "Allo \nFor me #1424 using the testURL: 'http://localhost' in the jest.config.js did the trick. Updating did not solve the problem.. ",
    "huxianghe": "is that a vue  test and demo\uff1f\n\u53d1\u81ea\u6211\u7684 iPhone\n\u5728 2018\u5e748\u670813\u65e5\uff0c16:40\uff0cRobert notifications@github.com<mailto:notifications@github.com> \u5199\u9053\uff1a\nIf I understand correctly the *.env.js files under config/ include each other via webpack-merge in this order:\ntest => dev => prod\nThis would mean, that the test actually use the dev settings. Shouldn't tests run (as much as possible) against the prod settings. And only change/override a few config settings?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://github.com/vuejs-templates/webpack/issues/1435, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AhS_k2ioG5ih0yOwQ7CzUJcpSCl2p6nMks5uQTtsgaJpZM4V6GYy.\n. ",
    "NoBrainer": "Wrong repository. Sorry about that.. ",
    "InvincibleJun": "\nI don't think this issue tracker is meant to be used as a support option. But itsn't it because of minChunks: 3 in CommonsChunkPlugin. It essentially will only placed it in a seperate chunk if 3 chunks uses it. If only 2 it will not do that. If you setr minChunks to 2 that would probably do it for you. But that could have other consequences.\n\nthe vendor file size did not changed, but it hash value  changed.  . ",
    "markluo123": "wewe. ",
    "shirshak55": "i havd done clean install. there should be some issue with airbnb standard\nOn Sat, Sep 29, 2018, 9:13 PM Nfer Zhuang notifications@github.com wrote:\n\nplease check you .eslintrc file, do it has below config:\n// disallow reassignment of function parameters\n// disallow parameter object manipulation except for specific exclusions\n'no-param-reassign': ['error', {\n  props: true,\n  ignorePropertyModificationsFor: [\n    'state', // for vuex state\n    'acc', // for reduce accumulators\n    'e' // for e.returnvalue\n  ]\n}],\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/1449#issuecomment-425653425,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHuOYeive5EXXQuNaJOpcIg0aUCBZ_-4ks5uf5GJgaJpZM4W8tBJ\n.\n. and there is no such config and ususally i dont like hacks because in\nfuture it may be hard to maintain. Is there no effective solution\n\nOn Sun, Sep 30, 2018, 1:50 AM shirshak bajgain shirshak55@gmail.com wrote:\n\ni havd done clean install. there should be some issue with airbnb standard\nOn Sat, Sep 29, 2018, 9:13 PM Nfer Zhuang notifications@github.com\nwrote:\n\nplease check you .eslintrc file, do it has below config:\n// disallow reassignment of function parameters\n// disallow parameter object manipulation except for specific exclusions\n'no-param-reassign': ['error', {\n  props: true,\n  ignorePropertyModificationsFor: [\n    'state', // for vuex state\n    'acc', // for reduce accumulators\n    'e' // for e.returnvalue\n  ]\n}],\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/vuejs-templates/webpack/issues/1449#issuecomment-425653425,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AHuOYeive5EXXQuNaJOpcIg0aUCBZ_-4ks5uf5GJgaJpZM4W8tBJ\n.\n\n\n. \n",
    "litterboys": "command ctrl + c  stop the port 8080, command 'npm run dev'  again. ",
    "alvinisasi": "\ncommand ctrl + c stop the port 8080, command 'npm run dev' again\n\nthank you it is work. ",
    "RohanTalip": "I seriously doubt that the failing tests are due to my documentation change.. ",
    "Syler921": "Solution refference:  https://github.com/vuejs/vue-cli/issues/2948 . ",
    "yyd1142": "updae my template demo. ",
    "superlulu": "Wow, that was simple. removing - mv public public-vue from the script since there is no public folder does the trick. Closing this.. ",
    "Moln": "Oooops! Post wrong.. ",
    "rascada": "Sure. I'm using jscs hence this blank lines.\n. ",
    "YamiOdymel": "it's now \"vue\": \"^2.0.0-rc.3\"\n. ",
    "vuchl": "Added 2 commits. should be clean now\n. ",
    "mbicknese": "Great, will update!\n. Yes, ESLint does not allow for globals to be used. As it is dependent on the environment wether the globals exist or not. Something ESLint cannot know about within the IDE or CLI. So we need to tell it manually browser globals can be used, which is save since karma always runs in a browser.\n. I'll have to look further into this. Using Yarn for just running this task seems like a dirty solution. If you want to go down that path I'd advice to ditch NPM completely.\n. ",
    "littlehaker": "I agree. However, it's very unfriendly to throw errors when using official library Vuex.. ",
    "thangman22": "Ok I'm done. ",
    "rohmanhm": "This line looks not documented well.. ",
    "bajras": "Hi there, Im trying to do the similar case to remove unused CSS from Vue webpack template. I have post css and css @imports in my single component file. When I use what you have done here, i dont see its removing all the unused CSS. . ",
    "KarboniteKream": "You have a typo in the stylelint URL.. ",
    "yibuyisheng": "\nIs the idea to simply add it to the styleLoader code like this?\n```js\n// in webpack.base.conf.js:\nrules: utils.styleLoaders({ sourceMap: config.dev.cssSourceMap, usePostCSS: true })\n```\n\nYes, I think the usePostCSS config should be set in the webpack config file.. ",
    "championswimmer": "not needed anymore I presume. ",
    "nelsonjchen": "s/You/Your/. ",
    "mdvorscak": "What about ChromeHeadless instead? It's better for CI. ",
    "SYip": "Should change the file name to main.ts?. ",
    "zevdg": "I can't find any documentation on this enforce option? \nhttps://webpack.js.org/plugins/split-chunks-plugin/#splitchunks-cachegroups. "
}