{
    "RuedigerMoeller": "Whole site is messed up. Link on front github project leads to a corrupted version of your home page. Can't find java version ...\n. ",
    "codahale": "I've changed metrics.codahale.com to redirect to dropwizard/metrics.\n. You'll need to track the number of requests separately.\n. I think you'd be better off using two counters\u2014one for requests and one for responses. This gives you the ability to plot a cumulative flow diagram of your service, from which you can determine not just the queue size\u2014the number of active requests\u2014but also the queue delay, the arrival rate, and the departure rate. These parameters allow for robust modeling of your service via Little's Law.\nThe main problem with the Java library is that I wrote it to work with the dumbest aggregation layer around, Ganglia. Ganglia just takes data and puts it in an RRD. At the time you couldn't effectively combine data streams, so I wrote Metrics as essentially a graphing engine\u2014to produce the various data streams that I wanted graphed in order to know what my services were doing at runtime. This library is intended to be something different.\n. Thanks!\n. Thanks!\n. Thanks!\n. Thank you!\n. Awesome, thanks! I\u2019ll add a comment to make sure it doesn\u2019t get removed in the future.\n. You're looking for dropwizard/metrics. This is a Go library.\n. Thanks!\n. Closed by bc2005d. Again, thanks!\n. Thanks for the diagnosis and fix, @ksedgwic!\n. ",
    "korbjt": "I see you beat me to it.\n. ",
    "AlekSi": "I thought it over and I think that my use case is quite common \u2013 there are more things to count with increments and decrements, which are not counted separately. Also, Java Metrics has inc() and dec() in Counter \u2013 probably because they are useful. I think that adding AddN() or Inc() to Gauge will be okay. Will you accept a good pull request?\n. ",
    "xiang90": "@codahale Thank you.\n. ",
    "adrianco": "Thanks, that was actually my first ever pull request on github :-)\n. ",
    "ksedgwic": "16 fixes this issue.\n. > Just curious, did you try with https://github.com/sasha-s/go-deadlock?\nNo, we figured it out by looking at a goroutine dump from the deadlocked process.\nThe go-deadlock project looks cool, thanks for pointing it out!\n. ",
    "tbg": "Just curious, did you try with https://github.com/sasha-s/go-deadlock?\n. LGTM (but I'm just randomly here and have no power).\n. "
}