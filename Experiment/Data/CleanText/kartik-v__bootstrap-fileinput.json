{
    "kartik-v": "The plugin is limited by the HTML5 file-input features and behavior - for which all files need to be in the same folder. \nA valid requirement - but unfortunately cannot be supported by the plugin at this stage as the assumption is to use as much of HTML and CSS features only.\nMaybe, this could be a case for rewriting entirely another plugin (but there are lots out there using SWF/flash - which should do this).\n. Maybe this could be useful.\nAn alternative method of selecting files for users - is to DRAG and DROP files from your folders to the  BROWSE BUTTON area.\nI may try to work on extending this feature by allowing a specified  drop zone for users to drag and drop files.\n. Set showPreview to false.\njavascript\n$(\"#input\").fileinput({showPreview: false});\nOR using data attributes\nhtml\n<input id=\"input-1\" type=\"file\" data-show-preview=\"false\">\n. Pushed in a fix... you can check and let know... you can also use data attributes to control this action something like:\nhtml\n<input id=\"input-1\" type=\"file\" class=\"file\" data-show-preview=\"false\">\nYou can check an example in the basic usage demo.\n. You can do this definitely more easily through the server code (PHP/Ruby etc) that renders the form containing the fileinput.\nif ($uploadedImageExists) {\n    // render an image with remove button action\n}\nelse {\n   // render the bootstrap-fileinput\n}\nThe plugin can include an option like showDefaultPreview. The only challenge is, the FileInput only can push files one way (from client to server). It cannot read files from server. So if you overwrite an upload... you will need to write your own tricky validation to delete the previous uploaded image with the new one.\n. This needs a bit of discussion on the various use cases and if it make really useful to every user?\nDisplaying a previous image or set of images with showDefaultPreview is relatively straightforward. What are the use cases after you have this preview done... with regards to the FileInput plugin:\n- will a user want to overwrite the uploaded image?\n- will you want to append a new uploaded image to a previous preview list of files?\n- will you want to do a mix of both or handle complex use cases like selectively deleting a set of images and then upload additional ones.\nIn almost all cases above... the task is actually not entirely related to a file input. It requires a separate code to create a image/file gallery from the database and server and enable CRUD option for each file. The scope of the plugin largely revolves around enabling capturing of file inputs from client for pushing to server and limited by what HTML5 file inputs are capable of.\nHaving said that. the idea of previewing a previously stored image is probably justified and I will attempt reviewing this as an enhancement to the plugin. \nWould need ideas/discussions on what happens after this for various use-cases.\n. Closed with new release. Plugin upgraded to v1.5.0. \nTwo options have been added:\n- initialPreview\n- initialCaption\nRefer docs and demo for usage.\n. The HTML markup in the preview is different for an image, text, or other binary file - the CSS classes as well. \nDid not want to complicate this and give the developers the control on this. Even for an image or other preview files, other properties like alt, title, tooltip etc. can be set more easily within a markup. Its more simpler to type the HTML markup than passing all of these as params and then run a logic to create the markup.\n. Refer the documentation sections for usage for initialPreview and initialCaption.\n. Need to check how you initialize the plugin with bootstrap tabs.\n. I have checked this plugin works with bootstrap tabs perfectly fine. In case you are rendering this input via ajax -- you may need to sequence your plugin initialiation after shown.bs.tab event is fired.\n. Its nothing to do with the plugin but for the HTML5 file input... you need to use array format for your input name so that PHP/server code can understand that these are multiple files.\nFor example:\nhtml\n<input name=\"imagefile[]\" type=\"file\" multiple=\"true\">\n. Upgrade to version 1.6.0 of the plugin. You can use the refresh method for all such needs.\nThe demo site is updated. Check the last example in advanced usage.\n. Resolved via latest commits fd228b1, 1f38673, and 2377e74.\n. Yes - this is how the default HTML file input behaves. This plugin is unfortunately limited by the features offered in default HTML file input. You can do only one set of file selections each time. It always overwrites the selection.\nOne suggestion is that you can use drag and drop of files into the File Input (this is recognized as well). In this case, you select a set of files on your client first, and then drag them in.\n. Resolved via latest release v1.8.0.\n. Yes. The initial caption has been intended for display only when there is an initial preview. \nIs there any reason why you want to show an initial caption without an initial preview? The caption is intended to be a label for the selected/displayed file(s).\nWill need to check the initial caption being set - after file selection.\n. Recording this as an enhancement for fix.\n. This enhancement is incorporated with the latest release v1.9.0. You may upgrade after sometime. You can now set an initial caption without initial preview this way:\njs\n$(\"#file-1\").fileinput({\n    initialCaption: 'Initial_File.pdf',\n    overwriteInitial: false\n});\n. Behind the scenes its a simple HTML file input (which is wrapped with all the styling enhancements in this plugin). You can thus read all the inbuilt events in a normal HTML file input. \nIn other words, you could achieve an upload as soon as a file is selected, using something like below:\nphp\nvar $input = $('input[type=file]'); // select your file input\n$input.on('change', function() { \n    // select the form and submit\n    $input.closest('form').submit(); \n});\n. Its an elaborate list - its good if we break this up into multiple issues.\nWith regards to custom removal or adding other actions - you can read through a few other properties in the plugin ... especially using templates. With this you can add in your own custom button to the input group this way below:\njs\n$(\"#input-23\").fileinput({\n    showUpload: false,\n    mainTemplate:\n        \"{preview}\\n\" +\n        \"<div class='input-group {class}'>\\n\" +\n        \" <div class='input-group-btn'>\\n\" +\n        \" {caption}\\n\" +\n        \" {browse}\\n\" +\n        \" <button type=\"button\" class=\"btn btn-default btn-remove-cust\">Remove all</button>\\n\" +\n        \" {remove}\\n\" +\n        \" </div>\\n\" +\n        \"</div>\"\n});\nThen you write your own javascript code on click of the button to call an ajax call to remove all files - and refresh your fileinput plugin.\njs\n$('button.btn-remove-cust').on('click', function(e) {\n    // your custom removal code\n   ...\n   // refresh your fileinput plugin\n   $('input.file').refresh(params);\n});\n. > During my tests I have found 2 problems about the disable/refresh option.\n\nWhen I disable/enable my fileinput I can't use the remove button anymore (nothing happen). The same problem appears in your demo.\n\nCannot understand your problem. The disable works fine on the demo. Can you elaborate?\n\nAnd I have another problem: when we disable the input it removes all the previews (because it reloads the html I think). It seems not normal for me, when I disable the other fields the values remains. Do you think you can make some modification in order to keep the data ?\n\nThis looks like a problem with your button markup that you click to disable your input. Note by default an HTML button type defaults to submit (this will reload your page on click) . You must implicitly declare the markup for a simple button type as below:\nhtml\n  <button type=\"button\" class=\"...\">Disable</button>\n. Please create separate issues for each of your problems.\n. @zephyx thanks for your inputs. \nYes it will be great, if you can submit these enhancements as a PR.\n. thanks... will check and update\n. Closed via release v2.0.0 with various new modifications. Refer CHANGE log for various new features added. The readme is also updated. The demo site will also be updated a bit later.\n. Yes. The objective of the plugin refresh method is to reinitialize the input and the fileinput plugin dynamically with fresh set of settings. So, yes, all of your plugin options will be reinitialized with the new settings that you set before calling refresh (which means you cannot get the preview that was cached earlier) - but you can call any static code or image markup.\nProbably I can look at checking if there can be a separate disable method when I get time. \n. Closed via release v2.0.0 with various new modifications. Refer CHANGE log for various new features added. The readme is also updated. The demo site will also be updated a bit later.\n. Closed via release v2.0.0 with various modifications. Refer CHANGE log for various new features added. The readme is also updated. The demo site will also be updated a bit later.\n. Closed via release v2.0.0. Refer CHANGE log for various new features added. The readme is also updated. The demo site will also be updated a bit later.\n. This will require incorporating additional checks for parsing FileReader API exceptions. Am recording an enhancement for next release.\n. I would suggest in the interim - for large file size handling - use the maxFileSize property. Read about it in the documentation. You can check an example of its usage.\nI will create a new enhancement request separately for the exception handling.\n. Check #17. Enhancements added with upgraded release v2.1.0. You can setup maxFilesCount to control the number of files which user uploads. The performance has been enhanced for loading image files for preview. \nHowever, note if the number of files is large - then the performance or stability would depend on how the browser caches it in the client memory (since the FileReader API uses asynchronous loading). Hence to prevent any browser generated memory leaks - its recommended to tune it using the maxFilesCount property.\n. Closed with upgrade to release v2.1.0\n. Have provided a different fix. You can check and let know.\n. @akimad cannot replicate your problem... can you elaborate what are you trying to do with screenshots? Also mention which browser version you are on.\n. This is fixed with the latest commit. \n. Closed via commit 729ec7c\n. This is the correct expected behavior - and a fix incorporated for #19. The situation is after you have a file selected (shows in preview) and you try to browse again for another file. After clicking the browse button, if you do not select any file but press cancel in the file dialog, the internal HTML File input clears the value as null. But the problem you now have is the preview is not cleared at that stage and the server will not receive any file for upload if you submit now. So whenever you press the browse button - your old input is anyway cleared - hence the right approach is to clear the preview on every browse button click - so its overwritten.\nIf you have an initialPreview content configured and overwriteInitial set to false - the preview will still be shown always with the initial content.\n. Safari 6.0 and later versions only support the HTML5 FileReader API. \nA minor fix has been provided in the latest commit to gracefully downgrade the plugin to a normal fileinput for older browsers.\n. Related to Fix #24. You need to upgrade to latest version.\n. > i tried with this plugin. its really simple to use.\nThanks  - yes that is the objective behind the creation of the plugin - keep it simple, leveraging upon inbuilt HTML5 file input functionality with some CSS and JS.\n\nThere is a option to remove added files. if i click it its deleting all the files. But i just want to delete selected file only\n\nThe features of file selection are limited by what HTML default file input offers. The HTML file input does not offer you to selectively remove files NOR append files to already selected files. It always by default overwrites what is selected.\nYou have an option to use drag and drop method (though it does not resolve the problem of multiple folders to be browsed). But it is an alternative method to select multiple files from your local client directories and then drag them to the file input browse area.\n. Tracked through issue #29. Closing this.\n. Resolved via update to release v2.3.0. Refer updated docs/demos.\n\nNote: Flash preview works successfully currently only with webkit browsers like Chrome due to its unique local url support for embedding. Video files are however supported by all modern browsers (with only formats supported by HTML5 video tag).\n\nYou can check for a few VIDEO files in the examples directory to test your previews. Watch out for performance with large video files.\n. Resolved with release v2.4.0 - new preview support for html, video, audio, flash and object types.\n. Closed with release v2.4.0. Templates are made configurable in one combined object.\n. Thanks. Could you push in the minified js as well to the repo in the same PR from here. You can edit the fileinput.min.js and just replace the minified part of the code (retaining the comments).\n. Thanks.\n. Closed with release v2.4.0.\n. Cannot be replicated. Check your code/page for other javascript errors, and ensure you have the updated version of the plugin. I assume you are NOT using custom templates (passing a value to one of the template props). If so, you need to note there is a major BC breaking change in v2.4.0 as to how you should pass templates.\nYou may check the demo page for an usage OR the index.html in the examples folder.\n. Just read it on your server like you would read any normal HTML File Input. Test your code with a normal file input first - and then try the same with the plugin.\nAn example of server code for using this FileInput plugin in PHP using Yii Framework can be referred here.\n. Fixed with upgrade to release v2.5.0.\n. Fixed with upgrade to release v2.5.0.\n. Fixed with upgrade to release v2.5.0.\n. Closed with upgrade to release v2.5.0.\n. This is a problem with IE browser only (all ver < IE11) which does not allow to reset/clear file inputs like other browsers. A fix is being provided shortly.\n. Clear your browser cache, any stale assets, restart client and retry.\n. Before I discuss on code change, just hope you understand on using INPUTS within Yii MODEL and ActiveForm:\nWith model\n\nThe name attribute has special significance when using yii model methods from your controller and is generally auto generated - (e.g. its used by $model->load and will not work if the naming is not consistent).\nYou normally can override the input id instead - for any use in your client scripts/calls. Any specific reason why you wish to override name?\n\nWithout model\n\nYou can setup your own input name or input id.\n\nYour use case normally should fit into one of the above. If not let know.\n. This is the wrong repo. It will be resolved via yii2-widgets issue 172.\n. The validation error message is currently displayed inside the preview window.\nTry with showPreview set to true.\n. Will note an enhancement request for the scenario when showPreview is false. You still can edit the preview templates to achieve what you need... but you may want to wait for this update.\n. Resolved via upgrade to release v2.6.0. Get the latest code. There is a new property elErrorContainer. You can set it to an identifier like #error-div or .error-class.\nCheck the last example in advanced section at the demo site for usage details.\n. Which client OS, browser, and browser version?\nCannot replicate this on my tests.\n. You can check and confirm based on this fix now.\n. Above problem only with Chrome (webkit). Anyway its fixed now.\n. Cannot be reproduced. Please check and debug your settings and let know. Hope you are able to view the demo site on IE10?\n. I think this issue could be related to the fix for #40.\nThe problem is IE10 and below does not allow you to clear the file input. All other browsers do allow this. If I remove that fix, then this problem you are facing may not occur - but the input will not be cleared on removal of file - resulting in wrong form submission.\nI will try to provide an updated fix on this.\n. You can check now and let know.\n. Is this error received during file upload OR during initial preview?\nIf during file upload... what is the name of your client file... is it something like http://... that you have in the first line of the error?\n. Also confirm if you have the latest version of the plugin code.\n. Ok so you have a older version.\nThis is fixed in the latest release v2.6.0 as discussed in issue #43.\n. - Can you check and let know if it works on the demo site?\n- Any other steps to reproduce the error.\n. Bootstrap Fileinput Plugin demo site.\n. Yes since it works on the demo site -- you may have to check your local client assets (and javascript) and if your browser version, settings or cache is a reason.\n. >  I am not using showPreview. I attach to the fileloaded event like so in my bindingHandler:\nResolved via latest commit. You may check and let know.\n\nAlso, if all goes well I may post back my Knockout Binding Handler to extend your project.\n\nYes please post as an extension - if needed I may add this as plugins to the extension.\n. Resolved via upgrade to release v2.8.0.\n. Resolved via upgrade to release v2.8.0.\nThe plugin will dynamically auto size file captions for long file names exceeding container width. New property autoFitCaption is added which defaults to true. When this is true the plugin will auto fit caption text within the container dynamically  and responsively based on window size.\n. Resolved via upgrade to release v2.8.0.\n. Resolved via upgrade to release v2.8.0.\n. I hope you understand the reason for the expected behavior. \nThe HTML native file input can push data only one way. It cannot read or edit older data like other HTML inputs. You need to handle such situations separately (beyond the scope of this extension). However, the plugin does help you with events, customizing layouts, adding new buttons, to handle such custom scenarios.\nWith regards, why the older file selection is cleared when you click browse button ... refer issue #19. \nIts the inherent behavior of the HTML native file input which automatically clears the files selected whenever you click the input and cancel the file dialog.\nHence the selected file preview is cleared for this reason. If this is NOT DONE you will end up with an empty $_FILES array on form submission - but preview shows the old image. Its done for a logical reason to mimic the HTML file input functionality (unfortunately the plugin is limited by HTML file input functionality at this stage).\n. Will consider this as an enhancement.\n. Can you also update and submit the minified version of the js file with the PR by running it through here.\n. Thanks.\n. Can you confirm on testing the scenario when clearOnBrowse is set to false. Is the preview overwritten if new files are selected? It technically should - but please confirm.\n. Did check it... works on Chrome--- but does not on Firefox..  need some testing and tweaking to ensure it works on all browsers. Try this out on Firefox...\n- Selected files first. Exited browse \n- Selected files are displayed in preview window\n- Clicked browse again and then cancelled dialog without selecting. \n- The old preview is still shown\n. I would also suppose you need to use self.clear(false) instead of self.reset() on file dialog cancel.\n. Yes reset takes back to initial state.\nIf overwriteInitial is true then this will behave incorrectly - because you would have overwritten files with one iteration and it will show the new file. Then the second iteration you pick and press cancel... it does not cancel... instead it reverts you back to initial state showing the files you had set initially when page loaded ... which is probably not what user expects.\nYou can just use self.clear(false) which should suffice, because the rest of the things will be taken care by the native input (of clearing the value).\n. Yes.. that's correct - if  you need such a use case.\n. Can you confirm that the file input is not cleared for other browsers on dialog cancel... by testing a form POST submission? It probably could be that the change event is not triggered on these browsers like Chrome but the file input value is reset/null.\nIf its only the behavior we see in Chrome (and the rest browsers behave ok on CANCEL without clearing input) - a fix can be thought of.\n. Yes... the objective is to see if Chrome does not clear the file on change event somehow.\n. Will test (refine if needed) and update docs. Thanks. \n. Its a bit hilarious if you check the background of this issue on the Chrome development forum. This behavior of file input getting cleared on file dialog CANCEL started as a bug... it was rectified in one interim release. Surprisingly this unexpected behavior - was requested as a feature parallely in Firefox Development. Chrome developers then seemed to have reverted this behavior in the subsequent release, while other browsers have not done any changes yet probably.\n. Resolved via upgrade to release v2.9.0.\n. Thanks.\nI recommend you read the documentation. Check the options section. You have options like browseLabel, removeLabel etc. which you can configure for your scenario. You can also setup the template sections for advanced usage.\n. A new property textEncoding has been provided for reading text files. It defaults to UTF-8. You need to check with other settings (e.g. UTF-16), if you need other special chars.\nResolved via upgrade to release v4.1.1.\n. The UTF-8 encoding is only for previewing text files not for the names of files.\nWhat you are mentioning is the file name which is displayed in the file caption? Note that the plugin uses a slug routine to replace all special characters so that the caption can be properly parsed by javascript and also properly displayed as a valid HTML.\nYou can override this by using your own callback function for generating the file caption using the slugCallback property.\nRefer a related discussion #64.\n. Similar query received earlier as well. Let me reiterate... this is unfortunately at this stage not in the scope of the extension. The plugin is intended intentionally to be SIMPLE and USE basic HTML5 features to achieve the interface you see. Basically this is an enhanced wrapper for the HTML5 file input using the HTML5 FileAPI via javascript. It is not intended to have any OVERHEADS of queuing files,  or using FLASH or XHR2 or FormData (all of these do not have cross browser/device support OR they may affect security and involve tampering into client access or have significant performance overheads). There are many other plugins that allow you to  do this though if you do a search for file upload plugins.\nThe native HTML5 FileInput is readonly (so you cannot selectively edit or delete files). The FileList object is readonly as well and cannot be modified with the FileAPI. Why? Read a similar query here or here.\nThe plugin exposes you to various events and style the input and sections using templates the way you want. So its helpful if you need to upload these to server or delete based on a specific user action. Or you can do a workaround and upload inputs to server and modify (if its ok for your app) using initialPreview feature of the plugin to show files.\nBut if you are still keen to actually edit the readonly input you can attempt building an ajax based upload or a gallery album functionality using JS over this. \n. Not needed since upload button should be disabled with the class kv-fileinput-upload which is automatically appended to the upload button element in renderUpload.\nBut, I suppose for a tag it must be a bit differently handled... will update.\n. Resolved via upgrade to release v3.0.0.\n. As per comment in #63. Not in scope of current plugin (intended to be simple and use native HTML5 features - and minimize any overload of other scripts). \nWill create a separate repo to extend this and offer a separate jquery extension.\n. Refer new planned release v4.0 enhancements #70.\n. Refer #59. Not in scope of current plugin (intended to be simple and use native HTML5 file input features - and minimize any overload of other scripts). \nProbably when I find time may implement as a new extension to this plugin to offer an easier way to do this.\n. Refer new planned release v4.0 enhancements #70.\n. Resolved via upgrade to release v3.0.0. The plugin includes a slugCallback property. Check readme or the documentation for the new plugin settings.\n. Release is updated. \nYou may try again in sometime - sometime takes time to refresh on packagist.\n. Resolved. You can check now.\n. Just set the mainClass property to input-group-sm.\n. Refer #59. At this stage the plugin is created to just use the features of the NATIVE HTML 5 file input as much as possible (intentionally to minimize as much of other code and dependency overheads). The native file input unfortunately does not allow to edit previously selected files.\nQueuing files using FormData, testing for cross browser support using flash/java applets, or other modes are not in the scope of this extension.\nI may try to create a separate extension for this as discussed in #62 and #63 when I get time.\n. Refer new planned release v4.0 enhancements #70.\n. Release is planned within a week since the code is mostly tested (probably if I get time it may happen in a couple of days).\n. v4.0.0 is now released. Refer the detailed documentation and demos.\n. It is maxFileCount in options and not maxFilesNum\n. Releases are usually created as a new version. Though am trying my best, I have limited time to manage this on a consistent basis across the various repos and at times it probably may be not done the consistent way.\nNot sure still though why you cannot update with composer or similar.\n. Resolved via upgrade to release v4.1.0.\n. Resolved via upgrade to release v4.1.0.\n. Resolved via upgrade to release v4.1.1.\n. Can you give details? When, how, and where you are facing this? What is the line on which this error occurs in your JS console.\n. This seems to be some issue in your URL output being recognized OR your webserver is disallowing. You need to test the upload url independently and see if it works.\nTest for security and if the domain of your upload url is different than the domain in which you are using the fileinput. For example you may face this error if you have CSRF validation or something similar enabled... and you are violating this security by accessing from a different domain.\n. Yes you cannot use the example code as is from the local. You need to serve this file through a Web Server in the same domain where your uploadUrl is,\n. Yes. Check and read the docs and go through the demos. If you do not provide uploadUrl, no ajax will be used and the upload button will default to form submit. You will need to wrap the input inside a form. However you must note that without ajax you can only upload in one shot... and not add/delete files from preview -- nor have a progress bar for your uploads.\n. You don't need to write any javascript... the upload button is auto-rendered by the plugin (and defaults to a Submit button). You just need to wrap your input between form tags (with form action pointing to your server URL) so that the submission sends the data to the server. \n. I am not sure I can help much on your application level code. \nJust treat this like a normal HTML file input. How would you upload a file using a normal HTML file input? If you need to upload first and then submit other inputs or any such detail - are all design issues at your app level - could be controlled through server code.\n. Resolved via upgrade to release v4.1.1.\n. Will not work. As mentioned in the past to several other users, a HTML File input is readonly and cannot be populated externally via javascript or drag and drop to another zone. \nFor you to receive data via your form submission you have to select files ONLY THROUGH your file input. \nThe new plugin functionality of drag and drop, deleting files in preview before upload, or appending files etc.. is only available if you use AJAX uploads by setting the upload URL and using the plugin's upload button\n. For ajax uploads you can send it using uploadExtraData property (read docs) - to your uploadUrl. For form based uploads you can always send additional inputs to your FORM submission.\n. Yes you are right ... uploadExtraData controls what extra data you send to the server URL that processes the AJAX based upload. Is there any reason why you need this data within fileuploaded event?\n. I understand - but all the more reason if you want to avoid further AJAX calls... you directly process everything you need in your server upload action as identified in uploadUrl - where you have all information about the files and the uploadExtraData.\nYou could display any calculated data based on this to the user in any separate div or alert box etc.\nIs there any reason why you want this information again after the file is uploaded (that's when your fileuploaded event triggers)?\n. I am anyway noting an enhancement for ajax call to send back data to the client... but this may take a bit of time. Will keep the issue open.\n. Resolved via upgrade to release v4.1.2.\n. You should receive responseData on \n- fileuploaded event for asynchronous upload \n  and \n- filebatchuploadsuccess event for synchronous upload\n. There are some more updates to the plugin with release v4.1.3. You now get the output data from the upload events as a combined data object. This is applicable for the following events\n- filepreupload\n- fileuploaded\n- fileuploaderror\n- filebatchuploaderror\n- filebatchuploadsuccess\n- filebatchuploadcomplete\nFor example:\nfilebatchuploadsuccess\nThis event is triggered after a successful synchronous batch upload (i.e. when uploadAsync is false). Additional parameters available are: \n- data: This is a data object (associative array) that sends the following information, whose keys are:\n  - form: the FormData object which is passed via XHR2 (or empty object if not available).\n  - files: the file stack array (or empty object if not available).\n  - extra: the uploadExtraData settings for the plugin (or empty object if not available).\n  - response: the data sent via ajax response (or empty object if not available).\njs\n$('#input-id').on('filebatchuploadsuccess', function(event, data) {\n    var formdata = data.form, files = data.files, \n        extradata = data.extra, responsedata = data.response;\n    console.log('File batch upload success');\n});\n. Yes. Trap the event filebatchuploadsuccess or filebatchuploadcomplete.\n. Resolved via upgrade to release v4.1.2.\n. You can use data variables - but still you need to initialize via JS. You can render JS from the HTML file genereated by your PHP code.\n. You can set it to NOT show the delete buttons by the plugin (set initialPreviewShowDelete to false)... and render your own buttons for edit or delete in the initial preview markup.\n. Resolved via upgrade to release v4.1.3.\n. Resolved via upgrade to release v4.1.3.\n. Resolved via upgrade to release v4.1.3.\n. Resolved via upgrade to release v4.1.4.\n. Resolved via upgrade to release v4.1.4.\n. Its actually the file object available through your file selection. The docs will be updated. \n. With regards the reader instance being available I will record an enhancement.\n. Resolved via upgrade to release v4.1.4.\n. Resolved via upgrade to release v4.1.4.\n. Resolved via upgrade to release v4.1.4.\n. Resolved via upgrade to release v4.1.4.\n. Refer #97.\n. The reader instance was already being passed with the fileloaded event. This is now updated in the docs.\n. Its similar to how it was initialized earlier on document load.\nYou can initialize the plugin using javascript as described in docs and demos.\njs\n$(\"#input-id\").fileinput({\n    //options\n});\nYou can also use refresh method of the plugin for changing/refreshing plugin options dynamically via javascript.\n. This is the inherent HTML native file input functionality (please read about limitations of native file inputs).  If you are using FORM based uploads - the file input will clear/reset and overwrite files selected each time you select browse - and WILL NOT REMEMBER what you previously loaded.\nYou would need to use plugin's feature of ajax based uploads if you want to queue files and remember your selection (refer the ajax uploads section in demo if you need this).\n. Will merge - but will enhance it a bit.\n. Check updates to the plugin. The jqXHR is available as part of the outData object along with the events.\n. Fixed with updates to release v4.1.5.\n. Please read documentation. You need to send a valid JSON response from your server upload action code (even if you do not have any server data to send for advanced cases, it at least must be an empty json object e.g. {}).\nUnfortunately will not have time to support for your individual coding case.\n. Yes that's correct.\n. This is because the unlock method is called within ajaxStop... and if you trigger another ajax inside unlock, its calling itself on ajaxStop.\nIf you upgrade to the latest release, the plugin uses some flags to check the locked status before triggering unlock. So you should not face this.\nFor advanced usage and your info.. the updated plugin also uses namespaces to bind ajaxStop (i.e. ajaxStop.kvfileinput instead of ajaxStop - so one can unbind the .kvfileinput for advanced ajax calls).\n. Resolved via latest fixes.\n. Currently, the ajax upload for the plugin has been designed for appending files for every browse - and not for only a single file upload. \nIf there is only one file to be uploaded... one could normally set ajax to false and read the data from the native file input - in most cases. \nThis maybe an enhancement for later for including in the plugin. I am recording an enhancement for this and will keep this issue open.\n. Ok I have updated to fix this. You may check now.\n. Not sure I understand correct, you cannot validate the width and height of the image directly via this plugin. But you can set a width or height for the image to be displayed in the preview. For this check the previewSettings.\n. You need to check the docs and edit various templates options in the plugin (e.g. layoutTemplates.main1, layoutTemplates.preview etc.)\n. The progress calculation is updated. Check and confirm.\n. You have an outdated release. Upgrade to release v4.1.5.\n. The plugin already offers this feature - by allowing you to set the delete URLs in initialPreviewConfig. The initialPreviewShowDelete property allows you to set whether you wish to enable delete functionality (defaults to true). Check docs. \n. If you need individual file delete button for each thumbnail you need to use the initial preview settings as mentioned.\nIf you just need a delete button, the developer can add his/her own button to the template to delete all files and could control its display using events after file is uploaded e.g. fileuploaded. \n. You need to write a bit of your own javascript for this. You can trap one of the events like filepreupload to check and submit another POST request or whatever you need.\n. Will need to check on this later as an enhancement. The plugin's core feature has been to process file selection and preview. With ajax based upload file ability, the option of sending extra data was an useful addition - but since the focus has been on file upload --- there has been no thought directly on validating the extra data. \nSince the use cases can be many - will need to see how it can be generalized. Certainly would not  want to address all use cases of data manipulation with this plugin. You have methods and events designed in this plugin for addressing this specifically.. so that developers can extend and build various use case scenarios.\nWill check on this later and record an enhancement to see when I can look into it when I get time. Feel free to input your design suggestions or enhance this with a PR.\n. I am creating an enhancement to allow submission of extra data even if there are no files.\n. Resolved via #173 for ajax uploads.\nFor normal form submission you will receive your other form data irrespective of files selected in file input.\n. Check for any other errors in your application from your javascript console.\n. You can change the templates. Check the documentation for various sections in the layoutTemplates property to render your own button for the upload.\n. You need to note a couple of things\n- You do not set an uploadUrl: This means you are using a form based submission (without using ajax). If you can set this, then you pretty much have everything for your use case (but will not get the ajax upload features of appending files, progress etc.). In this case you can go ahead and submit the form (with any button anywhere) and read values from the file input if it exists or other form inputs\n- You set an uploadUrl: This is if you are using ajax based uploads - the plugin does not directly interact with form submission in this case and submits its own ajax post request. You need to work through your design and use plugin events or others to manage your other data through form submit.\n. Its an error on your server code returning an invalid json format for your upload response. Debug it with firebug or javascript console and resolve to return a right JSON format. You must return a RIGHT JSON response from your AJAX (even if you do not have anything... you must at least return an empty JSON object like {}).\n. Not in current scope of the plugin. Feel free to add an enhancement or PR.\n. You need to read plugin docs first  as well as usage and ajax related docs. \nOnce you have your plugin initialized using above you then need to create your server code right (either to read form submissions or if using ajax to return a right JSON encoded ajax response).\n-- (even if you do not have anything... you must at least return an empty JSON object like {}).\n. How and where will you drag and drop files if you do not have a dropZone displayed?\nIf you do not need drag and drop - set dropZoneEnabled to false.\n. There are developers who need drag and drop on initialization (this is independent of whether you click Browse button or not).\nAs I said earlier, you can set dropZoneEnabled to false if you do not need OR  reenable it based on events if needed \n. No. You cannot drop files and read without uploadUrl set (basically unless you use ajax upload - this will not work). \nRefer #135. Its been asked by quite a few of you. You need to understand that you cannot set the value of a native HTML file input from external code. Hence dragging and dropping files into the zone will not help NOR WILL IT be passed to the file input via POST to your server code.\n. Yes as mentioned you are using AJAX and not native form submission - you cannot selectively add or delete files and use them in your form submit  --- unless you are using ajax.\nWhen the uploadUrl is set it also triggers ajax call - where you can pass additional form data using uploadExtraData property and track the filepreupload, fileuploaded and fileuploaderror events to write additional code before or after ajax request completion.\n. The plugin does not understand what all you need to submit.\nYou (the developer) needs to set all form variables OR any additional variables in uploadExtraData. This will be submitted via $_POST. You can also set uploadExtraData as a callback.\n. How would you have implemented if it were a simple HTML file input that you are submitting via form and you need to write your PHP code? Start with a simple option like that without ANY additional plugin options. Then slowly build upon it with other options and validations and ajax URL etc. You may be trying too many things together without understanding the impact which may not be good if you are new at using the plugin. Would suggest you to read the plugin options and also the methods, and events.\nI unfortunately do not have time for specific coding issues for each individual developer. But with regards to server code though, I have an extension of this plugin built for Yii PHP framework. You can also refer a few webtips that I do post when I get time and probably a few webtips are related to fileinput. You can refer them by clicking the bell icon on the top of the page adjacent to the page title for the plugin title (e.g. Bootstrap File Input).\n. I have created a webtip for server side processing example using PHP for folks who may need it.\n. > is it possible to trigger the file upload with jquery instead of user click\nYes... read docs and use the upload method\n\nafter a 'filebrowse' event how can I obtain the name of the file shown in the caption with jquery\n\nA filebrowse event is generated when the fileinput button is clicked. You can directly read the input value and get details of the file selected.\n. See related issue #103.\n- Using Form based submission: HTML file input using form has its limitations. You cannot set a file input value using javascript or external methods. Also, you can submit files only one by one (each time you select a file or files, it overwrites the previous selection). If you can design your app around this limitation, then go ahead. For basic usages or single file upload this should be ok.\n- Using ajax based upload: Drag and drop or repeated multiple file selection is an ajax upload feature. It allows you more flexibility on the things you need. Your assumption is incorrect that you cannot send your other form values with ajax. You can also submit your other form input values by sending it with uploadExtraData variable. Check a new web tip that I posted which contains a server processing example on how you can upload files using this plugin using ajax.\n. Duplicate to #127 and #129.\n. You can have these as an array and json_encode and send it with extra data.\nFor example:\njs\ntitles = {'id-0': 'file-name-1', 'id-1': 'file-name-2'};\n$input.fileinput({\n     uploadExtra: {\n             titles: JSON.stringify(titles)\n     }\n});\nThen json_decode the titles on your server to read the individual file details.\n. Note that the filestack is sent as an array to the server. The zero based index of each element in array, matches the data-fileindex attribute for the preview thumbnail frame.\n. Will look at it as an enhancement.\n. Have you tried setting the elPreviewContainer to a different container identifier and retry? You must ensure you have the content in elPreviewContainer defined similar to the preview layout template.\nNote elPreviewContainer must be a jQuery object element. For example $(\"#custom-container-id\").\n. Cannot replicate your case. How are you configuring the plugin?\n. The problem is that you are providing data-upload-url which is triggering the ajax action. You should not be passing that property since you mentioned you are using traditional form-submit.\n. You have not understood the pre-requisites then - please read the docs.\nAs mentioned in docs (and in other questions answered in this repo)... using drag/drop, or selectively adding/removing files, or viewing progress, are all features available ONLY WITH AJAX. The plugin assumes ajax upload if you have set uploadUrl. If you need these functionality you must use AJAX uploads... and must provide a valid uploadUrl. In that case you cannot USE form submit.\nIf you need traditional FORM SUBMIT - you cannot use drag and drop or removing files etc... as the data will not be available in your form submission (since you cannot manipulate a native HTML fileinput externally).\nRefer #103, #135\nYou cannot mix both and if you try to violate the above pre-reqs... you will naturally face situations or data which are not correct OR will be inconsistent.\n. Fitting in the preview thumbnails depends on the dimensions of the file/image you are trying to select and preview in the thumbnail. It might not be same for all cases what you mention. If all your images are of consistent dimension ratio, it will behave uniformly -- however if you have images whose width is way more than height. or very oddly sized width and height. .etc.. they will shrink into the space available automatically. Hence they may be wrapping down since on hover an extra shadow is added. You can control these thumbnail sizes if needed from the previewSettings.\n. Dimensions will be with respect to the window size  you are viewing in and the container size within which you placed the file input. The number of thumbnails in a row will be dependent on the above. The thumbnail frames will wrap down if it does not fit - which is what is happening as you hover - because of the lesser estate to fit. For smaller devices/small screen sizes it may well align in one column.\nAs I mentioned you need to adjust your dimensions...  experiment with what works for your use case. \n- Tip 1: Increase your container width in which you are wrapping the widget and adjust it for your use case.\n- Tip 2: You can adjust the dimensions from previewSettings for each by file type. You can also add your own CSS for your use case if you wish for advanced cases.\n. maxFileCount just controls how many files at a time you can select before you upload.  It does not track the files you have already uploaded to your server (nor that is the objective of tracking any upload history).\n. Similar to your previous query on maxFileCount, the plugin only validates and keeps files in memory BEFORE THE UPLOAD TO SERVER. Any images that have been already uploaded or sent to SERVER are entirely released from client memory. So there is no knowledge to the plugin of these server files NOR its settings. Whatever is left in the preview is temporary left over volatile thumbnails that will be cleared before any next remove action, or page refresh, or next upload.\nFor referring to images that are already uploaded on your server - you must use initialPreview and initialPreviewConfig to tell the plugin where they are located and what are their server settings (including URLs) for deleting etc - so that they can be shown on future refreshes of the page OR can be re-edited. Check the examples of initialPreview and initialPreviewConfig to achieve your use case of referring images uploaded on server.\n. You need to refresh/redirect to the page if possible... or reinitialize the plugin (e.g. use the refresh method by passing these options).\n. Yes refreshing would re-initialize the plugin. \nDepends on what is needed and how you can carefully optimize your design. Not sure about your use case... but typically you would use this plugin to usually select, preview, and then upload. Giving access to uploaded files on server or database, will usually happen separately -- and probably as well in other pages or processes. If you are trying to use this plugin to build one single screen for a complete application or an image gallery or something... you need to add your own code to achieve that. For example, after the fileuploaded or filebatchuploadcomplete, you can embed the image links/thumbnails from your server inside the preview container.\n. Check and track #151.\n. Check and track #151.\n. Have  you tried configuring otherActionButtons - you can add your own new action buttons to each file thumbnail. This is just a HTML markup in which the plugin will auto-replace the {dataKey} tag. For example to add an edit button to each thumbnail:\n``` js\n$(\"#input\").fileinput({\n    otherActionButtons: '' +\n    ''\n});\n// then you can write a code on click of the btn-edit as below\n// build your loop for this below correctly - just an example\n$(\".btn-edit\").on(\"click\", function() {\n    var key = $(this).data('key');\n    // you can use the key in your ajax actions or using data-key \n    // trace back to the preview container DOM and its children\n});\n```\n. Was suggesting an alternative of using buttons in each thumbnail to achieve use cases similar to yours... (for example button to reorder files -- or rename files through a popup or embedded input.).\nAnyway, I will need to think about your ask in detail. An option you also have is to use data attributes in  element(s) on the page to store info from various plugin events and reuse them the way you want.\n. Resolved via upgrade to release v4.1.7. Two new properties customLayoutTags and customPreviewTags have been incorporated. This should be an associative array object of key: value pairs, where:\n- key: string, is the tag to be replaced and as a standard is recommended to be enclosed between braces.\n- value: string|function, is the value that will replace the tag key above. This can be setup either as a string or callback function.\nFor example:\n``` js\n// example 1 - tags with value set as string\ncustomLayoutTags: {\n    '{tagA}': 'Tag A',\n    '{tagB}': 'Tag B',\n}\n// example 2 - tags with value set as callback\ncustomLayoutTags: {\n    '{tagC}': function() {\n        return $(\"#element-id\").val();\n    }\n}\n```\n. Resolved via upgrade to release v4.1.7.\n. @zhopy - you may want to go through the plugin docs and demos\nAn example of auto upload on drag and drop after file batch selected is shown in ajax demo # 6. Resolved via upgrade to release v4.1.7.\n. Resolved via upgrade to release v4.1.7.\n. Resolved via upgrade to release v4.1.7.\n. Resolved via upgrade to release v4.1.7.\n. You can check with the updated fix now.\n. Triggering the form submit (can be done on input change event via javascript)\nMost of your other requirement of populating data on your server, refreshing the page after form submit etc... should be done via your server code.\n. You may need to do some reading on ajax upload - you cannot receive file blobs with form serialize... and hence it may not work..\nYou can also try to use the ajax upload feature provided with plugin which uses HTML5 FormData to submit, and use uploadExtraData to submit additional information to your POST. If you wish to use this, read docs or view the ajax uploads section on demo page. Unfortunately cannot help with your coding details here (you may need to learn this through reading).\n. demo link typo is corrected.\n. Read the documentation and check how you can access fileuploaded event parameters.\n. Probably its getting reset for various other scenarios that were incorporated... will provide a fix.\n. You can check with the updated code now.\n. Check initialPreview and initialPreviewConfig properties in the documentation for your use case.. you can also separately display your server image links outside the plugin functionality.\n. The image shown on preview before upload - is a blob and not straightforward to edit. You would need to use HTML5 canvas or something to edit it. You can read the files object and retrieve the blob information using FileReader object.\nIf your image is rather saved to the server - its straightforward to access it as a normal img src URL.\nDepends on what approach you want to take --- \n- edit all on client before upload (may face issues with support across browsers and may need additional javascript plugins)\n- upload it to server temp directory and edit using server side procedures augmented with client side js to preview/modify (should work universally).\n. Duplicate to #138, #129, #127.\nSearch and check for other similar issues before posting a new one.\n. You need to use filebatchuploadcomplete event instead. Read docs... this event will fire for both async or sync uploads.\nThe fileuploaded event fires only \n- if you upload each individual file using upload icon on each preview thumbnail, OR\n- when you use it with uploadAsync set to true... (even in this case it will fire multiple times after every file is uploaded).\nThe fileuploaded event will thus never fire for sync uploads when uploadAsync is false.\nThe filebatchuploadcomplete event however fires for both cases of ajax uploads - only ONCE at the end after completion of all uploads.\n. It is intentional, the default settings must not get overridden- as it would break the plugin.\nWhat you can pass in ajaxSettings is only additional ajax options.\n. Also check #173, #174 and #175.\n. Check and read the pre-requisities for the plugin.\nSafari 5.1.7 does not support File API. Check browser support for HTML5 File API here.\nThe browser support for various plugin features are also highlighted in the docs.\nPlugin will automatically degrade the widget to a native file input - if browser does not support HTML5 File API.\n. Read my earlier comment.\n. Not clear why you are doing all of the above (looks a bit complicated to me). \n- If you need to save the model first before trying the file upload you can do it in one single ajax call in your server code (pass these form inputs for your model in uploadExtraData). Check a PHP example - but you can use the same concept within MVC method.\n- if you need to isolate your upload and model attributes saving independently - then you can go ahead with your upload and save them on your server temporary folder using some session level IDs that you can transfer to your controller action that creates or saves the model. Then based on the model saving process to move the files to respective location or delete.\n. Either its an issue with your web server memory/settings OR It maybe a client specific memory issue. For the client specific issue - you may try setting showPreview to false if you wish to use for uploading large files... (you will not be able to preview files on client but can save on client processing memory esp if you are using large files)\n. can you isolate the problem by doing it in steps... e.g. try it without a modal  and on a full width container and then start adding constraints\n. The lines commented will work only for a specific scenario and the above validation is needed (refer past issue enhancements as requested & tested)\nThe condition above will fire ONLY if  the image width will NOT fit in the container for the dimensions mentioned. \nThe way its designed is this way:\n- The default setting is the width is auto and height is set to a value of 160px (or what you want) --- so you have thumbnails of fixed heights (since you want to align thumbnails side by side). This will work for most images normally with 4:3 or 16:9 size resolutions.\n- However, when you have very extreme dimension ratios where the width of the image is way large for the same height (for example 1000px width by 160px width) - then it will not fit the container. In this case the plugin does an additional dimension validation (as highlighted in the above code snippet you posted) --- if the width exceeds the preview container width --- then it will auto set the width of the image frame to be 100% so it fits within the container - the 97% is to allow a border for the image within the frame.\nTo summarize, I would suggest you to see if you could check your image dimensions - and try to set a fixed height (and optionally add a width also if needed). With height = auto you may have issues with images fitting in the container of dynamic width.\n. You can check with the updated code from dev-master.\n. Check with the latest updated code from dev-master.\n. Thanks.\n. Could not understand. Can you post a js fiddle link to what you are trying to do and what you expect?\n. Closed as there is no feedback.\n. Actually you are supposed to read the extra property (e.g. $_POST['extra']) to get the posted deleteExtra data. Its highlighted in docs in the initialPreviewConfig section at the end.\n. Related and extended via #183.\n. Ok I will consider merging the delete extra data and this.\n. The uploaded files once uploaded are cleared from file input. \nNote that once uploaded these files will lose their original preview ids as well. So other than for display they have no meaning. Why would you want that instead of directly displaying a image link from your server?\n. I would suggest you to set initialPreview & initialPreviewConfig on fileuploaded or filebatchuploadsuccess event and trigger refresh method of the plugin.\n. Track the enhancement being done in #205. With that enhancement, you can return an associative array object containing the new initialPreview and initialPreviewConfig via the events filebatchuploadsuccess and filebatchuploadcomplete.\n. It depends on the image dimensions and which you need to work with for your environment. You could try setting the previewConfig for each file type to set default dimensions in the preview. The default settings are to have a constant height for all images to ensure they align horizontally well while the width would be auto. Depending on your use case (you may need to adjust the height to something that should work for most cases).\n. Its a typo... I meant previewSettings.\n. You can define your own templates in previewTemplates for each file type.\n. The DEFAULT_PREVIEW constant variable in the templates translates to:\nhtml\n<div class=\"file-preview-other\">\n    <i class=\"glyphicon glyphicon-file\"></i>\n</div>\n. I plan to create a configuration option for the icon -- will update.\n. There are two places where glyphicon-file are used in templates.\n1. Within the file caption text prefixed before file name. You can set this using layoutTemplates.icon property\n2. Within the preview section for an unreadable file type. You can set this using a new property added previewFileIcon.\n. Use this project page for only logging issues. Try to post generic help related queries e,g, help on writing code, building your app, etc. on the demo page comments section to get better response.\nMost of your queries are related to building your own application code or understanding similar use cases.You may try posting it on the demo page to get responses from others.\n. Your issue # 3 cannot be replicated... because alerts that will be displayed by the plugin are typically only validation errors like maxFileCount or maxFileSize allowed for upload etc. and that depends on what you configure as a developer. \nTry it on the demo pages and let know if you are facing any issue... if you have a scenario that you feel is an issue - try to share a link using JS Fiddle for reproducing the same to test.\n. Will be handled via #191.\n. You may need to debug. \nYour upload extra Data format looks wrong ... it must be an object that is configured like an associative array like this\njs\nuploadExtraData: {extra: '12345', attr2: '122'}\n. Related to #185.\nTrack the enhancement being done in #205. With that enhancement, you can return an associative array object containing the new initialPreview and initialPreviewConfig via the events filebatchuploadsuccess and filebatchuploadcomplete.\n. You must read the documentation thoroughly.\nYou can do this through otherActionButtons setting.\n. The plugin does provide you with methods and events to call your own APIs or webservices.\nIMO... this should be handled via the server code that processes your files. So this is not currently supported out of the box directly. Please feel free to add a PR if you feel you want it inbuilt.\n. For an example check the Amazon S3 PHP SDK.\nYou can include the PHP API needed to move to S3 in your  ajax uploadUrl action which processes the uploaded file and processes the move to Amazon S3.\n. It most definitely seems to be a caching problem on your client using outdated assets OR it maybe something specific to your client (browser security etc.). Plugin does work fine on all OS & browsers.\nIn general whenever you perform an upgrade of the plugin or even if its OS related - remember to clean up all your browser's cache ENTIRELY and restart - before using the extension.\n. Duplicate to #187.\nYou can configure previewFileIcon.\n. Check the referred issue #187 again where the file icon is used.\nThe caption icon can be set via layoutTemplates.icon. You can refer most of these settings in docs as well. \n. You must use upload method of the plugin as highlighted in docs. \nNote uploadBatch method will work only for selective scenarios (when you use with uploadAsync property set to false) - hence it is not documented.\nOn the other hand, the upload method should work based on whatever scenario you have. It internally calls uploadBatch when uploadAsync is false else uses a loop to generate a parallel  asynchronous upload.\nAlso the upload method prepares and resets the plugin for upload the right way before calling uploadBatch.\n. All messages currently exist as parameters which can be passed to the plugin. You could submit a PR for including these in a separate JS file.\n. I will create a structure for localization and update via this issue.\n. Check #202 for the changes.\n. Resolved via upgrade to release v4.1.8.\n. Resolved via upgrade to release v4.1.8.\n. If you are using ajax upload then you need to trap the fileuploaderror event.\nThe fileerror is only for non-ajax form based uploads.\n. Resolved via upgrade to release v4.1.8.\n. Resolved via upgrade to release v4.1.8. Refer ajax upload demo scenarios 4 and 5 on the demos page.\n. Resolved via upgrade to release v4.1.8.\n. Would suggest you to read the documentation for all options, events, and methods.\nYou can configure uploadExtraData also as a function callback which will allow you to get what you need for your use case. Read this in the docs.\n. Drag & drop of ONLY FILES are supported and not FOLDERS.\nRead browser support in the documentation.\nPlugin uses HTML5 inbuilt ability to read drag and drop of FILES without using any external installation like FLASH etc.  \nHTML5 ability to read folders is not yet available across browsers. Read this stackoverflow answer.\n. Resolved via upgrade to release v4.1.8.\n. Currently strapped with time and may not be immediate. However feel free to submit a PR to accelerate this.\n. A good solution as recommended by @Futursky. Closing this unless someone has something better.\n. Resolved via upgrade to release v4.1.8.\n. Resolved via upgrade to release v4.1.8.\n. The file sizes can be validated via the plugin using maxFileSize property.\nIf you want to read file size - you can use the reader object and the filestack passed via some relevant events like fileloaded.\n. Probably may add it as an enhancement for future to display filesizes if needed...\n. Note that the multiple property must be set at the file input attribute's level. There is no multiple property within the plugin function. So you must set this in your file input markup\nphp\n<input id =\"kartik-1\" type=\"file\" multiple>\nAnd remove the multiple property from your fileinput method:\n$input = $(\"#kartik-1\");\n$input.fileinput({\n\u00a0\u00a0multiple: true  // remove this\n});\n. Ok - I think probably this is to do with the FileReader object not yet completed the reading of the file content. Setting a timeout ensures this. For example the following will work better:\nphp\n$input = $(\"#input-700\");\n$input.fileinput({\n    uploadUrl:'<your url>',\n    maxFileCount: 5\n}).on(\"filebatchselected\", function(event, files) {\n    console.log(files);\n    setTimeout(function() {\n        $input.fileinput(\"upload\");\n    }, 1500);\n});');\nWill do some check on seeing if I can improve this in anyway.\nThe fileselect event should work better because it is triggered after FileReader finishes reading the file.\n. Ok this is resolved with an enhancement. You can try now with a latest updated package from dev-master.\nA side note - your parameters for filebatchselected event are also incorrect... the event just returns the filestack object.\n. Check demo scenario # 6 which shows an auto upload scenario on file drag & drop - and also additionally automatically replacing the images with files returned from ajax response as initialPreview.\n. Yes that's expected - because once files are uploaded they do not exist on client and are hence cleared.\nThe option for you is to return an initialPreview via ajax response as demonstrated in demo scenario # 6 (which is an extension of demo scenario# 5)\n. Ok I provided an enhancement via #218 to not clear uploaded files from preview as well until the remove button is clicked.\n. The plugin is designed in a way where you do not need to override methods. Not sure why you were overriding the renderInitFileFooter earlier  - but you could do that through various options as mentioned below:\nFor advanced custom content ... you need to edit and set your the various template sections by reading the documentation for various plugin options\n- Set layoutTemplates.footer property and pass it to the plugin to render your own custom content within.\n- Use otherActionButtons property to add your own action buttons to the thumbnail\n- Check any other sub template settings within layoutTemplates or previewTemplates and set that to set advanced custom styling for your content.\n. Normally this can be done using customLayoutTags. You set these as key => value pairs and these will be automatically replaced in all layout templates. Check if this works for you\nHowever I will note an enhancement for initialPreviewConfig custom data to be used and replaced in an additional way as well.\n. You can set tags as a callback function as well to calculate dynamically at runtime. Refer the  customLayoutTags docs.\nHowever for setting tags in initialPreviewConfig and using it ... I will add a separate enhancement.\n. @thejahweh - An enhancement has been provided via #222. Its easy to configure the new properties previewThumbTags and initialPreviewThumbTags after the new update. The demo scenario # 7 covers an example of usage for this.\n. Check with the updated package and test again.\n. You can manage this better through templates and tags feature provided in the plugin.. rather than injecting content yourself by parsing the HTML markup...\nSee ajax demo scenario 7 for an example.\n. You need to control this using your package manager config as the plugin will not have a method to understand this.\n. Set progressClass property to hide.\n. The demo scenario # 7 covers an example of usage for this.\n. > This is not generic. we cant force others to modify their server response. Sometimes we are using other api services which have their own response format.\nEither I am not understanding what you are trying to do... or you are trying to do something which is totally different than the plugin.\nThe ajax upload is a feature is designed within this plugin and the format for upload response cannot be based on any third party api's. Since this plugin has been designed with a clear scope in mind to upload files from the client --- all the options to upload will use plugin's various design elements to automatically be able to react based on ajax response. \nSo YES, to answer in short, the json response from ajax MUST STRICTLY FOLLOW THE FORMAT mentioned in docs for the plugin to work and achieve the following:\n\nFor automatically validating/throwing an error it requires the error key in the json response. \nFor automatically displaying initialPreview it requires initialPreview/ initialPreviewConfig in the response\n\nNOTE:\n- You can additionally do or return whatever you need from your server action to call third party apis (this is not to be confused by what the plugin needs in its upload actions)\n- If you need to react and trigger other code/call api's on upload success or completion with your own custom methods you must look into the plugin events like filebatchuploadsuccess, fileuploaded or filebatchuploadcomplete which is already there. You must read the docs for these - no need for the onUploadSuccess or some methods which are already addressed with the above.. Thanks.\n. >  previews are updated with code from back-end. But.. in that case I am forced to know in back-end what type of preview I should generate\n- there is no way for the plugin (client code) to know anyway what is stored on your backend... its your server code which has to parse and return the content in an accessible for display on the client.\n- there is no rigid template enforced by the plugin for server to return the preview ... its kept flexible for developers to show the content using their own markup as needed. \n. Read the methods section in the documentation.\nYou can use the clear method of the plugin.\n. Simple page refresh via PHP.. Isn't the answer there in your question if we think a bit... ;-) ?\nYou can call the disable method and then remove the disabled attribute from your file input.\njs\n$(\"#input_id\").fileinput('disable'); // disables the entire widget\n$(\"#input_id\").removeAttr('disabled'); // remove the disabled attribute for form processing\n. Fixed via 5f50df4.\n. Fixed via 5f50df4.\n. Related to #243. Get the updated code.\n. #243 was in response to @iyoba \nFor your query on templates for initial preview please read the layoutTemplates documentation - you need to set the footer property for rendering each preview thumbnail's additional content.\n. Refer an example in demo scenario # 7.\n. Not sure I understand.. you need to similary render your own html markup for that like you do for  <img> tag for image preview (e.g. using div for text or object tag or video tag for your other content) - you need to test and figure out what style, size, or other CSS classes works for your use case \nIf you want to know how the plugin shows these on previews -- and use it similarly to return from your server... you can check the default preview templates - scroll down for video, text or other and return the similar markup content.\n. Read docs on the usage modes of the plugin and what is possible or not possible in normal form submission (non-ajax) and ajax modes.\nYour requirement is not possible in non-ajax (normal form submission) mode.\n. That code is ok... If you have checked the docs... you can set the deleteExtraData generically OR individually for each delete via extra setting within initialPreviewConfig.\nWill check and update on the latter.\n. Change the _LANG_ tag to represent Serbian lang code... (sr)\n. - fileuploaded will fire only for ASYNC - and will fire for every file uploaded in the list of files\n- filebatchuploadsuccess will fire only for SYNC (once)\n- filebatchuploaderror and filebatchuploadcomplete will fire for both ASYNC and SYNC (once)\n. This is mentioned in docs for filebatchuploadcomplete as well.\n. It is clear from what you are facing... you have some error in your ajax upload which you need to debug\n- filebatchuploaderror will fire if you face an error in your upload (basically it means an ajaxError is triggered OR you are returning a error output message in the json response from your server action)... in this case fileuploaded or filebatchuploadsuccess will NOT fire\n- filebatchuploadcomplete will fire irrespective of an error OR success after completion of the ajax processing.\n. Again reiterating (if you check the docs) - the filebatchuploaderror will fire IF:\n- you return a error key in your json response from the server e.g.{error: \"Failed upload\"} \n- OR you have an invalid JSON response from your server\n- OR the jquery.ajax method encounters a processing error in general (does not matter when - it maybe before upload begins or after 30, 80% or after 100% - check what is happening on your ajax server action progress at each stage).\nThe filebatchuploaderror will fire only if you clicked the batch upload button - not to be confused with fileuploaderror event which fires if an error is faced after you individually press the upload icons within the thumbnail.\nYou may need to debug around these... as to why the conditions mentioned above are happening on your environment?\n. Closing unless you find anything to report.\n. Thanks. Could you also submit the following:\n- please update the minified version via this PR by minifying the JS File from here but retaining the comments\n- add this as a bug to the CHANGE LOG and also include your other translation PR #248 as an enhancement entry in the CHANGE log.\n. Thanks.\n. Yes ... change the slug callback function to include the right Regexp to replace characters in your filename. Currently for English it replaces all special characters.\nBasically submit a PR for the locale file for your language. Check the Chinese Translation locale file as an example and submit a similar one for your language.\n. You can scan the older issue logs - for the use cases where this used to throw up the javascript error while selecting a file which has special characters. Since the filename is parsed and rendered within the caption templates using javascript/jquery - special characters without proper escaping or slugging will throw up errors on your application. It also could potentially impact the security based on what is passed as a filename.\n. Have modified the default slug routine to allow umlauts... but for any other special characters in your file name, you will need to override the slugCallback as per their use case/ or language need.\n. If you are using AJAX upload you can JUST use one INPUT to upload multiple files, add, append, or delete on the fly etc...  instead of generating multiple inputs. Multiple upload is possible by setting MULTIPLE attribute of the fileinput. This will also work for  FORM UPLOAD (you can still set MULTIPLE attribute of the file input ) - only thing is your browser must support HTML-5 features.Form based upload does have some limitations which you can understand in docs.\nRead about the usage modes of the plugin and browser support for the features.\nIf you still want to generate multiple file inputs for some reason I do not know... just set UNIQUE ID for each file input HTML element on the page --- (you can do this through a loop for example on your server code).\n. Please check docs and demos. For example check the basic demo example 1.\n- If you wish to use just data attributes and no javascript you need to add the class = file to your input markup\nhtml\n<input id=\"input-1\" class=\"file\" type=\"file\" data-attributes...>\n- If you want to use javascript to initialize the plugin, then remove the class = file from the above markup and then initialize.\n. Not sure I understand what is the markup you are creating and how you are initializing the plugin (hope you have checked the example codes closely and carefully on demos for various use cases). \nOR \nMaybe not sure you understand exactly how you need to initialize.\nYes type = file is needed always for your input irrespective of what you want to do... since it is a native HTML fileinput you need to fallback to if javascript is disabled on the browser.\nThe question is about how you want to initialize? Assuming you have the assets loaded as per the plugin usage documentation - plugin will generate the transformed file input/upload output automatically in one of the following ways.\nOPTION 1: With just data attributes\nIf you just have a markup like below set on your page \nhtml\n<input id=\"file-0\" class=\"file\" type=\"file\" multiple data-min-file-count=\"1\">\nNOTE: You do not need any other javascript after the above markup if you have class=file. Ensure your FILE input ID attribute value is unique.\nOPTION 2: With javascript:\nIf you just have a markup like below set on your page \n``` html\n\n\n$(document).on('ready', function() {\n    $(\"#file-1\").fileinput({\n        minFileCount: 1\n    });\n})\n\n```\nNOTE: The ID attribute in your markup is important and must be unique for initializing and you MUST NOT SET class = file if you are initializing via javascript.\n. > Inits all elements with attr type=file.\nNo that is not correct. Check the code again closely. Plugin inits elements with combination of:\n-  attr type = \"file\" \n  and \n- class = \"file\"\n  as I have been reiterating in the past comments.\nTry removing the class = file from your input markup - it will not initialize automatically.\n. You may want to debug on your browser javascript console (e.g. chrome/firefox) if your delete URL /scripts/settings.php is getting called and what is the params passed as $_POST and what is the response?\n. in initialPreviewConfig you must a valid url to point to your server action that will trigger the delete. Currently its set to # in your code - but you must use normally a valid delete action just like the uploadUrl setting.\n. It should not matter. DELETE will send data via $_POST anyway (like a POST)... this was defaulted to DELETE to make it REST compatible as per this enhancement #215.\nIf you need to override it you can change it within ajaxDeleteSettings.\n. You would need to handle this in your server validation and render the Html and js for the plugin accordingly for example if you have 3 images on server you should disable the file input and hide the upload button (showUpload = false).\n. Not currently in scope of this plugin - but you can do this easily on your server code before upload... OR use any third party tool separately.\n. related to #210 \n. Not clearly able to understand where your problem is... but if I try to make out... most of your validation and processing what you are mentioning are on the server code side.\nHow you design each file to link to your extra data --- should be part of your application design. It should be no different than how you read a set of fields submitted via form to a server.\nYou must note that file uploads are always managed separately in web applications and also read separately via server code (for example $_FILES in PHP instead of $_POST which is used for all other types of form data). You need to hence work with designing your app to arrange inputs and data accordingly based on your file upload sequence.\nYou can also play around with multiple vs single uploads if you want each file to be specific to a particular data... For example use single uploads only and treat all your extra data pertinent to the single file upload (and maybe loop this for multiple scenario). But it all depends on how you want to design your app. I am not sure what you want to do with uploadUrl - but you can always change the plugin's params at runtime and use the refresh method to refresh the plugin.\n. You need to check if you have some other CSS, theme, or third party javascript or plugin on your environment which is over-riding and causing the above.\nFor a default bootstrap CSS this works fine. For example you can check this in the 8th example in plugin demos in advanced usage section - by selecting an unsupported file type (the example allows only image and video files as configured in plugin).\n. You may try posting in discussion section on the plugin page for code/programming related help.\n. You cannot modify files selected on client side... if you are using FORM based submission. Read the modes of using the plugin and features possible.\nYou can however simulate this from your server side code... by uploading files to server every time files are selected... and displaying the uploaded thumbnails and providing a delete button...\nbasically do something like this\njs\n$(\"#file-input\").on('change', function() {\n    $(\"#file-input\").closest('form').trigger('submit');\n});\nThen on form submit redirect page to show the reinitialized plugin with initialPreview and initialPreviewConfig to show the uploaded thumbnails with delete buttons.\n. Change the _LANG_ tag in the file to your language code i.e. tr.\n. Replace the two _LANG_ tags with the language code pt.\n. You can create a Pull Request to submit your translation file (hope you are familiar with one)?\nIts easy to submit a translation file as mentioned in docs.\nRemember to change the _LANG_ tag with your ISO language code.\n. Create a fork of this repo and you can check about creating PR in github docs.\n. Clicking the fork button on top right of the page creates a fork.\n. Merged and updated via #275.\n. The plugin resets events on refresh. You therefore need to call your custom events after refresh again.\njs\ncontractUploader.fileinput('refresh', {browseLabel: toLabel}).\n    on('fileloaded', function(event, file, previewId, index, reader) {\n        [...]\n        changeBrowseLabel(file.name);\n    }).\n    on('fileerror', function(event, data) {\n        [...]\n        changeBrowseLabel(errorMessages.browseLabel);\n    });\n. Some of the coding basics you may want to check... see you have inserted a double quote \" inside a double quote. \nYou should for example use a single quote ' inside the double quote \" instead.\n. Error messages will stay until you click clear OR you re-run the upload with correct validation.\nRead the ajax uploads section again carefully and entirely where your queries are addressed (read how you send the data back from the server with errors depending on if you are using async or sync).\n- If you use asynchronous upload then automatically you get the error message for each and every file - because it fires a parallel ajax request for each and every file - based on the error string you send.\n- If you use synchronous upload - there's only one ajax request... so in addition to error, you need to set errorKeys as an array of the file indexes that faced the error.\n. The dropzone has been designed to read dragged files and not HTML elements. You may need to check if you are overriding this behavior and that is causing some conflict in your rendered content / markup.\n. Related to #303. Get the updated code.\n. You can set input to disabled to prevent any upload and make it readonly (or you can call the disable method of the plugin). \nThe critical inherent feature of the plugin is built on a fileinput which internally maintains the attributes and browse button is the integral part of that. You can play around with the CSS (adding a parent container CSS  and styling) to hide it if you want.\n. This is not currently in scope of this plugin. But you do this validation easier through your server code during upload using built-in functions or third party extensions. For example PHP has this getimagesize function.\nOr you have other Javascript plugins that can do this for you and you can trigger the validate on fileloaded or similar events.\n. Having said that --- I may include an enhancement to handle this in future. Reopening this.\n. Refer enhancement #328.\n. Refer related discussion #250.\n. Not sure what you are doing.\nCheck the second example in the basic usage demo page. It shows an example of plugin working without preview.\n. Read documentation on what is supported and what is NOT in FORM MODE and AJAX MODE.\n. The plugin allows you to submit data just like a form if either files or uploadextradata is available. So this is expected. You need to mange the validation in your server code and return an error as needed.\n. Will update on this when I get a bit of time. \n. Yes this requires a separate time, fair redesign and elaborate test and a lot of work also on server side to match the client needs. Will need to find time to do this.. @jackttcoms I understand the need for this feature. It requires some significant additions to the code and unfortunately have not been able to put in time.\nHowever, am willing to prioritize effort into this based on overall interest from across this community to finish something in 2019. Any aid provided will help me prioritize this faster internally.. Planned this for milestone release 5.0.0.. Not sure of what your issue is... because it should work on document ready without any issues and is normally the recommended way.\nYou can check that it works fine on the demo pages by cross checking the generated HTML source on the demo page.\n. There's nothing the plugin can do - but you can do some tweaking in your code to always reset the form when page is loaded - so that pressing a back button does not show cached values... for example\nhtml\n<form id=\"myForm\">\n  <input type=\"text\" value=\"\" name=\"myTextInput\" />\n</form>\n<script type=\"text/javascript\">\n  document.getElementById(\"myForm\").reset();\n</script>\n. Not sure this can be replicated. Can you check this on the demo page. Closing the issue until there is some method to reproduce this error.\n. You can set captionClass and style your own CSS for the span within the caption.\n. This is resolved now.\n. It behaves as expected.\nNote in scenario 3 for example after you have deleted all initial preview images - you only see an uploaded confirmation of the thumbnails on client. \nThese are not the links to the uploaded images from server - but just volatile thumbnails on the client ... hence they will be cleaned up after every successful upload.\nIf you want to automatically replace the client thumbnails with the image links on your server check the ajax upload example 4 or ajax example 5.\n. Refer enhancement #299 - that will help you out address this.\n. Resolved.\n. Duplicate to #107 and #127.\n. Read about the various jquery events offered by the plugin and use one of them (e.g. filebatchuploadsuccess or fileuploaded or something else) after upload.\n. The revokeObjectURL was needed to clean up client memory on browser - you will need to check the impact of commenting this - when you try to select multiple files for preview.\n. Have provided an enhancement you may check now.\n. Resolved via #307 - new properties frameClass and frameAttr now made available in initialPreviewConfig. Check docs for initialPreviewConfig.\n. You need to use the {files} tag which will be replaced with fileSingle or filePlural in the translation file\n. Ok - will use your fix then...\n. Use this project page only for logging issues or enhancements.\nPlease post help and coding support queries on the discussion section of the plugin site.\nIn your case above you have not provided the uploadUrl parameter, which is needed for ajax uploads. If you do not provide uploadUrl, the plugin will treat it like a normal form based upload which will not allow you to append files and other such stuff supported only in ajax uploads. The uploadExtraData will also only be parsed if you are using in ajax mode with uploadUrl.\nRead the documentation in detail to understand what are the options available. Especially read plugin usage of what is supported in ajax and form modes.\n. By reading the docs... as there are many options that you can do to achieve your use case.\nYou need to go through plugin options\n- You can use the various templates related properties to change templates \n- You can set showUpload to false and trigger the upload method separately via another button. \n...etc... many ways to do this.\n. You need to set the language property. Read the docs for plugin options.\n. Remove the entire following line in your plugin setting and check\npreviewSettings: { image: { width: \"auto\", height: \"100px\" } },\n. Anyway  - I will try to provide a fix for this exception message.\n. You may check now with the updated code from dev-master.\n. If you want only ONE image to be uploaded - there is a simpler and better way... JUST DO NOT set multiple attribute of the file-input element markup - it will be treated as a single file upload each time.\n. Not sure with what and how you are doing. The demo pages have some examples of how plugin behaves after any validation error and how you can add files to preview even after an error.\n. The file dialog shown on clicking browse is a browser specific functionality (similar to how you use a HTML file input) and selecting files via the dialog is again based on inbuilt functionality of the browser. So there is nothing which the plugin can do to change the browser offered feature.\nThere is an alternative feature which the plugin offers which is DRAG & DROP where you can select files across and drop to the file zone. This is applicable you use ajax upload of usage in the plugin (read docs for the modes.\n. You may want to read the docs. It seems you have the class = file set on your HTML file input markup. If you set class = file on your input, the plugin will auto initialize.\nThat is why it is not registering your custom javascript init. You need to remove class = file if you are initializing via javascript. Check the docs and demo examples carefully.\n. The latest stable release is v4.2.0 and not v4.1.9. Not sure why you are working with a older version.\nIn addition, more other enhancements are available in upcoming v4.2.1 that you can pick from dev-master.\n. Cannot replicate your use case. Can you check on demo site (the ajax demos) and let know if that happens?\nIf it happens only on your environment - ensure you have the updated code from dev-master.\n. Refer enhancement #328.\n. Please read docs. Especially the plugin usage modes as this is a question asked by folks who are new to using the plugin. Read the browser support section to understand features supported.\nPlugin can be configured to work in one of the modes:\n- AJAX\n- FORM SUBMISSION\nDrag and drop only works for AJAX mode and it does not work when configured for submission with a form or use native HTML input features - so no data is sent to server on form submission.\nAs highlighted in docs DO not combine FORM SUBMISSION with AJAX.\n. Currently not there - probably as a new extension when I get time.\n. Actually the nuget package versions have not been bumped. This will happen from next release. Noting an enhancement.\n. Resolved via upgrade to release v4.2.2.\n. You seem to not be sending data from your server code correctly.\nBefore using - read the plugin ajax upload requirements and docs - and what your server code MUST receive and send for the plugin to recognize the successful upload.\n. Check the code with example on the demo site. The example has minImageWidth and minImageHeight of 50px... try to upload an image less than this width to see the validation message.\n. Cannot unfortunately help debug your code... you would need to check what file you are testing and what is the expectation by cross checking.\nAs I said, crosscheck with example on the demo site. The example has minImageWidth and minImageHeight of 50px... try to upload an image less than this width and test to see if you are getting the validation done by the plugin. If its working on the demo page, then based on that you need to study the same and debug your code and files to understand if you are doing it correct for your use case.\n. Not sure this is understood correctly.\nIn asynchronous mode you only read ONE file at a time per ajax request. So it is intentional. \nIf you upload 5 files there will be 5 parallel ajax requests. But each ajax request will read only one file and is intentional/intended.\n. Your server code needs to be correctly modified to read ONE file only for async ajax upload. It will be logically incorrect if you read multiple files because each file thumbnail in preview corresponds to each async ajax request. If you need multiple files in ONE ajax request, you need to use SYNC upload.\n. Resolved via update to release 4.2.4 (will be tagged later).\n. Via your server code like how you would receive files for any other file input.\n. With release v4.2.5 and #370... a new event filepreajax is now created that fires just before filepreupload... you can use that.\nCheck docs for filepreajax event.\n. Validate this in your server code that processes the upload and return an error message (in the json encoded response) against each file uploaded.\n. Cannot reproduce your case.\nYou may want to check if you are returning the right response from your server code. Read the plugin ajax upload requirements and docs - and what your server code MUST receive and send for the plugin to recognize the successful upload.\nThen debug using Chrome Developer tools or Firebug (on Firefox)... to find whether you ajax request is sending or receiving the right data.\n. Size check is for each file only. You can achieve your use case to some extent by setting a fixed file limit per file via maxFileSize and enforcing maxFileCount. For example to limit total upload to 2500 MB... you can achieve it with maxFileSize = 250 and maxFileCount = 10.\nBut for any variations and custom validations you currently need do the check on your server side and can return an ajax response to show an error message.\n. Check browser support for blob url here... you may want to upgrade your old Opera version to a newer one. Version 9.8 is quite old... currently opera is crossed v30.\n. Not related to the plugin... use this project repo to only log issues related to bootstrap-fileinput.\n. Check ajax scenario 9 demo for an example.\n. Can you use the latest version from the repo and redo the changes?\n. Not sure of your use case.\nBut if you are keen to refresh the preview - try using the more straightforward method. Refer ajax demo scenario # 4 to automatically generate the preview thumbnails by sending the initialPreviewConfig from your server upload response.\nThe same is available for synchronous upload as well in ajax demo scenario # 5.\n. Before using the plugin, read documentation thoroughly. Understand the usage modes of the plugin and what is possible OR NOT POSSIBLE. You are using a normal form submission mode which relies on native HTML file input functionality that does not offer many file uploading features seen in the demos. The plugin therefore additionally offers an ajax mode of upload which offers features but requires you to set up the uploadURL for upload in the right manner.\n. This is not in scope of the plugin... it basically works on the premise to basically use HTML 5 features for fileinput and filereader and xhr2 for ajax. For non-ajax scenarios, HTML 5 native file input support does support MULTIPLE file upload - but it does not allow you to edit selected files (i.e. selectively append or remove files). So currently for non-ajax cases its limited to this inherent functionality. Support for older/outdated browsers is again not in scope - its not worth the effort to add more code overhead just for supporting older browsers (NOTE: HTML 5 functionality support is a pre-requisite anyway for most of the inherent features of the plugin - it offers a leaner code base using native features).\nYou are still free to submit an enhancement PR if you have a better thought.\n. It all depends on what you need and how you configure the plugin. Read documentation and cross check the various ajax upload scenarios AGAIN.\nPredelete only works for a server uploaded file that is set via initialPreviewConfig. \nSo to achieve the delete of an ajax uploaded file you must set the initialPreview to show the server preview thumbnails. \nCross check the ajax scenario 4 and ajax scenario 5 on how you can automatically show the initial preview after ajax upload.\n. If you are using without ajax - the files will automatically be replaced.\nIf you are using with ajax - images are appended by default. The maxFileCount controls how many files you can select at a time for upload... but you must clear the files if you wish to replace / overwrite.\n. Resolved via #371 and as mentioned in this comment.\n. You need to use it like any other native file input and read via server code (note you cannot use ajax features of the plugin if you wish to read file data via form submission).\nRead some web tips on using file input plugin with server code.\n. Replace _LANG_ with your locale code i.e. bg\n. Get the updated code from dev-master -- the CSS has been enhanced.\n. Read docs. You must load the fileinput_locale_pt-BR.js after fileinput.js is loaded and set the language property as well.\nCheck the demo example and pre-requisites mentioned for multi language.\n. As I mentioned you must read docs and demos carefully and closely. You need to set language property in addition to loading the locale JS file.\nCheck the Portugese Brazilian example on the multi language demo page to understand.\n. Check #377 - will be resolved via that.\n. Again as in #369 this depends on the browser's ability to show embedded PDF - and is nothing that can be controlled from plugin.\nHowever, if you want preview to be disabled across... you can set the allowedPreviewTypes property to allow only specific file types to be previewed.\n. Duplicate to #250. Use slugCallback property.\n. Check #378 - will be resolved via that.\n. This is dependent on the browser and its inherent behavior (will only happen if you select files by clicking browse button where you use the native file input to select). \nAnyway there is no duplicate check separately possible (or intended). it depends on browser's inherent ability to track the same filename and local location. You may try it across browsers (other than Chrome) and check the behavior. Note that file with same names does not necessarily mean its duplicate.\n. As I mentioned currently there is no special validation built for this in the plugin. The native file input itself has this check built in within certain  browsers.\n. With v4.2.4 uploadExtraData is parsed in ajax beforeSend as per issue #342. Can you check if you are receiving it fine on your server code.\n. I will check if there is a better way to fix that.\n. New property autoReplace added. Refer docs for autoReplace.\nRefer a demo of auto replacing files in preview based on autoReplace and maxFileCount setting.\n. There is no change. You can send extraData like before. An example can be referred in ajax demo scenario # 3.\nThe only difference is that filepreajax event now allows you to just trap the scenario just before the user clicks the upload button to submit the ajax request. As needed in #342, the developer can use this event to manipulate uploadExtraData just before upload. This is possible by setting uploadExtraData as a callback referring an input value in your form - you can change that just before upload.\n. You can try with the updated plugin version from dev-master.\n. Read docs. You can configure / control what types of files are to be previewed by setting the allowedFileTypes and allowedFileMimeTypes. Just set the file mimes or types that you will need to be previewed for your use case (by not setting binary object files).\n. New validateInitialCount property added. Refer demos.\n. Refer updated demo.\n. Could be a case specific to your preview thumbnail (cannot be reproduced - and hence is a specific styling issue related to your environment & theme). Adjust the CSS classes where needed by passing the CSS Class property to your fileinput container and overriding CSS where needed.\n. Again adjust this as you need for your use case... change settings of image height in previewSettings ... where needed.\n. Handle this through your custom javascript on fileimageloaded event that shows an alert ... without triggering an error.\n. I do not understand. You as the developer needs to write the code to validate the image dimensions (e.g. $('img').width() > maxWidth).\nI was mentioning that the validation code could be written inside the fileimageloaded event for example. Read about jquery events if not clear.\n. Not clear with query. You can set uploadExtraData as a callback function to return input values at runtime.\n. Avoid creating duplicate issues. Duplicate to #364.\nRefer the comment in that issue.\n. Your use case unfortunately cannot be generalized. For example, what if user deletes the initial preview files and then tries to select another file and clicks clear. If it shows an initial caption pertaining to the old deleted file - it will be incorrect.\nI think this needs a bit more thought. Will update (probably with another option for this)\n. This is enhanced now with the latest commit.\n. Not sure you read the docs. Please do read the usage modes of the plugin.\nDrag and drop can be used to read files only via AJAX and not via the native file input (NOR via FORM submission).\nBasically files selected in HTML native file input cannot be manipulated or appended/changed via external javascript.\n. Just reiterating:\nIn AJAX mode --- you will receive files on your server code BUT CANNOT use the NATIVE file input to read file data on client. However you can use advanced features like drag & drop, append/remove files before upload etc.\nIn NON-AJAX (normal form submission) you ll receive files on your server code AND also be able to read data for the native file input. However you cannot drag & drop files, or append/remove files before upload.\nJust check docs for minFileCount and maxFileCount properties to do checks for count of files.\nWhile maxFileCount is comprehensive in checks ... minFileCount may not be completely comprehensive because plugin will not know when to do the minimum file count check exactly. It does do this check before upload but if you use initalPreview user can violate this check.\nIt is recommended therefore that the most straightforward and comprehensive method to do the check for AJAX submissions is to do it in your SERVER code that processes the files AND do a count check OR validate it with earlier server uploaded files if needed or any other use case and return an error or message if needed.\n. > How do you suggest that I check if there are files without uploading? I do not believe you have that capability yet.\nRead about minFileCount and maxFileCount in plugin docs and go through this plugin's page demo for minimum file count validation for AJAX submissions. Read the fine line comment and understand that depending on how you configure the plugin, you may need to also double up the validation via server code to be sure.\nFor min file counts - NOTE that technically this is an event which each individual developer will need to decide, when to be done and code accordingly. It cannot be done on file selection but probably at some other stage during form submission. (Doing this check on server will be more trusted way depending on scenario esp. if you have initialPreview set).\n. Read about the various plugin events. Depending on how you have configured you need to use the right event. You can try using filebatchselected event or fileloaded event for example - they offer a method to access the filestack or file or reader instance.\n. I am not convinced OR not clear why its needed - because precisely that's what events are intended for. These make you available the information needed (files in this case for filebatchselected) based on which you can trigger other actions. For example you can disable the upload button Or store data in a variable for future reference.\nNote: If you want to abort/prevent the file upload from any other event ... you can read the events manipulation as described. For example, in your filebatchselected event you can return an object containing:\n- message: string, the validation error message to be displayed before upload. If this is set the plugin will automatically abort the upload whenever called and display this as an error message. You can use this property for example to read a file and perform your own custom validation.\n- data: object, an optional associative array of additional data at abort, that you can pass for usage later.\n. If you have a suggestion for enhancement please raise a Pull Request (I do not see the code you mentioned you have posted).\nYes you can access any method in the plugin - so if that was the query - this issue will be mute ...if you want to know if you can access methods. Note that not all methods are documented for public use... because many internal methods can change in future - the public methods documented are listed here. But you can technically use the internal plugin methods as you can check from the code.\nHowever, if you need to understand how to use functionality as intended in the plugin design and which will work irrespective of future expansions/ updates to the plugin - you need to use the documented methods and events - which I was trying to explain. Its anyway upto you to decide.\n. > From what I understand file batchselected is when they are added or dragged&dropped. I would need a preupload sort of event.\nBTW.. there are filepreupload or the filebatchpreupload events which allows you to detect preupload and gives access to all the information one needs. One can also abort upload from this event as explained in events manipulation. \nAgain this is the intended plugin design and best practice to allow developers to expand upon with minimal coding effort (without needing to modify plugin design) and should safely work with future updates. Of course I cannot enforce this.\n. If you get the updated code... your use case can be achieved via ajax scenario 9. Its a simple few lines of code to trap the event (which you may anyway doing with your button click code).\nI will need to think on your PR (because function/methods and their params may change with future updates and can break BC and each developer's code - so there needs to be a thought on segregating methods as private and public). \n. Thanks... will check this as I get time.\n. Have modified it a bit and merged.\n. This will be resolved via enhancements in #401 and as discussed in #400.\n. To directly add additional buttons to each thumbnail overwrite the layoutTemplates.actions template.\nFor additional buttons or tags to render dynamically use the below:\nFor setting up your own custom buttons or icons or add your own custom markup within each thumbnail you need to use initialPreviewThumbTags for initial preview or previewThumbTags for normal preview.\nNote that you need to edit layoutTemplates.footer property to define custom tag codes that will be replaced at runtime.\n. You need to use events manipulation feature of the plugin to return an associative array containing message and data to abort the upload.\nCheck ajax scenario 9 for an example... it uses filebatchpreupload event in the example there but you could use it with other events (except a few events listed in docs).\n. > I cannot upload anything now. what did I do wrong?\nYou do not have the updated extension code from dev-master... the release is not tagged yet. Pick the code from master.\n. Retry after clearing browser cache and restart. You can check with other events as well as mentioned in demo.\n. You need to modify JS code at your end... to validate and access errorKeys only if data is defined. For example:\njs\nvar errorKeys = data && data.errorKeys ? data.errorKeys : '';\n. Ok I understand this... will address this through a fix.\n. Refer #401 for all enhancements.\n. This will be resolved via various new enhancements to file selection in preview.\n. Refer #401 for all enhancements.\n. You need to debug your JS code and server code. It seems you are calling your own javascript to trigger upload on drag and drop where you are facing an error (you need to debug from browser JS console to find the reason for the error). \n. Cannot reproduce your use case. Check if you have the updated code. Thiis scenario works fine on the demo page, which you can cross check.\nIf you still face the error... post a link to JS Gist or something to check.\n. As mentioned in documentation for otherActionButtons - the dataKey is intended only for initialPreviewConfig i.e. files on server.\nIf you want actions on client file (not yet uploaded to the server)... then directly use jquery to get the image source by traversing to the button's parent.\n. Language code is zh-TW isn't it? Can you change tw to zh-TW?\n. Refer #412. Use new property msgUploadAborted to control message.\nIn addition - note that cancelling upload just initiates aborting of the ajax request. Usually for large files it will work as intended. It basically depends at what stage the user clicks cancel. If the ajax request has posted data on the server and still not complete - you can cancel it but it will have posted/uploaded files but not completed the entire transaction.\n. Related to #410 \n. Related to #410.\n. Since you are auto uploading to server - the client plugin will not know about what you want to do next and it depends on each developer or app's use case. For your use case you typically can do one of the following:\n1. on the client side you can try disabling the fileinput after file is uploaded by using filebatchuploadcomplete or a similar event (e.g. you can use the disable method of the plugin.\n2. or alternatively you can check this in your your server code (e.g. php) and trap the duplicate upload and return an error \nFor other cases you can set the autoReplace property with maxFileCount set to 1 to ensure plugin overwrites files selected with 1.\n. Check ajax scenario # 7 for a close example - how data can be set for each thumbnail.\n. You need to check your configuration and ensure its a right object (associative array) that you are passing. Check the ajax scenario 3 demo for an example of initial preview configuration.\n. Read and check browser support in documentation - your browser version must match the supported features.\n. No initialPreviewConfig is an array. Its an array of objects. You need to ensure the configuration is correct. \n. Ok I will check this...\n. I rechecked and the code looks ok. Hope you have the latest code from dev-master (v4.2.6).\nThe config used in previewCache.set must be an array (which basically will be the initialPreviewConfig passed).\nThe 2 places where  previewCache.set is called uses initialPreviewConfig which is an array.\n. You should not be changing previewId (it will also break other events) - Rather it must involve reordering the index in filestack (matching the data-fileindex attribute in preview frame).\nMay try to include an enhancement later to reorder files when I get time or support.\n. I am not clear with the question. The delete button configuration is only intended to delete files uploaded on server - which you will configure with initialPreview.\n. The delete url is applicable ONLY FOR SERVER UPLOADED CONTENT rendered via initialPreview. \nWhat else do you expect to delete and where?\nEven if you do not return initialPreview immediately after upload... it needs to be configured on plugin load for delete url to work. Refer ajax scenario demo 3 for an example.\n. @lewis-spears the way it is designed is - for displaying server uploaded files and deleting files on the server you need to configure that via the initialPreview and intialPreviewConfig... you can choose to do this immediately after upload where you can return the updated initialPreview and intialPreviewConfig. Within the intialPreviewConfig (read the docs)... you can set options for the file key identifier, the URL to delete that will be called via ajax etc.. hope this clarifies.. You can go through the ajax demos. A couple of examples are mentioned in ajax scenario 4 and ajax scenario 5. Your uploadUrl server code that processes the upload can return the JSON object containing  initialPreview and intialPreviewConfig.. You must return only ONE file in initialPreview array for each async upload - unlike a sync upload where you return a batch of files in the array.\n. It should not impact at all... note that for async mode, the plugin fires a separate ajax request for each thumbnail and will replace the thumbnail with the output from the server once ajax request is complete. It should not matter which upload finishes first.\nRefer ajax demo scenario 4 for an example\n. This is due to a reason that we need to cache initial preview for the session if multiple uploads or deletes are done by the user. Will provide a fix for this in next release.\n. Resolved via latest release updated on dev-master.\n. Read docs... Use initialPreviewThumbTags to replace these tags in the markup for initial preview.\nSet the layoutTemplates.footer property to add custom markup tags.\nSet previewThumbTags to replace these tags for normal preview (where you can set these custom tags to an empty string).\n. You can set uploadExtraData to pass additional information as a callback function. \nFor async or individual thumb uploads the callback can receive the previewId and index that you can return if you need. Read documentation for uploadExtraData.\nFor sync uploads... you may set some parameters unique for each previewId on fileimageloaded or fileloaded events which you can return via uploadExtraData callback .\n. Refer ajax demo scenario 7 for an example.\n. Yes it should work for async upload as well - check and confirm... (will update the docs).\n. If your query is related to #420 it will be fixed there.\n. This is resolved via enhancement #426 with further features.\n. Try this approach as discussed on SFO\n. You can write it easily using your own jquery/javascript.\njs\n$(document).on('load', function() {\n    var imagesLoaded = 0;\n    $('.file-preview-initial img').each(function () {\n        var $img = $(this);\n        $img.on('load', function() {\n            imagesLoaded++;\n            if (imagesLoaded == TOTAL_IMAGE_COUNT) { // or you can validate this through a loop or event\n                // DO WHATEVER\n            }\n        });\n    });\n});\n. Resolved via latest release updated on dev-master.\n. Refer updated docs and image management demo.\n. The fileuploaded event is only fired for async uploads OR individual file upload via each thumbnail.\nIts not fired when uploadAsync is false.\n. I see... yes it currently has the validation for preview shown only... will check and update in the next release.\n. Resolved via latest release updated on dev-master.\n. Check updated ajax demo scenario 10 and scenario 11 for details.\n. Seems to be a bug in MS edge - need to vote/report with MS.\n. Only solution I see is to currently disable this feature for EDGE users by detecting the browser.\n. Resolved via latest release updated on dev-master. Check and update.\n. You do not seem to have got the updated code OR you need to check if you are using the right plugin code.\nYou may check on the demo page where it works for example the image dimensions demo and try dragging non-image files into drop zone and trash them individually.\n. The file posted to server is a blob and will return whatever inherent file name is. \nYou can use uploadExtraData to send your slugged filename as additional data.\n. With the next release 4.2.7 - the file names will be returned slugged by default... so I am noting an enhancement. This feature will be possible only for AJAX uploads.\n. Resolved via latest release updated on dev-master.\n. Resolved via latest release updated on dev-master. Check updated documentation and updated demos.\n. Check updated docs and image resizing demo.\n. Ensure you have form markup as multipart encoded  AND YOUR fileinput attribute has an array naming convention. Refer this web tip.\n. The detailed demo for an example of using this can be checked at this page.\n. Default ajax delete method is changed to POST from release v4.2.6 (it was DELETE in earlier release). You need to program accordingly or can override ajaxDeleteSettings to set what you need for your use case.\n. Yes you need to create your own modal dialog for showing the text content on your server.\n. initialPreviewShowDelete is applicable ONLY for thumbnails set via initialPreview (from server).\nIt will not be applicable for thumbnails selected via file input (from client).\n. Not sure why you want to hide delete button for thumbnails for files selected from client.\nBut if you still wish to hide delete button for client selected files... then set layoutTemplates.actionDelete to an empty string.\n. Cannot seem to exactly reproduce the issue. Can you expand upon the issue you are facing by adding a few more pieces of information to your report?\n- What steps can be used to reproduce the issue?\n- What is the issue and what is the expected outcome?\n- Are you using this with other plugins?\nThough I have not looked at your scenario. As a side note, a simple form based upload can achieve your use case for ONE FILE upload and you can avoid the rigamarole of uploading to temporary folder etc.\nCheck the avatar upload demo on the plugin page. The actual server based upload can happen after form submit.\n. Its expected that the file-loading class hides the native file input and shows a loading indicator until the plugin fully loads the advanced upload widget. You need to make sure you initialize the plugin on document.ready or something to ensure the plugin loads only after entire page is loaded.\n. Upload button will not be disabled as it will still be available to UPLOAD files that have not faced a validation error. Files that have faced a validation error will not be uploaded (nor will be available to the server code via AJAX).\n. To reiterate the upload button will not be disabled. If you would need to do it for a very specific use case like yours -- you can call the disable method after a fileerror event (OR call a JS to disable the upload button and prevent its click) if needed. Note that as mentioned, irrespective of the upload button being shown or not -- no files will not be sent to the server if the file has a validation error.\n. You need to check if all the relevant assets (JS and CSS) is loaded in the right order starting with jquery.js.  Cross check your dependencies with the plugin usage docs. Also ensure you rule out and remove any third party plugins or Javascript that is erroring out.\n. Not sure if I understand the issue.\nIf you do not want initialPreview to be cleared, then set overwriteInitial to false.\nCheck ajax example demo 3\n. Entirely depends on you (the developer) and how you style it for your application. The plugin offers various properties and templates to configure and your end result depends on what feature you are enabling and how you style it. For example, check the advanced example # 3 on demo page - the entire widget is displayed as a block button which is responsive with the preview.\n. Did you read and try the maxFileCount property. It will allow users to only upload a certain number of files each time.\nIf you are talking about setting some concurrent limit at your session level - you need to handle it through your server code.\n. The localization works fine on 4.2.x - you can cross check with the demo.\n. This is already highlighted in the docs.. make sure you go through them before any update.\nand also in the link here and the demo page.Read the note on the top to enable multi language.\n. The locale js file must also be  loaded after fileinput.js on the page.\n. Read docs and about elPreviewContainer\n. Its more to do with browser version which does not support OBJECT EMBED.\n. These are already mentioned in the documentation. \n- Read uploadExtraData plugin option in docs\nRead docs to understand receiving data on server for ajax uploads for:\n- asynchronous upload\n- synchronous upload\nIn addition a demo example\n- ajax example # 7\nUsing a callback function to set uploadExtraData allows you to pass dynamic values (which is parsed at runtime) instead of static.\n. Do not see an issue in file extension validation.\nHowever, you seem to be using an outdated version of the plugin (from the code line number you provided). Would recommend you to upgrade and confirm.\n. Please debug your code. The data attribute is not quoted properly. It must be\njs\ndata-allowed-file-extensions='[\"csv\"]' // you missed the quotes\nYou can use the plugin Comments and  Discussions page to ask for help on coding or programming\n. As I mentioned its a HTML markup and jQuery JSON parsing and markup issue and nothing to do with the plugin.\nYou must swap single and double quotes. \nRefer this example on how to pass an array into jquery data attribute. If you feel this is still an issue with the plugin - update here and I will open it.\n. Could you share an example fiddle?\n. You can check the basic demo example # 7 where it works fine. Am closing this specific issue for data attribute format. If you find anything specific to the plugin which can be reported or improved here - please update and I will open it.\n. You may want to go through the plugin docs and demos. Most of this depends on how you design your app and when you would like to trigger delete. One way to do it is to use initialPreviewConfig and set the delete URL to an ajax based server action.\nFor example check ajax demo 3.\n. It seems some problem specific to your environment and looks like some javascript errors on your app install. You must check for other invalid js code OR  third party javascript plugins causing this AND ALSO check if you have loaded the dependencies in the right order (e.g. jquery)\n. Cannot reproduce the issue. This is not related to the plugin - but something to check in your application. \nYou may check the plugin docs and multi-language demo to verify the plugin setup for multi language locale support on the same page.\nYou may try posting this on the Comments and Discussion pages to get coding or programming help from others for your app. Please use this repo to report plugin specific issues and avoid raising duplicate issues.\nIf you still have any feedback on improving this in the plugin - let know and I can open this issue again.\n. You may wish to update this thread with any enhancement needed. I am open to suggestions and can open this up. \nCurrently as a jquery plugin the functionality is limited to using it out of box - and tests are there for various scenarios. I cannot commit that it will work for every third party framework or AMD, as it is not been tested there. But it should be technically configurable by developers according to their need (since its in the end plain Javascript and CSS). For your use case, you can check that locale updates do work if you load the JS in the right order on the page and set the language property as seen in this demo and you need to take this understanding within your app.\nOn issue updates - please do note that I get multiple questions via different forums and github issues are raised (in multiple repos) and unfortunately I can only randomly prioritize this during my spare time. While I try to do my best, I do not have a committed specific ETA to respond or close - as these are open source contributions that I deliver on best case basis to the community.\n. This is resolved via #481.\n. Cannot reproduce your issue. Which browser and OS are you testing this on?\n. It works fine. Do not see an issue.\n. You mentioned the caption (the text which displays filename). It is responsive and the text adjusts automatically to the size - do not see the overflow on the demo. \nFor the buttons --- they are rendered via stock bootstrap CSS (input groups). You would need to set the button labels to empty string in plugin options (OR keep iconic buttons) or reduce number of buttons to fit to mobile screen.\n. This is an application specific styling need and your second use case as well is specific to your application.\nNot sure if you read through the documentation and the plugin options. There are various configuration options in the plugin setup to help you achieve what you want.\nSome examples of various ways to achieve different styles:\n- Check basic example # 5 \n- Check the advanced example # 3\nYou can for basic example # 2 \n- Set browseLabel, removeLabel, and uploadLabel to an empty string in plugin options and see that it will always fit a mobile screen.\n- You could set CSS class for various elements in the plugin options\n- You can set templates to configure your layouts\nThere is nothing to be defensive here - as each developer's use case will be different and one needs to setup his/her styles as needed. \nAs mentioned the default CSS styling is bootstrap STOCK inbuilt CSS using bootstrap input groups - which can be changed through various methods\nIf you really wish to report an issue  - update here. Am closing this as this is related to CSS styling for a developer specific use case.\n. Refer #462. Enhancement has been provided to default CSS (if using bootstrap input groups) - for handling auto hide of labels for small screen devices.\n\n. These are internal CSS classes (used only for JS validation) and have nothing to do with the plugin styles.\nThere is a reason for using CSS classes for certain internal selectors and not ID attribute - because this allows for multiple file input widgets on the same page (having the same ID on same page will cause breaks in functionality).\nFor styling - yes you would need to check your internal CSS and see if they are conflicting and if you wish to change them you can set your own CSS classes and layout markup settings using the various plugin properties \n. Set upload data as a callback function. For example it can return an hidden input value as json obj. Then use other events to change the hidden input.\n. Yes it is one of the ways to do it.\n. README has been simplified to avoid confusion - all docs are to be referred on the plugin website.\n. It is not in the scope of the plugin. Your form validation and submission must be handled through your own code. You can use plugin events like filebatchuploaderror or fileuploaderror to disable the form submit button.\n. You have the event parameters wrong. Check the example in the documentation. You skipped the first parameter event which is applicable for all events. \nSo you must use:\njs\njQuery('#ad-image').on('fileuploaded', function(event, data, previewId, index) { \n  console.log(data.response); \n});\n. Simple setup without much complication\n- Set  input's multiple property to false (i.e options['multiple']) if you WANT ONLY ONE file to be selected - rather than setting maxFileCount\n- For simple single image view and update using form based submission - check the avatar upload example that uses defaultPreviewContent instead of initialPreview. Set the defaultPreviewContent to your saved file (or a default image if file does not exist) - and overwriteInitial to true.\n- For making users mandatorily select a file to upload in Yii framework - set the required property to true for the attribute in model validation rules.\nBTW... thanks and appreciate the encouragement.\n. >  it just doesn't appear to take into account the init file count on submit - which I think is probably just a small bug.\nNot really. This depends on how you configure the plugin and then combine it with your server code. You may want to check the docs. Note that maxFileCount or minFileCount validation by default does not include initial preview count., If you need to validate the initial file count, then you must set the validateInitialCount property to true. \nFor delete data manipulation you may want to read this comment in another issue.\n. > run in ajax mode (dummy url) which stops this plugins validation from firing on submit so the above discussed issue of not taking into account init preview file count doesn't come into play\nYou may run into a few issues with the approach (which is why the docs mention not to combine ajax submit and form submit modes together). The issue is that reading $_FILES via form submit may not be the same for AJAX based submit (ajax based submit will be the most correct while form submission has a few limitations). \nBoth will work similar to an extent until you start appending to or removing files from a previous selection (OR you use drag and drop - which is supported only by ajax mode). This is because NATIVE FILE input cannot be edited or appended via javascript (and its ONLY the native file input data that you receive on your server if you are tracking a native form submit - and these are files selected via the browse button). So if you need advanced features like appending/deleting files on client itself within the preview before UPLOAD - this will only work with an AJAX SUBMISSION and not via FORM SUBMISSION.\n. I think if you need the various functionality that requires AJAX... then you should directly use AJAX uploads feature instead of form submit. In that case, you can configure uploadExtraData as a callback function where you can send in all the additional form inputs serialized. The upload button can be changed to Form Submit and can rendered anywhere on the page (using the templates and element setup feature). By this, you can make the behavior very similar to a form submit - but yet have the various additional functionality achieved via ajax mode.\n. Yes the plugin returns the filestack and allows you to get this easily now via getFileStack method.\n. Deleting files or understanding list of files on server is to be handled via server code as there is no way for the javascript plugin to know about this. \nPlugin can send the list of files which is currently being uploaded and you can get the list of files currently being uploaded (either via FORM POST or in your ajax action depending on your usage)\nThe server (or ajax) code that processes any upload on server must be able to parse and read the files previously uploaded and manipulate.\nPlugin offers some options to send additional data to handle such use cases. If you need custom data or actions for each thumbnail (e.g. a delete checkbox for each thumbnail) - then you can send this information through \n- uploadExtraData for new files \n- initialPreviewConfig.extra or deleteExtraData for server uploaded files \nYou can also configure the above properties as a callback function so that they send data dynamically to your server,\nCheck an example in ajax upload example # 7 for an example of sending custom data for each uploaded thumbnail.\n. @kalpeshparakh and rest... yes I would always recommend to read the documentation before raising an issue OR trying out your coding because your programming use case is exactly addressed there.\nRead the ajax uploads section of the documentation. Read about Synchronous and Asynchronous uploads. \nFor Asynchronous upload (when uploadAsync is true and is the default)... parallel ajax calls will be fired for each and every file selected... and each file is sent separately with every request to server.\nFor Synchronous upload (when uploadAsync is false)... only one ajax call will be fired... and all files sent as one batch array to server.\n. Need to understand details.\n~~Also can you check your use case by rather using the filebatchuploadsuccess event.~~\nEDIT: I just understand you are making an asynchronous call... so filebatchuploadsuccess will not fire. For asynchronous mode you need to use one of fileuploaded or filebatchuploadcomplete  - but you need to be sure if the filestack is not getting reset because of your other JS calls.\n. Cannot seem to reproduce your use case?\nThe ajax demo 4 on the demo site seems to work fine and sends each selected file for upload to server without any issues?\nHope you do not have caching issues on your browser OR the web server using outdated code?\nIn case you feel you are still facing issues:\n- What is your browser and OS version?\n- Are you using any other JS or plugins and have all dependencies correct?\n- Please share an example or JSFiddle where this can be tested.\n. Ok that's why it was not clear what is the issue. Note that the normal Upload button works. \nThere is an issue while uploading via the individual thumbnail upload buttons. Updating the issue title to make it more clear and will check this.\n. This is resolved - you may check and do the tests and let know (remember to clear cache from your browser/web-server before test).\n. The new release will be tagged after more tests. You may need to change your composer.json to accept dev-master releases OR for testing overwrite the bootstrap-fileinput repo onto your vendor folder \n. Not sure what the issue is. You may want to post framework specific configuration outside this OR try using the plugin discussions and comments section to get help.\nRefer installation and configuration steps for plugin here.\n. The upload button is not intended (as part of plugin design) to be disabled on any validation. So this must be handled in your code. However, note that any files that fail validation error will not be sent to the server (when upload button is clicked). \nHaving said that, you can achieve this for your use case easily though by trapping one of the error events for your use case. For example:\njs\n$('#input-id').on('filebatchuploaderror', function(event, data) {\n     // call any validation here to disable the button or disable the entire file input\n     $('#input-id').fileinput('disable'); // you can add another button to enable and clear\n});\n. I am not sure why. \nIts been a real pain to do specific stuff separately for IE versions each time. Will need to check when I get time if there is any CSS fix for this.\n. Resolved via specific fix for IE10.\n. You can use events to show any div/popup OR add your own CSS to show an image in a particular section.\n. Check the auto replace usage demo\n. No.\nAppending/replacing/deleting selection of files before upload will only work with ajax mode (with uploadUrl). Read documentation for usage modes.\n. Good question.\nCan you tell me the use case where you face this (anything from the demos) -- so that I can test and fix.\n. Duplicate to #367 and #250. The plugin uses a default slug routine to prevent unusual characters breaking JS. You can override it with the slugCallback property as a function to allow what you want for your use case.\n. Seems browsers like Chrome do not allow the same file to be selected again in the input until page is refreshed. Can you check and confirm across browsers and OS?\n. Cannot reproduce this on Chrome or Firefox or IE (not checked on Safari). Meanwhile you may want to update with the following:\n- Which browsers you are facing this?\n  - Browser Name\n  - Browser Version\n  - OS\n- The steps to reproduce the problem.\n. This is fixed via latest commit - you can check now.\n. Not clear exactly on the query. If you are running your own custom form input validations - please check your other third party javascript code and plugins that you are using to do this (which maybe causing any conflict).\nThere should be no issue in having multiple file inputs on the same page. You can check the demo pages and each page has numerous file inputs together on the same page without any issue.\n. If you need newbie help OR have generic programming queries or need programming tips - there is a new forum created for this. Please ask a question on the forum here. \n. Deletion is possible and applicable for only server uploaded files displayed via initialPreview. For files on client that are not yet uploaded to server there is no  ajax action needed or to be parsed. So no delete event will fire. You need to check filecleared or similar event for such cases.\n. > 1. Click Upload: Image is successfully uploaded to the server. Remove button is available from the preview and the bottom bar. 4. Click Remove (either on the previewed image or the bottom bar)\n\nNo event is fired even though\n\nIt is an expected behavior and will not call the server delete url. As mentioned, the server delete url is only called for images displayed via initialPreviewConfig and not for images seen on client session during the upload.\nIf you want to display server uploaded files (for delete) immediately after a client upload then you can follow the ajax scenario 4 example. This example use case shows how you can immediately set an initialPreview after upload.\n. You should use \njs\nvar files = $input.fileinput('getFileStack');\n// get num of files below\nconsole.log(files.length);\n. You need to check your code and ensure that the plugin is reinitialized after every ajax completion to run the JS scripts in your partial view. If you are using Yii use the renderAjax method instead of renderPartial.\nIf you need newbie help OR have generic programming queries or need programming tips - there is a new forum created for this. Please ask a question on the forum here. \n. Such images need a EXIF parsing library to read the orientation tag - typically you do this parsing on your server side code after upload of image (though there are some experimental libraries to parse exif available on JS). \nFirefox 26 supports image-orientation: from-image: images are displayed portrait or landscape, depending on EXIF data. See this\nThere is also a bug to implement this in Chrome.\nIf we have it in CSS specs supported by browsers to change orientation - then it will be an easy lean universal solution.\n. No you do not do it just based on height. You can have an EXIF parser on your server that can read the orientation and decide how to rotate the image. For example PHP provides this exif method\n. You need to have a PDF viewer component on your browser.\nEDIT: You can use initialPreviewAsData option to true and pass the PDF links to be embedded with later 2017 releases of the plugin\n. You can pass the pdf source link and use initialPreviewAsData to auto render the PDF files -- check the preview management demo for an example for various types of files.. One way is you can set iconic preview as shown in the demos.\nAlternatively you can show only file names without thumbnails or icons in the preview as seen in this demo by setting hideThumbnailContent to true. You may want to read the docs once. \nYour ajax server action must return a valid JSON response and it is NOT returning a valid JSON output as in your PHP code above.\nThis is described in the ajax uploads section on what your ajax action server code must SEND and what your ajax action server code can RECEIVE.\nAs highlighted...\nYou MUST send a valid JSON response from your server, else the upload process will fail (unexpected token). Even if you do not have any validation error to send from your server, you must at least send an empty JSON object {} from your server.\n. Just read it like you would read data from any NATIVE HTML file input.\n. You may want to go through the docs. You can set uploadExtraData as a callback function as described here.\n. Note that reading and displaying a large file is entirely dependent on each client and browser to have the specifications to handle that. The plugin just returns any exception errors faced by the client.\nIt is recommended that you manage this as a developer by setting the maxFileSize, maxFileCount properties or selectively disable preview by setting allowedPreviewTypes or entirely disable preview via showPreview.\nRead similar issue #500.\n. You need to check the code and see what JS Code is generated from your Laravel server code - it should not be an invalid JS object.\n. Images are needed to be loaded in browser memory for various functionality reasons and it depends on the developer to control it currently. The needs for images being read on client are for:\n- displaying in preview and performing activities after image is loaded in preview\n- validating image dimensions and properties\n- performing image related manipulations (e.g. resizing images) and triggering events after image is loaded\nYou may need to plan your application design in such a way that you do not allow infinite or a large number of images to be previewed on the browser and allow it to be sensible and sane enough for most modern clients to handle it.\n- for example set maxFileCount = 5 to allow only  5 images at a time for upload\n- and/or set maximum size of image to be uploaded (so that it disallows such image to be previewed)\n- and/or you may disable preview by setting showPreview to false which will entirely eliminate reading each file in memory.\n. Yes it all is upto the developer to control it. Since whatever you need is dependent on each client machine and browser specs to be able to handle and process the size and scale of data.\nIf you need that large number of images without any size restrictions... one option is to set allowedPreviewTypes and configure them to not load the image thumbnails as described in the demo here.\nHowever showing a small or a big thumbnail will still require reading the image on the client. You can resize images on client to smaller thumbnails using the image management functionality as shown here. However, it still requires the HTML 5 canvas to read the whole image and resize it on the client. This feature only helps you save your server bandwidth and allows smaller files to be uploaded. However if your source image is large - it will still need to be read on client browser to do any image manipulation or reading or display on client.\n. Read this section of the documentation on usage modes of the plugin.\n. You are using a normal form based submission without uploadUrl (ajax).\nIf you read docs again carefully - the normal form based submission mode does not support many features that is supported by ajax (due to limitation of the HTML native file input that cannot be modified like other native inputs via javascript).\nNormal form based submission using NATIVE file input does not allow you to append or delete files individually on client before upload. Read about the comparison of modes on the link I sent above.\nAn option is for you to use ajax mode where you can append files but you need to set an uploadUrl  to a server action that will receive and process the files and extra data for upload ... here you can append files etc..\n. Image sorting via drag/drop has been included for already uploaded images in initialPreview via Sortable plugin.\nHowever images that have not  yet been uploaded are not sortable and not in immediate focus because it is not trivial and the code involved to validate this may actually bloat the plugin and needs exhaustive testing. \nBut feel free to submit a PR for this enhancement so that it can be accelerated. Am closing this currently - but can reopen it if you have a suggestion to hasten this.\n. Yes that is the scope of the sortable feature in the plugin. You can currently only sort uploaded files. The handling of sort for non uploaded files is not trivial and not in scope of the plugin as of now unless you wish to submit a PR.. You can read docs for understanding how you can receive server data after ajax upload based on async or sync mode.\nFor using the server data on your client and replacing inputs/preview -  follow the advanced dynamic preview example # 4 for async and example # 5 for sync\n. If you have generic programming queries or need programming tips - there is a separate special question & answer forum created. You may ask a question on the forum here. \n. You can store your own id in a data attribute or a hidden element within the previewId container - and parse it via events which share you the previewId.\n. Check ajax upload demo # 7 for an example.\n. It will be tagged a bit later. You need to download from dev-master in the interim.\n. You may read carefully and cross check the documentation and examples in the demos for understanding plugin usage.\nIf you need newbie help OR have generic programming queries or need programming tips - please ask a question on the forum here. \nClosing this (use this repo issue tracker ONLY for raising plugin ISSUES and ENHANCEMENTS).\n. This can be themed and styled by each developer by controlling the various templates properties in the plugin and setting their own CSS.\nIn case you wish this to be included in the plugin - it would be good if you can help with a Pull Request. \nCurrently will not have time to include this personally - so feel free to open a PR if you wish to have this faster.\n. I have mentioned it before in #511. Please read the docs and plugin options section.\ne.g. layoutTemplates and previewTemplates.\nI will not be providing any further help on this anymore in this repo (please use this repo for logging plugin issues only and not use this as a help forum).\n. If you need newbie help OR have generic programming queries or need programming tips - please ask a question on the forum here. \nUse this repo issue tracker ONLY for raising plugin ISSUES and ENHANCEMENTS.\n. Cannot understand nor is this readable. \nPlease create a new with a short title of about 8 to 10 words and put details in the description/comments.\n. Go through the documentation thoroughly in detail to understand plugin usage as well as the demo examples. \nExample of image resize before upload is mentioned here.\nUse this repo only for logging issues and enhancements. For general queries, help on programming, and/or newbie help, use the comments and discussions section on the demo pages - where you can request for help from other developers.\n. as mentioned in #510 ... pls raise issues with meaningful short to read titles... and put details in description/comments\n. A bit confused with the properties you are supplying to the fileinput plugin. None of the properties you have set below like cache, type, enctype are available in the plugin. Hope you have read the documentation of plugin options.\njs\n$(\"#idd\").fileinput({\n    type: 'POST',\n    cache: false,\n    uploadUrl: '@Url.Action(\"UploadFiles\", \"Home\")',\n    enctype: 'multipart/form-data',\n    overwriteInitial: true,\n    uploadExtraData: { folderid : productid , foldertype : \"type1\" },            \n   });\nIf you have extended the plugin, then no one possibly cannot provide help for that here... as you need to debug your code. There is a new forum created for Q & A on all extensions. Please post all help related queries there and use this repo only for logging plugin issue or enhancement.\n. Unfortunately cannot help in debugging your code. Please debug and check on your environment.\nJust try it with a simple HTML5 and javascript code as seen in the examples folder of the plugin. Then see how you integrate it with your server code. \nUse this repo to report plugin specific issue or enhancements. \nIf you need newbie help OR have generic programming queries or need programming tips - there is a new forum created for this. Please ask a question on the forum here. \n. Read docs. You can override the ajax settings by setting ajaxSettings for upload and ajaxDeleteSettings for delete.\n. The documentation and demos are SUPPOSED TO BE READ at this link as mentioned.\n. This is not typically related to the plugin (because designing a complex ajax queuing process is not the objective for the plugin). So  the solution could be in your app design. Your application design needs careful programming thought. \nOn one hand you know you will be limited by CLIENT specifications and CLIENT BROWSER capability and memory to handle FILE blobs beyond a certain number and size. You have to think about other design parameters like user experience and design your app accordingly. So your requirements (like allowing UNLIMITED files to be previewed on client) are conflicting and needs to be addressed in your design \nEither you limit the number of files, sizes and preview for upload - to give the best optimal performance\nOR\nYou need to program and implement a right queuing mechanism on your app. One way to do that would be to have multiple file inputs that would be used to select files and queue the uploads one by one.\n. Yes you need to check your plugin settings and config.\nPlease do a test internally and provide a JS Fiddle for testing out such cases when logging an issue.\n. Refer this in the Q & A forum for programming tips and help.\n. Your issue is not clear. You may read and go through plugin docs and plugin demo examples to understand.\nIf you need newbie help OR have generic programming queries or need programming tips - there is a new forum created for this. Please ask a question on the forum here. Use this repo for raising plugin issues, bugs or enhancements.\n. Maybe I can remove bootstrap from bower dependency and let developers install and manage it themselves. Let know your opinions?\n. Before using the plugin, read the documentation for understanding the pre-requisites. The browser support for various features is mentioned here\n. Its answered in the forum here.\nFor programming help and queries refer the new webtips Q & A forum.\nUse this repo for logging only issues and/or enhancements for the plugin. \n. Cannot reproduce this. You may want to check if you are configuring plugin rightly, or check for application or client level caching or outdated asset issues.\nYou may want to check these plugin methods on the demo pages for v4.2.8 and they do work fine.,\n. Will open this if there is a use case provided...\n. Check the slugCallBack property of the plugin.\n. If you are using form based submission mode within plugin (not ajax) you can directly check the file input value and if it is empty throw an error when form submit button is clicked.\nIf you are using ajax mode... you need to use the uploadExtraData to trap additional inputs and not use your form submission. The minFileCount property can also help in these cases. The plugin recommends you to not combine the ajax mode with form submission for many such reasons.\n. Closing this - please ask for generic server coding and programming help in the Q&A forum - and use this repo for only plugin specific bug reports, issues, and enhancements.\n. Resolved via 598f23a.\n. Read the plugin documentation to understand all properties, events, and methods. Also please go through all the plugin demos - there are various properties and config available for you to achieve this.\nA similar use case to yours is covered in the ajax uploads demo scenario # 6.\n. Duplicate to #367, #482, and #250. The plugin uses a default slug routine to prevent unusual characters breaking JS. You can override it with the slugCallback property as a function to allow what you want for your use case.\n. You may read the docs for all the events. You can use the filebatchselected event.\n. Read the plugin docs on the pre-requisites for ajax uploads and the response format expected by the plugin for ajax uploads.\nYour question is answered in this webtip.\n. You can read documentation and use the upload method of the plugin to trigger an upload.\nYou may in future ask for general programming help and queries in this new Q & A forum.\n. Duplicate to #367, #482, #250, #536.\nAnyway since many people are raising this.. the default slug callback will be enhanced via #541.\n. Read the docs and study the allowedPreviewTypes property.\nWhen allowedPreviewTypes is not set, it defaults to \n['image', 'html', 'text', 'video', 'audio', 'flash', 'object']\nand hence all objects are attempted to be previewed and rendered by the browser. \nYou can remove the object from above and set allowedPreviewTypes to \n['image', 'html', 'text', 'video', 'audio', 'flash']\nso that objects are not read and previewed.\n. Not clear with the issue - please resubmit in english.\n. Ensure you Update to the latest code on dev-master.\n. Cannot reproduce this. \nYou can check the max dimensions demo and try with a set of files... after a validation error you can still select additional files.\n. I presume your query was you cannot select additional files - which is not an issue as I said. \nNow I see the above code you have is for auto uploading files batch on selection. If your query is to know if you can upload files after error... the answer is yes... the files that have passed validation (without error) will be uploaded. You can cross check this with the max dimensions demo and check manually.\nNote in additional to filebatchselected You may trap the fileerror event if you want to do any additional validation for errors faced after file selection.\n. Most of your query is related to server coding at the developer's end.This is similar to how you handle any file upload through a native HTML file input. For ajax uploads, the plugin requires a JSON response from server and also can sends a JSON to the server depending on the configuration. Read about ajax uploads in plugin documentation.\nYou can post generic programming queries or request for help in the Q & A forum.\n. You are wrongly reading post data. Note that handling FILE INPUT is different than handling plain text data from other form inputs. You must read FILES instead of POST. Read your server code documentation on how you handle FILES to be uploaded via a native FILE INPUT and follow the same process.\nYou can post such queries for programming help or generic newbie queries in the Q & A Forum in future.\n. This is to do with EXIF tags (for orientation) in the image that is not recognized by browsers - you need a image viewer or a library that understands this. Read this comment.\n. The plugin will support this by default. However, this is is not a consistent standard between all browsers (except majorly Webkit browsers like Chrome)... will probably see and consider an enhancement for this based on support... BTW this will not be applicable for drag & drop (and only for files selected via Browse picker button). There is another problem as well that Edge does not support drag & drop of files ...\n. Check the demo pages for some examples of using webkitdirectory for folder upload.\n. Please use the Q & A forum for posting generic programming help and queries. Use this repo only for reporting bugs and enhancements.\nYou can check if the file input value $(\"#input\").val() is empty for your use case.\n. You need to try the reverse... you need to use the plugin's uploadUrl to directly use your ajax submit action... and then send additional form data via uploadExtraData (e.g. form.serialize).\n. > Also if its multiple files does that mean there will be multiple ajax requests with all the extra params? can it be single request that uploads all files with params via POST?\nYou need to read the plugin documentation and usage a bit thoroughly. For ajax uploads, the plugin can be configured either in async or sync modes. If you need only one ajax request to be fired ... set uploadAsync to false.\n\nI think you should put a demo with a form on your website, as its not very clear\n\nMay not be able to put a demo for all  use cases. However you may check ajax demo scenario # 7 for understanding how additional data can be sent.\n. Release 4.3.1 is not tagged yet and should be available on bower once tagged.\n. Please report bugs and enhancements only in this repo. Use the contact form for such general queries.\n. Please post programming queries and generic help requests in the Q & A forum.\n. You have set allowedPreviewTypes in addition to allowedPreviewMimeTypes - both conditions will be evaluated and if one of them is true the plugin will try to read the content and preview the file...\nDo not set allowedPreviewTypes for your scenario to achieve your use case above.\nYou can post queries for general programming help and tips in this new Q & A Forum in future.\n. Ok to clarify it better, set it to null and do not set a value there. If you do not at all set a value to allowedPreviewTypes then as per the default settings mentioned in docs - it defaults to all file types i.e. ['image', 'html', 'text', 'video', 'audio', 'flash', 'object'].\ninstead just set allowedPreviewTypes to null. Check this demo for an example\n. You can set it to false as well...\n. You may want to read the documentation thoroughly.\nThat is expected... because showUpload property is only applicable for the large upload button.\nThumbnail specific file actions are controlled via fileActionSettings. Read the docs for fileActionSettings. You can set the following for your use case to hide the upload button\njs\nfileActionSettings = {\n    uploadClass: 'hide'\n}\nYou may post queries on general programming help in this new Q & A forum in future.\n. Please search for similar issue before posting. This looks duplicate to #523.\nYou can use sass branch of the repo for this.\n. Please read the plugin documentation. Most of what you need depends on how you configure the plugin with available options. For example, the alert msg is being shown because you must select at least 1 file is because you have specified minFilecount to 1 (check your config) and also check validateInitialCount.\n. @f0nt4 your question is about preview of files from server... you need to render them similarly like you render images via your server code. Formatting all types of file contents from server on client is out of scope of the plugin (as it needs to be entirely dependent on content that you render from your server) and examples are provided.\nWhile for images there is a img tag and you can style it as seen in examples... for other content like text you need to bring in the content similarly from your server and style it as you need within thumbnails. PDF content cannot be directly embedded from server and may need other plugins. \nYou can check the default plugin template markup for various filetypes and try sending the same as HTML markup from the server as initialPreview but it may not be as straightforward always and hence this is left to each developer to render it as they need.\nNote that a user can preview embedded objects like PDF before upload from the plugin because browsers natively support reading local PDF files on browser via embedded object... and hence the plugin has added this capability to the preview. But for server uploaded files this is not as straightforward. You need to write your own code via other plugins to get them previewed.\nIf you have suggestions to enhance let know.\nWith regards deletion capability of thumbnails that are displayed from server - this is configurable via initialPreviewConfig (as seen in examples) and also via deleteUrl.\n. Yes the idea is if you have an HTML content in a file on server... you can only read or send its content via your SERVER code (since you generally have server level access restrictions of viewing any file content and would not want to open it for everyone unlike an image - but there can be similar requirements for images as well). Now instead of writing a server code of populating the content in various hidden fields (for multiple upload scenario say) and then again reading via javascript to display in thumbnail - you can avoid all this rigamarole and directly return this as a pre-formed markup within an embedded div via initialPreview and it will get displayed as a thumbnail.\n. Looks good (just had a glance at the code). You have taken in the default content preview templates available in the plugin and returned the same via your PHP code - so it should work similar.\nJust be careful of the size of the content you are reading via file_get_contents and of course sanitize the content and check any access restrictions you may want to enforce to users when reading content.\n. Thanks for the update. Will close this issue...\n. You already have this functionality within the plugin to write your custom validation and show an error and abort the upload. You need to use available plugin events - for example fileloaded or filepreupload for your use case. Then do your validation and return an error as described in the events manipulation section of the documentation.\n. You may need to debug your code. Your use case cannot be reproduced.\nFor help on generic programming or such queries you can use this Q & A forum.\n. You can trigger an abort as described in events manipulation section of the docs.\n. Not in scope of the plugin currently. \nSome browsers will support dragging / dropping files over the fileinput browse button.\n. You may need to run through examples in ajax demo 5 and ajax demo 6 to achieve your use case and it may not need location.reload.\nWill suggest if you can use the Q & A forum for generic programming help.\n. Please use this repo to only post bugs and enhancements related to the plugin.\nYou may use the Q & A forum for getting programming help or tips.\n. The ajax demo 3 already shows how you can call a server url to delete. \nPlease use this repo to only report plugin bugs and enhancements.\nFor getting programming help or tips you can use the webtips Q & A forum \n. Yes you seem to have misunderstood and need to check your code.\nThe code snippet from the plugin you posted will only execute if you have triggered an abort yourself (i.e aborted the ajax request).\nUpload extra data will be sent along with the files to your server request.\n. Use this repo to only report plugin bugs and enhancements.\nYou can use the webtips Q & A forum for getting programming help or tips.\n. Check ajax demo 3 for an example. \nYou may post queries related to programming and coding help in the webtips Q & A forum.\n. You need to debug your code, other plugins/JS loaded, and check for any JS errors on your browser console.\nSecondly, read plugin documentation for required browser support.\n. Cannot reproduce your use case. Hope you have read the docs.\nYou need to ensure that you are setting the plugin for multi-language correctly. Refer the multi language demo for details - the demo page uses minified js.\n. You may cross check the plugin demos and the webtips forum for some examples.\nRequest to use this repo only for bug reporting and/or any enhancements.\nIf you have general programming queries or need tips refer/submit them in the Q & A Forum.\n. This is beyond the scope of the plugin as it entirely depends on the client browser to be able to read the large files into memory for preview.\n. Cannot clearly understand the question but it seems like you have a server code issue here and how you use it to generate your plugin js code. You would need to check your server code that deletes the files and then pass the right initial preview to the plugin from the server.\nIf you need programming help please post them in the Q&A forum. Use this repo for only posting bugs and enhancements.\n. Can you elaborate with a JS Fiddle on what you are trying to do?\nWhat is the requiredfieldvalidator here - is it the HTML5 required validation OR your own code? If its some prebuilt validation inside your server framework - then you need to check the code accordingly... \n. You may need to check your code and if you are running the updated release.\nNote that allowedFileTypes is different from allowedPreviewTypes. Refer the documentation.\n- An example of allowedFileTypes can be referred here.\n- An example of allowedPreviewTypes can be referred here.\n. I think you may be right for the preview types... will update...\n. You should not be overriding preupload to do the upload - its quite conflicting.\nUse uploadExtraData instead to pass the parameters to the uploadUrl - it can be setup as a callback as well and your uploadUrl can be the processing action that does everything from inserting metadata to actually processing the file upload.\n. You may need to check how you are initializing the plugin... it typically must not be on a generic selector (like CSS class or input name) for such a use above. Because you may be conflicting and duplicating the plugin initialization for other rows.\nFor an use case like above you must set an unique id for each file input and initialize the plugin separately for each file input id using the id as a selector.\n. maxFileCount will validate count of files selected from only the client... it does not understand what or how much has been uploaded on server... \nTo achieve and validate server uploaded file count --- you need to set validateInitialCount to true and then set initialPreview to a list of files that are uploaded on your server... you also may want to set showUploadedThumbs to false to prevent showing successfully uploaded thumbnails and/or overwriteInitial to true to overwrite the initial preview files.\n. File input does not behave like other HTML inputs and its value cannot be manipulated via javascript nor have a change triggered via javascript.\nYou may need to read the plugin docs for understanding other events. For example the fileclear event can be used for your use case.\n. I personally did not maintain the first package sync to nuget... but you can let know what is to be done for doing this.\n. I just created a nuget profile with kartikv as the username.\n. This is resolved now.\n. You need to check (and debug) your code for other Javascript errors/dependencies on your page. \nSince your use case is specific to your environment and cannot reproduce... you may need to do the debuggin.\nTry just to create a fresh TEST page with just this plugin (and its pre-requisites) loaded and no other third party JS, scripts or plugins  - and work from there.\n. No this is not correct... the plugin options/settings that you pass during initialization should override the localization.\n. Hope this is answered. Would request programming queries and coding help be posted on the webtips Q & A forum OR use the discussions and comments section  in the plugin site by navigating to the relevant section. \nPlease use this repo for posting bugs and enhancement requests related to the plugin. \n. It already exists. You can set otherActionButtons as a HTML markup to display a link button that will be rendered in the thumbnail. Within the markup you can embed {dataKey} that will be replaced with the key set within initialPreviewConfig.\n. You may want to read the docs and go through usage demos to see and achieve your use case.\nThe plugin supports asynchronous or parallel ajax uploads for each file separately.\n. Yes v4.3.2 is under development as documented in the CHANGE LOG. You can pick it from the dev-master branch if you need it urgent.\n. Read plugin documentation. You need to set otherActionButtons property to add your own custom action buttons in each thumbnail. You can also modify the default plugin generated action buttons via fileActionSettings property.\n. Currently outside the scope of this plugin... but do let know if there is anything needed to be done in the plugin code to enhance anything and will reopen this? OR you can submit a PR.\n. You do not need to set in preajax... and anyway what you are doing is not the correct way as it will reinitialize the plugin with wrong settings.\nYou can directly set your uploadExtraData in pluginOptions in the first FileInput widget config:\nphp\n<?= $form->field($uploadModel,\"file\")->widget(FileInput::className(),[\n        'name' => 'file',\n        'options' => [\n            'multiple' => true\n        ],\n        'pluginOptions' => [\n            'uploadUrl' => Url::to(['document/upload-file']),\n            'uploadExtraData' => new \\yii\\web\\JsExpression(\"function (previewId, index) {\n                    return {\n                        parent_id: folder_id_selected,\n                        file_name:  $(\".file-caption-name\").text()\n                    };\n                }\"),\n            'maxFileCount' => 10\n        ]\n    ]); ?>\n. You need to read docs and learn and use the other available plugin events. For example, event for clearing the file is fileclear and resetting the entire input will befilereset\n. The reason is you cannot control as a developer the initial preview easily. Its been kept simple and left to the developer to render the HTML markup for initial preview - so that all control of displaying and styling the preview thumbnails lies with the developer. What you mentioned above is only images -- if you take other content - it will be different (and the additional JS coding to do that may not be that trivial).\n. As I said, you only considered image as a type above...  try to generalize it a bit... \nFor example, you may want to preview a text file, then passing the link to the text file may not help. The client cannot read from a server text file as easily as during the first scenario of upload from client, unless the server renders or passes the content to the client.\nSimilarly for a video or other the markup on how you want to display can be different... \nHowever I am open to ideas for improvement. I think if it can be generalized for all use cases and the developer has a control to do what he/she wants... it may be the best option.\n. This will need a bit of code rewrite. I will update with an enhancement.\n. This will be covered in enhancements in #634, #635, and #636 with various new features.\n. Read plugin documentation. You need to set overwriteInitial property to false to not overwrite the initial server generated preview.\n. You need to send/receive right JSON format from server - else you will face the parse errors.\nRead this query answered\n. @kamov you may want to read the plugin documentation and the plugin demos where the use cases are covered.\nBasically your above use case will only work when using the ajax mode with uploadUrl and not with form submission mode. Go through the doc sections to understand.\n. Not clear on this issue or pull request. NOTE:\n- Drag and drop functionality is available only for ajax uploads. Refer here.\n- Ajax uploads is detected by the plugin only when you set the uploadUrl. You need to set uploadUrl to therefore have drag and drop functionality and also for the ajax request to fire.\n- Secondly ajax headers can always be set via the ajaxSettings property\n. As I mentioned the uploadUrl is mandatory for ajax uploads... and drag and drop only works for ajax uploads.\nYou can set headers from the  ajaxSettings property as I mentioned before.\nThe  showUpload property controls only the main upload button.\nIndividual upload icons (or other action buttons) in each file thumbnail can be manipulated by setting the properties like uploadClass in fileActionSettings property - for example:\njs\nfileActionSettings: {uploadClass: 'hide'}\n. This will be automatically done in the new updates via #634, #635, #636.\n. You may want to check documentation for various options. You can control preview thumbnail dimensions through previewSettings for various file types.\n. You just need to set the language property of the plugin directly when initializing the plugin OR when refreshing the language via any server validation... \njs\n$(\"#file-input-id\").fileinput({\n   language: '<your-lang-code-from-server>'\n});\n. Debug your code both on client and the server code and JSON responses (input and output).\nUnderstand the formats in which you must send and receive data as mentioned in ajax uploads section of the documentation.\n. You need to write code accordingly to ensure the plugin gets the angular parsed ID before init.\nIf it is not easy for you, then one alternative is to not set the ID attribute... The plugin will autogenerate one.\n. For any validation error message shown after upload, User has to reupload the file by selecting from client again.\n. > @kartik-v what is the motivation behind having to reupload the file? Is that a browser limitation or something?\nThe reasons could be many depending on the validation error... for example developers would not want to be accepting specific files on the server (based on type, content, size etc.) and rejecting these as an error. But these will be sent again with every retry. Currently these files are thus cleaned up - for consistency and upload to be rerun with the right files selected again completely. \nI am open to any enhancement on this.\nOn the UX side - there will be some issues to handle as well - because you need to properly identify the errored out thumbnails and reset their progress and relink them back to the files left over in the stack properly (assuming there are no additional new files added. If user chooses to add more files after the errors - they will add to the complication of maintaining unique preview ids and thumbnail indices to not overwrite the earlier thumbnails).. @x-yuri if you are using it just for a simple plain form based input and upload mode for single file upload just like a native file input... without all other features, bells & whistles, queuing, checking progress of uploaded file, resizing images, or need to manage all the other file upload features ... then you should be able to configure and set the plugin that way... that enhancement should not be much of an issue.. Note that this issue raised in the first place is for an ajax mode upload... which means you use it primarily as a file uploader to manage and run through various files.\nHave you checked uploading files/photos using some other common utilities - e.g. facebook in a bulk mode? Does it allow retry of the uploads that have failed OR does the user need to select and reupload again?\nOf course there is a chunk upload and resumable upload functionality and enhancement which is a possibility and been noted as per #290. But that will need to be a separate library developed and will have its own restrictions (needs various changes to the server code as well for the developer) - it will not be possible to use it for all scenarios in the plugin if implemented and will only be possible probably in a synchronous batch upload mode.. @JCMais @x-yuri and others\nRefer my comment in the PR.\nFor using this plugin just like a native file input along with other fields in a form - you do not need any changes and the plugin should give what you want like any other native file input. You do not then set uploadUrl and just proceed to reading the data on your server via form submission just like any other native file input along with other inputs. You just then handle your form submission errors based on whatever method you have implemented at your end via javascript or libraries if you have your own method of ajax form submission. File input in that case will not be reset unless the form is reset in that case.. This is solved for single file uploads via the PR # 985.. This plugin is currently built for bootstrap 3.x and not tested for any alpha releases of bootstrap. So till a stable release of future bootstrap versions, i do not see immediate development here. With regards glyphicons... Most of these markup are already configurable as properties in the plugin.\n. Duplicate to #641 \n. You need to ensure you have a unique way to identify your file input selector and cannot blindly clone it... (for example have different ID and initialize on them)\n. Both formats are correct... its actually a JSON object.\n. Sorry it seems like you are using a third party plugin. So you need to check that plugin's configuration.\n. Refer #676 - this functionality will be enabled via that.\n. Refer new CLICK TO SELECT examples after enhancements:\n- Example for form based/non-ajax uploads\n- Example for ajax uploads\n. The animation is stock bootstrap provided and the animation is controlled via bootstrap inbuilt CSS3 transitions. \n- Could you clarify what you mean by progress bar is glitchy and what is your expectation?\n- Have you tested it on the plugin demo pages e.g. ajax demo 1 and confirm if it is only on your environment you have some issues?\n- Are you running the latest updated release of the plugin and its assets without any of your own customizations?\n. Read and check the documentation and view the demos... you can set multiple property in the input for multiple upload.\nYou can read the multiple files on your server code just like how you would read data from a native HTML FILE input. It is available as a FILE object and you will get the name from within the FILE object.\n. There already exists a property called overwriteInitial to control this. For your use case set it to false.\n. Sure. Can you update it with the latest CSS source?\n. Not clear on why you want to do the above.\nThe plugin already includes an upload progress display for each thumbnail as well as OVERALL progress. Why are you needing to write your own progress bar?\nSecondly with asynchronous uploads enabled in file input you will not be easily able to get your final progress and need to hack a lot of code.\nCurrently closing this as the custom progress handling for your use case is outside the scope of this plugin (as the progress tracking is already inbuilt in the plugin). In case you have suggestions update - for reopening this.\n. This is a Chrome specific behavior and occurs only for the OBJECT type of markup (where files are embedded based on default template for previewTemplates.object).\nFor text files (e.g. files with .txt, .md and such other extensions)... the plugin now uses a different template with just a div and text area - so this should not happen. So I should assume this is the fix for your case.\nIf you are using unknown file types... the plugin defaults to the object embedding template... a workaround is to change the preview template for object type of files... OR you can configure which types of files can be previewed in what way via previewSettings\n. You need to set initialPreview accordingly to send the right sequence in the array format from the server.\njs\ninitialPreview: [\n    '/path/pic1',\n    '/path/pic3',\n    '/path/pic2'\n],\n. The user can rearrange initial preview...  check the preview management demo. Note that files cannot be sorted before upload... so you would need to design it accordingly and give this sorting feature to user after upload...  (because you can get an initial preview from server only after upload)\n. You can read about it in the docs on how you can setup initial preview... for example check the preview management demo\n. Cannot reproduce your use case. Check if you have the correct latest code from the repo.\nMultiple file inputs on same page do work well as can be seen in advanced usage demo.\n. You need to debug your code - as it looks like an issue with upload code, the data sent/received, and configuration/accesses to your server.\nYou may want to post your general programming queries at the web tips forum.\n. You cannot open two modals in bootstrap when other modal is open. This is a bootstrap restriction and mentioned in bootstrap modal docs. It will require custom coding (you can search on web for the same).\nEven if you achieve it, there will be another side effect... The full screen mode may not behave properly... Unless the bootstrap fileinput modal is the last latest one on the page.\n. Read documentation and understand restrictions on usage modes of the plugin.\n. Yes, you can write your own code for the same. You may want to read docs on controlling plugin settings.\nYou can disable the default zoom functionality by setting showZoom to false within fileActionSettings. You can add your own custom buttons using otherActionButtons.\n. Not clear with the issue... request to clearly identify the issue in short summary on the top. Give details and the steps to reproduce any issue clearly in the comments.\nIt seems you may need to read documentation before posting an issue. \nUsing with or without uploadUrl has some pre-requisites for you to understand.\nRead the usage modes of the plugin and the other sections of the docs in general to understand usage.\n. Cannot reproduce your issue. Do you have the correct latest code? \nSeems the oldIndex and newIndex are working fine and returned as params on the filesorted event. Check this example and view the console log messages on your browser console for the oldIndex and newIndex.\n. Yes will check that...\n. Please submit a PR.\n. Closing this - will await a PR for your Chinese translations (not sure on point no. 1)..\n. Are you running the latest code from this repo or its a customized code.\nIt seems a programming code specific issue at your end. You need to check where you have placed the alerts in your code (e.g. fileselect event)?\n. Please share a JSfiddle to reproduce and check your use case.\n. - You must set initialPreviewAsData as false when setting raw markup.\n- You must set initialPreviewAsData as true if you wish to pass data.\n- If you just wish to pass the data (i.e.  initialPreviewAsData as true)... then \n  - you can set initialPreview to be an array of image links OR \n  - you can set initialPreview to be an array of base64 data url data which can be read by img src attribute\nRefer demo example and read docs for achieving your use cases.\n. Read the note in the usage section of the documentation\n. You need to read about cross domain requests and upload requirements in general. \nThis should be handled in your server code environment and client code configuration.\nTypically you should set your server headers (called via upload URL) to allow cross domain/origin requests. You may also need to configure the ajaxSettings property of the plugin to allow cross domain requests :\njs\najaxSettings: {\n    dataType: 'jsonp',\n    crossDomain: true\n}\n. refer #662 \n. Read the docs in detail. \nThere is no showZoom property at plugin level. Individual thumbnail buttons are controlled via fileActionSettings property within which you can set showZoom property.\n. Did you read the docs properly and understand the plugin usage modes?\nIf you are using form based submission, the HTML FILE INPUT submitted to the server will contain the file blob.\nIf you are using ajax based submission, the plugin will automatically send the file blob via POST to your uploadUrl in the variable identified by the FILE INPUT name attribute.\n. You may want to read documentation about the plugin events.\nYou can use the fileuploaded event for your use case (check the index parameter and previewId parameter available).\n. Many such use cases like yours are possible by handling via events and writing your javascript. Its entirely upto the developer to code and program for their use case.\nFor example you can in the filepreupload event store the previewId in a hidden Input and return that via uploadExtraData. Note that you can set uploadExtraData as a callback as well - so that it will dynamically send the data.\n. Refer new CLICK TO SELECT examples after enhancements:\n- Example for form based/non-ajax uploads\n- Example for ajax uploads\n. The release is not tagged yet... and will be done soon... for urgent use... you can access it from dev-master in the interim.\n. This should be addressed as part of your HTML input markup and server code configuration.\nFor example for PHP the file input markup name must use array naming convention to be read as an array of files by the server - e.g. related web tip for PHP.\n. Initial preview is just a display ... It does not populate the file input. Quite a few folks are making this mistake. Note that HTML file inputs are read only and one cannot set a value to these via JavaScript or via markup. The plugin just gives an ability similar to feel like this but the developers need to handle these in the code.\n. You need to write the code in your third party jquery validation plugin to skip file input required validation when you have set an initial preview.\n. You need to do a bit of coding yourself to achieve your use cases.\nA demo example of having a text input to change the file names is mentioned here. Use this to extend your case for reordering by capturing that order in another input as well.\nPlugin by default includes support for reordering images already uploaded to server and displayed via initial preview. For images not yet uploaded you need to handle it yourself.\n. Check an example of how you can setup the initial preview immediately after upload. This should show the delete button.\n. You already have a zoom functionality in the latest release to open the preview image.\n. Hope you have read the docs? This is an expected behavior for form submission mode (i.e. non ajax uploads). Appending files is only allowed for ajax uploads.\n. Not sure about this as cannot reproduce. You may need to ensure you have the latest code and using the latest default templates.\n. Not natively supported by browsers (except safari) - so it needs additional plugins to convert and view.\n. Refer enhancement #1110. This now covers display of various file formats including TIFF files. But this is applicable ONLY for files displayed from a public server via initialPreview. \nTo preview TIFF files on CLIENT before upload - you need an external TIFF JS plugin - OR alternatively you can code your app to upload this file to server immediately on selection and return initialPreview to show the display of the file from server.\n. Ensure you are on updated release of the plugin and read all docs and demos. Check the preview management demo section for examples of your use cases above.\n. The plugin already has the capability and it is simple to achieve your configuration. Check the file preview icons demo in the plugin docs. You need to control allowedPreviewTypes and previewFileIconSettings as shown to achieve above.\n. Read this doc section and the note below on what the server expects from the ajax POST delete action.\n. Duplicate to #694. Read this.\n. Duplicate to #694. Read this.\n. By reading documentation and understanding options to set this.\nYou can control the buttons in the preview thumbnails within fileActionSettings as mentioned in the docs.\n. These are defaults. You can set your own image preview zoom settings via the property previewZoomSettings\n. Can you please share a JS Fiddle to test that this works for most scenarios? Default Settings should be set to one which works for most scenarios.\nSettings can be individually configured as mentioned - as each user will anyway have his/her dimensions of images to upload and it will need to be styled as per their UX design and containers.\nI have reopened this issue - so that this can be tested and improved if needed.\n. Resolved via 5edbd4d and documented in the change log.\n. This is more a coding issue that each developer needs to handle.\nFor example for your use case, you may need to code in such a way that the plugin is initialized and file input widget is rendered ONLY after the tab is clicked and the tab is shown.\n. Sure will check and update\n. Fixed via  bfdab33.\n. Duplicate to #367, #482, #250, #536.\nRead this. Override the slugCallback for your use case. Be aware thought that you can face issues with special characters that can break or compromise the javascript code.\n. Not tested or certified for that release of jquery. You may submit a PR for any enhancement for this.\n. Cannot reproduce this. You need to check your code and other third party JS code to ensure there are no JS errors on your page OR CSS issues that can hide the bootstrap modal that is used for preview zoom.\n. Done for v4.3.3.\n. This is more a coding effort from your end. You do not need to overwrite the upload method.\nYou can search for ajax uploads to cloud servers on the web and how you can write your ajax call.\nFor example this is how you can upload to Amazon S3 using ajax.\nNow within the plugin:\n- You can use uploadExtraData to pass \n  additional data with your ajax call.\n- You can use ajaxSettings to override the ajax settings for your use case.\n. No cannot reproduce what you are saying. Not sure you have the right code.\nCheck for an example of file type validation in advanced usage example # 8 of the plugin docs.\n. This already is configurable (check docs).\nYou can control this and more of the delete ajax parameters via ajaxDeleteSettings.\n. Cannot reproduce your use case? Can you cross check with demo page and confirm what you are trying to do.\nFor example, just try your use case in ajax demo 4 above:\n- select 2 files and click upload button \n- initial preview is rendered with 2 files\n- delete each file from preview\n- select 2 more files\n- click upload - files are shown in preview as expected\n. BTW.. I just see for partial deletion of initial preview - there is a JS Error... so will check this separately.\n. Fixed via 8dd9021.\n. Cannot understand the query? What do you mean by clipping image features? Is it related to some third party plugin or your code that clips/crops the image?\n. I am sorry, I cannot understand Chinese... please post in English.\nShare a JS Fiddle explaining your issue - and provide a link to reopen this.\n. Yes, please read the documentation. There are many options you can configure in the plugin. For example, to achieve the above you can set overwriteInitial property of the plugin to true and set  showUploadedThumbs property of the plugin to false. \n. It seems you are rendering content via ajax... ensure there are no javascript errors when you are doing this and ensure the jquery plugins are initialized properly. For example the preview zoom functionality depends on bootstrap modal to initialize correctly.\n. Do one more check on your page...\nSearch for the markup containing <div id =\"kvFileinputModal\" on your page and compare if there are some issues in this for your 2 conditions above (e.g. duplicate id content OR this container has no children due to some reason OR a broken markup).\n. I can only give you pointers --- but it is basically upto you to debug your code and check.\n- Ensure your bootstrap.js or a similar lib is not loading multiple times thereby causing the loaded bootstrap modal (for earlier fileinput) to break.\n- Ensure your js files and scripts are being loaded in the right sequence (and without duplication) once you render content via ajax\n- Ensure you have unique different identifiers for your HTML file inputs when using multiple instances on the same page.\n- You may run this code from Chrome Debug Console when the black screen shows to check if the modal works:\njs\n$('#kvFileinputModal').appendTo('body').modal('show');\nIf the above works you may want to append this modal to the body after every tab click in your example above.\n. Also check for your other javascript and widgets markup on the page that could be causing this.\nFor example check this SFO post on how the sidebar can cause the modal to be  hidden behind the modal backdrop.\nTo isolate the issue, you may want to try this out on a fresh blank page without other plugins/css to ensure multiple fileinput instances work. For example check this on the plugin demo page where multiple file input instances do work properly to render the zoom modal dialogs.\n. Yes that is the reason i said you muat check your code and the above snippet is just to ensure modal is appended properly at the end to the body and not before. As I said it is because of other components in your page like tabs, menus which inject JavaScript and CSS and is pushing the modal behind the background. You need to ensure that.\n. You need to set initialCaption property for your use case if you need to show a specific initial caption on clear. Remember to set it to a blank space (and not an empty string) if you do not want anything displayed.\n. Ok I will provide a fix for this.\n. Fileclear is only applicable for files selected from client and not yet uploaded. So it has nothing to do with your content in initial preview. Since you already have control of files on server you can write your own code to delete all files on server.\n. I am not sure -- you need to update any other cases to reproduce your error.\nCheck this demo example that allows you to only select text files... but if you select other files it does not cause any such issue as described above. \nIf you have a reproducible issue - pls share a JS Fiddle to reopen this.\n. Cannot reproduce what you are saying... but display of video depends on HTML5 video tag support by your browser and supported file types (the browser/ client memory is also important when reading larger files and hence you may run into problems if you are reading large sized files in memory for preview - you can control that with maxFileSize setting).\nYou may need to check if you are running exactly same builds as you mentioned because there is no difference in video preview templates for the versions mentioned.\nCan you share a working JS Fiddle to show the differences you pointed out? Will reopen this based on that.\n. Read the docs and plugin usage modes.\nAlso as mentioned in the guidelines for contribution and logging an issue, please use this repo issue tracker only for reporting bugs and issues. \nFor queries on usage and coding/programming, try the Q & A forum.\n. This is more to do with BS Modal behavior and styling... that you need to handle it in your code. You can try $('.modal').appendTo('body'); after you click each tab.\n. The problem with above approach is body tag is optional and may not exist in all layouts.. Not sure or cannot reproduce this. Can you share a js fiddle?\nYou must have multiple attribute of your file input markup to be set to true to allow multiple file uploads.\n. You have used a wrong event - because that may not have the complete data in the plugin... use filebatchselected event instead for your use case...\nCheck the updated fiddle.\n. The default settings for zoom for images is to stretch to 100% height and auto width. You can control styles and height/width for your use case via previewZoomSettings. Read docs.\n. pls submit a pr\n. The plugin can only give you client side data... for server side uploaded files - you need to write your logic to calculate the count of files successfully uploaded.\n. This is based on validateInitialCount  ... but will check on this.... because it can get changed depending on thumbnail delete.... in either case it will only give you the count... the plugin will have no knowledge of data of files on server.\n. Its obvious... the message shown is just the file caption message (identifying count/name of file selected). The error message on other hand is shown by default in the preview container and you have set showPreview to false and not seeing it.\nIf you are setting showPreview to false and you need to see error messages in a different place set the elErrorContainer property\n. Not clear with the query - but the base64 data can be passed as a src to image and in initialPreview\n. Please read the guidelines for posting issues. \nYou need to read the documentation for understanding configuration options of the plugin. \nPost programming related queries on the webtips forum. \nYour programming related query is covered in a webtip here.\n. Will need to be an enhancement... you can submit a PR to accelerate this.\n. > because _listenModalEvent espects a string, not an integer\nFixed via d185163.. Please read the guidelines for posting issues. \nYou need to read the documentation for understanding configuration options of the plugin. \nPost programming related queries on the webtips forum.\n. Duplicate to and resolved via #734.\n. Seems no progress on this and closing this. In case you need to submit a PR - please raise a new one as this is way far outdated. . Please read the guidelines for posting issues.\nYou need to read the documentation for understanding configuration options of the plugin.\nYou need to set showZoom property within fileActionSettings.\n. Please submit a Pull request.\n. Use destroy and reinitialize... for language setting.\n. Try the refresh method of the plugin.. Set disabled property of the input to true and refresh the plugin,\n. Not clear with your query. Have you gone through docs and demos?\nAn example of capturing additional data through text box is highlighted in this demo here.. This is expected. The filesuccessremove event fires only after a file has been successfully removed.\n. Handle it as part of server code that is fired via the deleteUrl ajax call and return an error message...\n. So your server code must return a json object with error key set and it will be displayed by the plugin and the file will not be removed.. something like...\n{\n   error: 'This file cannot be deleted'\n}\n. This is more to do with configuring your dev environment, your browser's preview capability and IDE capability etc. Do let know what is needed to be done from plugin end and will reopen it.\n. Get updated code from dev-master.\n. Not clear with this... or cannot reproduce what you are saying. The remove icon in file thumbnails are seen based on config and can be checked in the demos - by default the remove display is set to true in fileActionSettings ... what is the issue you are facing? Do you have the right configuration?\n. Please read the usage modes of the plugin to understand what is possible and what is not possible for AJAX mode vs NORMAL form submission mode.\nIt seems you are using a FORM submission mode (without uploadUrl) - in this scenario you cannot REMOVE preview thumbnails before they are uploaded - ONE by ONE (you can only clear all - this is a native HTML FILE input limitation as one cannot edit the files in the input). However, the thumbnail remove button in this case will ONLY be shown for content loaded via initialPreview.\nClosing this as this is an expected outcome.\n. You need to check if the browser supports HTML5 canvas for resize as mentioned in the docs.\nMost modern browsers support HTML5 canvas and will work.. @qinxiaowen  Yes please read the documentation before posting issues.\n@ctf0 - thanks for your message - can you submit a PR for your gist?\n. Not clear on this issue.\nThe plugin will display \"X files selected\" if more than one file is selected.\nIf only one file is selected it will display the file name of the file selected.\nAre you trying to change plugin configuration at runtime or something?\n. @onmotion  you need to get updated release from dev-master... in either case for the main issue it is not reproducible... I am closing this unless you share a reproducible outcome... and will reopen it.\n. You need to handle this in your programming code and configuration. If you are using a non ajax mode (without uploadUrl) ... then the Upload Button will default to Form SUBMIT ... which by default will typically refresh the page - unless you are writing your own code to trap this and do it differently. For AJAX Mode (with uploadUrl this is not mandatory).\nIn either case this is not an issue but an expected outcome. If you need help on coding such scenarios please use the  webtips Q & A forum.\n. Cannot reproduce this issue... so closing. For programming help and support you may use the comments and discussions section of the plugin docs and demos page or head over to the web tips q&a forum.. For programming help, you can go through docs or post query in comments section of plugin docs page to get help from community or post it in webtips forum to get programming help.. Yes your markup is not entirely correct... you can rather set initialPreviewAsData to true and just pass the image src location as initialPreview and the plugin will auto render the markup correctly.. This is more a programming from your end (you can search on the web - you need to use the HTML5 canvas to transform the image and display - and it may not be trivial from processing perspective).\nThere is a fix attempted to solve this easier for image orientation in #791. I am closing this as this is not an issue with the plugin.\n. Read the documentation.\nYou can set the url within initialPreviewConfig to point to your webservice to delete for each file...\nOR\nYou can set the deleteUrl as a single webservice for all files in initialpreview.\n. Then you need to write your own javascript logic to delete these files - you can embed your own custom delete action button markup in thumbnails by setting otherActionButtons.\n. Yes you need to read the documentation to understand how to use the plugin and configure it for ajax uploads. For ajax uploads your server action (identified in uploadUrl) must return a valid JSON object (if you do not have an initial preview to return - at least just a empty JSON object {}).. Not clear with the query. You can control minFileCount and write your own JS/server logic at form submit to force user to enter some data yourself. I do not see a clear issue here with the plugin with your query. If you meant something else - please share the issue with an use case to reproduce and will reopen this issue.. Can you share a working example to test this (a jsfiddle or similar)?\n. Not sure I can reproduce this. So closing this. In case you can share a working scenario where this issue occurs - will reopen.. This is done already.\n. Your issue is not clear. Please follow the guidelines for contribution or issue reporting. For help on programming use the webtips forum.\n. You may want to read the docs. You can use the layoutTemplates property to control the markup of the input and addon components.\n. You may want to go through the docs. The plugin uses a default slug routine that escapes unwanted characters which may break HTML. You can control and override this through the slugCallback property of the plugin and give your own callback \n. Cannot understand the issue. Closing this because issue is not raised as per the guidelines. Please follow the guidelines for issues and contributions in this repo.\n. This looks related to #753 and I am not sure I can reproduce the above. \nThere is already a special handling for IE-11 here to not allow file reset in IE causing undesirable effect.\n. The reset invokes clear method and calls _clearFileInput which should clear the native file input value so isEmpty($el.val()) must return true (see here].\n. Reset indeed should be run after upload completion... and change is triggered only at that point for IE11. The condition as mentioned for IE 11 special case should do nothing and hence your error messages should be retained (error validation messages from your server are shown as any ajax request completes).\n. I am not able to reproduce this issue. Can you please reconfirm with a code/JS Fiddle and the plugin release (hope you have the latest one)? I can then reopen this.. Resolved via 5edbd4d and documented in the change log.\n. You may want to post programming queries in the webtips forum. Closing this as not an issue with this plugin.\n. Resolved via 5edbd4d and documented in the change log.\n. You would need to check your fileinput plugin configuration. Read this note on the usage section of the page. Ensure you do not attach a CSS class of file to your file input if initializing via javascript.\nCurrently closing this because your use case cannot be reproduced... in case you have a use case / fiddle to reproduce - pls share and will reopen this.. This issue will provided fixes (partially) for #491, #553, and #765.\n. Resolved via 5edbd4d and documented in the change log.\n. you are using an outdated release ... latest release is v4.3.6 (on dev-master)\n. Initial Preview depends on data that you maintain and manage on the server. So to clarify, there is no physical file that you are sending to the client or something. So not clear when you mean you are not receiving the edited initial preview file.\nYou can supply additional data from your server for each initial preview file via initialPreviewConfig (e.g. key) and also use initialPreviewThumbTags, uploadExtraData and layoutTemplates to configure your own markup to render for initialPreview with relevant server attributes for you to receive back. Refer ajax scenario 7 to see an example of how you can edit the file name for example in initial Preview.\n. Suggest you check with latest updated code and confirm if you are facing the issue as cannot reproduce your issue. If you are facing the issue please share a JS Fiddle to reproduce and will reopen this issue.. You may want to read the documentation again.\nYou can send extra parameters via uploadExtraData to the server.\nSending dynamic data at runtime can be achieved by setting uploadExtraData as a JS callback function as explained in the doc example.\n. This is not an issue. You may read this in the documentation to understand the various plugin options. The plugin uses a slug callback to slugify the file name to remove special characters and prevent HTML markup being broken because of that OR script being injected.\nYou can override it by setting the slugCallback property to what you need. But if you do this, you need to manage these risks yourself.\nCheck for the slugCallback property in the plugin documentation.\n. You need to check your server code and/or web server configuration. For example check this article for ASP.NET.\n. @marioene That is because the default method for handling ajax requests is set to POST for upload and delete in ajaxSettings and ajaxDeleteSettings respectively.\nYou need to control these settings and set it to GET if you need GET requests... in either case all these are a part of your app design and security needs.\n. I recommend you folks to read the docs. You can refer why the above happens in the usage modes for the plugin. It all depends on your application design need and how you need to code and program it. With uploadUrl set in the plugin, it will automatically use an ajax mode of submission (which has its other features available and needs certain way in which you send data to server and receive data from the server). Without uploadUrl the upload button it will default to native HTML form submit (which does not allow as much flexibility as the ajax mode but can be used for several use cases).\n. The revokeObjectUrl is supposed to actually release browser memory for the cached Blob that generates the data url for reading the file/image.\nSome of these FAQs like this here and this article here explains this concept.\nWould like to know if there is a JS fiddle or a code to test and reproduce and see your configuration.\n. BTW... You can set showPreview  to false for accelerated file selections as that will not read the file content into memory.\n. I can confirm that I can see this issue specific to IE10 as described above while for other browsers (including Chrome/FF/Safari/IE 11/Edge) it seems to work fine. \nWill need to check on setting options specific to this. Doing a browser specific fix is always irritating \ud83d\ude20 ,\n. Folks this is entirely browser and your client h/w memory specific when you wish to preview large files. As an alternative disable client previews if you wish to handle large files. Initial Preview after server upload can still be shown,\nRefer a stack overflow question. This is an expected design... that the plugin only marks the thumbnails for the files that have faced validation error but allows successful upload of files that are good to go (when multiple file upload is enabled). Error messages are displayed though and errors will be appended in case more than one file faces errors. However after you faced an error if the user selects another good file for upload then the successful file will go through without showing errors (as is expected)\nAsync vs Sync uploads can control how this is shown by setting uploadAsync boolean property.\n. You can submit a PR... it should be generic and tested for all scenarios for it to work.\n. Closing this issue... you can open a new PR.. These embeds will not work in latest browsers (Chrome has stopped support for NPAPI plugins).\nIf it is specific for Apple related devices and browsers, then I suppose this should be a simpler fix for Safari and IOS browsers. Will update.\n. Read the documentation and the usage modes section and the ajax uploads section.. You need to control display of preview using showPreview, if you do not need preview.\nTo selectively control preview for certain files, configure allowedPreviewTypes or allowedPreviewMimeTypes. Check docs.. You may want to read the docs. This button just uses the same logic as for an asynchronous upload. Here is how you can receive the response from the server for such a mode.. This is a JS coding error.\nYou can do something like this:\njs\n// declare a wrapper function\nvar kvRegisterFileInput = function($input) {\n    $input.fileinput({\n        uploadUrl: \"index.php?action=slideruploadimages\",\n        allowedFileTypes: [\"image\"],\n        showUploadedThumbs: false,\n        uploadAsync: true,\n        minFileCount: 1,\n        maxFileCount: 5,\n        uploadExtraData: {type: $input.attr('id')},\n        previewSettings: {\n            image: {width: \"auto\", height: \"100px\"}\n        },\n        browseClass: \"btn btn-primary btn-sm\",\n        removeClass: \"btn btn-default btn-sm\",\n        cancelClass: \"btn btn-default btn-sm\",\n        uploadClass: \"btn btn-default btn-sm\"\n    });\n}\n// then you can call above function\n$(document).on('ready', function() {\n    kvRegisterFileInput($('#slidesup'));\n    kvRegisterFileInput($('#layersup'));\n});\n. @dams0142 thanks for the feedback - the plugin is intended to be configurable and can be styled as per your needs (and maybe render it as a file explorer user interface as well if needed).\nOn your query, currently the markup/content in the initial preview thumbnail is first rendered. The same content is directly used to render the content in the ZOOMED preview as well (with intelligent styling to show a magnified version of it and expand full screen).\nIt would need to be coded entirely differently if you want to show a different content in thumbnail and zoomed preview. Will need to check on this impact and see if there is anything simpler.\n@emilas44 your issue is different... could you share a JS fiddle to see your configuration and understand the issue?. @dams0142 I think I can include a configuration to override and display preview icon only in thumbnail but show different content in the zoomed preview. But this may take a bit of time.. For edit page, you need to configure initialPreview to display the markup to be shown in initial preview:\njs\n$('#input-id').fileinput({\n    initialPreview: [\n        '<i class=\"fa fa-file-word-o text-primary\"></i>',  // icon for file 1\n        '<i class=\"fa fa-file-excel-o text-success\"></i>',  // icon for file 2\n    ],\n    initialPreviewAsData: false\n});\nThe plugin does not have a method to understand file types on the server to auto display icons based on file type.\nIt could be a potential enhancement to detect this based on file extension.. It may include a potential enhancement to detect this based on file extension - for icons... will update.. This is resolved via new enhancements. Check the CHANGE LOG.\nThe following demos will help explain this\n- To prefer/force iconic thumbnail preview and detailed zoom content check this demo\n- To prefer/force iconic preview in zoomed content and normal preview in thumbnails check this demo\n- To extend the above for initial previews - and using different previews for initial preview iconic thumbnails and yet a detailed zoomed content see this demo.\n. If it is a plugin validation error it should be displayed.\nIt seems you are getting an error in your server validation (correct me if I am wrong)... and for that you need to pass the relevant error message in your ajax response to be displayed by the plugin,. As I mentioned, if you are using plugin's maxFileSize validation capability then on error it will display validation message. It will NOT send any data for upload to your ajax URL by default. The validation error is thrown at the file read stage itself.  Refer here.\nThe problem is in your JS code whereby, you are auto triggering upload method in the filebatchselected event (which calls ajax url). This will call the ajax url every time after files are selected. You may want to do a check using getFilesCount or getFileStack to see if files exist before triggering the auto upload in the filebatchselected event.\n. Can you check with the latest release v4.3.9 from dev-master branch and confirm?. Ok I think this is duplicate to #890 and I will try to address it through a fix there. Closing this.. This is been corrected in docs.. Go through the docs  and demos. You need to enable ajax mode and set uploadUrl to a valid server upload action to append files.. Try to initialize the plugin on click / show of the tab - rather than on document ready.. Enhanced to include this ability now to render in tabs.. Potential enhancement.. Resolved via this commit. New property msgFileTypes controls the user friendly description or localized version for file types.. Your filepreupload event must directly return some data to be processed by filecustomerror and not within another ajax op\njs\n$('#input-pt-br').on('filepreupload', function(event, data) {\nif (data.filescount > 5) { //more than 5 photos\n    return {\n        message: 'You\u00b4re already on limit',\n        data: {key1: 'Key 1', detail1: 'Detail 1'}\n    };\n}\n});. No... the above are just secondary reasons (basically as described in the features for ajax mode vs form submission mode in the usage modes section of the docs).\nThe primary reason for using AJAX mode for drag and drop is that you cannot manipulate or populate native HTML file input using external script or javascript (it is meant to be readonly for javascript assignment and no files cannot be assigned). \nYes ajax is a method for transfer. The plugin offers two methods as described above for server to receive file data:\n\nNATIVE HTML FORM SUBMISSION based, OR\nAJAX based. \n\nIf you have set to 1. NATIVE FORM SUBMISSION BASED, then any dragged and dropped files into the zone cannot be populated in the native file input and hence you will not receive any data on your HTML form submit.. Do not think the above is a browser standard (since assigning value to a native HTML file input by external script is blocked by browsers for security reasons) - have you tried it on IE for example?. I am reopening this issue for any enhancement suggestions though.. Currently closing this as not fixable.. Cannot reproduce the issue.\nHope you have the correct version of the assets (JS/CSS) and you are not having caching issues loading outdated code? Also if you are writing your own javascript or third party plugins to tweak the plugin behavior - you may need to check your code.\nYou can cross check with demos page like this example to upload a file by clicking on the icons.. What is the error you are facing? Unfortunately cannot reproduce your issue?\nAm closing this - and will reopen if you can share a demo JS fiddle or similar to understand your issue.. The plugin does not send any FILES for upload to server when validation error is encountered (as is expected and as you mentioned $_FILES['input'] is received empty on the server).\nSo yes this is a logic to be more handled at your server end ...as you mentioned for your specific use case - whenever files are received empty at server end.\nOn the resizeImage part - the plugin relies on the canvas-to-blob third party plugin by blueimp... check if there is any config there to handle an invalid file for blob conversion... and I will keep it open for enhancement.. New enhancements have been added for preventing upload when data is empty. New property msgUploadEmpty available that will show the message when one tries to upload data without any data (it will validate both files data as well as uploadExtra to get to this condition).. Suppose you mean issue #823... its resolved there.. Not got the time to check this.. will update... once I get time.. Yes the problem will be that all such images need to be in ONE single container with file-initial-thumbs class for sortable plugin to drag and drop within that for any rearrangement.\nIt will however cause some UI problems. This means with the above change when clicking the single upload button in the thumbnail, the uploaded images derived in initial preview will move to one container and that will cause a UI problem as if you have 5 thumbnails and you upload IMAGE_1 and IMAGE_5 via single upload button, then IMAGE_1 and IMAGE_5 will be moved to beginning within file-initial-thumbs with init preview, while IMAGE_2, IMAGE_3, and IMAGE_4 will appear after that as not uploaded. This may not be user friendly as user will perceive IMAGE_5 to have moved before IMAGE_2.\nI suggest that it remain the way that the sortable for such case should not be enabled until someone refreshes the page and the initial preview is derived based on the batch sent by server (for sortable to be then used effectively to rearrange).. I think I will solve this with another workaround code. Will update.. I am not sure I understand your query correctly. If you are meaning, that you cannot delete the intialPreview thumbnails without uploading - then it is not correct. You can delete the initialPreview thumbnails irrespective of whether you upload a file or not. Each item in initialPreviewConfig will contain a url for the thumbnail - which will determine the AJAX server-action to delete the file (for example for your use case it is /site/file-delete). This should be called whenever you click the delete icon on a file thumbnail. You can cross check with some of the plugin demos which include an initialPreviewConfig and allows file deletion.. Can you share what is the use case to reproduce and why you cannot delete - because this does not seem to be the correct case?\nAs an example you can cross check ajax scenario 3 example. You can actually delete the initial preview files without needing to upload any file. (cross check the browser console network for the delete ajax URL action being called once you press delete).. Folks who have the problem mentioned above... please try sharing a JS fiddle to reproduce your use case. That itself may give you the solution. Currently closing this as not reproducible... will reopen based on feedback.. Get the latest build from dev master guys.... - The main remove button is intended only to remove files that are selected from client and not for files uploaded to server (hence it will be available only typically when you have selected some files from client)\n- The thumbnail specific remove button will be displayed for files selected from client as well as the server uploaded files which you have set an initialPreview and set the deleteUrl - this will call the deleteUrl ajax action to delete files from server\n- For non ajax avatar upload scenario use the avatar example demo 1 or avatar example demo 2. You can add a custom DELETE button instead of the CUSTOM tag button to call a server specific image delete (and optionally choose to hide the main default remove button by setting showRemove to false). You have to use ajax mode for that ... read about plugin usage modes in docs.. Confirmed for single file upload... will check and update.. No this change is incorrect.\nThe input must be having the CSS class file.. Yes, you can do that via your own custom action button. Read documentation to understand all plugin options in detail and do the following:\n\nset up otherActionButtons for your use case \nthen hide the default delete button by setting fileActionSettings['showRemove'] to false \nhide the default delete button for initialPreview by setting initialPreviewShowDelete to false.. Yes you must not overwrite the initialPreviewConfig blindly after upload for your case and when using async uploads (uploadAsync is true).\n\nFor that scenario above you must return initialPreview and initialPreviewConfig directly as a JSON response in the upload server action as mentioned in ajax demo example # 6 which will return a preview specific only to the file uploaded.\n. @koxu1996 I see. The issue is not with initialPreview showing incorrectly. But it is more to do specifically with a very specific and special configuration for your use case:\n\nyou want to actually sort files in the preview\nbut with uploadAsync set to true \nbut you are returning initialPreview immediately after upload and want sort to sort thumbnails immediately even when other files have not yet been uploaded and the thumbnails are not yet returned from server.\n\nSo the issue is with no. 3 point above is. Since it uses the sortable plugin to drag sort... the plugin will only return the begin target and end target. and the files that are not uploaded yet will not be understood by the third party sortable plugin. Note that drag and drop using sortable is only enabled for initialPreview thumbnails and not the thumbnails which are yet to be uploaded.\nIt is thus recommended to NOT use uploadAsync specifically for the use case if you want to sort - because the file stack will not have the right data to display.\nThe recommended options if you want to drag and sort the thumbnails in the preview are:\n\nOPTION 1: Use with uploadAsync set to false and the rest of your configuration the same (including sending initialPreview immediately after upload). In that case the entire initialPreview will be directly rendered and understood by the sortable plugin.\nOPTION 2: Use with uploadAsync set to true BUT do not return the initialPreview immediately after upload. This will then show the thumbnails uploaded but will not allow drag and drop sorting. You can show initialPreview rather on page refresh where the sorting will work correctly.. There is a bit of enhancement I think I can include to prevent sorting when uploadAsync is true until all files are uploaded. Will update.. Checking and will update... can you paste the code snippet that reflects the plugin configuration for your use case?. Fixed and enhanced better. \n\nIt also includes a better way to prevent sortable to be activated when the uploads are in process. A complex use case for you to try is to set an initialPreview on page load... and then also try these async uploads that return initialPreview from server response (when uploadAsync is true).. The sort after single file upload still exists. \nBut for batch async uploads, yes as mentioned  as per my comments earlier here and here... this is an intentional change. Now, if you click batch upload with uploadAsync as true, the sorting cannot be done now until all files are uploaded. This to ensure consistent sortable behavior and expected initialPreview.\nElse you will have issues if you have 10 files being uploaded and say the 4th, 5th, and 8th files are not yet uploaded ... and if someone sorts it when these are in progress, the sorting order will change the initialPreviewConfig in an undesired manner (this is because the 4th, 5th, and 8th files cannot be dragged around - the order will surely be messed up).\nHence the fix ensures, the sorting can be done only after all files are uploaded.. For your above use case, you can set showPreview to true, but set allowedPreviewTypes to null.. It works with the latest release from dev-master (v4.3.7 under development). Can you check and confirm?\nClosing this. Will reopen if you find a reproducible use case.. Yes you need to go through the documentation and usage to understand how to use the plugin for ajax mode and what the server must send and receive data (as JSON format).\nYou can also refer this webtip on why developers face this issue.. Yes because getfilestack is only to return list of files selected on client.\nThe initial preview is just a display and links and not file blobs. You already have your initial preview data on your server which is used to generate initial preview.\nYou can get displayed initial preview don client by parsing thumbnails with CSS class 'file-preview-frame' and checking '.kv-file-content'.. Currently not including this as it will be a bloat for installs who do not need these additional libs via composer.. Closed as per comment.. You need to be careful about HTML content being previewed - because it can break your page html if the HTML in the file is badly styled.\nFor your use case, it seems to be an HTML markup issue of your source file that is causing content to overflow beyond (could be also bad missing closing tags OR bad styling and width/height of elements or incorrectly designed/styled HTML markup).\nFor example, you can test with the code below as a HTML file which works fine. For this code below, I just extracted most content out of your the file below and the following code if saved into a file and previewed as HTML will work fine:\n```html\n\n",
    "vasikgreif": "Yup, but they're all way too complicated for what I need - a simple way to add multiple file input to my existing form...\n. ",
    "fatstar": "Thank you for your replay.\nBut, I tried 'ShowPreview' to 'falsie', it didn't work.\nI use Window 7, XAMPP and Chrome. I tested on FireFox and IE10 but same.\nDo you have any idea to fix my problem ?\nThanks\n. ",
    "that0n3guy": "I'll second this feature request.  I've started doing what you suggested above and the html is getting messy compared to a simple setting like:\nshowDefaultPreview = ['http://url1.com', 'http://url2.com'],\nDoing the validation to delete the previously uploaded image would be easy (as long are you not uploading via ajax... then I don't know as I've not tested that).\nJquery file upload has this ability and it makes it very easy... but I don't need ajax uploads so I was going to use your plugin...\n. > - will a user want to overwrite the uploaded image?\nThat might depend on what you mean by \"overwrite\"... but I would say Yes... I think it should act just like it does now:  If I browse...select 2 images, I have 2 images shown.  If I click browse again and select 2 different images, the previous ones I had are not shown and the new ones are shown.\nThis is how all the demo's work (http://plugins.krajee.com/file-input/demo)... that you can clear all the images... not just one at a time... right?\n\n\nwill you want to append a new uploaded image to a previous preview list of files?\n\n\nSee my previous comment.  Stay simple. \n\n\nwill you want to do a mix of both or handle complex use cases like selectively deleting a set of images and then upload additional ones.\n\n\nI'd say stay simple.  If someone wants to get complicated... they should use jquery file uploads.\n. Works pretty good.  Thanks for the quick implementation!\nOnly thing I would change would be just supply url (not full html) so that bootstrap-fileinput can detect if its an img vs other file type.\n. Thats fine.   Its easy enough to do it.  Thanks!\n. ",
    "anggiaj": "I'm sorry, for my feature request, it's more like Jasny Image upload widgets, one image only (not list of files)\n. Thanks man,\n. ",
    "danimoe": "Same with bootstrapvalidator. On validating the form the absolute positioning breaks.\n. ",
    "marciocamello": "Thanks, great.\n. ",
    "sauberia": "I've got a PDF field that I'd like to have the name of the existing file shown. It doesn't make much sense to me to show a preview of the PDF given that it's just an empty square.\n. Cool. In the meantime I'll just tweak it so that the caption is set regardless. It's been a joy to use so far.\n. This is what I've gone for:\njavascript\ninitPreview: function () {\n    var self = this, html = '',\n        content = self.initialPreview,\n        len = self.initialPreview.length,\n        cap = self.initialCaption.length,\n        caption = (cap > 0) ? self.initialCaption : len + ' file selected';\n    if (len > 0) {\n      if (isArray(content)) {\n          for (var i = 0; i < len; i++) {\n              html += '<div class=\"file-preview-frame\">' + content[i] + \"</div>\\n\";\n          }\n          if (len > 1 && cap == 0) {\n              caption = len + ' files selected';\n          }\n      } else {\n        html = '<div class=\"file-preview-frame\">' + content + '</div>';\n      }\n      self.initialPreviewContent = html;\n      self.$preview.html(html);\n    }\n    self.$caption.html(caption);\n    self.$captionContainer.attr('title', caption);\n    self.$container.removeClass('file-input-new');\n}\n. ",
    "ssuess": "Thanks, I will give it a shot!\n. ",
    "fnicollet": "Hello @kartik-v and thanks for the great plugin,\nI have a similar question but unfortunately, the solution you gave won't work in my case.\nBasically, when I submit the form (with text inputs and the upload component), I won't receive the file references unless the user has clicked the \"Upload\" button in the preview before, which is understandable.\nI would like that on \"change\", to manually trigger the \"Upload\" button, I don't want to submit the whole form when the user picks an image. I have looked at the documentation and the github issues and couldn't find something similar to what I want to do. Basically, on input \"change\", the file would be submitted to the uploadUrl.\nCan you help please?\nThanks!\nFabien\n. Scrath that, the files are actually also sent if the user doesn't press the Upload button when the surrounding form is submitted (probably because you use standard file inputs)\nSo no question for me, this plugin is awesome :)\nFabien\n. ",
    "zephyx": "Oh, I forgot:\nDuring my tests I have found 2 problems about the disable/refresh option.\nWhen I disable/enable my fileinput I can't use the remove button anymore (nothing happen). The same problem appears in your demo.\nAnd I have another problem: when we disable the input it removes all the previews (because it reloads the html I think). It seems not normal for me, when I disable the other fields the values remains. Do you think you can make some modification in order to keep the data ?\nIf I got some times I will look for it.\n. Ok, I will do that, thank you for your attention!\n. So this issue should concern only:\n- single removal files\n  => I will work on a custom template in order to see if it solves all my problems\n- big width picture\n. Hi again.\nI have worked on all the stuff I have talked about and the file input management is now properly working with nice ajax requests on my framework :).\nI have made some modifications on your js file in order to achieve that. If you are interested I can give you my modified js file.\nI have modified those things:\n- added a trigger event when the files have their HTML5 preview loaded and displayed\n- added a delimiter option which can be used in order to give more than 1 file as a string data-attribute for the initPreview option (initPreview function adapted to that)\n- replaced all the hard-coded \"files selected\" by the option \"msgSelected\" in order to retrieve my translations given as data-attribute\n- Now take in account the number of initPreview displayed when the param \"overwriteInitial\" is set to false and when we add new files (I don't know if you are agree with that, may be you want to keep only the number of files chosen with the input file. Nevertheless it was weird for me because this number take in account the initial files at the start, so it wasn't logical)\n- I needed special preview templates in order to create my single delete function so it is possible to manage that with options now (+added generic template for initPreview)\n- I also needed an event trigger fired when all files were cleared (by the remove button/top-right cross) so I added it.\n- added disable and enable functions in order to easily disable/enable the fileinput without reloading the html (solve the remove button problem)\n- added a width management when images are too wide (now they are scaled by width [height=\"auto\"] if their width is bigger than the container)\nThank you for this plugin. Have a nice day\n. I think it's done.\nIt's my first pull request, so I hope it works like that ^^.\nI think those changes need some more tests in a different environment :). I hope there is nothing broken..\n. ",
    "ghost": "Okay thank you :)\n. I'm on last version of Google Chrome.\nHere the steps :\n1. I click the \"browse\" button\n2. I choose multiple files\n3. I click on validate button\n4. The images are displayed in the preview zone\n5. I click again on the \"browse\" button\n6. I click on the cancel button without choosing files\n7. The preview zone is not changed and they are always the old images previsouly selected but in real, the value of the input is empty\n. After initializing the image, click the delete button. Why is there no response? Can I delete the image by ajax? Can you help me?. ",
    "dfisch": "Sure thing!\n. ",
    "xinglongjian": "ok thanks!\n. ",
    "idwebmedia": "Awesome, thanks!\n. Getting a \"Out of stack space\" on the update\n. ",
    "bashibozuk": "I understand the use cases quite well and I red the documentation before opening this issue. My use case does not fit in the pointed cases. Anyway, since it is possible to use form fields with custom names in yii , and your module seems to mock a form field functionality it should support all features that a normal yii form field widget supports.\n. ",
    "andreaf-tbm": "Ok.\nProbably documentation should provide this information.\nStill... I don't care about preview (since I'm actually uploading zip files) but it'd be good to have those messages instead of a simple \"File upload error\"... am I missing something? Is there a configuration that can enable this kind of behaviour?\n. Ok... got to try it but I think is a good workaround.\nI'll look forward this enhancement! :)\nThanks\n. ",
    "calvinh8": "I'm using Windows 8.1, and latest chrome and IE.\nAre you testing with file name that contains parenthesis? \n. Now the preview shows the thumbnail, but it adds \"Cfakepath\" in front of\nselected file name.\nOn Sun, Oct 19, 2014 at 9:22 PM, Kartik Visweswaran \nnotifications@github.com wrote:\n\nYou can check and update with this fix now.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/43#issuecomment-59682326\n.\n. \n",
    "nepstor": "Previously, there was a version 2.1. It all works correctly. Updated and now does not work. Demo site works\n. \\vendor\\kartik-v\\bootstrap-fileinput\\examples\nRun  Index.html - Press to select a file and browser hangs.\n. Now everything is fine, thank you\n. ",
    "arogachev": "I have the same problem in IE 10.\nAfter clicking the \"Browse\" button the browser freezes and doesn't respond to any actions.\nI cleared assets, browser cache, but the problem still exists.\nI tested plugin on Plunker with the latest js and css files and there it works. Demo site examples work too.\n. Thanks for quick response and fix.\n. ",
    "ThePeach": "So my composer.json has this explicit requirement:\n\"kartik-v/bootstrap-fileinput\": \"@dev\",\nwhich lead to:\nUpdating dependencies (including require-dev)\n  - Updating kartik-v/bootstrap-fileinput (v2.3.0 => dev-master f868826)\n    Checking out f8688265e3330b524882778dd16acacd0feca499\nThe error happens on the initial preview which is using an external image as seen above.\n. just tried with 2.6.0 and I do still have the issue\n. sorry what do you mean by \"demo site\"? are you referring to the live examples?\n. all good on there. Also my problem seems not to be related to the browser as I can replicate it in chromium, chrome and firefox.\nI'll review the configuration  options, as it might be something has changed down there.\n. ",
    "coreConvention": "Also, if all goes well I may post back my Knockout Binding Handler to extend your project. Would just like to get this thing working first. :)\n. ",
    "krabsheva": "The line:\nsetTimeout(readFile(i + 1), 1000);\n....has problems on at least an old version of Firefox I test with. Best to encapsulate the timeout code in a closure:\nsetTimeout(function(){readFile(i + 1)}, 1000);\n. ",
    "bauschri": "had a problem with long file name. Workaround: i add the following CSS\ncss\n .file-caption-name{\n    word-break: break-all;\n }\n\n. ",
    "jespermjonsson": "Sorry, I just missed to set overwriteInitial to false...\n. Actually that didn't fix the problem, the upload just resets to the initial overwrite. Any other selected files is removed by the clear method when hitting upload the next time. So I still wonder why the upload is cleared when clicking the browse button.\n. Ok I understand, didn't know that the native file input was cleared when the file dialog was shown. I'll rethink the UI then, thanks!\n. Would you be open to adding an event for when the file input changes from having a file to being empty like I have done here: https://github.com/jespermjonsson/bootstrap-fileinput/commit/97728b292246d63f72d4922d88b5d3a1f2676b59\nBy adding that I'm able to keep the UI unchanged during fileselection and wait either for the fileselect event or this new event.\n. Done!\n. Fixed the code comments and here is a simple test to verify how it works: http://jsfiddle.net/jespermjonsson/op69dt56/\nThe first file input has overwriteInitial = true, and is perserved, while the second's preview is overwritten, and selecting some files first and then canceling the file input reverts to the initial preview.\n. Ok, I'll review it on other browsers and come back to you!\n. I used reset (which calls clear) to revert to the initial preview. Which was the behavior I missed, should I add another option for either reset or just clear?\n. Yeah that was the behavior I expected but I see your point. So changing to clear and using the new selectfilenone event I guess reset could be called from the event listener and I'll get the same behavior :)\n. I've tested my jsfiddle on Firefox, Safari and IE10 now, and it seems that the change event isn't fired when you have a previous selected file, and then later bring up the file dialog again and presses cancel. But that is because the native file input doesn't change on cancel on these browsers, it only seems to be cleared on Chrome while the previous selected file is perserved on all the other browsers after cancel click. And if that is the case, we are back to my first issue :) Clearing the previous selected file preview on browse is wrong, because if then clicking the cancel button and the preview UI disappears you think that there is no selected file while there actually is (except on Chrome)! So maybe we should just skip to clear the view until we get either a change event or when the remove button is clicked?\n. I don't have access to IE10 right now, but tested on Safari and Firefox on Mac and the file input says it holds an selected file even after cancel, and posting that form sends that file.\nphp\n<?php print_r($_FILES); ?>\n<form method=\"POST\"  enctype=\"multipart/form-data\">\n<input type=\"file\" name=\"file\"/><br/>\n<button type=\"submit\">Submit</button>\n</form>\nSo yeah, it seems that it is only Chrome that clears the input on cancel and the other browsers preserve the previous file. Should I change this pullrequest to fix this behavior instead?\n. I've updated the code to only clear when the native file input is cleared. I have also verified that this works on latest Chrome, Safari, Firefox and IE10. So after this fix, the UI is only cleared on Chrome when canceling the file input dialog and on all other browsers it is perserved to align with the native file input behavior.\n. Ok, no problem :)\n. Hehe :)\n. ",
    "JKChen": "Thank u for reply.\nSorry~i mean it works well,except when i upload a file which contains Chinese words,and then upload successfully,but when preview,those Chinese words display incorrectly...\n. ",
    "harrisongu": "I believe the UTF-8 encode support Chinese chars, but still looks like display chinese file name  incorrectly on this plugin, could you please help to fix this issue? Thanks.\nexample:\nI will upload this file,\n\nbut the result is:\n\nlost all chinese chars.\n. Thanks @kartik-v, \nI've used the slugCallback property to fixed this issue.\nelErrorContainer: null,\n        slugCallback: function(filename) {return filename.replace(/^.*[\\\\\\/]/, '');},\n        dropZoneEnabled: true,\n. ",
    "aleksanderd": "Huge thanks! It was extremely fast!\nBut there is no 3.0.0 branch really:\nhttps://github.com/kartik-v/bootstrap-fileinput/releases\nAnd the composer still fetch 2.9.0 :(\n. ",
    "martin-g": "Thank you!\n. ",
    "h-sobhy": "@kartik-v  thank you for all the new features https://github.com/kartik-v/bootstrap-fileinput/issues/70\n. It's an ASP.NET validator. I use the file-input plugin in this page only as a preview pan only (I don't do an AJAX upload here but I use code behind and worked well) then check if not ZERO files selected and also ZERO errors displayed and if so enable the submit button but if not display the asp.net validator while the submit button still disabled. I apply this technique on many other cases and works fine logically (even when I pass fake values as variables ( errorMsgs = 0 and prevFrames that has no error class = 2 for example). \nI tried to upload to fiddle but since I'm using asp.net so it's a bit hard to do it ... All I need is a proper accurate way to check if files in the drop-zone are _not zero and that there is _no errors ... \nHere is the Fiddle  I could send at the moment (browse for a small photo to get an error).\n. @kartik-v \nI do the check on file-input change, when files in the preview delete-icon clicked,  fileselectnone and filecleared.\nThank you for the plugin by the way :)\n. ",
    "apilavakis": "Hello,\nCongratulation on the amazing plugin. When is version 4.0 out. I am desperate!!!\nThanks\n. That's great news...thanks\n. this is my configuration\n<input id=\"fileinput\" name=\"listingImages\" class=\"file\" type=\"file\" multiple=\"multiple\" data-preview-file-type=\"image\" data-show-remove=\"false\" data-show-upload=\"false\" data-upload-url=\"#\" data-max-file-size=\"1000\" data-max-file-count=\"5\">\n. In which case i am not able to remove one by one or drag & drop?\n. Changing to AJAX makes life easier :)\n. First of all congratulations on your excellent work and your prompt response on the issues.\nI will have to however disagree with what you said above. Even if you put consistent dimensions you have the same effect. I made many copies of Chrysanthemum.jpg (WIndows Sample Picture) and uploaded and i still get the same\n. I use initialPreview and InitialPreviewConfig after postback. How can you use it when you return back from the upload?\n. I am setting self.initialPreview and calling self.initPreview() inside the fnSuccess but it does not have any effect.\n. I think what i am trying to do is not possible. I manage to make the above to work but now i am loosing all the ones that have not yet been uploaded.\nLet me know if it is not possible to stop wasting time (especially yours)\n. Refreshing will still loose the ones not uploaded right?\n. ",
    "Maks3w": "Because those package managers cache the version and don't expect the cached version with string \"v4.0.0\" become a different git reference later\n. Again. Please reconsider don't modify the tag reference. If u feel increase the tag number is ugly for you do something like release only 1 day at week or something.\nWe need traceability and confidence for track changes between the version downloaded one day and the version downloaded another day.\nit is unreasonable to have two versions of software with the same number but different code\n. ",
    "williancs": "When I'm clicking in upload, they show me this message in a bootstrap alert 10628575_680460278717558_2323593876362291192_n.jpg: SyntaxError: Unexpected token <\n. I just downloaded this code and opned the exemplos and I tried to do this upload and they show me this error... I didn't do anything, I'm testing in this code not in my code\n. Can I use this without ajax ?\n. My last question, which is the action button to upload? I tried $('#file-1').fileinput('upload'); but it does other things and not the same thing that upload button... I'll use the ajax\n. It's because I want to catch the action and first to do the upload and after to do the submit and save my inputs ... in this case, I have to save together\nThis is my code, I want to upload, and after submit my form with the information and the image names... I think my code doesn't show here -.-'\n\n\n\n\n\n\n. Do I have the method successful ?\n. I have the filepredelete, how can I prevent the delete function works if I return false ?\n. ",
    "zebub": "I may be misreading the docs then. As I understand it, the uploadExtraData property controls what additional data is sent to the server. It does not make any data sent from the server available in the fileuploaded event.\n. For my specific case I'm performing some server side processing of images and archives and I need to show the result to the user for confirmation. This requires the client to know the new urls of the processed images.\nGenerally speaking I think there are more use cases where it is useful to be able to respond to data from the server after an upload.\nIt is of course possible to store the data and get it in another AJAX call, it would just be convenient to not have to make additional requests.\n. If, for instance, an upload contains an archive with a file structure of images. These images need to be sorted a certain way and the images are cropped to fit a certain aspect ratio. After the archive has been decompressed and the containing images have been processed, the user must be shown how the images look and how they are sorted after having been processed by the server.\nIn this case, the response from the server would contain data about image sorting and urls to show the user.\n. Wow that was fast!\nI'm still not sure this resolved the issue I meant to describe though.\nThe response content from the server is a parameter in the AJAX success function and is, in the script, assigned to the data variable. It is currently used to allow the server to respond with error messages, but other information could be sent from the server too that could be useful in the fileuploaded event. So I'm suggesting that the data variable from the AJAX success function is passed to the fileuploaded event.\nThis really is a great widget and you are responding to issues very quickly. So thank you!\n. Right. Awesome!\n. You can use the fileuploaded event and retrieve the src attribute of the preview img element using previewId.\nSomething like:\njs\n$('#input-id').on('fileuploaded', function(event, data, previewId, index) {\n    var src = $('#' + previewId + ' img').attr('src');\n    alert(src);\n});\nEDIT:\nOn second thought, this might not work. I'm not certain how the preview images work but it does not seem possible to simply reuse the src. Alternatively you can send a response from the server that contains a temporary url and use that.\njs\n$('#input-id').on('fileuploaded', function(event, data, previewId, index) {\n    // Assuming you include the key url in the server JSON response.\n    var url = data.response.url;\n    alert(url);\n});\n. This works for me but the fileuploaded event is not invoked until after the file has been succesfully uploaded. If you want the src attribute as soon as you click upload, you can try the filepreupload event instead.\nHowever, as stated in my edit in my first comment, I'm not certain you can use the src attribute value to show the preview image anywhere besides the drag and drop zone.\n. Version 4.1.5.\nhtml\n<input id=\"image-upload\" type=\"file\">\njs\n$(\"#image-upload\").fileinput({\n            previewFileType: \"image\",\n            allowedFileTypes: [\"image\"],\n            showCaption: false,\n            uploadUrl: \"/site/file-upload\"\n});\n$('#image-upload').on('filepreupload', function (event, data, previewId, index) {\n            var src = $('#' + previewId + ' img').attr('src');\n            alert(src);\n});\nLooking over your code again, I noticed a couple of things.\nBy giving the input element the class file, the fileinput script is automatically initialized for that element. Initiliazing it again with\njs\n$(\"#image-upload\").fileinput({\n    ...\n});\nwill probably not work and might cause unintended behaviour (presumably).\nAdditionally, by commenting out the uploadUrl key, the script will use form submission, causing the page to reload which means you cannot use events.\nAgain, I have to emphasize what I stated in earlier comments:\nI do not know if it is possible to use the src attribute of the preview img element to show the image in another container. If it is, I do not know how. Simply creating an img element elsewhere with the same src does not seem to work.\n. ",
    "deepubrandoitte": "\ni adding some extra text field when uploading a image like http://doitte.com/test/bootstrap-fileinput-master/examples/index.php how can get the value of all field when we click upload button....please reply fast. \n. ",
    "maulanayusuf": "On uploadUrl i want to print a string like.\n1. 001-success\n2. 002-Success\ni want to display that message when uploaded finished, i dont understand about event \"fileUploaded\" to get the message response.\nHelp me please, thank. \n. ",
    "matosjoao": "How can i access the data.response outside this function?\n$('#input-id').on('filebatchuploadsuccess', function(event, data) {\n    var formdata = data.form, files = data.files, \n        extradata = data.extra, responsedata = data.response;\n    console.log('File batch upload success');\n   /Here i can access the data/\n});\n/Here i can't access the data/ why?\npls Help, thanks. ",
    "anandphulwani": "@matosjoao please read about use method and & operator which passes variable by reference.\n$testvar = \"\";\n$('#input-id').on('filebatchuploadsuccess', function(event, data) use (&$testvar) {\n       $testvar = \"hello\";\n}\necho $testvar //will print hello. ",
    "StaniSch": "You are really fast! \nBut sorry mate, the bigger bug is still available :-(\n2) After refreshing the fileinput, click on the upload-button is still triggering a get-request to the upload-url\n. ",
    "FujiMakoto": "This is a similar issue but on a different line. This error is triggered when trying to upload more files than maxFileCount allows (the bug report you are referencing as a duplicate modifies line 1242, this pull request applies the same fix to line 1376).\nActually, this pull request sees to fix it so that the error message displays when trying to upload too many files at once, but if you set maxFileCount to 5, upload 5 files, then try and upload any more files after that it still causes an error.\n. ",
    "LukeMauldin": "Conflict with bootstrap-jasny CSS\n. ",
    "giangvy1011": "HI please help me with json reponse. I have spent so much time to integrate into my existing form and it am stuck at this stage. I am just a new php learner. Hope you can help me out. Many thanks in advance\n. ",
    "andi-nieves": "Good day!\nI just wonder if I can send my post to my php script so i can control where the uploads it should go/store. Thanks in advance!\n. Ok I got it, Thanks your input was awesome! It made my programming life more easier thanks a lot! :+1: :+1:  :+1:  :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: :+1: \n. JSON is only for the output of ajax query for validating uploads. :)\n. ",
    "ert78gb": "Hi,\nTry this http://php.net/manual/en/function.json-encode.php article.\nBr.\n. ",
    "kulmon2013": "alert not invoked. Below is my code (HTML and JS)\n\n  <input id=\"image-upload\" type=\"file\" class=\"file\" >\n$(\"#image-upload\").fileinput({\n        previewFileType: \"image\",\n        allowedFileTypes: [\"image\"],\n        showCaption: false\n        //uploadUrl: \"/site/file-upload\"\n    });\n\n    $('#image-upload').on('fileuploaded', function(event, data, previewId, index) {\n        var src = $('#' + previewId + ' img').attr('src');\n        alert(src);\n    });\n\n. I am still not able to execute this. Can you please send me one example with markup and also which version of file-input plugin you are using. \n. ",
    "gael-wogenstahl": "OK thanks ! You're doing an awesome job with those widgets.\nAs for using AJAX in single file upload I need it since I'm uploading heavy files and therefore using your progress bar as an indicator for the user while the classic file input without AJAX doesn't send feedback to the user until upload is finished.\n. ",
    "valix85": "i just see it but i have many difficult to understand it, it's possible an example?\n. ",
    "nakarin4350": "After I upgrade to dev-master the upload button do works,but after the \"second set of files\" upload completed the progress bar show random value (eg 87%,90% not 100%).\n. It works now,I really appreciate all of your works(so many good stuffs).Cheers.\n. Sorry for my english.I mean deleting files after ajax upload(eg. click upload button),so people no need to go another page that have set  initialPreviewShowDelete=true.\n. I get it now,thanks for your time and sharing.\n. ",
    "apunkto": "Oh, it seems following javascript error also occurs:\nReferenceError: formdata is not defined\nvar outData = self.getOutData(formdata, {}, files);\nfileinput.js (line 1242, col 24)\n. ",
    "bhattaxay": "Are you passing id for delete like in this way right?\n'{caption: \"'.$eachimage['albummediaCaption'].'\", size: '.$size.', height: \"120px\", url: \"http://localhost/project/backend/web/index.php/image/delete\", key: '.$eachimage['albummediaID'].',  extra: \"{id: '.$eachimage['albummediaID'].'}\"},';`. Than it do not show me the property which i want to use like Add caption and Drop zone.\nYou have seen this link in forum right?\nhttp://www.yiiframework.com/forum/index.php/topic/73740-kartik-file-input-with-caption-of-image/ That was a different querstion.\nI request you to advice me the proper solution for above question.. @kartik-v you have give me referenced to follow bootstrap-file input to upload image with caption. And now as above you have mentioned to follow file input widget. So, tell me which one is better. Now it throws me the error You can upload at most 1 file.. okk @kartik-v  I have resolved my issue by my self now the validation for file type and file size is not working.\n```\n$script = <<< JS\nvar el2 = $('#input-706');\nvar footerTemplate = '' +\n'   ' +\n'       ' +\n'       ' +\n'   ' +\n'   {size}' +\n'   {actions}' +\n'';\nel2.fileinput({\n    uploadUrl: '/uploads/Album_Media/',\n    uploadAsync: true,\n    showUpload : false, \n    overwriteInitial: false,\n    maxFileSize : [2097152],\n    allowedFileExtensions : ['jpg', 'png','jpeg', 'mp4', '3gp'],\n    layoutTemplates: {footer: footerTemplate, actionUpload:\"\",size: '({sizeText})'},\n    previewThumbTags: {\n        '{TAG_VALUE}': '',        // no value\n        '{TAG_CSS_NEW}': '',      // new thumbnail input\n        '{TAG_CSS_INIT}': 'hide'  // hide the initial input\n    },\n    initialPreviewAsData: true,\n});\nJS;\n$this->registerJs($script);\n}\n?>\n``. As you have told to use fileInput widget, which do not support attributelayoutTemplate` attribute.. okk I got my solution. Thanks.... I have updated package of 12-2-2017. But when i am going to use this solution as you suggest. It do not show me caption field on image.\n<?php\n    echo FileInput::widget([\n            'model' => $model,\n            'attribute' => 'albummediaFile[]',\n            'options' => ['multiple' => true],\n            'pluginOptions' => [\n                'uploadAsync' => false,\n                'showUpload' => false, \n                'showCaption' => true,\n                'dropZoneEnabled' => true,\n                'overwriteInitial' => false,\n                'allowedFileExtensions' => [\"jpg\",\"jpeg\",\"png\"], \n                'layoutTemplates' => \n                    ['footer' =>\n                            '<div class=\"file-thumbnail-footer\">\\n' +\n                            '   <div style=\"margin:5px 0\">\\n' +\n                            '       <input name=\"albummediaCaption[]\" class=\"kv-input kv-new form-control input-sm text-center {TAG_CSS_NEW}\" value=\"{caption}\" placeholder=\"Write something Here...\">\\n' +\n                            '       <input name=\"albummediaCaption[]\" class=\"kv-input kv-init form-control input-sm text-center {TAG_CSS_INIT}\" value=\"{caption}\" placeholder=\"Write something Here...\">\\n' +\n                            '   </div>\\n' +\n                            '   {size}\\n' +\n                            '   {actions}\\n' +\n                            '</div>'\n                    ],\n               ],\n        ]);\n?>\nAnd it also throws Uncaught TypeError: e._getLayoutTemplate(...).replace is not a function, I think it's \\n Error in Footer template right? Which make it /\\n like this so it do not show me.. ",
    "dalamberts": "Thank you for your reply.\nWith all due respect, considering the fact that often times when you upload a file (via ajax) it also has other form fields associated with it, I would see this as expected behavior of the plugin, not something that I should have to write extra code.\nIs it possible this could be included in the next release?\n. If I just called the upload function inside the plugin, would that work?  What would be the syntax to make that call?\n. Thank you for including this feature.  Unfortunately, it does not work if I submit a form with no attached file.  Is there a new option I need to set?\n. I added my submit button based on what is created from the template as follows but it did not work:\nSubmit\nIs there something else I would have to do?  Would I just call the uploadBatch function inside the plugin?  If so, how exactly would that call look?\n. js\n$(document).on('click', '#submit_test', function(event, data) {\n    $('#file4').fileinput('uploadBatch');\n});\nThat worked for a single file but it did not work for multiple files...Any ideas? Just sends the last file selected... btw I set the uploadUrl\n. If I set:\nuploadExtraData: { first_name: 'Kartik', middle_initial: '', last_name: ' Visweswaran'},\nThe plugin passes only the first_name and last_name fields because the middle_initial is an empty string.  \nIf I had a basic HTML form that did not use this plugin, and filled out the form the same way, I would receive all 3 fields in the $_POST variable and the $_POST[ 'middle_initial' ] will contain an empty string.\nThe plugin will not send any form elements who value is an empty string in uploadExtraData, see code below from fileinput.js starting on line 862\n        uploadExtra: function(fd) {\n            var self = this, data = self.getExtraData();\n            if (data.length == 0) {\n                return;\n            }\n            $.each(data, function(key, value) {\n                if (!isEmpty(key) && !isEmpty(value)) {  // THIS IS WHERE IT BLOCKS ALL EMPTY FIELDS\n                    fd.append(key, value);                       // FROM BEING ADDED TO $_POST\n                }\n            });\n        },\n. I am not getting the following exception:\n\n. When I submitted the form with no files and no extra data using: \n$('#file4').fileinput('upload');\n. Also when I submitted the form with extra data.\n. I got another exception when I uploaded one file with extra data:\n\n. Downloaded the most recent update, everything appears to be working now.  Thank you!\n. If I remove both the uploadUrl and uploadExtraData, it works as expected.\n. ",
    "MasterMindNET": "Good day everyone!\nIs it okay if i get error Uncaught ReferenceError: typeahead_7864e59a is not defined\nand one more Uncaught SyntaxError: Invalid or unexpected token kartik typeahead\nif i return array with value like this: <script>alert('mummy');</script>\nor it's my fault to save such content?\nI'm interested in this, and I would like to know it, in order to avoid such mistakes in the feature.\nAny help will be appreciated!. ",
    "genc6541": "I do not work with json. I only want to image upload. I don't know json mson\n. ",
    "langy1": "really... huh... and you expect the plugin author to respond to people with your attitude... you wish to use a feature but are not interested in knowing about it... do your rhymes elsewhere rather than joking around here...\n. ",
    "armnotstrong": "What I mean is I like the default behavior of the drag & drop box, which is before click the browse button, the drag & drop box wont show up, and after I click browse button, It will show up so that I can add more files, or delete one. (it's the default behavior of the input right?), \nhere is What currently things look like:\n\nand this is the html:\n \n\n\n\n\n\n\n```\n\n\n\n            \u81ea\u52a8\u7b7e\u540d\n            \n\n\u65b0\u5efa\u4efb\u52a1\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \u770b\u770b\u6587\u4ef6\u91cc\u90fd\u5199\u4e86\u4e9b\u5565\n            \n\n\u65b0\u5efa\u4efb\u52a1\n\n\n\n```\nand here is the controlling JavaScript:\n$('.fileUpload').fileinput({\n    uploadUrl:'/upload',\n    showCaption:false,\n    uploadExtraData: function(){\n        console.log(this.$element.attr('task-name'))\n        return {taskName:this.$element.attr('task-name')}\n    }\n})\nas you can see, I really don't like the drag & drop box attached there, It's too large. :sob: \n. Sorry to bother again, I found setting dropZoneEnabled to false is just what I needed, thank you!\n. ",
    "thejahweh": "Is there a way to enable the DropZone without having any \"uploadUrl\" set? Because without any \"uploadUrl\" you can still drop files, but it does not show any nicely styled \"drop here\" box.\n. Basically I've overwritten the submit, because I have to handle different forms with different content and only sometimes with your upload widget.\nHere is my current submit handler:\njavascript\n$('#divXYZ').on('submit', 'section.article form', function() {\n    var $form = $(this);\n    var $article = $form.closest('section.article');\n    var sendAdd = $article.data();\n    var fdata = new FormData(this);\n    for (var key in sendAdd) {\n        if (sendAdd.hasOwnProperty(key)) {\n            fdata.append(key, sendAdd[key]);\n        }\n    }\n    fdata.append('a', 'save');\n    $.ajax({\n        type: 'post',\n        url: $form.attr('action'),\n        dataType: 'json',\n        data: fdata,\n        processData: false,\n        contentType: false\n    }).done(function(data) {\n        if (data.success) {\n            $article.data('naid', data.object.newsID);\n            $article.data('noid', data.object.id);\n            $article.empty();\n            $article.html(data.html);\n        }\n    })\n    return false;\n});\n. Thats true, if you send it via batch, but in my case with the async method, it is not possible that way.\nIt would be possible if the index of the current file would be accessible in the uploadExtraData function. Here is an ugly hack, which worked for me, but i had to copy/override the whole upload function.\njavascript\n// Functions which are needed\nvar isEmpty = function (value, trim) {\n    return value === null || value === undefined || value == []\n    || value === '' || trim && $.trim(value) === '';\n}, addCss = function($el, css) {\n    $el.removeClass(css).addClass(css);\n}\n// Extend it\nvar fileinputExtension = {\n    getExtraData: function(previewId, index) {\n        var self = this, data = self.uploadExtraData;\n        if (typeof(self.uploadExtraData) == \"function\") {\n            data = self.uploadExtraData(previewId, index); // MAGIC\n        }\n        return data;\n    },\n    uploadExtra: function(fd, previewId, index) {\n        var self = this, data = self.getExtraData(previewId, index); // MAGIC\n        if (data.length == 0) {\n            return;\n        }\n        $.each(data, function(key, value) {\n            if (!isEmpty(key) && !isEmpty(value)) {\n                fd.append(key, value);\n            }\n        });\n    },\n    upload: function(i, files) {\n        ... // Some copy&paste code\n        self.uploadExtra(formdata, previewId, i); // MAGIC\n        ... // Some copy&paste code\n    },\n};\n$.extend($.fn.fileinput.Constructor.prototype, fileinputExtension);\nThen in the uploadExtraData function it is possible to do it like:\njavascript\nuploadExtraData: function(previewId, index) {\n    var obj = {}\n    $form.find('#' + previewId + \" input\").each(function() {\n        var id = $(this).data('name');\n        var val = $(this).val();\n        obj[id] = val;\n    });\n    return obj;\n}\n. Sorry, but that is not what I want. I've combined the Fileinput-Widget with your Sortable-Widget, now to send the sort-positions I need the ID's of every file. The other use is to set the value of the description of every file in the description-input.\n. My input is already multiple, that's not the problem.\n. Thx now it works except for the problem if you upload another file after the upload, the uploaded ones are getting removed from the preview.\n. I've done that before, like this:\njavascript\nlayoutTemplates: {\n    footer: '<div class=\"file-thumbnail-footer\">\\n' +\n    '   <div class=\"file-caption-name\">{caption}</div>\\n' +\n    '   <input type=\"text\" class=\"form-control\" name=\"PictureGallery[filesTitles][]\" ' +\n        'value=\"{title}\" data-name=\"title\"/>\\n' +\n    '   {actions}\\n' +\n    '</div>'\n}\nBut how do I get the title of the initial files into the preview-template?\nI had to override the renderInitFileFooter in order to replace the {title} placeholder with the title from the initialPreviewConfig.\n. With the customLayoutTags it is only possible to replace the tags with static variables, there is no way to get a initial config variable for the specific file.\n. Thanks, that's just awesome! :tada: \n. Ok there are now two problems.\n- If I return the initialPreviewThumbTags with the upload-script, it doesn't recognize it. Because of that it just shows {title} in the input after the upload.\n- If the delete button is pressed after the upload, there is this error message:\nfileinput.js:932 Uncaught TypeError: undefined is not a function\nfileinput.js:932 FileInput.initPreviewDeletes.self.$preview.find.each.$.extend.success\n. This could be combined with a Drag&Drop feature without ajax, which should be possible according this stackoverflow answer.\n. 1 Problem\nI use async and return an error, the problem is, that the span.file-input gets the class has-error, which does affect every underlining input field.\n2 Problem\nThe file with the error can be removed with the remove button, but why does the error which is related to the file not disappear too?\n. Thanks for your quick reply.\nI have to allow upload 200 pictures at once. This means it does work if I just disable the showPreview function, but then the user is not anymore able to delete a picture afterwards. So the showPreview option has to be on.\nWhat I tried is to set the allowedPreviewTypes to nothing, which does then just shows a placeholder. Thats what I wanted, after the upload it shows the preview which is great. But is it possible to show a thumbnail before it gets uploaded and just resize it to 100x100 or something like that, just to not consume too much memory?\nMy current problem is, that I have to give the image resizing to some workers on the server-side and the thumbs not always ready when the upload is finished so it shows only a 404-image-placeholder.\n. ",
    "SteveDCronin": "YEAH!  That, my good man, is excellent stuff  \u2014 thank-you!\nSteve\n\nOn Jan 18, 2015, at 11:45 PM, Kartik Visweswaran notifications@github.com wrote:\nI have created a webtip for server side processing example using PHP http://webtips.krajee.com/ajax-based-file-uploads-using-fileinput-plugin/ for folks who may need it.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/kartik-v/bootstrap-fileinput/issues/133#issuecomment-70448763.\n. \n",
    "mehafi": "Thanks for your explanation.\nfinaly I decided to use form based submission and add \"+\" and \"-\" buttons dynamicly creating new instance of . thanks to it when someone want to send more than one file need to add new input (or remove if not need).\n. ",
    "joelZC": "good afternoons im programming in asp.Net mvc 6 vNext and i implementing this inputfile, but i have a problem in my AvtionResult i return the view index but the view appears into of div with class .file-error-message and i dont know how fix, might help me please?\n. also appear this mistake \" 23.jpg: SyntaxError: Unexpected token <. \" \n. \n. ",
    "josemsalves": "Token expected position 0... Why?. ",
    "jflamman": "I will try tonight, thanks for the quick response!\n. elPreviewContainer did not achieve my goal. The behavior after defining custom HTML for the preview template in the layoutTemplates.preview option, or putting the HTML somewhere on the page and referring to it in the elPreviewContainer option seems to be identical: the \"browse\" button and the image preview still appear in the same place.\nBut... Your suggestion pointed me in the right direction and I was able to achieve what I want through the option elPreviewImage.\nRecap: I want an elegant camera icon in the navigation bar that triggers a file upload. The image preview is shown in real size in the \"timeline\" exactly how it would look like after the upload.\nSolution: I have a hidden container, id \"filepreview\". Inside the container - where the preview image should go is a div, id \"fileInputPreview\". The listener is bound  to a div in the navigation bar, id'ed \"input-4\".\nJavascript:\n```\n    $('#input-4').on('fileloaded', function(event) {\n        $('#filepreview').show();\n    });\n$(\"#input-4\").fileinput({\n    showCaption: false,\n    layoutTemplates : {\n        preview: '<div class=\"file-preview-thumbnails panel-body\"></div>\\n'\n    },\n    previewSettings : {\n        image: {width: \"100%\", height: \"auto\"}\n    },\n    elPreviewImage : '#fileInputImg',\n    showUpload : false,\n    showCancel : false,\n    showCaption : false,\n    showRemove : false,\n    browseIcon : '<i class=\"glyphicon glyphicon-camera\"></i>',\n    browseLabel : '',\n    browseClass : ''\n});\n\n```\n. ",
    "rajneesh-reglobe": "I have uploaded a image using Ajax and i want to delete without refresh the page then how can it possible. \nwhen i click on delete button then image is hiding but not remove from database.\nPlease help me to figure out my problem.\nI am using Yii2 plugin.\necho $form->field($packageImages, 'package_img')->widget(\\kartik\\file\\FileInput::classname(), [\n                'options' => [\n                    'multiple' => true,\n                    'accept' => 'image/*',\n                    'class' => 'col-sm-10',\n                ],\n                'pluginOptions' => [\n                    'browseClass' => 'btn btn-info',\n                    'browseLabel' => 'Select Package Image',\n                    'previewFileType' => 'image',\n                    'uploadUrl' => \\yii\\helpers\\Url::to(['/package/upload/']),\n                    'uploadExtraData' => [\n                        'p_id' => $model->id,\n                    ],\n                    'preview' => $initialPreview,\n                    'previewConfig'=> $initialPreviewConfig,\n                    'initialPreview' => $initialPreview,\n                    'initialPreviewConfig'=> $initialPreviewConfig,\n                    'overwriteInitial'=>false,\n                    'maxFileCount' => 5,\n                    'mainClass' => 'input-group-lg'\n                ],\n                'pluginLoading' => true,\n            ]);\n. ",
    "zhopy": "Can you provide a sample code on how to do auto upload with this event triggered? Thanks.. Thanks for the prompt reply, your works are amazing!. ",
    "Ponchia": "Here is my problem:\nI don't submit the form at the moment.\nWhen the user click on save I just take all the value from the form and with ajax and serialize I'll upload all on my server.\nNow, serialie can't take value as image, so I'm stuck here.\nSorry if is a dumb question.\n. demo page link not valide.\nI solved using formData and not serialize!\nThanks for the hard work man!\n. ",
    "derblub": "Well, obviously I've read the documentation (I've also mentioned the event for a successfull upload on my first comment).\nYour documentation is saying, data.files should have meta information, which is empty (array with 1 field: undefined) on all my file-input fields - didn't test multi file uploads.\n. Seems like that worked, thanks!\n. :+1:\n. Guess that resolves the mystery. Thanks!\n. ",
    "sijo-vijayan": "Hi,\nI would like to pass a Token as the http header along with this fileupload http request, Can you give me an example code for this purpose ?\nI'm using this with in an angularjs application, this is currently what i have done.\nzentieraDirectives.directive('fileinput', function($rootScope) {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            $(element).fileinput({ 'uploadUrl' : $rootScope.STATIC_URL+'users/addPhoto', ajaxSettings : { headers: { Token: 'Bearer ' } } });\n        }\n    };\n});\nHeader value appearing in wrong place, refer the attached image\n\n. ",
    "reedgz": "Thanks for the super fast help!\nActually the desired event is filebatchuploadsuccess as it has data.response in callback.\n. ",
    "tienhoangnguyen": "Hi Kartik!\nMy safari version is 5.1.4 and 5.1.7.\nThe file-input doesn't get initialized and stays on the browser-styled file-input element.\nIt is not like this image (on chrome)\n\nHow do I fix it on safari 5.14 and 5.1.7?\nthanks\n. ",
    "skysteve": "Thanks for the quick reply :)\nI think I've sorted it now, ended up using the extra data attribute, feel free to close :)\n. ",
    "yedyharova": "$.prototype.fileinput.Constructor.prototype[\"setUploadUrl\"] = function(url) {\n    this.uploadUrl = url;\n}\n$('#fileuploader').on('filepreajax', function(event, previewId, index) {\n    $('#fileuploader').fileinput(\"setUploadUrl\", url);\n}\n. ",
    "Mecanik": "@yedyharova This would be the perfect solution.. ",
    "nikhilbhanda": "Hi Kartik, I am trying to upload 50MB file and uploading progress bar stuck on 1 percent also it is not taking \".kar\" and \".vid\" files, I have aaded those files on allowed extension. showPreview is also set to false\nbut still no luck till now, Please help\nBelow is config:\n $(\"#input-700\").fileinput({\n            uploadUrl: siteroot + \"Track/UploadTrackwithRewource\", // server upload action\n            uploadAsync: true,\n            showUpload: false,\n            maxFileCount: 1,\n            autoReplace: true,\n            showPreview :false,\n            maxFileSize: 0\n});\n\n. ",
    "blueprinted": "@atroxmavenia set php.ini \npost_max_size = 64M\nupload_max_filesize = 64M\nsolve.\n. ",
    "nathanburgess": "@blueprinted Not solved. That wasn't the issue.\n. ",
    "akluthe": "I certainly will. Give a me a bit and I'll come back with some more info.\n. No matter where I put it, I can't get it the width to do anything different.\nEven on a page with only the input tag on it and no container.\nI notice I am getting the following inline style on the preview image.\nstyle=\"width: 100%; height: auto;\nI'd expect to see something other than 100% passed here if it was getting weird by being nested in some divs or a modal.\n. How's this for weird:\nI changed STYLE_SETTING to this to override everything manually.\nSTYLE_SETTING = 'style=\"width:50px;height:auto;\"',\nand I still get width:100% in the style.\n<img src=\"blob:http%3A//localhost%3A53562/4a703104-6f37-4031-b822-e77a6c0263d5\" class=\"file-preview-image\" title=\"featured_peacetea_snoberry1.jpg\" alt=\"featured_peacetea_snoberry1.jpg\" style=\"width: 100%; height: auto;\">\n. If I use, Chrome Dev tools I can cahnge file-preview-frame style to get my desired results. \nIt seems it was set at 97%. Searching through your code for 97% hits on this chunk of code.\n``` javascript\n$img.on('load', function() {\n                var w1 = $thumb.width(), w2 = $preview.width();\n                if (w1 > w2) {\n                    $img.css('width', '100%');\n                    $thumb.css('width', '97%');\n                }\n                var $cap = $img.closest('.file-preview-frame').find('.file-caption-name');\n                if ($cap.length) {\n                    $cap.width($img.width());\n                    $cap.attr('title', $cap.text());\n                }\n                self.raise('fileimageloaded', previewId);\n            });\n```\nsetting image to width to 100% and the preview-frame to 97%.\nCommenting out the following makes everything work as expected.\njavascript\n  if (w1 > w2) {\n     $img.css('width', '100%');\n     $thumb.css('width', '97%');\n   }\n. ",
    "sajjad-shirazy": "but some times we are forced to have a standard parameter structure:\nhttp://stackoverflow.com/a/16935012/2179157\n. i'm using your plugin as a gallery editor ... so i need to keep uploaded files in the gallery like initial preview items with ability to upload more items.\nany idea?\n. ",
    "geocine": "As you can see yes the image previews on the first row have the same height (as you confirmed these have constant height)  . I wonder why there is a space on the second row those two images would still fit there. This is a screenshot from your demo page by the way.\nAlso I don't see a previewConfig anywhere on the documentation I just saw initialPreviewConfig . Could you give me a quick config snippet to set width preview to fixed. \n. ",
    "atmediauk": "Thats brilliant, thank you. WiIl have a go at this :)\n. ",
    "cyrakuse": "i think my question 3 is an issue. It's not usable in production like this.\n. Sorry. Didn't show this possibility \n. ",
    "mafar": "https://github.com/kartik-v/bootstrap-fileinput/compare/master...djangosdk:patch-1\n. ajaxDeleteSettings would be better approach definitely\n. ",
    "sunnymumbai25": "How to form submission event bind with this input field and data. After manual form submission data do not bind with files input.\nPlease provide some reference link if possible . ",
    "gupi": "Thanks a lot for your fast response,\nI've updated my source according your suggestion and now it worked as expected.\nBy the way - the syntax I've used previously was extracted from your demo I've downloaded here. \n. ",
    "fltiago": "Thanks.\n. ",
    "YairHadari": "I would like to see this implementation also.\nThanks\n. ",
    "henriquesobral": "I Successfully made a direct upload to S3.\nI used data attributes in HTML to pass the fields generated by Amazon S3 Ruby SDK presigned_post method to Javascript. Then, I used these attributes in uploadExtraData field and made some adjustments on FormData using filepreupload event, by removing file_id(or allow it in presigned_post method) and putting file field in last position of FormData, by removing it and setting it using formData.set command (need to be the last set command).\nEDITED: The name of file field must be file, otherwise, S3 will return an error. https://aws.amazon.com/articles/1434\nSee below.\nRuby\n@s3_direct_post = S3_BUCKET.presigned_post(key: \"uploads/#{SecureRandom.uuid}/${filename}\", success_action_status: '201', acl: 'public-read', content_type_starts_with: 'image/')\nRuby Erb\n<div class=\"upload-files\" data-form-data=\"<%= @s3_direct_post.fields.to_json %>\" data-url=\"<%= @s3_direct_post.url %>\">\n</div>\nJavascript\n```\n    data = $(\".upload-files\").data();\n    multipartParams = data.formData;\n$('.file-input').fileinput({\n  uploadUrl: data.url, //received by data attributes\n  uploadAsync: true,\n  browseLabel: 'Procurar',\n  removeLabel: 'Remover',\n  browseIcon: '<i class=\"icon-file-plus\"></i>',\n  uploadIcon: '<i class=\"icon-file-upload2\"></i>',\n  removeIcon: '<i class=\"icon-cross3\"></i>',\n  browseClass: 'btn btn-primary btn-sm',\n  removeClass: 'btn btn-default btn-sm',\n  showPreview: false,\n  //showUpload: false,\n  allowedFileExtensions: [\"tif\", \"tiff\", \"obj\"],\n  msgSelected: \"{n} arquivo(s) selecionado\",\n  initialCaption: \"Nenhum arquivo selecionado\",\n  uploadExtraData: multipartParams, //received by data attributes\n}).on('filepreupload', function (event, outData, previewName, index) {\n  outData.form.delete('file_id');\n  outData.form.delete('file');\n  outData.form.set('Content-Type', outData.files[0].type);\n  outData.form.set('file', outData.files[0], outData.files[0].name);\n\n});\n```\n. ",
    "perlausten": "Ah, it was a caching issue. Doh! Thanks for your answer.\n. ",
    "rmja": "That is not the icon I am talking about. This is the one:\n\n. Hi again, sorry I missed that. I got it to work! - thanks.\n. ",
    "Kaldrax": "When setting maxFileSize the fileerror event is not triggered if you try to select a file larger than the set size. Instead of msgSizeTooLarge the general error message is shown.\nThe file still gets uploaded if .fileinput('upload') is called. (I'm using an external button)\n. Thanks I didn't know that. Still the fileuploaderror (in my case filebatchuploaderror) is only triggered AFTER the upload attempt. I thought fileerror would be the right event to trigger BEFORE any upload happens, like right when the error message is displayed.\nAdditionally what's very confusing: shouldn't there be a specific error message for file size exceeded?\nBecause it only shows me \"File Upload Error\" and not the msgSizeTooLarge.\nNevermind apparently specific error messages are shown in the preview window which I have disabled. Gonna figure something out for myself.\n. ",
    "josepharcillas": "I'm using filebatchpreupload using ajax in Yii. Tried the below code and it aborts the upload but the upload and browse buttons was still disabled, how can I reset it?\n\n\n. ",
    "KickassCoxa": "Anyway, while dropping a folder. Your plugin increments total count of files dropped\n. The problem occurs, with the last example from here: \nbootstrap-fileinput/examples/index.html\n. ",
    "kliolios": "I will give it a shot.  Thanks\n. ",
    "Futursky": "javascript\nApp.directive('fileInput', function() {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      $(element).fileinput({\n        'showUpload':false,\n        'previewFileType':'any'\n      });\n    }\n  };\n});\nhtml\n<input file-input type=\"file\" file-model=\"myFile\" id=\"fileInput\" name=\"fileInput\">\nworks for me\n. ",
    "tasdemirbahadir": "Hello,\nMaybe you can try \"fileloaded\" event to add components for each file preview. What I am doing is find the progressbar component and append some components \"before\" it:\n```\n    jQuery('#your_fileinput_component').on('fileloaded', function(event, file, previewId, index, reader) {\n    //Add additional text field\n    var referanceComponentProgressbar = jQuery(\"#\" + previewId).find(\".file-thumbnail-footer .file-thumb-progress\");\n    referanceComponentProgressbar.before($('<input type=\"text\" id=\"' + previewId \n            + '_additionaltextfield\" class=\"form-control\"  >'));\n\n    //Do not display broken images\n    jQuery(\".kv-preview-data.file-preview-image\").error(function() {\n        this.src=\"static/customer/img/no_preview.jpg\";\n    });\n\n});\n\n```\nYou can apply any component you want with this approach. As you can see, I am also handling broken image previews, assigning my custom thumbnail on error.\n. Thank you very much I will update it.\n. ",
    "LucaDia": "Hi, is there a way to add a button to my fileupload elements like the screenshoot shows?\nThanks.\n\n. ",
    "slo-nik": "\nHi, is there a way to add a button to my fileupload elements like the screenshoot shows?\nThanks.\n\n\n\"otherActionButtons\" => \"\n    <button class=\"set-main btn btn-sm btn-kv btn-default btn-outline-secondary\" type=\"button\" {dataKey} title=\"Main photo\">\n         <i class=\"fa fa-star\"></i>\n    </button>\n    \",.\n",
    "ZG-frank": "I think it can work with $('.kv-upload-progress').hide();\nAnd i try to set progressClass property to hide. But it cann't work. So i use js to fix it.\nBut why progressClass property does not work\uff1f. ",
    "chriswongxp": "if response contain like this \"{error: 0, ...}\", it means no error, but plugin show upload error, how to fix it?. ",
    "adilsonb": "Forget, I found the answer in Form Submission: \"Especially for multiple file input selections, ONE cannot append files to an already selected file list. If one tries to select files on an already selected file input, it will overwrite and clear the previous selection.\"\n. ",
    "toxicsec22": "Sir i really like your plugins , I used it for about 2 months , but i have this problem is it posible i can reset/clear the input using php ?  . ",
    "yoyhosoft": "I have problem a bout 'extra' not pass parameter to server.\n\"initialPreviewConfig\":[\n{\n  \"url\":\"/manage/shop/file-delete\",\n  \"key\":\"3799551d7a7b80fc0_Lovelace-210x300.jpg\",\n  \"extra\":{\"abc\":\"xxx\"}\n},\n{\n  \"url\":\"/manage/shop/file-delete\",\n  \"key\":\"1220551d7a7b81390_aerial.png\",\n  \"extra\":{\"abc\":\"xxx\"}\n}\n]\n. ",
    "joaquim3541": "My question has nothing to do with this #243. My question is related to how to use the template initialPreview , as in the examples and the documentation is only shown as set initialPreview with a new HTML , as this link:\nhttp://plugins.krajee.com/file-input#option-initialpreview\n. thanks for response,\nyou can give me one sample of this?\n. In this example , the preview images are entered using only the HTML tag . What would be the minimalist way to put other types of files , such as videos , text and images ?\n. sorry , I was not clear . \nI need a simple way to mount the various types of previews , such as videos , texts (which has the modal feature ) and other types . \nFor images , as the examples show , it only takes the tag image . \nNo css classes or other particularities of the plugin . What is the way I present a text for example? I only use a div with a specific css class? I copy those 5 lines that are html template layout? \nWhy can not simply pass a tag as in the picture ?\n. ",
    "vercotux": "It works. Thank you & keep up the great work!\n. ",
    "loshmis": "Updated.\n. ",
    "HaythemJ": "Yes but fileuploaded is not fired with uploadAsync: true, is that what you call ASYNC ?\nAlso why filebatchuploaderror is fired even if the file was uploaded successfully and and the server returns status OK (200)?\n. I am using WebApi as backend and while debugging I am pretty sure I am returning OK(200).\nEven the progress bar of bootstrap-fileinput is set to 100%. Also the event fileuploaderror is not fired.\nWhat is really strange is how come that the event filebatchuploaderror is fired and I am getting OK(200) from server? See below screenshot\n\n. ",
    "clq321": "OK\n. ",
    "CannyDuck": "Why do you replace characters in the filenames with the \"slugCallback\". You see any security issues or what it the cause for the replacement?\n. ",
    "akmalnodirov": "hi, i am new to yii2. I want to to ajax file upload like this:\nThis is my active form field:\n     echo $form->field($model, 'photo[]')->widget(FileInput::classname(), [\n            'options' => \n                [\n                    'multiple' => true, \n                    'accept' => 'image/*'\n                ],\n            'pluginOptions' => \n                [\n                    'uploadUrl' => Url::to(['/products/file-upload']),\n                    'allowedFileExtensions'=>['jpg', 'gif', 'png', 'bmp'],\n                    'initialPreview' => $allImage,\n                    'overwriteInitial' => false,\n                    'previewFileType' => 'image', \n                    'showCaption' => false,\n                    'showRemove' => false,\n                    'showUpload' => false,\n                    'showCancel' => false,\n                    'browseClass' => 'input-baby btn btn-primary btn-block',\n                    'browseIcon' => ' ',\n                    'browseLabel' =>  '\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0444\u0430\u0439\u043b',\n                    'maxFileCount' => 20\n                ]\n        ])->label(false);\nand i have a controllers, one for create model, one for ajax file upload. Now how to upload multiple files when click submit button ?. can anyone show me an example of uploading multiple files with kartik file input using ajax upload when with active form model ? thank you. ",
    "alsemany": "Hi,\ndid you found any solution for this ?\nI just would like to include a hidden value of TOKEN with the POST I\"m using laravel 5 \nI can exclude CSFR however I don't want to do this \n. I found that option here \n'uploadExtraData' => [\n            'album_id' => 20,\n            'cat_id' => 'Nature'\n        ],\n        'maxFileCount' => 10\nthis may help you also passing variables with the same form input\nmy regards\n. this will be like that\n$(\"#inputfiles\").fileinput({\n    uploadUrl: \"/uploading_url\",\n    'uploadExtraData' : {\n'inputname' : 'input_data',\n    },\n    uploadAsync: true,\n    maxFileCount: 10\n});\n. I'm sorry for misunderstand, I was searching for posting another data with the ajax..\nas kartik-v  said use unique ID for each input\n<input id=\"input1\">\n<input id=\"input2\">\n<input id=\"input3\">\n<script>\n$(\"#input1\").fileinput({ uploadUrl: \"/uploading_url\"});\n$(\"#input2\").fileinput({ uploadUrl: \"/uploading_url\"});\n$(\"#input3\").fileinput({ uploadUrl: \"/uploading_url\"});\n</script>\n. ",
    "nevits8as": "I use multiple input becouse i need upload 3 images for 3 diferents div in a page php... becouse thats images are publicity and have 3 diferent position at the page\n. I just change the images versions after the extension of each image.. ",
    "rkurbatov": "Javascript initialization works only if I put init script (direct or reference) at the end of the html file. And usual way like document.ready or even window.load is wrong. So can I fix it? I have all my starting scripts at the head and don't want to change this.\n. Hey, answer me somebody, please. I'm working with it a couple of days.\n$(document).ready(function () {\n    $('#uploader').fileinput({\n        'uploadUrl': '/upload',\n        'showUpload': false\n    });\n});\nThis script isn't working. Neither document.ready, nor window.load.\nHow should I use it? And how can I change uploadUrl or extraData during script execution? All I can now is to set them on start with data-attributes or with script placed just after that fileinput.\n. I've managed it to work at last disabling autoconversion of all 'type=file' elements in script. Strange behavior as for me...\n. No. It automatically init all elements with type = \"file\", not class. And when I remove type = \"file\", I have a broken control.\nI've disabled that conversion at the end of library code. May be it's better to use class or attribute like \"no-auto-init\" to prevent autoconversion where I want to do it manually.\nAnd I haven't found the way to change params after initialization. For example to change uploadExtraData I need to use special function which returns common visible object or use a closure instead of giving it to control directly.\n. Ok. Sorry for language, but i'll try to explain. The end of fileinput.js\n$(document).ready(function () {\n        var $input = $('input.file[type=file]'), count = $input.attr('type') ? $input.length : 0;\n        if (count > 0) {\n            $input.fileinput();\n        }\n    });\nLibraty Inits all elements with attr type=file. So when I use my script with document.ready initialization it will work after this autoinit. I need to comment out this piece of code to have possibility use my custom initialization in my script that starts in document.ready handler.\nYou initi fileinput earlier than me. I could prevent it adding my init script just after fileinput markup but I want it to be inside document.ready handler.\nSo possible solution is to mark fileinputs in some way to prevent their autoinit. It can't be done by removing type = file, because it breaks their appearance.\n. Sorry, mu fault. I thought I've tried removing both type and class and it didn't work.\n. I can use url for parameters passing, but it can be done only during init. If I need, for example, to send directory name that defined in user session, i can't do it (or I haven't found how to do it). I've tried to solve this with dirty hack - i created the function that prepends formdata with given values. But it's too dirty. It would be better to give standart way of doing so. So there are two issues:\n1) changing params after init (at least some of them, like uploadUrl)\n2) order of formdata fields. Now extraData (which I can change from script in very innatural way) are passed AFTER files that causes problems on server side as in my case.\n. ",
    "hex6ng": "This behavior is incredibly counter intuitive.  Had me pulling out my hairs for days.. ",
    "KimKJDesigns": "Using exactly your code, just changing the image location and the delete URL.\n$(\"#file-1\").fileinput({\n            uploadUrl: \"http://localhost/file-upload-single/1\", // server upload action\n            uploadAsync: true,\n            minFileCount: 1,\n            maxFileCount: 5,\n            overwriteInitial: false,\n            initialPreview: [\n                \"\",\n            ],\n            initialPreviewConfig: [\n                {caption: \"People-1.jpg\", width: \"120px\", url: \"#\", key: 1},\n            ],\n            uploadExtraData: {\n                img_key: \"1000\",\n                img_keywords: \"happy, nature\",\n            }\n        });\n\nDumping the $_POST shows:\nUncaught Error: Syntax error, unrecognized expression: array(0) {\n}\nI'm feeling stupid that I've overlooked something but I'm successfully uploading, just cannot get this delete to POST\n. Yeah, I had this before. Changed to a file to just dump all variables.\n\nUncaught Error: Syntax error, unrecognized expression: All Arraysarray(8) {\n  [0]=>\n  string(4) \"_GET\"\n  [1]=>\n  string(5) \"_POST\"\n  [2]=>\n  string(7) \"_COOKIE\"\n  [3]=>\n  string(6) \"_FILES\"\n  [4]=>\n  string(7) \"_SERVER\"\n  [5]=>\n  string(8) \"_REQUEST\"\n  [6]=>\n  string(4) \"_ENV\"\n  [7]=>\n  string(7) \"GLOBALS\"\n}\n_GET Arrays = NULL\n_POST Arrays = NULL\n_COOKIE Arrays = NULL\n_FILES Arrays = NULL\n_SERVER Arrays = NULL\n_REQUEST Arrays = NULL\n_ENV Arrays = NULL\nGLOBALS Arrays = NULL\n_SESSION Arrays = NULL\n\n. FOUND IT!!\nLine 933\n\nsettings = $.extend({\nurl: vUrl,\ntype: 'DELETE',     <---- This should be 'POST'\ndataType: 'json',\ndata: $.extend({key: vKey}, extraData),\nbeforeSend: function (jqXHR) {\nself.ajaxAborted = false;\nself.raise('filepredelete', [vKey, jqXHR, extraData]);\nif (self.ajaxAborted) {\nqXHR.abort();\n} else {\naddCss($frame, 'file-uploading');\naddCss($el, 'disabled');\n}                            \n},\n. Ok cool,\nI'll have a look at that option too, so far nothing has broke and I've at least moved on to ensure the rest of my scripts are working.\n. ",
    "vkmel": "Thanks. I did that and it worked.\n. ok. thanks.\n. ",
    "fizista": "Translation completed and verified.\n. ",
    "th0th": "Sorry, missed that part. Done now.\n. ",
    "franciscoaleixo": "Oops, fixed it.\n. ",
    "JStika": "I dont know how I can add new pull request\nOn Monday 4.5.2015 16:29, Kartik Visweswaran wrote:\n\nYou can create a Pull Request to submit your translation file (hope \nyou are familiar with one)?\nIts easy to submit a translation file as mentioned in docs \nhttp://plugins.krajee.com/file-input#translations.\nRemember to change the |LANG| tag with your ISO language code.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/kartik-v/bootstrap-fileinput/issues/274#issuecomment-98726782.\n\n\nYours sincerely - S pozdravem\nJaroslav \u0160tika / Web Programmer\n+421 09 05 52 87 68 / Jaroslav.Stika@gmail.com \nmailto:Jaroslav.Stika@gmail.com\nFacebook https://www.facebook.com/stika.jaroslav Google Plus \nhttps://plus.google.com/107125133523196240075 Linkedin \nhttps://sk.linkedin.com/in/jaroslavstika Skype skype:stika-pike?chat\nMy momma always said, \"Life was like a box of chocolates. You never know \nwhat you're gonna get.\"\nMoje m\u00e1ma v\u017edycky \u0159\u00edkala, \"\u017divot je jako bonboni\u00e9ra. Nikdy nev\u00edte, co \ndostane\u0161.\"\n-- Forrest Gump\n. Create is disabled.......\nOn Monday 4.5.2015 17:09, Kartik Visweswaran wrote:\n\nYou can check this in github docs \nhttps://help.github.com/articles/creating-a-pull-request/.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/kartik-v/bootstrap-fileinput/issues/274#issuecomment-98743194.\n\n\nYours sincerely - S pozdravem\nJaroslav \u0160tika / Web Programmer\n+421 09 05 52 87 68 / Jaroslav.Stika@gmail.com \nmailto:Jaroslav.Stika@gmail.com\nFacebook https://www.facebook.com/stika.jaroslav Google Plus \nhttps://plus.google.com/107125133523196240075 Linkedin \nhttps://sk.linkedin.com/in/jaroslavstika Skype skype:stika-pike?chat\nMy momma always said, \"Life was like a box of chocolates. You never know \nwhat you're gonna get.\"\nMoje m\u00e1ma v\u017edycky \u0159\u00edkala, \"\u017divot je jako bonboni\u00e9ra. Nikdy nev\u00edte, co \ndostane\u0161.\"\n-- Forrest Gump\n. I'll send you, attached.\nIt's faster.........:)\nOn Monday 4.5.2015 17:10, Kartik Visweswaran wrote:\n\nCreate a fork of this repo and you can check about creating PR in \ngithub docs https://help.github.com/articles/creating-a-pull-request/.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/kartik-v/bootstrap-fileinput/issues/274#issuecomment-98743700.\n\n\nYours sincerely - S pozdravem\nJaroslav \u0160tika / Web Programmer\n+421 09 05 52 87 68 / Jaroslav.Stika@gmail.com \nmailto:Jaroslav.Stika@gmail.com\nFacebook https://www.facebook.com/stika.jaroslav Google Plus \nhttps://plus.google.com/107125133523196240075 Linkedin \nhttps://sk.linkedin.com/in/jaroslavstika Skype skype:stika-pike?chat\nMy momma always said, \"Life was like a box of chocolates. You never know \nwhat you're gonna get.\"\nMoje m\u00e1ma v\u017edycky \u0159\u00edkala, \"\u017divot je jako bonboni\u00e9ra. Nikdy nev\u00edte, co \ndostane\u0161.\"\n-- Forrest Gump\n. Just done.\nOn Monday 4.5.2015 19:50, Kartik Visweswaran wrote:\n\nClicking the fork button on top right of the page creates a fork.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/kartik-v/bootstrap-fileinput/issues/274#issuecomment-98795414.\n\n\nYours sincerely - S pozdravem\nJaroslav \u0160tika / Web Programmer\n+421 09 05 52 87 68 / Jaroslav.Stika@gmail.com \nmailto:Jaroslav.Stika@gmail.com\nFacebook https://www.facebook.com/stika.jaroslav Google Plus \nhttps://plus.google.com/107125133523196240075 Linkedin \nhttps://sk.linkedin.com/in/jaroslavstika Skype skype:stika-pike?chat\nMy momma always said, \"Life was like a box of chocolates. You never know \nwhat you're gonna get.\"\nMoje m\u00e1ma v\u017edycky \u0159\u00edkala, \"\u017divot je jako bonboni\u00e9ra. Nikdy nev\u00edte, co \ndostane\u0161.\"\n-- Forrest Gump\n. ",
    "dwsrumwq7cyey7qv": "Hello taraman,\nI also experience a problem with the \"refresh\" function of this plugin. I am using version 4.2.1 and after the call of \"contractUploader.fileinput('refresh', {browseLabel: toLabel});\" no events are handled anymore. Why is it the case?\nThat means that the first time, the browse label gets updated correctly. But after that, no events get triggered and so, the browse label does not get changed.\nPlease see enclosed the important part of the code.\n```\nvar contractUploader = $('#registration_contract_contractUpload_file').fileinput({\n        [...]\n    }).\n    on('fileloaded', function(event, file, previewId, index, reader) {\n        [...]\n        changeBrowseLabel(file.name);\n    }).\n    on('fileerror', function(event, data) {\n        [...]\n        changeBrowseLabel(errorMessages.browseLabel);\n    });\nfunction changeBrowseLabel(toLabel) {\n    if (!toLabel || toLabel.length === 0) {\n        return;\n    }\nif (contractUploader) {\n    contractUploader.fileinput('refresh', {browseLabel: toLabel}); \n}\n\n}\n```\n. ",
    "nurmanhabib": "This issue was made by @taraman , answered a question why is the other?\n@kartik-v I also have the same case, how to replace uploadUrl when after initialized without eliminating file_data?\n. ",
    "zachabney": "Pull Request #280 has been submitted as a fix for this issue.\n. ",
    "ycha28": "I don't think this behavior is exclusive to my site. If you look at demo #6 (http://plugins.krajee.com/file-input-ajax-demo/6), you can see that dragging the red \"Tips\" button into the drop zone causes the drop zone to collapse.\n. ",
    "ddechant": "\nThe above abort will be triggered at time of upload for (ajax uploads) OR at form submission (for non-ajax uploads).\n\nBut the abort doesn't occur. The POST continues, regardless if the uploadExtraData is used or not.\n. ",
    "mecreant": "Available now ? Chunk files is a very good option to add this awesome plugin\n. ",
    "Smaillife": "Ohm,I need this plugin , too! Floor host, would suggest for me?!\n. ",
    "shabenschuss": "Any chance this is in progress? This plugin would be flawless with this feature.\n. ",
    "rommcr": "\nWill update on this when I get a bit of time.\n\nAs I understand you did not have time to implement it?. ",
    "jackttcoms": "Do you think it could be done sometime during 2019? Thanks. Wooo. Can't wait.. ",
    "mhashimmaqbool": "After taking your latest Fileinput.js file, it leads with other Ajax upload issues, as well as Ui fixes. When I  upload a file, it shows a red caution at the bottom left corner without any error message but a title on it \"Upload Error\" even the file has been successfully uploaded over the server.\nOther errors I found that, when upload a file it shows one red caution with one url upload hit on the server, selecting another file, show two cautions with two upload urls hit at the server. It increases as many times as the files being added in dropzone.\nThis is the response which I receive from the server on file upload:\n{\"error\":\"\",\"initialPreview\":[\"\"],\"initialPreviewConfig\":[{\"caption\"\n:\"o-IPHONE-6-facebook.jpg\",\"url\":\"/personal/bindtrade/trunk/themes/templates/commerce/heroic/web/admin\n/product-image/delete-image\",\"key\":39,\"frameAttr\":{\"productImageId\":39,\"position\":\"1\"}}],\"append\":true\n}\nFollowing is my code which Im using to upload files:\n$(\"#productImageUpload\").fileinput({\n    uploadUrl: product.uploadImageUrl,\n    uploadAsync: true,\n    showCaption: false,\n    showRemove: false,\n    showUpload: false,\n    browseClass: 'btn btn-primary btn-block',\n    browseIcon: ' ',\n    browseLabel:  'Select Product Images',\n    replaceFileInput: false,\n    previewFileType: 'image',\n    options : [{accept: 'image/*', multiple : true}],\n    allowedFileExtensions : ['jpg', 'png','gif'],\n    showClose: false,\n    append: true,\n    showUploadedThumbs: true,\n    initialPreview: product.initialPreview,\n    initialPreviewConfig : product.initialPreviewConfig,\n    layoutTemplates: {\n        progress: '',\n        footer: '\\n' +\n                    '{caption}\\n' +\n                    '{progress} {actions}\\n' +\n                '',\n        actionUpload: '{uploadIcon}\\n'\n    }\n});\n$('#productImageUpload').on('filepreupload', function(event, data, previewId, index) {\n        var form = data.form, files = data.files, extra = data.extra, response = data.response, reader = data.reader;\n```\n    if(typeof previewId !== 'undefined') {\n        var position = 0;\n        var count = 0;\n    $('.file-preview-thumbnails > div').map(function () {\n        count++;\n        if (this.id == previewId) {\n            position = count;\n        }\n    });\n\n    form.append('position', position);\n    form.append('productId', product.id);\n}\n\n});\n$('#productImageUpload').on('filepredelete', function(event, key, jqXHR) {\n    if (!window.confirm('Do you wish to remove?')) {\n        jqXHR.abort();\n        event.preventDefault();\n    }\n});\nif (product.isNewProduct) {\n    $('#productImageUpload').on('filebatchuploadcomplete', function(event, files, extra) {\n        $('.kv-upload-progress').hide();\n        showGlobalMessage('Product successfully saved!', messageType.SUCCESS);\n    });\n}\n$('#productImageUpload').on('filebatchselected', function(event, files) {\n    if (product.id > 0) {\n        $(this).fileinput(\"upload\");\n    }\n});\n```\n. Got it!!\nit was my mistake. Actually I used a configuration parameter showUploadedThumbs: false which was causing the problem. \nAnyway Excellent plugin and you really done a fantastic job.\n. In async parallel upload if I do not return initialPreview and initialPreviewConfig arrays back in response then the delete button on the image does not work, even I have defined the deleteUrl under the inputfile configuration.\n. Yes this is what I meant to. \nIn asyn paraller upload, if I browse three images like image1.jpg, image2.jpg and image3.jpg (in a sequence) and press upload button, then 3 requests received on the server, I save the image and set initialPreview array with one file and return back as a response for each request. But now I cannot gurranttee which file will be rendered on which location, the position of the images get changed as these were initially on dropzone when browsed.\nor I can say that the sequence of the images get changed like image2.jpg, image1.jpg and image3.jpg. Whereas these were initially image1.jpg, image2.jpg and image3.jpg on dropzone.\nI know this is because of the image size, small size image will be uploaded first but while rendering back on the dropzone it does not maintain its position or sequence.\n. Any idea when this bug will be fixed?\n. This is what written in the documentation for uploadExtraData callback function\n\"previewId and index is only available for individual file upload via the thumbnail\"\nBut I want to have it for Async upload. would it work for Async upload as well?\n. Yes it is working but the behavior of the function is not satisfied.\nI put a alert statement inside the uploadExtraData callback method like:\nuploadExtraData: function (previewId, index)  {\n        alert(previewId);\n}\nbut on images upload it shows multiple times 'undefined' in alert box and then correct id of the thumbnail. This case is only for one file upload, same goes for all other images.\n. ",
    "pictoru": "I think it should be already translated before pull request. Sorry, I don't know exactly how GitHub works\n. Sorry, but I don't understand how GitHub works and I don't have time now to try to understand it. I'll simply copy/paste the Romanian translation here. I use the plugin and I like it, so here is my contribution for this nice work:\n/!\n- FileInput Romanian Translation\n  \n- This file must be loaded after 'fileinput.js'. Patterns in braces '{}', or\n- any HTML markup tags in the messages must not be converted or translated.\n  \n- @see http://github.com/kartik-v/bootstrap-fileinput\n- @translation_author Ciprian Voicu pictoru@autoportret.ro\n  \n- NOTE: this file must be saved in UTF-8 encoding.\n  */\n  (function ($) {\n  \"use strict\";\n$.fn.fileinput.locales.ro = {\n      fileSingle: 'fi\u0219ier',\n      filePlural: 'fi\u0219iere',\n      browseLabel: 'R\u0103sfoie\u0219te \u2026',\n      removeLabel: '\u0218terge',\n      removeTitle: 'Cur\u0103\u021b\u0103 fi\u0219ierele selectate',\n      cancelLabel: 'Renun\u021b\u0103',\n      cancelTitle: 'Anuleaz\u0103 \u00eenc\u0103rcarea curent\u0103',\n      uploadLabel: '\u00cencarc\u0103',\n      uploadTitle: '\u00cencarc\u0103 fi\u0219ierele selectate',\n      msgSizeTooLarge: 'Fi\u0219ierul \"{name}\" ({size} KB) dep\u0103\u0219e\u0219te limita maxim\u0103 de \u00eenc\u0103rcare de {maxSize} KB. Te rug\u0103m re\u00eencearc\u0103!',\n      msgFilesTooLess: 'Trebuie s\u0103 selectezi cel pu\u021bin {n} {files} pentru a \u00eenc\u0103rca. Te rug\u0103m re\u00eencearc\u0103!',\n      msgFilesTooMany: 'Num\u0103rul fi\u0219ierelor pentru \u00eenc\u0103rcare ({n}) dep\u0103\u0219e\u0219te limita maxim\u0103 de {m}. Te rug\u0103m re\u00eencearc\u0103!',\n      msgFileNotFound: 'Fi\u0219ierul \"{name}\" nu a fost g\u0103sit!',\n      msgFileSecured: 'Restric\u021bii de securitate previn citirea fi\u0219ierului \"{name}\".',\n      msgFileNotReadable: 'Fi\u0219ierul \"{name}\" nu se poate citi.',\n      msgFilePreviewAborted: 'Fi\u0219ierului \"{name}\" nu poate fi previzualizat.',\n      msgFilePreviewError: 'A intervenit o eroare \u00een \u00eencercarea de citire a fi\u0219ierului \"{name}\".',\n      msgInvalidFileType: 'Tip de fi\u0219ier incorect pentru \"{name}\". Sunt suportate doar fi\u0219iere de tipurile \"{types}\".',\n      msgInvalidFileExtension: 'Extensie incorect\u0103 pentru \"{name}\". Sunt suportate doar extensiile \"{extensions}\".',\n      msgValidationError: 'Eroare de \u00eenc\u0103rcare',\n      msgLoading: 'Se \u00eencarc\u0103 fi\u0219ierul {index} din {files} \u2026',\n      msgProgress: 'Se \u00eencarc\u0103 fi\u0219ierul {index} din {files} - {name} - {percent}% \u00eenc\u0103rcat.',\n      msgSelected: '{n} fi\u0219iere \u00eenc\u0103rcate',\n      msgFoldersNotAllowed: 'Se poate doar tr\u0103g\u00e2nd fi\u0219ierele! Se renun\u021b\u0103 la {n} dosar(e).',\n      dropZoneTitle: 'Trage fi\u0219ierele aici \u2026'\n  };\n$.extend($.fn.fileinput.defaults, $.fn.fileinput.locales.ro);\n  })(window.jQuery);\n. ",
    "periyakannan": "@kartik-v   while uploading multiple image with delete after submit button. deleting the single preview  image ..other images listed in preview but aftersubmit i cant get the other images.. ",
    "NewsBUZZ": "In Russian differs ending\n1 \u0444\u0430\u0439\u043b\n2,3,4 \u0444\u0430\u0439\u043b\u0430\n5,6,7 \u0444\u0430\u0439\u043b\u043e\u0432\n. ",
    "JessicaPuebla": "I already set the language property and included the locale, it doesn\u00b4t work.\nThe same issue with icons. \n$(\"#img-producto\").fileinput({\n    theme: 'fas',\n        language: 'es',\n});\nAnd I also include in my file\n\n\nHelp!\n. Just tell us the method of your plugin to render the initialPreview.\nPlease.. Thanks!\nI've solved it, it was easier than I thought.\nThe sequence of JS and CSS files is right. My problem was that I set the class \"file\" to he input. I didn't notice that this initialized the plugin and ignored the js. So I took this class off the input.. I see you edited the issue, what does it mean?. ",
    "DaXmAn": "Works now. Thanks.\n. ",
    "MadFan": "Hi, I have exactly the same problem \n$form->field($imageModel, 'networkLogo')->widget(FileInput::classname(), [\n            'options' => [\n                'id' => 'networkLogo',\n                'multiple' => true,\n                'accept' => 'image/*',\n            ],\n            'pluginOptions' => [\n                'maxImageWidth' => 200,\n                'maxImageHeight' => 400,\n                'previewFileType' => 'image',\n                'allowedFileExtensions' => [\n                    'jpg', 'jpeg', 'png'\n                ],\n                'showUpload' => false,\n                'showRemove' => false,\n                'maxFileSize' => 500,\n                'maxFileCount' => 1,\n                'initialPreview' => (!is_null(Settings::getNetworkLogoUrl())) ? [\n                    Html::img(Settings::getNetworkLogoUrl(), ['style' => 'width:200px;height:40px;']),\n                ] : false,\n                'initialPreviewConfig' => [\n                    ['url' => Settings::getNetworkLogoUrl()],\n                ],\n                'layoutTemplates' => [\n                    'footer' => ''\n                ],\n                'initialPreviewAsData' => false,\n                'overwriteInitial' => true,\n            ]\n        ]);\nUncaught TypeError: Cannot read property 'width' of undefined\nfileinput.min.js?v=1486557495:11 \nat I._generatePreviewTemplate (http://dashboard.addprofit.me/assets/e4632900/js/fileinput.min.js?v=1486557495:11:14179)\n. ",
    "zach2825": "I found a figured out a workaround \nIf you add .fileinput('reset') after the object is initialized.\n. ",
    "gordon-matt": "Thank you for such a quick response and for such an amazing file uploader. Keep up the good work!\n. ",
    "silentwarrior": "Fixed after plugin update.\nI was using 4.1.7, now 4.1.9\n. I was using 4.1.7, now 4.1.9 the behavior I experience is :\nSequencially added (1 by 1, drag n dropped)\nOne file : http://puu.sh/ikN9u/86a4674e5e.png\nTwo files : http://puu.sh/ikNaP/8f1e726b82.png\nThree files : http://puu.sh/ikNbS/dbf70a516b.png\nMultiple added (drag n drop multiple)\nTwo files : http://puu.sh/ikNfX/076e5096c6.png\nThree files : http://puu.sh/ikNhp/fe1f152eb0.png\nAs you can see, the experience I get with sequencial or multiple is different.\n. Hello.\nI just did a bower update and that's the version it grabbed.\nCan you update the bower deployment ?\nOn Thursday, June 11, 2015, Kartik Visweswaran notifications@github.com\nwrote:\n\nClosed #321 https://github.com/kartik-v/bootstrap-fileinput/issues/321.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/321#event-328609660\n.\n\n\nRegards\nSilentWarrior\n. Hi there,\nYou\u2019ve been invited by Joao to join the Dropbox Campus Cup! Campus Cup lets you team up with your classmates to earn up to 25 GB of free Dropbox space for two years!\nTo earn space, just invite friends and use Dropbox to share, collaborate, and get work done.\nJoin Campus Cup\nNote that you must be a student currently enrolled at a higher education institution in order to participate. Learn more about Campus Cup.3\nHappy Dropboxing!\nWork together, win together. \n\nIf you prefer not to receive invites from Dropbox, please go here4.\nDropbox, Inc., PO Box 77767, San Francisco, CA 94107\n. ",
    "londonpete1958": "Did you get this to work?\nRegards\nPete\n. ",
    "gmansata6290": "OK, No issues. I have to replace the files. That's the only solution I have.\n. ",
    "corvel": "im using this code \njs\n                if ($this.attr('data-type') === 'image') {\n                    $.extend(options, {\n                        fileTypeSettings: {\n                            image: function(vType, vName) {\n                                return (typeof vType !== 'undefined') ? vType.match('image/png|image/jpeg|image/pjpeg') : vName.match(/\\.(png|jpe?g)$/i);\n                            }\n                        },\n                        allowedFileTypes: ['image'],\n                        allowedFileExtensions: ['jpg', 'png', 'jpeg'],\n                        maxFileSize: 1000,\n                        minImageWidth: 600,\n                        minImageHeight: 400,\n                    });\nmaxFileSize is working, but minImageWidth and minImageHeight not\n. ",
    "zoell": "Ok I have temporary solved this by changing the order:\nformdata.append('file_id', i);\n        formdata.append(self.uploadFileAttr, files[i]);\n. ",
    "J-jack-K": "In my application didn't work correctly reading only ONE. Each ajax request the server return ALL the files in the repository (many user can upload files in the same time) and the new list has to replace all the previews.\n. ",
    "nekofar": "Done \ud83d\udc4d\n. ",
    "rapomon": "Thanks a lot!\n. Sorry, I have to move it to fileActionSettings.\n. Thanks. Done.\nEl vie., 14 sept. 2018 a las 16:36, Kartik Visweswaran (\nnotifications@github.com) escribi\u00f3:\n\nThanks - could you submit a minified version of the CSS as well - you can\nuse the following site to minify http://refresh-sf.com\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/pull/1297#issuecomment-421378505,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFLfNxZWyl7uluFzUuCbgeMxw4LCjbJVks5ua772gaJpZM4Wo1lw\n.\n. \n",
    "herward": "Dear Kartik,\nthanks for the info.\nI thought my Opera was up-to-date because I did all the updates.\nBut my symbolic link pointed to opera.exe, whereas launcher.exe (in the \nsame folder)\nstarted the up-to-date version... :(\nEverything is working fine.\nCheers\nHerward\nAm 12.07.2015 um 06:45 schrieb Kartik Visweswaran:\n\nCheck browser support for blob url here \nhttp://caniuse.com/#feat=bloburls... you may want to upgrade your \nold Opera version to a newer one. Version 9.8 is quite old... \ncurrently opera is crossed v30.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/kartik-v/bootstrap-fileinput/issues/347#issuecomment-120686920.\n\n\nHerward Prehn\nDipl.-Ing. Maschinenbau\nWehrbergallee 55 / 24211 Schellhorn, Germany\nfon       +49 (0)4342 / 7280 377\nmobile    +49 (0)163 / 467 9545\n. ",
    "toddaa": "My apologies.  Got my tabs mixed up and ended up putting that in the wrong repo.  Again - appologies\n. ",
    "CyanoFresh": "Sorry. I should close this pull request and create new one.\n. ",
    "jaxuk": "Hi,\nI am basically using scenario 4 with async enabled and returning the initialPreviewConfig and initialPreview on each server response. But the preview pane refreshes before all of the uploads are complete and therefore is missing some of the uploaded files. \nIf the files are all very small it works, if the files are larger or take longer to upload the issue occurs. It looks like it's not waiting for all of the uploads to complete before refreshing the preview pane. \nThe same is try of the 'filebatchuploadcomplete' event.\nI will try and debug it...\n. Further more to this, it only seems to be an issue when setting the option 'ajaxsettings', after removing the settings I made with this option it all works great!\n. ",
    "ajbeaven": "Yes, I saw that non-ajax support doesn't let you edit selected files, that's why I thought it'd be nice to implement this in spite of your push for using native features. Not only would this provide support for non-ajax editing, but you also give a little bit of older browsers support.\nUnfortunate position to take but I totally understand where you're coming from with regard to a leaner code base. Will consider a PR if my users complain too much ;) Thanks for your work on this repo, it's superb.\n. ",
    "rogelio-blanco": "Kartik, maybe it could be a good enhancement to have a property where we can set it to true and allow the replace instead of throwing the error.   Seems that this make sense when we have the requirement to upload 1 image.\n. After go back to 4.2.1 the same code is working.   Seems to me that maybe in 4.2.4 sending body parameters work different or its a bug.\nIf the functionality change please let me know how should I change my code.\n. I check the request and I don't see the parameters in the body.   I also try to add \"data\" attribute inside of \"ajaxSettings\", that way I was able to see it on the request but the server was not able to parse it.\nLet me know if you would like to see some request samples with both versions.\n. Work as a charm (4.2.5). Thanks\n. :+1: \n. Work as a charm (4.2.5). Thanks\n. Any specific date for next release\n. Could you please add a sample including extra data in the POST?\n. :) Excellent\n. ",
    "gandarez": "As workaround I did:\njs\n$(\"#id\").on('fileloaded', function() {\n        $(\".file-caption-ellipsis\").html(\"\");\n    }).on(\"filecleared\", function() {\n        $(\".file-caption-ellipsis\").html(\"...\");\n    });\n. It's not working\n\n\n. Didn't work as expected. Same error!\n. After update to latest version it has fixed.\n. ",
    "Focushift": "Some additional info\nIE11, PC in windows domain\nin Chrome preview works but...better it not worked, document displayed with 100% scale. it's possible to set another scale in preview?\n. But, files with same path and names are duplicate.\n. http://plugins.krajee.com/file-preview-icons-demo\nadd file, see the problem\n. http://plugins.krajee.com/file-preview-icons-demo\nbut its \"standard\" settings, tested on plugin demo\n. Sry ... but... now problem with text file preview frame)) 249px vs 217px height\n. Maybe for text preview better to change font size to smaller?\n. You see this error because Adobe Reader plugin cannot load. Just disable pdf preview and forget about it.\n. I receive this error when js cannot parse server response.\n. check server response with Postman or other utils. Maybe server response formatted in xml instead json.\n. ",
    "RedFoxy": "Just tried with last online on github but nothing, it doesn't goes\n. ",
    "rajivseelam": "I think \"Ability to append files to already selected list\" is not possible like you mentioned in the \"Modes Compared\" table. Any plans to make it work on Form submission?\n. Sorry for posting a help question here. Closing this.\n. ",
    "andrey-bahrachev": "Ah, sorry, I just missed that one, my bad. Made it work fine now. Thanks a lot Kartik, much appreciated! Maybe it'll help someone else:)\n. ",
    "russ-ab": "I need the file become invalid, the fileimageloaded event does not show anything about the warning of dimensions.\n. Understood.\n``` javascript\n$('input').on('fileimageloaded', function (event, previewId) {\n    var msg = '';\n    var img = $('#' + previewId).find('img')[0];\n    if (img.naturalWidth > maxImageWidth) {\n             msg += 'Invalid Width';\n    }\nif (img.naturalHeight > maxImageHeight) {\n        msg += 'Invalid Height';\n}\n\nconsole.log(msg);\n\n}\n```\nThanks!\n. ",
    "andrewschmidt-a": "I did read your docs however I believe they are Incomplete.\nHow do you suggest that I check if there are files without uploading? I do not believe you have that capability yet.\n. Excuse my novice experience with Git Hub but this is my code\nThis allows me to do $('#yourID').fileinput('getFileStack') to return the array of files in the queue\n```\n//FileInput plugin definition\n    $.fn.fileinput = function (option) {\n    if (!hasFileAPISupport() && !isIE(9)) {\n        return;\n    }\n\n    var args = Array.apply(null, arguments);\n    args.shift();\n    var retVals = []; //-as\n\n    this.each(function () {\n        var $this = $(this), data = $this.data('fileinput'), defaults,\n            options = typeof option === 'object' && option,\n            lang = options.language || $this.data('language') || 'en';\n\n        if (!data) {\n            defaults = $.extend({}, $.fn.fileinput.defaults);\n            if (lang !== 'en' && !isEmpty($.fn.fileinputLocales[lang])) {\n                defaults = $.extend(defaults, $.fn.fileinputLocales[lang]);\n            }\n            data = new FileInput(this, $.extend(defaults, options, $this.data()));\n            $this.data('fileinput', data);\n        }\n\n        if (typeof option === 'string') {\n            //console.log(data[option].apply(data, args));\n            retVals.push(data[option].apply(data, args)); // changed to push to array -as\n        }\n    });\n    //this whole retVal logic was changed up  -as\n    //will return this when there is no return vals like before\n    if(retVals.length == 1){\n        return retVals[0];\n    }else if(retVals.length == 0){\n        return this;\n    }else{\n        return retVals;\n    }\n};\n\n```\n. I still don't think you are following me.\nI want to get the file stack regardless to how many they insert. \nIn my case they can insert however many they want I just want to know the amount on the client side before. (e.g. I want to pop up a confirm box \"do you want to upload x files\" where x is the number)\nI understand if you don't want to open the file stack up to be accessed (like in my code I gave you) but I think you ought to, as I know it is useful for me and I am sure for others too.\n. Right,... I have looked through those I wanted it on upload but I could find a way to stop the upload if they didn't confirm...\nSo you just dont want to allow this or why not allow for a getFilestack method?\n. Sure but that event isnt what I needed. From what I understand file batchselected is when they are added or dragged&dropped. I would need a preupload sort of event.\nI just thought it was strange that you essentially allowed me to execute any function in your function list but I couldn't get the return values. You also already have a getFileStack function. So I just manipulated the fileinput.js to allow it to return (see my code)\nSo I don't see why not have it return values. It is not as if you were trying to hide something from the user because the source is available anyhow\nSo I will just keep my changed version here so that I can directly call functions and I guess you'll just not agree with me. \n. My bad, sorry I thought I had created a pull request aswell as included my code inline\n. ",
    "mad4hit": "Thanks!\n. I've downloaded the last relase (4.2.6) from bower, my site refer the right plugin version.\nthis is the script:\nhtml:\nhtml\n<div class=\"col-md-8\">\n        <input id=\"media-items-upload\" type=\"file\" multiple class=\"file-loading\">\n        <p class=\"Note\">\n            <b>Allowed Extensions</b>:\n        </p>\n    </div>\njs:\njavascript:\n  $(\"#media-items-upload\").fileinput({\n            uploadUrl: \"/Backload/UploadHandler\", // server upload action\n            uploadAsync: true,\n            maxFileCount: 10,\n            maxFileSize: 1000000,//da portare nei settings dell'applicazione web\n            //allowedFileTypes: ['image', 'video', 'audio'],\n            allowedFileExtensions: [\"jpg\", \"png\", \"gif\"],\n            //allowedPreviewTypes:false,\n            uploadExtraData: function () {  // callback example\n                var hiddenFolderStructure = $(\"#hiddenFolderStructure\");\n                var out = { objectContext: '', uploadContext: hiddenFolderStructure.val() };\n                return out;\n            }\n        });\nbut the problem is still here....\nthanks for helping!\n. ",
    "zhangyaoxing": "Oh, besides I didn't find a way to pass extra data, any idea how I can do that?\n. I tried it this way:\n$(\"#input\").on('filepreajax', function(event) {\n    // some verifications\n    return {\n        message: \"there is an error!\",\n        data: {}\n    };\n}).on('filecustomerror', function(event, params) {\n    // show error message to user\n});\nSo the uploading seems to be stopped. however, the control is now disabled as show below:\n\nI cannot upload anything now. what did I do wrong?\n. Hmm, just tried latest code from master, it shows me the version 4.2.6, is that correct version I'm supposed to use? The issue remains the same however. Any idea what I should do to trouble shoot the issue?\n. the 1st problem is fixed after merging from latest master. the 2nd persists however.\n. yes I do have uploadAsync set to true. so keep everything else unchanged, if I set showPreview to true, it's fired. otherwise it's not.\n. Thanks. Seems I can use filebatchuploaded as a workaround now.\n. ",
    "PeterisKelle": "zhangyaoxing, I faced the same problem, but I found a simple solution which works in my case:\nJust set \"showPreview\" option to \"true\", because if it is set to \"false\" then the upload button stays disabled. Bug?\n. ",
    "jselamy": "Closed it because i had a problem with the code formatter therefore alot of line were marked as changed\n. Ok it. But where at my end in the JS code ? \nMaybe i'm not getting something right.\nThx for the reply\n. ",
    "cazacugmihai": "Thanks! It works now. :)\n. Yes, but that means that all files (~ 20) are sent in a batch and this is not what I want.. I have just seen that there is a maxFileCount option that can be used also in this mode. I missed that. I though that it was designed for async only.. Yes, you have right. Thank you!. ",
    "sosojni": "I have same problem when i set uploadAsync: false (just like florinmtsc)\nkartik-v, demo you linked is async: true and me and florinmtsc have both problem in sync mode\nmy view:\n``` php\n<?php\nuse kartik\\widgets\\FileInput;\nuse yii\\helpers\\Url;\necho FileInput::widget([\n  'name' => 'files[]',\n  'options' => ['multiple' => true],\n  'pluginOptions' => [\n  'uploadUrl' => Url::to(['/order/upload']),\n  'uploadAsync' => false,\n  ]\n]); \n```\nMy controller:\nphp\npublic function actionUpload()\n    {\n        return json_encode(['errors' => 'test', 'errorkeys' => [0]]);\n    }\nam i returning something wrong? It only happens in synchronous mode and only if i press upload button that uploads whole batch, if i press upload on each file preview it's working fine.\n. Ok i got my code up and running w/o errors after i changed:\n1) my Controller to (basicly fixing typo so i get error message trough):\nreturn json_encode(['error' => 'test', 'errorkeys' => [0]]);\n2) fileinput.js:\n from: keys = isEmpty(data) || isEmpty(data.errorkeys) ? [] : data.errorkeys;\nto: var keys = isEmpty(data) || isEmpty(data.errorkeys) ? [] : data.errorkeys;\nAs i'm in great hurry, i dont have time to see if this breaks something somewhere else, but it does fix this problem and i get functionality i need.\n. ",
    "horkenw": "ok! done\n. ",
    "xplicit": "When I changed isIE function to correct one, all is working as expected \n. some more info about conditional comments in IE10\nhttp://stackoverflow.com/a/9900331/1656467\n. ",
    "juliovedovatto": "I'm able to made using this code:\njavascript\nelement.on('fileloaded', function(){\n    if ($(this).closest('.file-input').find('.file-preview-frame').size() > 1)\n        $(this).closest('.file-input').find('.file-preview-frame:eq(0) .kv-file-remove').click();\n});\nNot the most elegant way, but it works for what I want to accomplish :)\n. ",
    "ahkmunna": "I'm having the same issue. Didn't able to attach the newly saved product is with the ajax file upload. Can you help?. ",
    "azizkh": "Please let me know if it's a bug or if it's me who is doing something wrong. \u0421\u043f\u0430\u0441\u0438\u0431\u043e\n. I did check my php code and everything looks correct.\nThis is my php code:\nphp\n$result['success'] = true;\n$result['initialPreview'] = ['<img src=/images/image.jpg class=\"file-preview-image\" >'];\n$result['initialPreviewConfig'] = [['key' => 10, 'url' => \\yii\\helpers\\Url::to('site/remove')]];\necho json_encode($result);\nThis is what I get in console both when I do single upload(click upload icon within the frame) and batch upload. But I get an error when uploading files by clicking upload button near browse button.\njs\n{\"success\":true,\"initialPreview\":[\"<img src=\\/images\\/desert.jpg class=\\\"file-preview-image\\\" >\"],\"initialPreviewConfig\":[{\"key\":10,\"url\":\"site\\/remove\"}]}\nPlease let me know, If I'm wrong. I'm using your plugin for one of my projects, so quick reply would be appreciated. Thanks\n. But this is not solution for the problem, since data.config[i] will be updated every time for new upload, which is not correct\n. I know initialPreviewConfig  is an array but data.config is not. I would not bother you if everything worked fine\n. Ok, thanks\n. previewCache.add is working ok, but previewCache.set is not (batch upload)\n. ",
    "temirfe": "I have the same problem. @azizkh were you able to solve it?. ",
    "yourchoice": "yes, i resolved in another way, i added ... ['frameAttr']['data-id'] = $id; then in sortable jquery I build post_param using data('id')\n. Yes, same problem on me.... maybe need set a corelations ...\n. for ex. auto-upload 2 files async, and 2 responses for xhr:\n``` js\n{\n\"initialPreview\":[\"\"],\n\"initialPreviewConfig\":[{\"caption\":\"14406025264885-5lmk4qqfnk7q88ihal270bsut2.jpg\",\"width\":\"160px\",\"url\":\"\\/index.php?obj=myaccount_recipe&action=fileinput_delete\",\"extra\":{\"file_name\":\"14406025264885-5lmk4qqfnk7q88ihal270bsut2.jpg\"},\"key\":\"thumb-14406025264885-5lmk4qqfnk7q88ihal270bsut2.jpg\"}],\"initialPreviewThumbTags\":[{\"{PHOTO_TMP}\":\"14406025264885-5lmk4qqfnk7q88ihal270bsut2.jpg\"}],\n\"append\":true\n}\n{\n\"initialPreview\":[\"\"],\n\"initialPreviewConfig\":[{\"caption\":\"14406025259417-5lmk4qqfnk7q88ihal270bsut2.jpg\",\"width\":\"160px\",\"url\":\"\\/index.php?obj=myaccount_recipe&action=fileinput_delete\",\"extra\":{\"file_name\":\"14406025259417-5lmk4qqfnk7q88ihal270bsut2.jpg\"},\"key\":\"thumb-14406025259417-5lmk4qqfnk7q88ihal270bsut2.jpg\"}],\"initialPreviewThumbTags\":[{\"{PHOTO_TMP}\":\"14406025259417-5lmk4qqfnk7q88ihal270bsut2.jpg\"}],\n\"append\":true\n}\n```\nWhat is wrong here?\n. I downloaded now last dev master version, but problem still persists.\nYes, for async. the plugin fires separately ajax requests, but before \"$(this).fileinput('upload');\", the plugin preview the image selected. If I select 2 images: img1 and img2, these are display in order img1 and img2, but when ajax upload is done, the previewed images are replaced by uploaded files not in correct order.\nProblem is that here uploaded images doesn't replace same image as initial preview. Seems that depeneds by file size (what ajax request is done firstly).\nSo if img2 is smaller that  img1, this will be loaded first, but instead to replace initial img2, this replace img1...\n. some news regarding file position, async. uploads ?\n. Yes, just I suggested 2 events: imageLoad and imagesLoaded... \nRegarding case when images are from DB, I think, another good thing can be that images to not be loaded via js, like now (my case smarty foreach....):\n\n\n\nvar initialPreview = [], initialPreviewConfig = [];\n{foreach $form_act.photos as $recipe_photo_id=&gt;$recipe_photo_file}\n      initialPreview.push('<img src=\"{$smarty.const.IMGRW_URL}recipe/sm-{$recipe_photo_file}\" border=\"0\" alt=\"\">');\n       initialPreviewConfig.push({ url: null, key: {$recipe_photo_id}, extra: { recipe_photo_id: {$recipe_photo_id}, recipe_id: {$form_act.recipe_id|default:'null'} }, frameAttr: { 'data-id' : {$recipe_photo_id} } });                 <br />\n{/foreach}<br />\n\n<<\nI think nicer can be that DOM of images preview to be build directly in html, and the plugin to detect if DOM already exists. If yes, use it, else build it.\n\n\nYour plugin can be the best of all file upload plugins that exists.\nAnother a few suggestion for future:\n- a component included for sort...\n- a component included for rotate...\n- preview  template with same size for images (thumbs in equal boxes) responsive (of course this can be build and now be who want)\n. good, 10x\n. ",
    "superroca": "Hello yourchoice,\nCan you explain more what did yoy do to resolve it? \nIf you can paste your code I would appreciate. I need reorder the thumbnails.\nThank you very much!\n. ",
    "dersonsena": "I couldn't sort the upload files. I'm with the basic configurations:\nphp\n'name' => 'attachment_48[]',\n'options'=>[\n    'multiple' => true,\n    'accept' => 'image/*'\n],\n'pluginEvents' => [\n    'fileselect' => 'function(event, numFiles, label) { console.log(numFiles) }'\n],\n'pluginOptions' => [\n    'uploadUrl' => Url::to(['/site/file-upload']),\n    'language' => 'pt-BR',\n    'previewFileType' => 'image',\n    'uploadExtraData' => [...],\n    'showZoom' => false,\n    'resizeImage' => true,\n    'maxImageWidth' => 1024,\n    'maxImageHeight' => 768,\n    'resizePreference' => 'width',\n    'browseLabel' => '',\n    'removeLabel' => '',\n    'uploadLabel' => 'Enviar Todas',\n    'mainClass' => 'input-group-lg',\n    'removeClass' => 'btn btn-danger',\n]\nAm I doing anything wrong ?. ",
    "csthink": "@kartik-v After add image I want re-arrange the preview image ,  I have tried to use  sortable plugin ,I can re-arrange the preview image ,but when I submit , the server receive old sort image not new sort , Could you tell me how to use sortable plugin before uploaded . Thanks!. ",
    "lewis-spears": "An example I can see being useful would be that I click \"Upload\" (the files now exist on my server / database), if the user doesn't want the image anymore, I want to remove the reference from my server / database, not just from the frontend view.\nI've had to put a hack in place inside the 'filesuccessremove' event and split the new id to get the original index in order to delete the file.. Could you provide an example on how I could do what you've suggested please?. ",
    "ntenisOT": "Yes that sounds a reasonable solution. Disable drag and drop for EDGE users.\n. ",
    "l7777777b": "currently i must allow multiple files upload because of some requirements and same thing happening.\nbut i think i found the problem, i'm using your autoupload method. my upload flow is, user select file/s to upload and free to delete before saving the document, all those files stored in temporary folder and at that moment the delete button also delete files from temporary folder too. after the user saved the document, all the files moved to upload folder, and at the same screen i show the saved file right away using ajax but in another div called upload-div using your css (copied your html tag and css from thumbnail preview) and so i must clear the fileinput which i did by using refresh. but after that the problem happened, i cant use the fileinput properly if i dont delete all the uploaded files. because if i delete all the uploaded files, the preview on my upload-div will be cleared too, hence your css i used for preview will be gone and the fileinput works again.\nfor example there will be such element for previewing uploaded files in my page after saving document\n<div id='upload-div'>\n  <div class=\"file-preview-thumbnails\">\n    <div class=\"file-preview-frame\">\n      *file1 with delete button\n    </div>\n    <div class=\"file-preview-frame\">\n      *file2 with delete button\n    </div>\n  </div>\n</div>\nand the file input wont work properly just like my original post. (files uploaded but the thumbnail hang at uploading state with error on console log)\nbut if i delete all of the files so what left is just this\n<div id='upload-div'>\n</div>\nfileinput works good.\n. ",
    "tstivers1990": "Just wanted to say you're awesome. Think that's the fastest I've seen a bug fixed after being reported. In an open source project at that!\n. ",
    "radmela": "what if it is a single file upload and maxfilecount is 1 then the upload button should be disabled. when it is not an ajax upload it is already as i mention. \n. if i call disable user will not be able to select a new file right? it would not be convenient.\n. ",
    "evilsempire": "I found the solution how to disabled the upload button:\nMy problem was to make sure user input the file name for batch process..To do that I wanted the user to force write the name of the file \nHere what I am trying to do is when the drag or drop performs  I am calling this javascript:\n`document.getElementById('file-1').onchange = function() {\n        if(!$(\"#name\").val()){\n            //alert(\"Before uploading please type the name of files\");\n            document.getElementById(\"responseMsg\").innerHTML = '<p id=\"responseMsg\" class=\"text-red\">Before uploading please type the title of files</p>';\n            $('input[type=text]').addClass('border-red');\n            document.getElementById('file-1').value = \"\";\n            $('.fileinput-upload-button').attr('disabled', true);\n        }\n\n};`\nAnd for extra security I am using this code:\n` document.getElementById('name').onkeyup = function(){\n        if($(\"#name\").val()!== \"\"){\n            $('.fileinput-upload-button').attr('disabled', false);\n            document.getElementById(\"responseMsg\").innerHTML = '';\n            $('input[type=text]').removeClass('border-red');\n        }else{\n            $('.fileinput-upload-button').attr('disabled', true);\n            document.getElementById(\"responseMsg\").innerHTML = '<p id=\"responseMsg\" class=\"text-red\">Before uploading please type the title of files</p>';\n            $('input[type=text]').addClass('border-red');\n        }\n    };`.\n",
    "bluescreen": "Thanks i found my issue. I had to set the option key for language. This was working without before.\nMaybe you should highlight that in your docs.\n. ",
    "ImanMh": "if you mean fileinput_locale_fa.js, it's loaded as you see. Are you talking about an other file?\n. It's funny that every 10 times I refresh the page, I get one time of locale file working correctly. It might be an issue with defining dependencies.\n. You could add the same comment below my previous issue but you decided to ignore it until I created a new one. I consider issues  such as lack of being AMD friendly an issue of plugin not a problem of end user so that's why I opened an issue instead of asking in stackoverflow. Anyway different opinions. \n. ",
    "oculushut": "OK - found the answer you provided here https://github.com/kartik-v/bootstrap-fileinput/pull/342\n=> So you need to create a callback which will be called in filrepreajax.\nThanks!\n. Sure, here's an example of how I am using it:\n$(\"#objFileChooser\").fileinput({\n          allowedFileExtensions:[\"obj\"],\n          showPreview: false,\n          uploadAsync: false,\n          uploadUrl: \"http:/abc.com/webserviceName\",\n          uploadExtraData: function (previewId, index) {\n            var info = {\"tags\": \"somestuff\"};\n            return info;\n          }\n        });\nThe key bit is the function being assigned to \"uploadExtraData\".  What you will find is that the stuff in \"info\" is in the request to the web service you are uploading to.\nI have not looked at the code in this project, but it looks like the function you pass it is called and whatever you return in the function is uploaded to the server at the same time as the file you are uploading.\nWhat I did was print out all the content that my web service received and just searched for the \"somestuff\" string to work out where this data ended up.\nMake more sense?\nWas not immediately obvious to me either...\nIn my case I would find the following being sent to the server:\n{\"tags\": \"somestuff\"}\n. Agree - I had to remind myself by looking through my own code again after you asked the question!  I guess it's the nature of open source.  I should be less lazy and paste that example into the documentation and do a pull request!  Maybe tomorrow.  Getting bit late in evening where I am at the moment...\n. Hello - just updated README file in pull #466.  I think that actually seeing an example of the assignment of the callback function would have clarified things greatly for me.\najax example # 7 would have clarified things for me if I had read it.\nI am also using it to upload dynamic data and I can see why this would be the main use case so I have added this info too in the README.\nAwesome project by the way.  Thank you for sharing it.  Saved me a bunch of time.\n. ",
    "PatrickDotStar": "Can you give a full example please? I still don't get it to work.\n. Awesome thank you so much :) It works but it's kinda confusing.\n. ",
    "msingh025": "we can use like this \ud83d\udc4d \n$(\"#file-1\").fileinput({\nuploadUrl: url allowedFileExtensions : ['wav'],\noverwriteInitial: false,\nmaxFileSize: 3000,\nmaxFilesNum: 5,\nuploadExtraData: function(previewId, index){\nlet formValue = $('#new_message').serializeArray();\nlet tempData = {};\nformValue.forEach(function(v, i){\nlet name = v.name+'_'+(i+1);\ntempData[name] = v.value;\n});\nconsole.log(tempData)\nreturn tempData;\n},\nslugCallback: function(filename) {\nreturn filename.replace('(', '_').replace(']', '_');\n}\n});\n    . ",
    "robross0606": "Looks like fileExt is null.  Aren't you allowed to use \"data-allowed-file-extensions\"?\n<form:input class=\"file\" type=\"file\" name=\"uploadedFiles[1]\" path=\"uploadedFiles\" data-show-preview=\"false\" data-show-upload=\"false\" data-allowed-file-extensions=\"[csv]\" data-remove-label=\"&nbsp;\" />\n. I already tried that.  Same problem.  It works okay if I use the API directly but if I use the \u201cdata-*\u201d tag it doesn\u2019t work.\nFrom: Kartik Visweswaran [mailto:notifications@github.com] \nSent: Saturday, September 26, 2015 12:32 PM\nTo: kartik-v/bootstrap-fileinput\nCc: robross0606\nSubject: Re: [bootstrap-fileinput] Getting errors about fileExt.join() not being a function. (#456)\nDo not see an issue in file extension validation.\nHowever, you seem to be using an outdated version of the plugin (from the code line number you provided). Would recommend you to upgrade and confirm.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/kartik-v/bootstrap-fileinput/issues/456#issuecomment-143468447 .  https://github.com/notifications/beacon/AC0_28_hh_hvQ2cRdzcX29avm7kAAVsoks5o1r_sgaJpZM4GESzp.gif \n. It's bad form to close an issue without confirming a fix. Please re-open since your suggestion makes zero difference on the problem. I tried it before you even suggested it. This is not a fix.\n. Okay, let's make this nice and clear.  Here is my current example which does not work:\n<form:input class=\"file\" type=\"file\" name=\"uploadedFiles[2]\" path=\"uploadedFiles\" data-show-preview=\"false\" data-show-upload=\"false\" data-allowed-file-extensions='[\"csv\"]' data-remove-label=\"&nbsp;\" />\nIt makes no difference whether the quotes are one way or the other, or even if there are quotes at all.  The contents of \"data-allowed-file-extensions\" never makes it into the fileExt variable in fileInput.js.  If I use the API method of specifying the allowedFileExtensions, it works just fine.  Regardless of flipping quotes, BTW.\n. Chrome Windows 7 64-bit\n. Do you see an issue now?\n\n. Here's another example:\n\n. What you just described is not responsive design.\nLook at the overflow in the second provided example.  It is wrapping.  Your own example breaks responsive design.\nDo what you want with this information.  I can tell you're not interested in fixing the problem.  Instead you're being defensive.  I will probably just switch to a different solution entirely because this is a waste of my time.\n. ",
    "varya2": "It was not working for me too. but I did\n<input id=\"input_7\" name=\"input7\"\n                           type=\"file\" class=\"file\"\n                           data-allowed-file-extensions='[&quot;png&quot;, &quot;jpeg&quot;]'/>\nThanks Kartik :-). ",
    "TNChalise": "Thanks @kartik-v for the link. It seems  I have miss configured my server response. It should be something like this:\n\n. ",
    "hikmat30ce": "Hi I am facing same issue, can you share the php code how to set the response?\n. ",
    "jianhong-li": "I also encountered this problem!\nwhen i use this plugin simply without requirejs .everything is ok .\nbut when i use this with requirejs,it looks like normal,the initialize code seems to work normally. which has no error in the console.but when i upload a file via it.\nthis plugin does not post the file data to my server using the url which i configed in the initial parameter ,it just post the data to current page url.\nthe specified js library  as follow:\nRequireJS 2.1.15\njQuery JavaScript Library v1.11.2\nbootstrap-fileinput v4.3.5\nthe file loading detail is:\nloading css file with  traditional method \nthe jquery , bootstrp  and fileinput js loaded by the requirejs.\n. i find it works ok with low versions requirejs (1.0.8) \nif your project can use low version requirejs.    you can try this solution\n. ",
    "DigitalFusionTom": "Hello?  Anyone? \nAm I missing files or something?  I downloaded the latest version, and the CSS classes referenced in fileinput.js are not defined in fileinput.css.  Where are the CSS classes that start with \"kv-\" defined?  Are these js-only classes?\n. I checked, they are the JS classes, Im used to using IDs for this, not classes.  I had to add  style=\"white-space:normal !important\" to the input-group-btn class in order to see the errors.  Im guessing with all the plugins we have, there is a css conflict somewhere\n. ",
    "raydawg2000": "Thanks, this is what I used to get it working.  Is this what you were talking about or is there a better way?\n```\nvar uploadID = \"\";\n$(document).ready(function() {\n    $(\"input[id^='file_']\").fileinput({\n        uploadAsync: true,\n        uploadUrl: \"<%= request.getContextPath() %>/upload.do\",\n        uploadExtraData: function() {\n                return uploadID;\n            }\n        });\n$(\"input[id^='file_']\").on('filepreajax', function(event, previewId, index) {\n    uploadID = {\"id\": $(this).attr(\"id\")};\n});\n\n});\n```\n. Great got it thanks\n. ",
    "LinkOut": "Fixed, my server was not responding with a valid json.\nThanks\n. Actually an empty response fires this, don't know why it didn't worked before but ok.\nhow to disable browse button on \"filebatchuploadcomplete\"?\n. ",
    "andrewblake1": "Key point I guess is that it validates perfectly while manipulating files i.e. adding and deleting files within the widgets area, it just doesn't appear to take into account the init file count on submit - which I think is probably just a small bug.\nYip, am aware of those settings and in my blueimp version the model rules is naturally how I controlled both client and server validation (with FileValidator, skipOnEmpty false when required) - though to work with the update situation in blue imp I had extended FileValidator, and written client code to deal with maintaining correct files counts and implementing minFiles.\nI am hoping to keep my hacks to minimum and looks like your plugin only lacks from the tiny issue on submit but nearly client validates min and max perfectly. Even having a minFilesCount option was surprising and impressive!\nBare in mind for the future the possibility of storing an init files deleted list that gets sent to server with post (hidden inputs) as alternative to request being activated on click of delete. This isn't really related to this issue though and I have it easily dealt with using your events and a dummy delete action - yet again this extension is impressive to such easily provide the tools to do this.\nLess relevant background if further use case info needed\nI allow businesses to define their own forms and fields within database. Am building models for these fields dynamically and file is just one of the field types. With each field type they can set up rules in a simplistic manner. Min and Max files along with allowed file types is logical for file. I add the rules dynamically. It all works fine in my blue imp version which I won't go back to now as nearly there with your awesome extension and I know that I can resolve this issue in multiple ways anyway - just looking for the path of least resistance - i.e. trying to get someone else to fix it :)\nAt the moment I can visualise use cases for 0, 1 or many file attributes per model (i.e. passport application form has many file attributes - photos, birth cert etc). I can see use cases for 0, 1, or n files per attribute. I can't imagine yet a use case for minFiles 3, maxFiles 4 - however I would bet my bottom dollar that some businesses will wan't to do this - based on simulating something they currently do manually. I.e. 7 photos exactly or min 3 photos maximum 6 photos of some object. Because this system is SAAS, I am building as flexibly as I can.\nAm guessing once I get past this I may end up raising 1 or 2 minor things more along the longs of an overall ajax submit option (as opposed to per attribute) when many files attributes combine with other form data. Currently I have cheated and achieved ajax submit in form submit mode with pjax (pjax target container a hidden div and processing the ajax response in pjax complete similarly to how used to in my blueimp implementation) however this gives no access to progress updates - and ideally would like to use drag and drop. Have the progress in my blueimp but not the d & d. Irrelevant for now.\n. If you check back to the settings at the top you will see that I do have validateInitialCount as true - which works while manipulating files in the preview area. I would expect this to work on submit also - am I missing something? Sorry if my first post was long winded and perhaps made this unclear. Am often not the best at explaining things, and I certainly do have a tendency to overlook the obvious.\nAfter midnight here, will take a closer look at the delete data manipulation tomorrow. To be honest, the way I have the delete data already is pretty simple and works so it was really only a suggestion for future consideration. Pretty much the same as I was doing blueimps i.e. maintaining a list of files to be deleted and sending with post - not sure if there can be a simpler way - all goes in a single request. If the comment above makes my code cleaner and avoids the dummy actionDelete then I will implement it.\nYour events and general architecture have made this far simpler than my blue imp implementation and it is certainly very flexible and changeable.\nThanks again for your time with this.\n. Close if you wish (your right anyway I know). I have coded around this now. I guess it is all fine when operating within the widgets area i.e. clicking the file inputs upload or delete - which will do for most use cases. Its just when you start to use with other form data and clicking the submit button it hits a few limitations - which I must have overlooked initially as is documented in http://plugins.krajee.com/file-count-validation-demo#min-ajax\nI do understand that this is a plugin and is made to work independently from yii.validation.js, and yii validation for files by default doesn't even have the minFiles option you are providing here (personally I find required and skipOnEmpty a little obscure with file validation and would prefer just minFiles and maxFiles - null if not limited). \nIf of any use to anyone else for this situation, my solution was:\n\ndisable yii's client validation and rely on this plugins for file attributes\nrun in ajax mode (dummy url) which stops this plugins validation from firing on submit so the above discussed issue of not taking into account init preview file count doesn't come into play\nhide the upload button as I was after single synchronous submit\nperform my own ajax submit using FormData (this also passes thru my deleted files in the manner I indicated in the link to the issue above you provided)\nextended FileValidator to deal with minFiles so that I could double check everything ok re file numbers (modified to take into account existing, deleted, and new in the attribute)\ndealt with the response back in client and set kv-fileinput-error div with errors from server which reports back if file num or anything else is wrong.\nas of yet I haven't added any special client validation to my extended FileValidator as I think this plugin is doing it well and only the rare occasion when the remove button clears that this would be needed but would leave client validation duplicated the rest of the time (this plugin and yii.validation performing the same checks). If I was to add client validation for this I would probably just count the files visible in preview area and validate against minFiles and maxFiles.\n\nThe plugin is awesome - I wish markdown had a 2 thumbs up symbol.\n. Cheers for the heads up. I had wondered the details of that warning in the doc - I was wondering what it was about and hoped it wouldn't be too much related to browser inconsistencies. I will run some tests later and try and figure this one out.\nPerhaps I can maintain a hidden field carrying removing files so that this gets posted on submit and gives me a list of file names within $_FILES to ignore perhaps? An obvious thing off hand to watch out for would be a file added, removed and added etc. Pretty much doing this already with deleted init preview (existing files).\nSorry, still haven't looked thru your plugin code as trying to work around things as opposed to forking and altering.\nI may alter this comment later after investigating.\n. You are correct, every time a file is added or removed from the file input it wipes the FileList. I seem to be around this now, however there were a couple of things that could be a little easier perhaps:\n1. Had to turn off plugins click event on the delete button to fire my own handler as I can't find an event for delete/cancel of new files in the preview area (only the init ones).\n2. Retrieved the filename as best I could from title attribute however this seems to have undergone some replacement - perhaps the slug callback? E.g. logo (2).png => log 2.png which breaks comparison when deleting/removing. Any chance you could point me in direction of the filename transformation - have only looked for a couple of minutes - slug callback perhaps?\nI guess not much point posting the code, its fairly simple - basically on submit loop thru each file input, read its data-filestack, put these into FormData object and do ajax.\nMaintaining filestack as data attribute on file input and append on fileloaded event, had to take over click function of delete button to remove from stack.\nIs there anything you are aware of that could cause difficulty with this approach?\nWould love to see more of this in the plugin but perhaps it is a rare use case.\n. Just realized will probably somehow need to keep the click event on the delete button in order to activate it after my code to keep track of file count for validation.\n. Thats a full circle i.e. first thing I tried before submit mode :) When I previously tested that, my issue became the additional file inputs - use case in https://github.com/kartik-v/bootstrap-fileinput/issues/471#issuecomment-148837199.\nThe below simplified approach appears to be working.\non submit:\n$fileInputs.each(function() {\n    var $input = $(this),\n        attrib = $input.attr('name').replace(/[\\[\\]']+/g, ''),\n        i = 0;\n    $.each($input.data('fileinput').filestack, function() {\n        formData.append(attrib + '[' + i++ + ']', this);\n    });\n});\nFor me this is resolved (limited testing) - again though great if the plugin had this ability - deal with multiple file inputs in ajax mode (not just multiple files single input). Perhaps limited use cases though.\n. Hi Kartik\nJust in case you are monitoring emails and not looking at the comment - thought I would mention that I just updated the last comment.\nLooked into your code, found I could access the plugins filestack directly, seems pretty simple now.\nCan you see any issues with this? Is it really that simple, or am I missing something?\n. @RedFoxy \nThere is a way to get list of files - however you pass the info you want (I use key within initialpreviewConfig). Note I wasn't intending posting any of this as real, solution, I too had noticed the same but have solved (until find a way a breaks anyway) with the event handlers. Similarly I think though would be great if there was an option to achieve your suggestion without this. Pretty sure @kartik-v doesn't like hacky solutions like this being needed so I am sure there will be a better solution offered at some stage :)\nAssuming you are doing this within an event \nfunction filecleared(event) {\n    var $this = $(event.currentTarget);\n    var fileinput = $this.data('krajee-fileinput');\n    if (fileinput = window[fileinput]) {\n        if (fileinput.initialPreviewConfig.length) {\n            // add hidden delete records for all in the initial preview\n            $.each(fileinput.initialPreviewConfig, function() {\n                filedeleted(event, this.key);\n            });\n        }\n    }\n}\nnote that filedeleted is my handler for delete button hit, point really is that you can access the initPreviewConfig and loop to get list of files - however you have used initialPreviewConfig i.e. I use key for filename you, might use initialPreviewConfig.extra.\nIncidentally this bit should solve the last bit of your issue i.e. when the init preview files are removed from the preview area - triggered by an upload:\n/**\n * Event handler called when a file is loaded into the preview area.\n *\n * This should only be enabled when autoreplace is true hence causing preview files that are automatically replaced\n * to be added to our list of hidden elements indicating deletes.\n *\n * @param event\n */\nfunction fileloaded(event) {\n    filecleared(event);\n}\nand below is my filedeleted event handler though you would need to make use of uploadExtraData (as in ajax mode), when sending (I am currently still in form submit mode for now). Currently I add hidden element carrying the filename in the value. You could potentially use this and then extract the files from the hidden elements in filepreajax or just keep the files to be deleted in a variable perhaps? I am not sure yet how robust this bit is - scanning for \"init_0\" was a guess without looking at the source.\n```\n/*\n * Event handler for when the delete file operation is finished here in client. This is a toggler, hence if the file\n * is already deleted, then assumes we are undeleting i.e. removing the hidden element indicating a file delete\n * @param event\n * @param key   Passed in as the key from getExistingFiles in FileActiveRecordTrait, this is the file name\n /\nfunction filedeleted(event, key) {\n    var name = event.currentTarget.name.replace(/[[]']+/g,''),\n        hiddenDelete = $('[name=\"delete[' + name + '][]\"]');\n// if the first initial image is showing\nif ($('[data-file_index=\"init_0\"]').length) {\n    // remove hidden delete input\n    hiddenDelete.remove();\n} else {\n    // add hidden element to indicate delete (only if it doesn't already exist)\n    if (hiddenDelete.length == 0) {\n        $('<input>').attr({\n            type: 'hidden',\n            value: key,\n            // name is set to the attribute name within the model\n            name: 'delete[' + name + '][]'\n        }).insertAfter(event.currentTarget);\n    }\n}\n\n}\n```\nThis isn't well tested yet but works for me for now. Hope it helps in the interim.\n. @kalpeshparakh Haven't been doing coding around this widget for a while so @kartik-v will correct if wrong, but if it helps, pretty sure by memory that mine is uploading via ajax, multiple files in a single call like you want. Suspect kartik will steer you towards a close reading of the docs for the plugin and the options.\nWithout looking back thru the docs myself to refresh, and looking at my own settings am guessing you should first look into the uploadAsync option and ensure you have it set to false - NB it is true by default which would cause what you have described.\nCan't 100% recall but I seem to remember do a bit more coding around this to get the exact smooth operation that I needed to work consistently with my exiting code, but it all does work and is an awesome plugin.\n. Not my place to say, and not sure about submit mode, but this might work for you in ajax mode\n$input.data('fileinput').filestack.length\nwhere $input is the jquery file input element \n. ",
    "reoxb": "This helpme! thanks \ud83d\udc4d . ",
    "kalpeshparakh": "Hi Kartik,\nThanks for such a wonderful plugin...\nI am trying to upload a list of documents, using your plugin. But the only issue with it is that the plugin gives multiple calls to my server code rather than sending the list of files in one go.\ni.e. suppose i am uploading 5 files at a time and click on upload, your javascript gives ajax call to my server code 5 times. whereas i need a way so that i can send all the 5 files at once to my server function. so that the server function is called only once. the server function is accepting a list of files rather than a single file.\nPlease comment.\n. Thanks alot @kartik-v and @andrewblake1 for a quick response,  i will try this. \n. ",
    "meventi-stephan": "I am using fileinput version 4.2.8 at the moment\n. I'm waiting for the event \"filebatchuploadcomplete\" to recognize that all file uploads are finished. This works fine. But i hoped that in parameter \"files\" all uploaded files are in it (with file paths information). How can i achieve this?\n. The parameter \"files\" is at the moment empty.\n. Ok. I will take the \"fileuploaded\"-event. Thanxs do your help.\n. Thanxs.\n. thanxs.\n. ",
    "stepancher": "it's not the operating system, browser, or my js plugins. I check it.\najax demo 4 don't work correct. To reproduce do this steps\n1) Click Browse\n2) Select 5 images at once\n3) Click Open\n4) Click shorts icons \"upload file\" in sequence (not Upload selected files)\n5) Fifth image don't upload! (don't send data on server) \n. it is also interesting that matters in what sequence you press the little buttons upload. Other observations I described in the first message\n. I can't test your fix. Use kartik-v/yii2-widget-fileinput in composer.json \"kartik-v/bootstrap-fileinput\": \"~4.2\" . When you make new release 4.2.8 ?\n. Change composer.json to accept dev-master, and your fix resolve this bug. I use slightly modified your widget for their needs. Based on it, made the Manager who attaches images to any model attribute. In this connection there are several ideas to upgrade this widget if you are interested\n. ",
    "Paul75": "I use Zend Framework 2.....\n. ",
    "klnjmm": "Ok thanks. Hope you can find a solution easily.\n. Hi,\nThanks for your reactivity. But I always have the problem : now, only double-clic work. One click on the button doesn't open the dialog.\n. ",
    "kevin2531": "I have the same issue\n. ",
    "alelom": "I solved this problem by using:\n<script>\n    if (navigator.userAgent.indexOf(\"MSIE 10\") > 0) {\n        $(\"#input-2\").bind('mousedown', function (event) {\n            $(this).trigger('click')\n        });\n    }\n</script>\nat the bottom of the HTML document where I'm using bootstrap-fileinput.\nJust change \"#input-2\" to the ID of your button.\nYou can modify \"MSIE 10\" to a general \"MSIE\" so it works also for IE9 and 8.\nThis solved the double click instead of single click issue for IE10 for me.\nThanks to @nagyt234 for the proposed solution in tors/jquery-fileupload-rails.\nhttps://github.com/tors/jquery-fileupload-rails/issues/33#issuecomment-23645303\n. ",
    "DarkMerge": "Thx, it's working. One question. Can it works without option \n//      uploadUrl: \"/file-upload-batch/2\"\nmy input looks like:  and i have no need in \"uploadUrl: \"/file-upload-batch/2\"\"\n. ",
    "BrianMullin": "I have finally determined the use case that was causing my error.\nI was using the deleteUrl option and omitting the initialPreviewConfig['url'] property, since the url value was the same for all of my initialPreview items.\nThe documentation states...\n\ndeleteUrl\nstring, the URL for deleting the image/content in the initial preview via AJAX post response. This will be overridden by the initialPreviewConfig['url'] property.\n\nWhen omitting the url property in each initialPreview item, the 'disabled' class was added to the kv-file-remove buttons. However, the button did not have the disabled='disabled' attribute and did perform the file removal properly by utilizing the deleteUrl option value as a fallback.\nWhen I replicated the deleteUrl setting into each initialPreview item as the url property, the remove button state is displayed properly. So, I can easily work around this issue. I misinterpreted the documentation as meaning that the url was optional as long as the deleteUrl option was specified.\nThank for creating such a great plug-in and for supporting it so well.\n. ",
    "HKhedr": "c# code get delete icon disable \njsonFileResult result = new jsonFileResult()\n                {\n                    initialPreview = \"\",\n                    initialPreviewConfig = new string[,]\n                    {\n                        { \"caption\" , \"First Image\" },\n                        { \"url\" , \"/Home/Delete\"},\n                        { \"key\" , \"1\" },\n                        { \"width\" , \"120px\" }\n                    }\n                };\njavascript code \nvar $input = $(':file');\n        $input.fileinput({\n            uploadAsync: false,\n            showUpload: false,\n            showRemove: false,\n            minFileCount: 0,\n            maxFileCount: 10,\n            validateInitialCount: true,\n            maxFileSize: 25 * 1024,\n            msgSizeTooLarge: 'File \"{name}\" (<b>{size} KB</b>)'\n                            + 'exceeds maximum allowed upload size of <b>{25} MB</b>. '\n                            + 'Please retry your upload!',\n            allowedFileExtensions: ['zip', 'rar', 'tar', 'gzip', 'gz', '7z', 'png', 'jpg', 'txt', 'doc', 'docx', 'pdf'],\n            uploadUrl: 'Home/UploadFiles'\n        })\n. c# code get delete icon disable \njsonFileResult result = new jsonFileResult()\n                {\n                    initialPreview = \"\",\n                    initialPreviewConfig = new string[,]\n                    {\n                        { \"caption\" , \"First Image\" },\n                        { \"url\" , \"/Home/Delete\"},\n                        { \"key\" , \"1\" },\n                        { \"width\" , \"120px\" }\n                    }\n                };\njavascript code \nvar $input = $(':file');\n        $input.fileinput({\n            uploadAsync: false,\n            showUpload: false,\n            showRemove: false,\n            minFileCount: 0,\n            maxFileCount: 10,\n            validateInitialCount: true,\n            maxFileSize: 25 * 1024,\n            msgSizeTooLarge: 'File \"{name}\" (<b>{size} KB</b>)'\n                            + 'exceeds maximum allowed upload size of <b>{25} MB</b>. '\n                            + 'Please retry your upload!',\n            allowedFileExtensions: ['zip', 'rar', 'tar', 'gzip', 'gz', '7z', 'png', 'jpg', 'txt', 'doc', 'docx', 'pdf'],\n            uploadUrl: 'Home/UploadFiles'\n        })\n. that code not working any help !!!!?\n. footer delete icon disable, is there error in my code !!!? \n. @Guilherme88\nworking perfectly\nThank you very much \n. thank you. I wrote that code\n$(\"input:file\").fileinput({\n            showRemove: false,\n            showUpload: false,\n            showCaption: false,\n            showZoom: false\n        });\nbut zoom icon still appear.. How can I hide zoom icon at all..\nRegards.\n. thank you, \n$ele.on('filebatchselected', function (event, files) {\n    $('.kv-zoom-cache input').attr('disabled', 'disabled');\n});\nwork good. ",
    "mikbox74": "Thank you very much!\nBut how can I pass the callback into Yii widget? \n. ",
    "zxy198717": "Hi @kartik-v , I checked it on Safari browser, it doesn't work. And the issue only happened after uploading one image successfully, if you haven't clicked upload icon, just click delete icon, you can select the same image again and again, so I think it isn't the browser's issue, please help to check.\nThanks.\n. @kartik-v \nEnvironment:\n\n\nOS: OS X EI Capitan\nBrowser: Chrome 46.0.2490.80\n\n\nSteps:\n\nOpen Url: [http://plugins.krajee.com/file-input-ajax-demo/7]\nClick Browse to select one image\nClick the upload icon which is _below the previewed image.\nAfter uploading successfully, click the remove icon which is _below the previewed image.\nSelect the uploaded image again.\n. \n",
    "wallaceiam": "I seem to be having a similar problem but with filepredelete.\nHave you been able to resolve this or determine why the event isn't being called?\nI also am not getting any DELETE or POST calls on the server side for newly uploaded files.  Everything works file for pre-existing uploaded files - it is just new files that don't seem to be handled correctly.\n``` javascript\nvar imagesInitialPreview = [\n            '',\n            '',\n            '',\n            '',\n        ];\n        var imagesInitialPreviewConfig = [\n            { caption: \"860969_494176790618037_1754821881_o.jpg\", width: \"120px\", url: '/api/image', key: \"860969_494176790618037_1754821881_o.jpg\" },\n            { caption: \"843062_494175740618142_1021387009_o.jpg\", width: \"120px\", url: '/api/image', key: \"843062_494175740618142_1021387009_o.jpg\" },\n            { caption: \"859127_494176250618091_113237579_o.jpg\", width: \"120px\", url: '/api/image', key: \"859127_494176250618091_113237579_o.jpg\" },\n            { caption: \"860543_494176047284778_554763410_o.jpg\", width: \"120px\", url: '/api/image', key: \"860543_494176047284778_554763410_o.jpg\" },\n        ];\n$(\"#images-upload\").fileinput({\n    uploadUrl: '/api/image',\n    deleteUrl: '/api/image',\n    ajaxDeleteSettings: { method: \"DELETE\" },\n    uploadAsync: true,\n    overwriteInitial: false,\n    minFileCount: 0,\n    maxFileCount: 5,\n    validateInitialCount: true,\n    maxFileSize: 1500,\n    showClose: false,\n    showCaption: true,\n    showRemove: true,\n    minImageHeight: 200,\n    maxImageHeight: 400,\n    minImageWidth: 200,\n    maxImageWidht: 400,\n    resizeImage: true,\n    resizePreference: 'height',\n    previewClass: 'img-responsive',\n    browseIcon: ' ',\n    removeIcon: ' ',\n    browseClass: 'mb-sm btn btn-primary',\n    removeClass: 'mb-sm btn btn-danger',\n    uploadClass: 'mb-sm btn btn-default',\n    removeTitle: 'Cancel or reset changes',\n    elErrorContainer: '#kv-avatar-errors',\n    msgErrorClass: 'alert alert-block alert-danger',\n    layoutTemplates: { main2: '{preview} {remove} {upload} {browse}' },\n    allowedFileExtensions: [\"jpg\", \"png\"],\n    allowedFileTypes: ['image'],\n    msgSelected: '{n} files uploaded',\n    initialPreview: imagesInitialPreview,\n    initialPreviewConfig: imagesInitialPreviewConfig,\n}).on('filepreupload', function (event, data) {\n    $('#kv-success-box').html(data.response);\n    $('#kv-success-modal').modal('show');\n}).on('fileuploaded', function (event, data) {\n    $('#kv-success-box').append(data.response.link);\n    $('#kv-success-modal').modal('show');\n}).on('filepredelete', function (event, data) {\n// THIS ISN'T CALLED FOR IMAGES JUST UPLOADED\n// NOR IS THERE ANY POST/DELETE REQUESTS BEING\n// SENT TO THE SERVER\n    $('#frmDelete-image > #id').val(data);\nvar el = $('#imgDelete');\nvar title = el.attr('data-title');\nvar msg = el.attr('data-message');\nvar dataForm = el.attr('data-form');\n\n$('#formConfirm')\n.find('#frm_body').html(msg)\n.end().find('#frm_title').html(title)\n.end().modal('show');\n\n$('#formConfirm').find('#frm_submit').attr('data-form', dataForm);\nreturn true; //abort\n\n});\n```\n. Thanks for the reply kartik-v,\nHowever, I don't believe that is the case - OR - I have configured something incorrectly.\nUsing my above settings, to reproduce the issue:\n1. Click Browse, and select an image,\n   Image is successfully previewed\n3. Click Upload\n  Image is successfully uploaded to the server\n  Remove button is available from the preview and the bottom bar\n4. Click Remove (either on the previewed image or the bottom bar)\n  No event is fired even though\nIf you refresh the page, the remove button works correctly with the newly uploaded image.\nI can provide screenshots if that is unclear. However, the image has been uploaded, then the Remove button still acts as Clear - which I believe is incorrect.\nAgain, I may have configured something above incorrectly....\n. Ah Perfect! Working great now.  \nThanks for the point in the right direction\n. ",
    "jamaica474": "+1 for npm\n. ",
    "igorRovenki": "@kartik-v I correct understand that if our image's height > width we can rotate canvas on 90\u00b0?\nin my case it's not useful to rotate image by server code(\n. ",
    "petargeorgiev123": "I have multiples fileinputs in a page and populate the initialPreview on the load passing the files. But for PDF I am getting the initialPreview trying to load the PDF into <img tag \n What can be the problem? \nWhen selecting a PDF manually is previewing the PDF well but not in the initialPreview. \n$(\".fileUpload :input\").each(function(){\n        var inputElement = $( this );\n        inputElement.fileinput({\n            showUpload: false,\n            showCaption: false,\n            fileType: \"any\",\n            previewFileIcon: \"\",\n            initialPreviewAsData: true,\n            initialPreview: [\n                inputElement.parent().parent().attr('data-url')\n            ],\n            autoReplace: true,\n            maxFileCount: 1,\n            overwriteInitial: true,\n        });\n    });. ",
    "lordcroci": "@kartik-v Hi, Thanks a lot for everything, we are using a lot of your plugins and are awesome.\nI have a problem with your file input form, I do not need an 'big' preview 'cause I need to upload only PDF files so I am wondering if there's a way to show just the namefile.. This would be useful specially if there is a way to show the preview file name in the update page allowing the user to know the OLD uploaded file before substituting it. \nThanks a lot, \ncheers,\nLoris. Ok, I'll try with hideThumbnailContent. There is another problem, when I set the preview to true, then when I try to upload a pdf an alert ('access denied') pop up. \nWhat can it be? Thanks. ",
    "bhavivg": "Hi, I'm using bootstrap-fileinput v4.4.7, This error still exists. Is there any way to resolve it or any other workaround?. ",
    "Cannonb4ll": "I have, thoroughly actually, I cannot seem to get it working properly, can you see something wrong with this code?\n```\n{!! Form::file('images[]', ['class' => 'form-control', 'id' => 'file-upload', 'placeholder' => 'Afbeeldingen', 'type' => 'file', 'multiple' => 'multiple', 'data-show-upload' => 'false', 'data-show-caption' => 'true']) !!}\n$('#file-upload').fileinput({\n   minFileCount: 1,\n   maxFileCount: 10,\n});\n```\n. ",
    "Alexander--": "@kartik-v \nPlease reconsider this issue: this plugin can read old value to Blob and remember it across new file selections. @kartik-v\n\nThis is a browser security feature / limitation (on how browsers handle native file inputs).\n\nThis is no longer true for modern browsers: https://stackoverflow.com/a/47522812, \u2014 files collection can be modified in recent versions Chrome, Firefox, Edge and Webkit-based browsers.. @kartik-v \nI agree, that it is too early to fully rewrite the plugin. But you can check if the feature works (possibly using same approach as the W3C test case) and make small adjustments to library behavior based on that. If files is assignable, the library may use that to lift some limitations for form upload, otherwise proceed as before.. @kartik-v but at least you may be able get DnD to work since DataTransfer.files also contains a FileList.. ",
    "mohammadsj": "Images can be re-order after uploading but not when we add them.By that mean we can't re-order images unless we upload them. I have the same issue. If I use initialPreview to add images, I can't delete the images unless I upload an image. The delete button is there but it doesn't do anything. Please fix.. I see the delete works in your demos and that is so weird that I can't make it work.\nZoom is not working also. \nI also tried to hide zoom icon but it doesn't hide. \nThis is my code:\n```\n\n    $(\"#Photos\").fileinput({\n        initialPreview: [\"<img src='/Site_Data/Property/1/PIC1.jpg' class='file-preview-image' style='width:240px; height:160px' alt='Property Photo' title='Property Photo'>\",\"<img src='/Site_Data/Property/1/PIC2.jpg' class='file-preview-image' style='width:240px; height:160px' alt='Property Photo' title='Property Photo'>\",\"<img src='/Site_Data/Property/1/PIC3.jpg' class='file-preview-image' style='width:240px; height:160px' alt='Property Photo' title='Property Photo'>\",\"<img src='/Site_Data/Property/1/PIC4.jpg' class='file-preview-image' style='width:240px; height:160px' alt='Property Photo' title='Property Photo'>\",\"<img src='/Site_Data/Property/1/PIC5.jpg' class='file-preview-image' style='width:240px; height:160px' alt='Property Photo' title='Property Photo'>\",\"<img src='/Site_Data/Property/1/PIC6.jpg' class='file-preview-image' style='width:240px; height:160px' alt='Property Photo' title='Property Photo'>\",\"<img src='/Site_Data/Property/1/PIC7.jpg' class='file-preview-image' style='width:240px; height:160px' alt='Property Photo' title='Property Photo'>\"],\n        uploadUrl: \"/ManageProperties/uploadPhotos?propertyId=1\",\n        uploadAsync: false,\n        allowedFileExtensions: ['jpg', 'png'],\n        overwriteInitial: false,\n        autoReplace: true,\n        maxFileSize: 300,\n        showCaption: true,\n        showDrag: true,\n        showUpload: true,\n        showZoom: false,\n        browseClass: \"btn btn-primary btn-lg\",\n        slugCallback: function (filename) {\n            return filename.replace('(', '<em>').replace(']', '</em>');\n        }\n    });\n\n```. ",
    "karataserkan": "+1\n. @alexglue, thank you. it solves my problem\n. ",
    "alexglue": "@karataserkan BTW, I shoot this trouble with the following:\n```\n    public function transform(Media $media)\n    {\n        return [\n            'id'      => (int) $media->getKey(),\n            'name'    => (string) $media->name,\n            'file'    => (string) $media->getUrl(),\n            'initialPreview' => [\n                sprintf(\"\", $media->getUrl(), $media->name)\n            ],\n            'initialPreviewConfig' => [\n                [\n                    'caption' => $media->name,\n                    'url'     => route('admin.ajax.media.delete', $media->id),\n                    'data'    => $media->getUrl(),\n                ],\n            ],\n        'append' => true\n    ];\n}\n\n```\n```\n//view js script:\n\n    $(document).ready(function(){\n\n        var $img  = $('#image', '#button-file-upload');\n        var $form = $('#js-add-media-form');\n\n        var $options = {\n            language: 'ru',\n            allowedPreviewTypes: [\"image\"],\n            allowedFileExtensions: ['jpg', 'gif', 'png', 'jpeg', 'swf'],\n            maxFileSize: 1024,\n            maxFileCount: 5,\n            uploadUrl: $form.attr('action'),\n            deleteUrl: '/backend/ajax/image/delete',\n            deleteExtraData: {_token: $(\"[name='_token']\").val()}\n        };\n\n        $img.fileinput($options);\n    });\n\n```\n//view :\n                <div class=\"form-group\" id=\"button-file-upload\">\n                    {!! Form::file('image', ['id' => 'image', 'multiple' => true]); !!}\n                </div>\nIt works fine except of this shitty hardcoded html, but i don't know how to use it without html rendering from php.\n. ",
    "nasrithamer": "Hi, \nplease i want to delete file after upload but the key is always sent empty\nMy JS code:\n`\nvar $el1 = $(\"#images\");\n        $(\"#images\").fileinput({\n\n            language: 'fr',\n\n            theme: \"fas\",\n\n            uploadUrl: '{{ urlsite }}ajax/upload.php',\n\n            uploadAsync: false,\n\n            showUpload: false,\n\n            showRemove: false,\n\n            maxImageWidth: 1080,\n\n            resizePreference: 'height',\n\n            resizeImage: true,\n\n            uploadExtraData: function () {\n\n                return {\n\n                    ref_client: '{{ ref_client }}'\n\n                };\n\n            },\n\n            overwriteInitial: false,\n\n            initialPreview: [],\n\n            initialPreviewConfig: [\n\n                {\n\n                    'url': '{{ urlsite }}ajax/delete_img.php'\n\n                }\n\n            ],\n\n            initialPreviewAsData: true\n\n        }).on(\"filebatchselected\", function (event, files) {\n\n            $el1.fileinput(\"upload\");\n\n        }).on('filebeforedelete', function (event, key, data) {\n\n            console.log('key = ' + key);\n\n        }).on('filebeforedelete', function () {\n\n            var aborted = !window.confirm('Are you sure you want to delete this file?');\n\n            if (aborted) {\n\n                window.alert('File deletion was aborted! ' + krajeeGetCount('file-5'));\n\n            }\n\n            ;\n\n            return aborted;\n\n        }).on('filedeleted', function () {\n\n            setTimeout(function () {\n\n                window.alert('File deletion was successful! ' + krajeeGetCount('file-5'));\n\n            }, 900);\n\n        });\n\n`\nand my file PHP for Upload is \n`\necho json_encode([\n        'append' => true,\n\n        'initialPreviewConfig' => [\n\n            'caption' => $_FILES['images']['name'],\n\n            'size' => $_FILES['images']['size'],\n\n            'url' => $urlsite . 'ajax/delete_img.php',\n\n            'key' => $_POST['ref_client'] . \"_\" . $name\n\n        ],\n\n        'initialPreview' => [\n\n            \"<img src='\" . $urlimg . $name . \"' class='file-preview-image' title='\" . $name . \"' alt='\" . $name . \"' style='width: 100%; height: 200px;'>\",\n\n        ]\n\n    ]);\n\n` \nbut when i click delete in the other side the key is empty.. how can i do this please thank you.\n. ",
    "phlegx": "OK thx!\n. ",
    "aidonsnous": "Please I need help I am stack with this code; What I am doing wrong so that it doesn't show the controle properly when I am calling it via layout but alone occupying the wall page and showing?:\n\n            <?php if($titre==true){\n             echo '';\n           $this->render('/_alert', ['module' => $module,]);\n            echo '';}?>\n<h3 class=\"panel-title panel-heading text-center\" style=\"margin-bottom:5px;\"><strong><?= Html::encode($this->title)?></strong></h3>\nphp $form = ActiveForm::begin([\n                     'id'= 'profile-form',\n                    'enableAjaxValidation'   => true,\n                    'enableClientValidation' => false\n                ,'options'=>['class'=>'well-sm',\n                    'enctype'=>'multipart/form-data']]); ?>\n=FileInput::widget([\n    'name' = 'photo',\n    'language'=>\\Yii::$app->language,\n    'pluginOptions' => [\n        'uploadUrl'=>\\Yii::$app->urlManager->createUrl(['settings/profilephoto']),\n        'initialPreview'=> [''],\n        'initialPreviewConfig'=> ['caption'=>\\Yii::$app->urlManager->createUrl(['@webroot/media/utilisateurs/'. $model->lienphoto]),\n                    'width'=>'90px',\n        'url'=>\\Yii::$app->urlManager->createUrl(['settings/deletephoto']),\n        ],\n        'uploadExtraData'=>['user_id'=>$model->user_id],\n        'image'=>['width'=>'90px','height'=>'90px'],\n        'allowedPreviewTypes'=>['image'],\n        'allowedFileExtensions'=>['gif','png','jpeg','jpg'],\n        'allowedFileTypes'=>['image'],\n        'maxFileSize'=>'3072',\n        'maxFileCount'=>'1',\n        'validateInitialCount'=>true,\n        'resizeImage'=>true,\n        'maxImageWidth'=> 90,\n        'maxImageHeight'=>90,\n        'resizePreference'=>'width',\n        'browseClass' => 'btn btn-success',\n        'uploadClass' => 'btn btn-info',\n        'removeClass' => 'btn btn-danger',\n        'uploadIcon'=>' ',\n        'removeIcon' => ' ',\n        'browseIcon' => ' ',\n        'browseLabel' =>  \\Yii::t('app','Select Photo')\n    ],\n    'options' => ['accept' => 'image/*']\n]);\n?>\n.",
    "joomlaA1": "hello @kartik-v ^~^\n. ok thanks i edit\n. \"controlling the various templates properties in the plugin\"\ndoes this mean i will edit file-input.js to edit the design of the preview..?\nwhere is the design code located in the file...? thanks...\n. thank you for your patience... and everything...\n. thnx\n. thanks\n. ",
    "Guilherme88": "Hi HKhedr,\nI did different of you and it is working...  Try replace your jsonFileResult class for this:\nvar config = new {\n                            initialPreview = \"<img src='\"+ UserFile +\"' class='file-preview-image'>\",\n                            initialPreviewConfig =new[] {\n                                new {\n                                    caption = FileUpload.FileName,\n                                    url = deleteURL,\n                                    key =\"1\",\n                                    width = \"120px\"\n                                }\n                            },\n                            append =true\n                        };                        \n                        return Json(config);\n. ",
    "antocorso": "The problem is that I have \"uploadExtraData\". So, even if the file isn't valid, the extra data are sent to the server!!\n. ",
    "kelumKP": "can you just look at this Stakoverflow question please , let me know is this possible to do \nhttp://stackoverflow.com/questions/34153755/loading-files-from-folder-to-bootstrap-fileinput\n. @kartik-v  can you let me know is this possible to do \n. ",
    "PierrickGT": "It should be bootstrap-sass and not bootstrap-sass-official\nWorks perfectly fine for me, you can test it with my fork.\nhttps://github.com/PierrickGT/bootstrap-fileinput\n. Maybe a SASS branch would be a better solution in order to let developers install the version they want.\n. ",
    "joaoqalves": ":+1: for @PierrickGT solution\n. ",
    "hstaudacher": "I'll try to come up with a small standalone example\n. ",
    "alxmoroz": "Ok. Thanks!\n. ",
    "stratoss": "I should have created a new branch for this one... the issue is that I have enabled auto-uploading when batchselect event is raised, and if one or more of the images do not met the minimum width/height specification the upload is continuing, but the input widget is frozen in error state so the user must reload the page in order to fetch the uploaded images and continue.\n. The missing part should be the automatic upload when a batch is selected. I'm doing it like:\npicturesInput.on('filebatchselected', function() {\n    picturesInput.fileinput('upload');\n});\n. ",
    "clashjedsada": "Thank you. Very much\n. ",
    "pc-mon": "its fixed thank you so much :)\n. ",
    "theTeaGreen": "Hi Kartik\nI'm having trouble finding the solution for the error \"SyntaxError: Unexpected token < in JSON at position 0\" which occurs on single excel file upload.. I've followed docs and demos and couldn't find what I'm doing wrong. Here is my code:\n\n$('#januaryFile').fileinput({\n    uploadAsync: false,\n    initialPreview: [@if(!empty($januaryFile))\"<h3 style='height:47px;'><i class='fa fa-file-excel-o text-success'></i></h3>January_final.xlsx\"@endif],\n    initialPreviewConfig: [\n        {previewAsData: false, size: 576237, caption: \"file.xls\", width: \"120px\"},\n    ],\n    initialPreviewAsData: true,\n    previewFileIcon: '<i class=\"fa fa-file-excel-o text-success\"></i>',\n    uploadIcon: '<i class=\"fa fa-upload\"></i>',\n    uploadClass: 'btn btn-success',\n    uploadUrl: \"{{route('admin.upload-file', 'january')}}\",\n    autoReplace: true,\n    maxFileCount: 1,\n    otherActionButtons: januaryDownloadBtn,   \n    overwriteInitial: true,\n    maxFileSize: 3000,\n    removeLabel: '',\n    layoutTemplates: {actionDelete: ''},\n    allowedFileExtensions: [\"xlsx\", \"xls\", \"csv\"],\n});\nCode in controller method:\nif($request->hasFile('tableInExcel')) {\n $excelFile = new ExcelFile;\n $dir = 'admin_files'.$this->getDirectorySeparator().'balancing';\n $full_dir = storage_path('admin_files'.$this->getDirectorySeparator().'balancing');\n $ext = request()->file('tableInExcel')->getClientOriginalExtension();\n$storage = new Filesystem();\n if(!$storage->exists($full_dir)) {\n $storage->makeDirectory($full_dir, 0755, true);\n }\n $filename = tempnam($full_dir, '');\n unlink($filename);\n $filename = substr($filename, strrpos($filename, $this->getDirectorySeparator(), -1)+1);\n$excelFile->file_name = $filename . '.' . $ext;\n $excelFile->path_to_file = $dir.$this->getDirectorySeparator().$excelFile->file_name;\n$fullPath = $full_dir.$this->getDirectorySeparator().$excelFile->file_name;\n $storage->put($fullPath, file_get_contents($request->file('tableInExcel')));\n$excelFile->save();\n return \"{}\";\n}\nThis same code worked for uploading pdf files in another project.. I'm wondering if there is something I'm missing that has to be add for excel files.\nThank you. Also I've tested the server code with normal file input form and it worked just fine.\n . I went through all similar issues but none of the given solutions worked for me.. I'm struggling with this for several weeks now. Please help me.. I'm not comparing this with normal file input. I just meant that my server code works with normal file input, so I assume I'm not writing the fileinput js function correctly.\nI want to use this plugin and as you can see in the code above I'm returning an empty JSON object. But when I try to dd() smth in the controller method it doesn't return (print) anything, so I believe it doesn't even get to the server code (I have checked the routes and methods, they are correct). It just messes my front-end so I have to set display:none property on the div element that covers the fileinput and then I can see the following as shown on the image: \n\nI've also checked the response by inspect element, it is 200 OK. \nCan you please check if I'm doing something wrong with the configuration?. <input type=\"file\" id=\"januaryFile\" name=\"tableInExcel\" class=\"file-loading\">\n. I've tried the exact same code (same routes, same controller method, same fileinput script and input markup) in another project and it worked. -.-\nWhat I figured out while debugging is that my request is being redirected - status code is 302 and preview and response tabs are not showing anything. I missed this because all this time I was looking and debugging the XHR response where everything was with response code of 200. \nYet I still don't understand where is the problem.... After several days of struggle I finally found the solution. What I was missing was the token which must be sent in the request. So I did the following in my master view:\nmeta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\n$.ajaxSetup({\n           headers: {\n               'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n           }\n       });. ",
    "mailofpravin": "it is question, I am not sure it could be an issue?\n. ",
    "CodingDK": "I just maded a jsfiddle that uses the current version that gives the problem\nhttp://jsfiddle.net/CodingDK/kuhnoLfv/\n. I think the problem is in line 2020, return isEmpty(text) ? '' : String(text).replace(/[\\-\\[\\]\\/\\{}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|<>&\"']/g, '_');\nBut regex is not my strongest side :-)\n. I have been examining the regex until I saw you had solved the problem. I came up with this solution: \n[\\-\\[\\]\\/\\{}\\(\\)\\*\\+\\?\\\\\\^\\$\\|<>&\"'\\.](?=[^.]*\\.)\nIt allows all dots except the last dot. But I'm not quite sure what slugDefault is used, but if you still want dots changed, then it could be a solution.\nJust for information :-) Have a nice day, and thanks for a great script\n. ",
    "kikonen": "okey, I found the problem; and it appears to be not due to this library (adding of this library into project, and appearence of bug just coincided each other), but hardcoded logic in jquery-ujs, which decides to ignore \"remote\" sending of form via XHR if any file input field exists (grrhhh).\n=> thus closing as invalid\n. Problem is yhat jquery-ujs rails automagic falls apart. Logic on jquery-ujs is hardcoded to use plain simple form encoded post, while more advanced controls, like fileinput, require multipart form post. Fix is to use explicit FormData to encode and send data. Beaware that some old browsers may not support FormData.\n``` javascript\n...\n     // NOTE KI MUST use explicit FormData logic since rails \"data-remote=true\" is hardcoded\n      // to NOT work with file inputs\n      $form.submit(function(ev) {\n        var formData = new FormData($form[0]),\n            action = $form.attr('action');\n    console.debug(\"DIALOG EDIT SUBMIT\");\n    console.debug(\"DIALOG action: \" + action);\n\n    ev.preventDefault();\n\n    console.debug(\"DIALOG\", formData);\n\n    $.ajax({\n      url: action,\n      method: 'post',\n      dataType: 'json',\n      data: formData,\n      // http://stackoverflow.com/questions/5392344/sending-multipart-formdata-with-jquery-ajax\n      contentType: false,\n      processData: false\n    })\n      .then(function(data) {\n        console.debug(\"DIALOG submitted\");\n        $dialog.remove();\n      })\n      .fail(function(jqXHR, textStatus, errorThrown ) {\n        console.debug(\"DIALOG submit failed\", jqXHR, textStatus, errorThrown, jqXHR.responseText);\n        // NOTE KI normal message dispatch should take care of this\n        //              ctx.showFailure(jqXHR.responseText);\n      })\n      .always(function() {\n        console.debug(\"DIALOG submit handled\");\n      });\n\n    // NOTE KI prevent double submit\n    return false;\n  });\n\n...\n```\n. ",
    "Chucheen": "@kikonen how did you fix this? And what was causing it?\n. ",
    "shorif2000": "I think you should put a demo with a form on your website, as its not very clear\n. Also if its multiple files does that mean there will be multiple ajax requests with all the extra params? can it be single request that uploads all files with params via POST?\n. ",
    "tombevers": "Leaving out the allowedPreviewTypes doesn't solve the problem as it still try's to render the keynote file ...\n\n. When using data attributes this doesn't work. If I set the properties via javascript it does work.\n. ",
    "rajjanorkar": "Same thing is happening for me as well. Below is my situation.\nI can upload images and also can delete images. It is just last image i am not able to delete.\nit says \" You must select at least 1 file to upload.\" when i click on delete icon.\nPlease note i can delete all other images uploaded it is just the last one i can not delete.\n. Hi @kartik-v ,\nThank you i selected validateInitialCount: true, minFileCount: 0, but still it is not allowing me to delete last image loaded using initialPreview, i can delete all other images no issues there. It is just last image giving  error.\nThank you\n. ",
    "f0nt4": "Hi Kartik, I removed the MAXfilecount option and have removed multiple from the input field.\nBut whatever I do, if I dont sent initialpreview AND initialpreviewconfig back from the server, deleting is not working.\nWhen I do sent back both it is working.\nBut I want the plugin to use the default templates.\nI did read the documentation, all of it, but I can't find an option to only sent the initialpreview config and have deletion working.\nAnd @rajjanorkar please open your own issue, now kartik closed mine without answering me. Your issue is not the same as mine. I am able to delete but I just want the plugin to use the default templates for the different file types.\n@kartik-v could you please also check my question? \n. @kartik-v Thanks for your answer. I was hoping there was some way for the plugin to render the needed html if I just give back the link to the file.\nAt the moment I'm writing some stuff in php to see if that's able to determine the mime of the file and according to that give back the right html to display the file.\nIf I get it to work I'll sent it to you so maybe you can put it in the documentation for others.\nWe'll see.\nHmm, just a quick thought, wouldn't it be possible in javascript to get a file from the server and load it into a div? The file input div in this case?\nMaybe we could do something like, when document is loaded, get the value from a hidden input field and show it in the div.\nBut maybe this would involve downloading the file from the server to the browser, and with big files, that's not something you would want.\n. Ok, so I got everything working. Here's the code to the function I wrote.\nYou may distribute it if you would like because it might come in handy for others.\nhttp://hastebin.com/inatibekuv.php\nPlease let me know what you think of it!\nWhen I got some more time and cleaned my code I'll also write a little tutorial how I implemented the plugin to my site running Laravel 5.\n. Yeah, I did take in the default preview templates and it all works similar to your code in Javascript.\nIt checks for some filetypes and if it can't be found it will handle the file as an object.\nTaken your caution in consideration I changed the function a little bit.\nIt now checks if the text file isn't bigger than 10MB and if it is it doesn't load it.\nhttp://hastebin.com/evijikokov.php\nAlso I change the match for text files because javascript files were also seen as text files and that could cause some malicious code execution.\nSo now the mime type has to match text and the extension has to be txt, md, csv ,nfo, php or ini.\nThe restrictions on filetypes can be done in the plugin options itself, in the formvalidation and in the upload function in php so I left it out here.\n. @kartik-v as promised all the code I used to make this work in my Laravel application.\nIt was a lot of work and I hope it might help someone when they try to accomplish the same.\nhttp://hastebin.com/inepojabeg.html\nThe end result is like this:\n\n. Maybe just remove \"maxFileSize: 0,\"?. Hi Kartik,\nThanks for your fast answer.\nI tried both of those settings, but showPreview just disables the whole preview area.\nUsing allowedPreviewTypes, I removed object from the list but this doesn't help.\nThing is, everything is working great, except for .msi files you can test this on the demo page by simply selecting a .msi file. You can even rename a .exe file to .msi to test it.\nAlso, is there an event which takes place after selecting a file and checking if it's extension/type is allowed?\nI'm using filebatchselected right now, but this triggers before checking if it's allowed.. ",
    "marioene": "UPDATE 1: \nI solve the resizing  problem with plugin parameter uploadURL (calling ajaxUploadImage method in my Controller),  in method ajaxUploadImage I am using this Laravel component http://image.intervention.io/\n$ext = pathinfo($_FILES[\"fileinput-image\"][\"name\"], PATHINFO_EXTENSION);\nImage::make($file_destination)->resize(800, 600)->response($ext);\n. UPDATE 2:\nI solve the refresh after auto upload:\n...\n.on(\"filebatchselected\", function(event, output) {\n        $(\"#fileinput-image\").fileinput(\"upload\");\n        $(\"#fileinput-image\").fileinput(output);\n});\nArray variable 'output' is coming also from my ajaxUploadImage (Laravel Controller):\n...\n$http_path = getenv('IMAGE_HTTP_PATH');\n$filename = pathinfo($file_destination, PATHINFO_BASENAME);\n$initialPreview[] = array('<a href=\"' . $http_path . $filename . '\" data-lity><img style=\"width:auto;height: 120px\" id=\"1\" src=\"' . $http_path . $filename . '\"></a>');\n$initialPreviewConfig[] = array('caption' => $filename, 'key' => $filename, 'url' =>  URL::to('ajax_DeleteImage'), 'extra' => 1);\n$output = ['initialPreview' => $initialPreview, 'initialPreviewConfig' => $initialPreviewConfig];\nreturn json_encode($output);\n. I implemented this great plugin in my Laravel projects (PHP).\nFor AjaxUpload or AjaxDelete methods I got the same error when my routes were declared with Route::get.\nWhen I change to Route::post the 2 methods were working perfectly.\nA part of my routes\\web.php in Laravel 5.3:\nRoute::post('ajax_UploadImage', 'Dashboard\\AjaxController@ajax_UploadImage');\nRoute::post('ajax_DeleteImage', 'Dashboard\\AjaxController@ajax_DeleteImage');\n. ",
    "alexandcote": "Check removeURL\n. ",
    "SigalZ": "Ok, I found out it works when I click on images in the preview, not the one that were just uploaded.\n. Thank you, but I can't find any example that answer that. All the examples have hard coded InitialPreview, not populating from database.\nApologies for posting here\n. ",
    "agustinzirit": "I do not understand that closes the issue if not resolved the doubt. But thanks .\nNo entiendo por que cierra el tema si no esta resuelto la duda.  Pero bueno, gracias.\n. ",
    "phpyii": "I saw #544's problem.\n. ",
    "jun9358": "@kartik-v \nIt still occured on latest commit(d870e37aa0828241c379543f464451af121bdc57).\nset options like\n$('#files').fileinput({\n  showPreview: true,\n  allowedPreviewTypes: ['image']\n});\non _previewFile(), this.allowedPreviewTypes return \n[\"image\", \"html\", \"text\", \"video\", \"audio\", \"flash\", \"pdf\", \"object\"]\n\u203bgit bisect result\nb94d13810fdbb82e15b4c3ebc4605a1fb5793fb8 is the first bad commit\ncommit b94d13810fdbb82e15b4c3ebc4605a1fb5793fb8\nAuthor: Kartik Visweswaran kartikv2@gmail.com\nDate:   Thu Jul 7 00:44:45 2016 +0530\nUpdates to release v4.3.3 fix #680 fix #700 fix #706\n. ",
    "MinaGabriel": "it might be an ugly work around but i partially postback my page on every Manage Image click, to reload the library.\n```\n      $('.close, .modal-footer :button').click(function () {\n            __doPostBack('', null);\n    });\n\n```\n. ",
    "abbasmhd": "faced the same problem\nlooking at the fileinput.js codes, i found that when you use initialPreview to add files the class .file-preview-initial will be added,  refresh nor clear are able to clear it not(.file-preview-initial)\nthe only way to do it is to destroy and recreate the fileinput\nplease let me know if you found any other way\n. ",
    "Szymon-dziewonski": "Have same problem here it breaks preview view and reload images without upload \nvar upload = $(\"#input-700\").fileinput({\n      uploadUrl: \"/admin/myimageupload/news/2\", // server upload action\n      uploadAsync: true,\n      maxFileCount: 5,\n      showUpload: false\n    });\n```\n$('#button_submit').on('click', function (e) {\n  upload.fileinput('refresh', {\n    uploadUrl: \"/admin/myimageupload/news/2\"\n  }).fileinput('upload');\n});\n```\nnormal upload works .fileinput(\"upload\") works too , but using refresh function breks preview and alos sens only one file to php ..\n. ",
    "WallenHan": "@ Szymon-dziewonski  thanks for your resolution.I just want every time reset the uploadFile.. ",
    "edsonvictor09": "how can i maxfilecount combine this four when you upload in can be 30 max picture to be upload\n\nmaxfilecount.txt\n. ",
    "groblerf": "Thanks Kartik.\nThe person that created the library in the NuGet Gallery has an API Key for the package. No uploads can be done to add versions with the same package name without the API key.\nWe would need to find this person and request that they invite you to be a co-owner of the package, which will link your user profile to the package.\nWhen that is done you can upload new versions after running your nugget\\build.bat fiel to create the package.\n. I see the package was first created by: ert78gb.\n. Hallo Kartik,\nDo you have a NuGet Profile?\nIf not, please create a profile and post the username here.\nI have sent a message to ert78gb to invite you to be a co-owner. He will need your NuGet Profile Username.\nThanks.\n. Thanks, I have requested him to invite you.\nYou can also send messages on the NuGet web site by searching for the package: bootstrap-fileinput and clicking on the \"Contact Owners\" link on the left. See: https://www.nuget.org/packages/bootstrap-fileinput/ for the package.\n. ",
    "GRMagic": "Hello Kartik, good library!\nCan you update the nuget package again?. ",
    "afewnotes": "I may encountered the same problem here, the language changed to default after invoking disable/enable and refresh on my file input ( I set language both in initial and refresh options ):\nmyFile.fileinput('disable').fileinput('refresh', options)\nand if I remove the code above, everything's OK. \nI think it's the 'refresh' method or maybe I missed some other settings ?\n. ",
    "KnightHJ": "Hey! haitham.\nI use C# and meet this problem too. \nI don't know whether you have figured out how to solve this issue.\nIf you have, can you give me some advice?\nThanks .\nKnight.\n. ",
    "Mattdjuret": "I used a \"ashx\"-file on the serverside. Hope it helps.\nhttp://codepedia.info/2015/06/upload-image-using-jquery-ajax-asp-net-c-sharp/\n. ",
    "wudgaby": "This problem has been resolved ;Is my problem\n. ",
    "im-SRK": "Excellent work kartik!\nIn case of uploading multiple files, some files do not upload showing error \n\nSomething went wrong with file upload operation.\n\nCan you please guide?\nI think it is because of uploading multiple files at the same time. Therefore, I also need guideline to upload async files (uploadAsync: true) but each file uploaded one by one (ie. one after another) along with individual progress bars.\nThanks. ",
    "gpit-vishal": "Thank You !!! :+1: \n. ",
    "omarpiani": "... this is not a solution.. it's a surrender... Using PDF Architect https://www.pdfforge.org/pdfarchitect/personal something is shown.. but bad.. ",
    "crobinson42": "Well... face palm. Not exactly sure what it was but the server restart did the trick! Haha\n. ",
    "valluminarias": "Got it, there's an option called dropZoneEnabled: true\n. ",
    "sarah-mostafa": "it turned out i was using an older version\n. ",
    "taylankasap": "I'm just thinking DRY. It kinda bugs me to generate same template when there is already a HTML coded in the plugin itself.\nWhat about something like this:\n```\n// Save the instance because previewTemplates option might be customized for each fileinput\nvar $finput = $('.js-fileinput').fileinput();\n$finput.generatePreviewTemplate({\n    file: '/images/desert.jpg',\n    type: 'image',\n// Rest is from initialPreviewConfig\ncaption: 'desert.jpg', \nwidth: '120px', \nurl: 'http://localhost/avatar/delete',\nkey: 100, \nextra: {id: 100}\n\n});\n```\nSo it can generate the HTML, like it already does when there is an upload.\n. I don't get what you mean. If the developer is trying to display preview of a file in the server, then the server must already serve the content of the file. I'm just writing 'image' as example, I don't see why other types won't work.\nAlso if the developer wants to display different markup than the previewTemplate then they can still use the initialPreview option. Am I wrong?\n. ",
    "BenTech2": "i also have this issue, does anyone know how to fix this.\n. ",
    "miyasita1958": "Did you try with multiple option ?\n. Sorry , my mistake ,I can using pluginOption : maxFileCount\n. ",
    "kamov": "Hi, thanks for your reply.\nYes I have multiple and add multiple file work fine.\nWhat I am trying to do is not to override already added file, but to append more when click again on file input.\n. Hi, thanks for your reply. I was worry that only with ajax upload work this. But why? Why use can't remove selected file before upload? I don't mean file already uploaded but just file selected. The same to append more to selected files, for example from another folder?\n. ",
    "castilloedwin": "Estoy presentando el mismo inconveniente. Quiero subir m\u00faltiples im\u00e1genes pero si una vez seleccionadas quiero agregar otras el input sobreescribe lo que ya estaba. Si alguien lo logra solucionar no duden en avisarme. Un abrazo.. Well, after a long time I recall I made a little video explaining this. Here the link. I hope be able help you. https://youtu.be/5ra_EjQMxcg\nRepository: https://github.com/castilloedwin/upload-images-easily. ",
    "allofapiece": "I have the same problem. I want to be able to sort, delete and add new files without using ajax. That would be logical.. ",
    "aug2uag": "yeah, the drag and drop works.. except it disappears if there's no uploadUrl; and it's nice to have access to the headers from init. the upload icons are hard set, and even with different upload option they would always show\n. well, i'm using drag and drop for \"an ajax upload\" that's not uploaded independently from the form as a whole.. so i changed it and works like a charm for me; and yes, i needed a custom fileUploader method to read files, however, that's what I wanted.\nfileActionSettings: {uploadClass: 'hide'} is nice, i didn't see it in the docs, and saw the hard coded class instead.. anyways, thing works like a charm for me, thanks for your work!\n. the presence/absence of self.uploadUrl should not determine whether the drag & drop interface be present or not\n. ",
    "florianmuellerCH": "I wrote a small workaround with the help of StackOverflow. For details see this answer\n. ",
    "JCMais": "@kartik-v what is the motivation behind having to reupload the file? Is that a browser limitation or something?\nIt's not a good solution from a UX point. Since it's like having an invalid value in a form being reset to nothing after validation. It should retain their value.\n. I think this can be closed, unless you want to add that feature.\nI was able to do what I wanted by just using the filezoomshow event (thank you for having so many events available):\n``` javascript\n//...\n.on( 'filezoomshow', function( event, params ) {\nvar $filePreviewImage = params.modal.find( '.file-preview-image' ),\n    src = $filePreviewImage.prop( 'src' );\n\n// not an image\nif ( !$filePreviewImage.length )\n    return;\n\n//In my case, thumbnail src looks like: picture-thumb-{reallylongid}.png\nsrc = src.replace( 'picture-thumb', 'picture' );\n\n$filePreviewImage.prop( 'src', src );\n\n});\n```\n. this has been fixed a long time ago, closing.. ",
    "x-yuri": "Let us probably continue here. From what I can see, the people complaining about input being reset (including myself) are those who use it in single upload mode. When you have a form with other fields, you submit it, some fields don't pass validation, and you expect all the fields to retain their values.\nFor multiple upload mode I can't tell what course of action would be better. It probably makes sense to reset the field.\nI think I'll change behavior only for ajax uploads without multiple attribute set on input. What do you say?. ...Actually, the more I think about it the more I lean to this plugin not being good for my use case. This plugin is best suited for uploading files. And I need a form containing file input. Uploading a file is not the thing of the form. The form allows to create a record in database, which happens to have file column. I can probably bend it to do as I want. But isn't it like going against the flow? And if I need more than one file input? I would be probably better off using bootstrap-filestyle + jquery-form...\nAnyway, the [PR][3] has been started. Waiting for feedback (from you all)... Let's probably continue there.\n[3]: https://github.com/kartik-v/bootstrap-fileinput/pull/985. a lot of words down below :)\nFirst, why do I think it doesn't suit my use case well? I don't really like how file input becomes in control of everything. Generally, you have a form, and file input is just one of the fields. With your plugin (in case of AJAX uploads), you've got file input and it's it you're supposed to provide with information which extra fields to pass. And it's it that is responsible for submitting the form. The plugin has a lot of features, great job there. But honestly, in my opinion better design would be to have one plugin for file input, one for preview area. And give back to form control over when to submit, what to submit, whatever. That would make it less monolithic, easier to change. But we're getting out of scope of this PR here. The question is, do we want to support my use case?\nSpeaking of which, let me describe it in more details first. I've got a list of records on a page, which are basically images with extra data (think Instagram). User can add records. For that it clicks Add button, modal appears where it fills in a form, and submits it. I can't use plain form submission, I need AJAX. Since some fields might not pass validation. And if I were to use plain form submission, I would need to redisplay the modal after showing the page again. Which is probably possible, but AJAX would make it easier.\n\nWith ajax upload mode... there is one possibility to look for a bit of enhancement - but it will be only for this scenario:\n multiple attribute should be false - means user can always select one file\n overwriteInitial should be set to true - to overwrite preview thumbs and not append files in the preview\n maxFileCount should be set to 1\n validateInitialCount should be set to false\n\nNot sure if I follow you here. You're saying that only one specific usage scenario has room for improvement. Basically, that is the use case when user can select only one file. And here I agree.\nWe could probably include multiple == true + maxFileCount == 1 here, but I'd rather not. I believe only multiple == false needs special treatment. That is, I agree as well.\n\noverwriteInitial should be set to true\n\nUnder conditions you provided, you can set initialPreview: [<img1>, <img2>]. Shouldn't we deal with it as well then?\n\n\nmaxFileCount should be set to 1\n\n\nThat is needed only for multiple == true, from what I can see.\n\n\nvalidateInitialCount should be set to false\n\n\nWhy false? I'd expect to see true here. Since we're considering case when only one file can be chosen, aren't we? And being able to display two or more, even if not done by user, is probably not what is supposed to be allowed.\nBut upon investigation, it appeared, that validateInitialCount affects only minimum file count validation. Do you really meant validateInitialCount == false?\n\nThis is because ajax mode by nature allows you to queue files... and even if you have multiple attribute not set (i.e. false) ... that only limits file selection one at a time. User can go ahead and select one file and then once done he can go ahead and select another and so on.\n\nI can see that with multiple == true. But when it's false (with default values for all options but uploadUrl, to be specific), I select one file, it appears in preview area, I select another one, it replaces the one in the preview area, and only one file gets uploaded when I press Upload button.\nSo, briefly I see the need to specialcase multiple == false case. As to the other options, I don't think they are relevant here. If developer feels like displaying two images at start... Well, maybe he has his reasons. What matters is that user can select only one file.\n\nIf you have challenges - I can try to update over this PR - to achieve the above case with ajax.\n\nFeel free to change my PR in any way. But let us probably discuss it first, to make sure we're on the same page.\n\nHave you checked uploading files/photos using some other common utilities - e.g. facebook in a bulk mode? Does it allow retry of the uploads that have failed OR does the user need to select and reupload again?\n\nI just tried creating an album on Facebook. I click on Create Album button. It asks me to select files. After which they're displayed in a popup. If any of them is too big, it's shown as a box with corresponding message. I can add more photos, but I can't retry to upload photos I selected in the beginning. After I decided with which photos I post, and optionally gave them titles, I click Post button.\nSo the answer to your question is probably, no. It doesn't allow to retry uploads. But the workflow there is slightly different. You upload files, then you get a preview where you can amend things, and after that you can apply changes. And we were discussing doing all of that in one step. Or so I believe. You choose files, provide some extra info, then click Submit. After which form validation might fail, and you'll be presented with the same form.. Do we have anything left to do in this PR?\n\nOn the UX side - there will be some issues to handle as well - because you need to properly identify the errored out thumbnails and reset their progress and relink them back to the files left over in the stack properly (assuming there are no additional new files added. If user chooses to add more files after the errors - they will add to the complication of maintaining unique preview ids and thumbnail indices to not overwrite the earlier thumbnails).\n\nThis must be for multi-upload scenario, which we doesn't deal with in this PR, I believe.\n\nmultiple == false\noverwriteInitial ==  true\nmaxFileCount == 1\nvalidateInitialCount == false\n\nWe seem to agree that only the first condition is relevant. Which is taken care of in this PR.\nAnything I'm missing?. ",
    "abhi143u11": "hi i tried your way but still no luck can you please have a look on this http://jsfiddle.net/Abhi143u11/8cmgyfb7/\n. ",
    "efrain-atienza": "This is the right way\n<script type=\"text/javascript\">\n            $(\"#imagen\").fileinput({\n                showUpload:false,\n            });\n</script>\n. ",
    "tchiotludo": "didn't see this one, thanks for your help\n. done & thanks\n. Thanks for your response.\nI've made a Fiddle to isolate the context but I can't reproduce with this isolated version : https://jsfiddle.net/b63h78cn/1/\nAfter looking more, just add the draggable options : \nhttps://github.com/kartik-v/bootstrap-fileinput/pull/666/files#diff-3ff7f76c69b152e2013405eff03b3ec4R1039\nSeems to resolve the issue.\nI try to understand what is failling and it seems to be on Sortable plugins.\nThe default selector for draggable options is \">*\" that seems to failed on my case and don't find sortable childs on _onDragOver function.\nDoes it disturb you to add the draggable options ? \nIt's a more precise options for draggable only.\nWhat do you think about it ? \n. ",
    "wyzssw": "thanks for your reply\uff0c\nperhaps i  did not state clearly\uff0c\nthe pic3 is up to upload,after upload,\nuser want adjust the sequence \uff0c and submit the whole form\nso if kartik-fileinput supply adjust image sequence i will be happy\n``` html\n\n\nSelect File\n\n\n\nsubmit the whole form\n\n\n$(document).on('ready', function() {\n    $(\"#input-44\").fileinput({\n        uploadUrl: '/file-upload-batch/2',\n        maxFilePreviewSize: 10240\n    });\n});\n\n```\n. i don't need full screen mode\uff0ci search the web found a solution 'http://stackoverflow.com/questions/19305821/multiple-modals-overlay',\n$(document).on('show.bs.modal', '.modal', function () {\n    var zIndex = 1040 + (10 * $('.modal:visible').length);\n    $(this).css('z-index', zIndex);\n    setTimeout(function() {\n        $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');\n    }, 0);\n});\nbut it does not work \n. hi,sofmorona,\nfinally i resovle this problem by modify fileinput.js\njavascript\n _listenModalEvent: function (event) {\n              ...\n              ...\n              if (event === 'show') {\n                    var zIndex = 1040 + (100 * $('.modal:visible').length);\n                    $modal.css('z-index', 9999999);\n                    setTimeout(function() {\n                        $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex -1 ).addClass('modal-stack');\n                    }, 0);\n                }\n                if (event === 'hidden') {\n                    $('.modal:visible').length && $(document.body).addClass('modal-open');\n                }\n                ...\n                ...\n}\n. ",
    "sofmorona": "Hi wyzssw,\nthe code that you wrote works when the modal are at the same level, but if one is inside the other it doesn't work.. I have the same problem, I can't find how to put the modal window of the \"zoom\" (modalMain) at the same level than the other...\nKartiv-v maybe you can help us with that? how to move the \"modalMain\" (id=\"kvFileinputModal\") dialog?\nthanks in advance!\n. I write here a possible solution, maybe it helps someone...\nyou can write:\n $(\"#kvFileinputModal\").detach().appendTo('.page-content'); \nwhere  \".page-content\" is the parent div where you want to place the preview dialog.\nthen you need to use the following script:\njs\n$(document).on('show.bs.modal', '.modal', function (event) {\n        var zIndex = 1040 + (10 * $('.modal:visible').length);\n        $(this).css('z-index', zIndex);\n        setTimeout(function() {\n            $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');\n        }, 0);\n        $('.modal').on(\"hidden.bs.modal\", function (e) { //fire on closing modal box\n            if ($('.modal:visible').length) { // check whether parent modal is opend after child modal close\n                $('body').addClass('modal-open'); // if open mean length is 1 then add a bootstrap css class to body of the page\n            }\n        });\n    });\nit will prevent the problem stacking the dialogs and prevent problems when closing the most recent dialog.\n. ",
    "Aifz": "I'm not running any specific code, I downloaded the latest zip from github and initialized the fileinput as I said, nothing more.\nWhen I have no uploadUrl or showUpload to false, I have that alerts on each files posted.\nStill no idea ?\n. Building the JSfiddle showed me you were right, it is working properly, I searched my code and found some obsolete debug code that generates alert on fileselect /:. My bad, thanks for you help !\n. ",
    "zquancai": "if you want to upload file to another domain, you should configure ajaxSettings like this:\njs\najaxSettings: {\n  xhrFields: {\n    withCredentials: true\n  }\n}\ndon't forget to configure your server, just like this:\nheader('Access-Control-Allow-Origin:*');\n// or and other\nheader('Access-Control-Allow-Methods:POST');. ",
    "dungphanxuan": "That my mind is what is code/script for generate/ or created blob data. \nThank for you help!\n. i found solution: \nhttps://developer.mozilla.org/en-US/docs/Using_files_from_web_applications#Example_Using_object_URLs_to_display_images\n. ",
    "mgk89": "thank you for your answer.\non('filepreupload', function(event, data, previewId) {\n        var form = data.form, files = data.files, extra = data.extra,\n                response = data.response, reader = data.reader;\n        prevId = previewId;\n        console.log('File upload triggered');\n        console.log('ID lautet: '+previewId);\nmake me have the previewId in the console log, but please tell me how I can access to it in the upload.php just like I can access uploadExtraData variables.\nhow do I have to define that I can use $_POST['previewId'] in the upload.php?\nthank you very much and sorry for keep asking!\n. ",
    "prafulbagai": "Hi Kartik,\nThanks for providing valuable input on the above issue. Since, I need to\nhandle the above issue in my code, what would be the best way of going\nforward with this? How should I handle these things in JS code?\nRegards\nOn Wed, Jun 8, 2016 at 6:31 AM, Kartik Visweswaran <notifications@github.com\n\nwrote:\nClosed #679 https://github.com/kartik-v/bootstrap-fileinput/issues/679.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/679#event-685165806,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AEmxKSila5jJ6Ncb4yYWekLy_OSZ7nzGks5qJhRXgaJpZM4IwWDR\n.\n. Hi Kartik,\n\nThanks for replying. I was looking into the same, but was stuck upon\nsomething. Since triggering validation programmatically depends on the\nmethods provided by the Fileinput plugin. Is there a Fileinput method that\nfires when the \"initial preview is set\"?\nOn Fri, Jun 10, 2016 at 12:35 PM, Kartik Visweswaran \nnotifications@github.com wrote:\n\nYou need to write the code in your third party jquery validation plugin to\nskip file input required validation when you have set an initial\npreview.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/679#issuecomment-225108863,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AEmxKcpGHG8VHf5rr2lW0qpMZR4tiwXMks5qKQzJgaJpZM4IwWDR\n.\n. \n",
    "raphaelmichl": "@ryslana \nI am facing the same issue. It would be nice to be able to change the order of the files (the selected ones - not the initial files) beforehand.\nDid you solve it somehow?. ",
    "liuxue0905": "``` javascript\n    var STYLE_SETTING = 'style=\"width:{width};height:{height};\"';\n    var OBJECT_PARAMS = '      \\n' +\n    '      \\n' +\n    '      \\n' +\n    '      \\n' +\n    '      \\n'+\n    '      \\n';\n    var DEFAULT_PREVIEW = '\\n' +\n    '   {previewFileIcon}\\n' +\n    '';\n$(\"#file-1\").fileinput({\n        uploadUrl: 'http:localhost:3000/file-upload-single/1',\n        allowedFileExtensions : ['jpg', 'png','gif'],\n        overwriteInitial: false,\n        maxFileSize: 1000,\n        maxFilesNum: 10,\n        //allowedFileTypes: ['image', 'video', 'flash'],\n       initialPreview: [\n                        \"http://lorempixel.com/800/460/people/1\",\n                        \"http://lorempixel.com/800/460/people/2\"\n                        ],\n       initialPreviewAsData: true, // identify if you are sending preview data only and not the raw markup\n       initialPreviewFileType: 'image', // image is the default and can be overridden in config below\n       initialPreviewConfig: [\n                              {caption: \"People-1.jpg\", size: 576237, width: \"120px\", url: \"/site/file-delete\", key: 1},\n                              {caption: \"People-2.jpg\", size: 932882, width: \"120px\", url: \"/site/file-delete\", key: 2},\n                              ],\n       previewTemplates: {\n           generic: '\\n' +\n           '   {content}\\n' +\n           '   {footer}\\n' +\n           '\\n',\n           image: '\\n' +\n           '   ' +\n           '       \\n' +\n           '   \\n' +\n           '   {footer}\\n' +\n           '\\n',\n           text: '\\n' +\n           '   ' +\n           '       {data}' +\n           '   \\n' +\n           '   {footer}\\n' +\n           '',\n           html: '\\n' +\n           '   ' +\n           '       {data}\\n' +\n           '   \\n' +\n           '   {footer}\\n' +\n           '',\n           pdf: '\\n' +\n           '   ' +\n           '       \\n'+\n           '   \\n' +\n           '   {footer}\\n' +\n           '',\n           video: '\\n' +\n           '   ' +\n           '       \\n' +\n           '           \\n' + DEFAULT_PREVIEW + '\\n' +\n           '       \\n' +\n           '   \\n' +\n           '   {footer}\\n' +\n           '\\n',\n           audio: '\\n' +\n           '   ' +\n           '        \\n' +\n           '            \\n' + DEFAULT_PREVIEW + '\\n' +\n           '        \\n' +\n           '   \\n' +\n           '   {footer}\\n' +\n           '\\n',\n           flash: '\\n' +\n           '   ' +\n           '       \\n' +\n           OBJECT_PARAMS + '\\n' + DEFAULT_PREVIEW + '\\n' +\n           '       \\n' +\n           '   \\n' +\n           '   {footer}\\n' +\n           '\\n',\n           object: '\\n' +\n           '   ' +\n           '       \\n' +\n           '          \\n' + OBJECT_PARAMS + '\\n' + DEFAULT_PREVIEW + '\\n' +\n           '       \\n' + \n           '   \\n' +\n           '   {footer}\\n' +\n           '',\n           other: '\\n' +\n           '   ' +\n           '       \\n' + DEFAULT_PREVIEW + '\\n' +\n           '       \\n' +\n           '   \\n' +\n           '   {footer}\\n' +\n           ''\n       }         \n    });\n```\n. ",
    "carter-thaxton": "Within 5 minutes of trying out bootstrap-fileinput, I ran into this image preview distortion issue.\nIt's frustrating to have to find this issue and override the defaults in order to customize the images to appear correctly.\nI'm not sure of any application where the fixed defaults provided by @edwinhuish wouldn't be more appropriate.  Are you worried about breaking compatibility?  He went out of his way to improve this plugin in a very reasonable way.  My vote is to accept this patch.\n. ",
    "edwinhuish": "Here is my code setting:\n```\n       $(\"input.products-picture\").fileinput({\n            showClose: false,\n            showCaption: false,\n            showBrowse: false,\n            defaultPreviewContent: '',\n            previewSettings : {\n                image: {width: \"auto\", height: \"auto\"}\n            },\n            initialPreviewAsData: true,\n            initialPreview: '{$product.pic_directory}'?'{$product.pic_directory}':false,\n            layoutTemplates: {main2: '{preview}'},\n            fileActionSettings: {\n                showDrag: false,\n                showRemove: false,\n            },\n            previewZoomSettings:{\n                image: {width: \"auto\", height: \"auto\", 'max-width': \"100%\",'max-height': \"100%\"},\n            }\n        });\n```\n. I found the notice as blew:\njQuery-2.2.0.min.js:2 Uncaught RangeError: Maximum call stack size exceeded\n. @kartik-v  @ykbj \nI saw the gif, I think the problem is the server part, no the bootstrap file-input.\n@ykbj \u8fd9\u4e2a\u660e\u663e\u662f\u4f60\u7684\u670d\u52a1\u7aef\u4ee3\u7801\u95ee\u9898\u3002\n. @ykbj  \u8bf7\u5148\u770b\u4e00\u4e0bnetwork\u662f\u5426\u91cd\u590d\u63d0\u4ea4\u3002\n\u5982\u679c\u4e0d\u7528Image Resize\u6ca1\u6709\u95ee\u9898\u3002\u4e00\u52a0\u4e0aresizeImage: true\u5c31\u4e0d\u884c\u7684\u8bdd\uff0c\u8fd9\u4e2a\u9700\u8981\u4f5c\u8005\u89e3\u51b3\u4e86\u3002\n. @kartik-v \nI think the problem is I'm using multi instances, always hay same problem when I try to zoom the second picture.\nAny way, it have no error with another js, and jquery, bootstrap work well.\n\n. @kartik-v do you have solution of multi instances? Thx a lot.\n. Run the code in Console is worked! And just need to append, no show(); \n$('#kvFileinputModal').appendTo('body');\nAnd I have check in the simple page, it work perfectly also...\nWhy??\n. And if I add this code to the body, it work too. \nBut I think it's not the solution, because when I click zoom button, your code may run again and try to add <div id=\"kvFileinputModal\"   ?\n<div id=\"kvFileinputModal\" class=\"file-zoom-dialog modal fade\" tabindex=\"-1\" aria-labelledby=\"kvFileinputModalLabel\" style=\"display: none;\"></div>\n. I think it's still wrong, I had add this style to my page, now is OK. @kartik-v \n#kvFileinputModal:not(.file-zoom-fullscreen) .file-zoom-content{\n            height: auto !important;\n        }\n        .file-zoom-content > object[type=\"application/pdf\"] {\n            width: 100% !important;\n        }\n        .file-zoom-content > object[type=\"image/jpeg\"] {\n            width: auto !important;\n            height: auto !important;\n            min-height: inherit !important;\n            max-width:100%;\n            max-height:100%;\n        }\nThe min-height should be add to .file-zoom-content  , no the object .. ",
    "gonzadev": "kartik, I send my screenshot for your help, the problem is at IE 11.\n\n\n. ",
    "ykbj": "Image Resize (Width) \n    resizePreference: 'width',\n    maxImageWidth: 480,\n    resizeImage: true\nMultiple file upload error when enabled this \"Image Resize\" function.\n. hi, i has recorded this issus. please download and view the gif file from \"http://pan.baidu.com/s/1hr5YpvA\"\nthanks a lot~~\n. @edwinhuish \u4f46\u662f\u5982\u679c\u6211\u4e0d\u7528Image Resize\u7684\u8bdd\uff0c\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u4e00\u52a0\u4e0aresizeImage: true\u5c31\u4e0d\u884c\u4e86\uff0c\u56fe\u7247\u5c31\u4f1a\u91cd\u590d\uff0c\u5982\u679c\u4e0a\u4f20\u4e09\u5f20\u7684\u8bdd\u4e5f\u662f\u6709\u4e24\u5f20\u4f1a\u91cd\u590d\uff0c\u6211\u540e\u53f0\u63a5\u6536\u5230\u7684\u5185\u5bb9\u5c31\u662f\u8fd9\u6837\u7684\uff0c\u597d\u50cf\u8ddf\u6211\u540e\u53f0\u7684\u5904\u7406\u6ca1\u6709\u5173\u7cfb\u5427\u3002\u5e0c\u671b\u80fd\u5e2e\u6211\u89e3\u51b3\u4e00\u4e0b\u8fd9\u4e2a\u95ee\u9898\uff0c\u975e\u5e38\u611f\u8c22\uff01\n. @kartik-v hi, I discussed with edwinhuish, we think this is a issus. i hope you fix this issus, thanks a lot.\n. @kartik-v @edwinhuish hi, i fix this bug for simple.\nfunction _validateAllImages : line2466\nind = config.ind; -> inde = config.pid.split('-')[2];\nplease check this fix. thanks!\n. @edwinhuish \u8fd9\u4e2a\u5730\u65b9\u7684\u95ee\u9898\u5728\u4e8e\u5982\u679c\u5355\u6b21\u9009\u62e9\u56fe\u7247\u6587\u4ef6\uff0c\u591a\u6b21\u9009\u62e9\uff0c\u8fd9\u4e2aind\u90fd\u662f0\uff0c\u90a3\u4e48\u5728_getResizedImage\u7684\u65b9\u6cd5\u91cc\u9762self.filestack[ind] = blob; \u8fd9ind\u4e5f\u662f0\uff0c\u526a\u88c1\u540e\u56fe\u7247\u5c31\u4f1a\u8986\u76d6filestack[0]\u8fd9\u4e2a\u56fe\u7247\u5bf9\u8c61\uff0c\u90a3\u4e48\u9664\u4e86ind\u4e3a0\u7684\u56fe\u7247\u88ab\u526a\u88c1\u4e86\uff0c\u5176\u4ed6\u7684\u90fd\u4e0d\u4f1a\u88ab\u526a\u88c1\uff0c\u4e5f\u4f1a\u4ea7\u751f\u4e00\u5f20\u91cd\u590d\u7684\u56fe\u7247\u4e86\u3002\n. The problem is that if the single select an image file, multiple choice, the IND is 0, then in the _getResizedImage method self.filestack[ind] = blob; the IND is 0. After cutting the picture will be covered filestack[0] this picture object, then in addition to ind 0 pictures was tailored, the other will not be cut, also will produce a duplicate pictures the.\n. ",
    "khandurdyiev": "\nit's didn't help.\nmy json that server return is [\n           'initialPreview' => [$guidePhotoDir],\n           'initialPreviewConfig' => [\n               [\n                   'caption' => $guide->photo,\n                   'url' => '/' . App::getLocale() . '/' . roleRootUrl() . '/guidePhoto/delete',\n                   'extra' => [\n                       '_token' => csrf_token(),\n                       'guide_id' => $data['guide_id']\n                   ]\n               ]\n           ]\n       ]\njs:\n   var input = $(\"#field_photo_id\");\n       input.fileinput({\n           language: \"{{App::getLocale()}}\",\n           uploadUrl: \"@url('{{roleRootUrl()}}/guidePhoto/add')\",\n           browseClass: \"btn btn-success\",\n           browseLabel: \"{{trans('services-director.pick-photo')}}\",\n           browseIcon: \"<i class=\\\"glyphicon glyphicon-picture\\\"></i>\",\n           allowedFileExtensions: [\"jpg\", \"png\", \"jpeg\"],\n           overwriteInitial: true,\n           showUploadedThumbs: false,\n           showUpload: false,\n           showRemove: false,\n           layoutTemplates: {\n               actionZoom: \"\",\n               actionDrag: \"\"\n           },\n           initialPreview:\n               @if(!empty($guide->photo))\n                   ['/website/guide-photos/guide-{{$guide->id}}/{{$guide->photo}}'],\n               @else\n                   [],\n               @endif\n           initialPreviewAsData: true,\n           initialPreviewConfig: [\n               {\n                   caption: \"{{$guide->photo}}\",\n                   url: \"@url('{{roleRootUrl()}}/guidePhoto/delete')\",\n                   extra: {\n                       _token: \"{{csrf_token()}}\",\n                       guide_id: \"{{$guide->id}}\"\n                   }\n               }\n           ],\n           uploadExtraData: {\n               _token: \"{{csrf_token()}}\",\n               guide_id: \"{{$guide->id}}\"\n           }\n       }).on(\"filebatchselected\", function() {\n           input.fileinput(\"upload\");\n       })\n. \n",
    "josefguenther": "I solved the issue. Using Windows to rotate an image does not actually change the image, and I guess browsers don't respect the rotation. Closing.\n. ",
    "mxmauro": "Hi Kartik,\nThanks for the answer and fix.\nRegards,\nMauro.\n. ",
    "vmtco": "\n. ",
    "ionvladescu": "i have still some issue. ",
    "capqueen": "It does not fixed? I found dom id will change to 'uploaded-xxxx' after uploaded. so i still can not find dom by previewId?\n. ",
    "cansozeri": "If I use your small mp4, the preview works, but If I use a larger video from Youtube (44 MB), the video preview is not working .. It's working if I use the version 4.1.8 .. I think there is an additional setting for preview option, but I can not find it .. \n. ",
    "yucolabjames": "I can reproduce the problem described by @cansozeri  it seems like files bigger than 13MB would not be playable in the preview. It doesn't seem to have anything to do with maxFileSize since we allow up to 1024MB uploads. \nCould it be a Chrome preloading meta data behaviour for large files?. ",
    "Kiblyn11": "Got the same issue and I found out what happens.\nThe plugin create one modal next to the first plugin field in DOM.\nBut when displaying other tab and trying to display, this modal is hidden under the other tab, which is display:none.\nI suggest to append the modal to the body instead of the parent, what do you think ? I get it working that way :\nin _initZoom\n$dialog = $(document.createElement('div')).html(modalMain).appendTo('body');\ninstead of \n$dialog = $(document.createElement('div')).html(modalMain).insertAfter(self.$container);\n. The thing is, I need the preview :)\n~~What do you think about releasing the memory asynchroniously ?~~ --> Same result, IE freeze\nTo avoid freeze, as its not something we need to wait for.\nEdit : Im gonna do a jsfiddle\n. Here is the JsFiddle : https://jsfiddle.net/braylath/3vtqu1wa/3/\nTested with this image : http://imgur.com/a/2UdbV\nTested with : Edge, Edge IE10 document mode\nRemark : Seems its only slow at the first upload (need to clean cache after to reproduce)\n. ",
    "houzw": "here is  a js fiddle \nhttps://jsfiddle.net/houzw/jezdd76z/\n. ",
    "fullflash": "Thanks !\n'previewZoomSettings'=>[\n                \"image\"=>[\n                    \"width\"=>\"auto\",\n                    \"height\"=>\"100%\"\n                ]\n            ],\n. ",
    "workgena": "Thanks for quick response! But the new implementation has some errors(see comments)\n. Second commit(with \"101\" magic number  :confused:) almost works.\nReplacement is a bit wrong, fix:\njavascript\n$el.html( template.replace('{percent}', pctLimit).replace('{percent}', pctLimit).replace('{percent}%', self.msgUploadThreshold) );\n. Thx, checked last commit in my current project. All works. But, I checked only one file upload at once, not in batch.\n. ",
    "fabioaccetta": "Yes, I need only client side data, exactly like your <div class=\"file-caption-name\"></div> that tells (client-side) the number of files currently handled by the plugin.\n. The solution could be a sort of public method like this:\njs\nvar count = $(\"#input-id\").fileinput(\"getFilesCount\");\navailable inside the filebatchuploadsuccess and the filedeleted events.\n. ",
    "nemozar": "How can i get this is commit from composer update? after update i have latest version without fix this bug.\nIn composer set version \"dev-master\" on \"kartik-v/yii2-widgets\"\n. ",
    "rvanginneken": "@kartik-v Can you please release this fix under a new version? thanks!\n. ",
    "mrbadaw": "I downloaded the latest version and still have this issue when using initial preview\nhow can I have this bug fixed ?. ",
    "abomaged": "I fixed the problem.\nIt was from href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" rel=\"stylesheet\" because I already loaded another bootstrap css file from master page. \nSo I just deleted it and the problem fixed.\nThanks\n. ",
    "igorek67": "Just make some changes in your UploadController - use return '{}'; instead return;\nif (Yii::$app->request->isPost) {\n            $model->imageFile = UploadedFile::getInstance($model, 'imageFile');\n            if ($model->upload()) {\n                // file is uploaded successfully\n                return '{}';\n            }\n        }\n. ",
    "zhuyayan": "Sorroy for my English. I have solved this issue. I discovered that the data returned from server must be json encode.. ",
    "mrpotts": "I need this feature as well, but the 'filezoomshow' event doesn't seem to be triggered. I copy/pasted the example in the documentation: \n$('#input-id').on('filezoomshow', function(event, params) {\n    console.log('File zoom show ', params.sourceEvent, params.previewId, params.modal);\n});\n...but it's not doing anything. None of the filezoom events works, except filezoomnext and filezoomprev. I'm using v4.3.9.\n. I think I've found the problem. The initZoom function is:\n_initZoom: function () {\n  ...\n  $.each($h.MODAL_EVENTS, function (event) {\n    self._listenModalEvent(event);\n  });\nBut it should be:\nself._listenModalEvent( $h.MODAL_EVENTS[event] );\nbecause __listenModalEvent espects a string, not an integer.. ",
    "jahlomp": "I just started out a pull request to add replace feature. I need support to get it done.\n. ",
    "jhonatanquilca": "You can try with\nlayoutTemplates: {footer: ''},. ",
    "laurentlyaruu": "me am having error Error 404\nbut i think the problem is plugin, can any one help me here?\n. ",
    "liu2510865": "@kartik-v  How to prevent a repeat of add pictures\n. ",
    "kazazes": "This and #246 are related, I think. The fnSuccess method fails if file previews are hidden because, as @TheAliAbbasi said, $thumb is undefined. I was putting together a PR but it looks like it's fixed in the 4.3.5 version in the master repo.\n. @kartik-v, could you create a new release for 4.3.5 so that CDNs are updated? Thanks.\n. ",
    "TheAliAbbasi": "Good to know, it gave me a real headeche, lol\n. ",
    "faizalshap": "Ok then how can i prevent a file from bieng removed?\n. Ok Thanks. I'll try.\n. ",
    "uhutch": "\n. \nThis error pop up when the zoom button is clicked.\nThank you so much\n. ",
    "EmmanueleNeri": "Hi,\nI updated the code but still does not work.\nPlease commit the fix #754.\nthanks\n. the removal of the thumbnail icon appears only if you use drag and drop.\nfor configurations without drag and drop this icon is not displayed.\nThis is my configuration i use:\n<input id=\"input-1\" name=\"input1\n![screen](https://cloud.githubusercontent.com/assets/22005714/18389478/6a7c91f0-76a6-11e6-88b6-199c7f29b67f.PNG)\n[]\" type=\"file\" multiple class=\"file file-loading\">\n<script>\n        $(document).on('ready', function() {\n            $(\"#input-1\").fileinput({\n                language: \"it\",\n                allowedFileExtensions : ['pdf', 'tif', 'tiff'],\n                maxFileCount: 5,\n                maxFilePreviewSize: 10240,\n                fileActionSettings: {\n                        showRemove: true \n                    }\n            });\n        });\n</script>\n\n. ",
    "qinxiaowen": "hello, some question about  how use the params in this  plug?\n```\n xhrFields: {\n                            withCredentials: true\n                        },\n                        crossDomain: true\n```\n. i got it. use the  ajaxSettings options\n. ",
    "ctf0": "sorry, where is that code ?\n. @kartik-v sure :+1:  , i just don't know where exactly to add the code ? maybe in the examples folder ?\n. ",
    "onmotion": "I have same issue if set \n'showPreview' => false,\n(yii2 widget). and in console I have \nUncaught TypeError: Cannot read property 'attr' of undefined(\u2026) \nfileinput.js:1795\nThis issue only in version kartik-v/bootstrap-fileinput v4.3.4, in v4.3.1 all is ok\n. ",
    "yangzhaohui89": "thank to your answer. I try to regitster  in your web but fail . I'd like to ask the questions that I just want to use the ajax mode,but I don't want to submit my data to server. I handle my data in the  filebatchpreupload,but I need a fake success to show.How could I can do to stop the ajax submit at the same time use the ajax mode.\n. ",
    "AggerChen": "look your fileinput.js file.When the file is deleted\uff0cthe ajax function property of success have Call the \u201cfiledeleted\u201d method like \"self._raise('filedeleted', [vKey, jqXHR, extraData]);\"\nso, maybe you can :\n-Script:\non(\"filedeleted\", function(event, key, jqXHR, data) {\n     console.log(jqXHR.responseText);\n});. ",
    "strongant": "Threse images not in server,they are in localStorage.I don't upload image when user selected file.\n. Thank you,let me try.\n. File remove button no provide a event ?\n. ",
    "pedhenrique": "Hi @edwh! How could we tackle this? I moved the raise line of fileimageresized after the blob storage, and it seems to correct the problem for this specific event, but I don't know how to correct for the fileimagesresized event. Maybe using promisses or a counter that will raise it after all images have been resized? Could you help me with a temporary solution? Thanks in advance.\n. EDIT: My previous solution didn't work for the corner cases, e.g. on getResizedImage when the image already has width and height equal maxWidth and maxHeight (returning true) or when the image is not valid (returning false). In such cases, the event fileimagesresized was never raised.\nThe new solution keeps track of the number of already \"resized\" (processed) images.\nWell, as a temporary solution for anyone with the same problem as edwh, I did the following:\nSet a counter with value 0 before the for loop that call _getResizedImage for each image in the stack. Before returning from _getResizedImage or in the toBlob() callback function, I increment the counter and check if it's equal to the total number of images to be processed (self.loadedImages.length). If so, I raise the fileimagesresized event, because all images have already been resized or checked. \nMaybe this isn't the best solution, but I'm a beginner in JS and it was the solution I could think of. I also change the raise of fileimageresized event to happen after blob storage. The altered code:\n``` javascript\n_validateAllImages: function () {\n    var self = this, i, config, $img, $thumb, pid, ind, params = {}, errFunc;\n    if (self.loadedImages.length !== self.totalImagesCount) {\n        return;\n    }\n    self._raise('fileimagesloaded');\n    if (!self.resizeImage) {\n        return;\n    }\n    errFunc = self.isUploadable ? self._showUploadError : self._showError;\n    var counter = {val: 0};\n    for (i = 0; i < self.loadedImages.length; i++) {\n        config = self.loadedImages[i];\n        $img = config.img;\n        $thumb = config.thumb;\n        pid = config.pid;\n        ind = config.ind;\n        params = {id: pid, 'index': ind};\n        if (!self._getResizedImage($img[0], config.typ, pid, ind, counter, self.loadedImages.length)) {\n            errFunc(self.msgImageResizeError, params, 'fileimageresizeerror');\n            self._setPreviewError($thumb, ind);\n        }\n    }\n},\n_getResizedImage: function (image, type, pid, ind, counter, num_imgs) {\n    var self = this, width = image.naturalWidth, height = image.naturalHeight, ratio = 1,\n        maxWidth = self.maxImageWidth || width, maxHeight = self.maxImageHeight || height,\n        isValidImage = (width && height), chkWidth, chkHeight,\n        canvas = self.imageCanvas, context = self.imageCanvasContext;\n    if (!isValidImage) {\n        counter.val++;\n        if (counter.val === num_imgs) {\n            self._raise('fileimagesresized');\n        }\n        return false;\n    }\n    if (width === maxWidth && height === maxHeight) {\n        counter.val++;\n        if (counter.val === num_imgs) {\n            self._raise('fileimagesresized');\n        }\n        return true;\n    }\n    type = type || self.resizeDefaultImageType;\n    chkWidth = width > maxWidth;\n    chkHeight = height > maxHeight;\n    if (self.resizePreference === 'width') {\n        ratio = chkWidth ? maxWidth / width : (chkHeight ? maxHeight / height : 1);\n    } else {\n        ratio = chkHeight ? maxHeight / height : (chkWidth ? maxWidth / width : 1);\n    }\n    self._resetCanvas();\n    width = ratio;\n    height = ratio;\n    canvas.width = width;\n    canvas.height = height;\n    try {\n        context.drawImage(image, 0, 0, width, height);\n        canvas.toBlob(function (blob) {\n            self.filestack[ind] = blob;\n            self._raise('fileimageresized', [pid, ind]);\n            counter.val++;\n            if (counter.val === num_imgs) {\n                self._raise('fileimagesresized');\n            }\n        }, type, self.resizeQuality);\n        return true;\n    }\n    catch (err) {\n        counter.val++;\n        if (counter.val === num_imgs) {\n            self._raise('fileimagesresized');\n        }\n        return false;\n    }\n}\n```\n. ",
    "koxu1996": "I hope there will be solution for this.\n. @kartik-v I completly edited issue, please take a look.\n. Ok, if I create PR with property which disable this behaviour, will you merge it or I should create other workaround?\n. I forgot to mention that server must return initialPreview with initialPreviewConfig. Check this fiddle. You problably did not understand what I had on my mind. Do you agree that FILES should be empty always when error is encountered, even if resizeImage is true?. While trying to debug this problem I ran into another one: fiddle. It solve issue only in small part. I want to explain you this issue, can we talk by hangout/skype?. Your enhancement along with fixed #823 resolved issue. Now everything is working fine :+1: . @kartik-v I was wrong, there is still one problem. Consider resizeImage:true and one of selected images invalid. Now fileimagesresized is not called, because increasing counter is skipped by this https://github.com/kartik-v/bootstrap-fileinput/blob/master/js/fileinput.js#L2578 \nIn my opinion this event should be called after all resizing jobs are done, NOT if there was as many resizes as uploaded images. So even if upload one invalid image, we should get fileimagesresized, which inform us, that no one resizing process is running and no one will be.\nWhat about just adding counter.val++; before return true;? . @kartik-v Now it is working, except case when last image is invalid. I forgot to mention that you should add this code after increasing counter:\nif (counter.val === num_imgs) {\n    self._raise('fileimagesresized');\n}. @kartik-v I was wrong, issue still persist. Lets select one invalid with one valid image and click upload. Then we get request for each image, even for invalid. Now we can only click \"cancel\" button and after uploading next valid image previous dissapear! You can watch it on video. \nWhat is the reason for uploading invalid images? Can just upload function skip invalid images or delete them?\n. @kartik-v What about this?. @kartik-v No offence, but I use your plugin for a long time and I know how to use it correctly. Of course I am returning initialPreview and initialPreviewConfig. Lets add filesorted event to see what images are switched:\nfunction(event, params) {\n    alert('Switched ' + params.stack[params.newIndex].key + \n    ' from index ' + params.oldIndex + ' to index ' + params.newIndex);\n}\nWhen sometimes initalPreviewConfig is in nonalphabetical order and we move for eg. 2.png, then we see in alert that we switched 3.png! You can watch this bug on video.. What about fixing order in initialPreview? It will allow to sort correctly with async: true. You don't understand me. I am talking about situation when all images are uploaded.\nYour enhacement is not related with this issue.. $(\"#w0\").fileinput({\n    'uploadUrl': '/image/upload',\n    'async': true,\n});\n$('#w0').on('filesorted', function(event) {\n    function(event, params) {\n        //parms.stack[params.newIndex] is image which we moved\n        alert('Moved ' + params.stack[params.newIndex].key + ' from index ' + params.oldIndex + ' to index ' + params.newIndex);\n        }\n});\nYou can see on video (0:24 and 0:44) that when I moved 2.png, I got alert Switched 3.png ... It is caused because wrong order in initalPreviewConfig.\nBut when initalPreviewConfig after upload was [\"1.png\",\"2.png\",\"3.png\"] (1:08 on video), then moving 2.png resulted with correct alert Switched 2.png ...\nCurrently initalPreviewConfig depends on response's end time and not always earlier started request is finished earlier. That is the problem.. Almost perfect, but one problem remains. You removed enhancement for #828 which allowed to sort images uploaded by clicking upload icons. Can you restore it and make working along with https://github.com/kartik-v/bootstrap-fileinput/commit/0aab773b9c8f2a331d61b490438ea3c539e8bd71?. Still not working: fiddle. @blacko2017 this is temporary workaround and wont help\n@kartik-v After these commits issue happen: https://github.com/kartik-v/bootstrap-fileinput/commit/ec1ebeece4c4eb112b0e712822388c56fa39de5b2fd40c4f06c46fb19bca45e6f23cb8c8dc505b53 https://github.com/kartik-v/bootstrap-fileinput/commit/2fd40c4f06c46fb19bca45e6f23cb8c8dc505b53. ",
    "chriscant": "I found that raising fileimageresized in _getResizedImage() seems to fix the extra case when no resize needed:\nif (width === maxWidth && height === maxHeight) {\n                self._raise('fileimageresized', [pid, ind]);\n                return true;\n            }\n. Incidentally, the resize process happens even if the image is smaller than the maximum ie when the ratio is 1. The resize could be avoided in this case - don't forget to fire fileimageresized.\n. ",
    "lkseoqkr": "miss registered\n. miss registered\n. This is minor issue. And most bootstrap file upload samples have the same issue as long as I test samples on the internet.\n. ",
    "pavv": "I don't know if this is the best way to solve this issue, but it does work: it seems to me that the problem is that the file input is reset after setting the error message, which triggers the change event, which removes the error message. Using drag-and-drop there is no problem, because the value of the fileinput is always \"\". If I add self._clearFileInput(); after tfiles = e.target.files; (line 2769), then the error message is displayed after trying to upload the file. This is because reset doesn't trigger change, because the value of the fileinput is already \"\".\n. The trouble is that the special handling doesn't get executed in this case - the conditon isEmpty($el.val()) is not met (using the button sets the value of the file input to the chosen file path, whereas drag-and-drop leaves the value empty). Reproducing this problem requires at least a mockup of a service - unfortunately I work on an internal application and I don't have anywhere to host something like that, or else I'd set something up to demonstrate this. \n. From what I remember when I was trying to fix this yesterday, reset is run after upload completion. At that point the native file input is not yet cleared, so isEmpty($el.val()) returns false (maybe that's the problem - should the native file input be cleared before completion?).\n. ",
    "davepgrant": "Hi, I just wanted to confirm that I am also experiencing this same issue in the latest version. Thanks pavv for the \"fix\"!. ",
    "zhangwei900808": "then I remove the \"class=\"file\"\" is better to work\n. ",
    "tomascrespo": "Finally I get this working using ASP.NET, with a Generic Handler file (ashx). \nTrying to get upluadExtraData throug asp classic its not possible.\n. ",
    "alterhu2020": "I encounter this issue too ,anyone know how to process  it to review just give the preview's background icon instead >. ",
    "manoelcalixto": "+1\n. ",
    "hjdo": "@kartik-v \nThank you very much!\nThe problem has been solved.\n. ",
    "avukonke": "Noted. It's a bit hard to find in the documentation, there's lot's of options. But your answer solves my issue.\nThanks.\n. ",
    "simoratax": "in node js\n2016-11-11 8:13 GMT+00:00 biglat notifications@github.com:\n\nHi,\nThanks for your Plugins,\nI Have HTTP Error 405.0 - Method Not Allowed on Ajax Upload.\nSo Please Help Me To Resolve it\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/797, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AKxj86h_2tpJjEYwmuCdXEKo_yftpGv-ks5q9COogaJpZM4KvhSZ\n.\n. or php\n\n2016-11-11 23:41 GMT+00:00 MED Zarr zarrouki1991@gmail.com:\n\nin node js\n2016-11-11 8:13 GMT+00:00 biglat notifications@github.com:\n\nHi,\nThanks for your Plugins,\nI Have HTTP Error 405.0 - Method Not Allowed on Ajax Upload.\nSo Please Help Me To Resolve it\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/797, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AKxj86h_2tpJjEYwmuCdXEKo_yftpGv-ks5q9COogaJpZM4KvhSZ\n.\n. \n\n",
    "biglat": "In Asp.Net\n. ",
    "YlianEstevez": "After some hours, I founded a solution that works. Everything depends on html syntax. I replaced the previous interface code by this one, and it works.\n<form id=\"myform\" class=\"text-center\"  method=\"post\" enctype=\"multipart/form-data\">\n<input id=\"uplimages\" name=\"uplimages[]\" multiple type=\"file\" class=\"file-loading\" data-allowed-file-extensions='[\"jpg\", \"png\", \"jpeg\"]'>\n</form>\nSo I just added a <form tag with everything but the action parameter, removed the data-upload-url parameter on the input-file tag and remove my unuseful hidden tags. I think that mainly, the problem was a kind of priority of the html5 data-upload-url param on the fileinput event.\nhope it helps. \n. ",
    "HusamAamer": "I have the same issue in Safari :(. ",
    "kstolarczyk": "Still freezing on IE 10/11. ",
    "OBDE": "updated hu.js \ud83d\udc4d \n. ",
    "emilas44": "I think this is exactly my issue also....\nhttp://stackoverflow.com/questions/40998287/krajee-bootstrap-file-upload-plugin-previewfileiconsettings\nwe need help!!!. It's simple like in my question on SO http://stackoverflow.com/questions/40998287/krajee-bootstrap-file-upload-plugin-previewfileiconsettings\nI am using the form upload method - no ajax. And when i choose the files the icons are shown for each file type and for images i get the preview....but when i go to edit view i load those files from my folder and images have preview but all other files are shown like there is no image (see on Stack overflow question) and that is true that there is no image but why it doesn't load the icon for that file type?. OK i see...that was my inquiry to recognize the file type from server and show the file icon accordingly. But i solved it other way around....this was my next question on SO: http://stackoverflow.com/questions/41013883/laravel-blade-show-fa-icon-dependable-on-file-type/41014105#41014105\nI don't have an image preview but i have the icon for any file type i have uploaded. That would be cool. ",
    "dams0142": "@kartik-v Thank you for your answers. This would be an amazing update if we could have the possibility to override the file content with an icon, in the thumbnail.\nKeep up the great work !. ",
    "benoitproxi": "When my image is too big or the width or height are too small, nothing is sent, my ajax url get Null and at this point I don't know if I can get something else from the plugin.\nWhen my image is valid, I get the file from the plugin and the image is correctly uploaded.\nIs it a normal behavior for the plugin to send an ajax request with null when the image isn't validated by the plugin ?. Okay, thank you, it's working fine with getFileStack ;). ",
    "adrien-quillivic": "Hi,\njavascript\nvar extradata = {};\nextradata[\"action\"] = \"upload\";\n$(\"#inputImage\").fileinput({\n    initialPreview: [],\n    initialPreviewAsData: true,\n    initialPreviewConfig: [],\n    uploadUrl: \"./ajax/manageImage.aspx\",\n    deleteUrl: \"./ajax/manageImage.aspx\",\n    uploadAsync: true,\n    maxFileCount: 6,\n    validateInitialCount: true,\n    overwriteInitial: false,\n    language: \"fr\",\n    previewFileType: \"image\",\n    browseClass: \"btn btn-info\",\n    browseLabel: \"S\u00e9lection Image\",\n    browseIcon: \"<i class=\\\"glyphicon glyphicon-picture\\\"></i> \",\n    removeClass: \"btn btn-danger\",\n    removeLabel: \"Supprimer\",\n    removeIcon: \"<i class=\\\"glyphicon glyphicon-trash\\\"></i> \",\n    uploadClass: \"btn btn-success\",\n    uploadLabel: \"Importer\",\n    uploadIcon: \"<i class=\\\"glyphicon glyphicon-upload\\\"></i> \",\n    allowedFileExtensions: [\"jpg\",\"jpeg\", \"png\", \"gif\", \"bmp\",\"JPG\", \"JPEG\", \"PNG\", \"GIF\", \"BMP\"],\n    //maxImageWidth: 800,\n    //maxImageHeight: 600,\n    //resizePreference: \"height\",\n    //resizeImage: true,\n    uploadExtraData: extradata,\n    fileActionSettings: {\n        dragIcon:\"<i class=\\\"glyphicon glyphicon-move\\\" aria-hidden=\\\"true\\\"></i>\"\n    }\n});\nBy commenting those configuration line in declaration of the plugin, the issue doesn't seem to occur again.\nI still think it's a plugin bug probably located in the resize.\nAnyway, this has solved my issue.\nThanks again for that great plugin.. ",
    "blacko2017": "@kartik-v  i tested 4.3.9 and it still has duplicates, it seems like Multiple Upload button fires the InitReplace twice. Same problem here with 4.3.9. @kartik-v  I don't know if this can help you but I fixed it using this on the input element:\n$(this).closest('.file-input').find('.fileinput-upload').unbind('click').click(function(e){\n                    e.preventDefault();\n                    $(this).closest('.file-input').find('.file-preview .kv-file-upload').click();\n     });\nWhich simple clicks each upload button. I confirm, it works.\n2017-03-07 12:17 GMT+01:00 Kartik Visweswaran notifications@github.com:\n\nThis is resolved now.... you may check and update.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/890#issuecomment-284693914,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AZAa2_bHGT_745xGDoKeWRtPMcvBzrT8ks5rjTzfgaJpZM4MTbrY\n.\n. @kartik-v  Now there is a new problem. If you click Multiple upload button on a non-multiple file, the removeInitial does not work.\n1. You have an image for initialPreview and you set removeInitial true;\n2. You select another image, the initialPreview disappears;\n3. You press Upload and the first initial preview appears again.. \n\nAfter changing the image the third time, it shows all old previews.. Ok I found that ClearStack removes only not-uploaded files, so it is working.\nAbout the not-overwriting problem, I found that in my case the problem is the command in row 1663:\nself.overwriteInitial = false;\nIt disables overwriteInitial after first upload. But in the case of a single upload, it should be ALWAYS overwrote. So it's not an issue/bug but it should be introduced in my opinion!\nEdit\nFinally found a solution:\nif(self.$element.attr('multiple'))\n                    self.overwriteInitial = false;. ",
    "wat4dog": "First of all: thanks for all your plugins :) @kartik-v \nIMHO, it's better to remove :visible from this line. It worked okay in version 4.3.5, and in version 4.3.6 :visible selector added, and of course, if fileinput is not visible on document loading, it won't work. \nTo re-init plugin, required to setup additional hooks (tab switching, etc), but w/o :visible selector it's not required at all. I'm not lazy, just surprised, when it stopped to work after months. Any real purpose to use visibility check here?\nhttps://github.com/kartik-v/bootstrap-fileinput/blob/master/js/fileinput.js#L1375. ",
    "SamMousa": "Did some more research; the primary reasons for using AJAX seems to be allowing the removal of individual files from the upload and appending files to the form.\nScenario 1: Unselecting files.\n\nDropping 10 files.\nUnselecting 1 file.\nThis is not possible currently via the API, it is also not technically what happens with AJAX, since all files are uploaded.\n\nWorkaround is to simply upload them all but mark the deleted ones as irrelevant. This would not be visible to the user.\nScenario 2:\n\nDrop  5 files.\nDrop 5 more files.\n\nWorkaround is to add a new (hidden) file input for each drop action. Again this does not have to be visible for the user.\nScenario 2 does not require any changes to the server side code; scenario 1 does require the server side code to ignore some files.\n. @kartik-v You can actually set the file input to the result of the drag and drop operation.\nhttps://jsfiddle.net/w4rrkrdL/7/. Will do!\nOn Dec 22, 2016 8:44 PM, \"Kartik Visweswaran\" notifications@github.com\nwrote:\n\nDo not think the above is a browser standard (since assigning value to a\nnative HTML file input is blocked by browsers for security reasons) - have\nyou tried it on IE for example?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/818#issuecomment-268875497,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAhYzUVR7KgO814fCJSS6bsGqDjjBCt3ks5rKtMQgaJpZM4LTy20\n.\n. \n",
    "stuartcusackie": "I am getting this problem today. Using version 4.3.6 (4.3.7 is not available on npm)\nMany thanks for the package!. ",
    "bmrainc": "I do it by another way! Tks!. ",
    "uagrace": "@mohammadsj, Try version 4.3.5. ",
    "cicadabear": "Pressing the delete button doesn't do anything in the latest version 4.4.2. But changing to version 4.3.5, it's ok. And in the demo ajax scenario 3 example, that doesn't work as well. Please check. @kartik-v. ",
    "buglinjo": "@CicadaBear I have downgraded it too because of that.. ",
    "kvermeille": "Bump. ",
    "vasanthsr": "Hi Kartik, Remove button is not visible on recent versions (v4.4.8 and v4.4.9) when initialPreview is displayed. \nIs there a workaround to get Remove button displayed when displaying the image from server on page load.\nThanks. ",
    "barera14": "Hello Friend. I have a question I am using to upload files but at the moment of deleting it, the filepredelete action does not work for me. I have to preload in the initialPreview to be able to eliminate it should not leave that option without nesecidad of that \nthanks. ",
    "Dannyson": "The button is being rendered but it is hidden by css\n.file-input-ajax-new .fileinput-remove-button { display: none; }\nCurrently I am using the fileinput for user avatar like in the example. Despite not quite understanding whats going on, I dug into the .js and found two things, maybe someone can explain me :-)\nFirst thing is, why some function called _setFileDropZoneTitle sets whether input is new or not. So I added condition if no initial preview is set. But I think that there has to be some beter place to check if the input is new or another logic into css has to be added. Maybe file-input-ajax-new should be added only if file-input-new was present.\n_setFileDropZoneTitle: function () {\n...\nif (!self._hasInitialPreview()) {\n   self.$container.removeClass('file-input-new');\n   $h.addCss(self.$container, 'file-input-ajax-new');\n}\nBut _asInitialPreview() also didnt work as expected, because we have initial preview only if it cant be overwritten? So i removed this part of condition \n_hasInitialPreview: function () {\n    var self = this;\n    return self.previewCache.count();\n}\nand now it works as expected. If some picture is set as initial preview, the remove button is displayed, when pushed or no initial preview is set, remove button is not visible.. This is caused by mobile Safari. It autoorients pictures with EXIF information. So basically fileinput autoorients this picture, displays and Safari takes it, finds EXIF and rotates it again.\nSee for example https://github.com/fengyuanchen/cropper/issues/120. ",
    "itajackass": "Some problem like @Dannyson ! I've an avatar preview initialized. If I want to remove the pic, I can't cause button Remove is not initialized. I've to upload a new image then remove button appear and i can't remove pic. (no-ajax version).\nAny fix?. Sorry i don't understand where exactly i need to put your code...\nEDIT: ok i've understand now... inside data-url of my input file,is it true?\nIn this case i don't get a good result cause i'm still see the zoom button, and delete button is active!\nAfter some debug i see i need to get an empty value here to work:\ninitialPreview: [ ]    // this works\nSo i need a function to return an empty value, for example i tried:\ninitialPreview: [ function(){return '';}]   // this doesn't work..why??\nDoesn't work as expected and i don't know why. HI, any chance to get working this line of code?\ninitialPreview: [ function(){return '';}]      // output    initialPreview: [ ]\n\nThanks. ",
    "maodei": "var files = $('#input-id').fileinput('getFileStack'); // returns file list selected. ",
    "jlsicajan": "It does not work with initialPreview. ",
    "wenbaofu": "I had red source code,I find below function will handle the click event,and the create the page of preview\njs\n_initZoomButton: function () {\n            var self = this;\n            self.$preview.find('.kv-file-zoom').each(function () {\n                var $el = $(this);\n                handler($el, 'click', function () {\n                    self._zoomPreview($el);\n                });\n            });\n        },\nif \uff29should add a button in my page with class \"kv-file-zoom\" ?. ",
    "dcy": "@cristinaITdeveloper Have you done Crop Image with bootstrap-fileinput?. @kartik-v Can you write a demo for Crop Image?. Can i get the file object like onFileChange's e.target.files[0]?\n.on('fileimageresized', function(event, previewId, index) {\n            var img = _.first(document.getElementById(previewId).getElementsByTagName(\"img\"))\n        })\nDon't know how to continue.. ",
    "erenmustafaozdal": "Hi @dcy . This may be a basic example for you:\n```\n// HTML\n\n// JS\n$('input[name=\"photo\"]').fileinput({\n    // fileinput options\n}).on('fileimageloaded', function(event, previewId) {\n    $('#' + previewId).find('img.file-preview-image').JCrop({\n        // jcrop options\n    });\n})\n```. ",
    "wdcxc": "I found these code work out\n$(\"#uploadImage\").fileinput({\n            ajaxSettings:{\n                beforeSend: function(xhr, settings) {\n                    if (!this.crossDomain) {\n                        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken-cookie);\n                    }\n                }\n            },\n});. ",
    "pt12lol": "@wdcxc even not getting it from cookie, calling $('[name=\"csrfmiddlewaretoken\"]').val() is all we need.. ",
    "AlexXiong97": "@pt12lol Could you please elaborate a bit more on your solution please? what should I include in my jQuery to pass the csrf_token validation?\nAnd also, do you mind giving an example of using boostrap-fileinput with Django FileField with upload path specification?\nThanks!. ",
    "Lin510": "validateInitialCount did the job.\nNumber of files selected for upload (5) exceeds maximum allowed limit of 4.\nThank you. ",
    "ramakrishnamundru": "It is there. try searcing for owed once in the min file.\n\n. ",
    "pedroadame": "Well... at least I think that when you set caption to false it should display \"Invalid file\" as the error message because \"No selected files\" is a little bit confusing since you have to delete the file you uploaded. I used this modifying the locale as a workaround.. Sorry it was a typo in the issue. In my code there is allowedFileExtensions.\nThe point is that I do not want caption but I want an error message. To workaround this, all I needed to do is change msgNoFilesSelected (shown in the \"file\" field when a not allowed file is selected, and then you have to press \"delete\") to \"Invalid file\", so the user knows he need to delete the selected file. Btw, this string is not set in the \"es\" locale. Should be \"No hay archivos seleccionados\".. ",
    "xqxian": "@kartik-v \nSimply I used the Form Submission Mode first (the first two parts of code above), but found that only the last input field will be validated properly. So I tried the Ajax Mode and changed my code to the last part, but it didn't triggered any validation when I clicked the submit button (now I know maybe I'm combining both modes in this way). Due to the specifics of my project I don't want the users to upload individual file and I want to use my own submit button, so I think the Form Submission Mode is more suitable for me. Sorry to make you confused but the min-file validation in Form Submission Mode really have some problems. I've updated the first comment a little bit and hope you can understand what I mean now. : ). ",
    "dendral": "Hello @kartik-v I am getting the same issue that @xqxian reported. Basically, if I define more than one input-file inside the same html-form (Form Submission Mode), the plugin only validates the last one in the form. I used the example page included in the download *.zip\n<form enctype=\"multipart/form-data\">\n        <input id=\"file-one\" class=\"file\" type=\"file\" multiple data-min-file-count=\"1\">\n        <br>\n        <input id=\"file-two\" class=\"file\" type=\"file\" multiple data-min-file-count=\"2\">\n        <br>\n        <input id=\"file-three\" class=\"file\" type=\"file\" multiple data-min-file-count=\"3\">\n        <br>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        <button type=\"reset\" class=\"btn btn-default\">Reset</button>\n</form>\n\nThank you in advance.\n. ",
    "xtremescorpio": "i have an issue, i have 2 files in initial preview, then add 1 file\ngetFilesCount = 1\nthen delete 1 file fromo initial preview\nand then getFilesCount = 0\nwhen i do ajax upload $_FILES have 0 files\nWhat can i do ?. ",
    "pawansgi92": "I am uploading the video i am able to play the video but no preview is showing. ",
    "nWidart": "Setting showPreview to false, removes the animation, however it also removes the preview images. I'm guessing now the time it takes to load in all images, is the time to create the preview ?. ",
    "ailley": "\n\nNo parameter values when uploading\n. ",
    "Bhoft": "I guess this is normal, because for multiple file upload only new added files should be uploaded.\nIf ajax upload is enabled the files could be uploaded in between each \"browse + add\".\nWhen i follow his steps i only see thumbnails of the last added files. Which is correct in my opinion. Because if every file is added to the widget when selected in browse to the has to be uploaded files list there is no possibility to \"delete\" them from the list. Because the delete button is only visible for already uploaded files.\nI have another issue regarding multiple files upload. Which i guess could have something to do with this issue (maybe something was changed in the meantime to fix this issue)\nI have also a multi upload widget (but without ajax upload)\nI have these filesnames \"file1.pdf\", \"file2.pdf\" , \"file3.pdf\", \"file4.pdf\".\ne.g. i have added these 3 files though browse to an empty upload\n\"file1.pdf\", \"file2.pdf\" , \"file3.pdf\"\nAll 3 files are shown in the preview.\nBut I added those 3 files by mistake and wanted to add the files 2, 3 and 4.\nSo i click browse select those files and add them.\nBut what happens only the \"file 4\" is shown in the preview.\nSo it looks like that the js which renders the widget doesn't add the others.\nOther test i add \"file1.pdf\", \"file2.pdf\" , \"file3.pdf\" to an empty widget.\nAnd add the same files again. No file is then in the preview (and also not uploaded). The widget is empty.\nOnly after adding the files a 3rd time the files are visible in the preview and uploaded.\nI guess there is somewhere a check if some file is already added and permitted if added again.\nThis could be easily checked here by trying to upload the same files again\nhttps://jsfiddle.net/7z01jb07/7/\n. The problem why this i mentioned above is caused that in the  _change function the tfiles = [] variable is set to empty while the fileIds = self._getFileIds() is set with the fieldids of already added files.\nSo the same filename wouldn't be added again even if it wasn't uploaded yet.\nBut how can this be fixed?\n. @kartik-v yes thats correct, this is what @ruchisheth thought which is an issue.\nBut try the fiddle which I have linked above and add some files. Then click browse and select the same files again. \nResult will be tFiles = [] and no files will be uploaded, which is wrong.\nI don't want to append files. I just click browse and select the same files a second time. Or some additional files because i had forgot to select a relevant file.\n. perfect \ntested it successfully\n. The issue is still there I have created a jsfiddle\nhttps://jsfiddle.net/7z01jb07/1/\nused some demo code from here\nhttp://plugins.krajee.com/file-count-validation-demo\n. Another issue if I use the explorer theme the upload indicator is also removed when I set \nfileActionSettings.showDrag to false\ntogether with\nfileActionSettings.showZoom to false\nMaybe a independent showIndicator setting would  be better instead of checking for fileActions.\nI have no ajax upload enabled for my widget and using just the normal form post method.\nSo there is also no upload button for each preview item. And therefore no fileActions and because of this no upload indicator.\nif you remove this check in the _renderFileActions function everything works as expected.\nAnd the disabled buttons are also not shown \nif (!showUpload && !showDelete && !showZoom && !showDrag) {\n    return '';\n}\nSo either remove this lines or also add an showIndicator setting.\n. Sry to disturb,\nNow the upload indicator isn't shown at all.\nI guess you have forgot to add the {indicator} in the default / explorer template in the footer part.\ne.g. for the explorer theme instead of \nfooter: '<td class=\"file-details-cell\"><div class=\"explorer-caption\" title=\"{caption}\">{caption}</div> ' +\n            '{size}{progress}</td><td class=\"file-actions-cell\">{actions}</td>',\nthis:\nfooter: '<td class=\"file-details-cell\"><div class=\"explorer-caption\" title=\"{caption}\">{caption}</div> ' +\n            '{size}{progress}</td><td class=\"file-actions-cell\">{actions}{indicator}</td>',\nOr you wanted to render the {indicator} in the actions which looks like more possible because you have the {indicator}  in the  tActions = '{indicator}\\n' + '{drag}\\n' +\nBut then you shouldn't do the replace the tag in the footer template inside _renderFileFooter but instead in the _renderFileActions function.\n. It was working the the fiddle above, when you have disabled showDrag and showZoom.\nbut not when you also disabled the ajax upload (e.g. when using form post to upload). Then the indicator is again not visible.\nSee here (try to upload a new image)\nhttps://jsfiddle.net/7z01jb07/2/\nit is still because of this line in _renderFileActions\nif (!showUpload && !showDelete && !showZoom && !showDrag) {\n                return '';\n            }\nbecause showUpload, showDelete, showZoom and  showDrag is false.\nshowUpload is false because self.isUploadable is false (because ajax upload is disabled) anyhow the indicator should be displayed because the file isn't uploaded. The indicator is shown when drag and zoom is enabled. But isn't when both settings are disabled.\nwhy don't you add the {indicator} directly to the footer template part.\nAs it is in my opinion also no \"action\". The progress is also directly in the footer template, so why the indicator shouldn't.\ntFooter = '<div class=\"file-thumbnail-footer\">\\n' +\n                '    <div class=\"file-footer-caption\" title=\"{caption}\">{caption}<br>{size}</div>\\n' +\n                '    {progress} {actions} {indicator}\\n' +\n                '</div>';\n            tActions = '\\n' + '{drag}\\n' +\n                '<div class=\"file-actions\">\\n' +\n                '    <div class=\"file-footer-buttons\">\\n' +\n                '        {upload} {delete} {zoom} {other}' +\n                '    </div>\\n' +\n                '    <div class=\"clearfix\"></div>\\n' +\n                '</div>';\ntest here: \nhttps://jsfiddle.net/7z01jb07/5/\nthen the indicator is rendred independent if an action is rendered or not.\n. looks like it is working now so this issue can be closed. \nthx\nI found 2 other issues but for them i will open new issues.\n. Doesn't work when changing the theme.\nEach Icon is automatically replaced when using yii2-icons version 1.4.5\necho '';\n(I had used your theme with the custom icons \"previewFileIconSettings\" as in your demo)\nArghs I guess I now knew the problem.  The image in font-awesome was renamed file-pfd-o doesn't exists any more and this was only available in fa-4.7 https://fontawesome.com/v4.7.0/icon/file-pdf-o\nAs you have removed the 4.x support in yii2-icons i have to replace the icons with the proper v5 icon. \nI had the icon codes from your advanced demo therefore these should also be corrected.\nhttp://plugins.krajee.com/file-krajee-explorer-demo#krajee-explorer-2\n. With the newer yii2-icons (FA5) the code must be like below to get the result as before.\n'previewFileIconSettings' => [\n            'doc' => Icon::show('file-word', ['class' => 'text-primary', 'framework' => Icon::FAR]),\n            'xls' => Icon::show('file-excel', ['class' => 'text-success', 'framework' => Icon::FAR]),\n            'ppt' => Icon::show('file-powerpoint', ['class' => 'text-danger', 'framework' => Icon::FAR]),\n            'pdf' => Icon::show('file-pdf', ['class' => 'text-danger', 'framework' => Icon::FAR]),\n            'zip' => Icon::show('file-archive', ['class' => 'text-muted', 'framework' => Icon::FAR]),\n            'htm' => Icon::show('file-code', ['class' => 'text-info', 'framework' => Icon::FAR]),\n            'txt' => Icon::show('file-alt', ['class' => 'text-info', 'framework' => Icon::FAR]),\n            'mov' => Icon::show('file-video', ['class' => 'text-warning', 'framework' => Icon::FAR]),\n            'mp3' => Icon::show('file-audio', ['class' => 'text-warning', 'framework' => Icon::FAR]),\n            'jpg' => Icon::show('file-image', ['class' => 'text-danger', 'framework' => Icon::FAR]),\n            'gif' => Icon::show('file-image', ['class' => 'text-muted', 'framework' => Icon::FAR]),\n            'png' => Icon::show('file-image', ['class' => 'text-primary', 'framework' => Icon::FAR]),\n        ],. But still in your demo\n\nhttp://plugins.krajee.com/file-krajee-explorer-fas-demo#krajee-explorer-fas-2\nyou have \n <!-- KRAJEE EXPLORER FONT AWESOME 5 THEME (ADVANCED) -->\n previewFileIconSettings: { // configure your icon file extensions\n    'pdf': '<i class=\"fa fa-file-pdf-o text-danger\"></i>',\n\nWhich is wrong as the fa-file-pdf-o doesn't work with FA5 and only with 4.x.\nOr at least is replaced with the !? svg icon as the original icon isn't found.\nThe correct name would be file-pdfwith FAR.\nSee table here:\nhttps://fontawesome.com/how-to-use/on-the-web/setup/upgrading-from-version-4#name-changes\n. I think it`s ok now :)\n. Not sure what you have done on your demo page.  http://plugins.krajee.com/file-krajee-explorer-fas-demo\nIt currently throws a JS error \"{icons}\" and nothing is rendered atm. \nBut I guess you are currently changing / testing something.. ",
    "joker-pper": "why i can't find history version in http://plugins.krajee.com/file-input. ",
    "stylekrasota": "Could I upload small image (Image preview) using this JS?\nCode:\n$(\"#photosFileInput\").on('filesorted', function(e){\n    $(\"#goodMainPhoto\").attr('src', $(\".file-preview-thumbnails:first-child\nimg\").prop('src'));\nvar a = $(\".file-preview-thumbnails > .file-preview-frame\n\n.kv-file-content img\"),\n        items = new Array(),\n        good = null;\n$.each(a, function(index, item){\n    item = $(item);\n\n    items.push(item.attr('data-ico'));\n    good = item.attr(\"data-itemID\");\n})\n\n$.ajax({\ntype: 'POST',\nurl: '/goods/photo?act=reorder',\ndata: {\n    items: items,\n    key: good\n}\n\n});\n}).on('fileuploaded', function(event, data, previewId, index){\nvar image = $(\"#\" + previewId);\n\nimage.toggleClass('file-preview-success, file-preview-initial,\n\nfile-sortable');\nimage.find(\".file-upload-indicator\")\n    .replaceWith('<span class=\"file-drag-handle drag-handle-init\n\ntext-info\" title=\"Move / Rearrange\">');\nimage.find(\".kv-file-content img\")\n    .attr('data-itemid', data.extra.key)\n    .attr('data-order', ($(\".file-preview-thumbnails\n\n.file-preview-frame\").length + 1));\n$(\".file-input .file-initial-thumbs\").append(image);\n\n$('.file-preview-thumbnails .kv-preview-thumb\n\n.file-thumb-progress:not(.hide) .progress-bar-striped.active').length > 0 ?\n'' : $('.kv-upload-progress').addClass('hide');\n}).on('filedeleted', function(){\n    var src = $(\".file-preview-thumbnails\n.kv-preview-thumb:not(.file-uploading)\").first().find(\"img\").prop('src');\n    $(\"#goodMainPhoto\").attr('src', (src == undefined ? '' : src));\n});\n2017-03-31 8:29 GMT+03:00 Kartik Visweswaran notifications@github.com:\n\nCannot understand your issue. Please share a JS Fiddle to reproduce your\nissue.\nReordering is only possible for initialPreview content.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/908#issuecomment-290619777,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGqRu_Pp-Dae6CfQe5JmtrXBNj87EsHdks5rrI9LgaJpZM4Mn89p\n.\n\n\n-- \n\u0421 \u0443\u0432\u0430\u0436\u0435\u043d\u0438\u0435\u043c,\n\u0420\u0443\u0441\u043b\u0430\u043d.\n. ",
    "298029lkk": ".on(\"filebatchselected\", function (event, files) {\nif (files[0].size < 1024 * 1000) {\n$(this).fileinput({\nresizeImage: false,\n});\n$(this).fileinput(\"upload\");\n} else {\n$(this).fileinput({\nresizeImage: true,\n});\n}\n}).on('fileimageresized', function (event, previewId, index) {\n$(this).fileinput(\"upload\");\n})\n\nIs there any advice?\n. cool! thank you! . ",
    "Sharuru": "All right, after investigating, I found the answer.\nA little change was made to fileinput.js just one day ago.\nLink is here: https://github.com/kartik-v/bootstrap-fileinput/commit/5515c0fca85a8f2637243272f740ab1d0c67a8ab\nI've confirmed that this change fixed the problem.\nWhat coincidence \ud83e\udd42 \n. ",
    "hitesh279": "Thanks for the reply.My only concern is, in the response I got error as\nan parameter. But it is not catch by the filebatchuploaderror and fileerror\nand also I did change uploadAsync as false and true accordingly. It still goes inside filebatchuploadsuccess and the progress bar shows as 100%....It does not work can you please suggest something on this.\n. \n. ",
    "chnpassion": "thanks a lot ,I go study and check\uff01. from demo,chang my code ,It's ok!\nthanks a lot again!. ",
    "lllito": "layoutTemplates:{\n                actions: '<div class=\"file-actions\">\\n' +\n                    '    <div class=\"file-footer-buttons\">\\n' +\n                    '        {upload} {delete} {zoom} {other}' +\n                    '    </div>\\n' +\n                    '    {drag}\\n' +\n                    '    <div class=\"file-upload-indicator\" title=\"{indicatorTitle}\">{indicator}</div>\\n' +\n                    '    <div class=\"clearfix\"></div>\\n' +\n                    '</div>',\n                actionDelete: '<button type=\"button\" class=\"kv-file-remove btn-primary {removeClass}\" title=\"{removeTitle}\"{dataUrl}{dataKey}>{removeIcon}</button>\\n',\n                actionUpload: '<button type=\"button\" class=\"kv-file-upload {uploadClass}\" title=\"{uploadTitle}\">{uploadIcon}</button>\\n',\n                actionZoom: '<button type=\"button\" class=\"kv-file-zoom {zoomClass}\" title=\"{zoomTitle}\">{zoomIcon}</button>',\n                actionDrag: '<span class=\"file-drag-handle {dragClass}\" title=\"{dragTitle}\">{dragIcon}</span>'\n        }. ",
    "b00f": "Please change CRLF to LF before merging. thanks. ",
    "pablogrela": "Thanks\n$(\"#file-input\").fileinput({\nlanguage : 'en',\nuploadUrl : '#', // you must set a valid URL here else you will get an error\nmaxFilesNum : 10,\nfileActionSettings : {\n       // Disable\n    showUpload : false,\n},\nslugCallback : function(filename) {\n    return filename.replace('(', '').replace(']', '');\n}\n})`\n. ",
    "havpet": "Line 88: \"View\" should be \"Vis\".. ",
    "erikbjorvik": "@havpet fixed. . ",
    "ruchisheth": "Its already set to true. Able to display preview icon. but in zoom view its not playing audio\n. \n\n. This is my output but it displaying control only. Song is not getting played. and also it shows song length 0. This is my output but it displaying control only. Song is not getting played. and also it shows song length 0\n\n\n. ",
    "mecheri": "Hi @kartik-v ,\nCan you please show how to  update the initialPreview of the plugin after upload of a file\nthanks. Hi @kartik-v \nThanks for your quick answer but what about initialPreviewThumbTags. When i set the server response like this: \n    $object = new \\stdClass();\n    $object->error = '';\n    $object->errorkeys = [];\n    $object->initialPreview = $ip;\n    $object->initialPreviewConfig = $ipconfig;\n    $object->initialPreviewThumbTags = [];\n    $object->append = false;\n    return response()->json($object);\n\nI get a client-side error related to tags that are not defined\n\nwhen I comment this line in js plugin file it works well\nif (data.tags.length && data.tags[i]) {\n     out = $h.replaceTags(out, data.tags[i]);\n}\nThanks. @kartik-v i fixed the error by adding this \n$object->initialPreviewThumbTags = [new \\stdClass()];\ninstead of\n$object->initialPreviewThumbTags = []; \nThanks a lot your are doing a very good job. ",
    "hezhongjie": "i am waiting . . . . \u4f46\u662f,\u5728\u6211\u7684\u9879\u76ee\u4e2d,\u4e0a\u4f20\u56fe\u7247\u6210\u529f\u540e,stackFile\u4e2d\u7684\u6587\u4ef6\u6570\u91cf\u4e0d\u53d8,\u59cb\u7ec8\u53ea\u6709\u4e00\u4e2a,\u800c\u4e14\u81ea\u52a8\u751f\u6210\u7684\u9884\u89c8\u56fe\u7684\u6587\u4ef6\u7684\u7236\u7ea7\u5143\u7d20\u7684id \u6bcf\u4e2a\u90fd\u662f preload + \u65f6\u95f4\u6233 ,\u4ed6\u4eec\u7684ID\u90fd\u4e00\u6837,\u6240\u4ee5\u6211\u5728\u56de\u8c03\u51fd\u6570\u4e2d\u62ff\u5230\u7684previewid \u6839\u672c\u65e0\u6cd5\u786e\u8ba4\u88ab\u5220\u9664\u7684\u56fe\u7247\u662f\u54ea\u4e2a?. ",
    "willisaway": "js\n$('#kv-explorer').on('filesuccessremove', function(event, previewId, index) {\n            var url = '/attachment/delete';\n            $.ajax({\n                type: \"post\",\n                url: url,\n                data: {file_id:previewId},\n                //dataType: \"json\",\n                success: function (result) {\n                    if(result.returnValue>0){\n                        alert(\"\u5220\u9664\u6210\u529f\");\n                    }else{\n                        alert(result.returnMessage);\n                    }\n                },\n                error:function(response){\n                    alert(\"\u5220\u9664\u5931\u8d25\");\n                    console.log(\"\u66f4\u65b0\u5931\u8d25\");\n                }\n            });\n        });\n\u6211\u662f\u5728\u89e6\u53d1\u5220\u9664\u4e8b\u4ef6\u56de\u8c03\u540e\uff0c\u901a\u77e5\u540e\u53f0\u7684. \u6211\u6539\u4e86\u4e00\u4e0b\u6e90\u7801\uff0c\u4f60\u5728\u6e90\u7801\u91cc\u641c\u4e00\u4e0bfile_id,\n\u6211\u6539\u6210\u8fd9\u6837\u4e86formdata.append('file_id', previewId);. ",
    "kunl": "@hezhongjie \u6211\u4e5f\u662f\uff0c\u4e0d\u80fd\u786e\u5b9a\u5220\u9664\u7684\u662f\u54ea\u4e2a. ",
    "wzhenhang": "\u65e2\u7136\u90fd\u662f\u4e2d\u56fd\u4eba\u6211\u5c31\u8bf4\u4e2d\u6587\u4e86\uff1a\n\u8fd9\u662f\u56e0\u4e3a\u5728\u6e90\u7801\u4e2d\u5b58\u5728\u4ee5\u4e0b\u4ee3\u7801\uff1a\n        _resetFileStack: function () {\n            var self = this, i = 0, newstack = [], newnames = [];\n            self._getThumbs().each(function () {\n                var $thumb = $(this), ind = $thumb.attr('data-fileindex'),\n                    file = self.filestack[ind];\n                if (ind === -1) {\n                    return;\n                }\n                if (file !== undefined) {\n                    newstack[i] = file;\n                    newnames[i] = self._getFileName(file);\n                    $thumb.attr({\n                        'id': self.previewInitId + '-' + i,\n                        'data-fileindex': i\n                    });\n                    i++;\n                } else {\n                    $thumb.attr({\n                        'id': 'uploaded-' + uniqId(),\n                        'data-fileindex': '-1'\n                    });\n                }\n            });\n            self.filestack = newstack;\n            self.filenames = newnames;\n        },\n\u8fd9\u6bb5\u4ee3\u7801\u5728mutiple\u6a21\u5f0f\u4e0b\u5fc5\u5b9a\u4f1a\u6267\u884c\uff0c\u53ea\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\u65f6\u6709\u65f6\u4f1a\u6267\u884c\uff0c\u4e00\u65e6\u6267\u884c\uff0c\u4f1a\u5c06previewId\u4fee\u6539\u4e3a\u4e00\u4e2a\u65b0\u5f97id\uff0c\u4e14\u4e22\u5931\u5e8f\u53f7\uff0c\u5bfc\u81f4\u5220\u9664\u65f6\u83b7\u53d6\u5230\u5f97\u662f\u65b0\u7684id\uff0c\u5982\u679c\u5bf9\u4ee5\u4e0a\u4ee3\u7801\u8fdb\u884c\u4fee\u6539\u4e3a\u5982\u4e0b\uff1a\n    _resetFileStack: function () {\n        var self = this, i = 0, newstack = [], newnames = [];\n        self._getThumbs().each(function () {\n            var $thumb = $(this), ind = $thumb.attr('data-fileindex'),\n                file = self.filestack[ind];\n            if (ind === -1) {\n                return;\n            }\n            //if (file !== undefined) {\n                newstack[i] = file;\n                newnames[i] = self._getFileName(file);\n                $thumb.attr({\n                    'id': self.previewInitId + '-' + i,\n                    'data-fileindex': i\n                });\n                i++;\n            //} else {\n            //    $thumb.attr({\n            //        'id': 'uploaded-' + uniqId(),\n            //        'data-fileindex': '-1'\n            //    });\n            //}\n        });\n        self.filestack = newstack;\n        self.filenames = newnames;\n    },\n\n\u5219\u53ef\u4ee5\u505a\u5230\u5220\u9664\u6307\u5b9a\u5bf9\u8c61\uff0c\u4f46\u8fd9\u79cd\u65b9\u5f0f\u4e3a\u4fb5\u5165\u5f0f\u7684\uff0c\u6240\u4ee5\u6211\u7684\u95ee\u9898\u662f\uff1a1.\u8fd9\u6837\u4fee\u6539\u4f1a\u4e0d\u4f1a\u5bfc\u81f4\u65b0\u7684bug\uff1b2.\u662f\u5426\u6709\u975e\u4fb5\u5165\u5f0f\u7684\u4fee\u6539\u65b9\u6cd5\uff1b3.\u4e3a\u4ec0\u4e48\u6e90\u7801\u4e2d\u4f1a\u6709\u8fd9\u79cd\u66ff\u6362\u6389id\u7684\u903b\u8f91\uff0c\u8d77\u4ec0\u4e48\u4f5c\u7528\uff1f\n\u6709\u4eba\u80fd\u56de\u7b54\u5417\uff1f. ",
    "feeee": "\u66ff\u6362\u6389id\u662f\u56e0\u4e3a\u6bcf\u6b21\u4e0a\u4f20\u6210\u529f\u540e\u518d\u6b21\u70b9\u51fb\u9009\u62e9\u6587\u4ef6\u65f6\uff0c\u7528preview\u505a\u524d\u7f00\u7684\u8fd9\u4e2aid\u4f1a\u91cd\u590d\uff0c\u5bfc\u81f4\u4e0a\u4f20\u6210\u529f\u65f6\u52a8\u753b\u5904\u7406\u54cd\u5e94\u5f02\u5e38\uff0c\u6700\u7ec8\u4ecd\u7136\u65e0\u6cd5\u786e\u8ba4\u5220\u9664\u7684\u5230\u5e95\u662f\u54ea\u4e2a\u6587\u4ef6\uff0c\u65e0\u529b\u5410\u69fd\u3002. ",
    "guangxuanliu": "on the server,my colleague use the key and extra id to delete the picture.. I find where is the problem,at the line 2207 in the source code(fileinput.js),just change \n\nindex = parseInt(($frame.data('fileindex')).replace('init_', ''));\n\nto\n\nindex = parseInt(($frame.attr('data-fileindex')).replace('init_', ''));\n\nI guess maybe in the line 2087 of the function '_deleteFileIndex', the author use $frame.attr to set the attribute,but use data to get the value.so the dom tree can't refresh.\nI also find this in stackoverflow:\n. ",
    "ralphdev22": "Hi. How to remove file indicator? I read your documents but i couldn't find how to remove file indicator. I only found the ff:\nshowUpload: boolean, whether to show the upload button in the thumbnail\nshowRemove: boolean, whether to show the remove button in the thumbnail\nshowZoom: boolean, whether to show the zoom button in the thumbnail\nshowDrag: boolean, whether to show the drag button in the thumbnail (applicable only for initial preview content)\nPlease help me.. Thank you for the response. I'll check it.. Yeah! It works!. Thanks.\nI have another one. How to remove delete button in action bar? \nI tried this\nfileActionSettings : {\n                showRemove: false,\n                showDrag: false,\n                indicatorNew: \"\",\n                indicatorSuccess: \"\",\n                indicatorError: \"\"\n            },\nbut remove button still displayed.... Please help me again.. ",
    "davy2495": "oh\uff0cthank you so much!. ",
    "mariopaisa": "Hello @kartik-v, I get the same problem, I'm going crazy ... I do not know how to solve this error, because I can not replicate it and I do not identify what the root cause is. Please help me\n\n. > ## Prerequisites\n\n\n[x ] I have searched for similar issues in both open and closed tickets and cannot find a duplicate.\n[x ] The issue still exists against the latest master branch of bootstrap-fileinput.\n[x ] This is not an usage question. I confirm having read the plugin documentation and demos.\n[x ] This is not a general programming / coding question. (Those should be directed to the webtips Q & A forum).\n[ x] I have attempted to find the simplest possible steps to reproduce the issue.\n[ ]  I have included a failing test as a pull request (Optional).\n\nSteps to reproduce the issue\n\nAttempt to initiate upload\nGet an error instantly\n\nExpected behavior and actual behavior\nThe code works fine on my online server, but its failing locally instantly.\nIts saying \"Something went wrong with the file upload operation. Please try again later!\".\nIs there any way to get a more descriptive error on what is going wrong?\nEnvironment\nBrowsers\n\n[ ]  Google Chrome\n[ x] Mozilla Firefox\n[ ]  Internet Explorer\n[ ]  Safari\n\nOperating System\n\n[x ] Windows\n[ ]  Mac OS X\n[ ]  Linux\n[ ]  Mobile\n\nLibraries\n\njQuery version: 2.1.1\nbootstrap-fileinput version: 4.4.6\n\nIsolating the problem\n\n[ ]  This bug happens on the plugin demos page\n[ x] The bug happens consistently across all tested browsers\n[ x] This bug happens when using bootstrap-fileinput without other plugins\n[ ]  I can reproduce this bug in a jsbin\n\n\nHi, @exwizzard  could you solve the problem?. ",
    "silencehe09": "I have met the same problem too.\nSteps to reproduce the issue:\n(1) html\n\n\n\n(2) fileinput init option\n$(\"#my-file\").fileinput(\n{\n      uploadUrl: \"/file/upload\",\n      showPreview: false,\n      maxFileCount: 1\n}\n);\n(3) When uploading a file,  if the response from server is not a valid JSON object, but exception stacktrace messages with status code 500,  the server error can't be handled correctly. The reasons are :\na.  \"showPreview\" is set to false  (That's why the bug exists)\nb.  line 1996 in fileinput.js :\nif(self.showPreview)\n{\n    $thumb=$('#'+ previewId+':not(.file-preview-initial)');  // only when showPreview is true, $thumb would be initialized.\n    //...other code\n}\nc. line 2147 in fileinput.js:   error occurs  \"$thumb is undefined\"\nself._setPreviewError($thumb, i, self.filestack[i], self.retryErrorUploads);  . ",
    "jcyuan": "Man, besides I have a requirement.\nIs there a way to always attach some data to ajax request? although I could use uploadExtraData or deleteExtraData or 'extra' config for each preview items but for my case:\nI need to attach an Anti-Forgery token for every ajax reuqests to prevent my site from CSRF attacking.\nuploadExtraData is useful for uploading, I can attach the token.\nbut I think there is no way to put the token into the 'extra' config which generated from the serverside.\nbecause the token cannot be generated by server (client cookie is involved). so I need a way to modify the 'extra' config to add my token variable while deleting.\ntemporarily I inserted a new line:\nextraData = $.extend({}, myCustomGlobalData, extraData);\nat line 2249 of the source code and it works fine.\nor actually there is already a way to do this but I just dont know?\n. thanks man, but I have read your source code, .extra and deleteExtraData only one data will be adopted to submit.\nfrom your source code:\nextraData = isEmpty(config) || isEmpty(config.extra) ? deleteExtraData : config.extra;\nmy extra config generated by server looks like:\nextra : {  id: image-server-id }\nif I set deleteExtraData as your code above, only .extra will be submit.\n. wow! got it, many thanks for the support!. ",
    "robert7git": "wow~\nthank you~\nthanks for help.\nI will read api document seriously next time.\n. ",
    "xahidsana": "plz share delete section code ...  urgently require//\ni done the upload section that properly upload files on  server directory\nbut not delete the upload files from server directory ....\ni try to do this , to  setup initialPreview and initialPreviewConfig .... but it not working. ",
    "bluesun3k1": "But i do have a default image loaded. This issue occurs when I already have a profile image loaded and I intend to change it. Once the new image is loaded onto the preview frame, if i hit the remove button, the entire frame gets removed rather than defaulting back to the previous image.. ",
    "kalevigit": "Estonian locals. ",
    "deluo": "Thanks for your reply which helped me find the problem. I have read the advance demo example#10 and find the key point.\nuploadUrl: \"AjaxHandler/myHandler.ashx\", if I commented out this code,the problem is solved.\nAs you see my IDE is vs2012 \uff0cC# language.\nLook forward to your reply.. ",
    "tsdogs": "I've been able to implement something similar using the templatePreview and the pluginOptions.\n. ",
    "eness": "fixed. the problem was with the element selector that duplicates the selected input element.. ",
    "aperla": "I have the same problem . ",
    "M-Husein": "I don't understand clearly :(\nHow to combine or add more input, example if I use your demo 7 example:\nuploadExtraData:function(){\n        var out = {},key,i = 0;\n        $('.kv-input:visible').each(function(){\n          $el = $(this);\n          key = $el.hasClass('kv-new') ? 'new_'+i : 'init_'+i;\n          out[key] = $el.val();\n          i++;\n        });\n        return out;\n        }\nSo, how to add my custom input, like This:\n,uploadExtraData:function(){\n                return {\n                    album_title:$('input[name=\"title_album\"]').val(),\n                    album_desc:$('textarea[name=\"desc_album\"]').val()\n                };\n            }\nPlease Guide me more, Thanks. So, I just use double uploadExtraData to add my custom input?\nI mean first uploadExtraData I follow with your example 7 and\nAbove I just add uploadExtraData with my custom input.\nHave I got it right??. Yes, I having a problem in writing the code to combine it.\nI mean combine your demo 7 example with my custom input. Sorry I was so troublesome you.\nI have post in your plugin forum with discuss before here. but not respon.\nReally Thanks.. ",
    "sepehrr": "I changed it the way you suggested.. ",
    "cablegunmaster": "Try:  name=\"inputKE2[]\" without the array in html [] . with array it doessnt work with me.. ",
    "teoSalvetti": "Actually also if I remove the [ ] from the name it does't work. I obtain the same problem as before. Have you found any solution?\nI have the same problem (or at least, I think so) I would like to get file name after I uploaded a file and I enter in the same page with the uploader.... @kartik-v maybe I didn't explain it clear enough..\nI'm not using the ajax version, so I'm using the plugin inside a form.. and so I don't have the dropzone..\nSo, can I do it inside a form?. @kartik-v  ok, and I'm using it as you can see above.. But the first time I open the page, I don't have any file, ok?\nSo I don't want to show any preview, but I'll show the preview only after I uploaded a file..\nThis is what I want..\n. ",
    "vertisan": "@kartik-v ?. ",
    "m3ldro": "Thanks for your reply. Actually I read about layoutTemplates but i didn't understood how to use it.. ",
    "marco1486": "do you have a demo on how to do this?. Thanks. ",
    "max-ci": "There is no method for that, you need to send initialPreview and initialPreviewConfig from your PHP server and pass it to the options in fileinput plugin.. I have the same issue. I can't upload again when someone cancel or when there is an error in the response (for example because of bad extraData which I'm validating in PHP).. Thanks for response @kartik-v \nhttp://plugins.krajee.com/file-krajee-explorer-fa-demo \nI checked this demo (first one) and after upload image is still in base64 format so the server not responded with initialPreview\nI checked my HTML and it's fine I think (checked HTML templates and response, for initial preview it's just img tag and for initial preview config is an object with properties). I realised that it only occurs when I'm trying to upload one image, if I add 2 images to input and click on upload all (showUpload button) there is no problem then.. Hi,\nI made a simple demo\nLINK\nAfter image upload you can see in the console what I'm returning.\nIf you try to upload image clicking global Upload button there is no problem. The problem occurs when you try to upload single image clicking on the upload icon in the table.. Any news about this issue @kartik-v?. Tried. Link is updated and I'm returning only link to the image and I set initialPreviewAsData to true. It's strange that it works when you click on global upload button. I think it's an issue with fileinput script. Maybe I'm wrong.. These kind of things you should change in CSS, not JavaScript, eg.:\ncss\n.file-preview {\n  border-radius: 0;\n}. ",
    "meteorlxy": "Looking forward to the next release. ",
    "devocodes": "What I am suggesting is auto uploading a single file at a time without the need of a client to push any buttons, this is a achieved by adding trigger to upload the next file when the previous file has finish uploading, this come in handy with big size files and helps when something goes wrong on the client side like connection loss.\nif its already implemented could you kindly provide the code of how it is done.. @kartik-v have a look pls?. ",
    "BI7PRK": "I have the same problem.  and how to add a radio in the file item?. ",
    "arkyminds-vasikarans": "\n. ",
    "GBraL": "Thank you.. ",
    "phardye": "hi, I am sorry I just see your reply. Here is my example: http://test.pisaya.com/test.html\nPlease upload a picture,and then delete city1,city2 and your uploaded picture. Your will find the upload area  changed small, at this time try to upload a picture, you will see your deleted file. Please try it. If you can not visit this website let me know. Thanks.. no, that was not what  I mean.\nI do meet the problem. Maybe is the problem with my Chrome. I will show you a gif, you can see what i have done. gif url: http://test.pisaya.com/demo.gif\nThat gif is very big, it is up to 2.5MB,please be patient.\nIf you find this problem through this gif,please let me know.\nThanks again! . ",
    "lamoglia": "Hi, You need to set the uploadAsync option to false.. No, that means that the uploads will be serialized one after another (not parallel). ",
    "jcagarcia": "Any news about this new feature?. ",
    "mgjun": "if three file uploaded to server before,next time select a invalid file,the fileuploadederror will trigger three times.why this?. fileInput:{\n        $el:null,\n        fileCounts:0,\n        frameHeight:'145px',\n        default_options:{\n            uploadAsync: false,\n            showCaption: false,\n            showUpload: false,\n            showCancel: false,\n            showClose: false,\n            showRemove: false,\n            showBrowse: false,\n            showUploadedThumbs: false,\n            captionClass: \"col-sm-6\",\n            allowedFileTypes: ['image'],\n            allowedFileExtensions: ['jpg', 'png', 'gif'],\n            maxFileSize: 10*1024,\n            minFileCount: 1,\n            maxFileCount: 5\n        },\n        display_options:{\n            dropZoneTitleClass:\"hide\"\n        },\n        edit_options:{\n            showPreview:true,\n            showUploadedThumbs: true,\n            dragClass:\"hide\",\n            showDrag:false,\n            dropZoneTitle:'drop or browse',\n            removeFromPreviewOnError:true,\n            overwriteInitial: false,\n            elErrorContainer:'hide',\n            previewSettings: {\n                image: {width: \"auto\", height: \"60px\"},\n                html: {width: \"50px\", height: \"40px\"},\n                text: {width: \"50px\", height: \"40px\"},\n                video: {width: \"50px\", height: \"40px\"},\n                audio: {width: \"50px\", height: \"40px\"},\n                flash: {width: \"50px\", height: \"40px\"},\n                object: {width: \"50px\", height: \"auto\"},\n                pdf: {width: \"50px\", height: \"40px\"},\n                other: {width: \"50px\", height: \"40px\"}\n            }\n        },\n        init:function ($el, options, editable) {\n            var _this = this;\n            _this.$el = $el;\n            var ops;\n            ops = editable ? $.extend({},_this.default_options,_this.edit_options) : $.extend({},_this.default_options,_this.display_options);\n            $el.fileinput($.extend({},ops,options));\n        if(editable) {\n            $(\".file-drop-zone\").css(\"min-height\",_this.frameHeight);\n            $el.on(\"filedeleted\",function () {\n                appOption.fileInput.fileCounts--;\n                if(appOption.fileInput.fileCounts <= 0) {\n                    appOption.fileInput.destroy($el).init($el,options,editable);\n                }\n            }).on(\"fileremoved\",function () {\n                appOption.fileInput.fileCounts--;\n                if(appOption.fileInput.fileCounts <= 0) {\n                    appOption.fileInput.destroy($el).init($el,options,editable);\n                }\n            }).on(\"filebatchselected\",function (event, files) {\n                if(files) appOption.fileInput.fileCounts += files.length;\n            }).on(\"fileuploaderror\",function (event, data, msg) {\n                toastr.options.timeOut = 20000;\n                toastr.error(msg);\n            }).on(\"change\",function () {\n                // _this.$el.val(\"\");\n            });\n        }\n    },\n    triggerUpload:function () {\n        this.$el.val(\"\");\n        return this.$el.trigger(\"click\");\n    },\n    destroy:function ($el) {\n        $el.fileinput(\"destroy\");\n        return this;\n    },\n    upload:function ($el) {\n        $el.fileinput(\"upload\");\n        return this;\n    },\n    refresh:function ($el, options) {\n        if(isEmpty(options)) {\n            $el.fileinput(\"refresh\");\n        }else {\n            $el.fileinput(\"refresh\",options);\n        }\n        return this;\n    },\n    progressSuccess:function () {\n        $(\".file-input\").find(\".progress\").html('<div class=\"text-center back-main color-white\">success</div>');\n        $(\".file-preview-loading\").removeClass(\"file-preview-loading\");\n        $(\".file-uploading\").removeClass(\"file-uploading\");\n    },\n    progressFailure:function () {\n        $(\".file-input\").find(\".progress\").html('<div class=\"text-center back-error color-white\">error</div>');\n        $(\".file-preview-loading\").removeClass(\"file-preview-loading\");\n        $(\".file-uploading\").removeClass(\"file-uploading\");\n    }\n},.\n\nI have added event.preventDefault() here,but i was failed.am i wrong?\nAt 2017-07-20 17:52:20, \"erick-x\" notifications@github.com wrote:\nsame question \uff0cyou can add e.preventDefault() to fileuploaded event \u3002Good luck to you\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.. ",
    "erick-x": "same question \uff0cyou can change on to one  trigger only once . probably\uff0cit`s bug for  trigger  event.. ",
    "rapgithub": "how do you use  $el.fileinput(\"refresh\"); ? because I am having problems to refresh the content with ajax... see this link maybe you know what is the problem is:\nhere\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/1028\n. Any news about the problem of refreshing the images  with ajax calls properly like in my link i provided and no news about it:\nhttps://www.dropbox.com/s/ugwhk09apy99fag/github-fileinput-issue.mov?dl=0\ncan you provide where did you cross check this issue with ajax maybe in codepen.io because in my case all the check produce the same issue all the time...\nImages not being refreshing dynamically when requested via ajax...\nthanks \n. Thank you i have fixed the issue using the another method but still having some issues when retrieving the image data from the database and trying to put the images again when editing in the stack of images...\nMy html\n\nImage data saved in mysql database\na:1:{i:0;s:44:\"uploads/65dd0bca3c0077c1c0fabd37b5dfd855.jpg\";}\nAfter unserialized to read by javascript: \nimages: [\"uploads/65dd0bca3c0077c1c0fabd37b5dfd855.jpg\"] \nthen i am using when retrieving the data in json format:\n                var obj = JSON.parse(data);\n  $.each(obj.images,function(i,item){\n                    alert(obj.images); //print OK the image on screen with the path\n                          $('#images').fileinput('addToStack', obj.images); // does not add the file to the stack for previewing\n });\n\nin this case when editing a record that has one or more pictures I want to be able to add this images previously saved into the database to the stack of images in the uploader again for purpose of delete of update images information..\nI am using\n$('#images').fileinput('addToStack', obj.images);\nbut does not work\nany ideas which method should I do for editing?\nthanks\n. I have found this initialPreview but it does not refresh the images inside the uploader when calling it for editing mode and update from database...\n$('#images').fileinput({ \n    initialPreview: [\n       obj.images\n    ],\n   overwriteInitial: false,\n           initialPreviewAsData: true\n});\n. thanks but i have another issue now maybe you know where the problem is:\nI am dinamically updating the uploader for editing with javascript so I use refresh for updating the upload drag and drop areas with the images saved in the database like this and it works showing the images but the issue it is that when i select another record to edit the previous images stay in the drag and drop area and even if I use clear, it is like they get appended to the drag and drop area instead of be cleaned form the uploader before inserting the new editing images tha belong to another record.\nMy question : how can i make the initialPreview to show only the images i am calling to edit dinamically and not appending the images with the previous? clean does not work in this case...\nI am using:\nwhere obj.images is an array of images and  image.config it is the initialPreviewConfig of the images to be deleted... if i press delete...  in the format\n[{\"url\":\"delete.php\",\"captions\":\"uploads/437b016f24b03e95aec14d755b0016d6.jpg\",\"key\":56},\n{\"url\":\"delete.php\",\"captions\":\"uploads/437b016f24b03e95aec14d755b0016d6.jpg\",\"key\":46}]\n$('#images').fileinput('refresh', {\nuploadUrl: \"upload.php\",\nuploadAsync: true,\nminFileCount: 1,\nmaxFileCount: 5,\noverwriteInitial: false,\ninitialPreview: obj.images,\ninitialPreviewAsData: true, \ninitialPreviewFileType: 'image', \ninitialPreviewConfig: image.config,\n});\nthe problem is that this works for updating the uploader area dinamically when selecting the record to edit with its images but when selecting another records the images previously shown are staying in the drag and drop area like appending them instead of cleaning the drag and drop area and inserting the new images of the new record...\nhow to fix this behavior and edit dinamically the images the right way?\nthanks\n. I have found this initialPreview but it does not refresh the images inside the uploader when calling it for editing mode and update from database...\n$('#images').fileinput({ \n    initialPreview: [\n       obj.images\n    ],\n   overwriteInitial: false,\n           initialPreviewAsData: true\n});. this topic is closed but the issue it is still there when editing the records with initialPreview of the images the images are shown correctly but when editing another records the drag and drop area still keeping the images of the previous edit... I am trying dynamically edit records with its images and it does not work properly.\ni have tried reset or clear and not working... only refreshing the page in the browser helps... but i am using ajax and everything to save, edit and new records...\nany solution for this?\nthanks. yes I know that part you mentioned above\nthe problem does not comes from deleting the image via ajax but it comes when editing another record that load the images again in the uploader via ajax call and the information in the uploader is not refreshed with the new images loaded via initialPreviewConfig in this case the images shown are the ones of the previous record plus the ones of the new record.\nthat is the main issue... this behavior showing images of the previous record...\nany ideas how to solve this?\nI am not refreshing the browser i am using only ajax to retrieve, update and save data in one screen... it seems the uploader keep in cache the images of the previous record edited... either if i delete or not images from it.. \nIssue: images via ajax not being refreshed properly well when selecting another record to edit, not the cache in the uploader still with the data of the first record edited... \nSample:\nI have one record with two images i edit the record and i delete one picture..\nthen i go to the second record that has 3 pictures and when the images are displayed via ajax the uploader still showing that image left of the previous record in the uploader and only 2 images of the 3 of the second record editing...\nthis means that the uploader is not refreshed properly with ajax using initialPreview or cache not cleaned after the fileinput is refreshed... to call the second record to edit...  \nany ideas about this issue how to solve it ?\n. the problem is here in the div class:\n'file-preview-thumbnails'\nimages are not cleared when using the new initialPreview images, so if I can run\n$('.file-drop-zone div.file-preview-thumbnails').html(''); it will clear the preview-thumbnails before adding the new request ones and showing the images that belong to the record to be edited instead.. \nand it will be great before the initialPreview images are added to the uploader to have a function that can control this... \nit will be the solution!!! because  .file-preview-thumbnails are not refreshed or cleared before adding the new images with initialPreview ... in this case I am using ajax for all not refreshing the browser... \nis there any function like filebatchpreinitialPreview or filepreinitialPreview i can call before initialPreview images added to the uploader? \nthanks\n. any news about this issue ? thanks. ",
    "xw7": "Sorry, I didn't make myself clear enough.\nWe have the upload feature working and it uploads the images perfectly, however we have a edit feature on our items where frontend users can go in and change images.\nWe have managed to code the file input to pick up all images attached to each item and display them as images in the initial preview, but when we click upload it only uploads the new ones and the initial preview ones are removed even though they still display in the upload box.\nI thought there may have been an easy way of re-uploading/getting their ID on the current system but if not I will manually code it so it detects the ID and stores it along with new ID's.\nOn the initial preview it doesn't allow us to remove any of the initial preview images when using the bin button, however new ones do.\nI will take another look today and see if I can create a workaround to get it working as required for editing.\nThank you for taking the time to reply, much appreciated.. ",
    "fztjavafans": "pdf preview \"Access Denied\", how to deal with it?\nIE version:11.0\n. ",
    "macklus": "+1\nMore than 3 hours spend trying to run this... without luck :-(\nI think should be so easy as:\n$('#element').fileinput('refresh', {\n    showBrowse: false,\n    initialPreview: [ 'http:///mi_new_image_url/image.jpg]\n});. ",
    "wilsonwg": "I just tried $btn.attr('data-key') but it still returns the same empty value data-key=\nMaybe something related to scope. Just my guess.. I solved the problem!\nif I use data-key=\"{dataKey}\"\njavascript\n var btns = '<button type=\"button\" class=\"kv-cust-btn btn btn-xs btn-default\" title=\"Download\" data-key=\"{dataKey}\">' +\n            '<i class=\"glyphicon glyphicon-download\"></i>' +\n            '</button>';\nThen I get a very strange attribute code:\ndata-key=\" data-key=\"2\"\"=\"\"\nBut I only put {dataKey}\njavascript\n var btns = '<button type=\"button\" class=\"kv-cust-btn btn btn-xs btn-default\" title=\"Download\" {dataKey}>' +\n            '<i class=\"glyphicon glyphicon-download\"></i>' +\n            '</button>';\nThen it renders the correct html attribute code: \ndata-key=\"2\"\nSo the example code on the doc page is misleading:\nhttp://plugins.krajee.com/file-input#option-otheractionbuttons\nOr you may need to change the original codes.\n. I noticed that the doc got updated, the texts after the template section all appear to be red (after the datakey part). Perhaps you forgot to add a closed tag somewhere. It's a small thing, but kind of annoying when reading the doc.. Great! Thank you!. @CrestApps : You can look my very first post and the very last few lines. You can pass your url into your scripts with the key. Ex: window.location = 'http://...donwload_url_here.../'+key; to initiate the download.  This is just one of the possible ways of doing it.. ",
    "CrestApps": "I am trying to create a download button also. So I added the following to my config \n    otherActionButtons: '<button type=\"button\" class=\"kv-cust-btn btn btn-xs btn-default text-muted\" title=\"Download\" {dataKey}>' +\n                        '<i class=\"fa fa-download\"></i>' +\n                        '</button>',\n\nThe dataKey is replaced as expected initialPreviewConfig.key... but how can I also pass the download URL? When the use click on the \"download\" button, I want to download a the file to my local machine.\n. I missed adding uploadAsync: false,. ",
    "wqbill": "Thank you for your great work. Didn't see demo 2 back then. Add it recently? :D. ",
    "Danillaa": "if initiate event filebeforedelete and return false all works perfect, but if not , deleting not working. \nCan we initiate default this event and return correct for e.result , or something else ?. ",
    "oromanos": "I am  uploading a single file. But it still beats the purpose of showing the upload button when you have already decided not to let the users re upload the file.\nMoreover, when I select multiple files and try and upload a single file, all file upload buttons start showing the error that upload failed even though it failed for a single file. The same should happen in this case too although usability is lost.. When you write single upload, I assume you mean the individual upload button on each of the selected file. In my use case, I do send back json data with error property. The error gets displayed fine. But again the upload button is still available/visible. Clicking on it does nothing.\nI am not doing a batch upload.\nI reallcannot fathom why you would not allow someone to try uploading a file again. What if the file upload fails due to lost internet connectivity?. I think you misunderstood a part of the issue.\nWhy is the upload button still available when the upload has already failed\nand users (as decided by you) would not be able to re-upload?\nAlso, I am not trying to upload the files as a batch. I am actually\nuploading by clicking on the individual upload button. Why would it affect\nthe other upload buttons?\nMoreover, even with 20 files in a single upload we could send in related\ndata and then send back which ones failed and show the message accordingly.\nI do not want the client to retry automatically. But would definitely like\nusers to be able to retry uploading.\nOn Fri, Aug 18, 2017 at 1:14 PM, Kartik Visweswaran \nnotifications@github.com wrote:\n\n\nSingle Upload means multiple property of file input is NOT SET...\n   which means you can SELECT ONLY ONE file and thus UPLOAD ONLY ONE file.\n   Have you tried using it?\n\nAs I mentioned am open to suggestions - but need you to consider all use\ncases rather than ONE off.. before mentioning a solution. Have you tried\nusing a HTML native normal file input and selecting say 20 files together\nand submitting the form to server. Let us say internet connectivity is lost\nin between... is there a way you can code your client user interface to\nunderstand and retry? What if you wish you to genuinely reject 5 files and\nuser still keeps on retrying the same... how will the client code\nunderstand what the server code meant to reject the file as?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/1045#issuecomment-323284142,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEvV8DDH-KDXsU-5AjTE1cc52WcYJtACks5sZUDRgaJpZM4O5aC5\n.\n. Yes. The button is still clickable but does nothing. Either disable it or\nhide it.\n\nOn Fri, Aug 18, 2017 at 3:47 PM, Kartik Visweswaran \nnotifications@github.com wrote:\n\nUpload button for each errored thumbnail should be DISABLED as part of the\nprocess once file upload for the specific thumbnail errors out indicating\nthat the upload action cannot be done.\nAre you seeing something different?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/kartik-v/bootstrap-fileinput/issues/1045#issuecomment-323316926,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEvV8H2EyuYzum3bg-IEZ9GNK2t4CclUks5sZWTOgaJpZM4O5aC5\n.\n. \n",
    "malhayek2014": "@kartik-v Thank you for that.\nAfter using the dev-master branch the filepredelete method makes the call to the server as expected. But when I return false to the  filepredelete  listener, it makes the request to the server regardless. \nSo the following code will always send the request to the server regardless I click \"Ok\" or \"Cancel\" at the dialog.\n.on(\"filepredelete\", function(jqXHR) {\n    return confirm(\"Are you sure you want to delete this file?\");\n});\nAdditionally, When I click the delete button before the files are uploaded, the event filepredelete never get fired.. ",
    "danlupascu": "the issue was because of \"overwriteInitial\" option. I just had to set it to false.. ",
    "yangyongkangse": "ok ,understand that because I did not carefully read the document caused a misunderstanding,sorry. ",
    "b4p3p": "I tried it right now after upgrade.\nsame error with version 4.4.3 with removeFromPreviewOnError.\nhowever...\nVersion 4.4.2 with argument removeFromPreviewOnError: true, i have this error\ncore.es5.js:1020 ERROR TypeError: Cannot read property 'remove' of undefined\n    at FileInput._setPreviewError (eval at webpackJsonp.../../../../script-loader/addScript.js.module.exports (addScript.js:9), <anonymous>:2898:23)\n    at eval (eval at webpackJsonp.../../../../script-loader/addScript.js.module.exports (addScript.js:9), <anonymous>:2068:26)\n    at ZoneDelegate.webpackJsonp.../../../../zone.js/dist/zone.js.ZoneDelegate.invokeTask (zone.js:425)\n    at Object.onInvokeTask (core.es5.js:3881)\n    at ZoneDelegate.webpackJsonp.../../../../zone.js/dist/zone.js.ZoneDelegate.invokeTask (zone.js:424)\n    at Zone.webpackJsonp.../../../../zone.js/dist/zone.js.Zone.runTask (zone.js:192)\n    at webpackJsonp.../../../../zone.js/dist/zone.js.ZoneTask.invokeTask (zone.js:499)\n    at ZoneTask.invoke (zone.js:488)\n    at timer (zone.js:1896)\nVersion 4.4.2 without argument removeFromPreviewOnError works fine\nthis is my config\njavascript\nthis.txtFileLibri = this.guiService.initBootstrapFileinput($(\"#file_libri\"), {\n      removeFromPreviewOnError: true,\n      elErrorContainer:\"#file_libri_error\",\n      uploadUrl:\"/api/libri/import\",\n      allowedFileExtensions: [\"xlsx\"],\n      showUpload: false,\n      uploadExtraData: function () {\n        return {\n          scuola: self.dataService.scuolaSelezionata.getID(),\n          nome_classe: self.nome_classe  }\n      },\n      onError: function (err) {\n        self.messageService.error(\"Impossibile importare gli elementi\", err)\n      },\n      onSuccess:function (ris) {\n        self.ris_upload_anagrafiche = ris;\n      },\n      onChange:()=>{ self.hasFileLibri = true; },\n      onFileClear:()=>{ self.hasFileLibri = false; },\n    });\n. ",
    "beskyey": "I set it like this ,and It works\nuploadExtraData:function(){\n            return {username:$(\"#message1\").attr(\"value\")}\n            }. ",
    "vishnukvmd": "@kartik-v Yes, but this does not update the URL. It continues to upload it to the URL that was initially set.. Yes, having a generic way to update all configuration parameters would definitely be better than this. Thanks.. ",
    "leo-ridgewood": "I have the same problem.\nIt seems to be ignoring the Internet Media Type contained in the Content-Type response header when loading the preview files and instead using the image template for everything. In contrast, when files are uploaded the Media Type is correctly used to determine the template.\nEven if I prefetch each file to obtain the Media Type and set the corresponding filetype property in initialPreviewConfig the image template is still used. The only way I can get it to work is to set the corresponding intialPreviewConfig \"type\" field to the required template. Both pre-fetching the file and doing the mapping is rather tricky.\nI feel I must be missing something as surely the most common use of preview would be to show arbitrary files previously uploaded?. kariik-v, I don't understand your use of the word \"automatically\" here.\nIn your example \"type\" is manually set to a hardcoded value based on special knowledge of what the hardcoded links were pointing to. I am trying to display a preview of arbitrary previously uploaded files.. Here is what I have done to allow the preview of previously upload files. Note I have manually edited out the non-preview stuff, so it might not quite work, and also that I am not a javascript programmer, but hopefully you get the idea:\n\nAjax load each image and collect the media type\nOnce all media type info has been collected initialise fileinput using a hacky calls to internal methods to map media type to template name (aka type, category)\n\nHopefully I have missed something and there is a better way?\n```\nvar downloadUriBase = \"/Download?AttachmentKey=\";\n// Get the attachment keys\nvar $attachmentKeys = $(\"#AttachmentKeys\");\nvar attachmentKeysStr = $attachmentKeys.val();\nvar attachmentKeys = attachmentKeysStr == \"\" ? [] : attachmentKeysStr.split(\",\");\n// Get the media types by loading each attachment\nvar attachmentMediaTypes = {};\nvar ajaxes = attachmentKeys.map(function (key) {\nreturn $.ajax({\n    type: 'GET',\n        url: downloadUriBase + key\n    })\n    .done(function (data, textStatus, jqXhr) {\n        attachmentMediaTypes[key] = jqXhr.getResponseHeader(\"content-type\");\n    });\n});\n// Display them in the preview. Hopefully they will be in the cache\n$('body').fileinput('_initTemplateDefaults'); // Required for _parseFileType to work.\n$.when.apply($, ajaxes).done(function () {\n    $files\n        .fileinput('destroy')\n        .fileinput({\n            initialPreviewAsData: true,\n            initialPreview: attachmentKeys.map(function (key) {\n                return downloadUriBase + key;\n        }),\n        initialPreviewConfig: attachmentKeys.map(function (key) {\n            return {\n                type: $('body').fileinput('_parseFileType', attachmentMediaTypes[key], ''),\n                filetype: attachmentMediaTypes[key]\n           }\n        })\n    ;\n})\n```\n. ",
    "gediminaskv": "I had the same issue. It was due to file_get_contents and file_put_contents PHP functions which I ussed to store JSON data to file. While uploading many files at a time it messed up.\nI've implemented Method 1 from https://www.sitepoint.com/community/t/how-to-overwrite-a-file-atomically/268982/21 and it works well.. ",
    "fr0z3nfyr": "\ndo not add the CSS class file to the input as mentioned in the NOTE in usage on docs\n\nThat was it! Was I blind to miss that highlighted text?!! Thanks. . ",
    "matmiranda": "@kartik-v  thank you.. @makshh  \nHere's an example in JavaScript: http://plugins.krajee.com/file-advanced-usage-demo#advanced-example-4\nIt would be nice to put one more \"square\" option. No need to change css.\nFor input does not work, I want to put all as squares.\nOnly the .file-preview class does not solve, there are many others.. ",
    "flo-sch": "NB : an alternative would be to load this gif with base64 data, as bootstrap already does such things, what do you think?\nhttps://github.com/twbs/bootstrap/blob/v4.0.0-beta/scss/_variables.scss#L426. Great :)\nThanks for the plugin BTW!\nI could create a PR for such a case, but many things seem to be changing in sass styles on branch master, so I'd prefer not to interrupt ;\nHowever if you need me, just ask :). Great, thanks :)\nCan you please add a !default statement for the variables, so we can override them?\n$url_0: url(../img/loading.gif);\n--->\n$url_0: url(../img/loading.gif) !default;\n. Great, thanks :)\nBy chance, do you have any estimation for the 4.4.5 release?. Amazing, it works now, thank you for your reactivity!. ",
    "Phanlanx": "I am actually having this problem as well. Am using webpack and these dependencies:\n\u251c\u2500\u2500 @babel/core@7.1.0\n\u251c\u2500\u2500 @fortawesome/fontawesome-free@5.3.1\n\u251c\u2500\u2500 autoprefixer@9.1.5\n\u251c\u2500\u2500 b@2.0.1\n\u251c\u2500\u2500 babel-core@6.26.3\n\u251c\u2500\u2500 babel-loader@8.0.2\n\u251c\u2500\u2500 babel-preset-env@1.7.0\n\u251c\u2500\u2500 bootstrap@4.1.3\n\u251c\u2500\u2500 bootstrap-datepicker@1.8.0\n\u251c\u2500\u2500 bootstrap-fileinput@4.5.1\n\u251c\u2500\u2500 bootstrap4c-custom-switch@1.0.11\n\u251c\u2500\u2500 clean-webpack-plugin@0.1.19\n\u251c\u2500\u2500 copy-webpack-plugin@4.5.2\n\u251c\u2500\u2500 css-loader@1.0.0\n\u251c\u2500\u2500 datatables.net-bs4@1.10.19\n\u251c\u2500\u2500 datatables.net-buttons-bs4@1.5.4\n\u251c\u2500\u2500 datatables.net-colreorder-bs4@1.5.1\n\u251c\u2500\u2500 datatables.net-fixedcolumns-bs4@3.2.6\n\u251c\u2500\u2500 datatables.net-fixedheader-bs4@3.1.5\n\u251c\u2500\u2500 datatables.net-keytable-bs4@2.5.0\n\u251c\u2500\u2500 datatables.net-responsive-bs4@2.2.3\n\u251c\u2500\u2500 datatables.net-rowgroup-bs4@1.1.0\n\u251c\u2500\u2500 datatables.net-scroller-bs4@1.5.1\n\u251c\u2500\u2500 ekko-lightbox@5.3.0\n\u251c\u2500\u2500 exports-loader@0.7.0\n\u251c\u2500\u2500 extract-text-webpack-plugin@4.0.0-beta.0\n\u251c\u2500\u2500 file-loader@2.0.0\n\u251c\u2500\u2500 image-webpack-loader@4.3.1\n\u251c\u2500\u2500 imports-loader@0.8.0\n\u251c\u2500\u2500 jquery@3.3.1\n\u251c\u2500\u2500 mini-css-extract-plugin@0.4.3\n\u251c\u2500\u2500 node-sass@4.9.3\n\u251c\u2500\u2500 normalize.css@8.0.0\n\u251c\u2500\u2500 npm@6.4.1\n\u251c\u2500\u2500 popper.js@1.14.4\n\u251c\u2500\u2500 postcss-loader@3.0.0\n\u251c\u2500\u2500 sass-loader@7.1.0\n\u251c\u2500\u2500 select2@4.0.6-rc.1\n\u251c\u2500\u2500 select2-bootstrap-theme@0.1.0-beta.10\n\u251c\u2500\u2500 style-loader@0.23.0\n\u251c\u2500\u2500 toastr@2.1.4\n\u251c\u2500\u2500 uglifyjs-webpack-plugin@2.0.1\n\u251c\u2500\u2500 webpack@4.20.2\n\u251c\u2500\u2500 webpack-cli@3.1.2\n\u2514\u2500\u2500 webpack-dev-server@3.1.9\nAnd this is the error:\nModule build failed (from ./node_modules/mini-css-extract-plugin/dist/loader.js):\nModuleNotFoundError: Module not found: Error: Can't resolve '../img/loading-sm.gif'\nHow did you fix your problem on your end @flo-sch ?. ",
    "lghiur": "My bad on this, it was working properly. ",
    "itsikhar": "Hi Kartik,\nI'm also facing this issue with \"reset\", \"refresh\" and \"destory\" functions.\nI have a custom form and when the ajax call response I tried to reset the fileinput.\nthe method not react to this action. seems like it's because the ID of the element is changed during the plugin initialization.\nPlease your help :)\n. I did it, but after the input initialize the input file id is gone... ",
    "flybeach": "Its odd thing, I am using this library from CDN link.\nHere is my code:\n```javascript\nvar imageOption = {\n                uploadUrl: '{!! route('sheet.image.store') !!}',\n                uploadAsync: true,\n                allowedFileExtensions: [\"png\", \"jpg\", \"jpeg\"],\n                maxFileCount: 1,\n                dropZoneTitle: 'Drag & Drop Image Here ...',\n                showUpload: false,\n                layoutTemplates: {\n                    footer: ''\n                },\n                previewSettings: {\n                    image: {width: \"auto\", height: \"200px\", minWidth: \"160px\"}\n                },\n                previewFileType: 'image',\n                autoReplace: true,\n                showUploadedThumbs: false,\n                initialPreviewAsData: true,\n                @if(!empty($sheet) && !empty($sheet->get('image')))\n                initialPreview: ['{!! $sheet->get('image')->getURL() !!}'],\n                initialPreviewConfig: [{\n                    type: 'image',\n                    url: '{!! $sheet->get('image')->getURL() !!}'\n                }],\n                @endif\n                append: false\n            };\nimage.fileinput(imageOption);\n            image.on('filebatchselected', function () {\n                $('.fileinput-remove').css('margin-right', '0');\n                $('.fileinput-cancel').css('margin-right', '0'); // remove gap between browse and cancel/remove buttons\n                image.fileinput(\"upload\");\n            });\n            image.on('fileuploaded', function (event, data) { // file uploading has been completed!\n            $('.fileinput-remove').css('margin-right', '0');\n            $('.fileinput-cancel').css('margin-right', '0'); // remove gap between browse and cancel/remove buttons\n\n            // handle response\n            let response = data.response; // get Ajax response from server after uploading has been completed\n            let fileName = response.file_name; // get file path on the server of file uploaded\n            let fileExtension = response.file_extension; // get file extension on the server of file uploaded\n            $('[name=imageFileName]').val(fileName);\n            $('[name=imageFileExtension]').val(fileExtension);\n            $('[name=isImageDeleted]').val(false);\n        });\n        image.on('filecleared', function (event) {\n            $('[name=isImageDeleted]').val(true);\n        });\n\n```\nThis is all related code with file input.\nI am using this library in a lot of sections of my site, all of them are same with this issue.\nI wish your help to fix this issue.\nHere is error in console I am getting:\n\n. Hello, could you update me pls?\nI am waiting for your help... let me know pls if you could replicate the issue or not?\nThanks. ",
    "ruby1126": "I have the same problem.\nI use v4.4.7.\nAs long as I upload more than files will be in \"progress...\".\nI use v4.4.3 is normal.. ",
    "marktaborosi": "Solved! . ",
    "Asinox": "Thanks @kartik-v for your reply, i did it before come here (read the documentation) , and i really want the ability of remove a thumbnail/file before process the upload.  I wonder why is not possible...well thanks for you amazing plugin.. ",
    "nidsb": "I created form with file control in modal with bootstrap-fileinput plugin.When I clicked edit from data table modal display with selected file and preview icon.But on click of that icon nothing happen,It doesn't show zoom image modal  . ",
    "cxgreat2014": "My requests not really fix, need more test... ",
    "rheligon": "im following this, i would really like to know this, since ive already tried but the console output says \n$(...).fileinput is not a function.\nalready imported the scripts in angular-cli.json as i should. ",
    "luX0r-reload": "Hi, this is for sure a bug because I found this problem appears in your demo too:\nhttp://plugins.krajee.com/file-input-ajax-demo/12\nTo reproduce, select six files to upload (maxFileCount is five)... an error appears. Try to close error message and a browse files window is opened.\nThanks in advance for the fix :). ",
    "michaelashore": "Hello, I am still seeing this issue after updating to 4.5.2. I am seeing it on an AJAX file upload in the same scenario as @luX0r-reload mentions:\n\nTo reproduce, select six files to upload (maxFileCount is five)... an error appears. Try to close error message and a browse files window is opened.\n\nIs the fix still WIP?\nMany thanks for the great plugin.. ",
    "a6ka": "OS: Ubuntu 16.04\nChrome version:\nVersion  | Status\n------------ | ------------\n 61.0.3163.79, (64 bit)  | Working \n 62.0.3202.75, (64 bit)  | Not working . Sorting works correctly now. Chome version: 63.0.3239.132. ",
    "morawskim": "Looks like related issue https://github.com/kartik-v/yii2-widget-fileinput/issues/123. I don't have any problems (currently) with sorting in chrome 63.0.3239.108. I tested http://plugins.krajee.com/file-preview-management-demo . ",
    "mickremy": "Hi guys, this problem seems to be on chrome v63, can someone confirm this ?. ",
    "mauriziocingolani": "I downgraded to #6dc3488 and it works again.\nI'll try to set up a fiddle for you to check it out. I set up this test page for you:\nhttp://education.sidagroup.com/site/test\nThis is my composer.json:\n\"minimum-stability\": \"dev\",\n    \"require\": {\n        \"php\": \">=5.4.0\",\n        \"yiisoft/yii2\": \"2.0.13\",\n        \"yiisoft/yii2-bootstrap\": \"2.0.*\",\n        \"kartik-v/yii2-mpdf\": \"*\",\n        \"kartik-v/yii2-social\": \"*\",\n        \"kartik-v/yii2-widget-datepicker\": \"*\",\n        \"kartik-v/yii2-widget-fileinput\": \"*\",\n        \"kartik-v/yii2-widget-select2\": \"*\",\n        \"kartik-v/yii2-widget-timepicker\": \"*\"\n    },\nThe extra line  \"kartik-v/bootstrap-fileinput\":\"dev-master#6dc3488\" fixes the problem.. Ok. The test page and everything else works just fine.\nThank you, awesome job.\nOver and out. ",
    "a564941464": "js\nlet ffs = $(\".images_upload\").fileinput('getFrames');\nffs.forEach(function(item){\n    $(item).find(\".kv-file-upload\").click();\n    console.log($(item).find(\".kv-file-upload\").attr(\"title\"));\n});\ntriger the click event of the upload button for each thumbnail when selected event occur. the prewid would be reserved.\n. ",
    "jakenoble": "That was only a demo. Of course it changes. If I place a \u2018console.log\u2019 in there the log is only ever output once. \nEg the code for filepreupload is only run once and further upload attempts just return the same error again and again because the code isn\u2019t actually running. . ",
    "AlwaysOnTheWay": "i have a question. I want to use a function in filepreupload event. If return value of function is true, then execute the upload event, otherwise cancel the upload event.  . ",
    "lilian19900717": "I've found the answer from http://plugins.krajee.com/file-advanced-usage-demo\nSet the 'slugCallback' parameter in the pluginOptions. For example, I use the below to allow dashes - , brackets () and hyphens '\nslugCallback: function (text) {\nreturn String(text).replace(/[[]\\/{}:;#%=*+\\?\\\\^\\$\\|<>&\\\"]/g, '_');\n}. ",
    "vm-manocha": "https://vega.github.io/vega/usage/#ie\nThe solution to this problem is here. \nYou should add polyfills that add Promise support to Internet explorer. \nhttps://github.com/stefanpenner/es6-promise\nI referred this solution and my issue is resolved. . ",
    "thibaultsmnt": "Hi,\nI had the same problem and I found a temporary solution:\nAdd this to your file input config:\nlayoutTemplates:{\n     actionDownload: '<button type=\"button\" class=\"{downloadClass}\" title=\"{downloadTitle}\"  data-caption=\"{caption}\" onclick=\"window.location.href=\\'{downloadUrl}\\'\">{downloadIcon}</button>\\n',\n                }\nIt will replace the default download button by the one specified (http://plugins.krajee.com/file-input/plugin-options#layoutTemplates).\nIt's no good looking solution, but it seems to work for Safari, Firefox and Chrome.. ",
    "joetito1": "That's not quite what I'm looking for. I'd love if the user uploaded the images, saw the preview, and then could check a box next to which image would be the main photo. ",
    "AlexOlteanuCodinbit": "Thanks for quick reply.\nUnfortunately the bug still exist.\nI made another video on my local project. After delete a file the object returned by the event $('.file-loading').on('filesorted', function(event, params) { ... } it's broken.. Still happening. This is video made after update.\nI do not understand why the object is corrupted after the sorting and the removal action. \nIf I just sort or just remove a file, everything it's ok, but when i do it simultaneously, the object it's broken.    . ",
    "YusufAkyol": "Hi, \nWhy I get error message when I click the upload button: SyntaxError: Unexpected token < in JSON at position 0 ? \nThanks for your help. \nBest regards...\n. Hi,\nI solved the problem... It was my mistake...\nSorry about this...\nBest regards.. ",
    "CarlosZzzz": "I find the solution\uff0cthanks. ",
    "marcelogarbin": "@kartik-v Any plans to release the next version? Thank's. ",
    "chderen": "Thanks\nCan i add uploaded file to rhe stack?\nI am using parseplatform.org to host and diffrend logic to upload files. ",
    "bhavikji": "I'm using Redmi 3s Prime and when I try to uploading an image on my website I am getting this error no valid data available for upload. so I tried the same thing on the mentioned demo page and there I got this message  \"You must select at least one file to upload\". I am facing this issue specifically on Google Chrome in my device as in my default browser it is working fine.. ",
    "dennisbappert": "Happens on iOS and Android, too. Try to upload file from iOS library or try to take a picture in Chrome => \"No data available for upload\". It is not related to browser permissions.. ",
    "jhon100": "use layoutTemplates http://plugins.krajee.com/file-input/plugin-options#layoutTemplates. You can see it here: https://jsfiddle.net/xanzqw1t/. Thanks @kartik-v . Did you tried this?  http://plugins.krajee.com/file-input-ajax-demo/6. ",
    "tidzh": "Hmmm .. But this works, but not very convenient.\ninitialPreviewThumbTags: [\n {'{file_id}': '106'},\n{'{file_id}': '105'},\n{'{file_id}': '104'},\n{'{file_id}': '103'},\n{'{file_id}': '100'},\n{'{file_id}': '99'},\n{'{file_id}': '98'},\n ]. ",
    "SchalkBreed": "The point is that I want to retrieve it natively from the plugin. I do not want to use the plugin's uploading methods.. I am not submitting a form at all. Just need the files from the input.. ",
    "brunonetadmin": "This is possible for files that are already uploaded, but i\u00b4m talking about the new files we add. It aways start in the end of the \"table\", in the \"explorer\" template, i think this is the way you append, instead of set it to the end, a option to add in the first row of the table.. ",
    "nhill-cpi": "You should look at http://plugins.krajee.com/file-advanced-usage-demo#advanced-example-10. I was having the same problem, but there turns out to be an easy fix for this.. ",
    "decosvaldo": "I'm facing similar problem with Bootstrap 4 v4.0.0-alpha.6\nMy input object is created with classes that do not exist in the .css file.\nfile-caption form-control kv-fileinput-caption icon-visible\n\n. I'm using bootstrap 4, not 4 alpha as mentioned.. ",
    "emresaracoglu": "I have the same problem. \nBootstrap: 3.3.7\nFile Input: 4.4.5\n\n. Thank you for answer. @kartik-v \nI'm afraid I didn't succeed. \nBecause; If Uploadurl is empty or delete, then I can not see the plugin on the site. \nPlease is it possible to give a simple example of JSFiddle?\nUpdate// my question on  Stackoverflow. @kartik-v . Yes, I did I can successfully upload a photo but If I want to upload more than one photo, I getting  \"you must select a file to upload\" warning.\nWhat could be the reason for this?\n$(\"#images\").fileinput({\n        'language': 'tr',\n        'minFileCount': 1,\n        'showCaption': false,\n        'showUpload': false,\n        'browseOnZoneClick': true,\n        'previewFileType': 'any',\n        'allowedFileExtensions': [\"jpg\", \"png\", \"gif\", \"jpeg\"]\n    });\nVersion: 4.4.8\ncc @kartik-v . I'd go to my problems. I've been using it smoothly for the last few days. Again thank you for your time and this repo.\ncc @kartik-v . ",
    "alian954": "\n\nYou only need bootstrap4-glyphicons\n. ",
    "edvinkuric": "Hey @sladiri,\nwe are also looking for a fix to make this control accessible.\nShouldn't it be best practice to tranform the used <span> element to a <label>, according to the HTML/WCAG-specifications?\nOtherwise, this fix also applies in our solution.\nBR\n. ",
    "pujarasanni027": "Thanks Kartik,\nworking on re-order/arrange images and maintaining display sequence.,\nso can i get re-arranged images list (order by) when click on any submit button .\nthrough which we can easily manage it server side also. . Hey @themesfa \nI am also facing such a issue in my code.. ",
    "carlb0329": "If statement on line 1377 in fileinput.js is where the condition fails and thus does not display browser file upload window.. @kartik-v I'm actually using your bootstrap-fileinput through the yii2-widget-fileinput, but the default composer setting for the yii2 widget is not pulling in the latest bootstrap-fileinput JS code.  Can you please update the composer.json in the yii2-widget-fileinput repo so it uses the latest bootstrap-fileinput code?\nThanks for the great plugins/widgets!. ",
    "SasaCetkovic": "This is still not fixed, I'm getting the same issue with the latest files. I checked the code for 7944443 changes. It happens even when I remove the elErrorContainer option.. ",
    "nietaldarkopik": "The error is in this line\n            $zone = (self.isAjaxUpload) ? self.$dropZone : self.$preview.find('.file-default-preview');\ni Change to :\n            $zone = (self.$dropZone.length > 0) ? self.$dropZone : self.$preview.find('.file-default-preview');\n            . ",
    "coderLinJ5945": "\n. I'm sorry, I've been learning to use the official demo recently, about preview excel and word, which I saw in the official demo two days ago.. Thanks a million!. ",
    "gabken": "Have you solved this? . i've resoved this, code in my issue. \n      `  if (formItems != null && formItems.size() > 0) {\n            // \u8fed\u4ee3\u8868\u5355\u6570\u636e\n            for (FileItem item : formItems) {\n                // \u5904\u7406\u4e0d\u5728\u8868\u5355\u4e2d\u7684\u5b57\u6bb5\n                if (item.isFormField()) {\n                     String name = URLDecoder.decode(item.getFieldName(),\"UTF-8\");\n                     String value = URLDecoder.decode(item.getString(),\"UTF-8\");\n                     if(name.equals(\"pid\")){pid=value;}\n                     if(name.equals(\"lcid\")){lcid=value;}\n                     if(name.equals(\"filename\")){filename=value;}\n                     if(name.equals(\"filekeyword\")){filekeyword=value;}\n                     if(name.equals(\"filesecret\")){filesecret=value;}\n                     if(name.equals(\"fileremark\")){fileremark=value;}\n                     if(name.equals(\"fileclass\")){fileclass=value;}\n                }\n        }`. i have fixed this. ` @SuppressWarnings(\"unchecked\")\n        List<FileItem> formItems = upload.parseRequest(request);\n\n        if (formItems != null && formItems.size() > 0) {\n            // \u8fed\u4ee3\u8868\u5355\u6570\u636e\n            for (FileItem item : formItems) {\n                // \u5904\u7406\u4e0d\u5728\u8868\u5355\u4e2d\u7684\u5b57\u6bb5\n                if (item.isFormField()) {\n                     String name = URLDecoder.decode(item.getFieldName(),\"UTF-8\");\n                     String value = URLDecoder.decode(item.getString(),\"UTF-8\");\n                     if(name.equals(\"pid\")){pid=value;}\n                     if(name.equals(\"lcid\")){lcid=value;}\n                     if(name.equals(\"filename\")){filename=value;}\n                     if(name.equals(\"filekeyword\")){filekeyword=value;}\n                     if(name.equals(\"filesecret\")){filesecret=value;}\n                     if(name.equals(\"fileremark\")){fileremark=value;}\n                     if(name.equals(\"fileclass\")){fileclass=value;}\n                }\n\n            }`.\n",
    "josuhawagener": "nope :(. ",
    "russellpettway": "Awesome! thanks, great plugin BTW!! . ",
    "markham89": "same feature for standard form submission is planned ?. ",
    "invot": "Seeing as bootstrap 4 doesn't support glyphicon anymore, you're going to need to do something. FA might be your best bet. . ",
    "sreenadh": "My fault. There was another hidden input with the same id.. The original error was \"content.length undefined\". I was using below code for multiple file uploads on same page.\n<?=FileInput::widget([\n    'name'    => 'attribute_name1,\n    'options' => ['accept' => 'image/*']\n]);?>\ninstead of\n<?=$form->field($model, 'attribute1')->widget(FileInput::className(), [\n    'options' => ['accept' => 'image/*']\n]);?>\n_initPreviewCache: function () {\n            var self = this;\n            self.previewCache = {\n                data: {},\n                init: function () {\n                    var content = self.initialPreview;\n                    if (content.length > 0 && !$h.isArray(content)) {\n. ",
    "zunjae": "Then why do you include 4.4.9 in the readme when it isn't stable nor released?. It literally does NOT work. ",
    "kofarrell1076": "Thanks. Makes sense. Will switch to ajax.. ",
    "yua3": "my uploadUrl is '/img'. ",
    "youyiyang": "`\n<%@ page language=\"java\" contentType=\"text/html; charset=utf-8\"\n    pageEncoding=\"utf-8\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n\n\n\nweb.com \u56fe\u7247\u4e0a\u4f20\u670d\u52a1\u5668\n\n\n\n\n\n\n\n\n\n\n\n$(\"#input-711\").fileinput({\n    uploadUrl: \"upload.do\",\n    uploadAsync : true,\n    maxFileCount: 1000,\n    showBrowse: false,\n    browseOnZoneClick: true\n});\n\n\n\n. i dont why my code is so short?.<%@ page language=\"java\" contentType=\"text/html; charset=utf-8\"\n    pageEncoding=\"utf-8\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n\n\n\nweb.com \u56fe\u7247\u4e0a\u4f20\u670d\u52a1\u5668\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$(\"#file\").fileinput({</p>\n<pre><code>uploadUrl: \"upload.do\",\nuploadAsync : true,\nmaxFileCount: 1000,\nshowBrowse: false,\nbrowseOnZoneClick: true\n</code></pre>\n<p>});\n\n\n`. above is the html code that i wrote. And would u please suggest that which parts are wrong?\nAnd now the UI is like below picture:. \n. Try to do below actions and this may help you to solve your problem:\nhttps://stackoverflow.com/questions/18977581/composer-update-man-in-the-middle-attack-error. ",
    "vvv3": "But I'm not find the way to receive the actual stack of files from front for ordering files in backend for actions 'upload' and 'delete' as i can do for 'sort' action. I need to sync the ordering of files on server with ordering at browser.. I'm find the way to receive needed data in such way: \n`...}).on('filedeleted', function(event, key, jqXHR, data) {\nvar previewConfig  = $(this).data('fileinput').initialPreviewConfig ;\n\n//console.log('previewConfig', previewConfig );\n\nfileInputSort(previewConfig);\n\n})`\nthx. ",
    "oadam": "Since this is a major annoyance for my company, we'd be ready to sponsor this development.\n@kartik-v Is this something you (or someone you know) would be open to ?. an alternative would be opening a bounty on https://www.bountysource.com/. Thank you for setting up bountysource.\nI've created a $300 bounty on the issue :+1: . ",
    "SeigeC": "could you tell you how can the file upload progress entries take effect.  \n\n\n$(\"#input-gly1\").fileinput({\nlanguage: 'zh',                    \nuploadUrl:\"upLoadimg\",                   \nuploadExtraData:function(e){\nreturn {'versionid':version_id};\n },\n});\n. ",
    "BaBL86": "According to code:\nif (self.isAjaxUpload) {\n                out = template.setTokens({\n                    'actions': self._renderFileActions(upl, false, rem, zoom, drg, false, false, false),\nafter Ajax there is false instead of key value hardcoded to the render and button Remove doesn't work.. After some investigation, I find my problem with remove button. Don't know is this relate to this issue, but may be I help someone: the problem is in this code:\ncontent = out.initialPreview || [];\n                config = out.initialPreviewConfig || [];\n                tags = out.initialPreviewThumbTags || [];\nafter ajaxUpload. My backend return initialPrevieConfig as assoc array, JS converts it to Object and than there is an merge of array and object, where object disappears:\nself._mergeArray('initialPreview', content);\n                self._mergeArray('initialPreviewConfig', config);\n                self._mergeArray('initialPreviewThumbTags', tags);\nIn my case there is a fix on backend. Need to put assoc array to new one:\nreturn [\n                'append' => true,\n                'initialPreview' => $aiu->getPhotoAdm(),\n                'initialPreviewConfig' => [[\n                    'caption' => $aiu->name\n                    , 'size' => $aiu->size\n                    , 'url' => Url::to(['/apart-image/async-del', 'id' => $aiu->apart_id])\n                    , 'key' => $aiu->id\n                ]],\n            ];. ",
    "dkingofpa": "With regards to the maxFileCount option, that refers to the max number of files that can be uploaded at once.  Not the total number of files.\nSo if maxFileCount is 5, I can add 5 files, click upload, and then add another 5 files and click upload.  So far, that would be 10 total files uploaded.  I can keep adding and uploading files as long as I don't try to add more than 5 files at once.. This is reproducible on the Krajee website when using IE11.\n\nGo to Advanced Example 11\nDrag and drop a file on the drop zone.\n\nOutput in the IE11 F12 Developer Tools:\nSCRIPT5007: Unable to get property 'length' of undefined or null reference\nfileinput.min.js (11,1576). Another proposed fix to avoid any issues with undefined/null/non-array value.  Since getDragDropFolders(items) is expecting an array, make sure we are passed an array and create an empty one if not.\ngetDragDropFolders: function (items) {\n    if (!$.isArray(items)) {\n        items = [];\n    }\n    ...\n},. ",
    "nim": "You can use this example http://plugins.krajee.com/file-image-management-demo#image-resize-width, but with multi file options. And select several images 5mb+. . FireFox and IE11 freezes, does not show progress bar. . I need to reduce the load on the server. And on the other hand, do not limit the size of the files. Because users make photos as they are used to. You can not close it. In chrome everything works well. But in other browsers not. Do not be lazy where there are problems.. ",
    "arthurwhaley": "@kartik-v thank you for this fantastic plugin, it's been working really well for me.\nI think this issue is related to something I noticed recently.\nI experienced slow performance with IE11 and large images, but I did not experience any issues during resize and upload, only during preview. It seems there are performance issues with certain browsers due to their implementations of the innerHTML function. \nSetting the source of preview images after setting the preview item's html, not before, seems to improve performance in IE11 dramatically. On my system a single 4 MB JPEG image could take 5-7 seconds to preview in IE11, after this change the preview took < 1 second (quickly tested in the latest Chrome/FF/Edge/IE11 on W10):\nhttps://github.com/arthurwhaley/bootstrap-fileinput/commit/28884911305aaa1b9fb0506b9f6a26638647b9d2\nHope this helps.\n. ",
    "liotims": "Done. ",
    "shum16": "@kartik-v when are you planning to release a version fixing this issue? We do need it very much for our new project. Thank you.. Great, thanks a lot! But how do I need to load piexifjs? Currently it's not working even in Chrome, but it used to with 4.4.3... Ok, loaded it separately via registerJsFile and it seems to work now on Chrome. We'll try on iPhone in a while..\nActually, I thought the widget should load piexifjs itself.. Ah, ok, I see ). Can't get it to work on iPhone... Anybody can confirm it's working there? Images are not rotated properly.. Here's a screenshot of your demo site made on iPhone - the image is not rotated well.\n\nBy the way, do you process all jpeg extensions, including uppercase \"JPG\" and \"jpeg\". iPhone likes to save images with such extensions )\n. Your own example:\n\n. @kartik-v do you have an idea?. @kartik-v any new on this?. ",
    "InfoSpinto": "my solutions  \nin page \n```js\n    $(\"#file-1\").fileinput({\n        theme: 'fa',\n        uploadUrl: 'Upload.ashx', // you must set a valid URL here else you will get an error\n        allowedFileExtensions: ['jpg', 'png', 'gif'],\n        overwriteInitial: false,\n        maxFileSize: 1000,\n        maxFilesNum: 10,\n        //allowedFileTypes: ['image', 'video', 'flash'],\n        slugCallback: function (filename) {\n            return filename.replace('(', '').replace(']', '');\n        }\n    }).on('fileuploaded', function (e, data) {\n        console.log(data.response.numero);\n    });\nin Handler\nclArchivo archivo=new clArchivo();\n            foreach (string s in context.Request.Files)\n            {\n                HttpPostedFile file = context.Request.Files[s];\n                string fileName = file.FileName;\n                string fileExtension = file.ContentType;\n                archivo = new clArchivo(HttpContext.Current.Request, HttpContext.Current, file);\n        }\n        //  database record update logic here  ()\n        var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();\n        string json = serializer.Serialize(new { numero = archivo.id.ToString()});\n        context.Response.Write(json);\n        // context.Response.Write(archivo.id.ToString());\n    }\n    catch (Exception ac)\n    {\n        var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();\n        string jsonError = serializer.Serialize(new { error = \"Error al subir archivos\" });\n        context.Response.Write(jsonError);\n    }\n\n```\ngrettings.. ",
    "archieDeveloper": "Yes, the fix does not lead to a single behavior in different browsers, but 2 call change events are better than 0 calls.\nPlease accept this correction so far, or you can figure out how to make the behavior in all browsers the same.. how do I determine this \"after\"? in this and the problem, I needed a\nchange event, but the files do exist and the value changes to a new one,\nonly the event does not happen. Thank you for attention.. in the example http://jsfiddle.net/kghd1ro3/8/, the change event does not occur when dragging a file using\ndrag and drop in firefox. . @kartik-v oh god, thanks!!! . ",
    "printempw": "Oh, I forgot to check pull requests. Thanks!. ",
    "AJavierSanchez": "oopss... excuse me. I thought I've loaded piexif.js. But. shouldn't this option defaults to false as it depends on an extra script?. Once again, thank you, excuse me and congratulations on a great, great job!!. Hi, the problem remains although I put the autoOrientImage to false.. Here's the example. Just add an image and check the console. \nhttps://jsfiddle.net/thejavo/29586z7d/13/. Of course if I load the piexif.js file, the problem disappears, but I don't need it.. pleased to help!. sorry, I misunderstood the manual.\n\n. ",
    "hebriels": "Same problem. When adding a .pdf file. Yes Thanks!. ",
    "nadiacq": "Same problem :(. ",
    "brunomcuesta": "Hello! I have the same error here. Using Bootstrap 4.1.3, JQuery 3.3.1 and Bootstrap-File-Input 4.5.0:\nMy JS:\n<!-- Bootstrap File Upload plugin JavaScript-->\n<script src=\"{% static 'bootstrap/site/docs/4.1/assets/js/vendor/popper.min.js' %}\"></script>\n<script src=\"{% static 'bootstrap-fileinput/js/fileinput.min.js' %}\"></script>\n<script src=\"{% static 'bootstrap-fileinput/js/locales/pt-BR.js' %}\"></script>\n<script src=\"{% static 'bootstrap-fileinput/themes/fa/theme.min.js' %}\"></script>\n<script type=\"text/javascript\" language=\"javascript\">\n$(document).ready(function() {\n    $(\"#fileupload\").fileinput({\n        language: \"pt-BR\",\n        autoOrientImage: false,\n     });\n});\n</script>\nMy HTML:\n<div class=\"form-group col-md-12\">\n    <label class=\"control-label\">Selecione o arquivo:</label>\n         <div class=\"file-loading\">\n             <input id=\"fileupload\" name=\"file[]\" type=\"file\" multiple>\n        </div>\n</div>\nAnd the icons do not appear on the edge of the window:\nhttps://imgur.com/a/sckwtZi\nhttps://imgur.com/a/TLv8pxJ\nEDIT:\nI put the import of piexif.min.js and the error stopped when page is loaded, but appears on upload a file. The theme that worked was the \"fas\".\n```\n\n$(\"#inpupfile\").fileinput({\n        language: \"pt-BR\",\n        theme: \"fas\",\n        uploadUrl: \"\",\n        overwriteInitial: false,\n        autoReplace: false,\n        autoOrientImage: false,\n        allowedFileExtensions: [\"jpg\", \"png\", \"gif\"],\n        uploadIcon : \"\",\n        removeIcon : \"\",\n        browseIcon : \"\",\n        removeClass : 'btn btn-danger',\n        showUpload: false,\n        purifyHtml: true,\n        maxFileCount: 10,\n    });\n``\n. Thanks!. I updated the version to 4.5.1 using Bower and the error persists after selecting an image to upload.. Hello!\nI havemultiple` attribute in form. The upload was working, it suddenly stopped working when I updated the plugin version.. I made several tests and the plugin does not accept send multiple files adding file by file to upload. Uploading multiple files is only done when they are added with the ctrl key pressed. I tried with ajax and without ajax. I want to send the files together with the form, synchronously.\nWith Ajax:\n```\n// Ajax upload have this url:\nurl: '{% url \"publication:publish\" %}',\n// FileInput have this configuration with ajax method in the server:\nuploadUrl: '{% url \"publication:publish\" %}',\nuploadAsync: false,\nautoReplace: false,\noverwriteInitial: false,\n```\nWithout Ajax:\n```\n// Action form html with url without ajax method in the server\n\n\n// FileInput have this configuration without ajax method in the server:\nuploadUrl: '{% url \"publication:new_publication\" %}',\nuploadAsync: false,\nautoReplace: false,\noverwriteInitial: false,\n```\nAs I said before sending multiple files is only done by pressing the ctrl key and adding all at once. There is a problem here.. ",
    "jonasva": "same here, error appears when selecting a new image. . Ok thx, are you going to include it in the sass branch as well? (I'm using that one) . ",
    "newscloud": "Using v4.5.2 \nAlso seeing:\n bootstrap-fileinput: \"photo-attachment_1\": Error loading the piexif.js library.\npiexif.js shows it is loaded in source on the page from your plugin\n= FileInput::widget([\n    'model' = $model,\n    'attribute' => 'attachment_1[]',\n    'options' => ['multiple' => true,\n    'autoOrientImage'=>false]\n  ]); ?>\n.",
    "jhonhenrybernal": "The first example worked for me. ",
    "hardo123": "\n. \n. ",
    "tholag": "Thanks and sorry for getting the Repo wrong... so for anyone who faces the same problem:\nIt seems composer downloads a cached/older source of vendor/yii2-widget-fileinput/src/FileInput.php when upgrading to package version 1.0.7.\n\"Fix #140: Correct trait usage\" seems not to be included (yet) in \"https://github.com/kartik-v/yii2-widget-fileinput.git\".\nI cleared and checked the composer cache, but the file still contained the line removed in this fix:\nclass FileInput extends InputWidget\n{\n    use TranslationTrait; \n    ...\nI downloaded from github and replaced manually, that's it. . ",
    "abude": "Hello @kartik-v \nThe issue is still there.\nUsing composer on install or update doesn't solve the issue at all.\nThanks to @tholag and his last comment, i've copied manually from git directly, but this is not an ok solution for a product release purpose.\nDo you have any stable solution for this? I'm sorry to say because i know what it means but this kind of fatal error needs to be released within a version to not break any websites using it, right?\nKind regards!. @kartik-v Thanks for the answer. :)\nActually i don't think it's a composer issue, composer will only bring the last release you have made on the repo, which doesn't include that Fix #140 if you look in your releases you will see that this fix was after the last release.\nAs for components from you used within the project:\n\n\n\"kartik-v/yii2-widget-fileinput\": \"^1.0\",\n\n\n\"kartik-v/yii2-widget-select2\": \"^2.1\",\n\n\n\"kartik-v/yii2-mpdf\": \"^1.0\",\n\n\n\"kartik-v/yii2-datecontrol\": \"^1.9\",\n\n\n\"kartik-v/yii2-widget-datepicker\": \"^1.4\",\n\n\nNothing outdated, right ?\nKind regards!. As un update for anyone that will be looking for solution on that matter:\n@kartik-v has released a new release yesterday and this issue has been solved within Fix #140 included in that release: https://github.com/kartik-v/yii2-widget-fileinput/releases/tag/v1.0.8\nThanks @kartik-v ! . ",
    "tebazil": "Note: Had this problem with kartik-v/yii2-widget-colorinput . Updating to 1.0.5 did help. . ",
    "alpastar": "// remove uploaded files ::   not-smart but working \n//-------------------------------------------------------------------------------------\n$input_lc.on('fileunlock', function(event, filestack, extraData) {\n// triggered when the upload process is completed (successfully or with error). \n // The entire widget is unlocked (enabled) and reverts to initial state. \n// filestack: the array of selected file objects.\n // uploadExtraData: the uploadExtraData settings for the plugin (will return an empty object if not set).\n//-------------------------------------------------------------------------------------\n   // var fstack = filestack.filter(function(n){ return n != undefined });\n   // console.log('fileunlock - ' + fstack.length);\n//  remove uploaded file (upload \uc131\uacf5 \ud30c\uc77c\uc744  remove)\n    var o_stack = $(this).fileinput('getFileStack') ;         //  file-uploaded is excluded(upload \uc131\uacf5 \ud30c\uc77c\uc740 \uc81c\uc678\ub41c\ub2e4)\n    $input_lc.fileinput('destroy').fileinput(go_opt_lc);     // re-create (\uc7ac \uc0dd\uc131)\n    $input_lc.fileinput('readFiles', o_stack);                    //  re-read (\ub2e4\uc2dc \uc77d\uc5b4\ub4e4\uc778\ub2e4)\n//=========================================\n// file-upload \uc2dc\uc758 event-sequence \n// filedisabled\n// filelock \n// filebatchpreupload\n// filepreajax\n// filepreupload\n// filepreajax\n// filepreupload\n// fileuploaderror\n// fileenabled\n// fileunlock \n// filebatchuploadcomplete\n. yes,  i'm struggling  between two-ways \none  is  having  one input-zone ,\nbut here,   pre-existing server files, uploaded files, un-uploaded-files exists mingled , \nso i am afraid that  end-users might-be confused(or not clear especially in my case)\nyour plugin have many option, and method for this way, \nso it is somewhat easy to implement this way. \n.\nsecond is  to have  two separated input-zone , \nthis seems  somewhat clear to end-users( i think).\nfile in server , file in local , \n.\nso,  as far as  i concerned , i prefer second way \nbut destroy,reset,clear, showUploadedThumbs.. all is not relevant to this way \nany way ,  thanks for your comment...\nremaining problem is insert into pre-existing-initialPreview from client-side.\ni will try..\n. success!!\n//////  append uploaded file into the another file-input-zone(which has  preexisting preview   /////////////////\n// $input_sv.fileinput('getFileStack') => [], empty-array \n   // fileStack means file-list which is selected(from local), have no-relation with server file \n   // so uploaded file is removed from file-stack ??\no_preview = $input_sv.fileinput('getPreview');           // current-preview\n\n/\n    // be careful that prefix:'initialPreview'  is  not existing. \n   {content: Array(2), config: Array(2), tags: Array(0)}\n     config: Array(2)\n     0: {caption: \"1\", size: 0, width: \"120px\", url: \"\", key: 1}\n     1: {previewAsData: false, caption: \"2\", size: 0, width: \"120px\", url: \"\", \u2026}\n     length: 2\n     proto: Array(0)\n     content: Array(2)\n     0: \".........img/fake-male.png\"\n     1: \"\"\n     length: 2\n     proto: Array(0)\n     tags: []\n  /\n// to overcome prefix difference \n   var o_preview_curr = {} ;\n   o_preview_curr.initialPreview        = o_preview.content ;\n   o_preview_curr.initialPreviewConfig  = o_preview.config  ;\n// append uploaded-file(s) to current preview-list \n  // we are using  ajax-async  method , so uploaded event  put/append   each response \n  // to go_input.a_rp  which is array \n   for (var k=0; k< go_input.a_rp.length ; k++){\n     o_preview_curr.initialPreview.push(go_input.a_rp[k].initialPreview);\n     o_preview_curr.initialPreviewConfig.push(go_input.a_rp[k].initialPreviewConfig);\n   }\n// re-make config object \n   var o_opt_new = $.extend(true,{},go_opt_sv,o_preview_curr);\n// re-create \n   $input_sv.fileinput('destroy').fileinput(o_opt_new);     // recreate \n. \n/*\n// css/script included in html-page\n//  jquery ,jqurty-ui,bootstrap4.... \n\n\n\n//  link is not showsup in github issue, so as a work-around prefix // \n/link  href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/4.5.0/css/fileinput.min.css\"  /\n\n\n optionally if you need a theme like font awesome theme you can include it as mentioned below \n\n*/\n\n. with theme:\"fas\" ,  all button becomes empty !\n\n. i mean,  included fontawesome-5 , but not working !\nin my page,   i am using jqgrid which also uses  fontawesome-5 , which works good !!\n/link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\" integrity=\"sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU\" crossorigin=\"anonymous\"\n. solved , thanks!\nthe problem was .../4.5.0/themes/fa/theme.js.\nit should be     .../ 4.5.0/themes/fas/theme.js.\n.\n\n\n . ",
    "Wolf-professor": "I am using yii2 to upload a video. It is normal to upload the video when I add it. After saving, I can't display it properly when I click to modify the video. But the video link is correct.. So I used the browser tool to view and found that adding the src in the source tag to the upper level video can display it normally. So I will change the source code, is there a better solution, or is it because I am not using the right method?. 'initialPreviewFileType' => 'video',\n            'previewFileType' => 'video',\n            'initialPreview' => isset($p1) ? $p1 : '',\n            'initialPreviewConfig' => isset($p2) ? $p2 : '',\n            'initialPreviewAsData' => true,\nI have configured these parameters, the label in the browser is also the video tag, but it is a black display video invalid source, the src in the source tag can be displayed in the parent video tag.. Thank you very much. The problem has been solved.. ",
    "andy65007": "you can set  HTML5 data attribute 'data-upload-extra-data' directlly. Solved! this code works fine: data-upload-extra-data='{\"Type\":\"ProductAvatar\"}'. I set minFileCount to 1 means the server only need one file, but when user in editing mode, user can change the file to another one. It seems the logic in here is a little bit not clear(user can see delete button, but he/she can not click it), is it better to put checking min-file-Count action to ... when user submit the form? or just show a error message in drop area? because user can not change the file when  minFileCount is set to 1.. ",
    "ishosys": "I figured it out\nJust add autocomplete=\"off\"\nSorry for the late comment.\n. Sorry, there was an error in my code.. ",
    "rdev24": "I tested the same thing with a similar plugin, Fine Uploader and it had the same result so I can see now that it's a browser issue; however I believe there is something in your code that can prevent this issue from occurring.\nWhen I attempt the procedure using fileinput with Firefox, the drag and drop is somehow canceled but isn't when I use Fine Uploader with Firefox.. ",
    "rajanrawal": "@kartik-v thank you for prompt attention. However the core issue is that as said, whenever we delete any image from the selected images, it does not post any of the post data for newly selected image files. \nAssumption you're ending record. \nUse Case 1:  You select images, all the selected images are perfect and you submit form. It works just fine as expected\nUse Case 2: You select images, and some images is selected by mistake and you need you delete that image (note I dont do ajax upload, it is just simple form submission). As you delete even one image from the latest selected one. It does not set any post data ($_FILES Param for PHP) for this. Again this happens only when you delete any images after selection. \nI will also share one video very soon here as a video link of this behavior here for your reference. I would appreciate if you can look into this bug.  . @kartik-v Kindly refere this video: https://youtu.be/cGvaDfbx-7U\nMay be you'll get batter idea. ",
    "edwh": "Thanks.  It would be useful if there was any way to know on the client \nthat this might occur, because then I could avoid resizing.  That's not \nideal, because obvious resizing is good for bandwidth, but it would \navoid having images that look bad.\n------ Original Message ------\nFrom: \"Kartik Visweswaran\" notifications@github.com\nTo: \"kartik-v/bootstrap-fileinput\" \nbootstrap-fileinput@noreply.github.com\nCc: \"Edward Hibbert\" edward@ehibbert.org.uk; \"Author\" \nauthor@noreply.github.com\nSent: 06/12/2018 11:03:17\nSubject: Re: [kartik-v/bootstrap-fileinput] Black border when resizing \non iPhone Safari (#1337)\n\nThis is due to an iOS restriction / bug / behavior where it subsamples \nimages over 2Megapixels. According to this link \nhttps://developer.apple.com/library/content/documentation/AppleApplications/Reference/SafariWebContent/CreatingContentforSafarioniPhone/CreatingContentforSafarioniPhone.html#//apple_ref/doc/uid/TP40006482-SW15, \nJPEG files over 2M pixels will be subsampled.\nWill check later on this when I get time.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/kartik-v/bootstrap-fileinput/issues/1337#issuecomment-444834346, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/AADdeMaD1qV-cDyQDMsho2if21qe78ZDks5u2Pl1gaJpZM4ZEcX1.\n. Thanks for this.  Do you have any advice for how to detect when to do \nthis vs the usual code?\n\n------ Original Message ------\nFrom: \"fstrahberger\" notifications@github.com\nTo: \"kartik-v/bootstrap-fileinput\" \nbootstrap-fileinput@noreply.github.com\nCc: \"Edward Hibbert\" edward@ehibbert.org.uk; \"Author\" \nauthor@noreply.github.com\nSent: 20/12/2018 12:12:45\nSubject: Re: [kartik-v/bootstrap-fileinput] Black border when resizing \non iPhone Safari (#1337)\n\nHello Edward,\nhere is a solution that helped me solve this problem:\nuse https://github.com/stomita/ios-imagefile-megapixel to resize the \nimagedisable resize in fileinput config\n$(\"#upload_files\").fileinput({\n        language: 'de',\n        previewFileType: \"image\",\n        maxFileCount: 20,\n        autoOrientImage: true,\n        // maxImageHeight: 1200,\n        // maxImageWidth: 1200,\n        // resizePreference: 'width',\n        // resizeImage: true,\n        browseClass: \"btn btn-success\",\nresize the images in fileimagesloaded event (get files from stack, \nclear stack , refill stack with modified images)\n$('#upload_files').on('fileimagesloaded ', function(event) {\n    var myFiles = $('#upload_files').fileinput('getFileStack');\n    $('#upload_files').fileinput('clearStack');\nvar imgList = [];\nfor (i = 0; i < myFiles.length; i++) {\n   let item = {\n        mpimg: new MegaPixImage(myFiles[i]),\n        file: myFiles[i]\n    };\n    imgList.push(item);\n}\n\nimgList.forEach(function(item) {\n     var c = document.createElement(\"canvas\");\n     item.mpimg.render(c, { maxWidth: 1200, maxHeight: 1200 }, function(i){\n         c.toBlob(function(blob){\n             blob.lastModifiedDate = item.file.lastModifiedDate;\n             blob.name = item.file.name;\n             blob.type = item.file.type;\n             $('#upload_files').fileinput('addToStack', blob);\n         }, item.file.type, 0.75);\n     });\n});\n\n});\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/kartik-v/bootstrap-fileinput/issues/1337#issuecomment-448977737, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/AADdeEH-kUtVXz8KzN2TFz1q-P-rKAlmks5u6369gaJpZM4ZEcX1.\n. \n",
    "fstrahberger": "Hello Edward,\nhere is a solution that helped me solve this problem:\n- use https://github.com/stomita/ios-imagefile-megapixel to resize the image\n- disable resize in fileinput config\n$(\"#upload_files\").fileinput({\n        language: 'de',\n        previewFileType: \"image\",\n        maxFileCount: 20,\n        autoOrientImage: true,\n        // maxImageHeight: 1200,\n        // maxImageWidth: 1200,\n        // resizePreference: 'width',\n        // resizeImage: true,\n        browseClass: \"btn btn-success\",\n- resize the images in fileimagesloaded event (get files from stack, clear stack , refill stack with modified images)\n```\n$('#upload_files').on('fileimagesloaded ', function(event) {\n    var myFiles = $('#upload_files').fileinput('getFileStack');\n    $('#upload_files').fileinput('clearStack');\nvar imgList = [];\nfor (i = 0; i < myFiles.length; i++) {\n   let item = {\n        mpimg: new MegaPixImage(myFiles[i]),\n        file: myFiles[i]\n    };\n    imgList.push(item);\n}\n\nimgList.forEach(function(item) {\n     var c = document.createElement(\"canvas\");\n     item.mpimg.render(c, { maxWidth: 1200, maxHeight: 1200 }, function(i){\n         c.toBlob(function(blob){\n             blob.lastModifiedDate = item.file.lastModifiedDate;\n             blob.name = item.file.name;\n             blob.type = item.file.type;\n             $('#upload_files').fileinput('addToStack', blob);\n         }, item.file.type, 0.75);\n     });\n});\n\n});\n```\n. ",
    "silentcossack": "I can confirm this bug.\nThis only happens when taking a photo on iPhone in portrait mode. Landscape photos are fine. I believe the code does not properly detect image orientation and resizes improper dimensions.. ",
    "karProgrammer": "How can I set the msgPlaceholder property in yii2 I set it inside 'options' and 'pluginOptions' but does not work. ",
    "DanielDanielDanielD": "\nI've found some way to do it, but it's missing the way to identify the file..\n\n`///////////////////////////////////////////////////////\nif ($(\"#kv-explorer\").fileinput({ allowedFileTypes: [\"image\"] }) === true && $(\"#kv-explorer\").fileinput({ allowedFileTypes: [\"video\"] }) === true) {\n    alert(\"You can not upload photos and videos together\");\n    $(\"#kv-explorer\").fileinput(\"clear\");\n}\nelse {\n    alert(\"Excellent\");\n}`. Happy to share with you my solution of doing it right..\n\n$('#kv-explorer').on('filebatchselected', function (event, files) {\nvar compareImagesVideos = \"\";\nfor (i in files) {\ncompareImagesVideos += files[i].type;\n}\nif ((compareImagesVideos.indexOf(\"image\") > -1) && (compareImagesVideos.indexOf(\"video\") > -1)) {\nalert(\"Together\");\n}\nelse {\nalert(\"Not Together\");\n}\n});. Thanks for helping, what you suggest still allows me to upload a picture and a video together, which I did not want. My idea was to create file input like the file input in Twitter (you can upload there up to 4 pictures or one video, and when you try to upload them together you get error). Fixing video count..\n`$('#kv-explorer').on('filebatchselected', function (event, files) {\n    var compareImagesVideos = \"\";\nfor (i in files) {\n    compareImagesVideos += files[i].type;\n}\nvar temp = compareImagesVideos;\nvar count = (temp.match(/video/g) || []).length;\n\nif (count >= 2) {\n    $('#kv-explorer').fileinput('reset');\n}\nelse {\n    if ((compareImagesVideos.indexOf(\"image\") > -1) && (compareImagesVideos.indexOf(\"video\") > -1)) {\n        $('#kv-explorer').fileinput('reset');\n    }\n    else {\n        return 0;\n    }\n}\n\n});`. ",
    "ryy635387058": "Thank you very much. ",
    "27ban": "update. ",
    "luohuanlh": "I have resolved this issue.use cropperjs before upload.\n\n. ",
    "samuelexyz": "Same error for me . ",
    "DarthSonic": "Found the problem: \"refresh\" Method was changed to not be able to set initialPreview and defaultPreviewContent in newer versions.. ",
    "agfranca": "Modify the entries for bootstap 3.4.1. https://jsfiddle.net/AlexandreFranca/uqxgyamf/8/\nEnviado do Emailhttps://go.microsoft.com/fwlink/?LinkId=550986 para Windows 10\n\nDe: Kartik Visweswaran notifications@github.com\nEnviado: Friday, March 15, 2019 12:54:55 AM\nPara: kartik-v/bootstrap-fileinput\nCc: agfranca; Author\nAssunto: Re: [kartik-v/bootstrap-fileinput] View Details does not work on bootstrap 3x, adds, deletes, opens thumbnail and does not view detail. (#1366)\nCannot reproduce your issue? Can you share a JS Fiddle to understand what you are doing and where it maybe going wrong for you?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fkartik-v%2Fbootstrap-fileinput%2Fissues%2F1366%23issuecomment-473149829&data=02%7C01%7C%7C6e48361ea3824787071f08d6a8f9fcce%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636882188968021877&sdata=uRracV%2BED9%2BMOPSn%2FnIl3omJIxKJH%2FLrl8ZUGHKROl4%3D&reserved=0, or mute the threadhttps://eur02.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAPAuW2IQAbMsUXpffZP8dJWNCzT3djrTks5vWxmPgaJpZM4b1DIt&data=02%7C01%7C%7C6e48361ea3824787071f08d6a8f9fcce%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C636882188968031888&sdata=jsntKXKmjWfZtPQEljWFjS2gJdc9sOq67CqpXNwXTIM%3D&reserved=0.\n. ",
    "stereo720712": "Excuse me , I do not know where  to set it in file-input , can you teach me?\nOr Is there any example ?\nthank you very much .\nDoes it like this:\najaxSettings:{\n             timeout:600000, \n           }. "
}